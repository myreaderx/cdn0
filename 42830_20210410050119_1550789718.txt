{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-04-10 12:59:17","updatedTime":"2021-04-10 12:59:17","title":"Emacs 入门指南：Why & How","link":"https://liujiacai.net/blog/2020/11/25/why-emacs/","description":"<p>提到 Emacs，每个程序员应该或多或少听过其大名，毕竟 Emacs 已经有将近四十多年的<a href=\"https://www.zdnet.com/article/the-10-oldest-significant-open-source-programs/\">悠久历史</a>。不过由于 Emacs “入道”门槛较高，导致很多初学者还没领略其精髓就弃之而去。在“熟练”使用 Emacs 之前，我也被其虐的体无完肤，因此在使用 Emacs <a href=\"https://github.com/jiacai2050/dotfiles/commit/43e9b4a314cd6b5607b675edac7f5e8a3b29a80b\">四年后</a>，觉得可以把个人经验分享出来，供有兴趣使用 Emacs 的读者参考。</p>\n<p>本文将分两部分来介绍如何入门 Emacs，</p>\n<ul>\n<li>\n<p>第一部分介绍核心理念，很多初学者在简单尝试 Emacs 之后就放弃的原因是没了解其设计理念。Emacs 是如此独特，以至于从其他编辑器转过来时有很多不适。</p>\n<p>通过了解其理念，读者可以判断 Emacs 是否符合自己的品味，是否值得花精力去掌握它</p>\n</li>\n<li>\n<p>第二部分会分享个人使用 Emacs 的过程，结合这个过程对初学者给出具体建议，之后会介绍日常使用的扩展。很多用户选择 Emacs 就是因为某个插件的某个功能，即使现在，我时常也会因为发现某些高级用法而感叹 Emacs 的威力。</p>\n</li>\n</ul>\n<p>虽然本文会用 ELisp 来举例，但读者并不需要学习 ELisp，具备基本编程技能即可。其次本文以现在较为流行的 VSCode 编辑器来对比 Emacs 的特点，换做其他编辑器也是成立的。</p>\n<blockquote>\n<p>Emacs is Emacs. VSCode/Vim/Sublime&hellip; is yet just another editor.  &mdash;&ndash; <a href=\"https://news.ycombinator.com/item?id=18400204\">出处</a></p>\n</blockquote>\n<p>\n  <figure>\n    <img src=\"https://img.alicdn.com/imgextra/i4/581166664/O1CN0156nQHc1z6A1VldH2x_!!581166664.png\" alt=\"常用编辑器的学习曲线\">\n    <figcaption><center>常用编辑器的学习曲线</center></figcaption>\n  </figure>\n\n</p>\n<h2 id=\"核心理念\">核心理念</h2>\n<p>GNU Emacs <a href=\"https://www.gnu.org/software/emacs/\">官方网站</a>是这么介绍的：</p>\n<blockquote>\n<p>An extensible, customizable, free/libre text editor — and more.</p>\n</blockquote>\n<p>前一部还算直接，“可扩展、可定制、<a href=\"https://www.gnu.org/philosophy/free-sw.html\">自由的</a>文本编辑器”，至于后面的 more 部分，则仁者见仁，智者见智。坊间一度传闻，Emacs 是<a href=\"https://wiki.c2.com/?EmacsStandsFor\">伪装成编辑器的操作系统</a>。这一节就来揭开 Emacs 的神秘面纱。</p>\n<h3 id=\"文本编辑\">文本编辑</h3>\n<p>不论 Emacs 的追捧者再怎么神化它，首先 Emacs 是一个文本编辑器，然后才是其他。与 VSCode 不同的是，Emacs 是为纯键盘操作而设计的，与之类似的编辑器只有 Vi。纯键盘操作无疑比鼠标点击更高效。不过对于初学者来说，使用鼠标点击菜单栏中的功能可能会更方便些。</p>\n<p>\n  <figure>\n    <img src=\"https://www.gnu.org/software/emacs/images/teaser.png\" alt=\"Emacs 图形界面\">\n    <figcaption><center>Emacs 图形界面</center></figcaption>\n  </figure>\n\n</p>\n<p>单就文本编辑而言，Emacs 就提供了很多贴心的功能，这里列举两处：</p>\n<h4 id=\"备份\">备份</h4>\n<p>作为一名成熟的程序员，每时每刻都需要有备份的意识，毕竟错误在所难免。在 Emacs 中主要提供两种备份方式，这里称为<a href=\"https://www.gnu.org/software/emacs/manual/html_node/elisp/Backup-Files.html\">静态备份</a>与<a href=\"https://www.gnu.org/software/emacs/manual/html_node/elisp/Auto_002dSaving.html#Auto_002dSaving\">自动备份</a>（auto saving）。</p>\n<ul>\n<li>静态备份发生在第一次打开文件时，备份的文件名结尾有 <code>~</code> 标示；而且支持<a href=\"https://www.gnu.org/software/emacs/manual/html_node/elisp/Numbered-Backups.html#Numbered-Backups\">多版本</a>备份</li>\n<li>自动备份顾名思义，周期性保存当前正在编辑的文件，文件名头尾有 <code>#</code> 标示。在保存时，自动备份的文件会被删掉，而当因意外原因（如死机）导致 Emacs 崩溃时，文件则会保留，此时可通过 <a href=\"https://www.gnu.org/software/emacs/manual/html_node/emacs/Recover.html\">recover-this-file</a> 命令来恢复。</li>\n</ul>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code><span class=\"lnt\"> 1\n</span><span class=\"lnt\"> 2\n</span><span class=\"lnt\"> 3\n</span><span class=\"lnt\"> 4\n</span><span class=\"lnt\"> 5\n</span><span class=\"lnt\"> 6\n</span><span class=\"lnt\"> 7\n</span><span class=\"lnt\"> 8\n</span><span class=\"lnt\"> 9\n</span><span class=\"lnt\">10\n</span><span class=\"lnt\">11\n</span><span class=\"lnt\">12\n</span><span class=\"lnt\">13\n</span><span class=\"lnt\">14\n</span><span class=\"lnt\">15\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-fallback\" data-lang=\"fallback\">静态备份的文件\n!Users!liujiacai!.emacs.d!README.org.~1~\n!Users!liujiacai!.emacs.d!README.org.~2~\n!Users!liujiacai!.emacs.d!customizations!editing.el.~1~*\n!Users!liujiacai!.emacs.d!customizations!editing.el.~44~*\n!Users!liujiacai!.emacs.d!customizations!editing.el.~45~*\n!Users!liujiacai!.emacs.d!customizations!editing.el.~46~*\n!Users!liujiacai!.emacs.d!customizations!editing.el.~47~*\n!Users!liujiacai!.emacs.d!customizations!editing.el.~48~*\n\n自动备份的文件\n#!Users!liujiacai!.emacs.d!customizations!misc.org#\n#!Users!liujiacai!.emacs.d!customizations!navigation.el#*\n#!Users!liujiacai!.emacs.d!elpa!lsp-java-20201105.1758!lsp-java.el#\n#!Users!liujiacai!.emacs.d!init.el#\n</code></pre></td></tr></table>\n</div>\n</div><p>上面是我电脑中部分的备份文件，得益于这两个功能，好多次把我从崩溃的边缘救回来。</p>\n<h4 id=\"undoredo\">Undo/Redo</h4>\n<p>在编辑文件时，<a href=\"https://www.gnu.org/software/emacs/manual/html_node/emacs/Undo.html\">撤销</a>（Undo）和恢复（Redo）是很重要的功能，传统编辑器这两个操作都是线性的，而在 Emacs 中，则是树状的，这里通过一组文本编辑时的状态图来说明这两者的区别。</p>\n<ul>\n<li>依次输入 a b c 三个字符，进入到下图中的 current 状态</li>\n</ul>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code><span class=\"lnt\"> 1\n</span><span class=\"lnt\"> 2\n</span><span class=\"lnt\"> 3\n</span><span class=\"lnt\"> 4\n</span><span class=\"lnt\"> 5\n</span><span class=\"lnt\"> 6\n</span><span class=\"lnt\"> 7\n</span><span class=\"lnt\"> 8\n</span><span class=\"lnt\"> 9\n</span><span class=\"lnt\">10\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-fallback\" data-lang=\"fallback\">;;                                o  (initial buffer state)\n;;                                |\n;;                                |\n;;                                o  (first edit)\n;;                                |\n;;                                |\n;;                                o  (second edit)\n;;                                |\n;;                                |\n;;                                x  (current buffer state)\n</code></pre></td></tr></table>\n</div>\n</div><ul>\n<li>此时，撤销两步，回到 <code>first edit</code> 状态（即只输入了字符 <code>a</code>），传统编辑器的此时的状态为</li>\n</ul>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code><span class=\"lnt\"> 1\n</span><span class=\"lnt\"> 2\n</span><span class=\"lnt\"> 3\n</span><span class=\"lnt\"> 4\n</span><span class=\"lnt\"> 5\n</span><span class=\"lnt\"> 6\n</span><span class=\"lnt\"> 7\n</span><span class=\"lnt\"> 8\n</span><span class=\"lnt\"> 9\n</span><span class=\"lnt\">10\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-fallback\" data-lang=\"fallback\">;;                                o  (initial buffer state)\n;;                                |\n;;                                |\n;;                                x  (current buffer state)\n;;                                |\n;;                                |\n;;                                o\n;;                                |\n;;                                |\n;;                                o\n</code></pre></td></tr></table>\n</div>\n</div><p>而 Emacs 则不然，其状态为</p>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code><span class=\"lnt\"> 1\n</span><span class=\"lnt\"> 2\n</span><span class=\"lnt\"> 3\n</span><span class=\"lnt\"> 4\n</span><span class=\"lnt\"> 5\n</span><span class=\"lnt\"> 6\n</span><span class=\"lnt\"> 7\n</span><span class=\"lnt\"> 8\n</span><span class=\"lnt\"> 9\n</span><span class=\"lnt\">10\n</span><span class=\"lnt\">11\n</span><span class=\"lnt\">12\n</span><span class=\"lnt\">13\n</span><span class=\"lnt\">14\n</span><span class=\"lnt\">15\n</span><span class=\"lnt\">16\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-fallback\" data-lang=\"fallback\">;;                                o  (initial buffer state)\n;;                                |\n;;                                |\n;;                                o  (first edit)\n;;                                |\n;;                                |\n;;                                o  (second edit)\n;;                                |\n;;                                |\n;;                                x  (buffer state before undo)\n;;                                |\n;;                                |\n;;                                o  (first undo)\n;;                                |\n;;                                |\n;;                                x  (second undo)\n</code></pre></td></tr></table>\n</div>\n</div><p>其状态是追加的，一次撤销意味着返回上次的状态，所以下面的状态图可能更合适些：</p>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code><span class=\"lnt\"> 1\n</span><span class=\"lnt\"> 2\n</span><span class=\"lnt\"> 3\n</span><span class=\"lnt\"> 4\n</span><span class=\"lnt\"> 5\n</span><span class=\"lnt\"> 6\n</span><span class=\"lnt\"> 7\n</span><span class=\"lnt\"> 8\n</span><span class=\"lnt\"> 9\n</span><span class=\"lnt\">10\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-fallback\" data-lang=\"fallback\">;;        (initial buffer state)  o\n;;                                |\n;;                                |\n;;                  (first edit)  o  x  (second undo)\n;;                                |  |\n;;                                |  |\n;;                 (second edit)  o  o  (first undo)\n;;                                | /\n;;                                |/\n;;                                o  (buffer state before undo)\n</code></pre></td></tr></table>\n</div>\n</div><ul>\n<li>此时，如果进行一次新的插入（比如字符 <code>d</code>），此时文本上的字符虽然都为 <code>a d</code>，但编辑器的状态图是不同的，如下所示：</li>\n</ul>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code><span class=\"lnt\"> 1\n</span><span class=\"lnt\"> 2\n</span><span class=\"lnt\"> 3\n</span><span class=\"lnt\"> 4\n</span><span class=\"lnt\"> 5\n</span><span class=\"lnt\"> 6\n</span><span class=\"lnt\"> 7\n</span><span class=\"lnt\"> 8\n</span><span class=\"lnt\"> 9\n</span><span class=\"lnt\">10\n</span><span class=\"lnt\">11\n</span><span class=\"lnt\">12\n</span><span class=\"lnt\">13\n</span><span class=\"lnt\">14\n</span><span class=\"lnt\">15\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-fallback\" data-lang=\"fallback\">;;            Undo/Redo:                      Emacs&#39; undo\n;;\n;;               o                                o\n;;               |                                |\n;;               |                                |\n;;               o                                o  o\n;;               .\\                               |  |\\\n;;               . \\                              |  | \\\n;;               .  x  (new edit)                 o  o  |\n;;   (discarded  .                                | /   |\n;;     branch)   .                                |/    |\n;;               .                                o     |\n;;                                                      |\n;;                                                      |\n;;                                                      x  (new edit)\n</code></pre></td></tr></table>\n</div>\n</div><ul>\n<li>此时，如果再进行两次撤销，传统编辑器返回到 initial 状态（无任何字符），而 Emacs 则回到 second 状态（有 <code>a b</code>两个字符）。</li>\n</ul>\n<p>初次接触 Emacs 中的撤销与恢复，十分容易让人迷惑，我时常也被这个搞得晕头转向，不过幸好有 <a href=\"https://www.emacswiki.org/emacs/UndoTree\">Undo Tree</a> 这个插件来可视化撤销状态，上面的状态图就取自 UndoTree 代码中的注释，感谢其作者的贡献。</p>\n<h3 id=\"扩展定制\">扩展、定制</h3>\n<blockquote>\n<p>At its core is an interpreter for Emacs Lisp, a dialect of the Lisp programming language with extensions to support text editing.</p>\n</blockquote>\n<p>上面一小节介绍了文本编辑中两个非常实用的基本功能，其实这只是冰山一角，Emacs 可扩展、可定制的特性营造了一个富有创造力的社区，拥有无数功能强大的插件。也许读者会疑问，VSCode 也有丰富的<a href=\"https://marketplace.visualstudio.com/vscode\">插件市场</a>，那 Emacs 与它们有什么不同呢？这与 Emacs <a href=\"https://www.gnu.org/software/emacs/emacs-paper.html#SEC14\">设计架构</a>有关。</p>\n<p>Emacs 本身可以看作是一个虚拟机（Lisp Machine），核心是一个用 C 实现的 ELisp 解释器（interpreter）。除了与操作系统交互的部分使用 C 语言实现外，其余部分均由 ELisp 实现，由核心的 ELisp 解释器解析执行。</p>\n<p>在 Emacs 中的所有操作，相当于在解释器中进行函数调用。比如字符输入会调用 <a href=\"https://www.gnu.org/software/emacs/manual/html_node/elisp/Commands-for-Insertion.html\">self-insert-command</a> 函数。这意味着用户自己定义的代码与 Emacs 的源码（ELisp 部分）是平等的，比如 Emacs 源码里面定义了 <code>foobar</code> 这么一个变量，那么用户自己编写的函数可以直接修改它。</p>\n<p>如果读者对 Lisp 不熟悉，可以这么类比，打开 Emacs 的界面对应着在终端输入 <code>python</code> 进入的交互式 REPL，键盘输入、鼠标点击均对应一个个函数调用。</p>\n<p>基于核心的 ELisp 解释器，对 Emacs 的扩展变得十分简单（熟悉 ELisp 的前提下），比如在 <code>init.el</code> 中定义下面几行代码即可在 Emacs 中打开浏览器，对指定关键词进行 Google 搜索。</p>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code><span class=\"lnt\">1\n</span><span class=\"lnt\">2\n</span><span class=\"lnt\">3\n</span><span class=\"lnt\">4\n</span><span class=\"lnt\">5\n</span><span class=\"lnt\">6\n</span><span class=\"lnt\">7\n</span><span class=\"lnt\">8\n</span><span class=\"lnt\">9\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-lisp\" data-lang=\"lisp\"><span class=\"p\">(</span><span class=\"nb\">defun</span> <span class=\"nv\">my/google-search</span> <span class=\"p\">()</span>\n  <span class=\"s\">&#34;Googles a query or region if any.&#34;</span>\n  <span class=\"p\">(</span><span class=\"nv\">interactive</span><span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"nv\">browse-url</span>\n   <span class=\"p\">(</span><span class=\"nv\">concat</span>\n    <span class=\"s\">&#34;http://www.google.com/search?ie=utf-8&amp;oe=utf-8&amp;q=&#34;</span>\n    <span class=\"p\">(</span><span class=\"k\">if</span> <span class=\"nv\">mark-active</span>\n        <span class=\"p\">(</span><span class=\"nv\">buffer-substring</span> <span class=\"p\">(</span><span class=\"nv\">region-beginning</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nv\">region-end</span><span class=\"p\">))</span>\n      <span class=\"p\">(</span><span class=\"nv\">read-string</span> <span class=\"s\">&#34;Google: &#34;</span><span class=\"p\">)))))</span>\n</code></pre></td></tr></table>\n</div>\n</div><p>而 VSCode，即使是个 Hello World 级别的扩展，步骤也复杂的多，可参考：</p>\n<ul>\n<li><a href=\"https://code.visualstudio.com/api/get-started/your-first-extension\">https://code.visualstudio.com/api/get-started/your-first-extension</a></li>\n</ul>\n<p>基于 Emacs 功能完备的 ELisp 解释器，社区开发出了各式各样的插件，让一切都尽可能在 Emacs 中完成。比如<a href=\"https://www.emacswiki.org/emacs/MusicPlayers\">听音乐</a>、<a href=\"https://www.emacswiki.org/emacs/CategoryGames\">玩游戏</a>、<a href=\"https://depp.brause.cc/nov.el/\">看 EPUB 电子书</a>、<a href=\"https://github.com/zevlg/telega.el\">聊 Telegram</a>，甚至<a href=\"https://github.com/manateelazycat/emacs-application-framework\">任何应用</a>都能运行在 Emacs 里！</p>\n<blockquote>\n<p>Emacs, &ldquo;a great operating system, lacking only a decent editor&rdquo;</p>\n</blockquote>\n<p>\n  <figure>\n    <img src=\"https://img.alicdn.com/imgextra/i2/581166664/O1CN01ePMFmU1z6A1W5J6a4_!!581166664.png\" alt=\"在 Emacs 听网易云音乐\">\n    <figcaption><center>在 Emacs 听网易云音乐</center></figcaption>\n  </figure>\n\n\n\n  <figure>\n    <img src=\"https://img.alicdn.com/imgextra/i2/581166664/O1CN012SFAW41z6A1WeRU9M_!!581166664.png\" alt=\"在 Emacs 玩俄罗斯方块\">\n    <figcaption><center>在 Emacs 玩俄罗斯方块</center></figcaption>\n  </figure>\n\n\n\n  <figure>\n    <img src=\"https://img.alicdn.com/imgextra/i4/581166664/O1CN01hJslQh1z6A1VLFP7y_!!581166664.png\" alt=\"在 Emacs 阅读 EPUB 电子书\">\n    <figcaption><center>在 Emacs 阅读 EPUB 电子书</center></figcaption>\n  </figure>\n\n\n\n  <figure>\n    <img src=\"https://img.alicdn.com/imgextra/i4/581166664/O1CN01DWl21B1z6A1UNsI4U_!!581166664.jpg\" alt=\"在 Emacs 进行 Telegram 聊天\">\n    <figcaption><center>在 Emacs 进行 Telegram 聊天</center></figcaption>\n  </figure>\n\n\n\n  <figure>\n    <img src=\"https://img.alicdn.com/imgextra/i1/581166664/O1CN01vpjexS1z6A1PICqIh_!!581166664.gif\" alt=\"在 Emacs 使用 EAF 运行 aria2\">\n    <figcaption><center>在 Emacs 使用 EAF 运行 aria2</center></figcaption>\n  </figure>\n\n</p>\n<h3 id=\"自由\">自由</h3>\n<p>提到 Emacs，不得不提的人是 <a href=\"https://stallman.org/\">Richard Stallman</a>，江湖人称“教主”。早期的 Emacs 有很多版本，而现在 GNU Emacs 基本上已经统一江湖了。</p>\n<p>\n  <figure>\n    <img src=\"https://img.alicdn.com/imgextra/i2/581166664/O1CN01VH3Txp1z6A1WcQQ05_!!581166664.jpg\" alt=\"Richard Stallman\">\n    <figcaption><center>Richard Stallman</center></figcaption>\n  </figure>\n\n</p>\n<p>教主极力推崇自由软件，关于自由软件的定义，可以在 <a href=\"https://www.gnu.org/philosophy/free-sw.html\">GNU 官方网站</a> 上找到，这里不再赘述。读者需要明确的是，GNU 社区中的 free 代表但是自由，而非免费。</p>\n<p>自由软件毫无疑问极大促进了软件行业的发展，它让程序员有机会了解所用软件的实现机制，而 Emacs 作为教主早期的作品之一，毫无疑问继承这种思想。每一个操作都可以追根溯源，喜欢这种自由感觉。</p>\n<p>更多 Emacs Hackers 可参考：</p>\n<ul>\n<li><a href=\"http://ergoemacs.org/misc/famous_emacs_users.html\">Famous Emacs Users</a> by Xah Lee</li>\n<li><a href=\"http://ergoemacs.org/emacs/Matz_Ruby_how_emacs_changed_my_life.html\">Ruby Creator Matz on How Emacs Changed My Life</a> by Xah Lee</li>\n<li><a href=\"https://manateelazycat.github.io/emacs/2019/05/12/emacs-hackers.html\">Emacs黑客列表</a> by manateelazycat</li>\n<li><a href=\"http://wenshanren.org/?p=418\">Famous Emacs Users (that are not famous for using Emacs)</a></li>\n</ul>\n<h2 id=\"入门指南\">入门指南</h2>\n<h3 id=\"经验分享\">经验分享</h3>\n<p>我接触 Emacs 是因为学习 Clojure，作为一门 Lisp，Emacs 毫无疑问是最佳的编辑器。不过由于原生 Emacs 功能“简陋”，多次尝试不得要领，直到遇到 <a href=\"https://www.braveclojure.com/basic-emacs/\">braveclojure</a> 上 Emacs 教程，把 <a href=\"https://github.com/flyingmachine/emacs-for-clojure\">emacs-for-clojure</a> 的配置 clone 到本地，这才觉得 Emacs 也没那么“难用”。出于对 Lisp 的热爱，强迫自己尽量在 Emacs 中去编码，大概花了一两个月，度过了最艰难的适应期，以后就离不开它了。</p>\n<p>到如今，我的<a href=\"https://github.com/jiacai2050/dotfiles/tree/master/.emacs.d\">配置文件</a>已经丰富了许多，也有很多自己编写的函数。学习一门新语言之前，会把相关 Emacs 扩展先配置上，让一切都在 Emacs 中运行。这里我想着重强调一点：</p>\n<blockquote>\n<p>论单个功能来说，Emacs 可能不是最好的，但如何有机的把各个功能组合起来，减少切换，Emacs 可能是最优的。</p>\n</blockquote>\n<p>这里结合自己的踩坑、使用经验，给出下面几条建议：</p>\n<ul>\n<li>找个成熟的配置先把 Emacs 用起来，一开始不用去纠结细节，等有感觉后再去尝试自己定制。<a href=\"https://www.spacemacs.org/\">Spacemacs</a>、<a href=\"https://github.com/hlissner/doom-emacs\">Doom Emacs</a> 是社区内最流行的两个，建议初学者两个都去尝试下，找最合适自己</li>\n<li>找一个月重点突击，不要断断续续的使用 Emacs，否则很难适应它，一但过了这一个月，后面就是无限的“春风得意”</li>\n<li>在各种插件满足不了自己的需求、有 BUG 时（我大概是在两到三年后），学习 ELisp，毕竟这才是它的精髓。我自己是参考了 <a href=\"https://learnxinyminutes.com/docs/elisp/\">Learn X in Y minutes</a>、Xah Lee 的 <a href=\"http://ergoemacs.org/emacs/emacs.html\">Practical Emacs Tutorial</a></li>\n<li>善用 <code>C-h i</code>，Emacs 自带的文档，以及 <a href=\"https://www.gnu.org/software/emacs/manual/html_node/efaq/Learning-how-to-do-something.html\">How do I find out how to do something in Emacs?</a></li>\n<li>接触社区，<a href=\"https://emacs-china.org/\">Emacs China</a> 是我见过的质量最高的中文论坛，里面有很多资深的 Emacs Hacker 来解决初学者遇到的各种问题。</li>\n<li>截止到 2020/11 月初，我使用 Emacs 比较追求“原汁原味”，尽量用 Emacs 自己的快捷键（<code>C-x C-s</code>之类），虽然一年前小指就开始疼痛了，当时是把 CAPS 键映射为 Ctrl，这样用了一年左右，问题不能根治。虽然社区有推荐使用 <a href=\"https://github.com/emacs-evil/evil\">evil</a>（具有 Vim 的操作模式）来解决这个问题，但之前我觉得这不够“忠贞”，就一直没去用，直到最近发现了 <a href=\"https://www.gnu.org/software/emacs/manual/html_mono/viper.html\">viper mode</a> 才意识到这种想法的幼稚，Emacs 的理念就是可以自己根据自身需求来定制，没有所谓的标准答案。对于其他编辑器的优点，Emacs 会吸收过来。于是立刻把 <a href=\"https://github.com/jiacai2050/dotfiles/commit/db5c7c28a355e21250e6dba8e13c56c71f00c81e\">evil</a> 配置上，从此彻底解放了我的小指。用了四年多的时间了，还是能从 Emacs 中学到些人生经验，估计这是其他软件做不到的。这点也促使我写这篇文章，防止初学者陷入这种思维定势。</li>\n</ul>\n<p>当然每个人的学习道路都不一样，读者可根据自身情况来调整，尽读书不如不读书。一些中文学习资料：</p>\n<ul>\n<li><a href=\"https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/guide-zh.org\">一年成为Emacs高手 (像神一样使用编辑器)</a> by <a href=\"http://blog.binchen.org/index.html\">陈斌</a></li>\n<li><a href=\"http://book.emacs-china.org/\">21 天掌握 Emacs</a> by <a href=\"https://zilongshanren.com/\">子龙山人</a></li>\n</ul>\n<h3 id=\"插件推荐\">插件推荐</h3>\n<h4 id=\"org-mode\">Org-mode</h4>\n<p>\n  <figure>\n    <img src=\"https://img.alicdn.com/imgextra/i4/581166664/O1CN01gzJi7t1z6A1OkLTZ9_!!581166664.png\" alt=\"在 org-mode 中编辑 UML\">\n    <figcaption><center>在 org-mode 中编辑 UML</center></figcaption>\n  </figure>\n\n</p>\n<p><a href=\"https://orgmode.org/\">Org-mode</a> 这是很多非程序员选择 Emacs 的主要原因，简单来说它是一种类似 markdown 的标记语言，很多用户用它来记笔记、管理 GTD，借助于 Emacs 强大的扩展能力，程序员用它来进行<a href=\"http://www.howardism.org/Technical/Emacs/literate-devops.html\">文学编程（literate programming）</a>，当之无愧的排在插件榜的第一名。🥇</p>\n<p>目前我对 org-mode 使用比较简单，只是把它当时 markdown 来用，单就这一点，配合上 Emacs 的快捷键，就已经甩各种 md 编辑器好几条街了，org-mode 对表格的支持也非常棒，比如可以使用 <code>org-table-transpose-table-at-point</code> 命令将表格的行列调换过来。</p>\n<p>\n  <figure>\n    <img src=\"https://img.alicdn.com/imgextra/i1/581166664/O1CN01VDVZEM1z6A1UOtSm0_!!581166664.gif\" alt=\"表格行列转换\">\n    <figcaption><center>表格行列转换</center></figcaption>\n  </figure>\n\n</p>\n<h4 id=\"magit\">Magit</h4>\n<p>\n  <figure>\n    <img src=\"https://img.alicdn.com/imgextra/i1/581166664/O1CN01GeC6rw1z6A1VdWuEW_!!581166664.png\" alt=\"magit status\">\n    <figcaption><center>magit status</center></figcaption>\n  </figure>\n\n\n<a href=\"https://magit.vc/\">Magit</a> 为 Emacs 用户提供操作 git 的接口，是我第一个重度依赖的 Emacs 插件，也是社区内排行第二的插件。Magit 深度整合到 Emacs 的快捷键中，一切 git 操作都如流水行云般，没有它的话，我连 <a href=\"http://www.howardism.org/Technical/Emacs/magit-squashing.html\">rebase</a> 都不会。</p>\n<h4 id=\"evil\">Evil</h4>\n<p>\n  <figure>\n    <img src=\"https://img.alicdn.com/imgextra/i3/581166664/O1CN01TjEFRp1z6A1U4MagS_!!581166664.png\" alt=\"Evil Emacs steal my heart\">\n    <figcaption><center>Evil Emacs steal my heart</center></figcaption>\n  </figure>\n\n\n上面在个人经验里面以及提到过 <a href=\"https://github.com/emacs-evil/evil\">evil</a>，它并不是“邪恶”，而是 Extensible VI Layer for Emacs。Evil 除了把 vi 的 normal/insert/visual state（mode 在 Emacs 中另有所指） 移植过来外，还增加了 emacs state，用于禁用所有的 vi 功能。由于是在 Emacs 里面，我们完全可以自定义快捷键来覆盖 vi 的默认快捷键，达到 Emacs/Vi 的最佳融合，可以同时拥有 <code>h j k l</code> 与 <code>C-a, C-e, M-s, M-f, M-b</code>。\n拷贝 7 行的文本，在 evil 的 normal state 下，只需要</p>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code><span class=\"lnt\">1\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-fallback\" data-lang=\"fallback\">7 yy\n</code></pre></td></tr></table>\n</div>\n</div><p>而原生 Emacs 则需要</p>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code><span class=\"lnt\">1\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-fallback\" data-lang=\"fallback\">C-a C-SPC C-u 6 C-n C-e M-w\n</code></pre></td></tr></table>\n</div>\n</div><blockquote>\n<p>The best editor is neither Emacs nor Vim, it&rsquo;s Emacs with Vim binding! &mdash;-<a href=\"https://spin.atomicobject.com/2013/02/28/emacs-or-vim-evil/\">出处</a></p>\n</blockquote>\n<h4 id=\"dired\">Dired</h4>\n<p><a href=\"https://www.gnu.org/software/emacs/manual/html_node/emacs/Dired.html\">Dired</a> 是 directory editor 的缩写，是 Emacs 内置的插件，类似 macOS 上的文件管理器 Finder。在 Dired 界面中，可以很方便的移动/删除/创建文件，更强大是可以直接批量修改文件，下图展示了如何批量把 <code>test_foo_*.dat</code> 重命名为 <code>test_bar_*.dat</code>，操作文件就像操作文本一样流畅。（<a href=\"http://pragmaticemacs.com/emacs/dired-rename-multiple-files/\">图片来源</a>）</p>\n<p>\n  <figure>\n    <img src=\"https://img.alicdn.com/imgextra/i2/581166664/O1CN01QIzFM91z6A1TiEdB0_!!581166664.gif\" alt=\"dired 批量重命名文件\">\n    <figcaption><center>dired 批量重命名文件</center></figcaption>\n  </figure>\n\n</p>\n<h4 id=\"ivycounselswiper\">Ivy/Counsel/Swiper</h4>\n<p><a href=\"https://github.com/abo-abo/swiper\">Ivy/Counsel/Swiper</a> 三件套是补全框架，它可以很方便的把当前操作的候选项以交互的方式展示出来，类似 VSCode 中的 <a href=\"https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette\">Command Palette</a>、Intellj 中的 <a href=\"https://blog.jetbrains.com/idea/2020/05/when-the-shift-hits-the-fan-search-everywhere/\">Double Shift</a>。\n\n  <img src=\"https://img.alicdn.com/imgextra/i1/581166664/O1CN01BnQ5pp1z6A1NIcJrL_!!581166664.png\" alt=\"\">\n\n</p>\n<p>虽然其他编辑器也有类似的功能，但是其功能不是局限，就是与其他功能分割，没有统一的体验。Emacs 则不同，再多的插件也能够有统一的体验，这一点是非常影响用户体验的。这里通过 ivy-occur + wgrep + evil <a href=\"https://sam217pa.github.io/2016/09/13/from-helm-to-ivy/\">批量修改多个文件</a>中的内容来说明 ivy 套件的强大功能。</p>\n<p>演示的目录有 <code>1.txt</code> <code>2.txt</code> 两个文件，内容都是 hello world，这里批量修改为 hello emacs。\n\n  <figure>\n    <img src=\"https://img.alicdn.com/imgextra/i1/581166664/O1CN01dS73W31z6A1Tk5UwK_!!581166664.gif\" alt=\"ivy-occur 批量修改多个文件中的内容\">\n    <figcaption><center>ivy-occur 批量修改多个文件中的内容</center></figcaption>\n  </figure>\n\n</p>\n<p>操作步骤：</p>\n<ol>\n<li><code>counsel-ag</code> world 搜索当前目录下搜索含 world 的文件</li>\n<li><code>C-c C-o ivy-occur</code> 打开 occur 界面</li>\n<li><code>C-x C-q ivy-wgrep-change-to-wgrep-mode</code> 进入编辑模式</li>\n<li><code>:%s/world/emacs/g</code> 借助 evil 修改内容</li>\n<li><code>C-c C-c wgrep-finish-edit</code> 保存内容</li>\n</ol>\n<p>当然，上面操作可以根据自己的习惯定义快捷键，上述五个步骤一气呵成，“挥一挥衣袖，不带走一片云彩”。</p>\n<h4 id=\"lsp-mode\">Lsp-mode</h4>\n<p>\n  <figure>\n    <img src=\"https://img.alicdn.com/imgextra/i1/581166664/O1CN01EeQOpy1z6A1U5lWzk_!!581166664.png\" alt=\"lsp-mode\">\n    <figcaption><center>lsp-mode</center></figcaption>\n  </figure>\n\n\n在 <a href=\"https://microsoft.github.io/language-server-protocol/\">LSP</a> 出现之前，没有统一的框架来解决不同语言的高亮、补全等现代 IDE 的基本功能，微软推出的 LSP 无疑已经成为业界标准，无需使用正则这种既不准又耗自由的方式了。Emacs 中有两个扩展支持 LSP，分别是</p>\n<ul>\n<li><a href=\"https://github.com/emacs-lsp/lsp-mode\">Lsp-mode</a>，主打开箱即用，默认提供传统 IDE 的所有体验</li>\n<li><a href=\"https://github.com/joaotavora/eglot\">EGlot</a>，主打小巧精致</li>\n</ul>\n<p>目前我使用的是 lsp-mode，初学者可以都去尝试下，然后选择符合自己品味的那一款。</p>\n<p>\n  <img src=\"https://img.alicdn.com/imgextra/i4/581166664/O1CN01gjdchA1z6A1T3EaUP_!!581166664.png\" alt=\"\">\n\n</p>\n<h4 id=\"more\">More</h4>\n<p>除了上面介绍的几个扩展外，日常使用的扩展还有如下几个，当然还有很多有趣的扩展等着读者自己去发现。</p>\n<ul>\n<li>\n<p><a href=\"https://company-mode.github.io/\">company</a> 补全框架，可配合 lsp-mode 使用\n\n  <img src=\"https://img.alicdn.com/imgextra/i3/581166664/O1CN01F3lxtC1z6A1RlueN7_!!581166664.png\" alt=\"\">\n\n</p>\n</li>\n<li>\n<p><a href=\"https://github.com/magnars/multiple-cursors.el\">multiple-cursors</a> 多光标点操作\n\n  <img src=\"https://img.alicdn.com/imgextra/i4/581166664/O1CN01ceUOar1z6A1OW1MMp_!!581166664.gif\" alt=\"\">\n\n</p>\n</li>\n<li>\n<p><a href=\"https://github.com/winterTTr/ace-jump-mode\">ace-jump-mode</a> 根据字符，快速移动光标。下图为根据 p 进行快速跳转的示例\n\n  <img src=\"https://img.alicdn.com/imgextra/i1/581166664/O1CN019sHvUm1z6A1R9QtHn_!!581166664.gif\" alt=\"\">\n\n</p>\n</li>\n<li>\n<p><a href=\"https://github.com/joaotavora/yasnippet\">yasnippet</a> 模板系统，通过定义代码片段的缩写来简化输入\n\n  <img src=\"https://img.alicdn.com/imgextra/i2/581166664/O1CN01lQVIpx1z6A1Wz6Th3_!!581166664.png\" alt=\"\">\n\n</p>\n</li>\n<li>\n<p><a href=\"https://www.flycheck.org/en/latest/\">flycheck</a> 语法实时检查\n\n  <img src=\"https://img.alicdn.com/imgextra/i4/581166664/O1CN01gL8IST1z6A1WZt3Dk_!!581166664.png\" alt=\"\">\n\n</p>\n</li>\n<li>\n<p><a href=\"https://github.com/Alexander-Miller/treemacs\">treemacs</a> 文件目录树导航\n\n  <img src=\"https://img.alicdn.com/imgextra/i3/581166664/O1CN01oTtvbz1z6A1RykfJ8_!!581166664.png\" alt=\"\">\n\n</p>\n</li>\n<li>\n<p><a href=\"https://github.com/bbatsov/projectile\">projectile</a> 项目工作空间管理\n\n  <img src=\"https://img.alicdn.com/imgextra/i3/581166664/O1CN01yHD9GD1z6A1Tmi66V_!!581166664.gif\" alt=\"\">\n\n\n上面图示展示了如何在一个项目中查找文件、在实现与测试中切换、切换不同的项目</p>\n</li>\n</ul>\n<h2 id=\"总结\">总结</h2>\n<p>也许 Emacs 的普及程度远远比不上 VSCode，但这也并不算件坏事，比如那些伸手党们就不适合使用 Emacs，让他们进来只会拉低社区的整体水平；而且 Emacs 是个开放的系统，会借鉴 VSCode 中优秀的设计，Emacs 与其他编辑器并不是互斥的。\n之前论坛就有<a href=\"https://emacs-china.org/t/emacs-twitter-vscode/9174\">台湾的 Emacs Twitter 账户维护者“叛逃”到 VSCode </a> 的讨论，这类具有争议话题毫无疑问会引起大家的关注，但是别忘了 Emacs 自由的精神，符合自己的才是最好的，没必要一味沉迷在某个事物中，说到底，Emacs/VSCode 只是些工具而已，解决实际问题才是最重要的，当然一个舒心的<del>操作系统</del>编辑器，会让这个枯燥的过程变得乐趣无穷。\n最后，借 <a href=\"https://www.masteringemacs.org/article/the-emacs-27-edition-of-mastering-emacs-out-now\">Mastering Emacs</a> 中的一句话结束本文</p>\n<blockquote>\n<p>Your patient mastery of Emacs is well-rewarded. I assure you.</p>\n</blockquote>\n<h2 id=\"参考资料\">参考资料</h2>\n<ul>\n<li><a href=\"https://tldp.org/HOWTO/Emacs-Beginner-HOWTO.html#toc3\">Emacs Beginner&rsquo;s HOWTO</a></li>\n<li><a href=\"https://irreal.org/blog/?p=279\">Emacs As A Lisp Machine</a></li>\n<li><a href=\"https://news.ycombinator.com/item?id=18398324\">Ask HN: Is Visual Studio Code the Emacs of 21st century?</a>\n<a href=\"https://www.reddit.com/r/emacs/comments/flpzft/what_benefits_does_emacs_offer_over_vs_code/\">What benefits does emacs offer over vs code</a></li>\n<li><a href=\"https://unix.stackexchange.com/questions/986/what-are-the-pros-and-cons-of-vim-and-emacs\">https://unix.stackexchange.com/questions/986/what-are-the-pros-and-cons-of-vim-and-emacs</a></li>\n<li><a href=\"https://lwn.net/Articles/819452/\">Making Emacs popular again</a></li>\n<li><a href=\"https://web.archive.org/web/20190430192029/https://m.facebook.com/notes/daniel-colascione/buttery-smooth-emacs/10155313440066102/\">Buttery Smooth Emacs</a></li>\n<li><a href=\"https://batsov.com/articles/2011/11/19/why-emacs/\">https://batsov.com/articles/2011/11/19/why-emacs/</a></li>\n<li><a href=\"https://github.com/remacs/remacs#why-emacs\">https://github.com/remacs/remacs#why-emacs</a></li>\n</ul>\n<p>\n  <img src=\"https://img.alicdn.com/imgextra/i1/581166664/O1CN01bolPgY1z6A1VNlxl8_!!581166664.jpg\" alt=\"\">\n\n</p>\n","descriptionType":"text/html","publishedDate":"Wed, 25 Nov 2020 00:00:00 +0000","feedId":42830,"bgimg":"https://img.alicdn.com/imgextra/i4/581166664/O1CN0156nQHc1z6A1VldH2x_!!581166664.png","linkMd5":"8e0e87fddb64d8bc175782fbab0eedaf","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn10@2020_5/2021/04/10/04-59-18-277_6a6d71697fbbab7f.webp","destWidth":600,"destHeight":400,"sourceBytes":4298,"destBytes":13272,"author":"","articleImgCdnMap":{"https://img.alicdn.com/imgextra/i4/581166664/O1CN0156nQHc1z6A1VldH2x_!!581166664.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn10@2020_5/2021/04/10/04-59-18-277_6a6d71697fbbab7f.webp","https://www.gnu.org/software/emacs/images/teaser.png":null,"https://img.alicdn.com/imgextra/i2/581166664/O1CN01ePMFmU1z6A1W5J6a4_!!581166664.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn57@2020_4/2021/04/10/04-59-19-616_6d4e7516dc07dea9.webp","https://img.alicdn.com/imgextra/i2/581166664/O1CN012SFAW41z6A1WeRU9M_!!581166664.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn61@2020_6/2021/04/10/04-59-19-077_cb08fc97253dc611.webp","https://img.alicdn.com/imgextra/i4/581166664/O1CN01hJslQh1z6A1VLFP7y_!!581166664.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn17@2020_4/2021/04/10/04-59-19-102_f259ca5b2defdc77.webp","https://img.alicdn.com/imgextra/i4/581166664/O1CN01DWl21B1z6A1UNsI4U_!!581166664.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn1@2020_6/2021/04/10/04-59-19-447_53653fbde0df7de6.webp","https://img.alicdn.com/imgextra/i1/581166664/O1CN01vpjexS1z6A1PICqIh_!!581166664.gif":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn29@2020_3/2021/04/10/04-59-34-426_ccc1eb333822d050.webp","https://img.alicdn.com/imgextra/i2/581166664/O1CN01VH3Txp1z6A1WcQQ05_!!581166664.jpg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn13@2020_3/2021/04/10/04-59-19-363_a627440ececf2698.webp","https://img.alicdn.com/imgextra/i4/581166664/O1CN01gzJi7t1z6A1OkLTZ9_!!581166664.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn25@2020_4/2021/04/10/04-59-18-924_ada23e67deddea1c.webp","https://img.alicdn.com/imgextra/i1/581166664/O1CN01VDVZEM1z6A1UOtSm0_!!581166664.gif":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn78@2020_5/2021/04/10/04-59-19-560_7e7a6504ef7714b9.webp","https://img.alicdn.com/imgextra/i1/581166664/O1CN01GeC6rw1z6A1VdWuEW_!!581166664.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn98@2020_1/2021/04/10/04-59-19-747_a8c4bed474e51b82.webp","https://img.alicdn.com/imgextra/i3/581166664/O1CN01TjEFRp1z6A1U4MagS_!!581166664.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn6@2020_2/2021/04/10/04-59-19-034_1abcaea27d71600b.webp","https://img.alicdn.com/imgextra/i2/581166664/O1CN01QIzFM91z6A1TiEdB0_!!581166664.gif":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn38@2020_6/2021/04/10/04-59-20-728_2db09f3bb78d7e1d.webp","https://img.alicdn.com/imgextra/i1/581166664/O1CN01BnQ5pp1z6A1NIcJrL_!!581166664.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn86@2020_6/2021/04/10/04-59-19-451_836d6ff1925ff671.webp","https://img.alicdn.com/imgextra/i1/581166664/O1CN01dS73W31z6A1Tk5UwK_!!581166664.gif":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn82@2020_1/2021/04/10/04-59-21-355_25aaa4e53a630b69.webp","https://img.alicdn.com/imgextra/i1/581166664/O1CN01EeQOpy1z6A1U5lWzk_!!581166664.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn93@2020_3/2021/04/10/04-59-19-239_77f6a760136f5215.webp","https://img.alicdn.com/imgextra/i4/581166664/O1CN01gjdchA1z6A1T3EaUP_!!581166664.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn21@2020_6/2021/04/10/04-59-19-117_b59223c460610045.webp","https://img.alicdn.com/imgextra/i3/581166664/O1CN01F3lxtC1z6A1RlueN7_!!581166664.png":null,"https://img.alicdn.com/imgextra/i4/581166664/O1CN01ceUOar1z6A1OW1MMp_!!581166664.gif":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn42@2020_2/2021/04/10/04-59-19-789_cdf61ff0ae1d0469.webp","https://img.alicdn.com/imgextra/i1/581166664/O1CN019sHvUm1z6A1R9QtHn_!!581166664.gif":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn90@2020_3/2021/04/10/04-59-19-667_924abb4d9c1d442f.webp","https://img.alicdn.com/imgextra/i2/581166664/O1CN01lQVIpx1z6A1Wz6Th3_!!581166664.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn33@2020_3/2021/04/10/04-59-19-776_c067823af61f1931.webp","https://img.alicdn.com/imgextra/i4/581166664/O1CN01gL8IST1z6A1WZt3Dk_!!581166664.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn73@2020_6/2021/04/10/04-59-19-431_fa2ccd5dbafb29d8.webp","https://img.alicdn.com/imgextra/i3/581166664/O1CN01oTtvbz1z6A1RykfJ8_!!581166664.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn53@2020_1/2021/04/10/04-59-19-830_622934389cf3a811.webp","https://img.alicdn.com/imgextra/i3/581166664/O1CN01yHD9GD1z6A1Tmi66V_!!581166664.gif":null,"https://img.alicdn.com/imgextra/i1/581166664/O1CN01bolPgY1z6A1VNlxl8_!!581166664.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn65@2020_6/2021/04/10/04-59-18-872_ccf791697ad9d97d.webp"},"publishedOrCreatedDate":1618030757802}],"record":{"createdTime":"2021-04-10 12:59:17","updatedTime":"2021-04-10 12:59:17","feedId":42830,"fetchDate":"Sat, 10 Apr 2021 04:59:17 +0000","fetchMs":155,"handleMs":487,"totalMs":122697,"newArticles":0,"totalArticles":79,"status":1,"type":0,"ip":"cf4f74a178f607b72fe1e5b4c372768e","hostName":"us-028*","requestId":"aed9a5f2d4d44842999f41b1e1a93486_42830","contentType":"application/xml","totalBytes":1861926,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":25,"articlesImgsGithubTotal":22,"successGithubMap":{"myreaderx8":1,"myreaderx25":1,"myreaderx7":1,"myreaderx15":1,"myreaderx6":1,"myreaderx27":1,"myreaderx16":1,"myreaderx21":1,"myreaderx4":1,"myreaderx32":1,"myreaderx22":1,"myreaderx11":1,"myreaderx33":1,"myreaderx12":1,"myreaderx1":1,"myreaderx13":1,"myreaderx30":1,"myreaderx5oss":1,"myreaderx31":1,"myreaderx18":1,"myreaderx29":1,"myreaderx19":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}},"feed":{"createdTime":"2020-09-07 03:28:55","updatedTime":"2020-09-07 05:46:01","id":42830,"name":"Keep Coding","url":"http://liujiacai.net/atom.xml","subscriber":75,"website":null,"icon":"http://liujiacai.net/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn34@2020_1/2020/09/06/21-46-00-342_864953d68b20e5bc.ico","description":"Stay hungry, Stay foolish","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-04-10 13:01:19","updatedTime":"2021-04-10 13:01:19","id":null,"feedId":42830,"linkMd5":"8e0e87fddb64d8bc175782fbab0eedaf"}],"tmpCommonImgCdnBytes":13272,"tmpBodyImgCdnBytes":1848654,"tmpBgImgCdnBytes":0,"extra4":{"start":1618030757066,"total":0,"statList":[{"spend":250,"msg":"获取xml内容"},{"spend":487,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":121212,"msg":"正文链接上传到cdn"}]},"extra5":25,"extra6":24,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i3/581166664/O1CN01F3lxtC1z6A1RlueN7_!!581166664.png","sourceStatusCode":200,"destWidth":642,"destHeight":461,"sourceBytes":33553,"destBytes":18788,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":330,"convertSpendMs":67,"createdTime":"2021-04-10 12:59:18","host":"us-013*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn70/contents/2021/04/10/04-59-18-871_1ddd01a1b404a77e.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 10 Apr 2021 04:59:18 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8470:44BC:1899BB8:2A7BC4C:607130A6"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1618033536"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn70/contents/2021/04/10/04-59-18-871_1ddd01a1b404a77e.webp","historyStatusCode":[],"spendMs":37},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.8 KB","destSize":"18.3 KB","compressRate":"56%"},{"code":1,"isDone":false,"source":"https://www.gnu.org/software/emacs/images/teaser.png","sourceStatusCode":200,"destWidth":962,"destHeight":659,"sourceBytes":98783,"destBytes":130290,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":520,"convertSpendMs":237,"createdTime":"2021-04-10 12:59:18","host":"us-021*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn45/contents/2021/04/10/04-59-19-087_f09f82e2f74a5d5e.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 10 Apr 2021 04:59:19 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E1E6:6E14:1509882:24D4F49:607130A7"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1618033525"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn45/contents/2021/04/10/04-59-19-087_f09f82e2f74a5d5e.webp","historyStatusCode":[],"spendMs":45},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"96.5 KB","destSize":"127.2 KB","compressRate":"131.9%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i3/581166664/O1CN01F3lxtC1z6A1RlueN7_!!581166664.png","sourceStatusCode":200,"destWidth":642,"destHeight":461,"sourceBytes":33553,"destBytes":18788,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":206,"convertSpendMs":68,"createdTime":"2021-04-10 12:59:18","host":"us-013*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn70/contents/2021/04/10/04-59-19-128_1ddd01a1b404a77e.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 10 Apr 2021 04:59:19 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8470:44BC:1899BD7:2A7BC8A:607130A7"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1618033536"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn70/contents/2021/04/10/04-59-19-128_1ddd01a1b404a77e.webp","historyStatusCode":[],"spendMs":37},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.8 KB","destSize":"18.3 KB","compressRate":"56%"},{"code":1,"isDone":false,"source":"https://www.gnu.org/software/emacs/images/teaser.png","sourceStatusCode":200,"destWidth":962,"destHeight":659,"sourceBytes":98783,"destBytes":130290,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":358,"convertSpendMs":128,"createdTime":"2021-04-10 12:59:19","host":"us-021*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn45/contents/2021/04/10/04-59-19-463_f09f82e2f74a5d5e.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 10 Apr 2021 04:59:19 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E1E6:6E14:15098B6:24D4FAF:607130A7"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1618033525"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn45/contents/2021/04/10/04-59-19-463_f09f82e2f74a5d5e.webp","historyStatusCode":[],"spendMs":40},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"96.5 KB","destSize":"127.2 KB","compressRate":"131.9%"},null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-013.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-034.herokuapp.com/":{"failCount":1,"successCount":2,"resultList":[200,200,null]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-009.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-038.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i4/581166664/O1CN0156nQHc1z6A1VldH2x_!!581166664.png","sourceStatusCode":200,"destWidth":600,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn10@2020_5/2021/04/10/04-59-18-277_6a6d71697fbbab7f.webp","sourceBytes":4298,"destBytes":13272,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":643,"convertSpendMs":28,"createdTime":"2021-04-10 12:59:17","host":"us-001*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf,8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.2 KB","destSize":"13 KB","compressRate":"308.8%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i1/581166664/O1CN01bolPgY1z6A1VNlxl8_!!581166664.jpg","sourceStatusCode":200,"destWidth":1000,"destHeight":1000,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn65@2020_6/2021/04/10/04-59-18-872_ccf791697ad9d97d.webp","sourceBytes":47949,"destBytes":19954,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":574,"convertSpendMs":33,"createdTime":"2021-04-10 12:59:18","host":"us-025*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.8 KB","destSize":"19.5 KB","compressRate":"41.6%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i4/581166664/O1CN01gzJi7t1z6A1OkLTZ9_!!581166664.png","sourceStatusCode":200,"destWidth":759,"destHeight":1094,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn25@2020_4/2021/04/10/04-59-18-924_ada23e67deddea1c.webp","sourceBytes":386850,"destBytes":59062,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":582,"convertSpendMs":62,"createdTime":"2021-04-10 12:59:18","host":"us-017*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"377.8 KB","destSize":"57.7 KB","compressRate":"15.3%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i3/581166664/O1CN01TjEFRp1z6A1U4MagS_!!581166664.png","sourceStatusCode":200,"destWidth":815,"destHeight":540,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn6@2020_2/2021/04/10/04-59-19-034_1abcaea27d71600b.webp","sourceBytes":46917,"destBytes":47916,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":669,"convertSpendMs":85,"createdTime":"2021-04-10 12:59:18","host":"us-034*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.8 KB","destSize":"46.8 KB","compressRate":"102.1%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i2/581166664/O1CN012SFAW41z6A1WeRU9M_!!581166664.png","sourceStatusCode":200,"destWidth":424,"destHeight":460,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn61@2020_6/2021/04/10/04-59-19-077_cb08fc97253dc611.webp","sourceBytes":17853,"destBytes":18610,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":710,"convertSpendMs":14,"createdTime":"2021-04-10 12:59:18","host":"us-038*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.4 KB","destSize":"18.2 KB","compressRate":"104.2%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i4/581166664/O1CN01hJslQh1z6A1VLFP7y_!!581166664.png","sourceStatusCode":200,"destWidth":534,"destHeight":746,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn17@2020_4/2021/04/10/04-59-19-102_f259ca5b2defdc77.webp","sourceBytes":122966,"destBytes":69766,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":782,"convertSpendMs":238,"createdTime":"2021-04-10 12:59:18","host":"us-52*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"120.1 KB","destSize":"68.1 KB","compressRate":"56.7%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i4/581166664/O1CN01gjdchA1z6A1T3EaUP_!!581166664.png","sourceStatusCode":200,"destWidth":900,"destHeight":610,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn21@2020_6/2021/04/10/04-59-19-117_b59223c460610045.webp","sourceBytes":55556,"destBytes":34732,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":795,"convertSpendMs":78,"createdTime":"2021-04-10 12:59:18","host":"us-030*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"54.3 KB","destSize":"33.9 KB","compressRate":"62.5%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i1/581166664/O1CN01EeQOpy1z6A1U5lWzk_!!581166664.png","sourceStatusCode":200,"destWidth":400,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn93@2020_3/2021/04/10/04-59-19-239_77f6a760136f5215.webp","sourceBytes":48168,"destBytes":12168,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":858,"convertSpendMs":70,"createdTime":"2021-04-10 12:59:18","host":"us-005*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47 KB","destSize":"11.9 KB","compressRate":"25.3%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i4/581166664/O1CN01gL8IST1z6A1WZt3Dk_!!581166664.png","sourceStatusCode":200,"destWidth":700,"destHeight":522,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn73@2020_6/2021/04/10/04-59-19-431_fa2ccd5dbafb29d8.webp","sourceBytes":225661,"destBytes":65012,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":1124,"convertSpendMs":61,"createdTime":"2021-04-10 12:59:18","host":"us-001*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"220.4 KB","destSize":"63.5 KB","compressRate":"28.8%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i1/581166664/O1CN01BnQ5pp1z6A1NIcJrL_!!581166664.png","sourceStatusCode":200,"destWidth":1816,"destHeight":1182,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn86@2020_6/2021/04/10/04-59-19-451_836d6ff1925ff671.webp","sourceBytes":733042,"destBytes":166810,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":1155,"convertSpendMs":395,"createdTime":"2021-04-10 12:59:18","host":"us-030*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"715.9 KB","destSize":"162.9 KB","compressRate":"22.8%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i2/581166664/O1CN01VH3Txp1z6A1WcQQ05_!!581166664.jpg","sourceStatusCode":200,"destWidth":220,"destHeight":330,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn13@2020_3/2021/04/10/04-59-19-363_a627440ececf2698.webp","sourceBytes":23695,"destBytes":14964,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":1156,"convertSpendMs":8,"createdTime":"2021-04-10 12:59:18","host":"europe64*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.1 KB","destSize":"14.6 KB","compressRate":"63.2%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i1/581166664/O1CN019sHvUm1z6A1R9QtHn_!!581166664.gif","sourceStatusCode":200,"destWidth":746,"destHeight":525,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn90@2020_3/2021/04/10/04-59-19-667_924abb4d9c1d442f.webp","sourceBytes":241309,"destBytes":234304,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":1347,"convertSpendMs":840,"createdTime":"2021-04-10 12:59:18","host":"us-017*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"235.7 KB","destSize":"228.8 KB","compressRate":"97.1%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i4/581166664/O1CN01DWl21B1z6A1UNsI4U_!!581166664.jpg","sourceStatusCode":200,"destWidth":1347,"destHeight":651,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn1@2020_6/2021/04/10/04-59-19-447_53653fbde0df7de6.webp","sourceBytes":147803,"destBytes":84956,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":1250,"convertSpendMs":44,"createdTime":"2021-04-10 12:59:18","host":"europe-56*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"144.3 KB","destSize":"83 KB","compressRate":"57.5%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i4/581166664/O1CN01ceUOar1z6A1OW1MMp_!!581166664.gif","sourceStatusCode":200,"destWidth":590,"destHeight":309,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn42@2020_2/2021/04/10/04-59-19-789_cdf61ff0ae1d0469.webp","sourceBytes":141367,"destBytes":126118,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":1484,"convertSpendMs":863,"createdTime":"2021-04-10 12:59:18","host":"us-034*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"138.1 KB","destSize":"123.2 KB","compressRate":"89.2%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i2/581166664/O1CN01ePMFmU1z6A1W5J6a4_!!581166664.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1052,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn57@2020_4/2021/04/10/04-59-19-616_6d4e7516dc07dea9.webp","sourceBytes":77698,"destBytes":33952,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":1438,"convertSpendMs":161,"createdTime":"2021-04-10 12:59:18","host":"europe-60*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"75.9 KB","destSize":"33.2 KB","compressRate":"43.7%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i1/581166664/O1CN01GeC6rw1z6A1VdWuEW_!!581166664.png","sourceStatusCode":200,"destWidth":700,"destHeight":520,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn98@2020_1/2021/04/10/04-59-19-747_a8c4bed474e51b82.webp","sourceBytes":78874,"destBytes":44874,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":1472,"convertSpendMs":24,"createdTime":"2021-04-10 12:59:18","host":"europe68*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"77 KB","destSize":"43.8 KB","compressRate":"56.9%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i3/581166664/O1CN01oTtvbz1z6A1RykfJ8_!!581166664.png","sourceStatusCode":200,"destWidth":1366,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn53@2020_1/2021/04/10/04-59-19-830_622934389cf3a811.webp","sourceBytes":251479,"destBytes":93686,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":1583,"convertSpendMs":135,"createdTime":"2021-04-10 12:59:18","host":"europe-22*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"245.6 KB","destSize":"91.5 KB","compressRate":"37.3%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i2/581166664/O1CN01lQVIpx1z6A1Wz6Th3_!!581166664.png","sourceStatusCode":200,"destWidth":480,"destHeight":327,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn33@2020_3/2021/04/10/04-59-19-776_c067823af61f1931.webp","sourceBytes":84358,"destBytes":20950,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":2452,"convertSpendMs":19,"createdTime":"2021-04-10 12:59:18","host":"europe68*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"82.4 KB","destSize":"20.5 KB","compressRate":"24.8%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i1/581166664/O1CN01VDVZEM1z6A1UOtSm0_!!581166664.gif","sourceStatusCode":200,"destWidth":939,"destHeight":439,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn78@2020_5/2021/04/10/04-59-19-560_7e7a6504ef7714b9.webp","sourceBytes":67408,"destBytes":69976,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":2487,"convertSpendMs":220,"createdTime":"2021-04-10 12:59:18","host":"europe64*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65.8 KB","destSize":"68.3 KB","compressRate":"103.8%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i2/581166664/O1CN01QIzFM91z6A1TiEdB0_!!581166664.gif","sourceStatusCode":200,"destWidth":590,"destHeight":419,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn38@2020_6/2021/04/10/04-59-20-728_2db09f3bb78d7e1d.webp","sourceBytes":370986,"destBytes":285400,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":2684,"convertSpendMs":1324,"createdTime":"2021-04-10 12:59:18","host":"europe-56*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"362.3 KB","destSize":"278.7 KB","compressRate":"76.9%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i1/581166664/O1CN01dS73W31z6A1Tk5UwK_!!581166664.gif","sourceStatusCode":200,"destWidth":746,"destHeight":525,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn82@2020_1/2021/04/10/04-59-21-355_25aaa4e53a630b69.webp","sourceBytes":166772,"destBytes":102280,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":3064,"convertSpendMs":2507,"createdTime":"2021-04-10 12:59:18","host":"us-52*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"162.9 KB","destSize":"99.9 KB","compressRate":"61.3%"},{"code":1,"isDone":false,"source":"https://img.alicdn.com/imgextra/i1/581166664/O1CN01vpjexS1z6A1PICqIh_!!581166664.gif","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn29@2020_3/2021/04/10/04-59-34-426_ccc1eb333822d050.webp","sourceBytes":257705,"destBytes":243164,"targetWebpQuality":75,"feedId":42830,"totalSpendMs":16131,"convertSpendMs":15334,"createdTime":"2021-04-10 12:59:18","host":"us-005*","referer":"https://liujiacai.net/blog/2020/11/25/why-emacs/","linkMd5ListStr":"8e0e87fddb64d8bc175782fbab0eedaf","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"251.7 KB","destSize":"237.5 KB","compressRate":"94.4%"}],"successGithubMap":{"myreaderx8":1,"myreaderx25":1,"myreaderx7":1,"myreaderx15":1,"myreaderx6":1,"myreaderx27":1,"myreaderx16":1,"myreaderx21":1,"myreaderx4":1,"myreaderx32":1,"myreaderx22":1,"myreaderx11":1,"myreaderx33":1,"myreaderx12":1,"myreaderx1":1,"myreaderx13":1,"myreaderx30":1,"myreaderx5oss":1,"myreaderx31":1,"myreaderx18":1,"myreaderx29":1,"myreaderx19":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}}