{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-08-11 23:44:58","updatedTime":"2020-08-11 23:44:58","title":"New ways to reach more drivers on Android for cars","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/a5lcR463iT8/android-for-cars.html","description":"<meta name=\"twitter:image\" content=\"https://4.bp.blogspot.com/-vKb1-7G-Hhc/XzGjZ55QbCI/AAAAAAAAPcs/o6EntDHnGbcodAILNSb6RwYYA_9sNrhvwCLcBGAsYHQ/s1600/Image%2B1_%2BEAP%2BAndroid%2BAuto%2Bapp%2Bexpansion.png\"> \n <img style=\"display:none\" src=\"https://4.bp.blogspot.com/-vKb1-7G-Hhc/XzGjZ55QbCI/AAAAAAAAPcs/o6EntDHnGbcodAILNSb6RwYYA_9sNrhvwCLcBGAsYHQ/s1600/Image%2B1_%2BEAP%2BAndroid%2BAuto%2Bapp%2Bexpansion.png\"> <p><em>Posted by Mickey Kataria, Director of Product Management, Android for cars</em><p> <p> <em>This blog post is part of a weekly series for <a href=\"https://twitter.com/search?q=%2311WeeksOfAndroid&amp;src=typed_query\">#11WeeksOfAndroid</a>. For each week, we’re diving into a key area and this week we’re focusing on Android Beyond Phones. Today, we’ll be talking about cars.</em> </p> <p> Since 2014, Google has been committed to bringing the familiarity of apps and services from Android phones into the car in a safe and seamless way. We’re continuing to see strong momentum and adoption of both <a href=\"https://www.android.com/auto/\">Android Auto</a> and <a href=\"https://source.android.com/devices/automotive/start/what_automotive\">Android Automotive OS</a>, and are excited to share new improvements that provide app developers the opportunity to reach more users in the car. </p> <p> <strong>Android Auto momentum</strong> </p> <p> We launched <a href=\"https://www.android.com/auto/\">Android Auto</a> for users to stay connected on-the-go and more easily access their Android phones on their car displays— while staying focused on the road. Android Auto is currently available with nearly every major car manufacturer and is on track to be in more than 100 million cars in the coming months. Many car manufacturers, including General Motors, BMW and Kia, have also added support for wireless connections, making it easier for drivers to use Android Auto as soon as they get into their car. We’re continuing to add <a href=\"https://blog.google/products/android/five-new-android-features  \">new features</a> to make the experience more seamless for users and help developers reach more drivers with in-car apps. </p> <p> <strong>Expanding Android Auto’s app ecosystem</strong> </p> <p> One of our most common requests for Android Auto continues to be support for more apps in the car. We currently have over 3,000 apps in Google Play whose in-car experiences have been purpose-built for driving. </p> <p> Today, we’re showcasing our work with early access partners to build apps in new categories for Android Auto, including navigation, parking and electric vehicle charging. Using our new Android for Cars App Library, we’re able to ensure that all tasks within an app can be achieved with minimal glances or taps. </p> \n    <center> \n     <a href=\"https://4.bp.blogspot.com/-vKb1-7G-Hhc/XzGjZ55QbCI/AAAAAAAAPcs/o6EntDHnGbcodAILNSb6RwYYA_9sNrhvwCLcBGAsYHQ/s1600/Image%2B1_%2BEAP%2BAndroid%2BAuto%2Bapp%2Bexpansion.png\" imageanchor=\"1\"><img style=\"width:600px\" border=\"0\" src=\"https://4.bp.blogspot.com/-vKb1-7G-Hhc/XzGjZ55QbCI/AAAAAAAAPcs/o6EntDHnGbcodAILNSb6RwYYA_9sNrhvwCLcBGAsYHQ/s1600/Image%2B1_%2BEAP%2BAndroid%2BAuto%2Bapp%2Bexpansion.png\" data-original-width=\"1600\" data-original-height=\"835\" alt=\"image\" of=\"\" Android=\"\" Auto's=\"\" partners=\"\" /></a> \n    </center> <p id=\"imgCaption\"> Early access partners for new apps on Android Auto </p> <p> To mitigate driver distraction, we collaborated with government, industry and academic institutions to develop our own <a href=\"https://www.youtube.com/watch?v=OFHjmDrUF9A\">best practice guidelines</a> that we apply to every aspect of our product development process. With our standard templates and guidelines, developers have the tools to easily optimize their apps for cars, without needing to become an expert in driver distraction. </p> <p> Our early access partners will be releasing new apps to their beta testers by the end of this year. Pending additional testing and feedback, we then plan to make these APIs publicly available for all developers to build Android Auto apps in these categories. </p> <p> \n     <center> \n      <a href=\"https://3.bp.blogspot.com/-q1PE31sWfXk/XzHU2kf2eJI/AAAAAAAAPdw/6DQF9Q3JFpMZP8mMTbB8HEMOQeyK74ljACLcBGAsYHQ/s1600/final_5f31ce27e5bc060015ae78e4_186813%2B%25282%2529%2B%25281%2529.gif\" imageanchor=\"1\"><img style=\"width:500px\" border=\"0\" src=\"https://3.bp.blogspot.com/-q1PE31sWfXk/XzHU2kf2eJI/AAAAAAAAPdw/6DQF9Q3JFpMZP8mMTbB8HEMOQeyK74ljACLcBGAsYHQ/s1600/final_5f31ce27e5bc060015ae78e4_186813%2B%25282%2529%2B%25281%2529.gif\" data-original-width=\"1280\" data-original-height=\"762\" alt=\"Android\" Auto=\"\" gif=\"\" /></a> \n     </center> <p id=\"imgCaption\"> We're partnering with some of the leading navigation, parking and electric vehicle charging apps around the world including ChargePoint, SpotHero and Sygic. </p> <p> <strong>Android Automotive OS adoption</strong> </p> <p> More recently, we introduced <a href=\"https://source.android.com/devices/automotive/start/what_automotive\">Android Automotive OS</a> as a full-stack, open source and highly customizable platform powering vehicle infotainment systems. With Android Automotive OS, car manufacturers are able to have apps and services like Google Assistant, Google Maps and Google Play built into vehicles so that a mobile device is not required for common activities like navigation, downloading third-party apps and listening to media. <a href=\"https://www.polestar.com/us/polestar-2/\">Polestar 2</a>, the first car running Android Automotive OS with Google built in, is now on the road and available for customers globally. In addition, Volvo Cars, Renault, General Motors and more have announced plans for infotainment systems powered by Android Automotive OS with Google apps and services built-in. </p> <p> <strong>Extending the reach of media apps in cars</strong> </p> <p> As more manufacturers begin to ship cars with infotainment systems powered by Android Automotive OS, developers have the opportunity to deliver a seamless media experience using Google Play in the car. If you already have a media app for Android Auto, you can extend the reach by adding support for Android Automotive OS. The process for porting over your apps is simple with most of the work already done, just <a href=\"https://developer.android.com/training/cars/media/automotive-os\">follow these steps</a>. </p> <p> <strong>Making it easier to develop media apps for Android Automotive OS </strong> </p> <p> For the past year, we have been on a journey to allow app developers to design, develop, test and publish media apps directly on Google Play in the car. We are happy to share that this is now possible. </p> \n     <center> \n      <div id=\"flexParent\"> \n       <a href=\"https://1.bp.blogspot.com/-sZ0_6GQV6zY/XzGmSw3Q2-I/AAAAAAAAPdE/6wa8TYfWFQM-krqiwqS4EvoQugyy7UMswCLcBGAsYHQ/s1600/Image%2B3_%2BPolestar%2B2%2BEmulator.png\" imageanchor=\"1\"><img id=\"flexImg\" border=\"0\" src=\"https://1.bp.blogspot.com/-sZ0_6GQV6zY/XzGmSw3Q2-I/AAAAAAAAPdE/6wa8TYfWFQM-krqiwqS4EvoQugyy7UMswCLcBGAsYHQ/s1600/Image%2B3_%2BPolestar%2B2%2BEmulator.png\" alt=\"Android Auto image\" /></a> \n       <a href=\"https://2.bp.blogspot.com/-lSjoQ291WB0/XzGmvaJXcnI/AAAAAAAAPdM/jzYb7GuOkecrwqj5JajFsw-y0tFiUXBrwCLcBGAsYHQ/s1600/Image%2B4_%2BGoogle%2BGeneric%2BEmulator.png\" imageanchor=\"1\"><img id=\"flexImg\" border=\"0\" src=\"https://2.bp.blogspot.com/-lSjoQ291WB0/XzGmvaJXcnI/AAAAAAAAPdM/jzYb7GuOkecrwqj5JajFsw-y0tFiUXBrwCLcBGAsYHQ/s1600/Image%2B4_%2BGoogle%2BGeneric%2BEmulator.png\" alt=\"Image of Polestar 2 and Google Generic Automative system\" /></a> \n      </div> \n     </center> <p id=\"imgCaption\"> Polestar 2 and Google Generic Automotive system images for Android emulator </p> <p> We have made updates to the Android Automotive OS <a href=\"https://designguidelines.withgoogle.com/automotive-os-apps/\">design guidelines</a> and <a href=\"https://developer.android.com/training/cars/media/automotive-os\">development documentation</a> for you to add support for your media apps. We also launched updates to the <a href=\"https://developer.android.com/training/cars/testing#system-images\">emulator</a> to include Google Assistant, Google Maps and Google Play, so you can develop and test your apps in an environment that more closely mirrors the software in the car. The <a href=\"https://developer.android.com/training/cars/testing#system-images\">Polestar 2 system image</a> enables you to test your app on similar software that is available on the road today. Lastly, the <a href=\"http://play.google.com/console \">Play Console</a> now accepts Android Automotive OS APKs, enabling you to simply upload your app for quality review and publishing. These changes allow developers to seamlessly complete the end-to-end development process for Android Automotive OS. </p> \n     <center> \n      <a href=\"https://2.bp.blogspot.com/-Akp0li2-5-k/XzGnzCQCR1I/AAAAAAAAPdY/SDywcW3wJ84MbuJOjyqKAg_fQI4sjhvoACLcBGAsYHQ/s1600/Image%2B5_%2BGoogle%2BPlay%2Bon%2BAndroid%2BAutomotive%2BOS.gif\" imageanchor=\"1\"><img style=\"width:400px\" border=\"0\" src=\"https://2.bp.blogspot.com/-Akp0li2-5-k/XzGnzCQCR1I/AAAAAAAAPdY/SDywcW3wJ84MbuJOjyqKAg_fQI4sjhvoACLcBGAsYHQ/s1600/Image%2B5_%2BGoogle%2BPlay%2Bon%2BAndroid%2BAutomotive%2BOS.gif\" data-original-width=\"1152\" data-original-height=\"1536\" alt=\"Image of Google Play features\" /></a> \n     </center> <p id=\"imgCaption\"> Google Play features many media apps today, including Spotify, iHeartRadio, NPR One and more. </p> <p> To learn more about how to create an app for Android Automotive OS, look out for updates or post on the <a href=\"https://groups.google.com/a/android.com/forum/#!forum/automotive-developers\">automotive-developers</a> Google Group or Stack Overflow using <a href=\"https://stackoverflow.com/questions/tagged/android-automotive\">android-automotive</a> tags. </p> <p> With new app expansion on Android Auto and improved development tools for Android Automotive OS, developers have more opportunity than ever to reach users with app experiences optimized for the car. Head over to <a href=\"http://developer.android.com/cars\">developer.android.com/cars</a> to get started! </p> <p> <strong>Resources</strong> </p> <p> <em>You can find the entire playlist of #11WeeksOfAndroid video content <a href=\"https://www.youtube.com/user/androiddevelopers\">here</a>, and learn more about each week <a href=\"http://d.android.com/android11\">here</a>. We’ll continue to spotlight new areas each week, so <a href=\"https://android-developers.googleblog.com/\">keep an eye out</a> and follow us on <a href=\"https://twitter.com/androiddev\">Twitter</a> and <a href=\"https://www.youtube.com/user/androiddevelopers\">YouTube</a>. Thanks so much for letting us be a part of this experience with you! </em> </p>\n     <div class=\"feedflare\"> \n      <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=a5lcR463iT8:rnmsUAfkTCs:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\" /></a> \n      <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=a5lcR463iT8:rnmsUAfkTCs:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=a5lcR463iT8:rnmsUAfkTCs:-BTjWOF_DHI\" border=\"0\" /></a> \n     </div><img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/a5lcR463iT8\" height=\"1\" width=\"1\" alt=\"\" /></p></p></p></img>\n</meta>","descriptionType":"html","publishedDate":"Tue, 11 Aug 2020 13:00:00 +0000","feedId":7,"bgimg":"https://4.bp.blogspot.com/-vKb1-7G-Hhc/XzGjZ55QbCI/AAAAAAAAPcs/o6EntDHnGbcodAILNSb6RwYYA_9sNrhvwCLcBGAsYHQ/s1600/Image%2B1_%2BEAP%2BAndroid%2BAuto%2Bapp%2Bexpansion.png","linkMd5":"a1aaa88dc8b276ee3eb676d7ccefbc05","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn4@2020_5/2020/08/11/15-45-07-372_168516c62fc91056.webp","author":"Android Developers","articleImgCdnMap":{"https://4.bp.blogspot.com/-vKb1-7G-Hhc/XzGjZ55QbCI/AAAAAAAAPcs/o6EntDHnGbcodAILNSb6RwYYA_9sNrhvwCLcBGAsYHQ/s1600/Image%2B1_%2BEAP%2BAndroid%2BAuto%2Bapp%2Bexpansion.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn4@2020_5/2020/08/11/15-45-07-372_168516c62fc91056.webp","https://3.bp.blogspot.com/-q1PE31sWfXk/XzHU2kf2eJI/AAAAAAAAPdw/6DQF9Q3JFpMZP8mMTbB8HEMOQeyK74ljACLcBGAsYHQ/s1600/final_5f31ce27e5bc060015ae78e4_186813%2B%25282%2529%2B%25281%2529.gif":null,"https://1.bp.blogspot.com/-sZ0_6GQV6zY/XzGmSw3Q2-I/AAAAAAAAPdE/6wa8TYfWFQM-krqiwqS4EvoQugyy7UMswCLcBGAsYHQ/s1600/Image%2B3_%2BPolestar%2B2%2BEmulator.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn84@2020_2/2020/08/11/15-45-08-839_ed7173e222df0c0b.webp","https://2.bp.blogspot.com/-lSjoQ291WB0/XzGmvaJXcnI/AAAAAAAAPdM/jzYb7GuOkecrwqj5JajFsw-y0tFiUXBrwCLcBGAsYHQ/s1600/Image%2B4_%2BGoogle%2BGeneric%2BEmulator.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn28@2020_6/2020/08/11/15-45-08-971_b0215e823687c023.webp","https://2.bp.blogspot.com/-Akp0li2-5-k/XzGnzCQCR1I/AAAAAAAAPdY/SDywcW3wJ84MbuJOjyqKAg_fQI4sjhvoACLcBGAsYHQ/s1600/Image%2B5_%2BGoogle%2BPlay%2Bon%2BAndroid%2BAutomotive%2BOS.gif":null,"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx/cdn40@2020_5/2020/08/11/15-45-08-611_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=a5lcR463iT8:rnmsUAfkTCs:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx/cdn68@2020_6/2020/08/11/15-45-08-608_d8ba85de61326ea1.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/a5lcR463iT8":"https://cdn.jsdelivr.net/gh/myreaderx/cdn72@2020_4/2020/08/11/15-45-30-839_3ec91b598d5cd7c2.webp"}},{"createdTime":"2020-08-11 23:44:58","updatedTime":"2020-08-11 23:44:58","title":"6 New ways to engage with users on Android TV","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/-NtAWA4vj88/6-new-ways-to-engage-with-users-on.html","description":"<meta name=\"twitter:image\" content=\"https://3.bp.blogspot.com/-uP9h2z-wzX4/Xy2KNtlOBdI/AAAAAAAAPcQ/nlyMmgAdoUYKeT0dgq_XcprQVd4txeEawCLcBGAsYHQ/s1600/11_weeks_androidtv_blog_header_2.png\"> \n <img style=\"display:none\" src=\"http://feedproxy.google.com/~r/blogspot/hsDu/~3/-NtAWA4vj88/ https://3.bp.blogspot.com/-uP9h2z-wzX4/Xy2KNtlOBdI/AAAAAAAAPcQ/nlyMmgAdoUYKeT0dgq_XcprQVd4txeEawCLcBGAsYHQ/s1600/11_weeks_androidtv_blog_header_2.png\"> <p><em>Posted by Dan Aharon, Product Manager, Android TV</em><p> \n    <center> \n     <a href=\"https://3.bp.blogspot.com/-uP9h2z-wzX4/Xy2KNtlOBdI/AAAAAAAAPcQ/nlyMmgAdoUYKeT0dgq_XcprQVd4txeEawCLcBGAsYHQ/s1600/11_weeks_androidtv_blog_header_2.png\" imageanchor=\"1\"><img style=\"width: 100%;\" border=\"0\" src=\"https://3.bp.blogspot.com/-uP9h2z-wzX4/Xy2KNtlOBdI/AAAAAAAAPcQ/nlyMmgAdoUYKeT0dgq_XcprQVd4txeEawCLcBGAsYHQ/s1600/11_weeks_androidtv_blog_header_2.png\" data-original-width=\"1600\" data-original-height=\"901\" alt=\"Android\" TV=\"\" graphic=\"\" /></a> \n    </center> <p> <em>This blog post is part of a weekly series for #11WeeksOfAndroid. This week we’re focusing on Android Beyond Phones. <a href=\"https://youtu.be/OOV6Ef9zDg0\">So what’s new on Android TV?.</a></em> </p> <p> With users asking for more TV shows, movies, and apps than ever, the big screen has become a big deal. There are now over 80% more Android TV monthly active devices than a year ago! Working with 7 of the top 10 Smart TV OEMs and over 160 TV Operators has helped give users more options to spruce up their living room with Android TV. But connecting with this many people wouldn’t have been possible without the developer ecosystem building ~7,000 apps for Google Play on Android TV. Together, our users can now watch, play, and do more on their TVs. </p> <p> Over the past year, we’ve introduced new features to Android TV to make discovering and accessing your content even easier for users. We updated Google Play with a refreshed look and <a href=\"https://www.blog.google/products/google-fit/be-healthy-at-home/\">new app collections</a> while making it easier for users to <a href=\"https://blog.google/products/android-tv/find-new-faves-faster/\">subscribe to apps</a>. We made additions to the Android TV home screen to highlight <a href=\"https://blog.google/products/android-tv/find-new-faves-faster/\">trending</a> and <a href=\"https://blog.google/products/android-tv/stay-entertained-at-home/\">important</a> content. And most recently, we released <a href=\"https://developers.googleblog.com/2020/08/introducing-cast-connect-android-tv.html\">Cast Connect</a>, so your users can cast their favorite content directly to its native Android TV app. </p> <p> We’ve heard from you on how else we can help support you. We are excited to announce 6 new ways that are coming soon to help you continue to improve engagement and commerce on the TV:</p> <p> <strong>Easier acquisition and monetization</strong> </p> \n    <ul> \n     <li><strong><a href=\"https://developer.android.com/training/tv/start/start#instant-experience\">Google Play Instant on TV</a>: </strong>Get users into your app, fast. Google Play Instant allows users to try your app instantly, without installing it.<strong> </strong> </li> \n    </ul> \n    <center> \n     <a href=\"https://4.bp.blogspot.com/-q65dNmjoCHc/Xy2AHKQpc_I/AAAAAAAAPb4/DLTXb78x_eUocNf1tmkVinRCINSYRaj7ACLcBGAsYHQ/s1600/image2.gif\" imageanchor=\"1\"><img style=\"width: 500px\" border=\"0\" src=\"https://4.bp.blogspot.com/-q65dNmjoCHc/Xy2AHKQpc_I/AAAAAAAAPb4/DLTXb78x_eUocNf1tmkVinRCINSYRaj7ACLcBGAsYHQ/s1600/image2.gif\" data-original-width=\"960\" data-original-height=\"540\" alt=\"Orbia:\" tap=\"\" and=\"\" relax=\"\" gif=\"\" /></a> \n    </center> <p id=\"imgCaption\"> Let users try your app instantly on Google Play with Google Play Instant on TV</p> \n    <ul> \n     <li><strong>Android TV Emulator with Play Store support: </strong>Test your TV projects seamlessly.<strong> </strong>The Android TV emulator now supports Google Play, so you can<strong> </strong>test subscriptions faster through the emulator instead of testing on real devices. </li> \n    </ul> \n    <ul> \n     <li><strong>PIN code purchases: </strong>Make purchases easy.<strong> </strong>Users will soon be able to purchase content with a PIN code instead of a password on Google Play. </li> \n    </ul> <p> <strong>More engaging user experiences</strong> </p> \n    <ul> \n     <li><strong><a href=\"http://developer.android.com/training/tv/start/onscreen-keyboard\">Gboard TV</a>: </strong>Typing on TV made easier. New layouts and features are being added to the Google keyboard on TV, including speech-to-text and predictive typing. </li> \n    </ul> \n    <center> \n     <a href=\"https://3.bp.blogspot.com/-Cc5Srjb745U/Xy2AgOE8KFI/AAAAAAAAPcE/Uu-VcIL8oasXSOYzts6oJ2D7DTiWFgXbACLcBGAsYHQ/s1600/image1.gif\" imageanchor=\"1\"><img style=\"width: 500px\" border=\"0\" src=\"https://3.bp.blogspot.com/-Cc5Srjb745U/Xy2AgOE8KFI/AAAAAAAAPcE/Uu-VcIL8oasXSOYzts6oJ2D7DTiWFgXbACLcBGAsYHQ/s1600/image1.gif\" data-original-width=\"960\" data-original-height=\"540\" alt=\"Choose\" a=\"\" name=\"\" for=\"\" your=\"\" SHIELD=\"\" Android=\"\" TV=\"\" /></a> \n    </center> <p id=\"imgCaption\">Use Gboard TV to bring speech-to-text and predictive typing to your app. </p> \n    <ul> \n     <li><strong><a href=\"http://developer.android.com/training/tv/games#auto-low-latency-mode\">Auto low latency mode</a>: </strong>Make gaming on the TV even smoother<strong>. </strong>Ask Android TV to disable post-processing, and minimize latency whenever a gaming application is shown fullscreen. </li> \n    </ul> \n    <ul> \n     <li><strong>Leanback Library Improvements: </strong>Simplify app navigation and compatibility with the latest from the leanback library: <a href=\"http://developer.android.com/training/tv/start/libraries#leanback-tabs-library\">top tab navigation</a>, <a href=\"http://developer.android.com/training/tv/start/libraries#leanback-paging-library\">paging</a> through media titles and <a href=\"http://developer.android.com/training/tv/start/layouts#appcompat-themes\">shared code bases</a> across mobile and TV are all simpler now! </li> \n    </ul> <p> This is just the latest for developers. You can find videos, codelabs, and documentation to bring more key features to life on the <a href=\"https://developer.android.com/11weeksofandroid\">#11weeksofAndroid site</a> and the <a href=\"https://developer.android.com/training/tv\">Android TV Developers site</a>. Catch the “<a href=\"https://www.youtube.com/watch?v=OOV6Ef9zDg0&amp;t=1s\">What’s new on Android TV</a>” video for demos and more info about the features in this post. </p> <p> If you are just getting started, check out our <a href=\"https://store.askey.com/adt-3.html\">ADT-3 developer kit</a> and <a href=\"https://android-developers.googleblog.com/2020/06/android-11-dp-on-android-tv.html\">Android 11 Developer Preview</a> to start building your TV experience. </p> <p> We are excited to see what you come up with next. </p>\n    <div class=\"feedflare\"> \n     <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=-NtAWA4vj88:Iy7F1xOMka4:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\" /></a> \n     <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=-NtAWA4vj88:Iy7F1xOMka4:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=-NtAWA4vj88:Iy7F1xOMka4:-BTjWOF_DHI\" border=\"0\" /></a> \n    </div><img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/-NtAWA4vj88\" height=\"1\" width=\"1\" alt=\"\" /></p></p></img>\n</meta>","descriptionType":"html","publishedDate":"Mon, 10 Aug 2020 13:00:00 +0000","feedId":7,"bgimg":" https://3.bp.blogspot.com/-uP9h2z-wzX4/Xy2KNtlOBdI/AAAAAAAAPcQ/nlyMmgAdoUYKeT0dgq_XcprQVd4txeEawCLcBGAsYHQ/s1600/11_weeks_androidtv_blog_header_2.png","linkMd5":"1f5cf3ed231dea4553b4e3b3b3e153ff","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn12@2020_2/2020/08/11/15-45-08-639_446f2dbb8839d799.webp","author":"Android Developers","articleImgCdnMap":{"http://feedproxy.google.com/~r/blogspot/hsDu/~3/-NtAWA4vj88/ https://3.bp.blogspot.com/-uP9h2z-wzX4/Xy2KNtlOBdI/AAAAAAAAPcQ/nlyMmgAdoUYKeT0dgq_XcprQVd4txeEawCLcBGAsYHQ/s1600/11_weeks_androidtv_blog_header_2.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn32@2020_2/2020/08/11/15-45-08-789_f5b85116e86f2e74.jpg","https://3.bp.blogspot.com/-uP9h2z-wzX4/Xy2KNtlOBdI/AAAAAAAAPcQ/nlyMmgAdoUYKeT0dgq_XcprQVd4txeEawCLcBGAsYHQ/s1600/11_weeks_androidtv_blog_header_2.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn52@2020_5/2020/08/11/15-45-09-132_48a1cfc50b847431.webp","https://4.bp.blogspot.com/-q65dNmjoCHc/Xy2AHKQpc_I/AAAAAAAAPb4/DLTXb78x_eUocNf1tmkVinRCINSYRaj7ACLcBGAsYHQ/s1600/image2.gif":null,"https://3.bp.blogspot.com/-Cc5Srjb745U/Xy2AgOE8KFI/AAAAAAAAPcE/Uu-VcIL8oasXSOYzts6oJ2D7DTiWFgXbACLcBGAsYHQ/s1600/image1.gif":"https://cdn.jsdelivr.net/gh/myreaderx/cdn64@2020_5/2020/08/11/15-45-26-387_496fb88ca591b845.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx/cdn40@2020_5/2020/08/11/15-45-08-611_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=-NtAWA4vj88:Iy7F1xOMka4:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx/cdn60@2020_1/2020/08/11/15-45-08-586_c5423f225d4d20c3.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/-NtAWA4vj88":"https://cdn.jsdelivr.net/gh/myreaderx/cdn44@2020_1/2020/08/11/15-45-08-560_0766c99a33bde94c.webp"}},{"createdTime":"2020-08-11 23:44:58","updatedTime":"2020-08-11 23:44:58","title":"What’s New in Navigation 2020","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/FX5yH2GrOfU/whats-new-in-navigation-2020.html","description":"<meta name=\"twitter:image\" content=\"https://4.bp.blogspot.com/-igLPrJ5bA8M/Xxi0yzegEAI/AAAAAAAAPTk/si7V5QsW_18fr_RGOr3SH-xrPdWqTYc-wCLcBGAsYHQ/s1600/What%25E2%2580%2599s%2BNew%2Bin%2BNavigation%2B2020%2Bv02.png\" imageanchor=\"1\" \"=\"\"> \n <img style=\"display:none\" src=\" \"> <p><em>Posted by Jeremy Woods, Software Engineer, Android UI Toolkit </em><p> \n    <center> \n     <a href=\"https://4.bp.blogspot.com/-igLPrJ5bA8M/Xxi0yzegEAI/AAAAAAAAPTk/si7V5QsW_18fr_RGOr3SH-xrPdWqTYc-wCLcBGAsYHQ/s1600/What%25E2%2580%2599s%2BNew%2Bin%2BNavigation%2B2020%2Bv02.png\" imageanchor=\"1\"><img style=\"width: 600px\" border=\"0\" src=\"https://4.bp.blogspot.com/-igLPrJ5bA8M/Xxi0yzegEAI/AAAAAAAAPTk/si7V5QsW_18fr_RGOr3SH-xrPdWqTYc-wCLcBGAsYHQ/s1600/What%25E2%2580%2599s%2BNew%2Bin%2BNavigation%2B2020%2Bv02.png\" data-original-width=\"1024\" data-original-height=\"512\" alt=\"Navigation image\" /></a>\n    </center> <p> The latest versions of the Jetpack Navigation library (2.2.0 and 2.3.0) added a lot of requested features and functionality, including <a href=\"https://developer.android.com/guide/navigation/navigation-dynamic\">dynamic navigation</a>, <a href=\"https://developer.android.com/reference/androidx/navigation/NavBackStackEntry\">navigation back stack entries</a>, a library for <a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/testing/TestNavHostController\">navigation testing</a>, additional features for <a href=\"https://developer.android.com/guide/navigation/navigation-navigate#uri\">deep linking</a>, and more. Let’s go over the most important changes, see what problems they solve, and learn how to use them! </p> <h2>Dynamic Navigation</h2> <p> We’ve updated Navigation to simplify adding dynamic feature modules for your application. </p> <p> Previously, implementing navigation between destinations defined in dynamic feature modules required a lot of work. Before you could navigate to the first dynamic destination, you needed to add the Play Core library and the Split Install API to your app. You also needed to check for and download the dynamic module. Once downloaded, you could then finally navigate to the destination. On top of this, if you wanted to have an on-screen progress bar for the module being downloaded, you needed to implement a <code>SplitInstallManager</code> listener. </p> <p> To address this complexity, we created the Dynamic Navigator library. This library extends the functionality of the Jetpack Navigation library to provide seamless installation of on-demand dynamic feature modules when navigating. The library handles all Play Store interaction for you, and it even includes a progress screen that provides the download status of your dynamic module. \n     <center> \n      <a href=\"https://3.bp.blogspot.com/-oO5hDxQNAJc/XxiUD9LVzhI/AAAAAAAAPSg/PiUNldhIeL0FipRFA2qsG76nHXqhKKF_ACLcBGAsYHQ/s1600/On%2BDemand%2BSample.png\" imageanchor=\"1\"><img style=\"width:500px\" border=\"0\" src=\"https://3.bp.blogspot.com/-oO5hDxQNAJc/XxiUD9LVzhI/AAAAAAAAPSg/PiUNldhIeL0FipRFA2qsG76nHXqhKKF_ACLcBGAsYHQ/s1600/On%2BDemand%2BSample.png\" data-original-width=\"1600\" data-original-height=\"1487\" alt=\"The default UI for showing a progress bar when a user navigates to a dynamic feature for the first time.\" /></a> \n     </center> </p> <p id=\"imgCaption\"> The default UI for showing a progress bar when a user navigates to a dynamic feature for the first time. The app displays this screen as the corresponding module downloads </p> <p> To use dynamic navigation, all you need to do is: </p> \n    <ol> \n     <li>Change instances of <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/fragment/NavHostFragment.html\">NavHostFragment</a></code> to <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/dynamicfeatures/fragment/DynamicNavHostFragment\">DynamicNavHostFragment</a></code> <li>Add an <code>app:moduleName</code> attribute to the destinations associated with a <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/dynamicfeatures/fragment/DynamicNavHostFragment\">DynamicNavHostFragment</a></code> </li> </li>\n    </ol> <p> For more information on dynamic navigation, see <a href=\"https://developer.android.com/guide/navigation/navigation-dynamic\">Navigate with dynamic feature modules</a> and <a href=\"https://github.com/android/app-bundle-samples/tree/master/DynamicFeatureNavigation\">check out the samples</a>. </p> <h2>NavBackStackEntry: Unlocked</h2> <p> When you navigate from one destination to the next, the previous destination and its latest state is placed on the Navigation back stack. If you return to the previous destination by using <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavController#popBackStack(kotlin.Int,%20kotlin.Boolean)\">navController.popBackBack()</a></code>, the top back stack entry is removed from the back stack with its state still intact and the <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavDestination\">NavDestination</a></code> is restored. The Navigation back stack contains all of the previous destinations that were needed to arrive at the current <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavDestination\">NavDestination</a></code>. <p> We manage the destinations on the Navigation back stack by encapsulating them into the <code><a href=\"https://developer.android.com/reference/androidx/navigation/NavBackStackEntry\">NavBackStackEntry</a></code> class. <code>NavBackStackEntry</code> is now public. This means that users can go a level deeper than just <code>NavDestinations</code> and gain access to navigation-specific <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/ViewModel\">ViewModel</a></code>s, <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/Lifecycle\">Lifecycle</a></code>s, and <a href=\"https://developer.android.com/reference/kotlin/androidx/savedstate/SavedStateRegistry\">SavedStateRegistries</a>. You can now properly scope data sharing or ensure it is destroyed at the appropriate time. <p> See <a href=\"https://developer.android.com/guide/navigation/navigation-navigate#back-stack\">Navigation and the back stack</a> for more information. </p> <h2>NavGraph ViewModels</h2> <p> Since a <code><a href=\"https://developer.android.com/reference/androidx/navigation/NavBackStackEntry\">NavBackStackEntry</a></code> is a <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/ViewModelProvider\">ViewModelProvider</a></code>, you can create a <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/ViewModel\">ViewModel</a></code> to share data between destinations at the <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavGraph\">NavGraph</a></code> level. Each parent navigation graph of all <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavDestination\">NavDestinations</a></code> are on the back stack, so your view model can be scoped appropriately: <pre class=\"prettyprint\">val viewModel: MyViewModel by navGraphViewModels(R.id.my_graph)\n</pre> <p> For more information on navGraph scoped view models, see <a href=\"https://developer.android.com/guide/navigation/navigation-programmatic#share_ui-related_data_between_destinations_with_viewmodel\">Share UI-related data between destinations with ViewModel</a> </p> <h2>Returning a Result from a destination</h2> <p> By combining <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/ViewModel\">ViewModel</a></code> and <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/Lifecycle\">Lifecycle</a></code>, you can share data between two specific destinations. To do this, <code><a href=\"https://developer.android.com/reference/androidx/navigation/NavBackStackEntry\">NavBackStackEntry</a></code> provides a <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/SavedStateHandle\">SavedStateHandle</a></code>, a key-value map that can be used to store and retrieve data, even across configuration changes. By using the given <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/SavedStateHandle\">SavedStateHandle</a></code>, you can access and pass data between destinations. For example to pass data from destination A to destination B: <p> In destination A: </p> <pre class=\"prettyprint\">override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n    val navController = findNavController();\n    // We use a String here, but any type that can be put in a Bundle is supported\n    navController.currentBackStackEntry?.savedStateHandle?.getLiveData&lt;String&gt;(\"key\")?.observe(\n        viewLifecycleOwner) { result -&gt;\n        // Do something with the result.\n    }\n}\n</pre> <p> And in destination B: </p> <pre class=\"prettyprint\">navController.previousBackStackEntry?.savedStateHandle?.set(\"key\", result)\n</pre> <p> See <a href=\"https://developer.android.com/guide/navigation/navigation-programmatic#returning_a_result\">Returning a result to the previous Destination</a> for more details. </p> <h2>Testing your Navigation Flow</h2> <p> Previously, the recommended testing solution for Navigation was Mockito. You would create a mock <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavController\">NavController</a></code> and verify that <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavController#navigate(kotlin.Int)\">navigate()</a></code> was called at the appropriate time with the correct parameters. Unfortunately, this solution was not enough to test certain areas of Navigation flow, such as <code><span style=\"text-decoration:underline;\">ViewModel</span></code> interaction or the Navigation back stack. The Navigation Library now offers a well-integrated solution for these areas with the Navigation Testing library. <p> The Navigation Testing library adds <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/testing/TestNavHostController\">TestNavHostController</a></code>, which gives access to the Navigation back stack in a test environment. This means that you can now verify the state of the entire back stack. When using the <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/testing/TestNavHostController\">TestNavHostController</a></code>, you can set your own <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/LifecycleOwner\">LifecycleOwner</a></code>, <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/LifecycleOwner\">ViewModelStoreOwner</a></code>, and <code><a href=\"https://developer.android.com/reference/kotlin/androidx/activity/OnBackPressedDispatcher\">OnBackPressDispatcher</a></code> by using the APIs given by <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavHostController.html\">NavHostController</a></code>. By setting these components, you can test them in the context of navigation. <p> For example, here's how to test a destination that uses a nav graph-scoped <code>ViewModel</code>: </p> <pre class=\"prettyprint\">val navController = TestNavHostController(ApplicationProvider.getApplicationContext())\n\n// This allows fragments to use by navGraphViewModels()\nnavController.setViewModelStore(ViewModelStore())\nnavController.setGraph(R.navigation.main_nav)\n</pre> <p> The <code>TestNavHostController</code> also lets you set the current destination. You can move the test directly to the use case being tested without the need to set it up using <code>navigate()</code> calls. This is extremely convenient for writing tests for different navigation scenarios. </p> <p> When setting the current destination, you might do something like the following: </p> <pre class=\"prettyprint\">val navController = TestNavHostController(ApplicationProvider.getApplicationContext())\n\nnavController.setGraph(R.navigation.main_nav)\nnavController.setCurrentDestination(R.id.destination_1)\n</pre> <p> Remember that when setting the current destination, that destination must be part of your nav graph. </p> <p> For more information about <code>TestNavHostController</code>, see the <a href=\"https://developer.android.com/guide/navigation/navigation-testing\">Test Navigation docs</a>. </p> <h2>Nav Deep Linking</h2> <p> Deep linking allows you to navigate directly to any destination no matter where you currently are in the <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavGraph\">NavGraph</a></code>. This can be very useful for launching your app to a specific destination or jumping between destinations that would otherwise be inaccessible to one another. <p> When navigating using a deep link, you can now provide deep link query parameters in any order and even leave them out altogether if they have been given a default value or have been made nullable. This means that if you have provided default values for all of the query parameters on a deep link, the deep link can match a URL pattern without including any query parameters. </p> <p> For example,<code> <strong>www.example.com?arg1={arg1}&amp;arg2={arg2}</strong></code> will now match with <strong><code>www.example.com</code></strong> as long as <code>arg1</code> and <code>arg2</code> have default values and/or are nullable. <p> Deep links can also be matched using intent actions and MIME types. Instead of requiring destinations to match by URI, you can provide the deep link with an action or MIME type and match with that instead. You can specify multiple match types for a single deep link, but note that <code><a href=\"https://developer.android.com/reference/java/net/URI?hl=en\">URI</a></code> argument matching is prioritized first, followed by <code>action</code>, and then <code>mimeType</code>. <p> You create a deep link by adding it to a destination in XML, using the <a href=\"https://developer.android.com/guide/navigation/navigation-kotlin-dsl#deep\">Kotlin DSL</a>, or by using the Navigation Editor in Android Studio. </p> <p> Here's how to add a deep link to a destination using XML: </p> <pre class=\"prettyprint\">&lt;fragment android:id=\"@+id/a\"\n          android:name=\"com.example.myapplication.FragmentA\"\n          tools:layout=\"@layout/a\"&gt;\n        &lt;deeplink app:url=\"www.example.com\"\n                app:action=\"android.intent.action.MY_ACTION\"\n                app:mimeType=\"type/subtype\"/&gt;\n    &lt;/fragment&gt;\n</pre> <p> Here's how to add the same deep link using the Kotlin DSL: </p> <pre class=\"prettyprint\">val baseUri = \"http://www.example.com/\"\n\nfragment&lt;MyFragment&gt;(nav_graph.dest.a) {\n   deepLink(navDeepLink {\n    uriPattern = \"${baseUri}\"\n    action = \"android.intent.action.MY_ACTION\"\n    mimeType = \"type/subtype\"\n   })\n}\n</pre> <p> You can also add the same deep link using the Navigation Editor in Android Studio versions 4.1 and higher. Note that you must also be using the Navigation 2.3.0-alpha06 dependency or later. \n              <center> \n               <a href=\"https://1.bp.blogspot.com/-pdWiqpW1gXw/XxiWRV0uTDI/AAAAAAAAPSs/yXRuANB1Jv4ylvxb3sez-dt44FXQRiVQACLcBGAsYHQ/s1600/Navigation%2B2020.png\" imageanchor=\"1\"><img style=\"width:600px\" border=\"0\" src=\"https://1.bp.blogspot.com/-pdWiqpW1gXw/XxiWRV0uTDI/AAAAAAAAPSs/yXRuANB1Jv4ylvxb3sez-dt44FXQRiVQACLcBGAsYHQ/s1600/Navigation%2B2020.png\" data-original-width=\"512\" data-original-height=\"285\" alt=\"An open dialog in the Navigation Editor for adding a deep link to a destination. There are options to add an URI, a MIME type, and an action, along with a checkBox to Auto Verify\" /></a> \n              </center> </p> <p id=\"imgCaption\"> Adding a deep link to a destination in the Navigation Editor </p><p> <p> To navigate to a destination using a deep link, you must first build a <code><span style=\"text-decoration:underline;\">NavDeepLinkRequest</span></code> and then pass that deep link request into the Navigation controller's call to <code><span style=\"text-decoration:underline;\">navigate()</span></code>: <pre class=\"prettyprint\">val deepLinkRequest = NavDeepLinkRequest.Builder\n        .fromUri(Uri.parse(\"http://www.example.com\"))\n        .setAction(\"android.intent.action.MY_ACTION\")\n        .setMimeType(\"type/subtype\")\n        .build()\nnavController.navigate(deeplinkRequest)\n</pre> <p> For more information on deep links, visit <a href=\"https://developer.android.com/guide/navigation/navigation-deep-link\">Create a deep link for a destination</a>, as well as the deep linking sections in <a href=\"https://developer.android.com/guide/navigation/navigation-navigate#uri\">Navigate to a destination</a> and <a href=\"https://developer.android.com/guide/navigation/navigation-kotlin-dsl#deep\">Kotlin DSL</a>. </p> <h2>Navigation Editor</h2> <p> Android Studio 4.0 includes new features for the Navigation Editor. You can now edit your destinations using a split pane view. This means you can edit the XML or design and see the changes in real time. \n                <center> \n                 <a href=\"https://3.bp.blogspot.com/-OrKSwU1pDp4/XxiW3r7JExI/AAAAAAAAPS0/X6ilvTUqRvMhqJKKqI-DHyEMeKEZy6BMgCLcBGAsYHQ/s1600/split-mode-screenshot.png\" imageanchor=\"1\"><img style=\"width: 600px\" border=\"0\" src=\"https://3.bp.blogspot.com/-OrKSwU1pDp4/XxiW3r7JExI/AAAAAAAAPS0/X6ilvTUqRvMhqJKKqI-DHyEMeKEZy6BMgCLcBGAsYHQ/s1600/split-mode-screenshot.png\" data-original-width=\"1600\" data-original-height=\"890\" alt=\"The Navigation Editor opened in split pane mode with the navigation.xml file on the left and the corresponding nav graph on the right. The nav graph has 6 destination, and a nested graph\" /></a> \n                </center> </p> <p id=\"imgCaption\"> Viewing a navigation.xml file in split view mode </p><p> <p> In Android Studio 4.1, the Navigation Editor introduced the component tree. This allows you to traverse the entire nav graph, freely going in and out of nested graphs. \n                 <center> \n                  <a href=\"https://4.bp.blogspot.com/-Vi4AOZ9oiGQ/XxiYmmZMvVI/AAAAAAAAPTA/9eJM-PBEoQ0PcKuY8337m9LXvmUJmcK9ACLcBGAsYHQ/s1600/new-component-tree.gif\" imageanchor=\"1\"><img style=\"width: 600px\" border=\"0\" src=\"https://4.bp.blogspot.com/-Vi4AOZ9oiGQ/XxiYmmZMvVI/AAAAAAAAPTA/9eJM-PBEoQ0PcKuY8337m9LXvmUJmcK9ACLcBGAsYHQ/s1600/new-component-tree.gif\" data-original-width=\"1600\" data-original-height=\"889\" alt=\"An open component tree of a nav graph in the Navigation Editor. It starts viewing the entire graph, then moves to the title screen before going into the nested profiles graph. After cycling through the destinations in the profiles graph, it goes back to fragments in the original graph\" /></a> \n                 </center> </p> <p> </p> <p id=\"imgCaption\"> Navigating through a graph in the Navigation Editor </p><p> <h2>Additional Changes</h2> <p> <code><a href=\"https://developer.android.com/reference/androidx/navigation/ui/NavigationUI?hl=en\">NavigationUI</a></code> can now use any layout that uses the <code><a href=\"https://developer.android.com/reference/kotlin/androidx/customview/widget/Openable?hl=en\">Openable</a></code> interface. This means that it is no longer limited to <code><a href=\"https://developer.android.com/reference/kotlin/androidx/drawerlayout/widget/DrawerLayout?hl=en\">DrawerLayout</a></code> and allows for customization of the <code><a href=\"https://developer.android.com/reference/androidx/navigation/ui/AppBarConfiguration?hl=en\">AppBarConfiguration</a></code>. You can provide your <code><a href=\"https://developer.android.com/reference/kotlin/androidx/customview/widget/Openable?hl=en\">Openable</a></code> and use it as the layout instead. <p> Navigation also provides support for Kotlin DSL. Kotlin DSL can be used to create different destinations, actions, or deep links. For more information see the <a href=\"https://developer.android.com/guide/navigation/navigation-kotlin-dsl\">documentation for Kotlin DSL</a>. </p> <h2>Wrap up</h2> <p> Navigation added lots of useful features over the past year. You can simplify your dynamic feature modules by taking advantage of the Dynamic Navigator library, use a <code>NavBackStackEntry</code> to help correctly scope your data, easily test your navigation flow using the <code>TestNavHostController</code>, or even match your deep link using intent actions and/or MIME types. </p> <p> For more information about the Jetpack Navigation library, check out the documentation at <a href=\"https://developer.android.com/guide/navigation\">https://developer.android.com/guide/navigation</a> </p> <p> Please provide feedback (or file bugs) using the <a href=\"http://www.issuetracker.google.com/issues?q=componentid:409828\">Navigation issuetracker component</a>. </p>\n                  <div class=\"feedflare\"> \n                   <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=FX5yH2GrOfU:EPlb0nJfe-s:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\" /></a> \n                   <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=FX5yH2GrOfU:EPlb0nJfe-s:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=FX5yH2GrOfU:EPlb0nJfe-s:-BTjWOF_DHI\" border=\"0\" /></a> \n                  </div><img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/FX5yH2GrOfU\" height=\"1\" width=\"1\" alt=\"\" /></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></img>\n</meta>","descriptionType":"html","publishedDate":"Thu, 23 Jul 2020 15:53:00 +0000","feedId":7,"bgimg":"https://4.bp.blogspot.com/-igLPrJ5bA8M/Xxi0yzegEAI/AAAAAAAAPTk/si7V5QsW_18fr_RGOr3SH-xrPdWqTYc-wCLcBGAsYHQ/s72-c/What%25E2%2580%2599s%2BNew%2Bin%2BNavigation%2B2020%2Bv02.png","linkMd5":"be9e5f3cac9816f1c7c1f53616ed82e0","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn8@2020_5/2020/08/11/15-45-08-592_6f09c23e44fdcf0e.webp","author":"Android Developers","articleImgCdnMap":{" ":null,"https://4.bp.blogspot.com/-igLPrJ5bA8M/Xxi0yzegEAI/AAAAAAAAPTk/si7V5QsW_18fr_RGOr3SH-xrPdWqTYc-wCLcBGAsYHQ/s1600/What%25E2%2580%2599s%2BNew%2Bin%2BNavigation%2B2020%2Bv02.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn20@2020_1/2020/08/11/15-45-08-775_6e430236862489d0.webp","https://3.bp.blogspot.com/-oO5hDxQNAJc/XxiUD9LVzhI/AAAAAAAAPSg/PiUNldhIeL0FipRFA2qsG76nHXqhKKF_ACLcBGAsYHQ/s1600/On%2BDemand%2BSample.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn92@2020_2/2020/08/11/15-45-08-679_34e070e7e034f540.webp","https://1.bp.blogspot.com/-pdWiqpW1gXw/XxiWRV0uTDI/AAAAAAAAPSs/yXRuANB1Jv4ylvxb3sez-dt44FXQRiVQACLcBGAsYHQ/s1600/Navigation%2B2020.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn76@2020_2/2020/08/11/15-45-08-675_8fc7d1562f62df3d.webp","https://3.bp.blogspot.com/-OrKSwU1pDp4/XxiW3r7JExI/AAAAAAAAPS0/X6ilvTUqRvMhqJKKqI-DHyEMeKEZy6BMgCLcBGAsYHQ/s1600/split-mode-screenshot.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn48@2020_2/2020/08/11/15-45-08-972_e16b3834602367e3.webp","https://4.bp.blogspot.com/-Vi4AOZ9oiGQ/XxiYmmZMvVI/AAAAAAAAPTA/9eJM-PBEoQ0PcKuY8337m9LXvmUJmcK9ACLcBGAsYHQ/s1600/new-component-tree.gif":null,"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx/cdn40@2020_5/2020/08/11/15-45-08-611_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=FX5yH2GrOfU:EPlb0nJfe-s:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx/cdn16@2020_6/2020/08/11/15-45-08-544_7e13e6f4cfa79adf.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/FX5yH2GrOfU":"https://cdn.jsdelivr.net/gh/myreaderx/cdn56@2020_2/2020/08/11/15-45-08-719_e2a1bf8fde844af4.webp"}}],"record":{"createdTime":"2020-08-11 23:44:58","updatedTime":"2020-08-11 23:44:58","feedId":7,"fetchDate":"Tue, 11 Aug 2020 15:44:58 +0000","fetchMs":28,"handleMs":3928,"totalMs":319689,"newArticles":0,"totalArticles":25,"status":1,"type":0,"ip":"63.33.90.8","hostName":"europe-020.herokuapp.com","requestId":"9f930b5425dd451a8b6d1cdf62c8b3fa_7","bgimgsTotal":3,"bgimgsGithubTotal":3,"articlesImgsTotal":22,"articlesImgsGithubTotal":17},"feed":{"createdTime":"2020-05-30 17:21:38","updatedTime":"2020-08-11 12:18:36","id":7,"name":"Android Developers Blog","url":"http://feeds.feedburner.com/blogspot/hsDu","subscriber":null,"website":null,"icon":"https://android-developers.googleblog.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx20/cdn4@2020_6/2020/08/11/15-44-57-741_06c39f49a8decbc7.ico","description":"An Open Handset Alliance Project.","weekly":null,"link":"http://android-developers.googleblog.com"},"extra4":{"start":1597160694719,"total":0,"statList":[{"spend":73,"msg":"获取xml内容"},{"spend":3928,"msg":"解释文章"},{"spend":1432,"msg":"上传封面图到cdn"},{"spend":7292,"msg":"修正封面图上传失败重新上传"},{"spend":306015,"msg":"正文链接上传到cdn"}]},"extra5":22,"extra6":17,"extra7ImgCdnFailResultVector":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"extra10_invalidATagHrefValue":{}}