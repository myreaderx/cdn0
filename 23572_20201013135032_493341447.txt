{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-13 21:50:29","updatedTime":"2020-10-13 21:50:29","title":"使用 Node.js 对文本内容分词和关键词抽取","link":"https://www.h5jun.com/post/segment-with-nodejs.html","description":"\n            <div class=\"toc\"></div><p>在讨论技术前先卖个萌，吃货的世界你不懂~~</p>\n<p><img src=\"https://p1.ssl.qhimg.com/t01ee4cb9bf6b602f75.png\" alt=\"\"></p>\n<!--more-->\n<p><a href=\"http://zcfy.cc/\">众成翻译</a>的文章有 tag，用户可以基于 tag 来快速筛选感兴趣的文章，文章也可以依照 tag 关联来进行相关推荐。但是现在众成翻译的 tag 是在推荐文章的时候设置的，都是英文的，而且人工设置难免不规范和不完全。虽然发布文章后也可以人工编辑，但是我们也不能指望用户或管理员能够时时刻刻编辑出恰当的 tag，所以我们需要用工具来自动生成 tag。</p>\n<p>在现在开源的分词工具里面，<a href=\"https://github.com/fxsjy/jieba\">jieba</a>是一个功能强大性能优越的分词组件，更幸运地是，它有 <a href=\"https://github.com/yanyiwu/nodejieba\">node 版本</a>。</p>\n<p>nodejieba 的安装和使用十分简单：</p>\n<pre><code class=\"hljs lang-undefined\">npm install nodejieba\n</code></pre>\n<pre><code class=\"hljs lang-js\"><span class=\"hljs-keyword\">var</span> nodejieba = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">\"nodejieba\"</span>);\n<span class=\"hljs-keyword\">var</span> result = nodejieba.cut(<span class=\"hljs-string\">\"帝国主义要把我们的地瓜分掉\"</span>);\n<span class=\"hljs-built_in\">console</span>.log(result);\n<span class=\"hljs-comment\">//[ '帝国主义', '要', '把', '我们', '的', '地', '瓜分', '掉' ]</span>\n\nresult = nodejieba.cut(<span class=\"hljs-string\">'土地，俺老孙的金箍棒在哪里？'</span>);\n<span class=\"hljs-built_in\">console</span>.log(result);\n<span class=\"hljs-comment\">//[ '土地', '，', '俺', '老', '孙', '的', '金箍棒', '在', '哪里', '？' ]</span>\n\nresult = nodejieba.cut(<span class=\"hljs-string\">'大圣，您的金箍棒就棒在特别配您的头型！'</span>);\n<span class=\"hljs-built_in\">console</span>.log(result); \n<span class=\"hljs-comment\">//[ '大圣','，','您','的','金箍棒','就','棒','在','特别','配','您','的','头型','！' ]</span>\n</code></pre>\n<p>我们可以载入自己的字典，在字典里给每个词分别设置权重和词性：</p>\n<p>编辑 <code>user.uft8</code></p>\n<pre><code class=\"hljs lang-stata\">地瓜 9999 <span class=\"hljs-keyword\">n</span>\n金箍 9999 <span class=\"hljs-keyword\">n</span>\n棒就棒在 9999\n</code></pre><p>然后通过 <code>nodejieba.load</code> 加载字典。</p>\n<pre><code class=\"hljs lang-js\"><span class=\"hljs-keyword\">var</span> nodejieba = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">\"nodejieba\"</span>);\n\nnodejieba.load({\n  userDict: <span class=\"hljs-string\">'./user.utf8'</span>,\n});\n\n<span class=\"hljs-keyword\">var</span> result = nodejieba.cut(<span class=\"hljs-string\">\"帝国主义要把我们的地瓜分掉\"</span>);\n<span class=\"hljs-built_in\">console</span>.log(result);\n<span class=\"hljs-comment\">//[ '帝国主义', '要', '把', '我们', '的', '地瓜', '分', '掉' ]</span>\n\nresult = nodejieba.cut(<span class=\"hljs-string\">'土地，俺老孙的金箍棒在哪里？'</span>);\n<span class=\"hljs-built_in\">console</span>.log(result);\n<span class=\"hljs-comment\">//[ '土地', '，', '俺', '老', '孙', '的', '金箍棒', '在', '哪里', '？' ]</span>\n\nresult = nodejieba.cut(<span class=\"hljs-string\">'大圣，您的金箍棒就棒在特别配您的头型！'</span>);\n<span class=\"hljs-built_in\">console</span>.log(result); \n<span class=\"hljs-comment\">//[ '大圣', '，', '您', '的', '金箍', '棒就棒在', '特别', '配', '您', '的', '头型', '！' ]</span>\n</code></pre>\n<p>除了分词以外，我们可以利用 nodejieba 提取关键词：</p>\n<pre><code class=\"hljs lang-js\"><span class=\"hljs-keyword\">const</span> content = <span class=\"hljs-string\">`\nHTTP、HTTP/2与性能优化\n\n本文的目的是通过比较告诉大家，为什么应该从HTTP迁移到HTTPS，以及为什么应该添加到HTTP/2的支持。在比较HTTP和HTTP/2之前，先看看什么是HTTP。\n\n什么是HTTP\nHTTP是在万维网上通信的一组规则。HTTP属于应用层协议，跑在TCP/IP层之上。用户通过浏览器请求网页时，HTTP负责处理请求并在Web服务器与客户端之间建立连接。\n\n有了HTTP/2，不使用雪碧图、压缩、拼接，也可以提升性能。然而，这不代表不应该使用这些技术。不过这已经清楚表明了我们从HTTP/1.1移动到HTTP/2的必要性。\n`</span>;\n\n<span class=\"hljs-keyword\">const</span> nodejieba = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">\"nodejieba\"</span>);\n\n<span class=\"hljs-keyword\">const</span> result = nodejieba.extract(content, <span class=\"hljs-number\">20</span>);\n\n<span class=\"hljs-built_in\">console</span>.log(result);\n</code></pre>\n<p>输出的结果类似下面这样：</p>\n<pre><code class=\"hljs lang-groovy\">[ { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'HTTP'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">140.8704516850025</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'请求'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">14.23018001394</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'应该'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">14.052171126120001</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'万维网'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">12.2912397395</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'TCP'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.739204307083542</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'1.1'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.739204307083542</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'Web'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.739204307083542</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'雪碧图'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.739204307083542</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'HTTPS'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.739204307083542</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'IP'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.739204307083542</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'应用层'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.2616203224</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'客户端'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.1926274509</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'浏览器'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">10.8561552143</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'拼接'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">9.85762638414</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'比较'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">9.5435285574</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'网页'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">9.53122979951</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'服务器'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">9.41204128224</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'使用'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">9.03259988558</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'必要性'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">8.81927328699</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'添加'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">8.0484751722</span> } ]\n</code></pre><p>我们添加一些新的关键词到字典里：</p>\n<pre><code class=\"hljs lang-undefined\">性能\nHTTP/2\n</code></pre><p>输出结果如下：</p>\n<pre><code class=\"hljs lang-groovy\">[ { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'HTTP'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">105.65283876375187</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'HTTP/2'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">58.69602153541771</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'请求'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">14.23018001394</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'应该'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">14.052171126120001</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'性能'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">12.61259281884</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'万维网'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">12.2912397395</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'IP'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.739204307083542</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'HTTPS'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.739204307083542</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'1.1'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.739204307083542</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'TCP'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.739204307083542</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'Web'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.739204307083542</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'雪碧图'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.739204307083542</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'应用层'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.2616203224</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'客户端'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.1926274509</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'浏览器'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">10.8561552143</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'拼接'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">9.85762638414</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'比较'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">9.5435285574</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'网页'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">9.53122979951</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'服务器'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">9.41204128224</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'使用'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">9.03259988558</span> } ]\n</code></pre><p>在这个基础上，我们采用白名单的方式过滤出一些可以作为 tag 的词：</p>\n<pre><code class=\"hljs lang-js\"><span class=\"hljs-keyword\">const</span> content = <span class=\"hljs-string\">`\nHTTP、HTTP/2与性能优化\n\n本文的目的是通过比较告诉大家，为什么应该从HTTP迁移到HTTPS，以及为什么应该添加到HTTP/2的支持。在比较HTTP和HTTP/2之前，先看看什么是HTTP。\n\n什么是HTTP\nHTTP是在万维网上通信的一组规则。HTTP属于应用层协议，跑在TCP/IP层之上。用户通过浏览器请求网页时，HTTP负责处理请求并在Web服务器与客户端之间建立连接。\n\n有了HTTP/2，不使用雪碧图、压缩、拼接，也可以提升性能。然而，这不代表不应该使用这些技术。不过这已经清楚表明了我们从HTTP/1.1移动到HTTP/2的必要性。\n`</span>;\n\n<span class=\"hljs-keyword\">const</span> nodejieba = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">\"nodejieba\"</span>);\n\nnodejieba.load({\n  userDict: <span class=\"hljs-string\">'./user.utf8'</span>,\n});\n\n<span class=\"hljs-keyword\">const</span> result = nodejieba.extract(content, <span class=\"hljs-number\">20</span>);\n\n<span class=\"hljs-keyword\">const</span> tagList = [<span class=\"hljs-string\">'HTTPS'</span>, <span class=\"hljs-string\">'HTTP'</span>, <span class=\"hljs-string\">'HTTP/2'</span>, <span class=\"hljs-string\">'Web'</span>, <span class=\"hljs-string\">'浏览器'</span>, <span class=\"hljs-string\">'性能'</span>];\n\n<span class=\"hljs-built_in\">console</span>.log(result.filter(item =&#62; tagList.indexOf(item.word) &#62;= <span class=\"hljs-number\">0</span>));\n</code></pre>\n<p>最后得到：</p>\n<pre><code class=\"hljs lang-groovy\">[ { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'HTTP'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">105.65283876375187</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'HTTP/2'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">58.69602153541771</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'性能'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">12.61259281884</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'HTTPS'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.739204307083542</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'Web'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">11.739204307083542</span> },\n  { <span class=\"hljs-string\">word:</span> <span class=\"hljs-string\">'浏览器'</span>, <span class=\"hljs-string\">weight:</span> <span class=\"hljs-number\">10.8561552143</span> } ]\n</code></pre><p>这就是我们想要的结果。</p>\n<p>以上就是分词库 nodejieba 基本的使用方法，在将来我们可以利用它对众成翻译发布的译文自动分析添加相应的 tag，以为各位译者和读者提供更好的用户体验。</p>\n<p>有任何问题，欢迎在讨论区讨论~</p>\n\n            ","descriptionType":"text/html","publishedDate":"Fri, 12 May 2017 08:56:14 +0000","feedId":23572,"bgimg":"https://p1.ssl.qhimg.com/t01ee4cb9bf6b602f75.png","linkMd5":"86e7e15839de5c0c359b96ccb8339fcc","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn12@2020_4/2020/10/13/13-50-31-380_d63bb911afa894d1.webp","destWidth":770,"destHeight":329,"sourceBytes":58681,"destBytes":16132,"author":"","articleImgCdnMap":{"https://p1.ssl.qhimg.com/t01ee4cb9bf6b602f75.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn12@2020_4/2020/10/13/13-50-31-380_d63bb911afa894d1.webp"},"publishedOrCreatedDate":1602597029991}],"record":{"createdTime":"2020-10-13 21:50:29","updatedTime":"2020-10-13 21:50:29","feedId":23572,"fetchDate":"Tue, 13 Oct 2020 13:50:29 +0000","fetchMs":6125,"handleMs":15641,"totalMs":32567,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"af32bc2b950854f7e62e0df470d818c9","hostName":"us-015*","requestId":"b6a813b0e41a4af3bdd8401be2aef25a_23572","contentType":"text/xml; charset=utf-8","totalBytes":16132,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":1,"articlesImgsGithubTotal":1,"successGithubMap":{"myreaderx27":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:30:47","updatedTime":"2020-10-13 06:40:32","id":23572,"name":"十年踪迹的博客","url":"https://www.h5jun.com/rss.html","subscriber":140,"website":null,"icon":"https://www.h5jun.com/favicon.ico","icon_jsdelivr":null,"description":"专注于前端开发","weekly":null,"link":"https://www.h5jun.com"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":16132,"tmpBodyImgCdnBytes":0,"tmpBgImgCdnBytes":0,"extra4":{"start":1602596999886,"total":0,"statList":[{"spend":14464,"msg":"获取xml内容"},{"spend":15641,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":0,"msg":"正文链接上传到cdn"}]},"extra5":1,"extra6":1,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://p1.ssl.qhimg.com/t01ee4cb9bf6b602f75.png","sourceStatusCode":200,"destWidth":770,"destHeight":329,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn12@2020_4/2020/10/13/13-50-31-380_d63bb911afa894d1.webp","sourceBytes":58681,"destBytes":16132,"targetWebpQuality":75,"feedId":23572,"totalSpendMs":2311,"convertSpendMs":13,"createdTime":"2020-10-13 21:50:30","host":"europe61*","referer":"https://www.h5jun.com/post/segment-with-nodejs.html","linkMd5ListStr":"86e7e15839de5c0c359b96ccb8339fcc,86e7e15839de5c0c359b96ccb8339fcc","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"57.3 KB","destSize":"15.8 KB","compressRate":"27.5%"}],"successGithubMap":{"myreaderx27":1},"failGithubMap":{}}