{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-13 14:08:50","updatedTime":"2020-10-13 14:08:50","title":"One-page resume in CSS3","link":"http://palagpat-coding.blogspot.com/2010/08/one-page-resume-in-css3.html","description":"<style type=\"text/css\">\n.caption {\n  font-weight:bold; margin:0; padding:0;\n}\n</style>\n\n<p>Recently, I came across a really nicely done <a href=\"http://www.scribd.com/doc/4633116/A-Very-Cool-One-Page-Resume\">one-page resume</a> on Scribd, and wanted to try to recreate it using the latest web technologies (no Adobe Acrobat, Microsoft Word, or OpenOffice allowed). Turns out with a few sprinklings of CSS3, it's pretty straightforward. Let's peel back the covers and take a look.</p>\n\n<a name='more'></a>\n\n<p>(If you want to skip straight to the result, you can <a href=\"http://buyog.com/code/resume.php\">click here</a>)</p>\n\n<h3>Planning</h3>\n<p>First, let's take a look at what features our exemplar uses that we want to try to emulate:</p>\n<ul>\n  <li>grid layout (header plus 2-column flow)</li>\n  <li>pseudo-tabular formatting (Experience and Education sections)</li>\n  <li>2-column bulleted list (Software section)</li>\n  <li>custom typeface on headings</li>\n</ul>\n\n<a name=\"grid\"><h3>Grid Layout</h3></a>\n<p>This one was actually pretty easy, and didn't require any sophisticated CSS hackery at all:</p>\n<pre class=\"brush: css\">\n/* set up a simple grid layout */\n.resume { width: 860px; margin: 0 auto; }\n.leftCol { width: 480px; }\n.leftCol, .rightCol { display: inline; float: left; padding-right: 20px; }\n/* end grid layout (see? I said it was simple) */\n</pre>\n\n<p>So we just set our <code>.resume</code> class to a specific width, then use the \"<code>margin: 0 auto</code>\" bit to center it horizontally on the page. We fix the width of the left column, set both left and right columns to float, and include 20px of padding to push them slightly apart. Simple, effective, and cross-browser compatible!</p>\n\n<a name=\"display-table\"><h3>Tables Without &lt;table&gt;</h3></a>\n<p>If asked, most modern web developers will tell you that the practice of using &lt;table&gt; tags to do page layout belongs back in the \"dark ages\" of the Internet, but there are some things that are really hard to do without it. Knowing this, the <abbr title=\"World-Wide Web Consortium\">W3C</abbr> gave us a really nice solution... the <a href=\"http://www.w3.org/TR/CSS2/tables.html#table-display\">CSS Table Model</a>. In a nutshell, it gives you three new values for the CSS <code>display</code> property: <code>table</code>, <code>table-row</code>, and <code>table-cell</code>. Used together, they can turn hackish markup like this:</p>\n\n<pre class=\"brush: html\">\n<table><tbody><tr valign=\"top\">\n  <td>2008&mdash;present</td>\n  <td>\n    <strong>Senior Computer Scientist</strong><br/>\n    <em>White Oak Technologies, Inc., Silver Spring MD</em>\n  </td>\n</tr></tbody></table>\n</pre>\n\n<p>... into this, slightly-more-verbose-but-less-hackish markup:</p>\n\n<pre class=\"brush: html\">\n<div style=\"display:table-row\">\n  <span style=\"display:table-cell\">2008&mdash;present</span>\n  <span style=\"display:table-cell\">\n    <strong>Senior Computer Scientist</strong><br/>\n    <em>White Oak Technologies, Inc., Silver Spring MD</em>\n  </span>\n</div>\n</pre>\n\n<p>Even better, we can employ some CSS class names and get basic semantics:</p>\n<pre class=\"brush: css\">\n/* new table-display style: works in pretty much all modern browsers except IE before v8 */\n.expJob, { display: table-row; }\n.expDate, .expDetail { display: table-cell; }\n.expDate { width: 7em; }\n.jobTitle { font-weight: bold; display: block; }\n.jobLoc { font-style: italic; }\n</pre>\n<pre class=\"brush: html\">\n<div class=\"expJob\">\n  <span class=\"expDate\">2008&mdash;present</span>\n  <span class=\"expDetail\">\n    <span class=\"jobTitle\">Senior Computer Scientist</span>\n    <span class=\"jobLoc\">White Oak Technologies, Inc., Silver Spring MD</span>\n  </span>\n</div>\n</pre>\n\n<p>So is this a <em>bleeding-edge</em>, CSS3 feature? Not actually, no. It's from CSS 2, and since Internet Explorer 8 was released, it's been supported in <a href=\"http://caniuse.com/#cats=CSS2\">all current-generation browsers</a>. As is often the case with these types of things, only IE6 &amp; 7 are the spoilsports. The thing is, though? <a href=\"http://shouldwebsiteslookthesameinallbrowsers.com/\">I'm not inclined to care that much</a> if my site looks a little different in some older versions of IE. The default, unstyled behavior isn't bad, it's still readable, just not quite as visually appealing:</p>\n\n<p class='caption'>Old and Busted:</p>\n<img src=\"http://buyog.com/code/images/blog_resume_exp0.png\"/>\n\n<p class='caption'>New Hotness:</p>\n<img src=\"http://buyog.com/code/images/blog_resume_exp1.png\"/>\n\n<p>This is an example of <a href=\"http://www.smashingmagazine.com/2009/08/04/designing-a-html-5-layout-from-scratch/\">Graceful Degradation</a> (albeit not a very impressive one), which is a pretty good idea to use when designing sites with features that aren't ubiquitous across all browsers.</p>\n\n<a name=\"liquid\"><h3>Liquid Columns</h3></a>\n<p>So after those last two, not-all-that-new CSS techniques, here's something that <em>is</em> a new CSS3 feature. So-called \"liquid\" layout basically just means that you write the content (say, a magazine article), then make it flow into the layout you want to give it later on. Historically this has been somewhat problematic in the Web world, but that's changing. One of the agents of that change comes in the form of the new <a href=\"http://www.w3.org/TR/css3-multicol/\">CSS Multi-column Layout Module</a>. In this instance, we want the bulletted list under the \"Software\" heading to flow across two columns, making better use of the space available in the resume's right column. This can be easily accomplished with two CSS properties, <code>column-count</code> and <code>column-gap</code> (currently, these are only in the latest releases of Firefox and Webkit-enabled browsers like Chrome and Safari, so we'll include the vendor-prefixed versions):</p>\n\n<pre class=\"brush: css\">\n/* new super-cool CSS3 multi-column layout;\n  only in Mozilla/Webkit for now,\n  but it degrades to a regular list just fine */\nul.software {\n  column-count: 2; column-gap: 2em;\n  -moz-column-count: 2; -moz-column-gap: 2em;\n  -webkit-column-count: 2; -webkit-column-gap: 2em;\n}\n</pre>\n<pre class=\"brush: html\">\n<ul class=\"software\">\n  <li>software</li>\n  <li>packages</li>\n  <li>I</li>\n  <li>grok</li>\n</ul>\n</pre>\n\n<p>Most browsers will render this as:</p>\n\n<p class='caption'>Non-liquid (single column):</p>\n<img src=\"http://buyog.com/code/images/blog_resume_list1.png\"/>\n\n<p>Current versions of Firefox and Webkit, which both support multi-column layout, will instead do this:</p>\n\n<p class='caption'>Liquid! (two columns):</p>\n<img src=\"http://buyog.com/code/images/blog_resume_list0.png\"/>\n\n<p>This is another case where the default behavior looks fine, and the new CSS features just make it a little bit nicer. The cool kids call this <a title=\"need a link here\">Progressive Enhancement</a>, which is really just Graceful Degradation seen from the other side of the river. The only difference in these two techniques is whether you design the enhanced behavior first and then patch the fallback rendering (graceful degradation), or design the default case first and then enhance it where possible (progressive enhancement).</p>\n\n<a name=\"font-face\"><h3>Fancy Font</h3></a>\n\n<p>Finally, let's take a look at our typefaces. In an inversion of their common perception as Johnny-come-latelies, <a href=\"http://reference.sitepoint.com/css/at-fontface\">Internet Explorer</a> has had the ability to include custom fonts in a web page for quite a few versions. This is a feature that the other browsers haven't fully embraced until fairly recently, and even now, every browser's implementation of the <code>font-face</code> at-rule is <em>just different enough</em> to cause anyone headaches. There's been quite a bit of traction in the past year, though, and I recently discovered a great site that has taken the collective findings of great web font pioneers like <a href=\"http://paulirish.com/2009/bulletproof-font-face-implementation-syntax/\">Paul Irish</a> and others to make custom web fontography <em>almost</em> (not quite, but almost) a no-brainer: <a href=\"http://www.fontsquirrel.com\">fontsquirrel.com</a>.</p>\n\n<p>Browsing FontSquirrel's list of <a href=\"http://www.fontsquirrel.com/fontface\">available free font kits</a>, I found <a href=\"http://www.fontsquirrel.com/fonts/ChunkFive\">ChunkFive</a>, which looks like a pretty good match for the font in the resume we're trying to match. FontSquirrel provides hundreds of @font-face kits for free download, so we just grab the <a href=\"http://www.fontsquirrel.com/fontfacedemo/ChunkFive\">kit for ChunkFive</a>, extract it to a folder on our web server, and link to it with a single line in our header:</p>\n\n<pre class=\"brush: html\">\n<!-- grab custom font-face, courtesy fontsquirrel.com (yay!) -->\n&lt;link rel=\"stylesheet\" href=\"/fonts/chunkfive/stylesheet.css\" type=\"text/css\" charset=\"utf-8\"/&gt;\n</pre>\n\n<p>With the cross-browser details abstracted away for us by this stylesheet, all it takes to use the new font is an ordinary CSS font property:</p>\n\n<pre class=\"brush: css\">\n.header h1 { font: 32pt/24pt 'ChunkFiveRegular', Arial, sans-serif; }\nh2 { font: 1.7em/1em 'ChunkFiveRegular', Arial, sans-serif; }\nh3 { font: 1.2em/1em 'ChunkFiveRegular', Arial, sans-serif; }\n</pre>\n\n<p>For any browser that doesn't support @font-face yet (notably including <a href=\"http://sixrevisions.com/css/font-face-guide/\">most mobile browsers</a>), the ChunkFive font kit suggests providing fallbacks to Arial and sans-serif, so we do just that. Just like that, we take the look of our resume from <em>blah</em>:</p>\n\n<img src=\"http://buyog.com/code/images/blog_resume_font0.png\" style=\"border:1px solid black;\"/>\n\n<p class='caption'>... to <em>Bam</em>:</p>\n<img src=\"http://buyog.com/code/images/blog_resume_font1.png\" style=\"border:1px solid black;\"/>\n\n<h3>Et Voila!</h3>\n\n<p>Having done all of the above, <a href=\"http://buyog.com/code/resume.php\">here's</a> my final product. (If you don't have a browser that supports off of these features, you can see a PDF version <a href=\"http://buyog.com/code/resume.pdf\">here</a>). If I had more time and creativity, I would have made a phony resume for <a href=\"http://en.wikipedia.org/wiki/Spider-Man\">Peter Parker</a> instead, but you get the idea.</p>\n\n<p>Once I'd gotten this far, I realized several things that would make it even better:</p>\n<ul>\n<li>It would've been pretty cool (although ultimately kind of pointless) to create the header logo on the fly in Canvas</li>\n<li>This format doesn't include the number of years of experience on skills / technologies / software</li>\n<li>It also doesn't have \"accomplishment\" bullets on experience / education sections.</li>\n<li>There should be a way to get a <em>full</em> list of jobs instead of just the few selected ones I chose here.</li>\n<li>Maybe add a Publications section (including this blog, of course)...?</li>\n<li>Use more semantic markup, in particular <a href=\"http://www.ablognotlimited.com/articles/getting-semantic-with-microformats-part-6-hresume/\">Microformats</a>.</li>\n</ul>\n\n<p>Microformats will give your data some computer-processable meaning, which sites like Google are <a href=\"http://microformats.org/wiki/google-search\">starting to use</a> to good effect. But we'll save that for another day. The rest of these quibbles are just stylistic choices, really. A one-page resume isn't designed to carry every single piece of information a potential employer or client needs to make a decision, it's to grab their attention. I think this does that job pretty well.</p>","descriptionType":"html","publishedDate":"Tue, 10 Aug 2010 15:29:00 +0000","feedId":28646,"bgimg":"http://buyog.com/code/images/blog_resume_exp0.png","linkMd5":"a77d1a240145f215c0310b53b1c19d6e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn34@2020_6/2020/10/13/06-09-52-887_7e05a71661d1de28.webp","destWidth":374,"destHeight":53,"sourceBytes":3654,"destBytes":3862,"author":"Rylee Corradini","articleImgCdnMap":{"http://buyog.com/code/images/blog_resume_exp0.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn34@2020_6/2020/10/13/06-09-52-887_7e05a71661d1de28.webp","http://buyog.com/code/images/blog_resume_exp1.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn19@2020_3/2020/10/13/06-10-54-415_4437849e51ef3e7f.webp","http://buyog.com/code/images/blog_resume_list1.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn3@2020_6/2020/10/13/06-09-55-633_839b342625e4af9b.webp","http://buyog.com/code/images/blog_resume_list0.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn12@2020_5/2020/10/13/06-10-54-289_35e711f4954b9672.webp","http://buyog.com/code/images/blog_resume_font0.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn16@2020_2/2020/10/13/06-09-54-770_6fd391887b22cc83.webp","http://buyog.com/code/images/blog_resume_font1.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn5@2020_3/2020/10/13/06-09-54-872_0dece815fcf8bd69.webp"},"publishedOrCreatedDate":1602569330996}],"record":{"createdTime":"2020-10-13 14:08:50","updatedTime":"2020-10-13 14:08:50","feedId":28646,"fetchDate":"Tue, 13 Oct 2020 06:08:50 +0000","fetchMs":136,"handleMs":19,"totalMs":124745,"newArticles":0,"totalArticles":25,"status":1,"type":0,"ip":"2147158baf8c40bd1b9393b0e552abc1","hostName":"us-034*","requestId":"057aba1b33df406ca648127d16460d60_28646","contentType":"application/atom+xml; charset=UTF-8","totalBytes":23172,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":6,"articlesImgsGithubTotal":6,"successGithubMap":{"myreaderx27":1,"myreaderx6":1,"myreaderx10":1,"myreaderx33":1,"myreaderx24":1,"myreaderx":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:44:42","updatedTime":"2020-09-07 04:48:30","id":28646,"name":"Palagpat Coding","url":"http://palagpat-coding.blogspot.com/feeds/posts/default","subscriber":113,"website":null,"icon":"http://palagpat-coding.blogspot.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn21@2020_4/2020/09/06/20-48-29-709_07c971f3b0cd652b.ico","description":"Fun with JavaScript, game theory, and the occasional outbreak of seriousness","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":3862,"tmpBodyImgCdnBytes":19310,"tmpBgImgCdnBytes":0,"extra4":{"start":1602569330837,"total":0,"statList":[{"spend":139,"msg":"获取xml内容"},{"spend":20,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":61545,"msg":"正文链接上传到cdn"}]},"extra5":6,"extra6":6,"extra7ImgCdnFailResultVector":[null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-55.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-004.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-015.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-016.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://buyog.com/code/images/blog_resume_exp0.png","sourceStatusCode":200,"destWidth":374,"destHeight":53,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn34@2020_6/2020/10/13/06-09-52-887_7e05a71661d1de28.webp","sourceBytes":3654,"destBytes":3862,"targetWebpQuality":75,"feedId":28646,"totalSpendMs":2761,"convertSpendMs":4,"createdTime":"2020-10-13 14:09:51","host":"europe-22*","referer":"http://palagpat-coding.blogspot.com/2010/08/one-page-resume-in-css3.html","linkMd5ListStr":"a77d1a240145f215c0310b53b1c19d6e,a77d1a240145f215c0310b53b1c19d6e","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.6 KB","destSize":"3.8 KB","compressRate":"105.7%"},{"code":1,"isDone":false,"source":"http://buyog.com/code/images/blog_resume_font1.png","sourceStatusCode":200,"destWidth":374,"destHeight":53,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn5@2020_3/2020/10/13/06-09-54-872_0dece815fcf8bd69.webp","sourceBytes":3654,"destBytes":3862,"targetWebpQuality":75,"feedId":28646,"totalSpendMs":1573,"convertSpendMs":7,"createdTime":"2020-10-13 14:09:54","host":"us-016*","referer":"http://palagpat-coding.blogspot.com/2010/08/one-page-resume-in-css3.html","linkMd5ListStr":"a77d1a240145f215c0310b53b1c19d6e","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.6 KB","destSize":"3.8 KB","compressRate":"105.7%"},{"code":1,"isDone":false,"source":"http://buyog.com/code/images/blog_resume_font0.png","sourceStatusCode":200,"destWidth":374,"destHeight":53,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn16@2020_2/2020/10/13/06-09-54-770_6fd391887b22cc83.webp","sourceBytes":3654,"destBytes":3862,"targetWebpQuality":75,"feedId":28646,"totalSpendMs":1517,"convertSpendMs":4,"createdTime":"2020-10-13 14:09:54","host":"europe67*","referer":"http://palagpat-coding.blogspot.com/2010/08/one-page-resume-in-css3.html","linkMd5ListStr":"a77d1a240145f215c0310b53b1c19d6e","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.6 KB","destSize":"3.8 KB","compressRate":"105.7%"},{"code":1,"isDone":false,"source":"http://buyog.com/code/images/blog_resume_list1.png","sourceStatusCode":200,"destWidth":374,"destHeight":53,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn3@2020_6/2020/10/13/06-09-55-633_839b342625e4af9b.webp","sourceBytes":3654,"destBytes":3862,"targetWebpQuality":75,"feedId":28646,"totalSpendMs":2414,"convertSpendMs":12,"createdTime":"2020-10-13 14:09:54","host":"us-015*","referer":"http://palagpat-coding.blogspot.com/2010/08/one-page-resume-in-css3.html","linkMd5ListStr":"a77d1a240145f215c0310b53b1c19d6e","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.6 KB","destSize":"3.8 KB","compressRate":"105.7%"},{"code":1,"isDone":false,"source":"http://buyog.com/code/images/blog_resume_list0.png","sourceStatusCode":200,"destWidth":374,"destHeight":53,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn12@2020_5/2020/10/13/06-10-54-289_35e711f4954b9672.webp","sourceBytes":3654,"destBytes":3862,"targetWebpQuality":75,"feedId":28646,"totalSpendMs":857,"convertSpendMs":13,"createdTime":"2020-10-13 14:10:54","host":"us-015*","referer":"http://palagpat-coding.blogspot.com/2010/08/one-page-resume-in-css3.html","linkMd5ListStr":"a77d1a240145f215c0310b53b1c19d6e","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.6 KB","destSize":"3.8 KB","compressRate":"105.7%"},{"code":1,"isDone":false,"source":"http://buyog.com/code/images/blog_resume_exp1.png","sourceStatusCode":200,"destWidth":374,"destHeight":53,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn19@2020_3/2020/10/13/06-10-54-415_4437849e51ef3e7f.webp","sourceBytes":3654,"destBytes":3862,"targetWebpQuality":75,"feedId":28646,"totalSpendMs":1291,"convertSpendMs":4,"createdTime":"2020-10-13 14:10:54","host":"europe67*","referer":"http://palagpat-coding.blogspot.com/2010/08/one-page-resume-in-css3.html","linkMd5ListStr":"a77d1a240145f215c0310b53b1c19d6e","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.6 KB","destSize":"3.8 KB","compressRate":"105.7%"}],"successGithubMap":{"myreaderx27":1,"myreaderx6":1,"myreaderx10":1,"myreaderx33":1,"myreaderx24":1,"myreaderx":1},"failGithubMap":{}}