{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-10 00:17:55","updatedTime":"2020-10-10 00:17:55","title":"安卓开发那些事之版本管理","link":"https://blog.bihe0832.com/android-dev-module-version.html","description":"<p>在前面介绍完框架以及自动构建等内容后，再讲版本就轻松很多了，相关的内容前面都断断续续涉及到了。这篇文章和组件化的关系不大，主要是讲应用的版本，包括版本怎么定义，有哪些标识，以及这些标识怎么生成，用于什么场景，解决什么问题。以及版本发布方法，遇到问题怎么回溯。</p> \n<p>这部分内容在自动构建里面其实有一些介绍，也阔以参考几年前总结SDK的时候写的一篇关于版本的文章：<a href=\"https://blog.bihe0832.com/sdk_experience_version.html\">SDK设计心得之版本</a></p> \n<h2 id=\"版本类型\">版本类型</h2> \n<ul> \n <li> <p>需要几个版本</p> <p>之前规划了三个版本，结果现在因为有各种便利的调试入口，所以基本上只有两个版本：</p> \n  <ul> \n   <li> <p>内测版：内测版提供各种调试入口，开启日志，可以自由切换到各种环境。主要用于内部体验和测试，</p> </li> \n   <li> <p>正式版：对外发布版本，不支持调试，不开日志。用于正式发布</p> </li> \n  </ul> </li> \n</ul> \n<h2 id=\"版本标示\">版本标示</h2> \n<h3 id=\"有哪些标识\">有哪些标识</h3> \n<ul> \n <li> <p>版本名和版本号</p> <p>版本基本上都是两个字段，版本号和版本名。版本名一般用于产品的版本定义，版本号用于版本升级等逻辑。很多项目的版本号都是通过版本名的String按照指定规则转化，因此需要手动维护。</p> <p>在组件化框架中，因为是自己从头搭建，因此我直接改为了使用应用代码的提交次数作为版本号，版本名可以自定义。</p> <p>由于组件化框架同时支持多个应用，那多个应用的版本怎么管理？其实只要明确了版本号和版本名的定位，无论是多少个应用，都不存在这个问题。</p> <p>当所有的开发逻辑都使用版本号，然后版本号自增，就不会有任何问题。例如PubA 和 PubB 同时发布版本，我们可能会先构建 PubA的版本，此时版本号可能是 2001， 版本名是 2.0.1；构建 PubB 时，版本号为2002，版本名为 1.0.1；版本名可能会有差异，但是版本号本质上还是自增的。也有人会追求版本号每发一个版本增加1，那不在这个讨论范围，而且也有别的方式可以做到，因为没有实际意义，所以不做讨论。</p> </li> \n <li> <p>版本TAG</p> <p>除了版本名和版本号，我们还设计了一个版本标示TAG，这个TAG主要用于标示版本与代码的关系。</p> <p>在持续集成时他分别以源码硬编码、配置文件打入版本包。同时正式发版本时对代码创建同名的TAG。</p> </li> \n</ul> \n<h3 id=\"使用场景\">使用场景</h3> \n<p>版本号和版本名主要用于区分版本，包括产品发布、不同版本兼容等。</p> \n<p>版本TAG主要用于遇到问题时，问题回溯。当提供某个版本的TAG后，我们就可以复原该版本对应的源码，更快的定位问题。</p> \n<h2 id=\"版本发布\">版本发布</h2> \n<p>版本发布主要包括两部分：</p> \n<ul> \n <li> <p>怎么发布</p> <p>对于发布遵循原则：灰度发布、可止血回退、可定向发布</p> </li> \n <li> <p>用户怎么更新</p> <p>对于提醒用户更新，我们提供强更、弹框两种模式</p> </li> \n</ul> \n<h3 id=\"版本发布流程\">版本发布流程</h3> \n<p>在版本通过持续集成构建成功以后，就进入了发布流程。我们对版本发布制定了对应的灰度流程，不同的应用发布标准不同，因此不列出我们具体的标准。</p> \n<ul> \n <li> <p>新版本发布灰度机制</p> \n  <table> \n   <thead> \n    <tr> \n     <th style=\"text-align: center\">灰度</th> \n     <th style=\"text-align: center\">灰度范围</th> \n     <th style=\"text-align: left\">前提</th> \n    </tr> \n   </thead> \n   <tbody> \n    <tr> \n     <td style=\"text-align: center\">小范围灰度</td> \n     <td style=\"text-align: center\">内测用户群</td> \n     <td style=\"text-align: left\">自测OK，可发布</td> \n    </tr> \n    <tr> \n     <td style=\"text-align: center\">大范围灰度</td> \n     <td style=\"text-align: center\">定向用户群</td> \n     <td style=\"text-align: left\">小范围灰度达标，或者超时未达标</td> \n    </tr> \n    <tr> \n     <td style=\"text-align: center\">官网灰度</td> \n     <td style=\"text-align: center\">官网包更新</td> \n     <td style=\"text-align: left\">大范围灰度达标</td> \n    </tr> \n    <tr> \n     <td style=\"text-align: center\">渠道灰度</td> \n     <td style=\"text-align: center\">所有渠道包更新</td> \n     <td style=\"text-align: left\">官网灰度达标</td> \n    </tr> \n    <tr> \n     <td style=\"text-align: center\">全量红点</td> \n     <td style=\"text-align: center\">所有用户</td> \n     <td style=\"text-align: left\">渠道灰度达标</td> \n    </tr> \n   </tbody> \n  </table> </li> \n <li> <p>版本异常止血回退处理流程</p> \n  <ul> \n   <li>大范围灰度及以前：撤回发布，重新出包并从小范围灰度重新灰度</li> \n   <li>官网灰度：官网回退到全量的最后一个包，重新出包并从小范围灰度重新灰度</li> \n   <li>渠道灰度及以后：若非紧急bug，重新出包并从小范围灰度重新灰度；若主流程异常，重新出包后大范围灰度通过直接将问题版本全部强更到新版本</li> \n  </ul> </li> \n</ul> \n<h3 id=\"用户更新方法\">用户更新方法</h3> \n<table> \n <thead> \n  <tr> \n   <th>更新类型</th> \n   <th>强制更新</th> \n   <th>可选更新</th> \n   <th>红点更新</th> \n   <th>无状态更新</th> \n   <th>最新版本</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>进入首页</td> \n   <td>弹框更新<br />侧边栏红点</td> \n   <td>弹框更新<br />侧边栏红点</td> \n   <td>侧边栏红点</td> \n   <td>无提示</td> \n   <td>无提示</td> \n  </tr> \n  <tr> \n   <td>进入关于页</td> \n   <td>弹框更新<br />版本更新提示发现新版本</td> \n   <td>弹框更新<br />版本更新提示发现新版本</td> \n   <td>版本更新提示发现新版本</td> \n   <td>无提示</td> \n   <td>无提示</td> \n  </tr> \n  <tr> \n   <td>点击检查更新</td> \n   <td>弹框更新</td> \n   <td>弹框更新</td> \n   <td>弹框更新</td> \n   <td>弹框更新</td> \n   <td>提示已经最新版</td> \n  </tr> \n </tbody> \n</table> \n<h4 id=\"更新效果\">更新效果</h4> \n<p>应用更新有两种类型，强制更新和可选更新；同时提供了是否立即更新以及取消更新。同时还提供了红点更新和无状态更新两种类型（这两种更新的更新方式和可选更新一致，仅提示方式有差异）。下面为不同更新的差异</p> \n<table> \n <thead> \n  <tr> \n   <th>更新类型</th> \n   <th>强制更新</th> \n   <th>可选更新</th> \n   <th>红点更新</th> \n   <th>无状态更新</th> \n   <th>最新版本</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>进入首页</td> \n   <td>弹框更新、版本红点</td> \n   <td>弹框更新、版本红点</td> \n   <td>版本红点</td> \n   <td>无提示</td> \n   <td>无提示</td> \n  </tr> \n  <tr> \n   <td>进入版本页</td> \n   <td>弹框更新<br />版本信息提示发现新版本</td> \n   <td>弹框更新<br />版本信息提示发现新版本</td> \n   <td>版本信息提示发现新版本</td> \n   <td>无提示</td> \n   <td>无提示</td> \n  </tr> \n  <tr> \n   <td>点击检查更新</td> \n   <td>弹框更新</td> \n   <td>弹框更新</td> \n   <td>弹框更新</td> \n   <td>弹框更新</td> \n   <td>提示已经最新版</td> \n  </tr> \n </tbody> \n</table> \n<p>下面结合具体弹框，介绍不同更新策略下弹框逻辑</p> \n<p><img src=\"https://blog.bihe0832.com/public/images/android_dev/update.png\" width=\"50%\" /></p> \n<h2 id=\"版本回溯\">版本回溯</h2> \n<p>版本回溯主要用于问题定位。这里涉及到两个内容：</p> \n<ol> \n <li> <p>怎么准确知道出现问题的版本</p> </li> \n <li> <p>怎么根据版本知道出现问题的代码</p> </li> \n</ol> \n<h3 id=\"版本确认\">版本确认</h3> \n<p>这个其实很简单，我们前面已经在代码和APK中通过自动构架加入了版本的信息。因此：</p> \n<ul> \n <li> <p>如果拿到的是版本的安装包，我们解压安装包，就可以拿到app.ini文件，里面记录了版本相关的信息</p> </li> \n <li> <p>如果是已经安装版本的用户反馈，我们提供了一个调试入口，用户点击即可把版本信息提供给我们</p> </li> \n</ul> \n<h3 id=\"代码回溯\">代码回溯</h3> \n<p>下面是一个我们拿到的版本信息的事例：</p> \n<div class=\"highlighter-rouge\">\n <div class=\"highlight\">\n  <pre class=\"highlight\"><code>用户信息: \nopenID: F83E0E59C7080121D00F3EA3E44CECFB\n\t\n设备信息: \ndeviceKey: 1204534990\n厂商&amp;型号: smartisan, OS105\n系统版本: 7.1.1, 25\n\t\n版本信息: \nversion: 3.2.0.4286\nTag: Tag_MNA_3.2.0_4286\nofficial: false\n</code></pre>\n </div>\n</div> \n<p>里面提供的版本信息就包含前面提到的版本TAG，根据TAG就可以获取对应的版本代码</p>","descriptionType":"text/html","publishedDate":"Sun, 23 Aug 2020 16:00:00 +0000","feedId":36509,"bgimg":"","linkMd5":"0552a7f705a36acdfa4619732cbf0f6e","bgimgJsdelivr":"","metaImg":"","author":"","articleImgCdnMap":{"https://blog.bihe0832.com/public/images/android_dev/update.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn14@2020_2/2020/10/09/16-18-15-131_4591837fd6ed338f.webp"},"publishedOrCreatedDate":1602260275377}],"record":{"createdTime":"2020-10-10 00:17:55","updatedTime":"2020-10-10 00:17:55","feedId":36509,"fetchDate":"Fri, 09 Oct 2020 16:17:55 +0000","fetchMs":6865,"handleMs":13,"totalMs":27866,"newArticles":0,"totalArticles":5,"status":1,"type":0,"ip":"d28287f36c8b0815640352f152cc1c11","hostName":"us-031*","requestId":"28f7f4e044aa433793f454d0eccfe2ea_36509","contentType":"text/xml","totalBytes":136310,"bgimgsTotal":0,"bgimgsGithubTotal":0,"articlesImgsTotal":1,"articlesImgsGithubTotal":1,"successGithubMap":{"myreaderx30":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 03:07:58","updatedTime":"2020-09-07 05:21:36","id":36509,"name":"子勰的博客","url":"http://blog.bihe0832.com/pages/atom.xml","subscriber":88,"website":null,"icon":"https://blog.bihe0832.com/public/img/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn70@2020_3/2020/09/06/21-21-36-274_86bcde927f4cee9a.ico","description":"屌丝程序猿，鸡血攻城狮；努力学技术，潜心做精品！","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":136310,"tmpBgImgCdnBytes":0,"extra4":{"start":1602260268498,"total":0,"statList":[{"spend":6866,"msg":"获取xml内容"},{"spend":13,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":19135,"msg":"正文链接上传到cdn"}]},"extra5":1,"extra6":1,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-019.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://blog.bihe0832.com/public/images/android_dev/update.png","sourceStatusCode":200,"destWidth":2314,"destHeight":2306,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn14@2020_2/2020/10/09/16-18-15-131_4591837fd6ed338f.webp","sourceBytes":905808,"destBytes":136310,"targetWebpQuality":75,"feedId":36509,"totalSpendMs":19118,"convertSpendMs":298,"createdTime":"2020-10-10 00:17:57","host":"us-019*","referer":"https://blog.bihe0832.com/android-dev-module-version.html","linkMd5ListStr":"0552a7f705a36acdfa4619732cbf0f6e","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"compressRate":"15%","sourceSize":"884.6 KB","destSize":"133.1 KB"}],"successGithubMap":{"myreaderx30":1},"failGithubMap":{}}