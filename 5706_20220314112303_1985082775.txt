{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2022-03-14 19:21:01","updatedTime":"2022-03-14 19:21:01","title":"被低估的border-image属性","link":"https://www.zhangxinxu.com/wordpress/?p=10308","description":"<p>by <a href=\"https://www.zhangxinxu.com/\">zhangxinxu</a> from <a href=\"https://www.zhangxinxu.com/wordpress/?p=10308\">https://www.zhangxinxu.com/wordpress/?p=10308</a> 鑫空间-鑫生活<br /> 本文欢迎分享与聚合，全文转载就不必了，尊重版权，圈子就这么大，若急用可以联系授权。</p> \n<p><script>window.wxShareImgUrl = 'https://www.zhangxinxu.com/study/image/share/202202-border-image.png';</script></p> \n<p>本文不讲具体的 <code>border-image</code> 语法，因为语法庞杂，不是我针对谁，是在座的所有个位都消化不了，所以，直指要害，讲讲那些只有 <code>border-image</code> 能够实现的事情，读完后发现 <code>border-image</code> 属性还是挺有一套的，则可以买本 <strong>CSS新世界</strong>，里面有对 <code>border-image</code> 语法非常细致的介绍。</p> \n<h3>一、从鸡肋华丽转身的转折点</h3> \n<p>在很长一段时间内，<code>border-image</code> 属性就是个鸡肋属性，有着非常怪异的渲染机制，需要把图切成 9 块，分别填充到边框的 9 个区域。</p> \n<p>几乎所有的 CSS 样式渲染属性，无论是渐变、圆角、盒阴影、滤镜还是混合模式，都可以从设计软件中找到对应的设置选项，唯一一个例外就是 <code>border-image</code>。</p> \n<p>为什么会出现这种现象呢？</p> \n<p>现在的小年轻肯定不知道背后的原因，容我来给大家讲讲。</p> \n<p>在 CSS3 还没有出现的年代，那个时候，所有的彩色效果、所有的圆角效果一定是PNG小图片实现的，例如，一些渐变按钮，还有一些渐变选项卡。</p> \n<p>当时，为了让这些图像可以适应足够多的文字，会通过特殊的切图，通过两层 HTML 标签嵌套，配合 <code>background-position</code> 属性实现。</p> \n<p>比方说下图就是当年实现1-7个字符宽度自适应选项卡使用的 PNG 小图片，中间有一段镂空：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202202/old-tab.png\" width=\"167\" height=\"27\" alt=\"自适应选项卡 PNG 图\" /></p> \n<p>HTML 结构是这样的：</p> \n<pre>&lt;a href class=\"outer\"&gt;\n    &lt;span class=\"inner\"&gt;选项卡&lt;/span&gt;\n&lt;/a&gt;</pre> \n<p>这个就是最终实现的效果：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202202/tab-affect.png\" width=\"90\" height=\"30\" alt=\"实现的选项卡效果\" /></p> \n<p>是不是很麻烦？无论是切图还是写代码？</p> \n<p>于是就催生了 <code>border-image</code> 属性，专门用来实现 PNG 小图片的内容自适应效果，只需要提供一个规整的（还是需要处理）的体积更小的图片，就可以实现任意字数的样式效果了。</p> \n<p>下面就是一些典型的案例：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202202/border-image-example.png\" width=\"306\" height=\"204\" alt=\"border-image典型应用\" /></p> \n<p>您可以狠狠地点击这里：<a href=\"https://demo.cssworld.cn/new/3/3-6.php\" target=\"_cssworld\" class=\"a_link\">border-image 设计初衷作用demo</a></p> \n<p>看起来 <code>border-image</code> 属性还有点用，但是大家仔细观察上面的效果图，很容易就会发现，这些所谓的自适应效果，圆角效果，特么直接 Gradient 渐变、<code>box-shadow</code> 盒阴影以及 <code>border-radius</code> 圆角就可以实现，代码简单易上手，关键是兼容性绝赞（IE10+支持），比 <code>border-image</code> 属性的兼容性（IE11+）还要好，资源开销也小，这就导致没有任何需要使用 <code>border-image</code> 的理由。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202202/border-image-s.png\" width=\"320\" height=\"192\" alt=\"border-image 效果被其他属性代替\" class=\"alignnone size-medium\" /></p> \n<p><code>border-image</code> 属性从此沦为了鸡肋，只在某些花里花哨的边框装饰场景还有一点使用价值（因为不得不使用图片）。</p> \n<p>然而，故事在这里并没有结束，随着时间的流逝，从 2012 年开始，在接下来1-2年的时间内，随着某一些新特性的支持，<code>border-image</code> 属性迎来了新生，开始在特定的场景下绽放出别样的竞争力。</p> \n<p>这个特性就是：</p> \n<ul> \n <li>2012年7月 Firefox 和 Safari 紧随 Chrome 浏览器的步伐对 <code>border-image</code> 新语法支持，包括：<code>border-image:fill</code> 和 <code>border-image-outset</code> 属性；</li> \n <li>2014年4月，Firefox 浏览器终于支持了 <code>border-image</code> 的渐变图像功能。</li> \n</ul> \n<p>这两个新变化让 <code>border-image</code> 属性迎来了新生，成为了一个被远远低估的 CSS 属性。</p> \n<h3>二、从简单的渐变边框说起</h3> \n<p>由于 <code>border-image</code> 支持了渐变图像，因此可以轻松实现其他 CSS 属性不太好实现的渐变边框效果。</p> \n<pre>&lt;p class=\"border-linear-gradient\"&gt;上下渐变边框&lt;/p&gt;\n&lt;p class=\"border-radial-gradient\"&gt;径向渐变边框&lt;/p&gt;\n</pre> \n<pre>.border-linear-gradient {\n    border-style: solid;\n    border-image: linear-gradient(deepskyblue, deeppink) 20 / 10px;\n}\n.border-radial-gradient {\n    border-style: solid;\n    border-image: radial-gradient(deepskyblue, deeppink) 20 / 10px;\n}</pre> \n<p>效果如下图所示：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202202/gradient-border.png\" width=\"300\" height=\"176\" alt=\"渐变边框\" /></p> \n<p>要想警示某一段内容存在风险，可以使用红色的条纹边框，代码如下：</p> \n<pre>&lt;div class=\"border-stripe\"&gt;我们可以使用红色条纹边框表示警示&lt;/div&gt;</pre> \n<pre>.border-stripe {\n    border: 12px solid;\n    border-image: repeating-linear-gradient(-45deg, red, red 5px, transparent 5px, transparent 10px) 12;\n}</pre> \n<p>MDN 一些废弃文档的警示边框就是使用 <code>border-image</code> 属性实现了，效果截图参见下方。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202202/pattern-border.png\" width=\"300\" height=\"64\" alt=\"红色斜纹警示边框\" /></p> \n<p>我们甚至可以用 <code>border-image</code> 属性重新定义元素的虚线边框，虚线的尺寸和虚实比例都可以随意控制，例如：</p> \n<pre>&lt;div class=\"border-dashed\"&gt;1:1的虚线&lt;/div&gt;</pre> \n<pre>.border-dashed {\n    border: 1px dashed deepskyblue;\n    border-image: repeating-linear-gradient(135deg, deepskyblue, deepskyblue 5px, transparent 5px, transparent 10px) 1;\n}</pre> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202202/dashed-border.png\" width=\"563\" height=\"118\" alt=\"兼容性一致的虚线边框\" /></p> \n<h3>三、反馈态中的应用</h3> \n<p>移动端开发者，可交互元素需要有点击反馈态，如下所示：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202202/2022-02-23_110059.png\" width=\"425\" height=\"151\" alt=\"反馈态效果示意\" /></p> \n<p>通常做法是：</p> \n<pre>a[href]:active, button:active {\n    background-image: linear-gradient(rgba(0,0,0,.05), rgba(0,0,0,.05));\n}</pre> \n<p>如果元素本身有 <code>background-image</code> 图形，我们还可以使用 <code>box-shadow</code> 属性模拟：</p> \n<pre>button:active {\n    box-shadow: inset 0 0 0 999px rgba(0,0,0,.05);\n}</pre> \n<p>如果盒阴影也被占用，则还有一招，那就是 <code>border-image</code>：</p> \n<pre>button:active {\n    border-image: linear-gradient(rgba(0,0,0,.05), rgba(0,0,0,.05)) 1 fill;\n}</pre> \n<p>特别适合无边框的场景，效果示意：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202202/button-active.gif\" width=\"252\" height=\"65\" alt=\"border-image按钮点击反馈\" /></p> \n<p>如果到这里就结束，那就太小儿科了，<code>border-image</code> 还有个厉害的子属性 <code>border-image-outset</code>，可以扩展边框图像的范围，这个可是个大杀器。</p> \n<p>先从我最近遇到的一个实际交互场景说起。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202202/input-active.gif\" width=\"333\" height=\"173\" alt=\"子项active穿透\" /></p> \n<p>描述为点击输入框，整个列表项出现反馈态，如果是点击其他位置，则没有任何反馈。</p> \n<p>如果是你，你会怎么实现？</p> \n<p>有一种做法是这样的：</p> \n<pre>.list:focus-within:active {\n    background-image: linear-gradient(rgba(0,0,0,.05), rgba(0,0,0,.05));\n}</pre> \n<p>但是，如果列表中同时有按钮，就会有问题，因为点击按钮的时候，也会触发此选择器的执行，这并不是我们希望的效果，这个时候，就轮到 <code>border-image</code> 属性出马的时候了。</p> \n<pre>list {\n    overflow: clip;    \n}\ninput:active {\n    border-image: linear-gradient(rgba(0,0,0,.05), rgba(0,0,0,.05)) 1 fill / / 100vw;\n}</pre> \n<p>对内 fill 填充，对外 outset 扩展，填满整个区域。</p> \n<h4>对比其他实现</h4> \n<ul> \n <li><code>background-image</code> 无法扩展；</li> \n <li><code>outline</code> 则是层级不对，会覆盖输入框的文字内容。 <pre>input:active {\n    outline: 199vw solid rgba(0,0,0,.05);\n    outline-offset: -999px;\n}</pre> <p><img src=\"https://image.zhangxinxu.com/image/blog/202202/outline-vs-border-image.gif\" width=\"331\" height=\"358\" alt=\"outline覆盖输入框文字示意\"> </img></p></li> \n <li><code>box-shadow</code> 层级在文字之下，不过需要要求元素不能有边框宽度，否则就会有部分区域的颜色镂空： <pre>input:active {\n    box-shadow: 0 0 0 199vw rgba(0,0,0,.05), inset 0 0 0 999px rgba(0,0,0,.05);\n}</pre> <p><img src=\"https://image.zhangxinxu.com/image/blog/202202/2022-02-23_151224.png\" width=\"330\" height=\"181\" alt=\"box-shadow边框问题\"> </img></p></li> \n</ul> \n<p>于是，综合来看，在这个场景中，<code>border-image</code> 属性属于最佳实现。</p> \n<h3>四、绝杀：在元素之外构建图像</h3> \n<p>在元素之外构建纯色有 <code>outline</code> 和 <code>box-shadow</code> 这两个对手，那如果有需求，希望在元素之外构建图像（甚至是元素显示），那么 <code>border-image</code> 属性就是个王炸。</p> \n<p>例如，希望在 <code>&lt;progress&gt;</code> 进度条上方同时显示进度数值，在不影响布局，不额外创建元素，兼容所有现代浏览器的方法一定只有 <code>border-image</code> 属性。</p> \n<pre>&lt;progress value=\".5\"&gt;&lt;/progress&gt;</pre> \n<pre>progress {\n    width: 300px; height: 6px;\n    --img: url(\"data:image/svg+xml,%3Csvg width='300' height='30' xmlns='http://www.w3.org/2000/svg'%3E%3Ctext x='50%25' y='50%25' font-size='14' fill='%232a80eb' font-family='system-ui, sans-serif' text-anchor='middle' dominant-baseline='middle'%3E50%%3C/text%3E%3C/svg%3E\");\n    border-image: var(--img) 0 fill / / 26px 0 0;\n}</pre> \n<p>效果如下截图所示：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202202/2022-02-23_160739.png\" width=\"472\" height=\"352\" alt=\"元素外显示数字\" /></p> \n<p>立足于实际开发，这种构建需要和 JS 配合，走组件模式，图像跟随元素实时动态生成，因为 <code>border-image</code> 在元素的任意位置（包括元素外）显示图像是有一些局限的。</p> \n<h4>局限</h4> \n<p>有如下局限：</p> \n<ul> \n <li>只能一个图像，极限是两个图像，使用 <code>cross-fade()</code> 图像函数；</li> \n <li>填充模式只能是拉伸，也就是 <code>border-image</code> 图像一定是拉伸填充元素区域，这使得图像尺寸和元素尺寸需要有匹配的对应关系，否则图像无法保持原始比例。 <p> 通常做法是通过 <code>border-image-width</code> 属性约束最中心填充区域的大小，使填充图像保持原始比例（见最后那个邮箱输入框验证的案例）。</p></li> \n <li>由于层级限制，无法在元素上方显示，会被内容覆盖。</li> \n <li>会影响原本边框的显示，如果同时需要有边框效果，需要使用 <code>box-shadow</code> 模拟边框。</li> \n</ul> \n<h4>总结</h4> \n<p>由于元素显示区域外的图像显示可以通过伪元素绝对定位实现，因此，<code>border-image</code> 处理区域外图像就适合用在不支持伪元素的 HTML 元素上，例如：<code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code>、<code>&lt;img&gt;</code>、<code>&lt;canvas&gt;</code>、<code>&lt;progress&gt;</code>、<code>&lt;video&gt;</code> 等元素。</p> \n<p>以及可以使用伪元素，但是不方便使用绝对定位、或者容器设置了 <code>overflow:hidden</code> 的场景，要知道，<code>border-image</code> 图像效果不会因为元素设置了 <code>overflow:hidden</code> 而不可见，同时不会占据额外的尺寸，也就是无论如何显示，都不会影响布局。</p> \n<h4>再演示个效果</h4> \n<p>这里再演示一个验证效果实现，先看下效果。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202202/input-valid-border-image.gif\" width=\"413\" height=\"54\" alt=\"边框图像模拟的验证\" /></p> \n<p>此效果纯 CSS 实现，单 <code>&lt;input&gt;</code> 标签实现：</p> \n<pre>邮箱：&lt;input type=\"email\" class=\"use-border\" placeholder=\"输入邮箱观察变化\" required&gt;</pre> \n<pre>[type=\"email\"] {\n    width: 240px; padding: 10px;\n    font-size: 100%;\n    border: 1px solid transparent;\n    background: #fff;\n    box-shadow: inset 0 0 0 1px #ccc;\n    outline: none;\n    --valid: url(\"data:image/svg+xml,%3Csvg...'/%3E%3C/svg%3E\");\n    --invalid: url(\"data:image/svg+xml,%3Csvg...%3E%3C/svg%3E\");\n}\n[type=\"email\"]:focus {\n    box-shadow: inset 0 0 0 1px #2a80eb;\n}\n.use-border {\n    /* 20px 图标尺寸，272 是输入框长度 262 + 10px 偏移 */\n    border-image: 0 fill / 9 0 9 272 / 0 30px 0 0;\n}\n.use-border:valid {\n    border-image-source: var(--valid);\n}\n.use-border:invalid:not(:placeholder-shown) {\n    border-image-source: var(--invalid);\n}</pre> \n<p>最关键的实现就是这么一句：</p> \n<pre>border-image: 0 fill / 9 0 9 272 / 0 30px 0 0;</pre> \n<p>其中：</p> \n<ul> \n <li>0 fill 表示不剪裁，直接填充到边框九宫格的中心位置；</li> \n <li>9 0 9 272 表示 <code>border-image-width</code>，用来确定一个 20 * 20 大小的中心区域，因为输入框高度 38px，宽度262px，图标偏移在右侧 30px 的地方，因此，才有右边框大小是 0，左边框大小是 272（262 – 20 + 30）;</li> \n <li>0 30px 0 0 表示 <code>border-image-outset</code> 扩展大小，这里只往右扩展了 30px 大小。</li> \n</ul> \n<p>这里例子有页面演示，眼见为实，您可以狠狠地点击这里：<a href=\"https://www.zhangxinxu.com/study/202202/css-input-border-image-valid-demo.php\" target=\"_blank\" class=\"a_link\">CSS border-image 实现输入框验证提示demo</a></p> \n<p>多嘴一句，如果图像是要外挂在元素的四个边角，则理解上要相对简单些，此时，通过利用九宫格 4 个边角实现即可，难点在于一开始的 <code>border-image-slice</code>，假设图像的原始尺寸是 200px * 200px，需要定位在右上角，以 20px 大小显示，则代码是这样的：</p> \n<pre>border-image: url(...) 200 200 0 0 / 20 20 0 0 / 0;</pre> \n<p>是不是有些不理解？那就对了，《CSS新世界》看起来，<code>border-image</code> 还是有些厉害的！</p> \n<h3>五、扯点其他的再结语</h3> \n<p>虽然不推荐，但是难免有人会遇到需要对 <code>&lt;img&gt;</code> 图像等替换元素进行点击反馈效果的实现，此时，本文提到的 3 种方法全部都是中国男足——凉凉！</p> \n<pre>img:active {\n    /* 看不见 */\n    background-image: linear-gradient(rgba(0,0,0,.05), rgba(0,0,0,.05));\n    /* 看不见 + 1*/\n    box-shadow: inset 0 0 0 999px rgba(0,0,0,.05);\n    /* 看不见 + 2 */\n    border-image: linear-gradient(rgba(0,0,0,.05), rgba(0,0,0,.05)) 1 fill;\n}</pre> \n<p>因为图像属于内容，层叠顺序比较高，此时可以使用滤镜实现：</p> \n<pre>img:active {\n    filter: brightness(.95);\n}</pre> \n<p>本文最后那个邮箱输入后面自动显示对应验证图标的案例其实也可以使用 <code>background-image</code> 模拟。</p> \n<pre>.use-background {\n    border-right-width: 30px;\n    background: no-repeat right / 20px 20px;\n    background-origin: border-box;\n}\n.use-background:valid {\n    background-image: var(--valid);\n}\n.use-background:invalid:not(:placeholder-shown) {\n    background-image: var(--invalid);\n}</pre> \n<p>不过这个实现虽然视觉上好像也 OK，但是，右侧的提示图标占据了布局空间，并且是输入框的一部分，点击是能够触发输入框的 focus 状态的，没有 <code>border-image</code> 实现的交互状态好。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202202/input-valid-vs-bg.gif\" width=\"367\" height=\"195\" alt=\"对比示意\" /></p> \n<p>好，以上就是本文的全部内容了。</p> \n<p>对了，最近在自己独立小说网站“<a href=\"http://riziyan.com/\" target=\"_riziyan\">日紫烟</a>”更新百万字长篇连载小说，轻小说带奇幻，欢迎品鉴，<a href=\"http://riziyan.com/category/maze/\" target=\"_riziyan\" class=\"a_link\">点击这里开始阅读</a>。</p> \n<p>感谢阅读，欢迎一键三连，哦，走错场了，不是视频，那欢迎分享，比心思密达！</p> \n<p><img src=\"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg\" width=\"20\" height=\"20\" align=\"absmiddle\" /></p> \n<p>本文为原创文章，欢迎分享，勿全文转载，如果实在喜欢，可收藏，永不过期，且会及时更新知识点及修正错误，阅读体验也更好。<br /> 本文地址：<a href=\"https://www.zhangxinxu.com/wordpress/?p=10308\">https://www.zhangxinxu.com/wordpress/?p=10308</a></p> \n<p>（本篇完）</p>","descriptionType":"html","publishedDate":"Fri, 25 Feb 2022 10:09:36 +0000","feedId":5706,"bgimg":"","linkMd5":"7c6edb67ea41a832161c667ba3030c44","bgimgJsdelivr":"","metaImg":"","author":"张 鑫旭","articleImgCdnMap":{"https://image.zhangxinxu.com/image/blog/202202/old-tab.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn57@2020_4/2022/03/14/11-21-05-198_c18289f30ed502d7.webp","https://image.zhangxinxu.com/image/blog/202202/tab-affect.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn32@2020_5/2022/03/14/11-21-07-429_f0f3b4dcad488546.webp","https://image.zhangxinxu.com/image/blog/202202/border-image-example.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn80@2020_5/2022/03/14/11-21-05-673_515282ad05d31907.webp","https://image.zhangxinxu.com/image/blog/202202/border-image-s.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn70@2020_1/2022/03/14/11-21-05-457_6fb0ae2117d1cc00.webp","https://image.zhangxinxu.com/image/blog/202202/gradient-border.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn76@2020_6/2022/03/14/11-21-05-174_4537b99739ec729a.webp","https://image.zhangxinxu.com/image/blog/202202/pattern-border.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn63@2020_2/2022/03/14/11-21-05-474_235f8cd1b06f0080.webp","https://image.zhangxinxu.com/image/blog/202202/dashed-border.png":null,"https://image.zhangxinxu.com/image/blog/202202/2022-02-23_110059.png":null,"https://image.zhangxinxu.com/image/blog/202202/button-active.gif":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn87@2020_5/2022/03/14/11-21-05-609_1db2044d6f8a6a79.webp","https://image.zhangxinxu.com/image/blog/202202/input-active.gif":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn34@2020_2/2022/03/14/11-21-05-842_a1d98cd30729a48c.webp","https://image.zhangxinxu.com/image/blog/202202/outline-vs-border-image.gif":"https://cdn.jsdelivr.net/gh/myreaderx/cdn52@2020_5/2022/03/14/11-21-05-866_d2fc2308b41c52a8.webp","https://image.zhangxinxu.com/image/blog/202202/2022-02-23_151224.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn92@2020_4/2022/03/14/11-21-05-713_f159691596785bff.webp","https://image.zhangxinxu.com/image/blog/202202/2022-02-23_160739.png":null,"https://image.zhangxinxu.com/image/blog/202202/input-valid-border-image.gif":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn56@2020_3/2022/03/14/11-21-06-046_1a1fcbe53493fe68.webp","https://image.zhangxinxu.com/image/blog/202202/input-valid-vs-bg.gif":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn67@2020_4/2022/03/14/11-21-05-370_3fdbdaab46fa5341.webp","https://image.zhangxinxu.com/image/emtion/emoji/2764.svg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn40@2020_5/2022/03/14/11-21-05-361_345d3ecc932d1a40.svg"},"publishedOrCreatedDate":1647256861514}],"record":{"createdTime":"2022-03-14 19:21:01","updatedTime":"2022-03-14 19:21:01","feedId":5706,"fetchDate":"Mon, 14 Mar 2022 11:21:01 +0000","fetchMs":2804,"handleMs":6,"totalMs":125515,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"245d88d7b2d8f26704713c23b090d029","hostName":"us-006*","requestId":"00fbdff823e74174b68fdb5d2f0be7f4_5706","contentType":"application/rss+xml; charset=UTF-8","totalBytes":250647,"bgimgsTotal":0,"bgimgsGithubTotal":0,"articlesImgsTotal":16,"articlesImgsGithubTotal":13,"successGithubMap":{"myreaderx7":1,"myreaderx15":1,"myreaderx27":1,"myreaderx32":1,"myreaderx10":1,"myreaderx11":1,"myreaderx33":1,"myreaderx13":1,"myreaderx1":1,"myreaderx5oss":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{"myreaderx23":1,"myreaderx31":1}},"feed":{"createdTime":"2020-08-25 04:30:15","updatedTime":"2020-09-01 11:15:46","id":5706,"name":"张鑫旭-鑫空间-鑫生活","url":"http://www.zhangxinxu.com/wordpress/feed/","subscriber":null,"website":null,"icon":"https://www.zhangxinxu.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn89@2020_1/2020/09/01/03-15-46-738_9a339309f46b07b8.ico","description":"提高前端技术，先从使用谷歌搜索做起","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2022-03-14 19:23:03","updatedTime":"2022-03-14 19:23:03","id":null,"feedId":5706,"linkMd5":"7c6edb67ea41a832161c667ba3030c44"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":250647,"tmpBgImgCdnBytes":0,"extra4":{"start":1647256858232,"total":0,"statList":[{"spend":3276,"msg":"获取xml内容"},{"spend":6,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":120267,"msg":"正文链接上传到cdn"}]},"extra5":16,"extra6":15,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202202/2022-02-23_110059.png","sourceStatusCode":200,"destWidth":425,"destHeight":151,"sourceBytes":7758,"destBytes":9054,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2109,"convertSpendMs":26,"createdTime":"2022-03-14 19:21:03","host":"us-019*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn44/contents/2022/03/14/11-21-05-566_5221dac5a316b8de.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 14 Mar 2022 11:21:05 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["AAD2:2295:212DBD8:4C36417:622F2521"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1647260075"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn44/contents/2022/03/14/11-21-05-566_5221dac5a316b8de.webp","historyStatusCode":[],"spendMs":31},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.6 KB","destSize":"8.8 KB","compressRate":"116.7%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202202/2022-02-23_110059.png","sourceStatusCode":200,"destWidth":425,"destHeight":151,"sourceBytes":7758,"destBytes":9054,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":998,"convertSpendMs":6,"createdTime":"2022-03-14 19:21:05","host":"europe61*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn44/contents/2022/03/14/11-21-06-480_5221dac5a316b8de.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 14 Mar 2022 11:21:06 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8318:D985:75BF248:7851E33:622F2522"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1647260075"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn44/contents/2022/03/14/11-21-06-480_5221dac5a316b8de.webp","historyStatusCode":[],"spendMs":155},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.6 KB","destSize":"8.8 KB","compressRate":"116.7%"},null,null,{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202202/2022-02-23_160739.png","sourceStatusCode":200,"destWidth":472,"destHeight":352,"sourceBytes":8994,"destBytes":20550,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1377,"convertSpendMs":32,"createdTime":"2022-03-14 19:22:03","host":"us-031*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn84/contents/2022/03/14/11-22-04-930_3fc8ffabafbba8f7.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 14 Mar 2022 11:22:04 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E39C:588C:FD2B5F:210A1B0:622F255C"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1647260081"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn84/contents/2022/03/14/11-22-04-930_3fc8ffabafbba8f7.webp","historyStatusCode":[],"spendMs":42},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.8 KB","destSize":"20.1 KB","compressRate":"228.5%"},null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-039.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-007.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-015.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-019.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-023.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-027.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202202/old-tab.png","sourceStatusCode":200,"destWidth":167,"destHeight":27,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn57@2020_4/2022/03/14/11-21-05-198_c18289f30ed502d7.webp","sourceBytes":812,"destBytes":564,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2005,"convertSpendMs":10,"createdTime":"2022-03-14 19:21:03","host":"us-034*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"812 B","destSize":"564 B","compressRate":"69.5%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202202/gradient-border.png","sourceStatusCode":200,"destWidth":300,"destHeight":176,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn76@2020_6/2022/03/14/11-21-05-174_4537b99739ec729a.webp","sourceBytes":14915,"destBytes":3222,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1960,"convertSpendMs":6,"createdTime":"2022-03-14 19:21:03","host":"europe61*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.6 KB","destSize":"3.1 KB","compressRate":"21.6%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn40@2020_5/2022/03/14/11-21-05-361_345d3ecc932d1a40.svg","sourceBytes":391,"destBytes":391,"feedId":5706,"totalSpendMs":2182,"convertSpendMs":0,"createdTime":"2022-03-14 19:21:03","host":"us-031*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"391 B","destSize":"391 B","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202202/pattern-border.png","sourceStatusCode":200,"destWidth":300,"destHeight":64,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn63@2020_2/2022/03/14/11-21-05-474_235f8cd1b06f0080.webp","sourceBytes":3789,"destBytes":7994,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2253,"convertSpendMs":7,"createdTime":"2022-03-14 19:21:03","host":"us-023*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.7 KB","destSize":"7.8 KB","compressRate":"211%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202202/input-valid-vs-bg.gif","sourceStatusCode":200,"destWidth":367,"destHeight":195,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn67@2020_4/2022/03/14/11-21-05-370_3fdbdaab46fa5341.webp","sourceBytes":48340,"destBytes":21024,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2239,"convertSpendMs":68,"createdTime":"2022-03-14 19:21:03","host":"europe-22*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.2 KB","destSize":"20.5 KB","compressRate":"43.5%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202202/button-active.gif","sourceStatusCode":200,"destWidth":252,"destHeight":65,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn87@2020_5/2022/03/14/11-21-05-609_1db2044d6f8a6a79.webp","sourceBytes":25419,"destBytes":10848,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2390,"convertSpendMs":88,"createdTime":"2022-03-14 19:21:03","host":"us-015*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.8 KB","destSize":"10.6 KB","compressRate":"42.7%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202202/border-image-s.png","sourceStatusCode":200,"destWidth":639,"destHeight":383,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn70@2020_1/2022/03/14/11-21-05-457_6fb0ae2117d1cc00.webp","sourceBytes":57975,"destBytes":31012,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2265,"convertSpendMs":20,"createdTime":"2022-03-14 19:21:03","host":"europe-23*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.6 KB","destSize":"30.3 KB","compressRate":"53.5%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202202/border-image-example.png","sourceStatusCode":200,"destWidth":306,"destHeight":204,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn80@2020_5/2022/03/14/11-21-05-673_515282ad05d31907.webp","sourceBytes":25265,"destBytes":10028,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2461,"convertSpendMs":13,"createdTime":"2022-03-14 19:21:03","host":"us-039*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.7 KB","destSize":"9.8 KB","compressRate":"39.7%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202202/2022-02-23_151224.png","sourceStatusCode":200,"destWidth":330,"destHeight":181,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn92@2020_4/2022/03/14/11-21-05-713_f159691596785bff.webp","sourceBytes":3659,"destBytes":5306,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2617,"convertSpendMs":16,"createdTime":"2022-03-14 19:21:03","host":"us-002*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.6 KB","destSize":"5.2 KB","compressRate":"145%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202202/input-active.gif","sourceStatusCode":200,"destWidth":333,"destHeight":173,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn34@2020_2/2022/03/14/11-21-05-842_a1d98cd30729a48c.webp","sourceBytes":95165,"destBytes":44966,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2684,"convertSpendMs":118,"createdTime":"2022-03-14 19:21:03","host":"us-53*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"92.9 KB","destSize":"43.9 KB","compressRate":"47.3%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202202/input-valid-border-image.gif","sourceStatusCode":200,"destWidth":413,"destHeight":54,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn56@2020_3/2022/03/14/11-21-06-046_1a1fcbe53493fe68.webp","sourceBytes":37607,"destBytes":9856,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2824,"convertSpendMs":165,"createdTime":"2022-03-14 19:21:03","host":"us-035*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.7 KB","destSize":"9.6 KB","compressRate":"26.2%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202202/outline-vs-border-image.gif","sourceStatusCode":200,"destWidth":331,"destHeight":358,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn52@2020_5/2022/03/14/11-21-05-866_d2fc2308b41c52a8.webp","sourceBytes":98425,"destBytes":104640,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2759,"convertSpendMs":280,"createdTime":"2022-03-14 19:21:03","host":"europe69*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"96.1 KB","destSize":"102.2 KB","compressRate":"106.3%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202202/tab-affect.png","sourceStatusCode":200,"destWidth":90,"destHeight":30,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn32@2020_5/2022/03/14/11-21-07-429_f0f3b4dcad488546.webp","sourceBytes":669,"destBytes":796,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2204,"convertSpendMs":9,"createdTime":"2022-03-14 19:21:05","host":"us-52*","referer":"https://www.zhangxinxu.com/wordpress/?p=10308","linkMd5ListStr":"7c6edb67ea41a832161c667ba3030c44","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"669 B","destSize":"796 B","compressRate":"119%"}],"successGithubMap":{"myreaderx7":1,"myreaderx15":1,"myreaderx27":1,"myreaderx32":1,"myreaderx10":1,"myreaderx11":1,"myreaderx33":1,"myreaderx13":1,"myreaderx1":1,"myreaderx5oss":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{"myreaderx23":1,"myreaderx31":1}}