{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-13 01:41:55","updatedTime":"2020-10-13 01:41:55","title":"使用React Hooks代替类的6大理由","link":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E4%BD%BF%E7%94%A8React%C2%A0Hooks%E4%BB%A3%E6%9B%BF%E7%B1%BB%E7%9A%846%E5%A4%A7%E7%90%86%E7%94%B1","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkVBia6ytYib2qTKG5DmlibVGSq1bZdUksYJEgeSW3zoGedFs507TGSzbicRCB6tVG9ywJZJKyE0L5zkicg?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n\n                    \n                    \n                    <section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\" data-mpa-powered-by=\"yiban.io\"><section style=\"text-align: left;\">\n\t\t<img data-ratio=\"0.6666666666666666\" data-type=\"jpeg\" data-w=\"1920\" style=\"width: 100%; border-radius: 4px; margin-bottom: 25px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkVBia6ytYib2qTKG5DmlibVGSqQB5GTC4kfzEAQOml8cvpdV7G1WjlTbtmvhfAKtIia1Fg9VkMulzzvgQ/640?wx_fmt=jpeg\">\n\t</section><section style=\"font-size: 14px;color: rgb(145, 145, 145);text-align: left;line-height: 1em;margin-top: 13px;padding-left: 14px;\">\n\t\t作者 | Dilantha Prasanjith\t</section><section style=\"font-size: 14px;color: rgb(145, 145, 145);text-align: left;line-height: 1em;margin-top: 13px;padding-left: 14px;\">\n\t\t译者 | 王强\t</section><section style=\"font-size: 14px;color: rgb(145, 145, 145);text-align: left;line-height: 1em;margin-top: 13px;padding-left: 14px;\">\n\t\t策划 | 李俊辰\t</section><section style=\"font-size: 15px;line-height: 27px;color: rgb(89, 89, 89);background-color: rgb(239, 239, 239);padding: 19px;margin-top: 40px;margin-right: 8px;margin-left: 8px;\">\n\t\tReact hooks 已经出来有一段时间了，但是许多 React 开发人员对它们的态度并不是很积极。我发现这背后主要有两个原因。第一个原因是许多 React 开发人员已经参与了一个大型项目，需要付出巨大的努力才能迁移整个代码库。另一个原因是大家对 React 类已经很熟悉了。有足够经验的话，继续使用类会感到更自在。\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">在本文中，我们将探讨考虑使用 React Hooks 的六个原因。</p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>1. 扩展函数式组件时，不必将其重构为类组件</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">经常会有这种情况，那就是一个 React 组件从一个函数式组件开始开发，一开始这个函数式组件只依赖 props，后来演变为具有状态的类组件。从函数式组件更改为类组件需要一些重构工作，具体取决于组件的复杂程度。</p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">使用 React Hooks 时，由于函数式组件具有进入状态的能力，因此重构工作会非常少。来看以下示例，这是一个哑组件，它会显示一个带有计数的标签。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">export</span> <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 188px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">function</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">ShowCount</span>(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">props</span>) </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> (<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span> <br mpa-from-tpl=\"t\">      <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span> Count : {props.count} <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span><br mpa-from-tpl=\"t\">  );<br mpa-from-tpl=\"t\">}</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: center;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">ShowCount 函数式组件</span><br></p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">假设我们需要通过点击鼠标来增加计数，并假设这只会影响这一个组件。第一步，我们需要将状态引入组件。我们看一下如何使用基于类的方法。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">export</span> <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 289px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">ShowCount</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">React</span>.<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">Component</span> </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 80px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">constructor</span>(props) {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">super</span>(props);<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.state = {<br mpa-from-tpl=\"t\">      <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">count</span>: <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 7px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">0</span><br mpa-from-tpl=\"t\">    };<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  componentDidMount() {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.setState({<br mpa-from-tpl=\"t\">      <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">count</span>: <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.props.count<br mpa-from-tpl=\"t\">    })<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  render() {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> (<br mpa-from-tpl=\"t\">      <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span> <br mpa-from-tpl=\"t\">        <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 28px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span> Count : {this.state.count} <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span><br mpa-from-tpl=\"t\">      <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 21px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span><br mpa-from-tpl=\"t\">    );<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\"><br mpa-from-tpl=\"t\">}</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: center;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">引入状态后的 ShowCount 组件</span><br></p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">如果使用 hooks，则相同的组件会是下面这样。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">export</span> <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 188px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">function</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">ShowCount</span>(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">props</span>) </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> [count, setCount] = useState();<br mpa-from-tpl=\"t\">  useEffect(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 37px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> =&gt;</span> {<br mpa-from-tpl=\"t\">    setCount(props.count);<br mpa-from-tpl=\"t\">  }, [props.count]);<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> (<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span><br mpa-from-tpl=\"t\">      <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span> Count : {count} <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span><br mpa-from-tpl=\"t\">  );<br mpa-from-tpl=\"t\">}</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: center;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">带 hooks 的 ShowCount 组件</span><br></p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>2. 你不必再担心“this”了</span>\n\t</section><blockquote style=\"margin-top: 0px;margin-bottom: 0px;padding-top: 0px;padding-left: 0px;border-left: none;\"><p style=\"font-size: 16px;white-space: pre-line;line-height: 1.75em;margin-top: 27px;padding-right: 20px;padding-left: 20px;color: rgb(91, 172, 235);\">人类和机器都会因为类而困惑。</p><span style=\"display: block;clear: both;\"></span></blockquote><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">上面这句话来自 React 文档。造成这种混乱的原因之一是 this 关键字。如果你熟悉 JavaScript，就会知道 JavaScript 中的 this 与其他语言并不完全一样。但在 React Hooks 这边，你完全不必操心 this 了。这对初学者和经验丰富的开发人员来说都是有益的。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img data-ratio=\"0.675\" data-type=\"png\" data-w=\"1400\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVBia6ytYib2qTKG5DmlibVGSqPILibtykXZrwRdiaTJCCmCqYjdaaqdwgEscycuvDmstnCYGXKZsoZjkg/640?wx_fmt=png\"></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: center;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">分别使用 hooks 与类访问状态的对比</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">根据上面的示例，你可以看到访问状态时我们不再需要使用“this”。这样大家就都不会感到困惑了。</p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>3. 不再有方法绑定</span>\n\t</section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">现在，对于前面提到的那个 ShowCount 组件，我们将引入一种方法，当用户单击标签时，该方法可以更新状态计数。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">export</span> <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 289px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">ShowCount</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">React</span>.<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">Component</span> </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 80px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">constructor</span>(props) {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">super</span>(props);<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.state = {<br mpa-from-tpl=\"t\">      <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">count</span>: <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 7px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">0</span><br mpa-from-tpl=\"t\">    };<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.handleClickEvent = <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.handleClickEvent.bind(<span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>);<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  componentDidMount() {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.setState({<br mpa-from-tpl=\"t\">      <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">count</span>: <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.props.count<br mpa-from-tpl=\"t\">    });<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  handleClickEvent() {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.setState({<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">count</span>: <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.state.count + <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 7px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">1</span>});<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  render() {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> (<br mpa-from-tpl=\"t\">      <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span><br mpa-from-tpl=\"t\">        <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 267px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span> <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">onClick</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 166px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{this.handleClickEvent}</span> &gt;</span> Count : {this.state.count} <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span><br mpa-from-tpl=\"t\">      <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 21px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span><br mpa-from-tpl=\"t\">    );<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">}</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: center;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">具有 Click 事件处理程序的 ShowCount 组件</span><br></p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">我们引入了 handleClickEvent 方法。要使用它，首先我们必须将其绑定到该组件的 this 上。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.handleClickEvent = <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.handleClickEvent.bind(<span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>);</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">我们必须这样做，因为执行方法时的执行上下文是不一样的。对于初学者来说，这可能有点难以理解。<br></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">除了绑定所有方法之外，还有一些语法提案可以解决这个问题：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://babeljs.io/docs/en/babel-plugin-transform-class-properties/</span></p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">例如，我们可以将这个函数重写为一个箭头函数。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 173px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 115px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">handleClickEvent</span> = <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> =&gt;</span> {<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.setState({count: <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.state.count + <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 8px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">1</span>});<br mpa-from-tpl=\"t\">}</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">让我们看看如何使用 hooks 实现相同的功能。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">export</span> <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 188px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">function</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">ShowCount</span>(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">props</span>) </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> [count, setCount] = useState();<br mpa-from-tpl=\"t\">  useEffect(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 37px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> =&gt;</span> {<br mpa-from-tpl=\"t\">    setCount(props.count);<br mpa-from-tpl=\"t\">  }, [props.count]);<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 202px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">function</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 116px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">handleClickEvent</span>(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 0px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"></span>) </span>{<br mpa-from-tpl=\"t\">    setCount(count + <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 8px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">1</span>);<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> (<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span><br mpa-from-tpl=\"t\">      <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 224px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span> <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">onClick</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 130px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{handleClickEvent}</span>&gt;</span> Count : {count} <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span><br mpa-from-tpl=\"t\">  );<br mpa-from-tpl=\"t\">}</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: center;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">hooks 中带有事件处理程序的 ShowCount 组件</span><br></p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">如你所见，我们只添加了这个函数。另外你可能会注意到，当我们使用事件处理程序时，已经在模板中删掉了 this。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\">onClick={ handleClickEvent }</code></pre></section><section style=\"text-align: center;\"><span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>4. 更容易分离逻辑与 UI，从而使两者都更加可重用</span>\n\t<br></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">使用 hooks 时，逻辑和 UI 更容易分离。无需 HOC 或渲染 props。hooks 用更少的样板和更直观的 UI 和逻辑组合来优雅地做到这一点。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">当使用 Bit 之类的工具和平台共享组件时，这种“优雅的分离”尤其重要，因为每个（独立共享的）组件在不同应用程序之间都会更容易理解、维护和重用。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: center;\"><img data-ratio=\"0.52625\" data-type=\"gif\" data-w=\"800\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/XIibZ0YbvibkVBia6ytYib2qTKG5DmlibVGSqSOqv3wE0lZ6UnvtPL78gCtPpIPpNfUt5I7RrZN87odBcNOHGppWH5w/640?wx_fmt=gif\"></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: center;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">Bit.dev 上的共享 React 组件</span></p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>5. 将相关逻辑放在同一位置</span>\n\t</section><blockquote style=\"margin-top: 0px;margin-bottom: 0px;padding-top: 0px;padding-left: 0px;border-left: none;\"><p style=\"font-size: 16px;white-space: pre-line;line-height: 1.75em;margin-top: 27px;padding-right: 20px;padding-left: 20px;color: rgb(91, 172, 235);\">复杂的组件会变得难以理解。</p><span style=\"display: block;clear: both;\"></span></blockquote><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">使用基于类的方法，我们会有不同的生命周期方法，例如 componentDidMount 和 componentDidUpdate 等。让我们考虑一种情况，就是在 componentDidMount 中订阅服务 A 和 B，然后在 componentWillUnmount 中取消订阅它们。随着时间的流逝，两种生命周期方法中都会包含许多逻辑，并且很难跟踪挂载与卸载过程中哪些部分是相关联的。</p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">为了演示这一点，我们来创建一个基于 RxJs 的服务来获取计数。我们将使用这个服务来更新 ShowCount 示例中的计数。请注意，由于不再需要在 click 事件中更新组件，我们将删除 handleClickEvent。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">import</span> { Subject } <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">from</span> <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"rxjs\"</span>;<br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">export</span> <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 152px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">function</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">getCounts</span>(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 0px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"></span>) </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> subject = <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 21px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">new</span> Subject();<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">let</span> count = <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 7px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">0</span>;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> interval = setInterval(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> =&gt;</span> {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">if</span> (count &gt; <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">10</span> || subject.isStopped) {<br mpa-from-tpl=\"t\">      clearInterval(interval);<br mpa-from-tpl=\"t\">      subject.complete();<br mpa-from-tpl=\"t\">    }<br mpa-from-tpl=\"t\">    subject.next(count++);<br mpa-from-tpl=\"t\">  }, <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">1000</span>);<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> subject;<br mpa-from-tpl=\"t\">}</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;text-align: center;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">getCounts 函数</span><br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">import</span> { getCounts } <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">from</span> <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 144px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"./reactive-service\"</span>;<br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">export</span> <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 188px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">function</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">ShowCount</span>(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">props</span>) </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> [count, setCount] = useState();<br mpa-from-tpl=\"t\">  useEffect(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 37px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> =&gt;</span> {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> countServiceSubject = getCounts();<br mpa-from-tpl=\"t\">    countServiceSubject.subscribe(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 73px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">count</span>) =&gt;</span> {<br mpa-from-tpl=\"t\">      setCount(count);<br mpa-from-tpl=\"t\">    });<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> =&gt;</span> {<br mpa-from-tpl=\"t\">      countServiceSubject.unsubscribe();<br mpa-from-tpl=\"t\">    };<br mpa-from-tpl=\"t\">  }, []);<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> (<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span><br mpa-from-tpl=\"t\">      <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span> Count : {count} <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span><br mpa-from-tpl=\"t\">  );<br mpa-from-tpl=\"t\">}</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;text-align: left;\">带有 Effect hook 中 getCounts 方法的 ShowCount 组件你可以看到在 useEffect 内部，我们包括了订阅以及相应的取消订阅逻辑。同样，如果我们需要引入更多的服务订阅或不相关的逻辑，则可以添加多个 useEffect 块，在逻辑上分离不同的关注点。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">import</span> { getCounts } <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">from</span> <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 144px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"./reactive-service\"</span>;<br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">export</span> <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 188px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">function</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">ShowCount</span>(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">props</span>) </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> [count, setCount] = useState();<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> [secondCount, setSecondCount] = useState(<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 7px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">0</span>);<br mpa-from-tpl=\"t\">  useEffect(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 37px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> =&gt;</span> {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> countServiceSubject = getCounts();<br mpa-from-tpl=\"t\">    countServiceSubject.subscribe(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 73px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">count</span>) =&gt;</span> {<br mpa-from-tpl=\"t\">      setCount(count);<br mpa-from-tpl=\"t\">    });<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> =&gt;</span> {<br mpa-from-tpl=\"t\">      countServiceSubject.unsubscribe();<br mpa-from-tpl=\"t\">    };<br mpa-from-tpl=\"t\">  }, []);<br mpa-from-tpl=\"t\">  useEffect(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 37px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> =&gt;</span> {<br mpa-from-tpl=\"t\">    setSecondCount(secondCount + <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 7px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">1</span>);<br mpa-from-tpl=\"t\">  }, []);<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> (<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span><br mpa-from-tpl=\"t\">      <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span> Count : {count} <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span><br mpa-from-tpl=\"t\">      <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span> Second Count: {secondCount} <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span><br mpa-from-tpl=\"t\">  );<br mpa-from-tpl=\"t\">}</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: center;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">多个 useEffect 块可分离不相关的逻辑</span><br></p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>6. 在组件之间共享状态逻辑</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">使用基于类的方法时，我们很难在组件之间共享状态逻辑。考虑两个组件，这两个组件都必须从两个不同的数据源获取、排序和显示数据。即使两个组件具有相同的功能，它们之间也很难共享逻辑，因为这些组件具有不同的源和状态。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">虽然我们可以使用渲染 props 和高阶组件来解决这个问题，但由于我们必须重构组件，这会引入额外的成本，到头来会变得更麻烦。</p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>React Hooks 又是怎么做的呢？</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">使用自定义 React Hooks，你可以提取这些可重用的状态逻辑并分别测试它们。</p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">我们可以从 ShowCount 示例中提取一个自定义 hook。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">import</span> { useState, useEffect } <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">from</span> <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 50px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"react\"</span>;<br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">export</span> <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 246px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">function</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">useCount</span>(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 102px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">serviceSubject</span>) </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> [count, setCount] = useState();<br mpa-from-tpl=\"t\">  useEffect(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 37px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> =&gt;</span> {<br mpa-from-tpl=\"t\">    serviceSubject.subscribe(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 73px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 37px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">count</span>) =&gt;</span> {<br mpa-from-tpl=\"t\">      setCount(count);<br mpa-from-tpl=\"t\">    });<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> =&gt;</span> {<br mpa-from-tpl=\"t\">      serviceSubject.unsubscribe();<br mpa-from-tpl=\"t\">    };<br mpa-from-tpl=\"t\">  }, [serviceSubject]);<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> [count, setCount];<br mpa-from-tpl=\"t\">}</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: center;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">自定义 hook 来共享状态逻辑</span><br></p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">使用上面的自定义 hook，我们可以像下面这样重写 ShowCount 组件。注意，我们必须将数据源作为参数传递给这个自定义 hook。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">import</span> { useCount } <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">from</span> <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"./use-count\"</span>;<br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">export</span> <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 188px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">function</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">ShowCount</span>(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">props</span>) </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> [count, setCount] = useCount(props.serviceSubject);<br mpa-from-tpl=\"t\">  useEffect(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 37px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> =&gt;</span> {<br mpa-from-tpl=\"t\">    setCount(<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">-1</span>);<br mpa-from-tpl=\"t\">  }, [setCount]);<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> (<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span><br mpa-from-tpl=\"t\">      <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span> Count : {count} <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">h1</span>&gt;</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">div</span>&gt;</span><br mpa-from-tpl=\"t\">  );<br mpa-from-tpl=\"t\">}</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: center;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">ShowCount 组件，带有数据源参数</span><br></p><blockquote style=\"margin-top: 0px;margin-bottom: 0px;padding-top: 0px;padding-left: 0px;border-left: none;\"><p style=\"font-size: 16px;white-space: pre-line;line-height: 1.75em;margin-top: 27px;padding-right: 20px;padding-left: 20px;color: rgb(91, 172, 235);text-align: left;\">请注意，我们在父组件，而不是 ShowCount 组件中调用 getCounts。否则，serviceSubject 每次运行 ShowCount 时都将有一个新值，而我们将无法获得预期的结果。</p><span style=\"display: block;clear: both;\"></span></blockquote><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>结论</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">切换到 React Hooks 的理由有很多，但我已经提到了其中一些最令人信服的原因，这些足够让我改用 React Hooks 了。如果查看官方文档，你会发现 React Hooks 有很多有趣的功能。请大家也谈一谈自己的 React Hooks 之旅吧。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">你可以在此处找到完整的源代码：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://github.com/dilantha111/example-5-reasons-to-use-react-hooks</span></p><section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\"><section style=\"text-align: left;margin-top: 30px;margin-left: 8px;color: rgb(60, 112, 198);\"><span style=\"display: inline-block;width: 15px;height: 15px;margin-right: 10px;background-image: url(\" https: center no-repeat initial></span>\n\t\t延伸阅读</section></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://blog.bitsrc.io/6-reasons-to-use-react-hooks-instead-of-classes-7e3ee745fe04</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img class=\"rich_pages\" data-ratio=\"0.5546875\" data-type=\"gif\" data-w=\"640\" style=\"text-align: center; color: rgb(63, 63, 63); max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/XIibZ0YbvibkUNBiaqUcdaM6cSBbJTHNBWykQ3XNMAeniaibTxUHOibdyKSIVeicW2lEcfABtC7Y3W0ms4TKKVxHWHASQ/640?wx_fmt=gif\"></p></section>\n                </div>\n\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247501735&amp;idx=2&amp;sn=21a97b9fe8f8f64e5e8837b38b3a62a9&amp;chksm=f95272e4ce25fbf2500a7c52005fb4746519dc61952952b0faac395e34ed0b59ff9a4a396939&amp;scene=0#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/19192/IGxgGjzVFK\"></div></div>","descriptionType":"html","publishedDate":"Fri, 09 Oct 2020 07:45:00 +0000","feedId":2775,"bgimg":"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkVBia6ytYib2qTKG5DmlibVGSq1bZdUksYJEgeSW3zoGedFs507TGSzbicRCB6tVG9ywJZJKyE0L5zkicg?imageView2/1/w/600","linkMd5":"fc66e08b139ea7152f2144afe092eda9","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn46@2020_3/2020/10/12/17-41-57-106_5d676211818e3d84.webp","destWidth":600,"destHeight":600,"sourceBytes":40962,"destBytes":33780,"author":"","articleImgCdnMap":{"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkVBia6ytYib2qTKG5DmlibVGSq1bZdUksYJEgeSW3zoGedFs507TGSzbicRCB6tVG9ywJZJKyE0L5zkicg?imageView2/1/w/600":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn46@2020_3/2020/10/12/17-41-57-106_5d676211818e3d84.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkVBia6ytYib2qTKG5DmlibVGSqQB5GTC4kfzEAQOml8cvpdV7G1WjlTbtmvhfAKtIia1Fg9VkMulzzvgQ/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn50@2020_4/2020/10/12/17-43-00-584_9a8b4763998effa1.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVBia6ytYib2qTKG5DmlibVGSqPILibtykXZrwRdiaTJCCmCqYjdaaqdwgEscycuvDmstnCYGXKZsoZjkg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn65@2020_1/2020/10/12/17-43-37-750_7db5ff1dc6c47633.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/XIibZ0YbvibkVBia6ytYib2qTKG5DmlibVGSqSOqv3wE0lZ6UnvtPL78gCtPpIPpNfUt5I7RrZN87odBcNOHGppWH5w/640?wx_fmt=gif":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/XIibZ0YbvibkUNBiaqUcdaM6cSBbJTHNBWykQ3XNMAeniaibTxUHOibdyKSIVeicW2lEcfABtC7Y3W0ms4TKKVxHWHASQ/640?wx_fmt=gif":null,"http://www.jintiankansha.me/rss_static/19192/IGxgGjzVFK":null},"publishedOrCreatedDate":1602524515888}],"record":{"createdTime":"2020-10-13 01:41:55","updatedTime":"2020-10-13 01:41:55","feedId":2775,"fetchDate":"Mon, 12 Oct 2020 17:41:55 +0000","fetchMs":209,"handleMs":19,"totalMs":123114,"newArticles":0,"totalArticles":5,"status":1,"type":0,"ip":"89e37574a7fc667116f3f58af6d0b714","hostName":"us-010*","requestId":"22741c1862304f7f97d38eec6dedd19d_2775","contentType":"application/rss+xml","totalBytes":117280,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":6,"articlesImgsGithubTotal":3,"successGithubMap":{"myreaderx21":1,"myreaderx24":1,"myreaderx30":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-24 21:31:44","updatedTime":"2020-09-01 10:14:55","id":2775,"name":"前端之巅","url":"http://feedmaker.kindle4rss.com/feeds/frontshow.weixin.xml","subscriber":null,"website":null,"icon":"http://www.sogou.com/images/logo/new/favicon.ico?v=4","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn48@2020_6/2020/09/01/02-14-41-796_d24121c9beed1de6.ico","description":"InfoQ大前端技术社群：囊括前端、移动、Node全栈一线技术，紧跟业界发展步伐。","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-10-13 01:43:58","updatedTime":"2020-10-13 01:43:58","id":null,"feedId":2775,"linkMd5":"fc66e08b139ea7152f2144afe092eda9"}],"tmpCommonImgCdnBytes":33780,"tmpBodyImgCdnBytes":83500,"tmpBgImgCdnBytes":0,"extra4":{"start":1602524515527,"total":0,"statList":[{"spend":342,"msg":"获取xml内容"},{"spend":19,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":120310,"msg":"正文链接上传到cdn"}]},"extra5":6,"extra6":4,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/19192/IGxgGjzVFK","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":656,"convertSpendMs":0,"createdTime":"2020-10-13 01:41:58","host":"us-023*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E4%BD%BF%E7%94%A8React%C2%A0Hooks%E4%BB%A3%E6%9B%BF%E7%B1%BB%E7%9A%846%E5%A4%A7%E7%90%86%E7%94%B1","linkMd5ListStr":"fc66e08b139ea7152f2144afe092eda9","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/19192/IGxgGjzVFK","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":402,"convertSpendMs":0,"createdTime":"2020-10-13 01:41:59","host":"us-007*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E4%BD%BF%E7%94%A8React%C2%A0Hooks%E4%BB%A3%E6%9B%BF%E7%B1%BB%E7%9A%846%E5%A4%A7%E7%90%86%E7%94%B1","linkMd5ListStr":"fc66e08b139ea7152f2144afe092eda9","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},null,null,null,null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-24.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-54.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-007.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://us-002.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-035.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-023.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://us-024.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-012.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkVBia6ytYib2qTKG5DmlibVGSq1bZdUksYJEgeSW3zoGedFs507TGSzbicRCB6tVG9ywJZJKyE0L5zkicg?imageView2/1/w/600","sourceStatusCode":200,"destWidth":600,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn46@2020_3/2020/10/12/17-41-57-106_5d676211818e3d84.webp","sourceBytes":40962,"destBytes":33780,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":2264,"convertSpendMs":16,"createdTime":"2020-10-13 01:41:56","host":"europe70*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E4%BD%BF%E7%94%A8React%C2%A0Hooks%E4%BB%A3%E6%9B%BF%E7%B1%BB%E7%9A%846%E5%A4%A7%E7%90%86%E7%94%B1","linkMd5ListStr":"fc66e08b139ea7152f2144afe092eda9,fc66e08b139ea7152f2144afe092eda9","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"40 KB","destSize":"33 KB","compressRate":"82.5%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkVBia6ytYib2qTKG5DmlibVGSqQB5GTC4kfzEAQOml8cvpdV7G1WjlTbtmvhfAKtIia1Fg9VkMulzzvgQ/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":1080,"destHeight":720,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn50@2020_4/2020/10/12/17-43-00-584_9a8b4763998effa1.webp","sourceBytes":77195,"destBytes":53942,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":2237,"convertSpendMs":27,"createdTime":"2020-10-13 01:42:59","host":"us-022*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E4%BD%BF%E7%94%A8React%C2%A0Hooks%E4%BB%A3%E6%9B%BF%E7%B1%BB%E7%9A%846%E5%A4%A7%E7%90%86%E7%94%B1","linkMd5ListStr":"fc66e08b139ea7152f2144afe092eda9","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"75.4 KB","destSize":"52.7 KB","compressRate":"69.9%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVBia6ytYib2qTKG5DmlibVGSqPILibtykXZrwRdiaTJCCmCqYjdaaqdwgEscycuvDmstnCYGXKZsoZjkg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":729,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn65@2020_1/2020/10/12/17-43-37-750_7db5ff1dc6c47633.webp","sourceBytes":108215,"destBytes":29558,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":8677,"convertSpendMs":43,"createdTime":"2020-10-13 01:43:29","host":"us-022*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E4%BD%BF%E7%94%A8React%C2%A0Hooks%E4%BB%A3%E6%9B%BF%E7%B1%BB%E7%9A%846%E5%A4%A7%E7%90%86%E7%94%B1","linkMd5ListStr":"fc66e08b139ea7152f2144afe092eda9","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"105.7 KB","destSize":"28.9 KB","compressRate":"27.3%"}],"successGithubMap":{"myreaderx21":1,"myreaderx24":1,"myreaderx30":1},"failGithubMap":{}}