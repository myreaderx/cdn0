{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-19 01:39:09","updatedTime":"2020-10-19 01:39:09","title":"Vitual DOM 的内部工作原理","link":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","description":"<p>原文：<a href=\"https://medium.com/@rajaraodv/the-inner-workings-of-virtual-dom-666ee7ad47cf\" target=\"_blank\" rel=\"noopener\">The Inner Workings Of Virtual DOM</a></p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/1.png\" alt=\"Preact VDOM 工作流程图\"><p class=\"caption\">Preact VDOM 工作流程图</p></img>\n</div>\n<p>虚拟DOM (VDOM，也称为 VNode) 是非常神奇的，同时也是复杂难懂的。 <a href=\"https://facebook.github.io/react/\" target=\"_blank\" rel=\"noopener\">React</a>，<a href=\"https://preactjs.com/\" target=\"_blank\" rel=\"noopener\">Preact</a> 以及其他类似的 JS 库都使用了虚拟 DOM 技术作为内核。可惜我找不到任何靠谱的文章或者文档可以简单又清楚解释清虚拟DOM的内部细节。所以，我就想到自己动手写一篇。</p>\n<blockquote>\n <p>注：这是一篇很长的博客。为了让内容更容易理解，我添加了很多图片。这也导致这篇博客看上去更长了。</p>\n</blockquote>\n<blockquote>\n <p>在这篇博客中，我是基于 <a href=\"https://github.com/developit/preact/\" target=\"_blank\" rel=\"noopener\">Preact</a> 的代码和 VDOM 机制来介绍的。因为 Preact 代码量更少，你在以后也可以不费力地自己看看源码。<strong>但是我觉得绝大部分的概念也同样适用于 React。</strong></p>\n</blockquote>\n<blockquote>\n <p>我希望读者通过这篇博客可以更好地理解虚拟DOM，并期待你们可以为 React 和 Preact 等开源项目提供贡献。</p>\n</blockquote>\n<p>在这篇博客中，我会通过一个简单的例子来仔细地介绍虚拟DOM的每个场景，给大家虚拟DOM是如何工作的。特别地，我会介绍以下内容：</p>\n<ol style=\"list-style-type: decimal\">\n <li>Babel 和 JSX</li>\n <li>创建 VNode -- 单个虚拟 DOM 元素</li>\n <li>处理组件和子组件</li>\n <li>初始渲染和创建 DOM 元素</li>\n <li>再次渲染</li>\n <li>删除 DOM 元素</li>\n <li>替换 DOM 元素</li>\n</ol>\n<a id=\"more\"></a>\n<h2 id=\"演示程序\">演示程序</h2>\n<p>演示程序是一个简单的<a href=\"http://codepen.io/rajaraodv/pen/BQxmjj\" target=\"_blank\" rel=\"noopener\">可筛选的搜索程序</a>，包含了两个组件 <strong>FilteredList</strong> 和 <strong>List</strong>。List 组件会渲染一个城市列表（默认情况是 California 和 New York）。示例还有一个搜索框，可以根据搜索框的输入内容来筛选列表。十分直接了当。</p>\n<blockquote>\n <p>在线示例： <a href=\"http://codepen.io/rajaraodv/pen/BQxmjj\" class=\"uri\" target=\"_blank\" rel=\"noopener\">http://codepen.io/rajaraodv/pen/BQxmjj</a></p>\n</blockquote>\n<h2 id=\"概览\">概览</h2>\n<p>首先，我们用 JSX（html in js）来编写组件。我们会使用 <a href=\"http://babeljs.io/\" target=\"_blank\" rel=\"noopener\">Babel</a> 将组件转译成纯 JS 。接着 Preact 的 <strong>『h』</strong> <a href=\"https://github.com/dominictarr/hyperscript\" target=\"_blank\" rel=\"noopener\">hyperscript</a> 函数会将组件再转化成 VDOM 树（也就是 VNode）。最终， Preact 的虚拟 DOM 算法，按照 VDOM 生成真实的 DOM 元素，完成我们的应用。</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/the-big-picture.png\" alt=\"概览\"><p class=\"caption\">概览</p></img>\n</div>\n<p>在我们深入 VDOM 生命周期的细节之前，先来理解一下 JSX；它提供了整个框架的起点。</p>\n<h3 id=\"babel-和-jsx\">1. Babel 和 JSX</h3>\n<p>在 React、Preact 以及类似的框架中，并没有 HTML；取而代之，<strong>所有都是 JS</strong>。所以我们甚至需要在 JavaScript 中来编写 HTML。但是，只用纯 JS 来写 DOM 简直就是恶梦！</p>\n<p>拿我们的演示程序来说，我们必须这样写 HTML：</p>\n<blockquote>\n <p>我一会儿来再解释 『h』</p>\n</blockquote>\n<p><img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/pure-js-filtered-list.png\"> <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/pure-js-list.png\" /></img></p>\n<p>这就是我们需要引入 JSX 的原因。本质上来说，JSX 就是让我们愉快地在 JS 中写 HTML！同时，也允许我们在花括号里 {} 使用 JS。</p>\n<p>如下所示，JSX 可以帮助我们很容易地编写组件</p>\n<p><img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/jsx-filtered-list.png\"> <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/jsx-list.png\" /></img></p>\n<h3 id=\"jsx-树转化为-javascript\">2. JSX 树转化为 JavaScript</h3>\n<p>JSX 很酷，但是它不是可用的 JS，而最终我们需要真实的 DOM。JSX 只能帮助我们简洁地表达真实 DOM，没有办法再完成其他的事情。</p>\n<p>所以我们需要一个方法来把 JSX 转化成对应的 JSON 对象（VDOM，同时它也是一棵树）。只有这样我们最终才能使用它作为输入来创建真实 DOM。我们需要一个函数来实现它。</p>\n<p>在 Preact 中，这个函数就是 『<a href=\"https://github.com/developit/preact/blob/master/src/h.js\" target=\"_blank\" rel=\"noopener\">h 函数</a>』。它与 React 中的 『<a href=\"https://facebook.github.io/react/docs/react-api.html#createelement\" target=\"_blank\" rel=\"noopener\">React.createElement</a>』是等效的。</p>\n<blockquote>\n <p>『h』代表着 <a href=\"https://github.com/dominictarr/hyperscript\" target=\"_blank\" rel=\"noopener\">hyperscript</a> —— 最先开始在 JS 中编写 HTML 的框架之一。</p>\n</blockquote>\n<p>但如何把 JSX 转化成 『h』函数呢？这就是引入 <a href=\"http://babeljs.io/\" target=\"_blank\" rel=\"noopener\">Babel</a> 的原因了。Babel 会找到所有的 JSX 结点并把它们转化成『h』函数调用。</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/convert-jsx-to-js.png\" alt=\"babel-convert-jsx-to-js\"><p class=\"caption\">babel-convert-jsx-to-js</p></img>\n</div>\n<h3 id=\"babel-jsx-react-vs-preact\">3. Babel JSX (React vs Preact)</h3>\n<p>默认条件下，Babel 会把 JSX 转译成 React.createElement 调用，因为它默认就是支持的 React。</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/babel-jsx-convert-example.png\" alt=\"左边是 JSX，右边是转译成 React 版的 JS\"><p class=\"caption\">左边是 JSX，右边是转译成 React 版的 JS</p></img>\n</div>\n<p>但我们可以通过添加『Babel Pragma』参数，很容易地把这个函数名换成任何我们想要的，比如 Preact 使用的 『h』：</p>\n<figure class=\"highlight js\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br /></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\">Option <span class=\"number\">1</span>:</span><br><span class=\"line\"><span class=\"comment\">// .babelrc</span></span><br><span class=\"line\">{</span><br><span class=\"line\">    <span class=\"string\">\"plugins\"</span>: [</span><br><span class=\"line\">        [</span><br><span class=\"line\"> <span class=\"string\">\"transform-react-jsx\"</span>, {<span class=\"string\">\"pragma\"</span>: <span class=\"string\">\"h\"</span>}</span><br><span class=\"line\"> ]</span><br><span class=\"line\"> ]</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">Option <span class=\"number\">2</span>:</span><br><span class=\"line\"><span class=\"comment\">// 在每个 JSX 文件的第一行添加这一行注释</span></span><br><span class=\"line\"><span class=\"comment\">/** @jsx h*/</span></span><br /></br></br></br></br></br></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/babel-jsx-convert-example-h.png\" alt=\"使用 Babel Pragma 来指定 h 函数\"><p class=\"caption\">使用 Babel Pragma 来指定 h 函数</p></img>\n</div>\n<h3 id=\"挂载到真实-dom-的主入口\">4. 挂载到真实 DOM 的主入口</h3>\n<p>不仅是在组件的『render』函数中的代码需要被转译成『h』函数，初始的挂载入口也需要。</p>\n<p><strong>这就是开始执行的位置，一切的开始！</strong></p>\n<figure class=\"highlight js\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br /></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Mount to real DOM</span></span><br><span class=\"line\">render(<span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">FilteredList</span>/&gt;</span></span>, <span class=\"built_in\">document</span>.getElementById(‘app’));</span><br><span class=\"line\"><span class=\"comment\">// Converted to \"h\":</span></span><br><span class=\"line\">render(h(FilteredList), <span class=\"built_in\">document</span>.getElementById(‘app’));</span><br /></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<h3 id=\"h函数的返回值\">5.『h』函数的返回值</h3>\n<p>『h』函数使用 JSX 的返回值作为参数，创建了一个叫『VNode』的东西（React 的『createElement』创建 ReactElement）。一个 Preact 的『VNode』（或者是 React 的 『Element』）只是一个 JS 对象，代表着一个 DOM 结点，其中包含了它的属性和子结点。</p>\n<p>VNode 大概是这样的：</p>\n<figure class=\"highlight js\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br /></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">    nodeName: <span class=\"string\">''</span>,</span><br><span class=\"line\">    attributes: {},</span><br><span class=\"line\">    children: []</span><br><span class=\"line\">}</span><br /></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<p>举个例子，我的演示程序中搜索框 Input 的 VNode 应该是这样的：</p>\n<figure class=\"highlight js\">\n <table>\n  <tr>\n   <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br /></br></br></br></br></br></br></br></br></pre></td>\n   <td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">    nodeName: <span class=\"string\">'input'</span>,</span><br><span class=\"line\">    attributes: {</span><br><span class=\"line\">        type: <span class=\"string\">'text'</span>,</span><br><span class=\"line\">        placeholder: <span class=\"string\">'Search'</span>,</span><br><span class=\"line\"> onChange: <span class=\"string\">''</span></span><br><span class=\"line\"> },</span><br><span class=\"line\"> children: []</span><br><span class=\"line\">}</span><br /></br></br></br></br></br></br></br></br></pre></td>\n  </tr>\n </table>\n</figure>\n<blockquote>\n <p>『h』函数不会创建整个树！它只会为指定的结点创建一个 JS 对象。但由于『render』方法已经得到了树结构的 DOM JSX，最终产出的结果就会是一个带有子结点、孙结点的 VNode，看上去就是一棵树。</p>\n</blockquote>\n<blockquote>\n <p><strong>相关的代码</strong></p>\n <p>『h』: <a href=\"https://github.com/developit/preact/blob/master/src/h.js\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/h.js</a></p>\n <p>『VNode』: <a href=\"https://github.com/developit/preact/blob/master/src/vnode.js\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/vnode.js</a></p>\n <p>『render』: <a href=\"https://github.com/developit/preact/blob/master/src/render.js\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/render.js</a></p>\n <p>『buildComponentFromVNode』: <a href=\"https://github.com/developit/preact/blob/master/src/vdom/diff.js#L102\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/vdom/diff.js#L102</a></p>\n</blockquote>\n<h2 id=\"preact-的虚拟-dom-算法流程图\">Preact 的虚拟 DOM 算法流程图</h2>\n<p>下面的流程图中展示了 Preact 是如何创建、更新、删除组件以及其子组件的。同时它也展示了诸如 <code>componentWillMount</code> 等生命周期事件是何时被调用的。</p>\n<blockquote>\n <p>注：这个图看上去很复杂，不要担心，我们会逐个分章节一步一步地详细介绍。</p>\n</blockquote>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart.png\" />\n</div>\n<p>是的，很难一次全部读懂它。所以让我们把它分解成多个章节，一步一步来介绍。</p>\n<blockquote>\n <p>注：当我们讨论生命周期中的某部分时，我会在图中用黄色高亮区域把它们标注出来。</p>\n</blockquote>\n<h3 id=\"场景1应用程序的创建\">场景1：应用程序的创建</h3>\n<h4 id=\"为给定的组件创建-vnode-virtual-dom\">1.1 为给定的组件创建 VNode (Virtual DOM)</h4>\n<p>图中的高亮区域展示了创建组件 VNode(Vitual DOM) 树的循环。注意这里没有创建子组件的 VNode，那是另外一个循环。</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-initial-create.png\" alt=\"黄色高亮的部分展示了 VNode 的创建过程\"><p class=\"caption\">黄色高亮的部分展示了 VNode 的创建过程</p></img>\n</div>\n<p>下面这张图展示了我们的应用首次加载时发生了什么。框架完成时得到了 <code>FilteredList</code> 组件的一个带有子结点和属性的 VNode。</p>\n<blockquote>\n <p>注：在这个过程中，<code>componentWillMount</code> 和 <code>render</code> 这两个生命周期方法被调用了（注意上图中的绿色框体）。</p>\n</blockquote>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/initial-create.png\" />\n</div>\n<blockquote>\n <p>相关代码</p>\n <p>绝大部分的生命周期事件，诸如：componentWillMount，render 都可以在这里找到：<a href=\"https://github.com/developit/preact/blob/master/src/vdom/component.js#L101\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/vdom/component.js#L101</a></p>\n</blockquote>\n<h4 id=\"如果不是组件那么创建一个真实-dom\">1.2 如果不是组件，那么创建一个真实 DOM</h4>\n<p>在这一步中，我们会为父结点（div）创建真实的 DOM 元素，并且遍历处理子结点（<code>input</code> 和 <code>List</code>）。</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-not-a-component.png\" alt=\"高亮的部分展现了为子组件创建真实 DOM 的处理过程\"><p class=\"caption\">高亮的部分展现了为子组件创建真实 DOM 的处理过程</p></img>\n</div>\n<p>如下图所示，现在我们就得到了 <code>div</code>：</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/create-a-real-dom.png\" />\n</div>\n<blockquote>\n <p>相关代码</p>\n <p>document.createElement: <a href=\"https://github.com/developit/preact/blob/master/src/dom/recycler.js\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/dom/recycler.js</a></p>\n</blockquote>\n<h4 id=\"重复子结点\">1.3 重复子结点</h4>\n<p>现在，这个循环是对每个子结点重复以上动作。在我们的应用中，我们将会重复 <code>input</code> 和 <code>List</code>。</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-repeat-for-children.png\" alt=\"重复处理每个子结点\"><p class=\"caption\">重复处理每个子结点</p></img>\n</div>\n<h4 id=\"处理子结点并添加将其添加到父结点\">1.4 处理子结点并添加将其添加到父结点</h4>\n<p>在这一步中，我们会处理叶子结点。由于 <code>input</code> 拥有父结点 <code>div</code>，我们就把 input 作为子结点添加到 <code>div</code> 中。接着 <code>input</code> 的处理流程结束，继续处理 <code>List</code>（ <code>div</code>的第二个子结点）。</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-append-to-parent.png\" alt=\"完成对子结点的处理\"><p class=\"caption\">完成对子结点的处理</p></img>\n</div>\n<p>此时，我们的应用是这样的：</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/append-to-parent.png\" />\n</div>\n<blockquote>\n <p>注意：在创建 <code>input</code> 之后，由于它没有任何子结点，因此对它的处理结束。但这里并不是立即继续循环并创建 <code>List</code>。而是先将 <code>input</code> 添加到父结点 <code>div</code>，而后再返回处理 <code>List</code>。</p>\n <p>相关代码：</p>\n <p>appendChild: <a href=\"https://github.com/developit/preact/blob/master/src/vdom/diff.js\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/vdom/diff.js</a></p>\n</blockquote>\n<h4 id=\"处理子组件\">1.5 处理子组件</h4>\n<p>控制流程返回到步骤 1.1，对 <code>List</code> 组件开始新的一轮处理。由于 <code>List</code> 是一个组件，所以它也会调用 <code>List</code> 的 <strong>render</strong> 方法来获取到新的 VNode，如下所示：</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-process-child-component.png\" alt=\"对每个子组件重复以上所有的处理\"><p class=\"caption\">对每个子组件重复以上所有的处理</p></img>\n</div>\n<p>当处理 <code>List</code> 组件的循环完成时，我们可以得到 List 的 VNode，如下所示：</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/process-child-component.png\" alt=\"process-child-component\"><p class=\"caption\">process-child-component</p></img>\n</div>\n<blockquote>\n <p>相关代码：</p>\n <p>buildComponentFormVNode: <a href=\"https://github.com/developit/preact/blob/master/src/vdom/diff.js#L102\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/vdom/diff.js#L102</a></p>\n</blockquote>\n<h4 id=\"对所有子结点重复步骤-1.1-到-1.4\">1.6 对所有子结点重复步骤 1.1 到 1.4</h4>\n<p>现在再次对所有的子结点重复以上处理。一旦到达叶子结点时，就把它添加到父元素上并重复整个过程。</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-repeat-for-all-children.png\" alt=\"一直重复此流程，直到所有结点都被创建并添加到 DOM 树\"><p class=\"caption\">一直重复此流程，直到所有结点都被创建并添加到 DOM 树</p></img>\n</div>\n<p>下边个张图展示了每个子结点是如何被添加的（提示：深度优先）</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/how-real-dom-tree-created.png\" alt=\"DOM 是如何被创建的\"><p class=\"caption\">DOM 是如何被创建的</p></img>\n</div>\n<h4 id=\"结束\">1.7 结束</h4>\n<p>此时，我们就完成了整个的处理过程。这里只需要地调用所有组件的 <code>componentDidMount</code> 方法（自子组件开始，至父组件结束），然后停止。</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-stop-processing.png\" />\n</div>\n<blockquote>\n <p>重要提示：一旦所有的工作都完成时，我们会将真实 DOM 对象的引用添加到每个相应的组件实例上。这些引用将会帮助完成后续的操作（创建、更新、删除），对比并避免重复创建相同的 DOM 结点。</p>\n</blockquote>\n<h3 id=\"场景2删除叶子结点\">场景2：删除叶子结点</h3>\n<p>假设我们在 input 中输入 <code>cal</code> 然后回车。这将移除第二个列表结点，另一个叶子结点（New York）则到被保留下来。</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/app-remove-leaf-node.png\" />\n</div>\n<p>好，接下来让我们看一下这一场景的处理流程。</p>\n<h4 id=\"以之前一样创建-vnode\">2.1 以之前一样，创建 VNode</h4>\n<p>在初始渲染之后的每个变化都称为一个 <code>更新(update)</code> 。对于 <code>更新</code> 周期中的创建 VNode 工作，与前边讲到 <code>创建</code> 周期中的非常类似，就是再来一次创建 VNode。</p>\n<p>既然是更新（不是创建）一个组件，那么每个组件以及子组件的 <code>componentWillReceiveProps</code>，<code>shouldComponentUpdate</code> 和 <code>componentWillUpdate</code> 事件将会被触发。</p>\n<p><strong>额外的，更新周期，不会再次创建 DOM 元素，因为它们已经存在了</strong></p>\n<blockquote>\n <p>译者注</p>\n <p>如果 DOM 元素可复用就不会再次创建。不可复用的情况主要是指标签名发生变化。这种情况下，我们仍然会创建新的 DOM 元素，并且会把旧有的 DOM 回收掉。</p>\n <p>例如从 div 变为 section，那么就会创建一个新的 section 元素，替换原有 div，而 div 会被回收；</p>\n</blockquote>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-2.1.png\" alt=\"组件更新的处理流程\"><p class=\"caption\">组件更新的处理流程</p></img>\n</div>\n<blockquote>\n <p>相关代码</p>\n <p>removeNode: <a href=\"https://github.com/developit/preact/blob/master/src/dom/index.js#L9\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/dom/index.js#L9</a></p>\n <p>insertBefore: <a href=\"https://github.com/developit/preact/blob/master/src/vdom/diff.js#L253\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/vdom/diff.js#L253</a></p>\n</blockquote>\n<h4 id=\"使用真实-dom-结点引用-避免重复创建结点\">2.2 使用真实 DOM 结点引用 &amp; 避免重复创建结点</h4>\n<p>之前有提到过，在初始化过程中完成创建之后，每个组件都会有一个指向到对应的真实的 DOM 树结点的引用。下边的图片展示了我们演示 app 当前状态的引用关系。</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/2.1-dom-refenerences.png\" alt=\"DOM 与组件实例之间的引用关系\"><p class=\"caption\">DOM 与组件实例之间的引用关系</p></img>\n</div>\n<p>每当我们创建一个新 VNode 时，它的每个属性都会与对应结点的真实 DOM 属性做对比。如果真实 DOM 所有属性都与新的 VNode 一致，那么就会继续处理下一个结点。</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/2.3-same-dom-vnode.png\" alt=\"更新过程中 DOM 结点已经存在的处理流程\"><p class=\"caption\">更新过程中 DOM 结点已经存在的处理流程</p></img>\n</div>\n<blockquote>\n <p>译者注</p>\n <p>实际上，这里的逻辑并不是简单地把 VNode 与 DOM 的 <code>attributes</code> 作对比。</p>\n <p>在 preact 中，每个 DOM 都有一个 <code>Symbol(__preactattr__)</code> 的属性，这里称之为<code>属性缓存</code>。这个属性的值就是我们的 VNode 的所有属性（不包含 children）。我们是用这个<code>属性缓存</code>与 VNode 作对比的。</p>\n <p>具体的 diff 过程大概是这样的：</p>\n <p>首先，我们会先在 DOM 上找 <code>Symbol(__preactattr__)</code> 的属性；如果这个属性不存在，那么我们会遍历 DOM 上所有的 <code>attributes</code> 来生成它。</p>\n <p>接着，我们一一对比 <code>VNode</code> 和 <code>属性缓存</code> 的所有属性。如果两者完全一致，那么我们不会对 DOM 做任何更新操作；如果 VNode 与这个属性存在差异，我们则会更新 DOM 属性，并同时更新属性缓存。注意，这里 VNode 的属性对比完成时，也同时完成了对 DOM 的更新。</p>\n <p>相关代码：</p>\n <ol style=\"list-style-type: decimal\">\n  <li><p>生成缓存：<a href=\"https://github.com/developit/preact/blob/master/src/vdom/diff.js#L143\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/vdom/diff.js#L143</a></p></li>\n  <li><p>使用属性缓存：<a href=\"https://github.com/developit/preact/blob/master/src/vdom/diff.js#L139\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/vdom/diff.js#L139</a></p></li>\n  <li><p>对比属性缓存与 VNode 属性：<a href=\"https://github.com/developit/preact/blob/master/src/vdom/diff.js#L305\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/vdom/diff.js#L305</a></p></li>\n </ol>\n</blockquote>\n<h4 id=\"移除多余的-dom-结点\">2.3 移除多余的 DOM 结点</h4>\n<p>下边这张图展示了真实 DOM 与 VNode 之间的差异：</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/2.3-deferences-between-dom-vnode.png\" alt=\"VNode 与 DOM 间的差\"><p class=\"caption\">VNode 与 DOM 间的差</p></img>\n</div>\n<p>由于真实 DOM 比 VNode 多了一个 <code>New York</code> 结点，在下边的图中高亮的部分中我们会把它移除掉。同时，在所有过程完成之后，还会触发生命周期中的 <code>componentWillUnmount</code> 事件。</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/2.3-flowchart.png\" alt=\"Remove DOM node lifecycle\"><p class=\"caption\">Remove DOM node lifecycle</p></img>\n</div>\n<blockquote>\n <p>相关代码</p>\n <p>unmountComponent: <a href=\"https://github.com/developit/preact/blob/master/src/vdom/component.js#L250\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/vdom/component.js#L250</a></p>\n</blockquote>\n<h3 id=\"场景-3移除整个组件\">场景 3：移除整个组件</h3>\n<p>假设我们在筛选框中输入 <strong>blabla</strong>。那么 \"California\" 或者 \"New York\" 都匹配不上，所以我们根本不会去渲染子组件 \"List\"。这意味着，我们需要卸载整个组件。</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/3-demo.png\" alt=\"如果没有结果，那么列表组件会被移除\"><p class=\"caption\">如果没有结果，那么列表组件会被移除</p></img>\n</div>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/3-code.png\" alt=\"FilteredList 的 “render” 的方法\"><p class=\"caption\">FilteredList 的 “render” 的方法</p></img>\n</div>\n<p>移除一个组件与移除一个结点类似。当我们移除一个有组件引用的 DOM 结点时，会触发组件的生命周期处理函数 \"componentWillUnmount\"，接着递归地删除所有的子孙 DOM 结点。所有的元素都被删除时，会触发引用组件的生命周期处理函数 \"componentDidUnmount\"。</p>\n<p>下面这张图片展示了 DOM 结点与组件实例之间的引用关系：</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/3-component-reference.png\" alt=\"DOM 结点与组件实例之间的引用关系\"><p class=\"caption\">DOM 结点与组件实例之间的引用关系</p></img>\n</div>\n<p>下面的流程图中高亮的部分展示了移除/卸载组件的处理过程：</p>\n<div class=\"figure\">\n <img src=\"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/3-remove-component.png\" alt=\"移除并卸载组件\"><p class=\"caption\">移除并卸载组件</p></img>\n</div>\n<blockquote>\n <p>相关代码</p>\n <p>unmountComponent: <a href=\"https://github.com/developit/preact/blob/master/src/vdom/component.js#L250\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/vdom/component.js#L250</a></p>\n</blockquote>\n<h2 id=\"子结点-diff-算法\">子结点 diff 算法</h2>\n<blockquote>\n <p>译者注：对于子结点的 diff 计算是 virtual dom 算法中至关重要的一个环节。但原文没有涉及到其中的细节，因此译者补充这一小节。</p>\n</blockquote>\n<p>在处理完 VNode 的自身属性后，会对子结点进行 diff 计算；为了提高这个计算的性能，我们在框架中强制要求每个子 VNode 都必须有一个属性 <code>key</code>，字符串类型，并且每个 <code>key</code> 互不相同。我们需要使用 key 来构建索引，加速子 VNode 的匹配过程。</p>\n<p>子结点 diff 的过程大概是这样的：</p>\n<ol style=\"list-style-type: decimal\">\n <li><p>首先，先将当前子 VNode 按属性 key 为键、VNode 为值，构建成一个 Map；</p><p>这里就是为什么 <code>key</code> 一定要互不相同的原因。如果 key 有冲突，那么这个 Map 就无法构建了。</p></li>\n <li>遍历所有新的子 VNode；\n  <ol style=\"list-style-type: decimal\">\n   <li>使用新子 VNode 的 <code>key</code>，找到在 Map 中的当前子 VNode；</li>\n   <li><p>将两者做 diff；</p><p>实际上是递归整个 diff 算法。没找到对应 VNode 就是新增结点，找到了就是更新结点。</p></li>\n   <li><p>将此 VNode 的 <code>key</code> 从 Map 中移除；</p></li>\n  </ol></li>\n <li><p>最后，把 Map 中剩余的 VNode 全部卸载。</p><p>这里是场景 2.3 和场景 3 中移除结点的触发点。</p></li>\n</ol>\n<blockquote>\n <p>相关代码 innerDiffNode：<a href=\"https://github.com/developit/preact/blob/master/src/vdom/diff.js#L182\" class=\"uri\" target=\"_blank\" rel=\"noopener\">https://github.com/developit/preact/blob/master/src/vdom/diff.js#L182</a></p>\n</blockquote>\n<h2 id=\"最后\">最后</h2>\n<p>我希望这篇文章可以充分地让大家了解 Virtual DOM 是如何工作的，至少是 preact。</p>\n<p>请注意我只提到了主要的一些场景，并没有涉及到代码中某些的优化处理。</p>\n<p>同时，如果你发现了任何问题，请告诉我。我非常乐意更正！</p>","descriptionType":"html","publishedDate":"Thu, 13 Apr 2017 16:00:00 +0000","feedId":19099,"bgimg":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/1.png","linkMd5":"8e664886b06b2b614ec104b7c991c678","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn84@2020_3/2020/10/18/17-39-28-000_eb790aa22df74f20.webp","destWidth":1301,"destHeight":1603,"sourceBytes":156816,"destBytes":77418,"author":"","articleImgCdnMap":{"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/1.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn84@2020_3/2020/10/18/17-39-28-000_eb790aa22df74f20.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/the-big-picture.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn91@2020_3/2020/10/18/17-39-33-412_3159eb7f6103b447.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/pure-js-filtered-list.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn96@2020_4/2020/10/18/17-39-32-216_8a8f8c88cedae351.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/pure-js-list.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn63@2020_4/2020/10/18/17-39-31-528_5f4420ce4122e535.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/jsx-filtered-list.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn7@2020_5/2020/10/18/17-39-31-895_77f1e20c1c8c84b9.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/jsx-list.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn57@2020_2/2020/10/18/17-39-32-839_35f4a28f9cd4b30e.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/convert-jsx-to-js.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn31@2020_1/2020/10/18/17-39-33-436_a9b7dc7b818a0a6e.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/babel-jsx-convert-example.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn36@2020_3/2020/10/18/17-39-31-941_7b519927fe21ef43.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/babel-jsx-convert-example-h.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn12@2020_5/2020/10/18/17-39-32-293_26a53d2b34278d77.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn16@2020_1/2020/10/18/17-39-34-052_38f873a25063fd58.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-initial-create.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn17@2020_5/2020/10/18/17-39-34-413_b52a97ca9b888ffe.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/initial-create.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn28@2020_6/2020/10/18/17-39-32-246_7800956ed694975d.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-not-a-component.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn4@2020_5/2020/10/18/17-39-35-300_8c4c88243ed037a6.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/create-a-real-dom.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn100@2020_6/2020/10/18/17-39-32-797_705c541d53ca0694.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-repeat-for-children.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn38@2020_1/2020/10/18/17-39-35-225_13e5ee668091d53b.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-append-to-parent.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn85@2020_6/2020/10/18/17-39-35-222_ca977c35878e5c4a.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/append-to-parent.png":null,"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-process-child-component.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn24@2020_5/2020/10/18/17-39-35-080_bb3f953bf76383da.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/process-child-component.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn7@2020_5/2020/10/18/17-39-33-626_4b9ab37f0073a416.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-repeat-for-all-children.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn68@2020_2/2020/10/18/17-39-35-050_c4dcfb62dc825cbd.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/how-real-dom-tree-created.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn75@2020_1/2020/10/18/17-39-35-409_9fc7d3d60afd28b1.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-stop-processing.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn55@2020_4/2020/10/18/17-39-34-389_74c51b90081c1d75.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/app-remove-leaf-node.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn83@2020_1/2020/10/18/17-39-31-841_f70fb186c201e1c0.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-2.1.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn44@2020_3/2020/10/18/17-39-38-401_ea8c20d6f6534637.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/2.1-dom-refenerences.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn92@2020_5/2020/10/18/17-39-33-055_c4cc99977dd821c5.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/2.3-same-dom-vnode.png":null,"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/2.3-deferences-between-dom-vnode.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn99@2020_4/2020/10/18/17-39-32-133_bbf492c642ca60f2.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/2.3-flowchart.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn71@2020_2/2020/10/18/17-39-35-995_c9b76f13e28e712c.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/3-demo.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn88@2020_6/2020/10/18/17-39-31-442_fce6e81cfb0d7fca.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/3-code.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn80@2020_4/2020/10/18/17-39-33-596_cbf24263a6fffb2f.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/3-component-reference.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn51@2020_1/2020/10/18/17-39-34-001_8e7dd78d3a660bf1.webp","http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/3-remove-component.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn96@2020_5/2020/10/18/17-39-36-852_f49b6cafc1d6d0a9.webp"},"publishedOrCreatedDate":1603042749239}],"record":{"createdTime":"2020-10-19 01:39:09","updatedTime":"2020-10-19 01:39:09","feedId":19099,"fetchDate":"Sun, 18 Oct 2020 17:39:09 +0000","fetchMs":2127,"handleMs":22,"totalMs":37895,"newArticles":0,"totalArticles":20,"status":1,"type":0,"ip":"0b4009930f9af5660966c5695d71af7c","hostName":"us-015*","requestId":"8ce88628d86c479093e7ee42492863e4_19099","contentType":"text/xml","totalBytes":1146964,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":32,"articlesImgsGithubTotal":30,"successGithubMap":{"myreaderx8":1,"myreaderx7":2,"myreaderx15":1,"myreaderx6":1,"myreaderx16":2,"myreaderx4":1,"myreaderx10":1,"myreaderx32":1,"myreaderx3":1,"myreaderx11":1,"myreaderx33":1,"myreaderx12":2,"myreaderx2":1,"myreaderx13":1,"myreaderx1":1,"myreaderx30":1,"myreaderx31":1,"myreaderx19":1,"myreaderx":2,"myreaderx25":1,"myreaderx27":1,"myreaderx21":1,"myreaderx22":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}},"feed":{"createdTime":"2020-09-07 02:19:05","updatedTime":"2020-09-07 02:54:26","id":19099,"name":"EFE Tech","url":"http://efe.baidu.com/atom.xml","subscriber":174,"website":null,"icon":"http://efe.baidu.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn9@2020_1/2020/09/06/18-53-41-373_a3d529b4bdc3dc48.ico","description":"百度EFE（Excellent FrontEnd）技术体系","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-10-19 01:39:40","updatedTime":"2020-10-19 01:39:40","id":null,"feedId":19099,"linkMd5":"8e664886b06b2b614ec104b7c991c678"}],"tmpCommonImgCdnBytes":77418,"tmpBodyImgCdnBytes":1069546,"tmpBgImgCdnBytes":0,"extra4":{"start":1603042742194,"total":0,"statList":[{"spend":7023,"msg":"获取xml内容"},{"spend":22,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":11132,"msg":"正文链接上传到cdn"}]},"extra5":32,"extra6":32,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/append-to-parent.png","sourceStatusCode":200,"destWidth":800,"destHeight":498,"sourceBytes":57110,"destBytes":15566,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":2678,"convertSpendMs":34,"createdTime":"2020-10-19 01:39:28","host":"us-019*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn48/contents/2020/10/18/17-39-31-599_ebe1e3511892662c.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 18 Oct 2020 17:39:31 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B566:394E:2E7A544:4F4AB30:5F8C7DD2"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1603044105"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn48/contents/2020/10/18/17-39-31-599_ebe1e3511892662c.webp","historyStatusCode":[],"spendMs":44},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.8 KB","destSize":"15.2 KB","compressRate":"27.3%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/append-to-parent.png","sourceStatusCode":200,"destWidth":800,"destHeight":498,"sourceBytes":57110,"destBytes":15566,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":2430,"convertSpendMs":28,"createdTime":"2020-10-19 01:39:31","host":"us-019*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn48/contents/2020/10/18/17-39-34-042_ebe1e3511892662c.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 18 Oct 2020 17:39:34 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B59A:422B:34F8F38:55F33A4:5F8C7DD5"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1603044105"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn48/contents/2020/10/18/17-39-34-042_ebe1e3511892662c.webp","historyStatusCode":[],"spendMs":43},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.8 KB","destSize":"15.2 KB","compressRate":"27.3%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/2.3-same-dom-vnode.png","sourceStatusCode":200,"destWidth":1000,"destHeight":1245,"sourceBytes":259613,"destBytes":67104,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":6057,"convertSpendMs":229,"createdTime":"2020-10-19 01:39:28","host":"us-023*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn4/contents/2020/10/18/17-39-34-971_4fb7dd9ac577c61f.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 18 Oct 2020 17:39:35 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["EC6E:592B:E7962D:2A41BE6:5F8C7DD2"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1603044121"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn4/contents/2020/10/18/17-39-34-971_4fb7dd9ac577c61f.webp","historyStatusCode":[],"spendMs":54},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"253.5 KB","destSize":"65.5 KB","compressRate":"25.8%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-2.1.png","sourceStatusCode":200,"destWidth":1000,"destHeight":1245,"sourceBytes":257724,"destBytes":69950,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":6241,"convertSpendMs":76,"createdTime":"2020-10-19 01:39:28","host":"us-031*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx10/cdn44/contents/2020/10/18/17-39-34-537_ea8c20d6f6534637.webp","resp":{"code":409,"msg":"Conflict","body":"{\n  \"message\": \"is at 1ade5cdcbb8bff725ae6d4257caf4425ad2c3657 but expected 3756bc63675442c92e67ebb540577f3ed8657d6e\",\n  \"documentation_url\": \"https://docs.github.com/rest/reference/repos#create-or-update-file-contents\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-length":["222"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 18 Oct 2020 17:39:35 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["409 Conflict"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":[""],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["909A:27F1:3706F43:802F146:5F8C7DD4"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["5000"],"x-ratelimit-remaining":["4389"],"x-ratelimit-reset":["1603044106"],"x-ratelimit-used":["611"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 409,url is : https://api.github.com/repos/myreaderx10/cdn44/contents/2020/10/18/17-39-34-537_ea8c20d6f6534637.webp","historyStatusCode":[],"spendMs":662},"base64UserPassword":null,"token":"09191******************************13129"},"githubUser":"myreaderx10","githubHttpCode":409,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"251.7 KB","destSize":"68.3 KB","compressRate":"27.1%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/2.3-same-dom-vnode.png","sourceStatusCode":200,"destWidth":1000,"destHeight":1245,"sourceBytes":259613,"destBytes":67104,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":5044,"convertSpendMs":95,"createdTime":"2020-10-19 01:39:35","host":"us-010*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn4/contents/2020/10/18/17-39-40-029_4fb7dd9ac577c61f.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 18 Oct 2020 17:39:40 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9F82:288C:6488983:AA75E87:5F8C7DD8"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1603044121"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn4/contents/2020/10/18/17-39-40-029_4fb7dd9ac577c61f.webp","historyStatusCode":[],"spendMs":50},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"253.5 KB","destSize":"65.5 KB","compressRate":"25.8%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-038.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-019.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-023.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/1.png","sourceStatusCode":200,"destWidth":1301,"destHeight":1603,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn84@2020_3/2020/10/18/17-39-28-000_eb790aa22df74f20.webp","sourceBytes":156816,"destBytes":77418,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":4937,"convertSpendMs":109,"createdTime":"2020-10-19 01:39:24","host":"us-019*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678,8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"153.1 KB","destSize":"75.6 KB","compressRate":"49.4%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/3-demo.png","sourceStatusCode":200,"destWidth":552,"destHeight":160,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn88@2020_6/2020/10/18/17-39-31-442_fce6e81cfb0d7fca.webp","sourceBytes":3057,"destBytes":2406,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":3245,"convertSpendMs":9,"createdTime":"2020-10-19 01:39:28","host":"us-006*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3 KB","destSize":"2.3 KB","compressRate":"78.7%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/pure-js-list.png","sourceStatusCode":200,"destWidth":800,"destHeight":246,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn63@2020_4/2020/10/18/17-39-31-528_5f4420ce4122e535.webp","sourceBytes":21940,"destBytes":6080,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":3338,"convertSpendMs":10,"createdTime":"2020-10-19 01:39:28","host":"us-035*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.4 KB","destSize":"5.9 KB","compressRate":"27.7%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/app-remove-leaf-node.png","sourceStatusCode":200,"destWidth":800,"destHeight":160,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn83@2020_1/2020/10/18/17-39-31-841_f70fb186c201e1c0.webp","sourceBytes":5537,"destBytes":2714,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":3643,"convertSpendMs":7,"createdTime":"2020-10-19 01:39:28","host":"us-027*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.4 KB","destSize":"2.7 KB","compressRate":"49%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/babel-jsx-convert-example.png","sourceStatusCode":200,"destWidth":800,"destHeight":86,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn36@2020_3/2020/10/18/17-39-31-941_7b519927fe21ef43.webp","sourceBytes":18667,"destBytes":6974,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":3722,"convertSpendMs":5,"createdTime":"2020-10-19 01:39:28","host":"us-52*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.2 KB","destSize":"6.8 KB","compressRate":"37.4%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/jsx-filtered-list.png","sourceStatusCode":200,"destWidth":800,"destHeight":137,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn7@2020_5/2020/10/18/17-39-31-895_77f1e20c1c8c84b9.webp","sourceBytes":25376,"destBytes":9614,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":3724,"convertSpendMs":9,"createdTime":"2020-10-19 01:39:28","host":"us-031*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.8 KB","destSize":"9.4 KB","compressRate":"37.9%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/2.3-deferences-between-dom-vnode.png","sourceStatusCode":200,"destWidth":800,"destHeight":320,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn99@2020_4/2020/10/18/17-39-32-133_bbf492c642ca60f2.webp","sourceBytes":61266,"destBytes":18446,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":4023,"convertSpendMs":14,"createdTime":"2020-10-19 01:39:28","host":"us-035*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.8 KB","destSize":"18 KB","compressRate":"30.1%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/pure-js-filtered-list.png","sourceStatusCode":200,"destWidth":800,"destHeight":157,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn96@2020_4/2020/10/18/17-39-32-216_8a8f8c88cedae351.webp","sourceBytes":27097,"destBytes":8138,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":4059,"convertSpendMs":10,"createdTime":"2020-10-19 01:39:28","host":"us-002*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.5 KB","destSize":"7.9 KB","compressRate":"30%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/initial-create.png","sourceStatusCode":200,"destWidth":800,"destHeight":269,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn28@2020_6/2020/10/18/17-39-32-246_7800956ed694975d.webp","sourceBytes":54422,"destBytes":13526,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":4114,"convertSpendMs":12,"createdTime":"2020-10-19 01:39:28","host":"us-014*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"53.1 KB","destSize":"13.2 KB","compressRate":"24.9%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/babel-jsx-convert-example-h.png","sourceStatusCode":200,"destWidth":1000,"destHeight":96,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn12@2020_5/2020/10/18/17-39-32-293_26a53d2b34278d77.webp","sourceBytes":22963,"destBytes":7558,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":4167,"convertSpendMs":7,"createdTime":"2020-10-19 01:39:29","host":"europe-23*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.4 KB","destSize":"7.4 KB","compressRate":"32.9%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/jsx-list.png","sourceStatusCode":200,"destWidth":800,"destHeight":152,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn57@2020_2/2020/10/18/17-39-32-839_35f4a28f9cd4b30e.webp","sourceBytes":18639,"destBytes":7274,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":4633,"convertSpendMs":7,"createdTime":"2020-10-19 01:39:29","host":"europe-57*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.2 KB","destSize":"7.1 KB","compressRate":"39%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/create-a-real-dom.png","sourceStatusCode":200,"destWidth":800,"destHeight":498,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn100@2020_6/2020/10/18/17-39-32-797_705c541d53ca0694.webp","sourceBytes":56832,"destBytes":15254,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":4682,"convertSpendMs":19,"createdTime":"2020-10-19 01:39:29","host":"europe65*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.5 KB","destSize":"14.9 KB","compressRate":"26.8%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/2.1-dom-refenerences.png","sourceStatusCode":200,"destWidth":1000,"destHeight":666,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn92@2020_5/2020/10/18/17-39-33-055_c4cc99977dd821c5.webp","sourceBytes":155862,"destBytes":36544,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":4940,"convertSpendMs":30,"createdTime":"2020-10-19 01:39:28","host":"us-014*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"152.2 KB","destSize":"35.7 KB","compressRate":"23.4%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/convert-jsx-to-js.png","sourceStatusCode":200,"destWidth":800,"destHeight":793,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn31@2020_1/2020/10/18/17-39-33-436_a9b7dc7b818a0a6e.webp","sourceBytes":126365,"destBytes":32550,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":5252,"convertSpendMs":31,"createdTime":"2020-10-19 01:39:28","host":"us-002*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"123.4 KB","destSize":"31.8 KB","compressRate":"25.8%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/process-child-component.png","sourceStatusCode":200,"destWidth":800,"destHeight":437,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn7@2020_5/2020/10/18/17-39-33-626_4b9ab37f0073a416.webp","sourceBytes":69940,"destBytes":19870,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":5519,"convertSpendMs":16,"createdTime":"2020-10-19 01:39:28","host":"us-010*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"68.3 KB","destSize":"19.4 KB","compressRate":"28.4%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/the-big-picture.png","sourceStatusCode":200,"destWidth":800,"destHeight":248,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn91@2020_3/2020/10/18/17-39-33-412_3159eb7f6103b447.webp","sourceBytes":66357,"destBytes":16210,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":5473,"convertSpendMs":32,"createdTime":"2020-10-19 01:39:29","host":"europe69*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"64.8 KB","destSize":"15.8 KB","compressRate":"24.4%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/3-code.png","sourceStatusCode":200,"destWidth":800,"destHeight":558,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn80@2020_4/2020/10/18/17-39-33-596_cbf24263a6fffb2f.webp","sourceBytes":96347,"destBytes":33436,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":5658,"convertSpendMs":21,"createdTime":"2020-10-19 01:39:29","host":"europe61*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"94.1 KB","destSize":"32.7 KB","compressRate":"34.7%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/3-component-reference.png","sourceStatusCode":200,"destWidth":800,"destHeight":470,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn51@2020_1/2020/10/18/17-39-34-001_8e7dd78d3a660bf1.webp","sourceBytes":146509,"destBytes":48562,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":5941,"convertSpendMs":34,"createdTime":"2020-10-19 01:39:28","host":"us-006*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"143.1 KB","destSize":"47.4 KB","compressRate":"33.1%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart.png","sourceStatusCode":200,"destWidth":1000,"destHeight":1232,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn16@2020_1/2020/10/18/17-39-34-052_38f873a25063fd58.webp","sourceBytes":174043,"destBytes":52124,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":5975,"convertSpendMs":42,"createdTime":"2020-10-19 01:39:28","host":"us-038*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"170 KB","destSize":"50.9 KB","compressRate":"29.9%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-initial-create.png","sourceStatusCode":200,"destWidth":1000,"destHeight":1245,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn17@2020_5/2020/10/18/17-39-34-413_b52a97ca9b888ffe.webp","sourceBytes":258108,"destBytes":69600,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":6382,"convertSpendMs":113,"createdTime":"2020-10-19 01:39:28","host":"us-039*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"252.1 KB","destSize":"68 KB","compressRate":"27%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-stop-processing.png","sourceStatusCode":200,"destWidth":1000,"destHeight":1245,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn55@2020_4/2020/10/18/17-39-34-389_74c51b90081c1d75.webp","sourceBytes":261676,"destBytes":67630,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":6581,"convertSpendMs":66,"createdTime":"2020-10-19 01:39:29","host":"europe-56*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"255.5 KB","destSize":"66 KB","compressRate":"25.8%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-repeat-for-all-children.png","sourceStatusCode":200,"destWidth":1000,"destHeight":1257,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn68@2020_2/2020/10/18/17-39-35-050_c4dcfb62dc825cbd.webp","sourceBytes":253081,"destBytes":70128,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":7020,"convertSpendMs":200,"createdTime":"2020-10-19 01:39:28","host":"us-023*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"247.1 KB","destSize":"68.5 KB","compressRate":"27.7%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-append-to-parent.png","sourceStatusCode":200,"destWidth":1000,"destHeight":1245,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn85@2020_6/2020/10/18/17-39-35-222_ca977c35878e5c4a.webp","sourceBytes":259702,"destBytes":68074,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":7171,"convertSpendMs":64,"createdTime":"2020-10-19 01:39:28","host":"us-026*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"253.6 KB","destSize":"66.5 KB","compressRate":"26.2%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-repeat-for-children.png","sourceStatusCode":200,"destWidth":1000,"destHeight":1245,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn38@2020_1/2020/10/18/17-39-35-225_13e5ee668091d53b.webp","sourceBytes":260959,"destBytes":68908,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":7205,"convertSpendMs":225,"createdTime":"2020-10-19 01:39:28","host":"us-53*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"254.8 KB","destSize":"67.3 KB","compressRate":"26.4%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-not-a-component.png","sourceStatusCode":200,"destWidth":1000,"destHeight":1245,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn4@2020_5/2020/10/18/17-39-35-300_8c4c88243ed037a6.webp","sourceBytes":258068,"destBytes":68768,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":7268,"convertSpendMs":206,"createdTime":"2020-10-19 01:39:28","host":"us-53*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"252 KB","destSize":"67.2 KB","compressRate":"26.6%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-process-child-component.png","sourceStatusCode":200,"destWidth":1000,"destHeight":1245,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn24@2020_5/2020/10/18/17-39-35-080_bb3f953bf76383da.webp","sourceBytes":260959,"destBytes":68908,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":7352,"convertSpendMs":65,"createdTime":"2020-10-19 01:39:28","host":"us-027*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"254.8 KB","destSize":"67.3 KB","compressRate":"26.4%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/how-real-dom-tree-created.png","sourceStatusCode":200,"destWidth":2000,"destHeight":412,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn75@2020_1/2020/10/18/17-39-35-409_9fc7d3d60afd28b1.webp","sourceBytes":181518,"destBytes":48996,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":7592,"convertSpendMs":31,"createdTime":"2020-10-19 01:39:29","host":"europe-23*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"177.3 KB","destSize":"47.8 KB","compressRate":"27%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/2.3-flowchart.png","sourceStatusCode":200,"destWidth":1000,"destHeight":1245,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn71@2020_2/2020/10/18/17-39-35-995_c9b76f13e28e712c.webp","sourceBytes":258701,"destBytes":67226,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":8013,"convertSpendMs":64,"createdTime":"2020-10-19 01:39:28","host":"us-010*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"252.6 KB","destSize":"65.7 KB","compressRate":"26%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/3-remove-component.png","sourceStatusCode":200,"destWidth":1000,"destHeight":1174,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn96@2020_5/2020/10/18/17-39-36-852_f49b6cafc1d6d0a9.webp","sourceBytes":234356,"destBytes":64078,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":8904,"convertSpendMs":60,"createdTime":"2020-10-19 01:39:29","host":"europe-57*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"228.9 KB","destSize":"62.6 KB","compressRate":"27.3%"},{"code":1,"isDone":false,"source":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/flowchart-2.1.png","sourceStatusCode":200,"destWidth":1000,"destHeight":1245,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn44@2020_3/2020/10/18/17-39-38-401_ea8c20d6f6534637.webp","sourceBytes":257724,"destBytes":69950,"targetWebpQuality":75,"feedId":19099,"totalSpendMs":4172,"convertSpendMs":238,"createdTime":"2020-10-19 01:39:35","host":"us-023*","referer":"http://efe.baidu.com/blog/the-inner-workings-of-virtual-dom/","linkMd5ListStr":"8e664886b06b2b614ec104b7c991c678","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"251.7 KB","destSize":"68.3 KB","compressRate":"27.1%"}],"successGithubMap":{"myreaderx8":1,"myreaderx7":2,"myreaderx15":1,"myreaderx6":1,"myreaderx16":2,"myreaderx4":1,"myreaderx10":1,"myreaderx32":1,"myreaderx3":1,"myreaderx11":1,"myreaderx33":1,"myreaderx12":2,"myreaderx2":1,"myreaderx13":1,"myreaderx1":1,"myreaderx30":1,"myreaderx31":1,"myreaderx19":1,"myreaderx":2,"myreaderx25":1,"myreaderx27":1,"myreaderx21":1,"myreaderx22":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}}