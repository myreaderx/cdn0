{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2022-03-14 17:12:54","updatedTime":"2022-03-14 17:12:54","title":"为什么不建议用try catch处理异常？","link":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVU05kibZFttTY963QPHfmBVDibUTn6nFLKo6NwI2ZPIwZicNtx7iaaLzbpA/0?wx_fmt=jpeg%5Cx26amp;random=0.6789288094983996?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n                    \n                    \n                    <h3 data-tool=\"mdnice编辑器\" style=\"margin-bottom: 10px;text-align: center;line-height: normal;\" data-mpa-powered-by=\"yiban.io\"><span style=\"font-size: 15px;text-align: justify;\"><span style=\"outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif center rgb border-box break-word>（给</span><span style=\"outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif center rgb border-box break-word>ImportNew</span><span style=\"outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif center rgb border-box break-word>加星标，提高Java技能）</span></span></h3><h3 data-tool=\"mdnice编辑器\" style=\"margin-bottom: 10px;text-align: justify;line-height: normal;\" data-mpa-powered-by=\"yiban.io\"><span style=\"font-size: 15px;text-align: justify;\">软件开发过程中，不可避免的是需要处理各种异常，就我自己来说，至少有一半以上的时间都是在处理各种异常情况，所以代码中就会出现大量的 try {...} catch {...} finally {...} 代码块，不仅有大量的冗余代码，而且还影响代码的可读性。</span><br></h3><section><br></section><section><span style=\"font-size: 15px;\">比较下面两张图，看看您现在编写的代码属于哪一种风格？然后哪种编码风格您更喜欢？</span></section><section><br></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;color: rgb(0, 122, 170);\">丑陋的 try catch 代码块：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.839835728952772\" data-s=\"300,640\" data-type=\"png\" data-w=\"974\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVlS9qFM760JakC7zpHIWibMk0Smme9ema5dicM4RC3SMlXcO1SThnKwAQ/640?wx_fmt=png\"></section><section style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;color: rgb(0, 122, 170);\">优雅的 Controller：</span></section><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.49129989764585463\" data-s=\"300,640\" data-type=\"png\" data-w=\"977\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVQVaeQT0xB13D781Iocl6tMH1LK4Zyc4pBdgC6XRzTUo6CfcfVwHexg/640?wx_fmt=png\"></section><p><span style=\"font-size: 15px;\">上面的示例，还只是在 Controller 层，如果是在 Service 层，可能会有更多的 try catch 代码块。这将会严重影响代码的可读性、“美观性”。</span></p><p><br></p><p><span style=\"font-size: 15px;\">所以如果是我的话，我肯定偏向于第二种，我可以把更多的精力放在业务代码的开发，同时代码也会变得更加简洁。</span></p><p><br></p><p><span style=\"font-size: 15px;\">既然业务代码不显式地对异常进行捕获、处理，而异常肯定还是处理的，不然系统岂不是动不动就崩溃了，所以必须得有其他地方捕获并处理这些异常。</span></p><p><br></p><section><span style=\"font-size: 15px;\">那么问题来了，如何优雅的处理各种异常？</span></section><section><br></section><section style=\"box-sizing: border-box;font-size: 16px;\"><section style=\"text-align: center;justify-content: center;margin: 10px 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: auto;vertical-align: top;min-width: 10%;max-width: 100%;height: auto;border-bottom: 1px solid rgb(126, 169, 195);border-bottom-right-radius: 0px;line-height: 0;box-sizing: border-box;\"><section style=\"margin-right: 0%;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"letter-spacing: 0px;line-height: 1.8;font-size: 15px;color: rgb(126, 169, 195);padding-right: 5px;padding-left: 5px;box-sizing: border-box;\"><p style=\"box-sizing: border-box;\"><strong style=\"box-sizing: border-box;\">什么是统一异常处理</strong></p></section></section><section style=\"margin-right: 0%;margin-bottom: -3px;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: 5px;height: 5px;vertical-align: top;overflow: hidden;border-width: 0px;border-radius: 202px;border-style: none;border-color: rgb(62, 62, 62);background-color: rgb(126, 169, 195);box-sizing: border-box;\"><section><svg viewbox=\"0 0 1 1\" style=\"float:left;line-height:0;width:0;vertical-align:top;\"></svg></section></section></section></section></section></section><p><br></p><section><span style=\"font-size: 15px;\">Spring 在 3.2 版本增加了一个注解 @ControllerAdvice，可以与 @ExceptionHandler、@InitBinder、@ModelAttribute 等注解注解配套使用。</span></section><section><br></section><section><span style=\"font-size: 15px;\">对于这几个注解的作用，这里不做过多赘述，若有不了解的，可以参考 Spring 3.2 新注解 @ControllerAdvice，先大概有个了解。</span></section><section><br></section><section><span style=\"font-size: 15px;\">不过跟异常处理相关的只有注解 @ExceptionHandler，从字面上看，就是异常处理器的意思。</span></section><section><br></section><section><strong><span style=\"font-size: 15px;\">其实际作用也是：</span></strong><span style=\"font-size: 15px;\">若在某个 Controller 类定义一个异常处理方法，并在方法上添加该注解，那么当出现指定的异常时，会执行该处理异常的方法。</span></section><section><br></section><section><span style=\"font-size: 15px;\">其可以使用 SpringMVC 提供的数据绑定，比如注入 HttpServletRequest 等，还可以接受一个当前抛出的 Throwable 对象。</span></section><section><br></section><section><span style=\"font-size: 15px;\">但是，这样一来，就必须在每一个 Controller 类都定义一套这样的异常处理方法，因为异常可以是各种各样。这样一来，就会造成大量的冗余代码，而且若需要新增一种异常的处理逻辑，就必须修改所有 Controller 类了，很不优雅。</span></section><section><br></section><section><span style=\"font-size: 15px;\">当然你可能会说，那就定义个类似 BaseController 的基类，这样总行了吧。</span></section><section><br></section><section><span style=\"font-size: 15px;\">这种做法虽然没错，但仍不尽善尽美，因为这样的代码有一定的侵入性和耦合性。简简单单的 Controller，我为啥非得继承这样一个类呢，万一已经继承其他基类了呢。大家都知道 Java 只能继承一个类。</span></section><section><br></section><section><span style=\"font-size: 15px;\">那有没有一种方案，既不需要跟 Controller 耦合，也可以将定义的异常处理器应用到所有控制器呢？</span></section><section><br></section><section><span style=\"font-size: 15px;\">所以注解 @ControllerAdvice 出现了，简单的说，该注解可以把异常处理器应用到所有控制器，而不是单个控制器。</span></section><section><br></section><section><strong><span style=\"font-size: 15px;\">借助该注解，我们可以实现：</span></strong><span style=\"font-size: 15px;\">在独立的某个地方，比如单独一个类，定义一套对各种异常的处理机制，然后在类的签名加上注解 @ControllerAdvice，统一对不同阶段的、不同异常进行处理。这就是统一异常处理的原理。</span></section><section><br></section><p><span style=\"font-size: 15px;\">注意到上面对异常按阶段进行分类，大体可以分成：进入 Controller 前的异常和 Service 层异常。</span></p><p><br></p><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;color: rgb(0, 122, 170);\">具体可以参考下图：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.4504310344827586\" data-s=\"300,640\" data-type=\"png\" data-w=\"928\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVQQvAmsAZELXo0tLkxluXgFzRmGgw90pic939e7xHz64Dw24qgvdmdGg/640?wx_fmt=png\"></section><p style=\"text-align: center;\"><span style=\"font-size: 12px;\"><em>不同阶段的异常</em></span></p><section style=\"box-sizing: border-box;font-size: 16px;\"><section style=\"text-align: center;justify-content: center;margin: 10px 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: auto;vertical-align: top;min-width: 10%;max-width: 100%;height: auto;border-bottom: 1px solid rgb(126, 169, 195);border-bottom-right-radius: 0px;line-height: 0;box-sizing: border-box;\"><section style=\"margin-right: 0%;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"letter-spacing: 0px;line-height: 1.8;font-size: 15px;color: rgb(126, 169, 195);padding-right: 5px;padding-left: 5px;box-sizing: border-box;\"><p style=\"box-sizing: border-box;\"><strong style=\"box-sizing: border-box;\">目标</strong></p></section></section><section style=\"margin-right: 0%;margin-bottom: -3px;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: 5px;height: 5px;vertical-align: top;overflow: hidden;border-width: 0px;border-radius: 202px;border-style: none;border-color: rgb(62, 62, 62);background-color: rgb(126, 169, 195);box-sizing: border-box;\"><section><svg viewbox=\"0 0 1 1\" style=\"float:left;line-height:0;width:0;vertical-align:top;\"></svg></section></section></section></section></section></section><p><br></p><p><span style=\"font-size: 15px;\">消灭 95% 以上的 try catch 代码块，以优雅的 Assert（断言）方式来校验业务的异常情况，只关注业务逻辑，而不用花费大量精力写冗余的 try catch 代码块。</span></p><p><br></p><section style=\"box-sizing: border-box;font-size: 16px;\"><section style=\"text-align: center;justify-content: center;margin: 10px 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: auto;vertical-align: top;min-width: 10%;max-width: 100%;height: auto;border-bottom: 1px solid rgb(126, 169, 195);border-bottom-right-radius: 0px;line-height: 0;box-sizing: border-box;\"><section style=\"margin-right: 0%;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"letter-spacing: 0px;line-height: 1.8;font-size: 15px;color: rgb(126, 169, 195);padding-right: 5px;padding-left: 5px;box-sizing: border-box;\"><p style=\"box-sizing: border-box;\"><strong style=\"box-sizing: border-box;\">统一异常处理实战</strong></p></section></section><section style=\"margin-right: 0%;margin-bottom: -3px;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: 5px;height: 5px;vertical-align: top;overflow: hidden;border-width: 0px;border-radius: 202px;border-style: none;border-color: rgb(62, 62, 62);background-color: rgb(126, 169, 195);box-sizing: border-box;\"><section><svg viewbox=\"0 0 1 1\" style=\"float:left;line-height:0;width:0;vertical-align:top;\"></svg></section></section></section></section></section></section><p><br></p><p><span style=\"font-size: 15px;\">在定义统一异常处理类之前，先来介绍一下如何优雅的判定异常情况并抛异常。</span></p><p><br></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-bottom: 15px;outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb border-box break-word><strong style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 15px;color: rgb(0, 122, 170);box-sizing: border-box !important;overflow-wrap: break-word !important;\">| 用 Assert（断言）替换 throw exception</span></strong></h4><section><span style=\"font-size: 15px;\">想必 Assert（断言）大家都很熟悉，比如 Spring 家族的 org.springframework.util.Assert，在我们写测试用例的时候经常会用到。</span></section><section><br></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">使用断言能让我们编码的时候有一种非一般丝滑的感觉，比如：</span></p><section style=\"font-size: 16px;color: rgb(62, 62, 62);line-height: 1.6;letter-spacing: 0px;font-family: \" helvetica neue sans gb yahei arial sans-serif><pre style=\"font-size: inherit;color: inherit;line-height: inherit;\"><code style=\"margin-right: 2px;margin-left: 2px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;color: rgb(169, 183, 198);background: rgb(40, 43, 46);padding: 0.5em;overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;\"><span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@Test</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> <span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">void</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">test1</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">()</span> </span>{<br>        ...<br>        User user = userDao.selectById(userId);<br>        Assert.notNull(user, <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"用户不存在.\"</span>);<br>        ...<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@Test</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> <span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">void</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">test2</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">()</span> </span>{<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">// 另一种写法</span><br>        User user = userDao.selectById(userId);<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">if</span> (user == <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">null</span>) {<br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">throw</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> IllegalArgumentException(<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"用户不存在.\"</span>);<br>        }<br>    }<br></code></pre></section><section><br></section><section><span style=\"font-size: 15px;\">有没有感觉第一种判定非空的写法很优雅，第二种写法则是相对丑陋的 if {...} 代码块。那么神奇的 Assert.notNull() 背后到底做了什么呢？</span></section><section><br></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;color: rgb(0, 122, 170);\">下面是 Assert 的部分源码：</span></p><section style=\"font-size: 16px;color: rgb(62, 62, 62);line-height: 1.6;letter-spacing: 0px;font-family: \" helvetica neue sans gb yahei arial sans-serif><pre style=\"font-size: inherit;color: inherit;line-height: inherit;\"><code style=\"margin-right: 2px;margin-left: 2px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;color: rgb(169, 183, 198);background: rgb(40, 43, 46);padding: 0.5em;overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;\"><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">abstract</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">class</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">Assert</span> {<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">Assert</span>() </span>{<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> <span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">static</span> <span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">void</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">notNull</span>(<span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">@Nullable Object <span style=\"line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">object</span>, String message</span>) </span>{<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">if</span> (<span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">object</span> == <span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">null</span>) {<br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">throw</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> IllegalArgumentException(message);<br>        }<br>    }<br>}<br></code></pre></section><section><br></section><section><span style=\"font-size: 15px;\">可以看到，Assert 其实就是帮我们把 if {...} 封装了一下，是不是很神奇？虽然很简单，但不可否认的是编码体验至少提升了一个档次。</span></section><section><br></section><section><span style=\"font-size: 15px;\">那么我们能不能模仿 org.springframework.util.Assert，也写一个断言类，不过断言失败后抛出的异常不是 IllegalArgumentException 这些内置异常，而是我们自己定义的异常。</span></section><section><br></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;color: rgb(0, 122, 170);\">下面让我们来尝试一下：</span></p><section style=\"font-size: 16px;color: rgb(62, 62, 62);line-height: 1.6;letter-spacing: 0px;font-family: \" helvetica neue sans gb yahei arial sans-serif><pre style=\"font-size: inherit;color: inherit;line-height: inherit;\"><code style=\"margin-right: 2px;margin-left: 2px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;color: rgb(169, 183, 198);background: rgb(40, 43, 46);padding: 0.5em;overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;\">Assert<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">interface</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">Assert</span> </span>{<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 创建异常<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> args<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span><br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">BaseException <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">newException</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(Object... args)</span></span>;<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 创建异常<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> t<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> args<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span><br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">BaseException <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">newException</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(Throwable t, Object... args)</span></span>;<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * <p>断言对象<code>obj</code>非空。如果对象<code>obj</code>为空，则抛出异常<br>     *<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> obj 待判断对象<br>     */</p></span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">default</span> <span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">void</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">assertNotNull</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(Object obj)</span> </span>{<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">if</span> (obj == <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">null</span>) {<br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">throw</span> newException(obj);<br>        }<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * <p>断言对象<code>obj</code>非空。如果对象<code>obj</code>为空，则抛出异常<br>     * </p><p>异常信息<code>message</code>支持传递参数方式，避免在判断之前进行字符串拼接操作<br>     *<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> obj 待判断对象<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> args message占位符对应的参数列表<br>     */</p></span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">default</span> <span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">void</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">assertNotNull</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(Object obj, Object... args)</span> </span>{<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">if</span> (obj == <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">null</span>) {<br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">throw</span> newException(args);<br>        }<br>    }<br>}<br></code></pre></section><section><br></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre></pre></section><section><span style=\"font-size: 15px;\">上面的 Assert 断言方法是使用接口的默认方法定义的，然后有没有发现当断言失败后，抛出的异常不是具体的某个异常，而是交由 2 个 newException 接口方法提供。</span></section><section><br></section><section><span style=\"font-size: 15px;\">因为业务逻辑中出现的异常基本都是对应特定的场景，比如根据用户 id 获取用户信息，查询结果为 null，此时抛出的异常可能为 UserNotFoundException，并且有特定的异常码（比如 7001）和异常信息“用户不存在”。</span></section><section><br></section><section><span style=\"font-size: 15px;\">所以具体抛出什么异常，由 Assert 的实现类决定。</span></section><section><br></section><section><span style=\"font-size: 15px;\">看到这里，您可能会有这样的疑问，按照上面的说法，那岂不是有多少异常情况，就得有定义等量的断言类和异常类，这显然是反人类的，这也没想象中高明嘛。别急，且听我细细道来。</span></section><section><br></section><h4 data-tool=\"mdnice编辑器\" style=\"margin-bottom: 15px;outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb border-box break-word><strong style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 15px;color: rgb(0, 122, 170);box-sizing: border-box !important;overflow-wrap: break-word !important;\">| 善解人意的 Enum</span></strong></h4><section><span style=\"font-size: 15px;\">自定义异常 BaseException 有 2 个属性，即 code、message，这样一对属性，有没有想到什么类一般也会定义这 2 个属性？</span></section><section><br></section><section><span style=\"font-size: 15px;\">没错，就是枚举类。且看我如何将 Enum 和 Assert 结合起来，相信我一定会让你眼前一亮。</span></section><section><br></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">如下：</span></p><section style=\"font-size: 16px;color: rgb(62, 62, 62);line-height: 1.6;letter-spacing: 0px;font-family: \" helvetica neue sans gb yahei arial sans-serif><pre style=\"font-size: inherit;color: inherit;line-height: inherit;\"><code style=\"margin-right: 2px;margin-left: 2px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;color: rgb(169, 183, 198);background: rgb(40, 43, 46);padding: 0.5em;overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;\"><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">interface</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">IResponseEnum</span> </span>{<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">int</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">getCode</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">()</span></span>;<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">String <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">getMessage</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">()</span></span>;<br>}<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br> * <p>业务异常</p><br> * <p>业务处理时，出现异常，可以抛出该异常</p><br> */</span><br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">class</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">BusinessException</span> <span style=\"line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">extends</span>  <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">BaseException</span> </span>{<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">private</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">static</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">final</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">long</span> serialVersionUID = <span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">1L</span>;<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">BusinessException</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(IResponseEnum responseEnum, Object[] args, String message)</span> </span>{<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">super</span>(responseEnum, args, message);<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">BusinessException</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(IResponseEnum responseEnum, Object[] args, String message, Throwable cause)</span> </span>{<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">super</span>(responseEnum, args, message, cause);<br>    }<br>}<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">interface</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">BusinessExceptionAssert</span> <span style=\"line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">extends</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">IResponseEnum</span>, <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">Assert</span> </span>{<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@Override</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">default</span> BaseException <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">newException</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(Object... args)</span> </span>{<br>        String msg = MessageFormat.format(<span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">this</span>.getMessage(), args);<br><br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> BusinessException(<span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">this</span>, args, msg);<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@Override</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">default</span> BaseException <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">newException</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(Throwable t, Object... args)</span> </span>{<br>        String msg = MessageFormat.format(<span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">this</span>.getMessage(), args);<br><br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> BusinessException(<span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">this</span>, args, msg, t);<br>    }<br><br>}<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@Getter</span><br><span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@AllArgsConstructor</span><br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">enum</span> ResponseEnum implements BusinessExceptionAssert {<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * Bad licence type<br>     */</span><br>    BAD_LICENCE_TYPE(<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">7001</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"Bad licence type.\"</span>),<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * Licence not found<br>     */</span><br>    LICENCE_NOT_FOUND(<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">7002</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"Licence not found.\"</span>)<br>    ;<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 返回码<br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">private</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">int</span> code;<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 返回消息<br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">private</span> String message;<br>}<br></code></pre></section><section><br></section><section><span style=\"font-size: 15px;\">看到这里，有没有眼前一亮的感觉，代码示例中定义了两个枚举实例：</span></section><ul class=\"list-paddingleft-1\"><li><p><span style=\"font-size: 15px;\">BAD_LICENCE_TYPE</span></p></li><li><p><span style=\"font-size: 15px;\">LICENCE_NOT_FOUND</span></p></li></ul><section><br></section><section><br></section><section><br></section><section><span style=\"font-size: 15px;\">他们分别对应了 BadLicenceTypeException、LicenceNotFoundException 两种异常。</span></section><section><br></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">以后每增加一种异常情况，只需增加一个枚举实例即可，再也不用每一种异常都定义一个异常类了。然后再来看下如何使用，假设 LicenceService 有校验 Licence 是否存在的方法，如下：</span></p><section style=\"font-size: 16px;color: rgb(62, 62, 62);line-height: 1.6;letter-spacing: 0px;font-family: \" helvetica neue sans gb yahei arial sans-serif><pre style=\"font-size: inherit;color: inherit;line-height: inherit;\"><code style=\"margin-right: 2px;margin-left: 2px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;color: rgb(169, 183, 198);background: rgb(40, 43, 46);padding: 0.5em;overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;\"><span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 校验{<span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@link</span> Licence}存在<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> licence<br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">private</span> <span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">void</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">checkNotNull</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(Licence licence)</span> </span>{<br>        ResponseEnum.LICENCE_NOT_FOUND.assertNotNull(licence);<br>    }<br></code></pre></section><section><br></section><section style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">若不使用断言，代码可能如下：</span></section><section style=\"font-size: 16px;color: rgb(62, 62, 62);line-height: 1.6;letter-spacing: 0px;font-family: \" helvetica neue sans gb yahei arial sans-serif><pre style=\"font-size: inherit;color: inherit;line-height: inherit;\"><code style=\"margin-right: 2px;margin-left: 2px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;color: rgb(169, 183, 198);background: rgb(40, 43, 46);padding: 0.5em;overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;\"><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">private</span> <span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">void</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">checkNotNull</span>(<span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">Licence licence</span>) </span>{<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">if</span> (licence == <span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">null</span>) {<br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">throw</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> LicenceNotFoundException();<br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">// 或者这样</span><br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">throw</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> BusinessException(<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">7001</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"Bad licence type.\"</span>);<br>        }<br>    }<br></code></pre></section><p><br></p><p><span style=\"font-size: 15px;\">使用枚举类结合（继承）Assert，只需根据特定的异常情况定义不同的枚举实例，如上面的 BAD_LICENCE_TYPE、LICENCE_NOT_FOUND，就能够针对不同情况抛出特定的异常（这里指携带特定的异常码和异常消息）。</span></p><p><br></p><p><span style=\"font-size: 15px;\">这样既不用定义大量的异常类，同时还具备了断言的良好可读性，当然这种方案的好处远不止这些，请继续阅读后文，慢慢体会。</span></p><p><br></p><p><span style=\"font-size: 15px;\">注：上面举的例子是针对特定的业务，而有部分异常情况是通用的，比如：服务器繁忙、网络异常、服务器异常、参数校验异常、404 等，所以有CommonResponseEnum、ArgumentResponseEnum、ServletResponseEnum，其中 ServletResponseEnum 会在后文详细说明。</span></p><p><br></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-bottom: 15px;outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb border-box break-word><strong style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 15px;color: rgb(0, 122, 170);box-sizing: border-box !important;overflow-wrap: break-word !important;\">| 定义统一异常处理器类</span></strong></h4><section style=\"font-size: 16px;color: rgb(62, 62, 62);line-height: 1.6;letter-spacing: 0px;font-family: \" helvetica neue sans gb yahei arial sans-serif><pre style=\"font-size: inherit;color: inherit;line-height: inherit;\"><code style=\"margin-right: 2px;margin-left: 2px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;color: rgb(169, 183, 198);background: rgb(40, 43, 46);padding: 0.5em;overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;\"><span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@Slf</span>4j<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@Component</span><br><span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ControllerAdvice</span><br><span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ConditionalOnWebApplication</span><br><span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ConditionalOnMissingBean</span>(UnifiedExceptionHandler.class)<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">class</span> <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">UnifiedExceptionHandler</span> </span>{<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 生产环境<br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">private</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">final</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">static</span> String ENV_PROD = <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"prod\"</span>;<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@Autowired</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">private</span> UnifiedMessageSource unifiedMessageSource;<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 当前环境<br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@Value</span>(<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"${spring.profiles.active}\"</span>)<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">private</span> String profile;<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 获取国际化消息<br>     *<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> e 异常<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span><br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> String <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">getMessage</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(BaseException e)</span> </span>{<br>        String code = <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"response.\"</span> + e.getResponseEnum().toString();<br>        String message = unifiedMessageSource.getMessage(code, e.getArgs());<br><br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">if</span> (message == <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">null</span> || message.isEmpty()) {<br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> e.getMessage();<br>        }<br><br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> message;<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 业务异常<br>     *<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> e 异常<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span> 异常结果<br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ExceptionHandler</span>(value = BusinessException.class)<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ResponseBody</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> ErrorResponse <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">handleBusinessException</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(BaseException e)</span> </span>{<br>        log.error(e.getMessage(), e);<br><br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> ErrorResponse(e.getResponseEnum().getCode(), getMessage(e));<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 自定义异常<br>     *<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> e 异常<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span> 异常结果<br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ExceptionHandler</span>(value = BaseException.class)<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ResponseBody</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> ErrorResponse <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">handleBaseException</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(BaseException e)</span> </span>{<br>        log.error(e.getMessage(), e);<br><br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> ErrorResponse(e.getResponseEnum().getCode(), getMessage(e));<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * Controller上一层相关异常<br>     *<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> e 异常<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span> 异常结果<br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ExceptionHandler</span>({<br>            NoHandlerFoundException.class,<br>            HttpRequestMethodNotSupportedException.class,<br>            HttpMediaTypeNotSupportedException.class,<br>            MissingPathVariableException.class,<br>            MissingServletRequestParameterException.class,<br>            TypeMismatchException.class,<br>            HttpMessageNotReadableException.class,<br>            HttpMessageNotWritableException.class,<br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">// BindException.class,</span><br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">// MethodArgumentNotValidException.class</span><br>            HttpMediaTypeNotAcceptableException.class,<br>            ServletRequestBindingException.class,<br>            ConversionNotSupportedException.class,<br>            MissingServletRequestPartException.class,<br>            AsyncRequestTimeoutException.class<br>    })<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ResponseBody</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> ErrorResponse <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">handleServletException</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(Exception e)</span> </span>{<br>        log.error(e.getMessage(), e);<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">int</span> code = CommonResponseEnum.SERVER_ERROR.getCode();<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">try</span> {<br>            ServletResponseEnum servletExceptionEnum = ServletResponseEnum.valueOf(e.getClass().getSimpleName());<br>            code = servletExceptionEnum.getCode();<br>        } <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">catch</span> (IllegalArgumentException e1) {<br>            log.error(<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"class [{}] not defined in enum {}\"</span>, e.getClass().getName(), ServletResponseEnum.class.getName());<br>        }<br><br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">if</span> (ENV_PROD.equals(profile)) {<br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">// 当为生产环境, 不适合把具体的异常信息展示给用户, 比如404.</span><br>            code = CommonResponseEnum.SERVER_ERROR.getCode();<br>            BaseException baseException = <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> BaseException(CommonResponseEnum.SERVER_ERROR);<br>            String message = getMessage(baseException);<br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> ErrorResponse(code, message);<br>        }<br><br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> ErrorResponse(code, e.getMessage());<br>    }<br><br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 参数绑定异常<br>     *<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> e 异常<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span> 异常结果<br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ExceptionHandler</span>(value = BindException.class)<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ResponseBody</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> ErrorResponse <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">handleBindException</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(BindException e)</span> </span>{<br>        log.error(<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"参数绑定校验异常\"</span>, e);<br><br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> wrapperBindingResult(e.getBindingResult());<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 参数校验异常，将校验失败的所有异常组合成一条错误信息<br>     *<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> e 异常<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span> 异常结果<br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ExceptionHandler</span>(value = MethodArgumentNotValidException.class)<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ResponseBody</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> ErrorResponse <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">handleValidException</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(MethodArgumentNotValidException e)</span> </span>{<br>        log.error(<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"参数绑定校验异常\"</span>, e);<br><br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> wrapperBindingResult(e.getBindingResult());<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 包装绑定异常结果<br>     *<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> bindingResult 绑定结果<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span> 异常结果<br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">private</span> ErrorResponse <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">wrapperBindingResult</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(BindingResult bindingResult)</span> </span>{<br>        StringBuilder msg = <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> StringBuilder();<br><br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">for</span> (ObjectError error : bindingResult.getAllErrors()) {<br>            msg.append(<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\", \"</span>);<br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">if</span> (error <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">instanceof</span> FieldError) {<br>                msg.append(((FieldError) error).getField()).append(<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\": \"</span>);<br>            }<br>            msg.append(error.getDefaultMessage() == <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">null</span> ? <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"\"</span> : error.getDefaultMessage());<br><br>        }<br><br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> ErrorResponse(ArgumentResponseEnum.VALID_ERROR.getCode(), msg.substring(<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">2</span>));<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 未定义异常<br>     *<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> e 异常<br>     * <span style=\"color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span> 异常结果<br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ExceptionHandler</span>(value = Exception.class)<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ResponseBody</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> ErrorResponse <span style=\"line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">handleException</span><span style=\"line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(Exception e)</span> </span>{<br>        log.error(e.getMessage(), e);<br><br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">if</span> (ENV_PROD.equals(profile)) {<br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">// 当为生产环境, 不适合把具体的异常信息展示给用户, 比如数据库异常信息.</span><br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">int</span> code = CommonResponseEnum.SERVER_ERROR.getCode();<br>            BaseException baseException = <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> BaseException(CommonResponseEnum.SERVER_ERROR);<br>            String message = getMessage(baseException);<br>            <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> ErrorResponse(code, message);<br>        }<br><br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> ErrorResponse(CommonResponseEnum.SERVER_ERROR.getCode(), e.getMessage());<br>    }<br><br>}<br></code></pre></section><p><br></p><p><span style=\"font-size: 15px;\">可以看到，上面将异常分成几类，实际上只有两大类，一类是 ServletException、ServiceException。</span></p><p><br></p><p><span style=\"font-size: 15px;\">还记得上文提到的按阶段分类吗，即对应进入 Controller 前的异常 和 Service 层异常；然后 ServiceException 再分成自定义异常、未知异常。</span></p><p><br></p><p><span style=\"font-size: 15px;color: rgb(0, 122, 170);\">对应关系如下：</span></p><ul class=\"list-paddingleft-1\"><li><p><span style=\"font-size: 15px;\">进入 Controller 前的异常：handleServletException、handleBindException、handleValidException</span></p></li><li><p><span style=\"font-size: 15px;\">自定义异常：handleBusinessException、handleBaseException</span></p></li><li><p><span style=\"font-size: 15px;\">未知异常：handleException</span></p></li></ul><section><br></section><section><span style=\"font-size: 15px;\">接下来分别对这几种异常处理器做详细说明。</span></section><section><br></section><section style=\"box-sizing: border-box;font-size: 16px;\"><section style=\"text-align: center;justify-content: center;margin: 10px 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: auto;vertical-align: top;min-width: 10%;max-width: 100%;height: auto;border-bottom: 1px solid rgb(126, 169, 195);border-bottom-right-radius: 0px;line-height: 0;box-sizing: border-box;\"><section style=\"margin-right: 0%;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"letter-spacing: 0px;line-height: 1.8;font-size: 15px;color: rgb(126, 169, 195);padding-right: 5px;padding-left: 5px;box-sizing: border-box;\"><p style=\"box-sizing: border-box;\"><strong style=\"box-sizing: border-box;\">异常处理器说明</strong></p></section></section><section style=\"margin-right: 0%;margin-bottom: -3px;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: 5px;height: 5px;vertical-align: top;overflow: hidden;border-width: 0px;border-radius: 202px;border-style: none;border-color: rgb(62, 62, 62);background-color: rgb(126, 169, 195);box-sizing: border-box;\"><section><svg viewbox=\"0 0 1 1\" style=\"float:left;line-height:0;width:0;vertical-align:top;\"></svg></section></section></section></section></section></section><section><br></section><h4 data-tool=\"mdnice编辑器\" style=\"margin-bottom: 15px;outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb border-box break-word><strong style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 15px;color: rgb(0, 122, 170);box-sizing: border-box !important;overflow-wrap: break-word !important;\">| handleServletException</span></strong></h4><p><span style=\"font-size: 15px;\">一个 http 请求，在到达 Controller 前，会对该请求的请求信息与目标控制器信息做一系列校验。</span></p><p><br></p><p><span style=\"font-size: 15px;color: rgb(0, 122, 170);\">这里简单说一下：</span></p><p><br></p><p><strong><span style=\"font-size: 15px;\">NoHandlerFoundException：</span></strong><span style=\"font-size: 15px;\">首先根据请求 Url 查找有没有对应的控制器，若没有则会抛该异常，也就是大家非常熟悉的 404 异常。</span></p><p><br></p><p><strong><span style=\"font-size: 15px;\">HttpRequestMethodNotSupportedException：</span></strong><span style=\"font-size: 15px;\">若匹配到了（匹配结果是一个列表，不同的是 http 方法不同，如：Get、Post 等），则尝试将请求的 http 方法与列表的控制器做匹配，若没有对应 http 方法的控制器，则抛该异常。</span></p><p><br></p><p><strong><span style=\"font-size: 15px;\">HttpMediaTypeNotSupportedException：</span></strong><span style=\"font-size: 15px;\">然后再对请求头与控制器支持的做比较。</span></p><p><br></p><p><span style=\"font-size: 15px;\">比如 content-type 请求头，若控制器的参数签名包含注解 @RequestBody，但是请求的 content-type 请求头的值没有包含 application/json，那么会抛该异常（当然，不止这种情况会抛这个异常）。</span></p><p><br></p><p><strong><span style=\"font-size: 15px;\">MissingPathVariableException：</span></strong><span style=\"font-size: 15px;\">未检测到路径参数。比如 url 为：/licence/{licenceId}，参数签名包含 @PathVariable(\"licenceId\")。</span></p><p><br></p><p><span style=\"font-size: 15px;\">当请求的 url 为 /licence，在没有明确定义 url 为 /licence 的情况下，会被判定为：缺少路径参数。</span></p><p><br></p><p><strong><span style=\"font-size: 15px;\">MissingServletRequestParameterException：</span></strong><span style=\"font-size: 15px;\">缺少请求参数。比如定义了参数 @RequestParam(\"licenceId\") String licenceId，但发起请求时，未携带该参数，则会抛该异常。</span></p><p><br></p><p><strong><span style=\"font-size: 15px;\">TypeMismatchException：</span></strong><span style=\"font-size: 15px;\">参数类型匹配失败。比如：接收参数为 Long 型，但传入的值确是一个字符串，那么将会出现类型转换失败的情况，这时会抛该异常。</span></p><p><br></p><p><strong><span style=\"font-size: 15px;\">HttpMessageNotReadableException：</span></strong><span style=\"font-size: 15px;\">与上面的 HttpMediaTypeNotSupportedException 举的例子完全相反。</span></p><p><br></p><p><span style=\"font-size: 15px;\">即请求头携带了\"content-type: application/json;charset=UTF-8\"，但接收参数却没有添加注解 @RequestBody，或者请求体携带的 json 串反序列化成 pojo 的过程中失败了，也会抛该异常。</span></p><p><br></p><p><strong><span style=\"font-size: 15px;\">HttpMessageNotWritableException：</span></strong><span style=\"font-size: 15px;\">返回的 pojo 在序列化成 json 过程失败了，那么抛该异常。</span></p><p><br></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-bottom: 15px;outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb border-box break-word><strong style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 15px;color: rgb(0, 122, 170);box-sizing: border-box !important;overflow-wrap: break-word !important;\">| handleBindException</span></strong></h4><section><span style=\"font-size: 15px;\">参数校验异常，后文详细说明。</span></section><section><br></section><h4 data-tool=\"mdnice编辑器\" style=\"margin-bottom: 15px;outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb border-box break-word><strong style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 15px;color: rgb(0, 122, 170);box-sizing: border-box !important;overflow-wrap: break-word !important;\">| handleValidException</span></strong></h4><section><span style=\"font-size: 15px;\">参数校验异常，后文详细说明。</span></section><section><span style=\"font-size: 15px;\"><br></span></section><h4 data-tool=\"mdnice编辑器\" style=\"margin-bottom: 15px;outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb border-box break-word><strong style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 15px;color: rgb(0, 122, 170);box-sizing: border-box !important;overflow-wrap: break-word !important;\">| handleBusinessException、handleBaseException</span></strong></h4><p><span style=\"font-size: 15px;\">处理自定义的业务异常，只是 handleBaseException 处理的是除了 BusinessException 意外的所有业务异常。就目前来看，这 2 个是可以合并成一个的。</span></p><p><br></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-bottom: 15px;outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb border-box break-word><strong style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 15px;color: rgb(0, 122, 170);box-sizing: border-box !important;overflow-wrap: break-word !important;\">| handleException</span></strong></h4><section><span style=\"font-size: 15px;\">处理所有未知的异常，比如操作数据库失败的异常。</span></section><section><br></section><section><span style=\"font-size: 15px;\">注：上面的 handleServletException、handleException 这两个处理器，返回的异常信息，不同环境返回的可能不一样，以为这些异常信息都是框架自带的异常信息，一般都是英文的，不太好直接展示给用户看，所以统一返回 SERVER_ERROR 代表的异常信息。</span></section><section><br></section><section style=\"box-sizing: border-box;font-size: 16px;\"><section style=\"text-align: center;justify-content: center;margin: 10px 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: auto;vertical-align: top;min-width: 10%;max-width: 100%;height: auto;border-bottom: 1px solid rgb(126, 169, 195);border-bottom-right-radius: 0px;line-height: 0;box-sizing: border-box;\"><section style=\"margin-right: 0%;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"letter-spacing: 0px;line-height: 1.8;font-size: 15px;color: rgb(126, 169, 195);padding-right: 5px;padding-left: 5px;box-sizing: border-box;\"><p style=\"box-sizing: border-box;\"><strong style=\"box-sizing: border-box;\">异于常人的404</strong></p></section></section><section style=\"margin-right: 0%;margin-bottom: -3px;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: 5px;height: 5px;vertical-align: top;overflow: hidden;border-width: 0px;border-radius: 202px;border-style: none;border-color: rgb(62, 62, 62);background-color: rgb(126, 169, 195);box-sizing: border-box;\"><section><svg viewbox=\"0 0 1 1\" style=\"float:left;line-height:0;width:0;vertical-align:top;\"></svg></section></section></section></section></section></section><section><br></section><section style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">上文提到，当请求没有匹配到控制器的情况下，会抛出 NoHandlerFoundException 异常，但其实默认情况下不是这样，默认情况下会出现类似如下页面：</span></section><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.25125628140703515\" data-s=\"300,640\" data-type=\"png\" data-w=\"995\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVNicHkYlibn9GfkordYMClmpD68BXt4IUkltiasyibnlj4eribHzya1DGINQ/640?wx_fmt=png\"></section><section style=\"text-align: center;\"><span style=\"font-size: 12px;\"><em>Whitelabel Error Page</em></span><br></section><section><br></section><section><span style=\"font-size: 15px;\">这个页面是如何出现的呢？实际上，当出现 404 的时候，默认是不抛异常的，而是 forward 跳转到 /error 控制器。</span></section><section><br></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">Spring 也提供了默认的 error 控制器，如下：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.6213197969543147\" data-s=\"300,640\" data-type=\"png\" data-w=\"985\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVgkSibj4k6Ecn63Jw1RgjNEGOibcx3oicqiabc9ia3kqzbvufRLibkhHqXe0A/640?wx_fmt=png\"></section><section style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">那么，如何让 404 也抛出异常呢，只需在 properties 文件中加入如下配置即可：</span></section><section style=\"font-size: 16px;color: rgb(62, 62, 62);line-height: 1.6;letter-spacing: 0px;font-family: \" helvetica neue sans gb yahei arial sans-serif><pre style=\"font-size: inherit;color: inherit;line-height: inherit;\"><code style=\"margin-right: 2px;margin-left: 2px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;color: rgb(169, 183, 198);background: rgb(40, 43, 46);padding: 0.5em;overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;\">spring.mvc.<span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">throw</span>-exception-<span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">if</span>-<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">no</span>-handler-found=<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">true</span><br>spring.resources.add-mappings=<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">false</span><br></code></pre></section><p><br></p><p><span style=\"font-size: 15px;\">如此，就可以异常处理器中捕获它了，然后前端只要捕获到特定的状态码，立即跳转到 404 页面即可。</span></p><p><br></p><section style=\"box-sizing: border-box;font-size: 16px;\"><section style=\"text-align: center;justify-content: center;margin: 10px 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: auto;vertical-align: top;min-width: 10%;max-width: 100%;height: auto;border-bottom: 1px solid rgb(126, 169, 195);border-bottom-right-radius: 0px;line-height: 0;box-sizing: border-box;\"><section style=\"margin-right: 0%;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"letter-spacing: 0px;line-height: 1.8;font-size: 15px;color: rgb(126, 169, 195);padding-right: 5px;padding-left: 5px;box-sizing: border-box;\"><p style=\"box-sizing: border-box;\"><strong style=\"box-sizing: border-box;\">捕获404对应的异常</strong></p></section></section><section style=\"margin-right: 0%;margin-bottom: -3px;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: 5px;height: 5px;vertical-align: top;overflow: hidden;border-width: 0px;border-radius: 202px;border-style: none;border-color: rgb(62, 62, 62);background-color: rgb(126, 169, 195);box-sizing: border-box;\"><section><svg viewbox=\"0 0 1 1\" style=\"float:left;line-height:0;width:0;vertical-align:top;\"></svg></section></section></section></section></section></section><p><br></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-bottom: 15px;outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb border-box break-word><strong style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 15px;color: rgb(0, 122, 170);box-sizing: border-box !important;overflow-wrap: break-word !important;\">| 统一返回结果</span></strong></h4><p><span style=\"font-size: 15px;\">在验证统一异常处理器之前，顺便说一下统一返回结果。说白了，其实是统一一下返回结果的数据结构。</span></p><p><br></p><p><span style=\"font-size: 15px;\">code、message 是所有返回结果中必有的字段，而当需要返回数据时，则需要另一个字段 data 来表示。</span></p><p><br></p><p><span style=\"font-size: 15px;\">所以首先定义一个 BaseResponse 来作为所有返回结果的基类；</span><span style=\"font-size: 15px;\">然后定义一个通用返回结果类 CommonResponse，继承 BaseResponse，而且多了字段 data。</span></p><p><br></p><p><span style=\"font-size: 15px;\">为了区分成功和失败返回结果，于是再定义一个 ErrorResponse。</span></p><p><br></p><p><span style=\"font-size: 15px;\">最后还有一种常见的返回结果，即返回的数据带有分页信息，因为这种接口比较常见，所以有必要单独定义一个返回结果类 QueryDataResponse。</span></p><p><br></p><p><span style=\"font-size: 15px;\">该类继承自 CommonResponse，只是把 data 字段的类型限制为 QueryDdata，QueryDdata中定义了分页信息相应的字段，即 totalCount、pageNo、 pageSize、records。</span></p><p><br></p><p><span style=\"font-size: 15px;\">其中比较常用的只有 CommonResponse 和 QueryDataResponse，但是名字又贼鬼死长，何不定义 2 个名字超简单的类来替代呢？</span></p><p><br></p><p><span style=\"font-size: 15px;\">于是 R 和 QR 诞生了，以后返回结果的时候只需这样写：new R&lt;&gt;(data)、new QR&lt;&gt;(queryData)。</span></p><p><br></p><p><span style=\"font-size: 15px;\">所有的返回结果类的定义这里就不贴出来了。</span></p><p><br></p><h4 data-tool=\"mdnice编辑器\" style=\"margin-bottom: 15px;outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb border-box break-word><strong style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 15px;color: rgb(0, 122, 170);box-sizing: border-box !important;overflow-wrap: break-word !important;\">| 验证统一异常处理</span></strong></h4><p><span style=\"font-size: 15px;\">因为这一套统一异常处理可以说是通用的，所有可以设计成一个 common包，以后每一个新项目/模块只需引入该包即可。所以为了验证，需要新建一个项目，并引入该 common 包。</span></p><p><br></p><section style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;color: rgb(0, 122, 170);\">下面是用于验证的主要源码：</span></section><section style=\"font-size: 16px;color: rgb(62, 62, 62);line-height: 1.6;letter-spacing: 0px;font-family: \" helvetica neue sans gb yahei arial sans-serif><pre style=\"font-size: inherit;color: inherit;line-height: inherit;\"><code style=\"margin-right: 2px;margin-left: 2px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;color: rgb(169, 183, 198);background: rgb(40, 43, 46);padding: 0.5em;overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;\"><span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@Service</span><br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">class</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">LicenceService</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">extends</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">ServiceImpl</span>&lt;<span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">LicenceMapper</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">Licence</span>&gt; </span>{<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@Autowired</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">private</span> OrganizationClient organizationClient;<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 查询{<span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@link</span> Licence} 详情<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> licenceId<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span><br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"font-size: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> LicenceDTO <span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">queryDetail</span><span style=\"font-size: inherit;line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(Long licenceId)</span> </span>{<br>        Licence licence = <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">this</span>.getById(licenceId);<br>        checkNotNull(licence);<br><br>        OrganizationDTO org = ClientUtil.execute(() -&gt; organizationClient.getOrganization(licence.getOrganizationId()));<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> toLicenceDTO(licence, org);<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 分页获取<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> licenceParam 分页查询参数<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span><br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"font-size: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> QueryData<simplelicencedto> <span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">getLicences</span><span style=\"font-size: inherit;line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(LicenceParam licenceParam)</span> </simplelicencedto></span>{<br>        String licenceType = licenceParam.getLicenceType();<br>        LicenceTypeEnum licenceTypeEnum = LicenceTypeEnum.parseOfNullable(licenceType);<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">// 断言, 非空</span><br>        ResponseEnum.BAD_LICENCE_TYPE.assertNotNull(licenceTypeEnum);<br><br>        LambdaQueryWrapper<licence> wrapper = <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> LambdaQueryWrapper&lt;&gt;();<br>        wrapper.eq(Licence::getLicenceType, licenceType);<br>        IPage<licence> page = <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">this</span>.page(<span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> QueryPage&lt;&gt;(licenceParam), wrapper);<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> QueryData&lt;&gt;(page, <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">this</span>::toSimpleLicenceDTO);<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 新增{<span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@link</span> Licence}<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> request 请求体<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span><br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@Transactional</span>(rollbackFor = Throwable.class)<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"font-size: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> LicenceAddRespData <span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">addLicence</span><span style=\"font-size: inherit;line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(LicenceAddRequest request)</span> </span>{<br>        Licence licence = <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> Licence();<br>        licence.setOrganizationId(request.getOrganizationId());<br>        licence.setLicenceType(request.getLicenceType());<br>        licence.setProductName(request.getProductName());<br>        licence.setLicenceMax(request.getLicenceMax());<br>        licence.setLicenceAllocated(request.getLicenceAllocated());<br>        licence.setComment(request.getComment());<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">this</span>.save(licence);<br><br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> LicenceAddRespData(licence.getLicenceId());<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * entity -&gt; simple dto<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> licence {<span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@link</span> Licence} entity<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span> {<span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@link</span> SimpleLicenceDTO}<br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"font-size: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">private</span> SimpleLicenceDTO <span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">toSimpleLicenceDTO</span><span style=\"font-size: inherit;line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(Licence licence)</span> </span>{<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">// 省略</span><br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * entity -&gt; dto<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> licence {<span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@link</span> Licence} entity<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> org {<span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@link</span> OrganizationDTO}<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span> {<span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@link</span> LicenceDTO}<br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"font-size: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">private</span> LicenceDTO <span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">toLicenceDTO</span><span style=\"font-size: inherit;line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(Licence licence, OrganizationDTO org)</span> </span>{<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">// 省略</span><br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 校验{<span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@link</span> Licence}存在<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> licence<br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"font-size: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">private</span> <span style=\"font-size: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">void</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">checkNotNull</span><span style=\"font-size: inherit;line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(Licence licence)</span> </span>{<br>        ResponseEnum.LICENCE_NOT_FOUND.assertNotNull(licence);<br>    }<br><br>}<br></licence></licence></code></pre></section><p><br></p><section><span style=\"font-size: 15px;\">PS：这里使用的 DAO 框架是 mybatis-plus。</span></section><section><br></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">启动时，自动插入的数据为：</span></p><section style=\"font-size: 16px;color: rgb(62, 62, 62);line-height: 1.6;letter-spacing: 0px;font-family: \" helvetica neue sans gb yahei arial sans-serif><pre style=\"font-size: inherit;color: inherit;line-height: inherit;\"><code style=\"margin-right: 2px;margin-left: 2px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;color: rgb(169, 183, 198);background: rgb(40, 43, 46);padding: 0.5em;overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;\"><span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">-- licence</span><br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">INSERT</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">INTO</span> licence (licence_id, organization_id, licence_type, product_name, licence_max, licence_allocated)<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">VALUES</span> (<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">1</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">1</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'user'</span>,<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'CustomerPro'</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">100</span>,<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">5</span>);<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">INSERT</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">INTO</span> licence (licence_id, organization_id, licence_type, product_name, licence_max, licence_allocated)<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">VALUES</span> (<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">2</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">1</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'user'</span>,<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'suitability-plus'</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">200</span>,<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">189</span>);<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">INSERT</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">INTO</span> licence (licence_id, organization_id, licence_type, product_name, licence_max, licence_allocated)<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">VALUES</span> (<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">3</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">2</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'user'</span>,<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'HR-PowerSuite'</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">100</span>,<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">4</span>);<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">INSERT</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">INTO</span> licence (licence_id, organization_id, licence_type, product_name, licence_max, licence_allocated)<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">VALUES</span> (<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">4</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">2</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'core-prod'</span>,<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'WildCat Application Gateway'</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">16</span>,<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">16</span>);<br><br><span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">-- organizations</span><br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">INSERT</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">INTO</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">organization</span> (<span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">id</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">name</span>, contact_name, contact_email, contact_phone)<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">VALUES</span> (<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">1</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'customer-crm-co'</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'Mark Balster'</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'mark.balster@custcrmco.com'</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'823-555-1212'</span>);<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">INSERT</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">INTO</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">organization</span> (<span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">id</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">name</span>, contact_name, contact_email, contact_phone)<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">VALUES</span> (<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">2</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'HR-PowerSuite'</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'Doug Drewry'</span>,<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'doug.drewry@hr.com'</span>, <span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">'920-555-1212'</span>);<br></code></pre></section><section><br></section><section style=\"box-sizing: border-box;font-size: 16px;\"><section style=\"text-align: center;justify-content: center;margin: 10px 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: auto;vertical-align: top;min-width: 10%;max-width: 100%;height: auto;border-bottom: 1px solid rgb(126, 169, 195);border-bottom-right-radius: 0px;line-height: 0;box-sizing: border-box;\"><section style=\"margin-right: 0%;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"letter-spacing: 0px;line-height: 1.8;font-size: 15px;color: rgb(126, 169, 195);padding-right: 5px;padding-left: 5px;box-sizing: border-box;\"><p style=\"box-sizing: border-box;\"><strong style=\"box-sizing: border-box;\">开始验证</strong></p></section></section><section style=\"margin-right: 0%;margin-bottom: -3px;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: 5px;height: 5px;vertical-align: top;overflow: hidden;border-width: 0px;border-radius: 202px;border-style: none;border-color: rgb(62, 62, 62);background-color: rgb(126, 169, 195);box-sizing: border-box;\"><section><svg viewbox=\"0 0 1 1\" style=\"float:left;line-height:0;width:0;vertical-align:top;\"></svg></section></section></section></section></section></section><section><br></section><h4 data-tool=\"mdnice编辑器\" style=\"margin-bottom: 15px;outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb border-box break-word><strong style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 15px;color: rgb(0, 122, 170);box-sizing: border-box !important;overflow-wrap: break-word !important;\">| 捕获自定义异常</span></strong></h4><p><strong><span style=\"font-size: 15px;\">①</span></strong><span style=\"font-size: 15px;\">获取不存在的 licence 详情：</span><span style=\"font-size: 15px;\">http://localhost:10000/licence/5</span></p><p><br></p><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">成功响应的请求：</span></p><section style=\"font-size: 16px;color: rgb(62, 62, 62);line-height: 1.6;letter-spacing: 0px;font-family: \" helvetica neue sans gb yahei arial sans-serif><pre style=\"font-size: inherit;color: inherit;line-height: inherit;\"><code style=\"margin-right: 2px;margin-left: 2px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;color: rgb(169, 183, 198);background: rgb(40, 43, 46);padding: 0.5em;overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;\"><span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">licenceId</span>=<span style=\"font-size: inherit;line-height: inherit;color: rgb(174, 135, 250);overflow-wrap: inherit !important;word-break: inherit !important;\">1</span><br></code></pre></section><section><br></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">检验非空：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.20854526958290945\" data-s=\"300,640\" data-type=\"png\" data-w=\"983\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV8LAj46ibDUiaZeNPgWvXT7KiaIRd9wKIrickoWE5WHEwVUlyiciapmKMRZAg/640?wx_fmt=png\"></section><section style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">捕获 Licence not found 异常：</span></section><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.3323170731707317\" data-s=\"300,640\" data-type=\"png\" data-w=\"984\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVcVD7ALbblmjFXthoApf3r6tX9U4V12MR8UvsMmgxzn3PoY7mjkzD7A/640?wx_fmt=png\"></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">Licence not found：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.2690246516613076\" data-s=\"300,640\" data-type=\"png\" data-w=\"933\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVIlS1WURgp8MKhwmSuxNV0DYYXpngWyP8uBCJHarPGMJr6TJicAJTLhw/640?wx_fmt=png\"></section><p><strong><span style=\"font-size: 15px;\">②</span></strong><span style=\"font-size: 15px;\">根据不存在的 licence type 获取 licence 列表：http://localhost:10000/licence/list?licenceType=ddd。可选的 licence type 为：user、core-prod 。</span></p><p><br></p><section style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">校验非空：</span></section><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.22764227642276422\" data-s=\"300,640\" data-type=\"png\" data-w=\"984\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVfcMYos4pvz4VQDedpG9TjwLMNwrjJdJ1Dq0ZbcPzT32Gmrria3HB2pA/640?wx_fmt=png\"></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">捕获 Bad licence type 异常：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.3323170731707317\" data-s=\"300,640\" data-type=\"png\" data-w=\"984\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVj9iaKgicccLKicVwJ1Td8doia8JlBAlN5AfXx80gGv3zSZ2ftud082uicNQ/640?wx_fmt=png\"></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">Bad licence type：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.2679738562091503\" data-s=\"300,640\" data-type=\"png\" data-w=\"918\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVLumTVOYe4MO5XibywxJXRd9FbXEkOYIx1xAXDTpOKC2RykQibjFZr9dg/640?wx_fmt=png\"></section><h4 data-tool=\"mdnice编辑器\" style=\"margin-bottom: 15px;outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb border-box break-word><strong style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 15px;color: rgb(0, 122, 170);box-sizing: border-box !important;overflow-wrap: break-word !important;\">| 捕获进入 Controller 前的异常</span></strong></h4><p><strong><span style=\"font-size: 15px;\">①</span><span style=\"font-size: 15px;\">访问不存在的接口：</span></strong><span style=\"font-size: 15px;\">http://localhost:10000/licence/list/ddd</span></p><p><br></p><section style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">捕获 404 异常：</span></section><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.5786802030456852\" data-s=\"300,640\" data-type=\"png\" data-w=\"985\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVvrtnk2RMdia27HYH7LHkibCU5Fd8wR0qdCOyunlqwbQ9FxGeNKWCfaicg/640?wx_fmt=png\"></section><section><strong><span style=\"font-size: 15px;\">②</span><span style=\"font-size: 15px;\">http 方法不支持：</span></strong><span style=\"font-size: 15px;\">http://localhost:10000/licence</span><br></section><section><br></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;color: rgb(0, 122, 170);\">PostMapping：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.35192697768762676\" data-s=\"300,640\" data-type=\"png\" data-w=\"986\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVeVicMnaFVOamX3UBB7M8jxXl8iatM143DKP4Rbhyia5bgl4eJRTB21Zrw/640?wx_fmt=png\"></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">捕获 Request method not supported 异常：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.7019328585961343\" data-s=\"300,640\" data-type=\"png\" data-w=\"983\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV7iaQMBCQ0533ePmibCkK1SiarubtNws3DSMjGVRkia5Cp9bgUKqR7eIBGA/640?wx_fmt=png\"></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">Request method not supported：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.1836734693877551\" data-s=\"300,640\" data-type=\"png\" data-w=\"980\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVlUbg4ibMjG73lJr5lB0uwicBfswWibR2bicdGeVuAp4skSfF16clQOIqCg/640?wx_fmt=png\"></section><section><strong><span style=\"font-size: 15px;\">③</span><span style=\"font-size: 15px;\">校验异常 1：</span></strong><span style=\"font-size: 15px;\">http://localhost:10000/licence/list?licenceType=</span></section><section><br></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;color: rgb(0, 122, 170);\">getLicences：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.11359026369168357\" data-s=\"300,640\" data-type=\"png\" data-w=\"986\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV1vWCQZSDRXWHH7W2gicKKJLtaFH7cczgwhRd0FDd1RQC06RgrxD0nkg/640?wx_fmt=png\"></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;color: rgb(0, 122, 170);\">LicenceParam：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.2604698672114402\" data-s=\"300,640\" data-type=\"png\" data-w=\"979\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV2DmDJqC8iaRhpViarRhVsxA8BrF769Z3sdB8JSaXFp8wQ60JoEUpVJPA/640?wx_fmt=png\"></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">捕获参数绑定校验异常：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.5451776649746193\" data-s=\"300,640\" data-type=\"png\" data-w=\"985\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVGCH3HSZTgOhibiaRm2Fs6IIODXmEPeRnaBDCEH4D3fjj6XXia1a52ubsg/640?wx_fmt=png\"></section><section style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">licence type cannot be empty：</span><br></section><p style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.1536113936927772\" data-s=\"300,640\" data-type=\"png\" data-w=\"983\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVibqiawkXg4aCIr72l4AQibS99iaLg748gy7vznqOJ9NSSvJD96micicqOmEw/640?wx_fmt=png\"></p><p><strong><span style=\"font-size: 15px;\">④</span><span style=\"font-size: 15px;\">校验异常 2：</span></strong><span style=\"font-size: 15px;\">post 请求，这里使用 postman 模拟</span></p><p><br></p><section style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;color: rgb(0, 122, 170);\">addLicence：</span></section><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.09182643794147326\" data-s=\"300,640\" data-type=\"png\" data-w=\"991\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVNEZTd6CgTdsvPuvzNBuU8ORACxXXr6vyaA5ibA6hrSggJOpFXiavdMyg/640?wx_fmt=png\"></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;color: rgb(0, 122, 170);\">LicenceAddRequest：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.8175257731958763\" data-s=\"300,640\" data-type=\"png\" data-w=\"970\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVqSibcp74LiaO5KarrOpH03icy6lpWe0coFL68KWsW9ClbPGU4Ovgkz9Xg/640?wx_fmt=png\"></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">请求 url 即结果：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.599388379204893\" data-s=\"300,640\" data-type=\"png\" data-w=\"981\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVehKwc2OIG3XjdXLky6hvWY3sR245fTlJJd2bqhV07EFQnxYB8aAHjQ/640?wx_fmt=png\"></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">捕获参数绑定校验异常：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.568089430894309\" data-s=\"300,640\" data-type=\"png\" data-w=\"984\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVEu3cqGRpueDpXRfR9AHkJpmcaLZ9OUMRGvHXyJ7TwNmLRYdj3rRqJA/640?wx_fmt=png\"></section><p><strong><span style=\"font-size: 15px;\">注：</span></strong><span style=\"font-size: 15px;\">因为参数绑定校验异常的异常信息的获取方式与其它异常不一样，所以才把这 2 种情况的异常从进入 Controller 前的异常单独拆出来，下面是异常信息的收集逻辑。</span></p><p><br></p><section style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">异常信息的收集：</span></section><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.3470225872689938\" data-s=\"300,640\" data-type=\"png\" data-w=\"974\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVaz1B80VcfMF7U2IKYETYlJTTWK7fiblUkHCZFfmsP3icnQPH3ic3B7Tkw/640?wx_fmt=png\"></section><h4 data-tool=\"mdnice编辑器\" style=\"margin-bottom: 15px;outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb border-box break-word><strong style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 15px;color: rgb(0, 122, 170);box-sizing: border-box !important;overflow-wrap: break-word !important;\">| 捕获未知异常</span></strong></h4><p><span style=\"font-size: 15px;\">假设我们现在随便对 Licence 新增一个字段 test，但不修改数据库表结构，然后访问：http://localhost:10000/licence/1。</span></p><p><br></p><section style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">增加 test 字段：</span></section><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.40429887410440124\" data-s=\"300,640\" data-type=\"png\" data-w=\"977\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV6ywk4D9kxfYeeGtpj9BnZoGhhaOJs4wF2KvwCnOahs1J88gBPUJJcA/640?wx_fmt=png\"></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">捕获数据库异常：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.43756345177664974\" data-s=\"300,640\" data-type=\"png\" data-w=\"985\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVkWjLNytTMjOtveFo4O3tkCTSsWjlDaefEphiarGGKtFrNDazYlKNWqA/640?wx_fmt=png\"></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">Error querying database：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.10815822002472188\" data-s=\"300,640\" data-type=\"png\" data-w=\"1618\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVNAO3WiajIoRYMiawwqqN1KMDwMmTWta0iaQNdcYlMVfe8pia6Rbk0w22aw/640?wx_fmt=png\"></section><section style=\"box-sizing: border-box;font-size: 16px;\"><section style=\"text-align: center;justify-content: center;margin: 10px 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: auto;vertical-align: top;min-width: 10%;max-width: 100%;height: auto;border-bottom: 1px solid rgb(126, 169, 195);border-bottom-right-radius: 0px;line-height: 0;box-sizing: border-box;\"><section style=\"margin-right: 0%;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"letter-spacing: 0px;line-height: 1.8;font-size: 15px;color: rgb(126, 169, 195);padding-right: 5px;padding-left: 5px;box-sizing: border-box;\"><p style=\"box-sizing: border-box;\"><strong style=\"box-sizing: border-box;\">小结</strong></p></section></section><section style=\"margin-right: 0%;margin-bottom: -3px;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: 5px;height: 5px;vertical-align: top;overflow: hidden;border-width: 0px;border-radius: 202px;border-style: none;border-color: rgb(62, 62, 62);background-color: rgb(126, 169, 195);box-sizing: border-box;\"><section><svg viewbox=\"0 0 1 1\" style=\"float:left;line-height:0;width:0;vertical-align:top;\"></svg></section></section></section></section></section></section><p><br></p><p><span style=\"font-size: 15px;\">可以看到，测试的异常都能够被捕获，然后以 code、message 的形式返回。</span></p><p><br></p><p><span style=\"font-size: 15px;\">每一个项目/模块，在定义业务异常的时候，只需定义一个枚举类，然后实现接口 BusinessExceptionAssert，最后为每一种业务异常定义对应的枚举实例即可，而不用定义许多异常类。使用的时候也很方便，用法类似断言。</span></p><p><br></p><section style=\"box-sizing: border-box;font-size: 16px;\"><section style=\"text-align: center;justify-content: center;margin: 10px 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: auto;vertical-align: top;min-width: 10%;max-width: 100%;height: auto;border-bottom: 1px solid rgb(126, 169, 195);border-bottom-right-radius: 0px;line-height: 0;box-sizing: border-box;\"><section style=\"margin-right: 0%;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"letter-spacing: 0px;line-height: 1.8;font-size: 15px;color: rgb(126, 169, 195);padding-right: 5px;padding-left: 5px;box-sizing: border-box;\"><p style=\"box-sizing: border-box;\"><strong>扩展</strong></p></section></section><section style=\"margin-right: 0%;margin-bottom: -3px;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: 5px;height: 5px;vertical-align: top;overflow: hidden;border-width: 0px;border-radius: 202px;border-style: none;border-color: rgb(62, 62, 62);background-color: rgb(126, 169, 195);box-sizing: border-box;\"><section><svg viewbox=\"0 0 1 1\" style=\"float:left;line-height:0;width:0;vertical-align:top;\"></svg></section></section></section></section></section></section><p><br></p><p><span style=\"font-size: 15px;\">在生产环境，若捕获到未知异常或者 ServletException，因为都是一长串的异常信息，若直接展示给用户看，显得不够专业，于是，我们可以这样做：当检测到当前环境是生产环境，那么直接返回 \"网络异常\"。</span></p><p><br></p><section style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;color: rgb(0, 122, 170);\">生产环境返回“网络异常”：</span></section><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.3340270551508845\" data-s=\"300,640\" data-type=\"png\" data-w=\"961\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVZfJ3iczfBhEiaico3tjktyCIliahLaxKLeic3lOgm4qdicvzCM0hzVA6spIw/640?wx_fmt=png\"></section><p style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;color: rgb(0, 122, 170);\">可以通过以下方式修改当前环境：</span></p><section style=\"text-align: center;margin-bottom: 10px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.4166666666666667\" data-s=\"300,640\" data-type=\"png\" data-w=\"984\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV2ulrsyoQOJYdCXMJPsibYyYficktKkiaTnGjzucONAn69meRfCXuVjkPQ/640?wx_fmt=png\"></section><section style=\"box-sizing: border-box;font-size: 16px;\"><section style=\"text-align: center;justify-content: center;margin: 10px 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: auto;vertical-align: top;min-width: 10%;max-width: 100%;height: auto;border-bottom: 1px solid rgb(126, 169, 195);border-bottom-right-radius: 0px;line-height: 0;box-sizing: border-box;\"><section style=\"margin-right: 0%;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"letter-spacing: 0px;line-height: 1.8;font-size: 15px;color: rgb(126, 169, 195);padding-right: 5px;padding-left: 5px;box-sizing: border-box;\"><p style=\"box-sizing: border-box;\"><strong>总结</strong></p></section></section><section style=\"margin-right: 0%;margin-bottom: -3px;margin-left: 0%;box-sizing: border-box;\" powered-by=\"xiumi.us\"><section style=\"display: inline-block;width: 5px;height: 5px;vertical-align: top;overflow: hidden;border-width: 0px;border-radius: 202px;border-style: none;border-color: rgb(62, 62, 62);background-color: rgb(126, 169, 195);box-sizing: border-box;\"><section><svg viewbox=\"0 0 1 1\" style=\"float:left;line-height:0;width:0;vertical-align:top;\"></svg></section></section></section></section></section></section><h2><br></h2><p><span style=\"font-size: 15px;\">使用断言和枚举类相结合的方式，再配合统一异常处理，基本大部分的异常都能够被捕获。</span></p><p><br></p><p><span style=\"font-size: 15px;\">为什么说大部分异常，因为当引入 spring cloud security 后，还会有认证/授权异常，网关的服务降级异常、跨模块调用异常、远程调用第三方服务异常等，这些异常的捕获方式与本文介绍的不太一样，不过限于篇幅，这里不做详细说明，以后会有单独的文章介绍。</span><br></p><p><br></p><section style=\"margin-bottom: 10px;\"><span style=\"font-size: 15px;\">另外，当需要考虑国际化的时候，捕获异常后的异常信息一般不能直接返回，需要转换成对应的语言，不过本文已考虑到了这个，获取消息的时候已经做了国际化映射，逻辑如下：</span></section><section style=\"text-align: center;margin-bottom: 5px;\"><img class=\"rich_pages wxw-img\" data-galleryid=\"\" data-ratio=\"0.4306122448979592\" data-s=\"300,640\" data-type=\"png\" data-w=\"980\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVtspDzwtWhQbK5qrrAJArNEo6PWyxmk1oRib1RO7Lu6UJcLPKc7jfvjg/640?wx_fmt=png\"></section><section style=\"text-align: center;\"><span style=\"font-size: 12px;\"><em>获取国际化消息</em></span><br></section><section><br></section><p><span style=\"font-size: 15px;\">最后总结，全局异常属于老生长谈的话题，希望这次通过手机的项目对大家有点指导性的学习，大家根据实际情况自行修改。</span></p><p><br></p><p style=\"white-space: normal;\"><br></p><section style=\"margin-bottom: 10px;white-space: normal;\"><span style=\"font-size: 15px;\">也可以采用以下的 jsonResult 对象的方式进行处理，也贴出来代码：</span></section><section style=\"letter-spacing: 0px;white-space: normal;font-size: 16px;color: rgb(62, 62, 62);line-height: 1.6;font-family: \" helvetica neue sans gb yahei arial sans-serif><pre style=\"font-size: inherit;color: inherit;line-height: inherit;\"><code style=\"margin-right: 2px;margin-left: 2px;padding: 0.5em;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;color: rgb(169, 183, 198);background: rgb(40, 43, 46);overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;\"><span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@Slf</span>4j<br><span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@RestControllerAdvice</span><br><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">class</span> <span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">GlobalExceptionHandler</span> </span>{<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 没有登录<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> request<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> response<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> e<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span><br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ExceptionHandler</span>(NoLoginException.class)<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"font-size: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> Object <span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">noLoginExceptionHandler</span><span style=\"font-size: inherit;line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(HttpServletRequest request,HttpServletResponse response,Exception e)</span><br>    </span>{<br>        log.error(<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"[GlobalExceptionHandler][noLoginExceptionHandler] exception\"</span>,e);<br>        JsonResult jsonResult = <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> JsonResult();<br>        jsonResult.setCode(JsonResultCode.NO_LOGIN);<br>        jsonResult.setMessage(<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"用户登录失效或者登录超时,请先登录\"</span>);<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> jsonResult;<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 业务异常<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> request<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> response<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> e<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span><br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ExceptionHandler</span>(ServiceException.class)<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"font-size: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> Object <span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">businessExceptionHandler</span><span style=\"font-size: inherit;line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(HttpServletRequest request,HttpServletResponse response,Exception e)</span><br>    </span>{<br>        log.error(<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"[GlobalExceptionHandler][businessExceptionHandler] exception\"</span>,e);<br>        JsonResult jsonResult = <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> JsonResult();<br>        jsonResult.setCode(JsonResultCode.FAILURE);<br>        jsonResult.setMessage(<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"业务异常,请联系管理员\"</span>);<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> jsonResult;<br>    }<br><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(128, 128, 128);overflow-wrap: inherit !important;word-break: inherit !important;\">/**<br>     * 全局异常处理<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> request<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> response<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@param</span> e<br>     * <span style=\"font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">@return</span><br>     */</span><br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(91, 218, 237);overflow-wrap: inherit !important;word-break: inherit !important;\">@ExceptionHandler</span>(Exception.class)<br>    <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\"><span style=\"font-size: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;\">public</span> Object <span style=\"font-size: inherit;line-height: inherit;color: rgb(165, 218, 45);overflow-wrap: inherit !important;word-break: inherit !important;\">exceptionHandler</span><span style=\"font-size: inherit;line-height: inherit;color: rgb(255, 152, 35);overflow-wrap: inherit !important;word-break: inherit !important;\">(HttpServletRequest request,HttpServletResponse response,Exception e)</span><br>    </span>{<br>        log.error(<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"[GlobalExceptionHandler][exceptionHandler] exception\"</span>,e);<br>        JsonResult jsonResult = <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">new</span> JsonResult();<br>        jsonResult.setCode(JsonResultCode.FAILURE);<br>        jsonResult.setMessage(<span style=\"font-size: inherit;line-height: inherit;color: rgb(238, 220, 112);overflow-wrap: inherit !important;word-break: inherit !important;\">\"系统错误,请联系管理员\"</span>);<br>        <span style=\"font-size: inherit;line-height: inherit;color: rgb(248, 35, 117);overflow-wrap: inherit !important;word-break: inherit !important;\">return</span> jsonResult;<br>    }<br>}<br></code></pre></section><p style=\"white-space: normal;\"><br></p><section data-mpa-template=\"t\" mpa-from-tpl=\"t\" style=\"white-space: normal;outline: 0px;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb><section data-mid=\"\" mpa-from-tpl=\"t\" style=\"padding-right: 18px;outline: 0px;width: 677px;display: flex;align-items: center;justify-content: flex-end;\"><section data-mid=\"\" mpa-from-tpl=\"t\" style=\"outline: 0px;display: flex;justify-content: flex-start;align-items: center;flex-direction: column;\"><section data-mid=\"\" mpa-from-tpl=\"t\" style=\"outline: 0px;display: flex;justify-content: center;align-items: center;\"><section data-mid=\"\" mpa-from-tpl=\"t\" style=\"outline: 0px;width: 51px;height: 10px;transform: rotate(180deg);\"><br></section></section></section></section></section><blockquote style=\"outline: 0px;color: rgba(0, 0, 0, 0.5);max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb border-box break-word><p style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 14px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">转自：sprinkle_liz</span></p><p style=\"outline: 0px;max-width: 100%;text-align: left;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 14px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">链接：https://www.jianshu.com/p/3f3d9e8d1efa</span><span style=\"letter-spacing: 0.544px;caret-color: rgb(0, 0, 0);color: rgb(51, 51, 51);text-align: justify;\"></span><span style=\"letter-spacing: 0.544px;caret-color: rgb(0, 0, 0);color: rgb(51, 51, 51);text-align: justify;\"></span></p></blockquote><p style=\"outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><span style=\"outline: 0px;max-width: 100%;font-size: 15px;color: rgb(136, 136, 136);box-sizing: border-box !important;overflow-wrap: break-word !important;\">- EOF -</span></p><section donone=\"shifuMouseDownCard('shifu_c_030')\" label=\"Copyright Reserved by PLAYHUDONG.\" style=\"margin-top: 1em;margin-bottom: 1em;outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb start initial border-box break-word><section style=\"margin-left: 1em;outline: 0px;max-width: 100%;line-height: 1.4;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding: 3px 8px;outline: 0px;max-width: 100%;border-radius: 4px;color: rgb(255, 255, 255);background-color: rgb(255, 105, 31);font-family: inherit;text-align: inherit;text-decoration: inherit;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">推荐阅读</span>  <span style=\"margin-left: 4px;padding: 3px 8px;outline: 0px;max-width: 100%;border-radius: 1.2em;color: rgb(255, 255, 255);line-height: 1.2;background-color: rgb(204, 204, 204);font-family: inherit;text-align: inherit;text-decoration: inherit;border-color: rgb(249, 110, 87);font-size: 12px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">点击标题可跳转</span></section><section style=\"margin-top: -11px;padding: 22px 16px 16px;outline: 0px;max-width: 100%;border-width: 1px;border-style: solid;border-color: rgb(255, 105, 31);color: rgb(51, 51, 51);font-size: 1em;font-family: inherit;text-align: inherit;text-decoration: inherit;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"outline: 0px;max-width: 100%;line-height: 2em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651508510&amp;idx=1&amp;sn=d88c3206cbcdad9c2120dcab15e6280e&amp;chksm=bd25a3618a522a773c8d83fec087fcb56d3a30dcf46fb84691c320546b81f9768b6d747dad43&amp;scene=21#wechat_redirect\" textvalue=\"Java8中谨慎使用实数作为HashMap的key!\" linktype=\"text\" imgurl=\"\" imgdata=\"null\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\" wah-hotarea=\"click\" hasload=\"1\" style=\"outline: 0px;text-decoration: underline;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: pointer;max-width: 100%;font-size: 12px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">Java8中谨慎使用实数作为HashMap的key!</span></a><br style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p><p style=\"outline: 0px;max-width: 100%;line-height: 2em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;font-size: 12px;text-decoration: underline;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651507050&amp;idx=2&amp;sn=c3e4fb7916091fe780abd25c20e0833d&amp;chksm=bd25a5158a522c0336dd036b96de6b60c2ea6c90702f2abb9567ac5dfbfafecca4a141876919&amp;scene=21#wechat_redirect\" textvalue=\"精妙绝伦的并发艺术品 — ConcurrentHashMap是如何保证线程安全的\" linktype=\"text\" imgurl=\"\" imgdata=\"null\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\" wah-hotarea=\"click\" hasload=\"1\" style=\"outline: 0px;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: pointer;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">精妙绝伦的并发艺术品 — ConcurrentHashMap是如何保证线程安全的</a></span></p><p style=\"outline: 0px;max-width: 100%;line-height: 2em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651503297&amp;idx=2&amp;sn=5f19e03d6b86789b3b28af5cee97d1e9&amp;chksm=bd25d6be8a525fa8b8d16745d3454ddc4aa562571964d88eb9fd4e2cb274f8a9ae806bf0b3d5&amp;scene=21#wechat_redirect\" textvalue=\"一个 HashMap 跟面试官扯了半个小时\" linktype=\"text\" imgurl=\"\" imgdata=\"null\" data-itemshowtype=\"11\" tab=\"innerlink\" data-linktype=\"2\" wah-hotarea=\"click\" hasload=\"1\" style=\"outline: 0px;text-decoration: underline;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: pointer;max-width: 100%;font-size: 12px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">一个 HashMap 跟面试官扯了半个小时</span></a><br style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p></section></section><p style=\"outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb start border-box break-word><br style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p><p style=\"outline: 0px;max-width: 100%;letter-spacing: 0.544px;white-space: normal;font-family: -apple-system-font, system-ui, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb center border-box break-word><br></p><p style=\"outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><span style=\"outline: 0px;max-width: 100%;font-size: 14px;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">看完本文有收获？请转发分享给更多人</span><br style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p><p style=\"outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><strong style=\"outline: 0px;max-width: 100%;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">关注「ImportNew」，提升Java技能</strong></p><p style=\"outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb center border-box break-word><img class=\"rich_pages wxw-img\" data-ratio=\"0.9166666666666666\" data-s=\"300,640\" data-type=\"jpeg\" data-w=\"600\" style=\"outline: 0px; box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; width: 600px !important; max-width: 600px\" width=\"auto\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg\"></p><p style=\"outline: 0px;max-width: 100%;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif normal rgb right border-box break-word><span style=\"outline: 0px;max-width: 100%;font-size: 14px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span><span style=\"outline: 0px;max-width: 100%;font-family: -apple-system-font, system-ui, \" helvetica neue sc sans gb yahei ui arial sans-serif center border-box break-word>点赞和在看就是最大的支持</span><span style=\"outline: 0px;max-width: 100%;font-family: -apple-system-font, system-ui, \" helvetica neue sc sans gb yahei ui arial sans-serif center border-box break-word>❤️</span></p>\n                </div>\n\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651510890&amp;idx=1&amp;sn=6d05a3d4c73ba57666576dccdf21dbeb&amp;chksm=bd25b4158a523d031abc41e7bc8e8f925e24fbc910e2d14c216639fb387f72928c602ea5121f#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">文章原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/11757/CyNoNEqY9X\"></div></div>","descriptionType":"html","publishedDate":"Fri, 11 Mar 2022 14:08:00 +0000","feedId":2521,"bgimg":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVU05kibZFttTY963QPHfmBVDibUTn6nFLKo6NwI2ZPIwZicNtx7iaaLzbpA/0?wx_fmt=jpeg%5Cx26amp;random=0.6789288094983996?imageView2/1/w/600","linkMd5":"e29f98f195571cf1cab67677ca1c956e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn9@2020_2/2022/03/14/09-15-10-445_0678d13a5a7fd97a.webp","destWidth":996,"destHeight":424,"sourceBytes":57381,"destBytes":40668,"author":"","articleImgCdnMap":{"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVU05kibZFttTY963QPHfmBVDibUTn6nFLKo6NwI2ZPIwZicNtx7iaaLzbpA/0?wx_fmt=jpeg%5Cx26amp;random=0.6789288094983996?imageView2/1/w/600":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVlS9qFM760JakC7zpHIWibMk0Smme9ema5dicM4RC3SMlXcO1SThnKwAQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn14@2020_5/2022/03/14/09-16-51-914_a00334420fb7d589.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVQVaeQT0xB13D781Iocl6tMH1LK4Zyc4pBdgC6XRzTUo6CfcfVwHexg/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVQQvAmsAZELXo0tLkxluXgFzRmGgw90pic939e7xHz64Dw24qgvdmdGg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn42@2020_6/2022/03/14/09-16-12-760_1a7ba92def5d11c5.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVNicHkYlibn9GfkordYMClmpD68BXt4IUkltiasyibnlj4eribHzya1DGINQ/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVgkSibj4k6Ecn63Jw1RgjNEGOibcx3oicqiabc9ia3kqzbvufRLibkhHqXe0A/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV8LAj46ibDUiaZeNPgWvXT7KiaIRd9wKIrickoWE5WHEwVUlyiciapmKMRZAg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn5@2020_2/2022/03/14/09-15-21-688_80247f3c974fe067.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVcVD7ALbblmjFXthoApf3r6tX9U4V12MR8UvsMmgxzn3PoY7mjkzD7A/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVIlS1WURgp8MKhwmSuxNV0DYYXpngWyP8uBCJHarPGMJr6TJicAJTLhw/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn29@2020_6/2022/03/14/09-15-10-505_0fe432adfeb22ed1.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVfcMYos4pvz4VQDedpG9TjwLMNwrjJdJ1Dq0ZbcPzT32Gmrria3HB2pA/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVj9iaKgicccLKicVwJ1Td8doia8JlBAlN5AfXx80gGv3zSZ2ftud082uicNQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn42@2020_2/2022/03/14/09-15-52-866_ceea817ac74ca7f9.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVLumTVOYe4MO5XibywxJXRd9FbXEkOYIx1xAXDTpOKC2RykQibjFZr9dg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn52@2020_4/2022/03/14/09-15-19-194_85d609466fec6507.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVvrtnk2RMdia27HYH7LHkibCU5Fd8wR0qdCOyunlqwbQ9FxGeNKWCfaicg/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVeVicMnaFVOamX3UBB7M8jxXl8iatM143DKP4Rbhyia5bgl4eJRTB21Zrw/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn66@2020_2/2022/03/14/09-15-50-425_12ab4484e2fb57d9.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV7iaQMBCQ0533ePmibCkK1SiarubtNws3DSMjGVRkia5Cp9bgUKqR7eIBGA/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVlUbg4ibMjG73lJr5lB0uwicBfswWibR2bicdGeVuAp4skSfF16clQOIqCg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn86@2020_4/2022/03/14/09-16-04-390_e3a72669d4231f72.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV1vWCQZSDRXWHH7W2gicKKJLtaFH7cczgwhRd0FDd1RQC06RgrxD0nkg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_1/2022/03/14/09-15-37-964_cf20ebac46134bb9.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV2DmDJqC8iaRhpViarRhVsxA8BrF769Z3sdB8JSaXFp8wQ60JoEUpVJPA/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVGCH3HSZTgOhibiaRm2Fs6IIODXmEPeRnaBDCEH4D3fjj6XXia1a52ubsg/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVibqiawkXg4aCIr72l4AQibS99iaLg748gy7vznqOJ9NSSvJD96micicqOmEw/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVNEZTd6CgTdsvPuvzNBuU8ORACxXXr6vyaA5ibA6hrSggJOpFXiavdMyg/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVqSibcp74LiaO5KarrOpH03icy6lpWe0coFL68KWsW9ClbPGU4Ovgkz9Xg/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVehKwc2OIG3XjdXLky6hvWY3sR245fTlJJd2bqhV07EFQnxYB8aAHjQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn37@2020_1/2022/03/14/09-15-15-322_f569a4f28746e6e1.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVEu3cqGRpueDpXRfR9AHkJpmcaLZ9OUMRGvHXyJ7TwNmLRYdj3rRqJA/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVaz1B80VcfMF7U2IKYETYlJTTWK7fiblUkHCZFfmsP3icnQPH3ic3B7Tkw/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV6ywk4D9kxfYeeGtpj9BnZoGhhaOJs4wF2KvwCnOahs1J88gBPUJJcA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn93@2020_2/2022/03/14/09-15-22-251_cf444811fc394bdf.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVkWjLNytTMjOtveFo4O3tkCTSsWjlDaefEphiarGGKtFrNDazYlKNWqA/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVNAO3WiajIoRYMiawwqqN1KMDwMmTWta0iaQNdcYlMVfe8pia6Rbk0w22aw/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVZfJ3iczfBhEiaico3tjktyCIliahLaxKLeic3lOgm4qdicvzCM0hzVA6spIw/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn89@2020_6/2022/03/14/09-16-11-329_c2d510242b89449b.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV2ulrsyoQOJYdCXMJPsibYyYficktKkiaTnGjzucONAn69meRfCXuVjkPQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn17@2020_4/2022/03/14/09-15-18-826_c626df6b7ce48d2f.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVtspDzwtWhQbK5qrrAJArNEo6PWyxmk1oRib1RO7Lu6UJcLPKc7jfvjg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn21@2020_3/2022/03/14/09-16-52-711_ddfa9da9d22292f6.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn73@2020_5/2022/03/14/09-16-02-063_f93d0239d4369c75.webp","http://www.jintiankansha.me/rss_static/11757/CyNoNEqY9X":null},"publishedOrCreatedDate":1647249174871}],"record":{"createdTime":"2022-03-14 17:12:54","updatedTime":"2022-03-14 17:12:54","feedId":2521,"fetchDate":"Mon, 14 Mar 2022 09:12:54 +0000","fetchMs":383,"handleMs":83,"totalMs":272994,"newArticles":0,"totalArticles":5,"status":1,"type":0,"ip":"af0629e1ae74a27744b4cbd27b40a78e","hostName":"us-028*","requestId":"b8f161c228874ff29414aa5b44a64bf7_2521","contentType":"application/rss+xml","totalBytes":358238,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":33,"articlesImgsGithubTotal":15,"successGithubMap":{"myreaderx14":1,"myreaderx25":1,"myreaderx27":1,"myreaderx16":1,"myreaderx4":1,"myreaderx21":1,"myreaderx10":1,"myreaderx22":1,"myreaderx12":2,"myreaderx23":1,"myreaderx2":1,"myreaderx24":1,"myreaderx30":1,"myreaderx31":1,"myreaderx29":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-24 21:31:41","updatedTime":"2020-09-01 10:09:47","id":2521,"name":"ImportNew","url":"http://feedmaker.kindle4rss.com/feeds/importnew.weixin.xml","subscriber":null,"website":null,"icon":"http://www.sogou.com/images/logo/new/favicon.ico?v=4","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn9@2020_3/2020/09/01/02-08-31-388_d24121c9beed1de6.ico","description":"伯乐在线旗下账号，专注Java技术分享，包括Java基础技术、进阶技能、架构设计和Java技术领域动态等。","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2022-03-14 17:17:27","updatedTime":"2022-03-14 17:17:27","id":null,"feedId":2521,"linkMd5":"e29f98f195571cf1cab67677ca1c956e"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":358238,"tmpBgImgCdnBytes":0,"extra4":{"start":1647249174061,"total":0,"statList":[{"spend":742,"msg":"获取xml内容"},{"spend":83,"msg":"解释文章"},{"spend":15542,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":151857,"msg":"正文链接上传到cdn"}]},"extra5":33,"extra6":16,"extra7ImgCdnFailResultVector":[null,null,{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/CyNoNEqY9X","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":728,"convertSpendMs":0,"createdTime":"2022-03-14 17:14:55","host":"us-036*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/CyNoNEqY9X","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":654,"convertSpendMs":0,"createdTime":"2022-03-14 17:14:55","host":"us-040*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-032.herokuapp.com/":{"failCount":1,"successCount":5,"resultList":[200,200,200,200,200,null]},"http://us-018.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe-24.herokuapp.com/":{"failCount":5,"successCount":2,"resultList":[200,200,null,null,null,null,null]},"http://us-007.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[null,null]},"http://europe-58.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[null,null]},"http://europe66.herokuapp.com/":{"failCount":5,"successCount":2,"resultList":[200,200,null,null,null,null,null]},"http://us-015.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[null,null]},"http://us-026.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe70.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[null,null]},"http://us-011.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[null,null]},"http://us-006.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-54.herokuapp.com/":{"failCount":4,"successCount":1,"resultList":[200,null,null,null,null]},"http://us-036.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[405,200]},"http://europe62.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[null,null]},"http://us-019.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[null,null]},"http://us-003.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[null,null]},"http://us-023.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[null,null]},"http://us-040.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[405,null]},"http://us-027.herokuapp.com/":{"failCount":3,"successCount":4,"resultList":[200,200,200,200,null,null,null]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVU05kibZFttTY963QPHfmBVDibUTn6nFLKo6NwI2ZPIwZicNtx7iaaLzbpA/0?wx_fmt=jpeg%5Cx26amp;random=0.6789288094983996?imageView2/1/w/600","sourceStatusCode":200,"destWidth":996,"destHeight":424,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn9@2020_2/2022/03/14/09-15-10-445_0678d13a5a7fd97a.webp","sourceBytes":57381,"destBytes":40668,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":15526,"convertSpendMs":26,"createdTime":"2022-03-14 17:14:55","host":"us-032*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e,e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56 KB","destSize":"39.7 KB","compressRate":"70.9%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVIlS1WURgp8MKhwmSuxNV0DYYXpngWyP8uBCJHarPGMJr6TJicAJTLhw/640?wx_fmt=png","sourceStatusCode":200,"destWidth":933,"destHeight":251,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn29@2020_6/2022/03/14/09-15-10-505_0fe432adfeb22ed1.webp","sourceBytes":43141,"destBytes":12058,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":15707,"convertSpendMs":11,"createdTime":"2022-03-14 17:14:55","host":"europe66*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.1 KB","destSize":"11.8 KB","compressRate":"28%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVehKwc2OIG3XjdXLky6hvWY3sR245fTlJJd2bqhV07EFQnxYB8aAHjQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":981,"destHeight":588,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn37@2020_1/2022/03/14/09-15-15-322_f569a4f28746e6e1.webp","sourceBytes":88132,"destBytes":20610,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":20420,"convertSpendMs":51,"createdTime":"2022-03-14 17:14:55","host":"us-032*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"86.1 KB","destSize":"20.1 KB","compressRate":"23.4%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV2ulrsyoQOJYdCXMJPsibYyYficktKkiaTnGjzucONAn69meRfCXuVjkPQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":984,"destHeight":410,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn17@2020_4/2022/03/14/09-15-18-826_c626df6b7ce48d2f.webp","sourceBytes":85550,"destBytes":22898,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":23916,"convertSpendMs":24,"createdTime":"2022-03-14 17:14:55","host":"us-027*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"83.5 KB","destSize":"22.4 KB","compressRate":"26.8%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVLumTVOYe4MO5XibywxJXRd9FbXEkOYIx1xAXDTpOKC2RykQibjFZr9dg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":918,"destHeight":246,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn52@2020_4/2022/03/14/09-15-19-194_85d609466fec6507.webp","sourceBytes":42982,"destBytes":11450,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":24273,"convertSpendMs":11,"createdTime":"2022-03-14 17:14:55","host":"us-027*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42 KB","destSize":"11.2 KB","compressRate":"26.6%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV8LAj46ibDUiaZeNPgWvXT7KiaIRd9wKIrickoWE5WHEwVUlyiciapmKMRZAg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":983,"destHeight":205,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn5@2020_2/2022/03/14/09-15-21-688_80247f3c974fe067.webp","sourceBytes":124513,"destBytes":26662,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":26825,"convertSpendMs":14,"createdTime":"2022-03-14 17:14:55","host":"europe-24*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"121.6 KB","destSize":"26 KB","compressRate":"21.4%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV6ywk4D9kxfYeeGtpj9BnZoGhhaOJs4wF2KvwCnOahs1J88gBPUJJcA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":977,"destHeight":395,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn93@2020_2/2022/03/14/09-15-22-251_cf444811fc394bdf.webp","sourceBytes":98123,"destBytes":21244,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":27325,"convertSpendMs":44,"createdTime":"2022-03-14 17:14:55","host":"us-036*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"95.8 KB","destSize":"20.7 KB","compressRate":"21.7%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zV1vWCQZSDRXWHH7W2gicKKJLtaFH7cczgwhRd0FDd1RQC06RgrxD0nkg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":986,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_1/2022/03/14/09-15-37-964_cf20ebac46134bb9.webp","sourceBytes":62313,"destBytes":13658,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":12968,"convertSpendMs":12,"createdTime":"2022-03-14 17:15:25","host":"us-54*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"60.9 KB","destSize":"13.3 KB","compressRate":"21.9%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVeVicMnaFVOamX3UBB7M8jxXl8iatM143DKP4Rbhyia5bgl4eJRTB21Zrw/640?wx_fmt=png","sourceStatusCode":200,"destWidth":986,"destHeight":347,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn66@2020_2/2022/03/14/09-15-50-425_12ab4484e2fb57d9.webp","sourceBytes":160758,"destBytes":32106,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":55485,"convertSpendMs":21,"createdTime":"2022-03-14 17:14:55","host":"europe66*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"157 KB","destSize":"31.4 KB","compressRate":"20%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVj9iaKgicccLKicVwJ1Td8doia8JlBAlN5AfXx80gGv3zSZ2ftud082uicNQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":984,"destHeight":327,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn42@2020_2/2022/03/14/09-15-52-866_ceea817ac74ca7f9.webp","sourceBytes":199009,"destBytes":41124,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":57979,"convertSpendMs":24,"createdTime":"2022-03-14 17:14:55","host":"europe-24*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"194.3 KB","destSize":"40.2 KB","compressRate":"20.7%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":600,"destHeight":550,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn73@2020_5/2022/03/14/09-16-02-063_f93d0239d4369c75.webp","sourceBytes":37143,"destBytes":31608,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":6926,"convertSpendMs":24,"createdTime":"2022-03-14 17:15:55","host":"us-032*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.3 KB","destSize":"30.9 KB","compressRate":"85.1%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVlUbg4ibMjG73lJr5lB0uwicBfswWibR2bicdGeVuAp4skSfF16clQOIqCg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":980,"destHeight":180,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn86@2020_4/2022/03/14/09-16-04-390_e3a72669d4231f72.webp","sourceBytes":38786,"destBytes":13056,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":12809,"convertSpendMs":36,"createdTime":"2022-03-14 17:15:58","host":"us-032*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.9 KB","destSize":"12.8 KB","compressRate":"33.7%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVZfJ3iczfBhEiaico3tjktyCIliahLaxKLeic3lOgm4qdicvzCM0hzVA6spIw/640?wx_fmt=png","sourceStatusCode":200,"destWidth":961,"destHeight":321,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn89@2020_6/2022/03/14/09-16-11-329_c2d510242b89449b.webp","sourceBytes":60251,"destBytes":12570,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":14198,"convertSpendMs":45,"createdTime":"2022-03-14 17:15:57","host":"us-032*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"58.8 KB","destSize":"12.3 KB","compressRate":"20.9%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVQQvAmsAZELXo0tLkxluXgFzRmGgw90pic939e7xHz64Dw24qgvdmdGg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":928,"destHeight":418,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn42@2020_6/2022/03/14/09-16-12-760_1a7ba92def5d11c5.webp","sourceBytes":61234,"destBytes":19916,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":17752,"convertSpendMs":20,"createdTime":"2022-03-14 17:15:55","host":"us-027*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.8 KB","destSize":"19.4 KB","compressRate":"32.5%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVlS9qFM760JakC7zpHIWibMk0Smme9ema5dicM4RC3SMlXcO1SThnKwAQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":974,"destHeight":818,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn14@2020_5/2022/03/14/09-16-51-914_a00334420fb7d589.webp","sourceBytes":276286,"destBytes":51264,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":56944,"convertSpendMs":69,"createdTime":"2022-03-14 17:15:55","host":"us-032*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"269.8 KB","destSize":"50.1 KB","compressRate":"18.6%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/1J6IbIcPCLZHD49tqdHpiaZ7ZU6PPic1zVtspDzwtWhQbK5qrrAJArNEo6PWyxmk1oRib1RO7Lu6UJcLPKc7jfvjg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":980,"destHeight":422,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn21@2020_3/2022/03/14/09-16-52-711_ddfa9da9d22292f6.webp","sourceBytes":134918,"destBytes":28014,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":57569,"convertSpendMs":21,"createdTime":"2022-03-14 17:15:55","host":"us-027*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%94%A8try%C2%A0catch%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8%EF%BC%9F","linkMd5ListStr":"e29f98f195571cf1cab67677ca1c956e","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"131.8 KB","destSize":"27.4 KB","compressRate":"20.8%"}],"successGithubMap":{"myreaderx14":1,"myreaderx25":1,"myreaderx27":1,"myreaderx16":1,"myreaderx4":1,"myreaderx21":1,"myreaderx10":1,"myreaderx22":1,"myreaderx12":2,"myreaderx23":1,"myreaderx2":1,"myreaderx24":1,"myreaderx30":1,"myreaderx31":1,"myreaderx29":1},"failGithubMap":{}}