{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-09-30 23:56:07","updatedTime":"2021-09-30 23:56:07","title":"负载均衡之备胎转正","link":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E4%B9%8B%E5%A4%87%E8%83%8E%E8%BD%AC%E6%AD%A3","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/eZzl4LXykQzo2nYACUBQiaOjc0DC3lWVIuQwUCfrdWrnGZP9YTjwCYRjb2ZIxKkFxOfCP3kGpRR5W34hc96Uwrw/0?wx_fmt=jpeg?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n                    \n                    \n                    <p style=\"white-space: normal;\" data-mpa-powered-by=\"yiban.io\"><strong style=\"color: rgb(171, 25, 66);font-size: 16px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif><span style=\"font-size: 15px;text-align: left;\">1. 问题出现</span></strong></p><p><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">滴~~~小章的钉钉突然响起了很多客服转发来的用户投诉信息，说是网络连接不上了，经过排查发现是其中一台机器（RS2）挂了。</span></p><p style=\"text-align: left;\"><br></p><figure style=\"text-align: center;\"><img data-ratio=\"1.2448979591836735\" data-type=\"png\" data-w=\"392\" style=\"text-align: left; max-width: 600px\" title=\"\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8pXK1vok2uia0QEqf0g2ZD3mjOfMcxOneiaRG5Q8Vb140ibkTsS6VX4gOpQ/640?wx_fmt=png\"></figure><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">但是 LVS 依然持续地把流量打到这台机器上，持续造成线上问题。小章首先把这台机器从 LVS 上摘除，<strong>先保证线上正常</strong>，然后为了避免之后出现类似问题，急忙找了 CEO 老梁来商讨方案。</span></p><p style=\"white-space: normal;\"><br></p><h3 style=\"white-space: normal;\"><strong style=\"color: rgb(171, 25, 66);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif><span style=\"font-size: 15px;text-align: left;\">2. 应用层健康检查：HTTP 检测</span></strong></h3><p><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">老梁一眼看出了问题所在：“我们需要开发一个健康检查服务，部署在 LVS 上，这个服务可以定时检查其后的 RS 是否可用。如果不可用则将 RS 摘除，这样就可以保障线上服务正常了”。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">“妙啊，通过软件及时探测，摘除不可用的机器，避免了人工发现不及时的问题。那么该怎么做这个健康检查呢？需要满足什么条件呢？”听说要开发这样的软件，小章顿时来了兴致。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">“小章啊，仔细想想看，我们的服务在发布过程中其实也是有健康检查的，要保证一个工程可用，至少保证它是可访问的以及它用到的中间件、DAO 是正常的”，所以它的健康代码如下：</span></p><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li><li></ul><pre class=\"code-snippet__js\" data-lang=\"java\"><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__meta\">@Service</span>(protocol = {<span class=\"code-snippet__string\">\"rest\"</span>})</span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__keyword\">public</span> <span class=\"code-snippet__class\"><span class=\"code-snippet__keyword\">class</span> <span class=\"code-snippet__title\">HealthCheckServiceImpl</span> <span class=\"code-snippet__keyword\">implements</span> <span class=\"code-snippet__title\">HealthCheckService</span> </span>{</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__meta\">@Resource</span></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__keyword\">private</span> TestDAO TestDAO;</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__meta\">@Resource</span></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__keyword\">private</span> RebateClient rebateClient;</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__meta\">@Override</span></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__function\"><span class=\"code-snippet__keyword\">public</span> String <span class=\"code-snippet__title\">getHealthStatus</span><span class=\"code-snippet__params\">()</span> </span>{</span></code><code><span class=\"code-snippet_outer\">            List<testdo> testDOS = TestDAO.getResult(<span class=\"code-snippet__number\">123</span>);</testdo></span></code><code><span class=\"code-snippet_outer\">            Assert.isTrue(testDOS != <span class=\"code-snippet__keyword\">null</span>, <span class=\"code-snippet__string\">\"rebateMemberDOS null\"</span>);</span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">            <span class=\"code-snippet__comment\">// 此处省略 redis 检测</span></span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">            <span class=\"code-snippet__comment\">// 此处省略其它检测</span></span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">            <span class=\"code-snippet__keyword\">return</span> <span class=\"code-snippet__string\">\"health\"</span>;</span></code><code><span class=\"code-snippet_outer\">    }}</span></code></pre></section><pre style=\"text-align: left;\"><br><span style=\"font-size: 15px;\"></span></pre><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">如以上代码所示，我们在工程里写了健康检查 HealthCheckService 类，暴露了一个 REST 服务。这样的话在部署的时候在服务部署脚本里首先访问一下此服务的 getHealthStatus 方法。如果返回的值为「health」，则说明此服务的 Dubbo 服务，DAO、Redis 等正常，说明此服务是没有问题的。如果返回的值不为 health，则说明此服务有问题，不能上线。这就是我们所说的<strong>健康检查</strong>，通过访问服务暴露的方法，来检测此服务是否可用。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">所以，我们要开发的检测服务也与此类似，只要定时访问此服务暴露的接口，看下此接口返回的值与我们期待的值是否一致即可。一致说明此服务正常，否则，说明此服务异常，将其剔除。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">当然了一次连接不通就判断为不可用可能有些问题，我们可以提供一个重试次数，比如 3 次。如果 3 次健康检测都失败，则认定此服务不可用。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">配置的伪代码如下:</span></p><p style=\"text-align: left;\"><br></p><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li><li><li><li><li><li><li><li><li><li><li></ul><pre class=\"code-snippet__js\" data-lang=\"properties\"><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__attr\">real_server</span> <span class=\"code-snippet__string\">192.168.1.220 80 {</span></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__attr\">HTTP_GET</span> <span class=\"code-snippet__string\">{</span></span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__attr\">url</span> <span class=\"code-snippet__string\">{</span></span></code><code><span class=\"code-snippet_outer\">            <span class=\"code-snippet__attr\">path</span> <span class=\"code-snippet__string\">/healthCheck</span></span></code><code><span class=\"code-snippet_outer\">            <span class=\"code-snippet__attr\">status_code</span> <span class=\"code-snippet__string\">200</span></span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__attr\">}</span></span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__attr\">connect_timeout</span> <span class=\"code-snippet__string\">3</span></span></code><code><span class=\"code-snippet_outer\">        <span class=\"code-snippet__attr\">nb_get_retry</span> <span class=\"code-snippet__string\">3 // 置超时重试次数</span></span></code><code><span class=\"code-snippet_outer\"><br></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__attr\">}</span></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__attr\">}</span></span></code></pre></section><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"></span></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">“妙啊，此法甚好！只要访问健康检查服务就可以很方便地查看此服务是否正常了，但是有个问题：如果这个健康检测方法写的检测逻辑很多，而 LVS 定时发检测请求比较频繁的话可能会有一定的性能问题，是否有更轻量级的检测方法呢？”小章说道。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">“考虑得很周到！一般健康检测确实逻辑比较重，所以只在部署的的时候检测一次就够了。在生产上我们可以采用更轻量的检测方式：<strong>TCP连接检测</strong>”。</span></p><p style=\"text-align: left;\"><br></p><h3 style=\"white-space: normal;\"><strong style=\"color: rgb(171, 25, 66);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif><span style=\"font-size: 15px;text-align: left;\">3. TCP 连接检测</span></strong></h3><p><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">TCP 连接检测原理很简单。我们知道要建立一个 TCP 连接，首先必须由 TCP 客户端发起 connect 请求，三次握手成功后才算建立起一个 TCP 连接，然后才能正常收发数据。</span></p><p style=\"text-align: left;\"><br></p><figure style=\"text-align: center;\"><img data-ratio=\"1.4152334152334152\" data-type=\"png\" data-w=\"407\" style=\"text-align: left; max-width: 600px\" title=\"\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8pUud1PuD1H3E3FWewK91mEELHrW0RUByLlcDS8jxeBgGyD4bTLibSVEQ/640?wx_fmt=png\"></figure><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">所以，我们只要调用  connect 方法看它是否成功即可。成功即说明连接建立成功，说明服务是可用的。如果失败说明此服务有问题，直接摘除即可。</span><span style=\"font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>当然了，与 HTTP 检测一样，也要有超时机制。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>TCP 连接检测 </span><span style=\"font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>伪代码如下：</span><span style=\"font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif></span></p><p style=\"text-align: left;\"><br></p><section class=\"code-snippet__fix code-snippet__js\"><ul class=\"code-snippet__line-index code-snippet__js\"><li><li><li><li><li><li></ul><pre class=\"code-snippet__js\" data-lang=\"properties\"><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__attr\">TCP_CHECK</span> <span class=\"code-snippet__string\">{</span></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__attr\">connect_port</span> <span class=\"code-snippet__string\">80 // 指定端口</span></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__attr\">connect_timeout</span> <span class=\"code-snippet__string\">6 // 设置响应超时时间</span></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__attr\">nb_get_retry</span> <span class=\"code-snippet__string\">3 // 设置超时重试次数</span></span></code><code><span class=\"code-snippet_outer\">    <span class=\"code-snippet__attr\">delay_before_retry</span> <span class=\"code-snippet__string\">3 // 设置超时重试间隔时间</span></span></code><code><span class=\"code-snippet_outer\"><span class=\"code-snippet__attr\">}</span></span></code></pre></section><pre style=\"text-align: left;\"><br><span style=\"font-size: 15px;\"></span></pre><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">小章按着老梁的思路把这两种健康检测思路给实现了，并且给这个服务取了个霸气的名字：keepalived，老梁很满意，不过他又发现了新的问题。</span></p><p style=\"text-align: left;\"><br></p><h3 style=\"white-space: normal;\"><strong style=\"color: rgb(171, 25, 66);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif><span style=\"font-size: 15px;text-align: left;\">4. 单点故障：高可用解决之道</span></strong></h3><p><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">“小章，健康检查做得很好，而且提供了两种检查方式，很全面。不过你这个架构还有个很致命的问题，不知你有没发现：那就是目前只有一台 LVS 在工作。如果这台 LVS 挂了，那我们业务就跌零了。你还需要让 keepalived 支持 LVS 的高可用”。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">小章恍然大悟，“那该咋办呢？”</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">“高可用的通用解决方案很简单，<strong>冗余 + 故障自动</strong><strong>发现转移</strong>，我们可以按照这个思路来设计 LVS 高可用，具体方案如下：</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">我们可以为 LVS 准备几台备机，如果发现 LVS 挂了，就让备机顶上去，这样不就实现了高可用了吗？”不愧是 CTO，一语中的。</span></p><p style=\"text-align: left;\"><br></p><figure style=\"text-align: center;\"><img data-ratio=\"0.8853820598006644\" data-type=\"png\" data-w=\"602\" style=\"text-align: left; max-width: 600px\" title=\"\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8p5D77PwgOvbzTEBzNIqcrJ1e3zh6vqKFNjoial5I3MY3rgyjAsGlwpdQ/640?wx_fmt=png\"></figure><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">小章看了一眼架构图，提出了三个问题：</span></p><p style=\"text-align: left;\"><br></p><ol class=\"list-paddingleft-2\" style=\"width: 577.422px;text-align: left;\"><li style=\"text-align: left;font-size: 15px;\"><p>如果主机（以下简称 master）宕机，备机（以下简称 backup）顶上，那 IP 地址不是变了吗？此时客户端该怎么连接？</p></li><li style=\"text-align: left;font-size: 15px;\"><p>几台机器首次启动时，谁为 master，谁为 backup？</p></li><li style=\"text-align: left;font-size: 15px;\"><p>master 宕机后，backup 是如何感知到的？多台 backup 又是如何竞选出主机的？这个和问题 2 有点类似。</p></li></ol><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">“这几个问题提的很好，正是实现高可用的关键，可以看出小伙子还是有经过深入思考的”，老梁高兴地说，“这些问题不难化解，我们一一来看看”。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><strong><span style=\"font-size: 15px;\">问题一：backup 成为 master 后，IP 地址变了怎么办？</span></strong><span style=\"font-size: 15px;\"></span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;color: rgb(171, 25, 66);\">答</span><span style=\"font-size: 15px;\">：IP 地址不能变，对外必须表现为一个 IP，我们通常称为<strong>虚拟（virtual） IP，</strong>通常简称为 VIP。</span></p><p style=\"text-align: left;\"><br></p><figure style=\"text-align: center;\"><img data-ratio=\"1.0348837209302326\" data-type=\"png\" data-w=\"602\" style=\"text-align: left; max-width: 600px\" title=\"\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8pIfKbFaF8lHqEu8x5ycSuRK2sXeKQyZtDiagnR73nI4PNmdzGiaQboeDQ/640?wx_fmt=png\"></figure><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">如果 master（即图中的 L1）工作，则此 VIP 在 master 上可用。若 master 宕机，如果 backup（比如 L2）竞选 master 成功，则 VIP 在 L2 上生效，同时新的 master 需要发送一个携带有本机的 MAC 地址和 VIP 地址信息的 ARP 报文。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">你会发现 VIP 从老的 master 转移到竞选 master 成功的 backup 上了，我们把这种现象称为 <strong>IP 漂移</strong>，这里有两个问题需要澄清：</span></p><p style=\"text-align: left;\"><br></p><ul class=\"list-paddingleft-2\" style=\"width: 577.422px;\"><li style=\"text-align: left;font-size: 15px;\"><p>一个主机如何才能有两个 IP？</p></li><li style=\"text-align: left;font-size: 15px;\"><p>为什么 VIP 在某台竞选 master 成功的 backup 上生效后要发一个携带有本机的 MAC 地址和 VIP 地址信息的 ARP 报文？</p></li></ul><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">先看<strong>第一个问题</strong>，主机如何才能拥有两个 IP？</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">毕竟一台机器成为主机后，除了本身机器被分配的 IP（115.205.4.210），VIP 也漂移到它身上了，此时它拥有两个 IP。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">我们知道计算机要上网，首先要把网线插入网卡，一个网卡其实就对应着一个 IP。所以一台主机配两个网卡就可以绑定两个 IP，一般 LVS 都会配置双网卡。一来每个网卡带宽都是有限的，双网卡相当于提升了一倍的带宽；二来两个网卡也起到了热备的作用，如果一个网卡坏了，另外一个可以顶上。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">但有人说了，我就只有一个网卡也想配置多个 IP，是否可以？</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">答案是</span><span style=\"font-size: 15px;color: rgb(171, 25, 66);\">可以的</span><span style=\"font-size: 15px;\">。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">网卡一般分两种，一种是物理网卡，一种是虚拟网卡：</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><strong><span style=\"font-size: 15px;\">物理网卡</span></strong></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">可以插网线的网卡。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">如果有多个网卡，我们一般将其命名为 eth0、eth1……如果一个网卡对应多个 IP。以 eth0 为例，一般将其命名为 eth0、eth0:0、eth0:1……eth0:x。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">比如一台机器只有一个网卡，但其对应两个 IP 192.168.1.2,、192.168.1.3，那么其绑定的网卡名称分别为 eth0、eth0:0。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><strong style=\"font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif><span style=\"font-size: 15px;\">虚拟网卡</span></strong></p><p style=\"text-align: left;\"><span style=\"font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>虚拟网卡通常被称为 loopback，一般命名为 lo。它是一个特殊的网络接口，主要用于本机中各个应用之间的网络交互（哪怕网线拔了，本机各个应用之间通过 lo 也是能通信的）。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>需要注意的是，虚拟网卡和物理网卡一样，也可以绑定任意 IP 地址。如果在虚拟网卡配置了任何的 IP 地址，只要有物理网卡，就能收到并处理目的 IP 为虚拟网卡上 IP 的数据包。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>lo 默认绑定了 127.0.0.1 这个本地 IP ，如果要绑定其他的 IP，对应的网卡命名一般为 lo:0，lo:1……</span><br></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">所以，假设一台机器只有一个网卡，一般内网给它默认分配的 IP 绑定在 eth0 上。那么我们就可以把虚拟 IP 绑定在 eth0:0 上，这样的话外界就能正常访问此虚拟 IP 了。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">如果 master 挂掉了，keepalived 会让此 master 的 eth0:0 端口失效，同时让新 master 的 eth0:0 绑定虚拟 IP，这样就避免了对外暴露两个虚拟 IP。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">再来看<strong>第二个问题</strong>，虚拟 IP 在某台机器生效后，为啥要发一个 ARP 请求呢？</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">其实上面的架构图我们作了一定程度的简化，更详细的应该如下图所示：</span></p><p style=\"text-align: left;\"><br></p><figure style=\"text-align: center;\"><img data-ratio=\"1.0312965722801788\" data-type=\"png\" data-w=\"671\" style=\"text-align: left; max-width: 600px\" title=\"\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8pV4MZxicKxeJptvK8da6lqTCUwY1KoUiaBywzic5uRYJTXia1ZvYiaW3BGYw/640?wx_fmt=png\"></figure><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">如图所示，三台 LVS 机器组成一个同一网段的以太网我们知道，以太网是以 MAC 地址来寻址的。我们知道现在对外暴露的是虚拟 IP，那么当带有虚拟 IP 的包到达路由器时，它该怎么找到对应的机器呢？</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">一开始它啥也不知道，所以它在网址发了一个 ARP 广播包，相当于大吼一声：IP 地址为 115.205.4.213 的机器是谁啊？</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">由于这个虚拟 IP 在 L1 上，所以只有 L1 响应了。L1 会把带有自己 MAC 地址的响应包发回给路由器，路由器收到后会把 IP 地址与 L1 MAC 地址的关系记在本地，然后在包的头部装上 L1 的 MAC 地址发给交换机，交换机就能识别到应该发给 L1。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">下次当客户端再次发数据包到路由器时，路由器会首先在本地缓存（ARP 缓存）中查到 IP 对应的 MAC（即 L1 的MAC ）。命中后将包上的 MAC 地址替换成 L1 的 MAC 转发出去。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">至此相信你应该明白为啥虚拟 IP 生效后要发 ARP 报文了。就是为了更新由器上的 ARP 缓存，将虚拟 IP 对应的 mac 地址更新为竞选 master 成功的 backup 上的 MAC，这样下次路由器就能正确将新 master 的 mac 附在数据包上，就能正确地转发到机器上了。否则，数据包会转发到老的 master 上，引起灾难性的后果！</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><strong><span style=\"font-size: 15px;\">问题二：几台机器首次启动后，谁为 master，谁为 backup？</span></strong><span style=\"font-size: 15px;\"></span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">这个问题其实很简单：谁的能力强，谁就优先成为 master。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">我们可以给各个机器设置不同的值为 0~255 的权重，权重越大，代表此机器越有可能成为 master（如果权重一样，则比较它们的 IP，IP 大的权重高）。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">这里分几种情况：</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><strong><span style=\"font-size: 15px;\">情况1. 每个机器启动后都处于 Initialize 状态</span></strong></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">若某台机器接口（eth0）Up 之后，如果其权重为 255 且此时还没有 master 则其成为 master，并且让虚拟 IP 绑定在 eth0:0 端口上。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">如果此时已有 master 呢？</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">分两种模式：<strong>抢占</strong>和<strong>非抢占</strong>模式。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">如果处于非抢占模式下，则它转为 backup 状态，否则它会重新竞争成为 master。此时一般能竞争成功，因为它处于最高权重（一般只有一台机器处于最高权限）。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"><strong style=\"white-space: normal;\">情况2. 机器权重不为 255</strong></span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">如果某台机器权重不为 255，则经过一段时间后如果此时还没有 master ，那么它会竞争 master。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"></span><span style=\"font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>如果此时有了 master，也和情况 1 一样，分抢占</span><span style=\"font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>和非抢占模式</span><span style=\"font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>。</span><span style=\"font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>为啥要经过一段时间才竞争 master 呢</span><span style=\"font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif>？</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">其实主要是为了优先让权重为 255 的机器成为 master。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">整体流程如下：</span></p><p style=\"text-align: left;\"><br></p><figure style=\"text-align: center;\"><img data-ratio=\"1.4008620689655173\" data-type=\"png\" data-w=\"696\" style=\"text-align: left; max-width: 600px\" title=\"\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8p9ugkC8uaPdF3dMbtoiaEuEYpSgicAjls1Zo01lISaYGlibUmhMzXfDAiag/640?wx_fmt=png\"></figure><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><strong><span style=\"font-size: 15px;\">问题三：master 宕机后，backup 是如何感知到的？多台 backup 又是如何竞选出主机的？</span></strong><span style=\"font-size: 15px;\"></span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">当机器成为 master 后，它会定时发送广播给其他的 backup，让其他 backup 知道它还存活着。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">如果在指定时间内（一般我们称此时间为 Master_Down_Interval）backup 没有收到 master 的广播包，那么 backup 互相之间会发广播包通过比较权重竞争 master。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">某台 backup 竞选 master 成功后同样会让虚拟 IP 绑定在 eth0:0 端口上，并且发送 ARP 包让路由器等更新自己的 ARP 缓存，其他竞选失败的则转为 backup 状态。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">至此，相信大家已经明白了 keepalived 的工作机制，所有上面说的这些工作只要配置一下 keepalived 的配置文件并启动后即可实现。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">另外，keepalived 实现的高可用机制不光可以用在 LVS 上，也可以用在 MySQL 等高可用上。所以，你内部工程连 MySQL 的地址一般是虚拟 IP。现在我相信你能看懂如下 LVS 的高可用工作图了。</span></p><p style=\"text-align: left;\"><br></p><figure style=\"text-align: center;\"><img data-ratio=\"0.8754152823920266\" data-type=\"jpeg\" data-w=\"602\" style=\"text-align: left; max-width: 600px\" title=\"\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/OyweysCSeLXrjicZX0VUeGzakyic01Gx8ph93NSUPII6tPVNl66jjqDSG7zgIJ6nvZOXmZia4bicNHJwoNtXUZkqwA/640?wx_fmt=jpeg\"></figure><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\"><strong>注意</strong>：不管是 master 还是 backup 都能对背后的 RS 作健康检查哦。</span></p><p style=\"text-align: left;\"><br></p><h3 style=\"white-space: normal;\"><strong style=\"color: rgb(171, 25, 66);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif><span style=\"font-size: 15px;text-align: left;\">总结</span></strong></h3><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">相信大家看完本文对 keepalived 的工作原理应该是了然于胸了，它的主要工作模式无非就两块：<strong>健康检查</strong>和<strong>高可用</strong>。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">健康检查我们只介绍了常见的两种，其实它还支持通过运行脚本来作健康检测，只是不太常用而已。另外，keepalived 的高可用可以说是大放异彩，除了用在 LVS 的高可用，还用在 Nginx 、MySQL 的高可用上。原理其实无非就是利用<strong>心跳检测 + 竞争 master + IP 漂移</strong>来实现。完整的 keepalived.conf 配置文件大家有兴趣可以看文末的参考链接，相信经过上面的原理讲解再去看此文件不是问题。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">另外不知大家是否注意到了，master 虽然可以定时向 backup 发送心跳，但如果此心跳链路坏了，backup 就会误认为 master 已经不可用了，从而去申请成为 master。这样就会造成两个 master 的出现，也就是我们常说的<strong>脑裂</strong>。</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">怎么解决？</span></p><p style=\"text-align: left;\"><br></p><p style=\"text-align: left;\"><span style=\"font-size: 15px;\">可以同时用两条心跳线路，这样一条心跳检测线路坏了，另一条还是好的，依然能传送心跳消息。当然除了心跳链路坏了还有可能会有其他情况也会导致脑裂的发生，我们还是要做好多种预案，必要时人工及时介入（关于脑裂的更多信息可以看文末的参考链接）。</span></p><p style=\"text-align: left;\"><br></p><h4 style=\"white-space: normal;\"><strong style=\"color: rgb(171, 25, 66);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif><span style=\"font-size: 15px;text-align: left;\">巨人的肩膀</span></strong></h4><p><br></p><ul class=\"list-paddingleft-2\" style=\"width: 577.422px;text-align: left;\"><li style=\"text-align: left;font-size: 12px;color: rgb(136, 136, 136);\"><p>keepalived.conf 配置文件详解：https://www.huaweicloud.com/articles/c37ca72e2dde50e91324471ea761d41b.html</p></li><li style=\"text-align: left;font-size: 12px;color: rgb(136, 136, 136);\"><p>脑裂问题及解决：https://www.cnblogs.com/struggle-1216/p/12897981.html</p></li></ul><p style=\"white-space: normal;\"><span style=\"font-size: 15px;\"></span></p><p style=\"white-space: normal;text-align: center;\"><br></p><p style=\"white-space: normal;text-align: center;\"><span style=\"font-size: 15px;color: rgb(136, 136, 136);\">- EOF -</span></p><section donone=\"shifuMouseDownCard('shifu_c_030')\" label=\"Copyright Reserved by PLAYHUDONG.\" style=\"margin-top: 1em;margin-bottom: 1em;white-space: normal;text-align: start;caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);border-width: 0px;border-style: initial;border-color: initial;\"><section style=\"margin-left: 1em;line-height: 1.4;\"><span style=\"padding: 3px 8px;border-radius: 4px;color: rgb(255, 255, 255);background-color: rgb(255, 105, 31);font-family: inherit;text-align: inherit;text-decoration: inherit;font-size: 16px;\">推荐阅读</span>  <span style=\"margin-left: 4px;padding: 3px 8px;border-radius: 1.2em;color: rgb(255, 255, 255);line-height: 1.2;background-color: rgb(204, 204, 204);font-family: inherit;text-align: inherit;text-decoration: inherit;border-color: rgb(249, 110, 87);font-size: 12px;\">点击标题可跳转</span></section><section style=\"margin-top: -11px;padding: 22px 16px 16px;border-width: 1px;border-style: solid;border-color: rgb(255, 105, 31);color: rgb(51, 51, 51);font-size: 1em;font-family: inherit;text-align: inherit;text-decoration: inherit;\"><p style=\"line-height: 2em;\"><span style=\"text-decoration: underline;font-size: 13px;\">1、<a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651498554&amp;idx=1&amp;sn=16d4fe94b87616e929ff29e29109a416&amp;chksm=bd25c4458a524d5340ebfeb263b1d4602c9e272d89bb6c5bf4526808a6cd40d0a0ee08da93f0&amp;scene=21#wechat_redirect\" data-itemshowtype=\"11\" tab=\"innerlink\" data-linktype=\"2\">你管这破玩意儿叫负载均衡?</a></span></p><p style=\"line-height: 2em;\"><span style=\"text-decoration: underline;font-size: 13px;\">2、<a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651488012&amp;idx=1&amp;sn=3b757fc297a8823feec18a80a31ab522&amp;chksm=bd2513738a529a65dab33187e7e5898eb2ac0944af1da9a10ea1d59bea9014812a65a947565a&amp;scene=21#wechat_redirect\" data-itemshowtype=\"11\" tab=\"innerlink\" data-linktype=\"2\">Dubbo 负载均衡的实现</a></span></p><p style=\"line-height: 2em;\"><span style=\"text-decoration: underline;font-size: 13px;\">3、<a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651498599&amp;idx=2&amp;sn=622185f2a45cded12855e5d8c733e92d&amp;chksm=bd25c4188a524d0ebc02c905005665068f173795a4e4ad1e2208daa7e8374260bdac44e99435&amp;scene=21#wechat_redirect\" data-itemshowtype=\"11\" tab=\"innerlink\" data-linktype=\"2\">再谈负载均衡</a></span></p></section></section><p style=\"white-space: normal;caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);text-align: start;\"><br></p><p style=\"white-space: normal;text-align: center;\"><span style=\"font-size: 14px;color: rgb(255, 169, 0);\">看完本文有收获？请转发分享给更多人</span><br></p><p style=\"white-space: normal;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;\"><strong style=\"color: rgb(255, 169, 0);\">关注「ImportNew」，提升Java技能</strong></p><p style=\"white-space: normal;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;\"><img data-ratio=\"0.9166666666666666\" data-s=\"300,640\" data-type=\"jpeg\" data-w=\"600\" style=\"box-sizing: border-box !important; visibility: visible !important; width: 600px !important; max-width: 600px\" width=\"auto\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg\"></p><p style=\"white-space: normal;text-align: right;\"><span style=\"font-size: 14px;\"></span><span style=\"font-family: -apple-system-font, system-ui, \" helvetica neue sc sans gb yahei ui arial sans-serif center>点赞和在看就是最大的支持</span><span style=\"font-family: -apple-system-font, system-ui, \" helvetica neue sc sans gb yahei ui arial sans-serif center>❤️</span></p>\n                </div>\n\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651501542&amp;idx=2&amp;sn=61f8df64c82a0a9aad19bab2f01ef364&amp;chksm=bd25df998a52568f816be83860b14a08aeec20371239ab117ceadcd02ed5c8c45df900d40701#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/11757/AiHtx2pcoN\"></div></div>","descriptionType":"html","publishedDate":"Tue, 28 Sep 2021 03:30:00 +0000","feedId":2521,"bgimg":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/eZzl4LXykQzo2nYACUBQiaOjc0DC3lWVIuQwUCfrdWrnGZP9YTjwCYRjb2ZIxKkFxOfCP3kGpRR5W34hc96Uwrw/0?wx_fmt=jpeg?imageView2/1/w/600","linkMd5":"32fb69043d3bcc582365530a289f0447","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn84@2020_5/2021/09/30/15-56-12-513_9657ad3c8fabb538.webp","destWidth":288,"destHeight":288,"sourceBytes":10545,"destBytes":8608,"author":"","articleImgCdnMap":{"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/eZzl4LXykQzo2nYACUBQiaOjc0DC3lWVIuQwUCfrdWrnGZP9YTjwCYRjb2ZIxKkFxOfCP3kGpRR5W34hc96Uwrw/0?wx_fmt=jpeg?imageView2/1/w/600":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn84@2020_5/2021/09/30/15-56-12-513_9657ad3c8fabb538.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8pXK1vok2uia0QEqf0g2ZD3mjOfMcxOneiaRG5Q8Vb140ibkTsS6VX4gOpQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn7@2020_1/2021/09/30/15-56-32-669_bef84244254371f5.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8pUud1PuD1H3E3FWewK91mEELHrW0RUByLlcDS8jxeBgGyD4bTLibSVEQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn91@2020_5/2021/09/30/15-56-14-318_b415f4be89428086.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8p5D77PwgOvbzTEBzNIqcrJ1e3zh6vqKFNjoial5I3MY3rgyjAsGlwpdQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn19@2020_3/2021/09/30/15-56-19-945_5e6dc95991d40d48.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8pIfKbFaF8lHqEu8x5ycSuRK2sXeKQyZtDiagnR73nI4PNmdzGiaQboeDQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn3@2020_4/2021/09/30/15-56-23-396_476999b034261552.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8pV4MZxicKxeJptvK8da6lqTCUwY1KoUiaBywzic5uRYJTXia1ZvYiaW3BGYw/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8p9ugkC8uaPdF3dMbtoiaEuEYpSgicAjls1Zo01lISaYGlibUmhMzXfDAiag/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn11@2020_6/2021/09/30/15-58-10-502_21b636a33acd1678.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/OyweysCSeLXrjicZX0VUeGzakyic01Gx8ph93NSUPII6tPVNl66jjqDSG7zgIJ6nvZOXmZia4bicNHJwoNtXUZkqwA/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn95@2020_5/2021/09/30/15-56-25-390_1ea6d7df135fe4e8.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn100@2020_2/2021/09/30/15-56-41-954_f93d0239d4369c75.webp","http://www.jintiankansha.me/rss_static/11757/AiHtx2pcoN":null},"publishedOrCreatedDate":1633017367893}],"record":{"createdTime":"2021-09-30 23:56:07","updatedTime":"2021-09-30 23:56:07","feedId":2521,"fetchDate":"Thu, 30 Sep 2021 15:56:07 +0000","fetchMs":608,"handleMs":21,"totalMs":128561,"newArticles":0,"totalArticles":5,"status":1,"type":0,"ip":"bc1eecef1292254c09de6c1e66b750f3","hostName":"europe-58*","requestId":"b3d9b1dfa40e4629b23faa5e5b773a2b_2521","contentType":"application/rss+xml","totalBytes":173384,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":10,"articlesImgsGithubTotal":8,"successGithubMap":{"myreaderx10":1,"myreaderx32":1,"myreaderx33":1,"myreaderx11":1,"myreaderx2":1,"myreaderx12":1,"myreaderx1":1,"myreaderx29":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-24 21:31:41","updatedTime":"2020-09-01 10:09:47","id":2521,"name":"ImportNew","url":"http://feedmaker.kindle4rss.com/feeds/importnew.weixin.xml","subscriber":null,"website":null,"icon":"http://www.sogou.com/images/logo/new/favicon.ico?v=4","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn9@2020_3/2020/09/01/02-08-31-388_d24121c9beed1de6.ico","description":"伯乐在线旗下账号，专注Java技术分享，包括Java基础技术、进阶技能、架构设计和Java技术领域动态等。","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-09-30 23:58:15","updatedTime":"2021-09-30 23:58:15","id":null,"feedId":2521,"linkMd5":"32fb69043d3bcc582365530a289f0447"}],"tmpCommonImgCdnBytes":8608,"tmpBodyImgCdnBytes":164776,"tmpBgImgCdnBytes":0,"extra4":{"start":1633017366915,"total":0,"statList":[{"spend":957,"msg":"获取xml内容"},{"spend":21,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":122634,"msg":"正文链接上传到cdn"}]},"extra5":10,"extra6":9,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/AiHtx2pcoN","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":499,"convertSpendMs":0,"createdTime":"2021-09-30 23:56:12","host":"europe-23*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E4%B9%8B%E5%A4%87%E8%83%8E%E8%BD%AC%E6%AD%A3","linkMd5ListStr":"32fb69043d3bcc582365530a289f0447","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/AiHtx2pcoN","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":1270,"convertSpendMs":0,"createdTime":"2021-09-30 23:56:13","host":"us-035*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E4%B9%8B%E5%A4%87%E8%83%8E%E8%BD%AC%E6%AD%A3","linkMd5ListStr":"32fb69043d3bcc582365530a289f0447","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-038.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-23.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://europe65.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-035.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-52.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-014.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/eZzl4LXykQzo2nYACUBQiaOjc0DC3lWVIuQwUCfrdWrnGZP9YTjwCYRjb2ZIxKkFxOfCP3kGpRR5W34hc96Uwrw/0?wx_fmt=jpeg?imageView2/1/w/600","sourceStatusCode":200,"destWidth":288,"destHeight":288,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn84@2020_5/2021/09/30/15-56-12-513_9657ad3c8fabb538.webp","sourceBytes":10545,"destBytes":8608,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":4783,"convertSpendMs":5,"createdTime":"2021-09-30 23:56:08","host":"us-010*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E4%B9%8B%E5%A4%87%E8%83%8E%E8%BD%AC%E6%AD%A3","linkMd5ListStr":"32fb69043d3bcc582365530a289f0447,32fb69043d3bcc582365530a289f0447","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.3 KB","destSize":"8.4 KB","compressRate":"81.6%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8pUud1PuD1H3E3FWewK91mEELHrW0RUByLlcDS8jxeBgGyD4bTLibSVEQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":407,"destHeight":576,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn91@2020_5/2021/09/30/15-56-14-318_b415f4be89428086.webp","sourceBytes":22698,"destBytes":12040,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":1862,"convertSpendMs":10,"createdTime":"2021-09-30 23:56:12","host":"europe61*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E4%B9%8B%E5%A4%87%E8%83%8E%E8%BD%AC%E6%AD%A3","linkMd5ListStr":"32fb69043d3bcc582365530a289f0447","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.2 KB","destSize":"11.8 KB","compressRate":"53%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8p5D77PwgOvbzTEBzNIqcrJ1e3zh6vqKFNjoial5I3MY3rgyjAsGlwpdQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":602,"destHeight":533,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn19@2020_3/2021/09/30/15-56-19-945_5e6dc95991d40d48.webp","sourceBytes":41319,"destBytes":22878,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":7253,"convertSpendMs":13,"createdTime":"2021-09-30 23:56:12","host":"us-030*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E4%B9%8B%E5%A4%87%E8%83%8E%E8%BD%AC%E6%AD%A3","linkMd5ListStr":"32fb69043d3bcc582365530a289f0447","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"40.4 KB","destSize":"22.3 KB","compressRate":"55.4%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8pIfKbFaF8lHqEu8x5ycSuRK2sXeKQyZtDiagnR73nI4PNmdzGiaQboeDQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":602,"destHeight":623,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn3@2020_4/2021/09/30/15-56-23-396_476999b034261552.webp","sourceBytes":45995,"destBytes":30932,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":10809,"convertSpendMs":21,"createdTime":"2021-09-30 23:56:12","host":"us-014*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E4%B9%8B%E5%A4%87%E8%83%8E%E8%BD%AC%E6%AD%A3","linkMd5ListStr":"32fb69043d3bcc582365530a289f0447","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"44.9 KB","destSize":"30.2 KB","compressRate":"67.3%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/OyweysCSeLXrjicZX0VUeGzakyic01Gx8ph93NSUPII6tPVNl66jjqDSG7zgIJ6nvZOXmZia4bicNHJwoNtXUZkqwA/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":602,"destHeight":527,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn95@2020_5/2021/09/30/15-56-25-390_1ea6d7df135fe4e8.webp","sourceBytes":22264,"destBytes":16830,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":12680,"convertSpendMs":14,"createdTime":"2021-09-30 23:56:12","host":"us-038*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E4%B9%8B%E5%A4%87%E8%83%8E%E8%BD%AC%E6%AD%A3","linkMd5ListStr":"32fb69043d3bcc582365530a289f0447","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.7 KB","destSize":"16.4 KB","compressRate":"75.6%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8pXK1vok2uia0QEqf0g2ZD3mjOfMcxOneiaRG5Q8Vb140ibkTsS6VX4gOpQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":392,"destHeight":488,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn7@2020_1/2021/09/30/15-56-32-669_bef84244254371f5.webp","sourceBytes":28397,"destBytes":13084,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":20109,"convertSpendMs":12,"createdTime":"2021-09-30 23:56:12","host":"us-002*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E4%B9%8B%E5%A4%87%E8%83%8E%E8%BD%AC%E6%AD%A3","linkMd5ListStr":"32fb69043d3bcc582365530a289f0447","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"27.7 KB","destSize":"12.8 KB","compressRate":"46.1%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":600,"destHeight":550,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn100@2020_2/2021/09/30/15-56-41-954_f93d0239d4369c75.webp","sourceBytes":37143,"destBytes":31608,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":29253,"convertSpendMs":17,"createdTime":"2021-09-30 23:56:12","host":"us-026*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E4%B9%8B%E5%A4%87%E8%83%8E%E8%BD%AC%E6%AD%A3","linkMd5ListStr":"32fb69043d3bcc582365530a289f0447","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.3 KB","destSize":"30.9 KB","compressRate":"85.1%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/OyweysCSeLXrjicZX0VUeGzakyic01Gx8p9ugkC8uaPdF3dMbtoiaEuEYpSgicAjls1Zo01lISaYGlibUmhMzXfDAiag/640?wx_fmt=png","sourceStatusCode":200,"destWidth":696,"destHeight":975,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn11@2020_6/2021/09/30/15-58-10-502_21b636a33acd1678.webp","sourceBytes":72830,"destBytes":37404,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":57712,"convertSpendMs":87,"createdTime":"2021-09-30 23:57:13","host":"us-030*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E4%B9%8B%E5%A4%87%E8%83%8E%E8%BD%AC%E6%AD%A3","linkMd5ListStr":"32fb69043d3bcc582365530a289f0447","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"71.1 KB","destSize":"36.5 KB","compressRate":"51.4%"}],"successGithubMap":{"myreaderx10":1,"myreaderx32":1,"myreaderx33":1,"myreaderx11":1,"myreaderx2":1,"myreaderx12":1,"myreaderx1":1,"myreaderx29":1},"failGithubMap":{}}