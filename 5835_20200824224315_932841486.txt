{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","title":"次期 Android では 「DNS over TLS」 がサポートされる","link":"https://hyper-text.org/archives/2018/05/android_p_dns_over_tls_support.shtml","description":"<p class=\"ogp-image\"><img src=\"https://hyper-text.org/img/asset/android-p-ogp.png\" alt=\"次期 Android では 「DNS over TLS」 がサポートされる ： WWW WATCH\" /></p> \n<p><img class=\"imgL\" src=\"https://hyper-text.org/img/post/android-robot-logo.png\" width=\"100\" height=\"100\" alt=\"\" />3月の話なのでちょっと前の話題ですが、Google は、コードネーム 「Android P」 の Developer Preview （開発者向けプレビュー版） をリリースしました。「Android P」 は、「Android 9.0」 としてリリースされる予定の次期 Android OS です （ちなみに、ちょうど今日ですが Google I/O 2018 でベータ版がリリースされましたね）。</p> \n<p>Android P では、例えば IEEE 802.11mc （WiFi Round-Trip-Time （RTT） の方が呼び名としては一般的） プロトコルのサポートにより、GPS が届かない場所、例えば屋内などでも Wi-Fi アクセスポイントからの距離を測定して正確な位置情報を割り出すことが可能になったり、マルチカメラ API のサポート、ノッチ （画面上の切り欠き） を正式にサポートするなど、様々な機能が追加されていますが、Google は開発者向け Blog にて、この Android P 開発者プレビュー版における 「DNS over TLS」 のサポートを発表しました。</p> \n<ul> \n <li><a href=\"https://android-developers.googleblog.com/2018/04/dns-over-tls-support-in-android-p.html\" target=\"_blank\" hreflang=\"en\">DNS over TLS support in Android P Developer Preview - Android Developers Blog</a></li> \n <li><a href=\"https://android-developers.googleblog.com/2018/03/previewing-android-p.html\" target=\"_blank\" hreflang=\"en\">Previewing Android P - Android Developers Blog</a></li> \n</ul> \n<h2>DNS over TLS とは</h2> \n<p>「DNS over TLS」 は、Transport Layer Security（TLS） プロトコルを使用して DNS による名前解決を行うために策定されたプロトコルで、現在、<a href=\"https://tools.ietf.org/html/rfc7858\" target=\"_blank\">RFC 7858</a>、および <a href=\"https://tools.ietf.org/html/rfc8310\" target=\"_blank\">RFC 8310</a> として標準化されています。</p> \n<p>「DNS over TLS」 の目的はセキュリティとプライバシーの保護です。従来、DNS サーバに対するクエリは平文で送信されることから、DNS サーバ間 （DNS キャッシュサーバ － 権威ネームサーバ）、あるいは DNS サーバとクライアント間で行われる通信に対して中間者攻撃 （man-in-the-middle attack） が技術的には可能であり、通信内容の盗聴や改竄が行われる可能性を排除できませんでした （DNSSEC といった改竄検知の仕組みはありますので無防備ということはないのですが）。</p> \n<p>このようなリスクを回避するため、今回の 「DNS over TLS」 や、類似のプロトコルとして 「DNS over DTLS」 あるいは 「DNS over HTTPS」 といった、 DNS サーバとの通信を暗号化するための技術が標準化されてますと。</p> \n<p>ちなみに、DNS over HTTPS は、例えば 「<a href=\"https://developers.google.com/speed/public-dns/\" target=\"_blank\">Google Public DNS</a>」 がサポートしていたりします。</p> \n<ul> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://developers.google.com/speed/public-dns/docs/dns-over-https\" target=\"_blank\" hreflang=\"en\">DNS-over-HTTPS - Google Public DNS</a></li> \n</ul> \n<h2>Android P におけるサポート</h2> \n<p>今回の発表によると、Google は Android P Developer Preview で、「ネットワーク&amp;インターネット設定」 の中に 「プライベート DNS （Private DNS）」 という設定項目を追加したとのこと （下記画像参照）。</p> \n<p><img alt=\"Android P で DNS over TLS を有効にするための設定\" src=\"https://hyper-text.org/img/post/android-p-dns-over-tls-support.png\" width=\"900\" height=\"758\" /></p> \n<p class=\"memo\">画像は <a href=\"https://android-developers.googleblog.com/2018/04/dns-over-tls-support-in-android-p.html\" target=\"_blank\" hreflang=\"en\">DNS over TLS support in Android P Developer Preview - Android Developers Blog</a> から引用</p> \n<p>デフォルトでは 「自動 （Automatic）」 に設定され、接続する DNS サーバが 「DNS over TLS」 に対応している場合は暗号化通信が行われます。ユーザーはこの機能を無効にしたり、プライベート DNS を設定することもできます。</p> \n<p>「DNS over TLS」 モードが有効になると、システム上の全てのアプリケーションからの DNS クエリは暗号化されるとのこと。</p> \n<p>この際、システム側で用意された API を使用せず、独自に DNS への接続を行うアプリケーションについては、アプリケーション側で適切な処理が必要ですが、現在のネットワークでプライベート DNS が使われているかを確認可能な <code>LinkProperties.isPrivateDnsActive()</code> という新たな API が追加されているそうです。</p> \n<ul> \n <li><a href=\"https://developer.android.com/reference/android/net/LinkProperties#isPrivateDnsActive()\" target=\"_blank\" hreflang=\"en\">isPrivateDnsActive() - LinkProperties - Android Developers</a></li> \n</ul> \n<hr /> \n<h3>この記事もあわせて読まれています</h3> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2016/01/get_started_accelerated_mobile_pages.shtml\">AMP （Accelerated Mobile Pages） HTML を出力するようにしてみたけど面倒くさかった話</a></li> \n <li><a href=\"https://hyper-text.org/archives/2013/10/geolocation_api_w3c_recommendation.shtml\">Geolocation API 仕様が W3C 勧告に</a></li> \n <li><a href=\"https://hyper-text.org/archives/2013/04/firefox_os_mobile_released.shtml\">Firefox OS 搭載の開発プレビュー端末が発売開始</a></li> \n <li><a href=\"https://hyper-text.org/archives/2012/02/htc_dropbox_new_deal.shtml\">HTC が無料で使えるクラウドストレージを容量 25GB に増強</a></li> \n <li><a href=\"https://hyper-text.org/archives/2009/03/skype_for_iphone_phs300.shtml\">Skype for iPhone + PHS300 がすばらしい</a></li> \n</ul> \n<hr /> \n<p>この記事は Blog 「<a href=\"https://hyper-text.org/\">WWW WATCH</a>」 で 2018年5月 9日 23:12 に公開されました。</p> \n<p>記事のリンク URL は <a href=\"https://hyper-text.org/archives/2018/05/android_p_dns_over_tls_support.shtml\">https://hyper-text.org/archives/2018/05/android_p_dns_over_tls_support.shtml</a> です。</p> \n<img src=\"http://feeds.feedburner.com/~r/wacth/~4/MaJwwtbbjVw\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Wed, 09 May 2018 14:12:22 +0000","feedId":5835,"bgimg":"https://hyper-text.org/img/asset/android-p-ogp.png","linkMd5":"0214211fb4c6b1162306a26063e725dc","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn34@2020_3/2020/08/24/22-42-37-828_d8aa3b644d3cf7c9.webp","destWidth":1400,"destHeight":860,"sourceBytes":17431,"destBytes":30230,"author":"Yoshiki Kato","enclosureType":"image/png","enclosureUrl":"https://hyper-text.org/img/asset/android-p-ogp.png","articleImgCdnMap":{"https://hyper-text.org/img/asset/android-p-ogp.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn34@2020_3/2020/08/24/22-42-37-828_d8aa3b644d3cf7c9.webp","https://hyper-text.org/img/post/android-robot-logo.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn87@2020_1/2020/08/24/22-43-10-888_5088f9d9b257aa6c.webp","https://hyper-text.org/img/post/android-p-dns-over-tls-support.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn52@2020_1/2020/08/24/22-43-12-948_054ce298a9c72ee5.webp","http://feeds.feedburner.com/~r/wacth/~4/MaJwwtbbjVw":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn59@2020_2/2020/08/24/22-43-10-385_77b0cee36b4d48cf.webp"},"publishedOrCreatedDate":1598308949550},{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","title":"Cookie 使用の同意を得てから Google Analytics のトラッキングを有効にする","link":"https://hyper-text.org/archives/2018/05/google_analytics_cookie_opt_in.shtml","description":"<p class=\"ogp-image\"><img src=\"https://hyper-text.org/img/post/ga-cookie-opt-in-01.png\" alt=\"Cookie 使用の同意を得てから Google Analytics のトラッキングを有効にする ： WWW WATCH\" /></p> \n<p><img class=\"imgL\" src=\"https://hyper-text.org/img/post/ga_logo_300.png\" width=\"75\" height=\"75\" alt=\"\" />少し前に会社の Web サイトでたまに更新しているコラムで、GDPR （General Data Protection Regulation）」、日本語で言うところの 「EU 一般データ保護規則」 に関連して、Google Analytics に新たに加わった 「データ保持」 の設定についての記事を書きました。</p> \n<ul> \n <li><a href=\"https://burnworks.com/news/article/350/\" target=\"_blank\">Google Analytics に新たに導入された「データ保持」の設定に関する誤解と対策 - バーンワークス株式会社</a></li> \n</ul> \n<p>私、および私の会社は GDPR 等、法務関連が専門分野ではないため、具体的な対策などについて論じる立場ではありませんが、上記コラム公開以降、GDPR 関連で色々と相談されるケースも増えましてですね......</p> \n<p>もちろん専門分野として、Web サイト側で対応すべき点については可能な範囲でお答えしていますが、その中でも Google Analytics によるトラッキングについて同意を得る方法をよく聞かれるので、とりあえずそれを実現するための仕組みを簡単にサンプルとして作ってみました。</p> \n<h2>GDPR が定義する 「同意」 とは</h2> \n<p>GDPR においては、ユーザー （「データ主体」 と表現されます） の「個人データ」 （GDPR で定義される個人データには、「オンライン識別子」 として、Web サイト訪問者の 「IPアドレス」 や 「Cookie（クッキー）」 などが含まれます） を取得するにあたって、ユーザーの同意を求めています。</p> \n<p>EUR-Lex （EU 法データベース） の Web サイトに掲載された 「<a href=\"https://eur-lex.europa.eu/legal-content/en/ALL/?uri=CELEX:52012PC0011\" target=\"_blank\" hreflang=\"en\">Proposal for a <span class=\"module-txt-upp\">Regulation Of The European Parliament And Of The Council</span> on the protection of individuals with regard to the processing of personal data and on the free movement of such data (General Data Protection Regulation)</a>」 の英語版から引用すると、GDPR では 「データ主体の同意」 を、以下のように定義しています。</p> \n<blockquote> \n <p>Consent should be given by a clear affirmative act establishing a freely given, specific, informed and unambiguous indication of the data subject's agreement to the processing of personal data relating to him or her, such as by a written statement, including by electronic means, or an oral statement. This could include ticking a box when visiting an internet website, choosing technical settings for information society services or another statement or conduct which clearly indicates in this context the data subject's acceptance of the proposed processing of his or her personal data. Silence, pre-ticked boxes or inactivity should not therefore constitute consent. Consent should cover all processing activities carried out for the same purpose or purposes. When the processing has multiple purposes, consent should be given for all of them. If the data subject's consent is to be given following a request by electronic means, the request must be clear, concise and not unnecessarily disruptive to the use of the service for which it is provided. (32)</p> \n <p><cite>「<a href=\"http://eur-lex.europa.eu/legal-content/EN/TXT/HTML/?uri=CELEX:32016R0679&amp;from=EN\" target=\"_blank\" hreflang=\"en\">Proposal for a <span class=\"module-txt-upp\">Regulation Of The European Parliament And Of The Council</span> on the protection of individuals with regard to the processing of personal data and on the free movement of such data (General Data Protection Regulation) - EN</a>」 より引用</cite></p> \n</blockquote> \n<p>小難しく書いてるんですけども、要点だけを簡単に訳すと、</p> \n<ul> \n <li>具体的で明確な情報提供を受けた上で、自発的になされた、かつ曖昧でないデータ主体の意思表示が必要</li> \n <li>最初からチェック済みのチェックボックスによって得たオプトインや、黙示的 （要するにこれを見たら同意とみなすよ的） なオプトインでは不十分</li> \n <li>データの利用目的ごとに同意を得ることが求められ、また、データ主体はいつでも同意を撤回したり、同意の設定を変更することができなければならない （例えば Web サイトが複数の目的が異なるトラッキング用 Cookie を発行しているなら、それぞれについてオプトイン / オプトアウトを選択可能にしないといけない）</li> \n</ul> \n<p>ということで、もし Google Analytics だけでなく、その他のマーケティングツール、広告などがトラッキング用のデータを取得しているなら、それぞれについて個別にオプトイン / オプトアウトできないといけませんし、「明確にオプトインさせろ」 と書いてあるとおり、データを取得する前 （今回の Google Analytics であればトラッキングを実行する前） に同意を取るというプロセスを挟まないといけません。</p> \n<p>逆に言えば、ユーザーがアクセスした時点でトラッキング （データ取得） をスタートしておき、「このサイトを閲覧すると Cookie 利用に同意したことになります [OK]」 みたいな表示を出して、OK を押しても押さなくてもトラッキング自体はされる、オプトアウトできず、嫌なら見るな的な対応は、少なくとも GDPR 対策としては駄目ってことです。著名サービスでもたまに見かけるやり方ですけど......</p> \n<p>ということで、Google Analytics しか使ってませんっていう場合は今回のサンプルのような仕組みでも対応可能かもしれませんが、大規模だったり多機能な Web サイトの場合はかなり複雑な処理が必要になるため、これらの処理に特化した専用ツールを導入する方が楽でしょう。</p> \n<p>有名どころだと下記の 「CIVIC」 や 「Cookiebot」 などが挙げられますが、これらサービスは GDPR に基づいた処理を比較的簡単に Web サイト上で実現してくれます。</p> \n<ul> \n <li><a href=\"http://www.civicuk.com/cookie-control/index\" target=\"_blank\" hreflang=\"en\">Cookie Control （CIVIC）</a></li> \n <li><a href=\"https://www.cookiebot.com/\" target=\"_blank\" hreflang=\"en\">Cookiebot</a></li> \n</ul> \n<h2>Google Analytics で同意を取得するサンプル</h2> \n<p>で、今回は Google Analytics のみ利用している Web サイトにおいて、GDPR での定義に合致する形で 「同意」 を取得してからその結果に応じてトラッキングを有効にしたり、無効にする簡単な仕組みをサンプルとして作ってみました。</p> \n<p>公開環境できちんとしたテストをしていないのであくまでサンプルとしてご覧ください。</p> \n<ul> \n <li><a href=\"https://burnworks.com/docs/ga-cookie-opt-in-sample/\" target=\"_blank\">Cookie 使用の同意を得てから Google Analytics のトラッキングを有効にするサンプル</a></li> \n <li><a href=\"https://github.com/burnworks/ga-cookie-opt-in-js\" target=\"_blank\">burnworks/ga-cookie-opt-in-js - GitHub</a></li> \n</ul> \n<h3>何をやっているのか</h3> \n<p>Google Analytics には、プロパティごとにトラッキングを拒否できる 「ユーザー オプトアウト」 の仕組みが用意されています。</p> \n<p>具体的には <code>window['ga-disable-UA-XXXXX-Y'] = true;</code> をセットしてあげれば、Google Analytics のトラッキングコードが Web ページに読み込まれていてもトラッキングが無効になりますと。</p> \n<ul> \n <li><a href=\"https://developers.google.com/analytics/devguides/collection/analyticsjs/user-opt-out?hl=ja\" target=\"_blank\">ユーザー オプトアウト - Google Analytics - Google Developers</a></li> \n</ul> \n<p>そこで JavaScript を用いてユーザーがアクセスしてきた際に Google Analytics によるトラッキングが行われる旨の通知、およびそれに対する同意を求める通知バーを表示し、そこで選択された結果を <code>localStorage</code> に保存、その値によって以降のトラッキングを有効にしたり、無効にしたりを切り替えるようにしたのが今回のサンプルです。</p> \n<ul> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://developer.mozilla.org/ja/docs/Web/API/Web_Storage_API\" target=\"_blank\">Web Storage API - Web API インターフェイス - MDN</a></li> \n</ul> \n<p>ソースコードはあまり綺麗とはいえないと思いますが、コメントを見ていただければ大体やっていることはわかるんじゃないかなと。</p> \n<ul> \n <li><a href=\"https://github.com/burnworks/ga-cookie-opt-in-js/blob/master/src/js/ga-cookie-opt-in.js\" target=\"_blank\">src/ga-cookie-opt-in.js</a></li> \n</ul> \n<p>簡単に解説すると、</p> \n<ul> \n <li><code>localStorage</code> から <code>ga_cookie_opt_in</code> の値を探して、空なら通知バーを表示 （この時、Google Analytics のトラッキングは無効）</li> \n <li>「同意する」 ボタンが押されたら <code>ga_cookie_opt_in</code> に <code>yes</code> をセットしてトラッキングを有効 （<code>window['ga-disable-UA-XXXXX-Y'] = false;</code> を設定）。通知バーは設定がリセットされるまで、再訪しても表示させない</li> \n <li>「同意しない」 ボタンが押されたら <code>ga_cookie_opt_in</code> に <code>no</code> をセットし、<code>window['ga-disable-UA-XXXXX-Y'] = true;</code> のまま通知バーを非表示に。設定がリセットされ、再表示された通知バーで 「同意する」 ボタンが押されるまでは Google Analytics のトラッキングが無効に</li> \n</ul> \n<p>という感じで動作します。<code>localStorage</code> にデータを保存しているので、基本的にはブラウザやタブを閉じても設定は消えずに残ります。</p> \n<p>Google Analytics のトラッキングコードは別途設置してください。Google タグマネージャーから配信していても同様に動作すると思います。当たり前ですが、設置したトラッキングコードのプロファイル ID と、<code>ga-cookie-opt-in.js</code> に記述するプロファイル ID は同じものでないと正しく動作しません。</p> \n<p>実際に利用する場合は、同じ JavaScript を Web サイト内の全ページに設置するのと、今回は同じサンプルページに置いてありますが、設定をリセットするためのボタンを、プライバシーポリシーのページなどに設置してあげれば、ユーザーの明確な同意を得てからのトラッキング開始と、ユーザーに同意の取り消しといった、設定変更が可能な仕組みを提供できると思います。</p> \n<p>また、実用のためには、サンプルでは通知バーの中の表示が日本語になっていますけども、これをユーザーの言語設定に応じて多言語化したり、GDPR 対策であれば、対象となる地域からのアクセスに対してだけ通知バーを表示するといったカスタマイズは必要かと思います。</p> \n<p>あと、今どき Web Storage に非対応のクライアント環境なんてないだろという前提で書いちゃってますが、本来はこの辺もきちんとやった方がいいかもです。</p> \n<h3>トラッキングの有無が正しく切り替わっているかの確認方法</h3> \n<p>トラッキングの有効 / 無効が正しく選択されているかについては、最も簡単でわかりやすい方法として、Chrome の拡張機能として Google が提供している 「Google Analytics Debugger」 を使用します。</p> \n<ul> \n <li><a href=\"https://chrome.google.com/webstore/detail/google-analytics-debugger/jnkmfdileelhofjcijamephohjechhna\" target=\"_blank\">Google Analytics Debugger - Chrome ウェブストア</a></li> \n</ul> \n<p>この拡張機能を Chrome にインストールして、デベロッパーツールから Console を開くと、Google Analytics のトラッキング状態 （送信されているデータなどの情報） が表示されます。</p> \n<p>例えばサンプルページで、「同意ボタンを押す前の状態」 および 「同意しない」 を選択した状態 （つまり Google Analytics のトラッキングが無効になっていて欲しい状態） で Console を開いてみると、下記のように表示されます。</p> \n<p><img alt=\"Chrome デベロッパーツールの 「Console」 で Google Analytics Debugger の情報を表示した例\" src=\"https://hyper-text.org/img/post/ga-cookie-opt-in-01.png\" width=\"1160\" height=\"660\" /></p> \n<p><code>User has opted out of tracking.</code> の表示と共に、Cookie の書き込みが失敗したというエラーが出ていると思いますが、この状態ですと、Google Analytics にはデータ送信がされていない状態になります。</p> \n<p>IE とか、スマートフォンでの動作チェックはしていないので、その辺は意図した通りに動くか不明です。短時間でちゃちゃっと作ったのでその辺はご了承の程。</p> \n<h2>参考リンク</h2> \n<ul> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://www.jetro.go.jp/world/reports/2016/01/dcfcebc8265a8943.html\" target=\"_blank\">「EU一般データ保護規則（GDPR）」に関わる実務ハンドブック（入門編）(2016年11月） - ジェトロ</a></li> \n <li><a href=\"http://www.cookiechoices.org/\" target=\"_blank\">ウェブサイトやアプリのユーザーから Cookie 使用の同意を得る - Google Cookie Choices</a></li> \n</ul> \n<h2>関連エントリー</h2> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2016/02/amp_analytics.shtml\">amp-analytics コンポーネントを使用した AMP HTML への Google Analytics 導入方法</a></li> \n</ul> \n<hr /> \n<h3>この記事もあわせて読まれています</h3> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml\">Web サイト作るお仕事をしている人向け Gulp で作るフロントエンド開発環境</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/11/amp_validator_bookmarklet.shtml\">閲覧中の URL を AMP （Accelerated Mobile Pages） バリデータに投げるブックマークレット</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/06/jquery_3_0_released.shtml\">jQuery 3.0 が正式リリース、通常の Web サイト制作で利用するなら軽量版 「Slim build （スリムビルド）」 が便利</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/04/grunt_v1_released.shtml\">Grunt 1.0.0 がついに正式リリース、0.4.5 のリリースから約 2年</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/07/jquery_3_0_alpha_versions_released.shtml\">jQuery 3.0 および jQuery Compat 3.0 のアルファ版が公開される</a></li> \n</ul> \n<hr /> \n<p>この記事は Blog 「<a href=\"https://hyper-text.org/\">WWW WATCH</a>」 で 2018年5月24日 09:37 に公開されました。</p> \n<p>記事のリンク URL は <a href=\"https://hyper-text.org/archives/2018/05/google_analytics_cookie_opt_in.shtml\">https://hyper-text.org/archives/2018/05/google_analytics_cookie_opt_in.shtml</a> です。</p> \n<img src=\"http://feeds.feedburner.com/~r/wacth/~4/fwkDnjeMB6c\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Thu, 24 May 2018 00:37:46 +0000","feedId":5835,"bgimg":"https://hyper-text.org/img/post/ga-cookie-opt-in-01.png","linkMd5":"43080e80aed8e0d3d9cea671da981bb4","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn68@2020_2/2020/08/24/22-42-37-459_b58ce2c051b272dd.webp","destWidth":1160,"destHeight":660,"sourceBytes":19227,"destBytes":59012,"author":"Yoshiki Kato","enclosureType":"image/png","enclosureUrl":"https://hyper-text.org/img/post/ga-cookie-opt-in-01.png","articleImgCdnMap":{"https://hyper-text.org/img/post/ga-cookie-opt-in-01.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn68@2020_2/2020/08/24/22-42-37-459_b58ce2c051b272dd.webp","https://hyper-text.org/img/post/ga_logo_300.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn28@2020_5/2020/08/24/22-43-11-434_06a31f1aca921d6f.webp","http://feeds.feedburner.com/~r/wacth/~4/fwkDnjeMB6c":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn55@2020_4/2020/08/24/22-43-10-367_fb3ae45a4d53c466.webp"},"publishedOrCreatedDate":1598308949549},{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","title":"Gmail アドレス内の 「.」（ピリオド） を無視する仕様がフィッシングに悪用可能だという指摘","link":"https://hyper-text.org/archives/2018/04/phishing_risk_gmail_dots_do_matter.shtml","description":"<p class=\"ogp-image\"><img src=\"https://hyper-text.org/img/asset/phishing-risk-gmail-dots-do-matter.png\" alt=\"Gmail アドレス内の 「.」（ピリオド） を無視する仕様がフィッシングに悪用可能だという指摘 ： WWW WATCH\" /></p> \n<p><img class=\"imgL\" src=\"https://hyper-text.org/img/post/googlemail-128.png\" width=\"64\" height=\"64\" alt=\"\" />以前、下記の参考記事でも書いたのですが、個人向けの Gmail には、所有しているアカウント名に 「+」 で任意の文字列をつなげることで利用できる <strong>疑似</strong>エイリアス （便宜的にこう呼びます） 機能や、アカウント名に含まれる 「.」（ピリオド） を無視するという仕様を使って、同様に疑似エイリアス的な使い方ができる点に触れました （記事としては、それは本来のエイリアスとは異なるから注意しようという内容ですが）。</p> \n<ul> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://hyper-text.org/archives/2014/07/gmail_alias.shtml\">Gmail のエイリアスは個人情報漏洩対策にならないからやめとけっていう話</a></li> \n</ul> \n<p>この 「ピリオドを無視する」 という仕様が、いくつかの条件が重なったときにフィッシング （Phishing） に悪用される可能性があるよねという指摘を、<a href=\"https://vidr.io\">Vidrio</a> の開発者である <a href=\"https://twitter.com/MrJamesFisher\" target=\"_blank\">James Fisher</a> 氏がしていて、興味深かったので簡単に書いてみます。</p> \n<ul> \n <li><a href=\"https://jameshfisher.com/2018/04/07/the-dots-do-matter-how-to-scam-a-gmail-user.html\">The dots do matter: how to scam a Gmail user</a></li> \n</ul> \n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"> \n <p>The dots do matter: how to scam a Gmail user <a href=\"https://t.co/Ff7KDCBGJp\">https://t.co/Ff7KDCBGJp</a></p> \n <p>— James Fisher (@MrJamesFisher) <a href=\"https://twitter.com/MrJamesFisher/status/982683299385667585\">2018年4月7日</a></p> \n</blockquote> \n<p>氏がこの可能性に気がついたのは、自身の Gmail アドレスに <a href=\"https://www.netflix.com/jp/\" target=\"_blank\">Netflix</a> から身に覚えのないクレジットカード情報の更新通知が届いたのがきっかけとのこと。</p> \n<p>氏は当初フィッシングを疑ったのですが（これは当然ですね）、メール自体は Netflix から正規に送られてきているものだったので、試しにメールに記載の 「Update your credit or debit card. （あなたのクレジットカードやデビットカードを更新する）」 リンクをクリックしてみたところ、正しく Netflix のページが表示され、そこに知らないカード番号が表示された上で、「このクレジットカードでの支払いが拒否されているので新しいクレジットカード情報を入れろ」 と案内されます。</p> \n<p>ここで氏が気がついたのは、問題のメールの宛先が、普段使っているアドレスに、ピリオド 「.」 を含んだものだったこと。このことから、「もしかして Netflix は Gmail がアカウント名に含まれるピリオドを無視して、全て同じアカウントとして扱う仕様を知らずに、すべて別のアドレスとして扱っているのでは？」 と仮説を立てます。</p> \n<p>つまり、<code>example@gmail.com</code> と <code>exa.mple@gmail.com</code> は、Gmail 上では同じアカウントなわけですが、Netflix 上ではそれぞれ別のアカウントとして扱われてしまっているということですね。</p> \n<p>そこで試しにピリオド入りのアドレスに対してパスワードリセットをしてみると、当然ながら自分のアドレスにパスワードリセット用のリンクが送られてきます。あとは手順に従ってパスワードをリセットすれば、ピリオド入りのアドレスでログインできてしまうわけですが、これは赤の他人が実際に登録していたアカウントでしたと。つまり、他人のアカウントを乗っ取ることができてしまったわけです。</p> \n<h2>根本的にはアドレスを間違えて登録した人の問題</h2> \n<p>問題のスタートは、他人が所有している Gmail アドレスで Netflix に登録するというミスをしたユーザーがいたことです。例えばすでに <code>example@gmail.com</code> を誰かが取得済みの場合、下記のようなアドレスも同じユーザーに予約されていることになります。つまり他の人は取得できないわけですね。</p> \n<ul> \n <li><code>e.xample@gmail.com</code></li> \n <li><code>ex.ample@gmail.com</code></li> \n <li><code>exa.mple@gmail.com</code></li> \n <li><code>exam.ple@gmail.com</code></li> \n <li><code>examp.le@gmail.com</code></li> \n <li><code>exampl.e@gmail.com</code></li> \n <li><code>e.x.a.m.p.l.e@gmail.com</code> ...etc</li> \n</ul> \n<p>ですから、例えば <code>exa.mple@gmail.com</code> で Netflix に登録した第三者 （<code>example@gmail.com</code> の所有者ではない人） は、アドレスを打ち間違えた結果、たまたま別の人が所有するアドレス （<code>example@gmail.com</code>） の疑似エイリアスで登録したことになってしまったか、何らかの理由でこのアドレスを 「所有していると勘違い」 して登録に使用したか、どちらかだとは思いますが、どちらにしろその人の 「間違い」 がきっかけになります。</p> \n<h2>この仕様を悪用する手順</h2> \n<p>で、アドレスの入力間違いなんかは誰でもする可能性がありますから、間違えた人に問題はあるものの、意図せずこの状況が生まれる可能性はありますね。</p> \n<p>しかし、「Gmail がアカウント名に含まれるピリオドを無視する仕様」 と、「ピリオドを含む Gmail アカウントそれぞれを別のユーザーとして扱う」、かつ 「登録時にメール認証 （メールアドレスの所有・存在確認プロセス） がない」 サービス側の仕様が組み合わさることで、非常に危険なことが起こるわけです。</p> \n<p>具体的にはこの仕様を悪用することで、Gmail アカウントで Netflix に登録したユーザーからクレジットカード情報を詐取することが可能になると氏は指摘しています。具体的な手順は下記の通り。</p> \n<ol> \n <li>まず Netflix のユーザー登録ページで、Gmail アドレスが登録されていないか確認します。アドレスを入力していって、「そのアドレスは登録済みです」 と出るまでやればいいわけです。例として <code>example@gmail.com</code> が登録されていることがわかったとします。</li> \n <li>登録されている Gmail アドレスがわかったら、そのアカウント名にピリオドを入れたアカウント （例えば <code>exa.mple@gmail.com</code> でアカウントを作成します （この時メール認証プロセスがなければ、本来のアドレス所有者は疑似エイリアスでアカウントが作られたことに気がつきません）。</li> \n <li>次に捨てクレジットカード （ワンタイムのクレジットカード番号を発行してくれるサービスなどを利用して取得） の情報を使って無料トライアルを開始します。</li> \n <li>Netflix が登録した捨てクレジットカードの有効性だけ確認したら、カードをキャンセルしてしまいます。</li> \n <li>しばらくして無料トライアル期間が終わると、Netflix は課金をしようとしますが、最初に登録した捨てクレジットカードはキャンセルされてしまっていますので、決済ができず、メールにて 「正しいカード情報をください」 と <code>exa.mple@gmail.com</code> に対してメールを送ります （冒頭の氏が今回の件に気がつくきっかけがこれですね。その時は悪意のないユーザーのクレジットカード決済がたまたま失敗したためにこのメールが送信されてきたわけですが）。</li> \n <li>ここで Gmail の仕様により、このクレジットカード情報を求めるメールは <code>example@gmail.com</code> の所有者に送られるわけですね。</li> \n <li><code>example@gmail.com</code> の所有者は Netflix からのメールを見て、「？」 とは思いつつも、メールアドレスもリンク先も正規の Netflix サイトなわけですので、クレジットカード情報を入力してしまうかもしれません。</li> \n <li>これで攻撃成功です。あとは作ったアカウントのメールアドレスを自分のアドレスに変更してしまえば、<code>example@gmail.com</code> の所有者が入力したクレジットカードの情報を使って、Netflix を利用できてしまうことになります。</li> \n</ol> \n<p class=\"memo\">上の手順を読んでてちょっと気になったのは、Netflix ってクレジットカード情報を入力する前にログインを挟まないの？ っていう点ですかね。私が実際にクレジットカード情報の更新メールを受け取ったことがないので詳しく調べられていないのですが。</p> \n<p>これを、Gmail の仕様を知らずに別アカウントとして扱ってしまう、もしくはそもそもメール認証もなくアカウントが作れる Netflix が悪いと感じる人もいるかもしれませんが、前者に関しては Gmail 以外にも同様の仕様で動いているメールサービスやメールサーバがあるかもしれず、それを全部把握しろというのは無茶な要求です。</p> \n<p>後者について、どのサービスもメールアドレスの所有確認くらいは最低限しろよと個人的には思いますが、ユーザーの登録時の利便性だけを考えればない方がシンプルだし、メールアドレスの打ち間違えなどでメール認証が行えず、離脱してしまうユーザーがいることを考えれば省きたいサービス側の事情もわかります。</p> \n<p>で、この問題を指摘している James Fisher 氏としては、Gmail の仕様を改めた方がいいんじゃないのという話になっているわけですね。とはいえこれも影響が大きすぎて、Gmail が仕様を変更し、ピリオドの有無で別アカウントとして扱うように変更するのはほぼ無理でしょう （氏はユーザーがピリオドの扱いを選択できるようにすればいいんじゃないのと書いていますが）。</p> \n<p>Gmail ユーザーとしては、こういう問題があるということを認識して身に覚えのないクレジットカード情報の更新などに対して安易に情報を入力しないなどの防御策が必要かもしれません。</p> \n<p>ちなみに、「+」 を使用した疑似エイリアスでも同様の問題が発生する可能性があります。</p> \n<h2>参考リンク</h2> \n<ul> \n <li><a href=\"https://support.google.com/mail/answer/7436150?hl=ja\" target=\"_blank\">Gmail アドレスでのピリオドの扱い - Gmail ヘルプ</a></li> \n</ul> \n<h2>関連エントリー</h2> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2013/07/email_address_mistake_risk.shtml\">本当は怖い Gmail （アドレス間違いに気を付けろっていうお話）</a></li> \n <li><a href=\"https://hyper-text.org/archives/2014/07/gmail_alias.shtml\">Gmail のエイリアスは個人情報漏洩対策にならないからやめとけっていう話</a></li> \n</ul> \n<hr /> \n<h3>この記事もあわせて読まれています</h3> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml\">Chrome における HTTPS 通信時の 「保護された通信」 表記廃止、非 SSL 接続時の警告表示の変更と適用開始時期が発表される</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/05/github_pages_https_support.shtml\">GitHub Pages、カスタムドメインでも HTTPS による接続が可能に</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml\">Safari 11.1 は SSL で保護されていないページにパスワード入力欄があるとアドレスバーで警告する</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/02/how_to_do_not_track_setting.shtml\">各ブラウザにおけるトラッキング拒否機能 （DNT） の有効化について</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/02/chrome_68_ssl_warning.shtml\">Google Chrome 68 は SSL で保護されていない全てのページに対して 「安全でない」 と警告する</a></li> \n</ul> \n<hr /> \n<p>この記事は Blog 「<a href=\"https://hyper-text.org/\">WWW WATCH</a>」 で 2018年4月 9日 23:55 に公開されました。</p> \n<p>記事のリンク URL は <a href=\"https://hyper-text.org/archives/2018/04/phishing_risk_gmail_dots_do_matter.shtml\">https://hyper-text.org/archives/2018/04/phishing_risk_gmail_dots_do_matter.shtml</a> です。</p> \n<img src=\"http://feeds.feedburner.com/~r/wacth/~4/eYpdzTkPC9I\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Mon, 09 Apr 2018 14:55:14 +0000","feedId":5835,"bgimg":"https://hyper-text.org/img/asset/phishing-risk-gmail-dots-do-matter.png","linkMd5":"138457a489f254560e33ba9a33fdc2a5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn32@2020_3/2020/08/24/22-42-37-879_b522689f0e897da0.webp","destWidth":1800,"destHeight":1200,"sourceBytes":41730,"destBytes":37374,"author":"Yoshiki Kato","enclosureType":"image/png","enclosureUrl":"https://hyper-text.org/img/asset/phishing-risk-gmail-dots-do-matter.png","articleImgCdnMap":{"https://hyper-text.org/img/asset/phishing-risk-gmail-dots-do-matter.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn32@2020_3/2020/08/24/22-42-37-879_b522689f0e897da0.webp","https://hyper-text.org/img/post/googlemail-128.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn32@2020_6/2020/08/24/22-43-11-157_3b5df2c39b676705.webp","http://feeds.feedburner.com/~r/wacth/~4/eYpdzTkPC9I":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn60@2020_6/2020/08/24/22-43-11-406_933b99d5616edd10.webp"},"publishedOrCreatedDate":1598308949551},{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","title":"Chrome における HTTPS 通信時の 「保護された通信」 表記廃止、非 SSL 接続時の警告表示の変更と適用開始時期が発表される","link":"https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml","description":"<p class=\"ogp-image\"><img src=\"https://hyper-text.org/post/asset/google_chromes_security_indicator_ogp.png\" alt=\"Chrome における HTTPS 通信時の 「保護された通信」 表記廃止、非 SSL 接続時の警告表示の変更と適用開始時期が発表される ： WWW WATCH\" /></p> \n<p><img class=\"imgL\" src=\"https://hyper-text.org/img/post/chrome_logo_120.png\" width=\"60\" height=\"60\" alt=\"\" />タイトルの付け方が難しい...... さて、去年 2017年 10月 17日に正式版がリリースされた Chrome 62 以降では、SSL（TLS） で保護されていない Web ページで 「パスワード」 を入力しようとした際に 「安全ではないですよ」 と警告する機能が有効になっています。</p> \n<p>Google は以前から、SSL で保護されていない接続 （HTTP 接続） に対しては全て、「安全でない」 と表示し、逆に SSL で保護された状態 （HTTPS 接続） を通常の状態として扱い、わざわざ 「保護された通信」、つまり 「安全ですよ」 と表示している現状のやり方を廃止しようぜという提案をしていて、その辺については過去にこの Blog でも取り上げています。</p> \n<ul> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://hyper-text.org/archives/2014/12/marking_http_non_secure.shtml\">Google、ブラウザは HTTP 接続に対して 「安全でない」 と表示するべきと提案</a></li> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://www.chromium.org/Home/chromium-security/marking-http-as-non-secure\" target=\"_blank\" hreflang=\"en\">Marking HTTP As Non-Secure - The Chromium Projects</a></li> \n</ul> \n<p>で、これらを実際にプロダクトに反映するに当たっては、色々と状況を見つつ慎重に進められているわけですが、今回、HTTPS 接続時の 「保護された通信」 （英語版だと 「Secure」） という表記の廃止と、SSL で保護されていないページに設置された入力フォーム （現状の 「パスワード入力欄」 だけじゃなく全て） にデータを入力しようとした際に、「安全じゃないよ （Not Secure）」 と警告を出す機能を有効にするという件、およびその適用開始時期について、公式 Blog でアナウンスがありました。</p> \n<ul> \n <li><a href=\"https://blog.chromium.org/2018/05/evolving-chromes-security-indicators.html\" target=\"_blank\" hreflang=\"en\">Evolving Chrome's security indicators - Chromium Blog</a></li> \n</ul> \n<h2>Chrome 69 からは HTTPS 接続時の 「保護された通信」 表記を廃止</h2> \n<p>現時点で、2018年 9月 4日に正式版がリリース予定 （下記リンク参照） の 「Chrome 69」 から、HTTPS 通信時のアドレスバーに 「鍵マーク」 は表示されるものの、現状で表示されている 「保護された通信」 という緑色のインジゲータに関しては表示されなくなります。</p> \n<p><img alt=\"Chrome における HTTPS 接続時のインジゲータ例\" src=\"https://hyper-text.org/img/post/google_chromes_security_indicator.png\" width=\"640\" height=\"310\" /></p> \n<p class=\"memo\">画像は 「<a href=\"https://blog.chromium.org/2018/05/evolving-chromes-security-indicators.html\" target=\"_blank\" hreflang=\"en\">Evolving Chrome's security indicators - Chromium Blog</a>」 から引用</p> \n<p>上記画像からもわかるとおり、将来的には 「鍵マーク」 自体も廃止していきたい意向ですが、その時期ついては今回はまだ触れられていません。</p> \n<ul> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"http://www.chromium.org/developers/calendar\" target=\"_blank\" hreflang=\"en\">Chromium Development Calendar and Release Info - The Chromium Projects</a></li> \n</ul> \n<h2>Chrome 70 からは HTTP 通信でのフォーム入力に対して 「安全でない」 と警告する</h2> \n<p>さらに、現時点で 2018年 10月 16日に正式版がリリースされる予定の Chrome 70 からは、SSL で保護されていない Web ページ上に設置された入力フォームに対してユーザーが何かデータを入力しようとした場合、アドレスバーで 「安全でない」 という警告を赤色で表示するようになります。</p> \n<p><img alt=\"Chrome における HTTP 接続でのフォーム入力に対する警告例\" src=\"https://hyper-text.org/img/post/google_chromes_security_indicator_02.png\" width=\"580\" height=\"150\" /></p> \n<p>冒頭に書いたとおり、現状の Chrome 最新版でも 「パスワード」 入力欄については警告するようになっているのですが、今年の 10月 16日以降は、パスワード入力欄かどうかを問わず、全ての入力フォームに対して警告が表示されます。</p> \n<h2>Chrome 68 からは HTTP 通信に対して 「保護されていない」 と表示する</h2> \n<p>これは以前下記の記事でも書いたとおりですが、2018年 7月 24日に正式版がリリース予定の Chrome 68 以降、HTTP 接続時に、アドレスバーに 「保護されていません」 という表示が出るようになります。</p> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2018/02/chrome_68_ssl_warning.shtml\">Google Chrome 68 は SSL で保護されていない全てのページに対して 「安全でない」 と警告する</a></li> \n</ul> \n<h2>SSL 対応のタイムリミットは 10月 16日</h2> \n<p>Chrome におけるアドレスバーの表示については、過去に何度か 「バージョン○○以降でこうするよ」 的な発表がされていますが、適用開始バージョン自体がズレたり、正式版のリリース時期が当初予定より少し変わったりしていて、ちょっとわかりにくいのですが、今回のアナウンスが現時点での最新情報になります。</p> \n<p>つまり、Web サイト上に何かしらの入力フォームが設置されていて （例えばサイト内検索なども該当しますね）、ユーザーから 「なんかおたくのサイト、フォームに入力しようとすると安全じゃないって言われるけど大丈夫なの？」 的な問い合わせをもらいたくない場合は、Chrome 70 が正式リリースされる 10月 16日までに Web サイトの SSL 対応が必要になるということです。</p> \n<p>まだ多少時間的なゆとりはありますので、警告なんか気にしないよという方以外は早めの対処をしておいた方がよいでしょう。7月末の Chrome 68 リリース時点で、HTTP 接続時には 「保護されていない」 という表示はされてしまいますから、それが気になるという方はもう少し早めの対応が必要ですね。</p> \n<h2>関連エントリー</h2> \n<ul> \n <li><span class=\"module-entry-label-too-hot\">人気</span> <a href=\"https://hyper-text.org/archives/2015/01/full_time_ssl_website_quick_start.shtml\">5分でわかる正しい Web サイト常時 SSL 化のための基礎知識</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/06/my_blog_ssl.shtml\">当 Blog を SSL 対応させたので手順や修正が必要になった点などをまとめ</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml\">Safari 11.1 は SSL で保護されていないページにパスワード入力欄があるとアドレスバーで警告する</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/02/no_more_passwords_over_http.shtml\">Firefox 46 以降は HTTP 接続時にパスワード入力欄があるとアドレスバーで警告する</a></li> \n</ul> \n<hr /> \n<h3>この記事もあわせて読まれています</h3> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2018/05/github_pages_https_support.shtml\">GitHub Pages、カスタムドメインでも HTTPS による接続が可能に</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/04/phishing_risk_gmail_dots_do_matter.shtml\">Gmail アドレス内の 「.」（ピリオド） を無視する仕様がフィッシングに悪用可能だという指摘</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml\">Safari 11.1 は SSL で保護されていないページにパスワード入力欄があるとアドレスバーで警告する</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/02/how_to_do_not_track_setting.shtml\">各ブラウザにおけるトラッキング拒否機能 （DNT） の有効化について</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/02/chrome_68_ssl_warning.shtml\">Google Chrome 68 は SSL で保護されていない全てのページに対して 「安全でない」 と警告する</a></li> \n</ul> \n<hr /> \n<p>この記事は Blog 「<a href=\"https://hyper-text.org/\">WWW WATCH</a>」 で 2018年5月21日 08:46 に公開されました。</p> \n<p>記事のリンク URL は <a href=\"https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml\">https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml</a> です。</p> \n<img src=\"http://feeds.feedburner.com/~r/wacth/~4/5kZkFk2b2lI\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Sun, 20 May 2018 23:46:16 +0000","feedId":5835,"bgimg":"https://hyper-text.org/post/asset/google_chromes_security_indicator_ogp.png","linkMd5":"04abb702b9890715e78a58d6031857a4","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn71@2020_3/2020/08/24/22-42-39-236_5d197ea5f9440802.webp","destWidth":640,"destHeight":340,"sourceBytes":18896,"destBytes":7514,"author":"Yoshiki Kato","enclosureType":"image/png","enclosureUrl":"https://hyper-text.org/post/asset/google_chromes_security_indicator_ogp.png","articleImgCdnMap":{"https://hyper-text.org/post/asset/google_chromes_security_indicator_ogp.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn71@2020_3/2020/08/24/22-42-39-236_5d197ea5f9440802.webp","https://hyper-text.org/img/post/chrome_logo_120.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn7@2020_4/2020/08/24/22-43-10-966_339d7329c5105b94.webp","https://hyper-text.org/img/post/google_chromes_security_indicator.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn19@2020_1/2020/08/24/22-43-10-982_9c1fb317348b8fb5.webp","https://hyper-text.org/img/post/google_chromes_security_indicator_02.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn64@2020_2/2020/08/24/22-43-10-987_c69b166e06e4da16.webp","http://feeds.feedburner.com/~r/wacth/~4/5kZkFk2b2lI":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn96@2020_1/2020/08/24/22-43-10-821_3c03ac25827fcb34.webp"},"publishedOrCreatedDate":1598308949549},{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","title":"Google Chrome 65 が Beta リリース、CSS Paint API、display: contents のサポートなど","link":"https://hyper-text.org/archives/2018/02/google_chrome_65_beta_release.shtml","description":"<p class=\"ogp-image\"><img src=\"https://hyper-text.org/img/asset/css-paint-api-demo.png\" alt=\"Google Chrome 65 が Beta リリース、CSS Paint API、display: contents のサポートなど ： WWW WATCH\" /></p> \n<p><img class=\"imgL\" src=\"https://hyper-text.org/img/post/chrome_logo_120.png\" width=\"60\" height=\"60\" alt=\"\" />Google Chrome 65 がベータリリースされました。このバージョンでは、モダンブラウザでは初めて、CSS Paint API を実装しています （一部機能制限あり）。</p> \n<ul> \n <li><a href=\"https://blog.chromium.org/2018/02/chrome-65-beta-css-paint-api-and.html\" target=\"_blank\">Chrome 65 Beta: CSS Paint API and the ServerTiming API - Chromium Blog</a></li> \n <li><span class=\"module-entry-label-hot\">参考仕様</span> <a href=\"https://drafts.css-houdini.org/css-paint-api-1/\" target=\"_blank\">CSS Painting API Level 1 - Editor's Draft, 28 January 2018</a></li> \n <li><a href=\"https://drafts.css-houdini.org/\" target=\"_blank\">CSS-TAG Houdini Editor Drafts</a></li> \n</ul> \n<h2>CSS Paint API とは</h2> \n<p>Houdini Task Force （CSS Houdini） という取り組みがあります。Houdini Task Force は、超簡単に言ってしまえば、JavaScript によって CSS を拡張し、より自由に操作するための各種 API 群を標準仕様として策定しましょうという開発者の集合体で、Mozilla、Apple、Opera、Microsoft、HP、Intel、Google 等のエンジニアさん達が現在、様々な仕様のドラフトを策定中です。</p> \n<p>この Houdini 仕様の中に、今回の CSS Paint API （「CSS Custom Paint」 とか 「Houdini's Paint Worklet」 なんて呼ばれ方もしています） も含まれており、この仕様は、CSS で用いる画像を JavaScript から動的に生成するための API を提供します。</p> \n<p>前述の通り、この仕様が （完全にではないにせよ） サポートされるのは Google Chrome 65 が初めてになります。参考までに各ブラウザの実装状況は下記で確認できます。</p> \n<ul> \n <li><a href=\"https://ishoudinireadyyet.com/\" target=\"_blank\">Is Houdini ready yet?</a></li> \n</ul> \n<p>仕様について詳しくは、Chromium Blog からもリンクされている下記ページが参考になります。</p> \n<ul> \n <li><a href=\"https://developers.google.com/web/updates/2018/01/paintapi\" target=\"_blank\">CSS Paint API - Google Developers</a></li> \n</ul> \n<p>例えば、下記のように赤い四角形を描写する簡単な JavaScript を demo.js として用意してみましょう。</p> \n<pre class=\"javascript\">\n/**\n demo.js\n */\nclass rectangePainter {\n  paint(ctx, geom, properties) {\n    const width = geom.width;\n    const height = geom.height;\n \n    ctx.fillStyle = 'red';\n    ctx.rect(0, 0, width, height);\n    ctx.fill();\n  }\n}\n \nregisterPaint('rectange', rectangePainter);\n</pre> \n<p>で、実際に表示する HTML を例えば下記のような感じで用意します。これで、div 要素の <code>background-image</code> として、div 要素と同じサイズの赤い四角形が JavaScript から描写されます。</p> \n<pre class=\"html\">\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ja\" dir=\"ltr\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;CSS Paint API Sample&lt;/title&gt;\n \n    &lt;style&gt;\n      div {\n        background-image: paint(rectange);\n        width: 100px;\n        height: 100px;\n      }\n    &lt;/style&gt;\n \n  &lt;/head&gt;\n  &lt;body&gt;\n \n    &lt;div&gt;&lt;/div&gt;\n \n    &lt;script&gt;\n      CSS.paintWorklet.addModule('demo.js');\n    &lt;/script&gt;\n \n  &lt;/body&gt;\n&lt;/html&gt;\n</pre> \n<p>実際の表示は下記のような感じになります。</p> \n<p><img alt=\"CSS Paint API による背景画像の表示例\" src=\"https://hyper-text.org/img/post/css-paint-api-demo.png\" width=\"1160\" height=\"760\" /></p> \n<p>また、下記のように CSS カスタムプロパティ （<a href=\"https://hyper-text.org/archives/2014/07/css_variables.shtml\">参考記事</a>） を使用して値を参照することもできます。</p> \n<pre class=\"javascript\">\n/**\n demo.js\n */\nclass rectangePainter {\n \n  static get inputProperties() {\n    return ['--rectange-color'];\n  }\n \n  paint(ctx, geom, properties) {\n    const color = properties.get('--rectange-color').toString();\n    const width = geom.width;\n    const height = geom.height;\n \n    ctx.fillStyle = color;\n    ctx.rect(0, 0, width, height);\n    ctx.fill();\n  }\n}\n \nregisterPaint('rectange', rectangePainter);\n</pre> \n<p><code>static get inputProperties()</code> で参照したいプロパティを指定しておき、<code>properties.get().toString()</code> で値を取得します。</p> \n<p>これで、HTML 側で指定しておいたカスタムプロパティから値を取得し、描写が行われます。</p> \n<pre class=\"html\">\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ja\" dir=\"ltr\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;CSS Paint API Sample&lt;/title&gt;\n \n    &lt;style&gt;\n      div {\n        --rectange-color: blue;\n        background-image: paint(rectange);\n        width: 100px;\n        height: 100px;\n      }\n    &lt;/style&gt;\n \n  &lt;/head&gt;\n  &lt;body&gt;\n \n    &lt;div&gt;&lt;/div&gt;\n \n    &lt;script&gt;\n      CSS.paintWorklet.addModule('demo.js');\n    &lt;/script&gt;\n \n  &lt;/body&gt;\n&lt;/html&gt;\n</pre> \n<p>複雑な図形の描写やアニメーションなども可能ですので、実装が進むと使い方によっては便利になるかもしれませんね。</p> \n<h2>その他、<code>display: contents</code> のサポートなど</h2> \n<p><code>display: contents</code> に関しては、かなり前の記事ですが、下記で簡単に書いていますので参考まで。</p> \n<ul> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://hyper-text.org/archives/2015/05/firefox_37_release.shtml\">Firefox 37 が正式リリース、display: contents のサポートなど</a></li> \n</ul> \n<p>その他、<code>hsl()</code> / <code>hsla()</code>、および <code>rgb()</code> / <code>rgba()</code> に関して 「CSS Color Module Level 4」 仕様に基づいた実装に変更されている他、<code>:any-link</code> 疑似クラスのサポートなどが CSS 関連では行われています。</p> \n<ul> \n <li><a href=\"https://drafts.csswg.org/css-color/\" target=\"_blank\">CSS Color Module Level 4 - Editor's Draft, 27 January 2018</a></li> \n <li><a href=\"https://drafts.csswg.org/selectors-4/#the-any-link-pseudo\" target=\"_blank\">8.1. The Hyperlink Pseudo-class: ':any-link' - Selectors Level 4 - Editor's Draft, 6 February 2018</a></li> \n</ul> \n<p>なお、Chrome 65 の正式リリースは、2018年 3月 6日の予定です。</p> \n<ul> \n <li><a href=\"http://www.chromium.org/developers/calendar\" target=\"_blank\">Chromium Development Calendar and Release Info - The Chromium Projects</a></li> \n</ul> \n<h2>関連エントリー</h2> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2018/02/chrome_68_ssl_warning.shtml \">Google Chrome 68 は SSL で保護されていない全てのページに対して 「安全でない」 と警告する</a></li> \n <li><a href=\"https://hyper-text.org/archives/2017/06/google_chrome_59_release.shtml\">Google Chrome 59 が正式リリース、ヘッドレス環境での実行に対応、開発者ツールへの機能追加など</a></li> \n <li><a href=\"https://hyper-text.org/archives/2017/03/google_chrome_symantec_certificates.shtml\">Google Chrome でシマンテック （旧ベリサイン） 発行 SSL 証明書の有効期限が強制的に短縮されたり、EV （拡張認証） が無効になるかもという話</a></li> \n <li><a href=\"https://hyper-text.org/archives/2014/07/css_variables.shtml\">CSS Variables （CSS カスタムプロパティ） の使い方</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/05/firefox_48_support_nested_calc.shtml\">Firefox 48 は CSS calc() 関数の入れ子に対応、CSS カスタムプロパティとの併用がより便利に</a></li> \n</ul> \n<hr /> \n<h3>この記事もあわせて読まれています</h3> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2017/04/microsoft_edge_css_variables_support.shtml\">Edge が CSS カスタムプロパティ （CSS Variables） に対応したので試してみた</a></li> \n <li><a href=\"https://hyper-text.org/archives/2017/03/normalizecss_v6_release.shtml\">normalize.css 6.0.0 がリリース、作者の意見的意味合いが強かったスタイル定義を削除</a></li> \n <li><a href=\"https://hyper-text.org/archives/2017/03/microsoft_edge_css_custom_properties.shtml\">Microsoft Edge が build 15.15061 で CSS カスタムプロパティをサポート</a></li> \n <li><a href=\"https://hyper-text.org/archives/2017/01/chrome_56_position_sticky.shtml\">Chrome 56 に position: sticky; が戻ってきた</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/06/windows_yu_gothic_font.shtml\">Windows で游ゴシックが細字になってしまう件は誰が悪いのかについて CSS 仕様から考えてみる</a></li> \n</ul> \n<hr /> \n<p>この記事は Blog 「<a href=\"https://hyper-text.org/\">WWW WATCH</a>」 で 2018年2月15日 10:59 に公開されました。</p> \n<p>記事のリンク URL は <a href=\"https://hyper-text.org/archives/2018/02/google_chrome_65_beta_release.shtml\">https://hyper-text.org/archives/2018/02/google_chrome_65_beta_release.shtml</a> です。</p> \n<img src=\"http://feeds.feedburner.com/~r/wacth/~4/f7LMLaaIctc\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Thu, 15 Feb 2018 01:59:28 +0000","feedId":5835,"bgimg":"https://hyper-text.org/img/asset/css-paint-api-demo.png","linkMd5":"2f5ca1a460244fe17731a2a83393039e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn39@2020_4/2020/08/24/22-42-37-266_b2010f4f8f864f5e.webp","destWidth":1160,"destHeight":760,"sourceBytes":22225,"destBytes":36086,"author":"Yoshiki Kato","enclosureType":"image/png","enclosureUrl":"https://hyper-text.org/img/asset/css-paint-api-demo.png","articleImgCdnMap":{"https://hyper-text.org/img/asset/css-paint-api-demo.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn39@2020_4/2020/08/24/22-42-37-266_b2010f4f8f864f5e.webp","https://hyper-text.org/img/post/chrome_logo_120.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn7@2020_4/2020/08/24/22-43-10-966_339d7329c5105b94.webp","https://hyper-text.org/img/post/css-paint-api-demo.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn79@2020_4/2020/08/24/22-43-11-476_cd5ba96115de29e7.webp","http://feeds.feedburner.com/~r/wacth/~4/f7LMLaaIctc":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn84@2020_2/2020/08/24/22-43-09-946_ae2b1684edb31173.webp"},"publishedOrCreatedDate":1598308949554},{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","title":"リアルタイム画像処理機能が充実した CDN、「imgix」 を試してみたらとても簡単で便利だった件","link":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","description":"<p class=\"ogp-image\"><img src=\"https://hyper-text.org/img/asset/imgix-cdn-01.png\" alt=\"リアルタイム画像処理機能が充実した CDN、「imgix」 を試してみたらとても簡単で便利だった件 ： WWW WATCH\" /></p> \n<p><img class=\"imgL\" src=\"https://burnworks.imgix.net/img/post/imgix-icon-160x160.png\" width=\"80\" height=\"80\" alt=\"\" />リアルタイム画像処理機能が充実していて、画像ファイルの配信向けに特化した CDN （Content Delivery Network / コンテンツ・デリバリ・ネットワーク） として 「imgix」 というサービスがあります。存在自体は結構前から知っていたんですが、一度試してみようと思っていたものの長いこと手つかずでいました。</p> \n<p>今回ちょっと時間ができたので、試しにこの Blog で導入してみてどんな感じか探ってみたんですが、導入も簡単で、かなり便利だったので導入方法を含めて紹介してみようと思います。</p> \n<ul> \n <li><a href=\"https://www.imgix.com/\" target=\"_blank\">imgix - Real-time image processing and image CDN</a></li> \n</ul> \n<h2>imgix でできること</h2> \n<p>imgix の利点は、なんといっても豊富に用意された画像処理 API でしょう。ファイル名の後ろにパラメータを付与するだけで、様々な画像処理済みのファイルを返してくれます。</p> \n<p>具体的な API については下記にリファレンスがありますが、各種フィルターをかけたり、サイズを変更したり、トリミングしたり、回転させたり、あるいはテキストを合成したり、フォーマットを変更したりといった様々な処理をパラメータのみで行うことができます。</p> \n<ul> \n <li><a href=\"https://docs.imgix.com/apis/url\" target=\"_blank\">Image URL API Reference - imgix</a></li> \n</ul> \n<p>例えば、人物を撮影した元のイメージソース （man.jpg） に対して、自動補正 （Enhance） を加えつつ、自動検知で顔のアップを、300px 四方のサイズで切り抜いて欲しいなどという場合、</p> \n<pre class=\"html\">\n&lt;img\n src=\"https://example.imgix.net/man.jpg?w=300&amp;h=300&amp;fit=crop&amp;crop=faces&amp;auto=enhance\"\n alt=\"Man\"\n&gt;\n</pre> \n<p>のように指定することで処理された画像が返ってきます。</p> \n<p>具体的にやると下記のような感じ。</p> \n<p>まずは元画像です。つい最近、某スタジアムで撮影した写真。</p> \n<p><img src=\"https://burnworks.imgix.net/img/post/2018-02-24-13.49.jpg\" width=\"1146\" height=\"600\" alt=\"サンプル画像\" /></p> \n<p>まずは真四角 （200px 四方） に切り抜いてみましょう。パラメータは下記のように指定してみます。</p> \n<pre class=\"html\">\nfit=crop&amp;w=200&amp;h=200\n</pre> \n<p>そうすると、下記のようになります。</p> \n<p><img src=\"https://burnworks.imgix.net/img/post/2018-02-24-13.49.jpg?fit=crop&amp;w=200&amp;h=200\" width=\"200\" height=\"200\" alt=\"サンプル画像を 200px 四方のサイズに変更\" /></p> \n<p>さらに、ボーダーを付けてみましょう。15px の太さで、透明度 55%、#FF0000 のボーダーを指定します。</p> \n<pre class=\"html\">\nborder=15,55ff0000\n</pre> \n<p><img src=\"https://burnworks.imgix.net/img/post/2018-02-24-13.49.jpg?fit=crop&amp;w=200&amp;h=200&amp;border=15,55ff0000\" width=\"200\" height=\"200\" alt=\"サンプル画像にボーダーを追加\" /></p> \n<p>ついでにテキストも入れてみましょう。テキストの色やサイズ、位置はもちろん、フォントなどもパラメータで指定することができます。</p> \n<pre class=\"html\">\ntxt=FOOTBALL!&amp;txtsize=32&amp;txtclr=ffffff&amp;txtalign=top,center&amp;txtpad=40&amp;txtfont=Futura%20Condensed%20Medium\n</pre> \n<p><img src=\"https://burnworks.imgix.net/img/post/2018-02-24-13.49.jpg?fit=crop&amp;w=200&amp;h=200&amp;border=15,55FF0000&amp;txt=FOOTBALL!&amp;txtsize=32&amp;txtclr=ffffff&amp;txtalign=top,center&amp;txtpad=40&amp;txtfont=Futura%20Condensed%20Medium\" width=\"200\" height=\"200\" alt=\"サンプル画像にテキストを追加\" /></p> \n<p>つまり、元画像を 1つ用意しておきさえすれば、サイズを変えたりみたいなことはパラメータのみで行えますので、例えばレスポンシブイメージみたいなことをしたい場合でも、画像を用意する手間が大幅に省けたりするわけです。</p> \n<p>もちろん、画像処理などは自前のサーバサイドでやってしまえばよいという場合もあるとは思いますが、CDN を導入しつつ、とりあえず画像の配信だけ手軽にやりたいなという人にとってはとても便利なサービスと言えると思います。</p> \n<p>同様のサービスとしては、「ImageResizer」 や 「Cloudinary」、もっと規模の大きいサイト向けだと 「Akamai Image Manager」 や 「Fastly Image Optimizer」 など色々ありますが、最後の 2つは個人の Blog などが使うレベルではありませんし、機能が充実していて、個人レベルでも使いやすいサービスとしては今回紹介している 「imgix」 が有力候補になるかと思います。</p> \n<ul> \n <li><a href=\"https://imageresizer.io/\" target=\"_blank\">ImageResizer - Image CDN with Image Resize API</a></li> \n <li><a href=\"https://cloudinary.com/\" target=\"_blank\">Cloudinary - Image and Video Upload, Storage, Optimization and CDN</a></li> \n <li><a href=\"https://www.akamai.com/jp/ja/products/web-performance/image-manager.jsp\" target=\"_blank\">Image Manager - Akamai</a></li> \n <li><a href=\"https://www.fastly.com/io\" target=\"_blank\">Fastly - Image Optimization Sandbox</a></li> \n</ul> \n<h2>imgix の価格</h2> \n<p>まず最初に、imgix は基本有料のサービスですので、価格は確認してから使ってください。</p> \n<ul> \n <li><a href=\"https://www.imgix.com/pricing\" target=\"_blank\">Pricing - imgix</a></li> \n</ul> \n<p>この記事を書いている時点での基本料金は、「3ドル / 1,000 画像」、転送量に対して「8セント（0.08ドル） / 1GB」 なのですが、<del datetime=\"2018-04-02T21:00+09:00\">1点注意が必要なのは 「Monthly Minimum」、つまり月の最低料金が 「10ドル」 と決まっている点です。</del></p> \n<p><del datetime=\"2018-04-02T21:00+09:00\">ですので、1,000 画像、転送量も 1GB に満たない （多分、個人の Blog レベルでは簡単には到達しないんじゃないでしょうか） 場合でも、最低 10ドルは課金されますから、今の為替レートだと、月額 1,000円ちょっとは必ずかかる最低料金になります。</del></p> \n<p class=\"memo\">[2018-04-02 追記]<br />公式サイトに上記の記載があったのでこのように書いていたのですが、実際に利用してみたところ、どうも最低料金 10ドルというのは適用されていないようで、基本料金 + 転送量に対する課金で単純計算のようです。1ヶ月間、様子を見てみましたが、当サイトで、転送量が概ね 3.18GB、転送量に対してかかる料金が 0.32ドル。これに基本料金の 3ドルが加わって、3.32ドルの請求になっていました。</p> \n<p>これを高いと思うか、安いと思うかは人それぞれだと思いますが、個人的にはかなりリーズナブルな価格設定なんじゃないかなと思います。</p> \n<p>ちなみに、アカウントには新規サインアップで 10ドル分のクレジットがついてきますから、規模の小さいサイトであれば、導入からしばらくの間は実質無料で利用できるということになりますね。</p> \n<h2>imgix の導入手順</h2> \n<p>導入の手順的には下記の通りになります。まずは、必要な情報を入力してサインアップします。</p> \n<p><img src=\"https://burnworks.imgix.net/img/post/imgix-cdn-02.png\" width=\"1260\" height=\"1500\" alt=\"imgix アカウントの作成\" /></p> \n<p>アカウントの作成が完了すると、画像の配信に利用するサブドメインの設定 （独自ドメインも利用できますが今回は説明を省きます） と、元画像をどこに置くかといった設定を行うため、「Source （ソース）」 を作成しろと言われます。</p> \n<p>サインアップしたばかりの状態だと当然ながらソースはまだひとつも設定されていない状態ですので、「Add a source」 ボタンを押して、設定画面に進みます。</p> \n<p>ちなみにこのソースは複数作ることができますので、異なるドメインの複数サイトで利用したいという場合でも、必要な分、ソースを追加していけばよいことになります。</p> \n<p><img src=\"https://burnworks.imgix.net/img/post/imgix-cdn-03.png\" width=\"1260\" height=\"680\" alt=\"imgix 管理画面 - イメージソースの新規追加\" /></p> \n<p>ソースの設定画面では、基本設定として下記の 3項目を設定します。まず画像の配信に利用するサブドメインを指定します。これはもちろん、他の人がすでに使っているものは設定できませんので、自分で管理しやすく、他の人と重複しないものを設定する必要があります。</p> \n<p><img src=\"https://burnworks.imgix.net/img/post/imgix-cdn-04-03.png\" width=\"580\" height=\"130\" alt=\"imgix 管理画面 - イメージソースの設定 - 利用するサブドメインの設定\" /></p> \n<p>次に 「元画像をどこに置くか」 という設定がありますので、4つの中から選択します。今回は自分のサーバ、つまりこの Blog を運用しているサーバに元画像は置きますので、「Web Folder」 を選択します。</p> \n<p><img src=\"https://burnworks.imgix.net/img/post/imgix-cdn-04-01.png\" width=\"580\" height=\"130\" alt=\"imgix 管理画面 - イメージソースの設定 - 画像の置き場所を選択\" /></p> \n<p>最後に、ベース URL を指定します。この Blog の URL をそのまま入れていますが、これで、CDN 側にリクエストする画像のパスが、この Blog のパスと同じになります...... という言い方だとちょっとわかりにくい気がしますので下記に補足します。</p> \n<p><img src=\"https://burnworks.imgix.net/img/post/imgix-cdn-04-02.png\" width=\"580\" height=\"130\" alt=\"imgix 管理画面 - イメージソースの設定 - ベース URL の指定\" /></p> \n<ul> \n <li>imgix URL： <code>https://example.imgix.net/</code></li> \n <li>元画像の置き場所： Web Folder</li> \n <li>ベースURL： <code>https://example.com/image</code></li> \n</ul> \n<p>例えば上記のように設定した場合、</p> \n<p><code>https://example.com/sample.jpg</code></p> \n<p>というファイルは、</p> \n<p><code>https://example.imgix.net/image/sample.jpg</code></p> \n<p>という URL で取得できます。imgix はオリジナル画像を取得後、ベース URL で指定されたパスの下に、オリジナルと同じ階層構造で画像を保管していく形ですね。つまり、私のようにドメイン以下のサブディレクトリを指定せず、サイトの URL だけを入れておけば、</p> \n<p><code>https://example.com/sample.jpg</code></p> \n<p>というファイルは、</p> \n<p><code>https://example.imgix.net/sample.jpg</code></p> \n<p>で取得できますから、既存ソースコードに記述された img 要素のリソース URL から、ドメイン部分だけ imgix のドメインに変える、あるいは付け加えるだけで簡単にソースコードの修正と imgix 導入が完了するということになります。</p> \n<p>なお、画像の保管場所に関して、詳しくは下記の公式ドキュメントで説明されていますので参考まで。</p> \n<ul> \n <li><a href=\"https://docs.imgix.com/setup/serving-images\" target=\"_blank\">Serving Images - imgix Documentation</a></li> \n</ul> \n<p>さて、設定が完了したら保存すると、設定が反映され、数秒から数分でデプロイ完了という表示になります。</p> \n<p><img src=\"https://burnworks.imgix.net/img/post/imgix-cdn-05.png\" width=\"1260\" height=\"530\" alt=\"imgix 管理画面 - 設定の保存とデプロイ完了\" /></p> \n<p>取得したい画像の URL のドメイン部分だけ imgix のものに変えてアクセスしてみて、画像が返ってくれば成功と。</p> \n<h2>当サイトでの具体的な利用方法</h2> \n<p>まずはトップページの記事リストで使われているサムネイル画像を imgix から配信するようにしてみました。その際、今までは面倒なので単純な img 要素だけ記述していたものを、picture 要素を使用したレスポンシブイメージにすることで、画面サイズやデバイスピクセル比に応じて適切なサイズの画像を出し分けるようにしてみました。</p> \n<h3>元のソースコード</h3> \n<p>画像の部分だけ抜き出すと、元々のソースコードは下記のように単純な img 要素だけ使用していました。</p> \n<pre class=\"html\">\n&lt;p&gt;\n  &lt;img src=\"/img/sample.png\" alt=\"\" /&gt;\n&lt;/p&gt;\n</pre> \n<h3>imgix 導入後のソースコード</h3> \n<p>修正後のソースコードは下記のような感じになりました。画像のサイズ指定やメディアクエリに関してはこの Blog のデザインに依存するので参考までにですが。</p> \n<pre class=\"html\">\n&lt;p&gt;\n  &lt;picture&gt;\n    &lt;source media=\"(max-width: 375px)\"\n            srcset=\"https://example.imgix.net/img/sample.png?fit=clip&amp;w=106&amp;dpr=2 2x,\n                    https://example.imgix.net/img/sample.png?fit=clip&amp;w=106&amp;dpr=3 3x,\n                    https://example.imgix.net/img/sample.png?fit=clip&amp;w=106&amp;dpr=4 4x\" /&gt;\n    &lt;source media=\"(max-width: 320px)\"\n            srcset=\"https://example.imgix.net/img/sample.png?fit=clip&amp;w=180\" /&gt;\n    &lt;source srcset=\"https://example.imgix.net/img/sample.png?fit=clip&amp;w=174&amp;dpr=1 1x,\n                    https://example.imgix.net/img/sample.png?fit=clip&amp;w=174&amp;dpr=2 2x,\n                    https://example.imgix.net/img/sample.png?fit=clip&amp;w=174&amp;dpr=3 3x,\n                    https://example.imgix.net/img/sample.png?fit=clip&amp;w=174&amp;dpr=4 4x\" /&gt;\n    &lt;img src=\"https://example.imgix.net/sample.png?fit=clip&amp;w=348\" alt=\"\" /&gt;\n  &lt;/picture&gt;\n&lt;/p&gt;\n</pre> \n<p>パラメータは 「?」 に続けて記述しますが、今回使用しているのは下記の 3つです。</p> \n<ul> \n <li><code>fit=clip</code>：<br />リサイズモードの設定です。<code>fit=clip</code> は、画像をトリミングせずに、指定した幅と高さの範囲内に収まるようにサイズ変更してねという指定になります。リサイズ時のデフォルト値なので指定しなくてもいいんですが一応。</li> \n <li><code>w=[数値]</code>：<br />画像の横幅を指定します。これによって指定した横幅になるようにリサイズされますが、上記の通り、リサイズモードを <code>fit=clip</code> にしているので、縦サイズは画面のアスペクト比を変えないように自動で調整されます。ちなみに、0～1 の間の数値、例えば 「0.5」 などと指定すれば、元画像の半分のサイズ （0.5倍です） で返ってきます。</li> \n <li><code>dpr=[数値]</code>：<br />デバイスピクセル比を指定します。例えば <code>w=174&amp;dpr=2</code> と指定すれば、横幅 348px の画像が返ってきます。いちいち 「174px の 2倍だから......」 なんて計算しなくていいので便利。数値は 1～8 の間で指定します。デフォルト値は 「1」 です。</li> \n</ul> \n<p>これだけ複雑な指定をしても、サーバに置く元の画像は 1つで済んでしまいます。元画像に十分なサイズがあればいいので、適当なサイズで作成してサーバに上げるだけであとは imgix にお任せできちゃうのはとても楽です。</p> \n<h3>パラメータのデフォルト値も設定可能</h3> \n<p>また、パラメータは全画像に対するデフォルト値を設定することも可能です （一部対象外のパラメータもあるようです）。</p> \n<p>例えば、<code>auto=compress</code> パラメータを付けると画像のファイルサイズを圧縮するための最適化を行ってくれますが、全画像に最初から適用したい場合は、下記のようにソースの設定画面で、デフォルトパラメータを指定することができます。</p> \n<p><img src=\"https://burnworks.imgix.net/img/post/imgix-cdn-09.png\" width=\"580\" height=\"260\" alt=\"imgix 管理画面 - デフォルトパラメータの設定例\" /></p> \n<p>画像にテキストを載せたり、ロゴ画像などとブレンドしたりすることもできるので、写真がメインの Blog などで、掲載する全画像に自動的に自分の署名や著作権表示を入れたいなんて用途にも使えると思います （ただ、元画像の場所が Web Folder の場合、元画像の場所を推測するのは簡単なのでちょっとやり方を考えないと厳密には意味ないかもしれませんけども）。</p> \n<h2>導入の効果</h2> \n<p>前述したとおり、複数サイズの画像を出し分けたいなんて時には、パラメータを付けるだけで簡単に行えるので便利ですよねというのはもちろん、ページの表示速度向上にも効果がありました。</p> \n<p>下記の 2枚の画像は、このサイトのトップページを Google の <a href=\"https://developers.google.com/speed/pagespeed/insights/\" target=\"_blank\">PageSpeed Insights</a> で診断したものです。</p> \n<p><img src=\"https://burnworks.imgix.net/img/post/imgix-cdn-06b.png\" width=\"400\" height=\"230\" alt=\"PageSpeed Insights - imgix 導入前\" /></p> \n<p>上が imgix 導入前、下が導入後になりますが、特にパソコン版のスコアが、元々 「Low」 と診断されていたものが、導入後は 「Good」 と診断される状態にまで改善しました。</p> \n<p><img src=\"https://burnworks.imgix.net/img/post/imgix-cdn-06a.png\" width=\"400\" height=\"230\" alt=\"PageSpeed Insights - imgix 導入後\" /></p> \n<p>モバイルの数値は導入前から 「Good」 だったので、特にパソコン向けの方は気にしていなかったのですが、imgix 導入で簡単に改善したのはよかったです （imgix 導入自体の効果というより、レスポンシブイメージに対応したことが要因としては大きいとは思いますが）。</p> \n<p>その他、遅延読み込みと併用したい場合などに便利な imgix.js なども提供されていたり、開発者向けのライブラリ等も色々と用意されているので便利かもしれません。</p> \n<ul> \n <li><a href=\"https://github.com/imgix/imgix.js\" target=\"_blank\">imgix/imgix.js: Responsive images in the browser, simplified.</a></li> \n <li><a href=\"https://docs.imgix.com/libraries\" target=\"_blank\">Libraries - imgix Documentation</a></li> \n</ul> \n<p>ということで、ちょっと費用はかかりますけども、低コストで画像の配信を最適化したいという場合には便利なサービスかと思いますので、興味ある方は試してみるとよいのではないでしょうか。</p> \n<p>今回はサイト内の一部画像にのみ導入してみたという段階で、各記事ページの画像などまで含めて、サイト内の画像全てに対して imgix から配信するようにしたわけではありませんが、サイト側で修正しなければならない点が少ないなど導入の手軽さや、やめたいときも比較的簡単に元に戻せそうなのでいいかな、なんて思っています。</p> \n<hr /> \n<h3>この記事もあわせて読まれています</h3> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2017/07/valu.shtml\">VALU を公開してみました - 手探りで優待も登録してみた件</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/05/github_new_pricing.shtml\">GitHub が新料金プランを発表ということで新旧料金プランを比較してみた</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/03/github_pdf_preview.shtml\">GitHub が PDF ファイルのプレビューに対応</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/02/line_at_app_launch.shtml\">LINE のビジネス向けアカウント 「LINE@」 が誰でも無料で使えるようになったので試してみた - アカウント開設から基本設定まで</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/02/svgomg.shtml\">ブラウザから SVGO で SVG ファイルを最適化できる 「SVGOMG」</a></li> \n</ul> \n<hr /> \n<p>この記事は Blog 「<a href=\"https://hyper-text.org/\">WWW WATCH</a>」 で 2018年3月 1日 11:32 に公開されました。</p> \n<p>記事のリンク URL は <a href=\"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml\">https://hyper-text.org/archives/2018/03/imgix_cdn.shtml</a> です。</p> \n<img src=\"http://feeds.feedburner.com/~r/wacth/~4/zaMafgln7ZY\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Thu, 01 Mar 2018 02:32:52 +0000","feedId":5835,"bgimg":"https://hyper-text.org/img/asset/imgix-cdn-01.png","linkMd5":"dbf06277b103a672aa31ee0b7979826c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn44@2020_3/2020/08/24/22-42-37-640_4c200b79c80844a9.webp","destWidth":1260,"destHeight":920,"sourceBytes":194877,"destBytes":91274,"author":"Yoshiki Kato","enclosureType":"image/png","enclosureUrl":"https://hyper-text.org/img/asset/imgix-cdn-01.png","articleImgCdnMap":{"https://hyper-text.org/img/asset/imgix-cdn-01.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn44@2020_3/2020/08/24/22-42-37-640_4c200b79c80844a9.webp","https://burnworks.imgix.net/img/post/imgix-icon-160x160.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn3@2020_3/2020/08/24/22-43-10-259_4728b0dcac43a3c8.webp","https://burnworks.imgix.net/img/post/2018-02-24-13.49.jpg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn48@2020_5/2020/08/24/22-43-10-632_12754e933fa7eb30.webp","https://burnworks.imgix.net/img/post/2018-02-24-13.49.jpg?fit=crop&w=200&h=200":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn95@2020_1/2020/08/24/22-43-10-188_6dc474b4fa13d34b.webp","https://burnworks.imgix.net/img/post/2018-02-24-13.49.jpg?fit=crop&w=200&h=200&border=15,55ff0000":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn40@2020_2/2020/08/24/22-43-10-532_7bac24c6649db454.webp","https://burnworks.imgix.net/img/post/2018-02-24-13.49.jpg?fit=crop&w=200&h=200&border=15,55FF0000&txt=FOOTBALL!&txtsize=32&txtclr=ffffff&txtalign=top,center&txtpad=40&txtfont=Futura%20Condensed%20Medium":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn28@2020_5/2020/08/24/22-43-11-208_19d01ffab9707951.webp","https://burnworks.imgix.net/img/post/imgix-cdn-02.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn51@2020_4/2020/08/24/22-43-09-728_5cd55a72ea09885a.webp","https://burnworks.imgix.net/img/post/imgix-cdn-03.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn67@2020_6/2020/08/24/22-43-11-616_003d9cac45553170.webp","https://burnworks.imgix.net/img/post/imgix-cdn-04-03.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn43@2020_2/2020/08/24/22-43-09-641_cbc8b306379d5685.webp","https://burnworks.imgix.net/img/post/imgix-cdn-04-01.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn44@2020_4/2020/08/24/22-43-10-662_0ff77f94f81ab68f.webp","https://burnworks.imgix.net/img/post/imgix-cdn-04-02.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn51@2020_5/2020/08/24/22-43-10-604_18c18e4d0fe528e4.webp","https://burnworks.imgix.net/img/post/imgix-cdn-05.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn45@2020_2/2020/08/24/22-43-11-456_9ce399c42fb52549.webp","https://burnworks.imgix.net/img/post/imgix-cdn-09.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn91@2020_6/2020/08/24/22-43-11-187_af7e1b143c96e9ad.webp","https://burnworks.imgix.net/img/post/imgix-cdn-06b.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn76@2020_3/2020/08/24/22-43-10-633_d1e10d12d26843a7.webp","https://burnworks.imgix.net/img/post/imgix-cdn-06a.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn63@2020_1/2020/08/24/22-43-10-507_3837f4333dfd020b.webp","http://feeds.feedburner.com/~r/wacth/~4/zaMafgln7ZY":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn55@2020_6/2020/08/24/22-43-09-585_1fbf79164968ca8e.webp"},"publishedOrCreatedDate":1598308949553},{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","title":"Google Chrome 66 で音声の自動再生をブロック （ミュート） する機能が有効に","link":"https://hyper-text.org/archives/2018/05/chrome_66_improving_autoplay.shtml","description":"<p class=\"ogp-image\"><img src=\"https://hyper-text.org/img/asset/google-chrome-release.png\" alt=\"Google Chrome 66 で音声の自動再生をブロック （ミュート） する機能が有効に ： WWW WATCH\" /></p> \n<p><img class=\"imgL\" src=\"https://hyper-text.org/img/post/chrome_logo_120.png\" width=\"60\" height=\"60\" alt=\"\" />Google Chrome の最新版である Chrome 66 が日本ではゴールデンウィーク中に公開されましたが、このバージョンで、Google は Web サイトにおける音声の自動再生に関する新たなポリシーを発表。基本的には Web ページを開いた際に自動で再生される音声をブロック （ミュート） するようになりました。</p> \n<ul> \n <li><a href=\"https://www.blog.google/products/chrome/improving-autoplay-chrome/\" target=\"_blank\" hreflang=\"en\">Improving Autoplay in Chrome - Google Chrome</a></li> \n</ul> \n<p>Chrome 64 以降のバージョンには、Web サイトごとに音声をミュートする機能は搭載されていましたが、これを一部の Web サイトを除いて自動的にブロックする形へと変更したもの。</p> \n<p>例えば Web ページを開いたと同時に自動再生される動画が Web サイト上に掲載されていた場合など、音声の再生を許可するまでは無音で動画が再生されます。</p> \n<blockquote lang=\"en\"> \n <p>Chrome does this by learning your preferences. If you don't have browsing history, Chrome allows autoplay for over 1,000 sites where we see that the highest percentage of visitors play media with sound. As you browse the web, that list changes as Chrome learns and enables autoplay on sites where you play media with sound during most of your visits, and disables it on sites where you don't. This way, Chrome gives you a personalized, predictable browsing experience.</p> \n <p><cite><a href=\"https://www.blog.google/products/chrome/improving-autoplay-chrome/\" target=\"_blank\" hreflang=\"en\">Improving Autoplay in Chrome - Google Chrome</a> から引用</cite></p> \n</blockquote> \n<p>ユーザーのブラウザに閲覧履歴がない場合は、あらかじめ所謂ホワイトリスト的に登録された 「ユーザーが自動再生を許可する率が高い 1,000 以上の Web サイト」 のみ自動再生され、それ以外の Web サイトについては自動再生がブロックされます。Chrome はユーザーの操作を学習し、ユーザーが自動再生を許可すれば、それによって自動再生が許可される Web サイトは増えていくことになります。</p> \n<p>つまり、一部の Web サイトでは音声の自動再生を許可する操作が必要になって手間は増えますが、一方で知らない Web サイトを開いたとき、望んでもいないのに大音量で音声が流れて慌てるなんてことは減る可能性が高いです。</p> \n<p>まだ実際にブロックされるケースを確認していないのでわかりませんが、マウスをちょっと乗せただけで勝手に再生される迷惑な動画広告なんかも音声がブロックされるならそれはそれで便利かなと思います。</p> \n<h2>Symantec の認証局が 2016年 6月 1日以前に発行した SSL 証明書が無効に</h2> \n<p>このバージョンでの大きなトピックスのひとつとして、以前、Symantec （シマンテック） 傘下の認証局が、信頼性の低い SSL 証明書を発行していた問題に関連して発表されていた、該当認証局が発行した SSL 証明書を段階的に失効させる計画に基づき、2016年 6月 1日以前に発行された SSL 証明書が無効になっています。</p> \n<ul> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://hyper-text.org/archives/2017/03/google_chrome_symantec_certificates.shtml\">Google Chrome でシマンテック （旧ベリサイン） 発行 SSL 証明書の有効期限が強制的に短縮されたり、EV （拡張認証） が無効になるかもという話</a></li> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://security.googleblog.com/2017/09/chromes-plan-to-distrust-symantec.html\" hreflang=\"en\">Google Online Security Blog: Chrome's Plan to Distrust Symantec Certificates - Google Security Blog</a></li> \n</ul> \n<p>ちなみに、2018年 10月 23日に正式リリース予定の Chrome 70 では、計画の最終処置として、該当認証局が発行した SSL 証明書は全て信用できないものとして扱われます。</p> \n<h2>CSS Typed Object Model をサポート</h2> \n<p>以前、Google Chrome 65 が Beta リリースされ、CSS Paint API がサポートされた時にも書いた 「Houdini」 の一環として、今回リリースされた Chrome 66 では、一部の CSS プロパティにおいて 「<a href=\"https://drafts.css-houdini.org/css-typed-om/\" target=\"_blank\" hreflang=\"en\">CSS Typed Object Model（OM）Level 1</a>」 をサポートしています。</p> \n<ul> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://hyper-text.org/archives/2018/02/google_chrome_65_beta_release.shtml\">Google Chrome 65 が Beta リリース、CSS Paint API、display: contents のサポートなど</a></li> \n</ul> \n<p>「CSS Typed OM」 は、従来の文字列ではなく、型付き JavaScript オブジェクトとして JavaScript から CSS プロパティに値を渡せるようにしたものです。パフォーマンスの向上はもちろん、開発者側としても、より直感的で可読性の高いコードを記述することができるようになります。</p> \n<p>従来は、下記のように記述した場合、<code>typeof</code> の戻り値は文字列で、</p> \n<pre class=\"javascript\">\nel.style.opacity = 0.3;\ntypeof el.style.opacity === 'string'\n</pre> \n<p>それを忘れてこんなことやろうとするとおかしいことになっていましたが、</p> \n<pre class=\"javascript\">\nel.style.opacity += 0.1;\nel.style.opacity === '0.30.1' //白目\n</pre> \n<p>新しい、CSS Typed OM では下記のように記述することが可能で、<code>typeof</code> の戻り値は数値になります。</p> \n<pre class=\"javascript\">\nel.attributeStyleMap.set('opacity', 0.3);\ntypeof el.attributeStyleMap.get('opacity').value === 'number'\n</pre> \n<h2>関連エントリー</h2> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2018/02/chrome_68_ssl_warning.shtml\">Google Chrome 68 は SSL で保護されていない全てのページに対して 「安全でない」 と警告する</a></li> \n</ul> \n<hr /> \n<h3>この記事もあわせて読まれています</h3> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2018/07/chrome_68_release_ssl_warning.shtml\">Google Chrome 68 が正式リリース、SSL で保護されていないページに警告表示がスタート</a></li> \n <li><a href=\"https://hyper-text.org/archives/2017/04/chrome_62_ssl_warning.shtml\">Google Chrome 62 は SSL で保護されていないページの入力フォームに対して 「安全でない」 と警告する</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/02/chrome_goodbye_spdy_on_may_15th.shtml\">Chrome が SPDY のサポートを 5月15日にやめて HTTP/2 に完全移行するらしい</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/03/google_data_saver_extension_beta.shtml\">Web サイト閲覧時のデータ使用量を節約する Chrome 拡張機能 「Data Saver （データセーバー）」</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/03/chrome_new_javascript_techniques_for_rapid.shtml\">Google Chrome 41/42 は JavaScript に関する新しい技術によってページの表示速度がさらに向上するらしい</a></li> \n</ul> \n<hr /> \n<p>この記事は Blog 「<a href=\"https://hyper-text.org/\">WWW WATCH</a>」 で 2018年5月 6日 22:17 に公開されました。</p> \n<p>記事のリンク URL は <a href=\"https://hyper-text.org/archives/2018/05/chrome_66_improving_autoplay.shtml\">https://hyper-text.org/archives/2018/05/chrome_66_improving_autoplay.shtml</a> です。</p> \n<img src=\"http://feeds.feedburner.com/~r/wacth/~4/48IGv4reVrc\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Sun, 06 May 2018 13:17:14 +0000","feedId":5835,"bgimg":"https://hyper-text.org/img/asset/google-chrome-release.png","linkMd5":"41063cdbcb4f05036ee0489493441a31","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn60@2020_1/2020/08/24/22-42-37-062_2def37ae5a9a7f20.webp","destWidth":1080,"destHeight":600,"sourceBytes":14011,"destBytes":18262,"author":"Yoshiki Kato","enclosureType":"image/png","enclosureUrl":"https://hyper-text.org/img/asset/google-chrome-release.png","articleImgCdnMap":{"https://hyper-text.org/img/asset/google-chrome-release.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn60@2020_1/2020/08/24/22-42-37-062_2def37ae5a9a7f20.webp","https://hyper-text.org/img/post/chrome_logo_120.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn7@2020_4/2020/08/24/22-43-10-966_339d7329c5105b94.webp","http://feeds.feedburner.com/~r/wacth/~4/48IGv4reVrc":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn84@2020_5/2020/08/24/22-43-10-596_2be45d87b812a822.webp"},"publishedOrCreatedDate":1598308949552},{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","title":"GitHub Pages、カスタムドメインでも HTTPS による接続が可能に","link":"https://hyper-text.org/archives/2018/05/github_pages_https_support.shtml","description":"<p class=\"ogp-image\"><img src=\"https://hyper-text.org/img/asset/ssl_og.jpg\" alt=\"GitHub Pages、カスタムドメインでも HTTPS による接続が可能に ： WWW WATCH\" /></p> \n<p><img class=\"imgL\" src=\"https://hyper-text.org/img/post/github-mark-120px.png\" width=\"60\" height=\"60\" alt=\"\" />静的な Web サイトを簡単に公開可能な GitHub のサービス 「<a href=\"https://pages.github.com/\" target=\"_blank\" hreflang=\"en\">GitHub Pages</a>」 では、ユーザーが取得した独自ドメイン （カスタムドメイン） を使用することも可能ですが、今まで HTTPS による接続には対応していませんでした （厳密には、SSL 証明書の設定項目がなかったため、<code>https://</code> でアクセスしても証明書エラーが帰ってきてしまっていました）。</p> \n<p>今回、カスタムドメインを使用している Web サイトでも、<a href=\"https://letsencrypt.org/\" target=\"_blank\" hreflang=\"en\">Let's Encrypt</a> を使用した HTTPS 接続が可能になりました （ちなみに、GitHub Pages の標準ドメインである <code>username.github.io</code> では 2016年以降 HTTPS での接続に対応しています）。</p> \n<ul> \n <li><a href=\"https://blog.github.com/2018-05-01-github-pages-custom-domains-https/\" target=\"_blank\" hreflang=\"en\">Custom domains on GitHub Pages gain support for HTTPS - The GitHub Blog</a></li> \n <li><a href=\"https://help.github.com/articles/securing-your-github-pages-site-with-https/\" target=\"_blank\" hreflang=\"en\">Securing your GitHub Pages site with HTTPS - User Documentation</a></li> \n</ul> \n<blockquote lang=\"en\"> \n <p>If you are using CNAME or ALIAS records for your custom domain, you're all set and your site should be accessible over HTTPS. If it is, and your site loads correctly over HTTPS, you can optionally enforce HTTPS in your repository's settings. Users who request your site over HTTP will be upgraded to HTTPS.</p> \n <p><cite><a href=\"https://blog.github.com/2018-05-01-github-pages-custom-domains-https/\" target=\"_blank\" hreflang=\"en\">Custom domains on GitHub Pages gain support for HTTPS - The GitHub Blog</a> より引用</cite></p> \n</blockquote> \n<p>基本的にはすでに GitHub Pages でカスタムドメインを使用していて <code>CNAME</code>、または <code>ALIAS</code> レコードが正しく設定されているなら、特別な設定をしなくても HTTPS での接続が可能になるとのこと。</p> \n<p>この場合、HTTP / HTTPS 両方での接続が可能になるため、もし HTTPS 接続を強制したい場合は、リポジトリの設定から、「Enforce HTTPS」 にチェックを入れると、全ての接続が HTTPS にリダイレクトされるようになります。</p> \n<p>もし、<code>A</code> レコードを設定している場合は、DNS に設定する IP アドレスを新しいものに更新する必要があるとのこと。<code>A</code> レコードの設定方法については下記にドキュメントがあります。</p> \n<ul> \n <li><a href=\"https://help.github.com/articles/setting-up-an-apex-domain/\" target=\"_blank\">Setting up an apex domain - User Documentation</a></li> \n</ul> \n<blockquote lang=\"en\"> \n <p><strong>Faster site load times</strong></p> \n <p>These new IP addresses don't just allow us to serve your site over HTTPS, but also places your site behind a content delivery network (CDN), allowing us to serve your site from data centers around the world at fast speeds, and offering additional protection against DDoS attacks. While the previous IP addresses will remain available for a transition period, we recommend you migrate to the new IP addresses to gain these benefits.</p> \n <p><cite><a href=\"https://blog.github.com/2018-05-01-github-pages-custom-domains-https/\" target=\"_blank\" hreflang=\"en\">Custom domains on GitHub Pages gain support for HTTPS - The GitHub Blog</a> より引用</cite></p> \n</blockquote> \n<p>新しい IP アドレスを設定すると、HTTPS による接続が可能になるだけでなく、CDN を利用した配信の最適化や、DDoS 攻撃からの保護も行われます。古い IP アドレスは引き続き使用できるようですが、早めに設定を更新しておいた方がよいでしょう。</p> \n<p>ということで、カスタムドメインで GitHub Pages を利用していた人には朗報なんじゃないでしょうか。</p> \n<h2>関連エントリー</h2> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2015/01/full_time_ssl_website_quick_start.shtml\">5分でわかる正しい Web サイト常時 SSL 化のための基礎知識</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/06/my_blog_ssl.shtml\">当 Blog を SSL 対応させたので手順や修正が必要になった点などをまとめ</a></li> \n</ul> \n<hr /> \n<h3>この記事もあわせて読まれています</h3> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml\">Chrome における HTTPS 通信時の 「保護された通信」 表記廃止、非 SSL 接続時の警告表示の変更と適用開始時期が発表される</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/04/phishing_risk_gmail_dots_do_matter.shtml\">Gmail アドレス内の 「.」（ピリオド） を無視する仕様がフィッシングに悪用可能だという指摘</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml\">Safari 11.1 は SSL で保護されていないページにパスワード入力欄があるとアドレスバーで警告する</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/02/how_to_do_not_track_setting.shtml\">各ブラウザにおけるトラッキング拒否機能 （DNT） の有効化について</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/02/chrome_68_ssl_warning.shtml\">Google Chrome 68 は SSL で保護されていない全てのページに対して 「安全でない」 と警告する</a></li> \n</ul> \n<hr /> \n<p>この記事は Blog 「<a href=\"https://hyper-text.org/\">WWW WATCH</a>」 で 2018年5月 6日 23:42 に公開されました。</p> \n<p>記事のリンク URL は <a href=\"https://hyper-text.org/archives/2018/05/github_pages_https_support.shtml\">https://hyper-text.org/archives/2018/05/github_pages_https_support.shtml</a> です。</p> \n<img src=\"http://feeds.feedburner.com/~r/wacth/~4/vOqARrprryA\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Sun, 06 May 2018 14:42:06 +0000","feedId":5835,"bgimg":"https://hyper-text.org/img/asset/ssl_og.jpg","linkMd5":"688e199277cbadf0cada5c81b71df845","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn79@2020_6/2020/08/24/22-42-38-039_598409d1611a8260.webp","destWidth":1200,"destHeight":900,"sourceBytes":49263,"destBytes":30586,"author":"Yoshiki Kato","enclosureType":"image/jpg","enclosureUrl":"https://hyper-text.org/img/asset/ssl_og.jpg","articleImgCdnMap":{"https://hyper-text.org/img/asset/ssl_og.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn79@2020_6/2020/08/24/22-42-38-039_598409d1611a8260.webp","https://hyper-text.org/img/post/github-mark-120px.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn40@2020_4/2020/08/24/22-43-12-109_2a0ebeab0939014f.webp","http://feeds.feedburner.com/~r/wacth/~4/vOqARrprryA":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn16@2020_1/2020/08/24/22-43-10-107_f579c60e3b1b6749.webp"},"publishedOrCreatedDate":1598308949552},{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","title":"Safari 11.1 は SSL で保護されていないページにパスワード入力欄があるとアドレスバーで警告する","link":"https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml","description":"<p class=\"ogp-image\"><img src=\"https://hyper-text.org/img/asset/safari_ssl_warning_ogp.png\" alt=\"Safari 11.1 は SSL で保護されていないページにパスワード入力欄があるとアドレスバーで警告する ： WWW WATCH\" /></p> \n<p><img class=\"imgL\" src=\"https://hyper-text.org/img/post/safari-logo-360.png\" width=\"60\" height=\"60\" alt=\"\" />つい先日リリースされた、iOS 11.3 にもバンドルされた最新版の Safari 11.1 では、Service Worker をサポートしたりと開発者に取ってはうれしいアップデートが行われています。</p> \n<p>また同時に、このバージョンから、すでに Chrome や Firefox では実装されている、SSL で保護されていないページにログインフォームなどパスワード入力欄が存在する場合にアドレスバーで警告する機能が有効になりました。</p> \n<ul> \n <li><a href=\"https://developer.apple.com/library/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_11_1.html\" target=\"_blank\">Safari 11.1</a></li> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://hyper-text.org/archives/2018/02/chrome_68_ssl_warning.shtml\">Google Chrome 68 は SSL で保護されていない全てのページに対して 「安全でない」 と警告する</a></li> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://hyper-text.org/archives/2016/02/no_more_passwords_over_http.shtml\">Firefox 46 以降は HTTP 接続時にパスワード入力欄があるとアドレスバーで警告する</a></li> \n</ul> \n<p>ということで、試しに SSL で保護されていないページにパスワード入力欄をもったログインフォームっぽいものを設置して実際の動作を確認してみました。</p> \n<p>下記の画像、左がフォームを表示した時、右が入力欄にフォーカスした状態です。</p> \n<p><img alt=\"Safari 11.1 における非 SSL ページでの警告表示例 - 左がフォーム表示時点、右がフォームにフォーカスした状態\" src=\"https://hyper-text.org/img/post/safari_ssl_warning.png\" width=\"1160\" height=\"600\" /></p> \n<p>画像からもわかるとおり、セキュアでない （SSL で保護されていない） 入力フォームを表示しただけでは特に警告はされません。そこに何か入力をしようとすると、アドレスバーに 「安全じゃないよ」 という警告が出るという動作ですね。</p> \n<p>Safari 11.1 は iOS 11.3、および macOS 10.13.4 にバンドル。その他、macOS 10.12.6 と 10.11.6 で利用可能です。</p> \n<h2>関連エントリー</h2> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2018/02/chrome_68_ssl_warning.shtml\">Google Chrome 68 は SSL で保護されていない全てのページに対して 「安全でない」 と警告する</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/02/no_more_passwords_over_http.shtml\">Firefox 46 以降は HTTP 接続時にパスワード入力欄があるとアドレスバーで警告する</a></li> \n <li><a href=\"https://hyper-text.org/archives/2017/01/chrome_56_ssl_warning.shtml\">Chrome 56 が正式リリース、SSL で保護されていないページにパスワード入力欄があるとアドレスバーで警告する</a></li> \n <li><a href=\"https://hyper-text.org/archives/2014/12/marking_http_non_secure.shtml\">Google、ブラウザは HTTP 接続に対して 「安全でない」 と表示するべきと提案</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/02/chrome_canary_mark_non_secure.shtml\">Chrome Canary に HTTP 接続を 「安全でない」 と表示するフラグが追加される</a></li> \n <li><span class=\"module-entry-label-too-hot\">人気</span> <a href=\"https://hyper-text.org/archives/2015/01/full_time_ssl_website_quick_start.shtml\">5分でわかる正しい Web サイト常時 SSL 化のための基礎知識</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/06/my_blog_ssl.shtml\">当 Blog を SSL 対応させたので手順や修正が必要になった点などをまとめ</a></li> \n</ul> \n<hr /> \n<h3>この記事もあわせて読まれています</h3> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml\">Chrome における HTTPS 通信時の 「保護された通信」 表記廃止、非 SSL 接続時の警告表示の変更と適用開始時期が発表される</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/05/github_pages_https_support.shtml\">GitHub Pages、カスタムドメインでも HTTPS による接続が可能に</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/04/phishing_risk_gmail_dots_do_matter.shtml\">Gmail アドレス内の 「.」（ピリオド） を無視する仕様がフィッシングに悪用可能だという指摘</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/02/how_to_do_not_track_setting.shtml\">各ブラウザにおけるトラッキング拒否機能 （DNT） の有効化について</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/02/chrome_68_ssl_warning.shtml\">Google Chrome 68 は SSL で保護されていない全てのページに対して 「安全でない」 と警告する</a></li> \n</ul> \n<hr /> \n<p>この記事は Blog 「<a href=\"https://hyper-text.org/\">WWW WATCH</a>」 で 2018年3月31日 11:16 に公開されました。</p> \n<p>記事のリンク URL は <a href=\"https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml\">https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml</a> です。</p> \n<img src=\"http://feeds.feedburner.com/~r/wacth/~4/GaPKX0A0Myk\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Sat, 31 Mar 2018 02:16:56 +0000","feedId":5835,"bgimg":"https://hyper-text.org/img/asset/safari_ssl_warning_ogp.png","linkMd5":"440bb8cd86a23eb8671a33224d89b17d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn52@2020_5/2020/08/24/22-42-37-781_2d04a8367c74487a.webp","destWidth":1800,"destHeight":1200,"sourceBytes":112233,"destBytes":36746,"author":"Yoshiki Kato","enclosureType":"image/png","enclosureUrl":"https://hyper-text.org/img/asset/safari_ssl_warning_ogp.png","articleImgCdnMap":{"https://hyper-text.org/img/asset/safari_ssl_warning_ogp.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn52@2020_5/2020/08/24/22-42-37-781_2d04a8367c74487a.webp","https://hyper-text.org/img/post/safari-logo-360.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn7@2020_3/2020/08/24/22-43-12-345_0bad5a9eaed88cfc.webp","https://hyper-text.org/img/post/safari_ssl_warning.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn12@2020_3/2020/08/24/22-43-12-702_8a7032f17f90fc11.webp","http://feeds.feedburner.com/~r/wacth/~4/GaPKX0A0Myk":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn44@2020_5/2020/08/24/22-43-11-313_5b64432212eb28ea.webp"},"publishedOrCreatedDate":1598308949551},{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","title":"AMP stories が発表されたので早速簡単なストーリーを作ってみた件","link":"https://hyper-text.org/archives/2018/02/amp_stories.shtml","description":"<p class=\"ogp-image\"><img src=\"https://hyper-text.org/img/post/amp_stories.png\" alt=\"AMP stories が発表されたので早速簡単なストーリーを作ってみた件 ： WWW WATCH\" /></p> \n<p><img class=\"imgL\" src=\"https://hyper-text.org/img/post/amp-logo.svg\" width=\"60\" height=\"60\" alt=\"\" />Accelerated Mobile Pages （AMP） については過去、この Blog でも何度か触れていますが （文末、「関連エントリー」 を参照）、先日、新たに 「AMP stories」 と呼ばれる、タップ操作によって、まるでカードをめくるように閲覧可能なコンテンツを実装するための拡張コンポーネントが発表されました。</p> \n<ul> \n <li><a href=\"https://www.ampproject.org/stories/\" target=\"_blank\">AMP stories</a></li> \n</ul> \n<p>ドキュメントを軽く読んでみて、簡易なものであれば比較的短時間で作れそうな感じでしたので、早速ですが勉強ついでに自分のポートフォリオを簡単に作ってみたので紹介してみようと思います。</p> \n<h2>AMP stories （ストーリー） とは</h2> \n<p>「AMP stories」 は、タップ操作によって軽快に閲覧可能なフルスクリーンのビジュアルコンテンツを提供する新たな拡張コンポーネントです。</p> \n<p>ペラペラとカードをめくっていくようにコンテンツを閲覧することができるため、写真や映像コンテンツに閲覧者を没入させることができるかもしれません。</p> \n<h2>ということで作ってみた</h2> \n<p>まず、ドキュメント類ですが、下記にまとまっています。リファレンスには使用できる要素やそれぞれの役割などが記載されていますので、ひととおり目を通してみるとよいと思います。</p> \n<p>また、チュートリアルは簡単な AMP stories の作り方を順を追って説明してくれていますので、とてもわかりやすく便利です。ベストプラクティスには動画を使用する場合の推奨サイズなどが掲載されていますので、こちらも参考までに読んでおくとよいでしょう。</p> \n<ul> \n <li><a href=\"https://www.ampproject.org/docs/reference/components/amp-story\" target=\"_blank\">AMP stories - Reference</a></li> \n <li><a href=\"https://www.ampproject.org/docs/tutorials/visual_story\" target=\"_blank\">Tutorial: Create a visual AMP story</a></li> \n <li><a href=\"https://www.ampproject.org/docs/guides/amp_story_best_practices\" target=\"_blank\">Best practices for creating an AMP story</a></li> \n</ul> \n<p>で、実際に作ってみたページは下記。PC 版ブラウザで表示すると下記のような感じになります。実際にはスマートフォンでの閲覧を前提としたコンテンツですから、スマートフォンでアクセスする方がよいとは思います。</p> \n<p><img alt=\"画面キャプチャ： Yoshiki Kato（加藤善規）のポートフォリオ - AMP stories\" src=\"https://hyper-text.org/img/post/amp_stories.png\" width=\"1280\" height=\"920\" /></p> \n<ul> \n <li><a href=\"https://yoshiki.kato.name/amp-story/\" target=\"_blank\">Yoshiki Kato（加藤善規）のポートフォリオ - AMP stories</a></li> \n</ul> \n<p>AMP stories を初めて開いた時、下記のような表示になる場合があります。「Enable」 をタップして有効にした上で、ページを再読込すると正しく表示されると思います。</p> \n<p><img alt=\"AMP stories の初回表示例 - 「Enable」をタップして再読込すると表示されます\" src=\"https://hyper-text.org/img/post/amp_stories-enable.png\" width=\"1160\" height=\"860\" /></p> \n<p>ソースコードは実際のページを見ていただくのが早いと思いますが、簡単に解説すると、基本は下記の通りです。</p> \n<p>まず、基本的な AMP HTML のルールについては省くとして、head 要素内で、AMP stories 用の JavaScript を読み込みます。</p> \n<pre class=\"html\">\n&lt;script async custom-element=\"amp-story\" src=\"https://cdn.ampproject.org/v0/amp-story-0.1.js\"&gt;&lt;/script&gt;\n</pre> \n<p>AMP stories のマークアップに関する、ごく基本的なルールは下記のような感じになります。</p> \n<pre class=\"html\">\n&lt;!-- amp-story 要素で全体をマークアップする（Story） --&gt;\n&lt;amp-story standalone&gt;\n \n  &lt;!-- 各ページは amp-story-page 要素でマークアップ（Page） --&gt;\n  &lt;amp-story-page id=\"cover\"&gt;\n \n    &lt;!-- ページ内のコンテンツは amp-story-grid-layer に内包される（Layer） --&gt;\n    &lt;amp-story-grid-layer template=\"fill\"&gt;\n      &lt;!-- template=\"fill\" 内の最初の要素はページ全体を覆うように表示される（背景みたいな感じ） --&gt;\n      &lt;amp-img src=\"assets/cover.png\" width=\"1080\" height=\"1920\" layout=\"responsive\"&gt;&lt;/amp-img&gt;\n    &lt;/amp-story-grid-layer&gt;\n \n    &lt;amp-story-grid-layer template=\"vertical\"&gt;\n    &lt;!-- template=\"\" に指定する属性値によってレイアウトが選択可能 --&gt;\n      &lt;h1&gt;Yoshiki Kato&lt;/h1&gt;\n      &lt;p&gt;Web Director / Web Developer, Tokyo Japan.&lt;/p&gt;\n    &lt;/amp-story-grid-layer&gt;\n \n  &lt;/amp-story-page&gt;\n \n&lt;/amp-story&gt;\n</pre> \n<p>必要なページ数分、<code>amp-story-page</code> 要素を書いていけば、あとは JavaScript が勝手にやってくれます。</p> \n<p><code>amp-story-grid-layer</code> 要素は、<code>template</code> 属性 （必須属性） に指定する値によってレイアウトが選択可能になっていますが、その辺について詳しくは下記で解説されています。</p> \n<ul> \n <li><a href=\"https://www.ampproject.org/docs/reference/components/amp-story#templates\" target=\"_blank\">Templates - AMP stories - Reference</a></li> \n</ul> \n<p><code>amp-story-grid-layer</code> 要素内には、通常の HTML が記述できますが、<code>amp-story-grid-layer</code> 要素の子要素となれる要素には制限がありますので注意してください。その辺は下記で解説されています。</p> \n<ul> \n <li><a href=\"https://www.ampproject.org/docs/reference/components/amp-story#children-(of-amp-story-grid-layer)\" target=\"_blank\">Children (of amp-story-grid-layer) - AMP stories - Reference</a></li> \n</ul> \n<p>犯しやすいミスとしては、恐らく a 要素を記述したくなっちゃうんじゃないかなと思いますが、<code>amp-story-grid-layer</code> 要素の子要素として a 要素は使用できません。AMP stories はタップ操作でページをめくっていくコンテンツですので、ページ内にリンクなど、タップ可能な要素は置けない仕様になっています。</p> \n<p>その他、今回は使用していませんが、動画や音声ファイルも使えますし、簡単なアニメーションは <code>animate-in</code> 属性を付与するだけで簡単に使えたりもしますので、よりインタラクティブなコンテンツを提供することもできます。</p> \n<p>最後ですが、AMP HTML を書いたら、ページを公開する前に必ずバリデータを通すようにしましょう。もしエラーが出る場合はリファレンスなどを読み返して、エラー箇所を修正します。エラーがでなければ完成ですね。</p> \n<ul> \n <li><a href=\"https://validator.ampproject.org/\" target=\"_blank\">The AMP Validator</a></li> \n</ul> \n<p>ちなみに、「<a href=\"https://www.ampproject.org/stories/\" target=\"_blank\">AMP stories</a>」 ページの最後に、Wired や、CNN などのメディアが公開している AMP stories が掲載されていますので、その辺も閲覧してみると参考になるんじゃないでしょうか。</p> \n<h2>まとめ</h2> \n<p>今回は簡単にポートフォリオページを AMP stories にしてみたので、写真とテキストのみで構成される、恐らく最も単純な感じの AMP stories になっていると思いますが、このくらいのものでしたら数時間あれば作れてしまうと思います。</p> \n<p>動画やアニメーションなどを組み合わせるとより AMP stories の本領が発揮される感じになると思いますので、興味ある方は試してみるのもいいかもしれません。</p> \n<p>一方で、長文のテキストを掲載するには向いていないです。<a href=\"https://www.ampproject.org/docs/guides/amp_story_best_practices\" target=\"_blank\">ベストプラクティス</a>にも、テキストは簡単な一文くらいにしときましょうという風に書かれていますので、基本的には画像や映像などをメインに、テキストはその解説程度と考えるといい感じの AMP stories になると思います。その点では今回私が作ったものはテキストが多すぎですね。</p> \n<p>あとは、先にも書きましたが、AMP stories はスマートフォンで閲覧する前提のコンテンツのため、写真にしても動画にしても、縦長サイズのものを用意する必要があります。</p> \n<p>初めて作る場合、この辺の素材集めが結構面倒な感じはしますが、逆に言えばスマートフォンを縦持ちして撮影した動画 （所謂、縦型動画ですね） があれば簡単に作れるという考え方もできますし、旅先で動画を撮って、それを AMP stories にして公開するみたいな使い方も面白いかもしれませんね。</p> \n<h2>関連エントリー</h2> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2016/05/amp_extended_components.shtml\">AMP HTML でアコーディオンやカルーセル表示などを実装する拡張コンポーネントを使ってみる</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/02/amp_analytics.shtml\">amp-analytics コンポーネントを使用した AMP HTML への Google Analytics 導入方法</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/06/amp_validator_web_ui.shtml\">AMP （Accelerated Mobile Pages） バリデータの Web 版が公開される</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/01/get_started_accelerated_mobile_pages.shtml\">AMP （Accelerated Mobile Pages） HTML を出力するようにしてみたけど面倒くさかった話</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/11/amp_validator_bookmarklet.shtml\">閲覧中の URL を AMP （Accelerated Mobile Pages） バリデータに投げるブックマークレット</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/02/google_search_console_amp.shtml\">Google Search Console に AMP の項目が追加される</a></li> \n</ul> \n<hr /> \n<h3>この記事もあわせて読まれています</h3> \n<ul> \n</ul> \n<hr /> \n<p>この記事は Blog 「<a href=\"https://hyper-text.org/\">WWW WATCH</a>」 で 2018年2月16日 09:59 に公開されました。</p> \n<p>記事のリンク URL は <a href=\"https://hyper-text.org/archives/2018/02/amp_stories.shtml\">https://hyper-text.org/archives/2018/02/amp_stories.shtml</a> です。</p> \n<img src=\"http://feeds.feedburner.com/~r/wacth/~4/Xx5vdoICXek\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Fri, 16 Feb 2018 00:59:16 +0000","feedId":5835,"bgimg":"https://hyper-text.org/img/post/amp_stories.png","linkMd5":"aa4ebc491ef68a4c2cc73510570d2be5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn87@2020_5/2020/08/24/22-42-42-962_5b5d85b3dc5b423d.webp","destWidth":1280,"destHeight":920,"sourceBytes":200905,"destBytes":31060,"author":"Yoshiki Kato","enclosureType":"image/png","enclosureUrl":"https://hyper-text.org/img/post/amp_stories.png","articleImgCdnMap":{"https://hyper-text.org/img/post/amp_stories.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn87@2020_5/2020/08/24/22-42-42-962_5b5d85b3dc5b423d.webp","https://hyper-text.org/img/post/amp-logo.svg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn72@2020_1/2020/08/24/22-43-10-606_6acf7a8c14e49906.svg","https://hyper-text.org/img/post/amp_stories-enable.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn12@2020_4/2020/08/24/22-43-11-230_ed41481db74146b3.webp","http://feeds.feedburner.com/~r/wacth/~4/Xx5vdoICXek":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn91@2020_5/2020/08/24/22-43-09-978_30dbd6396135ba7d.webp"},"publishedOrCreatedDate":1598308949554},{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","title":"各ブラウザにおけるトラッキング拒否機能 （DNT） の有効化について","link":"https://hyper-text.org/archives/2018/02/how_to_do_not_track_setting.shtml","description":"<p class=\"ogp-image\"><img src=\"https://hyper-text.org/img/asset/ogp-image-privacy.jpg\" alt=\"各ブラウザにおけるトラッキング拒否機能 （DNT） の有効化について ： WWW WATCH\" /></p> \n<p>週末にニュースを流し読みしてましたら下記の記事が目に入りました。簡単に言えば、Facebook の 「いいね！」 ボタンなどを設置したサイトを閲覧すると、仮にそのボタン自体をクリックしたり、操作しなくても自動的に端末情報などが Facebook に送られ、Facebook 側で持っているユーザー情報と紐ひもづけされて広告などに反映されますよという話。</p> \n<ul> \n <li><a href=\"http://www.yomiuri.co.jp/national/20180224-OYT1T50128.html\" target=\"_blank\">いいね！設置サイト、閲覧だけで個人情報送信 - 読売新聞</a></li> \n</ul> \n<p>一応、Facebook 側でも<a href=\"https://www.facebook.com/settings?tab=ads\" target=\"_blank\">広告関連の設定画面 （要ログイン）</a> でオプトアウトできたりするのですが、普通の人にはわかりにくいですし、そもそもこの手のトラッキング自体は Facebook だけでなく Google をはじめとした多くの企業が行っていて、いちいちサービスごとに設定するのも面倒くさかったりします。</p> \n<p>で、知っている人にとっては当たり前の話なのですが、ブラウザ側でまとめてその辺を拒否 （正確には「拒否したいという意思を伝える」ことが） できたら便利ですよねということで、「Do Not Track （DNT）」 という仕組みが用意されていまして、それを有効にすればいいんじゃないかなと言うことでまとめてみました。</p> \n<h2>Do Not Track とは</h2> \n<p>「Do Not Track （DNT）」 は、オンラインにおける個人情報の収集や利用方法について、ユーザーが自らコントロールできるようにしようという考え方から発生した取り組みで、例えば行動ターゲティング広告などを目的としたサードパーティによるトラッキングに対して、「オプトアウト （拒否） の意思があること」 を Web サイトに通知できる仕組みです。</p> \n<p>DNT の仕組み自体はかなり昔からあって、実際に各ブラウザがサポートを表明し始めた 2012年くらいには結構話題に挙がることも多かったんですけども、色々と大人の事情とかもあって足並みがそろいにくかったりと多々ありました。その間も、ブラウザ側の対応は進んでいて、現時点で主要なブラウザには実装されている状態です。</p> \n<p>例えば、現在の主要ブラウザは 「プライベートブラウズ機能」 が搭載されているケースがほとんどですが、このモードの時は、DNT が自動的に有効になっていると思います。</p> \n<p>なお、W3C でも 「Tracking Preference Expression (DNT)」 仕様として策定が進んでおり、本記事執筆 （2018年2月26日時点） 時点で勧告候補 （CR） となっています。</p> \n<ul> \n <li><a href=\"https://www.w3.org/TR/tracking-dnt/\" target=\"_blank\">Tracking Preference Expression (DNT) - W3C Candidate Recommendation 19 October 2017</a></li> \n</ul> \n<h2>DNT ヘッダはあくまで 「要求」</h2> \n<p>ただし、前提として、「Do Not Track （DNT）」 は、あくまで 「要求」 であって、そのヘッダ情報を受け取ったからといって、Facebook をはじめとした各 Web サイトがそれに従う保証はありません。あくまで、Web サイト側の判断に任されます。</p> \n<p>ですので、下記の設定を行っても、今回取り上げた Facebook のトラッキング問題などが解決するかはわかりませんのであらかじめご了承ください。</p> \n<p>例えば Twitter は、昨年発表した新しいプライバシーポリシーで、DNT のサポートを終了するなど （代わりに Twitter の設定項目にある 「カスタマイズとデータ」 で設定した内容が適用されます）、サービス側のプライバシーポリシーによってどういう動作をするかは変わってきます。</p> \n<ul> \n <li><a href=\"https://blog.twitter.com/ja_jp/topics/product/2017/0518policy.html\" target=\"_blank\">新しいデータコントロールとプライバシーポリシー</a></li> \n <li><a href=\"https://help.twitter.com/ja/safety-and-security/twitter-do-not-track\" target=\"_blank\">Do Not Track （トラッキング拒否）</a></li> \n</ul> \n<p class=\"memo\">今回、詳しく検証してから書いていないのですが、過去に Facebook や Google は DNT ヘッダがあっても無視するって言ってた気がする （うろ覚え） ので多分解決しない気がする...... 結局は各サービス側の設定からオプトアウトしろっていう話になりそう</p> \n<h2>各主要ブラウザで Do Not Track を有効にする</h2> \n<p>PC 版主要ブラウザにおける DNT 関連の設定方法については下記の通り。PC、スマホ版を問わず、基本的には各ブラウザ共にデフォルトでは無効になっていて、ユーザー自身による有効化が必要です （ちなみに以前 Microsoft さんがデフォルトで有効にした結果、文句言われて取りやめた過去あり）。</p> \n<ul> \n <li><a href=\"https://support.mozilla.org/ja/kb/how-do-i-turn-do-not-track-feature\" target=\"_blank\">トラッキング拒否機能を有効化するには - Firefox ヘルプ</a></li> \n <li><a href=\"https://support.google.com/chrome/answer/114662\" target=\"_blank\">サイトの許可を変更する - Google Chrome ヘルプ</a></li> \n <li><a href=\"https://support.microsoft.com/ja-jp/help/17288/windows-internet-explorer-11-use-do-not-track\" target=\"_blank\">Internet Explorer 11 でトラッキング拒否を使う - Windows Help</a></li> \n <li><a href=\"https://privacy.microsoft.com/ja-jp/windows-10-microsoft-edge-and-privacy\" target=\"_blank\">Microsoft Edge、閲覧データ、およびプライバシー - マイクロソフトのプライバシー</a></li> \n <li><a href=\"https://support.apple.com/kb/PH21416?locale=ja_JP\" target=\"_blank\">「Safari」で Web サイトにトラッキングの停止を求める - Apple サポート</a></li> \n</ul> \n<p>スマホ版ブラウザだと下記のような感じ。</p> \n<ul> \n <li><a href=\"https://support.google.com/chrome/answer/114662?co=GENIE.Platform%3DAndroid&amp;oco=1\" target=\"_blank\">サイトの許可を変更する - Android - Google Chrome ヘルプ</a></li> \n <li><a href=\"https://support.mozilla.org/ja/kb/how-do-i-use-do-not-track-firefox-android\" target=\"_blank\">Android 版 Firefox で Web サイトによるトラッキングを拒否するには - Android 版 Firefox ヘルプ</a></li> \n</ul> \n<p>iOS Safari だけ、Apple の公式サイトでは情報が見つからなかったんですが、下記の通り、Safari の設定内に 「トラッキングの停止を要求」 という項目があります。</p> \n<p><img alt=\"iOS Safari における DNT の設定画面例\" src=\"https://hyper-text.org/img/post/how-to-do-not-track-setting-01.png\" width=\"1125\" height=\"1280\" /></p> \n<p>ちなみに、DNT を有効にして、トラッキング用のコードを読み込まないことで Web サイト閲覧時のパフォーマンスが上がるなんて話もありますね。一方で Web サイト上の一部機能が正常に動作しない可能性もありますので、その辺を自己解決できる人にしかお勧めしませんが、今回のようなプライバシーに関するユーザー側の不安、懸念に対して対応するための仕組みも用意されていますよという意味で紹介してみました。</p> \n<p>30分くらいでサッと書いたので色々と雑な感じの記事になってしまいましたが以上です。</p> \n<hr /> \n<h3>この記事もあわせて読まれています</h3> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml\">Chrome における HTTPS 通信時の 「保護された通信」 表記廃止、非 SSL 接続時の警告表示の変更と適用開始時期が発表される</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/05/github_pages_https_support.shtml\">GitHub Pages、カスタムドメインでも HTTPS による接続が可能に</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/04/phishing_risk_gmail_dots_do_matter.shtml\">Gmail アドレス内の 「.」（ピリオド） を無視する仕様がフィッシングに悪用可能だという指摘</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml\">Safari 11.1 は SSL で保護されていないページにパスワード入力欄があるとアドレスバーで警告する</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/02/chrome_68_ssl_warning.shtml\">Google Chrome 68 は SSL で保護されていない全てのページに対して 「安全でない」 と警告する</a></li> \n</ul> \n<hr /> \n<p>この記事は Blog 「<a href=\"https://hyper-text.org/\">WWW WATCH</a>」 で 2018年2月26日 11:43 に公開されました。</p> \n<p>記事のリンク URL は <a href=\"https://hyper-text.org/archives/2018/02/how_to_do_not_track_setting.shtml\">https://hyper-text.org/archives/2018/02/how_to_do_not_track_setting.shtml</a> です。</p> \n<img src=\"http://feeds.feedburner.com/~r/wacth/~4/QEGAyP8GERg\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Mon, 26 Feb 2018 02:43:47 +0000","feedId":5835,"bgimg":"https://hyper-text.org/img/asset/ogp-image-privacy.jpg","linkMd5":"8a62e58c3fcc96d1166c86acf090e390","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn75@2020_6/2020/08/24/22-42-38-432_33fbdaf66e81a205.webp","destWidth":1600,"destHeight":1000,"sourceBytes":218250,"destBytes":93690,"author":"Yoshiki Kato","enclosureType":"image/jpg","enclosureUrl":"https://hyper-text.org/img/asset/ogp-image-privacy.jpg","articleImgCdnMap":{"https://hyper-text.org/img/asset/ogp-image-privacy.jpg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn75@2020_6/2020/08/24/22-42-38-432_33fbdaf66e81a205.webp","https://hyper-text.org/img/post/how-to-do-not-track-setting-01.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn3@2020_1/2020/08/24/22-43-12-587_76d9a7d2fefa0de8.webp","http://feeds.feedburner.com/~r/wacth/~4/QEGAyP8GERg":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn67@2020_4/2020/08/24/22-43-09-653_ae356d8f779d8284.webp"},"publishedOrCreatedDate":1598308949554},{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","title":"動画 （Netflix） 視聴目当てで Oculus Go を購入したら正解だった件","link":"https://hyper-text.org/archives/2018/05/oculus_go.shtml","description":"<p class=\"ogp-image\"><img src=\"https://hyper-text.org/img/post/oculus-go-05.jpg\" alt=\"動画 （Netflix） 視聴目当てで Oculus Go を購入したら正解だった件 ： WWW WATCH\" /></p> \n<p>PC など、所謂親機となるようなデバイスとの接続が不要、スタンドアロンで動作する VR ヘッドセット 「Oculus Go」 が日本時間でゴールデンウィーク中の 5月 2日に発売されました。</p> \n<p>しかも価格が日本円で 23,800円（32GB / 消費税、および日本への送料込） からとリーズナブルなこともあって発売当初から注目を集めています。</p> \n<ul> \n <li><a href=\"https://www.oculus.com/go/\" target=\"_blank\">Oculus Go - Oculus</a></li> \n</ul> \n<p>で、私も発売初日に思わずポチってしまったわけですが、週明けに手元に届きましたので、早速、短時間ではありますが試してみました。</p> \n<p>VR に関していえば、「<a href=\"http://www.jp.playstation.com/psvr/\" target=\"_blank\">PlayStation VR</a>」 をすでに所有していて、それなりに楽しんではいるのですが、個人的にはあまりゲームに使う時間って普段からなくて、シネマティックモードで動画再生する用途の方が多かったんですよね。VR がどうこういうより、ヘッドマウントディスプレイを使用して大画面で映画などを観たいっていう方が強かったわけです。</p> \n<p>とはいえ、PlayStation VR はリビングのテレビに接続してあって、ちょっと動画観たいためだけにわざわざリビングに移動するのダルかったり、家人がリビングでテレビ観てたりすると、それをどいてもらうってものね...... まぁ簡単にいえば気軽さがないわけです （プレステを自分の部屋に設置しろって言われそうですけども）。</p> \n<p>今回発売された Oculus Go は、セットアップやアプリのインストールにスマートフォンは使用するものの、基本的にはこいつ単体で動作して、動画の再生なども行えますから、観たいと思ったときに、ささっと装着して気軽に （疑似） 大画面での動画視聴が可能という点に惹かれたわけです。で、結論からいうと買って大正解ですよ。</p> \n<h2>Oculus Go のセットアップ</h2> \n<p>早速パッケージを開封して初期セットアップを進めます。私が購入したのは 64GB 版 （29,800円）。連休中の購入でしたが、日本時間で 2日午前中に注文して、7日の夕方に家に帰ったら宅配ボックスに届いていたので、概ね 5日程度で届くようです。ちなみに発送は香港からでした。</p> \n<p>ちなみにストレージの目安ですが、公式サイト情報だと下記のようになってました。</p> \n<ul> \n <li>64GB： HD 映画 7本、ゲーム 20本、アプリ 40本</li> \n <li>32GB： HD 映画 3本、ゲーム 10本、アプリ 20本</li> \n</ul> \n<p>ゲームはそれ程やらないし、動画再生も Netflix のようなストリーミング再生だけだなという感じであれば、32GB 版でも十分かもしれません。差額は 6,000円なので、お財布に余裕があるなら 64GB を購入しておいた方が後悔がない気もしますけども。</p> \n<p><img alt=\"パッケージを開封した状態 - Oculus Go\" src=\"https://hyper-text.org/img/post/oculus-go-01.jpg\" width=\"1160\" height=\"900\" /></p> \n<p>さて、Oculus Go のセットアップ自体は簡単で、自宅に Wi-Fi ネットワークが構築されていて、それに接続されたスマートフォンがあれば、ものの 5分程度 （途中で注意事項の動画を強制的に見せさせられるのですが、それを含めても） で終わります。</p> \n<p>まずは Oculus アプリをスマートフォンにインストールしましょう。Android 用、iOS 用がそれぞれ用意されていますので、使用中のスマートフォンに合わせて選択します。私の場合は iPhone を使用しているので、iOS 用をインストール。</p> \n<ul> \n <li><a href=\"https://play.google.com/store/apps/details?id=com.oculus.twilight\" target=\"_blank\">Oculus - Google Play のアプリ</a></li> \n <li><a href=\"https://itunes.apple.com/us/app/oculus-vr/id1366478176\" target=\"_blank\">Oculus - App&nbsp;Store</a></li> \n</ul> \n<p>スマートフォンへのアプリインストールが完了したら、セットアップです。この時、Oculus Go を充電状態にしておいた方がいいでしょう。</p> \n<p>Oculus Go に充電器 （AC アダプター） は付属しません （ケーブルは付属しています）。AC アダプターは米国向けパッケージにのみ同梱されているようで、日本からの購入ではケーブルのみの付属なりますから、手持ちの USB ACアダプターを流用する必要があります。</p> \n<p>出力的に 5V/2A の USB AC アダプターを使えという指定がありますので、手持ちの AC アダプターで規格的に合致するものがあればそれを使用しましょう。</p> \n<div class=\"module-amazon-link-block\">\n <a href=\"https://www.amazon.co.jp/exec/obidos/ASIN/B071W1WLWS/burnworksdesi-22/\" target=\"_blank\" rel=\"nofollow\">\n  <div class=\"module-amazon-link-block-img\">\n   <img src=\"https://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B071W1WLWS&amp;Format=_SL250_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=burnworksdesi-22\" width=\"120\" height=\"120\" alt=\"\" />\n  </div>\n  <div class=\"module-amazon-link-block-txt\">\n   <p>エレコム 充電器 ACアダプター</p>\n   <p class=\"module-amazon-btn\">Amazonで詳細を見る</p>\n  </div></a>\n</div> \n<p>インストールした Oculus アプリを立ち上げると、セットアップウィザードがスタートします。</p> \n<p>まず最初にログインが必要になりますが、Facebook アカウントでのログインもできますので楽したければそれで。私は Oculus のアカウントを新規作成してセットアップに進みました。</p> \n<p><img alt=\"Oculus アプリを起動して Oculus Go のセットアップを行う - Oculus Go\" src=\"https://hyper-text.org/img/post/oculus-go-06.png\" width=\"1160\" height=\"1228\" /></p> \n<p>セットアップ自体は画面の指示に従っていけば大丈夫。途中で Wi-Fi 接続用のパスワードを聞かれたりするので手元に用意しておきましょう。</p> \n<p>セットアップが完了すると、Oculus Go のファームウェアがアップデートされたりしている間にストアから必要なアプリケーションを探しておきます。</p> \n<p>今回は Netflix を視聴したいので、探し出してインストールをしておきましょう （インストールといってもセットアップ用のスマートフォンに何かがインストールされるわけではありません。Oculus アプリのストア上では Oculus Go にインストールしたいアプリを購入しておくだけです）。</p> \n<p><img alt=\"Oculus App ストアから Netflix アプリをダウンロード - Oculus Go\" src=\"https://hyper-text.org/img/post/oculus-go-07.png\" width=\"1160\" height=\"1228\" /></p> \n<p>Oculus Go の準備ができたら、装着してみましょう。親切にチュートリアルが表示され、ひととおりの操作方法を教えてくれます。</p> \n<p>チュートリアルが終了すると、ダッシュボードに先ほどインストールを指定した Netflix アプリが表示されると思いますので、それを選択すると、Oculus Go にインストールが行われて使用可能になります。Oculus Go 上で Netflix にログインすれば、テレビなどで観ているのと同じようにコンテンツを選択して視聴可能になりますよ。</p> \n<h2>Oculus Go に眼鏡スペーサーを装着</h2> \n<p>私、普段の生活ではメガネかけていないんですが、パソコンの画面を見たりする際はちょっとぼやけるのでメガネかけてるんですよね。</p> \n<p>で、一度裸眼で Netflix を視聴してみたら、ちょっとぼやけた感じで見えるので、メガネ着用で再度試してみたところ、いい感じでした。そこで Oculus Go 使用時はメガネを着用する前提で、付属の 「眼鏡スペーサー」 を装着してみます。</p> \n<p>メガネの種類によってはもしかするとスペーサーなしでも問題ないかもしれませんが、私が使っているものだとレンズにメガネが当たってしまったので、スペーサーを入れてレンズとの距離を調整します。</p> \n<p>眼鏡スペーサーの装着方法ですが、まず作業がしやすいように固定用ベルトを外しておきましょう。</p> \n<p><img alt=\"眼鏡スペーサー装着前のレンズ周りとクッション。ベルトは作業がしやすいように一旦外してある - Oculus Go\" src=\"https://hyper-text.org/img/post/oculus-go-02.jpg\" width=\"1160\" height=\"900\" /></p> \n<p>次に下記の手順でフェイスクッションを本体から外します （下の写真参照）</p> \n<ol> \n <li>レンズ周りについているプラスチックのパーツを外す</li> \n <li>フェイスクッションを取り外す</li> \n</ol> \n<p><img alt=\"眼鏡スペーサーを装着するためにレンズ周りのパーツを外し、その後クッションを取り外す - Oculus Go\" src=\"https://hyper-text.org/img/post/oculus-go-03.jpg\" width=\"1160\" height=\"900\" /></p> \n<p>そうすると、眼鏡スペーサー装着用のガイド穴がありますので、それに合わせて眼鏡スペーサーを装着し、先ほどとは逆の順番、クッション→レンズ周りパーツという順に元に戻せば装着完了です。</p> \n<p><img alt=\"眼鏡スペーサーを装着 - Oculus Go\" src=\"https://hyper-text.org/img/post/oculus-go-04.jpg\" width=\"1160\" height=\"900\" /></p> \n<p>下記が眼鏡スペーサーを装着後ですが、微妙になんですがクッションが前に出て、顔とレンズの間にスペースが確保されます。これでメガネがレンズに当たってしまうことがなくなると思います。</p> \n<p><img alt=\"眼鏡スペーサーを装着後の状態。微妙だがクッション部分が前に出ている - Oculus Go\" src=\"https://hyper-text.org/img/post/oculus-go-05.jpg\" width=\"1160\" height=\"900\" /></p> \n<h2>Oculus Go は動画をゆったり観るのに最適</h2> \n<p>他のヘッドマウントディスプレイを試したことがないので、画質やら音質に関するレビューはできませんけども、個人的には Netflix を観るには十分なクオリティかなと思います。</p> \n<p>また、セットアップの簡単さや、チュートリアルの丁寧さ、付属のコントローラーの操作性など、全体的にとてもよく設計されていて、ストレスなく使用することができます。完成度はかなり高いんじゃないでしょうか。</p> \n<h3>Netflix アプリなら寝ながら視聴も簡単</h3> \n<p>ちなみに、通常は椅子などに座った状態で観ると思いますので、例えば背もたれをリクライニングさせたり、あるいは寝転がった状態で視聴しようと上を向いてしまうと、VR 上でも天井をみている状態になってしまうわけですが、Netflix に限っていえば超簡単にスクリーンの位置を変更可能です。</p> \n<p>スクリーンの左上辺りに 「<span class=\"module-txt-upp\">Void Theater</span>」 ってアイコン？ 的なものが浮かんでるんですけども、それをポインターで選択 （ポインターを当てて選択トリガーを引く） すると、VR モードが解除され、スクリーン上にアイコンが並びます。</p> \n<p>一番右に 「スクリーンを移動」 というメニューがありますので、それを選択すると、頭の角度に応じて正面にスクリーンが移動してきますので、いい位置で確定すると、そこが正面になるわけです。</p> \n<p>動画再生中に動かすのはちょっと面倒ですが、先にやっておけば寝転んだ状態でも、椅子をリクライニングさせてくつろいだ状態でも快適に動画が視聴できますよ。これとても便利。</p> \n<p>人をダメにすることでおなじみの例のソファー（謎） などと組み合わせますと非常によいのではないかと思ったりしました。</p> \n<p><iframe class=\"module-youtube\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/madpcfPRL_c?rel=0&amp;showinfo=0\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></p> \n<h3>使用感</h3> \n<p>Oculus Go が届いた初日に、Netflix で 30分もののアニメを 2話ほど観ただけですので、それほど長時間使っていたわけではないのですが、少なくとも 1時間～2時間程度の動画を観るくらいの使用時間では、ヘッドセットが重たくて疲れるとか、蒸れるといった不快な感じはしませんでした。</p> \n<p>しっかり機密性というか、気になる光が入ってきたりするような隙間はないように装着できるものの、鼻の部分から手元を覗ける程度の隙間はあるので、例えば手から離したコントローラーを探す （実はコントローラーは VR 上に表示されるので、なんとなくの場所はわかります） とか、お茶とか水を飲みたいなって場合でも動画の視聴をほぼ妨げられずに行えるのは良い感じ。</p> \n<p>音に関しては標準のスピーカーが左右の装着ベルト部分に組み込まれているので、イヤホンなどは不要です。より臨場感のある音で楽しみたい場合は、3.5mm のイヤホンジャックが装備されていますので、好みのヘッドフォンなどを接続すればよいと思います。</p> \n<div class=\"module-amazon-link-block\">\n <a href=\"https://www.amazon.co.jp/exec/obidos/ASIN/B079T2X2D7/burnworksdesi-22/\" target=\"_blank\" rel=\"nofollow\">\n  <div class=\"module-amazon-link-block-img\">\n   <img src=\"https://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B079T2X2D7&amp;Format=_SL250_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=burnworksdesi-22\" width=\"120\" height=\"75\" alt=\"\" />\n  </div>\n  <div class=\"module-amazon-link-block-txt\">\n   <p>Bose SoundWear Companion speaker ウェアラブルネックスピーカー</p>\n   <p class=\"module-amazon-btn\">Amazonで詳細を見る</p>\n  </div></a>\n</div> \n<p>充電に関しては、3時間の充電でフル充電。それで動画再生が約 2時間、ゲームで最大 2.5時間程度のプレーが可能とのことなので、長い映画を観る場合などはちょっと注意が必要ですが、概ね問題のないスペックなのかなと。</p> \n<p>ちなみに、1時間ちょっと Oculus Go を装着したままにした結果ですが、顔面にクッションの跡が残りましたので、直後に出かけるとか、人と会う予定がある場合は注意した方がいいかもですよ。</p> \n<p>あとは個人的に、<a href=\"http://prf.hn/click/camref:1101l3aYL\" target=\"_blank\">DAZN</a> に対応してくれたらよく利用するのでありがたいなとか思いました。</p> \n<h2>追記： 標準ブラウザで DAZN 視聴がいい感じだった件</h2> \n<p>上で、DAZN が観られたらいいなって書いたんですけども、Oculus Go にはブラウザが搭載されているので、それで DAZN にアクセスして視聴可能でした。フルスクリーンにするとかなりいい感じで試合観戦ができます。</p> \n<p>1点、注意が必要なのが、ブラウザで DAZN にアクセスして、そのままログインして視聴に進もうとすると、アプリのインストールに誘導されてしまうこと。</p> \n<p>これは Oculus Go をモバイルデバイス （Android） と判断して DAZN 側がそのように動作してしまうためですが、ブラウザのアドレスバー右横に、「デスクトップをリクエストする」 というボタン （下記スクリーンショット参照） があるので、これを有効にして視聴に進むと、通常のデスクトップ PC でアクセスしているのと同様の動作になります。</p> \n<p><img alt=\"Oculus Go のブラウザで DAZN を視聴する場合は 「デスクトップをリクエストする」 を有効にする\" src=\"https://hyper-text.org/img/post/oculus-go-08.jpg\" width=\"580\" height=\"320\" /></p> \n<p>YouTube とかも同様にして視聴できますので、動画再生捗りそうです。</p> \n<hr /> \n<h3>この記事もあわせて読まれています</h3> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2014/04/tablet_stand_and_anker_usb_charger.shtml\">Anker 5ポート USB急速充電器 ACアダプタとまな板スタンドの組み合わせがいい感じな件</a></li> \n <li><a href=\"https://hyper-text.org/archives/2012/01/digital_tv_tuner_for_ipad.shtml\">iPad / iPhone をテレビにするデジタル TV チューナー</a></li> \n <li><a href=\"https://hyper-text.org/archives/2010/04/evernote_and_handy_scanner.shtml\">ハンディスキャナー × Evernote がいい感じ</a></li> \n <li><a href=\"https://hyper-text.org/archives/2007/05/unique_usb_gadgets.shtml\">ユニークな USB 接続機器いろいろを見て</a></li> \n <li><a href=\"https://hyper-text.org/archives/2006/10/google_gadgets_for_your_webpag.shtml\">Google Gadgets For Your Webpage</a></li> \n</ul> \n<hr /> \n<p>この記事は Blog 「<a href=\"https://hyper-text.org/\">WWW WATCH</a>」 で 2018年5月 8日 13:14 に公開されました。</p> \n<p>記事のリンク URL は <a href=\"https://hyper-text.org/archives/2018/05/oculus_go.shtml\">https://hyper-text.org/archives/2018/05/oculus_go.shtml</a> です。</p> \n<img src=\"http://feeds.feedburner.com/~r/wacth/~4/rDo8vn0V_5E\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Tue, 08 May 2018 04:14:22 +0000","feedId":5835,"bgimg":"https://hyper-text.org/img/post/oculus-go-05.jpg","linkMd5":"5df98bbdfc5827dbea040a991c4df4c6","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn64@2020_1/2020/08/24/22-42-37-634_f038a6dcc636e9fc.webp","destWidth":1160,"destHeight":900,"sourceBytes":111462,"destBytes":78922,"author":"Yoshiki Kato","enclosureType":"image/jpg","enclosureUrl":"https://hyper-text.org/img/post/oculus-go-05.jpg","articleImgCdnMap":{"https://hyper-text.org/img/post/oculus-go-05.jpg":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn64@2020_1/2020/08/24/22-42-37-634_f038a6dcc636e9fc.webp","https://hyper-text.org/img/post/oculus-go-01.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn35@2020_3/2020/08/24/22-43-11-735_eaf69559f237dddd.webp","https://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B071W1WLWS&Format=_SL250_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=burnworksdesi-22":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn63@2020_2/2020/08/24/22-43-11-972_ac2784dfc1863e51.webp","https://hyper-text.org/img/post/oculus-go-06.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn76@2020_5/2020/08/24/22-43-11-774_78577d1829a8365d.webp","https://hyper-text.org/img/post/oculus-go-07.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn47@2020_4/2020/08/24/22-43-10-980_bef193fb2204fea3.webp","https://hyper-text.org/img/post/oculus-go-02.jpg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn88@2020_1/2020/08/24/22-43-12-705_ec6e657a46dcf3f2.webp","https://hyper-text.org/img/post/oculus-go-03.jpg":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn67@2020_3/2020/08/24/22-43-12-553_c75cd36f25e3e7a3.webp","https://hyper-text.org/img/post/oculus-go-04.jpg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn31@2020_3/2020/08/24/22-43-13-137_27ca636790998d44.webp","https://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B079T2X2D7&Format=_SL250_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=burnworksdesi-22":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn71@2020_3/2020/08/24/22-43-10-938_f2e9fe01a4284d42.webp","https://hyper-text.org/img/post/oculus-go-08.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn71@2020_3/2020/08/24/22-43-13-424_478d6fc5b9581f84.webp","http://feeds.feedburner.com/~r/wacth/~4/rDo8vn0V_5E":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn24@2020_2/2020/08/24/22-43-11-069_8921c5b9a9c69be9.webp"},"publishedOrCreatedDate":1598308949551},{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","title":"Google Chrome 68 が正式リリース、SSL で保護されていないページに警告表示がスタート","link":"https://hyper-text.org/archives/2018/07/chrome_68_release_ssl_warning.shtml","description":"<p class=\"ogp-image\"><img src=\"https://hyper-text.org/img/asset/chrome_68_ssl_warning.png\" alt=\"Google Chrome 68 が正式リリース、SSL で保護されていないページに警告表示がスタート ： WWW WATCH\" /></p> \n<p><img class=\"imgL\" src=\"https://hyper-text.org/img/post/chrome_logo_120.png\" width=\"60\" height=\"60\" alt=\"\" />Google Chrome の最新版、Chrome 68 が正式リリースされました。本バージョンにおいて、かねてからアナウンスされていた、SSL（TLS） 保護されていないページ、つまり HTTP で接続する全てのページに対して 「保護されていません」（日本語の場合） という警告といいますか、インフォメーションをアドレスバーに表示するようになりました。</p> \n<ul> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml\">Chrome における HTTPS 通信時の 「保護された通信」 表記廃止、非 SSL 接続時の警告表示の変更と適用開始時期が発表される</a></li> \n</ul> \n<p>Chrome 62 以降で実施された、HTTP 接続時における、パスワード入力欄に対する警告を経て、今回のバージョンアップで HTTP 通信全体に対して 「保護されていませんよ」 と表示するようになったわけです。</p> \n<h2>実際の表示は</h2> \n<p>実際に Chrome 67 と Chrome 68 で HTTP 通信時のアドレスバーを比べてみますと、下記のように、Chrome 68 では 「保護されていません」 という表示が追加されていることがわかります。</p> \n<p><img alt=\"Chrome 67 / 68 における、HTTP 通信時のアドレスバー例。左が Chrome 67、右が Chrome 68\" src=\"https://hyper-text.org/img/post/google-chrome-68-ssl-01.png\" width=\"580\" height=\"100\" /></p> \n<p>HTTPS 通信の場合は表示に変化はなく、EV 証明書を利用している場合 （下記の例は三井住友銀行さんの Web サイト） は組織名がアドレスバーに表示されます。</p> \n<p><img alt=\"Chrome 68 における、HTTPS 通信時のアドレスバー例。右は EV 証明書利用時の表示（三井住友銀行サイト）\" src=\"https://hyper-text.org/img/post/google-chrome-68-ssl-02.png\" width=\"580\" height=\"100\" /></p> \n<h2>デベロッパーツールも拡張</h2> \n<p>Lighthouse が 3.0 になったり、色々と機能追加もされています。</p> \n<ul> \n <li><a href=\"https://developers.google.com/web/updates/2018/05/devtools\" target=\"_blank\">What's New In DevTools (Chrome 68) - Google Developers</a></li> \n</ul> \n<h2>関連エントリー</h2> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2015/01/full_time_ssl_website_quick_start.shtml\">5分でわかる正しい Web サイト常時 SSL 化のための基礎知識</a></li> \n</ul> \n<hr /> \n<h3>この記事もあわせて読まれています</h3> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2018/05/chrome_66_improving_autoplay.shtml\">Google Chrome 66 で音声の自動再生をブロック （ミュート） する機能が有効に</a></li> \n <li><a href=\"https://hyper-text.org/archives/2017/04/chrome_62_ssl_warning.shtml\">Google Chrome 62 は SSL で保護されていないページの入力フォームに対して 「安全でない」 と警告する</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/02/chrome_goodbye_spdy_on_may_15th.shtml\">Chrome が SPDY のサポートを 5月15日にやめて HTTP/2 に完全移行するらしい</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/03/google_data_saver_extension_beta.shtml\">Web サイト閲覧時のデータ使用量を節約する Chrome 拡張機能 「Data Saver （データセーバー）」</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/03/chrome_new_javascript_techniques_for_rapid.shtml\">Google Chrome 41/42 は JavaScript に関する新しい技術によってページの表示速度がさらに向上するらしい</a></li> \n</ul> \n<hr /> \n<p>この記事は Blog 「<a href=\"https://hyper-text.org/\">WWW WATCH</a>」 で 2018年7月25日 10:45 に公開されました。</p> \n<p>記事のリンク URL は <a href=\"https://hyper-text.org/archives/2018/07/chrome_68_release_ssl_warning.shtml\">https://hyper-text.org/archives/2018/07/chrome_68_release_ssl_warning.shtml</a> です。</p> \n<img src=\"http://feeds.feedburner.com/~r/wacth/~4/KEpSXwy19wA\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Wed, 25 Jul 2018 01:45:06 +0000","feedId":5835,"bgimg":"https://hyper-text.org/img/asset/chrome_68_ssl_warning.png","linkMd5":"e09d1ade2545e9796af3e85b48641c7c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn83@2020_5/2020/08/24/22-42-37-269_ce240dbc17bb67b8.webp","destWidth":1100,"destHeight":740,"sourceBytes":27093,"destBytes":13020,"author":"Yoshiki Kato","enclosureType":"image/png","enclosureUrl":"https://hyper-text.org/img/asset/chrome_68_ssl_warning.png","articleImgCdnMap":{"https://hyper-text.org/img/asset/chrome_68_ssl_warning.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn83@2020_5/2020/08/24/22-42-37-269_ce240dbc17bb67b8.webp","https://hyper-text.org/img/post/chrome_logo_120.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn7@2020_4/2020/08/24/22-43-10-966_339d7329c5105b94.webp","https://hyper-text.org/img/post/google-chrome-68-ssl-01.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn56@2020_2/2020/08/24/22-43-12-685_fa0c97dfe512df7e.webp","https://hyper-text.org/img/post/google-chrome-68-ssl-02.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn36@2020_4/2020/08/24/22-43-12-077_813ed6781bd5df9b.webp","http://feeds.feedburner.com/~r/wacth/~4/KEpSXwy19wA":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn99@2020_2/2020/08/24/22-43-10-004_e73224da3c1c2699.webp"},"publishedOrCreatedDate":1598308949548},{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","title":"暗号化されていないパスワードが内部ログに保存されていた問題を Twitter が公表した件で、パスワード変更もいいけど 2段階認証もね","link":"https://hyper-text.org/archives/2018/05/twitter_keeping_your_account_secure.shtml","description":"<p class=\"ogp-image\"><img src=\"https://hyper-text.org/img/asset/twitter-ogp.jpg\" alt=\"暗号化されていないパスワードが内部ログに保存されていた問題を Twitter が公表した件で、パスワード変更もいいけど 2段階認証もね ： WWW WATCH\" /></p> \n<p><img class=\"imgL\" src=\"https://hyper-text.org/img/post/twitter_bird_light_bgs.png\" width=\"80\" height=\"80\" alt=\"\" />Twitter 社が日本時間の 3日、社内システムのバグによって、本来 BCrypt を用いてハッシュ化しているはずのパスワードが、ハッシュ化を完了する前の平文の状態でログファイルに保存されていたことが判明したとして、全ユーザーにその報告と共に、念のためパスワードの変更を勧める旨を公式 Blog にて発表しました。</p> \n<ul> \n <li><a href=\"https://blog.twitter.com/official/en_us/topics/company/2018/keeping-your-account-secure.html\" target=\"_blank\">Keeping your account secure - Twitter Blog</a></li> \n</ul> \n<p>今回の件で パスワードが外部に流出した可能性については一応否定されていますし、パスワードの使い回しのようなセキュリティ上問題のある行為を行っていない、かつ、すでに 2段階認証を有効にしているユーザーについてはそれ程過敏に反応する必要はないと思いますが、気になるという方はパスワードの変更と同時に、まだ 2段階認証を有効にしていない方はこの機会に有効にしておくとなお良いでしょう。</p> \n<blockquote class=\"twitter-tweet\" lang=\"en\"> \n <p>We recently found a bug that stored passwords unmasked in an internal log. We fixed the bug and have no indication of a breach or misuse by anyone. As a precaution, consider changing your password on all services where you've used this password. <p><a href=\"https://t.co/RyEDvQOTaZ\">https://t.co/RyEDvQOTaZ</a></p> — Twitter Support (@TwitterSupport) <a href=\"https://twitter.com/TwitterSupport/status/992132808192634881?ref_src=twsrc%5Etfw\">2018年5月3日</a></p> \n</blockquote> \n<p>本記事執筆時点では日本語での記事がまだ出ていないようですが、すでにユーザー宛にメールでの案内が送信されているようで、そちらは設定してある言語に合わせたものになっているようですね。</p> \n<p>公式 Blog の内容を超簡単に訳しますが、</p> \n<blockquote lang=\"en\"> \n <p>When you set a password for your Twitter account, we use technology that masks it so no one at the company can see it. We recently identified a bug that stored passwords unmasked in an internal log. We have fixed the bug, and our investigation shows no indication of breach or misuse by anyone.</p> \n <p>Out of an abundance of caution, we ask that you consider changing your password on all services where you've used this password. You can change your Twitter password anytime by going to the password settings page.</p> \n <p><cite>「<a href=\"https://blog.twitter.com/official/en_us/topics/company/2018/keeping-your-account-secure.html\" target=\"_blank\">Keeping your account secure - Twitter Blog</a>」 から引用</cite></p> \n</blockquote> \n<p>『アカウントに設定されるパスワードに関しては、Twitter 社内の人間でもパスワードを見ることができないよう、暗号化するテクノロジーを使用していますが、最近の調査で、パスワードが暗号化されないまま内部ログに保存されるというバグを発見しました。バグはすでに修正されており、その後の調査で、外部への流出、第三者による不正使用などは確認されませんでした。</p> \n<p>Twitter 社は、安全のためにパスワードを変更することをお勧めします。パスワードの変更は、<a href=\"https://mobile.twitter.com/settings/password/\" target=\"_blank\">Twitter のパスワード設定ページ</a>からいつでも可能です。』</p> \n<p>また、バグ自体については下記のように説明されています。</p> \n<blockquote lang=\"en\"> \n <p>We mask passwords through a process called hashing using a function known as bcrypt, which replaces the actual password with a random set of numbers and letters that are stored in Twitter's system. This allows our systems to validate your account credentials without revealing your password. This is an industry standard. </p> \n <p>Due to a bug, passwords were written to an internal log before completing the hashing process. We found this error ourselves, removed the passwords, and are implementing plans to prevent this bug from happening again.</p> \n <p><cite>「<a href=\"https://blog.twitter.com/official/en_us/topics/company/2018/keeping-your-account-secure.html\" target=\"_blank\">Keeping your account secure - Twitter Blog</a>」 から引用</cite></p> \n</blockquote> \n<p>『Twitter は、BCrypt を使用してパスワードを暗号化しています。今回のバグによって、ハッシュ化が完了する前に、パスワードが内部ログに書き込まれていることが判明しました。Twitter ではバグの発見後、内部ログからパスワードを削除した上で、このバグが再発しないように対策を行いました。』</p> \n<p>データストアでは暗号化された状態でパスワードが保存されてるからって安心してたら、ログの方に平文でデータが残ってましたみたいのは、結構やらかしがちなミスなんですが、Twitter 社といえどもこの手のセキュリティあるあるからは逃れられなかったようです。</p> \n<p>ということで下記の対策が勧められています。</p> \n<blockquote lang=\"en\"> \n <ol> \n  <li>Change your password on Twitter and on any other service where you may have used the same password.</li> \n  <li>Use a strong password that you don't reuse on other websites.</li> \n  <li>Enable <a href=\"https://help.twitter.com/managing-your-account/two-factor-authentication\">login verification</a>, also known as two factor authentication. This is the single best action you can take to increase your account security.</li> \n  <li>Use a password manager to make sure you're using strong, unique passwords everywhere.</li> \n </ol> \n <p><cite>「<a href=\"https://blog.twitter.com/official/en_us/topics/company/2018/keeping-your-account-secure.html\" target=\"_blank\">Keeping your account secure - Twitter Blog</a>」 から引用</cite></p> \n</blockquote> \n<ol> \n <li>Twitter のパスワードを変更し、同じパスワードを他のサービスでも使用している場合は、そのサービスのパスワードも変更してください</li> \n <li>（パスワードを変更する場合は） 他のサービスで使用しておらず、かつ推測しにくいパスワードを使用してください</li> \n <li>アカウントの安全性を高める最も有効な方法として、<a href=\"https://help.twitter.com/managing-your-account/two-factor-authentication\">ログイン認証 （2段階認証）</a> を有効にしてください</li> \n <li>パスワードマネージャーを使用して、すべての場所で推測されにくいパスワードを使用するようにしましょう</li> \n</ol> \n<p>1番目の 「同じパスワードを他のサービスでも使用している場合は」 については基本的に問題外なので今すぐやめましょう。今回の件にかかわらず、各サービスで必ず異なるパスワードを使用すべきです。</p> \n<ul> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://hyper-text.org/archives/2013/04/password_management.shtml\">パスワードの使い回しは危ないよっていうお話</a></li> \n</ul> \n<p>また、パスワードを変更する場合でも、強固なパスワードを設定しましょう。パスワードマネージャーにはパスワードを生成する機能が付いていたりしますので、そういうものを利用して、最低でも 10～12 文字以上あるランダムな文字列による推測されにくいパスワードを設定するとよいでしょう。</p> \n<h2>2段階認証が重要</h2> \n<p>パスワードをどんなに複雑な文字列に設定しても、何らかの理由で漏れるときは漏れるもんです。そこで、より安全性を高める方法として、2段階認証を有効にしましょう。</p> \n<p>具体的な方法は下記のヘルプを見ればわかると思います。</p> \n<ul> \n <li><a href=\"https://help.twitter.com/managing-your-account/two-factor-authentication\">ログイン認証を使用する方法 - Twitter ヘルプ</a></li> \n</ul> \n<p>登録した携帯電話番号に対して SMS で認証コードを送信する方法と、サードパーティの 2段階認証用トークンソフトウェアを使用した方法が選択できますが、私の場合は Google が提供している 「Authenticator」 を使用しています。iOS 用、Android 用はそれぞれ下記でダウンロード可能です。</p> \n<ul> \n <li><a href=\"https://itunes.apple.com/jp/app/google-authenticator/id388497605?mt=8\" target=\"_blank\">Google Authenticator - iOS</a></li> \n <li><a href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2\" target=\"_blank\">Google 認証システム - Android</a></li> \n</ul> \n<p>ということで、私は 2段階認証をすでに有効にしていましたが、今回の件をうけて、念のためパスワードの変更も行いました。</p> \n<p>現在設定しているパスワードが他のサービスと使い回している、推測されやすい、あるいは短いパスワードを設定してしまっているという場合はこの機会に変更をお勧めします。</p> \n<p>また 2段階認証を有効にすることで、アカウントを乗っ取られたりという被害から身を守ることができますので、可能な限り有効にしておくとよいでしょう。</p> \n<h2>関連エントリー</h2> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2013/05/google_passwords_better_protect.shtml\">Google、5分でできる強固なパスワード設定方法をアドバイス</a></li> \n <li><a href=\"https://hyper-text.org/archives/2014/05/dropbox_2_step_verification_google_authenticator.shtml\">Dropbox の 2段階認証を Google Authenticator を使って設定する</a></li> \n</ul> \n<hr /> \n<h3>この記事もあわせて読まれています</h3> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2016/12/twitter-retweet.shtml\">リツイートしにくい最近の Twitter</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/06/twitter_removing_140_limit_dm.shtml\">Twitter が ダイレクトメッセージ （DM） の 140文字制限を廃止、7月から適用</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/02/ifttt_auto_tweet_with_image.shtml\">IFTTT から Blog の更新を自動で画像付きツイートするためにフィードを少し直した件</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/01/tweetdeck_group_direct_messages.shtml\">TweetDeck で 「グループ宛」 のダイレクトメッセージが送信可能に</a></li> \n <li><a href=\"https://hyper-text.org/archives/2014/10/twitpics_future.shtml\">Twitpic を Twitter が救済、読み取り専用ながらユーザーデータは存続へ</a></li> \n</ul> \n<hr /> \n<p>この記事は Blog 「<a href=\"https://hyper-text.org/\">WWW WATCH</a>」 で 2018年5月 5日 00:07 に公開されました。</p> \n<p>記事のリンク URL は <a href=\"https://hyper-text.org/archives/2018/05/twitter_keeping_your_account_secure.shtml\">https://hyper-text.org/archives/2018/05/twitter_keeping_your_account_secure.shtml</a> です。</p> \n<img src=\"http://feeds.feedburner.com/~r/wacth/~4/0FrJTGZcclE\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Fri, 04 May 2018 15:07:52 +0000","feedId":5835,"bgimg":"https://hyper-text.org/img/asset/twitter-ogp.jpg","linkMd5":"9a7f2d74eeb796910af82f1dddd60b51","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn55@2020_2/2020/08/24/22-42-38-220_faacd271327a4553.webp","destWidth":1600,"destHeight":1000,"sourceBytes":128079,"destBytes":52394,"author":"Yoshiki Kato","enclosureType":"image/jpg","enclosureUrl":"https://hyper-text.org/img/asset/twitter-ogp.jpg","articleImgCdnMap":{"https://hyper-text.org/img/asset/twitter-ogp.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn55@2020_2/2020/08/24/22-42-38-220_faacd271327a4553.webp","https://hyper-text.org/img/post/twitter_bird_light_bgs.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn24@2020_5/2020/08/24/22-43-11-404_670329624c2e90fe.webp","http://feeds.feedburner.com/~r/wacth/~4/0FrJTGZcclE":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn59@2020_3/2020/08/24/22-43-09-637_c5dd9cf23c7b2474.webp"},"publishedOrCreatedDate":1598308949551},{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","title":"Web サイト作るお仕事をしている人向け Gulp で作るフロントエンド開発環境","link":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml","description":"<p class=\"ogp-image\"><img src=\"https://hyper-text.org/img/asset/gulp_quick_start_ogp.png\" alt=\"Web サイト作るお仕事をしている人向け Gulp で作るフロントエンド開発環境 ： WWW WATCH\" /></p> \n<p><img class=\"imgL\" src=\"https://hyper-text.org/img/post/gulp-logo-300.png\" width=\"60\" height=\"60\" alt=\"\" />もう 4年くらい前になりますが Web デザイナーさん向けみたいな感じで、所謂 「黒い画面」 にあまり普段から慣れていない方向けの <a href=\"https://hyper-text.org/archives/2014/01/grunt_quick_start_for_web_designer.shtml\">Grunt 導入記事を書いた</a>んですけども、内容的にはもう古いし、Grunt いいよって紹介しておいてなんですが、私自身、記事を書いてから少し経ったところで <a href=\"https://gulpjs.com/\" target=\"_blank\">Gulp</a> に開発環境を移行してしまったため、放置した感じになってしまいました。</p> \n<p>そこで、今さら感はありますが、Grunt の時と同様、私が使用しているパッケージなどを紹介しつつ、主に Web サイトを制作するお仕事で HTML や CSS を書いている人向けの Gulp 環境構築についてまとめておこうと思います。</p> \n<p>なお、この手の話の場合、ほぼ必ずと言っていいほど Sass を利用する前提になっている事が多いと思いますが、私、個人的にはあまり Sass を使わずに CSS 書くことが多いので、Sass の話は一切なしになっております。Gulp で Sass を使う話なんかは検索すれば腐るほど出てくると思いますので、必要に応じて別途調べてみてください。</p> \n<p>また、これも私的なことですが、数年前から Mac は一切やめて、Windows 環境で開発しているため、今回の話も Windows を対象にしたものになっています。Mac 環境をご利用の場合はちょっと手順などがことなりますのでご注意ください。</p> \n<h2>書いていたら長くなったので目次</h2> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-01\">Gulp さんに何をやってもらうのか</a></li> \n <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-02\">Gulp を使用する前の準備</a> \n  <ul> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-02-01\">Node.js をインストール</a></li> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-02-02\">Ruby をインストール</a></li> \n  </ul></li> \n <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-03\">Gulp をインストール</a> \n  <ul> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-03-01\">各パッケージを追加</a></li> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-03-02\">gulpfile.js を作成する</a></li> \n  </ul></li> \n <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04\">gulpfile.js に記述した内容の詳しい解説</a> \n  <ul> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01\">タスクごと</a></li> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-01\">default タスク</a></li> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-02\">CSS ファイルを結合したり、圧縮するためのタスク</a></li> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-03\">JavaScript コーディング関連のタスク</a></li> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-04\">Slim</a></li> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-05\">watch タスク</a></li> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-06\">browser-sync によるブラウザでの動作確認</a> \n    <ul> \n     <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-06-01\">.pipe(browserSync.stream()) オプション</a></li> \n    </ul></li> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-07\">画像圧縮 （最適化） 系のタスク</a></li> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-08\">バリデーション関連のタスク</a></li> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-09\">（ヒント） gulpfile.js の書き方でひと工夫</a></li> \n  </ul></li> \n <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05\">各パッケージでできることを簡単に</a> \n  <ul> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05-01\">PostCSS 関連</a> \n    <ul> \n     <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05-01-01\">postcss-custom-properties</a></li> \n     <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05-01-02\">postcss-simple-vars</a></li> \n     <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05-01-03\">postcss-import</a></li> \n     <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05-01-04\">postcss-color-function</a></li> \n     <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05-01-05\">postcss-nested</a></li> \n    </ul></li> \n   <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05-02\">Slim 関連</a></li> \n  </ul></li> \n <li><a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-06\">まとめ</a></li> \n</ul> \n<h2 id=\"section-01\">Gulp さんに何をやってもらうのか</h2> \n<p>今回の記事で Gulp にお任せするのは下記の作業。</p> \n<ul> \n <li>HTML 関連 \n  <ul> \n   <li>テンプレートエンジンとして 「Slim」 を使いたい</li> \n  </ul></li> \n <li>CSS 関連 \n  <ul> \n   <li>PostCSS を使って CSS を書きたい</li> \n   <li>ベンダプレフィックスの管理とか面倒くさいこと色々</li> \n   <li>複数の CSS を結合してまとめたり</li> \n   <li>CSS を圧縮 （Minify） とか無駄な記述の統合とか</li> \n  </ul></li> \n <li>JavaScript 関連 \n  <ul> \n   <li>CoffeeScript で書きたい</li> \n   <li>必要に応じて JavaScript ファイルの圧縮 （Minify） とか</li> \n  </ul></li> \n <li>画像関連 \n  <ul> \n   <li>画像の最適化（PNG / JPEG / GIF / SVG）</li> \n  </ul></li> \n <li>ブラウザでの表示確認</li> \n <li>バリデーション \n  <ul> \n   <li>HTML ファイルのバリデーション</li> \n   <li>CSS ファイルのバリデーション</li> \n  </ul></li> \n</ul> \n<p>これら作業を手作業でやるのは面倒なので、全部 Gulp に任せて自動化する感じで。これは Grunt 使っていた時から特に変わっていません。</p> \n<h2 id=\"section-02\">Gulp を使用する前の準備</h2> \n<p>すでに環境が整っている方は読み飛ばしていただいて大丈夫だと思いますが、念のため Gulp 導入までを簡単に。</p> \n<h3 id=\"section-02-01\">Node.js をインストール</h3> \n<p><img src=\"https://burnworks.imgix.net/img/post/gulp-quick-start-01.png?border=4,60CCCCCC\" width=\"1160\" height=\"700\" alt=\"Node.js 公式サイト ダウンロードページの例\" /></p> \n<p>まずは Node.js をインストールします。<a href=\"https://nodejs.org/ja/\" target=\"_blank\">Node.js 公式サイト</a> にアクセスすると、ダウンロード用のリンクがあります。</p> \n<p>ページにアクセスした時点で、自動的に利用中のシステムに合わせたダウンロードボタンが表示されているはずですが、「最新版」 と 「推奨版 （LTS：Long Term Support）」 のどちらを選択するべきかという点については、最新版の機能を使いたいといった特別な理由がないなら、とりあえず 「推奨版 （LTS）」 を選択しておけばよいでしょう。</p> \n<p>インストールは基本的にデフォルトのまま進めちゃって大丈夫です。インストール先などを変更したい場合は任意で選択するなりしましょう。</p> \n<h3 id=\"section-02-02\">Ruby をインストール</h3> \n<p>次に Ruby をインストールします。 Sass を利用する場合にも必要な Ruby ですが、今回はテンプレートエンジンとして使用する 「Slim」 で主に利用するためにインストールしておきます。</p> \n<p>Windows 環境で Ruby をインストールする場合、RubyInstaller を利用するのが楽です。</p> \n<ul> \n <li><a href=\"https://rubyinstaller.org/\" target=\"_blank\">RubyInstaller for Windows</a></li> \n</ul> \n<p><a href=\"https://rubyinstaller.org/downloads/\" target=\"_blank\">RubyInstaller のダウンロードページ</a>に移動すると、リストがあると思いますが、利用中の環境に最適なバージョンは 「⇒」 アイコンが付いていると思いますので、それを選択すれば問題なし。</p> \n<p><img src=\"https://burnworks.imgix.net/img/post/gulp-quick-start-02.png?border=4,60CCCCCC\" width=\"580\" height=\"500\" alt=\"RubyInstaller ダウンロードページの例\" /></p> \n<p>インストーラーがダウンロードできたら、起動してインストールしましょう。</p> \n<h2 id=\"section-03\">Gulp をインストール</h2> \n<p>先ほど、Node.js のインストールが完了していますので、「Node.js command prompt」 というコマンドプロンプト （Windows 標準のコマンドプロンプトでもいいのですが、今回はこちらを前提に進めます） が使用できるようになっていると思います。早速立ち上げてみましょう。</p> \n<p>黒い画面が表示されたら、試しに <code>node -v</code> とコマンドを入力し、エンターキーを押してみましょう。先ほどインストールした、Node.js のバージョンが表示されると思います。</p> \n<p class=\"memo\">ちなみに以下の解説で書いてある各コマンドはコピー &amp; ペーストで使えますので入力が面倒ならコピーして、コマンドプロンプトに貼り付けてください。</p> \n<p>いよいよ Gulp をインストールしますが、まずは作業フォルダに移動しましょう。例えば、D ドライブ直下に 「project」 というフォルダを作ってそこで開発しますという話なら、</p> \n<pre class=\"command\">\ncd /d D:¥project\n</pre> \n<p>のようにコマンドを入力すれば、該当フォルダに移動します （フィルダは先に作っておいてくださいね）。</p> \n<p>今回は、このフォルダ （<code>D:¥project</code>） を作業フォルダにする前提で進めます。</p> \n<p>まずは下記のようにコマンドを入力して、<a href=\"https://www.npmjs.com/package/gulp-cli\" target=\"_blank\">gulp-cli</a> をインストールします。</p> \n<pre class=\"command\">\nnpm install --global gulp-cli\n</pre> \n<p>上記コマンドは、下記のように短縮形で書いても同じ意味です。</p> \n<pre class=\"command\">\nnpm i -g gulp-cli\n</pre> \n<p><code>-g</code> を付与しているため、インストールは 「グローバル」 に行われます。グローバルというのは、プロジェクトの作業フォルダに関係なく、共通の場所という意味です。</p> \n<p>今回、作業フォルダの前提としている <code>D:¥project</code> のようなプロジェクトごとの作業フォルダは、「プロジェクトローカル」 として区別しますので、例えば 「ローカルにインストール」と言えば、作業フォルダ直下にインストールする場合を指します。</p> \n<p class=\"memo\">gulp-cli をグローバルにインストールするの気持ち悪いっていう考えもありますし、私もなるべくグローバルにインストールしない方法がよいと思いますが、まぁ今まで色々なプロジェクトで利用して特に問題が出たことはないのと、一応、Gulp 公式でアナウンスされている方法なのでそちらを尊重する形で今回は進めていきます。</p> \n<p>続いて、下記のコマンドを実行し、「package.json」 というインストール済みパッケージの情報を記録しておくためのファイルを生成します。</p> \n<pre class=\"command\">\nnpm init -y\n</pre> \n<p>作業フォルダ直下に、「package.json」 というファイルが生成されていればとりあえず OK。</p> \n<p>次に Gulp をインストールします。こちらはプロジェクトローカルにインストールしますので、コマンドは下記のようになります。</p> \n<pre class=\"command\">\nnpm install --save-dev gulp\n</pre> \n<p><code>-g</code> の代わりに、<code>--save-dev</code> を付与していますが、これによって、先ほど作業フォルダ直下に作成した package.json にインストールされたパッケージが書き込まれていきます。後々の管理のためにも必ず付けるようにしましょう。</p> \n<p>上記コマンドは、下記のように短縮形で書いても同じ意味です。なお、<code>--save-dev</code> の短縮形は <code>-d</code> ではなく、<code>-D</code> なので注意してください。<code>-d</code> だと別の意味 （<code>--loglevel info</code> の省略形） になってしまいます。</p> \n<pre class=\"command\">\nnpm i -D gulp\n</pre> \n<h3 id=\"section-03-01\">各パッケージを追加</h3> \n<p>まず、Gulp とは直接関係ないのですが、<code>npm</code> で色々とパッケージを追加した際、あとでそれらのアップデートを簡単にするため、<a href=\"https://github.com/tjunnone/npm-check-updates\" target=\"_blank\">npm-check-updates</a> というパッケージを入れておくと便利です。</p> \n<p><code>npm-check-updates</code> はグローバルにインストールします。</p> \n<pre class=\"command\">\nnpm i -g npm-check-updates\n</pre> \n<p>このパッケージを入れておくと、作業フォルダで <code>ncu</code> というコマンドを打つだけで、package.json に記述された各パッケージに更新がないかをチェックしてくれるだけでなく、<code>ncu -u</code> するだけで、アップデートまで一括でやってくれます。</p> \n<p>続いて、今回の開発環境構築に必要なパッケージをインストールしていきます。導入するパッケージは下記の通り （アルファベット順）。</p> \n<ul> \n <li><a href=\"https://www.npmjs.com/package/browser-sync\" target=\"_blank\">browser-sync</a></li> \n <li><a href=\"https://www.npmjs.com/package/browsersync-ssi\" target=\"_blank\">browsersync-ssi</a></li> \n <li><a href=\"https://www.npmjs.com/package/css-mqpacker\" target=\"_blank\">css-mqpacker</a></li> \n <li><a href=\"https://www.npmjs.com/package/gulp-autoprefixer\" target=\"_blank\">gulp-autoprefixer</a></li> \n <li><a href=\"https://www.npmjs.com/package/gulp-coffee\" target=\"_blank\">gulp-coffee</a></li> \n <li><a href=\"https://www.npmjs.com/package/gulp-concat\" target=\"_blank\">gulp-concat</a></li> \n <li><a href=\"https://www.npmjs.com/package/gulp-csslint\" target=\"_blank\">gulp-csslint</a></li> \n <li><a href=\"https://www.npmjs.com/package/gulp-cssmin\" target=\"_blank\">gulp-cssmin</a></li> \n <li><a href=\"https://www.npmjs.com/package/gulp-htmlhint\" target=\"_blank\">gulp-htmlhint</a></li> \n <li><a href=\"https://www.npmjs.com/package/gulp-imagemin\" target=\"_blank\">gulp-imagemin</a></li> \n <li><a href=\"https://www.npmjs.com/package/gulp-notify\" target=\"_blank\">gulp-notify</a></li> \n <li><a href=\"https://www.npmjs.com/package/gulp-plumber\" target=\"_blank\">gulp-plumber</a></li> \n <li><a href=\"https://www.npmjs.com/package/gulp-postcss\" target=\"_blank\">gulp-postcss</a></li> \n <li><a href=\"https://www.npmjs.com/package/gulp-rename\" target=\"_blank\">gulp-rename</a></li> \n <li><a href=\"https://www.npmjs.com/package/gulp-slim\" target=\"_blank\">gulp-slim</a></li> \n <li><a href=\"https://www.npmjs.com/package/gulp-tinypng-compress\" target=\"_blank\">gulp-tinypng-compress</a></li> \n <li><a href=\"https://www.npmjs.com/package/gulp-uglify\" target=\"_blank\">gulp-uglify</a></li> \n <li><a href=\"https://www.npmjs.com/package/node-notifier\" target=\"_blank\">node-notifier</a></li> \n <li><a href=\"https://www.npmjs.com/package/postcss\" target=\"_blank\">postcss</a></li> \n <li><a href=\"https://www.npmjs.com/package/postcss-color-function\" target=\"_blank\">postcss-color-function</a></li> \n <li><a href=\"https://www.npmjs.com/package/postcss-css-variables\" target=\"_blank\">postcss-css-variables</a></li> \n <li><a href=\"https://www.npmjs.com/package/postcss-custom-properties\" target=\"_blank\">postcss-custom-properties</a></li> \n <li><a href=\"https://www.npmjs.com/package/postcss-extend\" target=\"_blank\">postcss-extend</a></li> \n <li><a href=\"https://www.npmjs.com/package/postcss-import\" target=\"_blank\">postcss-import</a></li> \n <li><a href=\"https://www.npmjs.com/package/postcss-nested\" target=\"_blank\">postcss-nested</a></li> \n <li><a href=\"https://www.npmjs.com/package/postcss-simple-vars\" target=\"_blank\">postcss-simple-vars</a></li> \n <li><a href=\"https://www.npmjs.com/package/pump\" target=\"_blank\">pump</a></li> \n</ul> \n<p>各パッケージの説明はとりあえず置いておいて、まずは一気にインストールしてしまいましょう。</p> \n<pre class=\"command\">\nnpm i -D ^\nbrowser-sync ^\nbrowsersync-ssi ^\ncss-mqpacker ^\ngulp-autoprefixer ^\ngulp-coffee ^\ngulp-concat ^\ngulp-csslint ^\ngulp-cssmin ^\ngulp-htmlhint ^\ngulp-imagemin ^\ngulp-notify ^\ngulp-plumber ^\ngulp-postcss ^\ngulp-rename ^\ngulp-slim ^\ngulp-tinypng-compress ^\ngulp-uglify ^\nnode-notifier ^\npostcss ^\npostcss-color-function ^\npostcss-css-variables ^\npostcss-custom-properties ^\npostcss-extend ^\npostcss-import ^\npostcss-nested ^\npostcss-simple-vars ^\npump\n</pre> \n<p>ちなみに、上記はコマンドを改行して書きたい関係上、末尾に 「<code>^</code>」 を記述していますが、改行なしなら下記のように続けて書けば同じです。</p> \n<pre class=\"command\">\nnpm i -D browser-sync browsersync-ssi ...（略）... postcss-simple-vars pump\n</pre> \n<p>なお、上記のパッケージを一度インストールした後は、インストール済みのパッケージが package.json に書き込まれていますので、例えば他の作業フォルダで同じ環境を作りたい時は、その作業フォルダに package.json をコピーした上で、</p> \n<pre class=\"command\">\nnpm i\n</pre> \n<p>とするだけで、 package.json に書かれたパッケージが一括インストールされますよ。その後、必要に応じて <code>ncu</code> で更新チェック → <code>ncu -u</code> でアップデートみたいな感じでやると楽です。</p> \n<p>あと最後に Slim のインストールも行います。こちらは Ruby 用のパッケージ管理ツールである 「gem」 を使ってインストールします。</p> \n<pre class=\"command\">\ngem i slim\n</pre> \n<h3 id=\"section-03-02\">gulpfile.js を作成する</h3> \n<p>必要なパッケージをインストールし終わったところで、Gulp の設定ファイルである gulpfile.js を作成しますが、その前に、作業フォルダは下記のようなフォルダ構成になっているものとして書いています。</p> \n<pre class=\"dir\">\nproject\n │\n ├ htdocs （ここ以下が実際の Web サイトのデータを置くところ）\n │  ├ css\n │  │  └ s.min.css（最終的に完成する CSS ファイル）\n │  ├ js\n │  │  ├ script.js（最終的に完成する JavaScript ファイル）\n │  │  └ min\n │  │     └ script.min.js（圧縮済みの JavaScript ファイル）\n │  └ index.html （Slim から書き出される HTML ファイル）\n │\n ├ docs （ここ以下が開発用の各ファイルを置くところ）\n │  └ temp\n │      ├ css （実際の CSS コーディングはここのファイルを編集）\n │      │  ├ 01_css-variables.css\n │      │  ├ 02_normalize.css\n │      │  └ 03_style.css\n │      │\n │      ├ concat\n │      │  └ s.css （一時ファイルとして書き出される未圧縮の CSS ファイル）\n │      │\n │      ├ js （実際の JavaScript コーディングはここのファイルを編集）\n │      │  └ script.coffee\n │      │\n │      ├ slim （Slim を利用したい HTML ファイルはここで編集）\n │      │  ├ index.slim\n │      │  └ inc\n │      │      ├ header.slim\n │      │      └ footer.slim\n │      │\n │      └ img （画像の圧縮処理をする場合に使う）\n │\n ├ node_modules\n ├ package.json\n └ gulpfile.js\n</pre> \n<p>実際に作業するのは、プロジェクトフォルダ内の、<code>docs/temp/css</code> や <code>docs/temp/js</code>、<code>docs/temp/slim</code> フォルダになります。</p> \n<p>例えば CSS ですが、私の場合、CSS ファイルは役割ごとに細かく分割して書いていきたいので、<code>docs/temp/css</code> フォルダ内に複数のファイルを置いて書いていきます。これを Gulp で結合して最終的な CSS ファイルを出力するという流れになりますね。</p> \n<p>例えば css-variables.css には、変数をまとめて書いておいて、各ファイルにインクルードして使うみたいなことをやっています。この辺はどういう風に分割した方が楽かなとか、あとでわかりやすいかみたいなことを考えつつ試行錯誤しているので、「絶対にこういう分割じゃなきゃダメ」 みたいのはないんですが。</p> \n<p>ということで、上記を踏まえて、とりあえず完成版の gulpfile.js を下記に。続けて細かく説明していきます。</p> \n<p class=\"memo\">今回サンプルとして使用している gulpfile.js と、package.json は GitHub にも上げています （<a href=\"https://github.com/burnworks/gulpfile-sample-for-web-development\" target=\"_blank\">burnworks/gulpfile-sample-for-web-development</a>） のでそちらから落とせます。</p> \n<pre class=\"javascript\">\nvar gulp = require('gulp'),\n    autoprefixer = require('gulp-autoprefixer'),\n    browserSync = require('browser-sync'),\n    cssimport = require('postcss-import'),\n    cssmin = require('gulp-cssmin'),\n    cssv = require('gulp-csslint'),\n    cssvariables = require('postcss-css-variables'),\n    colorfunction = require('postcss-color-function'),\n    coffee = require('gulp-coffee'),\n    concat = require('gulp-concat'),\n    htmlv = require('gulp-htmlhint'),\n    imagemin = require('gulp-imagemin'),\n    mqpacker = require('css-mqpacker'),\n    nested = require('postcss-nested'),\n    notify = require('gulp-notify'),\n    plumber = require('gulp-plumber'),\n    postcss = require('gulp-postcss'),\n    pump = require('pump'),\n    rename = require('gulp-rename'),\n    simplevars = require('postcss-simple-vars'),\n    slim = require('gulp-slim'),\n    ssi = require('browsersync-ssi'),\n    tinyping = require('gulp-tinypng-compress'),\n    uglify = require('gulp-uglify');\n\n// default\ngulp.task('default', ['watch', 'browser-sync']);\n\n// concat\ngulp.task('css.concat', () =&gt; {\n  var plugins = [\n  colorfunction,\n  cssimport,\n  cssvariables,\n  mqpacker,\n  nested,\n  simplevars\n  ];\n  gulp.src('docs/tmp/css/*.css')\n  .pipe(plumber({\n    errorHandler: notify.onError('Error: &lt;%= error.message %&gt;')\n  }))\n  .pipe(postcss(plugins))\n  .pipe(autoprefixer({\n    browsers: ['last 2 version'],\n    grid: true\n  }))\n  .pipe(concat('s.css'))\n  .pipe(gulp.dest('docs/tmp/concat'))\n});\n\n// cssmin\ngulp.task('cssmin', ['css.concat'], () =&gt; {\n  gulp.src('docs/tmp/concat/s.css')\n  .pipe(plumber({\n    errorHandler: notify.onError('Error: &lt;%= error.message %&gt;')\n  }))\n  .pipe(cssmin())\n  .pipe(rename({suffix: '.min'}))\n  .pipe(gulp.dest('htdocs/css'))\n  .pipe(browserSync.stream())\n});\n\n// css\ngulp.task('css', ['css.concat', 'cssmin']);\n\n// coffee\ngulp.task('coffee', () =&gt; {\n  gulp.src('docs/tmp/js/*.coffee')\n  .pipe(plumber({\n    errorHandler: notify.onError('Error: &lt;%= error.message %&gt;')\n  }))\n  .pipe(coffee({bare: true}))\n  .pipe(gulp.dest('htdocs/js'))\n  .pipe(browserSync.stream())\n});\n\n// uglify\ngulp.task('jsmin', (cb) =&gt; {\n  pump(\n    [\n      gulp.src('htdocs/js/*js'),\n      uglify(),\n      rename({suffix: '.min'}),\n      gulp.dest('htdocs/js/min')\n    ],\n    cb\n  );\n});\n\n// slim\ngulp.task('slim', () =&gt; {\n  gulp.src('docs/tmp/slim/*.slim')\n  .pipe(plumber({\n    errorHandler: notify.onError('Error: &lt;%= error.message %&gt;')\n  }))\n  .pipe(slim({\n    require: 'slim/include',\n    pretty: true,\n    options: 'include_dirs=[\"docs/tmp/slim/inc\"]'\n  }))\n  .pipe(gulp.dest('htdocs'))\n  .pipe(browserSync.stream())\n});\n\n// watch\ngulp.task('watch', () =&gt; {\n  gulp.watch(['docs/tmp/css/*.css'], ['css']);\n  gulp.watch(['docs/tmp/js/*.coffee'], ['coffee']);\n  gulp.watch(['docs/tmp/slim/**/*.slim'], ['slim']);\n});\n\n// browser-sync\ngulp.task('browser-sync', () =&gt; {\n  browserSync({\n    server: {\n      baseDir: 'htdocs',\n      middleware:[\n        ssi({\n          ext: '.html',\n          baseDir: 'htdocs'\n        })\n      ]\n    }\n  });\n});\n\n// tinypng\ngulp.task('tinypng', () =&gt; {\n  gulp.src('docs/tmp/img/src/**/*.{png,jpg}')\n    .pipe(tinyping({\n      key: '__API_Key__'\n      summarize: true\n    }))\n    .pipe(gulp.dest('docs/tmp/img/dist'))\n});\n\n// imagemin\ngulp.task('imagemin', () =&gt; {\n  gulp.src('docs/tmp/img/src/**/*.{png,jpg,gif,svg}')\n  .pipe(imagemin([\n    imagemin.gifsicle({interlaced: true}),\n    imagemin.jpegtran({progressive: true}),\n    imagemin.optipng({optimizationLevel: 4}),\n    imagemin.svgo({\n      plugins: [\n        {removeViewBox: false}\n      ]\n    })\n  ]))\n  .pipe(gulp.dest('docs/tmp/img/dist'))\n});\n\n// htmlhint\ngulp.task('htmlv', () =&gt; {\n  gulp.src('htdocs/*.html')\n  .pipe(htmlv())\n  .pipe(htmlv.reporter())\n});\n\n// csslint\ngulp.task('cssv', () =&gt; {\n  gulp.src('htdocs/css/s.min.css')\n  .pipe(cssv({\n    'adjoining-classes': false,\n    'box-model': false,\n    'box-sizing': false,\n    'bulletproof-font-face': false,\n    'compatible-vendor-prefixes': false,\n    'empty-rules': true,\n    'display-property-grouping': true,\n    'duplicate-background-images': false,\n    'duplicate-properties': true,\n    'fallback-colors': false,\n    'floats': false,\n    'font-faces': false,\n    'font-sizes': false,\n    'gradients': false,\n    'ids': false,\n    'import': false,\n    'important': false,\n    'known-properties': true,\n    'order-alphabetical': false,\n    'outline-none': true,\n    'overqualified-elements': false,\n    'qualified-headings': false,\n    'regex-selectors': false,\n    'shorthand': false,\n    'star-property-hack': false,\n    'text-indent': false,\n    'underscore-property-hack': false,\n    'unique-headings': false,\n    'universal-selector': false,\n    'unqualified-attributes': false,\n    'vendor-prefix': false,\n    'zero-units': true\n  }))\n  .pipe(cssv.formatter('compact'))\n});\n</pre> \n<h2 id=\"section-04\">gulpfile.js に記述した内容の詳しい解説</h2> \n<p>まず冒頭の部分は、gulpfile.js のお約束として、使用するパッケージの読み込みを行います。それぞれの用途は記述の通り。</p> \n<pre class=\"javascript\">\nvar gulp = require('gulp'),\n    // ↑ Gulp 本体\n    autoprefixer = require('gulp-autoprefixer'),\n    // ↑ ベンダプレフィックスの管理用。コレがないともう無理\n    browserSync = require('browser-sync'),\n    // ↑ ローカルでの動作確認時にサーバの立ち上げからブラウザ間での操作の同期までやってくれる\n    cssimport = require('postcss-import'),\n    // ↑  PostCSS のプラグイン。CSS ファイルをインポートする機能を提供。変数をまとめたファイルを各 CSS に読み込むのに使ってる\n    cssmin = require('gulp-cssmin'),\n    // ↑ CSS を圧縮 （Minify）\n    cssv = require('gulp-csslint'),\n    // ↑ CSS のバリデーション\n    cssvariables = require('postcss-css-variables'),\n    // ↑  PostCSS のプラグイン。変数を使いたいので。postcss-simple-vars と機能は似てるんですが、CSS カスタムプロパティの仕様に基づいて書ける\n    colorfunction = require('postcss-color-function'),\n    // ↑  PostCSS のプラグイン。color() 関数が使える\n    concat = require('gulp-concat'),\n    // ↑ 複数のファイルを結合するやつ\n    coffee = require('gulp-coffee'),\n    // ↑ CoffeeScript を書くため\n    htmlv = require('gulp-htmlhint'),\n    // ↑ HTML のバリデーション\n    imagemin = require('gulp-imagemin'),\n    // ↑ 画像の最適化（TinyPNG は制限があるので基本はこっち）\n    mqpacker = require('css-mqpacker'),\n    // ↑ 分散しちゃったメディアクエリをまとめてくれる\n    nested = require('postcss-nested'),\n    // ↑ PostCSS のプラグイン。ネストが使える\n    notify = require('gulp-notify'),\n    // ↑ デスクトップ通知用\n    plumber = require('gulp-plumber'),\n    // ↑ 主に watch タスク実行中のエラーで watch タスクを中断されないように。あと gulp-notify と組み合わせてエラー通知とか\n    postcss = require('gulp-postcss'),\n    // ↑ PostCSS を使うため\n    pump = require('pump'),\n    // ↑ uglify タスクで利用\n    rename = require('gulp-rename'),\n    // ↑ ファイル名の変更\n    simplevars = require('postcss-simple-vars'),\n    // ↑ postcss-css-variables と同等ですが、こっちの方が書くの楽なので使うことが多い\n    slim = require('gulp-slim'),\n    // ↑ Slim を使うため\n    ssi = require('browsersync-ssi'),\n    // ↑ browser-sync で SSI を使うため\n    tinyping = require('gulp-tinypng-compress'),\n    // ↑ TinyPNG を利用した PNG / JPEG ファイルの最適化 （API キーが必要 / 500 画像/月まで無料）\n    uglify = require('gulp-uglify');\n    // ↑ JavaScript を圧縮 （Minify）\n</pre> \n<p><code>gulp-tinypng-compress</code> については、無理に使うことないと思います。基本は <code>gulp-imagemin</code> で事足りる。TinyPNG の API キーを持っているなら導入しておくと便利かも。</p> \n<h3 id=\"section-04-01\">タスクごと</h3> \n<p>長くなってきましたけども、各タスクごとに記述を見ていきましょう。</p> \n<h4 id=\"section-04-01-01\">default タスク</h4> \n<p>default タスクは、下記のように <code>watch</code> と <code>browser-sync</code> を指定しています。default タスクというのは、タスクを特に指定せず、<code>gulp</code> とだけコマンドを打った場合に実行されるタスクのことです。</p> \n<pre class=\"javascript\">\n// default\ngulp.task('default', ['watch', 'browser-sync']);\n</pre> \n<p>開発を始める時に、<code>gulp</code> とコマンドを打てば、上記、2つのタスクが実行されますので、あとは CSS なり HTML なり書いていく感じですね。</p> \n<p>例えばまだ表示確認する必要がない状態なのに毎回 <code>browser-sync</code> が立ち上がるのは邪魔くさいという場合は、<code>gulp watch</code> として、<code>watch</code> タスクだけ実行すればよいです。</p> \n<h4 id=\"section-04-01-02\">CSS ファイルを結合したり、圧縮するためのタスク</h4> \n<p>CSS 関連のタスクを見ていきましょう。CSS プリプロセッサとして使っているのは PostCSS （＋各プラグイン） で、それに <code>gulp-concat</code> と <code>gulp-cssmin</code> を組み合わせてファイル結合や圧縮 （Minify） して仕上げるみたいな流れです。</p> \n<pre class=\"javascript\">\n// concat\ngulp.task('css.concat', () =&gt; {\n  var plugins = [\n  colorfunction,\n  cssimport,\n  cssvariables,\n  mqpacker,\n  nested,\n  simplevars\n  ];\n  gulp.src('docs/tmp/css/*.css')\n  .pipe(plumber({\n    errorHandler: notify.onError('Error: &lt;%= error.message %&gt;')\n  }))\n  .pipe(postcss(plugins))\n  .pipe(autoprefixer({\n    browsers: ['last 2 version'],\n    grid: true\n  }))\n  .pipe(concat('s.css'))\n  .pipe(gulp.dest('docs/tmp/concat'))\n});\n</pre> \n<p>まず、<code>gulp-concat</code> タスクを実行する際に、PostCSS の各機能を使ってベンダプレフィックスを付けたり、変数やネストを処理したりみたいなことをやりつつ、ファイルを統合して、<code>docs/tmp/concat</code> に一時ファイルを書き出すところまでやります。</p> \n<p class=\"memo\">PostCSS で使用している<a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05-01\">各プラグインの簡単な説明は後述</a>していますので参考まで。</p> \n<p>この一時ファイルは圧縮されていない CSS ファイルなので、「圧縮していない CSS ファイルが欲しい」 みたいなときにはこれが使えます。</p> \n<p>ちなみに、<code>autoprefixer</code> の指定に <code>grid: true</code> とありますが、これは gulp-autoprefixer 5.0 から利用できるオプションです。IE11 を対象に <a href=\"https://drafts.csswg.org/css-grid/\" target=\"_blank\">CSS Grid Layout</a> を書く場合はとても便利なので、指定しておきましょう。</p> \n<p>その他、<code>browsers: ['last 2 version']</code> の指定で、各ブラウザの最新版から数えて、2バージョンまで （つまり最新版と、1世代前までですね） を対象にベンダプレフィックスを付与するようにしています。</p> \n<p>続けて、上記の一時ファイルを、<code>gulp-cssmin</code> で圧縮して、<code>htdocs/css</code> に書き出すところまでが下記のタスク。この際、<code>gulp-rename</code> を使用して、s.min.css という形にファイル名を変更しています。</p> \n<pre class=\"javascript\">\n// cssmin\ngulp.task('cssmin', ['css.concat'], () =&gt; {\n  gulp.src('docs/tmp/concat/s.css')\n  .pipe(plumber({\n    errorHandler: notify.onError('Error: &lt;%= error.message %&gt;')\n  }))\n  .pipe(cssmin())\n  .pipe(rename({suffix: '.min'}))\n  .pipe(gulp.dest('htdocs/css'))\n  .pipe(browserSync.stream())\n});\n</pre> \n<p>なお、<code>.pipe(browserSync.stream())</code> という記述について、<a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-06-01\">詳しくは後述</a>しますが、<code>browser-sync</code> に対して変更部分を反映させるための記述になります。こう書いておくと、CSS を修正した際に、動作確認用に <code>browser-sync</code> で表示しているページをいちいち手動で再読込したりしなくてよいので便利。</p> \n<p>で、実際に <code>gulp-watch</code> から指定しているのは下記のタスクになります。</p> \n<pre class=\"javascript\">\ngulp.task('css', ['css.concat', 'cssmin']);\n</pre> \n<p>つまり、</p> \n<ol> \n <li><code>watch</code> タスクで監視しているフォルダ内の CSS に変更を加える</li> \n <li><code>css</code> タスクが実行される</li> \n <li>まず <code>gulp-concat</code> が実行されて、<code>docs/tmp/concat</code> 内に未圧縮状態の CSS ファイルが書き出される</li> \n <li>続けて <code>gulp-cssmin</code> で上の CSS ファイルが圧縮され、本番用の CSS ファイルとして書き出される</li> \n <li><code>browser-sync</code> で表示している Web ページに変更した内容が反映される</li> \n</ol> \n<p>という感じの動作になって、作業が自動化されますよと。</p> \n<h4 id=\"section-04-01-03\">JavaScript コーディング関連のタスク</h4> \n<p>仕事柄、JavaScript をゴリゴリ書くようなことはあまりないのですが、書く際は CoffeeScript を使っています。</p> \n<p>CoffeeScript で書いたスクリプトを、JavaScript ファイルにコンパイルするためのタスクが下記。<code>gulp-coffee</code> を使用します。</p> \n<pre class=\"javascript\">\n// coffee\ngulp.task('coffee', () =&gt; {\n  gulp.src('docs/tmp/js/*.coffee')\n  .pipe(plumber({\n    errorHandler: notify.onError('Error: &lt;%= error.message %&gt;')\n  }))\n  .pipe(coffee({bare: true}))\n  .pipe(gulp.dest('htdocs/js'))\n  .pipe(browserSync.stream())\n});\n</pre> \n<p>このタスクにも、<code>.pipe(browserSync.stream())</code> という記述を加えて、<code>browser-sync</code> での確認時に楽になるようにしています。</p> \n<p>あと、必要に応じて下記のタスク （<code>gulp-uglify</code> を使用） で圧縮 （Minify） しますが、オプション的な感じで使っているため、後述する <code>watch</code> タスクには含めていません。任意で実行する感じです。</p> \n<pre class=\"javascript\">\n// uglify\ngulp.task('jsmin', (cb) =&gt; {\n  pump(\n    [\n      gulp.src('htdocs/js/*js'),\n      uglify(),\n      rename({suffix: '.min'}),\n      gulp.dest('htdocs/js/min')\n    ],\n    cb\n  );\n});\n</pre> \n<p>タスクを実行した場合、<code>htdocs/js/</code> 以下にある .js ファイルを圧縮し、<code>htdocs/js/min/</code> 以下に、.min.js にリネームした上で保存します。</p> \n<p>他のタスクのように <code>.pipe</code> ではなく、<code>pump</code> を使っている理由については、下記を参考まで。</p> \n<ul> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://github.com/terinjokes/gulp-uglify/blob/master/docs/why-use-pump/README.md#why-use-pump\" target=\"_blank\">Why Use Pump? - gulp-uglify</a></li> \n</ul> \n<h4 id=\"section-04-01-04\">Slim</h4> \n<p>Slim 関連のタスクです。<code>docs/tmp/slim/</code> 以下にある .slim ファイルを、<code>htdocs</code> 以下に書き出します。</p> \n<p>後述しますが、こちらも <code>watch</code> タスクで監視対象にするので、変更を加える度にこのタスクが実行されて、HTML が生成されることになります。</p> \n<pre class=\"javascript\">\n// slim\ngulp.task('slim', () =&gt; {\n  gulp.src('docs/tmp/slim/*.slim')\n  .pipe(plumber({\n    errorHandler: notify.onError('Error: &lt;%= error.message %&gt;')\n  }))\n  .pipe(slim({\n    require: 'slim/include',\n    pretty: true,\n    options: 'include_dirs=[\"docs/tmp/slim/inc\"]'\n  }))\n  .pipe(gulp.dest('htdocs'))\n  .pipe(browserSync.stream())\n});\n</pre> \n<p>このタスクにも CSS 関連のタスク同様、<code>.pipe(browserSync.stream())</code> の記述を入れることで、HTML に変更があったら即座に確認用のブラウザ画面にも反映されるようにしておきます。</p> \n<h4 id=\"section-04-01-05\">watch タスク</h4> \n<p>特定のフォルダ内のファイル変更を監視し、変更があった場合に指定したタスクを実行することで、自動化を行います。ここで監視するのは、CSS や CoffeeScript を編集しているフォルダと、Slim 関連のファイルが置いてあるフォルダになります。</p> \n<pre class=\"javascript\">\n// watch\ngulp.task('watch', () =&gt; {\n  gulp.watch(['docs/tmp/css/*.css'], ['css']);\n  gulp.watch(['docs/tmp/js/*.coffee'], ['coffee']);\n  gulp.watch(['docs/tmp/slim/**/*.slim'], ['slim']);\n});\n</pre> \n<p>上記の指定は、下記のような意味になります。</p> \n<ul> \n <li><code>docs/tmp/css/</code> 以下の .css ファイルに変更があったら、<code>css</code> タスクを実行</li> \n <li><code>docs/tmp/js/</code> 以下の .coffee ファイルに変更があったら、<code>coffee</code> タスクを実行</li> \n <li><code>docs/tmp/slim/</code> 以下の .slim ファイルに変更があったら、<code>slim</code> タスクを実行</li> \n</ul> \n<h4 id=\"section-04-01-06\">browser-sync によるブラウザでの動作確認</h4> \n<p><code>gulp-webserver</code> を使うこともあるんですが、ここ数年はこちらがメイン。<code>browser-sync</code> が便利なのは複数のブラウザ間での操作を同期してくれるので、まとめて動作チェックしたいときなんかは楽です。</p> \n<pre class=\"javascript\">\n// browser-sync\ngulp.task('browser-sync', () =&gt; {\n  browserSync({\n    server: {\n      baseDir: 'htdocs',\n      middleware:[\n        ssi({\n          ext: '.html',\n          baseDir: 'htdocs'\n        })\n      ]\n    }\n  });\n});\n</pre> \n<p>SSI を使いたい場合のために <code>middleware</code> 項目に、<code>browsersync-ssi</code> 用の設定を書いておきます。タスクを実行すると、<code>http://localhost:3000</code> で <code>htdocs</code> フォルダをルートディレクトリに Web ページの表示が可能になります。</p> \n<h5 id=\"section-04-01-06-01\"><code>.pipe(browserSync.stream())</code> オプション</h5> \n<p>各タスクに、<code>.pipe(browserSync.stream())</code> の記述が入っていたと思いますが、このオプションを入れておくと、各タスク実行後に変更されたファイルを <code>browser-sync</code> に伝えてくれます。すると、<code>browser-sync</code> さんが、変更されたファイルだけを再読込してくれるという便利機能。</p> \n<p>ブラウザの画面自体を強制的に再読込 （リロード） するのではなく、変更があった部分だけ反映してくれます。画面をリロードされてしまうと面倒なケースは多々あると思いますが、そういう時にも便利です。</p> \n<h4 id=\"section-04-01-07\">画像圧縮 （最適化） 系のタスク</h4> \n<p>画像を最適化するためのタスクは下記の 2つを使い分け。</p> \n<p>画像の最適化は最後にまとめてやればいいや派なので、<code>watch</code> タスクに入れたりみたいなことはせず、納品前に一気に処理してという感じにしています。</p> \n<p><code>htdocs</code> フォルダ内ではなく、<code>docs/tmp/img</code> 以下に作業フォルダを分けているのも、画像の最適化は完全に別作業として分けたいという気分の問題です。</p> \n<pre class=\"javascript\">\n// tinypng\ngulp.task('tinypng', () =&gt; {\n  gulp.src('docs/tmp/img/src/**/*.{png,jpg}')\n    .pipe(tinyping({\n      key: '__API_Key__'\n      summarize: true\n    }))\n    .pipe(gulp.dest('docs/tmp/img/dist'))\n});\n</pre> \n<p><code>tinypng</code> タスク （上記） は API キーが必要なのと、ひと月あたりに無料で処理できる画像の数が決まっていますので、メインで使うのは下記の <code>imagemin</code> です。</p> \n<pre class=\"javascript\">\n// imagemin\ngulp.task('imagemin', () =&gt; {\n  gulp.src('docs/tmp/img/src/**/*.{png,jpg,gif,svg}')\n  .pipe(imagemin([\n    imagemin.gifsicle({interlaced: true}),\n    imagemin.jpegtran({progressive: true}),\n    imagemin.optipng({optimizationLevel: 4}),\n    imagemin.svgo({\n      plugins: [\n        {removeViewBox: false}\n      ]\n    })\n  ]))\n  .pipe(gulp.dest('docs/tmp/img/dist'))\n});\n</pre> \n<p>オプションとして、いくつかの指定をしてあります。各オプションについて詳しくは、下記の関連 API のページに書かれていますので参考まで。</p> \n<ul> \n <li><a href=\"https://github.com/imagemin/imagemin-gifsicle\">gifsicle</a> - Compress GIF images</li> \n <li><a href=\"https://github.com/imagemin/imagemin-jpegtran\">jpegtran</a> - Compress JPEG images</li> \n <li><a href=\"https://github.com/imagemin/imagemin-optipng\">optipng</a> - Compress PNG images</li> \n <li><a href=\"https://github.com/imagemin/imagemin-svgo\">svgo</a> - Compress SVG images</li> \n</ul> \n<h4 id=\"section-04-01-08\">バリデーション関連のタスク</h4> \n<p>こちらも画像関連のタスクと同様、ファイル修正の度にというよりは、ひと段落つくごとに実行する感じですが、HTML ファイルや CSS ファイルにエラーがないかを確認します。</p> \n<pre class=\"javascript\">\n// htmlhint\ngulp.task('htmlv', () =&gt; {\n  gulp.src('htdocs/*.html')\n  .pipe(htmlv())\n  .pipe(htmlv.reporter())\n});\n</pre> \n<p>CSS のバリデーションタスク （下記） は、かなり多くのオプションを指定しています。詳しくは <a href=\"https://github.com/CSSLint/csslint/wiki/Rules\" target=\"_blank\">csslint の Wiki</a> に書かれていますが、正直、余計なお世話なルールも多いので、必要最低限のルールだけ <code>true</code> にしています。</p> \n<p class=\"memo\">※ 各オプションは、デフォルト値が <code>true</code> なので <code>true</code> にしたい場合は記述する必要はないのですが、どのルールを <code>true</code> にしているのか、確認しやすいようにあえて書いています。</p> \n<pre class=\"javascript\">\n// csslint\ngulp.task('cssv', () =&gt; {\n  gulp.src('htdocs/css/s.min.css')\n  .pipe(cssv({\n    'adjoining-classes': false,\n    'box-model': false,\n    'box-sizing': false,\n    'bulletproof-font-face': false,\n    'compatible-vendor-prefixes': false,\n    'empty-rules': true,\n    'display-property-grouping': true,\n    'duplicate-background-images': false,\n    'duplicate-properties': true,\n    'fallback-colors': false,\n    'floats': false,\n    'font-faces': false,\n    'font-sizes': false,\n    'gradients': false,\n    'ids': false,\n    'import': false,\n    'important': false,\n    'known-properties': true,\n    'order-alphabetical': false,\n    'outline-none': true,\n    'overqualified-elements': false,\n    'qualified-headings': false,\n    'regex-selectors': false,\n    'shorthand': false,\n    'star-property-hack': false,\n    'text-indent': false,\n    'underscore-property-hack': false,\n    'unique-headings': false,\n    'universal-selector': false,\n    'unqualified-attributes': false,\n    'vendor-prefix': false,\n    'zero-units': true\n  }))\n  .pipe(cssv.formatter('compact'))\n});\n</pre> \n<p>地味に <code>calc()</code> を <code>cacl()</code> ってタイポ （恥ずかしい......） しててこいつに指摘されて気がついたことがありますので、ある程度 CSS 書いたらバリデーション通すようにはしています。</p> \n<h4 id=\"section-04-01-09\">（ヒント） gulpfile.js の書き方でひと工夫</h4> \n<p>タスクを色々と書いていると、同じようなフォルダパスの記述 （例えば <code>docs/tmp/css/</code> みたいな） を何回も書くことがあると思います。この辺を一括で管理したいなら、下記のように書いてもいいと思います。</p> \n<pre class=\"javascript\">\n// まとめてフォルダのパスを指定しておいて\nvar docsDir = 'docs/tmp/',\n    cssDir = 'docs/tmp/css/';\n\n// タスク内で呼び出す\ngulp.src(cssDir + '*.css')\n</pre> \n<p>必ずやった方がよいという話ではありませんが、例えばフォルダのパスをプロジェクトごとに変更する必要がある場合などは管理が楽なようにしておくとよいでしょう。</p> \n<h2 id=\"section-05\">各パッケージでできることを簡単に</h2> \n<p>導入の仕方は解説してきましたので、今回導入しているパッケージで、実際にどういう感じで CSS や HTML が書けるのかを簡単にですが解説しておこうと思います。</p> \n<h3 id=\"section-05-01\">PostCSS 関連</h3> \n<p>PostCSS 自体は特別な機能を持たない CSS パーサなのですが、PostCSS 用の各種プラグインを用いることで、様々な機能を追加することができます。</p> \n<p>それによって、まだ策定途中だったり、サポートブラウザが少なく、そのままでは使いにくい最新の Web 標準仕様に基づいて記述した CSS を、現在のブラウザが解釈可能な CSS として書き出す CSS プリプロセッサとして利用することができるわけです。</p> \n<p>と、説明してもわかりにくいので下記に具体的に例を挙げてみます。</p> \n<h4 id=\"section-05-01-01\">postcss-custom-properties</h4> \n<p>「<a href=\"https://drafts.csswg.org/css-variables/\" target=\"_blank\">CSS Custom Properties</a> （CSS カスタムプロパティ）」 に基づいて変数を定義することができます。</p> \n<p class=\"memo\">CSS カスタムプロパティについて詳しくは、「<a href=\"https://hyper-text.org/archives/2014/07/css_variables.shtml\">CSS Variables （CSS カスタムプロパティ） の使い方</a>」 という記事を過去に書いていますので参考まで。</p> \n<p>といっても、本来の CSS カスタムプロパティは、定義した変数を CSS 内で動的にセットしていくことができますが、<code>postcss-custom-properties</code> は CSS にコンパイルする際に定義した変数が使われるという形なので、書き出し後の CSS に変数の記述は残りません。</p> \n<p>ですが、将来的に CSS カスタムプロパティがほぼ全ての環境で使えるようになった場合には、定義した変数の再利用が容易というメリットがあります。</p> \n<p>具体的には、下記のように <code>:root</code> セレクタ内で変数を定義しておいて、</p> \n<pre class=\"css\">\n:root {\n  --bg-color: red;\n  --border-radius: 4px;\n  --box-padding: 10px 20px;\n  --txt-color: white;\n}\n</pre> \n<p>下記のように定義した変数を <code>var(--foo)</code> という形式で呼び出します。</p> \n<pre class=\"css\">\n.btn {\n  display: inline-block;\n  background-color: var(--bg-color);\n  border-radius: var(--border-radius);\n  color: var(--txt-color);\n  padding: var(--box-padding);\n}\n</pre> \n<p>CSS カスタムプロパティをサポートするブラウザであれば、この記述でそのまま利用できますが、残念ながら IE11 がサポートしていません。ヤツだけのために Pollyfill 導入するのもダルいので、今のところは <code>postcss-custom-properties</code> で変換して...... みたいな感じで使っています。</p> \n<ul> \n <li><a href=\"https://caniuse.com/#search=CSS%20Variables\" target=\"_blank\">CSS Variables (Custom Properties) - Can I use...</a></li> \n</ul> \n<h4 id=\"section-05-01-02\">postcss-simple-vars</h4> \n<p>上の <code>postcss-custom-properties</code> と同じ、変数を定義して使えるプラグインなのですが、こちらは変数の定義に 「<code>$</code>」 を使います。書き方としては Sass に近いのでこちらの方が馴染みやすいという方もいるかもしれません。</p> \n<pre class=\"css\">\n$bg-color: red;\n$border-radius: 4px;\n$box-padding: 10px 20px;\n$txt-color: white;\n</pre> \n<p>変数の定義も呼び出しも <code>$foo</code> という形式なのでシンプルですね。</p> \n<pre class=\"css\">\n.btn {\n  display: inline-block;\n  background-color: $bg-color;\n  border-radius: $border-radiu;\n  color: $box-padding;\n  padding: $txt-color;\n}\n</pre> \n<p>個人的にはこちらを利用する場合が多いです。</p> \n<h4 id=\"section-05-01-03\">postcss-import</h4> \n<p><code>@import</code> ルールを利用することで、CSS ファイル内で、別の CSS ファイルを読み込み、展開することができます。具体的には上で紹介した変数定義を 1つのファイルにまとめておいて、他の CSS ファイルで利用する際に使います。</p> \n<p>例えばですが、「css-variables.css」 に変数定義だけを書いておいて、別の CSS ファイル 「style.css」 でその定義した変数を利用したいとします。その場合、「style.css」 の先頭行に、</p> \n<pre class=\"css\">\n@import 'css-variables.css';\n</pre> \n<p>と記述することで、「css-variables.css」 が 「style.css」 内で展開され、定義した変数を読み出すことができます。</p> \n<h4 id=\"section-05-01-04\">postcss-color-function</h4> \n<p><code>color()</code> 関数が利用できます。</p> \n<ul> \n <li><span class=\"module-entry-label-hot\">参考</span> <a href=\"https://drafts.csswg.org/css-color/\" target=\"_blank\">CSS Color Module Level 4</a></li> \n</ul> \n<p>例えば下記のように記述することで、</p> \n<pre class=\"css\">\nbody {\n  background-color: color(red a(90%))\n}\n</pre> \n<p>下記のような CSS が書き出されます。</p> \n<pre class=\"css\">\nbody {\n  background-color: rgba(255, 0, 0, 0.9)\n}\n</pre> \n<h4 id=\"section-05-01-05\">postcss-nested</h4> \n<p>個人的にはあまり使わないんですが、Sass のように入れ子で記述したい場合に便利なプラグイン。</p> \n<pre class=\"css\">\n.phone {\n  &amp;_title {\n    width: 500px;\n    @media (max-width: 500px) {\n      width: auto;\n    }\n    body.is_dark &amp; {\n      color: white;\n    }\n  }\n  img {\n    display: block;\n  }\n}\n</pre> \n<p>みたいに記述することで、下記のような CSS が書き出されます。</p> \n<pre class=\"css\">\n.phone_title {\n  width: 500px;\n}\n@media (max-width: 500px) {\n  .phone_title {\n    width: auto;\n  }\n}\nbody.is_dark .phone_title {\n  color: white;\n}\n.phone img {\n  display: block;\n}\n</pre> \n<h3 id=\"section-05-02\">Slim 関連</h3> \n<p>Slim はテンプレートエンジンです。全部をこれで書いているわけではないのですが、HTML の大枠を作ったりする際に楽なので使っています。</p> \n<p>例えば下記のように記述することで、HTML を生成できます。</p> \n<pre class=\"slim-html\">\n/ index.slim\ndoctype html\nhtml lang=\"ja\" dir=\"ltr\"\n  head\n    include header\n  body\n    main\n      h1 Test Page\n      p this page is Slim test page.\n      table.sample-table\n        tr\n          th scope=\"col\" head 01\n          th scope=\"col\" head 02\n          th scope=\"col\" head 03\n        tr\n          td data 01\n          td data 02\n          td data 03\n</pre> \n<p><code>include header</code> という部分でインクルードしているヘッダのパーツ （inc/header.slim） は下記のような内容になります。</p> \n<pre class=\"slim-html\">\n/ inc/header.slim\n- Sitename = \"Example Company\"\n- Title = \"Test Page\"\n- Description = \"Test description\"\n- CSSdir = \"/css/\"\n\nmeta charset=\"utf-8\"\ntitle #{Title} | #{Sitename}\nmeta name=\"viewport\" content=\"width=device-width, initial-scale=1\"\nmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\nmeta name=\"description\" content = Description\nlink rel=\"stylesheet\" href=\"#{CSSdir}s.min.css\"\n</pre> \n<p>これら .slim ファイルから、下記のような HTML が生成されます。</p> \n<pre class=\"html\">\n&lt;!DOCTYPE html&gt;\n&lt;html dir=\"ltr\" lang=\"ja\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;Test Page | Example Company&lt;/title&gt;\n    &lt;meta content=\"width=device-width, initial-scale=1\" name=\"viewport\" /&gt;\n    &lt;meta content=\"IE=edge\" http-equiv=\"X-UA-Compatible\" /&gt;\n    &lt;meta content=\"Test description\" name=\"description\" /&gt;\n    &lt;link href=\"/css/s.min.css\" rel=\"stylesheet\" /&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;main&gt;\n      &lt;h1&gt;\n        Test Page\n      &lt;/h1&gt;\n      &lt;p&gt;\n        this page is Slim test page.\n      &lt;/p&gt;\n      &lt;table class=\"sample-table\"&gt;\n        &lt;tr&gt;\n          &lt;th scope=\"col\"&gt;\n            head 01\n          &lt;/th&gt;\n          &lt;th scope=\"col\"&gt;\n            head 02\n          &lt;/th&gt;\n          &lt;th scope=\"col\"&gt;\n            head 03\n          &lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n          &lt;td&gt;\n            data 01\n          &lt;/td&gt;\n          &lt;td&gt;\n            data 02\n          &lt;/td&gt;\n          &lt;td&gt;\n            data 03\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/table&gt;\n    &lt;/main&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre> \n<h2 id=\"section-06\">まとめ</h2> \n<p>ということで、長々と説明してきましたが、上記が現時点で私が主に使っている Gulp 環境を基にした解説になります。</p> \n<p>ひとくちにフロントエンド開発といっても、Web サービスの開発をしていたり、自社 Web サイトの開発がメインの方なのか、受託でお客様の Web サイト制作をメインにしている方なのかなどによって開発手法、利用するツールやライブラリだけでなく、適した開発環境についてもそれぞれ異なるとは思いますが、もし少しでも参考になる方がいれば幸いです。</p> \n<hr /> \n<h3>この記事もあわせて読まれています</h3> \n<ul> \n <li><a href=\"https://hyper-text.org/archives/2018/05/google_analytics_cookie_opt_in.shtml\">Cookie 使用の同意を得てから Google Analytics のトラッキングを有効にする</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/11/amp_validator_bookmarklet.shtml\">閲覧中の URL を AMP （Accelerated Mobile Pages） バリデータに投げるブックマークレット</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/06/jquery_3_0_released.shtml\">jQuery 3.0 が正式リリース、通常の Web サイト制作で利用するなら軽量版 「Slim build （スリムビルド）」 が便利</a></li> \n <li><a href=\"https://hyper-text.org/archives/2016/04/grunt_v1_released.shtml\">Grunt 1.0.0 がついに正式リリース、0.4.5 のリリースから約 2年</a></li> \n <li><a href=\"https://hyper-text.org/archives/2015/07/jquery_3_0_alpha_versions_released.shtml\">jQuery 3.0 および jQuery Compat 3.0 のアルファ版が公開される</a></li> \n</ul> \n<hr /> \n<p>この記事は Blog 「<a href=\"https://hyper-text.org/\">WWW WATCH</a>」 で 2018年3月26日 11:56 に公開されました。</p> \n<p>記事のリンク URL は <a href=\"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml\">https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml</a> です。</p> \n<img src=\"http://feeds.feedburner.com/~r/wacth/~4/yn81twa1n48\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Mon, 26 Mar 2018 02:56:41 +0000","feedId":5835,"bgimg":"https://hyper-text.org/img/asset/gulp_quick_start_ogp.png","linkMd5":"3553efdf612ba97c4e909f05ee415239","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn48@2020_5/2020/08/24/22-42-37-491_d36149ebcaec7feb.webp","destWidth":1600,"destHeight":1200,"sourceBytes":73141,"destBytes":43794,"author":"Yoshiki Kato","enclosureType":"image/png","enclosureUrl":"https://hyper-text.org/img/asset/gulp_quick_start_ogp.png","articleImgCdnMap":{"https://hyper-text.org/img/asset/gulp_quick_start_ogp.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn48@2020_5/2020/08/24/22-42-37-491_d36149ebcaec7feb.webp","https://hyper-text.org/img/post/gulp-logo-300.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn79@2020_5/2020/08/24/22-43-11-497_7f8ef4e47dff54b3.webp","https://burnworks.imgix.net/img/post/gulp-quick-start-01.png?border=4,60CCCCCC":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn15@2020_1/2020/08/24/22-43-11-118_17c9ffc718364343.webp","https://burnworks.imgix.net/img/post/gulp-quick-start-02.png?border=4,60CCCCCC":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn19@2020_6/2020/08/24/22-43-11-086_81d90f5f166d453b.webp","http://feeds.feedburner.com/~r/wacth/~4/yn81twa1n48":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn99@2020_3/2020/08/24/22-43-10-853_45364288e90507a7.webp"},"publishedOrCreatedDate":1598308949554}],"record":{"createdTime":"2020-08-25 06:42:29","updatedTime":"2020-08-25 06:42:29","feedId":5835,"fetchDate":"Mon, 24 Aug 2020 22:42:29 +0000","fetchMs":16,"handleMs":1880,"totalMs":47043,"newArticles":0,"totalArticles":15,"status":1,"type":0,"ip":"52.0.134.44","hostName":"us-018.herokuapp.com","requestId":"5f70ebc3710241f683d0576f30c2cb43_5835","contentType":"application/xml; charset=UTF-8","totalBytes":2046186,"bgimgsTotal":15,"bgimgsGithubTotal":15,"articlesImgsTotal":73,"articlesImgsGithubTotal":73,"successGithubMap":{"myreaderx14":3,"myreaderx8":2,"myreaderx7":3,"myreaderx15":3,"myreaderx16":3,"myreaderx6":1,"myreaderx32":4,"myreaderx4":2,"myreaderx10":1,"myreaderx11":2,"myreaderx3":3,"myreaderx33":3,"myreaderx12":2,"myreaderx2":2,"myreaderx1":3,"myreaderx13":2,"myreaderx30":3,"myreaderx31":3,"myreaderx18":2,"myreaderx19":3,"myreaderx":3,"myreaderx25":4,"myreaderx27":2,"myreaderx21":2,"myreaderx22":2,"myreaderx23":2,"myreaderx24":2,"myreaderx5oss":3,"myreaderx29":3},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:30:18","updatedTime":"2020-08-25 04:30:18","id":5835,"name":"WWW WATCH","url":"http://feeds.feedburner.com/wacth","subscriber":null,"website":null,"icon":"https://hyper-text.org/static/img/favicon.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn10@2020_1/2020/08/24/22-42-28-801_c5e26167e5fb2e09.png","description":"Webデザイン、HTML、XML、CSS、JavaScript 関連の話題、新しいWebサービス、Webサイトの話題をはじめとしたインターネット上での最新トピックスなどを中心に取り上げるBlog","weekly":null,"link":"https://hyper-text.org"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":659964,"tmpBodyImgCdnBytes":1386222,"tmpBgImgCdnBytes":0,"extra4":{"start":1598308947598,"total":0,"statList":[{"spend":76,"msg":"获取xml内容"},{"spend":1880,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":30749,"msg":"正文链接上传到cdn"}]},"extra5":73,"extra6":73,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{"https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml_/archives/2018/03/safari_ssl_warning.shtml":"https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml","https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml_/archives/2014/12/marking_http_non_secure.shtml":"https://hyper-text.org/archives/2014/12/marking_http_non_secure.shtml","https://hyper-text.org/archives/2018/02/google_chrome_65_beta_release.shtml_/archives/2015/05/firefox_37_release.shtml":"https://hyper-text.org/archives/2015/05/firefox_37_release.shtml","https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml_/archives/2015/02/chrome_canary_mark_non_secure.shtml":"https://hyper-text.org/archives/2015/02/chrome_canary_mark_non_secure.shtml","https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml_/archives/2018/02/chrome_68_ssl_warning.shtml":"https://hyper-text.org/archives/2018/02/chrome_68_ssl_warning.shtml","https://hyper-text.org/archives/2018/04/phishing_risk_gmail_dots_do_matter.shtml_/archives/2014/07/gmail_alias.shtml":"https://hyper-text.org/archives/2014/07/gmail_alias.shtml","https://hyper-text.org/archives/2018/02/amp_stories.shtml_/archives/2016/11/amp_validator_bookmarklet.shtml":"https://hyper-text.org/archives/2016/11/amp_validator_bookmarklet.shtml","https://hyper-text.org/archives/2018/02/google_chrome_65_beta_release.shtml_/archives/2018/02/chrome_68_ssl_warning.shtml ":"https://hyper-text.org/archives/2018/02/chrome_68_ssl_warning.shtml ","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-05-01":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05-01","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-05-02":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05-02","https://hyper-text.org/archives/2018/02/google_chrome_65_beta_release.shtml_/archives/2017/03/google_chrome_symantec_certificates.shtml":"https://hyper-text.org/archives/2017/03/google_chrome_symantec_certificates.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-04-01-06-01":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-06-01","https://hyper-text.org/archives/2018/02/amp_stories.shtml_/archives/2016/06/amp_validator_web_ui.shtml":"https://hyper-text.org/archives/2016/06/amp_validator_web_ui.shtml","https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml_/archives/2016/02/no_more_passwords_over_http.shtml":"https://hyper-text.org/archives/2016/02/no_more_passwords_over_http.shtml","https://hyper-text.org/archives/2018/02/google_chrome_65_beta_release.shtml_/archives/2014/07/css_variables.shtml":"https://hyper-text.org/archives/2014/07/css_variables.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-04-01-09":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-09","https://hyper-text.org/archives/2018/02/google_chrome_65_beta_release.shtml_/archives/2016/05/firefox_48_support_nested_calc.shtml":"https://hyper-text.org/archives/2016/05/firefox_48_support_nested_calc.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-04-01-08":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-08","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-04-01":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-04-01-07":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-07","https://hyper-text.org/archives/2018/02/amp_stories.shtml_/archives/2016/02/google_search_console_amp.shtml":"https://hyper-text.org/archives/2016/02/google_search_console_amp.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-04-01-06":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-06","https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml_/archives/2016/02/no_more_passwords_over_http.shtml":"https://hyper-text.org/archives/2016/02/no_more_passwords_over_http.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-04-01-05":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-05","https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml_/archives/2015/01/full_time_ssl_website_quick_start.shtml":"https://hyper-text.org/archives/2015/01/full_time_ssl_website_quick_start.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-04-01-04":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-04","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-04-01-03":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-03","https://hyper-text.org/archives/2018/05/twitter_keeping_your_account_secure.shtml_/archives/2014/05/dropbox_2_step_verification_google_authenticator.shtml":"https://hyper-text.org/archives/2014/05/dropbox_2_step_verification_google_authenticator.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-04-01-02":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-02","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-04-01-01":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04-01-01","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_/archives/2014/01/grunt_quick_start_for_web_designer.shtml":"https://hyper-text.org/archives/2014/01/grunt_quick_start_for_web_designer.shtml","https://hyper-text.org/archives/2018/05/google_analytics_cookie_opt_in.shtml_/archives/2016/02/amp_analytics.shtml":"https://hyper-text.org/archives/2016/02/amp_analytics.shtml","https://hyper-text.org/archives/2018/05/twitter_keeping_your_account_secure.shtml_/archives/2013/04/password_management.shtml":"https://hyper-text.org/archives/2013/04/password_management.shtml","https://hyper-text.org/archives/2018/05/github_pages_https_support.shtml_/archives/2015/01/full_time_ssl_website_quick_start.shtml":"https://hyper-text.org/archives/2015/01/full_time_ssl_website_quick_start.shtml","https://hyper-text.org/archives/2018/05/chrome_66_improving_autoplay.shtml_/archives/2017/03/google_chrome_symantec_certificates.shtml":"https://hyper-text.org/archives/2017/03/google_chrome_symantec_certificates.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-02":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-02","https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml_/archives/2014/12/marking_http_non_secure.shtml":"https://hyper-text.org/archives/2014/12/marking_http_non_secure.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-01":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-01","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_/archives/2014/07/css_variables.shtml":"https://hyper-text.org/archives/2014/07/css_variables.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-04":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-04","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-03":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-03","https://hyper-text.org/archives/2018/02/google_chrome_65_beta_release.shtml_/archives/2017/06/google_chrome_59_release.shtml":"https://hyper-text.org/archives/2017/06/google_chrome_59_release.shtml","https://hyper-text.org/archives/2018/02/amp_stories.shtml_/archives/2016/01/get_started_accelerated_mobile_pages.shtml":"https://hyper-text.org/archives/2016/01/get_started_accelerated_mobile_pages.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-03-02":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-03-02","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-06":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-06","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-03-01":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-03-01","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-05":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05","https://hyper-text.org/archives/2018/07/chrome_68_release_ssl_warning.shtml_/archives/2018/05/google_chromes_security_indicator.shtml":"https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml","https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml_/archives/2017/01/chrome_56_ssl_warning.shtml":"https://hyper-text.org/archives/2017/01/chrome_56_ssl_warning.shtml","https://hyper-text.org/archives/2018/04/phishing_risk_gmail_dots_do_matter.shtml_/archives/2013/07/email_address_mistake_risk.shtml":"https://hyper-text.org/archives/2013/07/email_address_mistake_risk.shtml","https://hyper-text.org/archives/2018/07/chrome_68_release_ssl_warning.shtml_/archives/2015/01/full_time_ssl_website_quick_start.shtml":"https://hyper-text.org/archives/2015/01/full_time_ssl_website_quick_start.shtml","https://hyper-text.org/archives/2018/05/github_pages_https_support.shtml_/archives/2015/06/my_blog_ssl.shtml":"https://hyper-text.org/archives/2015/06/my_blog_ssl.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-05-01-05":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05-01-05","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-05-01-02":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05-01-02","https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml_/archives/2015/06/my_blog_ssl.shtml":"https://hyper-text.org/archives/2015/06/my_blog_ssl.shtml","https://hyper-text.org/archives/2018/05/twitter_keeping_your_account_secure.shtml_/archives/2013/05/google_passwords_better_protect.shtml":"https://hyper-text.org/archives/2013/05/google_passwords_better_protect.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-05-01-01":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05-01-01","https://hyper-text.org/archives/2018/05/chrome_66_improving_autoplay.shtml_/archives/2018/02/chrome_68_ssl_warning.shtml":"https://hyper-text.org/archives/2018/02/chrome_68_ssl_warning.shtml","https://hyper-text.org/archives/2018/02/amp_stories.shtml_/archives/2016/02/amp_analytics.shtml":"https://hyper-text.org/archives/2016/02/amp_analytics.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-05-01-04":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05-01-04","https://hyper-text.org/archives/2018/05/chrome_66_improving_autoplay.shtml_/archives/2018/02/google_chrome_65_beta_release.shtml":"https://hyper-text.org/archives/2018/02/google_chrome_65_beta_release.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-05-01-03":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-05-01-03","https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml_/archives/2015/06/my_blog_ssl.shtml":"https://hyper-text.org/archives/2015/06/my_blog_ssl.shtml","https://hyper-text.org/archives/2018/02/amp_stories.shtml_/archives/2016/05/amp_extended_components.shtml":"https://hyper-text.org/archives/2016/05/amp_extended_components.shtml","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-02-01":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-02-01","https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml_#section-02-02":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml#section-02-02","https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml_/archives/2015/01/full_time_ssl_website_quick_start.shtml":"https://hyper-text.org/archives/2015/01/full_time_ssl_website_quick_start.shtml"},"extra111_proxyServerAndStatMap":{"http://us-037.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-007.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://europe21.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-004.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-016.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://hyper-text.org/img/asset/google-chrome-release.png","sourceStatusCode":200,"destWidth":1080,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn60@2020_1/2020/08/24/22-42-37-062_2def37ae5a9a7f20.webp","sourceBytes":14011,"destBytes":18262,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1953,"convertSpendMs":17,"createdTime":"2020-08-25 06:42:35","host":"us-55*","referer":"https://hyper-text.org/archives/2018/05/chrome_66_improving_autoplay.shtml","linkMd5ListStr":"41063cdbcb4f05036ee0489493441a31,41063cdbcb4f05036ee0489493441a31","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.7 KB","destSize":"17.8 KB","compressRate":"130.3%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/asset/chrome_68_ssl_warning.png","sourceStatusCode":200,"destWidth":1100,"destHeight":740,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn83@2020_5/2020/08/24/22-42-37-269_ce240dbc17bb67b8.webp","sourceBytes":27093,"destBytes":13020,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2059,"convertSpendMs":21,"createdTime":"2020-08-25 06:42:35","host":"us-037*","referer":"https://hyper-text.org/archives/2018/07/chrome_68_release_ssl_warning.shtml","linkMd5ListStr":"e09d1ade2545e9796af3e85b48641c7c,e09d1ade2545e9796af3e85b48641c7c","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.5 KB","destSize":"12.7 KB","compressRate":"48.1%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/asset/css-paint-api-demo.png","sourceStatusCode":200,"destWidth":1160,"destHeight":760,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn39@2020_4/2020/08/24/22-42-37-266_b2010f4f8f864f5e.webp","sourceBytes":22225,"destBytes":36086,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2289,"convertSpendMs":28,"createdTime":"2020-08-25 06:42:35","host":"us-51*","referer":"https://hyper-text.org/archives/2018/02/google_chrome_65_beta_release.shtml","linkMd5ListStr":"2f5ca1a460244fe17731a2a83393039e,2f5ca1a460244fe17731a2a83393039e","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.7 KB","destSize":"35.2 KB","compressRate":"162.4%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/ga-cookie-opt-in-01.png","sourceStatusCode":200,"destWidth":1160,"destHeight":660,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn68@2020_2/2020/08/24/22-42-37-459_b58ce2c051b272dd.webp","sourceBytes":19227,"destBytes":59012,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2381,"convertSpendMs":168,"createdTime":"2020-08-25 06:42:35","host":"us-021*","referer":"https://hyper-text.org/archives/2018/05/google_analytics_cookie_opt_in.shtml","linkMd5ListStr":"43080e80aed8e0d3d9cea671da981bb4,43080e80aed8e0d3d9cea671da981bb4,43080e80aed8e0d3d9cea671da981bb4","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.8 KB","destSize":"57.6 KB","compressRate":"306.9%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/asset/gulp_quick_start_ogp.png","sourceStatusCode":200,"destWidth":1600,"destHeight":1200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn48@2020_5/2020/08/24/22-42-37-491_d36149ebcaec7feb.webp","sourceBytes":73141,"destBytes":43794,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2551,"convertSpendMs":91,"createdTime":"2020-08-25 06:42:35","host":"us-016*","referer":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml","linkMd5ListStr":"3553efdf612ba97c4e909f05ee415239,3553efdf612ba97c4e909f05ee415239","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"71.4 KB","destSize":"42.8 KB","compressRate":"59.9%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/asset/imgix-cdn-01.png","sourceStatusCode":200,"destWidth":1260,"destHeight":920,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn44@2020_3/2020/08/24/22-42-37-640_4c200b79c80844a9.webp","sourceBytes":194877,"destBytes":91274,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2659,"convertSpendMs":41,"createdTime":"2020-08-25 06:42:35","host":"us-029*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c,dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"190.3 KB","destSize":"89.1 KB","compressRate":"46.8%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/asset/safari_ssl_warning_ogp.png","sourceStatusCode":200,"destWidth":1800,"destHeight":1200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn52@2020_5/2020/08/24/22-42-37-781_2d04a8367c74487a.webp","sourceBytes":112233,"destBytes":36746,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2652,"convertSpendMs":165,"createdTime":"2020-08-25 06:42:35","host":"us-004*","referer":"https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml","linkMd5ListStr":"440bb8cd86a23eb8671a33224d89b17d,440bb8cd86a23eb8671a33224d89b17d","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"109.6 KB","destSize":"35.9 KB","compressRate":"32.7%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/oculus-go-05.jpg","sourceStatusCode":200,"destWidth":1160,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn64@2020_1/2020/08/24/22-42-37-634_f038a6dcc636e9fc.webp","sourceBytes":111462,"destBytes":78922,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2673,"convertSpendMs":47,"createdTime":"2020-08-25 06:42:35","host":"us-033*","referer":"https://hyper-text.org/archives/2018/05/oculus_go.shtml","linkMd5ListStr":"5df98bbdfc5827dbea040a991c4df4c6,5df98bbdfc5827dbea040a991c4df4c6,5df98bbdfc5827dbea040a991c4df4c6","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"108.8 KB","destSize":"77.1 KB","compressRate":"70.8%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/asset/android-p-ogp.png","sourceStatusCode":200,"destWidth":1400,"destHeight":860,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn34@2020_3/2020/08/24/22-42-37-828_d8aa3b644d3cf7c9.webp","sourceBytes":17431,"destBytes":30230,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2873,"convertSpendMs":36,"createdTime":"2020-08-25 06:42:36","host":"europe63*","referer":"https://hyper-text.org/archives/2018/05/android_p_dns_over_tls_support.shtml","linkMd5ListStr":"0214211fb4c6b1162306a26063e725dc,0214211fb4c6b1162306a26063e725dc","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17 KB","destSize":"29.5 KB","compressRate":"173.4%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/asset/phishing-risk-gmail-dots-do-matter.png","sourceStatusCode":200,"destWidth":1800,"destHeight":1200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn32@2020_3/2020/08/24/22-42-37-879_b522689f0e897da0.webp","sourceBytes":41730,"destBytes":37374,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2977,"convertSpendMs":101,"createdTime":"2020-08-25 06:42:36","host":"europe62*","referer":"https://hyper-text.org/archives/2018/04/phishing_risk_gmail_dots_do_matter.shtml","linkMd5ListStr":"138457a489f254560e33ba9a33fdc2a5,138457a489f254560e33ba9a33fdc2a5","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"40.8 KB","destSize":"36.5 KB","compressRate":"89.6%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/asset/ssl_og.jpg","sourceStatusCode":200,"destWidth":1200,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn79@2020_6/2020/08/24/22-42-38-039_598409d1611a8260.webp","sourceBytes":49263,"destBytes":30586,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":3045,"convertSpendMs":35,"createdTime":"2020-08-25 06:42:36","host":"europe-59*","referer":"https://hyper-text.org/archives/2018/05/github_pages_https_support.shtml","linkMd5ListStr":"688e199277cbadf0cada5c81b71df845,688e199277cbadf0cada5c81b71df845","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48.1 KB","destSize":"29.9 KB","compressRate":"62.1%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/asset/twitter-ogp.jpg","sourceStatusCode":200,"destWidth":1600,"destHeight":1000,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn55@2020_2/2020/08/24/22-42-38-220_faacd271327a4553.webp","sourceBytes":128079,"destBytes":52394,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":3390,"convertSpendMs":45,"createdTime":"2020-08-25 06:42:36","host":"europe67*","referer":"https://hyper-text.org/archives/2018/05/twitter_keeping_your_account_secure.shtml","linkMd5ListStr":"9a7f2d74eeb796910af82f1dddd60b51,9a7f2d74eeb796910af82f1dddd60b51","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"125.1 KB","destSize":"51.2 KB","compressRate":"40.9%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/asset/ogp-image-privacy.jpg","sourceStatusCode":200,"destWidth":1600,"destHeight":1000,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn75@2020_6/2020/08/24/22-42-38-432_33fbdaf66e81a205.webp","sourceBytes":218250,"destBytes":93690,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":3838,"convertSpendMs":49,"createdTime":"2020-08-25 06:42:36","host":"europe21*","referer":"https://hyper-text.org/archives/2018/02/how_to_do_not_track_setting.shtml","linkMd5ListStr":"8a62e58c3fcc96d1166c86acf090e390,8a62e58c3fcc96d1166c86acf090e390","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"213.1 KB","destSize":"91.5 KB","compressRate":"42.9%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/post/asset/google_chromes_security_indicator_ogp.png","sourceStatusCode":200,"destWidth":640,"destHeight":340,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn71@2020_3/2020/08/24/22-42-39-236_5d197ea5f9440802.webp","sourceBytes":18896,"destBytes":7514,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2109,"convertSpendMs":12,"createdTime":"2020-08-25 06:42:37","host":"us-008*","referer":"https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml","linkMd5ListStr":"04abb702b9890715e78a58d6031857a4,04abb702b9890715e78a58d6031857a4","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.5 KB","destSize":"7.3 KB","compressRate":"39.8%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/amp_stories.png","sourceStatusCode":200,"destWidth":1280,"destHeight":920,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn87@2020_5/2020/08/24/22-42-42-962_5b5d85b3dc5b423d.webp","sourceBytes":200905,"destBytes":31060,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2626,"convertSpendMs":45,"createdTime":"2020-08-25 06:42:41","host":"us-025*","referer":"https://hyper-text.org/archives/2018/02/amp_stories.shtml","linkMd5ListStr":"aa4ebc491ef68a4c2cc73510570d2be5,aa4ebc491ef68a4c2cc73510570d2be5,aa4ebc491ef68a4c2cc73510570d2be5","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"196.2 KB","destSize":"30.3 KB","compressRate":"15.5%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/wacth/~4/zaMafgln7ZY","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn55@2020_6/2020/08/24/22-43-09-585_1fbf79164968ca8e.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":823,"convertSpendMs":4,"createdTime":"2020-08-25 06:43:09","host":"us-008*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/wacth/~4/QEGAyP8GERg","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn67@2020_4/2020/08/24/22-43-09-653_ae356d8f779d8284.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":785,"convertSpendMs":4,"createdTime":"2020-08-25 06:43:09","host":"us-037*","referer":"https://hyper-text.org/archives/2018/02/how_to_do_not_track_setting.shtml","linkMd5ListStr":"8a62e58c3fcc96d1166c86acf090e390","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/imgix-cdn-04-03.png","sourceStatusCode":200,"destWidth":580,"destHeight":130,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn43@2020_2/2020/08/24/22-43-09-641_cbc8b306379d5685.webp","sourceBytes":5694,"destBytes":4420,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1084,"convertSpendMs":5,"createdTime":"2020-08-25 06:43:09","host":"us-55*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.6 KB","destSize":"4.3 KB","compressRate":"77.6%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/wacth/~4/Xx5vdoICXek","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn91@2020_5/2020/08/24/22-43-09-978_30dbd6396135ba7d.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":795,"convertSpendMs":2,"createdTime":"2020-08-25 06:43:09","host":"us-029*","referer":"https://hyper-text.org/archives/2018/02/amp_stories.shtml","linkMd5ListStr":"aa4ebc491ef68a4c2cc73510570d2be5","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/wacth/~4/KEpSXwy19wA","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn99@2020_2/2020/08/24/22-43-10-004_e73224da3c1c2699.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":806,"convertSpendMs":7,"createdTime":"2020-08-25 06:43:09","host":"us-004*","referer":"https://hyper-text.org/archives/2018/07/chrome_68_release_ssl_warning.shtml","linkMd5ListStr":"e09d1ade2545e9796af3e85b48641c7c","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/wacth/~4/0FrJTGZcclE","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn59@2020_3/2020/08/24/22-43-09-637_c5dd9cf23c7b2474.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1177,"convertSpendMs":2,"createdTime":"2020-08-25 06:43:09","host":"europe21*","referer":"https://hyper-text.org/archives/2018/05/twitter_keeping_your_account_secure.shtml","linkMd5ListStr":"9a7f2d74eeb796910af82f1dddd60b51","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/wacth/~4/f7LMLaaIctc","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn84@2020_2/2020/08/24/22-43-09-946_ae2b1684edb31173.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":896,"convertSpendMs":3,"createdTime":"2020-08-25 06:43:09","host":"europe63*","referer":"https://hyper-text.org/archives/2018/02/google_chrome_65_beta_release.shtml","linkMd5ListStr":"2f5ca1a460244fe17731a2a83393039e","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/wacth/~4/vOqARrprryA","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn16@2020_1/2020/08/24/22-43-10-107_f579c60e3b1b6749.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":825,"convertSpendMs":7,"createdTime":"2020-08-25 06:43:10","host":"us-021*","referer":"https://hyper-text.org/archives/2018/05/github_pages_https_support.shtml","linkMd5ListStr":"688e199277cbadf0cada5c81b71df845","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/2018-02-24-13.49.jpg?fit=crop&w=200&h=200","sourceStatusCode":200,"destWidth":200,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn95@2020_1/2020/08/24/22-43-10-188_6dc474b4fa13d34b.webp","sourceBytes":7607,"destBytes":10236,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":967,"convertSpendMs":6,"createdTime":"2020-08-25 06:43:09","host":"us-016*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.4 KB","destSize":"10 KB","compressRate":"134.6%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/wacth/~4/MaJwwtbbjVw","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn59@2020_2/2020/08/24/22-43-10-385_77b0cee36b4d48cf.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":771,"convertSpendMs":5,"createdTime":"2020-08-25 06:43:10","host":"us-016*","referer":"https://hyper-text.org/archives/2018/05/android_p_dns_over_tls_support.shtml","linkMd5ListStr":"0214211fb4c6b1162306a26063e725dc","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/wacth/~4/fwkDnjeMB6c","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn55@2020_4/2020/08/24/22-43-10-367_fb3ae45a4d53c466.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":781,"convertSpendMs":3,"createdTime":"2020-08-25 06:43:10","host":"us-029*","referer":"https://hyper-text.org/archives/2018/05/google_analytics_cookie_opt_in.shtml","linkMd5ListStr":"43080e80aed8e0d3d9cea671da981bb4","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/imgix-icon-160x160.png","sourceStatusCode":200,"destWidth":160,"destHeight":160,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn3@2020_3/2020/08/24/22-43-10-259_4728b0dcac43a3c8.webp","sourceBytes":5348,"destBytes":4186,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1098,"convertSpendMs":5,"createdTime":"2020-08-25 06:43:10","host":"europe67*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.2 KB","destSize":"4.1 KB","compressRate":"78.3%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/imgix-cdn-06a.png","sourceStatusCode":200,"destWidth":400,"destHeight":230,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn63@2020_1/2020/08/24/22-43-10-507_3837f4333dfd020b.webp","sourceBytes":6552,"destBytes":5112,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":874,"convertSpendMs":8,"createdTime":"2020-08-25 06:43:10","host":"us-004*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.4 KB","destSize":"5 KB","compressRate":"78%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/2018-02-24-13.49.jpg?fit=crop&w=200&h=200&border=15,55ff0000","sourceStatusCode":200,"destWidth":200,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn40@2020_2/2020/08/24/22-43-10-532_7bac24c6649db454.webp","sourceBytes":7755,"destBytes":10134,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1050,"convertSpendMs":5,"createdTime":"2020-08-25 06:43:10","host":"us-012*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.6 KB","destSize":"9.9 KB","compressRate":"130.7%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/amp-logo.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn72@2020_1/2020/08/24/22-43-10-606_6acf7a8c14e49906.svg","sourceBytes":308,"destBytes":308,"feedId":5835,"totalSpendMs":1634,"convertSpendMs":0,"createdTime":"2020-08-25 06:43:09","host":"us-025*","referer":"https://hyper-text.org/archives/2018/02/amp_stories.shtml","linkMd5ListStr":"aa4ebc491ef68a4c2cc73510570d2be5","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"308 B","destSize":"308 B","compressRate":"100%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/wacth/~4/48IGv4reVrc","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn84@2020_5/2020/08/24/22-43-10-596_2be45d87b812a822.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":802,"convertSpendMs":8,"createdTime":"2020-08-25 06:43:10","host":"us-008*","referer":"https://hyper-text.org/archives/2018/05/chrome_66_improving_autoplay.shtml","linkMd5ListStr":"41063cdbcb4f05036ee0489493441a31","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/imgix-cdn-06b.png","sourceStatusCode":200,"destWidth":400,"destHeight":230,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn76@2020_3/2020/08/24/22-43-10-633_d1e10d12d26843a7.webp","sourceBytes":6341,"destBytes":4954,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":841,"convertSpendMs":5,"createdTime":"2020-08-25 06:43:10","host":"us-033*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.2 KB","destSize":"4.8 KB","compressRate":"78.1%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/imgix-cdn-04-02.png","sourceStatusCode":200,"destWidth":580,"destHeight":130,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn51@2020_5/2020/08/24/22-43-10-604_18c18e4d0fe528e4.webp","sourceBytes":4904,"destBytes":4076,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1088,"convertSpendMs":28,"createdTime":"2020-08-25 06:43:10","host":"us-51*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.8 KB","destSize":"4 KB","compressRate":"83.1%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/wacth/~4/5kZkFk2b2lI","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn96@2020_1/2020/08/24/22-43-10-821_3c03ac25827fcb34.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":745,"convertSpendMs":3,"createdTime":"2020-08-25 06:43:10","host":"us-037*","referer":"https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml","linkMd5ListStr":"04abb702b9890715e78a58d6031857a4","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/imgix-cdn-04-01.png","sourceStatusCode":200,"destWidth":580,"destHeight":130,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn44@2020_4/2020/08/24/22-43-10-662_0ff77f94f81ab68f.webp","sourceBytes":3444,"destBytes":2808,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1125,"convertSpendMs":6,"createdTime":"2020-08-25 06:43:10","host":"europe-25*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.4 KB","destSize":"2.7 KB","compressRate":"81.5%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/wacth/~4/yn81twa1n48","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn99@2020_3/2020/08/24/22-43-10-853_45364288e90507a7.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":785,"convertSpendMs":2,"createdTime":"2020-08-25 06:43:10","host":"us-025*","referer":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml","linkMd5ListStr":"3553efdf612ba97c4e909f05ee415239","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/android-robot-logo.png","sourceStatusCode":200,"destWidth":200,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn87@2020_1/2020/08/24/22-43-10-888_5088f9d9b257aa6c.webp","sourceBytes":3246,"destBytes":6148,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1761,"convertSpendMs":47,"createdTime":"2020-08-25 06:43:09","host":"us-51*","referer":"https://hyper-text.org/archives/2018/05/android_p_dns_over_tls_support.shtml","linkMd5ListStr":"0214211fb4c6b1162306a26063e725dc","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.2 KB","destSize":"6 KB","compressRate":"189.4%"},{"code":1,"isDone":false,"source":"https://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B079T2X2D7&Format=_SL250_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=burnworksdesi-22","sourceStatusCode":200,"destWidth":250,"destHeight":157,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn71@2020_3/2020/08/24/22-43-10-938_f2e9fe01a4284d42.webp","sourceBytes":4900,"destBytes":4070,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1173,"convertSpendMs":4,"createdTime":"2020-08-25 06:43:10","host":"us-55*","referer":"https://hyper-text.org/archives/2018/05/oculus_go.shtml","linkMd5ListStr":"5df98bbdfc5827dbea040a991c4df4c6","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.8 KB","destSize":"4 KB","compressRate":"83.1%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/chrome_logo_120.png","sourceStatusCode":200,"destWidth":120,"destHeight":120,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn7@2020_4/2020/08/24/22-43-10-966_339d7329c5105b94.webp","sourceBytes":6318,"destBytes":2494,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1648,"convertSpendMs":3,"createdTime":"2020-08-25 06:43:10","host":"us-55*","referer":"https://hyper-text.org/archives/2018/07/chrome_68_release_ssl_warning.shtml","linkMd5ListStr":"04abb702b9890715e78a58d6031857a4,2f5ca1a460244fe17731a2a83393039e,41063cdbcb4f05036ee0489493441a31,e09d1ade2545e9796af3e85b48641c7c","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.2 KB","destSize":"2.4 KB","compressRate":"39.5%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/google_chromes_security_indicator.png","sourceStatusCode":200,"destWidth":640,"destHeight":310,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn19@2020_1/2020/08/24/22-43-10-982_9c1fb317348b8fb5.webp","sourceBytes":5212,"destBytes":6848,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1648,"convertSpendMs":8,"createdTime":"2020-08-25 06:43:10","host":"us-008*","referer":"https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml","linkMd5ListStr":"04abb702b9890715e78a58d6031857a4","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.1 KB","destSize":"6.7 KB","compressRate":"131.4%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/imgix-cdn-02.png","sourceStatusCode":200,"destWidth":1260,"destHeight":1500,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn51@2020_4/2020/08/24/22-43-09-728_5cd55a72ea09885a.webp","sourceBytes":57265,"destBytes":44064,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1140,"convertSpendMs":81,"createdTime":"2020-08-25 06:43:09","host":"us-021*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.9 KB","destSize":"43 KB","compressRate":"76.9%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/wacth/~4/rDo8vn0V_5E","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn24@2020_2/2020/08/24/22-43-11-069_8921c5b9a9c69be9.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":776,"convertSpendMs":3,"createdTime":"2020-08-25 06:43:11","host":"us-016*","referer":"https://hyper-text.org/archives/2018/05/oculus_go.shtml","linkMd5ListStr":"5df98bbdfc5827dbea040a991c4df4c6","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/google_chromes_security_indicator_02.png","sourceStatusCode":200,"destWidth":580,"destHeight":150,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn64@2020_2/2020/08/24/22-43-10-987_c69b166e06e4da16.webp","sourceBytes":2543,"destBytes":3570,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2089,"convertSpendMs":5,"createdTime":"2020-08-25 06:43:09","host":"europe-59*","referer":"https://hyper-text.org/archives/2018/05/google_chromes_security_indicator.shtml","linkMd5ListStr":"04abb702b9890715e78a58d6031857a4","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.5 KB","destSize":"3.5 KB","compressRate":"140.4%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/googlemail-128.png","sourceStatusCode":200,"destWidth":128,"destHeight":128,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn32@2020_6/2020/08/24/22-43-11-157_3b5df2c39b676705.webp","sourceBytes":4860,"destBytes":2136,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1635,"convertSpendMs":5,"createdTime":"2020-08-25 06:43:10","host":"us-037*","referer":"https://hyper-text.org/archives/2018/04/phishing_risk_gmail_dots_do_matter.shtml","linkMd5ListStr":"138457a489f254560e33ba9a33fdc2a5","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.7 KB","destSize":"2.1 KB","compressRate":"44%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/gulp-quick-start-02.png?border=4,60CCCCCC","sourceStatusCode":200,"destWidth":580,"destHeight":500,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn19@2020_6/2020/08/24/22-43-11-086_81d90f5f166d453b.webp","sourceBytes":35332,"destBytes":31062,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":980,"convertSpendMs":16,"createdTime":"2020-08-25 06:43:10","host":"us-029*","referer":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml","linkMd5ListStr":"3553efdf612ba97c4e909f05ee415239","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.5 KB","destSize":"30.3 KB","compressRate":"87.9%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/oculus-go-07.png","sourceStatusCode":200,"destWidth":1160,"destHeight":1228,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn47@2020_4/2020/08/24/22-43-10-980_bef193fb2204fea3.webp","sourceBytes":208104,"destBytes":107572,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2466,"convertSpendMs":51,"createdTime":"2020-08-25 06:43:09","host":"us-033*","referer":"https://hyper-text.org/archives/2018/05/oculus_go.shtml","linkMd5ListStr":"5df98bbdfc5827dbea040a991c4df4c6","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"203.2 KB","destSize":"105.1 KB","compressRate":"51.7%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/2018-02-24-13.49.jpg?fit=crop&w=200&h=200&border=15,55FF0000&txt=FOOTBALL!&txtsize=32&txtclr=ffffff&txtalign=top,center&txtpad=40&txtfont=Futura%20Condensed%20Medium","sourceStatusCode":200,"destWidth":200,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn28@2020_5/2020/08/24/22-43-11-208_19d01ffab9707951.webp","sourceBytes":8326,"destBytes":10068,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":833,"convertSpendMs":11,"createdTime":"2020-08-25 06:43:11","host":"us-004*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.1 KB","destSize":"9.8 KB","compressRate":"120.9%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/gulp-quick-start-01.png?border=4,60CCCCCC","sourceStatusCode":200,"destWidth":1160,"destHeight":700,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn15@2020_1/2020/08/24/22-43-11-118_17c9ffc718364343.webp","sourceBytes":60179,"destBytes":50794,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1115,"convertSpendMs":64,"createdTime":"2020-08-25 06:43:10","host":"us-51*","referer":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml","linkMd5ListStr":"3553efdf612ba97c4e909f05ee415239","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"58.8 KB","destSize":"49.6 KB","compressRate":"84.4%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/amp_stories-enable.png","sourceStatusCode":200,"destWidth":1160,"destHeight":860,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn12@2020_4/2020/08/24/22-43-11-230_ed41481db74146b3.webp","sourceBytes":21691,"destBytes":19650,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2006,"convertSpendMs":80,"createdTime":"2020-08-25 06:43:10","host":"us-033*","referer":"https://hyper-text.org/archives/2018/02/amp_stories.shtml","linkMd5ListStr":"aa4ebc491ef68a4c2cc73510570d2be5","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.2 KB","destSize":"19.2 KB","compressRate":"90.6%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/wacth/~4/GaPKX0A0Myk","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn44@2020_5/2020/08/24/22-43-11-313_5b64432212eb28ea.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":785,"convertSpendMs":2,"createdTime":"2020-08-25 06:43:11","host":"us-008*","referer":"https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml","linkMd5ListStr":"440bb8cd86a23eb8671a33224d89b17d","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/2018-02-24-13.49.jpg","sourceStatusCode":200,"destWidth":1146,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn48@2020_5/2020/08/24/22-43-10-632_12754e933fa7eb30.webp","sourceBytes":118377,"destBytes":125110,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1738,"convertSpendMs":51,"createdTime":"2020-08-25 06:43:10","host":"europe63*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"115.6 KB","destSize":"122.2 KB","compressRate":"105.7%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/imgix-cdn-09.png","sourceStatusCode":200,"destWidth":580,"destHeight":260,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn91@2020_6/2020/08/24/22-43-11-187_af7e1b143c96e9ad.webp","sourceBytes":10884,"destBytes":7534,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1313,"convertSpendMs":7,"createdTime":"2020-08-25 06:43:10","host":"europe-59*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.6 KB","destSize":"7.4 KB","compressRate":"69.2%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/wacth/~4/eYpdzTkPC9I","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn60@2020_6/2020/08/24/22-43-11-406_933b99d5616edd10.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":856,"convertSpendMs":2,"createdTime":"2020-08-25 06:43:11","host":"us-037*","referer":"https://hyper-text.org/archives/2018/04/phishing_risk_gmail_dots_do_matter.shtml","linkMd5ListStr":"138457a489f254560e33ba9a33fdc2a5","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/imgix-cdn-05.png","sourceStatusCode":200,"destWidth":1260,"destHeight":530,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn45@2020_2/2020/08/24/22-43-11-456_9ce399c42fb52549.webp","sourceBytes":30317,"destBytes":25112,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":995,"convertSpendMs":21,"createdTime":"2020-08-25 06:43:11","host":"us-007*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.6 KB","destSize":"24.5 KB","compressRate":"82.8%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/twitter_bird_light_bgs.png","sourceStatusCode":200,"destWidth":160,"destHeight":160,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn24@2020_5/2020/08/24/22-43-11-404_670329624c2e90fe.webp","sourceBytes":2452,"destBytes":2566,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2135,"convertSpendMs":4,"createdTime":"2020-08-25 06:43:10","host":"europe21*","referer":"https://hyper-text.org/archives/2018/05/twitter_keeping_your_account_secure.shtml","linkMd5ListStr":"9a7f2d74eeb796910af82f1dddd60b51","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.4 KB","destSize":"2.5 KB","compressRate":"104.6%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/gulp-logo-300.png","sourceStatusCode":200,"destWidth":300,"destHeight":300,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn79@2020_5/2020/08/24/22-43-11-497_7f8ef4e47dff54b3.webp","sourceBytes":3650,"destBytes":8086,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1782,"convertSpendMs":10,"createdTime":"2020-08-25 06:43:10","host":"us-021*","referer":"https://hyper-text.org/archives/2018/03/gulp_quick_start.shtml","linkMd5ListStr":"3553efdf612ba97c4e909f05ee415239","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.6 KB","destSize":"7.9 KB","compressRate":"221.5%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/ga_logo_300.png","sourceStatusCode":200,"destWidth":300,"destHeight":300,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn28@2020_5/2020/08/24/22-43-11-434_06a31f1aca921d6f.webp","sourceBytes":3947,"destBytes":10480,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2131,"convertSpendMs":8,"createdTime":"2020-08-25 06:43:10","host":"europe-59*","referer":"https://hyper-text.org/archives/2018/05/google_analytics_cookie_opt_in.shtml","linkMd5ListStr":"43080e80aed8e0d3d9cea671da981bb4","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.9 KB","destSize":"10.2 KB","compressRate":"265.5%"},{"code":1,"isDone":false,"source":"https://burnworks.imgix.net/img/post/imgix-cdn-03.png","sourceStatusCode":200,"destWidth":1260,"destHeight":680,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn67@2020_6/2020/08/24/22-43-11-616_003d9cac45553170.webp","sourceBytes":49056,"destBytes":37410,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1081,"convertSpendMs":62,"createdTime":"2020-08-25 06:43:11","host":"us-012*","referer":"https://hyper-text.org/archives/2018/03/imgix_cdn.shtml","linkMd5ListStr":"dbf06277b103a672aa31ee0b7979826c","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.9 KB","destSize":"36.5 KB","compressRate":"76.3%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/oculus-go-01.jpg","sourceStatusCode":200,"destWidth":1160,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn35@2020_3/2020/08/24/22-43-11-735_eaf69559f237dddd.webp","sourceBytes":102355,"destBytes":71142,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2372,"convertSpendMs":38,"createdTime":"2020-08-25 06:43:10","host":"us-025*","referer":"https://hyper-text.org/archives/2018/05/oculus_go.shtml","linkMd5ListStr":"5df98bbdfc5827dbea040a991c4df4c6","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"100 KB","destSize":"69.5 KB","compressRate":"69.5%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/css-paint-api-demo.png","sourceStatusCode":200,"destWidth":1160,"destHeight":760,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn79@2020_4/2020/08/24/22-43-11-476_cd5ba96115de29e7.webp","sourceBytes":22225,"destBytes":36086,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2869,"convertSpendMs":27,"createdTime":"2020-08-25 06:43:09","host":"europe-25*","referer":"https://hyper-text.org/archives/2018/02/google_chrome_65_beta_release.shtml","linkMd5ListStr":"2f5ca1a460244fe17731a2a83393039e","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.7 KB","destSize":"35.2 KB","compressRate":"162.4%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/oculus-go-06.png","sourceStatusCode":200,"destWidth":1160,"destHeight":1228,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn76@2020_5/2020/08/24/22-43-11-774_78577d1829a8365d.webp","sourceBytes":509894,"destBytes":140546,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":3091,"convertSpendMs":76,"createdTime":"2020-08-25 06:43:09","host":"us-012*","referer":"https://hyper-text.org/archives/2018/05/oculus_go.shtml","linkMd5ListStr":"5df98bbdfc5827dbea040a991c4df4c6","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"497.9 KB","destSize":"137.3 KB","compressRate":"27.6%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/google-chrome-68-ssl-02.png","sourceStatusCode":200,"destWidth":580,"destHeight":100,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn36@2020_4/2020/08/24/22-43-12-077_813ed6781bd5df9b.webp","sourceBytes":12210,"destBytes":7860,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1666,"convertSpendMs":5,"createdTime":"2020-08-25 06:43:11","host":"us-55*","referer":"https://hyper-text.org/archives/2018/07/chrome_68_release_ssl_warning.shtml","linkMd5ListStr":"e09d1ade2545e9796af3e85b48641c7c","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"11.9 KB","destSize":"7.7 KB","compressRate":"64.4%"},{"code":1,"isDone":false,"source":"https://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=B071W1WLWS&Format=_SL250_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=burnworksdesi-22","sourceStatusCode":200,"destWidth":250,"destHeight":250,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn63@2020_2/2020/08/24/22-43-11-972_ac2784dfc1863e51.webp","sourceBytes":3016,"destBytes":2164,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1477,"convertSpendMs":4,"createdTime":"2020-08-25 06:43:11","host":"us-025*","referer":"https://hyper-text.org/archives/2018/05/oculus_go.shtml","linkMd5ListStr":"5df98bbdfc5827dbea040a991c4df4c6","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.9 KB","destSize":"2.1 KB","compressRate":"71.8%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/github-mark-120px.png","sourceStatusCode":200,"destWidth":120,"destHeight":120,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn40@2020_4/2020/08/24/22-43-12-109_2a0ebeab0939014f.webp","sourceBytes":4268,"destBytes":2200,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":1713,"convertSpendMs":5,"createdTime":"2020-08-25 06:43:11","host":"us-033*","referer":"https://hyper-text.org/archives/2018/05/github_pages_https_support.shtml","linkMd5ListStr":"688e199277cbadf0cada5c81b71df845","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.2 KB","destSize":"2.1 KB","compressRate":"51.5%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/safari-logo-360.png","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn7@2020_3/2020/08/24/22-43-12-345_0bad5a9eaed88cfc.webp","sourceBytes":33193,"destBytes":18102,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2471,"convertSpendMs":9,"createdTime":"2020-08-25 06:43:10","host":"europe-25*","referer":"https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml","linkMd5ListStr":"440bb8cd86a23eb8671a33224d89b17d","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.4 KB","destSize":"17.7 KB","compressRate":"54.5%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/how-to-do-not-track-setting-01.png","sourceStatusCode":200,"destWidth":1125,"destHeight":1280,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn3@2020_1/2020/08/24/22-43-12-587_76d9a7d2fefa0de8.webp","sourceBytes":239896,"destBytes":71974,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2616,"convertSpendMs":90,"createdTime":"2020-08-25 06:43:10","host":"us-012*","referer":"https://hyper-text.org/archives/2018/02/how_to_do_not_track_setting.shtml","linkMd5ListStr":"8a62e58c3fcc96d1166c86acf090e390","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"234.3 KB","destSize":"70.3 KB","compressRate":"30%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/safari_ssl_warning.png","sourceStatusCode":200,"destWidth":1160,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn12@2020_3/2020/08/24/22-43-12-702_8a7032f17f90fc11.webp","sourceBytes":89560,"destBytes":24406,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2748,"convertSpendMs":38,"createdTime":"2020-08-25 06:43:10","host":"europe63*","referer":"https://hyper-text.org/archives/2018/03/safari_ssl_warning.shtml","linkMd5ListStr":"440bb8cd86a23eb8671a33224d89b17d","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"87.5 KB","destSize":"23.8 KB","compressRate":"27.3%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/google-chrome-68-ssl-01.png","sourceStatusCode":200,"destWidth":580,"destHeight":100,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn56@2020_2/2020/08/24/22-43-12-685_fa0c97dfe512df7e.webp","sourceBytes":8452,"destBytes":5556,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2311,"convertSpendMs":5,"createdTime":"2020-08-25 06:43:11","host":"europe-59*","referer":"https://hyper-text.org/archives/2018/07/chrome_68_release_ssl_warning.shtml","linkMd5ListStr":"e09d1ade2545e9796af3e85b48641c7c","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.3 KB","destSize":"5.4 KB","compressRate":"65.7%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/android-p-dns-over-tls-support.png","sourceStatusCode":200,"destWidth":900,"destHeight":758,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn52@2020_1/2020/08/24/22-43-12-948_054ce298a9c72ee5.webp","sourceBytes":22976,"destBytes":20570,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2514,"convertSpendMs":24,"createdTime":"2020-08-25 06:43:11","host":"europe21*","referer":"https://hyper-text.org/archives/2018/05/android_p_dns_over_tls_support.shtml","linkMd5ListStr":"0214211fb4c6b1162306a26063e725dc","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.4 KB","destSize":"20.1 KB","compressRate":"89.5%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/oculus-go-03.jpg","sourceStatusCode":200,"destWidth":1160,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn67@2020_3/2020/08/24/22-43-12-553_c75cd36f25e3e7a3.webp","sourceBytes":147411,"destBytes":115946,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":3432,"convertSpendMs":54,"createdTime":"2020-08-25 06:43:10","host":"europe67*","referer":"https://hyper-text.org/archives/2018/05/oculus_go.shtml","linkMd5ListStr":"5df98bbdfc5827dbea040a991c4df4c6","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"144 KB","destSize":"113.2 KB","compressRate":"78.7%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/oculus-go-02.jpg","sourceStatusCode":200,"destWidth":1160,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn88@2020_1/2020/08/24/22-43-12-705_ec6e657a46dcf3f2.webp","sourceBytes":187494,"destBytes":149684,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":3527,"convertSpendMs":50,"createdTime":"2020-08-25 06:43:10","host":"europe21*","referer":"https://hyper-text.org/archives/2018/05/oculus_go.shtml","linkMd5ListStr":"5df98bbdfc5827dbea040a991c4df4c6","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"183.1 KB","destSize":"146.2 KB","compressRate":"79.8%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/oculus-go-08.jpg","sourceStatusCode":200,"destWidth":580,"destHeight":320,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn71@2020_3/2020/08/24/22-43-13-424_478d6fc5b9581f84.webp","sourceBytes":45402,"destBytes":29182,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":2819,"convertSpendMs":11,"createdTime":"2020-08-25 06:43:11","host":"europe-25*","referer":"https://hyper-text.org/archives/2018/05/oculus_go.shtml","linkMd5ListStr":"5df98bbdfc5827dbea040a991c4df4c6","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"44.3 KB","destSize":"28.5 KB","compressRate":"64.3%"},{"code":1,"isDone":false,"source":"https://hyper-text.org/img/post/oculus-go-04.jpg","sourceStatusCode":200,"destWidth":1160,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn31@2020_3/2020/08/24/22-43-13-137_27ca636790998d44.webp","sourceBytes":158379,"destBytes":138716,"targetWebpQuality":75,"feedId":5835,"totalSpendMs":3438,"convertSpendMs":54,"createdTime":"2020-08-25 06:43:11","host":"europe67*","referer":"https://hyper-text.org/archives/2018/05/oculus_go.shtml","linkMd5ListStr":"5df98bbdfc5827dbea040a991c4df4c6","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"154.7 KB","destSize":"135.5 KB","compressRate":"87.6%"}],"successGithubMap":{"myreaderx14":3,"myreaderx8":2,"myreaderx7":3,"myreaderx15":3,"myreaderx16":3,"myreaderx6":1,"myreaderx32":4,"myreaderx4":2,"myreaderx10":1,"myreaderx11":2,"myreaderx3":3,"myreaderx33":3,"myreaderx12":2,"myreaderx2":2,"myreaderx1":3,"myreaderx13":2,"myreaderx30":3,"myreaderx31":3,"myreaderx18":2,"myreaderx19":3,"myreaderx":3,"myreaderx25":4,"myreaderx27":2,"myreaderx21":2,"myreaderx22":2,"myreaderx23":2,"myreaderx24":2,"myreaderx5oss":3,"myreaderx29":3},"failGithubMap":{}}