{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-05-27 23:46:31","updatedTime":"2021-05-27 23:46:31","title":"撸了一个基于 vue3,vite2,element plus 的 admin 模板","link":"https://www.v2ex.com/t/779629#reply2","description":"\n\t<p>vue3,vite2 我就不吹了,用过的都说好.话不多说,上链接:</p>\n<p><a href=\"http://admin.fuep.net\" rel=\"nofollow\">在线预览</a></p>\n<p><a href=\"https://gitee.com/huoye/fuep-template\" rel=\"nofollow\">仓库地址</a></p>\n<p>这个模板我叫它<strong>fuep admin</strong>,如果对你有帮助的话,记得给个 star 哦.</p>\n<h2>快速开始</h2>\n<p>clone 仓库代码,建议 node 版本 12+</p>\n<pre><code>npm i\nnpm run dev\n</code></pre>\n<h2>vscode 插件</h2>\n<ul>\n<li>如果你使用了<code>&#60; script setup&#62;</code>，则需要添加 Volar</li>\n<li>WindiCSS IntelliSense，用于 windicss 的样式提示</li>\n</ul>\n<h2>工程特性一览</h2>\n<ul>\n<li>自动生成路由 </li>\n<li>自动导入组件</li>\n<li>支持多个图标库,图标按需加载</li>\n<li>支持 tailwindcss</li>\n<li>明暗主题切换</li>\n<li>导航状态持久化</li>\n<li>多环境配置</li>\n<li>支持 svg 组件</li>\n<li>物料库</li>\n</ul>\n<h3>自动生成路由</h3>\n<p>用过 nuxt 的同学肯定知道,路由可以根据你的文件目录生成,这样你就不用在每次新增页面的时候往 route 里面加配置.vite2 当然也有自动生成路由的插件,它支持生成嵌套路由,动态路由等.</p>\n<p><a href=\"https://www.npmjs.com/package/vite-plugin-pages\" rel=\"nofollow\">vite-plugin-pages</a></p>\n<p>跟自动生成路由搭配的是,自动生成 layout,你可以通过配置 route,指定使用任意 layout.例如,在后台管理系统中,layout 通常由 header,aside 组成.但是像 login 这样的页面就没有 layout.假设,index.vue 需要 layout,login 不需要 layout 你可以这样做:</p>\n<pre><code class=\"language-html\">&#60;!-- layout/default.vue --&#62;\n&#60;header /&#62;\n&#60;aside /&#62;\n&#60;router-view&#62;&#60;/router-view&#62;\n</code></pre>\n<pre><code class=\"language-html\">&#60;!-- layout/pure.vue --&#62;\n&#60;router-view&#62;&#60;/router-view&#62;\n</code></pre>\n<pre><code class=\"language-html\">&#60;!-- index.vue --&#62;\n&#60;template&#62;Index&#60;/template&#62;\n&#60;route lang=\"yaml\"&#62;\n    meta:\n      layout: default\n  &#60;/route&#62;\n</code></pre>\n<pre><code class=\"language-html\">&#60;!-- login.vue --&#62;\n&#60;template&#62;Login&#60;/template&#62;\n&#60;route lang=\"yaml\"&#62;\n    meta:\n      layout: pure\n  &#60;/route&#62;\n</code></pre>\n<h3>自动导入组件</h3>\n<p>通常,我们使用 componets 中定义的公共组件,需要这样做:</p>\n<pre><code class=\"language-js\">&#60;template&#62;\n    &#60;helloWorld/&#62;\n&#60;/template&#62;\n&#60;script&#62;\nimport { helloWorld } from '@/components/helloWorld.vue'\ndefault export {\n    componetns: {\n       helloWorld \n    }\n}\n&#60;/script&#62;\n</code></pre>\n<p>现在你只需要:</p>\n<pre><code class=\"language-html\">&#60;template&#62;\n    &#60;helloWorld/&#62;\n&#60;/template&#62;\n</code></pre>\n<p>插件会检测你在 template 中使用到的组件,自动 import 并注册到 componets 中.当然,通过配置你也可以指定其它目录的组件自动导入.</p>\n<p><a href=\"https://www.npmjs.com/package/vite-plugin-components\" rel=\"nofollow\">vite-plugin-components</a></p>\n<h3>支持近百种图标库</h3>\n<p>这是支持的<a href=\"https://icones.js.org/\" rel=\"nofollow\">图标库</a>,图标是按需引入的,不用担心它的体积.你可以这样使用它:</p>\n<pre><code class=\"language-html\">&#60;script setup&#62;\nimport IconAccessibility from 'virtual:vite-icons/carbon/accessibility'\nimport IconAccountBox from 'virtual:vite-icons/mdi/account-box'\n&#60;/script&#62;\n\n&#60;template&#62;\n  &#60;icon-accessibility/&#62;\n  &#60;icon-account-box style=\"font-size: 2em; color: red\"/&#62;\n&#60;/template&#62;\n</code></pre>\n<p>什么?每个图标都要 import 这也要烦了吧!开个玩笑,我们使用了<strong>vite-plugin-components</strong>之后,你只需要这样:</p>\n<pre><code class=\"language-html\">&#60;template&#62;\n  &#60;i-carbon-accessibility/&#62;\n  &#60;i-mdi-account-box style=\"font-size: 2em; color: red\"/&#62;\n&#60;/template&#62;\n</code></pre>\n<p><a href=\"https://www.npmjs.com/package/vite-plugin-icons\" rel=\"nofollow\">vite-plugin-icons</a></p>\n<h3>支持 windicss</h3>\n<p><strong>windicss</strong>允许你通过原子 class 的方式来组织样式文件.常规情况下,写一个按钮的样式:</p>\n<pre><code class=\"language-html\">&#60;template&#62;\n    &#60;div class=\"btn\"&#62;按钮&#60;/div&#62;\n&#60;/template&#62;\n&#60;style scoped&#62;\n.btn{\n    color: #fff;\n    background: #333\n    padding: 12px 24px;\n}\n&#60;/style&#62;\n</code></pre>\n<p>使用 windcss 之后,你可以这样干:</p>\n<pre><code class=\"language-html\">&#60;template&#62;\n    &#60;div class=\"px-4 py-2 text-white bg-gray-700\"&#62;按钮&#60;/div&#62;\n&#60;/template&#62;\n</code></pre>\n<p>windicss 通过扫描文件的方式,来找到你使用到了哪些样式,并且按需引入他们,所以完全不用担心样式体积,而且随着你的项目越来越大,样式文件体积不会出现爆炸增长并且更易于维护.</p>\n<p>搭配 vscode 插件<strong>WindiCSS IntelliSense</strong>,能更快地帮助你完成这些重复的样式,再也不用为 class 命名而烦恼了.</p>\n<h3>明暗主题切换</h3>\n<p>通过给 html 标签添加<code>class=\"dark\"</code>,开启暗黑模式.这部分的逻辑我已经帮你写好了.dark theme 是这样做的:</p>\n<pre><code class=\"language-html\">&#60;p class=\"text-gray-700 bg-white dark:text-white dark:bg-gray-800\"&#62;theme&#60;/p&#62;\n</code></pre>\n<p>通常情况下,p 标签会使用白底灰字,使用 dark theme 时,dark 选择器后的样式优先生效,这时是灰底白字.</p>\n<p>这是效果图:</p>\n<p><img alt=\"2021-05-27 17.13.40.gif\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3874b722a7644a4b8dc801cff8ea8c3c%7Etplv-k3u1fbpfcp-watermark.image\"/></p>\n<h3>导航状态持久化</h3>\n<p>前面我们说过,你可以通过 route 标签来配置 layout.同样地,你也可以通过 route 标签来配置页面层级,和它的名字.</p>\n<pre><code class=\"language-html\">&#60;route lang=\"yaml\"&#62;\n    meta:\n      level: 1\n      name: 'Home'\n      layout: default\n  &#60;/route&#62;\n</code></pre>\n<p>面包屑会根据 level 进行排序,这种面包屑不是严格意义上的记录用户的浏览路径,而是根据你对产品结构的层级定义来的.一般来说,列表页的 level 如果为 1,那么详情页的 level 就为 2.</p>\n<p>面包屑导航的状态存在 vuex 中,使用<strong>vuex-persistedstate</strong>来做持久化,你可以试着刷新页面,导航状态并不会丢失.</p>\n<h3>多环境配置</h3>\n<p>vite2 中的多环境配置,跟 vue-cli 差不多,主要是通过,.env 文件来控制的,不再赘述.\n如果你不了解,可以看<a href=\"https://cn.vitejs.dev/guide/env-and-mode.html\" rel=\"nofollow\">环境变量与模式</a></p>\n<h3>svg 引入</h3>\n<p>你可以把一个 svg 文件,当作一个组件使用:</p>\n<pre><code class=\"language-html\">&#60;template&#62;\n        &#60;Notfound /&#62;\n&#60;/template&#62;\n&#60;script lang=\"ts\" setup&#62;\nimport Notfound from '../assets/404.svg'\n&#60;/script&#62;\n</code></pre>\n<blockquote>\n<p>使用 script setup 语法糖,会自动在 components 里面注册</p>\n</blockquote>\n<h3>物料库</h3>\n<p>你可以在这 fuep admin 中,使用<a href=\"http://www.fuep.net\" rel=\"nofollow\">fuep</a>物料市场中的物料,而不需要做任何配置.假如你不喜欢 fuep admin 中已有的登录页,你可以在物料市场中找一个你喜欢的物料,点击生成代码,这些代码可以直接使用到你的 login.vue 中.</p>\n<p><img alt=\"WechatIMG1.png\" class=\"embedded_image\" loading=\"lazy\" referrerpolicy=\"no-referrer\" rel=\"noreferrer\" src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7b7b6e0ad002400a8d99f337490abd82%7Etplv-k3u1fbpfcp-watermark.image\"/></p>\n<h3>最后</h3>\n<p>fuep admin 我会一直维护它,如果你发现了一个 bug,或者想要新的功能可以给我反馈.</p>\n\n\t","descriptionType":"html","publishedDate":"Thu, 27 May 2021 09:53:05 +0000","feedId":10203,"bgimg":"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3874b722a7644a4b8dc801cff8ea8c3c%7Etplv-k3u1fbpfcp-watermark.image","linkMd5":"e1cb6f68340c90e2f0f999c051bcbac2","author":"huoye","articleImgCdnMap":{"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3874b722a7644a4b8dc801cff8ea8c3c%7Etplv-k3u1fbpfcp-watermark.image":null,"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7b7b6e0ad002400a8d99f337490abd82%7Etplv-k3u1fbpfcp-watermark.image":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn95@2020_3/2021/05/27/15-48-32-645_b17e1164e1c7a6b7.webp"},"publishedOrCreatedDate":1622130391593}],"record":{"createdTime":"2021-05-27 23:46:31","updatedTime":"2021-05-27 23:46:31","feedId":10203,"fetchDate":"Thu, 27 May 2021 15:46:31 +0000","fetchMs":425,"handleMs":13,"totalMs":243424,"newArticles":0,"totalArticles":50,"status":1,"type":0,"ip":"245d88d7b2d8f26704713c23b090d029","hostName":"us-005*","requestId":"36206071edd540eead13d8ea877a43a4_10203","contentType":"application/atom+xml;charset=UTF-8","totalBytes":124752,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":2,"articlesImgsGithubTotal":1,"successGithubMap":{"myreaderx13":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:35:43","updatedTime":"2020-09-05 16:13:49","id":10203,"name":"V2EX - 创意","url":"http://www.v2ex.com/feed/tab/creative.xml","subscriber":302,"website":null,"icon":"https://www.v2ex.com/static/img/v2ex_192.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn24@2020_2/2020/09/05/08-10-41-723_105a164e5dccb255.png","description":"way to explore","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-05-27 23:50:34","updatedTime":"2021-05-27 23:50:34","id":null,"feedId":10203,"linkMd5":"e1cb6f68340c90e2f0f999c051bcbac2"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":124752,"tmpBgImgCdnBytes":0,"extra4":{"start":1622130391153,"total":0,"statList":[{"spend":427,"msg":"获取xml内容"},{"spend":13,"msg":"解释文章"},{"spend":122697,"msg":"正文链接上传到cdn"},{"spend":122761,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"}]},"extra5":2,"extra6":1,"extra7ImgCdnFailResultVector":[null,null,null,null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7b7b6e0ad002400a8d99f337490abd82%7Etplv-k3u1fbpfcp-watermark.image","sourceStatusCode":200,"destWidth":3582,"destHeight":2012,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn95@2020_3/2021/05/27/15-48-32-645_b17e1164e1c7a6b7.webp","sourceBytes":324099,"destBytes":124752,"targetWebpQuality":75,"feedId":10203,"totalSpendMs":1268,"convertSpendMs":283,"createdTime":"2021-05-27 23:48:31","host":"europe-58*","referer":"https://www.v2ex.com/t/779629#reply2","linkMd5ListStr":"e1cb6f68340c90e2f0f999c051bcbac2","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"316.5 KB","destSize":"121.8 KB","compressRate":"38.5%"}],"successGithubMap":{"myreaderx13":1},"failGithubMap":{}}