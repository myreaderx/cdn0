{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-07 02:39:25","updatedTime":"2020-09-07 02:39:25","title":"使用 org-roam 构建自己的知识网络","link":"http://www.zmonster.me/2020/06/27/org-roam-introduction","description":"<div id=\"table-of-contents\"> \n <h2>目录</h2> \n <div id=\"text-table-of-contents\"> \n  <ul> \n   <li><a href=\"http://www.zmonster.me/2020/06/27/org-roam-introduction#orga7b35dc\">前言</a></li> \n   <li><a href=\"http://www.zmonster.me/2020/06/27/org-roam-introduction#org575209e\">环境说明</a></li> \n   <li><a href=\"http://www.zmonster.me/2020/06/27/org-roam-introduction#orge3ac302\">安装及初步配置</a></li> \n   <li><a href=\"http://www.zmonster.me/2020/06/27/org-roam-introduction#org8ca3405\">org-roam 的基本使用</a></li> \n   <li><a href=\"http://www.zmonster.me/2020/06/27/org-roam-introduction#orgbf7c137\">org-roam 进阶</a> \n    <ul> \n     <li><a href=\"http://www.zmonster.me/2020/06/27/org-roam-introduction#orgec47e48\">定制笔记模板</a></li> \n     <li><a href=\"http://www.zmonster.me/2020/06/27/org-roam-introduction#org6fd36c4\">实现网页内容摘录</a></li> \n    </ul> </li> \n  </ul> \n </div> \n</div> \n<div id=\"outline-container-orga7b35dc\" class=\"outline-2\"> \n <h2 id=\"orga7b35dc\">前言</h2> \n <div class=\"outline-text-2\" id=\"text-orga7b35dc\"> \n  <p> 最近 <a href=\"https://roamresearch.com/\">Roam Research</a> 一类的以网状结构来关联笔记、并以 backlink 的形式来展现笔记上下文的工具非常热门。所谓网状结构，是认为知识和知识是互相关联的，并通过这种互联形成复杂的网络，就像我们的大脑一样；所谓 backlink，是指对单条笔记，展示出链接到这条笔记的其他笔记，这样有助于更好地理解这条笔记的意义。本质上，网状结构和 backlink 其实是一回事，说的都是知识之间的互相链接，不过网状结构着眼于整体结构，而 backlink 则呈现局部形态。 </p> \n  <p> Roam Research 这类工具中的理念，叫做卡片盒笔记法，本文无意对这一想法做过多介绍，如果想进一步了解，可以参考下列文章： </p> \n  <ul class=\"org-ul\"> \n   <li><a href=\"https://sspai.com/post/60787\">Roam Research 到底好在哪儿？ - 少数派</a></li> \n   <li><a href=\"https://sspai.com/post/60802\">从卡片链接到大脑联想，基于 Obsidian 的卡片盒笔记法实践 - 少数派</a></li> \n   <li><a href=\"https://mp.weixin.qq.com/s?__biz=MzI3NDEzMjIyMQ==&amp;mid=2649474090&amp;idx=1&amp;sn=bf2fcc5c3a909e939795eb36b1ec33ae&amp;chksm=f307d9b8c47050ae1f88ed976deef2e7e51b44fd4eac768b5541743a9876cc1a505df11a3a71#rd\">真正的思考技术：来自德国社会学 Niklas Luhmann 的 Zettelkasten 方法</a></li> \n  </ul> \n  <p> 在 Emacs 中，很早就有一个工具 <a href=\"https://github.com/Kungsgeten/org-brain\">org-brain</a>，想要以 org-mode 为基础让人能建立自己的知识网络，本质上思想是类似的，但交互并不算特别友好，所以我以前稍微用了下就没有继续下去了，而最近出现的 <a href=\"https://www.orgroam.com/\">Org-roam</a> 则对标 Roam Research，实现了非常友好的交互，并提供了 <a href=\"https://github.com/org-roam/org-roam-server\">org-roam-server</a> 这样非常棒的知识网络可视化界面，经过短时间的使用后，我推荐所有使用 org-mode 来记录自己笔记的人都用一下 org-roam，理由如下： </p> \n  <ol class=\"org-ol\"> \n   <li>org-mode 本来就提供了极其强大的链接能力，可以链接到文件、headline 甚至文件的随便一行，也支持了对大量不同类型的外部链接，而 org-roam 为这种能力提供了友好而高效的交互操作</li> \n   <li>org-roam 复用了 org-capture 的强大功能，使得我们可以自定义各种笔记模板来更好地表示、呈现知识</li> \n   <li>org-roam-server 提供的笔记网络可视化界面和 org-roam 深度集成，点击界面上的笔记节点就能在 Emacs 中打开对应的笔记</li> \n  </ol> \n </div> \n</div> \n<div id=\"outline-container-org575209e\" class=\"outline-2\"> \n <h2 id=\"org575209e\">环境说明</h2> \n <div class=\"outline-text-2\" id=\"text-org575209e\"> \n  <ul class=\"org-ul\"> \n   <li>操作系统： Ubuntu 16.04</li> \n   <li>Emacs 版本： GNU Emacs 26.1</li> \n   <li>org-mode 版本： 9.3.7</li> \n   <li>org-roam 版本： 开发版 20200615</li> \n   <li>org-roam-server 版本： 开发版 20200621</li> \n   <li>浏览器： Firefox/Chrome</li> \n   <li>GIF 录制工具： <a href=\"https://linux.die.net/man/1/byzanz-record\">byzanz-record</a></li> \n  </ul> \n </div> \n</div> \n<div id=\"outline-container-orge3ac302\" class=\"outline-2\"> \n <h2 id=\"orge3ac302\">安装及初步配置</h2> \n <div class=\"outline-text-2\" id=\"text-orge3ac302\"> \n  <p> 直接从 <a href=\"https://melpa.org/\">MELPA</a> 安装即可 </p> \n  <div class=\"org-src-container\"> \n   <pre class=\"src src-emacs-lisp\">(package-install 'org-roam)\n(package-install 'org-roam-server)\n</pre> \n  </div> \n  <p> 安装完成后，首先需要设置 org-roam-directory 指向一个目录，用来存放使用 org-roam 创建的笔记。我把笔记都放在 Dropbox 里，所以设置如下 </p> \n  <div class=\"org-src-container\"> \n   <pre class=\"src src-emacs-lisp\">(<span style=\"color: #99cc99; font-weight: bold;\">setq</span> org-roam-directory <span style=\"color: #66cccc;\">\"~/Dropbox/org/roam\"</span>)\n</pre> \n  </div> \n  <p> 然后让 org-roam 在 Emacs 启动后就启用 </p> \n  <div class=\"org-src-container\"> \n   <pre class=\"src src-emacs-lisp\">(add-hook 'after-init-hook 'org-roam-mode)\n</pre> \n  </div> \n  <p> 然后设置并启动 org-roam-server 来监听笔记的变化并进行可视化（见<a href=\"https://github.com/org-roam/org-roam-server#installation\">org-roam-server 安装说明</a>） </p> \n  <div class=\"org-src-container\"> \n   <pre class=\"src src-emacs-lisp\">(<span style=\"color: #99cc99; font-weight: bold;\">setq</span> org-roam-server-host <span style=\"color: #66cccc;\">\"127.0.0.1\"</span>\n      org-roam-server-port 9090\n      org-roam-server-export-inline-images t\n      org-roam-server-authenticate nil\n      org-roam-server-network-label-truncate t\n      org-roam-server-network-label-truncate-length 60\n      org-roam-server-network-label-wrap-length 20)\n(org-roam-server-mode)\n</pre> \n  </div> \n  <p> 上面的配置生效后，会在本地启动一个网页服务，访问 <a href=\"http://127.0.0.1:9090\">http://127.0.0.1:9090</a> ，会看到下面这样的界面： </p> \n  <div class=\"figure\"> \n   <p><img src=\"http://www.zmonster.me/assets/img/org-roam-server-web.png\" alt=\"org-roam-server-web.png\" /> </p> \n  </div> \n  <p> 由于刚开始并没有创建笔记，上面只会显示一片空白。 </p> \n  <p> 然后启用 org-roam-protocol，用来在笔记可视化网页上和 org-roam-server 通信 </p> \n  <div class=\"org-src-container\"> \n   <pre class=\"src src-emacs-lisp\">(<span style=\"color: #99cc99; font-weight: bold;\">require</span> '<span style=\"color: #6699cc;\">org-roam-protocol</span>)\n</pre> \n  </div> \n  <p> 这个 org-roam-protocol 是使用 org-protocol 实现的，依赖操作系统的相关功能，相关设置参考<a href=\"https://www.orgroam.com/manual/Installation-_00281_0029.html\">文档</a>。 </p> \n  <p> 完成上述设置后，就可以开始体验 org-roam 了，执行 M-x org-roam-find-file 创建一条新的笔记，然后刷新笔记可视化页面，就能看到页面上多了一个新的节点了，如下图所示： </p> \n  <div class=\"figure\"> \n   <p><img src=\"http://www.zmonster.me/assets/img/org-roam-new.gif\" alt=\"org-roam-new.gif\" /> </p> \n  </div> \n </div> \n</div> \n<div id=\"outline-container-org8ca3405\" class=\"outline-2\"> \n <h2 id=\"org8ca3405\">org-roam 的基本使用</h2> \n <div class=\"outline-text-2\" id=\"text-org8ca3405\"> \n  <p> 首先来看下 org-roam 的基本功能 </p> \n  <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\"> \n   <colgroup> \n    <col class=\"org-left\" /> \n    <col class=\"org-left\" /> \n    <col class=\"org-left\" /> \n   </colgroup> \n   <thead> \n    <tr> \n     <th scope=\"col\" class=\"org-left\">函数</th> \n     <th scope=\"col\" class=\"org-left\">功能</th> \n     <th scope=\"col\" class=\"org-left\">备注</th> \n    </tr> \n   </thead> \n   <tbody> \n    <tr> \n     <td class=\"org-left\">org-roam-find-file</td> \n     <td class=\"org-left\">打开或新建笔记</td> \n     <td class=\"org-left\">&nbsp;</td> \n    </tr> \n    <tr> \n     <td class=\"org-left\">org-roam-capture</td> \n     <td class=\"org-left\">新建笔记</td> \n     <td class=\"org-left\">&nbsp;</td> \n    </tr> \n    <tr> \n     <td class=\"org-left\">org-roam-insert</td> \n     <td class=\"org-left\">插入一个指向其他笔记的链接，如果不存在会新建一个笔记</td> \n     <td class=\"org-left\">&nbsp;</td> \n    </tr> \n    <tr> \n     <td class=\"org-left\">org-roam-insert-immediate</td> \n     <td class=\"org-left\">类似 org-roam-insert，但新建笔记后不打开这个笔记</td> \n     <td class=\"org-left\">需要 org-roam 1.2.1</td> \n    </tr> \n    <tr> \n     <td class=\"org-left\">org-roam</td> \n     <td class=\"org-left\">显示 backlink</td> \n     <td class=\"org-left\">&nbsp;</td> \n    </tr> \n   </tbody> \n  </table> \n  <p> 核心的功能就这么多，没有太多概念、操作要学习，这也是我推荐大家使用它的原因。其基本工作流也很简单，下面是一个示例： </p> \n  <ol class=\"org-ol\"> \n   <li>打开已有笔记，或新建笔记 \n    <ul class=\"org-ul\"> \n     <li><p> 使用 org-roam-find-file 来新建一个笔记 </p> \n      <div class=\"figure\"> \n       <p><img src=\"http://www.zmonster.me/assets/img/org-roam-new.gif\" alt=\"org-roam-new.gif\" /> </p> \n      </div></li> \n     <li><p> 或者，使用 org-roam-find-file 来打开已有的笔记 </p> \n      <div class=\"figure\"> \n       <p><img src=\"http://www.zmonster.me/assets/img/org-roam-open-note.gif\" alt=\"org-roam-open-note.gif\" /> </p> \n      </div></li> \n     <li><p> 或者，在笔记可视化网页上浏览，点击想要查看或编辑的笔记节点，在 Emacs 中打开这个笔记 </p> \n      <div class=\"figure\"> \n       <p><img src=\"http://www.zmonster.me/assets/img/org-roam-open-note-2.gif\" alt=\"org-roam-open-note-2.gif\" /> </p> \n      </div></li> \n    </ul></li> \n   <li><p> 选中笔记内容中的某些关键词，使用 org-roam-insert-immediate，创建新的笔记并链接过去，并继续编辑当前的笔记 </p> \n    <div class=\"figure\"> \n     <p><img src=\"http://www.zmonster.me/assets/img/org-roam-insert-immediate.gif\" alt=\"org-roam-insert-immediate.gif\" /> </p> \n    </div> <p> 从图上右侧可以看到产生了一个名为 org-mode 的新节点，并和 Emacs 这个节点关联起来了。 </p></li> \n   <li><p> 或者，选中笔记内容中的关键词，使用 org-roam-insert，创建新的笔记并链接过去，同时打开新的笔记进行编辑 </p> \n    <div class=\"figure\"> \n     <p><img src=\"http://www.zmonster.me/assets/img/org-roam-insert-new.gif\" alt=\"org-roam-insert-new.gif\" /> </p> \n    </div> <p> 从图上右侧可以看到产生了一个名为 calc 的新节点，并和 Emacs 这个节点关联起来了。 </p></li> \n   <li><p> 或者，用 org-roam-insert-immediate/org-roam-insert 插入一个指向已有笔记的链接 </p> \n    <div class=\"figure\"> \n     <p><img src=\"http://www.zmonster.me/assets/img/org-roam-link-to.gif\" alt=\"org-roam-link-to.gif\" /> </p> \n    </div> <p> 上图和步骤 3 一样执行的是 org-roam-insert，但从图上右侧可以看到，只是已有的两个节点之间产生了一条关联，并没有新的节点产生。 </p></li> \n   <li><p> 使用 org-roam 展示笔记的 backlinks </p> \n    <div class=\"figure\"> \n     <p><img src=\"http://www.zmonster.me/assets/img/org-roam-show-backlinks.gif\" alt=\"org-roam-show-backlinks.gif\" /> </p> \n    </div></li> \n   <li><p> 用 org-roam-capture 在已有笔记中新增内容 </p> \n    <div class=\"figure\"> \n     <p><img src=\"http://www.zmonster.me/assets/img/org-roam-append.gif\" alt=\"org-roam-append.gif\" /> </p> \n    </div> <p> org-roam-capture 也可以用于新建笔记，实际上 org-roam-find-file 的逻辑就是：先检查笔记文件是否存在，如果存在就打开，否则就调用 org-roam-capture 来新建笔记。但 org-roam-capture 除了用于新建笔记文件，还可以快捷地在已有笔记中新增内容，且新增内容时可以利用模板来提高效率，比用 org-roam-find-file 打开笔记文件再手工新增会更高效一些。 </p></li> \n   <li>重复上述过程</li> \n  </ol> \n  <p> 掌握上述工作流后，剩下的事情就是把自己所学到的东西用 org-roam 来进行记录、整理了。 </p> \n </div> \n</div> \n<div id=\"outline-container-orgbf7c137\" class=\"outline-2\"> \n <h2 id=\"orgbf7c137\">org-roam 进阶</h2> \n <div class=\"outline-text-2\" id=\"text-orgbf7c137\"> \n </div> \n <div id=\"outline-container-orgec47e48\" class=\"outline-3\"> \n  <h3 id=\"orgec47e48\">定制笔记模板</h3> \n  <div class=\"outline-text-3\" id=\"text-orgec47e48\"> \n   <p> 用 <b>org-roam-find-file/org-roam-capture</b> 新建笔记的时候，会要求我们输入笔记标题，假如我们输入的笔记标题是 \"org-roam\"，那么会在新建这个笔记后发现这个笔记只在第一行把我们输入的标题写上去了，别的什么都没有： </p> \n   <div class=\"org-src-container\"> \n    <pre class=\"src src-org\"><span style=\"color: #99cc99;\">#+title:</span> <span style=\"color: #f99157; font-size: 144%; font-weight: bold;\">org-roam</span>\n</pre> \n   </div> \n   <p> 在实际使用中，我们可能会有不同的笔记需求，比如说：当我为一个专业术语记录笔记时，我想写下这个术语所属的领域以及它的含义；当我记录一个观点时，我会想写上这个观点是谁提出来的、论据是什么、我自己是支持还是反对；当我读一篇深度学习的论文时，我要记录这篇论文的相关工作、要解决的问题、使用了什么方法、进行了怎么样的实验…… </p> \n   <p> 这些需求用 org-roam 是能够满足的，因为 org-roam 通过 org-roam-capture-templates 这个变量提供了定制笔记模板的能力。 </p> \n   <p> 具体来说，默认的笔记模板是这样的 </p> \n   <div class=\"org-src-container\"> \n    <pre class=\"src src-emacs-lisp\">'((<span style=\"color: #66cccc;\">\"d\"</span> <span style=\"color: #66cccc;\">\"default\"</span> plain (<span style=\"color: #99cc99; font-weight: bold;\">function</span> org-roam-capture--get-point)\n   <span style=\"color: #66cccc;\">\"%?\"</span>\n   <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:file-name</span> <span style=\"color: #66cccc;\">\"%&lt;%Y%m%d%H%M%S&gt;-${slug}\"</span>\n   <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:head</span> <span style=\"color: #66cccc;\">\"#+title: ${title}\\n\"</span>\n   <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:unnarrowed</span> t))\n</pre> \n   </div> \n   <p> 每个模板都由 8 个部分组成，我这里以上面的默认模板来进行说明 </p> \n   <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\"> \n    <colgroup> \n     <col class=\"org-left\" /> \n     <col class=\"org-left\" /> \n     <col class=\"org-left\" /> \n    </colgroup> \n    <thead> \n     <tr> \n      <th scope=\"col\" class=\"org-left\">模板组成</th> \n      <th scope=\"col\" class=\"org-left\">对应默认模板中的内容</th> \n      <th scope=\"col\" class=\"org-left\">描述</th> \n     </tr> \n    </thead> \n    <tbody> \n     <tr> \n      <td class=\"org-left\">key</td> \n      <td class=\"org-left\">\"d\"</td> \n      <td class=\"org-left\">用来选择模板的快捷键</td> \n     </tr> \n     <tr> \n      <td class=\"org-left\">description</td> \n      <td class=\"org-left\">\"default\"</td> \n      <td class=\"org-left\">展示用的模板描述</td> \n     </tr> \n     <tr> \n      <td class=\"org-left\">type</td> \n      <td class=\"org-left\">plain</td> \n      <td class=\"org-left\">新增内容的类型</td> \n     </tr> \n     <tr> \n      <td class=\"org-left\">target</td> \n      <td class=\"org-left\">(function org-roam-capture–get-point)</td> \n      <td class=\"org-left\">新增内容的位置， <b>不可更改</b></td> \n     </tr> \n     <tr> \n      <td class=\"org-left\">template</td> \n      <td class=\"org-left\">\"%?\"</td> \n      <td class=\"org-left\">新增内容的模板</td> \n     </tr> \n     <tr> \n      <td class=\"org-left\">file-name</td> \n      <td class=\"org-left\">:file-name \"%&lt;%Y%m%d%H%M%S&gt;-${slug}\"</td> \n      <td class=\"org-left\">新增笔记文件的文件名模板</td> \n     </tr> \n     <tr> \n      <td class=\"org-left\">head</td> \n      <td class=\"org-left\">:head \"#+title: ${title}\\n\"</td> \n      <td class=\"org-left\">新增笔记的初始化内容，仅新建时生效</td> \n     </tr> \n     <tr> \n      <td class=\"org-left\">properties</td> \n      <td class=\"org-left\">:unnarrowed t</td> \n      <td class=\"org-left\">新增笔记的其他属性</td> \n     </tr> \n    </tbody> \n   </table> \n   <p> 下面对这 8 个模板元素分别说明一下 </p> \n   <ul class=\"org-ul\"> \n    <li><p> 用来选择模板的 key： </p> <p> 对应默认模板里的 \"d\"，一个字符的情况下用来直接选择模板，两个字符的情况下用第一个字符表示模板分组、第二个字符用来选择这个分组下的实际模板。 </p> <p> 下面的配置设置了四个模板，其中第二个 (\"g\" \"group\") 用来指明一个模板分组，后面的 \"ga\" 和 \"gb\" 是这个模板下的子模板。 </p> \n     <div class=\"org-src-container\"> \n      <pre class=\"src src-emacs-lisp\">(<span style=\"color: #99cc99; font-weight: bold;\">setq</span> org-roam-capture-templates\n      '(\n        (<span style=\"color: #66cccc;\">\"d\"</span> <span style=\"color: #66cccc;\">\"default\"</span> plain (<span style=\"color: #99cc99; font-weight: bold;\">function</span> org-roam-capture--get-point)\n         <span style=\"color: #66cccc;\">\"%?\"</span>\n         <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:file-name</span> <span style=\"color: #66cccc;\">\"%&lt;%Y%m%d%H%M%S&gt;-${slug}\"</span>\n         <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:head</span> <span style=\"color: #66cccc;\">\"#+title: ${title}\\n#+roam_alias:\\n\\n\"</span>)\n        (<span style=\"color: #66cccc;\">\"g\"</span> <span style=\"color: #66cccc;\">\"group\"</span>)\n        (<span style=\"color: #66cccc;\">\"ga\"</span> <span style=\"color: #66cccc;\">\"Group A\"</span> plain (<span style=\"color: #99cc99; font-weight: bold;\">function</span> org-roam-capture--get-point)\n         <span style=\"color: #66cccc;\">\"%?\"</span>\n         <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:file-name</span> <span style=\"color: #66cccc;\">\"%&lt;%Y%m%d%H%M%S&gt;-${slug}\"</span>\n         <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:head</span> <span style=\"color: #66cccc;\">\"#+title: ${title}\\n#+roam_alias:\\n\\n\"</span>)\n        (<span style=\"color: #66cccc;\">\"gb\"</span> <span style=\"color: #66cccc;\">\"Group B\"</span> plain (<span style=\"color: #99cc99; font-weight: bold;\">function</span> org-roam-capture--get-point)\n         <span style=\"color: #66cccc;\">\"%?\"</span>\n         <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:file-name</span> <span style=\"color: #66cccc;\">\"%&lt;%Y%m%d%H%M%S&gt;-${slug}\"</span>\n         <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:head</span> <span style=\"color: #66cccc;\">\"#+title: ${title}\\n#+roam_alias:\\n\\n\"</span>)))\n</pre> \n     </div> <p> 上面的模板生效后，首先在执行 org-roam-find-file 新建笔记时，就会看到一个选择界面，如下图所示： </p> \n     <div class=\"figure\"> \n      <p><img src=\"http://www.zmonster.me/assets/img/org-roam-capture-select-template.gif\" alt=\"org-roam-capture-select-template.gif\" /> </p> \n     </div> <p> 如果输入 d 会直接打开新建笔记的编辑窗口，如果输入 g 会展开分组模板要求我们再输入一次来选择具体的模板，如下图所示： </p> \n     <div class=\"figure\"> \n      <p><img src=\"http://www.zmonster.me/assets/img/org-roam-capture-select-group-template.gif\" alt=\"org-roam-capture-select-group-template.gif\" /> </p> \n     </div></li> \n    <li>用来描述模板的 description：这个元素就是起到单纯的描述作用，没有功能上的意义</li> \n    <li>用来说明新增内容类型的 type：本来有 plain/entry/item/checkitem/table-line 五种取值，但在 org-roam 中作用都是一样的，建议一律使用 plain</li> \n    <li>用来说明新增内容位置的 target：这一项在 org-roam 中不可更改</li> \n    <li><p> 设置新增内容模板的 template： </p> <p> 这个元素是整个模板中的核心，其中的内容可以分为两类： </p> \n     <ul class=\"org-ul\"> \n      <li>普通的文本，将会原样出现在新增内容中</li> \n      <li>以 % 开头的特殊标记，如默认模板中的 \"%?\"，将会在最后根据类型自动扩展成不同的内容</li> \n     </ul> <p> 对于第一类内容没啥可说的，唯一值得一提的是，如果需要模板是多行的文本，需要在模板中用 \"\\n\" 来指明要换行，如模板内容 \"第一行\\n第二行\" 最后就会在笔记中显示为： </p> \n     <div class=\"org-src-container\"> \n      <pre class=\"src src-org\">第一行\n第二行\n</pre> \n     </div> <p> 这里说一下以 % 开头的特殊标记，由于这块内容很多，这里只列举一些常用的供读者参考： </p> \n     <table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\"> \n      <colgroup> \n       <col class=\"org-left\" /> \n       <col class=\"org-left\" /> \n      </colgroup> \n      <thead> \n       <tr> \n        <th scope=\"col\" class=\"org-left\">标记</th> \n        <th scope=\"col\" class=\"org-left\">描述</th> \n       </tr> \n      </thead> \n      <tbody> \n       <tr> \n        <td class=\"org-left\">%&lt;…&gt;</td> \n        <td class=\"org-left\">自定义格式的时间戳，如: %&lt;%Y-%m-%d&gt;，会得到 <span class=\"timestamp-wrapper\"><span class=\"timestamp\">&lt;2018-03-04 日&gt;</span></span></td> \n       </tr> \n       <tr> \n        <td class=\"org-left\">%t</td> \n        <td class=\"org-left\">当前日期，展开后的格式固定为 <span class=\"timestamp-wrapper\"><span class=\"timestamp\">&lt;2018-03-04 日&gt; </span></span> 这样</td> \n       </tr> \n       <tr> \n        <td class=\"org-left\">%T</td> \n        <td class=\"org-left\">当前日期和时间，展开后的格式固定为 <span class=\"timestamp-wrapper\"><span class=\"timestamp\">&lt;2018-03-04 日 19:26&gt; </span></span> 这样</td> \n       </tr> \n       <tr> \n        <td class=\"org-left\">%u</td> \n        <td class=\"org-left\">当前日期，展开后的格式固定为 <span class=\"timestamp-wrapper\"><span class=\"timestamp\">[2018-03-04 日] </span></span> 这样</td> \n       </tr> \n       <tr> \n        <td class=\"org-left\">%U</td> \n        <td class=\"org-left\">当前日期和时间，展开后的格式固定为 <span class=\"timestamp-wrapper\"><span class=\"timestamp\">[2018-03-04 日 19:26] </span></span> 这样</td> \n       </tr> \n       <tr> \n        <td class=\"org-left\">%<sup>prompt</sup></td> \n        <td class=\"org-left\">用 prompt 作为提示要求我们输入并填充在这个模板元素所在的位置</td> \n       </tr> \n       <tr> \n        <td class=\"org-left\">%?</td> \n        <td class=\"org-left\">其他所有特殊标记填充完毕后，光标将停留在这个元素的位置等待我们编辑</td> \n       </tr> \n      </tbody> \n     </table></li> \n    <li><p> 指定新增笔记文件名的 file-name： </p> <p> org-roam 中新建笔记一般都是以一个新文件的形式来创建的，支持用 file-name 来设置这个新文件的文件名，默认模板中的这块设置为 \"%&lt;%Y%m%d%H%M%S&gt;-${slug}\"，分为两部分 </p> \n     <ul class=\"org-ul\"> \n      <li><b>%&lt;%Y%m%d%H%M%S&gt;</b> ：参考上一节 template 部分的特殊标记</li> \n      <li><b>${slug}</b> ：将笔记标题文字做处理后得到的文本，这些处理包括大写字母转小写、去除一些特殊字符等</li> \n     </ul> <p> 这块建议使用默认模板就好。 </p></li> \n    <li><p> 设置新增笔记初始内容的 head： </p> <p> 这个设置用来在新建笔记文件时设置初始内容，只会执行一次，也就是说之后如果使用 org-roam-capture 新增内容到已有笔记中时，这个设置的内容是不会再写入到文件中的。 </p> <p> 默认模板这块的内容是 \"#+title: ${title}\\n\"，只设置了笔记文件的标题，建议改为如下内容： </p> \n     <div class=\"org-src-container\"> \n      <pre class=\"src src-emacs-lisp\"><span style=\"color: #cc99cc; background-color: #2d2d2d;\">:head</span> <span style=\"color: #66cccc;\">\"#+title: ${title}\\n#+roam_alias: \\n#+roam_tags: \\n\"</span>\n</pre> \n     </div> <p> 这样设置后新建笔记文件的初始内容将会是： </p> \n     <div class=\"org-src-container\"> \n      <pre class=\"src src-org\"><span style=\"color: #99cc99;\">#+title:</span> <span style=\"color: #f99157; font-size: 144%; font-weight: bold;\">示例标题</span>\n<span style=\"color: #999999; font-style: italic;\">#+roam_alias:</span>\n<span style=\"color: #999999; font-style: italic;\">#+roam_tags:</span>\n</pre> \n     </div> <p> \"#+roam_alias\" 可以给这条笔记设置别名，这样在其他笔记中引用的时候会更方便；\"#+roam_tags\" 可以用来为这条笔记添加标签，使得在用 org-roam-find-file 查找已有笔记时能根据 tag 来进行过滤。 </p></li> \n    <li><p> 设置新增内容其他属性的 properties： </p> <p> 这些属性用于对新建笔记内容的行为做一些额外的控制，列举几个常用的： </p> \n     <ul class=\"org-ul\"> \n      <li><b>:unnarrowed t</b>: org-roam 推荐的设置，表示现实整个笔记文件，如果不加这个设置，用 org-roam-capture 增加内容到已有笔记文件中时，仅会显示当前我们输入的内容，而不会显示这个笔记文件中已有的内容</li> \n      <li><b>:empty-lines 1</b>: 在新增的笔记内容前后加一个空行，使用 org-roam-capture 增加内容到已有笔记文件中时比较有用</li> \n     </ul></li> \n   </ul> \n   <p> org-roam 的笔记模板是利用 <a href=\"https://orgmode.org/manual/Capture.html\">org-capture</a> 实现的，上述模板元素中 file-name 和 head 是 org-roam 在 org-capture 模板的基础上增加的新元素；其他六个部分，target 在 org-roam 中不可更改，key、description、type 和 template 的更详细说明可以参考我之前写的一篇介绍 org-capture 文章中的相关内容，<a href=\"https://www.zmonster.me/2018/02/28/org-mode-capture.html#org1a3d856\">capture 模板的五个部分</a>。 </p> \n   <p> 为了能更直观地理解模板的工作机制，这里给几个模板的示例： </p> \n   <ul class=\"org-ul\"> \n    <li><p> 用于记录专业术语的模板 </p> \n     <div class=\"org-src-container\"> \n      <pre class=\"src src-emacs-lisp\">(add-to-list 'org-roam-capture-templates\n             '(<span style=\"color: #66cccc;\">\"t\"</span> <span style=\"color: #66cccc;\">\"Term\"</span> plain (<span style=\"color: #99cc99; font-weight: bold;\">function</span> org-roam-capture--get-point)\n               <span style=\"color: #66cccc;\">\"- 领域: %^{术语所属领域}\\n- 释义:\"</span>\n               <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:file-name</span> <span style=\"color: #66cccc;\">\"%&lt;%Y%m%d%H%M%S&gt;-${slug}\"</span>\n               <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:head</span> <span style=\"color: #66cccc;\">\"#+title: ${title}\\n#+roam_alias:\\n#+roam_tags: \\n\\n\"</span>\n               <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:unnarrowed</span> t\n               ))\n</pre> \n     </div> <p> 将上面的配置拷贝到你的 Emacs 配置中，并置于所有 org-roam 相关配置的后面，就可以在你的 org-roam 中使用这个模板，后面的示例模板也是一样，但要注意不同模板的 key 不要有冲突。 </p> \n     <div class=\"figure\"> \n      <p><img src=\"http://www.zmonster.me/assets/img/org-roam-new-term.gif\" alt=\"org-roam-new-term.gif\" /> </p> \n     </div></li> \n    <li><p> 用于记录论文笔记的模板 </p> \n     <div class=\"org-src-container\"> \n      <pre class=\"src src-emacs-lisp\">(add-to-list 'org-roam-capture-templates\n             '(<span style=\"color: #66cccc;\">\"p\"</span> <span style=\"color: #66cccc;\">\"Paper Note\"</span> plain (<span style=\"color: #99cc99; font-weight: bold;\">function</span> org-roam-capture--get-point)\n               <span style=\"color: #66cccc;\">\"* 相关工作\\n\\n%?\\n* 观点\\n\\n* 模型和方法\\n\\n* 实验\\n\\n* 结论\\n\"</span>\n               <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:file-name</span> <span style=\"color: #66cccc;\">\"%&lt;%Y%m%d%H%M%S&gt;-${slug}\"</span>\n               <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:head</span> <span style=\"color: #66cccc;\">\"#+title: ${title}\\n#+roam_alias:\\n#+roam_tags: \\n\\n\"</span>\n               <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:unnarrowed</span> t\n               ))\n</pre> \n     </div> \n     <div class=\"figure\"> \n      <p><img src=\"http://www.zmonster.me/assets/img/org-roam-new-paper-note.gif\" alt=\"org-roam-new-paper-note.gif\" /> </p> \n     </div></li> \n   </ul> \n   <p> 另外，org-roam-insert-immediate 不使用 org-roam-capture-templates，而是使用一个专门的 org-roam-capture-immediate-template 来设置新建内容的模板，且只能有一个模板，所以设置这个模板的配置是这样的（以默认配置为例） </p> \n   <div class=\"org-src-container\"> \n    <pre class=\"src src-emacs-lisp\">(<span style=\"color: #99cc99; font-weight: bold;\">setq</span> org-roam-capture-immediate-template\n      '(<span style=\"color: #66cccc;\">\"d\"</span> <span style=\"color: #66cccc;\">\"default\"</span> plain (<span style=\"color: #99cc99; font-weight: bold;\">function</span> org-roam-capture--get-point)\n        <span style=\"color: #66cccc;\">\"%?\"</span>\n        <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:file-name</span> <span style=\"color: #66cccc;\">\"%&lt;%Y%m%d%H%M%S&gt;-${slug}\"</span>\n        <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:head</span> <span style=\"color: #66cccc;\">\"#+title: ${title}\\n\"</span>\n        <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:unnarrowed</span> t))\n</pre> \n   </div> \n  </div> \n </div> \n <div id=\"outline-container-org6fd36c4\" class=\"outline-3\"> \n  <h3 id=\"org6fd36c4\">实现网页内容摘录</h3> \n  <div class=\"outline-text-3\" id=\"text-org6fd36c4\"> \n   <p> 这部分内容需要 org-protocol，后续内容是在 org-protocol 已经设置好的基础上展开的，如果 org-protocol 设置存在问题，请查阅<a href=\"https://www.orgroam.com/manual/Installation-_00281_0029.html\">文档</a>，或这评论区留言来讨论。 </p> \n   <p> 利用 org-protocol 这样的外部程序和 Emacs 进行通信的机制，我们可以使用 javascript 来抓取网页上的信息发送到 Emacs 中，而 org-roam 也支持了这种机制。在 org-roam 中可以通过 org-roam-capture-ref-templates 来设置网页捕获相关的模板，默认的设置是这样的： </p> \n   <div class=\"org-src-container\"> \n    <pre class=\"src src-emacs-lisp\">(<span style=\"color: #99cc99; font-weight: bold;\">setq</span> org-roam-capture-ref-templates\n      '((<span style=\"color: #66cccc;\">\"r\"</span> <span style=\"color: #66cccc;\">\"ref\"</span> plain (<span style=\"color: #99cc99; font-weight: bold;\">function</span> org-roam-capture--get-point)\n         <span style=\"color: #66cccc;\">\"\"</span>\n         <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:file-name</span> <span style=\"color: #66cccc;\">\"${slug}\"</span>\n         <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:head</span> <span style=\"color: #66cccc;\">\"#+title: ${title}\\n#+roam_key: ${ref}\\n\"</span>\n         <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:unnarrowed</span> t)))\n</pre> \n   </div> \n   <p> 可以看到，模板本身和前面的笔记模板是一样的，没有什么特别。但我们可以创建一个<a href=\"https://zh.wikipedia.org/zh-cn/%E5%B0%8F%E4%B9%A6%E7%AD%BE\">小书签</a>，来利用这个模板，抓取网页标题和链接然后新建一个笔记到 org-roam 中，如下图所示： </p> \n   <div class=\"figure\"> \n    <p><img src=\"http://www.zmonster.me/assets/img/org-roam-store-link.gif\" alt=\"org-roam-store-link.gif\" /> </p> \n   </div> \n   <p> 上图中小书签的内容来自 org-roam 的<a href=\"https://www.orgroam.com/manual/The-roam_002dref-Protocol.html#The-roam_002dref-Protocol\">文档</a>，具体内容为： </p> \n   <div class=\"org-src-container\"> \n    <pre class=\"src src-javascript\">javascript:location.href = <span style=\"color: #66cccc;\">'org-protocol://roam-ref?template=r&amp;ref='</span> + encodeURIComponent(location.href) + <span style=\"color: #66cccc;\">'&amp;title='</span> + encodeURIComponent(document.title)\n</pre> \n   </div> \n   <p> 添加的方法是在浏览器中新增一个书签，书签的名字随意（上图中我设置为了“网页抓取”），书签的 URL 填上上面的 javascript 代码。下图是 Firefox 中创建这样的小书签的示意图： </p> \n   <div class=\"figure\"> \n    <p><img src=\"http://www.zmonster.me/assets/img/create-bookmarklet-in-firefox.gif\" alt=\"create-bookmarklet-in-firefox.gif\" /> </p> \n   </div> \n   <p> 这个小书签的内容分成几部分： </p> \n   <ul class=\"org-ul\"> \n    <li><p> 第一部分说明小书签要访问的地址，这个就是 org-roam-protocol 的通信地址 </p> \n     <div class=\"org-src-container\"> \n      <pre class=\"src src-javascript\">javascript:location.href=<span style=\"color: #66cccc;\">'org-protocol://roam-ref'</span>\n</pre> \n     </div></li> \n    <li><p> 第二部分指定要使用的笔记模板，从 org-roam-capture-ref-templates 中匹配 </p> \n     <div class=\"org-src-container\"> \n      <pre class=\"src src-javascript\"><span style=\"color: #66cccc;\">'?template=r'</span>\n</pre> \n     </div></li> \n    <li><p> 第三部分获取一些网页的信息，并设置到变量中，供模板填充使用 </p> \n     <div class=\"org-src-container\"> \n      <pre class=\"src src-emacs-lisp\">'<span style=\"color: #6699cc;\">&amp;ref=</span>' + encodeURIComponent(location.href) + '<span style=\"color: #6699cc;\">&amp;title=</span>' + encodeURIComponent(document.title)\n</pre> \n     </div> <p> 前面的默认模板中，head 部分内容为 </p> \n     <div class=\"org-src-container\"> \n      <pre class=\"src src-emacs-lisp\"><span style=\"color: #cc99cc; background-color: #2d2d2d;\">:head</span> <span style=\"color: #66cccc;\">\"#+title: ${title}\\n#+roam_key: ${ref}\\n\"</span>\n</pre> \n     </div> <p> 需要填充 \"title\" 和 \"ref\" 两个变量，小书签中第三部分内容就是获取了当前网页的链接赋值给 \"ref\" 变量，并获取网页标题文本赋值给 \"title\" 变量了，这样这个模板就能自动填充好了。 </p></li> \n   </ul> \n   <p> 不过这个模板和小书签过于简单，只能记录网页链接，我设计了一个模板和对应的小书签，可以做到进行网页标注、摘录，效果见下图： </p> \n   <div class=\"figure\"> \n    <p><img src=\"http://www.zmonster.me/assets/img/org-roam-annotate-web.gif\" alt=\"org-roam-annotate-web.gif\" /> </p> \n   </div> \n   <p> 要达到上图的效果，首先，在 org-roam-capture-ref-templates 中新增一个模板 </p> \n   <div class=\"org-src-container\"> \n    <pre class=\"src src-emacs-lisp\">(add-to-list 'org-roam-capture-ref-templates\n             '(<span style=\"color: #66cccc;\">\"a\"</span> <span style=\"color: #66cccc;\">\"Annotation\"</span> plain (<span style=\"color: #99cc99; font-weight: bold;\">function</span> org-roam-capture--get-point)\n               <span style=\"color: #66cccc;\">\"%U ${body}\\n\"</span>\n               <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:file-name</span> <span style=\"color: #66cccc;\">\"${slug}\"</span>\n               <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:head</span> <span style=\"color: #66cccc;\">\"#+title: ${title}\\n#+roam_key: ${ref}\\n#+roam_alias:\\n\"</span>\n               <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:immediate-finish</span> t\n               <span style=\"color: #cc99cc; background-color: #2d2d2d;\">:unnarrowed</span> t))\n</pre> \n   </div> \n   <p> 然后新建一个小书签，内容为 </p> \n   <div class=\"org-src-container\"> \n    <pre class=\"src src-javascript\">javascript:location.href = <span style=\"color: #66cccc;\">'org-protocol://roam-ref?template=a&amp;ref='</span> + encodeURIComponent(location.href) + <span style=\"color: #66cccc;\">'&amp;title='</span>+encodeURIComponent(document.title) + <span style=\"color: #66cccc;\">'&amp;body='</span>+encodeURIComponent(<span style=\"color: #99cc99; font-weight: bold;\">function</span>(){<span style=\"color: #99cc99; font-weight: bold;\">var</span> <span style=\"color: #ffcc66;\">html</span> = <span style=\"color: #66cccc;\">\"\"</span>;<span style=\"color: #99cc99; font-weight: bold;\">var</span> <span style=\"color: #ffcc66;\">sel</span> = window.getSelection();<span style=\"color: #99cc99; font-weight: bold;\">if</span> (sel.rangeCount) {<span style=\"color: #99cc99; font-weight: bold;\">var</span> <span style=\"color: #ffcc66;\">container</span> = document.createElement(<span style=\"color: #66cccc;\">\"div\"</span>);<span style=\"color: #99cc99; font-weight: bold;\">for</span> (<span style=\"color: #99cc99; font-weight: bold;\">var</span> <span style=\"color: #ffcc66;\">i</span> = 0, <span style=\"color: #ffcc66;\">len</span> = sel.rangeCount; i &lt; len; ++i) {container.appendChild(sel.getRangeAt(i).cloneContents());}html = container.innerHTML;}<span style=\"color: #99cc99; font-weight: bold;\">var</span> <span style=\"color: #ffcc66;\">dataDom</span> = document.createElement(<span style=\"color: #66cccc;\">'div'</span>);dataDom.innerHTML = html;[<span style=\"color: #66cccc;\">'p'</span>, <span style=\"color: #66cccc;\">'h1'</span>, <span style=\"color: #66cccc;\">'h2'</span>, <span style=\"color: #66cccc;\">'h3'</span>, <span style=\"color: #66cccc;\">'h4'</span>].forEach(<span style=\"color: #99cc99; font-weight: bold;\">function</span>(<span style=\"color: #ffcc66;\">tag</span>, <span style=\"color: #ffcc66;\">idx</span>){dataDom.querySelectorAll(tag).forEach(<span style=\"color: #99cc99; font-weight: bold;\">function</span>(item, index) {<span style=\"color: #99cc99; font-weight: bold;\">var</span> <span style=\"color: #ffcc66;\">content</span> = item.innerHTML.trim();<span style=\"color: #99cc99; font-weight: bold;\">if</span> (content.length &gt; 0) {item.innerHTML = content + <span style=\"color: #66cccc;\">'&amp;#13;&amp;#10;'</span>;}});});<span style=\"color: #99cc99; font-weight: bold;\">return</span> dataDom.innerText.trim();}())\n</pre> \n   </div> \n  </div> \n </div> \n</div>","descriptionType":"html","publishedDate":"Sat, 27 Jun 2020 00:00:00 +0000","feedId":16385,"bgimg":"http://www.zmonster.me/assets/img/org-roam-server-web.png","linkMd5":"83dfab936217ca50b493312196ff5359","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn96@2020_3/2020/09/06/18-39-29-683_9f4e8a479085fd18.webp","destWidth":1279,"destHeight":711,"sourceBytes":19985,"destBytes":11990,"author":"","articleImgCdnMap":{"http://www.zmonster.me/assets/img/org-roam-server-web.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn96@2020_3/2020/09/06/18-39-29-683_9f4e8a479085fd18.webp","http://www.zmonster.me/assets/img/org-roam-new.gif":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn3@2020_1/2020/09/06/18-39-33-373_e297690220b1bd5a.webp","http://www.zmonster.me/assets/img/org-roam-open-note.gif":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn25@2020_6/2020/09/06/18-39-31-572_b56bb8d76e59c36f.webp","http://www.zmonster.me/assets/img/org-roam-open-note-2.gif":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn47@2020_4/2020/09/06/18-39-35-441_1053fc1a53d2b9a5.webp","http://www.zmonster.me/assets/img/org-roam-insert-immediate.gif":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn9@2020_2/2020/09/06/18-39-32-884_a99f9653af021394.webp","http://www.zmonster.me/assets/img/org-roam-insert-new.gif":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn30@2020_2/2020/09/06/18-39-38-359_0a25744c158f5688.webp","http://www.zmonster.me/assets/img/org-roam-link-to.gif":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn42@2020_1/2020/09/06/18-39-40-631_6228c3f8ad7dec10.webp","http://www.zmonster.me/assets/img/org-roam-show-backlinks.gif":null,"http://www.zmonster.me/assets/img/org-roam-append.gif":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn52@2020_4/2020/09/06/18-39-32-481_a201fd0f96971f15.webp","http://www.zmonster.me/assets/img/org-roam-capture-select-template.gif":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn7@2020_6/2020/09/06/18-39-32-115_6c8a6a72037e98ea.webp","http://www.zmonster.me/assets/img/org-roam-capture-select-group-template.gif":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn53@2020_4/2020/09/06/18-39-31-826_5ed8e6d1a1f0e3ac.webp","http://www.zmonster.me/assets/img/org-roam-new-term.gif":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn99@2020_5/2020/09/06/18-39-37-694_c9a6305080df1d45.webp","http://www.zmonster.me/assets/img/org-roam-new-paper-note.gif":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn14@2020_4/2020/09/06/18-39-35-239_9ae9d3333f7f2d1c.webp","http://www.zmonster.me/assets/img/org-roam-store-link.gif":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn6@2020_1/2020/09/06/18-39-49-073_151c4a0dbd2411a3.webp","http://www.zmonster.me/assets/img/create-bookmarklet-in-firefox.gif":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn35@2020_2/2020/09/06/18-39-34-981_dfff8a281560480d.webp","http://www.zmonster.me/assets/img/org-roam-annotate-web.gif":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn34@2020_5/2020/09/06/18-39-43-062_406c4d7ddc8e7371.webp"},"publishedOrCreatedDate":1599417565556}],"record":{"createdTime":"2020-09-07 02:39:25","updatedTime":"2020-09-07 02:39:25","feedId":16385,"fetchDate":"Sun, 06 Sep 2020 18:39:25 +0000","fetchMs":481,"handleMs":1394,"totalMs":29288,"newArticles":0,"totalArticles":137,"status":1,"type":0,"ip":"caa2f6635a859e0b755db60f442cc4e9","hostName":"us-022*","requestId":"16616f5ed2d74f469982bfa3f7017ea1_16385","contentType":"application/xml","totalBytes":2981026,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":16,"articlesImgsGithubTotal":15,"successGithubMap":{"myreaderx8":1,"myreaderx15":1,"myreaderx6":1,"myreaderx32":1,"myreaderx10":1,"myreaderx3":1,"myreaderx33":1,"myreaderx22":1,"myreaderx12":1,"myreaderx2":1,"myreaderx13":1,"myreaderx1":1,"myreaderx30":1,"myreaderx31":1,"myreaderx5oss":1},"failGithubMap":{"myreaderx23":1}},"feed":{"createdTime":"2020-09-07 02:12:44","updatedTime":"2020-09-07 02:12:44","id":16385,"name":"ZMonster's Blog","url":"http://www.zmonster.me/atom.xml","subscriber":204,"website":null,"icon":"http://www.zmonster.me/assets/img/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx64/cdn75@2020_5/2020/09/06/18-39-24-472_682c80f8d65069a6.ico","description":"","weekly":null,"link":"http://www.zmonster.me"},"noPictureArticleList":[{"createdTime":"2020-09-07 02:39:52","updatedTime":"2020-09-07 02:39:52","id":null,"feedId":16385,"linkMd5":"83dfab936217ca50b493312196ff5359"}],"tmpCommonImgCdnBytes":11990,"tmpBodyImgCdnBytes":2969036,"tmpBgImgCdnBytes":0,"extra4":{"start":1599417563636,"total":0,"statList":[{"spend":529,"msg":"获取xml内容"},{"spend":1394,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":22224,"msg":"正文链接上传到cdn"}]},"extra5":16,"extra6":16,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-show-backlinks.gif","sourceStatusCode":200,"destWidth":1138,"destHeight":886,"sourceBytes":377989,"destBytes":189766,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":14148,"convertSpendMs":13623,"createdTime":"2020-09-07 02:39:30","host":"us-032*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn21/contents/2020/09/06/18-39-44-862_a93cc26ec94b119b.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 18:39:44 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["DD08:175A:1BDC1C5:307097C:5F552CEF"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599420771"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn21/contents/2020/09/06/18-39-44-862_a93cc26ec94b119b.webp","historyStatusCode":[],"spendMs":60},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"369.1 KB","destSize":"185.3 KB","compressRate":"50.2%"},{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-show-backlinks.gif","sourceStatusCode":200,"destWidth":1138,"destHeight":886,"sourceBytes":377989,"destBytes":189766,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":7958,"convertSpendMs":7817,"createdTime":"2020-09-07 02:39:44","host":"us-54*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn21/contents/2020/09/06/18-39-52-871_a93cc26ec94b119b.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 18:39:52 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D5B0:36B1:20212AE:351BC82:5F552CF6"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599420771"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn21/contents/2020/09/06/18-39-52-871_a93cc26ec94b119b.webp","historyStatusCode":[],"spendMs":46},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"369.1 KB","destSize":"185.3 KB","compressRate":"50.2%"}],"extra10_invalidATagHrefValue":{"http://www.zmonster.me/2020/06/27/org-roam-introduction_#orgbf7c137":"http://www.zmonster.me/2020/06/27/org-roam-introduction#orgbf7c137","http://www.zmonster.me/2020/06/27/org-roam-introduction_#org6fd36c4":"http://www.zmonster.me/2020/06/27/org-roam-introduction#org6fd36c4","http://www.zmonster.me/2020/06/27/org-roam-introduction_#orga7b35dc":"http://www.zmonster.me/2020/06/27/org-roam-introduction#orga7b35dc","http://www.zmonster.me/2020/06/27/org-roam-introduction_#orgec47e48":"http://www.zmonster.me/2020/06/27/org-roam-introduction#orgec47e48","http://www.zmonster.me/2020/06/27/org-roam-introduction_#org575209e":"http://www.zmonster.me/2020/06/27/org-roam-introduction#org575209e","http://www.zmonster.me/2020/06/27/org-roam-introduction_#orge3ac302":"http://www.zmonster.me/2020/06/27/org-roam-introduction#orge3ac302","http://www.zmonster.me/2020/06/27/org-roam-introduction_#org8ca3405":"http://www.zmonster.me/2020/06/27/org-roam-introduction#org8ca3405"},"extra111_proxyServerAndStatMap":{"http://us-032.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-037.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-24.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-007.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-58.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-54.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-036.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-019.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-server-web.png","sourceStatusCode":200,"destWidth":1279,"destHeight":711,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn96@2020_3/2020/09/06/18-39-29-683_9f4e8a479085fd18.webp","sourceBytes":19985,"destBytes":11990,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":1671,"convertSpendMs":31,"createdTime":"2020-09-07 02:39:28","host":"europe63*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359,83dfab936217ca50b493312196ff5359","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.5 KB","destSize":"11.7 KB","compressRate":"60%"},{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-open-note.gif","sourceStatusCode":200,"destWidth":720,"destHeight":564,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn25@2020_6/2020/09/06/18-39-31-572_b56bb8d76e59c36f.webp","sourceBytes":59787,"destBytes":62764,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":1789,"convertSpendMs":384,"createdTime":"2020-09-07 02:39:30","host":"us-019*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"58.4 KB","destSize":"61.3 KB","compressRate":"105%"},{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-capture-select-group-template.gif","sourceStatusCode":200,"destWidth":1025,"destHeight":814,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn53@2020_4/2020/09/06/18-39-31-826_5ed8e6d1a1f0e3ac.webp","sourceBytes":310741,"destBytes":155102,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":2401,"convertSpendMs":551,"createdTime":"2020-09-07 02:39:30","host":"europe-25*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"303.5 KB","destSize":"151.5 KB","compressRate":"49.9%"},{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-capture-select-template.gif","sourceStatusCode":200,"destWidth":1027,"destHeight":830,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn7@2020_6/2020/09/06/18-39-32-115_6c8a6a72037e98ea.webp","sourceBytes":118029,"destBytes":101104,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":2657,"convertSpendMs":653,"createdTime":"2020-09-07 02:39:30","host":"europe-58*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"115.3 KB","destSize":"98.7 KB","compressRate":"85.7%"},{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-append.gif","sourceStatusCode":200,"destWidth":898,"destHeight":733,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn52@2020_4/2020/09/06/18-39-32-481_a201fd0f96971f15.webp","sourceBytes":603673,"destBytes":246616,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":3119,"convertSpendMs":712,"createdTime":"2020-09-07 02:39:30","host":"europe-24*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"589.5 KB","destSize":"240.8 KB","compressRate":"40.9%"},{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-new.gif","sourceStatusCode":200,"destWidth":968,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn3@2020_1/2020/09/06/18-39-33-373_e297690220b1bd5a.webp","sourceBytes":136075,"destBytes":143024,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":3659,"convertSpendMs":2154,"createdTime":"2020-09-07 02:39:30","host":"us-54*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359,83dfab936217ca50b493312196ff5359","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"132.9 KB","destSize":"139.7 KB","compressRate":"105.1%"},{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-insert-immediate.gif","sourceStatusCode":200,"destWidth":1263,"destHeight":852,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn9@2020_2/2020/09/06/18-39-32-884_a99f9653af021394.webp","sourceBytes":179793,"destBytes":175754,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":3730,"convertSpendMs":1378,"createdTime":"2020-09-07 02:39:30","host":"europe64*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"175.6 KB","destSize":"171.6 KB","compressRate":"97.8%"},{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/create-bookmarklet-in-firefox.gif","sourceStatusCode":200,"destWidth":844,"destHeight":743,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn35@2020_2/2020/09/06/18-39-34-981_dfff8a281560480d.webp","sourceBytes":478886,"destBytes":399066,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":5423,"convertSpendMs":3818,"createdTime":"2020-09-07 02:39:30","host":"us-036*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"467.7 KB","destSize":"389.7 KB","compressRate":"83.3%"},{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-new-paper-note.gif","sourceStatusCode":200,"destWidth":1268,"destHeight":853,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn14@2020_4/2020/09/06/18-39-35-239_9ae9d3333f7f2d1c.webp","sourceBytes":139860,"destBytes":134862,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":5585,"convertSpendMs":4044,"createdTime":"2020-09-07 02:39:30","host":"us-52*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"136.6 KB","destSize":"131.7 KB","compressRate":"96.4%"},{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-open-note-2.gif","sourceStatusCode":200,"destWidth":1266,"destHeight":850,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn47@2020_4/2020/09/06/18-39-35-441_1053fc1a53d2b9a5.webp","sourceBytes":86056,"destBytes":76178,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":5664,"convertSpendMs":4245,"createdTime":"2020-09-07 02:39:30","host":"us-025*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"84 KB","destSize":"74.4 KB","compressRate":"88.5%"},{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-new-term.gif","sourceStatusCode":200,"destWidth":1258,"destHeight":844,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn99@2020_5/2020/09/06/18-39-37-694_c9a6305080df1d45.webp","sourceBytes":175616,"destBytes":160660,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":6068,"convertSpendMs":4586,"createdTime":"2020-09-07 02:39:32","host":"us-51*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"171.5 KB","destSize":"156.9 KB","compressRate":"91.5%"},{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-insert-new.gif","sourceStatusCode":200,"destWidth":1262,"destHeight":849,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn30@2020_2/2020/09/06/18-39-38-359_0a25744c158f5688.webp","sourceBytes":199160,"destBytes":198136,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":8623,"convertSpendMs":7091,"createdTime":"2020-09-07 02:39:30","host":"us-007*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"194.5 KB","destSize":"193.5 KB","compressRate":"99.5%"},{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-link-to.gif","sourceStatusCode":200,"destWidth":1264,"destHeight":851,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn42@2020_1/2020/09/06/18-39-40-631_6228c3f8ad7dec10.webp","sourceBytes":159490,"destBytes":159664,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":10949,"convertSpendMs":9516,"createdTime":"2020-09-07 02:39:30","host":"us-037*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"155.8 KB","destSize":"155.9 KB","compressRate":"100.1%"},{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-annotate-web.gif","sourceStatusCode":200,"destWidth":1264,"destHeight":844,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn34@2020_5/2020/09/06/18-39-43-062_406c4d7ddc8e7371.webp","sourceBytes":576158,"destBytes":590932,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":14082,"convertSpendMs":11661,"createdTime":"2020-09-07 02:39:30","host":"europe-57*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"562.7 KB","destSize":"577.1 KB","compressRate":"102.6%"},{"code":1,"isDone":false,"source":"http://www.zmonster.me/assets/img/org-roam-store-link.gif","sourceStatusCode":200,"destWidth":1267,"destHeight":838,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn6@2020_1/2020/09/06/18-39-49-073_151c4a0dbd2411a3.webp","sourceBytes":397226,"destBytes":365174,"targetWebpQuality":75,"feedId":16385,"totalSpendMs":19714,"convertSpendMs":17870,"createdTime":"2020-09-07 02:39:30","host":"us-53*","referer":"http://www.zmonster.me/2020/06/27/org-roam-introduction","linkMd5ListStr":"83dfab936217ca50b493312196ff5359","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"387.9 KB","destSize":"356.6 KB","compressRate":"91.9%"}],"successGithubMap":{"myreaderx8":1,"myreaderx15":1,"myreaderx6":1,"myreaderx32":1,"myreaderx10":1,"myreaderx3":1,"myreaderx33":1,"myreaderx22":1,"myreaderx12":1,"myreaderx2":1,"myreaderx13":1,"myreaderx1":1,"myreaderx30":1,"myreaderx31":1,"myreaderx5oss":1},"failGithubMap":{"myreaderx23":1}}