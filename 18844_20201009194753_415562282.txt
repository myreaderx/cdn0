{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-10 03:44:51","updatedTime":"2020-10-10 03:44:51","title":".NET Interactive Preview 3: VS Code Insiders and .NET Polyglot Notebooks","link":"https://devblogs.microsoft.com/dotnet/?p=30133","description":"<p>In <a href=\"https://devblogs.microsoft.com/dotnet/net-interactive-is-here-net-notebooks-preview-2/\" rel=\"nofollow\">.NET Interactive Preview 2</a>, we announced that in addition to Jupyter Notebook and Jupyter Lab, users could use nteract as well. In this preview, users can add VS Code Insiders to that list. With the VS Code Insiders experience, users can get started with .NET notebooks without needing to install Jupyter. The VS Code experience is still a work in progress, and is only available in VS Code Insiders. We look forward to your <a href=\"https://github.com/dotnet/interactive/issues\">feedback</a>.</p> \n<h3><a id=\"user-content-getting-started\" class=\"anchor\" href=\"https://devblogs.microsoft.com/dotnet/?p=30133#getting-started\" aria-hidden=\"true\"></a>Getting started</h3> \n<p>To get started with .NET notebooks, please install the following:</p> \n<ul> \n <li>The latest version of <a href=\"https://code.visualstudio.com/insiders/\" rel=\"nofollow\">VS Code Insiders</a>.</li> \n <li>The latest <a href=\"https://dotnet.microsoft.com/download/dotnet-core/3.1\" rel=\"nofollow\">.NET Core 3.1 SDK</a>.</li> \n <li>The <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode\" rel=\"nofollow\">.NET Interactive Notebooks extension</a>.</li> \n</ul> \n<h3><a id=\"user-content-creating-a-new-net-notebook\" class=\"anchor\" href=\"https://devblogs.microsoft.com/dotnet/?p=30133#creating-a-new-net-notebook\" aria-hidden=\"true\"></a>Creating a new .NET notebook</h3> \n<p>Once you have the requirements listed above installed, you are ready to start creating .NET Notebooks in VS Code Insiders.</p> \n<p>To create a new notebook, open the Command Palette(<code>Ctrl+Shift+P</code>), and select <strong>Create new blank notebook</strong>. You can also create a new notebook with <code>Ctrl+Shift+Alt+N</code> key combination. <img src=\"https://user-images.githubusercontent.com/2546640/94438730-833fed80-016d-11eb-94e6-da7b51abf58a.gif\" alt=\"newnotebook\" /></p> \n<p>Every notebook has a default language. A new blank notebook starts with a C# cell, as noted in the lower right corner of the cell. If you click on <strong>C# (.NET Interactive)</strong>, you can change the language of the cell. If you change the language of the cell, the next cell you create will continue with that language.</p> \n<p>To add a cell, hover above or below an existing cell. Buttons appear allowing you to specify the type of cell to add, <strong>+Code</strong> or <strong>+Markdown</strong>. If you select <strong>+Code</strong>, you can change the language afterward.</p> \n<p><img src=\"https://user-images.githubusercontent.com/2546640/94440263-77552b00-016f-11eb-8a1b-f08bb24dd1c1.gif\" alt=\"cellabove-below\" /></p> \n<h3><a id=\"user-content-opening-an-existing-net-notebook\" class=\"anchor\" href=\"https://devblogs.microsoft.com/dotnet/?p=30133#opening-an-existing-net-notebook\" aria-hidden=\"true\"></a>Opening an existing .NET notebook</h3> \n<p>To open an existing .NET notebook, bring up the Command Palette and select <strong>Open notebook</strong>. Now, navigate to a local <code>.ipynb</code> file.</p> \n<p><img src=\"https://user-images.githubusercontent.com/2546640/94441970-67d6e180-0171-11eb-8319-c12ba82c3d30.gif\" alt=\"opennotebook\" /></p> \n<p>With .NET notebooks in VS Code, you can take advantage of rich coding experiences like IntelliSense, and you can use all of your favorite VS Code extensions.</p> \n<h2><a id=\"user-content-polyglot-notebooks-variable-sharing\" class=\"anchor\" href=\"https://devblogs.microsoft.com/dotnet/?p=30133#polyglot-notebooks-variable-sharing\" aria-hidden=\"true\"></a>Polyglot Notebooks: Variable Sharing</h2> \n<p>.NET Interactive is a multi-language kernel that allows you to create notebooks that use different languages together. You switch languages from one cell to another, as appropriate to the task at hand. Pulling values into the notebook and moving values between languages are useful capabilities, which we’ve enabled with a pair of magic commands: <code>#!share</code> and <code>#!value</code>.</p> \n<h3><a id=\"user-content-share\" class=\"anchor\" href=\"https://devblogs.microsoft.com/dotnet/?p=30133#share\" aria-hidden=\"true\"></a><code>#!share</code></h3> \n<p>.NET Interactive provides subkernels for three languages (C#, F#, and PowerShell) within the same process. You can share variables between the .NET subkernels using the <code>#!share</code> magic command. Once a variable has been declared in one of these subkernels, it can be accessed from another. And because these kernels run in the same process, if the type of a variable is a reference type, changes to its state can be observed immediately from other kernels.</p> \n<p><strong>Example</strong>: In this GIF, I’ve declared a C# variable <code>csharpVariable</code> in one cell, which I then share with F# using <code>#!share --from csharp csharpVariable</code>.</p> \n<p><img src=\"https://user-images.githubusercontent.com/547415/94644861-3d834200-029f-11eb-9cc1-198d13ee634d.gif\" alt=\"basic-variable-sharing\" /></p> \n<h3><a id=\"user-content-value\" class=\"anchor\" href=\"https://devblogs.microsoft.com/dotnet/?p=30133#value\" aria-hidden=\"true\"></a><code>#!value</code></h3> \n<p>Importing text into a notebook, whether from the clipboard or a JSON or CSV file or a URL, is a fairly common scenario. The <code>#!value</code> magic command makes it easier to get text into your notebook without having to explicitly declare a string variable and worry about correctly escaping it. When you execute a cell using <code>#!value</code>, the content is stored in memory. (It will also be stored in your <code>.ipynb</code> output, and displayed, if you use the <code>--mime-type</code> switch.) So how do you access the value once it’s stored? The <code>#!value</code> magic command actually refers to another subkernel. In the GIF above, you can see it in the IntelliSense list that’s shown when <code>#!share</code> is typed. Once a value has been stored using <code>#!value</code>, you can share it with another subkernel just like you can from C#, F#, or PowerShell.</p> \n<p>There are a few ways to use <code>#!value</code> to store data in a notebook session. The example below shows you how to do it from the clipboard. For examples of other ways to use it, including reading from files and URLs, please check out <a href=\"https://github.com/dotnet/interactive/blob/main/docs/variable-sharing.md#direct-data-entry-with-value\"><em>Direct data entry with <code>#!value</code></em></a>.</p> \n<p><img src=\"https://user-images.githubusercontent.com/2546640/94477477-f4989400-019f-11eb-93d0-36de2e9e8e6f.gif\" alt=\"value\" /></p> \n<h3><a id=\"user-content-sharing-kernel-values-with-javascript\" class=\"anchor\" href=\"https://devblogs.microsoft.com/dotnet/?p=30133#sharing-kernel-values-with-javascript\" aria-hidden=\"true\"></a>Sharing kernel values with JavaScript</h3> \n<p>.NET Interactives has APIs available that simplify the process of directly writing HTML and JavaScript in the same notebook where you write .NET code. This enables you to create custom visualizations and access the broader ecosystem of JavaScript libraries without needing .NET wrappers.</p> \n<p>In the example below, we are sharing code from the .NET kernel using JavaScript and using it to render HTML, all in a single notebook.</p> \n<p>First, I build a collection of items in C# representing <code>fruits</code> with prices and quantities.</p> \n<p><img src=\"https://user-images.githubusercontent.com/2546640/94603808-c3ce6280-0264-11eb-96c2-b83c2e2b718b.gif\" alt=\"csharp\" /></p> \n<p>Next, since .NET Interactive is polyglot, I can switch to JavaScript. (While the VS Code experience has a language chooser, you can also switch languages using magic commands like <code>#!javascript</code>, so that you can use these features in Jupyter as well). In the JavaScript cell, I load the <a href=\"https://d3js.org/\" rel=\"nofollow\">D3.js</a> visualization library and when it’s loaded, I access the <code>fruits</code> variable from the C# kernel using <code>interactive.csharp.getVariable(\"fruits\")</code>. This <code>interactive</code> object has properties corresponding to each of the .NET Interactive subkernels. The variable from the subkernel is serialized into JSON and then deserialized into a JavaScript object (<code>basket</code>) that I’ll use to render my bar chart with D3.js.</p> \n<p><img src=\"https://user-images.githubusercontent.com/2546640/94603756-b31dec80-0264-11eb-8d0b-3fd9c28ae0ec.gif\" alt=\"javascript\" /></p> \n<p>Final step: Let’s render the results. We are now going to use HTML to render our chart and JavaScript to call our function. The HTML has to be rendered first because that’s where the JavaScript will build the visualization. But we don’t have to put them in separate cells. Using magic commands, we can switch languages within the same cell so that the output renders at the bottom of the notebook.</p> \n<pre><code>#!html\n&lt;svg id = \"fruit_display\" width = \"100%\"&gt;&lt;/svg&gt;\n\n#!js\nrenderfruits(\"svg#fruit_display\");\n</code></pre> \n<p><img src=\"https://user-images.githubusercontent.com/2546640/94603830-cb8e0700-0264-11eb-9226-ab819fa07d68.gif\" alt=\"HTMLJS\" /></p> \n<p>And there you have it! A simple demonstration on how you can leverage .NET Interactive polyglot notebooks.</p> \n<p>To learn more about <a href=\"https://github.com/dotnet/interactive/blob/main/docs/variable-sharing.md\">variable sharing</a>, <a href=\"https://github.com/dotnet/interactive/blob/main/docs/kernels-overview.md\">sub-kernels</a>, and <a href=\"https://github.com/dotnet/interactive/blob/main/docs/javascript-overview.md\">HTML and JavaScript in .NET Interactive</a>, please check out the linked documentation.</p> \n<h3><a id=\"user-content-documentation\" class=\"anchor\" href=\"https://devblogs.microsoft.com/dotnet/?p=30133#documentation\" aria-hidden=\"true\"></a>Documentation</h3> \n<p>We are also happy to share some progress on <a href=\"https://github.com/dotnet/interactive/tree/main/docs\">.NET Interactive documentation</a>. You can now learn more about .NET Interactive’s architecture, variable sharing, visualization, and other features.</p> \n<p>The documentation is still a work progress, so we look forward to hearing from you.</p> \n<h3><a id=\"user-content-resources\" class=\"anchor\" href=\"https://devblogs.microsoft.com/dotnet/?p=30133#resources\" aria-hidden=\"true\"></a>Resources</h3> \n<ul> \n <li><a href=\"https://github.com/dotnet/interactive/tree/main/docs\">Documentation</a></li> \n <li><a href=\"https://github.com/dotnet/interactive/tree/main/samples\">Samples</a></li> \n <li><a href=\"https://github.com/dotnet/interactive\">Source code</a></li> \n <li><a href=\"https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode\" rel=\"nofollow\">.NET Interactive Notebooks Extension</a></li> \n</ul> \n<p>Happy interactive programming!</p> \n<p>The post <a rel=\"nofollow\" href=\"https://devblogs.microsoft.com/dotnet/net-interactive-preview-3-vs-code-insiders-and-polyglot-notebooks/\">.NET Interactive Preview 3: VS Code Insiders and .NET Polyglot Notebooks</a> appeared first on <a rel=\"nofollow\" href=\"https://devblogs.microsoft.com/dotnet\">.NET Blog</a>.</p>","descriptionType":"html","publishedDate":"Wed, 30 Sep 2020 16:01:43 +0000","feedId":18844,"bgimg":"https://user-images.githubusercontent.com/2546640/94438730-833fed80-016d-11eb-94e6-da7b51abf58a.gif","linkMd5":"d116c6e0e2105b5d02795ddc73035143","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn100@2020_1/2020/10/09/19-45-48-367_0224411204f980ed.webp","destWidth":1920,"destHeight":1008,"sourceBytes":1144446,"destBytes":314976,"author":"Maria Naggaga","articleImgCdnMap":{"https://user-images.githubusercontent.com/2546640/94438730-833fed80-016d-11eb-94e6-da7b51abf58a.gif":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn100@2020_1/2020/10/09/19-45-48-367_0224411204f980ed.webp","https://user-images.githubusercontent.com/2546640/94440263-77552b00-016f-11eb-8a1b-f08bb24dd1c1.gif":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn56@2020_3/2020/10/09/19-46-01-408_aee3078fd5227e00.webp","https://user-images.githubusercontent.com/2546640/94441970-67d6e180-0171-11eb-8319-c12ba82c3d30.gif":null,"https://user-images.githubusercontent.com/547415/94644861-3d834200-029f-11eb-9cc1-198d13ee634d.gif":null,"https://user-images.githubusercontent.com/2546640/94477477-f4989400-019f-11eb-93d0-36de2e9e8e6f.gif":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn32@2020_6/2020/10/09/19-47-20-809_dcfd87a17a546c33.webp","https://user-images.githubusercontent.com/2546640/94603808-c3ce6280-0264-11eb-96c2-b83c2e2b718b.gif":"https://cdn.jsdelivr.net/gh/myreaderx/cdn49@2020_6/2020/10/09/19-46-03-319_79cdc3b7d1198fa9.webp","https://user-images.githubusercontent.com/2546640/94603756-b31dec80-0264-11eb-8d0b-3fd9c28ae0ec.gif":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn43@2020_3/2020/10/09/19-46-16-022_f3b27c1810e4ef10.webp","https://user-images.githubusercontent.com/2546640/94603830-cb8e0700-0264-11eb-9226-ab819fa07d68.gif":null},"publishedOrCreatedDate":1602272691248}],"record":{"createdTime":"2020-10-10 03:44:51","updatedTime":"2020-10-10 03:44:51","feedId":18844,"fetchDate":"Fri, 09 Oct 2020 19:44:51 +0000","fetchMs":112,"handleMs":11,"totalMs":182524,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"96c330f7a9d7d08f2adfacbb5227a07a","hostName":"europe61*","requestId":"0b3b52fa163c4d8bb18fd9bb3aa5e45e_18844","contentType":"application/rss+xml; charset=UTF-8","totalBytes":1625560,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":8,"articlesImgsGithubTotal":5,"successGithubMap":{"myreaderx32":1,"myreaderx22":1,"myreaderx24":1,"myreaderx29":1,"myreaderx":1},"failGithubMap":{"myreaderx23":1}},"feed":{"createdTime":"2020-09-07 02:18:28","updatedTime":"2020-09-07 02:52:23","id":18844,"name":".NET Blog","url":"https://devblogs.microsoft.com/dotnet/feed/","subscriber":176,"website":null,"icon":"https://devblogs.microsoft.com/dotnet/wp-content/uploads/sites/10/2018/10/Microsoft-Favicon.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx65/cdn84@2020_1/2020/09/06/18-52-23-009_70f6b779a5ea8282.png","description":"Free. Cross-platform. Open source. A developer platform for building all your apps.","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-10-10 03:47:53","updatedTime":"2020-10-10 03:47:53","id":null,"feedId":18844,"linkMd5":"d116c6e0e2105b5d02795ddc73035143"}],"tmpCommonImgCdnBytes":314976,"tmpBodyImgCdnBytes":1310584,"tmpBgImgCdnBytes":0,"extra4":{"start":1602272691112,"total":0,"statList":[{"spend":125,"msg":"获取xml内容"},{"spend":11,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":122916,"msg":"正文链接上传到cdn"}]},"extra5":8,"extra6":6,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://user-images.githubusercontent.com/2546640/94603830-cb8e0700-0264-11eb-9226-ab819fa07d68.gif","sourceStatusCode":200,"destWidth":1912,"destHeight":1012,"sourceBytes":516421,"destBytes":99366,"targetWebpQuality":75,"feedId":18844,"totalSpendMs":9390,"convertSpendMs":7941,"createdTime":"2020-10-10 03:45:52","host":"europe66*","referer":"https://devblogs.microsoft.com/dotnet/?p=30133","linkMd5ListStr":"d116c6e0e2105b5d02795ddc73035143","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn48/contents/2020/10/09/19-46-01-537_a5415b8d146f59d2.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Oct 2020 19:46:02 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9AF4:1799:9C9452:B9BFA5:5F80BDF9"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602274288"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn48/contents/2020/10/09/19-46-01-537_a5415b8d146f59d2.webp","historyStatusCode":[],"spendMs":596},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"504.3 KB","destSize":"97 KB","compressRate":"19.2%"},{"code":1,"isDone":false,"source":"https://user-images.githubusercontent.com/2546640/94603830-cb8e0700-0264-11eb-9226-ab819fa07d68.gif","sourceStatusCode":200,"destWidth":1912,"destHeight":1012,"sourceBytes":516421,"destBytes":99366,"targetWebpQuality":75,"feedId":18844,"totalSpendMs":8683,"convertSpendMs":8137,"createdTime":"2020-10-10 03:46:02","host":"europe66*","referer":"https://devblogs.microsoft.com/dotnet/?p=30133","linkMd5ListStr":"d116c6e0e2105b5d02795ddc73035143","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn48/contents/2020/10/09/19-46-10-360_a5415b8d146f59d2.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Oct 2020 19:46:10 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9AF4:1799:9C9576:B9C0E3:5F80BE01"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602274288"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn48/contents/2020/10/09/19-46-10-360_a5415b8d146f59d2.webp","historyStatusCode":[],"spendMs":464},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"504.3 KB","destSize":"97 KB","compressRate":"19.2%"},null,null,null,null,null],"extra10_invalidATagHrefValue":{"https://devblogs.microsoft.com/dotnet/?p=30133_#share":"https://devblogs.microsoft.com/dotnet/?p=30133#share","https://devblogs.microsoft.com/dotnet/?p=30133_#documentation":"https://devblogs.microsoft.com/dotnet/?p=30133#documentation","https://devblogs.microsoft.com/dotnet/?p=30133_#value":"https://devblogs.microsoft.com/dotnet/?p=30133#value","https://devblogs.microsoft.com/dotnet/?p=30133_#sharing-kernel-values-with-javascript":"https://devblogs.microsoft.com/dotnet/?p=30133#sharing-kernel-values-with-javascript","https://devblogs.microsoft.com/dotnet/?p=30133_#getting-started":"https://devblogs.microsoft.com/dotnet/?p=30133#getting-started","https://devblogs.microsoft.com/dotnet/?p=30133_#opening-an-existing-net-notebook":"https://devblogs.microsoft.com/dotnet/?p=30133#opening-an-existing-net-notebook","https://devblogs.microsoft.com/dotnet/?p=30133_#polyglot-notebooks-variable-sharing":"https://devblogs.microsoft.com/dotnet/?p=30133#polyglot-notebooks-variable-sharing","https://devblogs.microsoft.com/dotnet/?p=30133_#resources":"https://devblogs.microsoft.com/dotnet/?p=30133#resources","https://devblogs.microsoft.com/dotnet/?p=30133_#creating-a-new-net-notebook":"https://devblogs.microsoft.com/dotnet/?p=30133#creating-a-new-net-notebook"},"extra111_proxyServerAndStatMap":{"http://us-54.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-039.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-028.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe66.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe67.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://us-016.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://us-040.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://user-images.githubusercontent.com/2546640/94438730-833fed80-016d-11eb-94e6-da7b51abf58a.gif","sourceStatusCode":200,"destWidth":1920,"destHeight":1008,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn100@2020_1/2020/10/09/19-45-48-367_0224411204f980ed.webp","sourceBytes":1144446,"destBytes":314976,"targetWebpQuality":75,"feedId":18844,"totalSpendMs":58198,"convertSpendMs":56899,"createdTime":"2020-10-10 03:44:51","host":"us-020*","referer":"https://devblogs.microsoft.com/dotnet/?p=30133","linkMd5ListStr":"d116c6e0e2105b5d02795ddc73035143,d116c6e0e2105b5d02795ddc73035143","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.1 MB","destSize":"307.6 KB","compressRate":"27.5%"},{"code":1,"isDone":false,"source":"https://user-images.githubusercontent.com/2546640/94440263-77552b00-016f-11eb-8a1b-f08bb24dd1c1.gif","sourceStatusCode":200,"destWidth":1856,"destHeight":464,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn56@2020_3/2020/10/09/19-46-01-408_aee3078fd5227e00.webp","sourceBytes":353937,"destBytes":72850,"targetWebpQuality":75,"feedId":18844,"totalSpendMs":11520,"convertSpendMs":10430,"createdTime":"2020-10-10 03:45:50","host":"us-54*","referer":"https://devblogs.microsoft.com/dotnet/?p=30133","linkMd5ListStr":"d116c6e0e2105b5d02795ddc73035143","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"345.6 KB","destSize":"71.1 KB","compressRate":"20.6%"},{"code":1,"isDone":false,"source":"https://user-images.githubusercontent.com/2546640/94603808-c3ce6280-0264-11eb-96c2-b83c2e2b718b.gif","sourceStatusCode":200,"destWidth":1912,"destHeight":1012,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn49@2020_6/2020/10/09/19-46-03-319_79cdc3b7d1198fa9.webp","sourceBytes":818405,"destBytes":205428,"targetWebpQuality":75,"feedId":18844,"totalSpendMs":14238,"convertSpendMs":12479,"createdTime":"2020-10-10 03:45:50","host":"europe67*","referer":"https://devblogs.microsoft.com/dotnet/?p=30133","linkMd5ListStr":"d116c6e0e2105b5d02795ddc73035143","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"799.2 KB","destSize":"200.6 KB","compressRate":"25.1%"},{"code":1,"isDone":false,"source":"https://user-images.githubusercontent.com/2546640/94603756-b31dec80-0264-11eb-8d0b-3fd9c28ae0ec.gif","sourceStatusCode":200,"destWidth":1912,"destHeight":1012,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn43@2020_3/2020/10/09/19-46-16-022_f3b27c1810e4ef10.webp","sourceBytes":2243024,"destBytes":841402,"targetWebpQuality":75,"feedId":18844,"totalSpendMs":24628,"convertSpendMs":23041,"createdTime":"2020-10-10 03:45:52","host":"us-016*","referer":"https://devblogs.microsoft.com/dotnet/?p=30133","linkMd5ListStr":"d116c6e0e2105b5d02795ddc73035143","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.1 MB","destSize":"821.7 KB","compressRate":"37.5%"},{"code":1,"isDone":false,"source":"https://user-images.githubusercontent.com/2546640/94477477-f4989400-019f-11eb-93d0-36de2e9e8e6f.gif","sourceStatusCode":200,"destWidth":1912,"destHeight":1012,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn32@2020_6/2020/10/09/19-47-20-809_dcfd87a17a546c33.webp","sourceBytes":761244,"destBytes":190904,"targetWebpQuality":75,"feedId":18844,"totalSpendMs":29458,"convertSpendMs":28267,"createdTime":"2020-10-10 03:46:52","host":"us-54*","referer":"https://devblogs.microsoft.com/dotnet/?p=30133","linkMd5ListStr":"d116c6e0e2105b5d02795ddc73035143","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"743.4 KB","destSize":"186.4 KB","compressRate":"25.1%"}],"successGithubMap":{"myreaderx32":1,"myreaderx22":1,"myreaderx24":1,"myreaderx29":1,"myreaderx":1},"failGithubMap":{"myreaderx23":1}}