{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-13 12:52:10","updatedTime":"2020-10-13 12:52:10","title":"Valet: A Realtime Server for Rapid Prototyping","link":"http://buildinternet.com/?p=10437","description":"<p>While developing the <a href=\"http://getrobin.com\">Robin</a> platform at One Mighty Roar, we&#8217;ve found ourselves pushing realtime data between things like RFID kiosks, Bluetooth devices, PHP servers, and various AngularJS frontends. Along the way, we&#8217;ve built a simple but flexible server that uses Socket.io and Node.js to make passing around realtime data as simple as possible.</p>\n<p>We&#8217;ve come to think of Valet as less of a server and more of a tool &#8211; once you&#8217;ve set it up once, you can use it for many concurrent projects without any customization. In this post, we&#8217;ll go over some of the aspects of Valet and how to use it. There&#8217;s more information on the <a href=\"http://github.com/onemightyroar/valet\">Github repo</a>, including detailed instructions on deploying Valet on various platforms.</p>\n<h3>Installing Valet</h3>\n<p>Valet simply accepts data and re-emits it to connected clients. A client could be some Javascript running in the browser, a server, an internet-connected piece of hardware &#8211; anything that can handle WebSocket connections.</p>\n<p>To install Valet, run:</p><pre class=\"crayon-plain-tag\">sudo npm install -g valet</pre><p>To start your shiny new Valet server on <pre class=\"crayon-plain-tag\">localhost:9200</pre>*, run:</p><pre class=\"crayon-plain-tag\">valet</pre><p>*Note: all of the examples on this page use the default URL <code><em><span style=\"color: #000000;\">http://localhost:9200</span></em></code>. If you deploy Valet on a PaaS like Amazon EC2 or Nodejitsu, you can generally drop the port from the base URL.</p>\n<h3>Event bubbling with socket namespaces</h3>\n<p>One of our goals when building Valet was to be able to instantly use it for new projects, without writing or deploying any new server-side code. If a single instance of Valet is going to be passing data between multiple projects, it is necessary to separate the connected clients by project. Socket.io can do this out-of-the-box, and it&#8217;s called &#8220;namespacing&#8221;.</p>\n<p>Clients (frontends, devices, or even other servers) determine what namespaces they want to join by connecting to a specific URL. Multiple namespaces can be joined by calling <pre class=\"crayon-plain-tag\">connect</pre>  multiple times (only one WebSocket connection will actually be used). For example, to join the <pre class=\"crayon-plain-tag\">/temperature</pre>  and <pre class=\"crayon-plain-tag\">/humidity</pre>  namespaces, your client would have code that looks something like:</p><pre class=\"crayon-plain-tag\">temperature = io.connect('http://localhost:9200/temperature')\nhumidity = io.connect('http://localhost:9200/humidity')</pre><p>Valet extends Socket.io&#8217;s namespaces in a useful way: if you use more complex namespaces, your events and data will &#8220;bubble up&#8221;. For example, data you send to a namespace like <code>/buildings/123/rooms/456/temperature</code> will be emitted on the following three namespaces:</p><pre class=\"crayon-plain-tag\">/buildings/123/rooms/456/temperature\n/buildings/123/temperature\n/temperature</pre><p>This means that you can listen to <code><pre class=\"crayon-plain-tag\">/buildings/123/rooms/456/temperature</pre> </code> to get events from temperature sensors in room 456, <code><pre class=\"crayon-plain-tag\">/buildings/123/temperature</pre> </code> to get events from all of the temperature sensors in building 123, or <code><pre class=\"crayon-plain-tag\">/temperature</pre> </code> to get events from all of the temperature sensors, everywhere.</p>\n<h3>Sending data to Valet</h3>\n<p>You can pass data to Valet by either sending a POST request to your Valet server, or by emitting a socket event called &#8220;post&#8221;. For example, to send data from your terminal using CURL:</p><pre class=\"crayon-plain-tag\">curl -X POST -H \"Content-Type: application/json\" -d '{\"event\":\"reading\",\"data\":{\"temp\":83.3826}}' http://localhost:9200/buildings/123/rooms/456/temperature</pre><p>To send the same data using a socket is a two step process &#8211; first, you must connect to your Valet server on the root namespace. Then, emit an event called <code><pre class=\"crayon-plain-tag\">post</pre> </code> containing the <code><pre class=\"crayon-plain-tag\">event</pre> </code>, <code><pre class=\"crayon-plain-tag\">namespace</pre> </code>, and <code><pre class=\"crayon-plain-tag\">data</pre> </code> you would like to emit. For example:</p><pre class=\"crayon-plain-tag\">temperature = io.connect('http://localhost:9200');\ntemperature.emit('post',{\n    event:\"reading\",\n    namespace:\"/buildings/123/rooms/456/temperature\",\n    data:{temp:83.3826}\n});</pre><p>In either case, an event called <code><pre class=\"crayon-plain-tag\">reading</pre> </code> with data <code><pre class=\"crayon-plain-tag\">{temp:83.3826}</pre> </code> will be emitted on the three namespaces above.</p>\n<h3>Listening for data from Valet</h3>\n<p>Anything that can run Socket.io can be a client. Simply require Socket.io on your client, connect on whatever namespaces you like, and listen for events.</p>\n<p>Here is an example client that listens for temperature readings. To demonstrate the namespace &#8220;event bubbling&#8221; behavior described above, this example listens for events on the <code><pre class=\"crayon-plain-tag\">/buildings/123/temperature</pre> </code> namespace, even though they will be sent to the server on the <code><pre class=\"crayon-plain-tag\">/buildings/123/rooms/456/temperature</pre> </code> namespace.</p><pre class=\"crayon-plain-tag\">&#60;!DOCTYPE html&#62;\n&#60;head&#62;\n\n    &#60;!-- Valet serves up socket.io.js on a special endpoint --&#62;\n    &#60;script src=\"http://localhost:9200/socket.io/socket.io.js\"&#62;&#60;/script&#62;\n\n    &#60;script type=\"text/javascript\"&#62;\n\n        // Connect on the \"buildingTemp\" namespace\n        var buildingTemp = io.connect('/buildings/123/temperature');\n\n        // \"Connect\" events are fired when the connection happens successfully\n        buildingTemp.on('connect',function(){\n            console.log('connected to the \"buildingTemp\" namespace!');\n        });\n\n        // Listen for the \"reading\" event we will be POSTing\n        buildingTemp.on('reading',function(data){\n            console.log('Got data on the \"buildingTemp\" namespace!');\n            console.log(data);\n        });\n    &#60;/script&#62;\n&#60;/head&#62;\n&#60;body&#62;&#60;/body&#62;</pre><p></p>\n<h3>Wrapping up</h3>\n<p>Right now, we&#8217;ve got three AngularJS apps, a PHP backend, and a Raspberry Pi all passing data through a single Valet server running on a (free) micro instance on ec2. Setting up Valet in a new project generally takes &#60; 10 lines of code on the client-side, and no work at all on the server-side.</p>\n<p>We wanted an always-on, realtime, easy-to-use realtime server, so we built Valet. Hopefully you&#8217;ve gotten a sense for how easy it is to start building things that can communicate in realtime.</p>\n<p>Valet is extremely young and will continue to evolve as we find new and interesting applications for it. If you&#8217;ve got a feature you would like to see, or you come across a bug, feel free to submit an issue or pull request via <a href=\"http://github.com/onemightyroar/valet\">Github</a>.</p>\n<div class=\"feedflare\">\n<a href=\"http://feeds.feedburner.com/~ff/buildinternet?a=xlJpapt1GEs:IsZ_F3QysGc:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/buildinternet?d=yIl2AUoC8zA\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/buildinternet?a=xlJpapt1GEs:IsZ_F3QysGc:D7DqB2pKExk\"><img src=\"http://feeds.feedburner.com/~ff/buildinternet?i=xlJpapt1GEs:IsZ_F3QysGc:D7DqB2pKExk\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/buildinternet?a=xlJpapt1GEs:IsZ_F3QysGc:F7zBnMyn0Lo\"><img src=\"http://feeds.feedburner.com/~ff/buildinternet?i=xlJpapt1GEs:IsZ_F3QysGc:F7zBnMyn0Lo\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/buildinternet?a=xlJpapt1GEs:IsZ_F3QysGc:V_sGLiPBpWU\"><img src=\"http://feeds.feedburner.com/~ff/buildinternet?i=xlJpapt1GEs:IsZ_F3QysGc:V_sGLiPBpWU\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/buildinternet?a=xlJpapt1GEs:IsZ_F3QysGc:qj6IDK7rITs\"><img src=\"http://feeds.feedburner.com/~ff/buildinternet?d=qj6IDK7rITs\" border=\"0\"></img></a> <a href=\"http://feeds.feedburner.com/~ff/buildinternet?a=xlJpapt1GEs:IsZ_F3QysGc:gIN9vFwOqvQ\"><img src=\"http://feeds.feedburner.com/~ff/buildinternet?i=xlJpapt1GEs:IsZ_F3QysGc:gIN9vFwOqvQ\" border=\"0\"></img></a>\n</div><img src=\"http://feeds.feedburner.com/~r/buildinternet/~4/xlJpapt1GEs\" height=\"1\" width=\"1\" alt=\"\"/>","descriptionType":"html","publishedDate":"Thu, 22 Aug 2013 14:55:09 +0000","feedId":16880,"bgimg":"http://feeds.feedburner.com/~ff/buildinternet?d=yIl2AUoC8zA","linkMd5":"3a790d3969f04ec7181654871325458f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn6@2020_5/2020/10/13/04-52-10-738_1923163e230bc82b.webp","destWidth":62,"destHeight":24,"sourceBytes":997,"destBytes":310,"author":"Alonso Holmes","articleImgCdnMap":{"http://feeds.feedburner.com/~ff/buildinternet?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn6@2020_5/2020/10/13/04-52-10-738_1923163e230bc82b.webp","http://feeds.feedburner.com/~ff/buildinternet?i=xlJpapt1GEs:IsZ_F3QysGc:D7DqB2pKExk":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn20@2020_3/2020/10/13/04-52-11-625_90bedf9127b52a55.webp","http://feeds.feedburner.com/~ff/buildinternet?i=xlJpapt1GEs:IsZ_F3QysGc:F7zBnMyn0Lo":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn25@2020_3/2020/10/13/04-52-11-610_03d0f6fb7ddb5376.webp","http://feeds.feedburner.com/~ff/buildinternet?i=xlJpapt1GEs:IsZ_F3QysGc:V_sGLiPBpWU":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn33@2020_5/2020/10/13/04-52-11-694_8acd6fc6cf64aed2.webp","http://feeds.feedburner.com/~ff/buildinternet?d=qj6IDK7rITs":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn17@2020_1/2020/10/13/04-52-11-594_6b8d1e1d5d4a0942.webp","http://feeds.feedburner.com/~ff/buildinternet?i=xlJpapt1GEs:IsZ_F3QysGc:gIN9vFwOqvQ":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn30@2020_1/2020/10/13/04-52-11-760_13380a07ea522bdb.webp","http://feeds.feedburner.com/~r/buildinternet/~4/xlJpapt1GEs":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn13@2020_1/2020/10/13/04-52-11-771_95fcd0d87019089c.webp"},"publishedOrCreatedDate":1602564730673}],"record":{"createdTime":"2020-10-13 12:52:10","updatedTime":"2020-10-13 12:52:10","feedId":16880,"fetchDate":"Tue, 13 Oct 2020 04:52:10 +0000","fetchMs":137,"handleMs":180241,"totalMs":182373,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"d30ce248a5f8ef1e93fb032827363e30","hostName":"us-031*","requestId":"f3e624b52b1d4f8997c5b311e318bf0b_16880","contentType":"text/xml; charset=UTF-8","totalBytes":2314,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":7,"articlesImgsGithubTotal":7,"successGithubMap":{"myreaderx7":1,"myreaderx6":1,"myreaderx21":1,"myreaderx13":1,"myreaderx30":1,"myreaderx31":1,"myreaderx19":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:13:50","updatedTime":"2020-09-07 02:47:44","id":16880,"name":"Build Internet","url":"http://feeds.feedburner.com/buildinternet","subscriber":198,"website":null,"icon":"http://buildinternet.com/favicon.ico","icon_jsdelivr":null,"description":"Web Design, Development, and Business","weekly":null,"link":"http://buildinternet.com"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":310,"tmpBodyImgCdnBytes":2004,"tmpBgImgCdnBytes":0,"extra4":{"start":1602564550289,"total":0,"statList":[{"spend":143,"msg":"获取xml内容"},{"spend":180241,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":1126,"msg":"正文链接上传到cdn"}]},"extra5":7,"extra6":7,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-038.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-013.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-037.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~ff/buildinternet?d=yIl2AUoC8zA","sourceStatusCode":200,"destWidth":62,"destHeight":24,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn6@2020_5/2020/10/13/04-52-10-738_1923163e230bc82b.webp","sourceBytes":997,"destBytes":310,"targetWebpQuality":75,"feedId":16880,"totalSpendMs":842,"convertSpendMs":10,"createdTime":"2020-10-13 12:52:10","host":"us-021*","referer":"http://buildinternet.com/?p=10437","linkMd5ListStr":"3a790d3969f04ec7181654871325458f,3a790d3969f04ec7181654871325458f","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"997 B","destSize":"310 B","compressRate":"31.1%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~ff/buildinternet?d=qj6IDK7rITs","sourceStatusCode":200,"destWidth":113,"destHeight":24,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn17@2020_1/2020/10/13/04-52-11-594_6b8d1e1d5d4a0942.webp","sourceBytes":1072,"destBytes":460,"targetWebpQuality":75,"feedId":16880,"totalSpendMs":811,"convertSpendMs":4,"createdTime":"2020-10-13 12:52:11","host":"us-037*","referer":"http://buildinternet.com/?p=10437","linkMd5ListStr":"3a790d3969f04ec7181654871325458f","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1 KB","destSize":"460 B","compressRate":"42.9%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~ff/buildinternet?i=xlJpapt1GEs:IsZ_F3QysGc:F7zBnMyn0Lo","sourceStatusCode":200,"destWidth":105,"destHeight":24,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn25@2020_3/2020/10/13/04-52-11-610_03d0f6fb7ddb5376.webp","sourceBytes":1058,"destBytes":436,"targetWebpQuality":75,"feedId":16880,"totalSpendMs":829,"convertSpendMs":5,"createdTime":"2020-10-13 12:52:11","host":"us-025*","referer":"http://buildinternet.com/?p=10437","linkMd5ListStr":"3a790d3969f04ec7181654871325458f","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1 KB","destSize":"436 B","compressRate":"41.2%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~ff/buildinternet?i=xlJpapt1GEs:IsZ_F3QysGc:D7DqB2pKExk","sourceStatusCode":200,"destWidth":92,"destHeight":24,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn20@2020_3/2020/10/13/04-52-11-625_90bedf9127b52a55.webp","sourceBytes":1043,"destBytes":374,"targetWebpQuality":75,"feedId":16880,"totalSpendMs":831,"convertSpendMs":4,"createdTime":"2020-10-13 12:52:11","host":"us-038*","referer":"http://buildinternet.com/?p=10437","linkMd5ListStr":"3a790d3969f04ec7181654871325458f","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1 KB","destSize":"374 B","compressRate":"35.9%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~ff/buildinternet?i=xlJpapt1GEs:IsZ_F3QysGc:V_sGLiPBpWU","sourceStatusCode":200,"destWidth":66,"destHeight":24,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn33@2020_5/2020/10/13/04-52-11-694_8acd6fc6cf64aed2.webp","sourceBytes":1009,"destBytes":340,"targetWebpQuality":75,"feedId":16880,"totalSpendMs":908,"convertSpendMs":7,"createdTime":"2020-10-13 12:52:11","host":"us-001*","referer":"http://buildinternet.com/?p=10437","linkMd5ListStr":"3a790d3969f04ec7181654871325458f","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1,009 B","destSize":"340 B","compressRate":"33.7%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~ff/buildinternet?i=xlJpapt1GEs:IsZ_F3QysGc:gIN9vFwOqvQ","sourceStatusCode":200,"destWidth":67,"destHeight":24,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn30@2020_1/2020/10/13/04-52-11-760_13380a07ea522bdb.webp","sourceBytes":1005,"destBytes":322,"targetWebpQuality":75,"feedId":16880,"totalSpendMs":997,"convertSpendMs":5,"createdTime":"2020-10-13 12:52:11","host":"us-013*","referer":"http://buildinternet.com/?p=10437","linkMd5ListStr":"3a790d3969f04ec7181654871325458f","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1,005 B","destSize":"322 B","compressRate":"32%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/buildinternet/~4/xlJpapt1GEs","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn13@2020_1/2020/10/13/04-52-11-771_95fcd0d87019089c.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":16880,"totalSpendMs":955,"convertSpendMs":7,"createdTime":"2020-10-13 12:52:11","host":"europe-22*","referer":"http://buildinternet.com/?p=10437","linkMd5ListStr":"3a790d3969f04ec7181654871325458f","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"}],"successGithubMap":{"myreaderx7":1,"myreaderx6":1,"myreaderx21":1,"myreaderx13":1,"myreaderx30":1,"myreaderx31":1,"myreaderx19":1},"failGithubMap":{}}