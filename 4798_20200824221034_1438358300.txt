{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-08-25 06:09:19","updatedTime":"2020-08-25 06:09:19","title":"微服务架构下分布式事务处理方案选择和对比(200820)","link":"http://blog.sina.com.cn/s/blog_493a84550102z8w6.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7FM74P1Kw90\" TARGET=\"_blank\"><img SRC=\"http://s1.sinaimg.cn/mw690/001l8XD7zy7FM74P1Kw90&#38;690\" NAME=\"image_operate_41451597881975908\" /></A><br />\n<br />\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在微服务架构下，我们最容易遇到的一个问题就是分布式事务处理问题，当你微服务模块拆分的越细，那么遇到分布式事务处理的场景就越多。即使是同一个微服务模块，对应一个业务数据库，但是你某个业务逻辑的实现是调用两个Service接口服务来完成的，同样也是分布式事务问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此有必要对分布式事务整体解决思路总下总结。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n分布式事务概述</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/c716e93c803c4e7eb196bb0ca3550f9d?from=pc\" IMG_WIDTH=\"683\" IMG_HEIGHT=\"392\" ALT=\"微服务架构下分布式事务处理方案选择和对比\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n分布式事务就是指事务的参与者、支持事务的服务器、资源服务器以及事务管理器分别位于不同的分布式系统的不同节点之上。简单的说，就是一次大的操作由不同的小操作组成，这些小的操作分布在不同的服务器上，且属于不同的应用，分布式事务需要保证这些小操作要么全部成功，要么全部失败。本质上来说，分布式事务就是为了保证不同数据库的数据一致性。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个分布式事务包含一组操作序列，由两个或两个以上的网络主机参与。通常主机提供事务性资源，而事务管理器负责创建和管理全局事务，由事务管理器协调事务参与的资源。分布式事务和本地事务并无太大不同，也需保证事务的四个属性（原子性、一致性、隔离性、持久性）。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于分布式事务的潜在场景，可以简单的分为三类：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n1.跨资源</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个完整业务需要操作两个独立数据库，比如需要在A数据库插入一条订单记录，同时更新B数据库中的库存状态，两个操作跨数据库，但是需要控制在一个完整事务里面。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n2.资源+服务组合</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在和工作流集成场景中出现，业务用户在提交单据的时候需要后台执行两个操作，首先是调用本地API将单据数据保存到本地数据库，其次是调用启动流程WebService服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n3.跨服务</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n由于Web\nService服务本身无状态，即使是同一个数据库提供给处理的两个WebService服务，在进行调用和组合的时候也属于分布式事务控制。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于分布式事务的主流解决方法，主要包括了XA两阶段提交，事务补偿和基于BASE的最终一致性（可靠消息传输），首先再对这三种方法做下简单描述。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n强一致性-两阶段提交模型</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/45e470ceedcb4bc88bae2afe90cebec2?from=pc\" IMG_WIDTH=\"855\" IMG_HEIGHT=\"526\" ALT=\"微服务架构下分布式事务处理方案选择和对比\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n两阶段提交，因为它是实现XA分布式事务的关键（确切地说：两阶段提交主要保证了分布式事务的原子性：即所有结点要么全做要么全不做）。所谓的两个阶段是指：第一阶段：准备阶段和第二阶段：提交阶段。具体过程如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n阶段一：开始向事务涉及到的全部资源发送提交前信息</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n此时，事务涉及到的资源还有最后一次机会来异常结束事务。如果任意一个资源决定异常结束事务，则整个事务取消，不会进行资源的更新。否则，事务将正常执行，除非发生灾难性的失败。为了防止会发生灾难性的失败，所有资源的更新都会写入到日志中。这些日志是永久性的，因此，这些日志会幸免于难并且在失败之后可以重新对所有资源进行更新。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n阶段二：只在阶段一没有异常结束的时候才会发生</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n此时，所有能被定位和单独控制的资源管理器都将开始执行真正的数据更新。事务管理器将基于第一个阶段的投票结果进行决策：提交或取消。当且仅当所有的参与者同意提交事务协调者才通知所有的参与者提交事务，否则协调者将通知所有的参与者取消事务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从以上工作过程可以看出，两阶段提交协议正确工作的前提假设是每个节点都会记录写前日志（write-ahead\nlog）并持久性存储，即使节点发生故障日志也不会丢失。同时假设节点不会发生永久性故障而且任意两个节点都可以互相通信。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n两阶段提交优缺点分析</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n两阶段提交协议最大的劣势是其通过阻塞完成的协议，在事务参与者等待消息的时候处于阻塞状态，事务参与者中其他进程则需要等待阻塞进程释放资源才能使用。如果事务管理器发生了故障，那么事务参与者将无法完成事务则一直等待下去。同时两阶段提交协议没有容错机制，一个节点发生故障整个事务都要回滚，代价比较大。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n两阶段提交协议仅在一种情况下可能导致数据不一致，所有或部分参与者都响应了Prepare阶段，在任何参与者收到事务管理器提交或回滚决定之前事务管理器宕机死亡，此时所有参与者都必须等待事务管理器恢复。而可能事务管理器此时已经丢失了事务上下文，这时需人工介入参与数据恢复。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n两阶段提交协议仅仅是提供了分布式事务中的原子性属性，保证一个事务在全局要么全部提交，要么全部回滚，但是在并发控制上(隔离性)，仍然需要封锁协议，为了达到分布式环境下全局串行和避免一个事务的失败可能引起一连串事务的回滚，通常使用强两阶段封锁协议（SS2PL）。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n两阶段封锁协议并不保证不会发生死锁，数据库系统必须采取其他的措施，预防和解决死锁问题。但常见的数据库系统通常都实现了隔离级别，不同的隔离级别对于不同的锁机制，下表列出他们的对应关系。值得一提的是，两阶段封锁协议并不保证不会发生死锁，数据库系统必须采取其他的措施，预防和解决死锁问题。所以说，如果两阶段提交协议中事务时间越长，那么锁等待的时间和死锁的概率也会变大。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n弱一致性-事务补偿模型</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/b803729f7c2a4bcbb9a38d7fee829ddc?from=pc\" IMG_WIDTH=\"649\" IMG_HEIGHT=\"599\" ALT=\"微服务架构下分布式事务处理方案选择和对比\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n事务补偿机制是指在事务链中的任何一个正向事务操作，都必须存在一个完全符合回滚规则的可逆事务。例如存款操作通过取款操作来补偿、买入通过卖出来补偿。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n工作方式和限制</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这里的“补偿”与数据库事务中的“回滚”是有区别的，“回滚”是指操作的取消，“回滚”前后对外界来讲，数据是一致的。而“补偿”则是独立的逆向操作，如果事务执行了“补偿操作”，外界可能会看到数据的两种状态。从这个角度讲，“回滚”需要锁定资源。从数据库操作上来“补偿操作”其实也是一次短事务。而“回滚”是一个事务内的操作。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n事务补偿通常在实现时采取嵌套事务的方式，即把一个主事务拆分成多个从业务操作，事务的发起和结束由主事务完成。从业务服务提供的业务操作提供补偿操作，补偿操作可以抵销（或部分抵销）正向业务操作的业务结果。业务活动管理器控制业务活动的一致性，它登记业务活动中的操作，并在业务活动取消时调用补偿操作。具体回滚整个事务还是回退到某个事务点，可以依据具体业务来处理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在上面方式中可以看到需要手工编写大量的代码来处理以保证事务的完整性，我们可以考虑实现一个通用的事务管理器，实现事务链和事务上下文的管理。对于事务链上的任何一个服务正向和逆向操作均在事务管理和协同器上注册，由事务管理器接管所有的事务补偿和回滚操作。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n补偿机制能正确工作是基于事务是可以补偿这一前提，如果这一前提无法满足，那么就无法使用这一机制。现实业务场景中，确实存在这样的业务，例如证券交易，因为对时效性特别敏感，不能简单地使用卖出（买入）来补偿买入（卖出），因为不同时间交易的价格可能差距很大。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n另外，补偿操作也是一次事务操作，考虑到补偿操作也是有可能失败的，所以，补偿操作应该支持重试，这就要求补偿操作满足幂等性。即重复调用多次产生的业务结果与调用一次产生的业务结果相同。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n事务补偿场景举例</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在前面已经强调了，对于事务补偿必须满足幂等性要求，而且不能对时效性太敏感。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n场景：采购订单在提交时候调用预算检查和扣减，但是如果单据保存失败需要再次调用预算检查和调整，将扣减预算退回。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那么基于以上场景事务补偿的核心实现逻辑如下：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/8661901e6e1a430d9e1cb11b9dba440d?from=pc\" IMG_WIDTH=\"813\" IMG_HEIGHT=\"361\" ALT=\"微服务架构下分布式事务处理方案选择和对比\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n正常情况，调用预算扣减服务后，保存采购订单，两者需要同时成功</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n如果调用采购订单保存服务出现失败，那么就需要对已经扣减的预算进行补偿和返还</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n即调用和扣减预算完全对等的一个逆向操作，将扣减服务造成的影响全部回退</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n以上即是对事务补偿机制的关键说明。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nBASE最终一致性-可靠消息队列</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nCAP理论概述</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/c97307767e4b4d819664cf47fc072647?from=pc\" IMG_WIDTH=\"639\" IMG_HEIGHT=\"432\" ALT=\"微服务架构下分布式事务处理方案选择和对比\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n由于对系统或者数据进行了拆分，我们的系统不再是单机系统，而是分布式系统，针对分布式系统的CAP原理包含如下三个元素。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nC:Consistency,一致性</SPAN>。在分布式系统中的所有数据\n备份，在同一时刻具有同样的值，所有节点在同一时刻读取的数据都是最新的数据副本。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nA:Availability,可用性</SPAN>，好的响应性能。完全的可用性指的是在任何故障模型下，服务都会在有限的时间内处理完成并进行响应。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nP: Partition tolerance,分区容忍性</SPAN>。尽管网络上有部分消息丢失，但系统仍然可继续工作。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nCAP原理指的是，这三个要素最多只能同时实现两点，不可能三者兼顾。因此在进行分布式架构设计时，必须做出取舍。而对于分布式数据系统，分区容忍性是基本要求，否则就失去了价值。因此设计分布式数据系统，就是在一致性和可用性之间取一个平衡。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当然，牺牲一致性，并不是完全不管数据的一致性，否则数据是混乱的，那么系统可用性再高分布式再好也没有了价值。牺牲一致性，只是不再要求关系型数据库中的强一致性，而是只要系统能达到最终一致性即可。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n从CAP理论到BASE理论</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nBASE 是 Basically Available（基本可用）、Soft state（软状态）和 Eventually\nconsistent（最终一致性）三个短语的简写，由 eBay 架构师 Dan Pritchett 于 2008 年在《BASE:\nAn Acid Alternative》论文中首次提出。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nBASE 思想与 ACID 原理截然不同，它满足 CAP 原理，通过牺牲强一致性获得可用性，\n一般应用于服务化系统的应用层或者大数据处理系统中，通过达到最终一致性来尽量满足业务的绝大多数需求。BASE\n模型包含如下三个元素：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nBA：（Basically Available ），基本可用。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nS：（ Soft State），软状态，状态可以在一段时间内不同步。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nE：（Eventually Consistent ），最终一致，在一定的时间窗口内， 最终达成一致即可。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nBASE理论是基于CAP定理演化而来，是对CAP中一致性和可用性权衡的结果。核心思想：即使无法做到强一致性，但每个业务根据自身的特点，采用适当的方式来使系统达到最终一致性。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n1、基本可用：</SPAN>指分布式系统在出现故障的时候，允许损失部分可用性，保证核心可用。但不等价于不可用。比如：搜索引擎0.5秒返回查询结果，但由于故障，2秒响应查询结果；网页访问过大时，部分用户提供降级服务，等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n2、软状态：</SPAN>软状态是指允许系统存在中间状态，并且该中间状态不会影响系统整体可用性。即允许系统在不同节点间副本同步的时候存在延时。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n3、最终一致性：</SPAN>系统中的所有数据副本经过一定时间后，最终能够达到一致的状态，不需要实时保证系统数据的强一致性。最终一致性是弱一致性的一种特殊情况。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nBASE理论面向的是大型高可用可扩展的分布式系统，通过牺牲强一致性来获得可用性。ACID是传统数据库常用的概念设计，追求强一致性模型。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n基于可靠消息队列实现最终一致性</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/18b4ef747c204856992bccaf5ee514ea?from=pc\" IMG_WIDTH=\"660\" IMG_HEIGHT=\"491\" ALT=\"微服务架构下分布式事务处理方案选择和对比\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于消息的最终一致性是消除了分布式事务，是一种在BASE思想指导下比较好的方案。这种方案实现了两个服务之间的解耦，解耦的关键就是异步消息和消息持久化机制。在两个服务调用之间，会存在一个真空期，这段时间相关数据不一致，而只是在一个事务的中间状态。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n事务主动方的业务服务事务提交和消息发送之间必须通过事务同步，可以通过事务管理器进行管理，如两阶段提交。事务主动方在完成事务提交和消息发送之后，它的最终处理结果不再受到事务被动方的影响。即发送到事务被动方的事务要么成功，要么重试。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n所以，消息同样需要满足幂等性。实际情况下，消息很难具有幂等性，解决这一问题的方法是使用另一个表记录已经被成功应用的消息，这样就可以通过避免消息多次被应用，从而达到幂等性。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在实际应用中，如果消息接收端的服务出现失败，可能需要人工干预。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n场景举例说明</SPAN></P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n场景：在采购系统中拟制采购订单，在提交单据申请的时候既需要将单据成功保存到本地，同时又需要启动远程流程平台提供的流程启动服务。在该场景中，第二个步骤属于必须要最终完成的操作，同时业务上也允许最终一致（不要因为流程平台本身问题导致单据提交不成功，启流程失败如何重试是系统内部的事情）</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于该场景，基于消息实现最终一致性逻辑如下：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/db73c0ae654e43a08022ef76c3d416e4?from=pc\" IMG_WIDTH=\"765\" IMG_HEIGHT=\"421\" ALT=\"微服务架构下分布式事务处理方案选择和对比\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n三种事务处理方案的比较和选择</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于上面谈到的三种事务处理方案，我们列个表格比较如下：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/afd4231a68ff4c9293d6535f64a6ddee?from=pc\" IMG_WIDTH=\"815\" IMG_HEIGHT=\"552\" ALT=\"微服务架构下分布式事务处理方案选择和对比\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当前主流的方法仍然是事务补偿和BASE最终一致性，同时可以看到，基于消息中间件实现的事务最终一致性由于本身具备高可靠，高性能，并满足大并发的高吞吐量，因此在互联网应用往往采用的更加多。在企业内部的基于SOA服务的分布式事务控制，</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/1b9503ad862b46d3bf2ed534048461db?from=pc\" IMG_WIDTH=\"752\" IMG_HEIGHT=\"430\" ALT=\"微服务架构下分布式事务处理方案选择和对比\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_73831597881972794\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n场景：业务操作需要同时调用 ServiceA-》ServiceB 两个服务，并控制到一个分布式事务里面。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n两种方法选择思路为：</P>\n<pre STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-family: Monaco; font-size: 16px; white-space: pre-wrap; margin-top: 1em; margin-bottom: 1em; padding: 15px; border: 1px solid rgb(232, 232, 232); position: relative; line-height: 1.5; color: rgb(34, 34, 34); background: rgb(250, 250, 250); overflow-x: auto; border-radius: 3px; box-shadow: rgba(217, 217, 217, 0.5) 0px 0px 0px 1px inset;\">\n\n<code STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-family: Consolas, Menlo, Courier, monospace; font-size: 1em; margin: 0px; padding: 0px; border: 0px;\"><span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">If</SPAN> ( 服务A是否可以完整设计出 &#8211;A补偿服务)<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n{<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n  <span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">//-A补偿服务能够保证A服务影响完整回退</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">  //在调用-A前，A服务调用影响不会波及到后续操作</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">  if(服务A成功 则 服务B调用必须成功</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">        and B只要最终成功即可)</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">  {</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">       //在服务A成功的情况下服务B不存在因业务逻辑处理和校验导致的不成功。</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">       Choose 最终一致性方案；(优选方案）</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">  }</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">  Else</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">  {</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">      Choose 事务补偿方案；</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">  }</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">}</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">Else</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">{</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">     Choose 最终一致性方案；</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(153, 153, 153);\">}</SPAN></CODE>\n</PRE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n整体思路也就是说能够采用最终一致性的地方尽量采用最终一致性来解决问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于不能采用BASE事务最终一致性的地方，特别是在ServiceB在调用的时候存在较多的业务逻辑校验，因此ServiceA即使调用成功也会经常出现由于逻辑校验导致ServiceB调用不成功，那么这种情况下就很难用BASE方案，否则就会导致大量的人工补偿操作和处理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于ServiceB的调用如果需求都是最终一致，同时ServiceB的调用不存在由于业务原因导致的调用失败，那么都建议采用BASE事务最终一致性方案。由于BASE方案基于消息中间件来实现，通过消息中间件既可以实现大并发下的吞吐量，同时也可以实现两个服务调用间的彻底解耦。</P>\n</DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Thu, 20 Aug 2020 00:02:46 +0000","feedId":4798,"bgimg":"http://s1.sinaimg.cn/mw690/001l8XD7zy7FM74P1Kw90&690","linkMd5":"ba59ea79ddc69b439d474d2e30bb343e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn14@2020_5/2020/08/24/22-09-23-667_21cf40d985472bbb.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s1.sinaimg.cn/mw690/001l8XD7zy7FM74P1Kw90&690":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn14@2020_5/2020/08/24/22-09-23-667_21cf40d985472bbb.webp","https://p3-tt.byteimg.com/origin/pgc-image/c716e93c803c4e7eb196bb0ca3550f9d?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn69@2020_2/2020/08/24/22-09-25-991_5c46087518517d86.webp","https://p6-tt.byteimg.com/origin/pgc-image/45e470ceedcb4bc88bae2afe90cebec2?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn9@2020_4/2020/08/24/22-09-30-854_df4a711f88b0b030.webp","https://p1-tt.byteimg.com/origin/pgc-image/b803729f7c2a4bcbb9a38d7fee829ddc?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn62@2020_6/2020/08/24/22-09-27-616_f912720f65e0fbce.webp","https://p1-tt.byteimg.com/origin/pgc-image/8661901e6e1a430d9e1cb11b9dba440d?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn2@2020_4/2020/08/24/22-09-25-596_7e2338f2f10efa48.webp","https://p6-tt.byteimg.com/origin/pgc-image/c97307767e4b4d819664cf47fc072647?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn14@2020_5/2020/08/24/22-09-27-904_204124a3fadc0f19.webp","https://p1-tt.byteimg.com/origin/pgc-image/18b4ef747c204856992bccaf5ee514ea?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn18@2020_5/2020/08/24/22-09-27-640_520f76967f5156d4.webp","https://p1-tt.byteimg.com/origin/pgc-image/db73c0ae654e43a08022ef76c3d416e4?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn57@2020_6/2020/08/24/22-09-28-499_0b90dc295d6bfc3f.webp","https://p1-tt.byteimg.com/origin/pgc-image/afd4231a68ff4c9293d6535f64a6ddee?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx/cdn77@2020_5/2020/08/24/22-09-25-463_61b23d1fa1a4e3d0.webp","https://p3-tt.byteimg.com/origin/pgc-image/1b9503ad862b46d3bf2ed534048461db?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn41@2020_6/2020/08/24/22-09-28-068_e153e6a0d383106b.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn17@2020_6/2020/08/24/22-09-30-958_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1598306959917},{"createdTime":"2020-08-25 06:09:19","updatedTime":"2020-08-25 06:09:19","title":"头条文章推荐引擎机制和展现阅读统计实现分析(200815)","link":"http://blog.sina.com.cn/s/blog_493a84550102z8vs.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7FEXZ7FSc7c\" TARGET=\"_blank\"><img SRC=\"http://s13.sinaimg.cn/mw690/001l8XD7zy7FEXZ7FSc7c&#38;690\" NAME=\"image_operate_90421597494254126\" /></A>\n<div><br /></DIV>\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n最近大家可能都注意到，今日头条APP端和后台管理端都增加了文章统计分析的详细数据，可以看到展现浏览详细数据，点击率，评论转发量，用户平均流量时长，数据按天的时间趋势图等详细数据分析。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此今天准备先从今日头条的推荐机制分析开始，谈下从文章推送到文章详细数据统计的技术实现机制和关键点。在分析前我们还是先看下电商平台推荐引擎的内容，要明白文章本身也是一个商品，实际上核心的推荐引擎思路和电商推荐引擎基本还是一致的。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n电商平台推荐引擎机制分析</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/large/pgc-image/33fd2432a9f84474b001dc47636681a3?from=pc\" IMG_WIDTH=\"698\" IMG_HEIGHT=\"378\" ALT=\"头条文章推荐引擎机制和展现阅读统计技术实现分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n推荐引擎在当前电商平台用的相当多，推荐引擎的分类一般可以分为基于大众行为的推荐引擎和个性化推荐引擎。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n大众行为的推荐引擎</SPAN>，对每个用户都给出同样的推荐，这些推荐可以是静态的由系统管理员人工设定的，或者基于系统所有用户的反馈统计计算出的当下比较流行的物品。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n个性化推荐引擎</SPAN>，对不同的用户，根据他们的口味和喜好给出更加精确的推荐，这时，系统需要了解需推荐内容和用户的特质，或者基于社会化网络，通过找到与当前用户相同喜好的用户，实现推荐。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这是一个最基本的推荐引擎分类，其实大部分人们讨论的推荐引擎都是将个性化的推荐引擎，因为从根本上说，只有个性化的推荐引擎才是更加智能的信息发现过程。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n大部分推荐引擎的工作原理还是基于物品或者用户的相似集进行推荐。那么参考图 1\n给出的推荐系统原理图，根据不同的数据源发现数据相关性的方法可以分为以下几种：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n基于人口统计学的推荐：</SPAN>基于用户的基本信息发现用户的相关程度</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n基于内容的推荐：</SPAN>根据推荐物品或内容的元数据，发现物品或者内容的相关性</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n基于协同过滤的推荐：</SPAN>根据用户对物品或者信息的偏好，发现物品或者内容本身的相关性，或者是发现用户的相关性</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n下面根据我重新画的图来说明下常见的一些模式：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n1. 基于用户画像后的推荐</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意基于用户画像的针对性营销本身也是一种推荐引擎，要做到这样首先是要对用户进行精确画像，然后再根据用户画像+商品营销策略进行针对性推荐。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n举例来说我们要对一款发烧耳机进行针对性营销，那么我们首先要从用户画像里面找到20岁以下，爱好音乐，发烧友这几个关键用户标签，然后再进行针对性推荐。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n2. 基于人口统计学的推荐</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n简单来说找到用户A和用户B的相关性和相似性，然后将用户A的购买行为推荐给用户B。可以看到该模式下只分析用户相关性，没有分析物品相关性，也没有分析用户购买行为间的相关性。这种模式本身的推荐准确度个人感觉偏低，但是好处就是解决新用户冷启动问题。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n比如当一个18岁的女大学生注册成功后，虽然这个用户还没有发生任何购买，但是根据用户相关性分析已经可以马上就可以进行相关物品的推荐。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n3. 基于内容的推荐</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n根据推荐物品或内容的元数据，发现物品或者内容的相关性。举个简单例子即当我看了一部爱情浪漫影片后，可以马上给我推荐类似的影片。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n主要什么影片是类似影片？要基于内容推荐首先就要对物品的相关性或相似性进行建模，这种相关性是静态的关系，物品相似度的分析仅仅依赖于物品本身的特征，这里没有考虑人对物品的态度。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n举例来说，最近几天我都在某电商网站浏览某类的产品，这个时候我们根本没有登陆电商系统，只是做了浏览和加购物车的操作等。可能过2两天你就会收到电商平台发出的EDM营销或推荐邮件。在这种模式下即基本是基于内容推荐。当然推荐的时候电商平台会优先帮你选择销量高，评价好或性价比高的相似产品。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n4. 用户相关性+用户购买行为协同过滤推荐</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意不是单纯静态用户相关性推荐，也不是单纯的用户购买行为推荐，而是将两者结合起来进行协同过滤推荐。简单来说就是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">首先根据用户购买行为发现了用户A和用户C是相关或相似用户</SPAN>，而不是根据静态用户属性简单判断用户相似，然后再根据相关性特点将用户A的购买推荐给用户C。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n5. 物品相关性+用户购买行为的协同过滤推荐</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即物品相关性不是简单进行物品静态相关性建模，而是根据用户购买行为来发现物品相关性。即我们常说的<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">购买了物品A的也同时购买了物品B</SPAN>。比如购买了苹果手机的用户也同时购买了苹果手机保护膜。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n这种推荐模式是我们经常看到的模式，比如我们在电商购买购买书籍，购买某种商品的时候，实时出现的推荐都属于这种模式为主。系统会告诉你购买了某本书的用户一般还同时购买了哪些书籍。我们不用去探究用户本身是否相关，而是关心用户购买行为触发的物品相关性。</P>\n</BLOCKQUOTE>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n头条文章的推送和推荐机制</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果我们将头条和微博比较，虽然头条也可以关注某个头条号或用户，但是头条核心的推荐仍然是基于内容的推荐机制，即本身弱化用户之间的关系，这是头条和微博推送的一个关键区别。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我们浏览头条你可能也会发现一些文章推送特点。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n比如我们可能会浏览到我们关注的某个头条号发送的文章或微头条，或者你最近正在关注三十而已，那么会收到大量关于该电视剧的内容推荐。或者说你最近浏览小孩教育方面的文章比较多，也会收到很多类似文章推荐。当然你也可能收到你居住城市的热门内容推荐。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此头条整体的文章推荐机制可以理解：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n核心内容推荐+关注推荐+区域推荐+热门事件推荐</SPAN>组成。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n注：即使你每天都花费大量时间浏览头条文章或视频，但是你时间看到的内容可能连千万分之一都不到，仅仅是整个头条海量内容的冰山一角。而且你浏览的越多，头条越懂你，给你推荐你感兴趣的内容，但是同样也导致你的知识内容面越来越窄，这也是我们也经常说头条会让你变得越来越懒于思考的原因。</P>\n</BLOCKQUOTE>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/large/pgc-image/c2dafde611fc49fe9e35660e06a6cfa2?from=pc\" IMG_WIDTH=\"835\" IMG_HEIGHT=\"437\" ALT=\"头条文章推荐引擎机制和展现阅读统计技术实现分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n所以你可以看到整个头条文章的推荐核心就是用户本身的标签关键字和文字提取的标签关键字的一个匹配过程。只要匹配上那么就可以进行推送。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n首次推送一般也叫冷启动，简单来说就是先很小范围给你推一波，看下点击率，阅读量，点赞和转发量，如果数据都不错，就进一步给你推送到一个更大的流量池，如果效果不好往往就降低推送量或停止推荐。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n用户的关键词往往都是基于用户大量的历史文章浏览所形成和提取出来的，但是对于用户的关键标签关键词，本身应该形成不同的权重。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而权重需要考虑到用户的浏览频度和浏览时间两个方面</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n浏览频度：用户一个长时间周期经常会浏览的关键词，那么权重应该很高</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n时间频度：近期浏览的权重高，浏览时间长的权重应该高</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n比如我们最近1，2天突然开始大量浏览围棋教学类视频，那么你可能看到头条会大量推荐围棋主题相关的视频和内容文章。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n也正是这个原因，即使你在头条一个账号都没有关注，但是头条仍然会根据你的浏览习惯和内容进行精确的内容推荐。关注和粉丝推荐反而在头条浏览里面权重不高。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n反之，如果你根本就没有大量内容浏览和阅读，那么头条无法根据你的动态浏览行为进行推荐，则只能根据当前主流事件热点，你关注的人，你的区域等静态信息进行推荐，直到你产生大量浏览和阅读行为后，再来分析你的内容关键字。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n头条文章的推送和推荐机制</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/large/pgc-image/a88fe21d6cd44a45b442951bf84cb894?from=pc\" IMG_WIDTH=\"845\" IMG_HEIGHT=\"946\" ALT=\"头条文章推荐引擎机制和展现阅读统计技术实现分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n最近头条对每一篇文章都增加了文章详细统计数据分析功能，如上图。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即可以看到你单篇文章的展现量，阅读量，粉丝阅读量，点击率，用户平均阅读时长。评论，点赞，收藏，转发等用户互动行为分析，同时还可以看到这些统计数据按天进行的时间趋势图分析。这些数据可以更好的方便创造者对自己创造的内容进行分析评估，并对创作内容进行持续优化和改进。<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">任何一个自媒体创造者也是一个运营者，需要有数据驱动思维，基于数据分析来驱动自己的内容运营。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在前面我们已经谈到，头条更多是以内容驱动的推荐引擎模式。文章，微头条，视频等都是内容的呈现形式。而对于文章我们首先要分析行为事件和统计计算间的关系。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n影响文章统计计数的关键行为或事件</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n影响文章统计计数的关键行为或事件，主要包括了如下内容。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n文章进行一次推送，直接影响到文章的展现量计数</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n用户点击进入到文章里面，即阅读量计数，同时退出的时候计算阅读时长</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n用户进行转发，评论，点赞，收藏等，直接影响到文章的对应指标计数</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n对文章推送用户中区分粉丝用户，进行单独的展现量和阅读量计数</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n以上即是我们实际在文章详细统计数据里面看到的关键信息。同时我们看到，对应每篇文章还提供了统计数据的时间趋势图，可以详细查询一个周期里面的统计数据信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于文章推送，前面已经谈到基于推荐引擎机制结合冷启动的数据进行持续迭代文章推送。这个推送本身可能呈现为两种方式。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n其一：左下角首页处出现小红点提升，说明有了新信息推送过来</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n其二：你可以不断的下拉刷新当前页面，那么系统会持续推送新内容过来</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n另外对于数据统计，我们可以看到应该是存在一个最小刷新间隔，比如是30秒或者1分钟，那么在这个间隔里面你可以看到展现量或阅读量并不会变化。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其次，对于点击率和阅读时长，你可以看到是当天只能够看到前一天的数据，即你可以理解为是非实时计算，可能是在凌晨计算昨天一天的最终统计数据结果，即按天增量计算。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n整体实现思路初步思考</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n有了前面的初步思考，我们可以看到每篇文章都有一组最终的统计数据，这些统计数据可以存放到类似Redis缓存库里面。如果数据有最小刷新间隔概念，那么实时的数据计数应该在统计在内存里面，然后再更新到Redis缓存库中。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果以一天为一个完整的统计周期，那么Redis库应该只记录当天的数据，当天数据统计完成后，当天的数据应该写入到类似influxdb的时序数据库中，这种数据库来实现文章的时间趋势线分析是最合适的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于以上分析，以最小刷新间隔1分钟，我们给出一个很粗的实现思路图。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/large/pgc-image/ad34a7d2ba1542b7a9d95815bb577b63?from=pc\" IMG_WIDTH=\"916\" IMG_HEIGHT=\"394\" ALT=\"头条文章推荐引擎机制和展现阅读统计技术实现分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于当前统计数据可以看到：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n点击率 = 阅读量/展现量</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那么我们再看下对应平均阅读时长如何处理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当监测到用户退出事件的时候，我们就可以计算出文章的阅读总时长。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那么在1分钟的间隔内，我们的内存计算应该计算\n阅读总时长，这个时候不用去计算平均阅读时长。包括到了Redis库也是同样道理，我们只需要将阅读总时长进行累加计数即可。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当需要计算上一天的阅读平均时长的时候，我们再进行计算，即：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n当天阅读平均时长 = 阅读总时长/阅读次数</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n但是注意这是当天的阅读平均时长。而我们将每天最终的统计数据写入到类似influxDB时序数据库的时候，我应该计算一下文章截至到当前的总计数信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n比如一篇文章已经发布了10天，那么我们应该有一个总计算信息，即：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n第1到10天：<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">文章ID，总推荐量A，总阅读量A，总阅读时长A，平均时长A</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而第11天的数据我们统计后可以得到当天的统计计算为</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n第11天：<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">文章ID，总推荐量B，阅读量B，总阅读时长B，平均时长B</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这个时候，我们不会对平均时长再进行平均，而是应该重新计算平均时长，即：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n平均时长新 = （总阅读时长A+总阅读时长B）/(总推荐量A+总推荐量B）</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n另外，对应截止到上一天的汇总统计数据，这个数据应该更新到一个单独的数据库统计表中，这个信息可以放到结构化数据库中共数据展现时候使用，而不是查询的时候再去实时计算。即作者查询文章详细数据的时候，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">详细统计数据\n= 当天Redis计数+文章截至到上一天的历史累计计数。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n是否使用消息中间件</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n前面看到对应文章推送，用户浏览，交互等各种行为事件都会影响到文章计数，那么这些事件是否都需要统一写入到消息中间件，通过消息中间件进行削峰处理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我个人理解是如果使用消息中间件的话可以进一步实现异步解耦，消息中间件可以替代内存计算过程，这个时候消息中间件直接对接到Redis库即可。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当然实际上头条最终的计算远比我上面初步思考复杂，在这里也仅仅给出一个简单实现思路供参考。特别是这种思路是否还存在进一步的线程安全，线程锁定等问题。在这里就不再做进一步的分析。</P>\n<br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Sat, 15 Aug 2020 12:21:57 +0000","feedId":4798,"bgimg":"http://s13.sinaimg.cn/mw690/001l8XD7zy7FEXZ7FSc7c&690","linkMd5":"3dc4a0c726c23dcddecb4f274317ef78","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn10@2020_6/2020/08/24/22-09-24-477_cbb29df6d9b054ea.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s13.sinaimg.cn/mw690/001l8XD7zy7FEXZ7FSc7c&690":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn10@2020_6/2020/08/24/22-09-24-477_cbb29df6d9b054ea.webp","https://p3-tt.byteimg.com/large/pgc-image/33fd2432a9f84474b001dc47636681a3?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn73@2020_3/2020/08/24/22-09-26-824_6d6eca01c116a249.webp","https://p3-tt.byteimg.com/large/pgc-image/c2dafde611fc49fe9e35660e06a6cfa2?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn61@2020_3/2020/08/24/22-09-28-600_d72c7a958b653d60.webp","https://p3-tt.byteimg.com/large/pgc-image/a88fe21d6cd44a45b442951bf84cb894?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn77@2020_1/2020/08/24/22-09-27-595_d733abffb9070248.webp","https://p6-tt.byteimg.com/large/pgc-image/ad34a7d2ba1542b7a9d95815bb577b63?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn85@2020_1/2020/08/24/22-09-29-883_59ab59c9b6172b92.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn17@2020_6/2020/08/24/22-09-30-958_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1598306959916},{"createdTime":"2020-08-25 06:09:19","updatedTime":"2020-08-25 06:09:19","title":"一文详细讲解API网关核心功能(200821)","link":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7FOds8AVl53\" TARGET=\"_blank\"><img SRC=\"http://s4.sinaimg.cn/mw690/001l8XD7zy7FOds8AVl53&#38;690\" NAME=\"image_operate_94601597995180078\" /></A><br />\n<br />\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n今天准备再详细讲解下API网关的基础概念，使用场景和核心功能，以及基于API网关核心引擎做的API全生命周期管理功能扩展等，最好再介绍下当前主流的开源API网关引擎。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nAPI网关概述</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/47666275792a4d8f9a61cca916ef0be7?from=pc\" IMG_WIDTH=\"725\" IMG_HEIGHT=\"392\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在微服务架构体系里面，我们一般会使用到微服务网关或叫API网关。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n大家都比较清楚，在微服务架构体系下本身是去中心化的架构，通过服务注册中心来实现服务注册发现和消费调用，那么为何又需要使用API网关？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在传统的ESB总线进行服务集成的时候我们就经常谈到一个概念就是位置透明，即需要屏蔽底层业务模块提供API接口服务地址信息，并实现多个微服务API接口的统一出口。即类似设计模式里面经常谈到的门面模式。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n如何给API网关一个定义？</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n简单来说API网关就是将所有的微服务提供的API接口服务能力全部汇聚进来，统一接入进行管理，也正是通过统一拦截，就可以通过网关实现对API接口的安全，日志，限流熔断等共性需求。如果再简单说下，通过网关实现了几个关键能力。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n内部的微服务对外部访问来说位置透明，外部应用只需和网关交互</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n统一拦截接口服务，实现安全，日志，限流熔断等需求</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从这里，我们就可以看到API网关和传统架构里面的ESB总线是类似的，这些关键能力本身也是ESB服务总线的能力，但是ESB服务总线由于要考虑遗留系统的接入，因此增加了：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n大量适配器实现对遗留系统的遗留接口适配，多协议转换能力</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n进行数据的复制映射，路由等能力</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于两者，我原来做过一个简单的对比，大家可以参考。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/afa156bb2647427587d9a734819811dc?from=pc\" IMG_WIDTH=\"819\" IMG_HEIGHT=\"449\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个概念理解后，我们再回到微服务架构里面。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于微服务架构大家经常说的最多的就是去中心化的架构，认为ESB中心化架构模式已经过时。而实际上经过上面分析你可以看到。在微服务架构里面的API网关仍然是中心化的架构模式，所有的API接口都要经过网关这个点。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n非中心化架构-》走微服务里面的服务注册中心进行接口交互</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n中心化架构-》走网关进行接口服务暴露和共享交互</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于微服务架构里面有无去中心化的架构？当然是有的，即我们常说的微服务模块之间可以通过服务注册中心来实现服务发现查找，服务间的点对点调用即使去中心化的。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n如果一个单体拆分为微服务后，完全不需要和外部应用打交道，也不需要共享自己的接口能力，那么这个微服务体系里面就不需要用API网关，仅仅使用服务注册中心即可。通过服务注册中心实现完全的去中心化和接口调用更高的性能。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n什么时候需要使用API网关？</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果一个微服务架构下，虽然不会外部的其它应用进行交互和集成，但是整个应用本身存在APP应用端，而APP应用端通过前后端分析开发，同时需要通过互联网访问。本身存在需要一个统一访问API访问入口，同时也需要考虑和内部微服务模块进一步进行安全隔离。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当我们谈到这里的时候，你会发现我们常说的API网关的服务代理或透传能力，实际和我们常说的Ngnix反向代理或路由是一个意思。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果你仅仅是为了统一API接口的访问出口，并考虑类似DMZ区的安全隔离，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">那么在你架构前期完全不需要马上实施API网关，直接采用Ngnix进行服务路由代理即可</SPAN>。因为在这种架构下，API接口消费端，提供端全部是一个开发团队开发，各种问题分析排查都相当方便，类似API接口安全访问等也可以通过JWT，Auth2.0等统一实现，而且这个过程也并不复杂。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n能力开放或多应用外部集成对API管控治理需要</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n但是当我们面临是和多个外部应用集成，或者说将自己的API接口服务能力开放给外部多个合作伙伴使用的时候，这个时候对于API接口的管控治理要求自然增加。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即在常规的服务代理路由基础上，需要增加类似负载均衡，安全，日志，限流熔断等各种能力，而且我们不希望这些能力在API接口开发的时候考虑，而是希望这些能力是在API接入到网关的时候统一灵活配置来实现管控。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那么这个时候使用API网关作用就体现出来。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nAPI网关核心功能说明</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/8b9dc4889bb943f9bfcc51ea0a774bda?from=pc\" IMG_WIDTH=\"753\" IMG_HEIGHT=\"326\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于API网关实际上前面已经多次强调，可以看做是ESB总线的轻量化实现，不再需要复杂的协议转换，适配和数据映射等能力，但是提升了流量控制和安全，实时监控等方面的能力。对于API网关引擎部分提供的核心功能，再简单总结如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n1.实现统一服务代理和服务统一出口</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这点是网关和常规点对点服务注册中心最大的一个区别点，就是位置透明，消费端只需要和网关打交道，具体网关如何和后台的微服务模块打交道，后台微服务模块的部署逻辑，模块提供服务的IP地址等都不用关心。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n由于实现了位置透明，带来一点就是数据流必须通过网关，那么网关本身又成为了去中心的微服务架构中的中心化节点，那么就必须考虑网关节点的性能，可靠性和弹性扩展能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n网关要实现位置透明，延伸出来对应的网关必须提供的能力就包括了</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n提供服务注册和服务接入的能力</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n提供服务代理和服务路由能力，能够将服务路由到具体的原始服务上</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n提供负载均衡能力（该点并不是必须具备）</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这里准备重点强调下负载均衡能力，实际上对于API网关往往并不是必须具备负载均衡能力。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n其一是提供API接口服务的模块本身进行了负载均衡，再提供地址</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n其二是类似容器化集成和部署，已经可以通过Kubernetes实现了负载均衡</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我们可以看下对于注册和接入到API网关服务的三种场景，只有场景一需要由API网关来提供负载均衡能力。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/d6ce0cfcd8c745b19c27fa95cee6fd91?from=pc\" IMG_WIDTH=\"882\" IMG_HEIGHT=\"535\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意API网关是否需要具备负载均衡能力，是必须考虑的一个点，即如果底层微服务模块提供的API接口服务本身能够提供负载均衡后的地址，那么网关不需要进行负载均衡。如果底层模块不具备这个能力，那么网关必须具备负载均衡能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n微服务模块本身可以基于容器化资源池提供的能力进行动态扩展，因此这个地方本身又有两层负载均衡，一个是kubernates提供的集群能力，一个是多个API网关本身提供的集群能力。当然API网关本身也具备负载均衡功能，可以和Kubernate进行衔接。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n2. 通过网关的拦截能力来实现所有共性能力抽取和实现</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n刚才已经谈到启用网关后就承载了数据流，因此可以通过对接口访问输入和输出的拦截来实现所有共性可复用能力的抽取和实现。这些共性能力可以理解为<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">网关实现的一个个拦截插件，本身可插拔，灵活可配置。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这些插件能力中最核心的就是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">安全，日志，流控</SPAN>。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其中安全可以实现访问安全，传输安全，数据安全等，其中访问安全本身又可以实现类似Token，IP，用户名密码等多种安全控制策略。包括对Auth2.0等标准规范的支持等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于日志也是网关提供的一个关键能力，即可以实现对服务消费日志，详细的输入和输出报文的查询能力，这个在各开源网关往往并不具备这个能力，也无法面向业务系统人员去使用，因此这块能力提升往往都需要在开源网关基础上做大量扩展。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n流控是我们谈的另外一个关键能力，包括了服务限流和服务熔断。对于服务限流主要是实现对服务消费前线程数控制，资源分配实现消费前等待。而对于服务熔断，即直接对服务进行下线或禁用，以避免大并发服务消费调用对网关造成的影响或带来的服务雪崩等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个网关来说，流控能力相对关键，因为网关是中心化节点，必须保证网关的高可靠运行。因此网关流控能力强弱直接影响到网关的高可靠性和性能，而判断流控能力强弱的关键则在于灵活的流量控制策略配置，只有这样才能够做到既实现流控，又不影响到关键业务和接口服务的访问。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n3. 满足前后端分离的需求</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意，如果一个企业开发的业务系统涉及到手机APP端，而手机APP端一定涉及到公网访问，按业务系统内部部署安全策略也一定涉及到DMZ区的设置和硬件防火墙隔离。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而对于API网关本身恰好又是可以部署到DMZ区的一个内容，既实现了服务代理路由，又实现了安全隔离，如果存在这种场景，即使业务应用不和外部系统打交道，为了前后端的隔离和外部访问，往往也需要API网关能力支撑。当然前期你也可以使用Ngnix来替代API网关实现统一代理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n4. 灰度发布或金丝雀发布</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个在我原来谈网关的文章的时候很少谈到这点，但是实际上在DevOps和微服务架构实施下，对于灰度发布能力往往也是必须的。比如我们对已有的一个接口服务做了修改，我们想先在某些业务系统试用，没有问题再发布到所有的业务系统。这个时候就涉及到金丝雀发布的问题。当然你可以配置是按系统，按IP，按用户还是其他的发布策略。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这块的能力不仅仅是DevOps的自动部署，同时也必须考虑网关层能够基于动态发布的内容进行路由。确保服务调用消费的路由路径是隔离开的。而对于金丝雀发布策略允许你直接只导入指定量的流量到新的版本，API网关就可以帮你来做这件事情。你可以配置10%的请求到新的版本，然后一旦你确保了新版本没有bug，你可以把流量切换到100%。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n5. 服务组合能力</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实际上当我们谈API网关的时候，一般不会谈服务组合能力，因为一涉及到服务组合或编排，那么必然导入网关整体架构变重。从当前主流网关看，一般也不提供类似能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实际上服务组合编排难点在于，上个服务的输出往往要成为下一个服务的输入，同时服务输入和输出还存在大量的数据映射操作。我们回顾下类似智慧家庭里面的组合场景编排，实际上很简单，比如我回到家后需要打开空调，关窗帘，打开热水器，开灯的一系列动作，我只是需要简单将这些动作编排在一起。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对应到API网关的服务组合，实际上我们也可以做轻量的服务组合，即去掉数据映射等复杂组合场景，只需要实现简单的服务多次调用，服务返回数据的组合等即可。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于具体的服务组合和编排，可以参考下面这篇文章：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<a HREF=\"https://www.toutiao.com/i6860399450171376141/?group_id=6860399450171376141\" TARGET=\"_blank\">\n从ESB服务组合编排到NetflixConductor微服务编排</A></P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nAPI全生命周期管理能力</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到，API网关更多是一个底层引擎，而要实现完整的API管控，往往还需要配合API全生命周期管理能力。这个完全可以在底层API网关引擎基础上进行扩展开发。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/29d766c347e844ad99bb3025672b9676?from=pc\" IMG_WIDTH=\"762\" IMG_HEIGHT=\"370\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nAPI接口的定义</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在定义API接口的时候首先要定义API分组，这个从京东，淘宝等OpenAPI能力开放平台的API文档都可以看到，首先要有API归类分组，然后再定义详细的API。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n比如京东开放平台，有商品，店铺，仓储，支付等多个类目，然后各类目下有详细的API的定义。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nAPI的定义包括两个部分，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一个是API基本信息定义，一个是详细输入输出定义</SPAN>。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/6bd729a931e948c1810e5e7cb70e256a?from=pc\" IMG_WIDTH=\"821\" IMG_HEIGHT=\"402\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nAPI基本信息仍然是包括了API的编码，API名称，API的分组，API的用途描述，API的缓存，安全等基本控制信息的定义等。还有就是这个API接口的访问路径定义，API接口是Get还是Post方法定义等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nAPI详细信息主要就是API的输入和输出信息定义。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nAPI的输入参数注意实际有多种形式，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一个就是在API访问路径上的路径参数，还有一个就是在访问路径后?参数后面的查询参数信息</SPAN>，还有就是一个完整的Request\nBody请求参数信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n比如对于Http\nRest查询接口，这类Get方法接口，可以看到并没有Body信息，更多的是通过路径和查询参数定义来完成查询。而对于Post接口往往就涉及到具体的Body信息定义。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n但是要注意，为了实现Http Rest接口和SOAP WS接口服务的互相转换，对于SOAP WS查询服务接口在自动转换为Http\nRest接口服务的时候实际上仍然为转换为Post方法+Body参数模式。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于API接口定义，仍需要预留标准的系统级参数部分内容。这部分内容是API网关实现统一标准化管理的基础，不能随便修改和变动。比如京东API平台预留的API名称，方法，版本，Token，APP_Key，Date等都是使用系统级别的参数定义，是每一个接口API暴露后都需要增加的参数头信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nAPI快速开发的支持</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/dfic-imagehandler/78c85517-6255-41fd-877c-5da514704162?from=pc\" IMG_WIDTH=\"1024\" IMG_HEIGHT=\"576\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在API接口服务定义完成后，一方面是可以通过类似WADL或RAML等标准的Rest接口定义规范文件，另外一个就是需要提供客户端和服务端的开发框架代码。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这个基础上，还可以提供完整的示例代码下载，方便开发商或合作伙伴对API接口进行快速开发。开发完成的后端原始服务接口，在注册接入前还可以提供接口服务的模型匹配自校验功能，确认开发的服务完全遵循从上到下方式-》API开发框架生成和API后端服务开发。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于API接口管理，如果是标准的从顶朝下模式，即在定义了API接口后，实现生成类似WADL或RAML标准接口规范。后端服务基于我们标准的API接口契约进行开发，那么开发完成后就方便快速代理方式接入，在接入过程中就不再有参数映射和转换的问题，否则我们的API接入过程会比较复杂。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nAPI接口服务的注册和接入</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nAPI接口定义过程和API接口的注册接入最好分开。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在API接口定义完成后进行API接口服务的注册，即选择具体的后端服务，然后对服务进行接入。同时将后端服务对应到我们在前面定义的API接口代理服务上。注意在前面谈到的API路径定义，方法类型定义，实际上也可以在API接口服务注册和接入的时候来完成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nAPI接口服务的后续变更发布，还可以考虑和DevOps平台配合并支持灰度发布功能。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n反向的后端服务快速接入并发布为API接口服务，即直接对后端已有的API服务进行快速接入，将API后端服务发布为代理服务，在整个接入过程中需要定义API接口名称，API访问路径，API方法类型等信息。在发布为API接口服务后，对于后端服务的API参数信息也需要进行快速导入，以方便在API接口查询中看到详细的接口内容定义。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在将后端业务服务发布为API接口服务的时候，发布的代理服务要自动增加系统级的输入参数信息，这个输入参数最好的方式是在访问路径中进行增加，以减少对已有的后端服务的影响。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nAPI接口在注册和接入完成后，将自动进行服务部署和服务发布，即注册接入完成后的服务可以通过发布的访问路径地址进行访问。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务接入适配能力</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n服务注册接入本身分为两个层面，一个是已有服务的注册接入，一个是需要适配后的服务发布。在设计的时候需要考虑到两个方面的需求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于已有服务的存代理接入最简单，即只需要提供业务系统的Rest接口服务地址即可，在接入的时候，对相关的日志，安全，流控，负载均衡等策略进行配置，配置完成后即完成服务接入和注册。同时对于路由服务接入需要单独考虑，对于路由服务在接入的时候可以适配到多个原始业务系统的接口服务地址。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n服务发布是对原来我们服务适配功能的一个改进，即直接从底向上的进行服务发布，而不需要实现定义服务元数据或模型，制定服务契约格式等，在服务发布完成后再生成相关的基础数据到服务元数据库即可。对于服务发布参考服务适配的能力，我们可以考虑如下场景下的需求。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n将一个已有的SOAP WS服务发布和注册为一个Http Rest接口服务。</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n将一个数据库表，或存储过程发布为一个Http Rest接口服务。</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n将一个JMS消息接口发布为一个Http Rest接口服务。</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n将一个JAR包中的API接口方法或函数发布为一个Http Rest接口服务。</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于服务发布而言，如果不仅仅是微服务网关能力，而是一个微服务支撑或微服务快速开发平台的话，还可以提供完整的服务开发和设计能力。即在微服务平台首先定义数据或对象模型，然后将对象模型转换为Http\nRest中的资源对象，并发布对应的Get , Post各种Http Rest接口服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对应发布的接口服务可以直接在微服务平台上进行拦截，模拟生成相关的输入或输出数据。当然也可以直接将数据模型对象生成到对应的数据库，同时将微服务API接口的实现生成对应的Java代码框架并给出参考实现。而我们剩余的工作，仅仅是填充代码逻辑即可。通过这种方式可以极大的提高我们进行微服务架构开发的速度。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nAPI接口在线模拟测试功能</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个功能参考当前的OpenAPI能力开放平台的做法来实现即可。即对于已经发布完成的API接口服务，提供在线测试工具进行在线测试。同时对接口服务调用的输入参数进行结构化展示，方便用户对测试需要的各种参数进行输入。在输入完成后形成完整的提交参数完整字符串。通过测试，可以返回最终的模拟调用返回结果字符串信息。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/83706bdfa323404f9fde3dccbfb878d3?from=pc\" IMG_WIDTH=\"667\" IMG_HEIGHT=\"320\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n同样，这里可以采用Swagger工具来完成，Swagger不仅仅是API接口的定义，接口文档的生成，同时还可以根据可以接口定义，自动生成接口测试用例，对接口进行测试工作。我们也很容易将Swagger能力整合都API网关的管理平台中。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nAPI接口查询功能</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于API接口查询功能也是一个标准的功能，实际上可以考虑将查询功能和API接口服务的分类浏览分开。对于API接口的分类浏览参考开放平台的API接口文档做法来实现接口。对于API接口查询，即可以设置不同的动态查询条件，对API接口进行查询，返回结果集。对于查询到的API接口清单列表，可以点击详细进入到API接口详细的输入和输出信息查看界面。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nAPI状态管理功能</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于已经注册和发布的API接口可以对其状态进行管理。其中主要的状态包括了待发布，上线，暂停，下线废弃等几种关键状态。对于API状态本身还需要和后续的API监控管理结合，能够通过API性能监控动态的调整API接口的状态。比如在API触发熔断后，自动对API接口状态调整为暂停。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nAPI版本管理能力</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于API需要启用版本管理能力。当前一些API接口服务实现方法会在路径参数中增加API版本信息，以确定究竟访问哪个版本。但是由于不同的API版本可能存在返回的结果集的数据结构不一样的问题，因此对于这种场景需要针对该API定义不同的大版本，不同的大版本实际上对应不同的后端原始服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这里我们介绍下当前主流的一些API网关功能供参考。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n开源Kong API网关</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/915cd3dfbd2949baaf7dbb8e664f0b66?from=pc\" IMG_WIDTH=\"694\" IMG_HEIGHT=\"381\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在微服务架构之下，服务被拆的非常零散，降低了耦合度的同时也给服务的统一管理增加了难度。如上图左所示，在旧的服务治理体系之下，鉴权，限流，日志，监控等通用功能需要在每个服务中单独实现，这使得系统维护者没有一个全局的视图来统一管理这些功能。API\n网关致力于解决的问题便是为微服务纳管这些通用的功能，在此基础上提高系统的可扩展性。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nKong 的插件机制是其高可扩展性的根源，Kong 可以很方便地为路由和服务提供各种插件，网关所需要的基本特性，Kong\n都如数支持：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n云原生: 与平台无关，Kong可以从裸机运行到Kubernetes</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n动态路由：Kong 的背后是 OpenResty+Lua，所以继承了动态路由的特性</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n限流和熔断</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n健康检查</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n日志: 可以记录通过 Kong 的 HTTP，TCP，UDP 请求和响应。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n鉴权: 权限控制，IP 黑白名单，同样是 OpenResty 的特性</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nSSL: Setup a Specific SSL Certificate for an underlying service or\nAPI.</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n监控: Kong 提供了实时监控插件</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n认证: 如数支持 HMAC, JWT, Basic, OAuth2.0 等常用协议</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nREST API: 通过 Rest API 进行配置管理，从繁琐的配置文件中解放</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n可用性: 天然支持分布式</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n高性能: 背靠非阻塞通信的 nginx，性能自不用说</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n插件机制: 提供众多开箱即用的插件，且有易于扩展的自定义插件接口</LI>\n</UL>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/238594df4e8347a6a682972cf12e9167?from=pc\" IMG_WIDTH=\"688\" IMG_HEIGHT=\"414\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从上面图可以看到，Kong网关是基于OpenResty应用服务器，OpenResty是一个基于 Nginx 与 Lua 的高性能\nWeb 平台，其内部集成了大量精良的 Lua 库、第三方模块以及大多数的依赖项。用于方便地搭建能够处理超高并发、扩展性极高的动态\nWeb 应用、Web 服务和动态网关。而Kong 核心基于OpenResty构建，并且拥有强大的插件扩展功能。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在Http请求到达Kong网关后，转发给后端应用之前，可以通过网关的各种插件对请求进行流量控制，安全，日志等各方面的处理能力。当前Kong的插件分为开源版和社区版，社区版还有更多的定制功能，但是社区版是要收费的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n目前，KONG开源版本一共开放28个插件，如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nacl、aws-lambda、basic-auth、bot-detection、correlation-id、cors、datadog、file-log、galileo、hmac-auth、http-log、ip-restriction、jwt、key-auth、ldap-auth、loggly、oauth2、rate-limiting、request-size-limiting、request-termination、request-transformer、response-ratelimiting、response-transformer、runscope、statsd、syslog、tcp-log、udp-log。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n以上这些插件主要分五大类，Authentication认证，Security安全，Traffic\nControl流量控制，Analytics &#38;\nMonitoring分析&#38;监控，Logging日志，其他还有请求报文处理类。插件类似AOP开发中的横切功能，可以灵活的配置进行拦截控制，下面选择一些关键性的插件进行简单的说明。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n黑白名单控制能力-ip-restriction</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nKong提供的IP黑白名单控制能力还算相当强，从配置项里面可以看到主要可以针对两个维度进行配置，一个是针对所有的API接口还是针对特定的API接口，一个是针对所有的所有的消费方还是特定的某个消费方。对于IP配置可以是一个区段，也可以是特定的IP地址。但是黑白名单不能同时配置，其次当前没有一个功能是针对某一个系统提供的所有服务都启用黑名单或白名单功能。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n日志记录能力-syslog, file-log，http-log</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这里主要日志的插件比较多，一个是sysLog在配置后可以直接将Kong产生的日志写入到应用服务器的系统日志文件中。如果配置了file-log则是单独写入到你指定的file文件中。对于http-log则是对于http服务请求，可以详细的记录请求的输入和输出报文信息，但是具体是记录到哪里，需要通过config.http_endpoint配置。具体关键的配置参数信息如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nconsumer_id: 可选参数,消费者id(启用了消费者认证可以使用，根据id识别发出请求的消费者);</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nconfig.http_endpoint: 日志接收服务器(包括使用的协议,http or https);</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nconfig.method: 可选参数,默认POST,访问日志服务器的请求方式(可选值:PUT,PATCH,POST);</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nconfig.timeout: 可选参数,默认10000毫秒,请求超时时间</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nconfig.keepalive: 可选参数,默认60000毫秒,连接在关闭之前可存活时间</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n熔断插件-request-termination</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n该插件用来定义指定请求或服务不进行上层服务,而直接返回指定的内容.用来为指定的请求或指定的服务进行熔断。注意Kong的熔断插件感觉是临时对服务的禁用，而不是说当达到某一种监控阈值的时候自动触发熔断，或者相关内容还没有了解到。从官方文档的应用场景也可以看到这点。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nTemporarily disable a Service (e.g. it is under maintenance).</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nTemporarily disable a Route (e.g. the rest of the Service is up and\nrunning, but a particular endpoint must be disabled).</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nTemporarily disable a Consumer (e.g. excessive consumption).</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果仅仅是这种方式的熔断话，实际上意义并不是很大。但是可用的地方就在于当某个业务系统进行发版部署的时候我们可以对该业务系统或该业务系统所提供的所有服务进行熔断。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n限流插件-rate-limiting</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nKong当前提供的限流相对来说还是比较弱，即主要是控制某一个API接口服务在单位时间内最多只能够调用多少次，如果超过这个次数那么网关就直接拒绝访问并返回错误提示信息。而在前面我讲限流和流量控制的时候经常会说到，就是限流实际上一个是根据服务调用次数，一个是根据服务调用数据量，需要在这两个方面进行限流。而里面更加重要的反而是数据量的限流，因为大数据量报文往往更加容易造成内存溢出异常。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n安全认证类插件</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当前Kong网关提供basic-auth，key-auth、ldap-auth，hmac-auth多种认证插件。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nBasic-auth基本认证插件，即我们根据用户名和密码来生成一个base64编码，同时将该编码和目标服务绑定，这样在消费目标服务的时候就需要在报文头填写这个Base64编码信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nKey-auth认证插件则是利用提前预设好的关键字名称，如下面设置的keynote =\napices，然后为consumer设置一个key-auth\n密钥，假如key-auth=test@keyauth。在请求api的时候，将apikey=test@keyauth，作为一个参数附加到请求url后，或者放置到headers中。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nHmac-auth插件是设置绑定的service和rout，以启动hmac验证。然后在Consumers页面中Hmac\ncredentials of Consumer设置中添加一个username和secret。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n请求报文容量限制-request-size-limiting</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n该插件用于限制请求报文的数据量大小，可以限制单个服务，也可以显示所有的API接口服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n支持OAuth2.0身份认证-oauth2</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nKong网关支持OAuth2.0身份认证，OAuth2.0 协议根据使用不同的适用场景，定义了用于四种授权模式。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nAuthorization code（授权码模式）：标准的 Server 授权模式，非常适合 Server 端的 Web\n应用。一旦资源的拥有者授权访问他们的数据之后，他们将会被重定向到 Web 应用并在 URL\n的查询参数中附带一个授权码（code）。在客户端里，该 code\n用于请求访问令牌（access_token）。并且该令牌交换的过程是两个服务端之前完成的，防止其他人甚至是资源拥有者本人得到该令牌。另外，在该授权模式下可以通过\nrefresh_token 来刷新令牌以延长访问授权时间，也是最为复杂的一种方式。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nImplicit\nGrant（隐式模式）：该模式是所有授权模式中最简单的一种，并为运行于浏览器中的脚本应用做了优化。当用户访问该应用时，服务端会立即生成一个新的访问令牌（access_token）并通过URL的#hash传回客户端。这时，客户端就可以利用JavaScript等将其取出然后请求API接口。该模式不需要授权码（code），当然也不会提供refresh\ntoken以获得长期访问的入口。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nResource Owner Password\nCredentials（密码模式）：自己有一套用户体系，这种模式要求用户提供用户名和密码来交换访问令牌（access_token）。该模式仅用于非常值得信任的用户，例如API提供者本人所写的移动应用。虽然用户也要求提供密码，但并不需要存储在设备上。因为初始验证之后，只需将\nOAuth\n的令牌记录下来即可。如果用户希望取消授权，因为其真实密码并没有被记录，因此无需修改密码就可以立即取消授权。token本身也只是得到有限的授权，因此相比最传统的\nusername/password 授权，该模式依然更为安全。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nClient Credentials（客户端模式）：没有用户的概念，一种基于 APP 的密钥直接进行授权，因此 APP\n的权限非常大。它适合像数据库或存储服务器这种对 API 的访问需求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n简单转换能力-request-transformer and response transformer</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nKong网关提供对输入和输出报文简单转换的能力，这部分内容后续再详细展开介绍。从当前配置来看，主要是对消息报文提供了Add,\nReplace,Rename,Append等各种简单操作能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nKong网关和其它网关的一些对比。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/c68fa6c8e60043f99314d7ee420cd010?from=pc\" IMG_WIDTH=\"852\" IMG_HEIGHT=\"434\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从上面对比图也可以看到，Kong网关在功能，性能，插件可扩展性各方面都能够更好的满足企业API网关的需求。因此我们也是基于Konga来进一步定制对Kong网关的管控治理平台。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/bedbe9b77748483b882bdb06a06d3d4d?from=pc\" IMG_WIDTH=\"781\" IMG_HEIGHT=\"362\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在整个定制中增加了基于DB适配的Http Rest\nAPI接口的自动发布，API服务自动化注册，服务日志采集和服务日志查询，常见映射模板定制，接口服务的自动化测试等方面的能力。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n阿里公有云API网关</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/3fbc27b44be945699e32e6abe0725776?from=pc\" IMG_WIDTH=\"698\" IMG_HEIGHT=\"292\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先我们来看下阿里云提供的API网关产品的功能介绍：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">API\n网关（API\nGateway），是提供API托管服务，涵盖API发布、管理、运维、售卖的全生命周期管理。辅助用户简单、快速、低成本、低风险的实现微服务聚合、前后端分离、系统集成，向合作伙伴、开发者开放功能和数据。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n阿里提供的API网关提供的关键功能，参考产品本身的功能文档说明，主要如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nAPI 生命周期管理</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/7be7e595299844ea8598652767949d27?from=pc\" IMG_WIDTH=\"862\" IMG_HEIGHT=\"420\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n支持包括API 注册和接入发布、API 测试、API 下线等生命周期管理功能。支持 API 日常管理、API 版本管理、API\n快速回滚等维护功能。基本需要覆盖API管理全生命周期。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n全面的安全防护</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n支持多种认证方式，支持 HMAC (SHA-1，SHA-256) 算法签名。支持 HTTPS 协议，支持 SSL\n加密。防攻击、防注入、请求防重放、请求防篡改。（没看到是否支持Auth2.0和具体的Token验证机制）</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n灵活的权限控制</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">用户以\nAPP 作为请求 API 的身份，网关支持针对 APP 的权限控制。只有已经获得授权的 APP 才能请求相应的 API。API\n提供者可以将调用某个API 的权限主动授予给某个APP。若 API上架到 API 市场，购买者可以将已购买的 API 授权给自己的\nAPP。(没看到是否基于IP进行控制，还是基于Token进行控制，即对于消费方分配独立的Token信息)</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n精准的流量控制</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n流量控制可以用于管控\nAPI的被访问频率、APP的请求频率、用户的请求频率。流量控制的时间单位可以是分钟、小时、天。支持流控例外，允许设置特殊的 APP\n或者用户。（流量控制只支持服务运行频率，没看到可以基于数据量进行流控）</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n请求校验</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n支持参数类型、参数值（范围、枚举、正则、Json Schema）校验，无效校验会被 API\n网关直接拒绝，以减少无效请求对后端造成的资源浪费，大幅降低后端服务的处理成本。（这个功能实际有一定的用处，并不会牺牲太多的性能，但是会实现一些简单的参数完整性校验能力。）</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据转换</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n通过配置映射规则，实现前、后端数据翻译。支持前端请求的数据转换。支持返回结果的数据转换。(暂时不清楚数据转换功能能够实现的能力）</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n监控报警</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n提供可视化的API实时监控，包括：调用量、流量大小、响应时间、错误率，在陆续增加维度。支持历史情况查询，以便统筹分析。可配置预警方式（短信、Email），订阅预警信息，以便实时掌握API运行情况。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n自动工具</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n自动生成 API 文档，可供在线查看。API 网关提供多种语言 SDK 的示例。降低 API\n的运维成本。提供可视化的界面调试工具，快速测试，快速上线。(当前网上也有不少的API接口文档自动生成工具可选）</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nAPI 市场</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">可将\nAPI 上架到 API 市场，供更多开发者采购和使用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从整个功能的介绍可以看到对于API的全生命周期管理（注册，接入，代理，路由，负载均衡），安全，权限，流量控制，监控和告警等是所有API网关都必须具备的功能。而对于API市场，API文档自动生成，请求的参数校验，数据的转换等则可以看做是扩展功能。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于API市场往往是一个重要的扩展能力，即对于API接口服务可以作为商品一样进行订购和使用，并根据相应的调用次数，调用的数据量等条件进行计费处理。这我们我们说的PaaS平台的服务层能力作为产品和服务发布，能够进行订购生产订单，能够进行计费等完全是一个道理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n对于公有云上API网关存在的背景说明</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/684de7a940b94abdb664f082e42c3e69?from=pc\" IMG_WIDTH=\"698\" IMG_HEIGHT=\"351\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于类似亚马逊，华为云，阿里云等公有云上为何要提供API网关类产品，其关键点还是在于一个企业如果内部的主动业务应用和系统都迁移到公有云后，那么当企业需要将内部多个业务系统的共享或发布给外部使用的时候如何做？这个时候必须要有一个API网关，来进行能力的统一发布，最基本是提供统一的服务目录访问，更加重要的是实现统一的安全管理，授权，服务日志监控预警能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此一个企业迁移到公有云后，只要存在内部多业务系统，多组件都需要发布API接口能力给外部使用的时候，一定存在API网关的应用场景。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n其它开源API网关</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n有赞团队的API网关实践</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/cd20888f60dd4cd3860e6307740cbb7c?from=pc\" IMG_WIDTH=\"769\" IMG_HEIGHT=\"537\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nhttps://tech.youzan.com/api-gateway-in-practice/</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n有赞API网关目前承载着微商城、零售、微小店、餐饮、美业、AppSDK、部分PC、三方开发者等多个业务的调用，每天有着亿级别的流量。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n有赞后端服务最开始是由PHP搭建，随着整个技术体系的升级，后面逐步从PHP迁移到基于Dubbo开发了一个新的框架Nova，兼容Dubbo调用，同时支持调用PHP服务。于是网关也支持了新的Nova协议，这样就有Dubbo、Http、Nova三种协议。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这篇文章中提到的网关核心设计部分相关内容可以参考</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n异步特性：我们使用Jetty容器来部署应用，并开启Servlet3.0的异步特性，由于网关业务本身就是调用大量业务接口，因此IO操作会比较频繁，使用该特性能较大提升网关整体并发能力及吞吐量。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n缓存：为了进一步提升网关的性能，我们增加了一层分布式缓存（借用Codis实现），将一些不经常变更的API元数据缓存下来，这样不仅减少了应用和DB的交互次数，还加快了读取效率。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n链式处理：在设计网关的时候，我们采用责任链模式来实现网关的核心处理流程，将每个处理逻辑看成一个Pipe，每个Pipe按照预先设定的顺序先后执行</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n平滑限流：消除了简单计数器限流带来的短时间内流量不均的问题。目前网关支持IP、店铺、API、应用ID和三方ID等多个维度的限流，也支持各维度的自由组合限流。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n熔断降级：使用Hystrix进行熔断降级处理。Hystrix支持线程池和信号量2种模式的隔离方案，内部也开发了一个基于Hystrix的服务熔断平台</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n预警监控：实时地从Kafka消费API调用日志，如果发现某个API的RT或者错误次数超过配置的报警阈值，则会立即触发报警</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n企业级API网关设计</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/8563adbeb55e4381beed8bf0456e53b0?from=pc\" IMG_WIDTH=\"719\" IMG_HEIGHT=\"407\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nhttps://cloud.tencent.com/developer/article/1080652</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这篇文章是对企业级API网关设计必须系统化的产生，从API网关的概述，API网关所起的作用，当前主流的API网关功能对比分析，API网关的高可用性设计多方面进行了阐述。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n网关层作为客户端与服务端的一层挡板，主要起到了三大类作用：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n隔离作用：</SPAN>作为企业系统边界，隔离外网系统与内网系统。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n解耦作用：</SPAN>通过解耦，使得微服务系统的各方能够独立、自由、高效、灵活地调整。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n脚手架作用：</SPAN>提供了一个地点，方便通过扩展机制对请求进行一系列加工和处理。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nAPI网关作为对外提供服务的入口，就像企业服务的大门。一方面，要有足够的能力，应对大量的对外访问，另一方面，还要给对内的服务提供一定的安全保障。除此之外，企业提供的API服务多种多样，API网关要能够对这些API的全生命周期进行便捷的管理，例如服务发布、调整、下架、计费、监控等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n企业API网关在功能设计上主要应该考虑如下内容：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">API\n生命周期管理功能：覆盖 API 的定义、测试、发布的整个生命周期管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nAPI开发和使用支持功能：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n安全防护功能：API 请求到达网关需要经过身份认证、权限认证，才能到达后端服务。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n流量控制功能：API调用次数，异常，分级。流控粒度：分钟、小时、天。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n请求管理功能：可根据配置进行参数类型、参数值（范围、枚举、正则）的校验</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n监控告警功能：提供实时、可视化的 API 监控，调用量、调用方式、响应时间、错误率。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nAPI交易功能： 提供API交易市场，计量计费、Quota 控制、运营售卖等需求。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n顺着这篇文章，我们参考了另外一篇谈如何设计高并发下API网关的一篇文章，重点对并发模型，SEDA基于事件的并发架构进行了阐述。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n地址：https://mp.weixin.qq.com/s?__biz=MzI5MDEzMzg5Nw==&#38;mid=412734308&#38;idx=1&#38;sn=f1c1bd5e22e2ae7dedf4b788a625e814&#38;scene=21#wechat_redirect</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n传统的并发编程模型主要有两种：一种是Thread-based concurrency, 另一种是Event-driven\nconcurrency。总结下两种模式的特点如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于线程的并发：每个任务一线程直线式的编程使用资源高昂，context切换代价高，竞争锁昂贵，太多线程可能导致吞吐量下降，响应时间暴涨；</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于事件的并发：单线程处理事件的每个并发流实现为一个有限状态机应用直接控制并发负载增加的时候，吞吐量饱和响应时间线性增长。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nSEDA架构是目前云计算、微服务时代下一种优秀的消息处理架构，而且历经考验，稳定可靠。SEDA架构的核心思想：把一个请求处理过程分成几个Stage，每个Stage可由不同的微服务进行处理，不同资源消耗的Stage使用不同数量的线程来处理，微服务之间采用异步通讯的模式。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n开源API网关Goku</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/83d6892d675949cf8e4e358199e18449?from=pc\" IMG_WIDTH=\"942\" IMG_HEIGHT=\"502\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nGoKu API\nGateway，中文名：悟空API网关，是eoLinker旗下、国内首个企业级开源的go语言API网关，帮助企业进行API服务治理与API性能安全维护，为企业数字化赋能。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nGoKu支持OpenAPI与微服务管理，支持私有云部署，实现API转发、请求参数转换、数据校验等功能，提供图形化界面管理，能够快速管理多个API网关，提高API业务安全性。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n码云地址：https://gitee.com/eolinker/goku-api-gateway</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n官网地址：https://www.eolinker.com/product/api_gateway/</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nGoku API Gateway （悟空 API\n网关）是运行在企业系统服务边界上的微服务网关。当您构建网站、App、IOT甚至是开放API交易时，Goku API Gateway\n能够帮你将内部系统中重复的组件抽取出来并放置在Goku网关上运行，如进行用户授权、访问控制、防火墙、数据转换等；并且Goku\n提供服务编排的功能，让企业可以快速从各类服务上获取需要的数据，对业务实现快速响应。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nGoku API Gateway 的社区版本（CE）拥有完善的使用指南和二次开发指南，代码使用纯 Go\n语言编写，拥有良好的性能和扩展性，并且内置的插件系统能够让企业针对自身业务进行定制开发。并且 Goku API Gateway 支持与\nEOLINKER 旗下的 API Studio 接口管理平台结合，对 API 进行全面的管理、自动化测试、监控和运维。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n产品关键特性</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n控制台：通过清晰的UI界面对网关集群进行各项配置。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n集群管理：Goku网关节点是无状态的，配置信息自动同步，支持节点水平拓展和多集群部署。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n热更新：无需重启服务，即可持续更新配置和插件。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n服务编排：一个编排API对应多个backend，backend的入参支持客户端传入，也支持backend间的参数传递；backend的返回数据支持字段的过滤、删除、移动、重命名、拆包和封包；编排API能够设定编排调用失败时的异常返回。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据转换：支持将返回数据转换成JSON或XML。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n负载均衡：支持有权重的round-robin负载平衡。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n服务发现：从 Consul、Eureka 等注册中心发现后端服务器。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nHTTP(S)反向代理：隐藏真实后端服务，支持 Rest API、Webservice。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n多租户管理：根据不同的访问终端或用户来判断。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n访问策略：支持不同策略访问不同的API、配置不同的鉴权（匿名、Apikey、Basic）等。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n灵活的转发规则：支持模糊匹配请求路径，支持改写转发路径等，可为不同访问策略或集群设置不同的负载。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nIP黑白名单。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n自定义插件：允许插件挂载在常见阶段，例如before match，access和proxy。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nCLI: 使用命令行来启动、关闭和重启Goku。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nServerless: 在转发过程的每一个阶段，都可以添加并调用自定义的插件。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n请求日志(access log)：仅记录转发的基本内容，自定义记录字段与排序顺序，定期自动清理日志。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n运行日志(system\nlog)：提供控制台和节点的运行日志，默认仅记录ERROR等级的信息，可将等级按实际情况调成INFO、WARN或DEBUG。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n可扩展：简单易用的插件机制方便扩展功能。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n高性能：性能在众多网关之中表现优异。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nOpen API：提供 API 对网关进行操作，便于集成。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n版本控制：支持操作的发布和多次回滚。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n监控和指标：支持Prometheus、Graphite。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n具体对比：https://help.eolinker.com/#/tutorial/?groupID=c-269&#38;productID=19</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从对比可以看到，开源版本对于关键的服务限流熔断，服务降级，数据缓存，格式转换，请求大小校验等能力是没有的，这些能力只在企业版本中提供。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n由于该网关基于Go语言编写，因此比类似Zuul网关有更好的性能，实际性能测试结果数据来看，和Kong网关的性能比较接近，比Kong网关性能略好。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n关键内容说明</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n整个部署架构图和常见的ESB总线或API网关产品类似，数据库可以采用Oracle或Mysql数据库，缓存采用Redis库进行缓存。前端通过F5或Ngnix进行负载均衡，本身网关节点是无状态的，支持集群化架构部署。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n通过定期检查后端服务器的可用情况，智能识别可用后端、屏蔽不可用后端，减少服务器开销。这个实际类似对后端的业务服务进行心跳监测，出现问题后进行屏蔽或预警，后端服务不可用时候实际通过API网关封装暴露的新代理服务本身也处于不可用状态。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于后端的业务服务本身可以再通过类似Ngnix集群或K8s集群暴露集群IP地址接入，当然网关本身也支持直接将多个后端业务多节点接入到网关中，由网关对后端业务服务器阶段进行负载均衡，在采用了类似容器化和K8s或集群架构的后端来说，该功能往往并不会用到。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nAPI健康检查，文档编写完成之后，API\n定期检查节点运行状态，若节点出现异常则通过邮件或者API发送告警信息，并自动尝试重启修复节点。实际我们看到对于API的监控检查包括了两个方面，一个是通过网关封装后的API节点的监控检查，一个是后端业务API服务的监控检查。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nAPI断线重连：请求转发失败后，网关会进行一定次数的断线重连，防止因网络闪断等原因导致API访问质量下降。这个类似我们说的服务重试机制，传统ESB总线的标准能力。该功能还是有用，主要是为了防止网络闪断引起的服务访问异常。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在网关里可以给不同的调用方或客户端设置访问策略，不同的访问策略可以设置不同的 API 访问权限、鉴权方式以及插件功能等。网关支持\n开放策略 与 普通策略：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n开放策略：系统自带访问策略，使用开放策略时不需要传递策略 ID 参数;</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n普通策略：自定义访问策略，需要传递策略 ID 参数。</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n网关的插件分为 策略插件 与 API插件。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n策略插件包括：流量控制、鉴权、IP黑白名单等。</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nAPI插件包括：参数映射、额外参数、熔断、服务降级等。</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n鉴权的对象为 策略 (Strategy)\n，策略可表示为一个公司、一个业务部门或一个用户。开源版网关支持以下鉴权方式：Public、Basic、Apikey。暂时没有看到基于消费访问IP地址的服务访问鉴权，不清楚是否企业版由对应的IP认证鉴权支持。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n日志管理能力</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n网关系统的日志分为两大部分：请求日志（access.log）和系统运行时日志；运行时日志又分为：控制台的运行日志（console.log）、各节点的运行日志（node.log）。对于请求日志可以详细的配置日志存放路径，记录周期，具体记录的内容等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n整体相对来说，当前网关提供的日志管理能够偏弱，特别是日志信息的查看，基于服务日志运行进行的API接口服务的运行分析统计等方面的能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n参数映射：功能具备，但是使用起来会比较麻烦，暂时没看到图形化或者表格方式的参数映射界面。对于参数映射不一定完全的图形化，但是提供类似阿里云API网关的表格化映射是一种可行的方式。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n小豹API网关</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/e5a75618e6654c869b6d98a850dec1c0?from=pc\" IMG_WIDTH=\"726\" IMG_HEIGHT=\"527\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nhttp://www.xbgateway.com/architecture.html</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个是最近在网上查找API网关相关资料的时候搜索到的一个商用的API网关，从产品介绍材料来看，我们前面谈过的网关的核心功能基本上全部包括，而且相当来说也比较完善。同时提供了一个较方便的API网关的治理管控平台，可以方便的对API注册接入和运行全生命周期，\n方便对安全，流控，日志各方面进行灵活管控。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n下面我们看下网站对API网关架构特点的一些说明：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于Netty NIO的响应式架构；分布式缓存基于Redis；数据库基于Mysql，分布式配置基于ZooKeeper</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nAPI配置缓存，运行时不依赖DB，配置更新后自动通知各网关节点；</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n支持自定义组件，动态加载，在不中断网关服务的情况下重新加载配置和运行组件；</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nAPI服务连续异常后自动熔断和自我恢复，访问异常、超时处理；</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n网关核心运行过程不写磁盘IO，避免磁盘IO性能影响网关吞吐量；</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nDocker容器化支持，拆分网关、管理服务、第三方中间件依赖等镜像，便于灵活扩容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nRestCloud API企业微服务API开发</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/7e60b0edd79441d0b600986167074b2c?from=pc\" IMG_WIDTH=\"823\" IMG_HEIGHT=\"471\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_4361597995157073\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nhttp://www.restcloud.cn/restcloud/mycms/apigateway.html</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nRestCloud\nAPI网关是完全自主研发的面向企业级的API网关，一且以简单、易用、轻量级为目标进行研发，同时兼顾作为企业级的服务总线可以替换企业原有的ESB产品，RestCloud是集ESB和API网关于一体的企业级网关产品。这个不仅仅提供了API网关，\n也提供了微服务快速开发平台，API服务治理平台，DaaS等相关组件。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/2a925f7273b54adf88cf3f67d5ceb631?from=pc\" IMG_WIDTH=\"723\" IMG_HEIGHT=\"461\" ALT=\"一文详细讲解API网关核心功能和API管理扩展\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n另外RestCloud本身还提供了Http Rest\nAPI接口的快速开发平台，可以将数据库表，表对象，1多多对象关系的快速的发布为Http Rest\nAPI接口服务，同时支持多数据库接口适配。</P>\n</DIV>\n<div><br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Fri, 21 Aug 2020 07:31:00 +0000","feedId":4798,"bgimg":"http://s4.sinaimg.cn/mw690/001l8XD7zy7FOds8AVl53&690","linkMd5":"327f7c6974101c0e3582a4a9c97850e0","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn21@2020_5/2020/08/24/22-09-22-048_ffad832a14aac4e9.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s4.sinaimg.cn/mw690/001l8XD7zy7FOds8AVl53&690":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn21@2020_5/2020/08/24/22-09-22-048_ffad832a14aac4e9.webp","https://p6-tt.byteimg.com/origin/pgc-image/47666275792a4d8f9a61cca916ef0be7?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn90@2020_1/2020/08/24/22-09-29-109_e611799b36959e09.webp","https://p1-tt.byteimg.com/origin/pgc-image/afa156bb2647427587d9a734819811dc?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn94@2020_3/2020/08/24/22-09-28-854_9f12911b6abd5c55.webp","https://p1-tt.byteimg.com/origin/pgc-image/8b9dc4889bb943f9bfcc51ea0a774bda?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn1@2020_2/2020/08/24/22-09-28-857_1bce641027434025.webp","https://p3-tt.byteimg.com/origin/pgc-image/d6ce0cfcd8c745b19c27fa95cee6fd91?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn33@2020_2/2020/08/24/22-09-29-412_cd9c7032a204ec94.webp","https://p6-tt.byteimg.com/origin/pgc-image/29d766c347e844ad99bb3025672b9676?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn38@2020_6/2020/08/24/22-09-31-224_7003912362231bb1.webp","https://p1-tt.byteimg.com/origin/pgc-image/6bd729a931e948c1810e5e7cb70e256a?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn49@2020_1/2020/08/24/22-09-26-593_007cbba314536e18.webp","https://p6-tt.byteimg.com/origin/dfic-imagehandler/78c85517-6255-41fd-877c-5da514704162?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn46@2020_2/2020/08/24/22-09-27-759_b476779c9b5c4b82.webp","https://p6-tt.byteimg.com/origin/pgc-image/83706bdfa323404f9fde3dccbfb878d3?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn85@2020_2/2020/08/24/22-09-27-432_d3f8a64d92f4b218.webp","https://p1-tt.byteimg.com/origin/pgc-image/915cd3dfbd2949baaf7dbb8e664f0b66?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn21@2020_3/2020/08/24/22-09-26-762_36ea2abce129a77d.webp","https://p6-tt.byteimg.com/origin/pgc-image/238594df4e8347a6a682972cf12e9167?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn82@2020_5/2020/08/24/22-09-28-709_cda08c5416ba437b.webp","https://p3-tt.byteimg.com/origin/pgc-image/c68fa6c8e60043f99314d7ee420cd010?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn26@2020_3/2020/08/24/22-09-27-881_2a954ac4019ff95c.webp","https://p3-tt.byteimg.com/origin/pgc-image/bedbe9b77748483b882bdb06a06d3d4d?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn50@2020_5/2020/08/24/22-09-26-414_47ca46da2816c138.webp","https://p6-tt.byteimg.com/origin/pgc-image/3fbc27b44be945699e32e6abe0725776?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn13@2020_6/2020/08/24/22-09-27-490_45bd959ed6524860.webp","https://p1-tt.byteimg.com/origin/pgc-image/7be7e595299844ea8598652767949d27?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn25@2020_2/2020/08/24/22-09-26-631_59976170e2713361.webp","https://p6-tt.byteimg.com/origin/pgc-image/684de7a940b94abdb664f082e42c3e69?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn37@2020_1/2020/08/24/22-09-31-485_76c389b3c068a171.webp","https://p6-tt.byteimg.com/origin/pgc-image/cd20888f60dd4cd3860e6307740cbb7c?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn54@2020_4/2020/08/24/22-09-28-889_43812f8914ab0d47.webp","https://p1-tt.byteimg.com/origin/pgc-image/8563adbeb55e4381beed8bf0456e53b0?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn42@2020_1/2020/08/24/22-09-25-624_bbe0edd54d35567b.webp","https://p1-tt.byteimg.com/origin/pgc-image/83d6892d675949cf8e4e358199e18449?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn97@2020_5/2020/08/24/22-09-27-601_662bda8aea754f65.webp","https://p3-tt.byteimg.com/origin/pgc-image/e5a75618e6654c869b6d98a850dec1c0?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn5@2020_5/2020/08/24/22-09-29-043_74c9c1cb11a20520.webp","https://p3-tt.byteimg.com/origin/pgc-image/7e60b0edd79441d0b600986167074b2c?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn25@2020_6/2020/08/24/22-09-29-234_662416ba81f757c1.webp","https://p1-tt.byteimg.com/origin/pgc-image/2a925f7273b54adf88cf3f67d5ceb631?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn50@2020_1/2020/08/24/22-09-28-096_3fcde4aa52eda0f9.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn17@2020_6/2020/08/24/22-09-30-958_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1598306959917},{"createdTime":"2020-08-25 06:09:19","updatedTime":"2020-08-25 06:09:19","title":"读《中台战略-中台建设与数字化商业》(200817）","link":"http://blog.sina.com.cn/s/blog_493a84550102z8vw.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7FHL3DMPPa5\" TARGET=\"_blank\"><img SRC=\"http://s6.sinaimg.cn/mw690/001l8XD7zy7FHL3DMPPa5&#38;690\" NAME=\"image_operate_66441597645288553\" /></A>\n<div><br /></DIV>\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在年初，我花了差不多1周的时间把这本书读完《中台战略-中台建设与数字化商业》，读完后整体感觉这本书可以打4颗星以上的水平。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n本书内容整体概述</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n整本书实际上讲两个方面的内容，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一个是数字化营销，一个是中台建设</SPAN>。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n融合起来说就是企业围绕数字化营销这个目标来说，如何进行内部IT架构转型或如何构建支撑企业数字化营销的中台平台。从我个人阅读后的整体感受来说，这本书实际上是中台建设方法论和架构设计部分内容偏粗，但是对于数字化营销等内容偏多，但是仍然和该书的副标题是切合的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这本书我看完后推荐给我们的SOA顾问和项目经理看，同时推荐给我们做电信运营商的所有顾问看，同时安排对于BSS域的顾问看完后整理一篇读书笔记。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n最近两年几个电信运营商本身都在做已有架构重构，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">大中台建设，内部IT全部上云（云原生DevOps）改造</SPAN>。而这本书不仅仅是中台建设方面可以参考，对于数字化营销层面对我们的BSS域顾问也有较大的参考价值。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我始终认为是一本书在适合的时候给适合的人看，书本身才能够发挥最大的价值。有时候并不是说书不好，而是看书的人，选择看书的时机不对。比如这本书来说，有些内容和经验之谈，往往说到了，但是并没有点细化，但是真正有过类似经验和实践的人往往就有很强的共鸣感。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/large/pgc-image/262a1ba771694acdb7cf06471ab2dcd6?from=pc\" IMG_WIDTH=\"688\" IMG_HEIGHT=\"372\" ALT=\"阅读《中台战略-中台建设与数字化商业》的一点思考\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这本书，整体目录和内容结构如上图，看完后给出我理解的受众为：</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n准备做业务或IT数字化转型的企业管理层，特别是负责市场营销的和企业CIO，CTO阅读</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n软件企业的项目经理，咨询企业的IT咨询顾问阅读</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n做数字化营销的团队和人员，做各类电商平台的产品经理，运营经理阅读</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n软件企业的业务架构师，流程总监，IT架构师阅读</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这本书的读书笔记我不太详细的摘录书籍里面的内容，仅仅对里面的一些关键概念做摘录，同时对看完这本书以后的我自己的一些关键感受和观点做记录。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n企业数字化的关键特征：连接，数据，智能</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n连接包括了人员，客户，供应商，设备。首先通过连接产生了数据，有了数据后产生智能分析和应用。可以看到，这个和我们前面谈的物联网云平台的三点完全是一样的，首先是连接，通过连接满足了业务协同和集成；在连接完成后能够积累和采集数据。然后数据逐渐积累后可以利用数据进行进一步的智能分析。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n连接解决的业务协同问题，由业务中台来实现；数据解决的是数据能力提供，由数据中台实现。而业务+数据的双中台才能够更好的支撑企业的智能化分析和应用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n对数字化营销概念的理解</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这本书的另外一个重点是讲数字化营销，因此还是看下书里面对这个概念的定义：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数字化营销是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">以技术+数据为双驱动，对企业的传统营销进行互联网化，数字化，智能化改造</SPAN>，进而帮助企业构建消费者全渠道触达，实现精准互动和交易的过程。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从这个概念里面可以看到数字化营销需要技术支撑，而这个技术最重要的就是企业数字中台的建设，数字中台是企业级互联网及大数据架构打造的数字化创新平台，包括业务中台和数据中台。数字中台成为指导企业数字化转型，实现数字营销的主流方法。<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/large/pgc-image/7f0f8363350b4208829561f058d7ef34?from=pc\" IMG_WIDTH=\"690\" IMG_HEIGHT=\"285\" ALT=\"阅读《中台战略-中台建设与数字化商业》的一点思考\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n所以这本书总结下来就是，传统企业在当前<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">从消费互联网到产业互联网</SPAN>发展下，必须进行数字化转型，而这个转型里面有个重点就是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">以数字化营销作为关键突破口</SPAN>，而数字化营销本身是技术+数据双驱动，要做好就必须构建强调的支撑平台，这个支撑平台就是我们说的数字中台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那么围绕数字化营销如何构建中台，包括业务中台，数据中台，技术能力等，其构建方法流程是如何的？构建关键技术工具是如何的？在中台构建完成后，我们再来复盘下构建的中台能力是如何支撑和赋能数字化营销的。以上可以理解为书籍整体的关键脉络。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n数字化转型和数字中台构建</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n企业为何要做数字化转型？简单来说应该是两点，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">业务创新和敏捷需求和连接生态构建驱动</SPAN>。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先就是企业需要更加敏捷的响应市场和消费者个性化需求，这个敏捷的实现需要有一个强大的数字中台。其次就是我们经常讲的，连接才有价值，企业要逐步开放，形成开放+连接的上下游生态，合作伙伴生态。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数字中台的核心是业务中台和数据中台</SPAN>。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于企业而言转型的主要路径是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">业务数据化和数据业务化</SPAN>。简单来说就是首先将业务中台化，业务协同基于业务中台各组件模块提供API能力来支撑，同时在这个过程中积累有价值的数据资产（数据中台）；而数据业务化理解为数据中台最终有提供有价值的业务API能力反哺给业务目标使用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n企业数字化转型实际上涉及到三个大的领域。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n其一是传统ERP领域。</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n其二是智能制造和工业大数据。</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n其三是数字化营销。</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到这本书重点还是在讲数字化营销层面的内容。当然对ERP领域也有一定的参考借鉴价值，但是完全这个方法来做传统ERP转型那肯定是行不通的。我们可以来比较下三个方面内容在业务流程和逻辑复杂度，并发量，敏捷需求三方面差异。</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n传统ERP： 复杂度高， 并发量低，敏捷需求一般</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n智能制造：复杂度一般，并发量一般，敏捷需求低</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数字营销：复杂度低，并发量高，敏捷需求高</SPAN></LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数字化营销的三个重要趋势</SPAN></P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n互联网+重构数字营销链条（线上+线下，多终端，多渠道，多场景全域覆盖）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n大数据和AI全面赋能精准营销</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n平台化和微服务化下传统架构变更和演进</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n建立一个全面服务化架构的数字中台，依靠平台能力为各个前端输出统一的管理能力，帮助企业实现业务数据化，数据业务化，赋能企业智能化营销，将会成为传统大型企业全面数字化转型的最佳方案。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数字中台的构建</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于中台，在我前面文章中也多次提到，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">中台的本质是共性业务能力的下沉，同时下层的共性业务能力不再像传统的单体大结构，而是拆分为一个个独立自治，可灵活组合的微服务模块单元</SPAN>。然后再将共性业务能力抽象为可复用的API服务接口统一对外开放，前台可以基于这些API能力快速组装和编排应用，敏捷响应业务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此中台建设一定是梳理共性业务入手，这个是中台构建和以往的技术化PaaS平台建设最大的区别。这本书里面对中台解读有句话和我思路是一致的，即：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n中台，通过对业务，数据和技术的抽象，对服务能力进行复用，构建了企业级的服务能力，消除了企业内部各业务部门，各分子公司间的壁垒，适应了企业，特别是大型企业集团业务多元化的发展战略。基于中台，可以快速的构建面向最终消费者和客户的前台应用，从而满足各自个性化的前台需求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n企业内遗留系统做集成，然后将接口统一注册到ESB，是否是中台？</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这里可以看到的是提供了统一的服务目录库，上层仍然可以基于这些API接口服务能力进行服务的编排和应用的组装，那么这种情况下实际和理想中台的差别究竟在哪些地方？具体如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">1.\n遗留系统未进行拆分或微服务化，不具备后续云原生和朝云迁移的能力，也不具备扩展能力</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.\nAPI接口为遗留模式下类似SOAP接口模式。ESB本身也承担了过多的协议转换和映射职责</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">3.\n数据多点落地，整体架构模式偏接口集成，而非服务能力实时共享。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务中台和数据中台</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n业务中台是围绕以交易为核心管理的领域组成，典型的业务中台由多个业务服务中心组成。而数据中台是实时，敏捷的为业务提供数据服务和数据分析服务能力的平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于数据中台，本书给了一个定义可以参考即：<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">数据中台是一个用技术连接大数据计算存储能力，用业务连接数据应用场景能力的一个平台。连接能力是数据中台的精髓</SPAN>。而这个定义本书并不足够准确，这个在我数据中台文章里面谈到过，即：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据中台本质是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一个能够实现跨域数据融合，并在数据融合后对数据进行整合加工和分析，提供增值的数据服务能力给业务使用的一个平台</SPAN>。在我这个概念里面多强调了两点，一个是实现跨域数据融合，一个是提供增值的数据API服务能力给业务使用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务中台和数据中台的关系如何理解比较好？</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先我们说要构建业务中台，来解决最基本的业务流程和业务协同问题。其次是业务数据化，即将业务中台存储的数据统一存储到数据中台并进行二次加工。最后是数据中台将加工后的数据形成业务可以使用的数据服务接口或数据分析服务能力即可反哺给业务应用。这就是两者的关系。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n两者的核心协同就体现在业务数据化，数据再业务化反哺业务上。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n所以这里我们有必要澄清一些理解，即你看到的中心或模块，不论是以数据为主体的，还是以业务交易或规则为主体的模块，这些模块都属于业务中台的内容。类似我们看到的供应商中心，供应商是主数据，但是供应商中心仍然是属于业务中台的范畴，不是数据中台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而到了数据中台注意看到的已经不是一个个拆分后的模块中心，而是一个<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">整合后的数据共享库</SPAN>，即我们经常说的分布式的ODS库，但是这个还不够，在ODS库上我们还是做了部分数据仓库要做的数据模型涉及，维度表设计等。但是所有做的这些事情，最终提供的支撑API能力都是实时为业务服务的，不是为管理决策服务的，这个是和传统的BI分析平台最大的区别。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即一个是为业务服务，一个是为管理决策服务；一个是实时性要求，一个是定期非实时需求。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n比如我们浏览一个电商平台的时候，刚我们购买一个商品的时候，会出现一个推荐的其它商品列表，这个针对性推荐就来源于我们数据中台的API接口服务能力。数据中台要提供这个能力不容易，一个是要采集集成日常的商品，用户，交易，关联交易数据，一个是基于这些数据要做分析模型，然后基于分析模型最终得出一个推荐商品列表。这个数据中台提供的API接口服务是实际业务应用场景中实时要用的能力，是为业务流程和协同服务的。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到数据中台反哺业务的能力越强，我们业务能够为用户提供的增值服务价值就越大。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n中台和平台间的关系</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于中台构建中，我们有一个概念就是技术中台，实际上在中台标准概念里面是没有技术中台的说法的，技术中台应该划入到标准的PaaS技术平台里面去。而传统的PaaS平台能力我们原来也讲的很清楚，即应用托管能力，各类技术服务提供能力。只是现在应用托管能力转变为了容器云和集群调度管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n所以对于中台和平台的关系，包括技术中台和已有的云PaaS平台边界是我们需要思考的问题，对于该问题我们分两个层面进行思考。<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">第一就是混合云或部分能力自建模式；第二就是基于公有云能力完全的云原生模式</SPAN>。这两者模式本身存在一定的区别。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n方式一：混合云或部分自建模式</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这种模式下，我们理解云平台的边界为容器云PaaS平台，即我们常说的通过Docker容器+K8S来统一对外提供容器资源和集群编排调度能力。在这种模式下，技术中台为：<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">DevOps过程支撑平台+技术服务提供+大数据集成技术工具</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于技术服务提供既包括互联网常说的消息，缓存，日志，通知，分布式存储，分布式数据库等技术服务能力，同时也包括传统企业信息化应用中的4A和流程引擎。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n方式二：基于公有云能力完全的云原生模式</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我们可以看下当前的阿里云和华为云，可以看到当前的公有云平台除了提供完整的容器云PaaS平台，各类的技术服务能力外，也还提供了DevOps的过程支撑能力平台，方便你进行持续集成和交付。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n也就是说在这种模式下没有必要有任何的技术中台，即使涉及到你项目要使用的一个个性化的共性技术组件，我们仍然可以把它放到业务中台里面，作为业务中台的一个模块进行管理。在这种模式下，开发团队真正只需要关注业务中台中的各个微服务模块功能和API接口开发，其它你都不需要关心和自建。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n同时你按照标准规范开发的东西，能够确保快速的部署和交付到公有云基础设施，而且保证足够的可靠性和资源弹性扩展能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在前面几篇文章我都在谈云原生，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">云原生应用的一个核心就是为了公有云平台而生</SPAN>，不仅仅是设计开发，部署交付，同时也包括后续的运维监控。为了更好做到这点，需要类似DevOps，微服务，ServiceMesh等相关的过程，工具技术来进行支撑。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n对业务创新的敏捷响应和支撑能力-P86页</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n企业已经过了通过软件来完成信息化的年代，企业需要的是创新的机会，变革的机会，即：</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n企业的IT基础设施能够全面云化，能够实现朝云端的全面迁移能力</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n业务架构必须互联网化，只有这样才能够组件化，只有组件化才能够更好的组合编排</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数字化转型必须要实现数据在线和智能化</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n共享创造条件，企业都会在思考，如何更好的实现客户共享，会员共享，交叉引流，形成自有流量的生态平台。就我对公司福利平台思考一样，从我们简单的面向B端企业，但是B端企业入驻自然就是最终的企业员工入驻，即从B到C，而这个时候无法真正裂变，真正的关键点还是C端用户如何围绕自己的强关系进行类似社交电商方式的进一步推广和引流，这个往往才是真正的裂变点。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n通过C端用户再引流，同时把引流的用户又变成自己平台的自有流量并进一步经营。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n中台实施的教训</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n书里面提到了中台建设和实施的一些教训供参考：</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n团队组织错误（实际应该是按devops组织思路，建立岗位角色全覆盖的高度自治团队）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n业务拆分不清（业务和需求没有梳理清楚，直接导致的就是模块划分不合理）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n微服务被滥用（最常用的就是微服务粒度太细，比如设计上100个的微服务模块）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n系统过度设计（按理想化的思路去设计，而不是按照持续迭代，逐步演进的思路）</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意，中台建设是逐步演进出来的，而不是设计出来的，一切都来源于实践。由于内容较多，对于中台建设方法论，中台架构设计，准备再起一篇单独讲。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n中台建设方法论</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/large/pgc-image/3bc365a5d2b14d94a069c58a53d57850?from=pc\" IMG_WIDTH=\"701\" IMG_HEIGHT=\"396\" ALT=\"阅读《中台战略-中台建设与数字化商业》的一点思考\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px 16px 10px; padding: 0px 0px 0px 16px; border: 0px; position: relative; font-size: 12px; line-height: 16px; color: rgb(153, 153, 153);\">\n图片来源云徙网站</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在本书的5.1给出了数字中台建设的整体策略，我先做下摘录。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n数字中台建设的整体策略是从业务着手，自顶向下逐层调研业务，再自底向上对业务逐层抽象归纳，形成业务全景图。根据业务全景图，我们设计出应用全景图，根据应用全景图，我们逐层细化，设计出应用功能清单。在此过程中，业务被拆解为最小粒度-原子业务对象。原子业务对象包括了业务实体，业务活动和业务规则。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n上面这句话可以看做是中台建设方法的高度概括，是否是感觉很熟悉？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n确实，这个方法实际上和我们传统的基于SOA思路进行的企业架构规划方法论很类似，从业务驱动IT，端到端流程分析入手，形成业务架构，然后由业务架构到应用架构，再到详细的应用模块和功能清单。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那么实际上在使用这个方法过程中，出现最大的要给区别在哪里呢？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实际上最大的一个区别在于<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">我们分析和建模的粒度会更细化一级到传统应用系统的模块单元</SPAN>，基于这个我们在业务上要弱化部门概念，在应用上要弱化系统概念。用一种虚拟的域，类似业务域，数据域，应用域的概念来代替传统的应用系统概念。即：</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n业务部门或业务科室概念 -》应该转变为业务单元的概念。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n应用系统的概念 -》不再有应用系统的概念，而是应用能力单元（对应中台各中心）</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果没有这种思想，那你无法规划建设中台，中台本质就是打破传统边界后的重构和共性能力提取，不能各自为政进行规划建设，将共性能力全部集中化才是重点。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这里我们先说下业务中台，实际上你可以看到业务中台建设的核心就是两个事情。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n其一应该建设哪些中心，各个中台微服务中心的颗粒度如何把控？</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n其二就是各个中心应该提供哪些API能力接口？API接口如何粗粒度和可复用。</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n归根到底，业务中台本质是一个体系或一个系统，它实现企业核心的业务运行机制，因而处于企业运行生态的核心位置，所有的应用系统都必须与之发生关联。中台的存在不仅仅是抽取可复用的能力，众多的可复用能力仅仅是中台的形，核心的业务数据和业务流程才是中台存在的本质。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n中台建设方法论和核心框架</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如何建设中台？书里面提到的四个要诀点如下：</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n能力支撑是基础（能力存在的目的是通过编排或组合支撑业务流程）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n中台自治是承载形式（注意中心和微服务模块的区别，一个中心还可以存在多个微服务）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n三层模型是骨架（实体层，协作层，活动层）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n五步法是指导思想（业务抽象-》高阶设计-》组件建模-》开发交付-》持续运营）</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意这本书给出了中台的三层模型，即实体层，协作层和活动层。对应业务中台各个中心究竟如何分类，在我博客上很多文章里面都有谈到。实际上我的分发是数据类中台，业务和流程类中台，规则类中台。但是我这个分法协作层和我的规则类中台是否能够对应暂时无法确定。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n比如书里面举例的促销中心，评价中心，在我这并不属于规则类中台，仍然是属于业务和流程类中台。我们的规则中心很简单就是完全是给出具体的逻辑规则为主的中心，类似原来经常提到的预算中心。为何预算中心为规则中心，因为预算中心和外面打交道很简单，就是你给我一个输入，我告诉你有无预算，这就是一个规则。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于这个我们看到，如果你给我一个用户ID，你告诉我们这个用户的评级水平。这也是要给显然的规则，但是这个规则往往需要大量数据分析计算后才能够得出，那么这个API能力谁来提供?\n而这个API能力刚好就是数据中台需要提供出来的API服务能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果把前台功能看成一个完整的业务流程，那么我们将其分解为：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务流程 = 业务功能或活动*M + 业务规则*N + 业务数据*K</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即业务流程的完成就是调用了中台的业务功能模块，规则模块，数据模块进行组合和编排后完成完整的端到端业务流程能力。所以你中台做的足够好，那么前台的应用就能够足够轻，足够敏捷，这和我们SOA的服务重用，服务组合，服务编排的思路完全是一样的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n中台建设的5步法</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于中台建设的5步法，即<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">业务抽象-》高阶设计-》组件建模-》开发交付-》持续运营</SPAN>，整体还是有参考意义。从业务分析和抽象入手，然后进行顶层设计，再到详细的组件模块设计。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那企业中台规划和建设中的整体关键点在哪里？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在整个规划建设阶段，业务和技术两条线一定要分离去思考，最后再融合，实际上你可以看到业务中台的规划，包括到接口能力识别都完全偏业务层面，是业务顾问和架构师驱动的，而且整个过程和中台的技术选型，技术架构没有太大的关系。你可以完全将焦点关注在业务流程和业务建模上。其次才是中台建设中的技术架构如何规划，这个技术架构设计到传统的iaas,paas平台，也包括当前主流的技术服务，devops，微服务开发框架和环境等，这些技术都是为后续的中台模块开发构建服务的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在看到这里的时候，我们再回到我们经常谈的企业架构规划中的业务架构，数据架构和应用架构。这次给了我一个很大的启发，这个启发就是对于传统的企业架构方法论我们应该做出调整，这个调整不仅仅是简单的我们分析的层次和粒度细化一层的问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n调整的重点是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">业务架构+数据架构+应用架构合并思考，将应用架构中的技术架构拆分出来单独思考。</SPAN>由于弱化了应用系统的概念，你会看到，我们在业务架构中的业务组件模块，和应用架构中的应用组件模块完全可以合并为一个内容，而不是分开的还需去映射的两个东西。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n也就是业务架构和应用架构统一了。应用架构中原理的共性应用能力支撑，类似4A，流程引擎，门户等也没有了，这些都全部剥离到了企业整体大架构框架里面。<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">业务+数据+应用的高度融合统一，而对技术又单独的抽象剥离才是对传统企业架构最大的调整点。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n另外，对于中台各个模块如何划分，划分的颗粒度，这个始终都是中台建设的一个关键点。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这里我们再次提出，在前面谈到的业务分析，流程梳理和顶层建模的大思路下。我们进一步提出，业务流程分析和分解最终得到的都是细粒度的业务活动，而这些业务活动如何合并为一个个粗粒度的中台模块中心才是重点。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这个分解后的朝上归纳合并中，原则是高内聚松耦合，核心分析工具仍然是矩阵分析。这个矩阵分析既包括了我们传统使用比较多的数据CRUD分析，也包括了业务活动+数据相互机会的CRUD分析，当然还可以是业务活动+业务活动的交付集成分析。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当然这个分析不足够，分析后给出初步的拆分，然后基于我们实际的前台流程场景进行演练，看下拆分后的中台模块和API接口如何通过编排来支撑，这个演练很重要，通过演练你会发现拆分中不合理的地方并进行调整。反复迭代多次就得到比较合适的中台模块划分和API接口。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n既最终的核心分析方法思路为：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务分析分解-》矩阵分析+流程化验证试算-》多次迭代。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意上面这点是在我读完这本书后的进一步思考和总结，在我博客前面的中台和微服务架构里面并没有提到。因此读书还有一个更大的作用就是进一步触发你的思考和复盘。当然这个也必须建立在你原来有类似的经验和实践的基础上。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n中台架构与设计</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/large/pgc-image/e709b486b35a4bfeba48e2bcb4e8d87f?from=pc\" IMG_WIDTH=\"989\" IMG_HEIGHT=\"552\" ALT=\"阅读《中台战略-中台建设与数字化商业》的一点思考\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px 16px 10px; padding: 0px 0px 0px 16px; border: 0px; position: relative; font-size: 12px; line-height: 16px; color: rgb(153, 153, 153);\">\n图片来源云徙网站</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n前面我给出了要给重要思路，就是业务中台规划和建设这个偏业务层面，重点就是要给出业务中台究竟含哪些中心，每个中心究竟提供哪些业务API接口能力。而中台架构设计个人理解更多的就该从技术层面来谈一个中台如何进行架构和设计。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当然要谈这个你可以分解为技术中台，业务中台和数据中台分开来谈。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这里我们看业务中台的架构设计，那自然就要谈整个微服务开发框架的选择，关键的类似服务注册中心，网关，限流熔断，服务链监控等核心技术组件能力的提供等。实际上基于组件化和模块化的开发思路，在技术层面我们可以理解为要谈清楚如下事情：</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n单个微服务模块的开发是如何的？(数据，业务，规则类不同的模块设计原则）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n模块提供的API接口设计和开发，如何集成和统一管控（安全，限流，注册中心等）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n跨模块的协同能力，重点在前台如何应用中台能力，服务编排，APM，服务链监控上</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n把这些都谈清楚了，这个架构也就清楚了，既从最基本的开发框架和技术架构，再到集成架构，运维架构都需要谈清楚，这个中台架构才清楚了。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n再回到技术中台，我前面谈到，需要重点谈清楚了容器化PaaS，DevOps持续集成交付和共性技术服务能力提供，这个是构建业务中台能力的基础。这个技术中台你可以完全依赖公有云能力，也可以部分自建，这个在我上篇读书笔记里面也有说明。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n数据中台建设</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/large/pgc-image/122cc316dda54b48afe0a8f23b771672?from=pc\" IMG_WIDTH=\"703\" IMG_HEIGHT=\"421\" ALT=\"阅读《中台战略-中台建设与数字化商业》的一点思考\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n最后一部分谈下数据中台建设方法论方面的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于数据中台，所有人最疑惑的就是和传统的大数据平台，BI和数据仓库的区别，包括数据中台和业务中台的区别。而对于数据中台我在前面有一个最基本的理解，即数据中台就是一个分布式的ODS库，而且这个ODS库能够提供数据服务API能力给业务应用，业务协同使用，这个API能力接口本身具备一定的准实时性。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从最近对数据中台的进一步阅读和理解可以看到，数据中台是为满足业务协同需要而提供的准实时的数据服务能力这个理解没有错，理解这个的原因是和传统的BI和决策分析系统分开。传统的BI和决策分析系统更多的是提供给内部的管理决策用，而且往往不实时。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那么我上面理解哪里没有理解完全正确？<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/large/pgc-image/694516a196df4e5489a31215cb7d9b8f?from=pc\" IMG_WIDTH=\"690\" IMG_HEIGHT=\"465\" ALT=\"阅读《中台战略-中台建设与数字化商业》的一点思考\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实际上关键点在数据中台不仅仅是分布式的ODS库，在前面我们看到提供业务系统的数据服务能力。这个数据服务能力可以是经过简单的数据采集集成后形成的中间表或汇总表就能够提供的数据服务能力；还有一种还是要建立数据模型，建立数据分析算法，经过分析计算后才能够得出结果的数据服务能力，类似我们经常说到的推荐引擎能力。由于有了模型，有了算法，因此你可以将其理解为一个小BI，但是这个小BI是面向业务协同的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据中台的设计方法论</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这本书给出了建设数据中台的八字方针，具体为<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">横向规划，纵向切入</SPAN>。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于横向规划即你在构建数据中台的时候，必须考虑横向业务协同，考虑横向业务协同中带来了哪些数据层面的协同和共享需求，而这个恰好是你后续进行数据采集和集成的基础；对于纵向切入，实际上又回到了数据中台的分层建设上，比如我们常说的数据平台建设，数据模型建设，分析算法建设等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n不管是业务中台还是数据中台，我们一定要搞清楚，哪些是中台里面的技术部分，哪些是中台里面的内容部分。类似数据平台来说，里面的类似分布式存储，分布式数据库，数据采集集成工具，Hadoop框架和运行平台等都是属于里面的技术部分，而对于最终的数据域和数据对象，分析算法，数据服务API才是里面的内容部分。不论你建设哪个企业或领域的数据中台，对于技术部分差别不大，重要的是里面的数据模型和API设计。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据中台的功能定位</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/large/pgc-image/f7bd463d440548c1b207421561cb457a?from=pc\" IMG_WIDTH=\"945\" IMG_HEIGHT=\"520\" ALT=\"阅读《中台战略-中台建设与数字化商业》的一点思考\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px 16px 10px; padding: 0px 0px 0px 16px; border: 0px; position: relative; font-size: 12px; line-height: 16px; color: rgb(153, 153, 153);\">\n图片来源于云徙网站</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据中台需要实现数据的分层与水平解耦，并具有沉淀公共数据的能力。数据中台可分为三层，数据模型，数据服务与数据开发，通过数据建模实现跨域数据整合和知识沉淀，通过数据服务实现对数据的封装和开发，快速灵活的满足上层应用的需求，通过数据开发工具满足个性化数据和应用的需要。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n综上描述，数据中台应该具备以下几项能力</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据整合能力。</SPAN>（需要一套标准的数据采集和集成体系）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据服务能力。</SPAN>（将数据模型按应用要求进行服务封装，提供数据服务能力）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据开发计算能力。</SPAN>（数据的基本处理和加工，数据的开发，数据的分析计算）</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这几项能力说完，我们对数据中台的理解和认识就更加清楚。同时给出了我们构建数据中台的分阶段迭代思路。简单来说你一开始根本没有必要构建数据中台，但是你会发现些问题，最明显的就是发现往往我需要一个数据的时候需要从多个微服务模块提供的API接口获取并自己加工组合，对于应用来说这个显然不方便，也不符合服务粗粒度的原则。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n1)数据中台解决数据整合的问题，将整合后的数据服务能力统一提供给前台。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在第一步问题解决后，你才会考虑数据本书的开发和挖掘，即在数据本身的基础上，我们如何进行数据开发，挖掘数据更大的价值，同时将挖掘分析后的结果再以API接口服务方式给上层使用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n2)进行数据开发和挖掘，将计算后的有价值结果，也以API接口服务方式给上层使用。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于第一步更多的是我前面说到的分布式ODS库+中间汇总表解决问题，而到了第二步就是需要小BI层面的能力来解决问题，即数据模型，维度表，分析计算模型。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据中台的建设范围</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/large/pgc-image/e525714bece34cbcba8a06c6c6702102?from=pc\" IMG_WIDTH=\"687\" IMG_HEIGHT=\"382\" ALT=\"阅读《中台战略-中台建设与数字化商业》的一点思考\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n企业要建设一个完整的数据中台，包括了哪些内容，这本书将数据中台架构分为两层：</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n工具平台：包括了大数据平台，研发平台，自助分析平台，标签平台，运维平台</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数字资产：分析模型，算法模型，分析专题</SPAN></LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于这个分法暂时先保留意见，对于这篇文章的截图大家也可以看下奇点云对数据中台的一个架构体系。对于数据中台来说，我们看到本身应该是包括了底层的技术平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n技术平台包括了数据采集集成平台，数据的存储平台，数据的处理平台，数据服务API开放平台，数据分析平台大的是Hadoop体系，但是有些小的技术工具还需要整体纳入才能够完成一个完整的体系。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这个技术平台上我们确实可以再增加三个子系统，即<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一个是前生命周期的数据研发平台，一个是后生命周期的运维平台，一个是数据管控治理平台。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n技术平台后就是内容方面的，内容本身又包括了我们前面说的分布式ODS库，然后是面向业务协同和面向主题决策两个维度的分域数据模型和数据中心。其次是各种分析，算法模型，推荐引擎等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据中台和数据资产</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当我们再次提及数据资产的时候，我在思考业务系统是否是企业资产，原来我们做SOA的时候强调的可重用的API接口服务是否是企业的资产。当然这些都算做是企业重要的资产，但是你可以看到只有数据中台这个数据资产是持续性和延续性最强的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n类似我们说的有清香，酱香，浓香各种白酒一样，只有酱香型的是存储的越久味道越好，而数据资产也是这样，数据和沉淀的越久，数据最终开发和挖掘后发挥的价值也就越大。</P>\n<br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Mon, 17 Aug 2020 06:13:57 +0000","feedId":4798,"bgimg":"http://s6.sinaimg.cn/mw690/001l8XD7zy7FHL3DMPPa5&690","linkMd5":"614a169fde807ab7c4e8d336c5ca53df","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn34@2020_2/2020/08/24/22-09-22-348_6654b0ea5d6033a4.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s6.sinaimg.cn/mw690/001l8XD7zy7FHL3DMPPa5&690":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn34@2020_2/2020/08/24/22-09-22-348_6654b0ea5d6033a4.webp","https://p3-tt.byteimg.com/large/pgc-image/262a1ba771694acdb7cf06471ab2dcd6?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn89@2020_4/2020/08/24/22-09-28-965_a2e599515593fbf3.webp","https://p1-tt.byteimg.com/large/pgc-image/7f0f8363350b4208829561f058d7ef34?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn94@2020_1/2020/08/24/22-09-26-254_d7f8a62b1aa454b6.webp","https://p6-tt.byteimg.com/large/pgc-image/3bc365a5d2b14d94a069c58a53d57850?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn74@2020_2/2020/08/24/22-09-27-870_2391ef733370052d.webp","https://p6-tt.byteimg.com/large/pgc-image/e709b486b35a4bfeba48e2bcb4e8d87f?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn33@2020_6/2020/08/24/22-09-27-600_4092c58f24eda642.webp","https://p6-tt.byteimg.com/large/pgc-image/122cc316dda54b48afe0a8f23b771672?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn21@2020_2/2020/08/24/22-10-31-572_dacb1ad572afb10c.webp","https://p3-tt.byteimg.com/large/pgc-image/694516a196df4e5489a31215cb7d9b8f?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn62@2020_4/2020/08/24/22-09-25-855_663beaa4c16f4ed7.webp","https://p6-tt.byteimg.com/large/pgc-image/f7bd463d440548c1b207421561cb457a?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn45@2020_4/2020/08/24/22-09-29-718_aabe914960168cf8.webp","https://p3-tt.byteimg.com/large/pgc-image/e525714bece34cbcba8a06c6c6702102?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn78@2020_2/2020/08/24/22-09-25-548_3d1c6c2027cb0ea6.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn17@2020_6/2020/08/24/22-09-30-958_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1598306959916},{"createdTime":"2020-08-25 06:09:19","updatedTime":"2020-08-25 06:09:19","title":"谈BPM业务流程管理系统建设和实施（200824）","link":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7FT4lWhDL25\" TARGET=\"_blank\"><img SRC=\"http://s6.sinaimg.cn/mw690/001l8XD7zy7FT4lWhDL25&#38;690\" NAME=\"image_operate_87081598258736715\" /></A>\n<div><br /></DIV>\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n今天准备谈下BPM业务流程管理系统的建设和实施方面的内容。首先还是从BPM的基础概念入手进行介绍，然后重点解释下BPM和工作流引擎的区别，最好谈下BPM软件的应用和实施场景。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nBPM业务流程管理概述</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/1180184820de4d479a8b64995ccc777b?from=pc\" IMG_WIDTH=\"823\" IMG_HEIGHT=\"473\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务流程管理</SPAN>是将生产流程、业务流程、各类行政申请流程、财务审批流程、人事处理流程、质量控制及客服流程等70%以上需要两人以上协作实施的任务全部或部分由计算机处理，并使其简单化、自动化的业务过程。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n20世纪90年代，Michael Hammer和James Champy的成名之作《公司再造》（Reengineering the\nCorporation）一书在全美公司领域引发了一股有关业务流程改进的汹涌浪潮。这两位管理学宗师在书中展示了这样一个观点——重新设计公司的流程、结构和文化能够带来绩效上的显著提高。但是由于缺少对变革管理以及员工变革主动性的关注，在很多致力于把他们的理论付诸实践的公司身上产生了反作用的结果。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而如今，公司再次把业务流程管理——这种通过分析、建模和监控持续优化业务流程的实践，当作一种解决业务难题和帮助公司实现自己财务目标的系统方法。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务流程管理（Business Process Management,\nBPM）</SPAN>不是一个新概念，甚至不是一个新名词。它是从相关的业务流程变革领域，如业务流程改进（BPI）、业务流程重组（BPR）、业务流程革新中发展起来的。流程管理技术也是从早期的工作流管理、EAI、流程自动化、流程集成、流程建模、流程优化等技术中发展起来的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从管理理论或战略的层面看，业务流程管理（BPM）就是在一个存在内部事件和外部事件的环境中，由一组相互依赖的业务流程出发，对业务进行描述、理解、表示、组织和维护。从具体实施的层面看，BPM\n还可分为流程分析、流程定义与重定义、资源分配、时间安排、流程管理、流程质量与效率测评、流程优化等。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\nGartner\nInc．给出的BPM的定义是：BPM是一个描述一组服务和工具的一般名词，这些服务和工具为显式的流程管理(如流程的分析、定义、执行、监视和管理)提供支持。</P>\n</BLOCKQUOTE>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/452458cbccba4666a7c26c2ca0e33f6e?from=pc\" IMG_WIDTH=\"836\" IMG_HEIGHT=\"414\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n业务流程管理是跨业务组织结构，跨业务系统，跨应用的软件和方法论,从而实现自动化管理,优化动态业务,产生真正的业务价值。更多体现的是跨业务域，端到端业务流程的管理和整合。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nBPM和HWF人工工作流引擎</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/d48363def21143c69ba531fdd0e33a85?from=pc\" IMG_WIDTH=\"771\" IMG_HEIGHT=\"481\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n企业信息系统构建本身就应该遵循流程分析，业务建模，子系统划分，系统功能建模的逐步分解过程。由于企业内职能部门的划分，而业务系统往往又需要一个归宿的主导部门，在企业发展大后一个业务系统也很难完全支撑到企业所有业务流程和业务活动。因此不可避免的导致了企业在各个业务域衍生了多个业务系统，业务系统主要实现价值链的一个核心业务域，但是业务系统必须要整合和集成才能够满足端到端流程的整合。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n端到端流程整合出现断点或流程不畅通，一方面是业务系统本身的分解有问题，一方面则是业务系统之间集成有问题，业务部门各自为阵导致了系统集成这种中间地点没有一个主导部门去管理和负责。业务系统本身分解问题主要体现在没有一开始就从企业架构和应用架构出发来考虑业务系统建设，业务系统建设不是从上向下的，而是完全根据业务部门需求各自建立。系统间集成问题则主要体现在了完全不考虑集成的标准规范，集成的方式，集成本身的可复用性，导致大量重复建设。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/8494b6ab1b7d49218ce47272a204530e?from=pc\" IMG_WIDTH=\"767\" IMG_HEIGHT=\"458\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n流程建模遵循高端建模逐层分解的思路，高端流程往往正是我们关注的业务流程，高端流程跨越了多个业务域，多个业务活动，多个业务对象和单据实体，最终完成了一个端到端业务。如供应链端到端，涉及到采购需求，采购计划，采购策略和实施，采购订单，采购执行诸多环节和业务对象。高端业务流程中采购订单生成只是一个业务活动或子流程，而采购订单制作和生成本身又需要根据订单类型或金额设计不同的审批流程，而采购订单拟制后的审批流程才是我们经常所说的工作流，人工工作流或审批流。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/b0afb735251748a5943e314f7b7af12f?from=pc\" IMG_WIDTH=\"783\" IMG_HEIGHT=\"477\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那么从这个意义上很容易看到业务流和工作流的区别如下:</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n业务流往往会跨多个业务系统，而审批流往往主要涉及到一个系统。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n业务流会涉及到多个业务功能，多个业务对象，而审批流往往只涉及到一个业务对象。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n业务流涉及到的是不同业务单据之间的流转，而审批流往往是同一业务单据状态的变化。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n业务流中既包括了人工活动也包括了自动的业务活动，而审批流一般为人工审批活动。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而对于BPM业务流程管理系统和工作流管理系统，可以再进行下分析。我们看到现在很多BPM软件也从工作流管理软件发展而来。不论是哪种，基本都包括了流程建模，流程执行，流程监控，流程分析等基本功能，也包括了表单建模和数据建模，权限管理等扩展功能。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以讲一个完整的系统基本上可以实现简单的以审批流为主的简单业务功能模块的配置化开发。通过表单设计工具制定一个表单界面，绑定数据对象，挂接上自定义的流程模板，一个功能即开发完成，只要没有太多复杂的业务规则，基本上完全可以通过配置实现，这也是这类工具可以在类OA应用中大规模使用的原因。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/be7dde61b72641df8ff7f2e01de5b424?from=pc\" IMG_WIDTH=\"758\" IMG_HEIGHT=\"465\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于流程建模，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">BPM关注的是业务流程建模，基于BPMN或BPEL进行，而工作流软件关注的是审批流建模</SPAN>。BPM建模需要考虑业务人员对建模需求和可用性，但是不可避免又导致建模的内容无法很好的落地。而工作流建模本身已经细化到一个功能模块中的审批流，相对来说简单很多而容易实施执行。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nBPM业务流程往往跨越了业务系统，跨越了多个业务单据，需要处理不同的业务规则和逻辑</SPAN>。而工作流软件活动节点往往仅仅处理审批和会签任务，和外界交互相对较少。而BPM业务流程中由于存在业务活动和业务规则，而这些又需要外界提供数据支持，因此不可避免的在BPM流程建模中需要通过SOA服务方式调用各种可复用的服务来处理和转换数据。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n工作流软件发展到今天，我们看到也可以在表单建模，工作流设计过程中调用外部的SOA服务，这是一个很好的进步，使工作流软件不仅仅能够简单进行审批处理还能够增加较为复杂的业务规则判断。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n业务流程建模中会出现业务规则，常规的工作流软件处理方式一般支持脚本代码进行简单业务规则的处理，而发展到BPM后为了保证规则本身的复用性和独立维护性，引入了规则引擎，规则引擎形成统一的规则创建和维护库，BPM本身不再负责规则的创建和维护，而仅仅是按需消费。这个分离本身意义也很重大，要知道业务规则又明确的业务系统开发商和业务主管部门，放到BPM系统中通过定制方式管理规则显然是很困难的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n传统的软件工程方法从业务流程分析到形成子系统和功能模块，有一系列的分析和设计过程，最终形成各个功能模块和协同应用。而BPM系统试图通过简单的业务流程建模和BPMN就能完成一个复杂业务流程到功能模块的转化，这是一个相当困难的事情。虽然BPMN2.0使这种转化成为了可能，但是要看到对于跨系统，跨多个业务对象实体的长流程，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">BPM系统可以进行流程建模和设计，但是很难直接转化为可实现的模型</SPAN>。这是到现在BPM系统也很难去解决的问题，如果该问题没有解决，BPM系统又沦落为一个业务人员建模的工具而已，BPM和实际的业务系统仍然是脱节的。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/70acfd33b56f4a69a6da12647617cdcd?from=pc\" IMG_WIDTH=\"818\" IMG_HEIGHT=\"498\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nBPM重点是流程整合，而流程整合是多个业务系统中多个业务功能模块之间的协同，如果一开始想用BPM去实现这些业务功能，那么往往是适得其反，BPM切入的第一步仍然是在于跨业务系统的流程集成，而流程集成重点又在于流程间的数据传递。知道这个重点后BPM的关注点应该放到流程协同和监控上，而子流程或某个独立的业务模块实现仍然在原有的业务系统中，通过端到端流程整合实现了业务模块之间的系统，这个一方面最大限度的利用了已有的IT资产，又实现了流程整合的需求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n业务流程整合一定是涉及到自动化的业务流和人工工作流，原有的BPEL很难融入HWF导致BPEL只能应用到流程整合的一些点上而无法真正实现理想状态下的流程编排，最多算上服务编排。而引入人工工作流使BPM有了做端到端流程整合的能力，但是已有业务系统已经有工作流引擎或审批流实现，要完全抛弃已有的流程引擎又是一个很麻烦的事情。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那是BPM来整合已有的流程引擎，还是流程引擎引入BPM的关键要素又成为一个需要考虑的问题。BPM之所以困难，不在于思路上，而在于实践和落地上，如果是全新构建业务系统还好办，特别是已有业务系统的IT环境改造。即使实现了流程整合，那么流程整合后的认责部门是谁？流程整合后对已有业务系统有哪些影响都需要考虑，而不是简单的想流程整合后放到门户系统了事。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nHWF人工工作流引擎</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/f0f854636073456da6d2d0b768a8c9eb?from=pc\" IMG_WIDTH=\"813\" IMG_HEIGHT=\"508\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这里先谈下我们常说的人工工作流引擎，这个其实是现在大多数应用系统都必须具备的基本业务管理功能。正是由于每个系统都需要该功能，那么每个系统如果都单独建设必然带来重复的成本投入，同时带来了各个业务系统间的工作流交互标准语言不统一。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在谈企业私有云PaaS平台建设的时候我们谈到了，基于平台+应用的构建思路，企业流程平台作为底层技术平台统一建设。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n企业内部的统一流程平台建设，不仅仅是功能的迁移，更加重要的是数据的迁移，对于流程来讲我们所说的数据即是流程建模数据和流程执行数据的迁移。在统一流程建模和统一流程执行的基础上，提供统一的流程监控和流程绩效管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n很早我们就在谈流程不能脱离组织，岗位角色，权限等基础而存在。进行组织，人员，岗位权限等基础主数据的管理和整合又是建立内部统一流程平台的基础。因此我们可以看到内部的主数据管理，组织引擎和权限引擎等内容。这些都是为流程平台做准备。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n流程建模全统一在统一流程平台进行，因此<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">BPM需要有统一的组织，人员和权限数据</SPAN>，这是各个系统能够完全互通的基础。在流程建模的时候，不仅仅涉及到常用工作流模型中的串行，并行，条件分支，聚合，子流程，回退等基本流程功能。更加重要的我认为还是流程活动节点和组织权限内容的结合，否则流程很难适应组织权限调整带来的影响和变化。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n粗一点的流程建模可以只控制到表单级权限，而细化点的流程建模则可以控制到表单输入的每一个数据项的权限。流程活动节点往往很多时候都具有条件判断，条件判断往往又涉及到外部调用，因此流程活动节点支持脚本代码的编写，支持对外部接口和服务的调用又是最基本的功能。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n工作流产品本身的设计包括了静态数据建模和动态数据建模两方面的内容。涉及到流程模板，活动节点，连接弧，分支判断，流程图形化展示元数据等多个方面的内容。动态数据建模又涉及到流程执行实例数据的记录，这方面的内容后续单独描述。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/e2a8ecf69d274db2ab5ac5d2b8ae6dc5?from=pc\" IMG_WIDTH=\"793\" IMG_HEIGHT=\"459\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n\n统一流程平台需要实现的就是统一流程建模，统一执行和统一监控，只要是涉及到流程建模和执行的数据都不在原有的各个业务系统中，而是全部集中到统一流程管理平台进行管理。按这个思路自然带来新问题即BPM系统如何与原有的业务系统集成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n业务系统和BPM的集成最佳的效果就是对于用户感受不到BPM系统的存在，不能因为系统内的集中化和云化带来用户使用上面的差异。简单点的描述，使用具体包括如下几个方面的内容：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n1.各业务系统单独的多租户账号登录BPM系统，进行系统流程建模，BPM系统已有在各个业务系统完全统一的组织，用户和权限数据。这个不统一BPM系统无法真正落地。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n2.在流程建模完成后，对于每次流程建模系统会建立单独的流程模板ID供业务系统使用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n3.业务系统各业务表单使用统一的流程启动接口调用BPM系统提供的服务启动工作流。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n4.BPM系统中的流程待办，流程已办，流程处理等各个关键业务功能用UI组件的方式形成UI组件后内嵌到各个业务系统中使用。在这里又需要企业内业务系统间实现统一认证和SSO单独登录。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n5.BPM系统提供流程执行，流程监控，流程查询等多个服务接口供业务系统使用。<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/c28a29fa894c47578944a369f3056749?from=pc\" IMG_WIDTH=\"790\" IMG_HEIGHT=\"462\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n统一流程平台首先要实现的是替代原有业务系统内的人工工作流引擎，实现流程的统一管理，同时在组织，用户和权限集中的基础上，形成系统基础管理，权限管理和流程管理的通用语言。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这样就很容易过渡到跨系统间的流程整合，在这种情况下的跨系统流程整合只需要再考虑如何与标准的BPEL进行集成，使流程整合即具备人工审批流节点，又具备根据业务规则自动进行处理和流转的自动化业务节点。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n基于工作流引擎的接口服务集成</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/10703f0d29ee4367a776cd4326d5b2a4?from=pc\" IMG_WIDTH=\"774\" IMG_HEIGHT=\"418\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n业务组件和工作流的集成包括了服务集成和界面集成两部分的内容。对于服务集成则是将工作流平台组件提供的工作流管理能力服务统一接入到SOA服务总线，并供业务组件在使用时候调用；对于界面集成主要是对于工作流平台实现的可复用界面直接通过单点登录的方式进行集成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于服务集成，主要包括的接口服务有：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n启动进程 startProcessInstanceByQueue</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n获取实例信息 getProcessInstance</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n静态启动工作流 createProcessInstance</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n进程查询 listProcessInstance</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n删除进程实例 deleteProcessInstance</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在与流程平台的集成中，一方面是通过流程平台暴露的服务接口进行程序集成；一方面是通过流程平台提供的标准UI组件进行界面集成。可以看到对于待办，已办，流程监控等核心界面不适合下放到各个业务组件自行开发，而是应该通过抽象后统一有流程平台来实现，业务组件在使用过程中通过界面集成的方式进行嵌入。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n具体可以考虑的界面集成内容主要包括：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n我的待办和我的已办功能集成</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n图形化流程查看界面集成</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n流程监控界面集成（暂停、重启、终止、完成）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n流程流转和处理信息界面集成</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n任务处理信息界面集成</LI>\n</UL>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nBPM和HWF人工工作流引擎</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/dfic-imagehandler/c8865992-5a22-41fa-8a98-5060dc9ae90a?from=pc\" IMG_WIDTH=\"1023\" IMG_HEIGHT=\"682\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n很早以前在谈BPR业务流程重组的时候，其要点就在于打破职能部门界限，形成跨越业务职能边界的端到端流程。而对于BPM同样道理，即在业务职能部门各自为阵建设自己业务系统的情况下，需要跨越业务系统边界进行端到端业务流程的整合。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nBPM首先是一个公司管理问题，其次才是一个业务问题，其次才是一个系统问题。抛开了业务和管理，企业本身组织架构和战略来谈BPM基本都是无法落地，有时候期望通过BPR和BPM来改善公司管理和组织也是适得其反。根深蒂固的职能部门边界，利益和绩效KPI不可避免的会导致流程割裂，业务流程衔接点成为三不管地带，没有谁来关心端到端流程，更谈不上来系统化思考全流程的优化和改进。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这种情况下出现了流程管理部门，专门负责公司流程改进和优化，流程管理部门独立在业务部门之外，这种情况下虽然可以全局的思考流程问题，但是流程优化结果如何落地，流程管理部门不存在具体的业务KPI，而各业务部门有各自利益，虽然有很好的流程优化和改进，但是没有强有力的执行力仍然难以解决落地问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n组织，战略和业务目标来推动业务流程改进，业务流程改进推动IT的建设，流程和IT融合，IT建设和实施过程中又进一步固化流程，通过IT系统的建设和实施加快流程和标准规范的落地。先固化，再优化，持续改进。华为公司推行实施的ISC和IPD，中兴推进的HPPD和项目化运作基本都是这种模式和思路。在面对市场竞争需要快速高质量交付的时候，必须有整合高效的端到端流程，在端到端流程下没有割裂的部门，更没有割裂的系统。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nBPM的推进和建设任重道远，因为其本质是一个业务问题，而非系统问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nBPM系统实施的两个层面</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/a936efe0783b4d8f95e75609a3686626?from=pc\" IMG_WIDTH=\"845\" IMG_HEIGHT=\"503\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于BPM软件前面已经谈到过一定是包括了自动化的业务流和人工工作流引擎两部分的内容，同时为了更好的处理在业务流程建模中的业务规则往往还需要有单独的规则引擎子系统或模块。一个完整的BPM系统往往包括了流程建模和设计，数据建模，界面设计，基础数据和权限设计，流程执行和监控，流程仿真，流程绩效评估多个方面的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n由于BPM主要完成的流程组合和编排是是整个SOA架构的上层内容，因此一个完整的BPM系统设计和构建本身就是组件化和SOA服务化思想进行的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于BPM软件的实施，我们从通过BPM系统全新构建业务应用和基于BPM系统进行流程整合两个场景来讨论BPM软件实施过程中的异同。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n&#160;</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n01-全新构建业务应用</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n&#160;</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个完整的BPM系统本身就可以理解为一个既开放，又相当封闭的SOA架构平台。开放主要是说该系统能够很好的集成和复用已有的SOA共享服务能力，封闭则是说BPM软件可以从设计建模，到测试，到部署上线端到端的完成一个业务应用的构建。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到全新构建业务应用相当来说反而容易，这个时候没有和企业内部遗留IT系统集成和协同的麻烦。在这种情况下4A基础数据完全可以以BPM系统为最初的源头，很多跨流程的业务单据信息也直接在BPM系统中进行建模和设计。对于界面和展现即完全利用BPM软件本身提供的一整套快捷开发工具进行，本身也不存在单独构建一个IT系统时候还需进行基础技术框架构建的问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n但是在这种场景下构建BPM，仍然存在一些问题无法解决，具体包括如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先对于业务系统，我前面分过类，即以工单和流程驱动的系统，还有就是以核心共享数据为基础驱动的系统。前者类似OA，ITIL类业务系统；后者类似资产，资源管理等系统。注意对于后者我们期望的一个完整的全局数据模型，这个数据模型往往会应用到多个业务流程中，而不是简单的工单。在这种情况下采用BPM软件是很实现完整的业务功能的。因此BPM更多的还是适用于流程驱动的业务应用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其次，通过BPM软件构建出来的系统往往是跨越了多个业务部门的一个端到端业务流程管理，在这种情况可能并不会再具备原有的项目系统，采购系统，物流系统等严格的业务系统划分，而是这些业务都完整的实现在了一个短到短的业务流程上。那么这个BPM系统的业务管理和认责部门是谁？这个时候我们往往找不到一个主导的责任部门，那么这个BPM系统后续如何推广实施？靠IT部门的力量往往是很难真正落地的。这也是我们常说的BPM系统的推广难点已经不在技术上，而在于业务上。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n最后即使是流程驱动的业务系统，如果期望通过BPM软件提供的功能完全通过可配置和可视化设计的方式完全实现出来还是存在困难，即使有相关的规则引擎，但是仍然很难做到完全可配置的快速开发。这就自然涉及到了即使全新构建BPM系统，在BPM的底层仍然需要有实现核心能力和业务组件和技术组件，这些组件重点变成提供领域服务能力，而不是前台界面展现和协同。这个点必须要意识到，否则容易理解为BPM是万能的，啥流程都可以很简单的建模和配置设计出来，那就大大的犯错了。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n02-遗留系统通过BPM来整合场景</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个相当于前者来说往往更加困难，困难点就在在于期望通过BPM来解决原有的端到端流程中的协同断点，同时又需要最大化的保留历史遗留系统的IT资产。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n大家看SOA架构好像觉得这个问题已经很简单的解决了，即历史的遗留系统都会识别为组件，组件应该将遗留系统的业务和数据服务能力提供出来，然后通过BPM层对服务进行组合，服务进行编排，形成一个端到端的完整流程。但是这个本质问题还是BPM和遗留业务的关系问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果基于BPM是来实现一个完整的端到端流程，这个端到端流程在构建过程中确实可以调用遗留系统的服务能力，但是这个端到端流程是否涉及到单据和数据的产生，是否涉及到人工流程的处理？如果流程会产生单据和数据信息，那么根据原有IT架构这些业务单据仍然应该产生和存储在IT系统而不是BPM系统，对于人工流程的处理同样的道理，仍然应该是在原有业务系统中统一处理而不是在BPM系统。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个一分析清楚我们就容易理解，遗留系统场景下BPM进行整合，不能凭空的再找出一个BPM系统出来，BPM的重点是将原有业务系统中的单据和流程整合和集成起来，而不是替代原有系统的能力。最终集成的效果可以通过Portlet形式展示到门户，而不是新增加一个业务系统。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n把这个理解清楚了，就清楚在这种场景下BPM实施的重点应该是由业务系统提供完整的领域服务层能力出来，而BPM重点是来统一实现界面层和展现，实现各个业务系统中服务能力的组合。即使在这种情况下都还需要考虑如何解决门户层应用功能和原有IT系统间功能的统一工作台展现，这个问题没有解决好就会变成业务部门人员需要两处处理业务，现在在实施层面是很难推广的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n&#160;</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n还有就是我看到，实施BPM有个很重要的内容，就是4A系统或者叫模块的实施，以及原有的工作流引擎是否已经成功实施。如果这些没有实施，那么BPM将作为为4A和工作流的基础支撑，如果已经实施那么就存在如何同步原有的4A数据，是弃用原有各个业务系统不统一的流程引擎还是保留资产进行整合的问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对原有的IT资产保留的越多，你会看到BPM本身在实施过程中能够用到的能力越是减少和退化。那么对于一个已经相当成熟的内部IT来说，BPM还存在哪些价值和意义。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n针对这个问题，我前面也有文章谈到过，在这种场景下BPM的价值重点体现在两个方面。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n第一个方面是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">通过BPM来实现端到端流程执行的监控和流程绩效评估</SPAN>，注意这本身在完整的应用架构里面就是在执行层上面的事情，这样可以减少和已有的业务系统之间的功能性冲突。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n第二是对于企业内部的很多职能管理部门，如审计部门，风控部门，流程管理部门等，这些部门本身不承载核心业务价值链上的单据产生和业务，而重点是基于<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">已有业务系统能力进行的IT管控和治理</SPAN>，因此对于这些部门新建设的业务系统是最适合通过BPM工具来完成的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于BPM本身在进行流程建模设计的时候，也要注意到最好采用子流程的模式进行分层建模和设计，即对于BPM流程的顶层重点是自动化的端到端业务流，而对于下层才是人工审批流流程，否则一个完整的端到端BPM流程将很难进行后续的执行监控。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当前很多企业就IT成熟度来说都没有到能够理解和实施BPM的程度，这也是为何很多企业的BPM实施仅仅变成了一个企业内部的统一工作流引擎平台实施的原因。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nBPM系统实施演进思路</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/0b07e4388734476ea4a892afe68a6d7b?from=pc\" IMG_WIDTH=\"714\" IMG_HEIGHT=\"435\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于通过BPM工具并结合服务层来实现端到端流程监控这个话题，前面文章已经提到过了，这个相当来说比较容易实现，即这种最终编排出来的BPM流程视图更多的都是通过服务读数据而不会涉及到写操作。同时原有的各个业务流程还是在各个遗留的业务系统里面，对业务系统本身的改动也相当较小。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那现在的问题还是，对于一个完整的业务能否全部依赖BPM产品提供的能力来实现，各个大型厂家的BPM产品基本都覆盖了流程建模设计，流程执行监控，UI和权限建模等各个方面的内容，基本已经是一个完整的基于流程驱动的快速开发平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n但是实际的情况往往则是这种大而全的平台在实际的实施应用中效果并不太理想。对于这点主要的原因包括了如下几个方面的内容：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n其一：企业在引入BPM的时候往往已经建设了大量的IT遗留系统</SPAN>，这些业务系统基本已经承载了企业核心业务流程和业务功能。而在BPM引入后如果要通过其来做完整的业务流程，往往都存在对遗留的业务系统改造相当大的问题。要明白对于传统系统基本是烟囱式纵向建设模式，而SOA+BPM的思想是横向从组件-》服务-》流程-》界面展现的横向分层建设模式。新的架构思想往往会导致遗留系统要完全下沉为独立的业务组件并提供服务能力，而这个架构层面的改动和影响企业往往没有魄力去做，当然其本身带来的改造量也相当大。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其二：我们在和企业交流过程中可以看到，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">究竟有多少人真正需要端到端的业务流展示</SPAN>？要明白即使原有的端到端流程虽然分散在多个业务系统的业务功能单元中进行了功能支撑，但是本身端到端流程还是完整的，只是没有一个端到端流程全貌而已。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而本身企业内的业务部门在进行职能划分后，往往业务部门本身关心的也是自己业务部门的业务流程和功能，而不会太关心端到端流程，这是我们原来在理想化思考的时候没有考虑到的问题。即一个企业在管理层都没有启动端到端流程优化和整合，或者没有相应的流程管理类部门的时候，是不太会有明显的对BPM业务诉求的。即我强调过的端到端流程即使存在断点，也不是一定要上BPM，往往通过ESB服务集成就能很好的解决流程集成和业务协同的问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其三：即使到今天很多人对BPM还是有很大的误解，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">将很多单纯的工作流引擎产品错误理解为BPM</SPAN>，或者将统一的工作流引擎平台产品理解为BPM，在上了这种产品或平台后，虽然解决了审批流层面的问题，但是往往对于端到端流程整合和监控问题并没有解决掉。当然这也不是单纯的工作流引擎产品的重点。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n其四：哪个部门需要BPM？</SPAN>要明白BPM产品最终做完的BPM业务流程和界面功能往往会横跨了多个业务部门，那么这个产品最终的主导和认证部门往往很难决定是谁？如果仅仅是靠IT部门的能力去推一个BPM产品是存在相当大的难度的。因此前面也说过，如果企业有类似于流程管理部门，往往还相当容易找到一个认责的主体。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n其五：各大厂商对BPM的宣传有很多夸大，导致客户认为BPM是一个无所不能的产品</SPAN>，什么东西都可以灵活的设计和配置出来。上了BPM产品后流程方面的问题就全部解决掉了。而实际上我们看到的情况上，即使BPM产品本身能力再强，由于企业本身核心价值链业务的复杂性，单纯的靠BPM产品进行配置和开发当前来说还是不现实的，也很难做出让客户满意的效果。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于以上的分析，那么在一个企业的BPM实施里面究竟应该如何做是一种相当理想的方式？在这里我们主要谈几点关键性的实施步骤和内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n01-流程建模</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n流程建模还是最重要的一个步骤，即基于企业架构包括ARIS流程建模的思路对业务流程进行建模，在业务流程建模过程中通过流程逐层分解，对业务对象，业务活动，人工审批，自动处理等各种业务节点进行识别。对于BPM提供的流程建模平台，不管是否基于BPMN2.0标准，最终的建模文件都是很好的衔接真实业务流程和最终的系统实现之间的一个关键点。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n02-服务识别</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其中包括了组件识别，要明白最终的业务活动和交互集成最终都需要调用底层业务系统和组件提供出来的服务能力。基于跨系统交互流程分析的思路才能够分析和识别出能够用来做上层BPM功能的核心服务能力。这些服务能力最终还是由底层的业务系统或组件提供。或者简单来讲，这种方式带来的是以后业务系统重点是提供服务能力开放，而是不管最终展现和集成。那么原有业务系统逐步下沉为业务组件，但是其核心业务能力还是在各个业务组件里面。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n03-数据建模</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这块是要做，但是要注意不是在BPM里面进行核心业务对象的数据建模，数据建模还是要参考原有的方法进行，最终数据对象还是沉淀在业务组件里面。要明白核心业务对象是不可能存储在BPM系统里面的，这个也不合适，BPM更多的还是服务组合和编排串联，而不是承载核心数据对象能力。对于各大厂家给出的BPM产品中的数据建模能力要慎用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n04-界面建模</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这块也是导致BPM很难实施好的一个重要原因，即我们总是想理想化的通过BPM工具进行界面表单建模，但是对于服务的业务流程和业务功能这块很难真正实现。那么真正好的做法还是展现层的开发需要通过实施重新做一套框架，里面可能会有一些界面配置但是不是全部。核心的界面展现和设计可能还是涉及到的自己定制开发，这块没必要借用BPM产品的能力。但是唯一要注意的就是在展现层开发的时候，最终的功能界面数据的查询和存储等都需要使用服务层提供出来的可重用的服务能力。这也是我们常说的应用层变轻和变灵活的一个原因，即应用层界面展现已经没有太多的业务规则和逻辑提供，而更多的是使用开放的服务能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n05-集成整合</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n上面几点思考清楚后，剩下的关键事情就是自己开发定制的功能界面和BPM流程模型，和服务层服务之间的协同和整合，形成一个完整的整体。由于我们将界面和数据建模的抽离可以看到，我们需要自己来实现和流程层的集成和整合，包括和底层工作流引擎的整合，我们需要根据流程引擎本身的能力来考虑整个业务流程执行过程中流程模型中的状态节点的同步流转。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n把以上几点都想清楚了BPM实施落地才有了一个基础。BPM产品本身不是万能的，BPM产品的实施也不是去颠覆各个遗留IT系统，如何找到一种衔接和融合点才是真正的关键。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nBPM端到端流程整合案例</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/a756cea102d14dcaa7621d10a7ab3901?from=pc\" IMG_WIDTH=\"817\" IMG_HEIGHT=\"541\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个工程项目或一个合同管理的端到端，往往在企业内部跨越了多个业务系统，涉及到诸多的业务协同，业务单据对象和不同业务对象的状态流转。正是由于在这个业务流转中出现了业务流，出现了多个不同的业务对象实体的转换和映射，也就出现了1对多，多对多的业务对象关系。类似一个项目涉及到多个采购合同，一个合同往往涉及到多个订单，一个订单又可以分多次进行接收。而端到端业务流程监控的难点也正是在这个地方。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在梳理完成端到端业务流程后，我们可以进一步梳理业务对象的关系图，该梳理将有助于我们在BPM系统中进行业务对象和数据建模。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/8e3a45ea2d6b4ea3bddfb81b3eae761b?from=pc\" IMG_WIDTH=\"748\" IMG_HEIGHT=\"430\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/514ddef1568c4d8fac0e57ea97e4e3ed?from=pc\" IMG_WIDTH=\"823\" IMG_HEIGHT=\"483\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n分析完端到端流程，可以看到跨系统的端到端流程往往涉及到多个业务系统间的接口交付和集成，因此需要进一步分析接口交付和集成关系，如下：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/1044be2723c34eb1947fbcb443cf70da?from=pc\" IMG_WIDTH=\"815\" IMG_HEIGHT=\"429\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于前面分析，我们可以开始使用BPM工具进行详细的业务流程建模，其中包括了主流程，也可以包括了子流程，既包括了业务自动化流程节点，也包括了人工工作流处理节点。如下。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/e40f3578b8854248935216bbb13b3089?from=pc\" IMG_WIDTH=\"802\" IMG_HEIGHT=\"479\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n监控的可视化流程图不同于BPM建模和设计中的复杂流程图，因此该流程设计往往只需要支持最简单的串行流程，并行流程即可。因此在监控流程的状态流转设计往往并不复杂，而较为复杂的是对于流程中每一个状态点我们需要查看到的业务对象信息的设计，界面的设计。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n为了简化这个系统的实现过程，对于服务提供部分我们采用在系统外单独来实现，即监控中需要查询和查看的数据都单独做成各种web\nservice服务，可以在流程设计中进行调用。而界面的可视化设计相当简单，即仅仅是需要将界面控件的数据源和各种web\nservice数据服务提供端进行简单的绑定即可。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n要注意流程监控类系统的状态流转不同于工作流引擎系统，其状态本身的定义就是大的业务流程阶段和管控点，这些状态点的触发往往是事件触发模式。因此对于该流程中的状态流转需要引入EDA事件驱动架构和消费发布订阅机制，在业务系统中完成某些业务后需要发出相应的业务事件，在流程监控实例中接收事件，并根据事件响应进行状态的流转。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/3fcbc5bd59ac47ba99c9facda18fe41c?from=pc\" IMG_WIDTH=\"804\" IMG_HEIGHT=\"490\" ALT=\"谈BPM业务流程管理系统建设和实施\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_73541598258740263\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在整合完成后，我们可以将最终的内容作为一个独立的portlet配置到统一门户上面，用户登录门户后即可以看到自己关注的项目的端到端流程和当前状态信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n端到端流程监控平台还可以用来整合企业已有的工作流引擎，即端到端流程监控平台往往监控的是企业内跨多个业务系统的端到端流程，但是监控到某一个活动的时候往往就下钻到了单一的业务系统和单一的工作流引擎实例执行，而对于这部分的内容相当也很简单，即从业务流监控-》单个工作流实例的监控，能够实现逐层进入的监控和查看模型即可。</P>\n<br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Mon, 24 Aug 2020 08:46:01 +0000","feedId":4798,"bgimg":"http://s6.sinaimg.cn/mw690/001l8XD7zy7FT4lWhDL25&690","linkMd5":"4e9f8978b249eccc53dcd3bd1e2a9312","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn43@2020_3/2020/08/24/22-09-21-225_748e58e8e16fd458.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s6.sinaimg.cn/mw690/001l8XD7zy7FT4lWhDL25&690":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn43@2020_3/2020/08/24/22-09-21-225_748e58e8e16fd458.webp","https://p6-tt.byteimg.com/origin/pgc-image/1180184820de4d479a8b64995ccc777b?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn97@2020_4/2020/08/24/22-09-27-604_97f1eee791f51418.webp","https://p1-tt.byteimg.com/origin/pgc-image/452458cbccba4666a7c26c2ca0e33f6e?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn21@2020_6/2020/08/24/22-09-28-331_f8c7d94066417c5d.webp","https://p3-tt.byteimg.com/origin/pgc-image/d48363def21143c69ba531fdd0e33a85?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn6@2020_3/2020/08/24/22-09-25-407_3bb73ad4d8b5395f.webp","https://p3-tt.byteimg.com/origin/pgc-image/8494b6ab1b7d49218ce47272a204530e?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn30@2020_5/2020/08/24/22-09-26-622_479f4590da4c01b4.webp","https://p3-tt.byteimg.com/origin/pgc-image/b0afb735251748a5943e314f7b7af12f?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn73@2020_1/2020/08/24/22-09-25-610_a5e7cd74c9056a4c.webp","https://p3-tt.byteimg.com/origin/pgc-image/be7dde61b72641df8ff7f2e01de5b424?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn5@2020_6/2020/08/24/22-09-27-686_cf21cfe3d54d0396.webp","https://p6-tt.byteimg.com/origin/pgc-image/70acfd33b56f4a69a6da12647617cdcd?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn14@2020_6/2020/08/24/22-10-33-153_9785599d6b30b336.webp","https://p3-tt.byteimg.com/origin/pgc-image/f0f854636073456da6d2d0b768a8c9eb?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn93@2020_5/2020/08/24/22-09-25-469_5a395fd65d64b6d4.webp","https://p3-tt.byteimg.com/origin/pgc-image/e2a8ecf69d274db2ab5ac5d2b8ae6dc5?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn1@2020_2/2020/08/24/22-09-25-605_f9efef99458d738a.webp","https://p6-tt.byteimg.com/origin/pgc-image/c28a29fa894c47578944a369f3056749?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn52@2020_1/2020/08/24/22-09-28-026_9840e2c9b5bfa777.webp","https://p6-tt.byteimg.com/origin/pgc-image/10703f0d29ee4367a776cd4326d5b2a4?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn98@2020_2/2020/08/24/22-09-27-912_aa17d62fd929d2cb.webp","https://p1-tt.byteimg.com/origin/dfic-imagehandler/c8865992-5a22-41fa-8a98-5060dc9ae90a?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn81@2020_3/2020/08/24/22-09-25-678_fe45921cecf32caf.webp","https://p3-tt.byteimg.com/origin/pgc-image/a936efe0783b4d8f95e75609a3686626?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn49@2020_1/2020/08/24/22-09-25-640_ab77173d6039b258.webp","https://p1-tt.byteimg.com/origin/pgc-image/0b07e4388734476ea4a892afe68a6d7b?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn10@2020_6/2020/08/24/22-09-29-818_7ac4c4b5b9a8a878.webp","https://p6-tt.byteimg.com/origin/pgc-image/a756cea102d14dcaa7621d10a7ab3901?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn57@2020_2/2020/08/24/22-10-26-796_afbe8ad0fc2ba30e.webp","https://p6-tt.byteimg.com/origin/pgc-image/8e3a45ea2d6b4ea3bddfb81b3eae761b?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn2@2020_6/2020/08/24/22-09-28-442_b9d58057a5cf1fdf.webp","https://p6-tt.byteimg.com/origin/pgc-image/514ddef1568c4d8fac0e57ea97e4e3ed?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn93@2020_1/2020/08/24/22-09-29-811_87f77bb2e1aaf7e8.webp","https://p6-tt.byteimg.com/origin/pgc-image/1044be2723c34eb1947fbcb443cf70da?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn69@2020_4/2020/08/24/22-09-29-493_99311ac0b178345c.webp","https://p1-tt.byteimg.com/origin/pgc-image/e40f3578b8854248935216bbb13b3089?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn66@2020_1/2020/08/24/22-09-26-750_73852a6d60c168f2.webp","https://p1-tt.byteimg.com/origin/pgc-image/3fcbc5bd59ac47ba99c9facda18fe41c?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn22@2020_6/2020/08/24/22-09-25-653_4a1bfc50b59e6291.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn17@2020_6/2020/08/24/22-09-30-958_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1598306959913},{"createdTime":"2020-08-25 06:09:19","updatedTime":"2020-08-25 06:09:19","title":"锻炼记录(200823)","link":"http://blog.sina.com.cn/s/blog_493a84550102z8yi.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7FQQOIuPha3\" TARGET=\"_blank\"><img SRC=\"http://s4.sinaimg.cn/mw690/001l8XD7zy7FQQOIuPha3&#38;690\" NAME=\"image_operate_51651598139099952\" /></A>\n<div><br /></DIV>\n<div>\n本周跑满7天，跑步距离32km，配送545，8月份快结束，也就是说如果跑满8月的话自己也完成了今年连续不间断跑满6个月的小目标。上周末眉山大暴雨，比较好的就是到了这个周一逐渐变成了雷阵雨，不会影响到跑步。</DIV>\n<div><br /></DIV>\n<div>\n<div>\n前面几天看了一会雷军的小米十周年演讲确实有些小激动，也真正感受到任何公司成功都来之不易，特别是第一代的开拓者更是需要发出艰辛的努力往往才能达成。</DIV>\n<div><br /></DIV>\n<div>自己是小米的忠实用户，从小米3开始用，到小米4，小米5，小米5s，小米note，小米mix，小米9，Redmi\nNote。从17年别人送了一台iphone\nx手机后，最近几年基本没有太多的换手机，现在一个电信手机号暂停后，小米9现在也是sim卡状态连无线看头条，知乎比较多。就我用过的手机可以讲下。</DIV>\n<div><br /></DIV>\n<div>\n小米3是确实出现故障问题，当时维修比较过，直接换了新机。小米5s是我拿着手机跑步被淋雨，直接屏幕不亮，拿到维修点虽然在1年保修期内但是反馈这种原因不属于保修范畴，于是差不多花了600元换了一个新的屏幕。对于小米Note自己印象很深，当时很喜欢，拍照的效果也很好，这台手机是刚买不到3个月，到西安出差的时候，在火车站上公交车的时候门口很拥挤被小偷偷走。小米Mix手机是给小孩妈妈使用，也是丢失，后面换成了便宜点的红米手机，反正价格不贵，丢了也不会太心疼。小米9手机是一直在用，也差不多2年的时间了，现在已经用的比较少，作为备机使用。</DIV>\n<div><br /></DIV>\n<div>\n整体来说小米每一代的性能和外观各方面提升都很大，虽然MIUI现在广告比较多，但是个人认为仍然是最好的手机系统，特别是很早就支持的一键换机功能。</DIV>\n<div><br /></DIV>\n<div>\n说实话，在自己没用iphone之前，也很难明白为何要花多一倍的价钱去买iphone手机。但是你真正使用后就会发现，小米和iphone仍然在两个方面存在明显差距。其一就是屏幕，其二就是本身的顺滑度，你真正用过后能够明显体会到这种差距。但是我也相信国产手机会越做越好，并且早日实现完全的自主可控，虽然道路艰辛漫长，但是经过一代一代人的拼搏，终能最终实现。</DIV>\n</DIV>\n<div><br /></DIV>\n<div>\n最近一周，突然发现自己的iphonex经常出现无信号，无服务的情况。昨天晚上出现整晚的无信号，调整为飞行模式再恢复也没有信号，关闭手机重新启动也没有作用。自己还以为是家里面信号弱或被屏蔽了，但是今天早上外出跑步，到了空旷的地方仍然是没有信号。</DIV>\n<div><br /></DIV>\n<div>\niphonex手机信号差是出了名的，但是原来也没有由于这个影响到手机使用和上网，最近出现的突然无信号也感觉很奇怪，暂时没有找到原因。</DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Sat, 22 Aug 2020 23:24:33 +0000","feedId":4798,"bgimg":"http://s4.sinaimg.cn/mw690/001l8XD7zy7FQQOIuPha3&690","linkMd5":"f8502ea8532df0088ac180e125c51cc5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn25@2020_4/2020/08/24/22-09-22-545_4ffb5ecc7148e6dc.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s4.sinaimg.cn/mw690/001l8XD7zy7FQQOIuPha3&690":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn25@2020_4/2020/08/24/22-09-22-545_4ffb5ecc7148e6dc.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn17@2020_6/2020/08/24/22-09-30-958_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1598306959915},{"createdTime":"2020-08-25 06:09:19","updatedTime":"2020-08-25 06:09:19","title":"微服务下产品集成和集成测试框架流程(200818）","link":"http://blog.sina.com.cn/s/blog_493a84550102z8w0.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7FJDkx8Tva9\" TARGET=\"_blank\"><img SRC=\"http://s10.sinaimg.cn/mw690/001l8XD7zy7FJDkx8Tva9&#38;690\" NAME=\"image_operate_67021597747735911\" /></A>\n<div><br /></DIV>\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n今天谈下微服务架构下的应用集成和集成测试方面的内容。在微服务架构下，由于传统的的单体应用以及拆分为多个微服务，那么原来单个系统内部的API接口调用以及变成了微服务间的外部接口调用，而且还可能已经由不同的开发团队在开发不同的微服务模块。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这种情况下如果不能很好的进行产品应用集成和后续集成测试，那么会经常出现类似单元测试问题遗留到集成测试，端到端流程无法测试通过，测试用例和数据反复制作，集成过程中出现问题故障排查困难等诸多问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n也正是这个原因，今天准备讲下产品集成和集成测试方面的内容，可以看到微服务下的产品集成和集成测试实际和传统组件化开发下的组件集成思路基本是一致的。当然在CMMI三级的时候我们有一个PI的过程域，该过程域也给出了产品集成的核心指导思路。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n产品集成概述</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/879f91b913d0464eb476c56d20fe2644?from=pc\" IMG_WIDTH=\"838\" IMG_HEIGHT=\"425\" ALT=\"微服务下产品集成和集成测试框架流程\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n大型软件产品开发一次可能开发多个新的业务系统，同时一个业务系统本身又包含多个业务模块和组件。只要在前期产品规划中存在子系统和模块的分解，那么后续就一定存在产品集成的动作。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在微服务架构设计下可以看到，我们通过传统单体应用的大拆小，形成了多个松耦合的微服务组件模块。<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一方面是通过分而治之降低大系统复杂度；另外一方面则是通过分解和接口定义后各模块可以并行开发。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n只要架构阶段存在微服务模块拆分动作，那么最终在各模块开发完成后一定存在集成动作。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n架构做出一个假设，只要在分解的时候各组件模块按预定的接口契约进行实现，那么后续各个组件一定可以进行集成和组装形成一个完整的产品。所以<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">架构不能仅仅只关心解耦，还必须关心集成和装配</SPAN>。解耦后的东西无法集成，那么分解过程仍然是失败的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在新的平台+应用，微服务+容器云平台下应用集成可以看到比常规的产品集成更加复杂，对于一个业务应用或组件<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">首先是要考虑和平台层类似消息，缓存等技术服务能力的集成，其次才是考虑组件之间的进一步横向集成。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这种场景下本身对应用集成的方案，策略和执行等都提出了更高的要求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n应用集成的内容</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/6bdda2f9fb0b416d96198d4c4f97968d?from=pc\" IMG_WIDTH=\"803\" IMG_HEIGHT=\"468\" ALT=\"微服务下产品集成和集成测试框架流程\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于应用集成的内容主要分为三个方面的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n其一：单个微服务模块和平台层能力的持续集成和发布</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于单个微服务模块的持续集成，首先是编写好自动化编译脚本代码，如使用ant工具完成，然后设置定时作业和任务，开发人员按时check\nin相关代码。使用CI持续集成工具根据定时任务点在构建环境自动获取最新代码，自动运行ant自动化编译脚本对代码进行编译，编译完成后自动化部署到某个环境。部署完成后运行单元测试自动化脚本对代码进行自动化测试，输出自动化测试结果和报告；如果通过的话测试人员通过QTP进行进一步自动化测试或手工执行一遍冒烟测试脚本，完成本次持续集成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在持续集成模式下，一方面是可以尽可能早的发现问题，一方面对测试人员随时都可以有一个可进行详细功能性测试的可用环境；其次如果对于多环境，涉及到开发环境测试通过后自动部署集成测试环境，集成测试环境测试通过后自动部署到验收环境等一系列动作。对此我们叫部署流水线模式，实现跨环境的持续集成管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n其二：微服务两两之间上下游通过API接口服务间的服务集成</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于微服务两两间的横向集成主要是通过微服务提供的API接口服务集成，因此一方面是微服务需要和自身需要消费的提供业务服务能力的上游微服务组件集成获取输入信息和输出；一方面微服务本身也提供相应的API接口服务，需要配合下游的微服务组件进行服务集成和联调。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于该步骤的集成重点是保证组件上下游之间能够集成通过，业务和数据能够正常流转，其集成的主要依据是组件概要设计中的服务接口设计进行。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n其三：基于端到端业务场景的跨多个微服务之间的集成</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在微服务两两集成通过后，接着的关键步骤就是根据端到端的业务场景进行跨多个业务组件的应用集成。确保端到端的业务流程能够在多个微服务模块协同下顺利完成。在这个阶段首先是需要保证组件两两集成通过，然后是依据相应的业务流程和业务架构文档，总体应用架构设计文档分析相应的业务场景，准备相应的业务数据进行。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在整个应用集成过程中，微服务间的集成顺序和集成场景是需要重点考虑的问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n应用集成顺序</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/0f417dcb5f9544a4bdd9f9dbe8b36c67?from=pc\" IMG_WIDTH=\"849\" IMG_HEIGHT=\"411\" ALT=\"微服务下产品集成和集成测试框架流程\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n应用集成顺序分为两种模式：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n一种是自顶向下的模式进行集成</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于自顶向下方式的集成，首先集成最外层或流程最末端的业务模块，业务模块前置依赖用模拟器(桩)实现。然后继续在每一层按宽度或深度优先，用完全实现模块代替模拟器，并建立下层。以这种方式继续直到所有被测系统中的桩已经实现和测试。在这种模式下可以看到整个集成过程完全是顶层需求驱动进行，集成工作可以较早的开始进行，如果产品集成图是正金字塔结构较容易，模拟器开发较少；反之同理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n一种是自底向上的方式进行集成</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于自底向上集成，首先集成最底层的业务模块，只在底层模块未实现前使用模拟器(桩)。然后继续在实现并测试对上一级模块，这些构件使用已经测试的下级模块。整个系统使用根一级模块测试。对于这种模式模拟器开发较少，同时上次各模块基本可以开始并行测试。这种集成方式最大的风险是如果上次需求变化可能直接影响到最底层。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n应用集成的场景</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n集成场景分析目的是为后续的集成测试用例设计提供依据，集成测试用例要覆盖所有场景。对于场景分析输入主要包括跨模块协同业务流程图、系统需求规格说明书、概要设计说明书等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于集成场景分析可以从静态和动态两个层面进行分析：对于静态分析主要分析模块依赖关系，分析某一个服务接口影响到的业务模块具体功能点，可以模块-》模块的矩阵分析方法进行；对于动态分析主要是根据跨系统或模块流程入手，分析跨模块的流程协同，流程协同中所涉及到的所有接口服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n集成场景的分析将为集成测试用例的设计提供核心输入，要明白，集成测试不是简单的接口测试，接口反映的是跨系统或模块的交互流程，需要通过交互流程的贯通来检验接口本身的正确性。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n产品集成和持续集成的关系</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n产品集成强调是的是把左右的组件最终能够组装和集成起来，形成一个完整的系统。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\nMartin\nFowler对持续集成是一种软件开发实践，即团队开发成员经常集成它们的工作，通常每个成员每天至少集成一次，也就意味着每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译、发布、自动化测试)来验证，从而尽快地发现集成错误。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n许多团队发现这个过程可以大大减少集成的问题，让团队能够更快的开发内聚的软件。可见持续集成只能算做产品集成的一个子实践。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n要明白持续集成只是产品集成的一种方式，不论是开发过程是瀑布模式、增量模式还是迭代模式，都可以采用持续集成的思路。要明白持续集成的一个核心是将整个开发过程透明化，同时将集成工作提前化。尽可能早的暴露问题和风险，同时纠正在前期系统分析和架构设计中的不足。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于持续集成我们往往会强调每日构建、冒烟测试、自动化测试等内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n强调开发、测试和生产环境的部署流水线作业。但是要明白对于大型产品集成仍然会包括模块内测试和集成、模块间测试和集成、跨系统间的测试和集成工作。对于单个模块内可以采用每日构建和持续集成策略，但是对于模块间和跨系统我们可以采取分迭代式的集成方式进行集成。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n集成测试流程</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/b013f66cbd15497e9a0202a76e67661e?from=pc\" IMG_WIDTH=\"917\" IMG_HEIGHT=\"607\" ALT=\"微服务下产品集成和集成测试框架流程\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n集成测试是将模块按照设计要求组装起来同时进行测试，主要目标是发现与接口有关的问题。如数据穿过接口时可能丢失；一个模块与另一个模块可能有由于疏忽的问题而造成有害影响；把子功能组合起来可能不产生预期的主功能；个别看起来是可以接受的误差可能积累到不能接受的程度；全程数据结构可能有错误等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于集成测试阶段的流程可以参考上图，在验收测试阶段流程和该图类似不再说明。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n&#160;</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从该图中可以看到作为集成测试的负责方在进行集成测试执行前需要制定集成测试计划，集成测试方案和策略并联同甲方信息化管理部门和开发厂商共同进行计划和方案的评审。在方案评审通过后再开始单个业务组件的集成测试用例的设计，业务组件间的接口和服务测试用例的设计工作。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n开发厂商在开发验证环境自身的单元测试通过后将形成一个稳定的可用于集成测试的版本，在这个时候可以提交集成测试申请；而对于配置管理方来说则根据提交的集成测试申请进行待测试版本的提取，并将测试版本部署到集成测试环境，成功部署完成后通知集成测试负责方进行集成测试工作。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n集成测试方根据设计好的功能测试用例和接口服务测试用例开始进行业务组件的功能测试和上下游的接口服务测试工作，确保单个业务组件功能正确，和上下游业务组件之间的衔接正确。在这里重点还是集成方案中的集成顺序分析。在集成测试执行完成后输出相应的集成测试结果，如果存在相应的缺陷则打回到开发商，开发商在进行缺陷修复和自测通过后再提交第二轮的集成测试。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在多轮集成测试缺陷全部关闭后，需要在集成测试环境再进行一次回归测试。当回归测试仍然通过后可以开始输出相应的集成测试评估报告并提交评审。在集成测试评估报告和开发商，验收测试商一起评审通过后该业务组件可以开始提交验收测试，并进入详细的验收测试流程。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n集成方案和策略</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以以多种方式进行集成测试，而下面是三种常用的类别：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n第一种方法是由上而下的集成测试方法</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先测试和集成最高级别的模块。这使高级别的逻辑和数据流可以在过程的早期阶段测试，有助于最大限度地减少对驱动程序的需求。但是，对存根\n(stub)\n的需求使测试管理变得复杂，低级别的实用工具在开发周期中相对较晚的阶段测试。由上而下的集成测试的另一个缺点是不能很好地支持有限功能的早期发布。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n第二种方法是由下而上的方法要求</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先测试和集成最低级别的单元。这些单元常被称为实用工具模块。通过使用这种方法，使用工具模块在开发过程的早期阶段测试，最大限度地减少了对存根\n(stub)\n的需求。但是，不利的方面是对驱动程序的需求使测试管理变得复杂，高级别的逻辑和数据流在晚期测试。与由上而下的方法一样，由下而上的方法也不能很好地支持有限功能的早期发布。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n第三种方法（有时也称为伞形方法）测试沿功能性数据和控制流路径进行</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先，函数的输入以上面讨论的由下而上的模式集成。然后，每个函数的输出以由上而下的方式集成。这种方法的主要优点是对有限功能的早期发布的支持程度。它也有助于最大限度地减少对存根\n(stub)\n和驱动程序的需求。但是，这种方法的潜在缺点非常明显，因为它的系统性可能比其他两种方法低，会导致对回归测试的更大需求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n由于自顶向下的测试方式需要建立大量的技术服务和业务服务模拟器，而且底层的需求变化会对上层的业务组件模块造成较大的影响。因此对于私有云PaaS平台中应用的集成测试最好的方式还是以自底向上的模式进行，在这个过程中为了保证测试工作的尽早开始和并行，可以对少量涉及到技术服务集成的场景采用自顶向下的方式进行集成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在整个集成测试方案策略中重点是集成依赖关系和集成顺序的分析，具体如下：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/77a7938e54b544f1b60e09d664bceea1?from=pc\" IMG_WIDTH=\"784\" IMG_HEIGHT=\"539\" ALT=\"微服务下产品集成和集成测试框架流程\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_84541597747757950\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在此图中可以看到，首先需要分析业务组件模块之间的相互依赖关系，每个模块涉及到的前置依赖模块，以及和依赖模块之间需要交互的业务服务接口。基于初步的模块依赖关系分析可以开始考虑业务模块的组装和集成顺序，在集成顺序的分析中可以根据依赖关系按正向和逆向两种方式进行集成测试顺序的分析和梳理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于正向分析来说则是当前业务模块测试完成后可以测试哪些下游的业务模块；而对于逆向分析来说则是当前模块的前置依赖模块是哪些；如果需要测试当前模块需要首先测试哪些上游的业务组件模块等。通过这两种方式的梳理基本可以形成一个大框架的组件集成流程图。但是由于业务模块集成本身的复杂性，以上的初步集成方案和策略分析还不足够，最好的方法还是需要进一步结合业务场景尽快跨模块的业务协同分析，具体如下：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/b788769b0d0f488fac0c98d9aad03fe2?from=pc\" IMG_WIDTH=\"784\" IMG_HEIGHT=\"543\" ALT=\"微服务下产品集成和集成测试框架流程\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_98651597747757402\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n结合该图，在集成场景分析中首先是选择需要集成的业务流程，分析该业务流程中的各个业务活动以及这些业务模块之间的交互和协同点。对于这些交互点需要详细的分析业务功能以及该业务功能涉及到的业务服务接口，将这些业务服务接口全部识别出来并进行测试设计和测试数据准备。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于以上步骤后可以有针对性的对识别出来的业务流程进行跨模块的端到端测试，在这种测试模式下虽然无法保证所有业务模块间的接口全部测试覆盖到，但是可以保证关键的业务流程实现跨模块的业务协同和贯通。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n集成测试执行和评估</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/61bdfb6770b5475c86cb0e66b5550af3?from=pc\" IMG_WIDTH=\"933\" IMG_HEIGHT=\"400\" ALT=\"微服务下产品集成和集成测试框架流程\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于集成测试执行设计到冒烟测试、业务组件模块的功能测试、业务组件间接口服务测试、性能测试、易用性测试等多方面的内容，具体可以参考业界标准的测试方法规范体系。对于在测试执行阶段可以简要描述如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n&#160;</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在集成测试执行过程中需要有相应的缺陷管理工具和平台对缺陷进行统一的管理和跟踪。如果从更加全面的工程变更角度来说，则需要有完善的需求变更、缺陷管理、版本管理、测试流程管理、发布管理等一系列的研发过程管理工具平台提供支撑。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于测试评估则是根据需求设计文档（系统需求，产品集成方案、集成设计文档等），描述经过测试后，哪些组件接口已经实现，哪些组件接口没有实现或存在什么问题，产品对应系统需求是否通过测试，测试执行是否覆盖到所有集成测试用例。同时需要对集成测试执行结果以及因测试不充分而引起的风险进行评估，说明对系统测试的影响。集成测试评估的主要输出包括了：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n集成测试清单和测试结果；</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n集成测试覆盖率分析：接口覆盖率，功能覆盖率；</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n测试结果统计分析：Bug分析，集成次数和成功率，遗留Bug分析；</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n测试结果评估；</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n测试结论和后续改进建议。</LI>\n</UL>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n集成测试的其它关键点说明</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n通过DevOps实施来实现整个持续集成过程的自动化</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/153008895a2e40f189c9ccf9bb042a86?from=pc\" IMG_WIDTH=\"817\" IMG_HEIGHT=\"522\" ALT=\"微服务下产品集成和集成测试框架流程\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_15311597747753619\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n持续集成和集成测试还是有很大区别，持续集成强调的是自动化的编译构建，部署，自动化的冒烟测试，保证开发过程的产出随时都可以构建一个冒烟测试通过的可用版本。而集成测试则涉及到严格的测试策略，测试方案，集成测试顺序，各个集成功能点的覆盖，详细的功能性测试等。集成测试不仅仅是接口测试，更重要的是以接口质量为前提的跨组件功能性测试。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而对于DevOps最佳实践本身就包括了持续集成的过程。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n持续集成不仅仅是实现了自动化的编译，打包和部署，自动化的单元测试。更加重要的是实现了环境之间的自动化迁移。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个能力在我们整个产品集成中相当重要。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n可视化的版本部署看板实现可追溯</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/9523b250a0ca4796b3c11884a13ec6cb?from=pc\" IMG_WIDTH=\"777\" IMG_HEIGHT=\"337\" ALT=\"微服务下产品集成和集成测试框架流程\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_86621597747753351\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在产品集成整体策略下，一个核心就是对于后续类似验收测试，生产环境等都是做环境迁移，而部署重新进行版本构建。只有这样才能够保证最终测试人员测试版本的一致性。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n同时根据部署流水线方式，需要建立版本部署情况追溯表。比如上图，我们可以很清楚的看到当前在每一个环境各个微服务模块处于什么版本。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n集成测试执行顺序</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n集成测试是整个测试里面的一个完整阶段，不仅仅是包括接口集成测试，而应该是包括了功能冒烟测试，接口测试，功能性测试，非功能性测试等完整内容，具体如下：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/0037529e0ff14acda2fc2fde671d94de?from=pc\" IMG_WIDTH=\"729\" IMG_HEIGHT=\"463\" ALT=\"微服务下产品集成和集成测试框架流程\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_50041597747780138\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我一直认为这是集成测试中非常关键的一个内容，集成顺序的确定涉及到前期大量的组件间依赖关系分析，业务功能点和接口对应关系分析等。特别是发展到现在，我们发现很多时候组件间不再是以前单纯的单向依赖关系，由于接口服务注册在总线上，导致多个组件间可以相互依赖，所以前面简单的组件依赖分析已经不适用，替代的方法是基于跨组件的流程协同分析，以核心流程驱动组件间的组装顺序。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-size: 16px; background-color: rgb(255, 255, 255);\">\n<font FACE=\"PingFang SC, Hiragino Sans GB, Microsoft YaHei, WenQuanYi Micro Hei, Helvetica Neue, Arial, sans-serif\">\n同时，对于传统的自顶向下集成和自底向上集成方法往往都不能完全覆盖。很多时候采用的都会是混合集成的策略。一个是为了及早的看到集成的效果我们期望从上向下，但是却需要大量的模拟器和stub桩模块。另外一个是为了减少模拟器，我们从最底层向上集成，但是往往却将风险延迟到最后发现。</FONT></P>\n<br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Tue, 18 Aug 2020 10:48:04 +0000","feedId":4798,"bgimg":"http://s10.sinaimg.cn/mw690/001l8XD7zy7FJDkx8Tva9&690","linkMd5":"908753bf790834c9a28711752dba00de","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn18@2020_1/2020/08/24/22-09-21-636_f4e8a28b45a614bd.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s10.sinaimg.cn/mw690/001l8XD7zy7FJDkx8Tva9&690":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn18@2020_1/2020/08/24/22-09-21-636_f4e8a28b45a614bd.webp","https://p3-tt.byteimg.com/origin/pgc-image/879f91b913d0464eb476c56d20fe2644?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn33@2020_3/2020/08/24/22-09-28-076_626d97b2d81c3dbe.webp","https://p1-tt.byteimg.com/origin/pgc-image/6bdda2f9fb0b416d96198d4c4f97968d?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn26@2020_2/2020/08/24/22-09-25-627_abac48bf22d3c418.webp","https://p3-tt.byteimg.com/origin/pgc-image/0f417dcb5f9544a4bdd9f9dbe8b36c67?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn82@2020_6/2020/08/24/22-09-25-751_31b5e4c4b31e20ca.webp","https://p6-tt.byteimg.com/origin/pgc-image/b013f66cbd15497e9a0202a76e67661e?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn65@2020_4/2020/08/24/22-09-29-080_ca592a0305b70383.webp","https://p3-tt.byteimg.com/origin/pgc-image/77a7938e54b544f1b60e09d664bceea1?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn70@2020_5/2020/08/24/22-09-28-699_9d674e5ab94c0632.webp","https://p1-tt.byteimg.com/origin/pgc-image/b788769b0d0f488fac0c98d9aad03fe2?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn66@2020_1/2020/08/24/22-09-29-515_c3f8f7a22f8253fc.webp","https://p6-tt.byteimg.com/origin/pgc-image/61bdfb6770b5475c86cb0e66b5550af3?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn74@2020_5/2020/08/24/22-09-31-171_3fb628fbd76191a2.webp","https://p1-tt.byteimg.com/origin/pgc-image/153008895a2e40f189c9ccf9bb042a86?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn9@2020_3/2020/08/24/22-09-26-654_1cf314679666cc15.webp","https://p1-tt.byteimg.com/origin/pgc-image/9523b250a0ca4796b3c11884a13ec6cb?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn51@2020_2/2020/08/24/22-09-25-645_bb005c55e0df2e31.webp","https://p3-tt.byteimg.com/origin/pgc-image/0037529e0ff14acda2fc2fde671d94de?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn85@2020_4/2020/08/24/22-09-25-696_ce70d5263f0771e8.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn17@2020_6/2020/08/24/22-09-30-958_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1598306959914},{"createdTime":"2020-08-25 06:09:19","updatedTime":"2020-08-25 06:09:19","title":"锻炼记录(200816)","link":"http://blog.sina.com.cn/s/blog_493a84550102z8vt.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7FGxxPuIIa4\" TARGET=\"_blank\"><img SRC=\"http://s5.sinaimg.cn/mw690/001l8XD7zy7FGxxPuIIa4&#38;690\" NAME=\"image_operate_89481597579667679\" /></A>\n<div><br /></DIV>\n<div>\n本周跑步跑满7天，总距离26km，配速603，今天一天都在下雨，只能是在室内跑了1km的距离。今天称了一下体重，发现回眉山后自己体重差不多又增加了5斤的样子。其原因一个是跑量减少了很多，其次就是饮食上也没有特意控制导致。</DIV>\n<div><br /></DIV>\n<div>最近体重增加后明显感觉就是跑起来后整个身体比较重，速度也很难提起来。</DIV>\n<div><br /></DIV>\n<div>\n<div>\n从最新docker网站提供的服务协议可以看到，禁止列入老美实体名单里面的企业使用docker服务。而我们看到，当前华为云，特别是PaaS平台基本都构建在容器云基础上，如果该信息属实，对华为云服务又将是一个不小的打击。现在看来，全面的国产化和自主研发势在必行，即使开源软件从长远来看也不保险。老美耍起流氓来没谁扛得住。</DIV>\n</DIV>\n<div><br /></DIV>\n<div>\n虽然网上也有很多人说开源版本仍然可以使用，只是不再提供官方的技术服务，或者说以华为的能力完全可以基于linux独立自研一个容器服务能力。但是我个人认为整体还是会有一定的影响。</DIV>\n<div><br /></DIV>\n<div>\n<div>\n另外说下最近招聘方面的事情，个人感觉在现在劳动法约束下，不是员工弱势而是企业弱势。很多时候反而是企业自己息事宁人。</DIV>\n<div><br /></DIV>\n<div>\n第一个是前端时间招聘一个开发人员，面试入职都还算顺利，但是入职完第2周，由于开发出来的东西bug太多，开发Leader就稍微说了两句要注意质量，多自测。结果别人不高兴了，直接提出公司安排的任务干不了，两周不到就离职走人。而公司项目刚好在紧张的交付阶段，要快速的招到人补充相当困难，最终是搞的公司很被动，只能从其它产品线协调资源应急。公司对这类人不但没有任何约束，反而还得发上几天班的工资，同时付出大量的招聘成本投入。</DIV>\n<div><br /></DIV>\n<div>\n第二个是新招的一个毕业生，待遇和公司的福利政策都已经谈好，自己也到公司进行了复试也确认要来入职，公司给的待遇也是当前主流应届毕业生的市场待遇水平。但是同样是1周不到就离职，离职的理由居然是自己同学的工资都比自己高，自己在这干太丢人，要重新去找工作。</DIV>\n<div><br /></DIV>\n<div>\n第三个是社招3年经验的员工，同样入职不到2周离职，最终理由的是公司不是一个互联网化的公司，居然还需要进行考勤，还需要填报工作日志。也没见公司有啥免费的饮料点心区，说自己不习惯。虽然我们也一再解释如果当天晚上加班完，可以第二天上午申请调休，但是还是未能留住人。</DIV>\n<div><br /></DIV>\n<div>\n第四个是离职后要求公司给加班工资补偿的，说不给就走劳动仲裁，同时还保留了公司相关负责人要求加班的邮件和微信记录。而我们实际是相关的加班都可以换做调休，负责人最终也找到该员工多次申请调休的QQ记录，同时也检查到该员工存在多次考勤迟到记录，最终才双方息事宁人。</DIV>\n<div><br /></DIV>\n<div>\n我从来不提倡无事加班，也反对长期加强，或者无偿让员工加班不给报酬。但是如果真正出现有紧急事情要安排加班，员工还能够霸气回怂我不加班，这是劳动法赋予我的权力的，你会如何处理？就我个人而言，我一定会没有任何商量的淘汰这类员工。当然一个团队管理的好，我理解也不应该出现上面这种情况，如果真出现了也只能说明平常的团队管理和建设工作不到位。</DIV>\n</DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Sun, 16 Aug 2020 12:01:03 +0000","feedId":4798,"bgimg":"http://s5.sinaimg.cn/mw690/001l8XD7zy7FGxxPuIIa4&690","linkMd5":"382ac3baaf06fdb958d7222781772ad2","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn38@2020_5/2020/08/24/22-09-21-915_662fc76c1ba9dc76.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s5.sinaimg.cn/mw690/001l8XD7zy7FGxxPuIIa4&690":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn38@2020_5/2020/08/24/22-09-21-915_662fc76c1ba9dc76.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn17@2020_6/2020/08/24/22-09-30-958_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1598306959914},{"createdTime":"2020-08-25 06:09:19","updatedTime":"2020-08-25 06:09:19","title":"谈基于平台+应用思想下的企业微服务架构转型（200822）","link":"http://blog.sina.com.cn/s/blog_493a84550102z8y8.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7FPN61MaTdb\" TARGET=\"_blank\"><img SRC=\"http://s12.sinaimg.cn/mw690/001l8XD7zy7FPN61MaTdb&#38;690\" NAME=\"image_operate_21831598080404921\" /></A>\n<div><br /></DIV>\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n今天准备再详细讲解下传统企业微服务架构转型，在中台概念没有出来之前，我们在构建企业内部私有云PaaS平台的时候，已经提出了平台+应用的构建思想。而这个思想在当前中台，微服务架构下仍然适用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于企业IT架构转型，实际上我们也看到存在平台+应用全新构建模式，也存在最大化保留IT当前遗留资产进行平滑迁移和适配模式。因此今天重点会对这几张模式进行详细介绍。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n基于平台+应用的企业私有云PaaS平台建设核心指导思想</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/3b7b127519274a3c8ab18aa6e6a9be4a?from=pc\" IMG_WIDTH=\"799\" IMG_HEIGHT=\"478\" ALT=\"谈基于平台+应用思想下的企业微服务架构转型\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于企业私有云平台建设主要还是围绕通过私有云建设后最大化资源利用率，降低能耗和硬件采购成本，实现数据中心的集中管控和运维，促进企业内部信息化部门的服务化转型等。云计算本身具备的技术特点和优势，由于企业对信息化资产和安全的管控需求，企业信息化应用本身业务规则，逻辑和一致性的高要求等，往往很难真正迁移到当前的公有云平台，这也是诸多大型企业都开始独立建立自己的私有云数据中心和云平台的原因。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n目前，很多企业的内部私有云平台建设仅仅还是在解决IaaS层和虚拟化资源池的问题，而这远远没有达到私有云建设的核心业务目标和核心价值所在。因此在启动企业内部私有云PaaS平台建设时，需要进一步明确平台建设的核心指导思想。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n集中和系统化</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/ac2022a96d08497281d84ed7d06007b7?from=pc\" IMG_WIDTH=\"705\" IMG_HEIGHT=\"416\" ALT=\"谈基于平台+应用思想下的企业微服务架构转型\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n既然私有云谈集中化，那么大系统观就显得更加重要，在大系统观下企业内部的IT建设和业务系统最终就是一个大系统，其他的仅仅是业务模块和组件单元。在企业私有云PaaS平台建设下将彻底打破原有的企业信息化建设中业务系统竖井式的建设模式，真正转变为基于SOA服务化思想下的<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">平台（技术中台）+应用</SPAN>构建模式。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在业务系统组件化后，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">原有的业务系统边界将被彻底打破，整个企业的信息化系统将转变成为一个平台能力支撑下的多个微服务（业务组件）构成的大系统</SPAN>。在大系统建设模式下涉及到两个方面的整合，一个是向底层的资源池整合和平台化，一个是最顶层的云门户化集成，而大系统中剩余的就是各个业务组件单元。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n大系统建设要解决的核心问题就是资源的复用问题和资源的水平调度和扩展问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n传统的企业信息化建设模式很难真正地按大系统观的思想来规划和建设，大系统建设模式首先要解决企业架构中的业务架构和数据架构问题，然后才是应用架构和技术架构问题。只有按企业架构业务驱动IT思想，分层和组件化的思想才可能真正的理解大系统的概念，分层和分模块地进行建设。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果引入了企业私有云，我们的信息化建设还是传统的各个业务系统独立建设，后续再考虑协同的模式，那么私有云本身还是停留在技术优势上面，很难真正的体现业务价值。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n平台和分层化</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当我们在谈PaaS（平台即服务）的时候，但是很多时候我们的理解却是它是一个可托管的云端运行平台，可能也包括了在线开发平台，测试平台。但是我们一定要注意到私有云里面的平台不仅仅是解决平台的云化问题，更加重要的是需要解决<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">微服务本身基于SOA组件化思想设计、基于平台搭建和集成问题。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n技术平台真正的是可以做到标准化开发方法和开发模式，提升开发效率，将私有云PaaS平台对应用的约束完全固化到开发框架和平台中。平台化一方面解决标准化问题，同时解决可复用问题，还进一步解决前端应用和产品的可配置问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在引入了私有云和云本身的分层架构概念后，结合传统的企业应用架构，特别是服务化的分层架构，需要重新对企业私有云下的分层架构进行整合。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即在整个私有云PaaS平台体系下分为<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">资源，服务和应用</SPAN>三个层面。其中资源层既包括了IaaS层物理基础设施，也包括了私有云PaaS技术平台，而应用则包括了各个松耦合的业务组件模块和顶层云门户集成。在平台和应用层之间是服务层构建，通过标准化的SOA参考架构体系，真正实现了平台层服务能力和应用层功能构建之间的解耦。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n集成和协同化</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个是大型企业信息化规划建设的一个核心内容，不管是否引入企业私有云都需要考虑集成方面的问题。在引入私有云后传统的企业业务系统间的集成转换为业务组件或模块间的集成，同时在进一步强化分层架构思想后，引入了多层之间的纵向服务集成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于集成主要包括两个方面的内容：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">数据的集成和数据的融合</SPAN>，这里面涉及到主数据和共享数据中心的建设问题，核心目标就是解决共享数据只有一套，有唯一的源头的创建更新机制，数据以共享数据服务的方式将能力发布出去，供其它业务组件使用。这个和传统数据交换和集成有很大的区别，即在于数据本身不会落地到各个业务系统形成多份数据拷贝，而是按需实时访问和使用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其次是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">业务的集成和协同</SPAN>，要完成一个端到端的业务流程和业务协同，最终将转换为业务组件间的服务交互和协同问题，那么核心问题就转变为了业务组件如何划分最合理，最能够保证业务组件之间的内聚性，真正能够实现业务组件的彻底解耦问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n私有云建设完成后，组件化资源池里面有大量的业务组件，这些业务组件提供业务服务，如果这些业务组件不能很好的通过业务服务协同起来完成最终的业务目标，那么资源池化和共享的价值发挥不出来。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于企业私有云PaaS平台规划和设计可进一步参考：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<a HREF=\"https://www.toutiao.com/i6855829895327678984/?group_id=6855829895327678984\" TARGET=\"_blank\">\nSOA和云计算-企业私有云PaaS平台建设实践</A></P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n微服务架构-企业全新构建模式</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/d7f5aafc78d34fa4bbcbbdb2ca567358?from=pc\" IMG_WIDTH=\"721\" IMG_HEIGHT=\"403\" ALT=\"谈基于平台+应用思想下的企业微服务架构转型\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n本部分谈下一个企业全新构建IT系统和应用，没有遗留系统负担的情况下，如何基于微服务架构思想进行规划和建设。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n谈微服务架构思想实际上是包含了平台+应用思想，业务组件化服务化思想，SOA和云思想，包括当前主流的DevOps思想的一个融合</SPAN>，而不仅仅是简单的微服务架构。因此对于一个新创建的企业要基于微服务架构思想来整体规划内部IT并不是一件容易的事情。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先我们对整体规划建设进行拆分，主要应该包括以下关键的建设任务和内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n底层私有云平台建设</SPAN>，这个即考虑全部基于IaaS资源池进行并尽量去IOE架构，当前实际上对于涉及到数据库仍然或涉及到部分的Oracle数据库和集中存储，企业在选型和规划的时候要考虑本身去掉这部分潜在风险。服务器资源可以考虑全部采用X86服务器并进行虚拟化，提供虚拟机资源作为计算能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n容器云PaaS平台建设</SPAN>，对于PaaS平台建设当前可以基于轻量的Docker容器进行，并通过Kubernates进行资源管理和动态调度。而如果规划建设DevOps支撑平台，即在DevOps平台建设过程中统一建设容器化PaaS平台，当然在DevOps平台中会进一步实现了持续集成和流水线作业能力，实现开发，运行和后期运维监控的一体化管理。通过实施DevOps平台可以进一步对当前的开发团队规划，岗位角色分工，软件过程改进等进一步优化。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在微服务架构实施中，还有一个重点就是制定<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">微服务架构开发框架，标准和规范体系</SPAN>。以指导后续开发厂商按照统一的标准方法，工具和流程进行微服务组件模块和接口服务的开发，确保开发标准和规范一致性，也进一步确保了后续多个微服务模块在集成的时候不会出现问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n把这些都谈后，再转回谈需要统一建设的技术平台部分。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n4A平台，这个是必须建设的内容</SPAN>，不仅仅是实现统一用户，统一认证和鉴权，统一组织，统一审计等内容。在微服务架构下，4A平台进一步扩展传统业务系统中系统管理模块的内容，即能够实现到微服务模块内部的功能菜单和按钮级的操作授权，同时能够实现灵活定义的数据级授权和配置。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n公共流程平台</SPAN>，这个公共流程平台也是必须，实现统一的类似内部多租户的流程引擎，实现流程的设计建模，运行，监控的全部统一化。各个业务组件模块仅仅是使用流程平台提供的能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n技术服务平台，这个实际涉及到消息，缓存，文件，任务，日志，通知，分布式存储等诸多技术服务能力</SPAN>，可以根据企业需要来确定哪些要单独实现为独立的技术服务能力开放提供。这个没有明确的要求，但是根据实际项目实践来看，类似发送短信邮件的通知类服务，文件存储类服务往往都是必须要规划建设的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n监控运维平台</SPAN>，这个平台实际上包括了传统的IT网管监控，同时还包括了当前的APM业务性能监控两个方面的内容。同时两者内容本身又相互集成和融合。由于采用了容器化PaaS，实际上微服务开发商对底层资源的情况并不清楚，因此更加需要这样一个监控运维平台能够同时监控到业务性能和资源层性能，并实时预警。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n除了技术平台外，再来看下业务中台部分可以规划建设哪些内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n主数据平台建设</SPAN>，基于当前企业信息化规划建设实施，对于业务中台部分能够统一考虑的只有基础主数据部分内容，因为这部分是共性基础数据服务提供能力。当然基于微服务架构模式下，实际上也没有独立的主数据平台概念，实际上应该只有类似供应商，产品，客户等微服务模块。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n中间即是满足各个业务能力实现的微服务模块应用，相互独立自治，松耦合。微服务模块间通过轻量的Http\nAPI即可进行交互和协同。当然在这个过程中涉及到微服务网关的使用等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n最上层规划统一门户平台</SPAN>，门户平台重点就是实现业务功能在应用层的简单组装和配置，类似App\nStore商店一样，最终的业务用户可以根据自己的需求安装相关的业务系统应用。即门户具备足够的灵活定制能力。同时对于DevOps平台最好和前端门户结合，即通过DevOps平台发布和部署的微服务可以直接发布到最终的门户应用上面。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n平滑迁移和接口能力适配模式</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/c1074d3bb83e41149123ef509528cffd?from=pc\" IMG_WIDTH=\"736\" IMG_HEIGHT=\"399\" ALT=\"谈基于平台+应用思想下的企业微服务架构转型\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n传统企业转型微服务架构，实际上我们思考最多的就是如何进行平滑迁移和逐步过渡，如何在转向微服务架构的过程中对已有的遗留业务系统影响最小，并对已有的遗留系统逐步进行平滑迁移。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在原来的多篇文章中，实际上我提出的思路都是会涉及到对已有系统进行重构，这个一方面是底层数据库的重构，也包括上层的微服务模块化和接口服务化重构，但是这种重构本身一定会对业务系统造成一定的影响。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而今天这篇文章谈的重点就是，我们将微服务架构思路应用到我们新的业务应用构建中，对于老系统先保留现状，而在新业务应用构建过程中一定涉及到需要使用已有业务系统的业务能力和数据能力提供。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n为了达到这点，提出不碰触已有业务系统逻辑层实现，全新建设中台各个微服务模块中心的思路，在建立这些中心的时候可以<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">先不同去触碰底层的数据库，而是基于已有的数据库来构建上层的各个中心。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n各个中心就是我们说的业务或数据能力提供中心，各个中心完全微服务模块化，内部也包含业务规则和逻辑的实现，这部分和已有业务系统的逻辑层部分内容是重复的，但是不要紧。可以理解为<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">已有业务系统的逻辑层逻辑在重新梳理和解耦后，迁移到新的中台层的各个微服务中心中。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n各个微服务中心直接和已有业务系统的底层数据库打交道，而不是和已有业务系统提供的WS服务或逻辑层API打交道，这样做的目的是尽量减少多层WS服务调用带来的分布式事务处理问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在构建微服务中心的时候，这个时候就<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">不再是单纯的原子服务提供，也包括了组合服务能力提供</SPAN>，即各个微服务中心能够提供领域层服务能力。这个组合服务在实现的时候可能需要访问底层多个数据库，但是对于前端应用来说并不关系，对于底层实现逻辑对上层透明。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这种思路重点就是首先考虑中台能力的微服务模块化，同时将已有业务系统的逻辑层能力进行迁移，然后最终转化为API能力接口朝上层暴露。这些能力接口可以用于构建新的业务应用使用。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n比如我们说的，当构建一个新的业务应用的时候，如果传统方式下面需要和底层的PMS，SCM，ERP，EAM等多个业务系统打交道和协同，而新的业务应用构建模式就变成了，只需要和中台的API网关暴露的服务接口打交道即可。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而中台各个模块的API接口能力的实现本身是包含了业务规则的，包含了能力组合的，这些不是单纯的代理回原来的业务系统逻辑层，而是重新实现了一遍，是原有业务系统逻辑层能力的迁移。这种迁移虽然导致业务规则逻辑有两套，但是也为传统业务系统最终的微服务化打下了坚实的基础。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即提供API能力的中台服务层构建完成后，可以看到对传统的业务系统进行重构也很简单的了。即传统的业务系统原有的逻辑层能力大部分已经完成了迁移，我们需要做的仅仅是对前端展现层和能力组合协同部分进行重构和迁移即可。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其次我们看到这种方式下，在数据库后续进一步拆分情况下，我们提供的服务接口本身是不需要进行变更的，即上层的业务应用不需要变更，这个时候只需要对服务实现逻辑进行调整接口。这种解耦本身是相对有必要，原因就是我们在传统架构朝微服务架构转移的时候，并不一定一开始就要考虑数据库层的垂直拆分。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n中台服务的提供我们希望是要将原来业务系统核心的业务能力重新抽取出来，因此涉及到要定制开发服务接口来暴露这些业务服务能力，而且最好的方式就是只依赖于原有业务系统的数据库，而对业务系统原来业务逻辑层已有的业务逻辑能力等进行重写。只有这样才能够真正形成后期完全可以复用的业务能力中台。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n所有中台的各个中心都按微服务架构模式单独设计实现，单独补充并提供接口能力，最终API接口统一注册到API网关朝上层或外部统一提供。</SPAN>也就是说各个中心之间本身松耦合，同时各个微服务中心和已有的各个遗留业务系统之间本身也是一种松耦合的关系。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这种方式下的缺点即是业务逻辑和能力实现往往有两套，在迁移过程中出现的变更需要两处同时修改。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n中台接口能力适配的三种方式</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/c015f27a4236431c93d52d9fd1be71fe?from=pc\" IMG_WIDTH=\"769\" IMG_HEIGHT=\"409\" ALT=\"谈基于平台+应用思想下的企业微服务架构转型\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如上面图所示，在构建新的中台能力服务层的时候，为了对已有的业务系统影响最小，我们需要重新构建中台能力接口，这个接口涉及到一定的适配和定制开发工作量。具体接口的实现本身又包括了三种方式，这个在前面一篇博客文章也谈到过，即：</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n直接连接遗留系统的数据库，来重新开发接口服务。</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n通过遗留系统已有的JAR包引入，来重新开发接口服务。</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n通过遗留系统已有的WS或Rest等接口服务适配，来重新开发接口服务。</SPAN></LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到三种模式中对于数据库这种模式是对业务系统依赖最小的模式，但是这个模式本身也是需要我们重新大量完整性校验，业务规则的模式。这种模式本身就可以看到对遗留业务系统的部分业务规则和能力进行了重写，即这部分业务逻辑规则已经在朝中台能力层逐步迁移。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这种迁移形成的接口服务能力，一方面是构建全新的业务应用可以使用。而同时，我们建议是及时对于PMS或SCM等业务系统，如果有全新的业务模块需要开发，也完全可以基于中台已有的接口服务能力进行，只有这样才容易实现后续的业务系统逐步迁移到中台架构上。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据重构和服务组合是中台另外一个关键能力</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/01f22bdd677641f29cb7b6226508d16a?from=pc\" IMG_WIDTH=\"670\" IMG_HEIGHT=\"392\" ALT=\"谈基于平台+应用思想下的企业微服务架构转型\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于服务组合和轻量服务编排可以先参考我的另外一篇文章</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<a HREF=\"https://www.toutiao.com/i6860399450171376141/?group_id=6860399450171376141\" TARGET=\"_blank\">\n从ESB服务组合编排到NetflixConductor微服务编排</A></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在中台能力构建的时候，一定要考虑数据重构和能力组合，即中台的能力接口不是简单的数据库CRUD能力暴露，也不是已有的遗留接口的简单适配和代理接入。而是真正根据业务流程和业务需求驱动，失败关键的业务能力，将业务能力转变为服务。这种服务本身是粗粒度的，有明确的业务含义，有点类似我们在领域架构设计里面经常谈到的领域服务能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域服务本身统一，有提供领域数据对象的数据类服务，也有提供业务逻辑和规则处理的业务类服务，这些都是领域服务能力。在前期中台构建的时候我们看到数据类服务相对容易构建，但是业务类服务本身较难，因为遗留系统已经实现的业务处理规则和逻辑在代码里面，如果我们用数据库适配模式很容易遗漏已有的业务规则实现。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此在前期中台服务能力构建的时候，建议还是先以查询能力服务能力开放为主来构建。当然我们也可以提供一些基础的领域对象导入服务能力，这种导入服务提供一些基础的数据完整性校验能力，形成业务系统的单据草稿。而实际的业务单据规则处理和流程仍然还是在遗留业务系统中。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n服务组合是中台存在的另外一个关键价值，即我们可以根据业务需求一次返回组合后的领域对象数据，这个领域对象可以是多层结构，可以一次返回。这个领域对象也可能是涉及到多个数据库表之间的关联。如果多个数据库表是跨物理数据库的。我们可以</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n在中台能力实现的时候，调用多次底层原子服务返回多个数据集对象。</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n在中台实现的时候对多个数据集对象进行数据组合，并返回组合后的领域对象。</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n中台层对接口服务进行标准化和规范化</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n中台层在接口服务实现的时候，最好在适配的过程中对对接口服务进行标准化和规范化，即提供标准的WS或Rest接口服务能力，服务预先制定的服务契约或规范要求，同时符合日志审计，安全管控要求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n中台层的标准WS接口服务最后统一注册和接入到API网关，这样API网关本身能够更加轻量，不需要做太多的适配，数据映射，转换等工作。而重点是实现服务代理和统一服务目录提供，负载均衡，日志审计，安全能力，流量控制能力即可。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即这种模式类似于构建了一个<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">厚中台+轻API网关</SPAN>的模式。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n中台能力最终暴露-从API网关到能力开放平台</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/82638ef06aa849928ffcffa7990092c2?from=pc\" IMG_WIDTH=\"741\" IMG_HEIGHT=\"380\" ALT=\"谈基于平台+应用思想下的企业微服务架构转型\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n通过API网关将中台能力接口对外统一提供和管理</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于企业的中台能力服务层，如果是新规划建设，完全可以采用微服务架构和容器化技术进行建设。其中我们可以进行中台各个中心的规划，对于每个中台中心就是一个独立的微服务模块，可以进行完全独立自治的设计开发和后期运维管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n每个微服务模块进行独立部署，可以与容器云平台结合，通过容器资源池来实现计算节点的动态扩展能力。同时对于动态扩展的计算节点在上层进行负载均衡，提供统一的IP地址出口。该层的负载均衡能力需要和容器资源池动态扩展自动结合，因此需要实现微服务框架和容器平台Kubernates资源调度层的融合能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在类似用户中心，项目中心，订单中心等原子服务中心上层，还需要构建领域组合服务中心，实现原子服务的能力组合。该组合能力提供需要调用原子中心的各个原子服务能力。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n由于组合服务本身存在分布式事务的问题，因此需要考虑对于前期组合类服务的提供，最好以查询组合类服务接口为主，对于查询类组合服务出现服务异常一般不存在具体回退的问题。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n中台各个服务中心将其负载均衡后的服务地址再次接入到上层的API服务网关中，通过API网关提供统一的服务目录，同时通过API网关来实现安全，日志，流量控制，服务代理等关键能力。对于API网关的详细介绍和说明，可以参考我发布的上篇文章。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<a HREF=\"https://www.toutiao.com/i6862494582203122189/?group_id=6862494582203122189\" TARGET=\"_blank\">\n一文详细讲解API网关核心功能和API管理扩展</A></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n由于当前中台服务能力中心的构建以代理适配模式为主，即数据源头仍然是已有的遗留系统的各个数据库，因此对于中台能力中心实际上不需要有自己的Ower数据库，仅仅是业务逻辑层的服务部署包。除非出现传统业务系统所有业务功能迁移到中台的情况，才涉及到需要重新规划中台模块对应的数据库。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在中台能力服务层构建的时候，可以采用远行提供的DevOps支撑平台，该支撑平台提供对容器化资源池，部署流水线，微服务架构，API服务网关等整体打包解决能力。可以进一步实现中台能力层的快速开发和交付上线。对于远行DevOps支撑平台的介绍可以参考我博客前面发过的文章。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n从API网关到能力开放平台</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/0ac33bd263bd46539969f439fa439791?from=pc\" IMG_WIDTH=\"757\" IMG_HEIGHT=\"397\" ALT=\"谈基于平台+应用思想下的企业微服务架构转型\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先对于能力开放平台我在前面的思考里面做了一件重要的事情，就是将能力引擎和能力运营两者分开，能力引擎即我们常说的能力聚合网关，ESB服务总线，API网关等。可以看到能力开放平台构建你可以选择任何一个能力引擎都没有关系，只要能力引擎能够满足标准的能力注册接入，能力基础管控（安全，日志，流控）即可。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在能力引擎剥离后，最重要的就是能力运营平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在我们没有谈能力开放平台的时候，我们会在能力引擎上方增加一个能力管控平台。而能力管控平台主要做两个方面的事情，一个是实现API接口服务的全生命周期管理，一个是实现接口运行后期的运行监控治理。因此对于能力引擎上方，我们可以考虑拆分为三方面内容</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n能力开发中心：面向开发者，帮助开发者快速的进行能力接入和消费</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n能力运营中心：将能力服务作为商品去卖，因此涉及到服务订购签约，计费等关键功能</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n能力运维中心：实际上包括运维中心和运行监控中心两个方面的内容。</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而在这之上即是我们常说的门户层，实际的门户也应该包括了运营门户，开发者门户，合作伙伴门户。这里要注意的是门户层更多的是集成和聚合了底层各个业务模块的功能，只是区分业务场景和角色进行聚合。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/d62569ab008e405c899353fa895ca6b2?from=pc\" IMG_WIDTH=\"764\" IMG_HEIGHT=\"376\" ALT=\"谈基于平台+应用思想下的企业微服务架构转型\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n具体的能力开放平台内容应该包括如下几个方面：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n开发接入平台</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n能力开放平台是构建一个大生态体系，那么对于API接口服务能力的提供不仅仅需要依靠自有能力，更加重要的就是要依赖于开发商和合作伙伴的可共享能力接入。那么就必须为开发商提供一整套方便他们进行API快速开发，快速接入的平台，工具，标准规范流程，以方便他们进行API接入，同时尽量实现API接口服务接入中的自服务过程。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n具体来说开发接入平台可以提供API的快速开发工具或开发环境，API开发框架，API开发指南和示例参考，API开发流程，API开发规范，API接口测试方法，API接口服务开发接入流程指南等。所有这些目的就是要让接入的API遵循一套标准的方法和流程，同时让开发商能够快速理解和学习掌握，方便API快速接入。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n能力平台（能力库+服务目录）</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这里的能力平台更多是能力引擎平台，实际上就是应该是ESB总线引擎，API网关或其他API接口服务集成平台。该引擎重点就是实现API接口的注册接入，API的服务代理和统一服务目录提供，API的安全，日志，流控，监控等各种拦截能力。能力平台简单来说就是要形成标准的API接口服务能力目录并向上提供。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在原来我们谈能力平台的时候往往会将能力引擎和上层的能力运营平台进行整合，形成一个完整的大平台系统，而这次在思考的时候进行拆分，拆分的目的就是实现底层引擎和上层能力运营平台的解耦。即上层的能力运营平台实际上可以兼容和适配底层多种能力引擎，这样更加方便进行组合。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n运行监控平台(对API接口服务的运行监控）</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n运行监控平台即要实现对API接口服务的运行监控，性能分析，异常问题的实时告警和预警，接口服务运行的统计分析等。同时对于运行监控平台还需要基于最基本的原子服务监控层面进行延展，即向下还涉及到具体的中间件，数据库的资源监控，向上还涉及到服务链，端到端业务流程的监控。即：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n资源监控：服务器层面，中间件层面（包括数据库，应用服务器中间件），JVM监控</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n服务监控：最基本的原子服务监控能力，服务运行监控，也包括服务链监控能力，APM监控</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n流程监控：实现端到端业务流程的监控，而最终的流程监控可以通过服务链监控进行串联</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n运营管理平台</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n运营管理平台是整个能力开放平台中关键的生态应用，即我们涉及到的平台提供商，运营商，开发商，服务和内容提供商，运营商等最终都会使用运营管理平台，通过运营管理平台实现最终服务的整合。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n运营管理平台在前面自己已经谈过多次，实际上底层可以参考电商平台的原型，而里面最重要的就是服务受理和订购中心，产品或服务配置中心，服务开通，服务计量和计费中心，客户中心几个关键模块。最终解决的问题就是让我们开放和接入的API服务接口能够最终配置为可以销售和运营的产品，并进行计费。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n营销平台</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n大部分在构建能力开放平台的时候往往不会涉及到营销平台，但是类似典型运营商的BSS域就一定会有营销中心和本地化的服务网厅，而这些网厅的服务人员就需要一个营销平台为用户提供各种服务能力。在我们谈物联网云平台的时候也谈到过，在构建智慧家庭的完整生态平台的时候，往往还涉及到我们的产品服务地推，这些也涉及到需要有相应的平台和应用进行支撑。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n运维平台</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n运维平台属于后生命周期，即在产品服务订购后，需要对服务消费中的问题进行处理和解决，并提供相应的售后服务能力，因此这块实际上需要有一个面向最终客户的运维管理平台和运费服务平台来进行支撑。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n自服务平台(开发商门户，合作伙伴门户等）</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n自服务平台面向最终提供给用户的功能聚合，并实现客户的自服务能力。因此自服务平台本身又是一个面向用户角色的功能聚合平台。可以看到对于前面谈到的服务接入，能力共享运营，运维服务，服务运行监控等各个子平台都需要向最终的用户提供功能服务，而自服务平台则是这些功能服务能力面向用户的聚合，而不是全新构建的新功能。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/b3caf98d0e9341feba29d594f94fabbc?from=pc\" IMG_WIDTH=\"746\" IMG_HEIGHT=\"391\" ALT=\"谈基于平台+应用思想下的企业微服务架构转型\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_18261598080407470\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n对于私有云PaaS平台规划详细内容可以进一步参考图书《SOA与大数据实战-企业私有云平台规划和建设》，具体购买地址，大家可以在京东或当当搜索\nSOA与大数据 即可以搜索到。</P>\n</BLOCKQUOTE>\n<br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Sat, 22 Aug 2020 07:12:52 +0000","feedId":4798,"bgimg":"http://s12.sinaimg.cn/mw690/001l8XD7zy7FPN61MaTdb&690","linkMd5":"addcc7ff0f50afaba1a0db2be7debbb0","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn42@2020_2/2020/08/24/22-09-21-734_392e21380aad0205.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s12.sinaimg.cn/mw690/001l8XD7zy7FPN61MaTdb&690":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn42@2020_2/2020/08/24/22-09-21-734_392e21380aad0205.webp","https://p3-tt.byteimg.com/origin/pgc-image/3b7b127519274a3c8ab18aa6e6a9be4a?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn70@2020_2/2020/08/24/22-09-25-545_60a55f39d904ab24.webp","https://p3-tt.byteimg.com/origin/pgc-image/ac2022a96d08497281d84ed7d06007b7?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn38@2020_2/2020/08/24/22-09-26-783_f8f91403d1120329.webp","https://p3-tt.byteimg.com/origin/pgc-image/d7f5aafc78d34fa4bbcbbdb2ca567358?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn29@2020_3/2020/08/24/22-09-26-775_098dfbc08f8773c9.webp","https://p3-tt.byteimg.com/origin/pgc-image/c1074d3bb83e41149123ef509528cffd?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn54@2020_6/2020/08/24/22-09-28-587_f0b8b2c36075b52f.webp","https://p1-tt.byteimg.com/origin/pgc-image/c015f27a4236431c93d52d9fd1be71fe?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx/cdn89@2020_6/2020/08/24/22-09-27-234_a6b3ee10f0b57047.webp","https://p6-tt.byteimg.com/origin/pgc-image/01f22bdd677641f29cb7b6226508d16a?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn5@2020_5/2020/08/24/22-09-27-494_03ed5fa3ab4cdc30.webp","https://p1-tt.byteimg.com/origin/pgc-image/82638ef06aa849928ffcffa7990092c2?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn61@2020_4/2020/08/24/22-09-25-657_34b7315c376e9de4.webp","https://p3-tt.byteimg.com/origin/pgc-image/0ac33bd263bd46539969f439fa439791?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn17@2020_2/2020/08/24/22-09-25-780_e83a49cb1bf1dd24.webp","https://p1-tt.byteimg.com/origin/pgc-image/d62569ab008e405c899353fa895ca6b2?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn89@2020_2/2020/08/24/22-09-25-644_ca045032e87cd599.webp","https://p6-tt.byteimg.com/origin/pgc-image/b3caf98d0e9341feba29d594f94fabbc?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn78@2020_4/2020/08/24/22-09-31-603_8e41b6599bccdadc.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn17@2020_6/2020/08/24/22-09-30-958_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1598306959913},{"createdTime":"2020-08-25 06:09:19","updatedTime":"2020-08-25 06:09:19","title":"对DevOps过程实践的一些思考和总结(200819)","link":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7FKX5q7iUd0\" TARGET=\"_blank\"><img SRC=\"http://s1.sinaimg.cn/mw690/001l8XD7zy7FKX5q7iUd0&#38;690\" NAME=\"image_operate_48131597819175621\" /></A>\n<div><br /></DIV>\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从2019年上半年，我们启动了DevOps过程实践相关工作，其中既包括了整个容器云+DevOps支撑集成交付过程整合，也包括了我们传统单体系统的微服务架构化改造。本文主要对项目DevOps过程实践的一些内容进行总结。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n些方面进一步做下阐述。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n对于DevOps基本概念的理解</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/8a340c466d494caa9178948ef08f1fdb?from=pc\" IMG_WIDTH=\"707\" IMG_HEIGHT=\"359\" ALT=\"对DevOps过程实践的一些思考和总结\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_47321597819177553\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先看下DevOps的定义：</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\nDevOps（英文Development和Operations的组合）是一组过程、方法与系统的统称，用于促进开发（应用程序/软件工程）、技术运营和质量保障（QA）部门之间的沟通、协作与整合。它的出现是由于软件行业日益清晰地认识到，为了按时交付软件产品和服务，开发和运营工作必须紧密合作。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在18年12月11日，当时写过一篇对DevOps实践价值的思考，其中的重点是在谈DevOps，容器云和微服务架构框架的三元一体化。只有三者相互结合才能够产生DevOps最佳实践。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nDevOps = Dev + Ops + QA</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/b10f278990fa4d3b9d1276e6354e9453?from=pc\" IMG_WIDTH=\"755\" IMG_HEIGHT=\"413\" ALT=\"对DevOps过程实践的一些思考和总结\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于DevOps首先还是要回到这个概念的最基础理解，即是开发，运维和QA工作本身的三元一体化。在有篇文章里面谈到一点，对自己很有启发，就是原来的软件开发流程，分工边界，包括了开发，SCM配置管理，QA，测试，运维等各个环节，相对来说分工明确，但是在核心软件交付流程中流转太多，自然导致效率低，同时也导致更多的上下游扯皮。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而DevOps带来的一个关键点就是，Dev处于整个核心交付流程中，而且这个过程通过方法工具等的支撑完全实现自动化和流水线作业，而对于SCM配置，QA等则处于核心流程的外围角色，即这些支撑过程角色不参与核心交付流程，只是对交付完成的内容进行管理验证。只有这样才容易实现整个交付流程的自动化。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n开发和运维</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/7e683ca92a6e460190c5826b24a651f2?from=pc\" IMG_WIDTH=\"770\" IMG_HEIGHT=\"391\" ALT=\"对DevOps过程实践的一些思考和总结\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如何理解开发和运维？实际上这里面最关键的一点就是运维的基因已经融入在了整个开发过程中，再展开说明下，就是实际在系统上线后的运维阶段，传统是运维人员发现故障问题，然后转给开发再去分析和定位。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而实际上一个自动化可运维的软件，在出现问题后自动就会转为开发可理解的语言之间转到开发人员。也就是说整个过程里面并不需要运维去太多干预。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即传统路线是系统运行-》运维发现硬件故障-》运维发现中间件故障或性能问题-》转开发分析解决。而新的路线是系统运行-》各类问题直接预警或通知到对应的开发。当然整个过程硬件故障还是需要工程人员解决。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其次，传统的持续交付，特别是测试环境朝生产环境的持续交付，一定需要专门的运维和工程人员接入，进行严格的版本管理和发版流程管理。而开发运维一体化后，我们希望的是整个朝生产的持续交付过程也是自动化和流水化的过程，最多只是增加需要的人工审批环境而已。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n开发和配置和QA</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即使是在传统的持续集成模式下，我们看到整个过程分工也是开发每日将修改好自测通过的代码Check\nin，而由配置管理员负责进行自动化构建和打包，打包完成后进行自动化的部署。在部署完成后通过测试人员进行测试和验证，验证有问题后测试人员提交Bug并反馈给开发。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n简单来说，传统方式下类似配置或测试人员参与了整个软件交付过程，那么整个过程就一定会有协同和沟通，产生效率问题。类似开发提交的代码构建不通过，可能需要反复沟通，或者说在分支合并的时候，也需要双方反复沟通确认等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于开发和配置QA一体化，简单来说就是在整个持续交付过程中，不再需要过程支撑类人员的参与，这些人都在外围，整个持续交付构成完全自动化和流水线作业，类似QA或测试，只是对最终交付的结果进行检查和测试，交付过程中（包括代码提交合并，构建，打包部署，环境迁移）等各类问题全部由开发负责，这些问题属于开发内部的问题，由开发主导去解决更加高效快捷。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nDevOps的核心还是在于持续集成和持续交付</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/f28bc47292204513aa30ed66350b86b2?from=pc\" IMG_WIDTH=\"781\" IMG_HEIGHT=\"581\" ALT=\"对DevOps过程实践的一些思考和总结\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n个人理解对于DevOps的核心仍然是在持续集成和持续交付上，要实现整个持续集成就包括了配置版本管理，自动化构建和打包，自动化部署，自动环境迁移，自动化单元测试或冒烟测试等诸多内容。这些内容都为核心的持续交付目标而服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在DevOps和容器云结合的时候，我们增加了基于Docker容器的自动化部署，资源动态调度和集群管理能力。在和微服务架构结合的时候，增加了对微服务基础管理平台框架，微服务网关的集成能力。在和运维过程集成的过程中增加了类似ETL日志分析，类似Zabbix，Nagios等平台监控预警能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nDevOps和文化组织变革</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n企业要进行DevOps实践，另外一点谈的比较多的就是要进行文化和组织变更，这句话如何理解，即一个DevOps最佳实践不是简单的各种工具的堆砌，而是涉及到企业内部开发，QA和运维团队调整，开发框架，开发流程等诸多方面的调整，最终人+工具+DevOps方法论融为一个整体，才能完成最佳实践。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nDevOps = 工具 +\n文化。</SPAN>上面是对于DevOps实践的另外一个关键说法，即工具和文化的集成，只有工具不行，还需要在组织和文化上面做调整和变更，还需要整个开发运维团队转变传统的开发和思维模式。这里面究竟涉及到哪些文化，个人理解至少涉及到敏捷文化，质量文化，流程文化，客户服务这几个大的方面。只有真正理解了这些文化，DevOps实践才能够在企业内落地实施，并取得好的效果和收益。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n工具从下朝上完成了整体集成，但是文化的推行一定是从上到下的。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n一个完整的DevOps解决方案应该包括的内容</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于DevOps实践，可以看到涉及到业务，技术，工程，管理规范，组织等多个方面的内容。DevOps过程实践不是简单的开源技术或工具链集成，更加重要的是整个研发文化，组织，研发项目过程管理的协同改进。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n同时对于对于DevOps实施同样需要目标和业务场景驱动进行持续优化和完善。对于DevOps过程实践我们可以看到实际上包括如下方面的内容：</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n传统软件过程和单体技术架构存在的问题和需求分析</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nDevOps支撑平台的搭建和总体架构</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nDevOps支撑平台涉及到的工具集集成</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nDevOps实现端到端流水线作业和持续交付过程</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nDevOps与容器技术集成实现自动化部署和环境迁移能力</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n基于DevOps的度量分析和最佳实践</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nDevOps平台和微服务开发框架的集成</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nDevOps平台和PaaS平台技术服务组件和技术服务能力的集成和最佳实践</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n基于DevOps平台实现的典型案例和场景分析</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n下面对上面这些点做一个简单的展开说明</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n1. 传统软件过程和单体技术架构存在的问题和需求分析</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n再次说明一下，不要为了微服务和DevOps而去迎合，要业务和技术需求驱动，比如当前软件开发过程，软件交付上究竟有哪些问题，是否已经影响到效率和质量。包括我们说的微服务架构的数据库拆分也是一个道理，技术成熟度不够的时候，你完全可以数据库不拆分，只拆上层组件，这也是折中可行方案。对于持续交付同样，前期你完全可以不用DevOps和容器化，仅仅实现传统持续集成最佳实践即可。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n上任何新东西都必须要想清楚，具体解决的是资源，成本，效率，后期管控治理哪方面的问题。一定要有实际的需求和问题驱动，否则很难真正实践成功。包括我们现在看到的很多互联网架构最佳实践，都是互联网应用在面对海量数据，大并发实际场景下逐步积累和演进出来的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n2. DevOps支撑平台的搭建和总体架构</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/9f0b30f5f618450187cfb6aaf6764588?from=pc\" IMG_WIDTH=\"848\" IMG_HEIGHT=\"430\" ALT=\"对DevOps过程实践的一些思考和总结\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个DevOps支撑平台在搭建总体架构的时候可以看到，其核心更多的是围绕持续交付进行的各种能力的集成和自动化，而不是说其本身新创作了什么能力。对于这种集成本身包括几个关键部分。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其一是和Docker容器化平台的集成，以实现自动化部署和环境间的动态迁移，包括灰度发布，资源动态调度，集群等关键能力。其二是和微服务平台的集成，类似开源的SpringCloud平台中的注册中心，微服务网关的集成。其三包括和前面提到的PaaS平台各技术组件和服务的集成。其四则是对持续交付过程中的涉及到的各类工具链的集成，包括了配置和代码管理，代码静态检查，自动化编译构建，自动化测试，自动化运维，自动化监控，日志管理等各种工具的集成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个DevOps平台需要提供对源代码管理，开发，编译构建，打包，部署，测试，运维完整的能力支撑，同时通过流水线设计将这些任务过程进行自动化串联。一个流水线既可以是完全的自动化流水线，也可以包括人工处理和检查节点。流水线可以对上述动作和任务进行可视化的设计和编排。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n5. DevOps与容器技术集成实现自动化部署和环境迁移能力</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/3e3cacc476aa48d390d399b63c2d18be?from=pc\" IMG_WIDTH=\"778\" IMG_HEIGHT=\"427\" ALT=\"对DevOps过程实践的一些思考和总结\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个DevOps支撑平台离不开和容器化PaaS平台的集成，即最终的编译构建完成的内容形成镜像并放到镜像仓库，后续部署，环境迁移，资源扩展基于镜像仓库进行快速的拷贝和复制。对于Docker容器一般会和K8S结合来实现资源的动态调度，集群管理能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n环境迁移是基于镜像进行环境拷贝和迁移，而不再需要重新构建和打包，这也是我们原来在谈持续集成技术的时候一直强调的一点。只有这样才能够保证测试通过的包就是最终部署到生产环境的包。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n6. 基于DevOps的度量分析和最佳实践</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/f580b973d6724e6991e3d1d30046a705?from=pc\" IMG_WIDTH=\"963\" IMG_HEIGHT=\"500\" ALT=\"对DevOps过程实践的一些思考和总结\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在谈CMMI的时候我们经常会谈到软件度量，而对于DevOps也有标准的成熟度模型，我们需要对DevOps执行构成中的关键活动和任务，其执行的质量和效率进行度量分析，以确认DevOps过程执行效果，并指导后续的持续改进工作。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这里面既会涉及到构建，部署和自动化测试的效率指标，也会涉及到传统的代码检查和人工测试，变更处理，缺陷泄露等质量指标等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n7. DevOps平台和微服务开发框架的集成</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/ce8f249191cf44d4b5cb3f842ca09a7b?from=pc\" IMG_WIDTH=\"900\" IMG_HEIGHT=\"464\" ALT=\"对DevOps过程实践的一些思考和总结\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实际上要把这个功能谈透彻并不容易，一涉及到微服务架构开发模式，就涉及到基于微服务架构下的团队拆分和多团队协作，就会引入类似微服务网关和注册中心等基础能力。就会涉及到一个独立的微服务模块要真正能够运行并进行单元测试，离不开其它微服务模块提供的API接口服务能力支撑。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此这种集成不是件的对开源微服务框架在开发态的集成，更多的是开发态如何和运行态集成和协同。如何在多团队协同模式下来实现多项目，多微服务模块的集成能力。实际上这个问题在我13年左右在谈私有云PaaS平台的持续集成的时候详细分析过，但是现在感觉在谈微服务架构和DevOps的时候反而没有谈透彻。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n8. DevOps平台和PaaS平台技术服务组件和技术服务能力的集成</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个也是需要专门写文章来谈的，就是对于PaaS平台提供的各类技术组件和技术服务能力，如何和整个DevOps持续交付过程集成起来。当然对于单个技术组件的开发，测试和部署上线也可以使用DevOps支撑平台来完成。在原来谈私有云PaaS平台的时候，我们谈到过一个概念，即一个组件要能够运行起来需要两个方面的服务集成，一个是技术平台提供的技术服务能力集成，一个是横向的其它微服务模块组件的接口服务集成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如何集成，包括在集成后如何进行集成测试，都是需要考虑的问题点。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n基于微服务架构开发过程持续集成实践</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n虽然对于DevOps过程不强制要求采用微服务架构进行开发，但是如果你采用微服务架构开发那么更加适合实施DevOps持续集成和交付过程。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n微服务模块划分</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在微服务模块划分清楚后，各个微服务模块划分到不同的团队和人负责，那么每个团队对于自己负责的模块，在配置管理库和代码管理，数据库，开发项目上完全独立一套。负责A模块的团队不应该，也完全没有必要看到B模块开发的代码，而只需要关心接口即可。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n微服务模块划分清楚后，实际上有个重点工作就是前期的架构设计和接口设计，需要先把各个微服务模块间的交互接口初步定下来，这个总体设计完成后再开始各个微服务模块的并行开发。而不是在开发中，想到需要什么接口就临时开发，这样很容易导致后续的接口混乱。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n环境准备和微服务模块的开发</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n独立的项目，独立的代码管理，独立的数据库，但是不同的团队是基于相同的微服务开发框架，类似SpringCloud或其他开发框架进行微服务模块的开发。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nA模块要调用B模块的接口才能够完成相应功能的开发和验证，这个时候就需要B模块提前准备好可用的接口并部署，在多模块协同下注意，一定是接口开发先行，即要确保接口提前开发出来可供其它模块测试用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n各个模块开发完成的接口不能部署在自己本机，因此要有独立的开发环境来部署这些接口，当然在开发环境还需要有类似SpringCloud中基础注册中心和管理中心的部署。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n开发人员的本机在自测的时候可以调用开发环境提供的API接口服务能力，因此自测还是可以在本机完成，比如A模块调用B模块的API接口服务。但是需要B模块提前已经将可用的接口服务部署到开发环境。当然对于A模块而言如果也提供API接口给其它模块使用，也需要提前部署到开发环境并准备就绪。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nA模块的开发项目里面，没有B模块的任何代码，而只是基于API接口远程调用接口能力。而这里最好的思路是实现一个本地化的接口代理包，即代理包封装一层后实现调用的时候是本地方法，在接口代理中再将本地方法转化为远程API接口调用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果A模块依赖的B模块，C模块提供的API接口服务都没有准备好，按道理A模块是无法进行后续开发的。基于传统集成思路，A模块也可以自己实现了一个本地API的接口模拟，在B模块或C模块准备好后再配置为调用远程API接口服务能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n编译构建</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/75a3712e546f44b5a3abd2d73e013f8c?from=pc\" IMG_WIDTH=\"918\" IMG_HEIGHT=\"453\" ALT=\"对DevOps过程实践的一些思考和总结\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n按持续集成思路，开发要管的就是自己开发好的代码在本地编译通过，同时在本地测试通过后，将代码Check\nin到源代码管理库，后续的编译构建完全是自动化的过程。例如完成通过Git + Maven +\nJekins的结合来完成整个编译构建过程。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n独立的源代码管理库，各个微服务模块的项目相对也要独立，各自管理并进行权限隔离。对于数据库变更脚本注意也要进行版本管理和脚本入库，实际上最难以管理的还是在数据库的变更上。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n构建服务器和源代码管理服务器可以在相同服务器，也可以在不同的服务器上。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实际的编译构建过程，首先是update到最新的源代码，然后基于常规持续集成的思路，例如Maven+Jekins完成自动化编译构建，最终形成部署包。这个过程中远程API接口调用是松耦合方式调用，因此不会对组件依赖性进行检查，也不会出现编译依赖无法通过的问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n部署过程</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n构建完成后形成可部署的部署包，按容器集成思路，首先要制作镜像，并推送到镜像库存储，然后再完成部署操作。部署完成后形成并发布可访问的地址信息。该过程会涉及到一些自动化脚本的编写，可以用Jekins，也可以用Puppets等各种工具来实现这些脚本自动化。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实际的部署操作最终由K8s来接管，包括具体的初始化部署容器数量，负载均衡设置等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在采用微服务架构开发的时候，多个微服务模块同享一套服务注册中心，包括微服务网关等，这些基础内容需要提前部署到开发环境中，并在可用状态。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n微服务模块中API接口注册到网关</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/0b85d32c23bd4eeb9f0044e7995807df?from=pc\" IMG_WIDTH=\"846\" IMG_HEIGHT=\"491\" ALT=\"对DevOps过程实践的一些思考和总结\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果整体架构中，所有的微服务模块都不需要和外面的业务系统打交道，那么你可能并不需要使用微服务网关，但是如果存在整个架构朝外部提供API接口服务能力，包括你的APP端也需要理解为外部。那么就一定涉及到微服务网关的使用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n微服务模块中的接口方法不是所有的都需要注册到微服务网关上面，要梳理清楚，究竟哪些接口方法要注册到微服务网关上面。而这块注册操作我们希望是完全自动化注册并运行。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即微服务模块部署-》k8s发布可访问的API地址-》微服务网关封装后暴露最终的API服务地址</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而这个API服务地址是可以给外部系统或前端APP使用的一个地址。对于其它应用的开发我们可以使用该地址。如果说到DevOps支撑平台，那么在集成微服务网关能力后，最基本的就是要有服务注册和管理能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n环境迁移能力</SPAN><br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/3a8c5a9c51584a3aa61e6b9339c01ffd?from=pc\" IMG_WIDTH=\"759\" IMG_HEIGHT=\"438\" ALT=\"对DevOps过程实践的一些思考和总结\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n环境迁移难的不是单个微服务模块的环境迁移，而是相关微服务模块多个部署环境同时的自动化迁移。比如A模块调用B模块的接口发生变化，这个需要同时对A和B两个模块进行环境迁移和重新部署。按持续集成的思路，从开发-SIT-UAT-生产的多套环境，一定有一个环境看板视图，能够可视化的看到各个微服务模块在每个环境的部署版本情况。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n环境迁移按道理应该进行独立的流水线设计，特别是涉及到多个模块的时候。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n性能监控和日志管理</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于资源和中间件监控，对于Zabbix或Nagios等完全能够实现，最难的还是APM性能监控和服务链监控等，对于这些监控的实现，一定要提前在微服务开发框架中进行标准规范定义，相关的代理组件的植入。如果采用标准的开发框架模型，你也可以考虑在镜像制作的时候将代理植入到镜像文件中并启动运行。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 24px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; line-height: 32px; color: rgb(34, 34, 34); position: relative; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n基于DevOps实施和组织变革</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/42520f2a29744af6ac2aad0674db9185?from=pc\" IMG_WIDTH=\"885\" IMG_HEIGHT=\"438\" ALT=\"对DevOps过程实践的一些思考和总结\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于DevOps过程实施不仅仅是指DevOps支撑平台和标准规范体系，也包括了容器化PaaS平台，微服务架构开发框架和标准规范体系，基础技术服务平台等诸多内容，而这些内容实际上在我最近刚出版的<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">《SOA与大数据实战-企业私有云平台规划和建设》</SPAN>一书里面都有涉及。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n只是持续集成变成了DevOps，组件化和服务化开发变成了微服务架构，基于CloudFoundry的PaaS平台变成了基于Docker容器\nKubernates的轻量PaaS平台，对于传统的ESB服务总线和集成平台变成了微服务网关或API网关。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于大型的基于DevOps思路下的微服务架构开发和实践，如果我们作为完整的基础平台开发商和集成商，那么在实施这个项目的时候应该具备哪些能力。而我们经过这几年的发展和技术沉淀，本身也具备提供这种基础架构平台并进行实施落地的能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n1. 微服务架构总体设计和规划团队</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/d4f6ed42de1d477d8b3c9b222007b37e?from=pc\" IMG_WIDTH=\"598\" IMG_HEIGHT=\"669\" ALT=\"对DevOps过程实践的一些思考和总结\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个偏业务和实施层面，即进行微服务架构的总体设计，而总体设计里面最重要的又是微服务模块的划分，模块划分后各个微服务模块的接口服务设计。这个需要有专门的既熟悉业务又懂技术的人往往才能给胜任，比如传统软件工程里面的系统分析员或资深的软件需求顾问角色是比较适合的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个规划不同于一个企业完整的信息化和IT架构规划，可以理解为企业某一个业务域的IT总体架构规划设计，当时对于IT架构规划的总体思路我们仍然可以参考，包括流程和业务建模，关键数据对象识别和数据架构设计，应用架构设计，技术架构设计等。特别是在应用架构设计中需要进一步体现集成架构设计，体现平台\n应用的构建思想。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n2. DevOps支撑平台技术团队</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个可以看做是DevOps支撑平台这个产品提供加技术支撑团队，即在有了DevOps支撑平台后，我们会对已有的Docker容器化PaaS，持续集成各类工具集全部进行打包提供，而真正面对开发者的就是DevOps支撑平台，这个团队即包括了产品本身的开发，也包括了对于DevOps支撑平台在使用中的技术支持。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n3. 微服务开发框架和接口设计技术支撑团队</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/31714e719d4a49599c640c55803cb02f?from=pc\" IMG_WIDTH=\"970\" IMG_HEIGHT=\"508\" ALT=\"对DevOps过程实践的一些思考和总结\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果我们的微服务架构开发框架选择的是SpringCLoud话，那么这个团队重点就是在总体设计完成微服务模块已经划分好后，确保各个模块的开发商严格按照已经制定好的微服务框架，技术标准规范，技术设计开发规范，集成规范进行各自微服务模块的开发。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n由于即使你没使用微服务开发框架或架构，你也可以使用DevOps支撑平台，因此对应微服务架构的实践额技术支撑，最好和DevOps技术支撑团队进行分离。这个团队核心是确保微服务架构总体设计团队的输出成果，包括前期已经制定好的微服务架构技术标准规范能够真正落地。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在采用微服务架构框架的时候，里面涉及到类似微服务注册中心，微服务网关等公共基础支撑组件，而这些基础组件的进一步定制开发，封装和实施也应该由该团队来支撑。对于微服务网关，包括服务的注册和接入，我们希望的是在DevOps整个实施过程中实现完全的自动化。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n4. 基础技术平台开发和技术支撑团队</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n按传统平台\n应用构想，在整个项目实施过程中还涉及到公共的基础技术平台建设的问题，其中最大的就是基础流程引擎能力提供，4A能力提供。其次就是涉及到日志，文件，缓存，消息，通知等各种技术服务能力提供。而这块可以统一纳入到基础技术平台开发和支撑团队。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于技术服务的开发，每个技术服务本身也是一个独立的微服务架构模块，完全可以遵循我们已经制定的微服务架构开发条件和技术标准进行开发，并按标准提供API接口服务能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n5. QA，测试，过程支撑团队</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 16px; line-height: 28px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\"><img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/f8eb27257f4a4cf6875b2f24742b0c1d?from=pc\" IMG_WIDTH=\"815\" IMG_HEIGHT=\"501\" ALT=\"对DevOps过程实践的一些思考和总结\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个团队也是一开始就要建立，包括了质量保证，评审，配置管理和检查，测试团队。注意由于实施了DevOps实践，那么这个团队和开发团队产品交付之间将处于更加松耦合协同状态，而且边界也将划分的更加清楚。当然传统很多进行配置管理，构建，代码检查等工作也全部在DevOps实施后转为自动化处理和执行。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n6. 运维监控团队</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意，这个团队一开始就要成立并进入到整体项目实施和管理，而不是等到最终的开发上线后再介入。一开始介入的好处就是确保整个项目在交付过程中就具备可运维属性。同时运维团队更加强调运维监控的自动化能力，传统的手工重复运维过程要在DevOps实施后被进一步替代。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n也正是这个原因，在一个完整的DevOps和微服务架构实施过程中，提前就需要一个完整的运维监控平台，这个平台不是资源监控层面，而是需要在中间件服务监控层面，包括我们常说的APM应用性能间和服务链监控能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n要意识到在实施微服务架构后，各个微服务模块间的接口数会呈现指数级增长，模块间的集成也会异常复杂，既包括模块和模块间的横向集成，也包括了模块和底层基础技术平台的纵向集成。因此对于后期的自动化运维，自动化服务监控预警就异常重要，这个必须是一开始就介入并进行评估。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n也就是我们将原有的硬件资源监控，工程运维，服务链监控分析，日志采集监控分析等全部拿出来，合并到单独的运维监控团队，一开始就介入到整个项目实施过程中。</P>\n<br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Wed, 19 Aug 2020 06:38:15 +0000","feedId":4798,"bgimg":"http://s1.sinaimg.cn/mw690/001l8XD7zy7FKX5q7iUd0&690","linkMd5":"268c3e788bfe44127f30d37b52f76eea","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn30@2020_6/2020/08/24/22-09-22-353_bf0c2590a087fab9.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s1.sinaimg.cn/mw690/001l8XD7zy7FKX5q7iUd0&690":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn30@2020_6/2020/08/24/22-09-22-353_bf0c2590a087fab9.webp","https://p6-tt.byteimg.com/origin/pgc-image/8a340c466d494caa9178948ef08f1fdb?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx/cdn65@2020_3/2020/08/24/22-09-27-564_400ad74d1cf465a9.webp","https://p3-tt.byteimg.com/origin/pgc-image/b10f278990fa4d3b9d1276e6354e9453?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn9@2020_4/2020/08/24/22-09-26-333_e116e5a981f78717.webp","https://p3-tt.byteimg.com/origin/pgc-image/7e683ca92a6e460190c5826b24a651f2?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn13@2020_4/2020/08/24/22-09-27-615_79530ef41ca81e6a.webp","https://p6-tt.byteimg.com/origin/pgc-image/f28bc47292204513aa30ed66350b86b2?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn58@2020_1/2020/08/24/22-09-28-357_56fc1e59f6975dbb.webp","https://p3-tt.byteimg.com/origin/pgc-image/9f0b30f5f618450187cfb6aaf6764588?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn98@2020_3/2020/08/24/22-09-28-892_cb6fef45ed1d8e81.webp","https://p6-tt.byteimg.com/origin/pgc-image/3e3cacc476aa48d390d399b63c2d18be?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn46@2020_5/2020/08/24/22-09-29-602_3d3886c99664515d.webp","https://p6-tt.byteimg.com/origin/pgc-image/f580b973d6724e6991e3d1d30046a705?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn81@2020_1/2020/08/24/22-09-29-897_404f18eba309067e.webp","https://p6-tt.byteimg.com/origin/pgc-image/ce8f249191cf44d4b5cb3f842ca09a7b?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn17@2020_5/2020/08/24/22-09-28-899_6b9d799755a67dcd.webp","https://p6-tt.byteimg.com/origin/pgc-image/75a3712e546f44b5a3abd2d73e013f8c?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn34@2020_2/2020/08/24/22-09-28-905_d112aa1df888f07d.webp","https://p3-tt.byteimg.com/origin/pgc-image/0b85d32c23bd4eeb9f0044e7995807df?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn86@2020_1/2020/08/24/22-09-27-070_b57f8c16bbbfe52a.webp","https://p1-tt.byteimg.com/origin/pgc-image/3a8c5a9c51584a3aa61e6b9339c01ffd?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn42@2020_6/2020/08/24/22-09-27-799_4cb9d9a560ead854.webp","https://p1-tt.byteimg.com/origin/pgc-image/42520f2a29744af6ac2aad0674db9185?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn37@2020_3/2020/08/24/22-09-26-326_4081a8efd763128e.webp","https://p1-tt.byteimg.com/origin/pgc-image/d4f6ed42de1d477d8b3c9b222007b37e?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn29@2020_4/2020/08/24/22-09-28-637_57f04e71eaf24f3d.webp","https://p1-tt.byteimg.com/origin/pgc-image/31714e719d4a49599c640c55803cb02f?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn58@2020_3/2020/08/24/22-09-26-156_edf2b74298c1351c.webp","https://p6-tt.byteimg.com/origin/pgc-image/f8eb27257f4a4cf6875b2f24742b0c1d?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn30@2020_5/2020/08/24/22-09-30-307_c54720bef6f9bc7e.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn17@2020_6/2020/08/24/22-09-30-958_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1598306959914}],"record":{"createdTime":"2020-08-25 06:09:19","updatedTime":"2020-08-25 06:09:19","feedId":4798,"fetchDate":"Mon, 24 Aug 2020 22:09:19 +0000","fetchMs":1287,"handleMs":1992,"totalMs":81494,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"52.200.39.230","hostName":"us-006.herokuapp.com","requestId":"4fe82dd9b4b94f81b6f388b6c9d0b8eb_4798","contentType":"text/xml; charset=utf-8","totalBytes":3602680,"bgimgsTotal":10,"bgimgsGithubTotal":10,"articlesImgsTotal":108,"articlesImgsGithubTotal":108,"successGithubMap":{"myreaderx14":4,"myreaderx8":4,"myreaderx15":3,"myreaderx7":4,"myreaderx6":4,"myreaderx16":4,"myreaderx32":4,"myreaderx4":4,"myreaderx10":4,"myreaderx11":4,"myreaderx33":4,"myreaderx3":3,"myreaderx12":4,"myreaderx2":4,"myreaderx13":4,"myreaderx1":4,"myreaderx30":3,"myreaderx31":4,"myreaderx18":4,"myreaderx19":3,"myreaderx":3,"myreaderx25":4,"myreaderx27":3,"myreaderx21":4,"myreaderx22":4,"myreaderx23":4,"myreaderx24":3,"myreaderx5oss":4,"myreaderx29":3},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:29:54","updatedTime":"2020-08-25 04:29:54","id":4798,"name":"人月神话的BLOG","url":"http://blog.sina.com.cn/rss/cmmi.xml","subscriber":null,"website":null,"icon":"http://blog.sina.com.cn/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn49@2020_2/2020/08/24/22-09-19-161_08bc756793a1bd4b.ico","description":"","weekly":null,"link":"http://blog.sina.com.cn"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":24040,"tmpBodyImgCdnBytes":3578640,"tmpBgImgCdnBytes":0,"extra4":{"start":1598306952541,"total":0,"statList":[{"spend":5384,"msg":"获取xml内容"},{"spend":1992,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":68761,"msg":"正文链接上传到cdn"}]},"extra5":108,"extra6":108,"extra7ImgCdnFailResultVector":[null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-018.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":7,"resultList":[200,200,200,200,200,200,200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":7,"resultList":[200,200,200,200,200,200,200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":7,"resultList":[200,200,200,200,200,200,200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":7,"resultList":[200,200,200,200,200,200,200]},"http://us-038.herokuapp.com/":{"failCount":2,"successCount":4,"resultList":[200,200,200,200,null,null]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-014.herokuapp.com/":{"failCount":1,"successCount":5,"resultList":[200,200,200,200,200,null]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://s6.sinaimg.cn/mw690/001l8XD7zy7FT4lWhDL25&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn43@2020_3/2020/08/24/22-09-21-225_748e58e8e16fd458.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2030,"convertSpendMs":9,"createdTime":"2020-08-25 06:09:20","host":"europe64*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312,4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"2.3 KB","compressRate":"33.9%","sourceSize":"6.9 KB"},{"code":1,"isDone":false,"source":"http://s10.sinaimg.cn/mw690/001l8XD7zy7FJDkx8Tva9&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn18@2020_1/2020/08/24/22-09-21-636_f4e8a28b45a614bd.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2426,"convertSpendMs":11,"createdTime":"2020-08-25 06:09:19","host":"us-010*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w0.html","linkMd5ListStr":"908753bf790834c9a28711752dba00de,908753bf790834c9a28711752dba00de","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"2.3 KB","compressRate":"33.9%","sourceSize":"6.9 KB"},{"code":1,"isDone":false,"source":"http://s12.sinaimg.cn/mw690/001l8XD7zy7FPN61MaTdb&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn42@2020_2/2020/08/24/22-09-21-734_392e21380aad0205.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2547,"convertSpendMs":10,"createdTime":"2020-08-25 06:09:20","host":"europe63*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8y8.html","linkMd5ListStr":"addcc7ff0f50afaba1a0db2be7debbb0,addcc7ff0f50afaba1a0db2be7debbb0","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"2.3 KB","compressRate":"33.9%","sourceSize":"6.9 KB"},{"code":1,"isDone":false,"source":"http://s5.sinaimg.cn/mw690/001l8XD7zy7FGxxPuIIa4&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn38@2020_5/2020/08/24/22-09-21-915_662fc76c1ba9dc76.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2844,"convertSpendMs":34,"createdTime":"2020-08-25 06:09:19","host":"us-014*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8vt.html","linkMd5ListStr":"382ac3baaf06fdb958d7222781772ad2,382ac3baaf06fdb958d7222781772ad2","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"2.3 KB","compressRate":"33.9%","sourceSize":"6.9 KB"},{"code":1,"isDone":false,"source":"http://s4.sinaimg.cn/mw690/001l8XD7zy7FOds8AVl53&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn21@2020_5/2020/08/24/22-09-22-048_ffad832a14aac4e9.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2884,"convertSpendMs":12,"createdTime":"2020-08-25 06:09:20","host":"europe-22*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0,327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"2.3 KB","compressRate":"33.9%","sourceSize":"6.9 KB"},{"code":1,"isDone":false,"source":"http://s1.sinaimg.cn/mw690/001l8XD7zy7FKX5q7iUd0&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn30@2020_6/2020/08/24/22-09-22-353_bf0c2590a087fab9.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3135,"convertSpendMs":11,"createdTime":"2020-08-25 06:09:19","host":"us-038*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea,268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"2.3 KB","compressRate":"33.9%","sourceSize":"6.9 KB"},{"code":1,"isDone":false,"source":"http://s6.sinaimg.cn/mw690/001l8XD7zy7FHL3DMPPa5&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn34@2020_2/2020/08/24/22-09-22-348_6654b0ea5d6033a4.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3171,"convertSpendMs":44,"createdTime":"2020-08-25 06:09:19","host":"us-026*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8vw.html","linkMd5ListStr":"614a169fde807ab7c4e8d336c5ca53df,614a169fde807ab7c4e8d336c5ca53df","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"2.3 KB","compressRate":"33.9%","sourceSize":"6.9 KB"},{"code":1,"isDone":false,"source":"http://s4.sinaimg.cn/mw690/001l8XD7zy7FQQOIuPha3&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn25@2020_4/2020/08/24/22-09-22-545_4ffb5ecc7148e6dc.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3326,"convertSpendMs":11,"createdTime":"2020-08-25 06:09:20","host":"europe-60*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yi.html","linkMd5ListStr":"f8502ea8532df0088ac180e125c51cc5,f8502ea8532df0088ac180e125c51cc5","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"2.3 KB","compressRate":"33.9%","sourceSize":"6.9 KB"},{"code":1,"isDone":false,"source":"http://s1.sinaimg.cn/mw690/001l8XD7zy7FM74P1Kw90&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn14@2020_5/2020/08/24/22-09-23-667_21cf40d985472bbb.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":4477,"convertSpendMs":10,"createdTime":"2020-08-25 06:09:19","host":"us-022*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w6.html","linkMd5ListStr":"ba59ea79ddc69b439d474d2e30bb343e,ba59ea79ddc69b439d474d2e30bb343e","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"2.3 KB","compressRate":"33.9%","sourceSize":"6.9 KB"},{"code":1,"isDone":false,"source":"http://s13.sinaimg.cn/mw690/001l8XD7zy7FEXZ7FSc7c&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn10@2020_6/2020/08/24/22-09-24-477_cbb29df6d9b054ea.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3319,"convertSpendMs":10,"createdTime":"2020-08-25 06:09:21","host":"us-034*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8vs.html","linkMd5ListStr":"3dc4a0c726c23dcddecb4f274317ef78,3dc4a0c726c23dcddecb4f274317ef78","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"2.3 KB","compressRate":"33.9%","sourceSize":"6.9 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/f0f854636073456da6d2d0b768a8c9eb?from=pc","sourceStatusCode":200,"destWidth":813,"destHeight":508,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn93@2020_5/2020/08/24/22-09-25-469_5a395fd65d64b6d4.webp","sourceBytes":38048,"destBytes":25202,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":994,"convertSpendMs":21,"createdTime":"2020-08-25 06:09:25","host":"us-038*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"24.6 KB","compressRate":"66.2%","sourceSize":"37.2 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/d48363def21143c69ba531fdd0e33a85?from=pc","sourceStatusCode":200,"destWidth":771,"destHeight":481,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn6@2020_3/2020/08/24/22-09-25-407_3bb73ad4d8b5395f.webp","sourceBytes":64154,"destBytes":57036,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1017,"convertSpendMs":21,"createdTime":"2020-08-25 06:09:25","host":"us-022*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"55.7 KB","compressRate":"88.9%","sourceSize":"62.7 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/large/pgc-image/e525714bece34cbcba8a06c6c6702102?from=pc","sourceStatusCode":200,"destWidth":640,"destHeight":356,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn78@2020_2/2020/08/24/22-09-25-548_3d1c6c2027cb0ea6.webp","sourceBytes":35545,"destBytes":26942,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1127,"convertSpendMs":12,"createdTime":"2020-08-25 06:09:25","host":"us-022*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8vw.html","linkMd5ListStr":"614a169fde807ab7c4e8d336c5ca53df","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"26.3 KB","compressRate":"75.8%","sourceSize":"34.7 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/6bdda2f9fb0b416d96198d4c4f97968d?from=pc","sourceStatusCode":200,"destWidth":803,"destHeight":468,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn26@2020_2/2020/08/24/22-09-25-627_abac48bf22d3c418.webp","sourceBytes":56546,"destBytes":38296,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1154,"convertSpendMs":55,"createdTime":"2020-08-25 06:09:25","host":"us-005*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w0.html","linkMd5ListStr":"908753bf790834c9a28711752dba00de","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"37.4 KB","compressRate":"67.7%","sourceSize":"55.2 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/9523b250a0ca4796b3c11884a13ec6cb?from=pc","sourceStatusCode":200,"destWidth":777,"destHeight":337,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn51@2020_2/2020/08/24/22-09-25-645_bb005c55e0df2e31.webp","sourceBytes":43754,"destBytes":26078,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1155,"convertSpendMs":29,"createdTime":"2020-08-25 06:09:25","host":"us-030*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w0.html","linkMd5ListStr":"908753bf790834c9a28711752dba00de","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"25.5 KB","compressRate":"59.6%","sourceSize":"42.7 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/3b7b127519274a3c8ab18aa6e6a9be4a?from=pc","sourceStatusCode":200,"destWidth":799,"destHeight":478,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn70@2020_2/2020/08/24/22-09-25-545_60a55f39d904ab24.webp","sourceBytes":65910,"destBytes":52058,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1167,"convertSpendMs":28,"createdTime":"2020-08-25 06:09:25","host":"us-001*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8y8.html","linkMd5ListStr":"addcc7ff0f50afaba1a0db2be7debbb0","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"50.8 KB","compressRate":"79%","sourceSize":"64.4 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/8661901e6e1a430d9e1cb11b9dba440d?from=pc","sourceStatusCode":200,"destWidth":813,"destHeight":361,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn2@2020_4/2020/08/24/22-09-25-596_7e2338f2f10efa48.webp","sourceBytes":40307,"destBytes":31720,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1182,"convertSpendMs":30,"createdTime":"2020-08-25 06:09:25","host":"us-014*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w6.html","linkMd5ListStr":"ba59ea79ddc69b439d474d2e30bb343e","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"31 KB","compressRate":"78.7%","sourceSize":"39.4 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/afd4231a68ff4c9293d6535f64a6ddee?from=pc","sourceStatusCode":200,"destWidth":815,"destHeight":552,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn77@2020_5/2020/08/24/22-09-25-463_61b23d1fa1a4e3d0.webp","sourceBytes":125912,"destBytes":101576,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1185,"convertSpendMs":46,"createdTime":"2020-08-25 06:09:25","host":"us-52*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w6.html","linkMd5ListStr":"ba59ea79ddc69b439d474d2e30bb343e","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"99.2 KB","compressRate":"80.7%","sourceSize":"123 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/dfic-imagehandler/c8865992-5a22-41fa-8a98-5060dc9ae90a?from=pc","sourceStatusCode":200,"destWidth":1023,"destHeight":682,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn81@2020_3/2020/08/24/22-09-25-678_fe45921cecf32caf.webp","sourceBytes":106888,"destBytes":22204,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1189,"convertSpendMs":35,"createdTime":"2020-08-25 06:09:25","host":"us-030*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"21.7 KB","compressRate":"20.8%","sourceSize":"104.4 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/e2a8ecf69d274db2ab5ac5d2b8ae6dc5?from=pc","sourceStatusCode":200,"destWidth":793,"destHeight":459,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn1@2020_2/2020/08/24/22-09-25-605_f9efef99458d738a.webp","sourceBytes":74640,"destBytes":60620,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1173,"convertSpendMs":22,"createdTime":"2020-08-25 06:09:25","host":"us-034*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"59.2 KB","compressRate":"81.2%","sourceSize":"72.9 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/8563adbeb55e4381beed8bf0456e53b0?from=pc","sourceStatusCode":200,"destWidth":719,"destHeight":407,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn42@2020_1/2020/08/24/22-09-25-624_bbe0edd54d35567b.webp","sourceBytes":34057,"destBytes":22274,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1199,"convertSpendMs":10,"createdTime":"2020-08-25 06:09:25","host":"us-022*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"21.8 KB","compressRate":"65.4%","sourceSize":"33.3 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/b0afb735251748a5943e314f7b7af12f?from=pc","sourceStatusCode":200,"destWidth":783,"destHeight":477,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn73@2020_1/2020/08/24/22-09-25-610_a5e7cd74c9056a4c.webp","sourceBytes":76212,"destBytes":66748,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1206,"convertSpendMs":29,"createdTime":"2020-08-25 06:09:25","host":"us-034*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"65.2 KB","compressRate":"87.6%","sourceSize":"74.4 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/a936efe0783b4d8f95e75609a3686626?from=pc","sourceStatusCode":200,"destWidth":845,"destHeight":503,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn49@2020_1/2020/08/24/22-09-25-640_ab77173d6039b258.webp","sourceBytes":54198,"destBytes":44802,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1245,"convertSpendMs":47,"createdTime":"2020-08-25 06:09:25","host":"us-029*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"43.8 KB","compressRate":"82.7%","sourceSize":"52.9 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/82638ef06aa849928ffcffa7990092c2?from=pc","sourceStatusCode":200,"destWidth":741,"destHeight":380,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn61@2020_4/2020/08/24/22-09-25-657_34b7315c376e9de4.webp","sourceBytes":52160,"destBytes":33006,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1314,"convertSpendMs":27,"createdTime":"2020-08-25 06:09:25","host":"us-026*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8y8.html","linkMd5ListStr":"addcc7ff0f50afaba1a0db2be7debbb0","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"32.2 KB","compressRate":"63.3%","sourceSize":"50.9 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/0f417dcb5f9544a4bdd9f9dbe8b36c67?from=pc","sourceStatusCode":200,"destWidth":849,"destHeight":411,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn82@2020_6/2020/08/24/22-09-25-751_31b5e4c4b31e20ca.webp","sourceBytes":66783,"destBytes":52522,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1376,"convertSpendMs":22,"createdTime":"2020-08-25 06:09:25","host":"us-010*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w0.html","linkMd5ListStr":"908753bf790834c9a28711752dba00de","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"51.3 KB","compressRate":"78.6%","sourceSize":"65.2 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/large/pgc-image/694516a196df4e5489a31215cb7d9b8f?from=pc","sourceStatusCode":200,"destWidth":640,"destHeight":431,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn62@2020_4/2020/08/24/22-09-25-855_663beaa4c16f4ed7.webp","sourceBytes":61445,"destBytes":37390,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1372,"convertSpendMs":38,"createdTime":"2020-08-25 06:09:25","host":"us-005*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8vw.html","linkMd5ListStr":"614a169fde807ab7c4e8d336c5ca53df","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"36.5 KB","compressRate":"60.9%","sourceSize":"60 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/0037529e0ff14acda2fc2fde671d94de?from=pc","sourceStatusCode":200,"destWidth":729,"destHeight":463,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn85@2020_4/2020/08/24/22-09-25-696_ce70d5263f0771e8.webp","sourceBytes":70822,"destBytes":63150,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1382,"convertSpendMs":31,"createdTime":"2020-08-25 06:09:25","host":"us-018*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w0.html","linkMd5ListStr":"908753bf790834c9a28711752dba00de","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"61.7 KB","compressRate":"89.2%","sourceSize":"69.2 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/0ac33bd263bd46539969f439fa439791?from=pc","sourceStatusCode":200,"destWidth":757,"destHeight":397,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn17@2020_2/2020/08/24/22-09-25-780_e83a49cb1bf1dd24.webp","sourceBytes":59409,"destBytes":46194,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1411,"convertSpendMs":27,"createdTime":"2020-08-25 06:09:25","host":"us-030*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8y8.html","linkMd5ListStr":"addcc7ff0f50afaba1a0db2be7debbb0","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"45.1 KB","compressRate":"77.8%","sourceSize":"58 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/3fcbc5bd59ac47ba99c9facda18fe41c?from=pc","sourceStatusCode":200,"destWidth":804,"destHeight":490,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn22@2020_6/2020/08/24/22-09-25-653_4a1bfc50b59e6291.webp","sourceBytes":80455,"destBytes":62456,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1409,"convertSpendMs":24,"createdTime":"2020-08-25 06:09:25","host":"us-018*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"61 KB","compressRate":"77.6%","sourceSize":"78.6 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/d62569ab008e405c899353fa895ca6b2?from=pc","sourceStatusCode":200,"destWidth":764,"destHeight":376,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn89@2020_2/2020/08/24/22-09-25-644_ca045032e87cd599.webp","sourceBytes":49605,"destBytes":32340,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1516,"convertSpendMs":13,"createdTime":"2020-08-25 06:09:25","host":"europe-60*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8y8.html","linkMd5ListStr":"addcc7ff0f50afaba1a0db2be7debbb0","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"31.6 KB","compressRate":"65.2%","sourceSize":"48.4 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/c716e93c803c4e7eb196bb0ca3550f9d?from=pc","sourceStatusCode":200,"destWidth":683,"destHeight":392,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn69@2020_2/2020/08/24/22-09-25-991_5c46087518517d86.webp","sourceBytes":27366,"destBytes":21852,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1616,"convertSpendMs":12,"createdTime":"2020-08-25 06:09:25","host":"europe-56*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w6.html","linkMd5ListStr":"ba59ea79ddc69b439d474d2e30bb343e","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"21.3 KB","compressRate":"79.9%","sourceSize":"26.7 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/31714e719d4a49599c640c55803cb02f?from=pc","sourceStatusCode":200,"destWidth":970,"destHeight":508,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn58@2020_3/2020/08/24/22-09-26-156_edf2b74298c1351c.webp","sourceBytes":69984,"destBytes":55552,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1797,"convertSpendMs":25,"createdTime":"2020-08-25 06:09:25","host":"us-018*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"54.2 KB","compressRate":"79.4%","sourceSize":"68.3 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/42520f2a29744af6ac2aad0674db9185?from=pc","sourceStatusCode":200,"destWidth":885,"destHeight":438,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn37@2020_3/2020/08/24/22-09-26-326_4081a8efd763128e.webp","sourceBytes":74950,"destBytes":67354,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1944,"convertSpendMs":19,"createdTime":"2020-08-25 06:09:25","host":"us-034*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"65.8 KB","compressRate":"89.9%","sourceSize":"73.2 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/large/pgc-image/7f0f8363350b4208829561f058d7ef34?from=pc","sourceStatusCode":200,"destWidth":640,"destHeight":264,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn94@2020_1/2020/08/24/22-09-26-254_d7f8a62b1aa454b6.webp","sourceBytes":27923,"destBytes":17024,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1888,"convertSpendMs":8,"createdTime":"2020-08-25 06:09:25","host":"europe68*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8vw.html","linkMd5ListStr":"614a169fde807ab7c4e8d336c5ca53df","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"16.6 KB","compressRate":"61%","sourceSize":"27.3 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/b10f278990fa4d3b9d1276e6354e9453?from=pc","sourceStatusCode":200,"destWidth":755,"destHeight":413,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn9@2020_4/2020/08/24/22-09-26-333_e116e5a981f78717.webp","sourceBytes":25687,"destBytes":21394,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2020,"convertSpendMs":13,"createdTime":"2020-08-25 06:09:25","host":"europe64*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"20.9 KB","compressRate":"83.3%","sourceSize":"25.1 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/7be7e595299844ea8598652767949d27?from=pc","sourceStatusCode":200,"destWidth":862,"destHeight":420,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn25@2020_2/2020/08/24/22-09-26-631_59976170e2713361.webp","sourceBytes":27899,"destBytes":16194,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":972,"convertSpendMs":68,"createdTime":"2020-08-25 06:09:26","host":"us-026*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"15.8 KB","compressRate":"58%","sourceSize":"27.2 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/6bd729a931e948c1810e5e7cb70e256a?from=pc","sourceStatusCode":200,"destWidth":821,"destHeight":402,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn49@2020_1/2020/08/24/22-09-26-593_007cbba314536e18.webp","sourceBytes":160185,"destBytes":24604,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":948,"convertSpendMs":22,"createdTime":"2020-08-25 06:09:26","host":"us-018*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"24 KB","compressRate":"15.4%","sourceSize":"156.4 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/153008895a2e40f189c9ccf9bb042a86?from=pc","sourceStatusCode":200,"destWidth":817,"destHeight":522,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn9@2020_3/2020/08/24/22-09-26-654_1cf314679666cc15.webp","sourceBytes":63177,"destBytes":41446,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1232,"convertSpendMs":36,"createdTime":"2020-08-25 06:09:26","host":"us-010*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w0.html","linkMd5ListStr":"908753bf790834c9a28711752dba00de","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"40.5 KB","compressRate":"65.6%","sourceSize":"61.7 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/e40f3578b8854248935216bbb13b3089?from=pc","sourceStatusCode":200,"destWidth":802,"destHeight":479,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn66@2020_1/2020/08/24/22-09-26-750_73852a6d60c168f2.webp","sourceBytes":37511,"destBytes":13612,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":880,"convertSpendMs":12,"createdTime":"2020-08-25 06:09:26","host":"us-034*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"13.3 KB","compressRate":"36.3%","sourceSize":"36.6 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/915cd3dfbd2949baaf7dbb8e664f0b66?from=pc","sourceStatusCode":200,"destWidth":694,"destHeight":381,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn21@2020_3/2020/08/24/22-09-26-762_36ea2abce129a77d.webp","sourceBytes":33765,"destBytes":20706,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1138,"convertSpendMs":16,"createdTime":"2020-08-25 06:09:26","host":"us-038*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"20.2 KB","compressRate":"61.3%","sourceSize":"33 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/d7f5aafc78d34fa4bbcbbdb2ca567358?from=pc","sourceStatusCode":200,"destWidth":721,"destHeight":403,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn29@2020_3/2020/08/24/22-09-26-775_098dfbc08f8773c9.webp","sourceBytes":46508,"destBytes":29518,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1121,"convertSpendMs":46,"createdTime":"2020-08-25 06:09:26","host":"us-014*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8y8.html","linkMd5ListStr":"addcc7ff0f50afaba1a0db2be7debbb0","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"28.8 KB","compressRate":"63.5%","sourceSize":"45.4 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/large/pgc-image/33fd2432a9f84474b001dc47636681a3?from=pc","sourceStatusCode":200,"destWidth":640,"destHeight":347,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn73@2020_3/2020/08/24/22-09-26-824_6d6eca01c116a249.webp","sourceBytes":38408,"destBytes":27594,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":952,"convertSpendMs":11,"createdTime":"2020-08-25 06:09:26","host":"us-010*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8vs.html","linkMd5ListStr":"3dc4a0c726c23dcddecb4f274317ef78","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"26.9 KB","compressRate":"71.8%","sourceSize":"37.5 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/8494b6ab1b7d49218ce47272a204530e?from=pc","sourceStatusCode":200,"destWidth":767,"destHeight":458,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn30@2020_5/2020/08/24/22-09-26-622_479f4590da4c01b4.webp","sourceBytes":54475,"destBytes":40236,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2307,"convertSpendMs":18,"createdTime":"2020-08-25 06:09:25","host":"europe68*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"39.3 KB","compressRate":"73.9%","sourceSize":"53.2 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/bedbe9b77748483b882bdb06a06d3d4d?from=pc","sourceStatusCode":200,"destWidth":781,"destHeight":362,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn50@2020_5/2020/08/24/22-09-26-414_47ca46da2816c138.webp","sourceBytes":22582,"destBytes":13656,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2340,"convertSpendMs":13,"createdTime":"2020-08-25 06:09:25","host":"europe-60*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"13.3 KB","compressRate":"60.5%","sourceSize":"22.1 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/0b85d32c23bd4eeb9f0044e7995807df?from=pc","sourceStatusCode":200,"destWidth":846,"destHeight":491,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn86@2020_1/2020/08/24/22-09-27-070_b57f8c16bbbfe52a.webp","sourceBytes":55906,"destBytes":31970,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1024,"convertSpendMs":36,"createdTime":"2020-08-25 06:09:26","host":"us-038*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"31.2 KB","compressRate":"57.2%","sourceSize":"54.6 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/ac2022a96d08497281d84ed7d06007b7?from=pc","sourceStatusCode":200,"destWidth":705,"destHeight":416,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn38@2020_2/2020/08/24/22-09-26-783_f8f91403d1120329.webp","sourceBytes":65547,"destBytes":53886,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1392,"convertSpendMs":18,"createdTime":"2020-08-25 06:09:26","host":"europe64*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8y8.html","linkMd5ListStr":"addcc7ff0f50afaba1a0db2be7debbb0","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"52.6 KB","compressRate":"82.2%","sourceSize":"64 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/c015f27a4236431c93d52d9fd1be71fe?from=pc","sourceStatusCode":200,"destWidth":769,"destHeight":409,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn89@2020_6/2020/08/24/22-09-27-234_a6b3ee10f0b57047.webp","sourceBytes":55900,"destBytes":38754,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":985,"convertSpendMs":73,"createdTime":"2020-08-25 06:09:27","host":"us-026*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8y8.html","linkMd5ListStr":"addcc7ff0f50afaba1a0db2be7debbb0","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"37.8 KB","compressRate":"69.3%","sourceSize":"54.6 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/01f22bdd677641f29cb7b6226508d16a?from=pc","sourceStatusCode":200,"destWidth":670,"destHeight":392,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn5@2020_5/2020/08/24/22-09-27-494_03ed5fa3ab4cdc30.webp","sourceBytes":36651,"destBytes":27440,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3005,"convertSpendMs":16,"createdTime":"2020-08-25 06:09:25","host":"us-001*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8y8.html","linkMd5ListStr":"addcc7ff0f50afaba1a0db2be7debbb0","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"26.8 KB","compressRate":"74.9%","sourceSize":"35.8 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/7e683ca92a6e460190c5826b24a651f2?from=pc","sourceStatusCode":200,"destWidth":770,"destHeight":391,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn13@2020_4/2020/08/24/22-09-27-615_79530ef41ca81e6a.webp","sourceBytes":38577,"destBytes":27334,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":980,"convertSpendMs":22,"createdTime":"2020-08-25 06:09:27","host":"us-018*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"26.7 KB","compressRate":"70.9%","sourceSize":"37.7 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/3fbc27b44be945699e32e6abe0725776?from=pc","sourceStatusCode":200,"destWidth":698,"destHeight":292,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn13@2020_6/2020/08/24/22-09-27-490_45bd959ed6524860.webp","sourceBytes":23578,"destBytes":17332,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3055,"convertSpendMs":20,"createdTime":"2020-08-25 06:09:25","host":"us-52*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"16.9 KB","compressRate":"73.5%","sourceSize":"23 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/18b4ef747c204856992bccaf5ee514ea?from=pc","sourceStatusCode":200,"destWidth":660,"destHeight":491,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn18@2020_5/2020/08/24/22-09-27-640_520f76967f5156d4.webp","sourceBytes":36079,"destBytes":24254,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":906,"convertSpendMs":30,"createdTime":"2020-08-25 06:09:27","host":"us-005*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w6.html","linkMd5ListStr":"ba59ea79ddc69b439d474d2e30bb343e","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"23.7 KB","compressRate":"67.2%","sourceSize":"35.2 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/be7dde61b72641df8ff7f2e01de5b424?from=pc","sourceStatusCode":200,"destWidth":758,"destHeight":465,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn5@2020_6/2020/08/24/22-09-27-686_cf21cfe3d54d0396.webp","sourceBytes":36823,"destBytes":25748,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1014,"convertSpendMs":29,"createdTime":"2020-08-25 06:09:27","host":"us-52*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"25.1 KB","compressRate":"69.9%","sourceSize":"36 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/83d6892d675949cf8e4e358199e18449?from=pc","sourceStatusCode":200,"destWidth":942,"destHeight":502,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn97@2020_5/2020/08/24/22-09-27-601_662bda8aea754f65.webp","sourceBytes":94214,"destBytes":69496,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1282,"convertSpendMs":21,"createdTime":"2020-08-25 06:09:27","host":"us-001*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"67.9 KB","compressRate":"73.8%","sourceSize":"92 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/8a340c466d494caa9178948ef08f1fdb?from=pc","sourceStatusCode":200,"destWidth":707,"destHeight":359,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn65@2020_3/2020/08/24/22-09-27-564_400ad74d1cf465a9.webp","sourceBytes":25021,"destBytes":22936,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3203,"convertSpendMs":13,"createdTime":"2020-08-25 06:09:25","host":"europe68*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"22.4 KB","compressRate":"91.7%","sourceSize":"24.4 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/3a8c5a9c51584a3aa61e6b9339c01ffd?from=pc","sourceStatusCode":200,"destWidth":759,"destHeight":438,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn42@2020_6/2020/08/24/22-09-27-799_4cb9d9a560ead854.webp","sourceBytes":300702,"destBytes":36026,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2155,"convertSpendMs":28,"createdTime":"2020-08-25 06:09:26","host":"us-52*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"35.2 KB","compressRate":"12%","sourceSize":"293.7 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/dfic-imagehandler/78c85517-6255-41fd-877c-5da514704162?from=pc","sourceStatusCode":200,"destWidth":1024,"destHeight":576,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn46@2020_2/2020/08/24/22-09-27-759_b476779c9b5c4b82.webp","sourceBytes":184154,"destBytes":80232,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3421,"convertSpendMs":29,"createdTime":"2020-08-25 06:09:25","host":"us-010*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"78.4 KB","compressRate":"43.6%","sourceSize":"179.8 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/large/pgc-image/e709b486b35a4bfeba48e2bcb4e8d87f?from=pc","sourceStatusCode":200,"destWidth":640,"destHeight":357,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn33@2020_6/2020/08/24/22-09-27-600_4092c58f24eda642.webp","sourceBytes":37666,"destBytes":23984,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3279,"convertSpendMs":11,"createdTime":"2020-08-25 06:09:25","host":"europe-56*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8vw.html","linkMd5ListStr":"614a169fde807ab7c4e8d336c5ca53df","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"23.4 KB","compressRate":"63.7%","sourceSize":"36.8 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/10703f0d29ee4367a776cd4326d5b2a4?from=pc","sourceStatusCode":200,"destWidth":774,"destHeight":418,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn98@2020_2/2020/08/24/22-09-27-912_aa17d62fd929d2cb.webp","sourceBytes":60094,"destBytes":39430,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3469,"convertSpendMs":30,"createdTime":"2020-08-25 06:09:25","host":"us-026*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"38.5 KB","compressRate":"65.6%","sourceSize":"58.7 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/83706bdfa323404f9fde3dccbfb878d3?from=pc","sourceStatusCode":200,"destWidth":667,"destHeight":320,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn85@2020_2/2020/08/24/22-09-27-432_d3f8a64d92f4b218.webp","sourceBytes":16527,"destBytes":11624,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3370,"convertSpendMs":10,"createdTime":"2020-08-25 06:09:25","host":"europe-22*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"11.4 KB","compressRate":"70.3%","sourceSize":"16.1 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/1180184820de4d479a8b64995ccc777b?from=pc","sourceStatusCode":200,"destWidth":823,"destHeight":473,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn97@2020_4/2020/08/24/22-09-27-604_97f1eee791f51418.webp","sourceBytes":75080,"destBytes":63106,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3432,"convertSpendMs":22,"createdTime":"2020-08-25 06:09:25","host":"europe-56*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"61.6 KB","compressRate":"84.1%","sourceSize":"73.3 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/879f91b913d0464eb476c56d20fe2644?from=pc","sourceStatusCode":200,"destWidth":838,"destHeight":425,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn33@2020_3/2020/08/24/22-09-28-076_626d97b2d81c3dbe.webp","sourceBytes":51642,"destBytes":36340,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":873,"convertSpendMs":24,"createdTime":"2020-08-25 06:09:27","host":"us-022*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w0.html","linkMd5ListStr":"908753bf790834c9a28711752dba00de","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"35.5 KB","compressRate":"70.4%","sourceSize":"50.4 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/b803729f7c2a4bcbb9a38d7fee829ddc?from=pc","sourceStatusCode":200,"destWidth":649,"destHeight":599,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn62@2020_6/2020/08/24/22-09-27-616_f912720f65e0fbce.webp","sourceBytes":47517,"destBytes":35834,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2125,"convertSpendMs":15,"createdTime":"2020-08-25 06:09:26","host":"europe-56*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w6.html","linkMd5ListStr":"ba59ea79ddc69b439d474d2e30bb343e","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"35 KB","compressRate":"75.4%","sourceSize":"46.4 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/large/pgc-image/a88fe21d6cd44a45b442951bf84cb894?from=pc","sourceStatusCode":200,"destWidth":640,"destHeight":716,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn77@2020_1/2020/08/24/22-09-27-595_d733abffb9070248.webp","sourceBytes":35006,"destBytes":24838,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2054,"convertSpendMs":14,"createdTime":"2020-08-25 06:09:26","host":"europe-22*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8vs.html","linkMd5ListStr":"3dc4a0c726c23dcddecb4f274317ef78","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"24.3 KB","compressRate":"71%","sourceSize":"34.2 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/2a925f7273b54adf88cf3f67d5ceb631?from=pc","sourceStatusCode":200,"destWidth":723,"destHeight":461,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn50@2020_1/2020/08/24/22-09-28-096_3fcde4aa52eda0f9.webp","sourceBytes":34405,"destBytes":25622,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":900,"convertSpendMs":13,"createdTime":"2020-08-25 06:09:28","host":"us-038*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"25 KB","compressRate":"74.5%","sourceSize":"33.6 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/large/pgc-image/3bc365a5d2b14d94a069c58a53d57850?from=pc","sourceStatusCode":200,"destWidth":640,"destHeight":362,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn74@2020_2/2020/08/24/22-09-27-870_2391ef733370052d.webp","sourceBytes":52062,"destBytes":39832,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3611,"convertSpendMs":12,"createdTime":"2020-08-25 06:09:25","host":"europe64*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8vw.html","linkMd5ListStr":"614a169fde807ab7c4e8d336c5ca53df","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"38.9 KB","compressRate":"76.5%","sourceSize":"50.8 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/c97307767e4b4d819664cf47fc072647?from=pc","sourceStatusCode":200,"destWidth":639,"destHeight":432,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn14@2020_5/2020/08/24/22-09-27-904_204124a3fadc0f19.webp","sourceBytes":15122,"destBytes":13222,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2603,"convertSpendMs":11,"createdTime":"2020-08-25 06:09:26","host":"europe-22*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w6.html","linkMd5ListStr":"ba59ea79ddc69b439d474d2e30bb343e","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"12.9 KB","compressRate":"87.4%","sourceSize":"14.8 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/c28a29fa894c47578944a369f3056749?from=pc","sourceStatusCode":200,"destWidth":790,"destHeight":462,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn52@2020_1/2020/08/24/22-09-28-026_9840e2c9b5bfa777.webp","sourceBytes":51228,"destBytes":37140,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3786,"convertSpendMs":18,"createdTime":"2020-08-25 06:09:25","host":"europe-59*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"36.3 KB","compressRate":"72.5%","sourceSize":"50 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/c68fa6c8e60043f99314d7ee420cd010?from=pc","sourceStatusCode":200,"destWidth":852,"destHeight":434,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn26@2020_3/2020/08/24/22-09-27-881_2a954ac4019ff95c.webp","sourceBytes":61836,"destBytes":52594,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1534,"convertSpendMs":20,"createdTime":"2020-08-25 06:09:27","host":"europe-56*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"51.4 KB","compressRate":"85.1%","sourceSize":"60.4 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/1b9503ad862b46d3bf2ed534048461db?from=pc","sourceStatusCode":200,"destWidth":752,"destHeight":430,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn41@2020_6/2020/08/24/22-09-28-068_e153e6a0d383106b.webp","sourceBytes":56575,"destBytes":41206,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1390,"convertSpendMs":17,"createdTime":"2020-08-25 06:09:27","host":"europe-22*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w6.html","linkMd5ListStr":"ba59ea79ddc69b439d474d2e30bb343e","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"40.2 KB","compressRate":"72.8%","sourceSize":"55.2 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/f28bc47292204513aa30ed66350b86b2?from=pc","sourceStatusCode":200,"destWidth":781,"destHeight":581,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn58@2020_1/2020/08/24/22-09-28-357_56fc1e59f6975dbb.webp","sourceBytes":230788,"destBytes":25394,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2674,"convertSpendMs":26,"createdTime":"2020-08-25 06:09:26","host":"europe68*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"24.8 KB","compressRate":"11%","sourceSize":"225.4 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/db73c0ae654e43a08022ef76c3d416e4?from=pc","sourceStatusCode":200,"destWidth":765,"destHeight":421,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn57@2020_6/2020/08/24/22-09-28-499_0b90dc295d6bfc3f.webp","sourceBytes":69789,"destBytes":57206,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1062,"convertSpendMs":75,"createdTime":"2020-08-25 06:09:28","host":"us-014*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w6.html","linkMd5ListStr":"ba59ea79ddc69b439d474d2e30bb343e","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"55.9 KB","compressRate":"82%","sourceSize":"68.2 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/large/pgc-image/c2dafde611fc49fe9e35660e06a6cfa2?from=pc","sourceStatusCode":200,"destWidth":640,"destHeight":335,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn61@2020_3/2020/08/24/22-09-28-600_d72c7a958b653d60.webp","sourceBytes":40469,"destBytes":30202,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":985,"convertSpendMs":11,"createdTime":"2020-08-25 06:09:28","host":"us-001*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8vs.html","linkMd5ListStr":"3dc4a0c726c23dcddecb4f274317ef78","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"29.5 KB","compressRate":"74.6%","sourceSize":"39.5 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/c1074d3bb83e41149123ef509528cffd?from=pc","sourceStatusCode":200,"destWidth":736,"destHeight":399,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn54@2020_6/2020/08/24/22-09-28-587_f0b8b2c36075b52f.webp","sourceBytes":44634,"destBytes":34674,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1361,"convertSpendMs":37,"createdTime":"2020-08-25 06:09:28","host":"us-026*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8y8.html","linkMd5ListStr":"addcc7ff0f50afaba1a0db2be7debbb0","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"33.9 KB","compressRate":"77.7%","sourceSize":"43.6 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/d4f6ed42de1d477d8b3c9b222007b37e?from=pc","sourceStatusCode":200,"destWidth":598,"destHeight":669,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn29@2020_4/2020/08/24/22-09-28-637_57f04e71eaf24f3d.webp","sourceBytes":67783,"destBytes":33240,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1836,"convertSpendMs":15,"createdTime":"2020-08-25 06:09:27","host":"us-034*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"32.5 KB","compressRate":"49%","sourceSize":"66.2 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/452458cbccba4666a7c26c2ca0e33f6e?from=pc","sourceStatusCode":200,"destWidth":836,"destHeight":414,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn21@2020_6/2020/08/24/22-09-28-331_f8c7d94066417c5d.webp","sourceBytes":64215,"destBytes":48044,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1927,"convertSpendMs":15,"createdTime":"2020-08-25 06:09:27","host":"europe68*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"46.9 KB","compressRate":"74.8%","sourceSize":"62.7 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/8e3a45ea2d6b4ea3bddfb81b3eae761b?from=pc","sourceStatusCode":200,"destWidth":748,"destHeight":430,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn2@2020_6/2020/08/24/22-09-28-442_b9d58057a5cf1fdf.webp","sourceBytes":20141,"destBytes":15070,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2117,"convertSpendMs":12,"createdTime":"2020-08-25 06:09:27","host":"europe64*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"14.7 KB","compressRate":"74.8%","sourceSize":"19.7 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/77a7938e54b544f1b60e09d664bceea1?from=pc","sourceStatusCode":200,"destWidth":784,"destHeight":539,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn70@2020_5/2020/08/24/22-09-28-699_9d674e5ab94c0632.webp","sourceBytes":64368,"destBytes":43360,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1122,"convertSpendMs":29,"createdTime":"2020-08-25 06:09:28","host":"us-52*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w0.html","linkMd5ListStr":"908753bf790834c9a28711752dba00de","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"42.3 KB","compressRate":"67.4%","sourceSize":"62.9 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/8b9dc4889bb943f9bfcc51ea0a774bda?from=pc","sourceStatusCode":200,"destWidth":753,"destHeight":326,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn1@2020_2/2020/08/24/22-09-28-857_1bce641027434025.webp","sourceBytes":39967,"destBytes":22696,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":850,"convertSpendMs":13,"createdTime":"2020-08-25 06:09:28","host":"us-010*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"22.2 KB","compressRate":"56.8%","sourceSize":"39 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/cd20888f60dd4cd3860e6307740cbb7c?from=pc","sourceStatusCode":200,"destWidth":769,"destHeight":537,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn54@2020_4/2020/08/24/22-09-28-889_43812f8914ab0d47.webp","sourceBytes":35877,"destBytes":24006,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3193,"convertSpendMs":45,"createdTime":"2020-08-25 06:09:26","host":"us-005*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"23.4 KB","compressRate":"66.9%","sourceSize":"35 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/75a3712e546f44b5a3abd2d73e013f8c?from=pc","sourceStatusCode":200,"destWidth":918,"destHeight":453,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn34@2020_2/2020/08/24/22-09-28-905_d112aa1df888f07d.webp","sourceBytes":69654,"destBytes":43288,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3286,"convertSpendMs":27,"createdTime":"2020-08-25 06:09:26","host":"us-001*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"42.3 KB","compressRate":"62.1%","sourceSize":"68 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/afa156bb2647427587d9a734819811dc?from=pc","sourceStatusCode":200,"destWidth":819,"destHeight":449,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn94@2020_3/2020/08/24/22-09-28-854_9f12911b6abd5c55.webp","sourceBytes":51325,"destBytes":47582,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1037,"convertSpendMs":22,"createdTime":"2020-08-25 06:09:28","host":"us-034*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"46.5 KB","compressRate":"92.7%","sourceSize":"50.1 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/9f0b30f5f618450187cfb6aaf6764588?from=pc","sourceStatusCode":200,"destWidth":848,"destHeight":430,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn98@2020_3/2020/08/24/22-09-28-892_cb6fef45ed1d8e81.webp","sourceBytes":70670,"destBytes":49932,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1024,"convertSpendMs":34,"createdTime":"2020-08-25 06:09:28","host":"us-022*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"48.8 KB","compressRate":"70.7%","sourceSize":"69 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/238594df4e8347a6a682972cf12e9167?from=pc","sourceStatusCode":200,"destWidth":688,"destHeight":414,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn82@2020_5/2020/08/24/22-09-28-709_cda08c5416ba437b.webp","sourceBytes":34297,"destBytes":29542,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2936,"convertSpendMs":16,"createdTime":"2020-08-25 06:09:26","host":"europe-60*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"28.8 KB","compressRate":"86.1%","sourceSize":"33.5 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/b013f66cbd15497e9a0202a76e67661e?from=pc","sourceStatusCode":200,"destWidth":917,"destHeight":607,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn65@2020_4/2020/08/24/22-09-29-080_ca592a0305b70383.webp","sourceBytes":49143,"destBytes":28304,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":4591,"convertSpendMs":71,"createdTime":"2020-08-25 06:09:25","host":"us-014*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w0.html","linkMd5ListStr":"908753bf790834c9a28711752dba00de","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"27.6 KB","compressRate":"57.6%","sourceSize":"48 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/47666275792a4d8f9a61cca916ef0be7?from=pc","sourceStatusCode":200,"destWidth":725,"destHeight":392,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn90@2020_1/2020/08/24/22-09-29-109_e611799b36959e09.webp","sourceBytes":179412,"destBytes":21850,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":4713,"convertSpendMs":38,"createdTime":"2020-08-25 06:09:25","host":"us-005*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"21.3 KB","compressRate":"12.2%","sourceSize":"175.2 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/7e60b0edd79441d0b600986167074b2c?from=pc","sourceStatusCode":200,"destWidth":823,"destHeight":471,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn25@2020_6/2020/08/24/22-09-29-234_662416ba81f757c1.webp","sourceBytes":51754,"destBytes":35014,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":982,"convertSpendMs":19,"createdTime":"2020-08-25 06:09:29","host":"us-001*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"34.2 KB","compressRate":"67.7%","sourceSize":"50.5 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/ce8f249191cf44d4b5cb3f842ca09a7b?from=pc","sourceStatusCode":200,"destWidth":900,"destHeight":464,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn17@2020_5/2020/08/24/22-09-28-899_6b9d799755a67dcd.webp","sourceBytes":87397,"destBytes":70624,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3622,"convertSpendMs":29,"createdTime":"2020-08-25 06:09:26","host":"europe-60*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"69 KB","compressRate":"80.8%","sourceSize":"85.3 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/e5a75618e6654c869b6d98a850dec1c0?from=pc","sourceStatusCode":200,"destWidth":726,"destHeight":527,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn5@2020_5/2020/08/24/22-09-29-043_74c9c1cb11a20520.webp","sourceBytes":42307,"destBytes":32822,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1291,"convertSpendMs":17,"createdTime":"2020-08-25 06:09:28","host":"europe-22*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"32.1 KB","compressRate":"77.6%","sourceSize":"41.3 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/large/pgc-image/262a1ba771694acdb7cf06471ab2dcd6?from=pc","sourceStatusCode":200,"destWidth":640,"destHeight":346,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn89@2020_4/2020/08/24/22-09-28-965_a2e599515593fbf3.webp","sourceBytes":35152,"destBytes":26940,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1371,"convertSpendMs":10,"createdTime":"2020-08-25 06:09:28","host":"europe-56*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8vw.html","linkMd5ListStr":"614a169fde807ab7c4e8d336c5ca53df","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"26.3 KB","compressRate":"76.6%","sourceSize":"34.3 KB"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/d6ce0cfcd8c745b19c27fa95cee6fd91?from=pc","sourceStatusCode":200,"destWidth":882,"destHeight":535,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn33@2020_2/2020/08/24/22-09-29-412_cd9c7032a204ec94.webp","sourceBytes":56772,"destBytes":48548,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1073,"convertSpendMs":25,"createdTime":"2020-08-25 06:09:29","host":"us-52*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"47.4 KB","compressRate":"85.5%","sourceSize":"55.4 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/1044be2723c34eb1947fbcb443cf70da?from=pc","sourceStatusCode":200,"destWidth":815,"destHeight":429,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn69@2020_4/2020/08/24/22-09-29-493_99311ac0b178345c.webp","sourceBytes":36570,"destBytes":24522,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3670,"convertSpendMs":15,"createdTime":"2020-08-25 06:09:26","host":"us-022*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"23.9 KB","compressRate":"67.1%","sourceSize":"35.7 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/3e3cacc476aa48d390d399b63c2d18be?from=pc","sourceStatusCode":200,"destWidth":778,"destHeight":427,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn46@2020_5/2020/08/24/22-09-29-602_3d3886c99664515d.webp","sourceBytes":158441,"destBytes":25456,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2708,"convertSpendMs":29,"createdTime":"2020-08-25 06:09:27","host":"europe-60*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"24.9 KB","compressRate":"16.1%","sourceSize":"154.7 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/514ddef1568c4d8fac0e57ea97e4e3ed?from=pc","sourceStatusCode":200,"destWidth":823,"destHeight":483,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn93@2020_1/2020/08/24/22-09-29-811_87f77bb2e1aaf7e8.webp","sourceBytes":63857,"destBytes":45174,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3597,"convertSpendMs":37,"createdTime":"2020-08-25 06:09:27","host":"us-014*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"44.1 KB","compressRate":"70.7%","sourceSize":"62.4 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/f580b973d6724e6991e3d1d30046a705?from=pc","sourceStatusCode":200,"destWidth":963,"destHeight":500,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn81@2020_1/2020/08/24/22-09-29-897_404f18eba309067e.webp","sourceBytes":64576,"destBytes":49196,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2119,"convertSpendMs":46,"createdTime":"2020-08-25 06:09:28","host":"us-005*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"48 KB","compressRate":"76.2%","sourceSize":"63.1 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/large/pgc-image/f7bd463d440548c1b207421561cb457a?from=pc","sourceStatusCode":200,"destWidth":640,"destHeight":352,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn45@2020_4/2020/08/24/22-09-29-718_aabe914960168cf8.webp","sourceBytes":41374,"destBytes":30086,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":4077,"convertSpendMs":21,"createdTime":"2020-08-25 06:09:26","host":"us-030*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8vw.html","linkMd5ListStr":"614a169fde807ab7c4e8d336c5ca53df","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"29.4 KB","compressRate":"72.7%","sourceSize":"40.4 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/b788769b0d0f488fac0c98d9aad03fe2?from=pc","sourceStatusCode":200,"destWidth":784,"destHeight":543,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn66@2020_1/2020/08/24/22-09-29-515_c3f8f7a22f8253fc.webp","sourceBytes":74440,"destBytes":37318,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2392,"convertSpendMs":16,"createdTime":"2020-08-25 06:09:28","host":"europe64*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w0.html","linkMd5ListStr":"908753bf790834c9a28711752dba00de","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"36.4 KB","compressRate":"50.1%","sourceSize":"72.7 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/large/pgc-image/ad34a7d2ba1542b7a9d95815bb577b63?from=pc","sourceStatusCode":200,"destWidth":640,"destHeight":275,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn85@2020_1/2020/08/24/22-09-29-883_59ab59c9b6172b92.webp","sourceBytes":30423,"destBytes":21636,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2279,"convertSpendMs":8,"createdTime":"2020-08-25 06:09:28","host":"europe68*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8vs.html","linkMd5ListStr":"3dc4a0c726c23dcddecb4f274317ef78","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"21.1 KB","compressRate":"71.1%","sourceSize":"29.7 KB"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/0b07e4388734476ea4a892afe68a6d7b?from=pc","sourceStatusCode":200,"destWidth":714,"destHeight":435,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn10@2020_6/2020/08/24/22-09-29-818_7ac4c4b5b9a8a878.webp","sourceBytes":63240,"destBytes":36040,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2026,"convertSpendMs":16,"createdTime":"2020-08-25 06:09:28","host":"europe-60*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"35.2 KB","compressRate":"57%","sourceSize":"61.8 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/f8eb27257f4a4cf6875b2f24742b0c1d?from=pc","sourceStatusCode":200,"destWidth":815,"destHeight":501,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn30@2020_5/2020/08/24/22-09-30-307_c54720bef6f9bc7e.webp","sourceBytes":61680,"destBytes":54504,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2416,"convertSpendMs":21,"createdTime":"2020-08-25 06:09:29","host":"europe64*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w3.html","linkMd5ListStr":"268c3e788bfe44127f30d37b52f76eea","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"53.2 KB","compressRate":"88.4%","sourceSize":"60.2 KB"},{"code":1,"isDone":false,"source":"http://simg.sinajs.cn/blog7style/images/special/1265.gif","sourceStatusCode":200,"destWidth":20,"destHeight":12,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn17@2020_6/2020/08/24/22-09-30-958_66e9c83d813b7958.webp","sourceBytes":2095,"destBytes":2844,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2831,"convertSpendMs":19,"createdTime":"2020-08-25 06:09:28","host":"us-026*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8y8.html","linkMd5ListStr":"3dc4a0c726c23dcddecb4f274317ef78,ba59ea79ddc69b439d474d2e30bb343e,327f7c6974101c0e3582a4a9c97850e0,614a169fde807ab7c4e8d336c5ca53df,4e9f8978b249eccc53dcd3bd1e2a9312,908753bf790834c9a28711752dba00de,f8502ea8532df0088ac180e125c51cc5,382ac3baaf06fdb958d7222781772ad2,268c3e788bfe44127f30d37b52f76eea,addcc7ff0f50afaba1a0db2be7debbb0","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"2.8 KB","compressRate":"135.8%","sourceSize":"2 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/45e470ceedcb4bc88bae2afe90cebec2?from=pc","sourceStatusCode":200,"destWidth":855,"destHeight":526,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn9@2020_4/2020/08/24/22-09-30-854_df4a711f88b0b030.webp","sourceBytes":39670,"destBytes":28480,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":4276,"convertSpendMs":46,"createdTime":"2020-08-25 06:09:27","host":"us-030*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w6.html","linkMd5ListStr":"ba59ea79ddc69b439d474d2e30bb343e","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"27.8 KB","compressRate":"71.8%","sourceSize":"38.7 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/29d766c347e844ad99bb3025672b9676?from=pc","sourceStatusCode":200,"destWidth":762,"destHeight":370,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn38@2020_6/2020/08/24/22-09-31-224_7003912362231bb1.webp","sourceBytes":32194,"destBytes":30080,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2735,"convertSpendMs":31,"createdTime":"2020-08-25 06:09:29","host":"us-030*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"29.4 KB","compressRate":"93.4%","sourceSize":"31.4 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/61bdfb6770b5475c86cb0e66b5550af3?from=pc","sourceStatusCode":200,"destWidth":933,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn74@2020_5/2020/08/24/22-09-31-171_3fb628fbd76191a2.webp","sourceBytes":44684,"destBytes":32256,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3577,"convertSpendMs":31,"createdTime":"2020-08-25 06:09:28","host":"us-030*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8w0.html","linkMd5ListStr":"908753bf790834c9a28711752dba00de","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"31.5 KB","compressRate":"72.2%","sourceSize":"43.6 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/684de7a940b94abdb664f082e42c3e69?from=pc","sourceStatusCode":200,"destWidth":698,"destHeight":351,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn37@2020_1/2020/08/24/22-09-31-485_76c389b3c068a171.webp","sourceBytes":16163,"destBytes":13450,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":4585,"convertSpendMs":15,"createdTime":"2020-08-25 06:09:27","host":"us-010*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8x4.html","linkMd5ListStr":"327f7c6974101c0e3582a4a9c97850e0","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"13.1 KB","compressRate":"83.2%","sourceSize":"15.8 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/b3caf98d0e9341feba29d594f94fabbc?from=pc","sourceStatusCode":200,"destWidth":746,"destHeight":391,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn78@2020_4/2020/08/24/22-09-31-603_8e41b6599bccdadc.webp","sourceBytes":49143,"destBytes":44622,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3896,"convertSpendMs":24,"createdTime":"2020-08-25 06:09:28","host":"us-018*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8y8.html","linkMd5ListStr":"addcc7ff0f50afaba1a0db2be7debbb0","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"43.6 KB","compressRate":"90.8%","sourceSize":"48 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/a756cea102d14dcaa7621d10a7ab3901?from=pc","sourceStatusCode":200,"destWidth":817,"destHeight":541,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn57@2020_2/2020/08/24/22-10-26-796_afbe8ad0fc2ba30e.webp","sourceBytes":56984,"destBytes":34272,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2152,"convertSpendMs":111,"createdTime":"2020-08-25 06:10:25","host":"us-52*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"33.5 KB","compressRate":"60.1%","sourceSize":"55.6 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/large/pgc-image/122cc316dda54b48afe0a8f23b771672?from=pc","sourceStatusCode":200,"destWidth":640,"destHeight":383,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn21@2020_2/2020/08/24/22-10-31-572_dacb1ad572afb10c.webp","sourceBytes":37366,"destBytes":21886,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3236,"convertSpendMs":11,"createdTime":"2020-08-25 06:10:29","host":"us-034*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8vw.html","linkMd5ListStr":"614a169fde807ab7c4e8d336c5ca53df","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"21.4 KB","compressRate":"58.6%","sourceSize":"36.5 KB"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/70acfd33b56f4a69a6da12647617cdcd?from=pc","sourceStatusCode":200,"destWidth":818,"destHeight":498,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn14@2020_6/2020/08/24/22-10-33-153_9785599d6b30b336.webp","sourceBytes":75907,"destBytes":64944,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":4968,"convertSpendMs":52,"createdTime":"2020-08-25 06:10:29","host":"us-026*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z8yo.html","linkMd5ListStr":"4e9f8978b249eccc53dcd3bd1e2a9312","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"63.4 KB","compressRate":"85.6%","sourceSize":"74.1 KB"}],"successGithubMap":{"myreaderx14":4,"myreaderx8":4,"myreaderx15":3,"myreaderx7":4,"myreaderx6":4,"myreaderx16":4,"myreaderx32":4,"myreaderx4":4,"myreaderx10":4,"myreaderx11":4,"myreaderx33":4,"myreaderx3":3,"myreaderx12":4,"myreaderx2":4,"myreaderx13":4,"myreaderx1":4,"myreaderx30":3,"myreaderx31":4,"myreaderx18":4,"myreaderx19":3,"myreaderx":3,"myreaderx25":4,"myreaderx27":3,"myreaderx21":4,"myreaderx22":4,"myreaderx23":4,"myreaderx24":3,"myreaderx5oss":4,"myreaderx29":3},"failGithubMap":{}}