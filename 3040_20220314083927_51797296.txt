{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2022-03-14 16:35:23","updatedTime":"2022-03-14 16:35:23","title":"Learning how to develop GraphQL solutions with .NET","link":"http://codebetter.com/glennblock/?p=1019","description":"<p><a href=\"http://codebetter.com/glennblock/files/2019/08/Screen-Shot-2019-08-26-at-11.04.33-PM1.png\"><img class=\" size-full wp-image-1016 aligncenter\" src=\"http://codebetter.com/glennblock/files/2019/08/Screen-Shot-2019-08-26-at-11.04.33-PM1.png\" alt=\"Screen Shot 2019-08-26 at 11.04.33 PM\" width=\"600\" height=\"94\" /></a></p>\n<p>If you are building a data-driven web or mobile application, then key concerns you need to address is how data will be surfaced to the client and how the client can update the state on the server. This is not a new problem, and one that we have been solving for decades.</p>\n<p><a href=\"https://graphql.org/\">GraphQL</a> provides one way to address this problem and uses an approach that provides significant benefits over previous RPC-based approaches. GraphQL was originally created at Facebook several years ago. It has been widely adopted since by Github, Concur, Airbnb and <a href=\"https://graphql.org/users/\">more</a>. We&#8217;re even now adopting it at DocuSign. If you are doing React development, GraphQL has become the de-facto way to query from React clients.</p>\n<h2>What is GraphQL?</h2>\n<p>At its heart, GraphQL is several things.</p>\n<ul>\n<li>A schema that allows defining a structured view of data that will be surfaced to / queried / updated by a GraphQL client.</li>\n<li>A query language for interacting with a GraphQL endpoint to retrieve, update, and subscribe to notifications.</li>\n<li><a href=\"https://graphql.org/code/#tools\">Tooling and SDKs </a>for building GraphQL clients and servers, or interacting with GraphQL endpoints such as the GraphiQL editor, clients like Apollo and Relay, servers like Apollo, GraphQL for .NET, and more.</li>\n</ul>\n<p>A few things that have stood out for me that I have really liked about GraphQL.</p>\n<ul>\n<li>It provides a standard way to query and update data including non-crud based actions. It supports &#8220;graphs&#8221; of data allowing queries to pull hierarchical data.</li>\n<li>It puts power in UI teams hands to be able to hand craft queries with the data they need, without having to constantly send custom requests to the API team.</li>\n<li>It has <a href=\"https://github.com/graphql/graphiql\">GraphiQL</a> which is an awesome intellisense-driven tool for querying GraphQL endpoints that you can provide to developers for interacting with the endpoint.</li>\n<li>It can work side by side with, and wrap existing &#8220;REST&#8221; APIs</li>\n<li>It is not opinionated about where data resides, it is not bound to a database. Data  could live in MongoDB, SQL, in documents like S3/Azure Blob, or even in memory. It is really easy to make GraphQL work with any data store</li>\n<li>It allows full control from the server-side as to what data is exposed.</li>\n</ul>\n<p>There are also plenty of <a href=\"https://goodapi.co/blog/rest-vs-graphql\">tradeoffs</a> with GraphQL vs traditional APIs and it is not a silver bullet. Fortunately it is not mutually exclusive and can live side by side with &#8220;REST&#8221; APIs. Still you should go in with eyes open (as with any other technology or approach).</p>\n<h2>GraphQL with .NET</h2>\n<p>Yes you can develop GraphQL solutions with .NET! There are several open source projects that enable this, my favorite one being <a href=\"https://github.com/graphql-dotnet\">GraphQL for .NET</a>. GraphQL for .NET lets you create GraphQL schemas and queries in C#, and then surface them via an ASP.NET core endpoint. It also provides a C# client which you can use to issue queries from an application such as as a Xamarin mobile client. All of the libraries are also available on NuGet. If you head to the GraphQL for .NET <a href=\"https://graphql-dotnet.github.io/docs/getting-started/introduction\">documentation</a> you can find out more.</p>\n<p>I&#8217;ve also created an ASP.NET Core example endpoint which can be ran on Windows, Mac or Linux which you can download from <a href=\"https://github.com/graphql-dotnet/example-orders\">here</a>. The readme contains lots of example queries you can run using the GraphiQL editor that is built in.</p>\n<h2>Check out my LinkedIn Learning Course</h2>\n<p>If you are interested in learning more about GraphQL for .NET, you can also check out my LinkedIn Learning Course: <a href=\"https://www.linkedin.com/learning/api-development-in-dot-net-with-graphql/\">API Development in .NET with GraphQL</a>. In the course I&#8217;ll take you through building the Orders GraphQL endpoint above from scratch in ASP.NET Core. I show you how to use GraphQL for .NET to define your schema, queries, and mutations, and subscriptions and expose them via ASP.NET Core. It&#8217;s heavily code based so you can follow along and build it with me. If you check out the course, let me know what you think.</p>\n<h2>GraphQL is growing</h2>\n<p>GraphQL is exploding in traction, with more and more companies adopting it as the standard. All signs are that will continue. It is exciting that this powerful ecosystem is available now to you as a .NET developer!</p>\n<div class=\"feedflare\">\n<a href=\"http://feeds.feedburner.com/~ff/CodeBetter?a=tVBtlfQQ9QM:Jl6z-TJ3KPc:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/CodeBetter?d=yIl2AUoC8zA\" border=\"0\"></img></a>\n</div>","descriptionType":"html","publishedDate":"Tue, 27 Aug 2019 06:54:35 +0000","feedId":3040,"bgimg":"http://codebetter.com/glennblock/files/2019/08/Screen-Shot-2019-08-26-at-11.04.33-PM1.png","linkMd5":"6da7d0ac228edd00b8969900a2634c24","author":"Glenn Block","articleImgCdnMap":{"http://codebetter.com/glennblock/files/2019/08/Screen-Shot-2019-08-26-at-11.04.33-PM1.png":null,"http://feeds.feedburner.com/~ff/CodeBetter?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn60@2020_1/2022/03/14/08-37-24-761_60ff05294ac8f34c.webp"},"publishedOrCreatedDate":1647246923191}],"record":{"createdTime":"2022-03-14 16:35:23","updatedTime":"2022-03-14 16:35:23","feedId":3040,"fetchDate":"Mon, 14 Mar 2022 08:35:23 +0000","fetchMs":18,"handleMs":14,"totalMs":243977,"newArticles":0,"totalArticles":20,"status":1,"type":0,"ip":"af0629e1ae74a27744b4cbd27b40a78e","hostName":"us-51*","requestId":"00d8c4e469804ac8bfc9420dc462e76a_3040","contentType":"text/xml; charset=UTF-8","totalBytes":310,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":2,"articlesImgsGithubTotal":1,"successGithubMap":{"myreaderx24":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-24 21:31:48","updatedTime":"2020-09-01 10:20:22","id":3040,"name":"CodeBetter.Com Posts","url":"http://feeds.feedburner.com/CodeBetter","subscriber":null,"website":null,"icon":"http://codebetter.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx64/cdn72@2020_1/2020/09/01/02-20-23-189_4661d20004a9b5bd.ico","description":"Stuff you need to Code Better!","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2022-03-14 16:39:27","updatedTime":"2022-03-14 16:39:27","id":null,"feedId":3040,"linkMd5":"6da7d0ac228edd00b8969900a2634c24"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":310,"tmpBgImgCdnBytes":0,"extra4":{"start":1647246923154,"total":0,"statList":[{"spend":24,"msg":"获取xml内容"},{"spend":14,"msg":"解释文章"},{"spend":120223,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":122527,"msg":"正文链接上传到cdn"}]},"extra5":2,"extra6":1,"extra7ImgCdnFailResultVector":[null,null,null,null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-25.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://europe63.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~ff/CodeBetter?d=yIl2AUoC8zA","sourceStatusCode":200,"destWidth":62,"destHeight":24,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn60@2020_1/2022/03/14/08-37-24-761_60ff05294ac8f34c.webp","sourceBytes":997,"destBytes":310,"targetWebpQuality":75,"feedId":3040,"totalSpendMs":426,"convertSpendMs":4,"createdTime":"2022-03-14 16:37:24","host":"europe-25*","referer":"http://codebetter.com/glennblock/?p=1019","linkMd5ListStr":"6da7d0ac228edd00b8969900a2634c24","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"997 B","destSize":"310 B","compressRate":"31.1%"}],"successGithubMap":{"myreaderx24":1},"failGithubMap":{}}