{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-11-16 19:08:53","updatedTime":"2020-11-16 19:08:53","title":"多相関数と依存型をちゃんと理解しよう","link":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","description":"<p>比較的最近（今年の9月）、<a href=\"https://m-hiyama.hatenablog.com/entry/2020/09/07/165418\">多相関数の記事</a>を書きました。「多相関数」「総称関数」という言葉は知っていても、理解があやふやな人もいそうです。基本的なところを復習しましょう。話を明確にするために、少し<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%B7%F7%CF%C0\">圏論</a>を使います。</p>\n<p><b>内容：</b></p> \n<ul class=\"table-of-contents\"> \n <li><a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#多相関数のプロファイル\">多相関数のプロファイル</a></li> \n <li><a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#型と関数の圏\">型と関数の圏</a></li> \n <li><a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#型ファミリー\">型ファミリー</a></li> \n <li><a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#依存型-依存積型と依存和型\">依存型： 依存積型と依存和型</a></li> \n <li><a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#依存和型-型ファミリーの総和\">依存和型： 型ファミリーの総和</a></li> \n <li><a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#依存和型もっと\">依存和型もっと</a></li> \n <li><a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#依存積型-型ファミリーの総積\">依存積型： 型ファミリーの総積</a></li> \n <li><a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#依存積型もっと\">依存積型もっと</a></li> \n <li><a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#id2020_polym-fun-rep\">多相関数の表現方法</a></li> \n <li><a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#おわりに\">おわりに</a></li> \n</ul>\n<p><h4 id=\"多相関数のプロファイル\">多相関数のプロファイル</h4></p>\n<p>「<a href=\"https://m-hiyama.hatenablog.com/entry/2020/09/07/165418\">蒸し返し： アドホック多相 vs パラメトリック多相</a>」では、多相関数lengthを例題にしました。lengthのプロファイル（入力と出力の仕様）を次のように書きました。</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20length%20%3A%3A%20%5Cforall%5Calpha.%20%5Cmathrm%7BList%7D%5C%2C%20%5Calpha%20%5Cto%20Int%20\" alt=\" length :: \\forall\\alpha. \\mathrm{List}\\, \\alpha \\to Int \" /></li> \n</ul>\n<p>この書き方は<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Haskell\">Haskell</a>風なので、クセの無い書き方なら：</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20length%20%3A%20%5Cforall%5Calpha.%20%5Cmathrm%7BList%7D%28%5Calpha%29%20%5Cto%20Int%20\" alt=\" length : \\forall\\alpha. \\mathrm{List}(\\alpha) \\to Int \" /></li> \n</ul>\n<p>コロンは1個で、適用（引数渡し）は丸括弧を使いました。'<img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%5Cforall\" alt=\"\\forall\" />'は論理の全称記号ですが、単に記号を借用しているだけです<a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#f-554066f1\" name=\"fn-554066f1\" title=\"多相関数のプロファイル記述の状況が、論理で全称記号を使う状況と幾分かは似たところがあるのは事実です。が、ソックリというわけではありません。\">*1</a>。誤解と混乱を避けるためには、全称記号とのアナロ<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B8%A1%BC\">ジー</a>は断ち切ったほうが無難です。</p>\n<p>上記のプロファイルでは「<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%AE%A5%EA%A5%B7%A5%E3%CA%B8%BB%FA\">ギリシャ文字</a>小文字は型を表す」約束ですが、一般的な“パラメータを持った型”を扱いたいので、多相関数のプロファイル記述は次の形にします。</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20f%20%3A%20%5Cforall%20x%20%5Cin%20X.%20F%28x%29%20%5Cto%20G%28x%29%20\" alt=\" f : \\forall x \\in X. F(x) \\to G(x) \" /></li> \n</ul>\n<p>ここで：</p> \n<ul> \n <li>fは多相関数（ちゃんとした定義は後述）</li> \n <li>Xはパラメータの集合（集合なら何でもいい）</li> \n <li>xは何らかのパラメータ（xは束縛変数になる）</li> \n <li>F(x) と G(x) はパラメータを持った型</li> \n</ul>\n<p>パラメータ a∈X を固定すると、通常の型〈集合〉のあいだの通常の関数〈<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%CC%C1%FC\">写像</a>〉になります。</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20f_a%20%3A%20F%28a%29%20%5Cto%20G%28a%29%20\" alt=\" f_a : F(a) \\to G(a) \" /></li> \n</ul>\n<p>lengthの例では、G(x) がxによらずにいつでも Int だったわけです。その意味でlengthは特殊な例なので、別な例を挙げましょう。「<a href=\"https://m-hiyama.hatenablog.com/entry/2020/09/10/165942\">ツリーデータ型のモナド</a>」で紹介したリーフ値付きツリー〈<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/leaf\">leaf</a> valued tree〉LVTree<sub>K</sub>(A) を思い出してください。LVTree<sub>K</sub>(A) の部分集合を定義しましょう。</p> \n<ul> \n <li>LVOTree(A) ⊆ LVTree<sub><b>N</b></sub>(A)</li> \n</ul>\n<p>部分集合 LVOTree(A) が何であるか説明します； LVTree<sub><b>N</b></sub>(A) は、キー（グラフの辺ラベル、パスのセグメント）の集合を<b>N</b>としたリーフ値付きツリーの集合です。<b>N</b>を単なる<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%B2%C4%BB%BB%CC%B5%B8%C2%BD%B8%B9%E7\">可算無限集合</a>と捉えるのではなく、通常の大小順序で全順序集合と考えます。兄弟ノード達を、0 &lt; 1 &lt; 2 &lt; ... と連番で番号付けます。すると、兄弟のあいだに順序が決まります； 長男ノード、次男ノード、‥‥ という具合に。このような番号付けと兄弟間全順序を持つリーフ値付きツリーの集合が LVOTree(A) です。LVOは、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Leaf\">Leaf</a> Velued and Ordered です。下図は兄弟間の順序と、ノードのパス表現（赤字、スラッシュと数字1が紛らわしいかな）を示した図です。</p>\n<p><img src=\"http://www.chimaira.org/img5/ordered-tree.jpg\" /></p>\n<p>t∈LVOTree(A) に対して、兄弟間の順序と親子関係を組み合わせることにより、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BF%BC%A4%B5%CD%A5%C0%E8%C3%B5%BA%F7\">深さ優先探索</a>の順序として、tのノードの集合にも全順序が決まります。tのノード達は一列に並べることができるのです。</p>\n<p>t∈LVOTree(A) に対して、リーフ（端点）の値を順に拾って並べるとリストができます。できたリストを leaves(t) とします。多相関数 leaves のプロファイルは次のように書けます。</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20leaves%20%3A%20%5Cforall%5Calpha%5Cin%20%5Cmathrm%7BType%7D.%20%5Cmathrm%7BLVOTree%7D%28%5Calpha%29%20%5Cto%20%5Cmathrm%7BList%7D%28%5Calpha%29%20\" alt=\" leaves : \\forall\\alpha\\in \\mathrm{Type}. \\mathrm{LVOTree}(\\alpha) \\to \\mathrm{List}(\\alpha) \" /></li> \n</ul>\n<p>ここで出てきたTypeについては次節で説明します。</p>\n<p><h4 id=\"型と関数の圏\">型と関数の圏</h4></p>\n<p>型や関数の話をするときには、舞台となる圏をセットアップします。<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%B7%F7%CF%C0\">圏論</a>にあまり馴染みがない方は、この節は流し読みでかまいません。</p>\n<p>型を対象として、関数を射とする圏を<i>C</i>とします。<i>C</i>を、完全に抽象的な圏だとすると話がややこしくなるので、<em style=\"text-decoration:underline\">集合圏<b>Set</b>の部分圏</em>だとします。単なる部分圏ではやりたいことが出来ないので、次の条件を付けます。</p> \n<ul> \n <li><i>C</i>は、集合圏の直積と指数を引き継いて<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C7%A5%AB%A5%EB%A5%C8\">デカルト</a>閉圏になる。</li> \n</ul>\n<p>言い方を換えると、<i>C</i>は<em style=\"text-decoration:underline\"><a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C7%A5%AB%A5%EB%A5%C8\">デカルト</a>閉圏<b>Set</b>の部分<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C7%A5%AB%A5%EB%A5%C8\">デカルト</a>閉圏</em>です。これは、<i>C</i>内で集合の直積 A×B、集合の指数 B<sup>A</sup> = [A, B] = (AからBへのすべての関数の集合) が自由に使えることです。</p>\n<p>他に、極限・余極限に関して（<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C7%A5%AB%A5%EB%A5%C8\">デカルト</a>閉圏より強い）条件が必要になることがありますが、必要になったら言及することにします。圏のサイズの問題を回避するために<i>C</i>は小さい圏〈small category〉だと仮定することもあります。要するに、都合のいい条件を適宜付け加えて考える、ってことです。しかし、<i>C</i>を完全に具体化すると窮屈過ぎるので、完全な具体化はしません。</p>\n<p>さて、Type := |<i>C</i>| と定義します。<i>C</i>の対象である集合を「型」と呼ぶので、これは当たり前の定義です。<i>C</i> が小さい圏なら、Type = |<i>C</i>| は集合になります。集合と型を同義で使うので、この場合は「Typeも型〈集合〉だ」は正しいです。が、Type∈Type はウソです。</p> \n<ul> \n <li>Typeは型だ。</li> \n <li>Typeは型の集合だ。</li> \n <li>よって、型Typeは、型の集合Typeの要素だ。</li> \n</ul>\n<p>という、インチキな推論をしているのです。こういう“字面だけのマヤカシ”を真に受けてはダメですよ<a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#f-3ce029a7\" name=\"fn-3ce029a7\" title=\"型の世界Typeに、“万能な型”Uがあって、世界であるTypeがUに吸い込まれるような再起的構造を持つことはあります。それは“字面だけのマヤカシ”ではありません。\">*2</a>。</p>\n<p><i>C</i>が小さくないとき -- 極端なケースとして <i>C</i> = <b>Set</b> のときなど -- は、Type∈|<b>Set</b>| になりません。じゃ、どうするか？ おそらく、<a href=\"https://m-hiyama.hatenablog.com/entry/20180405/1522890331\">グロタンディーク宇宙</a>を引き合いに出さないといけないので、この話はやめます。心の安らぎを得たい人は、<i>C</i>は小さいと仮定してください。</p>\n<p>Typeは“今考え得るすべての型の集合”なので、Typeの部分集合は素朴な意味で“型の型”になります。“型の型”を表す安定した用語はありませんが、ここでは<strong style=\"color:crimson\">型カインド</strong>〈type kind〉と呼んでおきます。</p> \n<ul> \n <li>Kが型カインドである ⇔ K⊆Type ⇔ K⊆|<i>C</i>|</li> \n</ul>\n<p>仮に<i>C</i>が大きな圏でも、考える型カインドを小さいものに限れば、サイズの問題は回避できます。サイズの大小をいちいちチェックしたくないので、ここではそういう制約は採用しませんけど（ものぐさ）。</p>\n<p><h4 id=\"型ファミリー\">型ファミリー</h4></p>\n<p>最初の節で「パラメータを持った型」という言葉を出しました。「パラメータ」より「インデックス」と呼ぶほうが多いかも知れません。「インデックスを持った型」ですね。言い回しとしては、</p> \n<ul> \n <li>インデックス付き型</li> \n <li>インデックスされた型</li> \n</ul>\n<p>のほうが語感がいいかも。英語でフルに書けば indexed family of types なので、直訳なら「インデックスされた型の族」です。‥‥ てなことを考えると、言葉はやたら増えます。<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%C0%B5%B5%AC%C9%BD%B8%BD\">正規表現</a>（「<a href=\"https://m-hiyama.hatenablog.com/entry/2019/11/11/115042\">用語のバリエーション記述のための正規表現</a>」参照）で書けば：</p> \n<ul> \n <li>{{インデックス | パラメータ}{付き | された}}?型{の}?{族 | ファミリー}?</li> \n</ul>\n<p>どれで呼ぼうが<em style=\"text-decoration:underline\">全部同義</em>です。ここでは<strong style=\"color:crimson\">型ファミリー</strong>〈type family〉を選んでおきます。</p>\n<p><em style=\"text-decoration:underline\">型値関数</em>〈type-valued function〉が一番素直な言い方だと思います。残念ながら、型値関数はあまり使われない言葉です。</p>\n<p>型ファミリーは F:X → Type という関数に過ぎませんが、<em style=\"text-decoration:underline\">行きがかり上</em>、関数の域〈domain〉を<strong style=\"color:crimson\">インデキシング集合</strong>〈indexing set〉と呼びます。これは行きがかり上なので、いつもどおり域と言う（言ってしまう）ことがあるかも知れません。</p>\n<p>型ファミリー〈型値関数〉のインデキシング集合〈域〉が型カインド〈型の集合〉のとき、世間では総称型と呼んでるんじゃないのかな。実際のところ、合意された正確な定義があるわけでもないので（コミュニティごとの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B8%A5%E3%A1%BC%A5%B4%A5%F3\">ジャーゴン</a>があるだけなので）何とも言えませんが、ここでは、インデキシング集合が型カインドである型ファミリーが<strong style=\"color:crimson\">総称型</strong>〈generic type〉だとします。</p>\n<p>型から型を作るのが総称型なら、それは型構成子と同じでは？ 特別なニュアンスを込めないなら、総称型と型構成子は同義です。それと、多相型も同義です、たぶん。なんでこんなに同義語が溢れかえっているの？ ワシャ知らん！<a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#f-5a5428c5\" name=\"fn-5a5428c5\" title=\"ほんとの事情は分かりませんが、おそらく、色々なコミュニティが異なる言葉を使い、誰も集約しようとしないせいでしょう。\">*3</a></p>\n<p><h4 id=\"依存型-依存積型と依存和型\">依存型： 依存積型と依存和型</h4></p>\n<p>再び、多相関数のプロファイルの話に戻ります。</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20f%20%3A%20%5Cforall%20x%20%5Cin%20X.%20F%28x%29%20%5Cto%20G%28x%29%20\" alt=\" f : \\forall x \\in X. F(x) \\to G(x) \" /></li> \n</ul>\n<p>この書き方は使います（特に忌避しません）が、「<a href=\"https://m-hiyama.hatenablog.com/entry/2020/09/07/165418\">蒸し返し： アドホック多相 vs パラメトリック多相</a>」で次のように書いてます。</p> \n<blockquote> \n <p>僕は、ここに'∀'を使うのは好きではありません、だって論理の'∀'と似てないもんね。まー、意味ではなくて単に記号だけテキトーに借用していると解釈しましょう。</p> \n</blockquote> \n<p>好きではないのです。じゃ、どんな書き方が好きかというと、次の形です。</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20f%20%5Cin%20%5Cprod_%7B%20x%20%5Cin%20X%7D%20%5BF%28x%29%2C%20%20G%28x%29%5D%20\" alt=\" f \\in \\prod_{ x \\in X} [F(x),  G(x)] \" /></li> \n</ul>\n<p>または、</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20f%3A%5Csum_%7Bx%20%5Cin%20X%7DF%28x%29%20%5Cto%20%5Csum_%7Bx%20%5Cin%20X%7DG%28x%29%20%5Cmbox%7B%20over%20%7D%20X\" alt=\" f:\\sum_{x \\in X}F(x) \\to \\sum_{x \\in X}G(x) \\mbox{ over } X\" /></li> \n</ul>\n<p>ここで、<img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%5Cprod_%7B%20x%20%5Cin%20X%7D\" alt=\" \\prod_{ x \\in X}\" /> は総積の記号、<img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%5Csum_%7Bx%20%5Cin%20X%7D\" alt=\"\\sum_{x \\in X}\" /> は総和の記号です。型に関して使われたときは、依存積〈dependent product〉と依存和〈dependent sum〉を表します（定義は後述）。下付きや特殊なフォントが使えないときは通常テキストで次のように書きます。</p> \n<ul> \n <li>f∈(Πx∈X.[F(x), G(x)])</li> \n <li>f:Σx∈X.F(x) → Σx∈X.G(x) over X</li> \n</ul>\n<p>多相関数をちゃんと定義する／ちゃんと理解するとは、多相関数のプロファイルの意味をハッキリさせることに他なりません。多相関数のプロファイルのなかに依存積や依存和が登場しているので、依存積・依存和の意味をハッキリさせることも必要です。</p>\n<p>集合と関数〈<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%CC%C1%FC\">写像</a>〉の概念を組み合わせて、依存積・依存和と多相関数をちゃんと定義できます。<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%B7%F7%CF%C0\">圏論</a>を知っていれば手っ取り早い定義も可能です（すぐ下の補足）。が、この記事の残りの部分では、集合と<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%CC%C1%FC\">写像</a>を<em style=\"text-decoration:underline\">手でいじくり回して</em>、依存型と多相関数を説明します。</p>\n<p>\n <div class=\"note\">\n  <b>[補足]</b>\n  <br /> 集合Xを\n  <em style=\"text-decoration:underline\">離散圏</em>とみなします。離散圏も同じ記号Xで表します。すると、型ファミリー F, G:X → |\n  <i>C</i>| は関手となるので、F, G:X → \n  <i>C</i> in \n  <b>CAT</b> です。したがって、F, G∈|[X, \n  <i>C</i>]| と書けます。ここで、[-, -] は関手圏を表します。fは関手圏 [X, \n  <i>C</i>] の射、つまり自然変換とします。\n </div></p> \n<ul> \n <li>f:F → G in [X, <i>C</i>]</li> \n <li>f∈[X, <i>C</i>](F, G)</li> \n <li>f::F ⇒ G:F → G in <b>CAT</b></li> \n</ul>\n<p>上の3つの書き方はどれも同値です。この状況のとき、fは型ファミリーFから型ファミリーGへの<em style=\"text-decoration:underline\">多相関数</em>です。（定義、終わり。）</p>\n<p><i>C</i>が集合圏の部分<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%C7%A5%AB%A5%EB%A5%C8\">デカルト</a>閉圏ならば、指数 [-, -] があります。ブラケット記号が関手圏と<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%AA%A1%BC%A5%D0%A1%BC%A5%ED%A1%BC%A5%C9\">オーバーロード</a>されてますが、今度のブラケットは<i>C</i>の指数です。H(x) := [F(x), G(x)] と定義される H:X → <i>C</i> も関手になります。<i>C</i>が十分な極限を持つとして、A := Lim H と定義します。Aは極限錐の頂点集合です。この集合Aが、<em style=\"text-decoration:underline\">依存積型</em> Πx∈X.[F(x), G(x)] と同じものです。</p>\n<p>集合Aの要素、あるいは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%CC%C1%FC\">写像</a> <b>1</b> → A in <i>C</i> と、FからGへの自然変換は1：1に対応します。この対応により、F ⇒ G:X → <i>C</i> という自然変換と Πx∈X.[F(x), G(x)] の要素を同一視すると、次の書き方になります。</p> \n<ul> \n <li>f∈(Πx∈X.[F(x), G(x)])</li> \n <li>f:Σx∈X.F(x) → Σx∈X.G(x) over X</li> \n</ul>\n<p>下のほうのプロファイルは、自然変換の成分 f<sub>x</sub>:F(x) → G(x) が寄せ集まった様子を記述しています。ここで出てきた依存和型 Σx∈X.F(x)、Σx∈X.G(x) は余極限として定義できます。</p>\n<p>これで、多相関数のプロファイルの2つの書き方を合理化できました。以上が、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%B7%F7%CF%C0\">圏論</a>を使った依存型と多相関数の定義（の概略）です。<br /> <b>[/補足]</b></p>\n<p><h4 id=\"依存和型-型ファミリーの総和\">依存和型： 型ファミリーの総和</h4></p>\n<p>それでは、依存和型を具体的に地道に作っていきましょう。依存和型は（依存積型もだけど）型ファミリーに対して定義されます。F:X → Type を型ファミリーとします。念のため再度確認しておくと、Type = |<i>C</i>| で、<i>C</i>は集合圏の部分圏でした。x∈X に対して値 F(x) は型、つまり集合なので、次の合併集合が作れます。</p>\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%5Cmathscr%7BF%7D%20%3A%3D%20%5Cbigcup_%7Bx%5Cin%20X%7D%20F%28x%29\" alt=\"\\mathscr{F} := \\bigcup_{x\\in X} F(x)\" /></p>\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%5Cmathscr%7BF%7D\" alt=\"\\mathscr{F}\" /> は合併集合なので次が成立します。</p>\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20a%5Cin%20%5Cmathscr%7BF%7D%20%5CLeftrightarrow%20%5Cexists%20t%20%5Cin%20X.%28%20a%5Cin%20F%28t%29%29\" alt=\" a\\in \\mathscr{F} \\Leftrightarrow \\exists t \\in X.( a\\in F(t))\" /></p>\n<p>型ファミリーFの<strong style=\"color:crimson\">依存和型</strong>〈dependent sum type | 総和集合〉は次のように定義します。</p>\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%5Csum_%7Bx%5Cin%20X%7DF%28x%29%20%3A%3D%20%5C%7B%28x%2C%20y%29%20%5Cin%20X%5Ctimes%20%5Cmathscr%7BF%7D%20%5Cmid%20y%20%5Cin%20F%28x%29%20%5C%7D\" alt=\"\\sum_{x\\in X}F(x) := \\{(x, y) \\in X\\times \\mathscr{F} \\mid y \\in F(x) \\}\" /></p>\n<p>これだけだとピンと来ないかも知れないので、X = {1, 2} のときを考えてみましょう。</p>\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%5Cmathscr%7BF%7D%20%3A%3D%20%5Cbigcup_%7Bx%5Cin%20%5C%7B1%2C%202%5C%7D%7D%20F%28x%29%20%3D%20F%281%29%5Ccup%20F%282%29\" alt=\" \\mathscr{F} := \\bigcup_{x\\in \\{1, 2\\}} F(x) = F(1)\\cup F(2)\" /></p>\n<p>これより、</p>\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20a%5Cin%20%5Cmathscr%7BF%7D%20%5CLeftrightarrow%20%5Cexists%20t%20%5Cin%20%5C%7B1%2C%202%5C%7D.%28%20a%5Cin%20F%28t%29%29%0A%5CLeftrightarrow%20%20a%5Cin%20F%281%29%20%5Clor%20a%5Cin%20F%282%29\" alt=\" a\\in \\mathscr{F} \\Leftrightarrow \\exists t \\in \\{1, 2\\}.( a\\in F(t))\n\\Leftrightarrow  a\\in F(1) \\lor a\\in F(2)\" /></p>\n<p>X = {1, 2} の場合の依存和型の定義は：</p>\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%5Csum_%7Bx%5Cin%20%5C%7B1%2C%202%5C%7D%7DF%28x%29%20%3A%3D%20%5C%7B%28x%2C%20y%29%20%5Cin%20%5C%7B1%2C%202%5C%7D%5Ctimes%20%5Cmathscr%7BF%7D%20%5Cmid%20y%20%5Cin%20F%28x%29%20%5C%7D\" alt=\" \\sum_{x\\in \\{1, 2\\}}F(x) := \\{(x, y) \\in \\{1, 2\\}\\times \\mathscr{F} \\mid y \\in F(x) \\}\" /></p>\n<p>書き換えると：</p>\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%0A%5C%3A%5C%3A%5C%3A%5C%3A%20%5C%7B%28x%2C%20y%29%20%5Cin%20%5C%7B1%2C%202%5C%7D%5Ctimes%20%5Cmathscr%7BF%7D%20%5Cmid%20y%20%5Cin%20F%28x%29%20%5C%7D%20%5C%5C%0A%3D%20%5C%7B%28x%2C%20y%29%20%5Cin%20%5C%7B1%2C%202%5C%7D%5Ctimes%20%28F%281%29%5Ccup%20F%282%29%29%20%5Cmid%20y%20%5Cin%20F%28x%29%20%5C%7D%20%5C%5C%0A%3D%20%5C%7B%281%2C%20y%29%20%5Cin%20%5C%7B1%5C%7D%5Ctimes%20%28F%281%29%5Ccup%20F%282%29%29%20%5Cmid%20y%20%5Cin%20F%281%29%20%5C%7D%20%5Ccup%20%20%5C%5C%0A%5C%3A%5C%3A%5C%3A%5C%3A%20%5C%7B%282%2C%20y%29%20%5Cin%20%5C%7B2%5C%7D%5Ctimes%20%28F%281%29%5Ccup%20F%282%29%29%20%5Cmid%20y%20%5Cin%20F%282%29%20%5C%7D%20%20%5C%5C%0A%3D%20%28%5C%7B1%5C%7D%5Ctimes%20F%281%29%29%20%5Ccup%20%28%5C%7B2%5C%7D%5Ctimes%20F%282%29%29%0A\" alt=\" \n\\:\\:\\:\\: \\{(x, y) \\in \\{1, 2\\}\\times \\mathscr{F} \\mid y \\in F(x) \\} \\\\\n= \\{(x, y) \\in \\{1, 2\\}\\times (F(1)\\cup F(2)) \\mid y \\in F(x) \\} \\\\\n= \\{(1, y) \\in \\{1\\}\\times (F(1)\\cup F(2)) \\mid y \\in F(1) \\} \\cup  \\\\\n\\:\\:\\:\\: \\{(2, y) \\in \\{2\\}\\times (F(1)\\cup F(2)) \\mid y \\in F(2) \\}  \\\\\n= (\\{1\\}\\times F(1)) \\cup (\\{2\\}\\times F(2))\n\" /></p>\n<p>さらに、<img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20A%20%3A%3D%20F%281%29%2C%5C%3B%20B%20%3A%3D%20F%282%29\" alt=\" A := F(1),\\; B := F(2)\" /> と置けば、最後に得られた集合は：</p>\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%28%5C%7B1%5C%7D%5Ctimes%20A%29%20%5Ccup%20%28%5C%7B2%5C%7D%5Ctimes%20B%29%20%3D%20A%20%2B%20B\" alt=\" (\\{1\\}\\times A) \\cup (\\{2\\}\\times B) = A + B\" /></p>\n<p>集合の直和 A + B はこのように定義されるのでした（下図も参照）。</p>\n<p><img src=\"http://www.chimaira.org/img5/set-direct-sum.jpg\" /></p>\n<p><h4 id=\"依存和型もっと\">依存和型もっと</h4></p>\n<p>型ファミリー〈型値関数〉 F:X → Type に対する依存和型 Σx∈X.F(x) は、直感的に言えば、集合 F(x) 達を互いに共通部分がないように“引き離して”寄せ集めたものです。寄せ集めることが足し算に似ているので、総和記号を使って書きます。</p>\n<p>依存和型〈総和集合〉構成のときに問題となるのは、どうやって「共通部分がないように引き離す」かです。引き離す算段として、x∈X ごとに {x}×F(x) を作って、それらを寄せ集めています。</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29%20%3D%20%5Cbigcup_%7Bx%5Cin%20X%7D%28%5C%7Bx%5C%7D%5Ctimes%20F%28x%29%29\" alt=\" \\sum_{x\\in X}F(x) = \\bigcup_{x\\in X}(\\{x\\}\\times F(x))\" /></li> \n</ul>\n<p>前節の定義では、<img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%5Cbigcup_%7Bx%5Cin%20X%7D%28%5C%7Bx%5C%7D%5Ctimes%20F%28x%29%20%29\" alt=\" \\bigcup_{x\\in X}(\\{x\\}\\times F(x) )\" /> を、<img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=X%20%5Ctimes%20%28%5Cbigcup_%7Bx%5Cin%20X%7DF%28x%29%20%29\" alt=\"X \\times (\\bigcup_{x\\in X}F(x) )\" /> の部分集合とみなしています。</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29%20%5Csubseteq%20%20X%20%5Ctimes%20%28%5Cbigcup_%7Bx%5Cin%20X%7DF%28x%29%20%29\" alt=\" \\sum_{x\\in X}F(x) \\subseteq  X \\times (\\bigcup_{x\\in X}F(x) )\" /></li> \n</ul>\n<p>こう考えると、依存和型の要素は、<img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%28x%2C%20y%29%2C%5C%3B%20x%5Cin%20X%2C%5C%3B%20y%5Cin%20%5Cbigcup_%7Bx%5Cin%20X%7DF%28x%29\" alt=\" (x, y),\\; x\\in X,\\; y\\in \\bigcup_{x\\in X}F(x)\" /> の形をしています。ただし、<img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20x%5Cin%20F%28x%29\" alt=\" x\\in F(x)\" /> の条件は満たしています。</p>\n<p>直積集合 <img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=X%20%5Ctimes%20%28%5Cbigcup_%7Bx%5Cin%20X%7DF%28x%29%20%29\" alt=\"X \\times (\\bigcup_{x\\in X}F(x) )\" /> の第一射影を π、第二射影を β とします。πとβを <img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29\" alt=\" \\sum_{x\\in X}F(x)\" /> に制限すると、次の図式になります。</p>\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%5Crequire%7BAMScd%7D%0A%5Cbegin%7BCD%7D%0A%5Csum_%7Bx%5Cin%20X%7DF%28x%29%20%40%3E%7B%5Cbeta%5EF%7D%3E%3E%20%20%5Cbigcup_%7Bx%5Cin%20X%7DF%28x%29%20%20%5C%5C%0A%40V%7B%5Cpi%5EF%7DVV%20%5C%5C%0AX%0A%5Cend%7BCD%7D%0A\" alt=\"\\require{AMScd}\n\\begin{CD}\n\\sum_{x\\in X}F(x) @>{\\beta^F}>>  \\bigcup_{x\\in X}F(x)  \\\\\n@V{\\pi^F}VV \\\\\nX\n\\end{CD}\n\" /></p>\n<p>πとβの右肩にFを付けているのは、Fごとにπとβは異なるからです。が、<em style=\"text-decoration:underline\">通常は右肩のFは省略します</em>。</p>\n<p>総和と合併を型ファミリー〈型値関数〉に対するオペレーターと考えれば、次のように簡潔に書けます。</p>\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%5Crequire%7BAMScd%7D%0A%5Cbegin%7BCD%7D%0A%5Csum%28F%29%20%40%3E%7B%5Cbeta%5EF%7D%3E%3E%20%20%5Cbigcup%28F%29%20%20%5C%5C%0A%40V%7B%5Cpi%5EF%7DVV%20%5C%5C%0A%5Cmathrm%7Bdom%7D%28F%29%0A%5Cend%7BCD%7D%0A\" alt=\"\\require{AMScd}\n\\begin{CD}\n\\sum(F) @>{\\beta^F}>>  \\bigcup(F)  \\\\\n@V{\\pi^F}VV \\\\\n\\mathrm{dom}(F)\n\\end{CD}\n\" /></p>\n<p>Fのインデキシング集合〈Fの域〉が有限集合のときは、Fの依存和型を<strong style=\"color:crimson\">弁別子付きユニオン型</strong>〈descriminated union type〉と言います（「ユニオン」の代わりに「バリアント」ということもあります）。dom(F) = (Fのインデキシング集合) の要素を<strong style=\"color:crimson\">弁別子</strong>〈descriminator〉とか<strong style=\"color:crimson\">タイプタグ</strong>〈type tag〉あるいは単に<strong style=\"color:crimson\">タグ</strong>〈tag〉と呼びます。</p>\n<p>ここでは、X = dom(F) が有限でも有限でなくても<em style=\"text-decoration:underline\">何であっても</em>、Xの要素をタグと呼びます。そして、型ファミリー〈型値関数〉Fの依存和型〈総和集合〉Σ(F)の要素を<strong style=\"color:crimson\">タグ付き値</strong>〈tagged <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/value\">value</a>〉と呼びます。z∈Σ(F) に対して、</p> \n<ul> \n <li>π(z) は、タグ付き値zのタグ</li> \n <li>β(z) は、タグ付き値zの<strong style=\"color:crimson\">ボディ</strong>〈body〉</li> \n</ul>\n<p>「タグとボディ」は、以前Kuwataさんと僕が作っていた<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8%B8%C0%B8%EC\">スクリプト言語</a>で使っていた用語です。その<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8%B8%C0%B8%EC\">スクリプト言語</a>では、タグ付き値（タグとボディのペア）(x, y) を @x y と書いていました。この記事では逆順の y@x と書くことにします（理由は後述）。y@x は (x, y) と同じですが、アットマークにより依存和型の要素であることを強調・明示します。</p>\n<p>タグ付き値の処理には、タグ部分でパターンマッチ＆分岐するケース文が使えます。X = {1, 2} で、F(1) = A, F(2) = B であれば、Σ(F) = A + B として：</p> \n<pre class=\"code\" data-lang=\"\" data-unlink=\"\">case z∈(A + B) of\n  a@1 =&gt; (a∈A に対する処理)\nor\n  b@2 =&gt; (b∈A に対する処理)\nendcase</pre>\n<p>型そのものがタグになっている場合は、型ケース文になります<a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#f-e3f2969f\" name=\"fn-e3f2969f\" title=\"我々が作っていたスクリプト言語では、明示的にタグが付いてなくても「暗黙のタグ」が付く仕様でした。例えば、文字列リテラル &quot;hello&quot; は文字列型だと分かるので、@string &quot;hello&quot; と同等に扱います。これにより、タグによるケース分岐と型による分岐は一様に扱えます。\">*4</a>。X = {Int, String} で、F(Int) = Int, F(String) = String であれば、Σ(F) = Int + String として：</p> \n<pre class=\"code\" data-lang=\"\" data-unlink=\"\">case z∈(Int + String) of\n  i@Int =&gt; (i∈Int に対する処理)\nor\n  s@String =&gt; (s∈String に対する処理)\nendcase</pre>\n<p>型そのものがタグになっている場合は、i@Int = (Int, i) は、「型 Int に所属する i」の意味です。型が特定済みのデータですね。この場合だと、アットマークを使った「i@Int ＝ 型 Int に所属する i」はメールアドレスみたいな印象がありませんか？<a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#f-52a4910c\" name=\"fn-52a4910c\" title=\"僕みたいな年寄りだと、メールアドレスの書式は、個人名@所属組織名 だと思っているのですが、今はそうでもないかもな。\">*5</a>（これが、記法の由来。）</p>\n<p>実在する<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%D7%A5%ED%A5%B0%A5%E9%A5%DF%A5%F3%A5%B0%B8%C0%B8%EC\">プログラミング言語</a>における依存和型〈ユニオン型〉の話が次の記事にあります。</p> \n<ul> \n <li><a href=\"https://m-hiyama.hatenablog.com/entry/20180117/1516157225\">TypeScriptのはなし ： ユニオン型がけっこうイイね</a></li> \n</ul>\n<p>依存和型をケンロニストがどう捉えるかは下の補足に書いときます。</p>\n<p>\n <div class=\"note\">\n  <b>[補足]</b>\n  <br /> 先の補足に書いたように、型ファミリーを離散圏からの関手 F:X → \n  <i>C</i> in \n  <b>CAT</b> とみなすと、Fの余極限として依存和型を定義できます。が、別の捉え方もあります。\n </div></p>\n<p><i>C</i>⊆<b>Set</b> であり、<b>Set</b>の対象である集合は離散圏とみなせ、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%CC%C1%FC\">写像</a>は離散圏のあいだの関手とみなせるので、<b>Set</b>⊆<b>Cat</b> です。結局、<i>C</i> → <b>Cat</b> と埋め込めるので、型ファミリー（離散圏からの関手） F:X → <i>C</i> は F:X → <b>Cat</b> とみなすことができます。</p>\n<p>以上のように考えれば、型ファミリーFは、離散圏Xから“圏の圏”<b>Cat</b>への関手です。これは、Xをインデキシング圏とする<em style=\"text-decoration:underline\">インデックス付き圏</em>〈indexed category〉です。インデックス付き圏については次の記事参照。</p> \n<ul> \n <li><a href=\"https://m-hiyama.hatenablog.com/entry/20100513/1273721343\">インデックス付き圏のグロタンディーク構成 </a></li> \n</ul>\n<p>インデックス付き圏 F:X → <b>Cat</b> にグロタンディーク構成を施して得られた平坦化圏が依存和型に対応します。射影 π<sup>F</sup>:Σ(F) → X はグロタンディーク構成のファイブレーションです。<br /> <b>[/補足]</b></p>\n<p><h4 id=\"依存積型-型ファミリーの総積\">依存積型： 型ファミリーの総積</h4></p>\n<p>依存積型を具体的に定義するとき、（僕が）思いつく方法が2つあります。どっちを採用してもできる集合は同型なので、抽象レベルでは「どっちでも同じ、どうでもいい」のですが、具体的な計算・処理だと差が出るので、どっちにするか悩みます。悩んだ結果、Map(X, ∪(F)) の部分集合として定義する方法をプライマリにします。別な方法も（<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%BB%A5%AB%A5%F3%A5%C0%A5%EA\">セカンダリ</a>として）後で紹介します。</p>\n<p>記号の約束： 圏<i>C</i>のホムセット <i>C</i>(A, B) を Map<sub><i>C</i></sub>(A, B) とも書きます。<i>C</i>は集合圏の部分圏だったので、ホムセットは<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%CC%C1%FC\">写像</a>〈関数〉の集合ですから、<i>C</i>に属する<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%CC%C1%FC\">写像</a>〈map〉を Map<sub><i>C</i></sub> と書くのはいいでしょう。さらに、<i>C</i>を前提にしている状況では、Map<sub><i>C</i></sub>(A, B) = Map(A, B) と略記します。</p> \n<ul> \n <li><i>C</i>(A, B) = Map<sub><i>C</i></sub>(A, B) = Map(A, B) （今の文脈では）</li> \n <li>f:A → B in <i>C</i> ⇔ f∈Map(A, B) （今の文脈では）</li> \n</ul>\n<p>依存和型と同様、依存積型も型ファミリー F:X → Type に対して定義されます。型ファミリーFに対する依存積型は次のように書きます（書き方だけ）。</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%5Cprod_%7Bx%5Cin%20X%7DF%28x%29%20%3D%20%5Cprod%28F%29%20%3D%20%5CPi%28F%29\" alt=\"\\prod_{x\\in X}F(x) = \\prod(F) = \\Pi(F)\" /></li> \n</ul>\n<p>型ファミリーFから依存積型を作る操作をオペレーターと考えれば、Xやxは不要です（Xは dom(F) として得られる）。<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/TeX\">TeX</a>だと、総積記号と大文字パイは違う記号ですが、どっちでもいいです。</p>\n<p>予告どおり、Fの<strong style=\"color:crimson\">依存積型</strong>〈dependent prduct type〉 Π(F) を、Map(X, ∪(F)) の部分集合として定義します。</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%5Cprod%28F%29%20%3A%3D%20%5C%7Bt%5Cin%20Map%28X%2C%20%5Cbigcup%28F%29%20%29%20%5Cmid%20%5Cforall%20x%5Cin%20X.%28%5C%2C%20t%28x%29%20%5Cin%20F%28x%29%20%5C%2C%29%5C%7D\" alt=\" \\prod(F) := \\{t\\in Map(X, \\bigcup(F) ) \\mid \\forall x\\in X.(\\, t(x) \\in F(x) \\,)\\}\" /></li> \n</ul>\n<p>定義から当然に <img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%5Cprod%28F%29%20%5Csubseteq%20Map%28X%2C%20%5Cbigcup%28F%29%20%29\" alt=\" \\prod(F) \\subseteq Map(X, \\bigcup(F) )\" /> です。したがって、依存積型の要素は、<img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20t%3AX%20%E2%86%92%20%5Cbigcup%28F%29\" alt=\" t:X → \\bigcup(F)\" /> という<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%CC%C1%FC\">写像</a>です。ただし、tが勝手な<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%CC%C1%FC\">写像</a>でいいわけではなくて、xに対する値 t(x) は型ファミリーの値 F(x) に入っている必要があります。</p>\n<p>依存和型のときと同様に、X = {1, 2} , F(1) = A, F(2) = B として考えてみましょう。このとき、∪(F) = A∪B なので、Π(F) ⊆ Map({1, 2}, A∪B) です。t∈Π(F) である条件は：</p> \n<ul> \n <li>∀x∈{1, 2}.( t(1)∈A かつ t(2)∈B)</li> \n</ul>\n<p>t = (t(1), t(2)) と書くなら、tは直積 A×B の要素とみなせます。なので、次の同型が成立します。</p> \n<ul> \n <li>Π(F) <img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%5Ccong\" alt=\"\\cong\" /> A×B</li> \n</ul>\n<p>これで、インデキシング集合が {1, 2} の型ファミリーFの依存積型は F(1)×F(2) と同型だと分かりました。言い方を換えれば、依存積型は直積型の一般化です。この事情から、依存積型の要素を<strong style=\"color:crimson\">タプル</strong>〈tuple〉と呼びます。タプル（実体は関数）tの値 t(x) をタプルtの<strong style=\"color:crimson\">成分</strong>〈component〉と呼びます。「タプルと成分」に対する<em style=\"text-decoration:underline\">同義語は山ほどあります</em>が、めんどくさいので列挙はしません。</p>\n<p>t∈Π(F) のとき、型ファミリーFはタプルtの型<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%AD%A1%BC%A5%DE\">スキーマ</a>（データベースで言えばテーブル<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%AD%A1%BC%A5%DE\">スキーマ</a>）だと言えます。今は、データベースの用語「<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%AD%A1%BC%A5%DE\">スキーマ</a>」を使ったのですが、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%B7%BF%CD%FD%CF%C0\">型理論</a>としては誰かが「型<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%AD%A1%BC%A5%DE\">スキーマ</a>」に別な意味を与えているかも知れません（「<a href=\"https://m-hiyama.hatenablog.com/entry/20120405/1333608868\">型理論ってば</a>」参照）。</p>\n<p><h4 id=\"依存積型もっと\">依存積型もっと</h4></p>\n<p>具体的な計算を行う場合などは、依存和型と依存積型を関連付けておいたほうが便利です。なので、以下では依存和型を使って依存積型を定義します。</p>\n<p>型ファミリー F:X → Type に対する依存積型を Π(F) と書きましたが（前節のプライマリな定義で）、依存和型も Σ(F) と簡潔に書くことにします。</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%5CSigma%28F%29%20%3A%3D%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29\" alt=\" \\Sigma(F) := \\sum_{x\\in X}F(x)\" /></li> \n</ul>\n<p>Σ(F) は簡潔ですが、情報が欠損するような省略ではありません。インデキシング集合Xは、dom(F)として回復できますし、束縛変数xはもともと無意味な記号です。</p>\n<p>π:Σ(F) → X は、π(y@x) = π(​(x, y)) = x として定義されて、<strong style=\"color:crimson\">射影</strong>〈projection〉とも呼びます。射影はタグ（ペアの第1成分）を取り出す<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%CC%C1%FC\">写像</a>です。なお、タプルの成分を取る<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%CC%C1%FC\">写像</a> s <img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%5Cmapsto\" alt=\"\\mapsto\" /> s(x) も射影と呼びます。こういう用語の衝突は避けられないので諦めて注意しましょう。</p>\n<p>さて、型ファミリー F:X → Type から作った射影 π:Σ(F) → X に対して、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%CC%C1%FC\">写像</a>〈関数〉 s:X → Σ(F) が、</p> \n<ul> \n <li>s;π = id<sub>X</sub> （π<img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%5Ccirc\" alt=\"\\circ\" />s = id<sub>X</sub>）</li> \n</ul>\n<p>を満たすとき、<strong style=\"color:crimson\">セクション</strong>〈section〉または<strong style=\"color:crimson\">選択関数</strong>〈choice function〉と呼びます。</p>\n<p>射影 π:Σ(F) → X に対するセクションの全体を Γ(π:Σ(F) → X) と書き<strong style=\"color:crimson\">セクション集合</strong>〈section set〉と呼びます。射影π（正確にはπ<sup>F</sup>）は型ファミリーの依存和型から自動的に決まるので、セクション集合を Γ(Σ(F)) と略記します。</p>\n<p>今定義したセクション集合 Γ(Σ(F)) = Γ(π:Σ(F) → X) が依存積型の<em style=\"text-decoration:underline\">第二の定義</em>です。第二の定義は Π' という記号で表すとして：</p> \n<ul> \n <li>Π'(F) := Γ(Σ(F))</li> \n</ul>\n<p>(Fの依存積型) = (Fの依存和型のセクション集合) です。Π'(F) = Γ(Σ(F)) をもうちょいゴチャゴチャと書けば：</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%7B%5Cprod%27%7D_%7Bx%5Cin%20X%7DF%28x%29%20%3D%20%5CGamma%28%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29%20%29\" alt=\" {\\prod'}_{x\\in X}F(x) = \\Gamma( \\sum_{x\\in X}F(x) )\" /></li> \n</ul>\n<p>依存積型の第二の定義（今定義したばっかり）と第一の定義（前節）の関係を考えましょう。次の図式（簡略化したよ）を思い出してください。</p>\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%5Crequire%7BAMScd%7D%0A%5Cbegin%7BCD%7D%0A%5CSigma%28F%29%20%40%3E%7B%5Cbeta%7D%3E%3E%20%20%5Ccup%28F%29%20%20%5C%5C%0A%40V%7B%5Cpi%7DVV%20%5C%5C%0AX%0A%5Cend%7BCD%7D%0A\" alt=\"\\require{AMScd}\n\\begin{CD}\n\\Sigma(F) @>{\\beta}>>  \\cup(F)  \\\\\n@V{\\pi}VV \\\\\nX\n\\end{CD}\n\" /></p>\n<p>セクション s:X → Σ(F) に対して、βを後結合〈post-compose〉した (s;β):X → U(F) は、(s;β)∈Map(X, ∪(F)) ですが、(s;β)∈Π(F) となります。βを後結合する<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%BC%CC%C1%FC\">写像</a>〈βによる前送り〉を β<sub>*</sub> とすると、β<sub>*</sub> が Π'(F) と Π(F) の同型を与えます（細部は各自確認してみてください）。</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%5Cbeta_%5Cast%3A%5CGamma%28%5CSigma%28F%29%29%20%5Cto%20Map%28X%2C%20%5Ccup%28F%29%20%29\" alt=\" \\beta_\\ast:\\Gamma(\\Sigma(F)) \\to Map(X, \\cup(F) )\" /></li> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20s%20%5Cin%20%5CGamma%28%5CSigma%28F%29%29%20%5CLeftrightarrow%20%5Cbeta_%5Cast%28s%29%20%5Cin%20%5CPi%28F%29%20%5Csubseteq%20Map%28X%2C%20%5Ccup%28F%29%29%20\" alt=\" s \\in \\Gamma(\\Sigma(F)) \\Leftrightarrow \\beta_\\ast(s) \\in \\Pi(F) \\subseteq Map(X, \\cup(F)) \" /></li> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20%5CPi%27%28F%29%20%3D%20%5CGamma%28%5CSigma%28F%29%29%20%5Ccong%20%5CPi%28F%29%20\" alt=\" \\Pi'(F) = \\Gamma(\\Sigma(F)) \\cong \\Pi(F) \" /></li> \n</ul>\n<p>Π(F) と Π'(F) は集合として同型なので同一視可能です。が、現実レベル／具体レベルでは区別したほうがいいでしょう。事例を挙げます。</p>\n<p>X = {\"name\", \"age\"} として、型ファミリーFを F(\"name\") = String, F(\"age\") = Int とします。Fの依存積型 Π(F) の要素〈タプル〉tを次のように定めます。</p> \n<ul> \n <li>t(\"name\") := \"坂東トン吉\" ∈String</li> \n <li>t(\"age\") := 25 ∈Int</li> \n</ul>\n<p>このタプル t∈Π(F) に対応するセクションを s∈Π'(F) （Π'(F) = Γ(Σ(F)）とします。つまり、β<sub>*</sub>(s) = t です。s:X → Σ(F) は次のようになります。</p> \n<ul> \n <li>s(\"name\") := \"坂東トン吉\"@\"name\" ∈({\"name\"}×String)</li> \n <li>s(\"age\") := 25@\"age\" ∈({\"age\"}×Int)</li> \n</ul>\n<p>関数sの値に、引数をタグとして<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A8%A5%F3%A5%B3%A1%BC%A5%C9\">エンコード</a>しています。冗長な印象ですが、このような関数sは<em style=\"text-decoration:underline\">関数値の集合だけ</em>で表現できます。</p> \n<ul> \n <li>s = {\"坂東トン吉\"@\"name\", 25@\"age\"}</li> \n</ul>\n<p>あるいは、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/JSON\">JSON</a>構文で書くなら：</p> \n<ul> \n <li>s = {\"name\" : \"坂東トン吉\", \"age\" : 25}</li> \n</ul>\n<p>このことから、Π'(F) の要素は、名前付きタプルとかレコードとか呼ばれるデータとみなせます。フィールド名、<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%AB%A5%E9%A5%E0%CC%BE\">カラム名</a>、キーなどと呼ばれるものは、依存和型 Σ(F) のタグでもあるのです。同じインデキシング集合〈インデックスの集合 | パラメータの集合 | キーの集合 | フィールド名の集合 | <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%AB%A5%E9%A5%E0%CC%BE\">カラム名</a>の集合 | タグの集合 | スロットの集合 | ポジションの集合 etc.〉上の同じ型<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%AD%A1%BC%A5%DE\">スキーマ</a>を持つレコード型とタグ付きユニオン型は、同じ型ファミリーに対する依存積型と依存和型なのです。</p>\n<p>「型ファミリー、依存和型、依存積型」という3つの概念で説明が付くことが、コミュニティごとの<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B8%A5%E3%A1%BC%A5%B4%A5%F3\">ジャーゴン</a>〈方言〉が<em style=\"text-decoration:underline\">多数</em>あるので、複雑で錯綜した印象を与えてしまっています。</p>\n<p><h4 id=\"id2020_polym-fun-rep\">多相関数の表現方法</h4></p>\n<p>冒頭で、多相関数のプロファイル記述を2種類挙げました。</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20f%20%5Cin%20%5Cprod_%7B%20x%20%5Cin%20X%7D%20%5BF%28x%29%2C%20%20G%28x%29%5D%20\" alt=\" f \\in \\prod_{ x \\in X} [F(x),  G(x)] \" /></li> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20f%3A%5Csum_%7Bx%20%5Cin%20X%7DF%28x%29%20%5Cto%20%5Csum_%7Bx%20%5Cin%20X%7DG%28x%29%20%5Cmbox%7B%20over%20%7D%20X\" alt=\" f:\\sum_{x \\in X}F(x) \\to \\sum_{x \\in X}G(x) \\mbox{ over } X\" /></li> \n</ul>\n<p>ここで、FとGは型ファミリー F:X → Type, G:X → Type です。つまり、インデックス〈パラメータ〉 x∈X ごとに型〈集合〉 F(x) と G(x) が決まります。インデキシング集合〈インデックスの集合〉Xは何でもかまいません。Xが型カインド（e.g. X = Type）でも、X = {1, 2} でも X = <b>N</b> でも、X = {\"name\", \"age\"} でも、好きにして。</p>\n<p>集合の指数 [A, B] は、AからBへの関数の全体なので、[A, B] = Map(A, B) = <i>C</i>(A, B) です。</p>\n<p>さて、最初の記述 <img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20f%20%5Cin%20%5Cprod_%7B%20x%20%5Cin%20X%7D%20%5BF%28x%29%2C%20%20G%28x%29%5D%20\" alt=\" f \\in \\prod_{ x \\in X} [F(x),  G(x)] \" /> を解釈しましょう。依存積型の（一番目の）定義から、</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20f%3AX%20%5Cto%20%5Cbigcup_%7Bx%5Cin%20X%7D%5BF%28x%29%2C%20%20G%28x%29%5D%20\" alt=\" f:X \\to \\bigcup_{x\\in X}[F(x),  G(x)] \" /></li> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20f%28x%29%20%5Cin%20%5BF%28x%29%2C%20%20G%28x%29%5D%20\" alt=\" f(x) \\in [F(x),  G(x)] \" /></li> \n</ul>\n<p>習慣により、f(x) より f<sub>x</sub>, f&lt;x&gt;, f[x] などと書かれるので、fに関する条件は次のように書き換えましょう。</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20f_x%20%5Cin%20Map%28F%28x%29%2C%20%20G%28x%29%29%20\" alt=\" f_x \\in Map(F(x),  G(x)) \" /></li> \n</ul>\n<p>これは、インデックス（あるいは パラメータ、‥‥(略)）xごとに関数 f<sub>x</sub> が与えられているということです。多相関数とは、確かにそういうものです。そう考えれば、<img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20f%20%5Cin%20%5Cprod_%7B%20x%20%5Cin%20X%7D%20%5BF%28x%29%2C%20%20G%28x%29%5D%20\" alt=\" f \\in \\prod_{ x \\in X} [F(x),  G(x)] \" /> は当たり前のことを言っているだけです。</p>\n<p>もうひとつの書き方を見ましょう。</p> \n<ul> \n <li><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20f%3A%5Csum_%7Bx%20%5Cin%20X%7DF%28x%29%20%5Cto%20%5Csum_%7Bx%20%5Cin%20X%7DG%28x%29%20%5Cmbox%7B%20over%20%7D%20X\" alt=\" f:\\sum_{x \\in X}F(x) \\to \\sum_{x \\in X}G(x) \\mbox{ over } X\" /></li> \n</ul>\n<p>お尻についている \"over X\" がミソです。fは、単に Σ(F) から Σ(G) への関数ではありません。条件がつくのです。その条件とは次の図式を可換にすることです。</p>\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%5Crequire%7BAMScd%7D%0A%5Cbegin%7BCD%7D%0A%5CSigma%28F%29%20%40%3E%7Bf%7D%3E%3E%20%5CSigma%28G%29%20%5C%5C%0A%40V%7B%5Cpi%5EF%7DVV%20%20%20%20%20%20%20%40VV%7B%5Cpi%5EG%7DV%20%5C%5C%0AX%20%20%20%20%20%20%20%20%20%40%3D%20%20%20%20%20%20X%0A%5Cend%7BCD%7D%0A\" alt=\"\\require{AMScd}\n\\begin{CD}\n\\Sigma(F) @>{f}>> \\Sigma(G) \\\\\n@V{\\pi^F}VV       @VV{\\pi^G}V \\\\\nX         @=      X\n\\end{CD}\n\" /></p>\n<p>集合Xの要素xについて考えると：</p>\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%5Crequire%7BAMScd%7D%0A%5Cbegin%7BCD%7D%0A%5C%7Bx%5C%7D%5Ctimes%20F%28x%29%20%20%40%3E%7Bf_x%7D%3E%3E%20%5C%7Bx%5C%7D%5Ctimes%20G%28x%29%20%5C%5C%0A%40V%7B%20%7B%5Cpi%5EF%7D_x%7DVV%20%20%20%20%20%20%20%20%20%20%20%20%40VV%7B%7B%5Cpi%5EG%7D_x%7DV%20%5C%5C%0A%5C%7Bx%5C%7D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%40%3D%20%20%20%20%20%20%20%5C%7Bx%5C%7D%0A%5Cend%7BCD%7D%0A\" alt=\"\\require{AMScd}\n\\begin{CD}\n\\{x\\}\\times F(x)  @>{f_x}>> \\{x\\}\\times G(x) \\\\\n@V{ {\\pi^F}_x}VV            @VV{{\\pi^G}_x}V \\\\\n\\{x\\}              @=       \\{x\\}\n\\end{CD}\n\" /></p>\n<p>ここで出てきた f<sub>x</sub> はタグの存在を無視すれば、<img src=\"https://chart.apis.google.com/chart?cht=tx&amp;chl=%20f_x%20%5Cin%20Map%28F%28x%29%2C%20%20G%28x%29%29%20\" alt=\" f_x \\in Map(F(x),  G(x)) \" /> の f<sub>x</sub> と同じです。</p>\n<p>いずれにしても、xごとの f<sub>x</sub>:F(x) → G(x) の寄せ集めが<strong style=\"color:crimson\">多相関数</strong>〈polymorphic function〉だと言っているのです。</p>\n<p><b>[追記]</b>ここで定義した多相関数は、「<a href=\"https://m-hiyama.hatenablog.com/entry/2020/09/10/121121#id2020_inter-functor-trans\">多相関数と型クラス // 多相関数＝関手間部分変換</a>」の多相関数とは少し違います。それについては、「<a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/22/135814\">多相関数： 補遺</a>」に書きました。<b>[/追記]</b></p>\n<p><h4 id=\"おわりに\">おわりに</h4></p>\n<p>以上で次の4つの概念を説明しました。</p> \n<ol> \n <li>型ファミリー</li> \n <li>依存和型</li> \n <li>依存積型</li> \n <li>多相関数</li> \n</ol>\n<p>型ファミリーに対して、その依存和型と依存積型が定義できました。多相関数は、関数のタプル（指数型の型ファミリーの依存積型の要素）として表すことができます。あるいは、2つの型ファミリーの依存和型のあいだの関数で \"over X\" の条件を満たすものです。</p>\n<p>無意味に細かく分類しないで、少数の概念から構成される俯瞰的構造を理解しておきましょう。</p> \n<div class=\"footnote\"> \n <p class=\"footnote\"><a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#fn-554066f1\" name=\"f-554066f1\" class=\"footnote-number\">*1</a><span class=\"footnote-delimiter\">:</span><span class=\"footnote-text\">多相関数のプロファイル記述の状況が、論理で全称記号を使う状況と幾分かは似たところがあるのは事実です。が、ソックリというわけではありません。</span></p> \n <p class=\"footnote\"><a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#fn-3ce029a7\" name=\"f-3ce029a7\" class=\"footnote-number\">*2</a><span class=\"footnote-delimiter\">:</span><span class=\"footnote-text\">型の世界Typeに、“万能な型”Uがあって、世界であるTypeがUに吸い込まれるような再起的構造を持つことはあります。それは“字面だけのマヤカシ”ではありません。</span></p> \n <p class=\"footnote\"><a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#fn-5a5428c5\" name=\"f-5a5428c5\" class=\"footnote-number\">*3</a><span class=\"footnote-delimiter\">:</span><span class=\"footnote-text\">ほんとの事情は分かりませんが、おそらく、色々なコミュニティが異なる言葉を使い、誰も集約しようとしないせいでしょう。</span></p> \n <p class=\"footnote\"><a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#fn-e3f2969f\" name=\"f-e3f2969f\" class=\"footnote-number\">*4</a><span class=\"footnote-delimiter\">:</span><span class=\"footnote-text\">我々が作っていた<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8%B8%C0%B8%EC\">スクリプト言語</a>では、明示的にタグが付いてなくても「暗黙のタグ」が付く仕様でした。例えば、文字列<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%EA%A5%C6%A5%E9%A5%EB\">リテラル</a> \"hello\" は文字列型だと分かるので、@string \"hello\" と同等に扱います。これにより、タグによるケース分岐と型による分岐は一様に扱えます。</span></p> \n <p class=\"footnote\"><a href=\"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#fn-52a4910c\" name=\"f-52a4910c\" class=\"footnote-number\">*5</a><span class=\"footnote-delimiter\">:</span><span class=\"footnote-text\">僕みたいな年寄りだと、メールアドレスの書式は、個人名@所属組織名 だと思っているのですが、今はそうでもないかもな。</span></p> \n</div>","descriptionType":"html","publishedDate":"Wed, 21 Oct 2020 08:52:59 +0000","feedId":13468,"bgimg":"http://www.chimaira.org/img5/ordered-tree.jpg","linkMd5":"790dda3a28cc9b17e37a61c331125ea0","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn10@2020_3/2020/11/16/11-08-54-278_70ae3d00aeb1eeba.webp","destWidth":490,"destHeight":377,"sourceBytes":29270,"destBytes":15068,"author":"m-hiyama","enclosureType":"image/jpeg","enclosureUrl":"http://www.chimaira.org/img5/ordered-tree.jpg","articleImgCdnMap":{"https://chart.apis.google.com/chart?cht=tx&chl=%20length%20%3A%3A%20%5Cforall%5Calpha.%20%5Cmathrm%7BList%7D%5C%2C%20%5Calpha%20%5Cto%20Int%20":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn89@2020_4/2020/11/16/11-08-55-755_68740e223262bdfe.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20length%20%3A%20%5Cforall%5Calpha.%20%5Cmathrm%7BList%7D%28%5Calpha%29%20%5Cto%20Int%20":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn61@2020_3/2020/11/16/11-08-55-392_03190a84699e428b.webp","https://chart.apis.google.com/chart?cht=tx&chl=%5Cforall":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn58@2020_1/2020/11/16/11-08-55-508_8d8d607b3cce06b0.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20f%20%3A%20%5Cforall%20x%20%5Cin%20X.%20F%28x%29%20%5Cto%20G%28x%29%20":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn96@2020_4/2020/11/16/11-08-56-536_383dded11f06ac4d.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20f_a%20%3A%20F%28a%29%20%5Cto%20G%28a%29%20":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn54@2020_1/2020/11/16/11-08-56-182_16372d2931dddf3e.webp","http://www.chimaira.org/img5/ordered-tree.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn10@2020_3/2020/11/16/11-08-54-278_70ae3d00aeb1eeba.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20leaves%20%3A%20%5Cforall%5Calpha%5Cin%20%5Cmathrm%7BType%7D.%20%5Cmathrm%7BLVOTree%7D%28%5Calpha%29%20%5Cto%20%5Cmathrm%7BList%7D%28%5Calpha%29%20":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn73@2020_5/2020/11/16/11-09-12-619_0889b5f16b68052d.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20f%20%5Cin%20%5Cprod_%7B%20x%20%5Cin%20X%7D%20%5BF%28x%29%2C%20%20G%28x%29%5D%20":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn25@2020_6/2020/11/16/11-08-55-797_a2c89786a831ed0c.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20f%3A%5Csum_%7Bx%20%5Cin%20X%7DF%28x%29%20%5Cto%20%5Csum_%7Bx%20%5Cin%20X%7DG%28x%29%20%5Cmbox%7B%20over%20%7D%20X":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn46@2020_5/2020/11/16/11-08-55-551_eac98cccce0980be.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cprod_%7B%20x%20%5Cin%20X%7D":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn65@2020_3/2020/11/16/11-08-55-566_d8162d01bdb99263.webp","https://chart.apis.google.com/chart?cht=tx&chl=%5Csum_%7Bx%20%5Cin%20X%7D":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn35@2020_6/2020/11/16/11-09-05-278_5e774cd15a5c5ab5.webp","https://chart.apis.google.com/chart?cht=tx&chl=%5Cmathscr%7BF%7D%20%3A%3D%20%5Cbigcup_%7Bx%5Cin%20X%7D%20F%28x%29":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn79@2020_6/2020/11/16/11-08-56-584_0fefd2568d0a58b8.webp","https://chart.apis.google.com/chart?cht=tx&chl=%5Cmathscr%7BF%7D":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn87@2020_5/2020/11/16/11-09-06-436_7d15afb29ed23734.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20a%5Cin%20%5Cmathscr%7BF%7D%20%5CLeftrightarrow%20%5Cexists%20t%20%5Cin%20X.%28%20a%5Cin%20F%28t%29%29":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn69@2020_3/2020/11/16/11-08-55-472_eba4626f581c362f.webp","https://chart.apis.google.com/chart?cht=tx&chl=%5Csum_%7Bx%5Cin%20X%7DF%28x%29%20%3A%3D%20%5C%7B%28x%2C%20y%29%20%5Cin%20X%5Ctimes%20%5Cmathscr%7BF%7D%20%5Cmid%20y%20%5Cin%20F%28x%29%20%5C%7D":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn69@2020_1/2020/11/16/11-08-55-334_449fa79ee1ef5cae.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cmathscr%7BF%7D%20%3A%3D%20%5Cbigcup_%7Bx%5Cin%20%5C%7B1%2C%202%5C%7D%7D%20F%28x%29%20%3D%20F%281%29%5Ccup%20F%282%29":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn34@2020_4/2020/11/16/11-09-15-478_45f870ac92ad97d7.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20a%5Cin%20%5Cmathscr%7BF%7D%20%5CLeftrightarrow%20%5Cexists%20t%20%5Cin%20%5C%7B1%2C%202%5C%7D.%28%20a%5Cin%20F%28t%29%29%0A%5CLeftrightarrow%20%20a%5Cin%20F%281%29%20%5Clor%20a%5Cin%20F%282%29":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn17@2020_5/2020/11/16/11-08-55-535_f321c2ff9615d2b2.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5Csum_%7Bx%5Cin%20%5C%7B1%2C%202%5C%7D%7DF%28x%29%20%3A%3D%20%5C%7B%28x%2C%20y%29%20%5Cin%20%5C%7B1%2C%202%5C%7D%5Ctimes%20%5Cmathscr%7BF%7D%20%5Cmid%20y%20%5Cin%20F%28x%29%20%5C%7D":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn49@2020_2/2020/11/16/11-08-55-548_4783fa7712691fbb.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%0A%5C%3A%5C%3A%5C%3A%5C%3A%20%5C%7B%28x%2C%20y%29%20%5Cin%20%5C%7B1%2C%202%5C%7D%5Ctimes%20%5Cmathscr%7BF%7D%20%5Cmid%20y%20%5Cin%20F%28x%29%20%5C%7D%20%5C%5C%0A%3D%20%5C%7B%28x%2C%20y%29%20%5Cin%20%5C%7B1%2C%202%5C%7D%5Ctimes%20%28F%281%29%5Ccup%20F%282%29%29%20%5Cmid%20y%20%5Cin%20F%28x%29%20%5C%7D%20%5C%5C%0A%3D%20%5C%7B%281%2C%20y%29%20%5Cin%20%5C%7B1%5C%7D%5Ctimes%20%28F%281%29%5Ccup%20F%282%29%29%20%5Cmid%20y%20%5Cin%20F%281%29%20%5C%7D%20%5Ccup%20%20%5C%5C%0A%5C%3A%5C%3A%5C%3A%5C%3A%20%5C%7B%282%2C%20y%29%20%5Cin%20%5C%7B2%5C%7D%5Ctimes%20%28F%281%29%5Ccup%20F%282%29%29%20%5Cmid%20y%20%5Cin%20F%282%29%20%5C%7D%20%20%5C%5C%0A%3D%20%28%5C%7B1%5C%7D%5Ctimes%20F%281%29%29%20%5Ccup%20%28%5C%7B2%5C%7D%5Ctimes%20F%282%29%29%0A":null,"https://chart.apis.google.com/chart?cht=tx&chl=%20A%20%3A%3D%20F%281%29%2C%5C%3B%20B%20%3A%3D%20F%282%29":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn37@2020_3/2020/11/16/11-08-55-947_d60801a495f41c56.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%28%5C%7B1%5C%7D%5Ctimes%20A%29%20%5Ccup%20%28%5C%7B2%5C%7D%5Ctimes%20B%29%20%3D%20A%20%2B%20B":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn42@2020_4/2020/11/16/11-08-55-477_689699ca64c373c9.webp","http://www.chimaira.org/img5/set-direct-sum.jpg":null,"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29%20%3D%20%5Cbigcup_%7Bx%5Cin%20X%7D%28%5C%7Bx%5C%7D%5Ctimes%20F%28x%29%29":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn94@2020_1/2020/11/16/11-08-55-496_a79fa51abaddfd51.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cbigcup_%7Bx%5Cin%20X%7D%28%5C%7Bx%5C%7D%5Ctimes%20F%28x%29%20%29":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn22@2020_5/2020/11/16/11-08-55-496_61eaa35b673a0be2.webp","https://chart.apis.google.com/chart?cht=tx&chl=X%20%5Ctimes%20%28%5Cbigcup_%7Bx%5Cin%20X%7DF%28x%29%20%29":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn53@2020_2/2020/11/16/11-08-56-384_105840c8085bfb85.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29%20%5Csubseteq%20%20X%20%5Ctimes%20%28%5Cbigcup_%7Bx%5Cin%20X%7DF%28x%29%20%29":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn29@2020_5/2020/11/16/11-08-55-920_d512818668016966.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%28x%2C%20y%29%2C%5C%3B%20x%5Cin%20X%2C%5C%3B%20y%5Cin%20%5Cbigcup_%7Bx%5Cin%20X%7DF%28x%29":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn91@2020_6/2020/11/16/11-08-56-635_5a3f7d818ae9e71d.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20x%5Cin%20F%28x%29":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn4@2020_4/2020/11/16/11-08-56-616_896fc52227c592d1.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29":null,"https://chart.apis.google.com/chart?cht=tx&chl=%5Crequire%7BAMScd%7D%0A%5Cbegin%7BCD%7D%0A%5Csum_%7Bx%5Cin%20X%7DF%28x%29%20%40%3E%7B%5Cbeta%5EF%7D%3E%3E%20%20%5Cbigcup_%7Bx%5Cin%20X%7DF%28x%29%20%20%5C%5C%0A%40V%7B%5Cpi%5EF%7DVV%20%5C%5C%0AX%0A%5Cend%7BCD%7D%0A":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn41@2020_2/2020/11/16/11-08-56-027_91e8f7fcb3342105.webp","https://chart.apis.google.com/chart?cht=tx&chl=%5Crequire%7BAMScd%7D%0A%5Cbegin%7BCD%7D%0A%5Csum%28F%29%20%40%3E%7B%5Cbeta%5EF%7D%3E%3E%20%20%5Cbigcup%28F%29%20%20%5C%5C%0A%40V%7B%5Cpi%5EF%7DVV%20%5C%5C%0A%5Cmathrm%7Bdom%7D%28F%29%0A%5Cend%7BCD%7D%0A":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn29@2020_2/2020/11/16/11-08-55-609_c975dfafee772127.webp","https://chart.apis.google.com/chart?cht=tx&chl=%5Cprod_%7Bx%5Cin%20X%7DF%28x%29%20%3D%20%5Cprod%28F%29%20%3D%20%5CPi%28F%29":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn2@2020_5/2020/11/16/11-08-55-547_5a908474015eb460.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cprod%28F%29%20%3A%3D%20%5C%7Bt%5Cin%20Map%28X%2C%20%5Cbigcup%28F%29%20%29%20%5Cmid%20%5Cforall%20x%5Cin%20X.%28%5C%2C%20t%28x%29%20%5Cin%20F%28x%29%20%5C%2C%29%5C%7D":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn25@2020_2/2020/11/16/11-08-55-511_a053d25f9ec802ae.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cprod%28F%29%20%5Csubseteq%20Map%28X%2C%20%5Cbigcup%28F%29%20%29":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn97@2020_6/2020/11/16/11-08-55-400_4b5cfca02e26af61.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20t%3AX%20%E2%86%92%20%5Cbigcup%28F%29":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn100@2020_6/2020/11/16/11-08-56-532_d21a82b006e0c444.webp","https://chart.apis.google.com/chart?cht=tx&chl=%5Ccong":"https://cdn.jsdelivr.net/gh/myreaderx/cdn22@2020_1/2020/11/16/11-08-55-797_49cd82747b12e2f1.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5CSigma%28F%29%20%3A%3D%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn45@2020_6/2020/11/16/11-08-55-537_42f9ddc81bfa91f8.webp","https://chart.apis.google.com/chart?cht=tx&chl=%5Cmapsto":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn77@2020_3/2020/11/16/11-09-25-212_240ded80573f821a.webp","https://chart.apis.google.com/chart?cht=tx&chl=%5Ccirc":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn83@2020_1/2020/11/16/11-08-56-645_54bdc68a42a41c58.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%7B%5Cprod%27%7D_%7Bx%5Cin%20X%7DF%28x%29%20%3D%20%5CGamma%28%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29%20%29":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn82@2020_5/2020/11/16/11-08-55-515_06a46ba3a61fcb45.webp","https://chart.apis.google.com/chart?cht=tx&chl=%5Crequire%7BAMScd%7D%0A%5Cbegin%7BCD%7D%0A%5CSigma%28F%29%20%40%3E%7B%5Cbeta%7D%3E%3E%20%20%5Ccup%28F%29%20%20%5C%5C%0A%40V%7B%5Cpi%7DVV%20%5C%5C%0AX%0A%5Cend%7BCD%7D%0A":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn14@2020_1/2020/11/16/11-08-55-959_2e608bc93abaa3f1.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cbeta_%5Cast%3A%5CGamma%28%5CSigma%28F%29%29%20%5Cto%20Map%28X%2C%20%5Ccup%28F%29%20%29":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn33@2020_5/2020/11/16/11-08-55-401_b68f8e0698ea011c.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20s%20%5Cin%20%5CGamma%28%5CSigma%28F%29%29%20%5CLeftrightarrow%20%5Cbeta_%5Cast%28s%29%20%5Cin%20%5CPi%28F%29%20%5Csubseteq%20Map%28X%2C%20%5Ccup%28F%29%29%20":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn86@2020_6/2020/11/16/11-08-55-696_783b1ae653e54f17.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5CPi%27%28F%29%20%3D%20%5CGamma%28%5CSigma%28F%29%29%20%5Ccong%20%5CPi%28F%29%20":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn57@2020_1/2020/11/16/11-08-55-599_6c8f287d46952e9b.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20f%3AX%20%5Cto%20%5Cbigcup_%7Bx%5Cin%20X%7D%5BF%28x%29%2C%20%20G%28x%29%5D%20":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn13@2020_5/2020/11/16/11-09-06-753_8a9a5feb210f7090.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20f%28x%29%20%5Cin%20%5BF%28x%29%2C%20%20G%28x%29%5D%20":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn65@2020_1/2020/11/16/11-08-55-508_277a692847cc2cac.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20f_x%20%5Cin%20Map%28F%28x%29%2C%20%20G%28x%29%29%20":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn49@2020_4/2020/11/16/11-08-55-482_4e168ba236baa765.webp","https://chart.apis.google.com/chart?cht=tx&chl=%5Crequire%7BAMScd%7D%0A%5Cbegin%7BCD%7D%0A%5CSigma%28F%29%20%40%3E%7Bf%7D%3E%3E%20%5CSigma%28G%29%20%5C%5C%0A%40V%7B%5Cpi%5EF%7DVV%20%20%20%20%20%20%20%40VV%7B%5Cpi%5EG%7DV%20%5C%5C%0AX%20%20%20%20%20%20%20%20%20%40%3D%20%20%20%20%20%20X%0A%5Cend%7BCD%7D%0A":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn5@2020_3/2020/11/16/11-08-55-494_6f3bafbcb58a32ba.webp","https://chart.apis.google.com/chart?cht=tx&chl=%5Crequire%7BAMScd%7D%0A%5Cbegin%7BCD%7D%0A%5C%7Bx%5C%7D%5Ctimes%20F%28x%29%20%20%40%3E%7Bf_x%7D%3E%3E%20%5C%7Bx%5C%7D%5Ctimes%20G%28x%29%20%5C%5C%0A%40V%7B%20%7B%5Cpi%5EF%7D_x%7DVV%20%20%20%20%20%20%20%20%20%20%20%20%40VV%7B%7B%5Cpi%5EG%7D_x%7DV%20%5C%5C%0A%5C%7Bx%5C%7D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%40%3D%20%20%20%20%20%20%20%5C%7Bx%5C%7D%0A%5Cend%7BCD%7D%0A":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn9@2020_5/2020/11/16/11-08-55-651_eae8ec0c62591fe0.webp"},"publishedOrCreatedDate":1605524933231}],"record":{"createdTime":"2020-11-16 19:08:53","updatedTime":"2020-11-16 19:08:53","feedId":13468,"fetchDate":"Mon, 16 Nov 2020 11:08:53 +0000","fetchMs":3336,"handleMs":6892,"totalMs":43438,"newArticles":0,"totalArticles":30,"status":1,"type":0,"ip":"818b2f91db1355e1383e1c549cf591f8","hostName":"europe-59*","requestId":"18470c47fbbc4a47abbd7fa280637518_13468","contentType":"application/atom+xml; charset=utf-8","totalBytes":99850,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":49,"articlesImgsGithubTotal":46,"successGithubMap":{"myreaderx8":2,"myreaderx15":2,"myreaderx7":2,"myreaderx6":2,"myreaderx16":2,"myreaderx32":2,"myreaderx4":2,"myreaderx10":2,"myreaderx11":2,"myreaderx33":2,"myreaderx3":1,"myreaderx2":2,"myreaderx12":2,"myreaderx13":2,"myreaderx1":1,"myreaderx30":2,"myreaderx31":2,"myreaderx18":2,"myreaderx19":2,"myreaderx":2,"myreaderx25":1,"myreaderx21":1,"myreaderx22":2,"myreaderx24":1,"myreaderx5oss":2,"myreaderx29":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}},"feed":{"createdTime":"2020-08-25 04:38:35","updatedTime":"2020-09-05 16:53:36","id":13468,"name":"檜山正幸のキマイラ飼育記 (はてなBlog)","url":"http://d.hatena.ne.jp/m-hiyama/rss","subscriber":230,"website":null,"icon":"https://m-hiyama.hatenablog.com/favicon.ico","icon_jsdelivr":null,"description":"","weekly":null,"link":"https://m-hiyama.hatenablog.com"},"noPictureArticleList":[{"createdTime":"2020-11-16 19:09:26","updatedTime":"2020-11-16 19:09:26","id":null,"feedId":13468,"linkMd5":"790dda3a28cc9b17e37a61c331125ea0"}],"tmpCommonImgCdnBytes":15068,"tmpBodyImgCdnBytes":84782,"tmpBgImgCdnBytes":0,"extra4":{"start":1605524922588,"total":0,"statList":[{"spend":3751,"msg":"获取xml内容"},{"spend":6892,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":30783,"msg":"正文链接上传到cdn"}]},"extra5":49,"extra6":49,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%0A%5C%3A%5C%3A%5C%3A%5C%3A%20%5C%7B%28x%2C%20y%29%20%5Cin%20%5C%7B1%2C%202%5C%7D%5Ctimes%20%5Cmathscr%7BF%7D%20%5Cmid%20y%20%5Cin%20F%28x%29%20%5C%7D%20%5C%5C%0A%3D%20%5C%7B%28x%2C%20y%29%20%5Cin%20%5C%7B1%2C%202%5C%7D%5Ctimes%20%28F%281%29%5Ccup%20F%282%29%29%20%5Cmid%20y%20%5Cin%20F%28x%29%20%5C%7D%20%5C%5C%0A%3D%20%5C%7B%281%2C%20y%29%20%5Cin%20%5C%7B1%5C%7D%5Ctimes%20%28F%281%29%5Ccup%20F%282%29%29%20%5Cmid%20y%20%5Cin%20F%281%29%20%5C%7D%20%5Ccup%20%20%5C%5C%0A%5C%3A%5C%3A%5C%3A%5C%3A%20%5C%7B%282%2C%20y%29%20%5Cin%20%5C%7B2%5C%7D%5Ctimes%20%28F%281%29%5Ccup%20F%282%29%29%20%5Cmid%20y%20%5Cin%20F%282%29%20%5C%7D%20%20%5C%5C%0A%3D%20%28%5C%7B1%5C%7D%5Ctimes%20F%281%29%29%20%5Ccup%20%28%5C%7B2%5C%7D%5Ctimes%20F%282%29%29%0A","sourceStatusCode":400,"sourceBytes":0,"destBytes":0,"feedId":13468,"totalSpendMs":116,"convertSpendMs":0,"createdTime":"2020-11-16 19:08:55","host":"us-033*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[400],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.chimaira.org/img5/set-direct-sum.jpg","sourceStatusCode":200,"destWidth":964,"destHeight":605,"sourceBytes":81254,"destBytes":29098,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":986,"convertSpendMs":49,"createdTime":"2020-11-16 19:08:56","host":"us-026*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn76/contents/2020/11/16/11-08-57-286_def01ad2d0762e85.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 16 Nov 2020 11:08:57 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9C68:424F:251F508:3F597AF:5FB25DC9"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1605524975"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn76/contents/2020/11/16/11-08-57-286_def01ad2d0762e85.webp","historyStatusCode":[],"spendMs":42},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"79.3 KB","destSize":"28.4 KB","compressRate":"35.8%"},{"code":1,"isDone":false,"source":"http://www.chimaira.org/img5/set-direct-sum.jpg","sourceStatusCode":200,"destWidth":964,"destHeight":605,"sourceBytes":81254,"destBytes":29098,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1453,"convertSpendMs":21,"createdTime":"2020-11-16 19:08:57","host":"europe68*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn76/contents/2020/11/16/11-08-58-663_def01ad2d0762e85.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 16 Nov 2020 11:08:58 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["853E:41F0:4E5B31:5A6D71:5FB25DC9"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1605524975"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn76/contents/2020/11/16/11-08-58-663_def01ad2d0762e85.webp","historyStatusCode":[],"spendMs":168},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"79.3 KB","destSize":"28.4 KB","compressRate":"35.8%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29","sourceStatusCode":200,"destWidth":89,"destHeight":23,"sourceBytes":2049,"destBytes":942,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":10373,"convertSpendMs":2,"createdTime":"2020-11-16 19:08:55","host":"europe68*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn17/contents/2020/11/16/11-09-05-516_bc51530131b3f036.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 16 Nov 2020 11:09:05 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["853E:41F0:4E5BF0:5A6DAB:5FB25DCA"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1605525006"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn17/contents/2020/11/16/11-09-05-516_bc51530131b3f036.webp","historyStatusCode":[],"spendMs":143},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2 KB","destSize":"942 B","compressRate":"46%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%0A%5C%3A%5C%3A%5C%3A%5C%3A%20%5C%7B%28x%2C%20y%29%20%5Cin%20%5C%7B1%2C%202%5C%7D%5Ctimes%20%5Cmathscr%7BF%7D%20%5Cmid%20y%20%5Cin%20F%28x%29%20%5C%7D%20%5C%5C%0A%3D%20%5C%7B%28x%2C%20y%29%20%5Cin%20%5C%7B1%2C%202%5C%7D%5Ctimes%20%28F%281%29%5Ccup%20F%282%29%29%20%5Cmid%20y%20%5Cin%20F%28x%29%20%5C%7D%20%5C%5C%0A%3D%20%5C%7B%281%2C%20y%29%20%5Cin%20%5C%7B1%5C%7D%5Ctimes%20%28F%281%29%5Ccup%20F%282%29%29%20%5Cmid%20y%20%5Cin%20F%281%29%20%5C%7D%20%5Ccup%20%20%5C%5C%0A%5C%3A%5C%3A%5C%3A%5C%3A%20%5C%7B%282%2C%20y%29%20%5Cin%20%5C%7B2%5C%7D%5Ctimes%20%28F%281%29%5Ccup%20F%282%29%29%20%5Cmid%20y%20%5Cin%20F%282%29%20%5C%7D%20%20%5C%5C%0A%3D%20%28%5C%7B1%5C%7D%5Ctimes%20F%281%29%29%20%5Ccup%20%28%5C%7B2%5C%7D%5Ctimes%20F%282%29%29%0A","sourceStatusCode":400,"sourceBytes":0,"destBytes":0,"feedId":13468,"totalSpendMs":10136,"convertSpendMs":0,"createdTime":"2020-11-16 19:08:55","host":"us-038*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[400],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29","sourceStatusCode":200,"destWidth":79,"destHeight":41,"sourceBytes":2348,"destBytes":1074,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":236,"convertSpendMs":2,"createdTime":"2020-11-16 19:09:05","host":"us-005*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn17/contents/2020/11/16/11-09-05-838_bc51530131b3f036.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 16 Nov 2020 11:09:05 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E362:4CBA:13FB1D4:2F76C39:5FB25DD1"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1605525006"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn17/contents/2020/11/16/11-09-05-838_bc51530131b3f036.webp","historyStatusCode":[],"spendMs":95},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.3 KB","destSize":"1 KB","compressRate":"45.7%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cmathscr%7BF%7D%20%3A%3D%20%5Cbigcup_%7Bx%5Cin%20%5C%7B1%2C%202%5C%7D%7D%20F%28x%29%20%3D%20F%281%29%5Ccup%20F%282%29","sourceStatusCode":502,"sourceBytes":0,"destBytes":0,"feedId":13468,"totalSpendMs":19839,"convertSpendMs":0,"createdTime":"2020-11-16 19:08:55","host":"europe21*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[502],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Cmapsto","sourceStatusCode":502,"sourceBytes":0,"destBytes":0,"feedId":13468,"totalSpendMs":29721,"convertSpendMs":0,"createdTime":"2020-11-16 19:08:55","host":"europe-60*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[502],"sourceSize":"0","destSize":"0"}],"extra10_invalidATagHrefValue":{"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#依存積型-型ファミリーの総積":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#依存積型-型ファミリーの総積","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#f-52a4910c":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#f-52a4910c","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#f-e3f2969f":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#f-e3f2969f","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#f-5a5428c5":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#f-5a5428c5","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#id2020_polym-fun-rep":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#id2020_polym-fun-rep","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#依存和型もっと":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#依存和型もっと","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#fn-5a5428c5":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#fn-5a5428c5","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#f-554066f1":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#f-554066f1","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#fn-e3f2969f":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#fn-e3f2969f","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#おわりに":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#おわりに","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#依存和型-型ファミリーの総和":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#依存和型-型ファミリーの総和","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#多相関数のプロファイル":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#多相関数のプロファイル","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#依存型-依存積型と依存和型":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#依存型-依存積型と依存和型","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#f-3ce029a7":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#f-3ce029a7","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#fn-554066f1":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#fn-554066f1","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#fn-52a4910c":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#fn-52a4910c","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#依存積型もっと":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#依存積型もっと","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#型ファミリー":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#型ファミリー","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#型と関数の圏":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#型と関数の圏","https://m-hiyama.hatenablog.com/entry/2020/10/21/175259_#fn-3ce029a7":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259#fn-3ce029a7"},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-037.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-015.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-60.herokuapp.com/":{"failCount":1,"successCount":2,"resultList":[200,200,502]},"http://us-038.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[400]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe21.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[502]},"http://us-033.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[400,200]},"http://us-004.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-013.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-023.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://www.chimaira.org/img5/ordered-tree.jpg","sourceStatusCode":200,"destWidth":490,"destHeight":377,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn10@2020_3/2020/11/16/11-08-54-278_70ae3d00aeb1eeba.webp","sourceBytes":29270,"destBytes":15068,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1933,"convertSpendMs":8,"createdTime":"2020-11-16 19:08:53","host":"europe-22*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0,790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.6 KB","destSize":"14.7 KB","compressRate":"51.5%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Csum_%7Bx%5Cin%20X%7DF%28x%29%20%3A%3D%20%5C%7B%28x%2C%20y%29%20%5Cin%20X%5Ctimes%20%5Cmathscr%7BF%7D%20%5Cmid%20y%20%5Cin%20F%28x%29%20%5C%7D","sourceStatusCode":200,"destWidth":306,"destHeight":24,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn69@2020_1/2020/11/16/11-08-55-334_449fa79ee1ef5cae.webp","sourceBytes":5041,"destBytes":2436,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":881,"convertSpendMs":5,"createdTime":"2020-11-16 19:08:55","host":"us-009*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.9 KB","destSize":"2.4 KB","compressRate":"48.3%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20a%5Cin%20%5Cmathscr%7BF%7D%20%5CLeftrightarrow%20%5Cexists%20t%20%5Cin%20X.%28%20a%5Cin%20F%28t%29%29","sourceStatusCode":200,"destWidth":195,"destHeight":19,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn69@2020_3/2020/11/16/11-08-55-472_eba4626f581c362f.webp","sourceBytes":3289,"destBytes":1570,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":858,"convertSpendMs":4,"createdTime":"2020-11-16 19:08:55","host":"us-029*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.2 KB","destSize":"1.5 KB","compressRate":"47.7%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29%20%3D%20%5Cbigcup_%7Bx%5Cin%20X%7D%28%5C%7Bx%5C%7D%5Ctimes%20F%28x%29%29","sourceStatusCode":200,"destWidth":230,"destHeight":41,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn94@2020_1/2020/11/16/11-08-55-496_a79fa51abaddfd51.webp","sourceBytes":5220,"destBytes":2342,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":884,"convertSpendMs":3,"createdTime":"2020-11-16 19:08:55","host":"us-001*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.1 KB","destSize":"2.3 KB","compressRate":"44.9%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%28%5C%7B1%5C%7D%5Ctimes%20A%29%20%5Ccup%20%28%5C%7B2%5C%7D%5Ctimes%20B%29%20%3D%20A%20%2B%20B","sourceStatusCode":200,"destWidth":199,"destHeight":19,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn42@2020_4/2020/11/16/11-08-55-477_689699ca64c373c9.webp","sourceBytes":3309,"destBytes":1556,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":897,"convertSpendMs":3,"createdTime":"2020-11-16 19:08:55","host":"us-029*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.2 KB","destSize":"1.5 KB","compressRate":"47%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20f_x%20%5Cin%20Map%28F%28x%29%2C%20%20G%28x%29%29%20","sourceStatusCode":200,"destWidth":165,"destHeight":22,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn49@2020_4/2020/11/16/11-08-55-482_4e168ba236baa765.webp","sourceBytes":3732,"destBytes":1556,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":888,"convertSpendMs":6,"createdTime":"2020-11-16 19:08:55","host":"us-025*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0,790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.6 KB","destSize":"1.5 KB","compressRate":"41.7%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Cforall","sourceStatusCode":200,"destWidth":12,"destHeight":15,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn58@2020_1/2020/11/16/11-08-55-508_8d8d607b3cce06b0.webp","sourceBytes":370,"destBytes":202,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":877,"convertSpendMs":2,"createdTime":"2020-11-16 19:08:55","host":"us-001*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"370 B","destSize":"202 B","compressRate":"54.6%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20f%28x%29%20%5Cin%20%5BF%28x%29%2C%20%20G%28x%29%5D%20","sourceStatusCode":200,"destWidth":142,"destHeight":20,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn65@2020_1/2020/11/16/11-08-55-508_277a692847cc2cac.webp","sourceBytes":2562,"destBytes":1336,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":892,"convertSpendMs":6,"createdTime":"2020-11-16 19:08:55","host":"us-021*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.5 KB","destSize":"1.3 KB","compressRate":"52.1%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Cprod_%7Bx%5Cin%20X%7DF%28x%29%20%3D%20%5Cprod%28F%29%20%3D%20%5CPi%28F%29","sourceStatusCode":200,"destWidth":212,"destHeight":23,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn2@2020_5/2020/11/16/11-08-55-547_5a908474015eb460.webp","sourceBytes":3622,"destBytes":1732,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":911,"convertSpendMs":5,"createdTime":"2020-11-16 19:08:55","host":"us-51*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.5 KB","destSize":"1.7 KB","compressRate":"47.8%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Crequire%7BAMScd%7D%0A%5Cbegin%7BCD%7D%0A%5CSigma%28F%29%20%40%3E%7Bf%7D%3E%3E%20%5CSigma%28G%29%20%5C%5C%0A%40V%7B%5Cpi%5EF%7DVV%20%20%20%20%20%20%20%40VV%7B%5Cpi%5EG%7DV%20%5C%5C%0AX%20%20%20%20%20%20%20%20%20%40%3D%20%20%20%20%20%20X%0A%5Cend%7BCD%7D%0A","sourceStatusCode":200,"destWidth":316,"destHeight":53,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn5@2020_3/2020/11/16/11-08-55-494_6f3bafbcb58a32ba.webp","sourceBytes":10431,"destBytes":4488,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":931,"convertSpendMs":5,"createdTime":"2020-11-16 19:08:55","host":"us-029*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.2 KB","destSize":"4.4 KB","compressRate":"43%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cprod%28F%29%20%3A%3D%20%5C%7Bt%5Cin%20Map%28X%2C%20%5Cbigcup%28F%29%20%29%20%5Cmid%20%5Cforall%20x%5Cin%20X.%28%5C%2C%20t%28x%29%20%5Cin%20F%28x%29%20%5C%2C%29%5C%7D","sourceStatusCode":200,"destWidth":406,"destHeight":28,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn25@2020_2/2020/11/16/11-08-55-511_a053d25f9ec802ae.webp","sourceBytes":7769,"destBytes":3292,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":938,"convertSpendMs":5,"createdTime":"2020-11-16 19:08:55","host":"us-033*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.6 KB","destSize":"3.2 KB","compressRate":"42.4%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%7B%5Cprod%27%7D_%7Bx%5Cin%20X%7DF%28x%29%20%3D%20%5CGamma%28%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29%20%29","sourceStatusCode":200,"destWidth":223,"destHeight":26,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn82@2020_5/2020/11/16/11-08-55-515_06a46ba3a61fcb45.webp","sourceBytes":4090,"destBytes":1876,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":956,"convertSpendMs":4,"createdTime":"2020-11-16 19:08:55","host":"us-037*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4 KB","destSize":"1.8 KB","compressRate":"45.9%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cbigcup_%7Bx%5Cin%20X%7D%28%5C%7Bx%5C%7D%5Ctimes%20F%28x%29%20%29","sourceStatusCode":200,"destWidth":132,"destHeight":34,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn22@2020_5/2020/11/16/11-08-55-496_61eaa35b673a0be2.webp","sourceBytes":2692,"destBytes":1366,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":973,"convertSpendMs":5,"createdTime":"2020-11-16 19:08:55","host":"us-025*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.6 KB","destSize":"1.3 KB","compressRate":"50.7%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20f%3A%5Csum_%7Bx%20%5Cin%20X%7DF%28x%29%20%5Cto%20%5Csum_%7Bx%20%5Cin%20X%7DG%28x%29%20%5Cmbox%7B%20over%20%7D%20X","sourceStatusCode":200,"destWidth":275,"destHeight":23,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn46@2020_5/2020/11/16/11-08-55-551_eac98cccce0980be.webp","sourceBytes":5320,"destBytes":2190,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":933,"convertSpendMs":6,"createdTime":"2020-11-16 19:08:55","host":"us-017*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0,790dda3a28cc9b17e37a61c331125ea0,790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.2 KB","destSize":"2.1 KB","compressRate":"41.2%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cbeta_%5Cast%3A%5CGamma%28%5CSigma%28F%29%29%20%5Cto%20Map%28X%2C%20%5Ccup%28F%29%20%29","sourceStatusCode":200,"destWidth":220,"destHeight":22,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn33@2020_5/2020/11/16/11-08-55-401_b68f8e0698ea011c.webp","sourceBytes":4525,"destBytes":1922,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1126,"convertSpendMs":4,"createdTime":"2020-11-16 19:08:55","host":"europe64*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.4 KB","destSize":"1.9 KB","compressRate":"42.5%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20length%20%3A%20%5Cforall%5Calpha.%20%5Cmathrm%7BList%7D%28%5Calpha%29%20%5Cto%20Int%20","sourceStatusCode":200,"destWidth":187,"destHeight":19,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn61@2020_3/2020/11/16/11-08-55-392_03190a84699e428b.webp","sourceBytes":3673,"destBytes":1498,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1135,"convertSpendMs":2,"createdTime":"2020-11-16 19:08:55","host":"europe64*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.6 KB","destSize":"1.5 KB","compressRate":"40.8%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20a%5Cin%20%5Cmathscr%7BF%7D%20%5CLeftrightarrow%20%5Cexists%20t%20%5Cin%20%5C%7B1%2C%202%5C%7D.%28%20a%5Cin%20F%28t%29%29%0A%5CLeftrightarrow%20%20a%5Cin%20F%281%29%20%5Clor%20a%5Cin%20F%282%29","sourceStatusCode":200,"destWidth":401,"destHeight":19,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn17@2020_5/2020/11/16/11-08-55-535_f321c2ff9615d2b2.webp","sourceBytes":6899,"destBytes":2962,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":986,"convertSpendMs":4,"createdTime":"2020-11-16 19:08:55","host":"us-037*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.7 KB","destSize":"2.9 KB","compressRate":"42.9%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5CPi%27%28F%29%20%3D%20%5CGamma%28%5CSigma%28F%29%29%20%5Ccong%20%5CPi%28F%29%20","sourceStatusCode":200,"destWidth":232,"destHeight":22,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn57@2020_1/2020/11/16/11-08-55-599_6c8f287d46952e9b.webp","sourceBytes":3843,"destBytes":2024,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1007,"convertSpendMs":31,"createdTime":"2020-11-16 19:08:55","host":"us-55*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.8 KB","destSize":"2 KB","compressRate":"52.7%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Csum_%7Bx%5Cin%20%5C%7B1%2C%202%5C%7D%7DF%28x%29%20%3A%3D%20%5C%7B%28x%2C%20y%29%20%5Cin%20%5C%7B1%2C%202%5C%7D%5Ctimes%20%5Cmathscr%7BF%7D%20%5Cmid%20y%20%5Cin%20F%28x%29%20%5C%7D","sourceStatusCode":200,"destWidth":336,"destHeight":24,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn49@2020_2/2020/11/16/11-08-55-548_4783fa7712691fbb.webp","sourceBytes":5416,"destBytes":2672,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1005,"convertSpendMs":28,"createdTime":"2020-11-16 19:08:55","host":"us-005*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.3 KB","destSize":"2.6 KB","compressRate":"49.3%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Crequire%7BAMScd%7D%0A%5Cbegin%7BCD%7D%0A%5Csum%28F%29%20%40%3E%7B%5Cbeta%5EF%7D%3E%3E%20%20%5Cbigcup%28F%29%20%20%5C%5C%0A%40V%7B%5Cpi%5EF%7DVV%20%5C%5C%0A%5Cmathrm%7Bdom%7D%28F%29%0A%5Cend%7BCD%7D%0A","sourceStatusCode":200,"destWidth":343,"destHeight":56,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn29@2020_2/2020/11/16/11-08-55-609_c975dfafee772127.webp","sourceBytes":9714,"destBytes":4470,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1014,"convertSpendMs":14,"createdTime":"2020-11-16 19:08:55","host":"us-021*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.5 KB","destSize":"4.4 KB","compressRate":"46%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cprod_%7B%20x%20%5Cin%20X%7D","sourceStatusCode":200,"destWidth":49,"destHeight":23,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn65@2020_3/2020/11/16/11-08-55-566_d8162d01bdb99263.webp","sourceBytes":951,"destBytes":566,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1033,"convertSpendMs":4,"createdTime":"2020-11-16 19:08:55","host":"us-51*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"951 B","destSize":"566 B","compressRate":"59.5%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5CSigma%28F%29%20%3A%3D%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29","sourceStatusCode":200,"destWidth":153,"destHeight":23,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn45@2020_6/2020/11/16/11-08-55-537_42f9ddc81bfa91f8.webp","sourceBytes":3131,"destBytes":1382,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1030,"convertSpendMs":4,"createdTime":"2020-11-16 19:08:55","host":"us-037*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.1 KB","destSize":"1.3 KB","compressRate":"44.1%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cprod%28F%29%20%5Csubseteq%20Map%28X%2C%20%5Cbigcup%28F%29%20%29","sourceStatusCode":200,"destWidth":187,"destHeight":27,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn97@2020_6/2020/11/16/11-08-55-400_4b5cfca02e26af61.webp","sourceBytes":3901,"destBytes":1806,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1208,"convertSpendMs":3,"createdTime":"2020-11-16 19:08:55","host":"europe64*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.8 KB","destSize":"1.8 KB","compressRate":"46.3%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Crequire%7BAMScd%7D%0A%5Cbegin%7BCD%7D%0A%5C%7Bx%5C%7D%5Ctimes%20F%28x%29%20%20%40%3E%7Bf_x%7D%3E%3E%20%5C%7Bx%5C%7D%5Ctimes%20G%28x%29%20%5C%5C%0A%40V%7B%20%7B%5Cpi%5EF%7D_x%7DVV%20%20%20%20%20%20%20%20%20%20%20%20%40VV%7B%7B%5Cpi%5EG%7D_x%7DV%20%5C%5C%0A%5C%7Bx%5C%7D%20%20%20%20%20%20%20%20%20%20%20%20%20%20%40%3D%20%20%20%20%20%20%20%5C%7Bx%5C%7D%0A%5Cend%7BCD%7D%0A","sourceStatusCode":200,"destWidth":391,"destHeight":58,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn9@2020_5/2020/11/16/11-08-55-651_eae8ec0c62591fe0.webp","sourceBytes":14432,"destBytes":5262,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1109,"convertSpendMs":10,"createdTime":"2020-11-16 19:08:55","host":"us-017*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.1 KB","destSize":"5.1 KB","compressRate":"36.5%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20length%20%3A%3A%20%5Cforall%5Calpha.%20%5Cmathrm%7BList%7D%5C%2C%20%5Calpha%20%5Cto%20Int%20","sourceStatusCode":200,"destWidth":185,"destHeight":18,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn89@2020_4/2020/11/16/11-08-55-755_68740e223262bdfe.webp","sourceBytes":3686,"destBytes":1444,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1141,"convertSpendMs":23,"createdTime":"2020-11-16 19:08:55","host":"us-013*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.6 KB","destSize":"1.4 KB","compressRate":"39.2%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20s%20%5Cin%20%5CGamma%28%5CSigma%28F%29%29%20%5CLeftrightarrow%20%5Cbeta_%5Cast%28s%29%20%5Cin%20%5CPi%28F%29%20%5Csubseteq%20Map%28X%2C%20%5Ccup%28F%29%29%20","sourceStatusCode":200,"destWidth":341,"destHeight":22,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn86@2020_6/2020/11/16/11-08-55-696_783b1ae653e54f17.webp","sourceBytes":6626,"destBytes":2706,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1148,"convertSpendMs":5,"createdTime":"2020-11-16 19:08:55","host":"us-025*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.5 KB","destSize":"2.6 KB","compressRate":"40.8%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20f%20%5Cin%20%5Cprod_%7B%20x%20%5Cin%20X%7D%20%5BF%28x%29%2C%20%20G%28x%29%5D%20","sourceStatusCode":200,"destWidth":158,"destHeight":41,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn25@2020_6/2020/11/16/11-08-55-797_a2c89786a831ed0c.webp","sourceBytes":3826,"destBytes":1662,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1249,"convertSpendMs":7,"createdTime":"2020-11-16 19:08:55","host":"us-013*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0,790dda3a28cc9b17e37a61c331125ea0,790dda3a28cc9b17e37a61c331125ea0,790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.7 KB","destSize":"1.6 KB","compressRate":"43.4%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Csum_%7Bx%5Cin%20X%7DF%28x%29%20%5Csubseteq%20%20X%20%5Ctimes%20%28%5Cbigcup_%7Bx%5Cin%20X%7DF%28x%29%20%29","sourceStatusCode":200,"destWidth":234,"destHeight":34,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn29@2020_5/2020/11/16/11-08-55-920_d512818668016966.webp","sourceBytes":4434,"destBytes":2132,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1385,"convertSpendMs":3,"createdTime":"2020-11-16 19:08:55","host":"us-001*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.3 KB","destSize":"2.1 KB","compressRate":"48.1%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20A%20%3A%3D%20F%281%29%2C%5C%3B%20B%20%3A%3D%20F%282%29","sourceStatusCode":200,"destWidth":148,"destHeight":19,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn37@2020_3/2020/11/16/11-08-55-947_d60801a495f41c56.webp","sourceBytes":2433,"destBytes":1236,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1389,"convertSpendMs":6,"createdTime":"2020-11-16 19:08:55","host":"us-51*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.4 KB","destSize":"1.2 KB","compressRate":"50.8%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Crequire%7BAMScd%7D%0A%5Cbegin%7BCD%7D%0A%5CSigma%28F%29%20%40%3E%7B%5Cbeta%7D%3E%3E%20%20%5Ccup%28F%29%20%20%5C%5C%0A%40V%7B%5Cpi%7DVV%20%5C%5C%0AX%0A%5Cend%7BCD%7D%0A","sourceStatusCode":200,"destWidth":315,"destHeight":52,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn14@2020_1/2020/11/16/11-08-55-959_2e608bc93abaa3f1.webp","sourceBytes":10036,"destBytes":3552,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1420,"convertSpendMs":10,"createdTime":"2020-11-16 19:08:55","host":"us-005*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.8 KB","destSize":"3.5 KB","compressRate":"35.4%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Ccong","sourceStatusCode":200,"destWidth":59,"destHeight":18,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn22@2020_1/2020/11/16/11-08-55-797_49cd82747b12e2f1.webp","sourceBytes":1396,"destBytes":672,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1466,"convertSpendMs":5,"createdTime":"2020-11-16 19:08:55","host":"us-55*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.4 KB","destSize":"672 B","compressRate":"48.1%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20f_a%20%3A%20F%28a%29%20%5Cto%20G%28a%29%20","sourceStatusCode":200,"destWidth":118,"destHeight":22,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn54@2020_1/2020/11/16/11-08-56-182_16372d2931dddf3e.webp","sourceBytes":2503,"destBytes":1128,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1643,"convertSpendMs":9,"createdTime":"2020-11-16 19:08:55","host":"us-013*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.4 KB","destSize":"1.1 KB","compressRate":"45.1%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Crequire%7BAMScd%7D%0A%5Cbegin%7BCD%7D%0A%5Csum_%7Bx%5Cin%20X%7DF%28x%29%20%40%3E%7B%5Cbeta%5EF%7D%3E%3E%20%20%5Cbigcup_%7Bx%5Cin%20X%7DF%28x%29%20%20%5C%5C%0A%40V%7B%5Cpi%5EF%7DVV%20%5C%5C%0AX%0A%5Cend%7BCD%7D%0A","sourceStatusCode":200,"destWidth":420,"destHeight":69,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn41@2020_2/2020/11/16/11-08-56-027_91e8f7fcb3342105.webp","sourceBytes":12548,"destBytes":4734,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1778,"convertSpendMs":5,"createdTime":"2020-11-16 19:08:55","host":"europe-60*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12.3 KB","destSize":"4.6 KB","compressRate":"37.7%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=X%20%5Ctimes%20%28%5Cbigcup_%7Bx%5Cin%20X%7DF%28x%29%20%29","sourceStatusCode":200,"destWidth":124,"destHeight":34,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn53@2020_2/2020/11/16/11-08-56-384_105840c8085bfb85.webp","sourceBytes":2753,"destBytes":1290,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":2054,"convertSpendMs":8,"createdTime":"2020-11-16 19:08:55","host":"europe68*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0,790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.7 KB","destSize":"1.3 KB","compressRate":"46.9%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20t%3AX%20%E2%86%92%20%5Cbigcup%28F%29","sourceStatusCode":200,"destWidth":117,"destHeight":20,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn100@2020_6/2020/11/16/11-08-56-532_d21a82b006e0c444.webp","sourceBytes":2419,"destBytes":1196,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":867,"convertSpendMs":4,"createdTime":"2020-11-16 19:08:56","host":"us-023*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.4 KB","destSize":"1.2 KB","compressRate":"49.4%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Cmathscr%7BF%7D%20%3A%3D%20%5Cbigcup_%7Bx%5Cin%20X%7D%20F%28x%29","sourceStatusCode":200,"destWidth":123,"destHeight":34,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn79@2020_6/2020/11/16/11-08-56-584_0fefd2568d0a58b8.webp","sourceBytes":2597,"destBytes":1222,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":981,"convertSpendMs":3,"createdTime":"2020-11-16 19:08:56","host":"us-015*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.5 KB","destSize":"1.2 KB","compressRate":"47.1%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20f%20%3A%20%5Cforall%20x%20%5Cin%20X.%20F%28x%29%20%5Cto%20G%28x%29%20","sourceStatusCode":200,"destWidth":174,"destHeight":19,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn96@2020_4/2020/11/16/11-08-56-536_383dded11f06ac4d.webp","sourceBytes":3214,"destBytes":1414,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":929,"convertSpendMs":4,"createdTime":"2020-11-16 19:08:56","host":"us-035*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0,790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.1 KB","destSize":"1.4 KB","compressRate":"44%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Ccirc","sourceStatusCode":200,"destWidth":9,"destHeight":9,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn83@2020_1/2020/11/16/11-08-56-645_54bdc68a42a41c58.webp","sourceBytes":221,"destBytes":138,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":954,"convertSpendMs":3,"createdTime":"2020-11-16 19:08:56","host":"us-004*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"221 B","destSize":"138 B","compressRate":"62.4%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20x%5Cin%20F%28x%29","sourceStatusCode":200,"destWidth":64,"destHeight":19,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn4@2020_4/2020/11/16/11-08-56-616_896fc52227c592d1.webp","sourceBytes":1362,"destBytes":656,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1071,"convertSpendMs":4,"createdTime":"2020-11-16 19:08:56","host":"us-012*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.3 KB","destSize":"656 B","compressRate":"48.2%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%28x%2C%20y%29%2C%5C%3B%20x%5Cin%20X%2C%5C%3B%20y%5Cin%20%5Cbigcup_%7Bx%5Cin%20X%7DF%28x%29","sourceStatusCode":200,"destWidth":203,"destHeight":34,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn91@2020_6/2020/11/16/11-08-56-635_5a3f7d818ae9e71d.webp","sourceBytes":3435,"destBytes":1844,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1334,"convertSpendMs":3,"createdTime":"2020-11-16 19:08:56","host":"europe-56*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.4 KB","destSize":"1.8 KB","compressRate":"53.7%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Csum_%7Bx%20%5Cin%20X%7D","sourceStatusCode":200,"destWidth":51,"destHeight":23,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn35@2020_6/2020/11/16/11-09-05-278_5e774cd15a5c5ab5.webp","sourceBytes":1111,"destBytes":600,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":10953,"convertSpendMs":2,"createdTime":"2020-11-16 19:08:55","host":"europe-22*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.1 KB","destSize":"600 B","compressRate":"54%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Cmathscr%7BF%7D","sourceStatusCode":200,"destWidth":19,"destHeight":16,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn87@2020_5/2020/11/16/11-09-06-436_7d15afb29ed23734.webp","sourceBytes":571,"destBytes":266,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":11035,"convertSpendMs":2,"createdTime":"2020-11-16 19:08:56","host":"europe68*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"571 B","destSize":"266 B","compressRate":"46.6%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20f%3AX%20%5Cto%20%5Cbigcup_%7Bx%5Cin%20X%7D%5BF%28x%29%2C%20%20G%28x%29%5D%20","sourceStatusCode":200,"destWidth":187,"destHeight":34,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn13@2020_5/2020/11/16/11-09-06-753_8a9a5feb210f7090.webp","sourceBytes":3359,"destBytes":1734,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":12378,"convertSpendMs":3,"createdTime":"2020-11-16 19:08:55","host":"europe-60*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.3 KB","destSize":"1.7 KB","compressRate":"51.6%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20leaves%20%3A%20%5Cforall%5Calpha%5Cin%20%5Cmathrm%7BType%7D.%20%5Cmathrm%7BLVOTree%7D%28%5Calpha%29%20%5Cto%20%5Cmathrm%7BList%7D%28%5Calpha%29%20","sourceStatusCode":200,"destWidth":308,"destHeight":19,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn73@2020_5/2020/11/16/11-09-12-619_0889b5f16b68052d.webp","sourceBytes":5729,"destBytes":2368,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":18284,"convertSpendMs":3,"createdTime":"2020-11-16 19:08:55","host":"europe-22*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.6 KB","destSize":"2.3 KB","compressRate":"41.3%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cmathscr%7BF%7D%20%3A%3D%20%5Cbigcup_%7Bx%5Cin%20%5C%7B1%2C%202%5C%7D%7D%20F%28x%29%20%3D%20F%281%29%5Ccup%20F%282%29","sourceStatusCode":200,"destWidth":242,"destHeight":45,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn34@2020_4/2020/11/16/11-09-15-478_45f870ac92ad97d7.webp","sourceBytes":4858,"destBytes":2114,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":1012,"convertSpendMs":10,"createdTime":"2020-11-16 19:09:15","host":"us-013*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.7 KB","destSize":"2.1 KB","compressRate":"43.5%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Cmapsto","sourceStatusCode":200,"destWidth":16,"destHeight":11,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn77@2020_3/2020/11/16/11-09-25-212_240ded80573f821a.webp","sourceBytes":213,"destBytes":168,"targetWebpQuality":75,"feedId":13468,"totalSpendMs":877,"convertSpendMs":2,"createdTime":"2020-11-16 19:09:25","host":"us-015*","referer":"https://m-hiyama.hatenablog.com/entry/2020/10/21/175259","linkMd5ListStr":"790dda3a28cc9b17e37a61c331125ea0","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"213 B","destSize":"168 B","compressRate":"78.9%"}],"successGithubMap":{"myreaderx8":2,"myreaderx15":2,"myreaderx7":2,"myreaderx6":2,"myreaderx16":2,"myreaderx32":2,"myreaderx4":2,"myreaderx10":2,"myreaderx11":2,"myreaderx33":2,"myreaderx3":1,"myreaderx2":2,"myreaderx12":2,"myreaderx13":2,"myreaderx1":1,"myreaderx30":2,"myreaderx31":2,"myreaderx18":2,"myreaderx19":2,"myreaderx":2,"myreaderx25":1,"myreaderx21":1,"myreaderx22":2,"myreaderx24":1,"myreaderx5oss":2,"myreaderx29":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}}