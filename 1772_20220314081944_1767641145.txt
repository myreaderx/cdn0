{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2022-03-14 16:19:44","updatedTime":"2022-03-14 16:19:44","title":"\n        Qt 的字体渲染问题\n      ","link":"https://blog.lilydjwg.me/posts/216133","description":"\n        <p style=\"text-indent: 2em; font-style: italic;\">本文来自<a href=\"https://blog.lilydjwg.me/\">依云's Blog</a>，转载请注明。</p><p>\n\tGUI 程序我现在依然倾向于 GTK，因为虽然 Qt 拥有良好的跨平台性，但可能是太注重跨平台性了，在 Linux 平台上反而有一些水土不服的问题。</p>\n<h2>\n\t字体太多，支持太少</h2>\n<p>\n\t你可能觉得，系统上字体太少，所以经常会遇到不常见的字符无法显示的情况。然而对于 Qt 来说，字体越多，反而越容易遇到个别字符不能显示的情况。</p>\n<p>\n\t这是我的 <code>/etc/fonts/conf.d/66-qt.conf</code> 中的一段。因为顺序的原因，我只能放到 /etc 下。除了针对 sans-serif 配置外，我也有同样的配置应用于 serif 和 monospace。</p>\n<pre class=\"brush: xml;\" title=\"66-qt.conf\">\n&#60;fontconfig&#62;\n  &#60;!-- Adjust font order for Qt applications --&#62;\n  &#60;alias&#62;\n    &#60;family&#62;sans-serif&#60;/family&#62;\n    &#60;prefer&#62;\n      &#60;!-- &#x683C;&#x62C9;&#x54E5;&#x91CC;&#x5B57;&#x6BCD;&#xFF1A;&#x2C0D;&#x2C41;&#x2C40;&#x2C44;&#x2C45;&#x2C30;&#x2C40;&#x2C45;&#x2C39;&#x2C40; &#x2C09;&#x2C4D;&#x2C39;&#x2C33;&#x2C41;&#x2C32; --&#62;\n      &#60;family&#62;Noto Sans Glagolitic&#60;/family&#62;\n      &#60;!-- &#x722A;&#x54C7;&#x6587;&#xFF1A;&#xA9C1;   &#xA9C2; --&#62;\n      &#60;family&#62;Noto Sans Javanese&#60;/family&#62;\n      &#60;!-- &#x897F;&#x590F;&#x6587;&#xFF1A;&#x17DF2;&#x17485; --&#62;\n      &#60;family&#62;Noto Serif Tangut&#60;/family&#62;\n      &#60;!-- &#x57C3;&#x53CA;&#x8C61;&#x5F62;&#x6587;&#x5B57;&#xFF1A;&#x13079; --&#62;\n      &#60;family&#62;Noto Sans Egyptian Hieroglyphs&#60;/family&#62;\n      &#60;!-- &#x82CF;&#x7F8E;&#x5C14;&#x6954;&#x5F62;&#x6587;&#x5B57;&#xFF1A;&#x121A0;&#x12097;&#x120A0; --&#62;\n      &#60;family&#62;Noto Sans Cuneiform&#60;/family&#62;\n      &#60;!-- &#x4E2D;&#x65E5;&#x97E9;&#x7EDF;&#x4E00;&#x8868;&#x610F;&#x6587;&#x5B57;&#x6269;&#x5C55; C&#xFF1A;&#x2B6A5; --&#62;\n      &#60;family&#62;HanaMinB&#60;/family&#62;\n      &#60;!-- &#x62C9;&#x8BA9;&#x6587;&#xFF1A;&#xA943; --&#62;\n      &#60;family&#62;Noto Sans Rejang&#60;/family&#62;\n      &#60;!-- &#x8D8A;&#x5357;&#x50A3;&#x6587;&#xFF1A;&#xAA80;&#xAA91; --&#62;\n      &#60;family&#62;Noto Sans Tai Viet&#60;/family&#62;\n      &#60;!-- &#x5207;&#x7F57;&#x57FA;&#x6587;&#xFF1A;&#xABB3;&#xABA7;&#xABA2; &#x1A23; --&#62;\n      &#60;family&#62;Noto Sans Cherokee&#60;/family&#62;\n      &#60;!-- &#x8001;&#x50A3;&#x4EC2;&#x6587;&#xFF1A;&#x1A23; --&#62;\n      &#60;family&#62;Noto Sans Tai Tham&#60;/family&#62;\n      &#60;!-- &#x5B89;&#x7EB3;&#x6258;&#x5229;&#x4E9A;&#x8C61;&#x5F62;&#x6587;&#x5B57;&#xFF1A;&#x14613; --&#62;\n      &#60;family&#62;Noto Sans Anatolian Hieroglyphs&#60;/family&#62;\n      &#60;!-- &#x9A6C;&#x59C6;&#x7A46;&#x6587;&#x8865;&#x5145;&#xFF1A;&#x1690D;  --&#62;\n      &#60;family&#62;Noto Sans Bamum&#60;/family&#62;\n      &#60;!-- &#x56FE;&#x6807;&#x5B57;&#x4F53;&#xFF08;PUA&#xFF09;&#xFF1A;&#xF0F6; --&#62;\n      &#60;family&#62;OperatorMonoSSmLig Nerd Font&#60;/family&#62;\n      &#60;!-- &#x5DF4;&#x5854;&#x514B;&#x6587;&#xFF1A;&#x1BE4; --&#62;\n      &#60;family&#62;Noto Sans Batak&#60;/family&#62;\n      &#60;!-- &#x53E4;&#x5317;&#x6B27;&#x6587;&#xFF1A;&#x16CB;&#x16D6;&#x16B1;&#x16A3;&#x16A8;&#x16DA;&#x16B3;&#x16A8;&#x16BE;&#x16DE;&#x16DA;&#x16D6; --&#62;\n      &#60;family&#62;Noto Sans Runic&#60;/family&#62;\n    &#60;/prefer&#62;\n  &#60;/alias&#62;\n&#60;/fontconfig&#62;\n</pre>\n<p>\n\t这个配置的意思是，把这些字体的优先级提高一些。当使用 fontconfig 的程序要显示字符的时候，它会指定一个模式，匹配到一个字体列表。渲染文字的时候，就可以遍历这个列表，直到找到可以显示这个字符的字体，所以一般来说，只要系统上装了对应字符的字体，它就能显示出来。</p>\n<p>\n\t但是 Qt 额外地需要这个配置，因为 <a href=\"https://bugreports.qt.io/browse/QTBUG-80434\">Qt 只会检查列表中的前255项</a>。而世界上的不同文字那么多，所以想要能够显示它们，就得有一堆字体。比如 noto-fonts 这个包里就有614个字体文件，远超 Qt 支持的数量。总有些奇奇怪怪的文字被网友用来当颜文字，或者挂在名字上彰显个性。不这么调整一下，Qt 遇到了就只能「吃<a href=\"https://en.wikipedia.org/wiki/Noto_fonts#Etymology\">豆腐</a>」了。</p>\n<h2>\n\t空心豆腐</h2>\n<p>\n\t当一个字符显示不出来的时候，那么怎么显示好呢？一般会显示成某种方框。<a href=\"https://pango.gnome.org/\">Pango</a> 和<a href=\"https://www.mozilla.org/en-US/firefox/all/\">火狐</a>会将该字符的 Unicode 码点以十六进制的形式显示在方框里边，这样虽然不知道这个字符长什么样子，但至少知道它是哪个字符，也知道多块豆腐是不是同一字符，在不能复制字符本身的时候很有用。比如当它出现在求助者的截图里的时候，比如当它出现在不能复制的地方的时候。</p>\n<p>\n\t然而 Qt 不这样做。管你什么字符，Qt 统一显示为空心方框。从视觉上完全无法知晓它到底是什么字符，要是复制不到的话，就别想弄明白你缺什么字体了。</p>\n<p>\n\tPS: Matrix 客户端 fluffychat 的 Web 版，使用的是 Fluffy 图形界面库，即使在 Web 版，文字渲染依然完全是自己做的。<a href=\"https://gitlab.com/famedly/fluffychat/-/issues/643\">不管浏览器的设置不管系统的设置</a>，豆腐块是带叉号的方框，还不能选中，十分讨厌。</p>\n<h2>\n\t非 BMP 字符</h2>\n<p>\n\t所有使用 UTF-16 的平台（Java、JavaScript、Windows、Qt），外加 MySQL 容易遇到的一个问题：非 BMP 字符（也就是那些 U+FFFF 之后的字符）会被当作是两个字符处理。随着 emoji 的流行，大家应该都修了不少。然而，Qt 在展示非 BMP 字符的时候，你可以选中半个字符。如果不小心漏掉半个的话，复制出来的半个字符就会变成问号（还好不是 GBK 时代那样弄乱后续所有字符）。</p>\n<h2>\n\tfont features</h2>\n<p>\n\t一些字体可以通过 fontconfig 设置 <a href=\"https://docs.microsoft.com/zh-cn/typography/opentype/spec/featurelist\">fontfeatures</a> 属性来启用（或者禁用）一些特性，比如连字，带斜杠的 0，小型大写字母，居中的中文标点，等等。Pango 很早就支持了，火狐<a href=\"https://hg.mozilla.org/mozilla-central/rev/182c89c77191\">最近也支持了</a>，但 <a href=\"https://bugreports.qt.io/browse/QTBUG-78645\">Qt 那边</a>依旧没啥动静。（感谢 <a href=\"https://blog.coelacanthus.moe\">Coelacanthus</a> 的评论。）</p>\n\n\n      ","descriptionType":"text/html","publishedDate":"Tue, 08 Mar 2022 08:45:01 +0000","feedId":1772,"bgimg":"","linkMd5":"c2f54ae5e8c19edb060b89fe669f6c8d","bgimgJsdelivr":"","metaImg":"","author":"依云","publishedOrCreatedDate":1647245984133}],"record":{"createdTime":"2022-03-14 16:19:44","updatedTime":"2022-03-14 16:19:44","feedId":1772,"fetchDate":"Mon, 14 Mar 2022 08:19:44 +0000","fetchMs":21876,"handleMs":13015,"totalMs":34897,"newArticles":0,"totalArticles":12,"status":1,"type":0,"ip":"f306b40366a93aa712f78b685bea0f01","hostName":"us-031*","requestId":"b0026af79e3d4764958e4dbb0d2446fc_1772","contentType":"application/rss+xml; charset=utf-8","totalBytes":0,"bgimgsTotal":0,"bgimgsGithubTotal":0,"articlesImgsTotal":0,"articlesImgsGithubTotal":0,"successGithubMap":{},"failGithubMap":{}},"feed":{"createdTime":"2020-08-24 21:31:33","updatedTime":"2020-12-11 16:40:00","id":1772,"name":"\n      依云's Blog\n    ","url":"https://blog.lilydjwg.me/feed","subscriber":null,"website":null,"icon":"https://blog.lilydjwg.me/favicon.ico","icon_jsdelivr":null,"description":"\n      \n    ","weekly":null,"link":"https://blog.lilydjwg.me"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":0,"tmpBgImgCdnBytes":0,"extra4":{"start":1647245949237,"total":0,"statList":[{"spend":21880,"msg":"获取xml内容"},{"spend":13016,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":0,"msg":"正文链接上传到cdn"}]},"extra5":0,"extra6":0,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{},"extra12ImgCdnSuccessResultVector":[],"successGithubMap":{},"failGithubMap":{}}