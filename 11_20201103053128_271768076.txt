{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-11-03 13:30:55","updatedTime":"2020-11-03 13:30:55","title":"Understanding MySQL Memory Usage with Performance Schema","link":"https://www.percona.com/blog/?p=72433","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"MySQL Memory Usage with Performance Schema\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-72446\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema-300x168.png\" alt=\"MySQL Memory Usage with Performance Schema\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Understanding how MySQL uses memory is key to tuning it for optimal performance as well as troubleshooting cases of unexpected memory usage, i.e. when you have MySQL Server using a lot more than you would expect based on your configuration settings.</p>\n<p>Early in MySQL history, understanding memory usage details was hard and included a lot of guesswork.  Is it possible that some queries running require a large temporary table or allocated a lot of memory for stored user variables?  Are any stored procedures taking an unexpectedly high amount of memory? All could be reasons for excessive MySQL memory usage, but you would not easily see if that is just the case.</p>\n<p>All that changed with MySQL 5.7, which added memory instrumentation in Performance Schema, and with MySQL 8.0, this instrumentation is enabled by default, so you can get this data from pretty much any running instance.</p>\n<p>If you’re looking for current memory usage details, Sys schema provides fantastic views:</p><pre class=\"crayon-plain-tag\">mysql&#62; select event_name,current_alloc from sys.memory_global_by_current_bytes limit 10;\n+---------------------------------------------------------------+---------------+\n| event_name                                                    | current_alloc |\n+---------------------------------------------------------------+---------------+\n| memory/innodb/buf_buf_pool                                    | 262.12 MiB    |\n| memory/temptable/physical_ram                                 | 64.00 MiB     |\n| memory/performance_schema/events_statements_summary_by_digest | 39.67 MiB     |\n| memory/sql/TABLE                                              | 33.32 MiB     |\n| memory/innodb/ut0link_buf                                     | 24.00 MiB     |\n| memory/innodb/lock0lock                                       | 20.51 MiB     |\n| memory/innodb/memory                                          | 17.79 MiB     |\n| memory/innodb/buf0dblwr                                       | 17.08 MiB     |\n| memory/innodb/ut0new                                          | 16.08 MiB     |\n| memory/performance_schema/events_statements_history_long      | 13.89 MiB     |\n+---------------------------------------------------------------+---------------+\n10 rows in set (0.01 sec)</pre><p>This view shows the current memory allocated overall.  You can also drill down further, by looking at memory allocated by connections coming from different hosts:</p><pre class=\"crayon-plain-tag\">mysql&#62; select host,current_allocated from memory_by_host_by_current_bytes;\n+-------------------------------+-------------------+\n| host                          | current_allocated |\n+-------------------------------+-------------------+\n| localhost                     | 1.19 GiB          |\n| background                    | 101.28 MiB        |\n| li1317-164.members.linode.com | 49.61 MiB         |\n| li1319-234.members.linode.com | 27.90 MiB         |\n| li1316-24.members.linode.com  | 27.00 MiB         |\n+-------------------------------+-------------------+\n5 rows in set (0.02 sec)</pre><p>Or even check allocation by given thread_id which can be super helpful to diagnose memory-heavy transactions or queries:</p><pre class=\"crayon-plain-tag\">mysql&#62; select thread_id,user,current_allocated from memory_by_thread_by_current_bytes limit 5;\n+-----------+------------------------------------+-------------------+\n| thread_id | user                               | current_allocated |\n+-----------+------------------------------------+-------------------+\n|        44 | innodb/srv_worker_thread           | 1.99 MiB          |\n|        48 | innodb/srv_worker_thread           | 1.16 MiB          |\n|     54322 | root@localhost                     | 1.10 MiB          |\n|        46 | innodb/srv_worker_thread           | 777.29 KiB        |\n|     43881 | app1@li1317-164.members.linode.com | 274.84 KiB        |\n+-----------+------------------------------------+-------------------+\n5 rows in set (0.43 sec)</pre><p>Looking at current stats, though, is not very helpful to diagnose past incidents or even to answer the question of why a particular object taking so much memory is normal or excessive. For this, you better have history captured and available for trending… exactly what <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Percona Monitoring and Management</a> (PMM) is designed for.</p>\n<p>Unfortunately, as of PMM 2.11, we do not have Performance Schema Memory Instrumentation included in the release.  It is, however, quite easy to get it added using Custom Queries.</p>\n<h2>MySQL Custom Queries</h2>\n<p>Custom Queries is a great feature that allows you to get stats from a local MySQL instance using standard SQL queries and make them available together with other metrics collected by MySQL exporter.  This can be used for Performance Schema tables, Information Schema tables, or even queries on your own schema to expose data you consider relevant for your application. Check out our <a target=\"_blank\" href=\"https://www.percona.com/blog/2020/06/10/running-custom-queries-in-percona-monitoring-and-management/\">Custom Queries In Percona Monitoring and Management</a> blog post for more details.</p>\n<p>You can install the custom queries to read memory use statistics from MySQL Performance Schema this way&#8230;</p><pre class=\"crayon-plain-tag\">cd /usr/local/percona/pmm2/collectors/custom-queries/mysql/medium-resolution\nwget https://raw.githubusercontent.com/Percona-Lab/pmm-custom-queries/master/mysql/ps-memory-summary.yml</pre><p>when you install the <a target=\"_blank\" href=\"https://grafana.com/grafana/dashboards/13266\">MySQL Memory Usage Details dashboard</a> from Grafana.com. Let’s see what you get by having this dashboard installed.</p>\n<p>First, we have the block which does not have much to do with the information we capture from Performance Schema but provides some helpful background in interpreting such information:</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-72438 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/11/image3-1024x145.png\" alt=\"MySQL Memory Usage Details dashboard\" width=\"900\" height=\"127\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/11/image3-1024x145.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/11/image3-300x43.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/11/image3-200x28.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/11/image3-1536x218.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/11/image3-367x52.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/11/image3.png 1999w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>We can see how long the system and MySQL process have been up, how much memory the system has and how much is available, whenever there is any aggressive swapping activity going on, etc., and all of those help us to know whenever MySQL is currently using too much memory… or too little.  We can show the number of current connections, which is a common driver of high memory utilization as well as a couple of variables that can impact memory consumption.</p>\n<p>The MySQL Memory Usage Summary shows how much memory different objects contain, as well as what the total instrumented memory allocated by the MySQL process is.</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-72439 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/11/image4-1024x266.png\" alt=\"MySQL Memory Usage Summary\" width=\"900\" height=\"234\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/11/image4-1024x266.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/11/image4-300x78.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/11/image4-200x52.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/11/image4-1536x399.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/11/image4-367x95.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/11/image4.png 1999w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>With hundreds of different places where memory can be allocated, even memory consumers which are not at the top can add up to a lot:</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-72440 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/11/image5-1024x466.png\" alt=\"MySQL Memory Usage by host\" width=\"900\" height=\"410\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/11/image5-1024x466.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/11/image5-300x136.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/11/image5-200x91.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/11/image5-1536x698.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/11/image5-367x167.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/11/image5.png 1999w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>When we have memory allocation by Host and by User, these only cover memory which can be attributed to specific connections but is a great tool to see if there are particular hosts, users, or applications that are significant memory consumers.</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-72441 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/11/image1-1024x240.png\" alt=\"MySQL memory usage\" width=\"900\" height=\"211\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/11/image1-1024x240.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/11/image1-300x70.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/11/image1-200x47.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/11/image1-1536x360.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/11/image1-367x86.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/11/image1.png 1999w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>You can also see memory usage details by specific accounts (a given user coming from a given host). This is as far as we go with dashboards, as specific Connection IDs (and Thread IDs) tend to change so quickly that they are not particularly helpful for long term capture.</p>\n<p>You may also have noticed I unselected the <em>pmm@localhost</em> user, as it looks like this user workload triggers some bug in memory accounting and unrealistic numbers get reported (this is also something you need to keep in mind, to not trust the data you see blindly).</p>\n<p><img loading=\"lazy\" class=\"aligncenter size-large wp-image-72442\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/11/image2-1024x392.png\" alt=\"\" width=\"900\" height=\"345\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/11/image2-1024x392.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/11/image2-300x115.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/11/image2-200x77.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/11/image2-1536x589.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/11/image2-367x141.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/11/image2.png 1999w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>Finally, you can see memory allocation by different subsystems, which can be rather helpful for advanced analyses, where just the global top consumers do not provide enough information.</p>\n<p>What do you think? Is it helpful, or would you like to see some additional visualizations added before we consider including this feature in <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Percona Monitoring and Management</a>?</p>\n","descriptionType":"html","publishedDate":"Mon, 02 Nov 2020 18:18:37 +0000","feedId":11,"bgimg":"","linkMd5":"caaeae1f5ae0c3a30d32be7c9a1536ea","bgimgJsdelivr":"","metaImg":"","author":"Peter Zaitsev","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn6@2020_6/2020/11/03/05-30-59-851_e868baf134ab7070.webp","https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn10@2020_4/2020/11/03/05-31-00-851_9c847cfd549fe9d6.webp","https://www.percona.com/blog/wp-content/uploads/2020/11/image3-1024x145.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn7@2020_3/2020/11/03/05-30-58-813_dc098574e7a01648.webp","https://www.percona.com/blog/wp-content/uploads/2020/11/image4-1024x266.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn15@2020_1/2020/11/03/05-31-05-546_7a41a954f6e38fce.webp","https://www.percona.com/blog/wp-content/uploads/2020/11/image5-1024x466.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn4@2020_6/2020/11/03/05-31-05-046_98d5488de5d5b812.webp","https://www.percona.com/blog/wp-content/uploads/2020/11/image1-1024x240.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn12@2020_4/2020/11/03/05-31-04-280_af7021eacf4aeff2.webp","https://www.percona.com/blog/wp-content/uploads/2020/11/image2-1024x392.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn13@2020_5/2020/11/03/05-31-26-811_f72e091eb7a9bd21.webp"},"publishedOrCreatedDate":1604381455469}],"record":{"createdTime":"2020-11-03 13:30:55","updatedTime":"2020-11-03 13:30:55","feedId":11,"fetchDate":"Tue, 03 Nov 2020 05:30:55 +0000","fetchMs":655,"handleMs":491,"totalMs":34153,"newArticles":0,"totalArticles":40,"status":1,"type":0,"ip":"109185facf80dc2fd96f0699ce74a6de","hostName":"europe21*","requestId":"ba024fbd68074645b10e41a7e5b8ef79_11","contentType":"application/rss+xml; charset=UTF-8","totalBytes":112862,"bgimgsTotal":0,"bgimgsGithubTotal":0,"articlesImgsTotal":7,"articlesImgsGithubTotal":7,"successGithubMap":{"myreaderx15":1,"myreaderx33":1,"myreaderx22":1,"myreaderx2":1,"myreaderx12":1,"myreaderx23":1,"myreaderx30":1},"failGithubMap":{}},"feed":{"createdTime":"2020-05-30 17:21:38","updatedTime":"2020-09-01 09:23:03","id":11,"name":"Percona Database Performance Blog","url":"https://www.percona.com/blog/feed/","subscriber":null,"website":null,"icon":"https://www.percona.com/blog/wp-content/uploads/2018/09/percona-32x32.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn89@2020_6/2020/09/01/01-23-01-358_b72bb3b39c378fe6.png","description":"","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":112862,"tmpBgImgCdnBytes":0,"extra4":{"start":1604381454034,"total":0,"statList":[{"spend":947,"msg":"获取xml内容"},{"spend":492,"msg":"解释文章"},{"spend":2,"msg":"上传封面图到cdn"},{"spend":2,"msg":"修正封面图上传失败重新上传"},{"spend":32651,"msg":"正文链接上传到cdn"}]},"extra5":7,"extra6":7,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-038.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-037.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-036.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-040.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/11/image3-1024x145.png","sourceStatusCode":200,"destWidth":1024,"destHeight":145,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn7@2020_3/2020/11/03/05-30-58-813_dc098574e7a01648.webp","sourceBytes":137809,"destBytes":16474,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1162,"convertSpendMs":12,"createdTime":"2020-11-03 13:30:58","host":"us-036*","referer":"https://www.percona.com/blog/?p=72433","linkMd5ListStr":"caaeae1f5ae0c3a30d32be7c9a1536ea","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"134.6 KB","destSize":"16.1 KB","compressRate":"12%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn6@2020_6/2020/11/03/05-30-59-851_e868baf134ab7070.webp","sourceBytes":15340,"destBytes":3296,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1077,"convertSpendMs":5,"createdTime":"2020-11-03 13:30:59","host":"us-037*","referer":"https://www.percona.com/blog/?p=72433","linkMd5ListStr":"caaeae1f5ae0c3a30d32be7c9a1536ea","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15 KB","destSize":"3.2 KB","compressRate":"21.5%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/11/MySQL-Memory-Usage-with-Performance-Schema-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn10@2020_4/2020/11/03/05-31-00-851_9c847cfd549fe9d6.webp","sourceBytes":31118,"destBytes":6600,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1075,"convertSpendMs":6,"createdTime":"2020-11-03 13:31:00","host":"us-035*","referer":"https://www.percona.com/blog/?p=72433","linkMd5ListStr":"caaeae1f5ae0c3a30d32be7c9a1536ea","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.4 KB","destSize":"6.4 KB","compressRate":"21.2%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/11/image1-1024x240.png","sourceStatusCode":200,"destWidth":1024,"destHeight":240,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn12@2020_4/2020/11/03/05-31-04-280_af7021eacf4aeff2.webp","sourceBytes":203870,"destBytes":17234,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1523,"convertSpendMs":40,"createdTime":"2020-11-03 13:31:03","host":"us-51*","referer":"https://www.percona.com/blog/?p=72433","linkMd5ListStr":"caaeae1f5ae0c3a30d32be7c9a1536ea","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"199.1 KB","destSize":"16.8 KB","compressRate":"8.5%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/11/image5-1024x466.png","sourceStatusCode":200,"destWidth":1024,"destHeight":466,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn4@2020_6/2020/11/03/05-31-05-046_98d5488de5d5b812.webp","sourceBytes":276594,"destBytes":22402,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1387,"convertSpendMs":44,"createdTime":"2020-11-03 13:31:04","host":"us-038*","referer":"https://www.percona.com/blog/?p=72433","linkMd5ListStr":"caaeae1f5ae0c3a30d32be7c9a1536ea","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"270.1 KB","destSize":"21.9 KB","compressRate":"8.1%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/11/image4-1024x266.png","sourceStatusCode":200,"destWidth":1024,"destHeight":266,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn15@2020_1/2020/11/03/05-31-05-546_7a41a954f6e38fce.webp","sourceBytes":189852,"destBytes":16188,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1730,"convertSpendMs":39,"createdTime":"2020-11-03 13:31:04","host":"us-039*","referer":"https://www.percona.com/blog/?p=72433","linkMd5ListStr":"caaeae1f5ae0c3a30d32be7c9a1536ea","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"185.4 KB","destSize":"15.8 KB","compressRate":"8.5%"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/11/image2-1024x392.png","sourceStatusCode":200,"destWidth":1024,"destHeight":392,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn13@2020_5/2020/11/03/05-31-26-811_f72e091eb7a9bd21.webp","sourceBytes":298871,"destBytes":30668,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2229,"convertSpendMs":131,"createdTime":"2020-11-03 13:31:25","host":"us-040*","referer":"https://www.percona.com/blog/?p=72433","linkMd5ListStr":"caaeae1f5ae0c3a30d32be7c9a1536ea","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"291.9 KB","destSize":"29.9 KB","compressRate":"10.3%"}],"successGithubMap":{"myreaderx15":1,"myreaderx33":1,"myreaderx22":1,"myreaderx2":1,"myreaderx12":1,"myreaderx23":1,"myreaderx30":1},"failGithubMap":{}}