{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Better Error Handling In NodeJS With Error Classes","link":"https://smashingmagazine.com/2020/08/error-handling-nodejs-error-classes/","description":"<p>Error handling is one of those parts of software development that don’t quite get the amount of attention it really deserves. However, building robust applications requires dealing with errors properly.</p>\n<p>You can get by in NodeJS without properly handling errors but due to the asynchronous nature of NodeJS, improper handling or errors can cause you pain soon enough — especially when debugging applications.</p>\n<p>Before we proceed, I would like to point out the type of errors we’ll be discussing how to utilize error classes.</p>\n<h3>Operational Errors</h3>\n<p>These are errors discovered during the run time of a program. Operational errors are not bugs and can occur from time to time mostly because of one or a combination of several external factors like a database server timing out or a user deciding to make an attempt on SQL injection by entering SQL queries in an input field. </p>\n<p>Below are more examples of operational errors:</p>\n<ul>\n<li>Failed to connect to a database server;</li>\n<li>Invalid inputs by the user (server responds with a <code>400</code> response code);</li>\n<li>Request timeout;</li>\n<li>Resource not found (server responds with a 404 response code);</li>\n<li>Server returns with a <code>500</code> response.</li>\n</ul>\n<p>It’s also worthy of note to briefly discuss the counterpart of Operational Errors.</p>\n<h3>Programmer Errors</h3>\n<p>These are bugs in the program which can be resolved by changing the code. These types of errors can not be handled because they occur as a result of the code being broken. Example of these errors are:</p>\n<ul>\n<li>Trying to read a property on an object that is not defined.</li>\n</ul>\n<div>\n<pre><code> const user = {\n   firstName: 'Kelvin',\n   lastName: 'Omereshone',\n }\n\n console.log(user.fullName) // throws 'undefined' because the property fullName is not defined</code></pre>\n\n</div>\n\n<ul>\n<li>Invoking or calling an asynchronous function without a callback.</li>\n<li>Passing a string where a number was expected.</li>\n</ul>\n<p>This article is about <strong>Operational Error handling</strong> in NodeJS. Error handling in NodeJS is significantly different from error handling in other languages. This is due to the asynchronous nature of JavaScript and the openness of JavaScript with errors. Let me explain:</p>\n<p>In JavaScript, instances of the <code>error</code> class is not the only thing you can throw. You can literally throw any data type this openness is not allowed by other languages.</p>\n<p>For example, a JavaScript developer may decide to throw in a number instead of an error object instance, like so:</p>\n<div>\n<pre><code>// bad\nthrow 'Whoops :)';\n\n// good\nthrow new Error('Whoops :)')\n</code></pre>\n</div>\n\n<p>You might not see the problem in throwing other data types, but doing so will result in a harder time debugging because you won’t get a stack trace and other properties that the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\">Error object</a> exposes which are needed for debugging.</p>\n<p>Let’s look at some incorrect patterns in error handling, before taking a look at the Error class pattern and how it is a much better way for error handling in NodeJS.</p>\n<h3>Bad Error Handling Pattern #1: Wrong Use Of Callbacks</h3>\n<p><strong>Real-world scenario</strong>: <em>Your code depends on an external API requiring a callback to get the result you expect it to return.</em></p>\n<p>Let’s take the below code snippet:</p>\n<div>\n<pre><code>'use strict';\n\nconst fs = require('fs');\n\nconst write = function () {\n    fs.mkdir('./writeFolder');\n    fs.writeFile('./writeFolder/foobar.txt', 'Hello World');\n}\n\nwrite();\n</code></pre>\n</div>\n\n<p>Until NodeJS 8 and above, the above code was legitimate, and developers would simply fire and forget commands. This means developers weren’t required to provide a callback to such function calls, and therefore could leave out error handling. What happens when the <code>writeFolder</code> hasn’t been created? The call to <code>writeFile</code> won’t be made and we wouldn’t know anything about it. This might also result in race condition because the first command might not have finished when the second command started again, you wouldn’t know.</p>\n<p>Let’s start solving this problem by solving the race condition. We would do so by giving a callback to the first command <code>mkdir</code> to ensure the directory indeed exists before writing to it with the second command. So our code would look like the one below:</p>\n<div>\n<pre><code>'use strict';\n\nconst fs = require('fs');\n\nconst write = function () {\n    fs.mkdir('./writeFolder', () =&#62; {\n        fs.writeFile('./writeFolder/foobar.txt', 'Hello World!');\n    });\n}\n\nwrite();\n</code></pre>\n</div>\n\n<p>Though we solved the race condition, we are not done quite yet. Our code is still problematic because even though we used a callback for the first command, we have no way of knowing if the folder <code>writeFolder</code> was created or not. If the folder wasn’t created, then the second call will fail again but still, we ignored the error yet again. We solve this by...</p>\n<h4>Error Handling With Callbacks</h4>\n<p>In order to handle error properly with callbacks, you must make sure you always use the error-first approach. What this means is that you should first check if there is an error returned from the function before going ahead to use whatever data(if any) was returned. Let’s see the wrong way of doing this:</p>\n<div>\n<pre><code>'use strict';\n\n\n// Wrong\nconst fs = require('fs');\n\nconst write = function (callback) {\n    fs.mkdir('./writeFolder', (err, data) =&#62; {\n        if (data) fs.writeFile('./writeFolder/foobar.txt', 'Hello World!');\n        else callback(err)\n    });\n}\n\nwrite(console.log);\n</code></pre>\n</div>\n\n<p>The above pattern is wrong because sometimes the API you are calling might not return any value or might return a falsy value as a valid return value. This would make you end up in an error case even though you might apparently have a successful call of the function or API.</p>\n<p>The above pattern is also bad because it’s usage would eat up your error(your errors won’t be called even though it might have happened). You will also have no idea of what is happening in your code as a result of this kind of error handling pattern. So the right way for the above code would be:</p>\n<div>\n<pre><code>'use strict';\n\n// Right\nconst fs = require('fs');\n\nconst write = function (callback) {\n    fs.mkdir('./writeFolder', (err, data) =&#62; {\n        if (err) return callback(err)\n        fs.writeFile('./writeFolder/foobar.txt', 'Hello World!');\n    });\n}\n\nwrite(console.log);\n</code></pre>\n</div>\n\n<h3>Wrong Error Handling Pattern #2: Wrong Use Of Promises</h3>\n<p><strong>Real-world scenario</strong>: <em>So you discovered Promises and you think they are way better than callbacks because of callback hell and you decided on promisifying some external API your code base depended upon. Or you are consuming a promise from an external API or a browser API like the fetch() function.</em></p>\n<p>These days we don’t really use callbacks in our NodeJS codebases, we use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\">promises</a>. So let’s reimplement our example code with a promise:</p>\n<div>\n<pre><code>'use strict';\n\nconst fs = require('fs').promises;\n\nconst write = function () {\n    return fs.mkdir('./writeFolder').then(() =&#62; {\n        fs.writeFile('./writeFolder/foobar.txt', 'Hello world!')\n    }).catch((err) =&#62; {\n        // catch all potential errors\n        console.error(err)\n    })\n}\n</code></pre>\n</div>\n\n<p>Let’s put the above code under a microscope — we can see that we are branching off the <code>fs.mkdir</code> promise into another promise chain(the call to fs.writeFile) without even handling that promise call. You might think a better way to do it would be:</p>\n<div>\n<pre><code>'use strict';\n\nconst fs = require('fs').promises;\n\nconst write = function () {\n    return fs.mkdir('./writeFolder').then(() =&#62; {\n        fs.writeFile('./writeFolder/foobar.txt', 'Hello world!').then(() =&#62; {\n            // do something\n        }).catch((err) =&#62; {\n            console.error(err);\n        })\n    }).catch((err) =&#62; {\n        // catch all potential errors\n        console.error(err)\n    })\n}\n</code></pre>\n</div>\n\n<p>But the above would not scale. This is because if we have more promise chain to call, we would end up with something similar to the <a href=\"http://callbackhell.com/\">callback hell</a> which promises were made to solve. This means our code will keep indenting to the right. We would have a promise hell on our hands.</p>\n<h3>Promisifying A Callback-Based API</h3>\n<p>Most times you would want to promisify a callback-based API on your own in order to better handle errors on that API. However, this is not really easy to do. Let’s take an example below to explain why.</p>\n<div>\n<pre><code>function doesWillNotAlwaysSettle(arg) {\n    return new Promise((resolve, reject) =&#62; {\n       doATask(foo, (err) =&#62; {\n           if (err) {\n                return reject(err);\n            }\n\n            if (arg === true) {\n                resolve('I am Done')\n            }\n        });\n    });\n}\n</code></pre>\n</div>\n\n<p>From the above, if <code>arg</code> is not <code>true</code> and we don’t have an error from the call to the <code>doATask</code> function then this promise will just hang out which is a <a href=\"https://en.wikipedia.org/wiki/Memory_leak\">memory leak</a> in your application.</p>\n<h4>Swallowed Sync Errors In Promises</h4>\n<p>Using the Promise constructor has several difficulties one of these difficulties is; as soon as it is either resolved or rejected it cannot get another state. This is because a promise can only get a single state — either it is pending or it is resolved/rejected. This means we can have dead zones in our promises. Let’s see this in code:</p>\n<div>\n<pre><code>function deadZonePromise(arg) {\n    return new Promise((resolve, reject) =&#62; {\n        doATask(foo, (err) =&#62; {\n            resolve('I’m all Done');\n            throw new Error('I am never reached') // Dead Zone\n        });\n    });\n}\n</code></pre>\n</div>\n\n<p>From the above we see as soon as the promise is resolved, the next line is a dead zone  and will never be reached. This means any following synchronous error handling perform in your promises will just be swallowed and will never be thrown.</p>\n<h3>Real-World Examples</h3>\n<p>The examples above help explain poor error handling patterns, let’s take a look at the sort of problems you might see in real-life.</p>\n<h4>Real World Example #1 — Transforming Error To String</h4>\n<p><strong>Scenario</strong>: <em>You decided the error returned from an API is not really good enough for you so you decided to add your own message to it.</em></p>\n<div>\n<pre><code>'use strict';\n\nfunction readTemplate() {\n    return new Promise(() =&#62; {\n      databaseGet('query', function(err, data) {\n          if (err) {\n           reject('Template not found. Error: ', + err);\n          } else {\n            resolve(data);\n          }\n        });\n    });\n}\n\nreadTemplate();\n</code></pre>\n</div>\n\n<p>Let’s look at what is wrong with the above code. From the above we see the developer is trying to improve the error thrown by the <code>databaseGet</code> API by concatenating the returned error with the string \"Template not found\". This approach has a lot of downsides because when the concatenation was done, the developer implicitly runs <code>toString</code> on the error object returned. This way he loses any extra information returned by the error(say goodbye to stack trace). So what the developer has right now is just a string that is not useful when debugging.</p>\n<p>A better way is to keep the error as it is or wrap it in another error that you’ve created and attached the thrown error from the databaseGet call as a property to it.</p>\n<h4>Real-World Example #2: Completely Ignoring The Error</h4>\n<p><strong>Scenario</strong>: <em>Perhaps when a user is signing up in your application, if an error occur you want to just catch the error and show a custom message but you completely ignored the error that was caught without even logging it for debugging purposes.</em></p>\n<div>\n<pre><code>router.get('/:id', function (req, res, next) {\n    database.getData(req.params.userId)\n    .then(function (data) {\n        if (data.length) {\n            res.status(200).json(data);\n        } else {\n            res.status(404).end();\n        }\n    })\n    .catch(() =&#62; {\n        log.error('db.rest/get: could not get data: ', req.params.userId);\n        res.status(500).json({error: 'Internal server error'});\n    })\n});\n</code></pre>\n</div>\n\n<p>From the above, we can see that the error is completely ignored and the code is sending 500 to the user if the call to the database failed. But in reality, the cause for the database failure might be malformed data sent by the user which is an error with the status code of 400.</p>\n<p>In the above case, we would be ending up in a debugging horror because you as the developer wouldn’t know what went wrong. The user won’t be able to give a decent report because 500 internal server error is always thrown. You would end up wasting hours in finding the problem which will tantamount to wastage of your employer’s time and money.</p>\n<h4>Real-World Example #3: Not Accepting The Error Thrown From An API</h4>\n<p><strong>Scenario</strong>: <em>An error was thrown from an API you were using but you don’t accept that error instead you marshall and transform the error in ways that make it useless for debugging purposes.</em></p>\n<p>Take the following code example below:</p>\n<div>\n<pre><code>async function doThings(input) {\n    try {\n        validate(input);\n        try {\n            await db.create(input);\n        } catch (error) {\n            error.message = <code>Inner error: ${error.message}</code>\n\n            if (error instanceof Klass) {\n                error.isKlass = true;\n            }\n\n            throw error\n        }\n    } catch (error) {\n        error.message = <code>Could not do things: ${error.message}</code>;\n        await rollback(input);\n        throw error;\n    }\n}\n</code></pre>\n</div>\n\n<p>A lot is going on in the above code that would lead to debugging horror. Let’s take a look:</p>\n<ul>\n<li>Wrapping <code>try/catch</code> blocks: You can see from the above that we are wrapping <code>try/catch</code> block which is a very bad idea. We normally try to reduce the use of <code>try/catch</code> blocks to minify the surface where we would have to handle our error (think of it as DRY error handling);</li>\n<li>We are also manipulating the error message in the attempt to improve which is also not a good idea;</li>\n<li>We are checking if the error is an instance of type <code>Klass</code> and in this case, we are setting a boolean property of the error <code>isKlass</code> to truev(but if that check passes then the error is of the type <code>Klass</code>);</li>\n<li>We are also rolling back the database too early because, from the code structure, there is a high tendency that we might not have even hit the database when the error was thrown.</li>\n</ul>\n<p>Below is a better way to write the above code:</p>\n<div>\n<pre><code>async function doThings(input) {\n    validate(input);\n\n    try {\n        await db.create(input);\n    } catch (error) {\n        try {\n            await rollback();\n        } catch (error) {\n            logger.log('Rollback failed', error, 'input:', input);\n        }\n        throw error;\n    }\n}\n</code></pre>\n</div>\n\n<p>Let’s analyze what we are doing right in the above snippet:</p>\n<ul>\n<li>We are using one <code>try/catch</code> block and only in the catch block are we using another <code>try/catch</code> block which is to serve as a guard in case something goes on with that rollback function and we are logging that;</li>\n<li>Finally, we are throwing our original received error meaning we don’t lose the message included in that error.</li>\n</ul>\n<h4>Testing</h4>\n<p>We mostly want to test our code(either manually or automatically). But most times we are only testing for the positive things. For a robust test, you must also test for errors and edge cases. This negligence is responsible for bugs finding their way into production which would cost more extra debugging time.</p>\n<p><strong>Tip</strong>: <em>Always make sure to test not only the positive things(getting a status code of 200 from an endpoint) but also all the error cases and all the edge cases as well.</em></p>\n<h4>Real-World Example #4: Unhandled Rejections</h4>\n<p>If you’ve used promises before, you have probably run into <code>unhandled rejections</code>. </p>\n<p>Here is a quick primer on unhandled rejections. Unhandled rejections are promise rejections that weren’t handled. This means that the promise was rejected but your code will continue running.</p>\n<p>Let’s look at a common real-world example that leads to unhandled rejections..</p>\n<div>\n<pre><code>'use strict';\n\nasync function foobar() {\n    throw new Error('foobar');\n}\n\nasync function baz() {\n    throw new Error('baz')\n}\n\n\n(async function doThings() {\n    const a = foobar();\n    const b = baz();\n\n    try {\n        await a;\n        await b;\n    } catch (error) {\n        // ignore all errors!\n    }\n})();\n</code></pre>\n</div>\n\n<p>The above code at first look might seem not error-prone. But on a closer look, we begin to see a defect. Let me explain: What happens when <code>a</code> is rejected? That means <code>await b</code> is never reached and that means its an unhandled rejection. A possible solution is to use <code>Promise.all</code> on both promises. So the code would read like so:</p>\n<div>\n<pre><code>'use strict';\n\nasync function foobar() {\n    throw new Error('foobar');\n}\n\nasync function baz() {\n    throw new Error('baz')\n}\n\n\n(async function doThings() {\n    const a = foobar();\n    const b = baz();\n\n    try {\n        await Promise.all([a, b]);\n    } catch (error) {\n        // ignore all errors!\n    }\n})();\n</code></pre>\n</div>\n\n<p>Here is another real-world scenario that would lead to an unhandled promise rejection error:</p>\n<div>\n<pre><code>'use strict';\n\nasync function foobar() {\n    throw new Error('foobar');\n}\n\nasync function doThings() {\n    try {\n        return foobar()\n    } catch {\n        // ignoring errors again !\n    }\n}\n\ndoThings();\n</code></pre>\n</div>\n\n<p>If you run the above code snippet, you will get an unhandled promise rejection, and here is why: Although it’s not obvious, we are returning a promise (foobar) before we are handling it with the <code>try/catch</code>. What we should do is await the promise we are handling with the <code>try/catch</code> so the code would read:</p>\n<div>\n<pre><code>'use strict';\n\nasync function foobar() {\n    throw new Error('foobar');\n}\n\nasync function doThings() {\n    try {\n        return await foobar()\n    } catch {\n        // ignoring errors again !\n    }\n}\n\ndoThings();\n</code></pre>\n</div>\n\n\n\n<h3>Wrapping Up On The Negative Things</h3>\n<p>Now that you have seen wrong error handling patterns, and possible fixes, let’s now dive into Error class pattern and how it solves the problem of wrong error handling in NodeJS.</p>\n<h3>Error Classes</h3>\n<p>In this pattern, we would start our application with an <code>ApplicationError</code> class this way we know all errors in our applications that we explicitly throw are going to inherit from it. So we would start off with the following error classes:</p>\n<ul>\n<li><code>ApplicationError</code><br />This is the ancestor of all other error classes i.e all other error classes inherits from it.</li>\n<li><code>DatabaseError</code><br />Any error relating to Database operations will inherit from this class.</li>\n<li><code>UserFacingError</code><br />Any error produced as a result of a user interacting with the application would be inherited from this class.</li>\n</ul>\n<p>Here is how our <code>error</code> class file would look like:</p>\n<div>\n<pre><code>'use strict';\n\n// Here is the base error classes to extend from\n\nclass ApplicationError extends Error {\n    get name() {\n        return this.constructor.name;\n    }\n}\n\nclass DatabaseError extends ApplicationError { }\n\nclass UserFacingError extends ApplicationError { }\n\nmodule.exports = {\n    ApplicationError,\n    DatabaseError,\n    UserFacingError\n}\n</code></pre>\n</div>\n\n<p>This approach enables us to distinguish the errors thrown by our application. So now if we want to handle a bad request error (invalid user input) or a not found error (resource not found) we can inherit from the base class which is <code>UserFacingError</code> (as in the code below).</p>\n<div>\n<pre><code>const { UserFacingError } = require('./baseErrors')\n\nclass BadRequestError extends UserFacingError {\n    constructor(message, options = {}) {\n        super(message);\n\n        // You can attach relevant information to the error instance\n        // (e.g.. the username)\n\n        for (const [key, value] of Object.entries(options)) {\n            this[key] = value;\n        }\n    }\n\n    get statusCode() {\n        return 400;\n    }\n}\n\n\nclass NotFoundError extends UserFacingError {\n    constructor(message, options = {}) {\n        super(message);\n\n        // You can attach relevant information to the error instance\n        // (e.g.. the username)\n\n        for (const [key, value] of Object.entries(options)) {\n            this[key] = value;\n        }\n    }\n    get statusCode() {\n        return 404\n    }\n}\n\nmodule.exports = {\n    BadRequestError,\n    NotFoundError\n}\n</code></pre>\n</div>\n\n<p>One of the benefits of the <code>error</code> class approach is that if we throw one of these errors, for example, a <code>NotFoundError</code>, every developer reading this codebase would be able to understand what is going on at this point in time(if they read the code). </p>\n<p>You would be able to pass in multiple properties specific to each error class as well during the instantiation of that error.</p>\n<p>Another key benefit is that you can have properties that are always part of an error class, for example, if you receive a UserFacing error, you would know that a statusCode is always part of this error class now you can just directly use it in the code later on.</p>\n<h3>Tips On Utilizing Error Classes</h3>\n<ul>\n<li>Make your own module(possibly a private one) for each error class that way you can simply import that in your application and use it everywhere. </li>\n<li>Throw only errors that you care about(errors that are instances of your error classes). This way you know your error classes are your only Source of Truth and it contains all information necessary to debug your application.</li>\n<li>Having an abstract error module is quite useful because now we know all necessary information concerning errors our applications can throw are in one place.</li>\n<li>Handle errors in layers. If you handle errors everywhere, you have an inconsistent approach to error handling which is hard to keep track of. By layers I mean like database, express/fastify/HTTP layers, and so on.</li>\n</ul>\n<p>Let’s see how error classes looks in code. Here is an example in express:</p>\n<div>\n<pre><code>const { DatabaseError } = require('./error')\nconst { NotFoundError } = require('./userFacingErrors')\nconst { UserFacingError } = require('./error')\n\n// Express\napp.get('/:id', async function (req, res, next) {\n    let data\n\n    try {\n        data = await database.getData(req.params.userId)\n    } catch (err) {\n        return next(err);\n    }\n\n    if (!data.length) {\n        return next(new NotFoundError('Dataset not found'));\n    }\n\n    res.status(200).json(data)\n})\n\napp.use(function (err, req, res, next) {\n    if (err instanceof UserFacingError) {\n        res.sendStatus(err.statusCode);\n\n        // or\n\n        res.status(err.statusCode).send(err.errorCode)\n    } else {\n        res.sendStatus(500)\n    }\n\n    // do your logic\n    logger.error(err, 'Parameters: ', req.params, 'User data: ', req.user)\n});\n</code></pre>\n</div>\n\n<p>From the above, we are leveraging that Express exposes a global error handler which allows you handle all your errors in one place. You can see the call to <code>next()</code> in the places we are handling errors. This call would pass the errors to the handler which is defined in the <code>app.use</code> section. Because express does not support async/await we are using <code>try/catch</code> blocks.</p>\n<p>So from the above code, to handle our errors we just need to check if the error that was thrown is a <code>UserFacingError</code> instance and automatically we know that there would be a statusCode in the error object and we send that to the user (you might want to have a specific error code as well which you can pass to the client) and that is pretty much it. </p>\n<p>You would also notice that in this pattern (<code>error</code> class pattern) every other error that you did not explicitly throw is a <code>500</code> error because it is something unexpected that means you did not explicitly throw that error in your application. This way, we are able to distinguish the types of error going on in our applications.</p>\n<h3>Conclusion</h3>\n<p>Proper error handling in your application can make you sleep better at night and save debug time. Here are some takeaway key points to take from this article:</p>\n<ul>\n<li>Use error classes specifically set up for your application;</li>\n<li>Implement abstract error handlers;</li>\n<li>Always use async/await;</li>\n<li>Make errors expressive;</li>\n<li>User promisify if necessary;</li>\n<li>Return proper error statuses and codes;</li>\n<li>Make use of promise hooks.</li>\n</ul>\n","descriptionType":"html","publishedDate":"Mon, 10 Aug 2020 10:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2dbd0b35-8a07-4450-86b5-23e2a2a35b79/error-handling-nodejs-error-classes.png","linkMd5":"95a28e879b5bf82c42d52040c5380364","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn54@2020_2/2020/09/05/07-59-16-740_10e374d50d3d94f8.webp","destWidth":1201,"destHeight":631,"sourceBytes":268335,"destBytes":51690,"author":"hello@smashingmagazine.com (Kelvin Omereshone)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2dbd0b35-8a07-4450-86b5-23e2a2a35b79/error-handling-nodejs-error-classes.png","publishedOrCreatedDate":1599292755741},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Building React Apps With Storybook","link":"https://smashingmagazine.com/2020/09/building-react-apps-storybook/","description":"<p>Storybook is a UI explorer that eases the task of testing components during development. In this article, you will learn what storybook is about and how to use it to build and test React components by building a simple application. We’ll start with a basic example that shows how to work with storybook, then we’ll go ahead to create a storybook for a Table component which will hold students’ data.</p>\n<p>Storybook is widely used in building live playgrounds and documenting component libraries, as you have the power to change props values, check loading states amongst other defined functionalities.</p>\n<p>You should have basic knowledge of React and the use of NPM before proceeding with this article, as we’ll be building a handful of React components.</p>\n<h3>Storybook Stories</h3>\n<p>A story is an exported function that renders a given visual state of a component based on the defined test cases. These stories are saved under the extension <code>.stories.js</code>. Here is an example story:</p>\n<pre><code>import React from 'react';\nimport Sample from './x';\n\nexport default {\n    title: 'Sample story',\n    component: Sample   \n}\n\nexport function Story(){\n    return (\n        &#60;Sample data=\"sample data\" /&#62;\n    )\n}</code></pre>\n\n<p>The good part about storybook is that it’s not different from how you typically write React components, as you can see from the example above. The difference here is that alongside the <strong>Story</strong> component, we are also exporting an object which holds the values of our story title and the component the story is meant for.</p>\n<h3>Starting Out</h3>\n<p>Let’s start with building the basic example mentioned above. This example will get us familiar with how to create stories and how the interface of the stories look like.\nYou’ll start by creating the React application and installing Storybook in it.</p>\n<p>From your terminal, run the command below:</p>\n<pre><code># Scaffold a new application.\nnpx create-react-app table-component\n\n# Navigate into the newly created folder.\ncd table-component\n\n# Initialise storybook.\nnpx -p @storybook/cli sb init</code></pre>\n\n<p>After that, check that the installation was successful by running the following commands:</p>\n<p>In one terminal:</p>\n<pre><code>yarn start</code></pre>\n\n<p>and in the other:</p>\n<pre><code>yarn storybook</code></pre>\n\n<p>You will be greeted by two different screens: the React application and the storybook explorer.</p>\n<p>With storybook installed in our applications, you’ll go on to remove the default stories located in <code>src/stories</code> folder.</p>\n<h4>Building A Hello world story</h4>\n<p>In this section, you’ll write your first story, not the one for the table component yet. This story is to explain the concepts of how a story works. Interestingly, you do not need to have React running to work with a story.</p>\n<p>Since React stories are isolated React functions, you have to define a component for the story first. In the <code>src</code> folder, create a <strong>components</strong> folder and a file <code>Hello.js</code> inside it, with the content below:</p>\n<pre><code>import React from 'react';\n\nexport default function Hello({name}) {\n  return (\n    &#60;p&#62;Hello {name}!, this is a simple hello world component&#60;/p&#62;\n  )\n}</code></pre>\n\n<p>This is a component that accepts a <code>name</code> prop, it renders the value of <code>name</code> alongside some texts. Next, you write the story for the component in <code>src/stories</code> folder in a file named <code>Hello.stories.js</code>:</p>\n<p>First, you import React and the Hello component:</p>\n<pre><code>import React from 'react';\nimport Hello from '../components/Hello.js';</code></pre>    \n\n<p>Next, you create a default export which is an object containing the story title and component:</p>\n<pre><code>export default {\n  title: 'Hello Story',\n  component: Hello\n}</code></pre>\n\n<p>Next, you create your first story:</p>\n<pre><code>export function HelloJoe() {\n  return (\n    &#60;Hello name=\"Jo Doe\" /&#62;\n  )\n}</code></pre>\n\n<p>In the code block above, the function <code>HelloJoe()</code>, is the name of the story, the body of the function houses the data to be rendered in the storybook. In this story, we are rendering the <code>Hello</code> component with the name \"Jo Doe\".</p>\n<p>This is similar to how you would typically render the <strong>Hello</strong> component if you wanted to make use of it in another component. You can see that we’re passing a value for the <code>name</code> prop which needs to be rendered in the <strong>Hello</strong> component.</p>\n<p>Your storybook explorer should look like this:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8198adbe-010c-4c28-a78a-0111ebe61ff0/2-building-react-apps-storybook.png\" /></p>\n<p>The <strong>Hello Joe</strong> story is listed under the story title and already rendered.  Each story has to be exported to be listed in the storybook.</p>\n<p>If you create more stories with the title as <strong>Hello Story</strong>, they will be listed under the title and clicking on each story renders differently. Let’s create another story:</p>\n<pre><code>export function TestUser() {\n    return (\n        &#60;Hello name=\"Test User\" /&#62;\n    )\n}</code></pre>\n\n<p>Your storybook explorer should contain two stories:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f230f5a9-b69a-4c44-a237-5157ebe0f7db/8-building-react-apps-storybook.png\" /></p>\n<p>Some components render data conditionally based on the props value passed to them. You will create a component that renders data conditionally and test the conditional rendering in storybook:</p>\n<p>In the <code>Hello</code> component file, create a new component:</p>\n<pre><code>function IsLoading({condition}) {\n    if (condition) {\n        return (\n            &#60;p&#62; Currently Loading &#60;/p&#62;\n        )\n    return (\n        &#60;p&#62; Here’s your content &#60;/p&#62;\n    )\n}</code></pre>\n\n<p>To test the behaviour of your new component, you will have to create a new story for it. In the previous story file, <code>Hello.stories.js</code>, create a new story:</p>\n<pre><code>import Hello, { IsLoading } from '../components/Hello';\n\nexport function NotLoading() {\n    return (\n        &#60;IsLoading loading={false}/&#62;\n    )\n}\n\nexport function Loading() {\n    return (\n        &#60;IsLoading loading={true} /&#62;\n    )\n}</code></pre>\n\n<p>The first story render differs from the second story render as expected. Your storybook explorer should look like this:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33a190f4-23db-4dd1-98e0-756937bc99a6/5-building-react-apps-storybook.png\" /></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d2955e1-0e0a-45bb-9ab9-b779c4232505/4-building-react-apps-storybook.png\" /></p>\n<p>You have learnt the basics of creating stories and using them. In the next section, you will build, style and test the main component for this article.</p>\n<h3>Building A Table Component</h3>\n<p>In this section, you will build a table component, after which you will write a story to test it. </p>\n<p>The table component example will serve as a medium for displaying students data. The table component will have two headings; names and courses.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/233ab34b-cb53-4727-8042-3a8887b8891f/7-building-react-apps-storybook.png\" /></p>\n<p>First, create a new file <code>Table.js</code> to house the component in the <code>src/component</code> folder. Define the table component inside the newly created file:</p>\n<pre><code>import React from 'react';\n\nfunction Table({data}) {\n    return ()\n}\n\n\nexport default Table\n</code></pre>\n\n<p>The <code>Table</code> component takes a prop value <code>data</code>. This prop value is an array of objects containing the data of students in a particular class to be rendered. Let’s write the table body:</p>\n<p>In the return parentheses, write the following piece of code:</p>\n<pre><code>&#60;table&#62;\n    &#60;thead&#62;\n        &#60;tr&#62;\n            &#60;th&#62;Name&#60;/th&#62;   \n            &#60;th&#62;Registered Course&#60;/th&#62;\n        &#60;/tr&#62;\n    &#60;/thead&#62;            \n    &#60;tbody&#62;\n    {data}\n    &#60;/tbody&#62;\n&#60;/table&#62;</code></pre>\n\n<p>The code above creates a table with two headings, <strong>Name</strong> and <strong>Registered Course</strong>. In the table body, the students' data is rendered. Since objects aren’t valid children in react, you will have to create a helper component to render individual data. </p>\n<p>Just after the <code>Table</code> component, define the helper component. Let’s call it <code>RenderTableData</code>:</p>\n<pre><code>function RenderTableData({data}){\n    return (\n        &#60;&#62;\n            {data.map(student =&#62; (\n                &#60;tr&#62;\n                    &#60;td&#62;{student.name}&#60;/td&#62;\n                    &#60;td&#62;{student.course}&#60;/td&#62;\n                &#60;/tr&#62;\n            ))}\n        &#60;/&#62;\n    )\n}</code></pre>\n\n<p>In the <code>RenderTableData</code> component above, the data prop which will be an array of objects will be mapped out and rendered individually as a table data. With the helper component written, update the <code>Table</code> component body from:</p>\n<pre><code>{data}</code></pre>\n\n<p>to</p>\n<pre><code>{data \n? \n    &#60;RenderTableData data={data} /&#62;\n:\n    &#60;tr&#62;\n        &#60;td&#62;No student data available&#60;/td&#62;\n        &#60;td&#62;No student data available&#60;/td&#62;\n    &#60;/tr&#62;\n}</code></pre>\n\n<p>The new block of code renders the student data with the help of the helper component if there’s any data present, otherwise, return <strong>\"No student data available\"</strong>.</p>\n<p>Before moving on to write a story to test the component, let’s style the table component. Create a stylesheet file, <code>style.css</code>, in the <code>components</code> folder:</p>\n<pre><code>body{\n    font-weight: bold;\n}\ntable {\n    border-collapse: collapse;\n    width: 100%;\n}\ntable, th, td {\n    border: 1px solid rgb(0, 0, 0);\n    text-align: left;\n}\ntr:nth-child(even){\n    background-color: rgb(151, 162, 211);\n    color: black;\n}\nth {\n    background-color: rgba(158, 191, 235, 0.925);\n    color: white;\n}\nth, td {\n    padding: 15px;\n}</code></pre>\n\n<p>With the styling done, import the stylesheet in the component file:</p>\n<pre><code>import './style.css'\n</code></pre>\n\n<p>Next, let’s create two stories to test the behavior of the table component. The first story will have data passed to be rendered and the second won’t.</p>\n<p>You can also style the story differently.</p>\n<p>In your <code>stories</code> folder, create a new file <code>Table.stories.js</code>. Begin by importing react, the table component and defining the story:</p>\n<pre><code>import React from 'react';\nimport Table from '../components/Table';\n\nexport default {\n    title: 'Table component',\n    component: Table\n}</code></pre>\n\n<p>With the story defined, create dummy data for the first story:</p>\n<div>\n<pre><code>const data = [\n    {name: 'Abdulazeez Abdulazeez', course: 'Water Resources and Environmental Engineering'},\n    {name: 'Albert Einstein', course: 'Physics'},\n    {name: 'John Doe', course: 'Estate Managment'},\n    {name: 'Sigismund Freud', course: 'Neurology'},\n    {name: 'Leonhard Euler', course: 'Mathematics'},\n    {name: 'Ben Carson', course: 'Neurosurgery'}\n]</code></pre>\n</div>\n\n<p>Next, you’ll write the first story named <code>ShowStudentsData</code>:</p>\n<pre><code>export function ShowStudentsData() {\n    return (\n        &#60;Table data={data} /&#62;\n    )\n}</code></pre>\n\n<p>Next, head to the storybook explorer tab to check the story. Your explorer should look like this:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/061e6628-01a0-4bd9-b188-e09a54b0648b/6-building-react-apps-storybook.png\" /></p>\n<p>You have tested the component with data and it renders perfectly. The next story will be to check the behaviour if there’s no data passed.</p>\n<p>Just after the first story, write the second story, <code>EmptyData</code>:</p>\n<pre><code>\nexport function EmptyData(){\n    return (\n        &#60;Table /&#62;\n    )\n}</code></pre>\n\n\n<p>The story above is expected to render \"No data available\". Head to the storybook explorer to confirm that it renders the accurate message. Your storybook explorer should look like this:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/40de6f18-c871-4e8d-98af-560e00d3c331/1-building-react-apps-storybook.png\" /></p>\n<p>In this section, you have written a table component and a story to test the behaviour. In the next section, you’ll be looking at how to edit data in real time in the storybook explorer using the <strong>knobs</strong> addon.</p>\n<h3>Addons</h3>\n<p><a href=\"https://storybook.js.org/addons\">Addons</a> in storybook are extra features that are implemented optionally by the user. These extra features are things that might be necessary for your stories. Storybook provides some core addons but, you can install and even build addons to fit your use case such as <a href=\"https://storybook.js.org/docs/react/writing-stories/decorators\">decorator addons</a>.</p>\n<blockquote>“A decorator is a way to wrap a story in extra ‘rendering’ functionality. Many addons define decorators in order to augment your stories with extra rendering or gather details about how your story is rendered.”<br /><br />— <a href=\"https://storybook.js.org/docs/react/writing-stories/decorators\">Storybook docs</a></blockquote>\n\n<h3>Adding Knobs Addon To Our Table Story</h3>\n<p>The knobs addon is a decorator addon and one of the most used in Storybook. It enables you to change the values (or props) of components without modifying the story function or the component itself.</p>\n<p>In this section, you will be adding the <strong>knobs</strong> addon to our application. The knobs addon eases the stress of having to update the data in your stories manually by setting up a new panel in the storybook explorer where you can easily change the data passed. Without knobs, you’ll have to go back to manually modifying your data.</p>\n<p>Doing this would be inefficient and it will defeat the purpose of storybook — especially in cases where those who have access to the stories do not have access to modify the data in the code.</p>\n<p>The <strong>knobs</strong> addon doesn’t come installed with storybook, so you will have to install it as an independent package:</p>\n<pre><code>yarn add -D @storybook/addon-knobs</code></pre>\n\n<p>The installation of the addon knobs require that the storybook instance be restarted to be effective. Therefore, stop the current instance of storybook and restart.</p>\n<p>Once the addon has been installed, register it under the <code>addons</code> array in your stories configuration located in <code>.storybook/main.js</code>.</p>\n<pre><code>module.exports = {\n    stories: ['../src/**/*.stories.js'],\n    addons: [\n        '@storybook/preset-create-react-app',\n        '@storybook/addon-actions',\n        '@storybook/addon-links',\n        '@storybook/addon-knobs' // Add the knobs addon.\n    ],\n};</code></pre>\n\n<p>With the addon registered, you can now go-ahead to implement the knobs addon in your table story. The student data is of type object, as a result, you will be using the <code>object</code> type from the <code>knobs</code> addon.</p>\n<p>Import the decorator and the object functions after the previous imports:</p>\n<pre><code>import { withKnobs, object } from '@storybook/addon-knobs';</code></pre>\n\n<p>Just after the component field in the default export, add another field:</p>\n<pre><code>decorators: [withKnobs]</code></pre>\n\n<p>That is, your story definition object should look like this:</p>\n<pre><code>export default {\n    title: 'Table component',\n    component: Table,\n    decorators: [withKnobs]\n}</code></pre>\n\n<p>The next step is to modify our Table component in the <code>ShowStudentsData</code> story to allow the use of the <code>object</code> knob:</p>\n<p>before:</p>\n<pre><code>&#60;Table data={data}/&#62;</code></pre>\n\n<p>after:</p>\n<pre><code>&#60;Table data={object('data', data)}/&#62;</code></pre>\n\n<p>The first parameter in the <code>object</code> function is the name to be displayed in the <strong>knobs</strong> bar. It can be anything, in this case, you’ll call it data.</p>\n<p>In your storybook explorer, the knobs bar is now visible:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1a29cb6e-6644-4917-b7d0-aaed0be4b2e0/3-building-react-apps-storybook.png\" /></p>\n<p>You can now add new data, edit existing ones and delete the data without changing the values in the story file directly.</p>\n<h3>Conclusion</h3>\n<p>In this article, you learned what storybook is all about and built a table component to complement the explanations. Now, you should be able to write and test components on the go using storybook.</p>\n<p>Also, the code used in this article can be found in <a href=\"https://github.com/smashingmagazine/storybook-react-example\">this GitHub repository</a>.</p>\n<h4>External Links</h4>\n<ul>\n<li>“<a href=\"https://www.learnstorybook.com/\">Learn Storybook</a>,” official website</li>\n<li>“<a href=\"https://storybook.js.org/\">Storybook</a>,” official website</li>\n<li>“<a href=\"https://storybook.js.org/docs/react/get-started/introduction\">Introduction to Storybook for React</a>,” Storybook v6.0</li>\n<li>“<a href=\"https://storybook.js.org/addons\">Supercharge Storybook</a>,” Storybook v6.0</li>\n<li>“<a href=\"https://storybook.js.org/docs/react/writing-stories/decorators\">Decorators</a>,” Storybook v6.0</li>\n</ul>\n","descriptionType":"html","publishedDate":"Tue, 01 Sep 2020 13:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a14ce96-af2d-466e-bf48-c199273ccdaa/building-react-apps-storybook.png","linkMd5":"a4dec1fe83c49a7924bf09761305d38c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn22@2020_4/2020/09/05/07-59-17-403_9d980bdd409e415b.webp","destWidth":1201,"destHeight":631,"sourceBytes":282353,"destBytes":55394,"author":"hello@smashingmagazine.com (Abdulazeez Adeshina)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a14ce96-af2d-466e-bf48-c199273ccdaa/building-react-apps-storybook.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8198adbe-010c-4c28-a78a-0111ebe61ff0/2-building-react-apps-storybook.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn52@2020_4/2020/09/05/07-59-31-528_7e5fa3e1634a0a9f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f230f5a9-b69a-4c44-a237-5157ebe0f7db/8-building-react-apps-storybook.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33a190f4-23db-4dd1-98e0-756937bc99a6/5-building-react-apps-storybook.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn57@2020_3/2020/09/05/07-59-39-875_df9f0f89c133024f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d2955e1-0e0a-45bb-9ab9-b779c4232505/4-building-react-apps-storybook.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn54@2020_2/2020/09/05/07-59-19-449_02a912fbfca9f3c8.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/233ab34b-cb53-4727-8042-3a8887b8891f/7-building-react-apps-storybook.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn63@2020_6/2020/09/05/07-59-18-305_50d2f4ba662b422f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/061e6628-01a0-4bd9-b188-e09a54b0648b/6-building-react-apps-storybook.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn82@2020_1/2020/09/05/07-59-36-213_d18ba96d01b83587.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/40de6f18-c871-4e8d-98af-560e00d3c331/1-building-react-apps-storybook.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn16@2020_1/2020/09/05/07-59-21-486_812f2e90227ed647.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1a29cb6e-6644-4917-b7d0-aaed0be4b2e0/3-building-react-apps-storybook.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn69@2020_4/2020/09/05/07-59-24-286_381f841a50c1521a.webp"},"publishedOrCreatedDate":1599292755726},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"How To Create Customer-Centric Landing Pages","link":"https://smashingmagazine.com/2020/08/tips-customer-centric-landing-pages/","description":"<p>Establishing whether there’s a market for a specific product takes a lot of time and effort. Through years of exposure to the nuances of a particular industry, experienced entrepreneurs develop a keen sense for noticing “gaps in the market,” be it for entirely new services or ways to improve on existing products.</p>\n<p>Vision typically precedes plenty of legwork. Before securing financing — or pouring their own savings into developing a new product — smart businesses apply serious diligence into establishing product-market fit. They build a value proposition that resonates with their prospective customers. They find out how their competitors managed to build a customer base. They may even go so far as building prototypes and conducting focus groups to get some real data on product feasibility.</p>\n<p>Essentially, companies understand the importance of knowing whether their new product has a good chance of being successful before going on the market. The relationship between customer needs and product offering is simply too obvious to ignore.</p>\n<p>This begs the question:</p>\n<blockquote>“Why are customer needs overlooked in so many other aspects of running a successful business?”</blockquote>\n\n<p>Sure, some of an organization’s moving parts don’t relate directly to the product itself. Nor the customer, for that matter. One could argue that a company’s website doesn’t exist to directly serve the customer. It’s there to provide and obtain information that would contribute to an increase in awareness and revenue.</p>\n<p>Why should we consider a customer’s needs when designing a website or landing pages? Does a customer even have needs in this context?</p>\n<p>You bet they do! </p>\n<p>And as the world of web design matures, the focus has started shifting to understanding what these needs are when it comes to designing the content that drives a sale.</p>\n<p>Gone are self-indulgent product stories. Gone are irrelevant, questionable claims. Gone are interfaces that take more than <a href=\"https://www.marketingdive.com/news/google-53-of-mobile-users-abandon-sites-that-take-over-3-seconds-to-load/426070/#:~:text=New%20research%20by%20Google%20has,seconds%20on%20a%204G%20connection.\">three seconds to load</a>. The era of customer-centric landing pages has dawned. And if your job involves being concerned with metrics like conversion, engagement, and bounce-rates, this is a post that you may want to sit straight up for.</p>\n<h3>Maintaining Consistency With Ad Copy And Landing Page Content</h3>\n<p>The needs that landing pages serve aren’t the same as the needs our products serve.</p>\n<p>When thinking about creating any kind of customer-centric marketing material, we need to think about their needs outside of the context of the pain points our services will offer.</p>\n<p>What we’re talking about here are meta-needs. Those that make their interaction with our landing pages engaging and convenient to the extent that it puts them in a mental and emotional state that’s more receptive to being sold something.</p>\n<p>How do we do this? How do we subtly illustrate consideration for our landing page visitors’ needs?</p>\n<p>A great way to start is to <a href=\"https://www.digitalmarketer.com/blog/ad-scent/#:~:text=Ad%20scent%20is%20the%20consistency,from%20ad%20to%20landing%20page.\">create consistency</a> between the core message of the advert and the landing page content. If your ad guys are doing their jobs properly, an advert linked to a specific keyword search will hook a potential customer with content that is relevant to their search.</p>\n<p>If this results in a click-through, your potential customer has already given you some pretty vital information: your ad copy speaks to their pain point. They believe the promise that your ad copy is making. They’re willing to start a journey with you.</p>\n<p>This concept is called “Ad Scent,” and if you are not leveraging this information on your landing page, you’re shooting yourself in the foot. </p>\n<p>MarketingSherpa reports that <a href=\"https://ifactory.com.au/insights/why-should-i-use-landing-pages/\">just under 50% of digital marketers</a> understand the importance of a thread between ad copy and landing page, and create a landing page unique to each ad campaign.</p>\n<p>Sure, the overhead sounds like a headache, but it’s not rocket science. If you promise something in your ad copy, expand on that promise on your landing page. And not by simply repeating the ad copy using different terms. You’ve already conveyed a core message that speaks to a visitor’s needs. They get it. You sell something they want.</p>\n<p>Now is the time to provide them with information and prompts that link their needs to the action you want them to take.</p>\n<p>A great example of this is online retailer <a href=\"https://www.banggood.com/\">BangGood</a>. After Googling “Cheap retro reading glasses,” you’re shown a sponsored ad reading: “Buy Cheap reading glasses retro round” and “$100 All Categories Coupon For New Users, Coupon Deals &#38; Unbeatable Deals Every Day.”</p>\n<p>Clicking through to this page takes you directly to a product catalog that’s been filtered by our search term. There’s no need to click through multiple categories and subcategories to find the style you want. Plus, highly visible “discount” labels clearly show you how much you’d be saving on each of the products if you make a purchase right away.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/949a3af1-96b6-487b-991f-dae1fbcf8615/banggod-screenshot-tips-create-customer-centric-landing-pages.png\" /></p>\n<p>This brings us to another interesting concept behind creating engaging landing pages that optimize conversion: urgency. </p>\n<h3>Leveraging Urgency</h3>\n<p>Unlike shoppers going through the effort of strolling through a busy street looking for a deal, online shoppers have the option to view other retailers’ discounted wares within seconds of each other.</p>\n<p>Few things grab the attention of a semi-motivated customer better than a highly visible countdown timer showing how much time a visitor has to take advantage of a particular “hot deal.” There’s <a href=\"https://www.smartinsights.com/digital-marketing-strategy/psychology-urgency-9-ways-drive-conversions/#:~:text=Adding%20elements%20into%20the%20customer,may%20not%20have%20otherwise%20happened.\">real psychology</a> behind this notion.</p>\n<p>Zoma does this exceptionally well on their <a href=\"https://zomasleep.com/sale\">sales page</a>. A clearly visible, but critically, non-intrusive visual element makes visitors aware of the fact that they have (gasp!) a short period of time left to capitalize on a massive discount.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d848c21a-6f17-4d8a-a725-2d68e353417c/zoma-countdown-screenshot-tips-create-customer-centric-landing-pages.png\" /></p>\n<p>Sure, shoppers may choose to click around for another hour to find a better deal, but there’s no way this offer is NOT sticking in the backs of their heads. </p>\n<p>This is customer-centric design at its best. What’s one thing that will hurry along any customer in their decision making? The feeling that they are one of the few people lucky enough to take advantage of a terrific deal.</p>\n<h3>Providing Social Proof</h3>\n<p>Another great thing Zoma does on this landing page is giving visitors something they don’t always know they want: proof that other shoppers were extremely satisfied with the given product.</p>\n<p>By now, <a href=\"https://www.convinceandconvert.com/word-of-mouth/social-proof/#:~:text=Social%20proof%20is%20the%20result,decisions%20other%20people%20have%20made.\">the importance of social proof</a> is ingrained in the thought processes of every marketer worth their salt, but what many fail to realize is the importance of its visibility and credibility on the landing page.</p>\n<p>In Zoma's example, if you go to their sports mattress page a 4.7 star-rating is clearly visible along with a very attractive sample size. Seeing almost 300 reviews is certainly reassuring for a potential customer. </p>\n<p>Zoma goes the extra mile by making the review element clickable — an action that, critically, doesn’t take the user away from the landing page, but rather to an anchor on the page.</p>\n<p>What are they shown in this space? Simple copy that asks and answers the exact question they were having:</p>\n<blockquote>“See why active people love Zoma.”</blockquote>\n\n<p>And directly below this is a beautifully laid-out, uncluttered list of credible reviews by happy customers, all displayed above a floating CTA that prompts the visitor to add the product to their cart.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f286674-df7d-4b50-b51f-1d779df584f8/zoma-reviews-screenshot-tips-create-customer-centric-landing-pages.png\" /></p>\n<p>How many customer needs are being addressed in the space of one click? Let’s see: </p>\n<ul>\n<li>The need to have their consideration validated by their peers;</li>\n<li>Reassurance that the reviews are legit;</li>\n<li>The convenience of instantly taking action without needing to scroll back to a “purchase” area.</li>\n</ul>\n<p>None of these needs speak directly of the product itself, but rather leverage customer needs that are intrinsic to their online shopping experience.</p>\n<h3>Addressing Pain Points</h3>\n<p>Another aspect of customer-centric design in landing pages involves giving visitors the product information they <em>need</em> rather than the information the company feels is relevant.</p>\n<p>This concept speaks to the customer’s desire to instantly understand the value that a product will bring to their lives rather than a convoluted wall of text describing the company’s history, corporate values, and integrity of its staff.</p>\n<p>Customers who have followed a link to a landing page want to know what’s in it for them. And they want to know this within seconds of reading the copy.</p>\n<p>Marketers need to anticipate the pain points a customer wants addressed. This information should always be readily available, if they’ve done their customer profiling correctly and have a great understanding of their value proposition.</p>\n<p>But the kicker is that conveying this value — illustrating clearly how the product will fulfill the customer’s needs — needs to be done in an engaging and easily understandable way. </p>\n<h3>Engaging Potential Customers</h3>\n<p>In this context, what does “engaging” mean? While there aren’t any paint-by-numbers answers to this question, there are some general guidelines.</p>\n<p>Keep the visual clutter to a minimum. Show only imagery and text that relate directly to the reasons a person may be interested in the product. At first glance, do they care about the years you spent developing the service with the help of industry experts? Do they care about your company’s strategic roadmap?</p>\n<p>Nope. They care about one thing:</p>\n<blockquote>“How is spending their money on your product going to solve a problem they have?”</blockquote>\n\n<p>A terrific example of this super-simplified, though highly engaging approach to communicating true customer value can be seen on the landing page for <a href=\"https://drinklmnt.com/\">Elemental Labs</a>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/522354cd-0944-4f35-8168-8518e6529635/lmnt-screenshot-tips-create-customer-centric-landing-pages.png\" /></p>\n<p>Aside from navigation and other peripheral content elements, just over twenty words are visible to the visitor. And in those two sentences, what is communicated to the visitor? How many of their pain points are addressed? How many reasons are they given to be drawn to the CTA?</p>\n<p>What the product is and the value it represents to the potential customer is spelled out within seconds of the user landing on this page. Customer-centricity is at the forefront of every aspect of this page’s design.</p>\n<p>Using simple, high-quality product visuals aligned with graphic design principles that <a href=\"https://designrfix.com/design/top-tips-graphic-design-engage-customers\">promote maximum engagement</a> is another way to capitalize on customers-centricity.</p>\n<p>This is something that LMNT also does exceptionally well, showing simple, tasteful visuals that show the product in its packaging as well as in use. </p>\n<p>This tells an extremely simple visual story that can’t help but connect the customer to a mental impression of actually using the product. There’s no need for a complex sequence of images showing how the sachet is opened, poured, mixed, and then drank. </p>\n<h3>Wrapping It All Up</h3>\n<p>Customer-centricity is something that can and should be applied to almost every decision that a business makes. The temptation is always there to only think about customer needs as they interact with the product or service itself, but smart marketers and entrepreneurs understand that customer needs extend beyond their use of the product.</p>\n<p>Customers require their time to be respected. They need businesses to understand that their attention span is limited.</p>\n<p>They need marketers to grasp that product value isn’t something abstract. It’s something that must be communicated intelligently, without the informational and visual clutter that so often drags attention away from what’s really important:</p>\n<blockquote>“In what ways can the product or service make customer lives easier?”</blockquote>\n\n<p>If this question is one of the first that every marketing professional asks themselves ahead of a campaign, they’re starting out on the right path.</p>\n","descriptionType":"html","publishedDate":"Tue, 25 Aug 2020 10:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/08641efe-0b90-498b-8ea1-d3e5a4474524/customer-centric-landing-pages.png","linkMd5":"0ae5a604742fc5fdb0e1c7bcacfa3b97","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn25@2020_2/2020/09/05/07-59-16-281_a05f26c9d5aa7045.webp","destWidth":1201,"destHeight":631,"sourceBytes":286283,"destBytes":58586,"author":"hello@smashingmagazine.com (Travis Jamison)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/08641efe-0b90-498b-8ea1-d3e5a4474524/customer-centric-landing-pages.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/949a3af1-96b6-487b-991f-dae1fbcf8615/banggod-screenshot-tips-create-customer-centric-landing-pages.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d848c21a-6f17-4d8a-a725-2d68e353417c/zoma-countdown-screenshot-tips-create-customer-centric-landing-pages.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn15@2020_2/2020/09/05/07-59-23-985_d285e32de786eda4.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f286674-df7d-4b50-b51f-1d779df584f8/zoma-reviews-screenshot-tips-create-customer-centric-landing-pages.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn37@2020_3/2020/09/05/07-59-26-840_72e52d8cd90129cf.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/522354cd-0944-4f35-8168-8518e6529635/lmnt-screenshot-tips-create-customer-centric-landing-pages.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn80@2020_1/2020/09/05/07-59-32-266_1e88327942211d0d.webp"},"publishedOrCreatedDate":1599292755733},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Setting Up Redux For Use In A Real-World Application","link":"https://smashingmagazine.com/2020/08/redux-real-world-application/","description":"<p>Redux is an important library in the React ecosystem, and almost the default to use when working on React applications that involve state management. As such, the importance of knowing how it works cannot be overestimated.</p> \n<p>This guide will walk the reader through setting up Redux in a fairly complex React application and introduce the reader to “best practices” configuration along the way. It will be beneficial to beginners especially, and anyone who wants to fill in the gaps in their knowledge of Redux.</p> \n<h3>Introducing Redux</h3> \n<p>Redux is a library that aims to solve the problem of state management in JavaScript apps by imposing restrictions on how and when state updates can happen. These restrictions are formed from Redux’s “three principles” which are:</p> \n<ul> \n <li><p><strong>Single source of truth</strong><br />All of your application’s <code>state</code> is held in a Redux <code>store</code>. This state can be represented visually as a tree with a single ancestor, and the store provides methods for reading the current state and subscribing to changes from anywhere within your app.</p> </li> \n <li><p><strong>State is read-only</strong><br />The only way to change the state is to send the data as a plain object, called an action. You can think about actions as a way of saying to the state, \"I have some data I would like to insert/update/delete\".</p> </li> \n <li><p><strong>Changes are made with pure functions</strong><br />To change your app’s state, you write a function that takes the previous state and an action and returns a new state object as the next state. This function is called a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\"><code>reducer</code></a>, and it is a pure function because it returns the same output for a given set of inputs.</p> </li> \n</ul> \n<p>The last principle is the most important in Redux, and this is where the magic of Redux happens. Reducer functions must not contain unpredictable code, or perform side-effects such as network requests, and should not directly mutate the state object.</p> \n<p>Redux is a great tool, as we’ll learn later in this guide, but it doesn’t come without its challenges or tradeoffs. To help make the process of writing Redux efficient and more enjoyable, the Redux team offers a toolkit that abstracts over the process of setting up a Redux store and provides helpful Redux add-ons and utilities that help to simplify application code. For example, the library uses <a href=\"https://immerjs.github.io/immer/\">Immer.js</a>, a library that makes it possible for you to write “mutative” immutable update logic, under the hood.</p> \n<p><strong>Recommended reading</strong>: <em><a href=\"https://www.smashingmagazine.com/2020/06/better-reducers-with-immer/\">Better Reducers With Immer</a></em></p> \n<p>In this guide, we will explore Redux by building an application that lets authenticated users create and manage digital diaries.</p> \n<h3>Building Diaries.app</h3> \n<p>As stated in the previous section, we will be taking a closer look at Redux by building an app that lets users create and manage diaries. We will be building our application using React, and we’ll set up Mirage as our API mocking server since we won’t have access to a real server in this guide.</p> \n<ul> \n <li><a href=\"https://github.com/jerrynavi/diaries-app\">See source code</a> (GitHub repo)</li> \n</ul> \n<h4>Starting a Project and Installing Dependencies</h4> \n<p>Let’s get started on our project. First, bootstrap a new React application using <code>create-react-app</code>:</p> \n<p>Using npx:</p> \n<pre><code>npx create-react-app diaries-app --template typescript\n</code></pre> \n<p>We are starting with the TypeScript template, as we can improve our development experience by writing type-safe code.</p> \n<p>Now, let’s install the dependencies we’ll be needing. Navigate into your newly created project directory</p> \n<pre><code>cd diaries-app\n</code></pre> \n<p>And run the following commands:</p> \n<pre><code>npm install --save redux react-redux @reduxjs/toolkit\n</code></pre> \n<div> \n <pre><code>npm install --save axios react-router-dom react-hook-form yup dayjs markdown-to-jsx sweetalert2\n</code></pre> \n</div> \n<div> \n <pre><code>npm install --save-dev miragejs @types/react-redux @types/react-router-dom @types/yup @types/markdown-to-jsx\n</code></pre> \n</div> \n<p>The first command will install Redux, React-Redux (official React bindings for Redux), and the Redux toolkit.</p> \n<p>The second command installs some extra packages which will be useful for the app we’ll be building but are not required to work with Redux.</p> \n<p>The last command installs Mirage and type declarations for the packages we installed as devDependencies.</p> \n<h4>Describing the Application’s Initial State</h4> \n<p>Let’s go over our application’s requirements in detail. The application will allow authenticated users to create or modify existing diaries. Diaries are private by default, but they can be made public. Finally, diary entries will be sorted by their last modified date.</p> \n<p>This relationship should look something like this:</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/01f2121c-7b89-4f45-a808-5359671e44b7/fig-01-application-data-model.png\" /></p> \n<p>Armed with this information, we can now model our application’s state. First, we will create an interface for each of the following resources: <code>User</code>, <code>Diary</code> and <code>DiaryEntry</code>. Interfaces in Typescript describe the <em>shape</em> of an object.</p> \n<p>Go ahead and create a new directory named <code>interfaces</code> in your app’s <code>src</code> sub-directory:</p> \n<pre><code>cd src &amp;&amp; mkdir interfaces\n</code></pre> \n<p>Next, run the following commands in the directory you just created:</p> \n<pre><code>touch entry.interface.ts\ntouch diary.interface.ts\ntouch user.interface.ts\n</code></pre> \n<p>This will create three files named <strong>entry.interface.ts</strong>, <strong>diary.interface.ts</strong> and <strong>user.interface.ts</strong> respectively. I prefer to keep interfaces that would be used in multiple places across my app in a single location.</p> \n<p>Open <strong>entry.interface.ts</strong> and add the following code to set up the <code>Entry</code> interface:</p> \n<pre><code>export interface Entry {\n  id?: string;\n  title: string;\n  content: string;\n  createdAt?: string;\n  updatedAt?: string;\n  diaryId?: string;\n}\n</code></pre> \n<p>A typical diary entry will have a title and some content, as well as information about when it was created or last updated. We’ll get back to the <code>diaryId</code> property later.</p> \n<p>Next, add the following to <strong>diary.interface.ts</strong>:</p> \n<pre><code>export interface Diary {\n  id?: string;\n  title: string;\n  type: 'private' | 'public';\n  createdAt?: string;\n  updatedAt?: string;\n  userId?: string;\n  entryIds: string[] | null;\n}\n</code></pre> \n<p>Here, we have a <code>type</code> property which expects an exact value of either ‘private’ or ‘public’, as diaries must be either private or public. Any other value will throw an error in the TypeScript compiler.</p> \n<p>We can now describe our <code>User</code> object in the <strong>user.interface.ts</strong> file as follows:</p> \n<pre><code>export interface User {\n  id?: string;\n  username: string;\n  email: string;\n  password?: string;\n  diaryIds: string[] | null;\n}\n</code></pre> \n<p>With our type definitions finished and ready to be used across our app, let’s setup our mock API server using Mirage.</p> \n<h4>Setting up API Mocking with MirageJS</h4> \n<p>Since this tutorial is focused on Redux, we will not go into the details of setting up and using Mirage in this section. Please check out <a href=\"https://www.smashingmagazine.com/2020/04/miraje-js-models-associations/\">this excellent series</a> if you would like to learn more about Mirage.</p> \n<p>To get started, navigate to your <code>src</code> directory and create a file named <code>server.ts</code> by running the following commands:</p> \n<pre><code>mkdir -p services/mirage\ncd services/mirage\n\n# ~/diaries-app/src/services/mirage\ntouch server.ts\n</code></pre> \n<p>Next, open the <code>server.ts</code> file and add the following code:</p> \n<div> \n <pre><code>import { Server, Model, Factory, belongsTo, hasMany, Response } from 'miragejs';\n\nexport const handleErrors = (error: any, message = 'An error ocurred') =&gt; {\n  return new Response(400, undefined, {\n    data: {\n      message,\n      isError: true,\n    },\n  });\n};\n\nexport const setupServer = (env?: string): Server =&gt; {\n  return new Server({\n    environment: env ?? 'development',\n\n    models: {\n      entry: Model.extend({\n        diary: belongsTo(),\n      }),\n      diary: Model.extend({\n        entry: hasMany(),\n        user: belongsTo(),\n      }),\n      user: Model.extend({\n        diary: hasMany(),\n      }),\n    },\n\n    factories: {\n      user: Factory.extend({\n        username: 'test',\n        password: 'password',\n        email: <a href=\"mailto:'test@email.com\">'test@email.com</a>',\n      }),\n    },\n\n    seeds: (server): any =&gt; {\n      server.create('user');\n    },\n\n    routes(): void {\n      this.urlPrefix = '<a href=\"https://diaries.app'\">https://diaries.app'</a>;\n    },\n  });\n};\n</code></pre> \n</div> \n<p>In this file, we are exporting two functions. A utility function for handling errors, and <code>setupServer()</code>, which returns a new server instance. The <code>setupServer()</code> function takes an optional argument which can be used to change the server’s environment. You can use this to set up Mirage for testing later.</p> \n<p>We have also defined three models in the server’s <code>models</code> property: <code>User</code>, <code>Diary</code> and <code>Entry</code>. Remember that earlier we set up the <code>Entry</code> interface with a property named <code>diaryId</code>. This value will be automatically set to the <code>id</code> the entry is being saved to. Mirage uses this property to establish a relationship between an <code>Entry</code> and a <code>Diary</code>. The same thing also happens when a user creates a new diary: <code>userId</code> is automatically set to that user’s id.</p> \n<p>We seeded the database with a default user and configured Mirage to intercept all requests from our app starting with <code>https://diaries.app</code>. Notice that we haven’t configured any <a href=\"https://miragejs.com/docs/main-concepts/route-handlers/\">route handlers</a> yet. Let’s go ahead and create a few.</p> \n<p>Ensure that you are in the <strong>src/services/mirage</strong> directory, then create a new directory named <strong>routes</strong> using the following command:</p> \n<pre><code># ~/diaries-app/src/services/mirage\nmkdir routes\n</code></pre> \n<p><code>cd</code> to the newly created directory and create a file named <strong>user.ts</strong>:</p> \n<pre><code>cd routes\ntouch user.ts\n</code></pre> \n<p>Next, paste the following code in the <code>user.ts</code> file:</p> \n<div> \n <pre><code>import { Response, Request } from 'miragejs';\nimport { handleErrors } from '../server';\nimport { User } from '../../../interfaces/user.interface';\nimport { randomBytes } from 'crypto';\n\nconst generateToken = () =&gt; randomBytes(8).toString('hex');\n\nexport interface AuthResponse {\n  token: string;\n  user: User;\n}\n\nconst login = (schema: any, req: Request): AuthResponse | Response =&gt; {\n  const { username, password } = JSON.parse(req.requestBody);\n  const user = schema.users.findBy({ username });\n  if (!user) {\n    return handleErrors(null, 'No user with that username exists');\n  }\n  if (password !== user.password) {\n    return handleErrors(null, 'Password is incorrect');\n  }\n  const token = generateToken();\n  return {\n    user: user.attrs as User,\n    token,\n  };\n};\n\nconst signup = (schema: any, req: Request): AuthResponse | Response =&gt; {\n  const data = JSON.parse(req.requestBody);\n  const exUser = schema.users.findBy({ username: data.username });\n  if (exUser) {\n    return handleErrors(null, 'A user with that username already exists.');\n  }\n  const user = schema.users.create(data);\n  const token = generateToken();\n  return {\n    user: user.attrs as User,\n    token,\n  };\n};\n\nexport default {\n  login,\n  signup,\n};\n</code></pre> \n</div> \n<p>The <code>login</code> and <code>signup</code> methods here receive a <code>Schema</code> class and a fake <code>Request</code> object and, upon validating the password or checking that the login does not already exist, return the existing user or a new user respectively. We use the <code>Schema</code> object to interact with Mirage’s ORM, while the <code>Request</code> object contains information about the intercepted request including the request body and headers.</p> \n<p>Next, let’s add methods for working with diaries and diary entries. Create a file named <strong>diary.ts</strong> in your <strong>routes</strong> directory:</p> \n<pre><code>touch diary.ts\n</code></pre> \n<p>Update the file with the following methods for working with <code>Diary</code> resources:</p> \n<div> \n <pre><code>export const create = (\n  schema: any,\n  req: Request\n): { user: User; diary: Diary } | Response =&gt; {\n  try {\n    const { title, type, userId } = JSON.parse(req.requestBody) as Partial&lt;\n      Diary\n    &gt;;\n    const exUser = schema.users.findBy({ id: userId });\n    if (!exUser) {\n      return handleErrors(null, 'No such user exists.');\n    }\n    const now = dayjs().format();\n    const diary = exUser.createDiary({\n      title,\n      type,\n      createdAt: now,\n      updatedAt: now,\n    });\n    return {\n      user: {\n        ...exUser.attrs,\n      },\n      diary: diary.attrs,\n    };\n  } catch (error) {\n    return handleErrors(error, 'Failed to create Diary.');\n  }\n};\n\nexport const updateDiary = (schema: any, req: Request): Diary | Response =&gt; {\n  try {\n    const diary = schema.diaries.find(req.params.id);\n    const data = JSON.parse(req.requestBody) as Partial&lt;Diary&gt;;\n    const now = dayjs().format();\n    diary.update({\n      ...data,\n      updatedAt: now,\n    });\n    return diary.attrs as Diary;\n  } catch (error) {\n    return handleErrors(error, 'Failed to update Diary.');\n  }\n};\n\nexport const getDiaries = (schema: any, req: Request): Diary[] | Response =&gt; {\n  try {\n    const user = schema.users.find(req.params.id);\n    return user.diary as Diary[];\n  } catch (error) {\n    return handleErrors(error, 'Could not get user diaries.');\n  }\n};\n</code></pre> \n</div> \n<p>Next, let’s add some methods for working with diary entries:</p> \n<div> \n <pre><code>export const addEntry = (\n  schema: any,\n  req: Request\n): { diary: Diary; entry: Entry } | Response =&gt; {\n  try {\n    const diary = schema.diaries.find(req.params.id);\n    const { title, content } = JSON.parse(req.requestBody) as Partial&lt;Entry&gt;;\n    const now = dayjs().format();\n    const entry = diary.createEntry({\n      title,\n      content,\n      createdAt: now,\n      updatedAt: now,\n    });\n    diary.update({\n      ...diary.attrs,\n      updatedAt: now,\n    });\n    return {\n      diary: diary.attrs,\n      entry: entry.attrs,\n    };\n  } catch (error) {\n    return handleErrors(error, 'Failed to save entry.');\n  }\n};\n\nexport const getEntries = (\n  schema: any,\n  req: Request\n): { entries: Entry[] } | Response =&gt; {\n  try {\n    const diary = schema.diaries.find(req.params.id);\n    return diary.entry;\n  } catch (error) {\n    return handleErrors(error, 'Failed to get Diary entries.');\n  }\n};\n\nexport const updateEntry = (schema: any, req: Request): Entry | Response =&gt; {\n  try {\n    const entry = schema.entries.find(req.params.id);\n    const data = JSON.parse(req.requestBody) as Partial&lt;Entry&gt;;\n    const now = dayjs().format();\n    entry.update({\n      ...data,\n      updatedAt: now,\n    });\n    return entry.attrs as Entry;\n  } catch (error) {\n    return handleErrors(error, 'Failed to update entry.');\n  }\n};\n</code></pre> \n</div> \n<p>Finally, let’s add the necessary imports at the top of the file:</p> \n<pre><code>import { Response, Request } from 'miragejs';\nimport { handleErrors } from '../server';\nimport { Diary } from '../../../interfaces/diary.interface';\nimport { Entry } from '../../../interfaces/entry.interface';\nimport dayjs from 'dayjs';\nimport { User } from '../../../interfaces/user.interface';\n</code></pre> \n<p>In this file, we have exported methods for working with the <code>Diary</code> and <code>Entry</code> models. In the <code>create</code> method, we call a method named <code>user.createDiary()</code> to save a new diary and associate it to a user account.</p> \n<p>The <code>addEntry</code> and <code>updateEntry</code> methods create and correctly associate a new entry to a diary or update an existing entry’s data respectively. The latter also updates the entry’s <code>updatedAt</code> property with the current timestamp. The <code>updateDiary</code> method also updates a diary with the timestamp the change was made. Later, we’ll be sorting the records we receive from our network request with this property.</p> \n<p>We also have a <code>getDiaries</code> method which retrieves a user’s diaries and a <code>getEntries</code> methods which retrieves a selected diary’s entries.</p> \n<p>We can now update our server to use the methods we just created. Open <strong>server.ts</strong> to include the files:</p> \n<div> \n <pre><code>import { Server, Model, Factory, belongsTo, hasMany, Response } from 'miragejs';\n\nimport user from './routes/user';\nimport * as diary from './routes/diary';\n</code></pre> \n</div> \n<p>Then, update the server’s <code>route</code> property with the routes we want to handle:</p> \n<pre><code>export const setupServer = (env?: string): Server =&gt; {\n  return new Server({\n    // ...\n    routes(): void {\n      this.urlPrefix = 'https://diaries.app';\n\n      this.get('/diaries/entries/:id', diary.getEntries);\n      this.get('/diaries/:id', diary.getDiaries);\n\n      this.post('/auth/login', user.login);\n      this.post('/auth/signup', user.signup);\n\n      this.post('/diaries/', diary.create);\n      this.post('/diaries/entry/:id', diary.addEntry);\n\n      this.put('/diaries/entry/:id', diary.updateEntry);\n      this.put('/diaries/:id', diary.updateDiary);\n    },\n  });\n};\n</code></pre> \n<p>With this change, when a network request from our app matches one of the route handlers, Mirage intercepts the request and invokes the respective route handler functions.</p> \n<p>Next, we’ll proceed to make our application aware of the server. Open <strong>src/index.tsx</strong> and import the <code>setupServer()</code> method:</p> \n<pre><code>import { setupServer } from './services/mirage/server';\n</code></pre> \n<p>And add the following code before <code>ReactDOM.render()</code>:</p> \n<pre><code>if (process.env.NODE_ENV === 'development') {\n  setupServer();\n}\n</code></pre> \n<p>The check in the code block above ensures that our Mirage server will run only while we are in development mode.</p> \n<p>One last thing we need to do before moving on to the Redux bits is configure a custom <a href=\"https://www.npmjs.com/package/axios#creating-an-instance\">Axios instance</a> for use in our app. This will help to reduce the amount of code we’ll have to write later on.</p> \n<p>Create a file named <strong>api.ts</strong> under src/services and add the following code to it:</p> \n<div> \n <pre><code>import axios, { AxiosInstance, AxiosResponse, AxiosError } from 'axios';\nimport { showAlert } from '../util';\n\nconst http: AxiosInstance = axios.create({\n  baseURL: '<a href=\"https://diaries.app'\">https://diaries.app'</a>,\n});\n\nhttp.defaults.headers.post['Content-Type'] = 'application/json';\n\nhttp.interceptors.response.use(\n  async (response: AxiosResponse): Promise =&gt; {\n    if (response.status &gt;= 200 &amp;&amp; response.status &lt; 300) {\n      return response.data;\n    }\n  },\n  (error: AxiosError) =&gt; {\n    const { response, request }: {\n      response?: AxiosResponse;\n      request?: XMLHttpRequest;\n    } = error;\n    if (response) {\n      if (response.status &gt;= 400 &amp;&amp; response.status &lt; 500) {\n        showAlert(response.data?.data?.message, 'error');\n        return null;\n      }\n    } else if (request) {\n      showAlert('Request failed. Please try again.', 'error');\n      return null;\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default http;\n</code></pre> \n</div> \n<p>In this file, we are exporting an Axios instance modified to include our app’s API url, <a href=\"https://diaries.app\">https://diaries.app</a>. We have configured an interceptor to handle success and error responses, and we display error messages using a <code>sweetalert</code> toast which we will configure in the next step.</p> \n<p>Create a file named <code>util.ts</code> in your src directory and paste the following code in it:</p> \n<div> \n <pre><code>import Swal, { SweetAlertIcon } from 'sweetalert2';\n\nexport const showAlert = (titleText = 'Something happened.', alertType?: SweetAlertIcon): void =&gt; {\n  Swal.fire({\n    titleText,\n    position: 'top-end',\n    timer: 3000,\n    timerProgressBar: true,\n    toast: true,\n    showConfirmButton: false,\n    showCancelButton: true,\n    cancelButtonText: 'Dismiss',\n    icon: alertType,\n    showClass: {\n      popup: 'swal2-noanimation',\n      backdrop: 'swal2-noanimation',\n    },\n    hideClass: {\n      popup: '',\n      backdrop: '',\n    },\n  });\n};\n</code></pre> \n</div> \n<p>This file exports a function that displays a toast whenever it is invoked. The function accepts parameters to allow you set the toast message and type. For example, we are showing an error toast in the Axios response error interceptor like this:</p> \n<pre><code>showAlert(response.data?.data?.message, 'error');\n</code></pre> \n<p>Now when we make requests from our app while in development mode, they will be intercepted and handled by Mirage instead. In the next section, we will set up our Redux store using Redux toolkit.</p> \n<h4>Setting up a Redux Store</h4> \n<p>In this section, we are going to set up our store using the following exports from Redux toolkit: <code>configureStore()</code>, <code>getDefaultMiddleware()</code> and <code>createSlice()</code>. Before we start, we should take a detailed look at what these exports do.</p> \n<p><code>configureStore()</code> is an abstraction over the Redux <code>createStore()</code> function that helps simplify your code. It uses <code>createStore()</code> internally to set up your store with some useful development tools:</p> \n<div> \n <pre><code>export const store = configureStore({\n  reducer: rootReducer, // a single reducer function or an object of slice reducers\n});\n</code></pre> \n</div> \n<p>The <code>createSlice()</code> function helps simplify the process of creating action creators and slice reducers. It accepts an initial state, an object full of reducer functions, and a \"slice name\", and automatically generates action creators and action types corresponding to the reducers and your state. It also returns a single reducer function, which can be passed to Redux’s <code>combineReducers()</code> function as a “slice reducer”.</p> \n<p>Remember that the state is a single tree, and a single root reducer manages changes to that tree. For maintainability, it is recommended to split your root reducer into “slices,” and have a \"slice reducer\" provide an initial value and calculate the updates to a corresponding slice of the state. These slices can be joined into a single reducer function by using <code>combineReducers()</code>.</p> \n<p>There are additional options for <a href=\"https://redux-toolkit.js.org/api/configureStore#parameters\">configuring the store</a>. For example, you can pass an array of your own middleware to <code>configureStore()</code> or start up your app from a saved state using the <code>preloadedState</code> option. When you supply the <code>middleware</code> option, you have to define <em>all</em> the middleware you want added to the store. If you would like to retain the defaults when setting up your store, you can use <code>getDefaultMiddleware()</code> to get the default list of middleware:</p> \n<pre><code>export const store = configureStore({\n  // ...\n  middleware: [...getDefaultMiddleware(), customMiddleware],\n});\n</code></pre> \n<p>Let’s now proceed to set up our store. We will adopt a <a href=\"https://github.com/erikras/ducks-modular-redux\">“ducks-style”</a> approach to structuring our files, specifically following the guidelines in practice from the <a href=\"https://github.com/reduxjs/rtk-github-issues-example\">Github Issues</a> sample app. We will be organizing our code such that related components, as well as actions and reducers, live in the same directory. The final state object will look like this:</p> \n<pre><code>type RootState = {\n  auth: {\n    token: string | null;\n    isAuthenticated: boolean;\n  };\n  diaries: Diary[];\n  entries: Entry[];\n  user: User | null;\n  editor: {\n    canEdit: boolean;\n    currentlyEditing: Entry | null;\n    activeDiaryId: string | null;\n  };\n}\n</code></pre> \n<p>To get started, create a new directory named <strong>features</strong> under your <strong>src</strong> directory:</p> \n<pre><code># ~/diaries-app/src\nmkdir features\n</code></pre> \n<p>Then, <code>cd</code> into features and create directories named <strong>auth</strong>, <strong>diary</strong> and <strong>entry</strong>:</p> \n<pre><code>cd features\nmkdir auth diary entry\n</code></pre> \n<p><code>cd</code> into the auth directory and create a file named <strong>authSlice.ts</strong>:</p> \n<pre><code>cd auth\n# ~/diaries-app/src/features/auth\ntouch authSlice.ts\n</code></pre> \n<p>Open the file and paste the following in it:</p> \n<div> \n <pre><code>import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface AuthState {\n  token: string | null;\n  isAuthenticated: boolean;\n}\n\nconst initialState: AuthState = {\n  token: null,\n  isAuthenticated: false,\n};\n\nconst auth = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    saveToken(state, { payload }: PayloadAction) {\n      if (payload) {\n        state.token = payload;\n      }\n    },\n    clearToken(state) {\n      state.token = null;\n    },\n    setAuthState(state, { payload }: PayloadAction) {\n      state.isAuthenticated = payload;\n    },\n  },\n});\n\nexport const { saveToken, clearToken, setAuthState } = auth.actions;\nexport default auth.reducer;\n</code></pre> \n</div> \n<p>In this file, we’re creating a slice for the <code>auth</code> property of our app’s state using the <code>createSlice()</code> function introduced earlier. The <code>reducers</code> property holds a map of reducer functions for updating values in the auth slice. The returned object contains automatically generated action creators and a single slice reducer. We would need to use these in other files so, following the “ducks pattern”, we do named exports of the action creators, and a default export of the reducer function.</p> \n<p>Let’s set up the remaining reducer slices according to the app state we saw earlier. First, create a file named <strong>userSlice.ts</strong> in the auth directory and add the following code to it:</p> \n<pre><code>import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { User } from '../../interfaces/user.interface';\n\nconst user = createSlice({\n  name: 'user',\n  initialState: null as User | null,\n  reducers: {\n    setUser(state, { payload }: PayloadAction&lt;User | null&gt;) {\n      return state = (payload != null) ? payload : null;\n    },\n  },\n});\n\nexport const { setUser } = user.actions;\nexport default user.reducer;\n</code></pre> \n<p>This creates a slice reducer for the <code>user</code> property in our the application’s store. The <code>setUser</code> reducer function accepts a payload containing user data and updates the state with it. When no data is passed, we set the state’s user property to <code>null</code>.</p> \n<p>Next, create a file named <strong>diariesSlice.ts</strong> under <strong>src/features/diary</strong>:</p> \n<pre><code># ~/diaries-app/src/features\ncd diary\ntouch diariesSlice.ts\n</code></pre> \n<p>Add the following code to the file:</p> \n<div> \n <pre><code>import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Diary } from '../../interfaces/diary.interface';\n\nconst diaries = createSlice({\n  name: 'diaries',\n  initialState: [] as Diary[],\n  reducers: {\n    addDiary(state, { payload }: PayloadAction&lt;Diary[]&gt;) {\n      const diariesToSave = payload.filter((diary) =&gt; {\n        return state.findIndex((item) =&gt; item.id === diary.id) === -1;\n      });\n      state.push(...diariesToSave);\n    },\n    updateDiary(state, { payload }: PayloadAction&lt;Diary&gt;) {\n      const { id } = payload;\n      const diaryIndex = state.findIndex((diary) =&gt; diary.id === id);\n      if (diaryIndex !== -1) {\n        state.splice(diaryIndex, 1, payload);\n      }\n    },\n  },\n});\n\nexport const { addDiary, updateDiary } = diaries.actions;\nexport default diaries.reducer;\n</code></pre> \n</div> \n<p>The “diaries” property of our state is an array containing the user’s diaries, so our reducer functions here all work on the state object they receive using array methods. Notice here that we are writing normal “mutative” code when working on the state. This is possible because the reducer functions we create using the <code>createSlice()</code> method are wrapped with Immer’s <code>produce()</code> method. This results in Immer returning a correct immutably updated result for our state regardless of us writing mutative code.</p> \n<p>Next, create a file named <strong>entriesSlice.ts</strong> under <strong>src/features/entry</strong>:</p> \n<pre><code># ~/diaries-app/src/features\nmkdir entry\ncd entry\ntouch entriesSlice.ts\n</code></pre> \n<p>Open the file and add the following code:</p> \n<pre><code>import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Entry } from '../../interfaces/entry.interface';\n\nconst entries = createSlice({\n  name: 'entries',\n  initialState: [] as Entry[],\n  reducers: {\n    setEntries(state, { payload }: PayloadAction&lt;Entry[] | null&gt;) {\n      return (state = payload != null ? payload : []);\n    },\n    updateEntry(state, { payload }: PayloadAction&lt;Entry&gt;) {\n      const { id } = payload;\n      const index = state.findIndex((e) =&gt; e.id === id);\n      if (index !== -1) {\n        state.splice(index, 1, payload);\n      }\n    },\n  },\n});\n\nexport const { setEntries, updateEntry } = entries.actions;\nexport default entries.reducer;\n</code></pre> \n<p>The reducer functions here have logic similar to the previous slice’s reducer functions. The <code>entries</code> property is also an array, but it only holds entries for a single diary. In our app, this will be the diary currently in the user’s focus.</p> \n<p>Finally, create a file named editorSlice.ts in src/features/entry and add the following to it:</p> \n<div> \n <pre><code>import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Entry } from '../../interfaces/entry.interface';\n\ninterface EditorState {\n  canEdit: boolean;\n  currentlyEditing: Entry | null;\n  activeDiaryId: string | null;\n}\n\nconst initialState: EditorState = {\n  canEdit: false,\n  currentlyEditing: null,\n  activeDiaryId: null,\n};\n\nconst editor = createSlice({\n  name: 'editor',\n  initialState,\n  reducers: {\n    setCanEdit(state, { payload }: PayloadAction&lt;boolean&gt;) {\n      state.canEdit = payload != null ? payload : !state.canEdit;\n    },\n    setCurrentlyEditing(state, { payload }: PayloadAction&lt;Entry | null&gt;) {\n      state.currentlyEditing = payload;\n    },\n    setActiveDiaryId(state, { payload }: PayloadAction&lt;string&gt;) {\n      state.activeDiaryId = payload;\n    },\n  },\n});\n\nexport const { setCanEdit, setCurrentlyEditing, setActiveDiaryId } = editor.actions;\nexport default editor.reducer;\n</code></pre> \n</div> \n<p>Here, we have a slice for the <code>editor</code> property in state. We’ll be using the properties in this object to check if the user wants to switch to editing mode, which diary the edited entry belongs to, and what entry is going to be edited.</p> \n<p>To put it all together, create a file named <strong>rootReducer.ts</strong> in the src directory with the following content:</p> \n<pre><code>import { combineReducers } from '@reduxjs/toolkit';\nimport authReducer from './features/auth/authSlice';\nimport userReducer from './features/auth/userSlice';\nimport diariesReducer from './features/diary/diariesSlice';\nimport entriesReducer from './features/entry/entriesSlice';\nimport editorReducer from './features/entry/editorSlice';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  diaries: diariesReducer,\n  entries: entriesReducer,\n  user: userReducer,\n  editor: editorReducer,\n});\n\nexport type RootState = ReturnType&lt;typeof rootReducer&gt;;\nexport default rootReducer;\n</code></pre> \n<p>In this file, we’ve combined our slice reducers into a single root reducer with the <code>combineReducers()</code> function. We’ve also exported the <code>RootState</code> type, which will be useful later when we’re selecting values from the store. We can now use the root reducer (the default export of this file) to set up our store.</p> \n<p>Create a file named store.ts with the following contents:</p> \n<pre><code>import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './rootReducer';\nimport { useDispatch } from 'react-redux';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\ntype AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () =&gt; useDispatch&lt;AppDispatch&gt;();\nexport default store;\n</code></pre> \n<p>With this, we’ve created a store using the <code>configureStore()</code> export from Redux toolkit. We’ve also exported an hook called <code>useAppDispatch()</code> which merely returns a typed <a href=\"https://react-redux.js.org/api/hooks#usedispatch\"><code>useDispatch()</code></a> hook.</p> \n<p>Next, update the imports in index.tsx to look like the following:</p> \n<pre><code>import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { setupServer } from './services/mirage/server';\nimport { Provider } from 'react-redux';\nimport store from './store';\n// ...\n</code></pre> \n<p>Finally, make the <code>store</code> available to the app’s components by wrapping <code>&lt;App /&gt;</code> (the top-level component) with <code>&lt;Provider /&gt;</code>:</p> \n<pre><code>ReactDOM.render(\n  &lt;React.StrictMode&gt;\n    &lt;Provider store={store}&gt;\n      &lt;App /&gt;\n    &lt;/Provider&gt;\n  &lt;/React.StrictMode&gt;,\n  document.getElementById('root')\n);\n</code></pre> \n<p>Now, if you start your app and you navigate to <a href=\"http://localhost:3000\">http://localhost:3000</a> with the <a href=\"https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd\">Redux Dev Tools</a> extension enabled, you should see the following in your app’s state:</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/147528a7-3b45-4f54-836a-a134da707b54/fig-02-application-initial-state-in-redux-dev-tools-extension.png\" /></p> \n<p>Great work so far, but we’re not quite finished yet. In the next section, we will design the app’s User Interface and add functionality using the store we’ve just created.</p> \n<h3>Designing The Application User Interface</h3> \n<p>To see Redux in action, we are going to build a demo app. In this section, we will connect our components to the store we’ve created and learn to dispatch actions and modify the state using reducer functions. We will also learn how to read values from the store. Here’s what our Redux-powered application will look like.</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ea2add0-730a-475e-9f47-bc0a8ff54e6b/fig-03-final-app-home-page.png\" /></p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e1abbde2-fd45-4a3d-91c4-25e4a9de28ac/fig-04-final-app-diary-entries-page.png\" /></p> \n<h4>Setting up the Authentication Feature</h4> \n<p>To get started, move <strong>App.tsx</strong> and its related files from the <strong>src</strong> directory to its own directory like this:</p> \n<pre><code># ~/diaries-app/src\nmkdir app\nmv App.tsx App.test.tsx app\n</code></pre> \n<p>You can delete the App.css and logo.svg files as we won’t be needing them.</p> \n<p>Next, open the App.tsx file and replace its contents with the following:</p> \n<div> \n <pre><code>import React, { FC, lazy, Suspense } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../rootReducer';\n\nconst Auth = lazy(() =&gt; import('../features/auth/Auth'));\nconst Home = lazy(() =&gt; import('../features/home/Home'));\n\nconst App: FC = () =&gt; {\n  const isLoggedIn = useSelector(\n    (state: RootState) =&gt; state.auth.isAuthenticated\n  );\n  return (\n    &lt;Router&gt;\n      &lt;Switch&gt;\n        &lt;Route path=\"/\"&gt;\n          &lt;Suspense fallback={&lt;p&gt;Loading...&lt;/p&gt;}&gt;\n            {isLoggedIn ? &lt;Home /&gt; : &lt;Auth /&gt;}\n          &lt;/Suspense&gt;\n        &lt;/Route&gt;\n      &lt;/Switch&gt;\n    &lt;/Router&gt;\n  );\n};\n\nexport default App;\n</code></pre> \n</div> \n<p>Here we have set up our app to render an <code>&lt;Auth /&gt;</code> component if the user is unauthenticated, or otherwise render a <code>&lt;Home /&gt;</code> component. We haven’t created either of these components yet, so let’s fix that. Create a file named <strong>Auth.tsx</strong> under src/features/auth and add the following contents to the file:</p> \n<div> \n <pre><code>import React, { FC, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { User } from '../../interfaces/user.interface';\nimport * as Yup from 'yup';\nimport http from '../../services/api';\nimport { saveToken, setAuthState } from './authSlice';\nimport { setUser } from './userSlice';\nimport { AuthResponse } from '../../services/mirage/routes/user';\nimport { useAppDispatch } from '../../store';\n\nconst schema = Yup.object().shape({\n  username: Yup.string()\n    .required('What? No username?')\n    .max(16, 'Username cannot be longer than 16 characters'),\n  password: Yup.string().required('Without a password, \"None shall pass!\"'),\n  email: Yup.string().email('Please provide a valid email address (<a href=\"mailto:abc@xy.z\">abc@xy.z</a>)'),\n});\n\nconst Auth: FC = () =&gt; {\n  const { handleSubmit, register, errors } = useForm&lt;User&gt;({\n    validationSchema: schema,\n  });\n  const [isLogin, setIsLogin] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const dispatch = useAppDispatch();\n\n  const submitForm = (data: User) =&gt; {\n    const path = isLogin ? '/auth/login' : '/auth/signup';\n    http\n      .post&lt;User, AuthResponse&gt;(path, data)\n      .then((res) =&gt; {\n        if (res) {\n          const { user, token } = res;\n          dispatch(saveToken(token));\n          dispatch(setUser(user));\n          dispatch(setAuthState(true));\n        }\n      })\n      .catch((error) =&gt; {\n        console.log(error);\n      })\n      .finally(() =&gt; {\n        setLoading(false);\n      });\n  };\n\n  return (\n    &lt;div className=\"auth\"&gt;\n      &lt;div className=\"card\"&gt;\n        &lt;form onSubmit={handleSubmit(submitForm)}&gt;\n          &lt;div className=\"inputWrapper\"&gt;\n            &lt;input ref={register} name=\"username\" placeholder=\"Username\" /&gt;\n            {errors &amp;&amp; errors.username &amp;&amp; (\n              &lt;p className=\"error\"&gt;{errors.username.message}&lt;/p&gt;\n            )}\n          &lt;/div&gt;\n          &lt;div className=\"inputWrapper\"&gt;\n            &lt;input\n              ref={register}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n            /&gt;\n            {errors &amp;&amp; errors.password &amp;&amp; (\n              &lt;p className=\"error\"&gt;{errors.password.message}&lt;/p&gt;\n            )}\n          &lt;/div&gt;\n          {!isLogin &amp;&amp; (\n            &lt;div className=\"inputWrapper\"&gt;\n              &lt;input\n                ref={register}\n                name=\"email\"\n                placeholder=\"Email (optional)\"\n              /&gt;\n              {errors &amp;&amp; errors.email &amp;&amp; (\n                &lt;p className=\"error\"&gt;{errors.email.message}&lt;/p&gt;\n              )}\n            &lt;/div&gt;\n          )}\n          &lt;div className=\"inputWrapper\"&gt;\n            &lt;button type=\"submit\" disabled={loading}&gt;\n              {isLogin ? 'Login' : 'Create account'}\n            &lt;/button&gt;\n          &lt;/div&gt;\n          &lt;p\n            onClick={() =&gt; setIsLogin(!isLogin)}\n            style={{ cursor: 'pointer', opacity: 0.7 }}\n          &gt;\n            {isLogin ? 'No account? Create one' : 'Already have an account?'}\n          &lt;/p&gt;\n        &lt;/form&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default Auth;\n</code></pre> \n</div> \n<p>In this component, we have set up a form for users to log in, or to create an account. Our form fields are validated using <a href=\"https://github.com/jquense/yup\">Yup</a> and, on successfully authenticating a user, we use our <code>useAppDispatch</code> hook to dispatch the relevant actions. You can see the dispatched actions and the changes made to your state in the Redux DevTools Extension:</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b68c944c-717f-40f9-ae77-ec83a0219dc4/06-dispatched-actions-changes-tracked-in-redux-dev-tools-extensions.png\" /></p> \n<p>Finally, create a file named <strong>Home.tsx</strong> under <strong>src/features/home</strong> and add the following code to the file:</p> \n<pre><code>import React, { FC } from 'react';\n\nconst Home: FC = () =&gt; {\n  return (\n    &lt;div&gt;\n      &lt;p&gt;Welcome user!&lt;/p&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default Home;\n</code></pre> \n<p>For now, we are just displaying some text to the authenticated user. As we build the rest of our application, we will be updating this file.</p> \n<h4>Setting up the Editor</h4> \n<p>The next component we are going to build is the editor. Though basic, we will enable support for rendering markdown content using the <code>markdown-to-jsx</code> library we installed earlier.</p> \n<p>First, create a file named <strong>Editor.tsx</strong> in the src/features/entry directory. Then, add the following code to the file:</p> \n<div> \n <pre><code>import React, { FC, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../rootReducer';\nimport Markdown from 'markdown-to-jsx';\nimport http from '../../services/api';\nimport { Entry } from '../../interfaces/entry.interface';\nimport { Diary } from '../../interfaces/diary.interface';\nimport { setCurrentlyEditing, setCanEdit } from './editorSlice';\nimport { updateDiary } from '../diary/diariesSlice';\nimport { updateEntry } from './entriesSlice';\nimport { showAlert } from '../../util';\nimport { useAppDispatch } from '../../store';\n\nconst Editor: FC = () =&gt; {\n  const { currentlyEditing: entry, canEdit, activeDiaryId } = useSelector(\n    (state: RootState) =&gt; state.editor\n  );\n  const [editedEntry, updateEditedEntry] = useState(entry);\n  const dispatch = useAppDispatch();\n\n  const saveEntry = async () =&gt; {\n    if (activeDiaryId == null) {\n      return showAlert('Please select a diary.', 'warning');\n    }\n    if (entry == null) {\n      http\n        .post&lt;Entry, { diary: Diary; entry: Entry }&gt;(\n          <code>/diaries/entry/${activeDiaryId}</code>,\n          editedEntry\n        )\n        .then((data) =&gt; {\n          if (data != null) {\n            const { diary, entry: _entry } = data;\n            dispatch(setCurrentlyEditing(_entry));\n            dispatch(updateDiary(diary));\n          }\n        });\n    } else {\n      http\n        .put&lt;Entry, Entry&gt;(<code>diaries/entry/${entry.id}</code>, editedEntry)\n        .then((_entry) =&gt; {\n          if (_entry != null) {\n            dispatch(setCurrentlyEditing(_entry));\n            dispatch(updateEntry(_entry));\n          }\n        });\n    }\n    dispatch(setCanEdit(false));\n  };\n\n  useEffect(() =&gt; {\n    updateEditedEntry(entry);\n  }, [entry]);\n\n  return (\n    &lt;div className=\"editor\"&gt;\n      &lt;header\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          alignItems: 'center',\n          marginBottom: '0.2em',\n          paddingBottom: '0.2em',\n          borderBottom: '1px solid rgba(0,0,0,0.1)',\n        }}\n      &gt;\n        {entry &amp;&amp; !canEdit ? (\n          &lt;h4&gt;\n            {entry.title}\n            &lt;a\n              href=\"#edit\"\n              onClick={(e) =&gt; {\n                e.preventDefault();\n                if (entry != null) {\n                  dispatch(setCanEdit(true));\n                }\n              }}\n              style={{ marginLeft: '0.4em' }}\n            &gt;\n              (Edit)\n            &lt;/a&gt;\n          &lt;/h4&gt;\n        ) : (\n          &lt;input\n            value={editedEntry?.title ?? ''}\n            disabled={!canEdit}\n            onChange={(e) =&gt; {\n              if (editedEntry) {\n                updateEditedEntry({\n                  ...editedEntry,\n                  title: e.target.value,\n                });\n              } else {\n                updateEditedEntry({\n                  title: e.target.value,\n                  content: '',\n                });\n              }\n            }}\n          /&gt;\n        )}\n      &lt;/header&gt;\n      {entry &amp;&amp; !canEdit ? (\n        &lt;Markdown&gt;{entry.content}&lt;/Markdown&gt;\n      ) : (\n        &lt;&gt;\n          &lt;textarea\n            disabled={!canEdit}\n            placeholder=\"Supports markdown!\"\n            value={editedEntry?.content ?? ''}\n            onChange={(e) =&gt; {\n              if (editedEntry) {\n                updateEditedEntry({\n                  ...editedEntry,\n                  content: e.target.value,\n                });\n              } else {\n                updateEditedEntry({\n                  title: '',\n                  content: e.target.value,\n                });\n              }\n            }}\n          /&gt;\n          &lt;button onClick={saveEntry} disabled={!canEdit}&gt;\n            Save\n          &lt;/button&gt;\n        &lt;/&gt;\n      )}\n    &lt;/div&gt;\n  );\n};\n\nexport default Editor;\n</code></pre> \n</div> \n<p>Let’s break down what’s happening in the <code>Editor</code> component.</p> \n<p>First, we are picking some values (with correctly inferred types) from the app’s state using the <code>useSelector()</code> hook from <code>react-redux</code>. In the next line, we have a stateful value called <code>editedEntry</code> whose initial value is set to the <code>editor.currentlyEditing</code> property we’ve selected from the store.</p> \n<p>Next, we have the <code>saveEntry</code> function which updates or creates a new entry in the API, and dispatches the respective Redux action.</p> \n<p>Finally, we have a <code>useEffect</code> that is fired when the <code>editor.currentlyEditing</code> property changes. Our editor’s UI (in the component’s return function) has been set up to respond to changes in the state. For example, rendering the entry’s content as JSX elements when the user isn’t editing.</p> \n<p>With that, the app’s <code>Entry</code> feature should be completely set up. In the next section, we will finish building the <code>Diary</code> feature and then import the main components in the <code>Home</code> component we created earlier.</p> \n<h4>Final Steps</h4> \n<p>To finish up our app, we will first create components for the <code>Diary</code> feature. Then, we will update the <code>Home</code> component with the primary exports from the <code>Diary</code> and <code>Entry</code> features. Finally, we will add some styling to give our app the required pizzazz!</p> \n<p>Let’s start by creating a file in src/features/diary named <strong>DiaryTile.tsx</strong>. This component will present information about a diary and its entries, and allow the user to edit the diary’s title. Add the following code to the file:</p> \n<div> \n <pre><code>import React, { FC, useState } from 'react';\nimport { Diary } from '../../interfaces/diary.interface';\nimport http from '../../services/api';\nimport { updateDiary } from './diariesSlice';\nimport { setCanEdit, setActiveDiaryId, setCurrentlyEditing } from '../entry/editorSlice';\nimport { showAlert } from '../../util';\nimport { Link } from 'react-router-dom';\nimport { useAppDispatch } from '../../store';\n\ninterface Props {\n  diary: Diary;\n}\n\nconst buttonStyle: React.CSSProperties = {\n  fontSize: '0.7em',\n  margin: '0 0.5em',\n};\n\nconst DiaryTile: FC&lt;Props&gt; = (props) =&gt; {\n  const [diary, setDiary] = useState(props.diary);\n  const [isEditing, setIsEditing] = useState(false);\n  const dispatch = useAppDispatch();\n  const totalEntries = props.diary?.entryIds?.length;\n\n  const saveChanges = () =&gt; {\n    http\n      .put&lt;Diary, Diary&gt;(<code>/diaries/${diary.id}</code>, diary)\n      .then((diary) =&gt; {\n        if (diary) {\n          dispatch(updateDiary(diary));\n          showAlert('Saved!', 'success');\n        }\n      })\n      .finally(() =&gt; {\n        setIsEditing(false);\n      });\n  };\n\n  return (\n    &lt;div className=\"diary-tile\"&gt;\n      &lt;h2\n        className=\"title\"\n        title=\"Click to edit\"\n        onClick={() =&gt; setIsEditing(true)}\n        style={{\n          cursor: 'pointer',\n        }}\n      &gt;\n        {isEditing ? (\n          &lt;input\n            value={diary.title}\n            onChange={(e) =&gt; {\n              setDiary({\n                ...diary,\n                title: e.target.value,\n              });\n            }}\n            onKeyUp={(e) =&gt; {\n              if (e.key === 'Enter') {\n                saveChanges();\n              }\n            }}\n          /&gt;\n        ) : (\n          &lt;span&gt;{diary.title}&lt;/span&gt;\n        )}\n      &lt;/h2&gt;\n      &lt;p className=\"subtitle\"&gt;{totalEntries ?? '0'} saved entries&lt;/p&gt;\n      &lt;div style={{ display: 'flex' }}&gt;\n        &lt;button\n          style={buttonStyle}\n          onClick={() =&gt; {\n            dispatch(setCanEdit(true));\n            dispatch(setActiveDiaryId(diary.id as string));\n            dispatch(setCurrentlyEditing(null));\n          }}\n        &gt;\n          Add New Entry\n        &lt;/button&gt;\n        &lt;Link to={<code>diary/${diary.id}</code>} style={{ width: '100%' }}&gt;\n          &lt;button className=\"secondary\" style={buttonStyle}&gt;\n            View all →\n          &lt;/button&gt;\n        &lt;/Link&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default DiaryTile;\n</code></pre> \n</div> \n<p>In this file, we receive a diary object as a prop and display the data in our component. Notice that we use local state and component props for our data display here. That’s because you don’t have to manage all your app’s state using Redux. Sharing data using props, and maintaining local state in your components is acceptable and encouraged <a href=\"https://redux.js.org/faq/organizing-state\">in some cases</a>.</p> \n<p>Next, let’s create a component that will display a list of a diary’s entries, with the last updated entries at the top of the list. Ensure you are in the src/features/diary directory, then create a file named <strong>DiaryEntriesList.tsx</strong> and add the following code to the file:</p> \n<div> \n <pre><code>import React, { FC, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../rootReducer';\nimport http from '../../services/api';\nimport { Entry } from '../../interfaces/entry.interface';\nimport { setEntries } from '../entry/entriesSlice';\nimport { setCurrentlyEditing, setCanEdit } from '../entry/editorSlice';\nimport dayjs from 'dayjs';\nimport { useAppDispatch } from '../../store';\n\nconst DiaryEntriesList: FC = () =&gt; {\n  const { entries } = useSelector((state: RootState) =&gt; state);\n  const dispatch = useAppDispatch();\n  const { id } = useParams();\n\n  useEffect(() =&gt; {\n    if (id != null) {\n      http\n        .get&lt;null, { entries: Entry[] }&gt;(<code>/diaries/entries/${id}</code>)\n        .then(({ entries: _entries }) =&gt; {\n          if (_entries) {\n            const sortByLastUpdated = _entries.sort((a, b) =&gt; {\n              return dayjs(b.updatedAt).unix() - dayjs(a.updatedAt).unix();\n            });\n            dispatch(setEntries(sortByLastUpdated));\n          }\n        });\n    }\n  }, [id, dispatch]);\n\n  return (\n    &lt;div className=\"entries\"&gt;\n      &lt;header&gt;\n        &lt;Link to=\"/\"&gt;\n          &lt;h3&gt;← Go Back&lt;/h3&gt;\n        &lt;/Link&gt;\n      &lt;/header&gt;\n      &lt;ul&gt;\n        {entries.map((entry) =&gt; (\n          &lt;li\n            key={entry.id}\n            onClick={() =&gt; {\n              dispatch(setCurrentlyEditing(entry));\n              dispatch(setCanEdit(true));\n            }}\n          &gt;\n            {entry.title}\n          &lt;/li&gt;\n        ))}\n      &lt;/ul&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default DiaryEntriesList;\n</code></pre> \n</div> \n<p>Here, we subscribe to the entries property of our app’s state, and have our effect fetch a diary’s entry only run when a property, <code>id</code>, changes. This property’s value is gotten from our URL as a path parameter using the <code>useParams()</code> hook from <code>react-router</code>. In the next step, we will create a component that will enable users to create and view diaries, as well as render a diary’s entries when it is in focus.</p> \n<p>Create a file named <strong>Diaries.tsx</strong> while still in the same directory, and add the following code to the file:</p> \n<div> \n <pre><code>import React, { FC, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../rootReducer';\nimport http from '../../services/api';\nimport { Diary } from '../../interfaces/diary.interface';\nimport { addDiary } from './diariesSlice';\nimport Swal from 'sweetalert2';\nimport { setUser } from '../auth/userSlice';\nimport DiaryTile from './DiaryTile';\nimport { User } from '../../interfaces/user.interface';\nimport { Route, Switch } from 'react-router-dom';\nimport DiaryEntriesList from './DiaryEntriesList';\nimport { useAppDispatch } from '../../store';\nimport dayjs from 'dayjs';\n\nconst Diaries: FC = () =&gt; {\n  const dispatch = useAppDispatch();\n  const diaries = useSelector((state: RootState) =&gt; state.diaries);\n  const user = useSelector((state: RootState) =&gt; state.user);\n\n  useEffect(() =&gt; {\n    const fetchDiaries = async () =&gt; {\n      if (user) {\n        http.get&lt;null, Diary[]&gt;(<code>diaries/${user.id}</code>).then((data) =&gt; {\n          if (data &amp;&amp; data.length &gt; 0) {\n            const sortedByUpdatedAt = data.sort((a, b) =&gt; {\n              return dayjs(b.updatedAt).unix() - dayjs(a.updatedAt).unix();\n            });\n            dispatch(addDiary(sortedByUpdatedAt));\n          }\n        });\n      }\n    };\n    fetchDiaries();\n  }, [dispatch, user]);\n\n  const createDiary = async () =&gt; {\n    const result = await Swal.mixin({\n      input: 'text',\n      confirmButtonText: 'Next →',\n      showCancelButton: true,\n      progressSteps: ['1', '2'],\n    }).queue([\n      {\n        titleText: 'Diary title',\n        input: 'text',\n      },\n      {\n        titleText: 'Private or public diary?',\n        input: 'radio',\n        inputOptions: {\n          private: 'Private',\n          public: 'Public',\n        },\n        inputValue: 'private',\n      },\n    ]);\n    if (result.value) {\n      const { value } = result;\n      const {\n        diary,\n        user: _user,\n      } = await http.post&lt;Partial&lt;Diary&gt;, { diary: Diary; user: User }&gt;('/diaries/', {\n        title: value[0],\n        type: value[1],\n        userId: user?.id,\n      });\n      if (diary &amp;&amp; user) {\n        dispatch(addDiary([diary] as Diary[]));\n        dispatch(addDiary([diary] as Diary[]));\n        dispatch(setUser(_user));\n        return Swal.fire({\n          titleText: 'All done!',\n          confirmButtonText: 'OK!',\n        });\n      }\n    }\n    Swal.fire({\n      titleText: 'Cancelled',\n    });\n  };\n\n  return (\n    &lt;div style={{ padding: '1em 0.4em' }}&gt;\n      &lt;Switch&gt;\n        &lt;Route path=\"/diary/:id\"&gt;\n          &lt;DiaryEntriesList /&gt;\n        &lt;/Route&gt;\n        &lt;Route path=\"/\"&gt;\n          &lt;button onClick={createDiary}&gt;Create New&lt;/button&gt;\n          {diaries.map((diary, idx) =&gt; (\n            &lt;DiaryTile key={idx} diary={diary} /&gt;\n          ))}\n        &lt;/Route&gt;\n      &lt;/Switch&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default Diaries;\n</code></pre> \n</div> \n<p>In this component, we have a function to fetch the user’s diaries inside a <code>useEffect</code> hook, and a function to create a new diary. We also render our components in <code>react-router</code>’s <code>&lt;Route /&gt;</code> component, rendering a diary’s entries if its <code>id</code> matches the path param in the route <code>/diary/:id</code>, or otherwise rendering a list of the user’s diaries.</p> \n<p>To wrap things up, let’s update the <code>Home.tsx</code> component. First, update the imports to look like the following:</p> \n<pre><code>import React, { FC } from 'react';\nimport Diaries from '../diary/Diaries';\nimport Editor from '../entry/Editor';\n</code></pre> \n<p>Then, change the component’s return statement to the following:</p> \n<pre><code>return (\n  &lt;div className=\"two-cols\"&gt;\n    &lt;div className=\"left\"&gt;\n      &lt;Diaries /&gt;\n    &lt;/div&gt;\n    &lt;div className=\"right\"&gt;\n      &lt;Editor /&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n</code></pre> \n<p>Finally, replace the contents of the index.css file in your app’s src directory with the following code:</p> \n<div> \n <pre><code>:root {\n  --primary-color: #778899;\n  --error-color: #f85032;\n  --text-color: #0d0d0d;\n  --transition: all ease-in-out 0.3s;\n}\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\nhtml, body, #root {\n  height: 100%;\n}\n<em>, </em>:before, *:after {\n  box-sizing: border-box;\n}\n.auth {\n  display: flex;\n  align-items: center;\n  height: 100%;\n}\n.card {\n  background: #fff;\n  padding: 3rem;\n  text-align: center;\n  box-shadow: 2px 8px 12px rgba(0, 0, 0, 0.1);\n  max-width: 450px;\n  width: 90%;\n  margin: 0 auto;\n}\n.inputWrapper {\n  margin: 1rem auto;\n  width: 100%;\n}\ninput:not([type='checkbox']), button {\n  border-radius: 0.5rem;\n  width: 100%;\n}\ninput:not([type='checkbox']), textarea {\n  border: 2px solid rgba(0, 0, 0, 0.1);\n  padding: 1em;\n  color: var(--text-color);\n  transition: var(--transition);\n}\ninput:not([type='checkbox']):focus, textarea:focus {\n  outline: none;\n  border-color: var(--primary-color);\n}\nbutton {\n  appearance: none;\n  border: 1px solid var(--primary-color);\n  color: #fff;\n  background-color: var(--primary-color);\n  text-transform: uppercase;\n  font-weight: bold;\n  outline: none;\n  cursor: pointer;\n  padding: 1em;\n  box-shadow: 1px 4px 6px rgba(0, 0, 0, 0.1);\n  transition: var(--transition);\n}\nbutton.secondary {\n  color: var(--primary-color);\n  background-color: #fff;\n  border-color: #fff;\n}\nbutton:hover, button:focus {\n  box-shadow: 1px 6px 8px rgba(0, 0, 0, 0.1);\n}\n.error {\n  margin: 0;\n  margin-top: 0.2em;\n  font-size: 0.8em;\n  color: var(--error-color);\n  animation: 0.3s ease-in-out forwards fadeIn;\n}\n.two-cols {\n  display: flex;\n  flex-wrap: wrap;\n  height: 100vh;\n}\n.two-cols .left {\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n  height: 100%;\n  overflow-y: scroll;\n}\n.two-cols .right {\n  overflow-y: auto;\n}\n.title {\n  font-size: 1.3rem;\n}\n.subtitle {\n  font-size: 0.9rem;\n  opacity: 0.85;\n}\n.title, .subtitle {\n  margin: 0;\n}\n.diary-tile {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 1em;\n}\n.editor {\n  height: 100%;\n  padding: 1em;\n}\n.editor input {\n  width: 100%;\n}\n.editor textarea {\n  width: 100%;\n  height: calc(100vh - 160px);\n}\n.entries ul {\n  list-style: none;\n  padding: 0;\n}\n.entries li {\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 0.5em;\n  cursor: pointer;\n}\n.entries li:nth-child(even) {\n  background: rgba(0, 0, 0, 0.1);\n}\n\n@media (min-width: 768px) {\n  .two-cols .left {\n    width: 25%;\n  }\n  .two-cols .right {\n    width: 75%;\n  }\n}\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 0.8;\n  }\n}\n</code></pre> \n</div> \n<p>That’s it! You can now run <code>npm start</code> or <code>yarn start</code> and check out the final app at <a href=\"http://localhost:3000\">http://localhost:3000</a>.</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/30b104ce-358e-414c-81a7-22cc28c51fb2/fig-05-final-app-home-screen-unauthenticated-user.png\" /></p> \n<h3>Conclusion</h3> \n<p>In this guide, you have learned how to rapidly develop applications using Redux. You also learned about good practices to follow when working with Redux and React, in order to make debugging and extending your applications easier. This guide is by no means extensive as there are still <a href=\"https://redux.js.org/faq\">ongoing discussions surrounding Redux</a> and some of its concepts. Please check out the <a href=\"https://redux.js.org\">Redux</a> and <a href=\"https://react-redux.js.org/\">React-Redux</a> docs if you’d like to learn more about using Redux in your React projects.</p> \n<ul> \n <li><a href=\"https://github.com/jerrynavi/diaries-app\">See source code</a> (GitHub repo)</li> \n</ul> \n<h3>References</h3> \n<ul> \n <li><a href=\"https://redux.js.org/faq\">Redux FAQs</a></li> \n <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\"><code>Array.prototype.reduce()</code></a> on <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\">MDN Docs</a></li> \n <li><a href=\"https://immerjs.github.io/immer/docs/introduction\">Immer.js Docs</a></li> \n <li><a href=\"https://www.smashingmagazine.com/2020/04/miraje-js-models-associations/\">Mirage.js Deep Dive Series</a></li> \n <li><a href=\"https://www.npmjs.com/package/axios#creating-an-instance\">Axios on npm</a></li> \n <li><a href=\"https://github.com/erikras/ducks-modular-redux\">The “Ducks” Proposal</a></li> \n</ul>","descriptionType":"html","publishedDate":"Mon, 03 Aug 2020 11:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cb418b05-a190-4e3e-85f1-7ece1fa1039b/redux-real-world-application.png","linkMd5":"cdfbc1833104e26676bb8df00a8b2a3c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn27@2020_4/2020/09/05/07-59-17-473_84e41fee6d33f1e5.webp","destWidth":1201,"destHeight":631,"sourceBytes":278841,"destBytes":58960,"author":"hello@smashingmagazine.com (Jerry Navi)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cb418b05-a190-4e3e-85f1-7ece1fa1039b/redux-real-world-application.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/01f2121c-7b89-4f45-a808-5359671e44b7/fig-01-application-data-model.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn48@2020_5/2020/09/05/07-59-39-455_c7af8da943052326.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/147528a7-3b45-4f54-836a-a134da707b54/fig-02-application-initial-state-in-redux-dev-tools-extension.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn50@2020_6/2020/09/05/07-59-34-517_f5453d6b41c52527.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ea2add0-730a-475e-9f47-bc0a8ff54e6b/fig-03-final-app-home-page.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn91@2020_4/2020/09/05/07-59-37-783_a8f280cfcb4a5f16.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e1abbde2-fd45-4a3d-91c4-25e4a9de28ac/fig-04-final-app-diary-entries-page.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn50@2020_4/2020/09/05/07-59-39-365_777901b936afb824.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b68c944c-717f-40f9-ae77-ec83a0219dc4/06-dispatched-actions-changes-tracked-in-redux-dev-tools-extensions.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn20@2020_6/2020/09/05/07-59-28-471_3a1d9c101e892171.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/30b104ce-358e-414c-81a7-22cc28c51fb2/fig-05-final-app-home-screen-unauthenticated-user.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn36@2020_1/2020/09/05/07-59-19-674_7d40bec985e97e9f.webp"},"publishedOrCreatedDate":1599292755757},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Autonomy Online: A Case For The IndieWeb","link":"https://smashingmagazine.com/2020/08/autonomy-online-indieweb/","description":"<p>Web 2.0 celebrated the idea of everyone being able to contribute to the web regardless of their technical skill and knowledge. Its major features include self-publishing platforms, social networking websites, “tagging”, “liking”, and bookmarking. </p>\n<p>Many individuals and companies began creating these platforms so that anyone could contribute to the Web, and not just people who had the privilege to learn to code. In fact, to recognize our contributions to the web, “<a href=\"https://en.wikipedia.org/wiki/You_(Time_Person_of_the_Year\">we</a>)” were Time magazine's Person of the Year in 2006.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b90fa8c7-d63b-4e89-80e2-04b896c68a26/1-autonomy-online-indieweb-preview.png\" /></p>\n<p>Nowadays whether you’re consuming or sharing content on the web, it is likely to be via a big website. Twitter, Youtube, or a Facebook-owned service are popular examples. Whilst this gives us the advantage of being able to participate in a larger conversation at almost no monetary cost, there is also the downside of potentially losing all our content if a company closes, as <a href=\"https://indieweb.org/site-deaths\">has happened in the past</a>.</p>\n<p>In the past few years, I began to notice I was losing control of online life. What follows is a case for why the IndieWeb is a great opportunity for personal development, taking ownership of your content, and learning by building personal websites.</p>\n<h3>Learning On The “Corporate Web”</h3>\n<p>After years of seemingly endless growth and acquisitions, we have ended up with a handful of big websites that control our whole online identity, data, and privacy. The main mode of participation on the web, for many people, is through major web corporations that need to own data to sell to advertisers. This has become what many people call the <a href=\"https://indieweb.org/corporate_web\">corporate web</a>, where users are the product and engagement is king.</p>\n<p>The corporate web allows our family and friends and anyone with lower-tech skills to develop their web presence and have access to the digital world. Anyone can sign up to a handful of social media websites and see and interact with what people are sharing, especially at times of physical distance.</p>\n<p>However, nothing online is truly free. Many of these websites rely on advertising revenue for income. Consequently, these websites need to change a lot to keep the engagement up so that the users don’t leave. This is not always in the best interest of the people who use it.</p>\n<h4>Exploring The Corporate Web</h4>\n<p>Social media websites allowed me to find and connect with industry peers. When I first started working as a web developer, one of the first things I did was to sign up to popular social media websites and subscribe to updates of people who also worked in the industry. Some of them I personally knew but others were recommended to me by the algorithm itself and throughout the years I would adjust my subscription list. </p>\n<p>Regardless if it was shared via an article or a social media post, lots of things I learned were because someone wrote about it and I was able to read it for free. And when I engaged I was potentially building a professional network from my home. All this for free! How cool is that? </p>\n<p>However, as time went by I began to lose control of what I wanted to see and when. In order to increase engagement, many social media websites began to use algorithms to dictate what they thought I wanted to see and they also started to show me things I didn’t actually subscribe to. While now I can rationalize this, at the time I was just entering the industry so I thought I was the one who needed to catch up on everything. </p>\n<p>Social media doesn’t take breaks, but at some point in my life, I needed a break from it, which made me realize that my personal development was going to suffer. I began to experience strange anxiety of missing out because I also knew that I couldn’t scroll through my whole timeline to see everything that was shared while I was offline. It became really hard to search and find anything I had a glimpse of some weeks ago.</p>\n<h4>Making Stuff On The Corporate Web</h4>\n<p>So far I’ve been talking about consuming content, but I also wanted to share. While one may always be keen to continuously improve their craft, I was feeling an <a href=\"https://www.smashingmagazine.com/2020/07/thoughts-feelings-creative-wellness/\">intense pressure</a> to follow trends and build things using the latest shiny thing for the sake of being employable and impress people I’ve never met. Even sharing stuff that immediately reaches many people, would come with its own limitations as I would be using a platform not built by me. </p>\n<p>Most importantly, it was doing a disservice to a whole group of people who can’t even join certain corporate websites because of the geopolitical restrictions of where they live. There is always the possibility of having <a href=\"https://www.independent.co.uk/life-style/gadgets-and-tech/news/slack-ban-accounts-us-sanctions-cuba-iran-a8693991.html\">your account (and your content) removed</a> at any time if the corporation decides you’re breaking a rule. </p>\n<p>Whether it would be accessibility, character limits, moderation, or even the option of not receiving feedback, many times it felt unwelcoming and intimidating. Often I felt like an impostor and as if I was running a never-ending marathon. </p>\n<p>I began to ask myself, “who am I doing this for?” Is the “corporate web” bringing to the surface “corporate values” that get in the way of personal development?</p>\n<h3>What Is The IndieWeb?</h3>\n<p>Do you ever wonder what would happen if your social identity was stolen or reassigned by the corporation to someone else? Or, as I mentioned before, if these big websites close down, and all the content you created is gone? Corporate websites control who, when, if, and where the content created by its users can be accessed.</p>\n<p>I didn’t wonder about these things until 2017. It was in ViewSource that I saw a talk by Jeremy Keith that introduced me to the IndieWeb called “<a href=\"https://www.youtube.com/watch?v=VvYK-K0jWng\">Building blocks of the IndieWeb</a>”. The <a href=\"https://indieweb.org/IndieWeb\">IndieWeb</a> is a community of individual personal websites connected by principles that lead to an alternative to the corporate web.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bbbc6354-9b73-4060-a6ad-bf3a4641c1f2/2-autonomy-online-indieweb.jpg\" /></p>\n<p>IndieWebCamps are an opportunity to work on my personal website blog and to ask for help. Photograph by <a href=\"https://www.flickr.com/photos/tollwerk/45662079592/in/album-72157703054537654/\">Julie Anne Noyingurce</a>.</p>\n<p>The IndieWeb community is about creating or improving your personal website while also <a href=\"https://indiewebguides.org/\">helping others</a> to build theirs, either by documenting or creating tools. To help create an alternative to the corporate web, members of the IndieWeb community have built tools that anyone can use on their personal website that helps create the interaction and community building between personal websites. </p>\n<p>One of the <a href=\"https://indieweb.org/principles\">principles</a> of the IndieWeb is that you own your content and that principle alone solves one of the main problems I mentioned above. Other tenets include:</p>\n<ul>\n<li><strong>Ownership of your identity.</strong><br />I didn’t realize until this point how much it made sense to have a “one true version” of yourself online instead of multiple accounts spread on many websites;</li>\n<li><strong>Using tools you’ve built yourself.</strong><br />At some point, I thought the worth of the things I built were related to the number of people who can use it. IndieWeb promotes the idea of building something for me and actively using it;</li>\n<li><strong>Documenting your journey.</strong><br />I used to be an active blogger and I had stopped when I began to work as a developer. At the time I was afraid of writing beginner-friendly content and this principle helped me embrace every bit that I wanted to share;</li>\n<li><strong>Contributing to open-source.</strong><br />Before joining the IndieWeb community I felt that I had nothing to contribute anywhere. For the first time in my life, I began to edit wiki pages, create issues in GitHub, organize meetups, and give talks. There are all examples of not only contributing to open source but also contributing to a community;</li>\n</ul>\n<p>As I learned more about the IndieWeb, I found support and encouragement, especially as I read about the principles of plurality and using what one makes. That’s when I found a sense of freedom and permission to build something for myself — even if it only serves me and even if it has already been built by someone else too. </p>\n<h3>Creating A Personal Website And Learning From It</h3>\n<p>How many times does one have the opportunity to build a website from scratch at work? When you have a job in a really big company it is an unbelievably bureaucratic process to change anything we consider “base code”, especially how to choose a particular flavor of framework. I couldn’t believe I was so excited to write every cool thing inside an <code>&#60;head&#62;</code> tag! I’ve lost count of how many “Hello worlds” I’ve created and binned in my lifetime when I had a real “product” to build: me. </p>\n<p>When I began my quest to have an IndieWeb blog I chose to build almost everything from scratch but it isn’t necessarily the only option. If someone wants a full-fledged Indie Website without coding, there are <a href=\"https://indieweb.org/Getting_Started#IndieWeb_Services\">services that support IndieWeb</a> (<a href=\"https://micro.blog/\">Micro.blog</a> for example) as well as <a href=\"https://indieweb.org/Getting_Started#IndieWeb_CMS_and_Hosting\">some known CMS</a> such as WordPress. </p>\n<p>At the time, on my daily job, I was mostly writing JavaScript so I felt that this was an opportunity to do something a little bit different. I started to follow a couple of IndieWeb websites that were using <a href=\"https://www.staticgen.com/\">static website generators</a> and right now I am using <a href=\"https://www.11ty.dev/\">Eleventy</a>. My decision was based on visiting IndieWeb blogs that I liked that were <a href=\"https://indieweb.org/Eleventy\">also using this particular static website generator</a> and looking up their code in Github. There isn’t a right or wrong answer here.</p>\n<p>Building my personal website and blog from scratch forced me to refresh my HTML, <a href=\"https://www.smashingmagazine.com/2018/04/designing-accessibility-inclusion/\">accessibility</a>, and CSS knowledge (with the bonus of no one telling me I wasn’t allowed to use the latest CSS cool things). As I began to <a href=\"https://indiewebify.me/\">IndieWebify</a> myself, I learned so many new things! For example:</p>\n<ul>\n<li><a href=\"https://jamstack.org/\">Jamstack</a> (a stack that generates static code that doesn’t depend on a web server); </li>\n<li><a href=\"https://indieweb.org/microformats\">Microformats</a> (extensions to HTML represent commonly published things like people, locations, blog posts and more. They provide an API to the information on your website);</li>\n<li><a href=\"https://indieweb.org/Micropub\">Micropub</a> (which is a standard API for creating content on a website); </li>\n<li><a href=\"https://indieweb.org/Micropub\">Microsub</a> (provides a standardized way for <a href=\"https://indieweb.org/reader\">reader</a> apps to interact with <a href=\"https://indieweb.org/feeds\">feeds</a>);</li>\n<li><a href=\"https://indieweb.org/Webmention\">Webmentions</a> (a standard that allows you to notify another site that you've interacted with them);</li>\n<li><a href=\"https://indieweb.org/IndieAuth\">Web Sign In / IndieAuth</a> (a federated login protocol for Web sign-in that allows you to use your own domain to sign in to other sites and services);</li>\n</ul>\n<p>Owning my content made me want to connect to APIs of existing “corporate websites” and also, where possible, automating the process of syndicating to them when I share something (also known as <a href=\"https://indieweb.org/POSSE\">POSSE</a>). </p>\n<p>Now, the IndieWeb doesn’t require one to automate this process. You’re already adhering to the idea by publishing on your own domain and sharing the link to the original manually, for example, on Twitter! But the possibility to automate this process exists too and it is a great experiment. Similar to “what should you use to build your own website”, there is no right answer — as long as it works. </p>\n<p>Exploring how this could work, led me to experiment using services like <a href=\"https://ifttt.com/connect/feed/twitter\">IFTTT to connect my RSS feed to my Twitter account</a>. Other times, it made me navigate for hours in GitHub to see how other people <a href=\"https://mxb.dev/blog/syndicating-content-to-twitter-with-netlify-functions/\">built their own services to automatically publish on social media from their websites</a>. </p>\n<p>There are still many things I want to build and learn. For example, when I was able to bring my content from a corporate website into my server I grew the desire to optimize that output, so I began to make changes on my deployment build. This is something that would likely not happen at work or maybe I wouldn’t find the inspiration or need to build for anything else.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/01fb2551-7001-4a7d-bad6-aef30d764755/3-autonomy-online-indieweb.png\" /></p>\n<p>A snapshot of POSSE and IndieWeb posts. The flow begins on a personal website, syndicated to social media where interactions are backfeed to the original blog post. The original blog post can also receive and show interactions from other blogs via Webmentions. </p>\n<p>Building my personal website and blog into my playground has been the place where I’ve learned the most. It is where I can experiment, write, build, try, and learn without censorship or limitations. </p>\n<p>An unexpected consequence is that I felt more confident in writing on my blog compared to social media. Social media feels like a tiny stage with a massive audience compared to my blog that allows me to have a massive stage production but only perform to those who want to be there. I have control of who can interact with it (by not having comments available) and plenty of room to express myself without having to censor what I do. </p>\n<p>So I also began to blog more and after I blog, I share on social media because we can then have the best of both worlds. My content may be buried by an algorithm in social media but that can never happen on my own personal website. </p>\n<p>With <a href=\"https://indieweb.org/Webmention\">Webmentions and publisher services</a>, I can see what interactions my blog posts had on some social media websites. In order to receive Webmentions, you must have a Webmention endpoint. Luckily, lots of people have shared <a href=\"https://webmention.net/implementations/\">ways of how you can build one</a>. While I still haven’t dared to create mine from scratch, I’ve been using a service called <a href=\"https://webmention.io/\">Webmentio.io</a> to create and host my endpoint so that I can receive Webmentions. As for sending them, sometimes I do it manually using <a href=\"https://telegraph.p3k.io/\">Telegraph</a> but I’ve recently had a go at automating that process as well using <a href=\"https://webmention.app/\">Webmention.app</a>. </p>\n<p>Other great services, like <a href=\"https://brid.gy/\">Bridgy</a>, send Webmentions for comments/replies, likes, and reposts on some social media websites like Twitter which also helps the process of “<a href=\"https://indieweb.org/backfeed\">backfeeding</a>” the interactions back to the original post. I recommend experimenting with existing services as it may be a bit overwhelming to build everything from scratch. </p>\n<p>By slowly creating an alternative to the corporate web, one can have one place to document and share — a fixed place that anyone at any time can go back to whenever they need. All this while keeping the door open for all the good things that corporate web offers with the bonus of a very personalized touch.</p>\n<p>My current website is a constant work in progress but I have a lot of joy when I scroll through my archives. I am always excited to improve it and try new things, I can break it and fix it at my own pace and I don’t have a deadline on it. It is my safe space.</p>\n<h3>Where To Begin</h3>\n<p>The IndieWeb community is open for everyone. You can start today by buying your domain name and <a href=\"https://github.com/indieweb/blank-gh-site\">building</a> a <a href=\"https://indieweb.org/homepage\">homepage</a>. With this single step alone, you will already have one place that anyone in the world can visit to be in touch with you. </p>\n<p>Ever since joining the community, I participated and organized events, met great creators, and challenged myself with not only code but also in topics like <a href=\"https://www.smashingmagazine.com/2019/05/gdpr-epr-cookiepro/\">privacy</a> and <a href=\"https://www.smashingmagazine.com/2020/04/ethical-design-handbook-followup/\">ethics</a>. I discovered new and fantastic personal websites and blogs that I probably wouldn’t find via social media and felt less alone in this constant journey of learning in our industry.</p>\n<p>If you relate to anything I’ve said above and would like to get started there is a <a href=\"https://indieweb.org/Getting_Started\">page</a> that goes into more detail. We have an <a href=\"https://indieweb.org/discuss\">online chat room</a> and <a href=\"https://events.indieweb.org/\">weekly community meet-ups</a> where you can connect with other members of the IndieWeb community who are happy to share their experiences and answer questions.</p>\n<p>Dive straight into some welcoming guides built by community members (that anyone can contribute to) like <a href=\"https://indiewebify.me/\">IndieWebify.me</a> and the <a href=\"https://indiewebguides.org/guide-2/\">IndieWeb Guides</a>. I also recommend looking out for blog posts with <a href=\"https://www.jvt.me/posts/2019/10/20/indieweb-talk/\">IndieWeb</a> introductions on personal websites as they all have different voices that may match your way of learning.</p>\n<p>The wonderful thing about the IndieWeb community is that you’re welcome to do what works for you. It isn’t about following trends and there isn’t only one ‘right way’ to build things — just your way. </p>\n","descriptionType":"html","publishedDate":"Thu, 27 Aug 2020 11:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/12a07f10-edcb-4e4f-8045-5ba1da468360/indieweb-autonomy-online.png","linkMd5":"db8f89eda9d79fba0a32a36340d2b29a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn87@2020_1/2020/09/05/07-59-16-778_999505b5277d2a7a.webp","destWidth":1201,"destHeight":631,"sourceBytes":234238,"destBytes":49200,"author":"hello@smashingmagazine.com (Ana Rodrigues)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/12a07f10-edcb-4e4f-8045-5ba1da468360/indieweb-autonomy-online.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b90fa8c7-d63b-4e89-80e2-04b896c68a26/1-autonomy-online-indieweb-preview.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bbbc6354-9b73-4060-a6ad-bf3a4641c1f2/2-autonomy-online-indieweb.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn4@2020_1/2020/09/05/07-59-17-792_31984b8be523769a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/01fb2551-7001-4a7d-bad6-aef30d764755/3-autonomy-online-indieweb.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn87@2020_1/2020/09/05/07-59-23-071_063da7f3af0e5c72.webp"},"publishedOrCreatedDate":1599292755732},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"A Smashing Guide To The World Of Search Engine Optimization","link":"https://smashingmagazine.com/2020/08/smashing-guide-search-engine-optimization/","description":"<p>Search engine optimization is essential to most websites. <a href=\"https://www.forbes.com/sites/tjmccue/2018/07/30/seo-industry-approaching-80-billion-but-all-you-want-is-more-web-traffic/\">The industry is worth more than $70 billion a year</a>, and it’s only going to grow. It has specialists, sub-specialists, thought leaders, dedicated publications, fantastically complex tools, and constant uncertainty at its heart. As Bob Dylan says, it’s just a shadow we’re all chasing.</p> \n<p>All the more reason to stay sharp, no? Every tweak to major search engine algorithms sends shockwaves throughout the web. For those who don’t follow the SEO space it can be easy to lose track of the latest trends, authorities, and resources. </p> \n<p>That’s what this page is for. It will break down SEO’s hot topics, common questions, and the best resources for staying up to date with that world. As such, this isn’t so much a guide to SEO as it is a guide to <em>the world of SEO</em>. Think of it as a cliff-notes, a primer for those looking to top up their knowledge and understand the latest trends.</p> \n<p>For those really in a rush to get back into the groove, skip ahead to the <a href=\"https://smashingmagazine.com/2020/08/smashing-guide-search-engine-optimization/#smashing-seo-cheat-sheet\">cheat sheet</a> rounding up all the resources included in this piece. As for the rest of you, on we go. It’s quite Google-heavy, because <a href=\"https://www.statista.com/statistics/216573/worldwide-market-share-of-search-engines/\">Google currently holds 85%+ market share</a>, but rest assured the points apply to the likes of Baidu and DuckDuckGo as well.</p> \n<p>And remember, this is a live document. If there’s something we’ve missed, tell us. In a world as fast-changing as SEO no resources can afford to sit on their hands.</p> \n<h3>Why SEO Matters</h3> \n<p>We won’t linger on this point, but it’s useful to remind ourselves what SEO is, why it’s important, and how it has evolved over the years. Keeping the foundational principles in mind allow you to see the woods rather than the trees. </p> \n<p>So, in a nutshell, search engine optimisation is the means by which websites appear in search engines like Google, Bing, Baidu, and DuckDuckGo. It remains one of the best ways for websites to be found. <a href=\"https://99firms.com/blog/search-engine-statistics/#gref\">More than 90% of web traffic comes through search engines</a>, with Google alone processing trillions of searches a year. If you want your website to be seen, you want to be appearing in relevant search results. </p> \n<p>Although SEO <a href=\"https://sparktoro.com/blog/the-dirty-secret-to-ranking-1-on-google-part-1-of-3/\">isn’t controversy-free</a>, it is in principle the great equalizer. Positions can’t be bought; they’re based on relevance and quality. It is in the interest of search engines to deliver the best results possible, so SEO is the process by which a site becomes the best results possible.</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4954dee-3b1f-44e7-8bac-4aef8bef661b/search-engine-cartoon.png\" /></p> \n<p>In a word, the appeal of SEO is <strong>traffic</strong>. It’s getting people to drop by and hopefully stick around. More traffic means more readers, more viewers, more customers, more attention. </p> \n<p>Whatever your motivation is, the game is fundamentally the same. From content to site design, implementing makes websites better. Design is clearer and content is more focused, with visitors’ needs always front and centre. In a sense it gives you a 3D vision of the web, seeing web experiences from both human and computer perspectives.</p> \n<p>Despite quick-fix guides to the contrary, SEO is best not retrofitted. As Suzanne Scacca writes, <a href=\"https://www.smashingmagazine.com/2020/02/seo-web-design-process/\">SEO belongs at the heart of the web design process</a>. It can’t — and shouldn’t — be pushed off to writers or SEO executives. It is a sitewide concern, requiring sitewide attention. </p> \n<h3>Hot Topics</h3> \n<p>If you’re not comfortable with the basics of SEO — meta tags, alt text, <a href=\"https://www.smashingmagazine.com/2018/07/linkbuilding-the-citizens-field-guide/\">link building</a>, etc. — this page is not for you. This piece assumes a certain amount of foundational knowledge. Don’t panic, though, we won’t leave you hanging. Here are several terrific resources for getting started from scratch:</p> \n<ul> \n <li><a href=\"https://moz.com/beginners-guide-to-seo\">Moz’s Beginner’s Guide to SEO</a></li> \n <li><a href=\"https://www.searchenginejournal.com/seo-101/\">SEO for Beginners</a> by <em>Search Engine Journal</em></li> \n <li><a href=\"https://neilpatel.com/what-is-seo/\">SEO Made Simple</a> by Neil Patel</li> \n <li><a href=\"https://support.google.com/webmasters/answer/7451184?hl=en\">Google’s SEO Starter Guide</a></li> \n</ul> \n<p>As for the rest of you, what follows are some of the SEO space’s slightly more technical hot topics, complete with conventional wisdom and resources for keeping up with their evolutions. </p> \n<h4>Great Content</h4> \n<p>I had to put this first. The sheer amount of data involved in SEO makes it easy to lose sight of an important fact: <strong>you’re making websites for people, not search engines</strong>. As corny as it sounds, in the long term the best way to perform well in organic search is to be the best you possible. </p> \n<p>Search engines value good content above all else. However much the intricacies of SEO change, this remains true. It’s a rock solid foundation for SEO. Optimising a brilliant website is easy; optimising a bad one is hard, and often leads to black hat behaviour. (More on that below.) Yes, there are poorly optimised websites that perform well in search, for a variety of reasons, but grumbling about will get you nowhere. </p> \n<p>What does ‘good content’ mean in concrete terms? It’s not as arbitrary as you might think. Search engines generally keep their cards close to their chest, but where content quality is concerned they’re as transparent as you could hope. </p> \n<p>For those out of the SEO loop there are few better ways of getting up to speed than reading through <a href=\"https://support.google.com/websearch/answer/9281931?hl=en\">Google’s latest Search Quality Evaluator Guidelines</a>. Why guess what search engines want when they’ve written a book’s worth of documentation on the subject? Topics covered in the latest edition include:</p> \n<ul> \n <li>Expertise, Authoritativeness, and Trustworthiness (E-A-T),</li> \n <li>Your Money or Your Life (YMYL) Pages,</li> \n <li>The reputation of websites and creators,</li> \n <li>Mobile user needs,</li> \n <li>Auto-generated content,</li> \n <li>Deceptive page design,</li> \n <li>What low quality pages look like.</li> \n</ul> \n<p>Whether you’re a designer or a copywriter, this is all valuable information. </p> \n<p>Say what you like about Google’s more nefarious practices, but where organic search is concerned they want websites to be goodie two shoes. Write brilliant articles; build fast, practical sites; use beautiful visuals; design ethically; be transparent about who you are and what you do; and never, ever let SEO be the tail that wags the dog. Quality will win out in the end.</p> \n<h4>Accessibility</h4> \n<p>Happily, the web development space seems to be warming up to talk of accessibility. There is plenty of natural overlap between SEO and accessibility, though sadly there is currently little evidence that <em>super</em> accessible websites get a boost in search. Accessibility barely features in Google’s mammoth Search Quality Guidelines document.</p> \n<p>There is, however, a huge amount of overlap between accessibility best practice and SEO best practice. These include:</p> \n<ul> \n <li>Image alt text,</li> \n <li>Descriptive title and header tags,</li> \n <li>Video transcriptions,</li> \n <li>Content sections,</li> \n <li>Clear, logical sitemaps,</li> \n <li>Colour contrast,</li> \n</ul> \n<p>Almost everything worth doing for its own sake becomes SEO best practice eventually, so I’m inclined to endorse accessibility on both counts. The <a href=\"https://www.w3.org/TR/WCAG20/\">Web Content Accessibility Guidelines</a> are a great place to start, especially the <a href=\"https://www.w3.org/TR/UNDERSTANDING-WCAG20/intro.html#introduction-fourprincs-head\">Four Principles of Accessibility</a>. </p> \n<p><a href=\"https://webaim.org/projects/million/\">WebAIM</a> publishes annual reports on web accessibility, and <a href=\"https://globalaccessibilityawarenessday.org/\">Global Accessibility Awareness Day</a> is a fantastic hub for events and campaigns. Also, to get a Smashing plug in, <a href=\"https://www.smashingmagazine.com/2018/04/designing-accessibility-inclusion/\">Steven Lambert’s piece on designing for accessibility and inclusion</a> breaks the topic down splendidly.</p> \n<h4>The Curious Case Of JavaScript</h4> \n<p>JavaScript has grown into the third pillar of web design — joining HTML and CSS. The language allows for all manner of fancy interactive features that aren’t possible on static sites. That sophistication has brought with it some confusion where SEO is concerned.</p> \n<p>Can JavaScript-heavy websites perform well in search? Yes, they can and do. When issues arise it’s almost always in the indexing process, when search engines crawl and render web pages for their databases.</p> \n<p>Google has a finite crawl budget. If your page takes ages to load, there’s a decent chance search engines will skip over it. <a href=\"https://developers.google.com/speed/docs/insights/BlockingJS\">Render-blocking JavaScript is also frowned upon</a>, especially for above the fold content. If possible, execute scripts after the page is loaded. </p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a5fb82a-1680-4a17-8ad0-14b8365bb55f/1-smashing-guide-search-engine-optimization.png\" /></p> \n<p>In short, let search engines see pages the way people see them. Google Search Console has a <a href=\"https://support.google.com/webmasters/answer/9012289?hl=en\">URL Inspection Tool</a> that will show you what it retrieves, what it renders, and any glaring issues.</p> \n<p>Developers should not shy away from JavaScript for fear of angering the SEO gods. Yes, bloated, slow, gratuitous JavaScript will hurt your website’s search performance, but applied properly the language can also improve it. Indeed, formats like JSON are a staple of more sophisticated SEO markup, like Schema.</p> \n<p>Here are some resources for getting into the weeds of JavaScript and SEO:</p> \n<ul> \n <li><a href=\"https://developers.google.com/search/docs/guides/javascript-seo-basics\">Understanding the JavaScript SEO Basics</a> by Google</li> \n <li><a href=\"https://developers.google.com/search/docs/guides/fix-search-javascript\">Fix Search-related JavaScript problems</a> by Google</li> \n <li><a href=\"https://www.smashingmagazine.com/2015/11/technical-seo-2015-wiring-websites-organic-search/\">Technical SEO — Fundamental Principles</a> by Tom Bennett</li> \n <li>For the visual learners out there, <a href=\"https://www.youtube.com/playlist?list=PLKoqnv2vTMUPOalM1zuWDP9OQl851WMM9\">Google Webmasters has a series dedicated to JavaScript SEO</a>.</li> \n</ul> \n<p>Remember also that the more solid your SEO foundations are, the less pressure there is on JavaScript to perform. Think of it as something that enhances the browsing experience rather than carries the water.</p> \n<h4>Structured Data</h4> \n<p>Metadata has come a long way since the early days of SEO. Meta titles and descriptions remain important, but there’s a whole other level becoming increasingly difficult to ignore — structured data. </p> \n<p>Structured data, more specifically <a href=\"https://schema.org/\">Schema</a>, has been adopted by all the major search engines. Part of the Semantic Web push to make online data machine-readable, it allows you to label content with specificity that simply wasn’t possible before. Structured data is how search engines display rich results like recipes, reviews excerpts, event details, and more. </p> \n<p>Schema vocabulary works alongside Microdata, RDFa, and JSON-LD formats, and there are plenty of free tools to help you learn the language and how to implement it. These include:</p> \n<ul> \n <li><a href=\"https://www.google.com/webmasters/markup-helper/u/0/\">Google’s Structured Data Markup Helper</a></li> \n <li><a href=\"https://search.google.com/structured-data/testing-tool/u/0/\">Google’s Structured Data Testing Tool</a>.</li> \n</ul> \n<p>Search engines are ominously clever, but they’re not <em>that</em> clever. Structured data removes much of the guesswork from the crawling process, making it easier to understand and index content for relevant searches. </p> \n<p>For a more in-depth introduction to the topic I humbly point you towards my article on <a href=\"https://www.smashingmagazine.com/2020/04/structured-data-design-process/\">Baking Structured Data Into the Design Process</a>.</p> \n<h4>Site Speed</h4> \n<p>Search engines like fast websites. They’re easier to crawl, and they’re easier for users to browse. It doesn’t matter how wonderful your site is, if it takes ages to load people aren’t going to stick around to find out. Search engines are similarly impatient.</p> \n<p>Like most things SEO, site speed best practice covers a spectrum all the way from common sense to highly technical tinkering. On the common sense side, don’t upload 12MB images when 200KB ones look exactly the same. If you absolutely must have massive high resolution images, link away to them instead. <a href=\"https://httparchive.org/reports/state-of-images\">Images are the most popular resource type on the web</a>, so don’t skimp on the compression. Most people will be browsing on their phones anyway.</p> \n<p>Beyond that you get into more technical waters, though the goal remains the same: load quickly and smoothly. Streamline your code, cut out superfluous HTML, CSS, and JavaScript. Most importantly, as always, test what you’ve done. Site speed isn’t a theoretical concern; it’s a practical one.</p> \n<p>Typically, Google has a dedicated tool for that purpose:</p> \n<ul> \n <li><a href=\"https://developers.google.com/speed/pagespeed/insights/\">PageSpeed Insights</a></li> \n</ul> \n<p>It will tell you exactly what’s wrong with a URL’s content and what you can do to improve it. Site speed is no great mystery; more often than not it’s simply a case of trimming the fat.</p> \n<h4>Mobile First</h4> \n<p>Most web browsing now takes place on mobile devices, not desktops. It is for this reason that <a href=\"https://webmasters.googleblog.com/2020/03/announcing-mobile-first-indexing-for.html\">Google will move to mobile-first indexing for all websites in September 2020</a>. What that means is mobile renders of a page are what will be indexed, not desktop. That’s where you need to bring your A-game.</p> \n<p>People are understandably drawn to the broad canvas offered by desktop-first design, but it’s not where our skills are most useful. If your website is a work of art on desktop but a mess on mobile your SEO will suffer — and that’s to say nothing of user experience.</p> \n<h5>More Articles On Mobile Usability</h5> \n<ul> \n <li><a href=\"https://www.smashingmagazine.com/2018/06/local-search-mobile-web-design/\">How Mobile Web Design Affects Local Search (And What To Do About It)</a> by Suzanne Scacca</li> \n <li><a href=\"https://www.smashingmagazine.com/2015/03/assessing-mobile-usability-google-webmaster-tools/\">Assessing Mobile Usability With Google Webmaster Tools</a> by Tim Jenen</li> \n</ul> \n<p>Think with your mobile cap on. Are ads monopolising above the fold space? Google dedicates 20 pages of its <a href=\"https://static.googleusercontent.com/media/guidelines.raterhub.com/en//searchqualityevaluatorguidelines.pdf\">Search Quality Guidelines</a> to understanding mobile user needs, covering everything from search engine result pages (SERPs) to location-specific search queries. Again, what search engines want needn’t be a mystery.</p> \n<h3>The Dark Side Of SEO</h3> \n<p>It would be remiss not to address the seedier side of SEO. There’s a lot of money to be made from ranking well for popular search terms. One of the main reasons search engines are so secretive about how they work is they know a number of websites will try to game the system in the name of Quick Wins™. </p> \n<p>Black Hat SEO is quite a vibrant world in its own mustache-twirling way. From cramming keywords out of sight to purchasing backlinks from reputable websites, there’s an almost cartoonish instinct among some to avoid the hard work and self-improvement that good SEO entails.</p> \n<p>Has black hat SEO worked in the past? Sometimes, yes. Sometimes very well indeed. However, search engines are always on the watch for bad behaviour, and <a href=\"https://www.link-assistant.com/blog/seo-epic-fails-5-big-names-penalized-by-google-for-going-wrong-with-their-seo/\">they will punish it when they find it</a>. The damage can be irreparable and besides, nobody likes a sleazeball. </p> \n<p>There’s no substitute for quality long-term SEO strategies. Which brings us to...</p> \n<h3>Playing The Long Game</h3> \n<p>SEO is a marathon, not a sprint. Implementing best practice can produce immediate results, but long-term performance requires long-term maintenance. Besides, the journey is more important than the destination, isn’t it?</p> \n<p>This article does not presume to give you a comprehensive guide to SEO. This is a resource for those who want to stay up to date with the industry as part of long-term self-improvement. In that spirit, the cheat sheet below is one of documentation, tools, journalists, thought leaders, podcasts, and other resources. </p> \n<p>A reminder also that this is a live document, so don’t be shy about suggesting adjustments and additions as the SEO world continues to change. </p> \n<p>Happy searching. </p> \n<h3>A Smashing SEO Cheat Sheet</h3> \n<p>This is not an exhaustive list, but hopefully there is enough for you to fall down the SEO rabbit hole. Please note that this cheat sheet will be updated occasionally, so if something/someone is missing, feel free to let us know! We’ll consider it for inclusion the next time we update the sheet.</p> \n<h4>Documentation</h4> \n<ul> \n <li><a href=\"https://support.google.com/websearch/answer/9281931?hl=en\">Google’s Search Quality Evaluator Guidelines</a></li> \n <li><a href=\"https://www.bing.com/webmaster/help/webmaster-guidelines-30fba23a\">Bing’s Webmaster Guidelines</a></li> \n <li><a href=\"https://www.w3.org/TR/WCAG20/\">W3C’s Web Content Accessibility Guidelines</a></li> \n <li><a href=\"https://support.google.com/webmasters/answer/1061943\">Overview of Google crawlers</a></li> \n <li><a href=\"https://schema.org/docs/documents.html\">Schema.org documentation</a></li> \n <li><a href=\"https://renderingseo.com/\">Rendering SEO Manifesto</a></li> \n</ul> \n<h4>Authorities And Journalists</h4> \n<ul> \n <li><a href=\"https://twitter.com/searchliaison\">Google SearchLiaison</a>, the public face of Google Search</li> \n <li><a href=\"https://dannysullivan.com/\">Danny Sullivan</a>, the public face of the public face of Google Search</li> \n <li><a href=\"https://twitter.com/JohnMu\">John Mueller</a>, Webmaster Trends Analyst at Google</li> \n <li><a href=\"https://ye.gg/\">Gabriel Weinberg</a>, founder of DuckDuckGo</li> \n <li><a href=\"https://neilpatel.com/blog/\">Neil Patel</a>, clear, accessible SEO marketing whiz</li> \n <li><a href=\"https://not-a-robot.com/\">Jamie Alberico</a>, technical SEO guru</li> \n <li><a href=\"https://twitter.com/lorenbaker\">Loren Baker</a>, founder of <em>Search Engine Journal</em></li> \n <li><a href=\"https://twitter.com/rustybrick\">Barry Schwartz</a>, SEO journalist extraordinaire</li> \n <li><a href=\"https://www.womenintechseo.com/speakers/\">Women in Tech SEO</a> is a fantastic resource for experts across the SEO spectrum</li> \n</ul> \n<h4>Publications, Blogs, &amp; Forums</h4> \n<ul> \n <li><a href=\"https://webmasters.googleblog.com/\">Google Webmaster Central Blog</a> (not as ominous as it sounds)</li> \n <li><a href=\"https://www.searchenginejournal.com/\"><em>Search Engine Journal</em></a></li> \n <li><a href=\"https://searchengineland.com/\"><em>Search Engine Land</em></a></li> \n <li><a href=\"http://www.thesempost.com/\"><em>The SEM Post</em></a></li> \n <li><a href=\"https://www.searchenginewatch.com/\"><em>Search Engine Watch</em></a></li> \n <li><a href=\"https://www.seroundtable.com/\"><em>Search Engine Roundtable</em></a></li> \n <li><a href=\"https://www.webmasterworld.com/\"><em>WebmasterWorld</em></a></li> \n <li><a href=\"https://www.seobythesea.com/\">SEO by the Sea</a></li> \n <li><a href=\"https://www.semrush.com/blog/\">SEMrush blog</a></li> \n <li><a href=\"https://spreadprivacy.com/\">DuckDuckGo blog</a></li> \n <li><a href=\"https://moz.com/blog\">The Moz Blog</a></li> \n <li><a href=\"https://yoast.com/seo-blog/\">Yoast’s SEO blog</a></li> \n <li>The <a href=\"https://www.reddit.com/r/SEO/\">/r/SEO</a> subreddit</li> \n <li>The <a href=\"https://www.reddit.com/r/TechSEO/\">/r/TechSEO</a> subreddit.</li> \n</ul> \n<h4>Tools</h4> \n<h5>Free</h5> \n<ul> \n <li><a href=\"https://search.google.com/search-console/about\">Google Search Console</a></li> \n <li><a href=\"https://analytics.google.com/analytics/web/\">Google Analytics</a></li> \n <li><a href=\"https://trends.google.com/trends/\">Google Trends</a></li> \n <li><a href=\"https://search.google.com/test/rich-results\">Google Rich Results Test</a></li> \n <li><a href=\"https://search.google.com/test/mobile-friendly\">Google Mobile-friendly Test</a></li> \n <li><a href=\"https://technicalseo.com/tools/schema-markup-generator/\">Merkle’s Schema Markup Generator</a></li> \n <li><a href=\"https://web.dev/vitals/\">Web Vitals</a></li> \n <li><a href=\"https://developers.google.com/web/tools/lighthouse/\">Lighthouse</a></li> \n <li><a href=\"https://developers.google.com/speed/pagespeed/insights/\">PageSpeed Insights</a></li> \n <li><a href=\"https://ahrefs.com/keyword-generator\">ahrefs Keyword Generator</a></li> \n <li><a href=\"https://ahrefs.com/broken-link-checker\">ahrefs Broken Link Checker</a></li> \n <li><a href=\"https://chrome.google.com/webstore/detail/keyword-surfer/bafijghppfhdpldihckdcadbcobikaca?hl=en\">Keyword Surfer</a> plugin for Chrome</li> \n</ul> \n<h5>Freemium/Paid</h5> \n<ul> \n <li><a href=\"https://moz.com/products/pro/seo-toolbar\">MozBar</a></li> \n <li><a href=\"https://www.semrush.com/\">SEMrush</a></li> \n <li><a href=\"https://www.screamingfrog.co.uk/seo-spider/\">Screaming Frog</a></li> \n <li><a href=\"https://yoast.com/\">Yoast</a></li> \n <li><a href=\"https://keyword-hero.com/\">Keyword Hero</a></li> \n <li>A number of <a href=\"https://ahrefs.com/\">ahrefs tools</a></li> \n</ul> \n<h4>Podcasts And Video Series</h4> \n<ul> \n <li><a href=\"https://www.youtube.com/googlewebmasters/community\">Google Webmaster hangouts</a></li> \n <li><a href=\"https://www.youtube.com/channel/UCOOJMCKqwalD1HEKAObvMpA\">Crawling Mondays</a> by Aleyda Solis</li> \n <li><a href=\"https://www.searchenginejournal.com/category/search-engine-journal-show/\"><em>The Search Engine Journal Show</em></a> podcast</li> \n <li><a href=\"https://moz.com/blog/category/whiteboard-friday\">Whiteboard Friday</a> at Moz</li> \n <li>The <a href=\"https://edgeofthewebradio.com/\">EDGE of the Web</a> podcast</li> \n <li><a href=\"https://courses.mariehaynes.com/search-news-you-can-use/\">Search News You Can Use</a> by Maria Haynes</li> \n <li><a href=\"https://www.youtube.com/playlist?list=PLKoqnv2vTMUPOalM1zuWDP9OQl851WMM9\">JavaScript SEO video playlist</a> by Google Webmasters</li> \n</ul> \n<h4>Conferences</h4> \n<ul> \n <li><a href=\"https://www.distilled.net/events/searchlove-london/\">SearchLove</a></li> \n <li><a href=\"https://www.brightonseo.com/\">BrightonSEO</a></li> \n <li><a href=\"https://marketinglandevents.com/smx/\">Search Marketing Expo (SMX)</a></li> \n <li><a href=\"https://moz.com/mozcon\">MozCon</a></li> \n <li><a href=\"https://searchcon.events/\">SearchCon</a></li> \n</ul>","descriptionType":"html","publishedDate":"Fri, 14 Aug 2020 09:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1099fbe7-7cfb-415d-b3ec-73741005a514/smashing-guide-search-engine-optimization.png","linkMd5":"9ab841fbcb7541b22c992e4217b61978","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn7@2020_1/2020/09/05/07-59-17-262_d2c89f38c8a5c984.webp","destWidth":1201,"destHeight":631,"sourceBytes":243660,"destBytes":53702,"author":"hello@smashingmagazine.com (Frederick O’Brien)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1099fbe7-7cfb-415d-b3ec-73741005a514/smashing-guide-search-engine-optimization.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4954dee-3b1f-44e7-8bac-4aef8bef661b/search-engine-cartoon.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn47@2020_2/2020/09/05/07-59-28-671_cc673c5e15e2cd25.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a5fb82a-1680-4a17-8ad0-14b8365bb55f/1-smashing-guide-search-engine-optimization.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn27@2020_2/2020/09/05/07-59-18-819_f6db196284a6c05a.webp"},"publishedOrCreatedDate":1599292755738},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Community Resources, Weekly Newsletter, And Boosting Skills Online","link":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","description":"<p>Improvement is a matter of steady, ongoing iteration. If you’ve been around for a good while, you’ll know that Smashing has been through a good number of changes in the past: a new design, a new layout, a new technical stack, and so much more. Still, it was always done with quality content in mind.</p> \n<p>For example, we recently rearranged the navigation bar at the top of the page — have you noticed? Take a closer look, and you’ll find some neatly <a href=\"https://www.smashingmagazine.com/guides/\">curated guides</a> on major topics covered in the magazine, conference talks, and elsewhere. Each guide brings together the best we have on that subject, to help you explore and learn. And speaking of guides, we just published a comprehensive <a href=\"https://www.smashingmagazine.com/smashing-guide-search-engine-optimization/\">SEO guide</a> earlier today!</p> \n<p>Alongside our guides, printed books, eBooks and printed magazine, we’re thrilled to have yet another addition to our smashingly cherished gems: meet our brand new <em><a href=\"https://www.smashingmagazine.com/2020/08/checklist-cards-release/\">Interface Design Patterns Checklists</a></em>. Co-founder of Smashing Magazine, Vitaly Friedman, has been collecting, curating and refining each checklist for years — we’re convinced that this deck of cards will prove to always be useful when designing and building <em>any</em> interface component. Really.</p> \n<p>If you’d like to (virtually) meet Vitaly himself and dive deeper into the bits and pieces of smart interface design patterns, you can attend his upcoming online workshop on <a href=\"https://www.smashingmagazine.com/2020/08/checklist-cards-release/#online-workshop\">Smart Interface Design Patterns</a> (2020 Edition) where you’ll explore hundreds of practical examples over 5×2.5h live sessions.</p> \n<p><em>Please note that the cards are <strong>currently only available in PDF format</strong> — we’re doing our best to print them as soon as it’s possible to ship worldwide!</em></p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/90056e86-2fba-4ce6-9af8-8ef9e88aa186/pdf-checklists-smart-interface-design-patterns.png\" /></p> \n<h3>Upcoming Online Events: See You There?</h3> \n<p>With still so many COVID-coaster emotions, we’re very sad about the ongoing situation and not being able to meet you in person, so we have decided to <a href=\"https://www.smashingmagazine.com/2020/07/smashingconf-online-2020/\">move all of our physical events for 2020 online</a> in order to stay connected with our dear and valued community.</p> \n<p>Despite the circumstances, we’re proud to have so many brilliant speakers on board, and to make the best of it all, you don’t even need to travel to meet them. So, we promise to deliver the same community feeling as much as possible, but from your very own home (office).</p> \n<ul> \n <li><a href=\"https://smashingconf.com/live/\">SmashingConf Live</a> (August 20–21)<br /><em>An event full of interactive and live sessions by a line-up of inspiring and knowledgeable speakers.</em></li> \n <li><a href=\"https://smashingconf.com/freiburg-2020/\">SmashingConf Freiburg Online</a> (Sept. 7–8)<br /><em>Our ‘hometown’ conference is now being moved online and open for everybody to join in!</em></li> \n <li><a href=\"https://smashingconf.com/austin-2020/\">SmashingConf Austin Online</a> (Oct. 13–14)<br /><em>We’ve combined the initial Austin and New York events that will take place in a timezone suitable to everyone.</em></li> \n <li><a href=\"https://smashingconf.com/sf-2020/\">SmashingConf San Francisco Online</a> (Nov. 10–11)<br /><em>Two full days of front-end, UX and everything else that connects us and helps us get better at what we do.</em></li> \n</ul> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/935244dd-cd15-4530-8f7c-f54d9311c5d6/2020-smashing-online-events-preview.png\" /></p> \n<p>For the conference experience, we’re using <a href=\"https://hopin.to/\">Hopin</a>. It turned out to be the best option in terms of quality, reliability and accessibility, with reception and networking area, sponsor booths and breakout sessions. To join in, no installation is needed! Before the event, we’ll send you a magic link, so you can jump right into the conference.</p> \n<h3>Learning And Networking, The Smashing Way</h3> \n<p>We know everyone’s busy — and may even have homeschooling and other things to figure out on top of that — so we want to support you while not wasting any of your precious time. We’ve <strong>broken down our workshops into 2.5h-segments across days and weeks</strong>, so that you can learn at your own pace and in your own time (<em>workshop materials and recordings included!</em>).</p> \n<p>Please do take a look at our <a href=\"https://smashingconf.com/online-workshops/registration#bundles\">bundle discounts</a> if you want to attend more than one workshop — you can save up to US$100 and have a little more to spend on ice cream! 😉</p> \n<table> \n <tbody> \n  <tr> \n   <td>August 17–31</td> \n   <td><a href=\"https://smashingconf.com/online-workshops/workshops/susan-guthrie-weinschenk\">Behavioral Design</a></td> \n   <td>Susan and Guthrie Weinschenk</td> \n   <td>Design &amp; UX</td> \n  </tr> \n  <tr> \n   <td>Aug. 19 – Sept. 3</td> \n   <td><a href=\"https://smashingconf.com/online-workshops/workshops/umar-hansa/\">Front-End Testing</a></td> \n   <td>Umar Hansa</td> \n   <td>Front-end</td> \n  </tr> \n  <tr> \n   <td>Aug. 20 – Sept. 4</td> \n   <td><a href=\"https://smashingconf.com/online-workshops/workshops/yiying-lu/\">Designing For A Global Audience</a></td> \n   <td>Yiying Lu</td> \n   <td>Design &amp; UX</td> \n  </tr> \n  <tr> \n   <td>September 1–16</td> \n   <td><a href=\"https://smashingconf.com/online-workshops/workshops/jason-lengstorf/\">Jamstack!</a></td> \n   <td>Jason Lengstorf</td> \n   <td>Front-end</td> \n  </tr> \n  <tr> \n   <td>September 10–11</td> \n   <td><a href=\"https://smashingconf.com/online-workshops/workshops/rachel-andrew-sep/\">The CSS Layout Masterclass</a></td> \n   <td>Rachel Andrew</td> \n   <td>Front-end</td> \n  </tr> \n  <tr> \n   <td>Sept. 17 – Oct. 2</td> \n   <td><a href=\"https://smashingconf.com/online-workshops/workshops/natalia-tepluhina/\">Vue.js: The Practical Guide</a></td> \n   <td>Natalia Tepluhina</td> \n   <td>Front-end</td> \n  </tr> \n  <tr> \n   <td>Sept. 22 – Oct. 6</td> \n   <td><a href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-sep/\">Smart Interface Design Patterns, 2020 Edition</a></td> \n   <td>Vitaly Friedman</td> \n   <td>Design &amp; UX</td> \n  </tr> \n  <tr> \n   <td>Nov. 12 – Nov. 27</td> \n   <td><a href=\"\">Build, Ship and Extend GraphQL APIs from Scratch</a></td> \n   <td>Christian Nwamba</td> \n   <td>Front-end</td> \n  </tr> \n </tbody> \n</table> \n<a href=\"https://smashingconf.com/\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6428a3fe-18b5-4a30-a7de-bd3b6e8dc310/topple-smashingconf-online-event.png\" /></a>Attending a Smashing online event means that you’ll be taking part in live sessions, Q&amp;As, discussion zones, challenges, and so much more! \n<a href=\"https://smashingconf.com/\">Join in the fun</a> — we provide live captioning in English, too! \n<p>By the way, in case you find yourself thinking twice about joining in a Smashing workshops because you’re worried that your boss may need just a little bit of persuasion, then we’ve got your back with a neat lil’ template: <a href=\"https://smashingconf.com/online-workshops/convince-your-boss\">Convince Your Boss</a>. Good luck!</p> \n<h3>Bi-Weekly Podcast: Full Of Inspiration And Insights</h3> \n<p>Every second Tuesday, <a href=\"https://www.smashingmagazine.com/author/drew-mclellan/\">Drew McLellan</a> talks to design and development experts about their work on the web. You can <a href=\"https://podcast.smashingmagazine.com/subscribe?_ga=2.133461517.247924306.1594759875-525544829.1594759875\">subscribe via your favorite app</a> to get new episodes as soon as they’re ready.</p> \n<p><em>Pssst.</em> By the way, is there a topic that you’d love to hear and learn more about? Or perhaps you or someone you know would like to talk about a web- and design-related topic that is dear to your hearts? We’d love to hear from you! Feel free to <a href=\"https://twitter.com/SmashingPod\">reach out to us on Twitter</a> and we’ll do our best to get back to you as soon as possible.</p> \n<table> \n <tbody> \n  <tr> \n   <td>1. <a href=\"https://www.smashingmagazine.com/2019/11/smashing-podcast-episode-1/\">What Is Art Direction?</a></td> \n   <td>2. <a href=\"https://www.smashingmagazine.com/2019/11/smashing-podcast-episode-2/\">What’s So Great About Freelancing?</a></td> \n  </tr> \n  <tr> \n   <td>3. <a href=\"https://www.smashingmagazine.com/2019/11/smashing-podcast-episode-3/\">What Are Design Tokens?</a></td> \n   <td>4. <a href=\"https://www.smashingmagazine.com/2019/12/smashing-podcast-episode-4/\">What Are Inclusive Components?</a></td> \n  </tr> \n  <tr> \n   <td>5. <a href=\"https://www.smashingmagazine.com/2019/12/smashing-podcast-episode-5/\">What Are Variable Fonts?</a></td> \n   <td>6. <a href=\"https://www.smashingmagazine.com/2019/12/smashing-podcast-episode-6/\">What Are Micro-Frontends?</a></td> \n  </tr> \n  <tr> \n   <td>7. <a href=\"https://www.smashingmagazine.com/2020/01/smashing-podcast-episode-7/\">What Is A Government Design System?</a></td> \n   <td>8. <a href=\"https://www.smashingmagazine.com/2020/01/smashing-podcast-episode-8/\">What’s New In Microsoft Edge?</a></td> \n  </tr> \n  <tr> \n   <td>9. <a href=\"https://www.smashingmagazine.com/2020/02/smashing-podcast-episode-9/\">How Can I Work With UI Frameworks?</a></td> \n   <td>10. <a href=\"https://www.smashingmagazine.com/2020/02/smashing-podcast-episode-10/\">What Is Ethical Design?</a></td> \n  </tr> \n  <tr> \n   <td>11. <a href=\"https://www.smashingmagazine.com/2020/03/smashing-podcast-episode-11/\">What Is Sourcebit?</a></td> \n   <td>12. <a href=\"https://www.smashingmagazine.com/2020/03/smashing-podcast-episode-12/\">What Is Conversion Optimization?</a></td> \n  </tr> \n  <tr> \n   <td>13. <a href=\"https://www.smashingmagazine.com/2020/04/smashing-podcast-episode-13/\">What Is Online Privacy?</a></td> \n   <td>14. <a href=\"https://www.smashingmagazine.com/2020/04/smashing-podcast-episode-14/\">How Can I Run Online Workshops?</a></td> \n  </tr> \n  <tr> \n   <td>15. <a href=\"https://www.smashingmagazine.com/2020/05/smashing-podcast-episode-15/\">How Can I Build An App In 10 Days?</a></td> \n   <td>16. <a href=\"https://www.smashingmagazine.com/2020/05/smashing-podcast-episode-16/\">How Can I Optimize My Home Workspace?</a></td> \n  </tr> \n  <tr> \n   <td>17. <a href=\"https://www.smashingmagazine.com/2020/06/smashing-podcast-episode-17/\">What’s New In Drupal 9?</a></td> \n   <td>18. <a href=\"https://www.smashingmagazine.com/2020/06/smashing-podcast-episode-18/\">How Can I Learn React?</a></td> \n  </tr> \n  <tr> \n   <td>19. <a href=\"https://www.smashingmagazine.com/2020/06/smashing-podcast-episode-19/\">What Is CUBE CSS?</a></td> \n   <td>20. <a href=\"https://www.smashingmagazine.com/2020/07/smashing-podcast-episode-20/\">What Is Gatsby?</a></td> \n  </tr> \n  <tr> \n   <td>21. <a href=\"https://www.smashingmagazine.com/2020/07/smashing-podcast-episode-21/\">Are Modern Best Practices Bad For The Web?</a></td> \n   <td>22. <a href=\"https://www.smashingmagazine.com/2020/08/smashing-podcast-episode-22/\">What Is Serverless?</a></td> \n  </tr> \n </tbody> \n</table> \n<a href=\"https://www.smashingmagazine.com/category/smashing-podcast\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf907aee-dc1b-453f-aae3-f07425e3a2ab/topple-smashing-podcast-coffeetogo.png\" /></a>Catching up with what’s new in the web industry doesn’t mean you have to be tied up to a chair and desk! Do as Topple the Cat does it: grab your headphones and stretch those legs! You can \n<a href=\"https://www.smashingmagazine.com/category/smashing-podcast\">subscribe and tune in anytime</a> with any of your favorite apps. \n<h3>Shining The Spotlight On Accessibility And Prototyping</h3> \n<p>Mark your calendars! We’ll have the great pleasure to welcome <a href=\"https://chenhuijing.com/about/\">Chen Hui Jing</a> and <a href=\"http://www.adekunleoduye.com/about/\">Adekunle Oduye</a> to our Smashing TV virtual stage. If you’d like to attend, you’ll need to install the <a href=\"https://support.zoom.us/hc/en-us/articles/207373866-Zoom-Installers?mc_cid=d8388cad2d&amp;mc_eid=230e2c755a\">Zoom client for Meetings</a>, which is available for all the main OSs. (It may take a little time to download and install, so please grab it ahead of time if you can.)</p> \n<ul> \n <li>“<a href=\"https://www.smashingmagazine.com/smashing-tv/accessibility-with-out-priorities/\">Accessibility With(out) Priorities</a>” on <strong>September 1</strong> (14:00 London time)<br /><em>Hui Jing will touch upon the reasons why this is the case, and discuss strategies to convince clients and bosses to still ‘invest’ in accessibility.</em></li> \n <li>“<a href=\"https://www.smashingmagazine.com/smashing-tv/good-bad-ugly-prototyping/\">The Good, The Bad And Ugly Of Prototyping</a>” on <strong>October 1</strong> (19:00 London time)<br /><em>Adekunle will share techniques on how prototype efficiently and effectively, how to create a framework for prototyping that fits into your organization, and how to utilize a prototype for production.</em></li> \n</ul> \n<a href=\"https://www.smashingmagazine.com/smashing-tv/\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0177efdc-7a55-48e4-b7d2-a657caa12fb4/topple-smashing-cat-recording-1200x800.png\" /></a>\n<a href=\"https://www.smashingmagazine.com/smashing-tv/\">Smashing TV</a> is a series of webinars and live streams packed with practical tips for designers and developers. \n<a href=\"https://twitter.com/SmashingMembers\">Follow @SmashingMembers on Twitter</a> for schedules, transcripts and fancy cats. \n<h3>Trending Topics On Smashing Magazine</h3> \n<p>We aim to publish a new article every single day that is dedicated to various hot topics in the web industry. You can always subscribe to our <a href=\"https://www.smashingmagazine.com/feed/\">RSS feed</a> to be among the first ones to read new content published in the magazine.</p> \n<p>Here are some articles that our readers enjoyed most and have recommended further in the past month:</p> \n<ul> \n <li>“<a href=\"https://www.smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/\">How To Create A Porsche 911 With Sketch</a>,” (full tutorial)<br /><em>written by Nikola Lazarević</em></li> \n <li>“<a href=\"https://www.smashingmagazine.com/2020/08/design-website-five-senses/\">Can You Design A Website For The Five Senses?</a>,”<br /><em>written by Suzanne Scacca</em></li> \n <li>“<a href=\"https://www.smashingmagazine.com/2020/08/application-color-schemes-css-custom-properties/\">How To Configure Application Color Schemes With CSS Custom Properties</a>,”<br /><em>written by Artur Basak</em></li> \n <li>“<a href=\"https://www.smashingmagazine.com/2020/07/css-techniques-legibility/\">Modern CSS Techniques To Improve Legibility</a>,”<br /><em>written by Edoardo Cavazza</em></li> \n <li>“<a href=\"https://www.smashingmagazine.com/2020/07/design-wireframes-accessible-html-css/\">Translating Design Wireframes Into Accessible HTML/CSS</a>,”<br /><em>written by Harris Schneiderman</em></li> \n</ul> \n<h3>Smashing Newsletter: Weekly Best Picks And News</h3> \n<div> \n <p><a href=\"https://www.smashingmagazine.com/the-smashing-newsletter/\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e2c098c0-c56e-4eb7-8148-338b6fe0c7ce/smashing-newsletter-topple-has-news.svg\" /></a>We’ve got news! We’ll be sending out a weekly edition of the Smashing Newsletter, but aiming for shorter and topic-specific issues. These may be dedicated to accessibility, or CSS, or UX — you’ll just have to wait and see! We want to bring you useful content, and to share all the cool things that we see folks doing across communities within the web industry. No third-party mailings or hidden advertising, and your support really helps us pay the bills. ❤️</p> \n</div> \n<p><em>Interested in sponsoring? Feel free to check out our <a href=\"http://provide.smashingmagazine.com/SmashingMag_SmashingConf_Partnership_2020.pdf\">partnership options</a> and <a href=\"mailto:advertising@smashingmagazine.com\">get in touch</a> with the team anytime — they’ll be sure to get back to you as soon as they can.</em></p> \n<h4>The State Of Things In 2020</h4> \n<p>With so much happening on the web every day, it’s difficult to keep track, but it’s even more difficult to pause for a moment, and a take a detailed look at where we actually are at the moment. Luckily, there are plenty of surveys and reports gathering some specific developments in a single place. <a href=\"https://2019.stateofcss.com/\">State of CSS</a> and <a href=\"https://2019.stateofjs.com/\">State of JS</a> highlight common trends in CSS and JavaScript. There are also studies on <a href=\"https://medium.com/google-design/state-of-design-systems-2019-ff5f26ada71\">Design Systems in 2019</a>, <a href=\"https://ashleynolan.co.uk/blog/frontend-tooling-survey-2019-results\">Front-End Tooling</a> and <a href=\"https://snyk.io/open-source-security-report/\">Open Source Security</a>.</p> \n<a href=\"https://twitter.com/smashingmag/status/1280422442083762176\"><img src=\"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/15e488aa-1cb5-4303-aad6-d85201f69b14.png\" /></a> \n<p>It’s good to know where you stand not only in terms of skills, but also in terms of salaries: that’s where <a href=\"https://www.levels.fyi/?compare=Slack,Microsoft,Amazon,Mozilla,Adobe&amp;track=Software%20Engineer\">Levels.FYI Salaries</a> helps, as well as <a href=\"https://uxdesignersalaries.com/\">UX Designer Salaries</a> and <a href=\"https://designcensus.org/\">Design Census 2019</a>. Plus, make sure to review <a href=\"https://lp.buffer.com/state-of-remote-work-2020\">State of Remote Work 2020</a>, highlighting trends of how to make remote work more efficient. Word of caution: some of them might be biased due to the demographics that they are targeting, so please take the insights with a grain of doubt.</p> \n<h4>Diving Into HTML And CSS Vocabs</h4> \n<p>If you often find yourself looking up the correct word to use for that one particular thing in your CSS and HTML code, we’re sure you’ll bookmark the following resources right away. Thanks to <a href=\"https://twitter.com/sakamies\">Ville V. Vanninen</a>, you can now learn the difference between doctypes, attribute names, tags, media features — all in an interactive way.</p> \n<a href=\"https://twitter.com/umaar/status/1283711971913871360\"><img src=\"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/8888751b-76bb-4e3e-b4b6-96d7c6f4e5b0.png\" /></a> \n<p>You’ll find a nice interactive <a href=\"http://apps.workflower.fi/vocabs/css/en\">list of CSS terms</a> as well as another useful one dedicated to <a href=\"http://apps.workflower.fi/vocabs/html/en\">HTML vocabulary</a> where you can click on any of the terms shown on the right side to highlight the relevant parts in the code sample presented on the page. The lists are also <a href=\"http://apps.workflower.fi/vocabs/\">available in different languages</a>.</p> \n<h4>Practical Tips For Rebranding A Product</h4> \n<p>Do we rebrand? And when is the right time to do so? A lot of product people are asking themselves these questions as their product becomes more mature. The team at Overflow was in the same situation a while ago.</p> \n<a href=\"https://blog.overflow.io/evolving-the-overflow-brand-780a791a77ec\"><img src=\"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/9bc037a8-698f-47f7-a7c8-020242726535.png\" /></a> \n<p>To reflect the evolution of their product from an easy-to-use, practical flow diagramming tool into a tool that is used for design communication and presentation workflows, they decided that it was time for a rebranding. In the article “<a href=\"https://blog.overflow.io/evolving-the-overflow-brand-780a791a77ec\">Evolving the Overflow Brand</a>”, they share their approach and what they learned along the way. Interesting ideas and takeaways that you can incorporate into your own redesign process. One that particularly helps make the challenge more approachable: Think of your product as a human being and imagine what they are like and how they feel to visualize your brand’s new identity.</p> \n<h4>Disabled Buttons And How To Do Better</h4> \n<p>“<a href=\"https://axesslab.com/disabled-buttons-suck/\">Disabled buttons suck.</a>” It’s a strong statement that Hampus Sethfors makes against this widespread UI pattern. As Hampus argues, disabled buttons usually harm the user experience, causing irritation and confusion when nothing happens when a button that carries an action word like “Send” is clicked. But they do not only prevent people from completing tasks with as little effort as possible, disabled buttons also create barriers for people with disabilities — due to issues with low contrast and assistive technologies not being able to navigate to disabled buttons. Now, how can we do better?</p> \n<a href=\"https://axesslab.com/disabled-buttons-suck/\"><img src=\"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/fc799218-49c0-4835-a6cc-1b6f44f4620f.png\" /></a> \n<p>Hampus suggests to keep buttons enabled by default and show an error message when a user clicks it. If you want to indicate that a button is disabled, you could use CSS to make it look a bit grayed out (considering contrast, of course) but keep it enabled and put focus on a meaningful error message. A small detail that makes a difference.</p> \n<h4>The “Back” Button UX</h4> \n<p>We often spend quite a bit of time to get a feature just right, or enhance the design with bold interactive features. We measure the impact of our decisions in A/B tests, study conversion and click-through-rates, analyze traffic and search for common funnel issues. But the <strong>data conveys just a part of the story</strong>. More often than not, customers have very different issues, often unrelated with our features or design.</p> \n<p>The quality of an experience shows in situations <strong>when something goes unexpectedly</strong>. What happens when the customer accidentally reloads the page in the middle of a checkout, e.g. when scrolling up and down on a mobile phone? Does the payment form get cleared out as a user notices a name’s typo on a review page? What happens when a customer hits the “Back” button in a multi-step-process within our single-page-application?</p> \n<a href=\"https://baymard.com/blog/back-button-expectations\"><img src=\"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/6e5520a3-8de2-430b-8d99-f69fc05d21b9.jpg\" /></a> \n<p>In fact, the unexpected “Back” button behavior often has severe usability issues, and some of them are highlighted in Baymard Institute’s article <a href=\"https://baymard.com/blog/back-button-expectations\">Design Patterns That Violate “Back” Button Expectations</a>. It’s worth testing the “Back” button for overlays, lightboxes, anchor links and content jumps, infinite scroll and “load more” behavior, filtering and sorting, accordions, checkout and inline editing.</p> \n<p>We can use the HTML5 History API, or specifically <code>history.pushState()</code> to invoke a URL change without a page reload. The article goes into detail highlighting common issues and solutions to get things just right. Worth reading and bookmarking, and coming back to every now and again.</p> \n<h4>Modern CSS Solutions For Old Problems</h4> \n<p>When it comes to layout and styling, some problems keep appearing in every other project — styling checkboxes and radio buttons, fluid type scale, custom list styles or accessible dropdown navigation.</p> \n<a href=\"https://moderncss.dev/\"><img src=\"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/76871246-0610-4b56-bdcc-408fe7522b5b.png\" /></a> \n<p>In her series, <a href=\"https://moderncss.dev/\">Modern CSS</a>, Stephanie Eckles dives into modern CSS solutions for old CSS problems, taking a closer look into each of them, and exploring the most reliable techniques to make things work well in modern browsers. Stephanie also provides demos and ready-to-be-used code snippets. A fantastic series worth checking out and subscribing to!</p> \n<h4>Fun With Forms</h4> \n<p>Web forms are literally everywhere — from subscription forms to filters and dashboards, yet they aren’t easy to get right. How do we deal with inline validation? Where and how do we display error messages? How do we design and build autocomplete controls? No wonder that there is no shortage in resources on form design — and there are a few new ones that appeared recently.</p> \n<a href=\"https://funwithforms.com/\"><img src=\"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/7d187eb5-f747-43c9-b1dd-ed60e936f3c1.png\" /></a> \n<p>Geri Reid has collected <a href=\"https://gerireid.com/forms.html\">Form Design Guidelines</a>, with best practices, research insights, resources and examples. In <a href=\"https://funwithforms.com/\">Fun With Forms</a>, Michael Scharnagl collect a few obscure facts and fun things to do with forms. Adam Silver has been writing quite a bit about <a href=\"https://adamsilver.io/articles/\">web form best practices</a> in his blog — and release a <a href=\"https://nostyle.herokuapp.com/\">web forms design system</a>, too. Finally, Heydon Pickering still has some <a href=\"https://inclusive-components.design/\">inclusive components patterns</a> for forms in his blog. All wonderful resources to keep track of when designing or building forms — to ensure we don’t make costly mistakes down the line.</p> \n<h4>A CSS-Only, Animated, Wrapping Underline</h4> \n<p>Underlines are hard, especially if you want to do something that goes beyond the good ol’ <code>text-decoration: underline</code>. Inspired by a hover effect he saw in the link underline on Cassie Evans’ blog, Nicky Meulemann decided to create something similar: a <a href=\"https://nickymeuleman.netlify.app/blog/css-animated-wrapping-underline\">colored underline with a hover effect</a> where the line retreats and is replaced by a differently colored line.</p> \n<a href=\"https://nickymeuleman.netlify.app/blog/css-animated-wrapping-underline\"><img src=\"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/429b9952-3488-4c33-a14f-4be85eef27ac.png\" /></a> \n<p>The twist: The lines should not touch during the animation and, most importantly, links that wrap onto new lines should have the underline beneath all lines. If you want to follow along step by step how it’s done, be sure to check out Nicky’s <a href=\"https://nickymeuleman.netlify.app/blog/css-animated-wrapping-underline\">tutorial</a>.</p> \n<h4>A Guide To Setting Up A Development Workflow On Mac</h4> \n<p>Setting up a development environment on a new computer can be confusing, not only if you’re new to programming. Together with contributors from the web community, Sourabh Bajaj published a <a href=\"https://sourabhbajaj.com/mac-setup/\">comprehensive guide</a> that helps you get the job done with ease.</p> \n<a href=\"https://sourabhbajaj.com/mac-setup/\"><img src=\"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/f694b0f7-ddf6-4222-b949-e200fdfb04e4.png\" /></a> \n<p>The guide is a reference for everyone who wants to set up an environment or install new languages or libraries on a Mac. From Homebrew to Node, Python, C++, Ruby, and a lot more, it takes you step by step through everything you need to know to get things up and running. Contributions to the guide are welcome.</p>","descriptionType":"html","publishedDate":"Fri, 14 Aug 2020 13:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e3d756a-fadc-47f7-b69c-4448f11d215b/smashing-news-topple-newsletter.png","linkMd5":"0d1221073e95e6b7f05ac9daa2c3d55f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn43@2020_3/2020/09/05/07-59-16-362_dbde8350e613d4d3.webp","destWidth":1709,"destHeight":1007,"sourceBytes":198396,"destBytes":58952,"author":"hello@smashingmagazine.com (Iris Lješnjanin)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e3d756a-fadc-47f7-b69c-4448f11d215b/smashing-news-topple-newsletter.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/90056e86-2fba-4ce6-9af8-8ef9e88aa186/pdf-checklists-smart-interface-design-patterns.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn58@2020_4/2020/09/05/07-59-32-727_da945d147b72d8f1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/935244dd-cd15-4530-8f7c-f54d9311c5d6/2020-smashing-online-events-preview.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn33@2020_4/2020/09/05/07-59-25-188_abc05eafd5e4dd0b.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6428a3fe-18b5-4a30-a7de-bd3b6e8dc310/topple-smashingconf-online-event.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn45@2020_3/2020/09/05/07-59-34-450_d97874b11ade2682.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf907aee-dc1b-453f-aae3-f07425e3a2ab/topple-smashing-podcast-coffeetogo.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn18@2020_5/2020/09/05/07-59-37-276_69d1600f38642d5e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0177efdc-7a55-48e4-b7d2-a657caa12fb4/topple-smashing-cat-recording-1200x800.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn14@2020_1/2020/09/05/07-59-26-943_808b4837972f6152.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e2c098c0-c56e-4eb7-8148-338b6fe0c7ce/smashing-newsletter-topple-has-news.svg":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn62@2020_2/2020/09/05/07-59-30-898_4bc397a564903077.svg","https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/15e488aa-1cb5-4303-aad6-d85201f69b14.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn12@2020_5/2020/09/05/07-59-34-772_7fcd2c876f8635bf.webp","https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/8888751b-76bb-4e3e-b4b6-96d7c6f4e5b0.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn22@2020_4/2020/09/05/07-59-37-007_e1fa610de2ab959f.webp","https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/9bc037a8-698f-47f7-a7c8-020242726535.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn48@2020_5/2020/09/05/07-59-33-185_09424b50aa3a2b68.webp","https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/fc799218-49c0-4835-a6cc-1b6f44f4620f.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn8@2020_4/2020/09/05/07-59-25-537_50a924e145b33275.webp","https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/6e5520a3-8de2-430b-8d99-f69fc05d21b9.jpg":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn10@2020_4/2020/09/05/07-59-29-000_1901cc8915b5fc92.webp","https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/76871246-0610-4b56-bdcc-408fe7522b5b.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn4@2020_5/2020/09/05/07-59-32-893_f6b9e709a333b64d.webp","https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/7d187eb5-f747-43c9-b1dd-ed60e936f3c1.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn74@2020_6/2020/09/05/07-59-33-562_2c1df665bcfe4221.webp","https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/429b9952-3488-4c33-a14f-4be85eef27ac.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn84@2020_2/2020/09/05/07-59-20-971_514fc432fa65bd57.webp","https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/f694b0f7-ddf6-4222-b949-e200fdfb04e4.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn60@2020_4/2020/09/05/07-59-38-315_656fe9f8c91d3365.webp"},"publishedOrCreatedDate":1599292755748},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"4 Lessons Web App Designers Can Learn From Google","link":"https://smashingmagazine.com/2020/08/lessons-web-app-designers-learn-google/","description":"<p>Whenever I’m curious about what more we could be doing to improve our users’ experiences, the first place I look to is Google. More specifically, I go to the Google Developers site or Think with Google to pull the latest consumer data. </p>\n<p>But I was thinking today, <em>“Why don’t we just copy what Google does?”</em></p>\n<p>After all, Google <em>has</em> to walk the walk. If not, how would it ever convince anyone to adhere to its SEO and UX recommendations and guidelines? </p>\n<p>The only thing is, Google’s sites and apps aren’t very attractive. They’re practical and intuitive, that’s for sure. But designs worth emulating? Eh. </p>\n<p>That doesn’t really matter though. The basic principles for building a good web app exist across each of its platforms. So, if we’re looking for a definitive answer on what will provide SaaS users with the best experience, I think we need to start by dissecting Google’s platforms.</p>\n<h3>What Google Teaches Us About Good Web App Design</h3>\n<p>What we want to focus on are the components that make Google’s products so easy to use time and time again. By replicating these features within your own app, you’ll effectively reduce (if not altogether remove) the friction your users would otherwise encounter. </p>\n<h4>1. Make the First Thing They See Their Top Priority</h4>\n<p>When users enter your dashboard, the last thing you want is for them to be overwhelmed. Their immediate impression whenever they enter your app or return to the dashboard should be: </p>\n<p><em>“I’m exactly where I need to be.”</em></p>\n<p>Not: </p>\n<p><em>“What the heck is going on here? Where do I find X?”</em></p>\n<p>Now, depending on the purpose of your app, <strong>there are usually one or two things your users are going to be most concerned with.</strong></p>\n<p>Let’s say you have an app like <a href=\"https://translate.google.com/\">Google Translate</a> that has a clear utilitarian purpose. There’s absolutely no excuse for cluttering the main page. They’ve come here to do one thing: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0cdc4495-d28d-4b6b-907a-904bd9301130/google-translate-dashboard.png\" /></p>\n<p>So, don’t waste their time. Place the tool front and center and let all other pages, settings or notices appear as secondary features of the app. </p>\n<p>Something else this example teaches us is how you should configure your tool for users. Google could easily just leave this open-ended, but it defaults to: </p>\n<p><strong>Default Language —&#62; English</strong></p>\n<p>Google’s data likely shows that this is the most popular way users use this app. </p>\n<p>Although you can’t see it in the desktop app, you can see it on mobile. The formula goes like this: </p>\n<p><strong>Default Language —&#62; Recent Language</strong></p>\n<p>I suspect that, for first-time users, Google will set the translation to the user’s native language (as indicated in their Google user settings).  </p>\n<p>If you have the data available, use it to configure defaults that reduce the number of steps your users have to take, too.</p>\n<p>Not every web app provides users with a hands-on tool for solving a problem. In some cases, apps enable users to streamline and automate complex processes, which means their primary concern is going to be how well those processes are performing. </p>\n<p>For that, we can look at a product like <a href=\"https://search.google.com/search-console/about\">Google Search Console</a>, which connects users to data on how their sites perform in Google search as well as insights into problems that might be holding them back. </p>\n<p>It’s no surprise then that the first thing they see upon entering it is this: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/04a7228f-1fa6-473d-9e65-c24756b20dd9/google-search-console-overview.png\" /></p>\n<p>Performance (the number of clicks in Google search) and Coverage (number of pages indexed without error) are above the fold. Below it is another chart that displays recommended enhancements to improve core web vitals, mobile usability and sitelinks searchbox visibility. </p>\n<p>Bottom line: The Overview page isn’t littered with charts depicting every data point collected by Google Search Console. Instead, it displays only the top priorities so users can get a bird’s-eye view of what’s going on and not get lost in data they don’t need at that time. </p>\n<h4>2. Create a Useful and Simple Navigation Wherever Relevant</h4>\n<p>This one seems like a no-brainer, but I’ll show you why I bring it up. </p>\n<p><a href=\"https://zoom.us/\">Zoom</a> is a great video conferencing app. There’s no arguing that. However, when users want to schedule a meeting from their browser, this is what they see:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eee382bb-43e2-45d6-8682-3509a06c9cb8/zoom-navigation.png\" /></p>\n<p>The “Join Meeting” and “Host Meeting” options are fine as they both eventually push the user into the desktop app. However, the “Schedule Meeting” in-browser experience isn’t great because it leaves the website navigation bars in place, which only serves as a distraction from the app’s sidebar on the left.</p>\n<p>Once your users have created a login and have access to your app, they don’t need to see your site anymore. Ditch the website navigation and let them be submersed in the app. </p>\n<p>Or do as <a href=\"https://hangouts.google.com/\">Google Hangouts</a> does. Lay your app out the way users expect an app to be laid out: </p>\n<ul>\n<li>Primary navigation along the left side, </li>\n<li>Hamburger menu button and/or More (...) button contain the secondary navigation,</li>\n<li>Wide open space for users to play in the app.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4a6af75-68b2-443f-88be-114fe115fe91/google-hangouts-simple-navigation.png\" /></p>\n<p>But Google Hangouts doesn’t do away with the google.com website completely. For users that want to quickly navigate to one of Google’s other products, they can use the grid-shaped icon in the top-right corner. So, if you feel it’s necessary for your users to be able to visit your website once again, you can build it into the app that way. </p>\n<p>This example also demonstrates how important it is to keep your navigation as simple as possible. </p>\n<p>Google Hangouts’ primary navigation uses symbols to represent each of the app’s tabs/options: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/35f0a643-816f-4949-bf51-6d886e9b19d0/google-hangouts-main-navigation.png\" /></p>\n<p>While I think it’s okay for Google Hangouts to get away with this icon-only menu design, be careful with this approach. Unless the icons are universally understood (like the hamburger menu, search magnifying glass, or the plus sign), you can’t risk introducing icons that create more confusion. </p>\n<p><a href=\"https://www.nngroup.com/articles/icon-usability/\">As NNG points out</a>, there’s a difference between an icon being recognizable and its meaning being indisputable. </p>\n<p>So, one way you can get around this is to make the outward appearance of the menu icon-only. But upon hover, the labels appear so that users have additional context for what each means.</p>\n<p>As for any secondary navigation you might need — including a Settings navigation — you can write out the labels since it will only appear upon user activation. </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/812581ce-773d-4db6-9d73-f78d2db6902f/google-hangouts-seconary-navigation.png\" /></p>\n<p>Although some of the icons would be easy enough to identify, not all of them would instantly be recognizable (like “Invites” and “Hangouts Dialer”). If even one tab in your secondary navigation is rarely seen across other apps, spell them all out. </p>\n<p>One last thing: The divider lines in this menu are a great choice. Rather than jam 10 tabs/options into this navigation bar together, they’re logically grouped, making it easier for users to find what they’re looking for. </p>\n<h4>3. Provide Users with Predictive Search Functionality</h4>\n<p>Every app should have a search bar. It might be there to help users sift through content, to find the contact they’re looking for from a long list, or to ask a question about something in the app. </p>\n<p>The more complex your app is, the more critical a role internal search is going to play. But if you want to improve your users’ search experience even more, you’ll want to power yours with predictive search functionality. </p>\n<p>Even though I’m sure you have a Support line, maybe a chatbot and perhaps an FAQs or Knowledgebase to help users find what they need, a smart search bar can connect them to what they’re really looking for (even if they don’t know how to articulate it).</p>\n<p>Google has this search functionality baked into most of its products. </p>\n<p>You’re familiar with autocomplete within the Google search engine itself. But here are some other use cases for smart search capabilities. </p>\n<p><a href=\"https://drive.google.com/\">Google Drive</a> connects users to documents (of all types — Docs, Sheets, Slides and more) as well as collaborators that match the search query. </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/96a602f8-a203-44a4-b1eb-c237f8daac2c/google-drive-search-matches.png\" /></p>\n<p>Users can, of course, be taken to a full search results page. However, the search bar itself predicts which content is the most relevant for the query. In this case, these are the most recent pieces of content I’ve written that include the term “speed” in the title. </p>\n<p><a href=\"https://www.google.com/maps/\">Google Maps</a> is a neat use case as it pulls data from a variety of connected (Google) sources to try and predict what its users are looking for. </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3e31cc9a-7764-47c5-a72b-22b6cf38ab17/google-maps-predictive-search.png\" /></p>\n<p>In this example, I typed in “Alicia”. Now, Google Maps knows me pretty well, so the first result is actually the address of one of my contacts. The remaining results are for addresses or businesses within a 45-mile radius containing the word “Alicia”. </p>\n<p>It doesn’t just pull from there though. This is one of those cases where the more enjoyable you make the in-app experience, the more your users will engage with it — which means more data. </p>\n<p>For example, this is what I see when I search for “Three”: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d8955d41-7aca-489e-88a2-d2bc9e8009fd/google-maps-search-example.png\" /></p>\n<p>The very first thing it pulls up is a restaurant called Three Sisters (which is a fantastic restaurant in the city of Providence, by the way). If you look just above the center of the map where the red heart is, that’s the restaurant. This means that I’ve added it to my Favorite places and Google Maps actually calls it out as such in my search results. </p>\n<p>Imagine how much more your users would love your app if it wasn’t always a struggle to get to the content, data or page they were looking for. <em>Or</em> to perform a desired action. When you give your users the ability to personalize their experience like this, use the information they’ve given you to improve their search experience, too. </p>\n<h4>4. Enable Users to Change the Design and Layout of the App</h4>\n<p>As a designer, you can do your best to design a great experience for your users. But let’s face it: </p>\n<p>You’re never going to please everyone. </p>\n<p>Unlike a website, though, which is pretty much what-you-see-is-what-you-get, SaaS users have the ability to change the design and layout of what they’re interacting with — if you let them. And you should. </p>\n<p>There are many different ways this might apply to the app you’ve built. </p>\n<p><a href=\"https://calendar.google.com/\">Google Calendar</a>, for example, has a ton of customization options available. </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8b47be41-e1b7-4a82-a728-b1a36682263a/google-calendar-customization.png\" /></p>\n<p>On the far left is a list of “My calendars”. Users can click which calendars and associated events they want to see within the app. </p>\n<p>In the bottom-right corner is an arrowhead. This enables users to hide the Google apps side panel and give them more room to focus on upcoming events and appointments. </p>\n<p>In the top-right, users have two places where they can customize their calendar: </p>\n<ul>\n<li>The Settings bar allows them to adjust the color and density of the calendar. </li>\n<li>The “Month” dropdown allows them to adjust how much of the calendar is seen at once.</li>\n</ul>\n<p>These customizations would all be useful for any sort of project management, planning or appointment scheduling app.</p>\n<p>For other apps, I’d recommend looking at <a href=\"https://mail.google.com/\">Gmail</a>. It’s chock full of customizations that you could adapt for your app. </p>\n<p>Previously, if users clicked the Settings widget, it would move them out of the app and into the dedicated settings panel. To be honest, it was annoying, especially if you just wanted to make a small tweak. </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2eed3901-40d8-4e54-9577-cf769ff31882/gmail-settings.png\" /></p>\n<p>Now, the Settings button opens this panel within Gmail. It enables users to adjust things like: </p>\n<ul>\n<li>Line spacing, </li>\n<li>Background theme, </li>\n<li>Inbox sorting priorities,</li>\n<li>Reading pane layout,</li>\n<li>Conversation view on/off.</li>\n</ul>\n<p>This is a recent update to Gmail’s settings, which probably means these are the most commonly used design customizations its users actually use. </p>\n<p>For any customizations users want to make that they can’t find in this new panel, they can click “See all settings” and customize the in-app design and layout (among other things) even further.  </p>\n<p>Other customizations you might find value in enabling in your app are: </p>\n<ul>\n<li>Keyboard control, </li>\n<li>Dark mode, </li>\n<li>Color-blind mode,</li>\n<li>Text resizing, </li>\n<li>List/grid view toggling, </li>\n<li>Widget and banner hiding,</li>\n<li>Columns displayed.</li>\n</ul>\n<p>Not only do these design and layout controls enable users to create an interface they enjoy looking at and that works better for their purposes, it can also help with accessibility. </p>\n<h3>Wrapping Up</h3>\n<p>There’s a reason why Google dominates market share with many of its products. It <em>gets</em> the user experience. Of course, this is due largely to the fact that it has access to more user data than most companies. </p>\n<p>And while we should be designing solutions for our specific audiences, there’s no denying that Google’s products can help us set a really strong base for any audience — if we just pay attention to the trends across its platforms. </p>\n<h4>Further Reading on SmashingMag:</h4>\n\n<ul>\n<li><a href=\"https://www.smashingmagazine.com/2020/06/website-stressing-out-visitors/\">Is Your Website Stressing Out Visitors?</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/06/equivalent-experiences-part2/\">Equivalent Experiences: Thinking Equivalently</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/05/accessible-images/\">Accessible Images For When They Matter Most</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/05/convince-others-against-dark-patterns/\">How To Convince Others Not To Use Dark Patterns</a></li>\n</ul>\n\n\n","descriptionType":"html","publishedDate":"Wed, 12 Aug 2020 10:30:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3eac1975-cebe-4b97-8d13-01e212282245/lessons-web-app-designers-learn-google.png","linkMd5":"90050a70ad8778f8abad9e0a4b74cfcb","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn11@2020_6/2020/09/05/07-59-17-381_2ec8f7970865d938.webp","destWidth":1201,"destHeight":631,"sourceBytes":260886,"destBytes":57606,"author":"hello@smashingmagazine.com (Suzanne Scacca)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3eac1975-cebe-4b97-8d13-01e212282245/lessons-web-app-designers-learn-google.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0cdc4495-d28d-4b6b-907a-904bd9301130/google-translate-dashboard.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn48@2020_4/2020/09/05/07-59-17-811_4bf9ff225c390b79.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/04a7228f-1fa6-473d-9e65-c24756b20dd9/google-search-console-overview.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn48@2020_4/2020/09/05/07-59-23-146_fe429d24d917e408.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eee382bb-43e2-45d6-8682-3509a06c9cb8/zoom-navigation.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn27@2020_3/2020/09/05/07-59-17-779_0c614ff3e14a813a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4a6af75-68b2-443f-88be-114fe115fe91/google-hangouts-simple-navigation.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn90@2020_2/2020/09/05/07-59-27-805_3f739f59e46c4ee3.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/35f0a643-816f-4949-bf51-6d886e9b19d0/google-hangouts-main-navigation.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn97@2020_5/2020/09/05/07-59-32-564_23bce8d742c8b60f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/812581ce-773d-4db6-9d73-f78d2db6902f/google-hangouts-seconary-navigation.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn5@2020_5/2020/09/05/07-59-38-966_919f1b84497b436d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/96a602f8-a203-44a4-b1eb-c237f8daac2c/google-drive-search-matches.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn4@2020_5/2020/09/05/07-59-35-920_5e9e916d779006bd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3e31cc9a-7764-47c5-a72b-22b6cf38ab17/google-maps-predictive-search.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn8@2020_6/2020/09/05/07-59-20-555_33caf2be7fea94a8.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d8955d41-7aca-489e-88a2-d2bc9e8009fd/google-maps-search-example.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn26@2020_4/2020/09/05/07-59-25-091_4fbe463c31e1fad7.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8b47be41-e1b7-4a82-a728-b1a36682263a/google-calendar-customization.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn23@2020_5/2020/09/05/07-59-36-887_ae1f386e764609bf.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2eed3901-40d8-4e54-9577-cf769ff31882/gmail-settings.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn63@2020_5/2020/09/05/07-59-16-428_efa711aa0050b28a.webp"},"publishedOrCreatedDate":1599292755748},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"How To Create A Porsche 911 With Sketch (Part 2)","link":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","description":"<p>Are you ready to push Sketch to its limits once again? As noted in the <a href=\"https://www.smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/\">previous part</a>, this tutorial is geared more towards experienced illustrators, but if you’re new to Sketch then you should also be able to profit from it since all of the steps are explained in great detail.</p>\n<p>After finishing off the <a href=\"https://www.smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/#tail-lights\">tail lights</a>, let’s continue with the design of the car windows.</p>\n<h3>7. Rubber Seals Around The Windows</h3>\n<p>In this step, we will add rubber seals around the windows. Start first with the side window. Switch to the <strong>Vector</strong> tool (V) and draw a shape around the the side window, like on the image below.</p>\n<p><strong>Note</strong>: <em>Before you continue, remember that we’re still drawing inside the <code>bodywork</code> group!</em></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c5adc17-17e0-49e7-8ef8-227b65b6ebf9/porsche63-sketch-tutorial-part-2.png\" /></p>\n<p>Turn off <strong>Borders</strong> and set <strong>Fills</strong> to <code>#000000</code>, and add a <strong>Shadows</strong> effect:</p>\n<ul>\n<li><strong>Color:</strong> <code>#FFFFFF</code></li>\n<li><strong>Alpha:</strong> <code>90%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>3</code>; <strong>Spread:</strong> <code>1</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3eb7a5ab-1491-4ee8-a4cb-a04e08b27f2a/porsche64-sketch-tutorial-part-2.png\" /></p>\n<p>Next, let’s add a rubber seal around the front windshield. Draw a shape around the front window, turn off <strong>Borders</strong>, set <strong>Color</strong> to <code>#000000</code> and apply <strong>Shadows</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#FFFFFF</code></li>\n<li><strong>Alpha:</strong> <code>90%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>3</code>; <strong>Spread:</strong> <code>1</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8bc611e8-7558-44b1-9baf-c9feb907d2fc/porsche65-sketch-tutorial-part-2.png\" /></p>\n<p>Now, let’s add a trim on top of the rubber seal. To do that, duplicate the seal shape, turn off <strong>Fills</strong> and <strong>Shadows</strong>, turn on <strong>Borders</strong>, set <strong>Color</strong> to <code>#E0E0E0</code>, border position to <strong>Inside</strong> and <strong>Width</strong> to <code>1.5px</code>. Double-click on the shape to enter <strong>vector</strong> <strong>editing mode</strong> and then select and move the points until you have something like on the image below. Be patient, it may require some time!</p>\n<p><strong>Note</strong>: <em>While usually I’d suggest <a href=\"https://medium.com/sketch-app-sources/getting-the-pixels-right-in-sketch-2386c730af90\">avoiding half-pixels</a> in your vector illustrations as much as possible, in some cases these might actually work well. After quite some trial and error while working on the trim on top of the windshield’s rubber seal, I’ve discovered that <code>1.5px</code> gives the best visual results.</em></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6908068c-7878-4185-a8c2-6eb623cf34dd/porsche66-sketch-tutorial-part-2.png\" /></p>\n<p><strong>Tip</strong>: <em>Change point types as needed while working on this shape.</em></p>\n<p>At the end of this step, we need also to add a seal around the rear windshield. Draw a shape around it, turn off Border, set <strong>Fills</strong> to <code>#000000</code> and apply <strong>Shadows</strong> with the same parameters like we did for the previous seals.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a4281b88-4f1e-40f1-bfe1-0c15603d6dd8/porsche67-sketch-tutorial-part-2.png\" /></p>\n<h3>8. Door Handle</h3>\n<p>Pick up the <strong>Oval</strong> tool (O) and draw an ellipse. Set <strong>Border</strong> color to <code>#949494</code>, position to <strong>Center</strong> with a <strong>Width</strong> of <code>1px</code>. For the <strong>Fills</strong> use a <strong>Linear Gradient</strong>:</p>\n<ol>\n<li><code>#787878</code></li>\n<li><code>#C9C9C9</code></li>\n<li><code>#A5A5A5</code></li>\n</ol>\n<p>And add <strong>Inner Shadows</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>2</code>; <strong>Blur:</strong> <code>2</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2e4c64c5-defa-451d-91c4-2cbae4e33a7b/porsche68-sketch-tutorial-part-2.png\" /></p>\n<p>Create a rectangle on the left and on the right side of the ellipse by using the <strong>Rectangle</strong> tool (R). Make the outer corners rounded by using the <strong>Radius</strong> property in the <strong>Inspector</strong> panel. Turn off <strong>Borders</strong> and set <strong>Fills</strong> to <code>#33`</code>3<code></code>333`.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/552e308b-65b4-4ceb-bf29-34857ac4ae33/porsche69-sketch-tutorial-part-2.png\" /></p>\n<p>We will now use <strong>Inner Shadows</strong> and <strong>Shadows</strong> to make it look slightly raised. </p>\n<p>Select left side rectangle and add a light <strong>Inner Shadows</strong> effect with the following properties: </p>\n<ul>\n<li><strong>Color:</strong> <code>#FFFFFF</code></li>\n<li><strong>Alpha:</strong> <code>20%</code></li>\n<li><strong>X:</strong> <code>2</code>; <strong>Y:</strong> <code>-2</code>; <strong>Blur:</strong> <code>1</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>Then, apply a <strong>Shadows</strong> effect:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>2</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ceffe1a-0611-4e80-bca4-eb679ddda34e/porsche70a-sketch-tutorial-part-2.png\" /></p>\n<p>Next, select right side rectangle and apply <strong>Inner Shadows</strong> effect: </p>\n<ul>\n<li><strong>Color:</strong> <code>#FFFFFF</code></li>\n<li><strong>Alpha:</strong> <code>20%</code></li>\n<li><strong>X:</strong> -<code>2</code>; <strong>Y:</strong> <code>-2</code>; <strong>Blur:</strong> <code>1</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>Apply a <strong>Shadows</strong> effect:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>2</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/04757eb7-bc43-47bb-8630-7490cdb76119/porsche70b-sketch-tutorial-part-2.png\" /></p>\n<p>Let’s move on to handle. We will build our handle out of three shapes. </p>\n<p>First, create two rectangles by using the <strong>Rectangle</strong> tool (R) and make the sides rounded with a help of the <strong>Radius</strong> property set from the <strong>Inspector</strong> panel.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8826ad35-d313-4904-899f-36b4e38755c1/porsche71-sketch-tutorial-part-2.png\" /></p>\n<p>Then, use the <strong>Vector</strong> tool (V) to draw a shape between the rectangles.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/43992c37-cee8-48a7-958c-10ae945ec0f7/porsche72-sketch-tutorial-part-2.png\" /></p>\n<p>Now select the rectangles and the shape we have just created and perform a <strong>Union</strong> operation (from the top Sketch toolbar) to create one object. Name this object <code>handleshape</code>. Change the <strong>Color</strong> to <code>#E3E3E3</code> and add an <strong>Inner Shadows</strong> effect:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>-2</code>; <strong>Blur:</strong> <code>5</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/22459350-2fd5-4cc9-9c53-9644e878e848/porsche73-sketch-tutorial-part-2.png\" /></p>\n<p>Let’s add a subtle shadow to the handle. Zoom in and draw a shape like on the image below. Don’t worry if the bottom part goes out of handle area, we will fix this later with a masking operation. Turn off <strong>Borders</strong> and set <strong>Fills</strong> to <code>#3D3D3D</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d7d445fc-c88c-44b2-bacc-4372768b2e75/porsche74-sketch-tutorial-part-2.png\" /></p>\n<p>Let’s fit the shadow inside the handle. Select the handle and the shadow shape, and click on <strong>Mask</strong> in the top toolbar. The result of this masking operation will automatically be placed in a new group in the <strong>Layers</strong> panel list. Change the name of this group to <code>handle</code>. </p>\n<p><strong>Tip</strong>: <em>Don’t forget to check if Sketch turned off <strong>Inner Shadows</strong> for the masking layer. If that’s the case, just turn them back on.</em></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/20aa72e5-ee79-475b-aef7-5bcf6658b89b/porsche75-sketch-tutorial-part-2.png\" /></p>\n<p>Now, let’s add a key lock to the door handle.</p>\n<p>Draw a small circle. Add a <strong>Center</strong> <strong>Border</strong> with a <strong>Width</strong> of <code>1px</code> and the <strong>Color</strong> set to <code>#000000</code>. Change <strong>Fills</strong> to <strong>Linear Gradient</strong>, and adjust the gradient with the following parameters:</p>\n<ol>\n<li><code>#888888</code></li>\n<li><code>#DFDF`</code>DF`</li>\n<li><code>#CACACA</code></li>\n</ol>\n<p>Apply a <strong>Shadow</strong> effect with the <strong>Color</strong> set to <code>#000000</code> at <code>90%</code> alpha, <strong>Blur</strong> to <code>3</code>, the <strong>X</strong> and <strong>Y</strong> positions and <strong>Spread</strong> set to <code>0</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fd8db1ed-e488-45e7-9024-4a6966a07386/76-porsche-sketch-tutorial-part-2.png\" /></p>\n<p>Create a keyhole by drawing a tiny black rectangle without <strong>Borders</strong> in the middle of the circle. Group both shapes (circle and rectangle) into a <code>key-lock</code> group.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4e25fe70-b782-45a3-938e-30c893587aab/porsche77-sketch-tutorial-part-2.png\" /></p>\n<p>The only thing left to do is to create the handle’s shadow which should be placed inside the ellipse (see the next screenshot). Find the <code>handleshape</code> object in the <strong>Layers</strong> panel list, click on the caret in front of the layer name to reveal its content (the shapes), select the bridge between the rectangles and press Cmd + C to copy this shape.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/155863d5-4da0-4ad4-b10e-982a7f0b1bc7/porsche78-sketch-tutorial-part-2.png\" /></p>\n<p>Select the ellipse that is below the handle, paste (Cmd + V) over the shape that we’ve just copied, set the <strong>Color</strong> to <code>#505050</code>, push it down <code>2px</code> and apply a <strong>Gaussian Blur</strong> with an <strong>Amount</strong> of <code>2</code>. Then select this shape along with the ellipse and group them together (Cmd + G).</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5fed3e5a-c40c-43f9-9ef7-bbc20008f329/porsche79-sketch-tutorial-part-2.png\" /></p>\n<p>Inside this group, select the ellipse, right-click on it and choose <strong>Mask</strong> from the menu, to make sure that the shadow will stay <em>inside</em> the ellipse.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/70754da5-b3e0-4180-8a30-ed54db53ecb5/porsche80-sketch-tutorial-part-2.png\" /></p>\n<p>Select all the elements that we created in this step and place them into a group named <code>door handle</code>.</p>\n<h3>9. Bumpers</h3>\n<p>Let’s create the front bumper first. Switch to the <strong>Vector</strong> tool (V) and draw the shape. Change the <strong>Fills</strong> <strong>Opacity</strong> to <code>0%</code>, make sure that <strong>Borders</strong> are turned off and apply light and dark <strong>Inner Shadows</strong> effect. </p>\n<p>First add a light <strong>Inner Shadows</strong> effect with the following properties:</p>\n<ul>\n<li><strong>Color:</strong> <code>#FFFFFF</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>5</code>; <strong>Blur:</strong> <code>6</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>Then, add a dark <strong>Inner Shadows</strong> effect:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>-2</code>; <strong>Y:</strong> <code>-5</code>; <strong>Blur:</strong> <code>6</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee6c09a0-911a-4018-888b-a2bce371dc2b/porsche81-sketch-tutorial-part-2.png\" /></p>\n<p>Do the same for the rear bumper, but instead use these parameters for the dark <strong>Inner Shadow</strong> effect:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>3</code>; <strong>Y:</strong> <code>-5</code>; <strong>Blur:</strong> <code>6</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7c9ec98b-608e-4d3d-9410-b255220718e8/porsche82-sketch-tutorial-part-2.png\" /></p>\n<p>Name these shapes <code>front bumper</code> and <code>rear bumper</code>.</p>\n<p>Let’s move on to the next element on the case. Now we will create the decoration on the front bumper. Grab the <strong>Rounded</strong> <strong>Rectangle</strong> tool (U) and draw a rounded rectangle (<code>174px</code> by <code>14px</code>). Make sure it is outside of the <code>bodywork</code> group and give it the name <code>bumper deco base</code>.</p>\n<p>Turn off <strong>Borders</strong> and then click on <strong>Fills</strong>, choose <strong>Linear Gradient</strong>, and add a gradient. Use <code>#E4E4E4</code> with <code>100%</code> alpha for the first color stop and <code>#858585</code> with alpha <code>100%</code> for the last color stop. Now, add another point with a click on the gradient axis in the color dialog, and move it to the exact middle by pressing 5 on the keyboard. Give it <code>100%</code> alpha, and make sure its color is <code>#E4E4E4</code>. Add another one to the right, and also move it to the center. Change the color of this stop to <code>#858585</code> with <code>100%</code> alpha.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f61eb739-36a5-4ede-afd6-5ca93f4d0000/porsche83-sketch-tutorial-part-2.png\" /></p>\n<p>Duplicate the shape (Cmd + D), change the name to <code>front bumper deco shadow</code> and using the <strong>Layers</strong> panel list, drag it inside the <code>bodywork</code> group just above the <code>front bumper</code> shape, and add two <strong>Shadows</strong> effects.</p>\n<p>Add the first <strong>Shadows</strong> effect with the following properties:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>80%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>2</code>; <strong>Blur:</strong> <code>2</code>; <strong>Spread:</strong> <code>2</code></li>\n</ul>\n<p>Then, add the second <strong>Shadows</strong> effect:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>80%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>-2</code>; <strong>Blur:</strong> <code>2</code>; <strong>Spread:</strong> <code>1</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1982330a-e38e-4e30-a0ef-46ee8f8eebd5/porsche84-sketch-tutorial-part-2.png\" /></p>\n<p>Let’s add a rubber element in the middle of the bumper deco. Select the <code>bumper deco base</code>, duplicate it and give this shape the name of <code>rubber</code>. Change the <strong>Fills</strong> to <code>#303030</code> <strong>Solid Color</strong>, and change the <strong>Height</strong> to the <strong>half size</strong>, then align it to the middle with <code>bumper deco base</code>, using the <strong>Inspector</strong> panel.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7867f606-b5dd-41f2-9f8a-6be9e3aeae64/porsche85-sketch-tutorial-part-2.png\" /></p>\n<p>Add the following effects to the <code>rubber</code> shape.</p>\n<p>First, a light <strong>Inner Shadow</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#FFFFFF</code></li>\n<li><strong>Alpha:</strong> <code>30%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>2</code>; <strong>Blur:</strong> <code>2</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>Then, a dark <strong>Inner Shadow</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>100%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>-4</code>; <strong>Blur:</strong> <code>1</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>After that, a dark <strong>Shadow</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> 100%</li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>-1</code>; <strong>Blur:</strong> <code>2</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>And lastly, a light <strong>Shadow</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#FFFFFF</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>2</code>; <strong>Blur:</strong> <code>2</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf0ec3fd-e3b2-4591-8345-a8f1a98bfb8f/porsche86-sketch-tutorial-part-2.png\" /></p>\n<p>Finally, select the <code>bumper deco base</code> and the <code>rubber</code> shapes and perform a <strong>Mask</strong> operation so that none of the <code>rubber</code> shadows go outside of the <code>bumper deco base</code>. Name the resulting group <code>front bumper deco</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6407777f-0fb9-43c8-b22a-e0f192631230/porsche87-sketch-tutorial-part-2.png\" /></p>\n<p>Now, using the same method as explained above, create the rear bumper deco element.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f91d1112-106e-4520-91d8-98451625d763/porsche88-sketch-tutorial-part-2.png\" /></p>\n<p>Switch to the <strong>Vector</strong> tool (V) and draw a basic shape for the rear bumper guard. Add a <strong>Linear Gradient</strong> with the following properties:</p>\n<ol>\n<li><code>#EEEEEE</code></li>\n<li><code>#C9C9C9</code></li>\n<li><code>#939393</code></li>\n<li><code>#6C6C6C</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45ef1b00-d961-4360-b973-0a0a1dfe90f9/porsche89-sketch-tutorial-part-2.png\" /></p>\n<p>Duplicate this shape, place it behind (right-click on the shape and choose <strong>Move Backward</strong> from the context menu), apply <code>#2D2D2D</code> <strong>Solid Color</strong>, push it a couple of pixels to the right and resize the height down a bit using the <strong>resize handles</strong>. Name this shape <code>rubber buffer</code>. Add an <strong>Inner Shadows</strong> effect with the <strong>Color</strong> set to <code>#FFFFFF</code> at <code>30%</code> alpha. Set <strong>Y</strong> and <strong>Blur</strong> to <code>2</code>, and <strong>X</strong> and <strong>Spread</strong> to <code>0</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/46ef112a-ca27-4cff-a617-6b89fd1b9954/porsche90-sketch-tutorial-part-2.png\" /></p>\n<p>Select again the shape on top, duplicate it one more time, and use the ← key to move it a few pixels to the left. Modify the <strong>Linear Gradient</strong> (delete the two middle points, change the colors of the top and bottom points to <code>#8E8E8E</code> and <code>#DEDEDE</code> then move the top point down a bit). Finally, apply a <strong>Gaussian Blur</strong> effect with the <strong>Amount</strong> of <code>0.6</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3322fdb3-7ed4-4c6d-8935-62a9653af97e/porsche91-sketch-tutorial-part-2.png\" /></p>\n<p>Select this shape and the shape below this one and perform a <strong>Mask</strong> operation. Name the resulting group <code>bumper guard base</code>, then select the resulting group and the <code>rubber buffer</code> shape and group them into a group <code>rear bumper guard</code>. Place this group just below the <code>bodywork</code> group in the <strong>Layers</strong> panel list.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d3ebb32a-6899-41eb-9454-5ff3aa3b8fd3/porsche92-sketch-tutorial-part-2.png\" /></p>\n<p>Using the <strong>Rectangle</strong> tool, create two rectangles like on the image below (use <strong>Radius</strong> in the <strong>Inspector</strong> panel to control the roundness of the points). Select both shapes and to create one object, from the top toolbar in Sketch perform a <strong>Union</strong> operation. Move this new object inside the <code>rear bumper guard</code> group, directly into the <code>bumper guard base</code> group on top. Change <strong>Color</strong> to <code>#000000</code>, turn off <strong>Borders</strong> and add <strong>Gaussian Blur</strong> with the <strong>Amount</strong> of <code>1</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/91906257-32ce-4b3c-b125-a6a4b542e416/porsche93-sketch-tutorial-part-2.png\" /></p>\n<p>Here’s a preview of what we’ve done so far.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f452bbf2-dba0-440c-bcc3-2c801f286259/porsche94-sketch-tutorial-part-2.png\" /></p>\n<h3>10. Windshields</h3>\n<h4>Side Windows</h4>\n<p>Remember those <code>side window 1</code> and <code>side window 2</code> copies that we have created at the beginning of the tutorial, in Part 1?</p>\n<p>Well it’s time to use them! Locate these copies in the <strong>Layers</strong> panel list and un-hide them. Make sure that <strong>Fills</strong> is turned off and add <code>5px</code> <strong>Width</strong> <strong>Borders</strong> with a <code>#72BD20</code> color, positioned <strong>Inside</strong>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b7b854ab-4d28-453d-8a97-cb93b0091dcb/porsche95-sketch-tutorial-part-2.png\" /></p>\n<p>At the beginning, we will create the window frames using these shapes.</p>\n<p>So first, we will need to convert a shape border to a shape itself. We need to apply <strong>Inner Shadows</strong> to the window frames because there’s no option to apply <strong>Inner Shadows</strong> to <strong>Borders</strong>. </p>\n<p>To outline the borders, select both shapes and go to <strong>Layer</strong> → <strong>Convert to Outlines</strong> (or press Alt + Cmd + O on the keyboard). </p>\n<p><strong>Note</strong>: <em>Converting the shapes to outlines has turned each shape into two separate combined shape layers. That’s because an outline stroke is a combined path that exists of two shapes:</em></p>\n<ul>\n<li>one that determines the outer boundaries, and</li>\n<li>the other determines the inner boundaries, creating the appearance of a stroke.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/10e1bd08-e371-401a-9c51-6bce73a5d12a/porsche96-sketch-tutorial-part-2.png\" /></p>\n<p>Select and copy (Cmd + C) the inner shapes, then deselect the shapes by pressing Esc on the keyboard and finally paste (Cmd + V) them (please note that Sketch will place the copies on top), because we will use these shapes as windshields. Give them the names of <code>side windshield 1</code> and <code>side windshield 2</code> and hide them for now.</p>\n<p>Let’s continue with the window frames. Draw two shapes using the <strong>Vector</strong> tool (V), select those newly created shapes and the <code>side window 1</code> shape and perform a <strong>Union</strong> operation to create one shape. Change <strong>Fills</strong> to <code>#DCDCDC</code> and add <strong>Inner Shadows</strong> with the <strong>Color</strong> set to <code>#000000</code> with <code>50%</code> Alpha and <strong>Blur</strong> set to <code>2</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8514fbaa-1a33-4b8f-9d41-fa4fe5a2b55c/porsche97-sketch-tutorial-part-2.png\" /></p>\n<p>Apply the same styles — <strong>Fills</strong> and <strong>Inner Shadows</strong> — to the <code>side window 2</code>.</p>\n<p>Un-hide the side windshields and place them below the <code>bodywork</code> group in the <strong>Layers</strong> panel list. </p>\n<p><strong>Tip</strong>: <em>Since the windshields are basically transparent I suggest you to temporary add some background color to the artboard, so you can actually see what we are going to do. To do that, select the artboard and then turn on ‘Background color’ in the Inspector panel then set ‘Color’ to something like <code>#434343</code>.</em></p>\n<p>Now back to the side windshields: select the first one (the one on the left), turn off <strong>Borders</strong> and set <strong>Fills</strong> to <strong>Linear Gradient</strong>:</p>\n<ol>\n<li><strong>Color</strong>: <code>#FFFFFF</code>, <strong>Alpha</strong>: <code>0%</code></li>\n<li><strong>Color</strong>: <code>#FFFFFF</code>, <strong>Alpha</strong>: <code>22%</code></li>\n<li><strong>Color</strong>: <code>#FFFFFF</code>, <strong>Alpha</strong>: <code>50%</code></li>\n<li><strong>Color</strong>: <code>#FFFFFF</code>, <strong>Alpha</strong>: <code>27%</code></li>\n<li><strong>Color</strong>: <code>#FFFFFF</code>, <strong>Alpha</strong>: <code>30%</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/08f72eac-b64e-4bc2-b579-fc49db1f125d/porsche98-sketch-tutorial-part-2.png\" /></p>\n<p>Do the same for the other windshield.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50d627f8-edc8-40fd-a516-63a8db139f42/porsche99-sketch-tutorial-part-2.png\" /></p>\n<p><strong>Tip</strong>: <em>You can use the Sketch’s feature <a href=\"https://medium.com/sketch-app-sources/copy-styles-in-sketch-b53a907849f4\">Copy Style</a> from the first windshield (right-click and choose ‘Copy Style’) then paste the style to the second windshield (right-click then choose ‘Paste Style’). After that, you may only need to slightly move the points to adjust the gradient to match with previous one, since the shapes are not the same height.</em></p>\n<h4>Front Windshield</h4>\n<p>Switch to the <strong>Vector</strong> tool and draw a shape for the front windshield. Apply a <strong>Linear Gradient</strong> with the following parameters:</p>\n<ol>\n<li><strong>Color</strong>: <code>#F3F2F0</code>, <strong>Alpha</strong>: <code>40%</code></li>\n<li><strong>Color</strong>: <code>#FFFFFF</code>, <strong>Alpha</strong>: <code>50%</code></li>\n<li><strong>Color</strong>: <code>#F3F2F0</code>, <strong>Alpha</strong>: <code>20%</code></li>\n<li><strong>Color</strong>: <code>#F3F2F0</code>, <strong>Alpha</strong>: <code>10%</code></li>\n</ol>\n<p>Then add <strong>Inner Shadows</strong> with the <strong>Color</strong> set to <code>#000000</code> with <code>10%</code> Alpha. Set <strong>Y</strong> position to <code>2</code> and <strong>Blur</strong> to <code>8</code>. Name it <code>front windshield</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8ae75186-a0ae-4c90-956d-9402da34d792/porsche100-sketch-tutorial-part-2.png\" /></p>\n<h4>Rear Windshield</h4>\n<p>Draw a rear windshield with the <strong>Vector</strong> tool, and apply the same style (<strong>Linear Gradient</strong> and <strong>Inner Shadows</strong>) like for the front windshield.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/56aac196-196b-4313-9b2f-31532fc89aa8/porsche101-sketch-tutorial-part-2.png\" /></p>\n<p>Name this shape <code>rear windshield</code>, then select all the windshield shapes, group them into a <code>windshields</code> group and make sure that this group is below the <code>bodywork</code> group in the <strong>Layers</strong> panel list. </p>\n<p><strong>Note</strong>: <em>You can now turn off the Artboard’s background color in the Inspector panel.</em></p>\n<h3>11. Headlight</h3>\n<p>For the headlight, switch to the <strong>Vector</strong> tool and draw the shape that will be headlight glass. Use <strong>Solid Color</strong> <code>#E4E4E4</code>, turn off <strong>Borders</strong> and add <strong>Inner Shadows</strong> effect:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>10%</code></li>\n<li><strong>X:</strong> <code>5</code>; <strong>Y:</strong> <code>-2</code>; <strong>Blur:</strong> <code>2</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2b56d582-7595-41a3-aef8-170c90e677e0/porsche102-sketch-tutorial-part-2.png\" /></p>\n<p>Next, draw a black (<code>#000000</code>) shape over the headlight glass. Duplicate this shape (Cmd + D), push it <code>1px</code> the the left and apply a <strong>Linear Gradient</strong> with the following parameters, from top to bottom:</p>\n<ol>\n<li><code>#EEEEEE</code></li>\n<li><code>#F5F5F5</code></li>\n<li><code>#828282</code></li>\n<li><code>#484848</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af637c91-1da5-449f-9426-bac02fdd2184/porsche103-sketch-tutorial-part-2.png\" /></p>\n<p>Select all the shapes and group them (Cmd + G) into s <code>headlight</code> group. Then we need to rotate it a bit (by <code>25 degrees</code>) and place it above the <code>bodywork</code> group.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/87cbc5c0-0452-41c5-9e94-9e935826a8fd/porsche104-sketch-tutorial-part-2.png\" /></p>\n<h3>12. Rear Engine Grille</h3>\n<p>In this step we will create a grille over the rear engine lid. Once again, pick up the <strong>Vector</strong> tool (V) and draw a shape. Change <strong>Fills</strong> to <code>#000000</code> and add <strong>Inner Shadows</strong> — for the <strong>Color</strong> use <code>#FFFFFF</code> with <code>80%</code> Alpha, and set <strong>X</strong> position to <code>-2</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f73f759f-4e8f-41b9-9579-3542cfbac14d/porsche105-sketch-tutorial-part-2.png\" /></p>\n<p>Duplicate this shape, move it to the left and down a bit, zoom in close enough, switch to <strong>vector</strong> <strong>editing mode</strong> and move the points so they touch the edge of the rear engine lid. Use the image below as a reference.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33e34a6d-ec7c-4dca-a8c1-59de00044491/porsche106-sketch-tutorial-part-2.png\" /></p>\n<p>Repeat this eight more times to form a grille over the engine lid. Then draw a line using the <strong>Line</strong> tool (L). For the <strong>Color</strong> use <code>#CCCCCC</code>, set <strong>Width</strong> to <code>1px</code> and choose <strong>Round cap</strong> for the <strong>Border ends</strong>. Apply black (<code>#000000</code>) <strong>Shadows</strong> effect with <code>100%</code> Alpha and <strong>Blur</strong> of <code>2</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/37f58588-dbbc-4c1c-af37-e0dfbe47db96/porsche107-sketch-tutorial-part-2.png\" /></p>\n<p>Select all of the grille layers, and place them inside the group <code>rear engine grille</code>.</p>\n<h3>13. Side Mirror</h3>\n<p>Let’s move on to the other details on the car. The side mirrors!</p>\n<p>Using the <strong>Vector</strong> tool, create a shape which will be the base for the side mirror, turn off <strong>Borders</strong> and use <strong>Linear Gradient</strong> for the <strong>Fills</strong>:</p>\n<ol>\n<li><code>#E5E5E5</code></li>\n<li><code>#D5D5D5</code></li>\n<li><code>#878787</code></li>\n<li><code>#6A6463</code></li>\n</ol>\n<p>Then add <strong>Inner Shadows</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>2</code>; <strong>Y:</strong> <code>-2</code>; <strong>Blur:</strong> <code>6</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/960a0ed0-70e0-40dd-8601-e0b03dca3b77/porsche108-sketch-tutorial-part-2.png\" /></p>\n<p>Name this shape <code>side mirror base</code>.</p>\n<p>Draw another shape, which will be mirror cover, once again turn off <strong>Borders</strong> and change <strong>Fills</strong> to <strong>Linear Gradient</strong>:</p>\n<ol>\n<li><code>#CCCACB</code></li>\n<li><code>#FEFEFE</code></li>\n<li><code>#A1A5A4</code></li>\n<li><code>#4A413F</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8cfe128b-746d-4ee3-abb2-b2b298a7d230/porsche109-sketch-tutorial-part-2.png\" /></p>\n<p>Give this shape the name of <code>mirror cover base</code>. Duplicate the shape and push it <code>4px</code> to the left using the ← key on the keyboard. Change <strong>Color</strong> to <code>#C4C4C4</code> and add two <strong>Inner Shadows</strong>.</p>\n<p>For the first <strong>Inner Shadow</strong> use:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>60%</code></li>\n<li><strong>X:</strong> <code>5</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>1</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>For the second <strong>Inner Shadow</strong> use following properties:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>-4</code>; <strong>Y:</strong> <code>5</code>; <strong>Blur:</strong> <code>6</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>Then select both shapes and perform a <strong>Mask</strong> operation, so the top shape does not extend past the mirror cover (the bottom shape). Name the resulting group <code>mirror cover</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2933b8df-9c1e-442d-a68f-3e5aad0f9da3/porsche110-sketch-tutorial-part-2.png\" /></p>\n<p>Select <code>side mirror base</code> and add one more <strong>Inner Shadows</strong> effect, to add shadow from the mirror cover. For the <strong>Color</strong> use <code>#000000</code> with <code>50%</code> Alpha, set <strong>X</strong> position to <code>-1</code> and <strong>Blur</strong> to <code>1</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/04f4b9a4-7d90-494e-94ce-36b17a7ab94b/porsche111-sketch-tutorial-part-2.png\" /></p>\n<p>We will finish this step by creating a shadow from the side mirror. </p>\n<p>Grab the <strong>Vector</strong> tool and draw a shape like on the image below. Place it below the <code>side mirror base</code>, push it a bit up so it is really behind it, and add a <strong>Linear Gradient</strong> for the <strong>Fills</strong>. For the top stop use <code>#000000</code> with <code>40%</code> Alpha and for the bottom stop also use <code>#000000</code> but with <code>0%</code> Alpha. Don’t forget to turn off <strong>Borders</strong>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/100b69a5-eba4-4321-9266-97afd6490244/porsche112-sketch-tutorial-part-2.png\" /></p>\n<p>Name this shape <code>side mirror shadow</code>, then select all shapes created in this step and group them into a <code>side mirror</code> group.</p>\n<h3>14. Exhaust Pipe</h3>\n<p>It’s time to create the exhaust pipe. First, find in the <strong>Layers</strong> panel list the <code>floor</code> layer, remember — the one that we’ve created at the beginning of the tutorial in Step 2 — and un-hide it. Switch to the <strong>Rectangle</strong> tool (R) and draw a rectangle with the <strong>Radius</strong> set to <code>2</code>. This rectangle shape will represent the exhaust pipe.</p>\n<p>Turn off <strong>Borders</strong> and set <strong>Fills</strong> to a <strong>Linear Gradient</strong>:</p>\n<ol>\n<li><code>#E2E2E2</code></li>\n<li><code>#E3E3E3</code></li>\n<li><code>#A0A0A0</code></li>\n<li><code>#2C2C2C</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a190152-01fb-4904-9437-273f7fad02c4/porsche113-sketch-tutorial-part-2.png\" /></p>\n<p>Duplicate the rectangle, make it smaller in width, switch to the <strong>vector</strong> <strong>editing mode</strong>, select the points on the right side and set their <strong>Radius</strong> to <code>0</code>, then modify the existing <strong>Linear Gradient</strong> to:</p>\n<ol>\n<li><code>#1E1E1E</code></li>\n<li><code>#3A3A3A</code></li>\n<li><code>#2A2A2A</code></li>\n<li><code>#111111</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b16cdeed-7b86-49e5-9d72-e936bd202372/porsche114-sketch-tutorial-part-2.png\" /></p>\n<p>Select both rectangles, group them into an <code>exhaust pipe</code> group and place the group just above the <code>rear bumper guard</code> in the <strong>Layers</strong> panel list.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0331074a-b252-4d26-ac02-fc5d68589a72/porsche115-sketch-tutorial-part-2.png\" /></p>\n<h3>15. Car Interior</h3>\n<p>Select <code>side window 1</code> and <code>side window 2</code>, duplicate them (Cmd + D), change <strong>Color</strong> to <code>#000000</code> and turn off the <strong>Inner Shadows</strong>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba525f39-d953-4a9e-bb79-643c7217c786/porsche116-sketch-tutorial-part-2.png\" /></p>\n<p>Place these duplicates below the <code>rear bumper guard</code> in the <strong>Layers</strong> panel list, and then, using the arrow keys on the keyboard, shift them <code>5px</code> down and <code>2px</code> to the right.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/708a3132-d288-488c-96e0-dd20264671fc/porsche117-sketch-tutorial-part-2.png\" /></p>\n<p>Draw a shape, which will represent the visible part of the car’s dashboard, turn off <strong>Borders</strong> and set the <strong>Fills</strong> to <code>#2A2A2A</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e1fd11cb-7fa1-4bcd-9cd9-60b311640827/porsche118-sketch-tutorial-part-2.png\" /></p>\n<p>Next, let’s create the steering wheel.</p>\n<p>Create a rectangle using the <strong>Rounded</strong> <strong>Rectangle</strong> tool (U), turn off <strong>Borders</strong> and change <strong>Fills</strong> to horizontal <strong>Linear Gradient</strong> with the following parameters:</p>\n<ol>\n<li><code>#000000</code></li>\n<li><code>#676767</code></li>\n<li><code>#292929</code></li>\n<li><code>#090909</code></li>\n</ol>\n<p>Then we need to rotate the rectangle <code>-24 degrees</code> and move it to the left a bit.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5dd5cb21-9f92-44e1-be76-455bda57200f/porsche119-sketch-tutorial-part-2.png\" /></p>\n<p>Now let’s continue with other details of the car interior. Select the <strong>Vector</strong> tool and create a shape like on the image below. Turn off <strong>Borders</strong>, set <strong>Color</strong> to <code>#000000</code>, and apply <strong>Inner Shadows</strong> effect:</p>\n<ul>\n<li><strong>Color:</strong> <code>#FFFFFF</code></li>\n<li><strong>Alpha:</strong> <code>30%</code></li>\n<li><strong>X:</strong> <code>-12</code>; <strong>Y:</strong> <code>-6</code>; <strong>Blur:</strong> <code>8</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/30e99c0c-16a9-42e8-9081-341fb9c991f8/porsche120-sketch-tutorial-part-2.png\" /></p>\n<p>Use the <strong>Oval</strong> tool (O) to draw a small ellipse. For the <strong>Color</strong> use <code>#717171</code> and turn the <strong>Borders</strong> off.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2cacc6a2-9f0f-417c-b672-7018539099f9/porsche121-sketch-tutorial-part-2.png\" /></p>\n<p>Now let’s create the visible part of the driver’s seat. Create a shape with the <strong>Vector</strong> tool. Turn off <strong>Borders</strong> and use a <strong>Linear Gradient</strong>; for the top color stop use color <code>#6D6D6D</code> and for the bottom <code>#171717</code>. And add an <strong>Inner Shadows</strong> effect — <strong>Color</strong> is <code>#000000</code> with <code>50%</code> Alpha, <strong>X</strong> position is <code>2</code> and <strong>Blur</strong> is <code>7</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca3db691-8b5c-40b3-928f-5df7a7f8e989/porsche122-sketch-tutorial-part-2.png\" /></p>\n<p>Duplicate this shape, push it <code>5px</code> to the right and <code>1px</code> up by using the arrow keys. Then modify the existing <strong>Linear Gradient</strong> — change the bottom color stop to <code>#000000</code>. And modify the <strong>Inner Shadows</strong> effect — change the <strong>Color</strong> to <code>#FFFFFF</code> with <code>10%</code> Alpha; set <strong>X</strong> and <strong>Y</strong> positions to <code>5</code>, and <strong>Blur</strong> also to <code>5</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b3880f78-987e-4e35-b547-288ba1b47a74/porsche123-sketch-tutorial-part-2.png\" /></p>\n<p>Now let’s add stitches to the seat.</p>\n<p>Duplicate this shape, push it <code>5px</code> to the right and <code>3px</code> down. Then, turn off <strong>Fills</strong> and <strong>Inner Shadows</strong>, bring back <strong>Borders</strong> and for the <strong>Color</strong> choose <strong>Linear Gradient</strong> — for the top color stop use <code>#696969</code> and for the bottom <code>#000000</code>. Add <strong>Shadow</strong> effect — for the <strong>Color</strong> use <code>#000000</code> with <code>50%</code> Alpha and set <strong>Blur</strong> to <code>2</code>. Then select this shape and the layer below it and perform a <strong>Mask</strong> operation, so the stitches do not go outside the seat’s boundaries.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/55b07e9f-10c2-443a-b511-be65e5cc32a9/porsche124-sketch-tutorial-part-2.png\" /></p>\n<p>Almost ready with the car interior!</p>\n<p>Next, select all layers and groups that we’ve created in this step and that are above the car body and position them just above <code>side window 1 copy</code> and <code>side window 2 copy</code> in the <strong>Layers</strong> panel list. Add to the selection those two shapes as well (<code>side window 1 copy</code> and <code>side window 2 copy</code>) and create a group (Cmd + G) named <code>interior</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c1925540-8eb1-4f8d-906f-a316c696df12/porsche125-sketch-tutorial-part-2.png\" /></p>\n<p>Let’s take a look at the big picture again.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/786f9a95-1882-4046-b1ce-38dd1499f894/porsche126-sketch-tutorial-part-2.png\" /></p>\n<p>It’s not bad, right? </p>\n<p>But, before we conclude this part of the tutorial, let’s add one more <em>small detail</em> to the car body, so pick up the <strong>Line</strong> tool (L) and draw a line. For the <strong>Color</strong> use <code>#E5E5E5</code>, set <strong>Width</strong> to <code>2px</code> and choose <strong>Round cap</strong> for the <strong>Border ends</strong>. Then apply <strong>Shadows</strong> — set <strong>Color</strong> to <code>#000000</code> at <code>80%</code> Alpha, <strong>Y</strong> position to <code>2</code> and <strong>Blur</strong> to <code>3</code>. Finally, place this line inside the <code>bodywork</code> group.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/74d9afbe-faf3-45f2-bbd2-bde664ac407a/porsche127-sketch-tutorial-part-2.png\" /></p>\n<h3>Conclusion</h3>\n<p>The body of the car is now ready, as well as the windows, bumpers, headlights and taillights, and the interior — dashboard, the steering wheel, and the seat. <a href=\"https://www.smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/\">In the next (and final) part of the tutorial</a>, we’ll create the wheels (rims and tires), and we’ll add all the final touches, including the racing decals on the car’s body. </p>\n","descriptionType":"html","publishedDate":"Fri, 31 Jul 2020 10:30:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fd8db1ed-e488-45e7-9024-4a6966a07386/76-porsche-sketch-tutorial-part-2.png","linkMd5":"98f381c2c21b71537b96366addc8ca07","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn70@2020_1/2020/09/05/07-59-16-296_a7f839a5bac6cf4c.webp","destWidth":800,"destHeight":575,"sourceBytes":163952,"destBytes":29754,"author":"hello@smashingmagazine.com (Nikola Lazarević)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fd8db1ed-e488-45e7-9024-4a6966a07386/76-porsche-sketch-tutorial-part-2.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c5adc17-17e0-49e7-8ef8-227b65b6ebf9/porsche63-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn38@2020_4/2020/09/05/07-59-19-995_d68ba069c41773c0.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3eb7a5ab-1491-4ee8-a4cb-a04e08b27f2a/porsche64-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn95@2020_4/2020/09/05/07-59-35-454_86892e0efe9fe6f1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8bc611e8-7558-44b1-9baf-c9feb907d2fc/porsche65-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn86@2020_6/2020/09/05/07-59-24-973_c6889b54e208a74c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6908068c-7878-4185-a8c2-6eb623cf34dd/porsche66-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn81@2020_1/2020/09/05/07-59-19-338_54854d9b2064314b.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a4281b88-4f1e-40f1-bfe1-0c15603d6dd8/porsche67-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn57@2020_2/2020/09/05/07-59-24-190_eab145db9181a877.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2e4c64c5-defa-451d-91c4-2cbae4e33a7b/porsche68-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn58@2020_4/2020/09/05/07-59-27-456_c4c3e914eac004b0.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/552e308b-65b4-4ceb-bf29-34857ac4ae33/porsche69-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn80@2020_1/2020/09/05/07-59-37-531_911700c6055486bd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ceffe1a-0611-4e80-bca4-eb679ddda34e/porsche70a-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn93@2020_1/2020/09/05/07-59-18-389_2d6bc600a3728b63.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/04757eb7-bc43-47bb-8630-7490cdb76119/porsche70b-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn3@2020_1/2020/09/05/07-59-19-762_9794e1029f27906c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8826ad35-d313-4904-899f-36b4e38755c1/porsche71-sketch-tutorial-part-2.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/43992c37-cee8-48a7-958c-10ae945ec0f7/porsche72-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn98@2020_3/2020/09/05/07-59-24-632_c9b4d815292d980a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/22459350-2fd5-4cc9-9c53-9644e878e848/porsche73-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn33@2020_2/2020/09/05/07-59-39-658_94a41a4baf7f0024.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d7d445fc-c88c-44b2-bacc-4372768b2e75/porsche74-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn68@2020_1/2020/09/05/07-59-31-727_a90942fd8178331b.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/20aa72e5-ee79-475b-aef7-5bcf6658b89b/porsche75-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn23@2020_6/2020/09/05/07-59-38-166_afa2c26b6d62ab0f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fd8db1ed-e488-45e7-9024-4a6966a07386/76-porsche-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn42@2020_5/2020/09/05/07-59-25-015_e202ccf0e1c8b9c6.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4e25fe70-b782-45a3-938e-30c893587aab/porsche77-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn73@2020_5/2020/09/05/07-59-19-177_d7896014ff9f8f2f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/155863d5-4da0-4ad4-b10e-982a7f0b1bc7/porsche78-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn43@2020_4/2020/09/05/07-59-33-439_8dd9956984768c09.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5fed3e5a-c40c-43f9-9ef7-bbc20008f329/porsche79-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn78@2020_6/2020/09/05/07-59-24-638_0480aa1b6230c07d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/70754da5-b3e0-4180-8a30-ed54db53ecb5/porsche80-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn81@2020_1/2020/09/05/07-59-29-015_0d3deafa3e84df9f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee6c09a0-911a-4018-888b-a2bce371dc2b/porsche81-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn30@2020_2/2020/09/05/07-59-30-279_f00850a351cab8fd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7c9ec98b-608e-4d3d-9410-b255220718e8/porsche82-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn81@2020_5/2020/09/05/07-59-30-642_6d86d757b119df9b.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f61eb739-36a5-4ede-afd6-5ca93f4d0000/porsche83-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn18@2020_4/2020/09/05/07-59-32-555_78e3afefa726da02.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1982330a-e38e-4e30-a0ef-46ee8f8eebd5/porsche84-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn21@2020_3/2020/09/05/07-59-32-534_07613f4fa3ae4692.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7867f606-b5dd-41f2-9f8a-6be9e3aeae64/porsche85-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn68@2020_6/2020/09/05/07-59-18-061_893f6a649458653f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf0ec3fd-e3b2-4591-8345-a8f1a98bfb8f/porsche86-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn52@2020_5/2020/09/05/07-59-33-962_6776a5733c1ad3ae.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6407777f-0fb9-43c8-b22a-e0f192631230/porsche87-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn47@2020_6/2020/09/05/07-59-26-288_8ac8c0ff4b96ee88.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f91d1112-106e-4520-91d8-98451625d763/porsche88-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn87@2020_6/2020/09/05/07-59-27-087_9121196ee5871629.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45ef1b00-d961-4360-b973-0a0a1dfe90f9/porsche89-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn96@2020_5/2020/09/05/07-59-24-034_386a256d5b1d4dbd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/46ef112a-ca27-4cff-a617-6b89fd1b9954/porsche90-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn22@2020_4/2020/09/05/07-59-29-209_466bec613a75818d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3322fdb3-7ed4-4c6d-8935-62a9653af97e/porsche91-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn39@2020_6/2020/09/05/07-59-33-383_8bbcf79e6a3f6a7d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d3ebb32a-6899-41eb-9454-5ff3aa3b8fd3/porsche92-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn16@2020_4/2020/09/05/07-59-36-039_183dc2301b36c685.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/91906257-32ce-4b3c-b125-a6a4b542e416/porsche93-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn63@2020_4/2020/09/05/07-59-20-440_83888c7c9b29d8bd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f452bbf2-dba0-440c-bcc3-2c801f286259/porsche94-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn83@2020_6/2020/09/05/07-59-22-379_fd7028cec7ecd4b3.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b7b854ab-4d28-453d-8a97-cb93b0091dcb/porsche95-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn21@2020_4/2020/09/05/07-59-26-977_02f7ddb26e47ada1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/10e1bd08-e371-401a-9c51-6bce73a5d12a/porsche96-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn34@2020_2/2020/09/05/07-59-32-220_185c0faf43aa6557.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8514fbaa-1a33-4b8f-9d41-fa4fe5a2b55c/porsche97-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn31@2020_1/2020/09/05/07-59-34-314_6175c104bc589f68.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/08f72eac-b64e-4bc2-b579-fc49db1f125d/porsche98-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn66@2020_1/2020/09/05/07-59-31-685_bfc7c2919a159a0d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50d627f8-edc8-40fd-a516-63a8db139f42/porsche99-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn37@2020_5/2020/09/05/07-59-37-776_97d655ab31a4d877.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8ae75186-a0ae-4c90-956d-9402da34d792/porsche100-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn70@2020_1/2020/09/05/07-59-19-199_aceae07f5bcb7e59.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/56aac196-196b-4313-9b2f-31532fc89aa8/porsche101-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn49@2020_1/2020/09/05/07-59-28-202_69f47d3cbf328ede.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2b56d582-7595-41a3-aef8-170c90e677e0/porsche102-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn24@2020_6/2020/09/05/07-59-35-254_f11aa8a34d1c0b40.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af637c91-1da5-449f-9426-bac02fdd2184/porsche103-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn59@2020_3/2020/09/05/07-59-22-653_b4ddc05f67b9ea4a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/87cbc5c0-0452-41c5-9e94-9e935826a8fd/porsche104-sketch-tutorial-part-2.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f73f759f-4e8f-41b9-9579-3542cfbac14d/porsche105-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn62@2020_6/2020/09/05/07-59-24-294_a3a9783e71faf360.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33e34a6d-ec7c-4dca-a8c1-59de00044491/porsche106-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn64@2020_6/2020/09/05/07-59-38-304_5403a61cdba3da20.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/37f58588-dbbc-4c1c-af37-e0dfbe47db96/porsche107-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn96@2020_3/2020/09/05/07-59-22-492_49b2bb8a5e0bb16f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/960a0ed0-70e0-40dd-8601-e0b03dca3b77/porsche108-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn32@2020_1/2020/09/05/07-59-36-393_adf30de047c0eb36.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8cfe128b-746d-4ee3-abb2-b2b298a7d230/porsche109-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn54@2020_3/2020/09/05/07-59-24-127_ded9e9ebe836dad1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2933b8df-9c1e-442d-a68f-3e5aad0f9da3/porsche110-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn91@2020_1/2020/09/05/07-59-22-492_965be962ece7ec7c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/04f4b9a4-7d90-494e-94ce-36b17a7ab94b/porsche111-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn93@2020_2/2020/09/05/07-59-20-485_f3b84383e7fa8551.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/100b69a5-eba4-4321-9266-97afd6490244/porsche112-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn66@2020_3/2020/09/05/07-59-19-168_90cf50180f01e88c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a190152-01fb-4904-9437-273f7fad02c4/porsche113-sketch-tutorial-part-2.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b16cdeed-7b86-49e5-9d72-e936bd202372/porsche114-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn84@2020_6/2020/09/05/07-59-36-911_218dc93e2ccc5faa.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0331074a-b252-4d26-ac02-fc5d68589a72/porsche115-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn41@2020_1/2020/09/05/07-59-19-013_830b2425c82ddbc8.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba525f39-d953-4a9e-bb79-643c7217c786/porsche116-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn2@2020_6/2020/09/05/07-59-26-743_43ee7a4700418500.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/708a3132-d288-488c-96e0-dd20264671fc/porsche117-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn57@2020_4/2020/09/05/07-59-20-015_0e8bf352ca8083b2.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e1fd11cb-7fa1-4bcd-9cd9-60b311640827/porsche118-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn54@2020_4/2020/09/05/07-59-30-712_2d9107cadd07950c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5dd5cb21-9f92-44e1-be76-455bda57200f/porsche119-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn10@2020_3/2020/09/05/07-59-34-250_dfa70394fcbc65c6.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/30e99c0c-16a9-42e8-9081-341fb9c991f8/porsche120-sketch-tutorial-part-2.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2cacc6a2-9f0f-417c-b672-7018539099f9/porsche121-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn50@2020_6/2020/09/05/07-59-29-244_83d011239ecc442a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca3db691-8b5c-40b3-928f-5df7a7f8e989/porsche122-sketch-tutorial-part-2.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b3880f78-987e-4e35-b547-288ba1b47a74/porsche123-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn93@2020_3/2020/09/05/07-59-37-062_1af79a80ac21f66f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/55b07e9f-10c2-443a-b511-be65e5cc32a9/porsche124-sketch-tutorial-part-2.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c1925540-8eb1-4f8d-906f-a316c696df12/porsche125-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn68@2020_1/2020/09/05/07-59-20-466_e5196824facddfc4.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/786f9a95-1882-4046-b1ce-38dd1499f894/porsche126-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn21@2020_1/2020/09/05/07-59-39-097_aa755995aab2c770.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/74d9afbe-faf3-45f2-bbd2-bde664ac407a/porsche127-sketch-tutorial-part-2.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn13@2020_5/2020/09/05/07-59-30-237_79585c8be38b3bfc.webp"},"publishedOrCreatedDate":1599292755772},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"How To Configure Application Color Schemes With CSS Custom Properties","link":"https://smashingmagazine.com/2020/08/application-color-schemes-css-custom-properties/","description":"<p>Variables are a basic tool that help organize colors on a project. For a long time, front-end engineers used preprocessor variables to configure colors on a project. But now, many developers prefer the modern native mechanism for organizing color variables: <a href=\"https://drafts.csswg.org/css-variables/\">CSS Custom Properties</a>. Their most important advantage over preprocessor variables is that they work in realtime, not at the compilation stage of the project, and have support for the cascade model which allows you to use inheritance and redefinition of values on the fly. </p>\n<p>When you’re trying to organize an application color scheme, you can always place all custom properties that relate to color in the root section, name them, and use it in all needed places.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58939fb2-146f-4771-bf1f-91af136d4c59/paletton-application-color-schemes-css-custom-properties.png\" /></p>\n<p>I now have three main colors. On the basis of these, I will calculate the tones and mid-tones (the HSL format in combination with the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/calc\"><code>calc</code></a> function is a very useful tool for this). By changing the lightness value, I can generate several additional colors for the palette.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f325c47-9912-46f7-a888-441de1571c55/zubryby-application-color-schemes-css-custom-properties.jpeg\" /></p>\n<h3>Use Component Colors</h3>\n<p>Large web projects always contain decomposition; we split everything into small components and reuse them in many places. Each component usually has its own style meaning it doesn’t matter what we used to decompose BEM or CSS Modules, or another approach; it’s important that each such piece of code can be called local scope and reused.</p>\n<p>In general, I see the point in using color variables at the <strong>component level</strong> in two cases.</p>\n<p>The first is when components that according to application style guide are repeated with different settings, e.g. buttons for different needs like primary (brand) button, secondary button, tertiary, and so on.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a4e175d4-8868-4167-882b-3d8b165fce75/buttons-application-color-schemes-css-custom-properties.png\" /></p>\n<p>The second is when components that have several states with different colors, e.g. button hover, active and focus states; normal and invalid states for input or select field, and so on.</p>\n<p>A more rare case when component variables may come in handy is the functionality of a \"white label\". <a href=\"https://en.wikipedia.org/wiki/White-label_product\">The \"white label\"</a> is a service feature that allows the user to customize or brand some part of the user interface to improve the experience of interacting with their clients. For example, electronic documents that a user shares with his customers through a service or email templates. In this case, the variables at the component level will help to configure certain components separately from the rest of the color theme of the application.</p>\n<p>In the example below, I’ve now added controls for customizing colors of the primary (brand) button. Using color variables of the component level we can configure UI controls separately from each other.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/acba0f8b-a698-4633-b0d4-eda05367ec8f/color-split-application-color-schemes-css-custom-propertiespng.png\" /></p>\n<p>What about green? We can clearly define it as the primary or brand color, most likely, if the color of the main button changes, then the color of the link and header of the first level will also change.</p>\n<p>What about red? Invalid state of input fields, error messages, and the destructive buttons will have the same color at the whole application level. This is a pattern. Now I can define several common functional variables in the root section:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b41cce14-162a-4d37-8a9e-ea75bd6d93bc/lition-application-color-schemes-css-custom-properties.png\" /></p>\n<p>Now I understand that this was not the right way. Firstly, if you put component colors into the root section, then you break the separation of concerns principle. As a result, you can end up with redundant CSS in the stylesheet. For example, you have <a href=\"https://github.com/archik408/trading-platform-client/tree/master/src/components\">the folder of components</a> where each component has its own styles. You also have a <a href=\"https://github.com/archik408/trading-platform-client/blob/master/src/index.css\">common stylesheet</a> where you describe color variables in the root section. You decide to remove the <a href=\"https://github.com/archik408/trading-platform-client/tree/master/src/components/Button\">button component</a>; in this case, you must remember to also remove the variables associated with the button from the common styles file.</p>\n<p>Secondly, this is not the best solution in terms of performance. Yes, a color change causes only the process of a repaint, not reflow/layout, this in itself is not too costly, but when you make some changes at the highest level, you will use more resources to check the entire tree than when these changes are in a small local area. I recommend reading <a href=\"https://lisilinhart.info/posts/css-variables-performance\">the performance benchmark</a> of CSS variables from Lisi Linhart for more details.</p>\n<p>On my current project <a href=\"https://www.tispr.com/\">Tispr</a>, the team and I use split and do not dump everything in the root, on the high level only a palette and functional colors. Also, we are not afraid of IE11, because this problem is solved by <a href=\"https://github.com/nuxodin/ie11CustomProperties\">the corresponding polyfill</a>. Just install <a href=\"https://www.npmjs.com/package/ie11-custom-properties\">npm module ie11-custom-properties</a> and import library into your application JS bundle:</p>\n<pre><code>// Use ES6 syntax\nimport \"ie11-custom-properties\";\n// or CommonJS\nrequire('ie11-custom-properties');</code></pre>\n\n<p>Or add module by script tag:</p>\n<div>\n<pre><code>&#60;script async src=\"./node_modules/ie11-custom-properties/ie11CustomProperties.js\"&#62;</code></pre>\n</div>\n\n<p>Also, you can add the library <a href=\"https://github.com/nuxodin/ie11CustomProperties#usage\">without npm via CDN</a>. The work of this polyfill is based on the fact that IE11 has minimal support for custom properties, where properties can be defined and read based on the cascade. This is not possible with properties starting with double dashes, but possibly with a single dash (the mechanism similar to vendor prefixes). You can read more about this in <a href=\"https://github.com/nuxodin/ie11CustomProperties#how-it-works\">the repository documentation</a>, as well as get acquainted with some limits. Other browsers will ignore this polyfill.</p>\n<p>Below is a palette of the Tispr web application as well as the controls of the “white label” functionality for the e-documents (such as user contracts, invoices, or proposals).</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4053dbb-7cee-4c57-becf-c292b2f0dbc3/tispr-palette-application-color-schemes-css-custom-properties.png\" /></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4e694672-02df-4a9d-9145-31c8918674ed/white-label-application-color-schemes-css-custom-properties.png\" /></p>\n<h3>Why Not Store Color Variables On The JavaScript Side?</h3>\n<p>Another reasonable question: why not store the palette and function variables in JavaScript code? This can also be dynamically changed and later redefined colors through inline styles. This could be an option, but most likely this approach would be less optimal since you need to have access to certain elements and change their color properties. With CSS variables, you will only change a single property, i.e. the variable value.</p>\n<p>In JavaScript, there are no native functions or API for working with colors. In the <a href=\"https://www.w3.org/TR/css-color-5\">CSS Color Module 5</a>, there will be many opportunities to make derived colors or somehow calculate them. From the perspective of the future, CSS Custom Properties are richer and more flexible than JS variables. Also, with JS variables, there will be no possibility to use inheritance in cascade and that’s the main disadvantage.</p>\n<h3>Conclusion</h3>\n<p>Splitting colors into three levels (palette, functional, and component) can help you be more adaptive to changes and new requirements while working on a project. I believe that CSS Custom Properties are the right tool for organizing color split — it does not matter what you use for styling: pure CSS, preprocessors, or CSS-in-JS approach.</p>\n<p>I came to this approach through my own experience, but I’m not alone. Sara Soueidan described in <a href=\"https://www.sarasoueidan.com/blog/style-settings-with-css-variables/\">her article</a> a similar approach in which she split variables into global and component levels.</p>\n<p>I would also like to suggest reading the <a href=\"https://increment.com/frontend/a-users-guide-to-css-variables/\">Lea Verou’s article</a> where she describes possible cases of applying CSS variables (not only in terms of color).</p>\n","descriptionType":"html","publishedDate":"Tue, 11 Aug 2020 10:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f742cac-ca4a-4df3-8438-e8bc472e209a/application-color-schemes-css-custom-properties.png","linkMd5":"1d07a3a7ea9e5c230cc1a792c9ee5246","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn32@2020_4/2020/09/05/07-59-16-768_c669f49ef582b786.webp","destWidth":1201,"destHeight":631,"sourceBytes":284116,"destBytes":60972,"author":"hello@smashingmagazine.com (Artur Basak)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f742cac-ca4a-4df3-8438-e8bc472e209a/application-color-schemes-css-custom-properties.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58939fb2-146f-4771-bf1f-91af136d4c59/paletton-application-color-schemes-css-custom-properties.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn96@2020_3/2020/09/05/07-59-19-320_72ed0812f22ea025.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f325c47-9912-46f7-a888-441de1571c55/zubryby-application-color-schemes-css-custom-properties.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn29@2020_3/2020/09/05/07-59-26-191_67f3535bc0443da5.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a4e175d4-8868-4167-882b-3d8b165fce75/buttons-application-color-schemes-css-custom-properties.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn57@2020_3/2020/09/05/07-59-34-707_9dbcbef31532c50f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/acba0f8b-a698-4633-b0d4-eda05367ec8f/color-split-application-color-schemes-css-custom-propertiespng.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn91@2020_5/2020/09/05/07-59-39-123_f6cfdf38243dc556.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b41cce14-162a-4d37-8a9e-ea75bd6d93bc/lition-application-color-schemes-css-custom-properties.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn84@2020_4/2020/09/05/07-59-27-766_53f46eb7dfdd3136.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4053dbb-7cee-4c57-becf-c292b2f0dbc3/tispr-palette-application-color-schemes-css-custom-properties.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn29@2020_2/2020/09/05/07-59-30-443_8cae0c4c44d77dcd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4e694672-02df-4a9d-9145-31c8918674ed/white-label-application-color-schemes-css-custom-properties.png":null},"publishedOrCreatedDate":1599292755771},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Smashing Podcast Episode 23 With Guillermo Rauch: What Is Next.js?","link":"https://smashingmagazine.com/2020/08/smashing-podcast-episode-23/","description":"<p>Today, We’re talking about Next.js. What is it, and where might it fit into our web development workflow? I spoke to co-creator Guillermo Rauch to find out.</p>\n\n\n<h3>Show Notes</h3>\n<ul>\n<li>Guillermo Rauch <a href=\"https://twitter.com/rauchg\">on Twitter</a></li>\n<li><a href=\"https://nextjs.org\">Next.js</a></li>\n</ul>\n<h4>Weekly Update</h4>\n<ul>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/08/mastering-props-proptypes-react/\">Mastering Props And PropTypes In React</a>”<br /><em>by David Adeneye</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/\">Inspired Design Decisions With Bradbury Thompson: The Art Of Graphic Design</a>”<br /><em>by Andy Clarke</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/\">Setting Up An API Using Flask, Google’s Cloud SQL And App Engine</a>”<br /><em>by Wole Oyekanmi</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/08/forms-validation-ionic-react/\">Forms And Validation In Ionic React</a>”<br /><em>by Jerry Navi</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/08/clients-backlinks-design/\">How To Help Your Clients Get More Backlinks Through Design</a>”<br /><em>by Suzanne Scacca</em></li>\n</ul>\n<h3>Transcript</h3>\n<p></p><p><a href=\"https://twitter.com/rauchg\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5223c15e-205e-4f46-83f6-b97c51e6754d/guillermo-rauch-200x200.jpg\" /></a>Drew McLellan: He’s the founder and CEO of Vercel, a cloud platform for static sites that fits around a Jamstack workflow. He’s also the co-creator of Next.js. He previously founded LearnBoost and CloudUp, and is well-known as the creator of several popular node open source libraries like Socket.io, Mongoose, and SlackIn. Prior to that, he was a core developer on MooTools, so we know he knows his way around JavaScript like the back of his hand. Did you know he once received a royal commission from the King of Spain to create an ice sculpture out of iceberg lettuce? My smashing friends, please welcome Guillermo Rauch. Hi Guillermo, how are you?</p>\n<p>Guillermo Rauch: I’m smashing freaking good, thanks for having me.</p>\n<p>Drew: I wanted to talk to you today about the whole world of Next.js, as it’s something that obviously you’re personally very knowledgeable about, having been involved as a co-creator right from the start. Next.js is one of those project names that has been on my radar while working in the Jamstack space, but it isn’t something that I’ve actually personally looked at or worked with too closely before. For people who are like me, who perhaps aren’t aware of what Next.js is, perhaps you could give us a bit of background into what it is and what problems it tries to solve.</p>\n<p>Guillermo: Next.js is a very interesting member of the Jamstack universe, because Next.js actually started being a fully SSR-focused framework. It started getting a lot of adoption outside the Jamstack space where people were building very large things specifically when they wanted to have user generated content or dynamic content or social networks or e-commerce, and they knew that they wanted SSR because their data set was very large or very dynamic. It fell under the radar I think for a lot of people in the Jamstack world, but later on Next.js gained the capabilities for static optimization.</p>\n<p>Guillermo: On one hand, for example, if you wouldn’t do data fetching at the top level of your page with Next.js, your React page would be ... Also by the way, for those who are not fully in the know, Next.js is simply React framework for production, but has this capability of doing some rendering. Then when you get in static optimization capabilities, if you wouldn’t define data fetching at the top level of your page, it automatically exported as HTML instead of trying to do anything with server rendering.</p>\n<p>Guillermo: Then later on, it also gained the capability for static site generation, meaning that you can define a special data hook, but that data hook gets data at build time. Next.js became a hybrid, very powerful dynamic and static framework, and now it’s been growing a lot in the Jamstack space as well.</p>\n<p>Drew: People might say that React is already a framework, you certainly hear it described that way. What does it actually mean to be a framework for React?</p>\n<p>Guillermo: That’s a great observation, because I always point out to people that React at Facebook and React outside of Facebook are completely different beasts. React at Facebook actually is used together with server rendering, but even their server rendering, for example, doesn’t use Node.js, it uses a highly specialized virtual machine called Hermes which communicates to their sort of production hack and PHP stack and answers all this advanced and exotic Facebook needs.</p>\n<p>Guillermo: When they open source React, it’s almost like open sourcing a component. I always call it like open sourcing the engine, but not giving you the car. What happened is people really wanted to go and drive with it, they wanted to get to places with React. In the community, people started creating cars, and they would embed React as the engine, which was what the driver, the developer was after in the first place, make React the fundamental part of the car. Things like Next.js and Gatsby and React Static and many other frameworks started appearing that were solving the need for like, \"I actually want to create fully loaded pages and applications.\"</p>\n<p>Guillermo: Whereas React was kind of more like the component and the engine for specific widgets within the page, this was certainly the case for Facebook. They will broadly and publicly admit that they invented it for things like the notification batch, the chat widget, the newsfeed component, and those components were React routes that were embedded into the contents of the production existing app with lots and lots of lines of code and even other JS libraries and frameworks.</p>\n<p>Guillermo: What it means to create a framework for React, it means you make React the fundamental part of the story, hopefully and this is something we’ll try to do with Next.js, the learning curve is primarily about React with some added surface for Next.js, particularly around data fetching and routing. We also do a lot of production optimizations, so when you get React, when you get Create React app, which is sort of like, I like to call it a bootstrapped car that Facebook gives you, maybe the needs for production are not really met. Or if you try to do it yourself by configuring Webpack and configuring Babel and configuring server rendering and static generation, it’s also hard to put together a car from scratch. Next.js will give you this zero config and also production optimized set of defaults around building entire big things with React.</p>\n<p>Drew: So it’s like it almost puts a sort of ecosystem around your React app with a collection of pre-configured tools to enable you to-</p>\n<p>Guillermo: Correct.</p>\n<p>Drew: Hit the ground running and do static site generation or server rendering or routing.</p>\n<p>Guillermo: Correct, and you used a word there that is very, very key to all this, which is pre-configured. We’re fortunate enough to draw the attention of Google Chrome as a contributor to Next.js. One of the leaders of this project, her thing is that when they were working on frameworks internally at Google, they faced a lot of the same problems that the community and open source are facing today. There were many different competing initiatives at Google on how to scale and make really performant web apps out of the box.</p>\n<p>Guillermo: You would join as a Googler and you would be given a framework with which you would create really big production ready, very high performance applications. Shubie was part of a lot of those initiatives, and what she found is that there’s two key ingredients to making a framework succeed at scale. One is pre-configuration, meaning that you come to work, you’re going to start a brand new app, you should be given something that is already ready to go and meets a lot of the production demands that are known at that given point in time.</p>\n<p>Guillermo: On the other hand, the other really important step that we’re working towards is conformance. You can be given the most highly optimized production ready pre-configured framework, but if you go ahead and, for example, start introducing lots of heavy dependencies or third party scripts or use very inefficient layouts that take a long time to paint and so on and so forth, then you’re going to make that pre-configuration sort of go to waste. By mixing pre-configuration with conformance over time, the developer is not only having a great starting point, but it’s also guided to success over time.</p>\n<p>Drew: It seems that a characteristic of Next.js, that it’s quite opinionated, the UI layer is React, it uses type script, uses Webpack, and those are all choices that the project has made and that’s what you get. Correct me if I’m wrong, but you couldn’t swap out React for Vue, for example, within Next.js.</p>\n<p>Guillermo: That’s a good point, where technical decision making meets sort of an art. On one hand, I’d really like to claim that Next is very unopinionated, and the reason for this is that if you specifically go to github.com/vercel/nextjs and the examples directory, you’ll see that there’s almost like a combinatoric explosion of technologies that you can use together with Next.js. You’ll see fire-based, you’ll see Graphic UL, you’ll see Apollo, you’ll see Redux, you’ll see MobX, in the CSS space there’s even more options.</p>\n<p>Guillermo: We have a default CSS port that’s embedded, but then you can use two flavors of it, one with import, one with style tags which we call Style JSX, which resembles very much like the web platform approach to Shadow CSS. The reason I mean unopinionated is we want Next.js to stay very close to the \"bare metal\" of the web, and not introduce lots of primitives that if the web from 10 years from today would be incompatible with. Then if you look at the examples, you’ll see that there’s all these other technologies that you can plug in.</p>\n<p>Guillermo: The base level of opinionation is that there is React and you’re not going to be able to replace it, at least anytime soon. Then there is the concept of you should be able to create pages, and this was kind of like a new thing when we first launched it, which was everyone is trying to create single-page applications. What we realized is like the internet is made up of websites with lots of pages that create distinct entry points via search engines, via Twitter, via Facebook, via social networks, via email companions, like you always guide the person toward an entry point, and that person that comes through that entry point shouldn’t have to download the burden of the entirety of the application.</p>\n<p>Guillermo: Then that path led us to implementing server rendering, then static generation for multiple pages, et cetera, et cetera. That other base level of opinionation is Next should be a framework that works for the web, not against the web. Then on top of that, React was missing data fetching and routing primitives, and we added those. There’s a level of opinionation that has to deal with like everybody needs a router, so might as well have a router built in by default.</p>\n<p>Drew: The big advantage of having those defaults is it takes away a lot of the complexity of choice, that it’s just there, it’s configured, and you can just start using it without needing to think too much, because I think we’ve all-</p>\n<p>Guillermo: Exactly.</p>\n<p>Drew: Been in situations where there are far too many choices of what components to use, and it can be overwhelming and get in the way of being productive.</p>\n<p>Guillermo: Exactly.</p>\n<p>Drew: What sort of projects do you see people using Next.js for? Is it for basically any situation where you might build a production React app, or is it more suited to particular types of content heavy sites? Does it matter in that sense?</p>\n<p>Guillermo: Yeah, so this has been an age old debate of the web, is the web for apps, is the web for sites, is it a hybrid? What is the role of JavaScript, et cetera, et cetera? It’s kind of hard to give a straight up answer, but my take on this is the web was evolved always to be a hybrid of content that is evolving to be more and more dynamic and personal to the user. Even when you say like a content website, the high end content websites of the world have code bases that are very much comparable to apps.</p>\n<p>Guillermo: A great example here is like New York Times, they’ll give you embedded widgets with data analysis tools and interactive animation, and they’ll recommend what story to read next, and they have a subscription model built in which sometimes gives you part of the content and sometimes counts how many articles you’ve read. Like if I told you this when the web was invented, like Tim Berners-Lee would be like, \"No, that’s crazy, that’s not possible on the web,\" but that’s the web we have today.</p>\n<p>Guillermo: Next.js is answering a lot of these complex modern needs, which means you’ll see lots of e-commerce usage, you’ll see lots of content with that. E-commerce meaning, by the way, not just like buy items, but experiences like the largest real estate websites on the web, realtor.com, zillow.com, trulio.com, that entire category is all Next.js, then content sites. We just onboarded washingtonpost.com as a customer of Vercel and Next.js, we have then a third category that is more emergent but very interesting, which is full apps and user-generated content, like tiktok.com, and kind of like you would think the original single-page application use case as well being quite represented there.</p>\n<p>Guillermo: Next.js sort of shines when you need to have lots of content that has to be served very, very quickly, has to be SEO optimized, and at the end of the day, it’s a mix of dynamic and static.</p>\n<p>Drew: I’ve previously spoken to Marcy Sutton about Gatsby, which seems to be in a similar sort of space. It’s always great to see more than one solution to a problem and having choice for one project to the next. Would you say that Next.js and Gatsby are operating in the same sort of problem space, and how similar or dissimilar are they?</p>\n<p>Guillermo: I think there’s an overlap for some use cases. For example, my personal blog rauchg.com runs on Next.js, it could’ve just been a great Gatsby blog as well. There is that overlap in the smaller static website sort of space, and by small I don’t mean not relevant. A lot of dotcoms that are super, super important run on basically static web, so that’s the beauty of Jamstack in my opinion. Because Next.js can statically optimize your pages and then you can get great Lighthouse scores through that, you can use it for overlapping use cases.</p>\n<p>Guillermo: I think the line gets drawn when you start going into more dynamic needs and you have lots of pages, you have the need to update them at one time. Although Gatsby is creating solutions for those, Next.js already has production ready live solutions that work with any sort of database, any sort of data backend for basically \"generating\" or \"printing\" lots and lots of pages. That’s where today customers are going to Next.js instead of Gatsby.</p>\n<p>Drew: One of the problems that everyone seems to run into as their JavaScript-based solution gets bigger is performance and how things can start getting pretty slow, you have big bundle sizes. Traditionally, things like code splitting can be fairly complex to get configured correctly. I see that’s one of the features that jumped out at me of Next.js, that it claims that the code splitting is automatic. What does Next.js do in terms of code splitting to make that work?</p>\n<p>Guillermo: Your observation is 100% right. One of the biggest things with the web and one of the biggest weights on the web is JavaScript, and just like different materials have different densities and weights irrespective of the actual physical volume, JavaScript tends to be a very dense, heavy element. Even small amounts of JavaScript compared to, like for example, images that can be processed asynchronously and off the main thread, JavaScript tends to be particularly bothersome.</p>\n<p>Guillermo: Next.js has invested a tremendous amount of effort into automatically optimizing your bundles. The first one that was my first intuition when I first came up with the idea for Next.js was you’re going to define, for example, 10 routes. In the Next.js world you create a pages directory and you drop your files in there Index.js, About.js, Settings.js, Dashboard.js, Termsofservice.js, Signup.js, Login.js. Those become entry points to your application that you can share through all kinds of media.</p>\n<p>Guillermo: When you enter those, we want to give you JS that is relevant for that page first and foremost, and then perhaps a common bundle so that subsequent navigations within the system are very snappy. Next.js also, which is very, very nice, automatically pre-fetches the rest of the pages that are connected to that entry point, such that it feels like a single-page application. A lot of people say like, \"Why not just use Create React app if I know that I have maybe a couple routes?\" I always tell them, \"Look, you can find those as pages, and because Next.js will automatically pre-fetch ones that are connected, you end up getting your single-page application, but it’s better optimized with regards to that initial paint, that initial entry point.\"</p>\n<p>Guillermo: That was the initial code splitting approach, but then it became a lot more sophisticated over time. Google contributed a very nice optimization called Module and No Module, which will give differential JS to modern browsers, and legacy JS that’s heavy with polyfields to other browsers, and this optimization 100% automated and produces massive savings. We gave it to one of our customers that we host on Vercel called Parnaby’s, I believe if I’m not mistaken, it was something very, very significant. It was maybe like 30% savings in code sizes, and that was just because they upgraded Next.js to a version that optimized JS bundles better.</p>\n<p>Guillermo: That was kind of the point that we were going over earlier, which is you choose Next.js and it only gets better and more optimal over time, it’ll continue to optimize things on your behalf. Those are, again, pre-configurations that you would never have to deal with or be bothered with, and the research of which you don’t ever even want to do, to be honest. Like I wasn’t obviously very involved with this, but I look at some of the internal discussions and they were discussing all these polyfields that only mattered to Internet Explorer X and Soho, I was like, \"I don’t even want to know, let’s just upgrade Next.js and get all these benefits.\"</p>\n<p>Drew: There is sometimes great benefits on there with sticking with the defaults and sticking with the most common configuration of things, which seems to be really the Next.js approach. I remember when I started writing PHP back in the early 2000s, and everybody was using PHP and MySQL, and at the time I’d just come from Windows so I wanted to use PHP and Microsoft Sequel Server. You can do it, but you’re swimming against the tide the whole way. Then as soon as I just switched over to MySQL, the whole ecosystem just started working for me and I didn’t need to think about it.</p>\n<p>Guillermo: Yeah, everything just clicks, that is such a great observation. We see that all the time, like the Babel ecosystem is so powerful now that you could become, for example, a little bit faster by swapping Babel for something else, but then you trade off that incredible ecosystem compatibility. This is something you touched on performance earlier, and like for a lot of people, build performance and static generation performance is a big bottleneck, and this is something that we are very diligent in improving the performance of our tools incrementally.</p>\n<p>Guillermo: For example, one of the things that Next.js is doing now is that it’s upgrading its default from Webpack 4 to Webpack 5, which has some breaking things, and that’s why we’re first offering it to people as an opt-in flag, but later on it’ll become the default. Webpack 5 makes incredible performance improvements, but we’re not sacrificing the Webpack ecosystem, we incrementally improved. Sure, there were some very small things that needed to be sacrificed, but that’s an incredible benefit of the JS ecosystem today that a lot of people are glossing over, I think, because maybe they see, \"Oh, we could’ve done X in Soho, maybe it was a little faster, or maybe MPM in Soho would take less time.\" They pick up some details and they miss the bigger picture, which is the ecosystem value is enormous.</p>\n<p>Drew: The value of having all the configuration and the maintenance and that side of it done by a project like Next.js rather than taking that on yourself by swapping to using something else is incredible, because as soon as you move away from those defaults, you’re taking on the burden of keeping all the compatibilities going and doing it yourself. One of the things that I’ve been really interested in with Next.js is there are options available for either doing static site generation or server-side rendering, or maybe a hybrid of the two perhaps. I think there’s been some recent changes to this in a recent update, can you tell us a little bit about that and when you might choose one or the other?</p>\n<p>Guillermo: Yeah, for sure. One of the key components of this hybrid approach combined with the page system that I described earlier is that you can have pages that are fully static or pages that server rendered. A page that’s fully static has the incredible benefit of what I call static hoisting, which is you can take that asset and automatically put it at the edge. By putting it at the edge, I mean you can cache it, you can preemptively cache it, you can replicate it, you can make it so that when a request comes in, it never touches the server because we know ahead of time, \"Hey, Slash Index is a static.\"</p>\n<p>Guillermo: That’s a very, very interesting benefit when it comes down to serving global audiences. You basically get an automatic CDN out of the box, especially when you deploy the modern edge networks like Vercel or AWS Amplify or Netlify and so on. Next.js has this premise of if it can be made static, it should be static. When you’re first starting a project and you’re working on your first page or you’re kicking the tires of the framework, might as well make everything static.</p>\n<p>Guillermo: Even for high end needs, so for example, vercel.com, our own usage of Next.js is fully static. It’s a combination of fully static and static site generation, so all our marketing pages are static, our blog is statically generated from a dynamic data source, and then our dashboard which has lots of dynamic data, but we can deliver it as shells or skeletons, all the pages associated with viewing your deployments, viewing your projects, viewing your logs, et cetera, et cetera, are all basically static pages with client-side JavaScript.</p>\n<p>Guillermo: That serves us incredibly well because everything where we need a very fast first-pane performance is already pre-rendered, everything that needs SEO, already pre-rendered, and everything that’s extremely dynamic, we only have to worry about security, for example, from the perspective of the client side which uses the same API calls that, for example, our CLI used or our integrations use, et cetera, et cetera. A fully static website, very cheap to operate, incredibly scalable and so on and so forth.</p>\n<p>Guillermo: Now, one particular thing that we needed with our blog was we wanted to update the data very quickly. We wanted to fix a typo very quickly and not wait for an entire build to happen, and this is a very significant benefit of Next.js, that as you straddle from a static to a dynamic, it gives you these in between solutions as well. For our blog we used incremental static generation, so essentially we can rebuild one page at a time when the underlying content changes.</p>\n<p>Guillermo: Imagine that we had not just a couple hundred blog posts and we had lots of blog posts being generated all the time and being updated all the time, like I mentioned one of our customers, Washington Post, in that case you need to go more toward full SSR, especially as you start customizing the content for each user. That journey of complexity that I just described started from I have one marketing page, to I have a blog that has a couple thousand pages, to I have tens of thousands or millions of pages. That’s the Next.js journey that you can traverse with your own business.</p>\n<p>Guillermo: Then you start as a developer to choose between perhaps less responsibility to more responsibility, because when you opt in to using SSR, you’re now executing code on the server, you’re executing code on the cloud, there’s more responsibility with more power. The fact that you can decide where you use each kind of tool is I think a very, very interesting benefit of Next.</p>\n<p>Drew: Just in practicalities of combining the static site generation and the server-side rendering, how does that work in terms of the server element? Are you needing a dedicated platform like Vercel to be able to achieve that, or is that something that can be done more straightforwardly and more simply?</p>\n<p>Guillermo: Next.js gives you a dev server, so you download Next and you run your Next Dev, and that’s the dev server. The dev server is obviously incredibly optimized for development, like it has the latest fast refresh technology that Facebook released, where ... Actually, Facebook didn’t release it, Facebook uses it internally to get the best and most performant and most reliable hot module replacement, such that you’re basically typing and it changes are reflecting on the screen, so that’s the dev server.</p>\n<p>Guillermo: Then Next gives you a production server called Next Start, and Next Start has all the capabilities of the framework for self-hosting. The interesting thing about Vercel is that when you deploy Next to it, it gets automatically optimized and it’s 100% serverless, meaning there’s no responsibility whatsoever of administration, scaling, cashing and cashing validation, purging, replication, global fail over and so on and so forth that you would have to take on when you run Next Start yourself.</p>\n<p>Guillermo: That’s also the great benefit of Next.js, so for example, apple.com has several different properties, subdomains and pages on dotcom on Next.js they self-host, due to very, very advanced and stringent security and privacy needs. On the other hand, washingtonpost.com uses Vercel, so we have this sort of wide range of users, and we’re extremely happy to support all of them. The nice thing about where serverless is headed in my opinion is it can give you best of both worlds in terms of the most optimal performance that only gets better over time, with the best developer experience of like, \"Hey, I don’t have to worry about any sort of infrastructure.\"</p>\n<p>Drew: The Next.js is an open source project that’s being developed by the team at Vercel. Are there other contributors outside of Vercel?</p>\n<p>Guillermo: Yeah, so Google Chrome being the main one that actively submit server PRs, help us with optimizations and testing it with partners, like very large Next.js users that are already part of the Google ecosystem, for example, due to using lots and lots of apps, so they need to be involved closely as partners. Facebook, we maintain a great relationship with the Facebook team. For example, fast refresh, we were the first React framework to land that, and they helped guide us through all the things that they learned of using React and fast refresh at Facebook.</p>\n<p>Guillermo: We work with lots of partners that have very large deployments of Next.js apps in the wild from all kinds of different sort of use cases, like imagine e-commerce and content. Then there’s just lots and lots of independent contributors, people that use Next.js personally, but also educators and members of front infrastructure teams at large companies. It’s a very, very wide community effort.</p>\n<p>Drew: It sounds like the concern that somebody might have, that this is being developed in a significant part by Vercel, that they might have the concern that they’re going to get sort of locked into deploying on that particular platform, but it sounds very much like that’s not the case at all, and they could develop a site and deploy it on Firebase or Netlify or...</p>\n<p>Guillermo: Yeah, absolutely. I like to compare it a lot for like the Kubernetes of the Front End age in a way, because at the end of the day I am a firm believer that ... Kubernetes is something that pretty much almost everyone needs when they need to run Linux processes, like you were talking about opinionation and you’re saying it’s a good technology, it’s very much not opinionated, but there is some opinionation that we kind of forget about. It’s like at the end of the day, it grew out of running a specific demons of Linux programs packaged as containers.</p>\n<p>Guillermo: Next is in a similar position, because what we take for being the universal primitive of the world as a React component, obviously it’s opinionated, but we do think that for lots of enterprises, just like they all gravitate towards Linux, we are seeing the same thing towards React and Vue, but Vue luckily has Nuxt too, which is a very awesome solution, it’s equivalent in ideation and principles as Next. We’re gravitating towards these platforms like Next.js, like Nuxt, like Sapper for the Svelte ecosystem.</p>\n<p>Guillermo: I think these should be open platforms, because again, if everybody’s going to need this, might as well not reinvent the wheel across the entire industry, right? We very much welcome that position, we welcome people to deploy it and reconfigure it and rebuild it and redistribute it and so on.</p>\n<p>Drew: Just recently a new version of Next.js was released, I think version 9.5. What significant changes were there in that release?</p>\n<p>Guillermo: The most awesome one is, as I was saying earlier, a lot of things start static and then become more dynamic as things grow. This was the venture for WordPress, by the way. WordPress in the beginning was based on a static file database approach, and then grew into needing a database, kind of like what you described with how PHP evolved to be more and more MySQL. What’s nice about Next.js 9.5 is that it makes incremental static generation a production ready feature, so we took it out of the unstable flag.</p>\n<p>Guillermo: This feature allows you to make that journey from static to dynamic without giving up on all the static benefits, and without having to go full for server-rendered dynamic, so it stretches the useful lifetime of your sort of static. The way we use it at Vercel, for example, as I mentioned, it’s like our blog gets fully pre-rendered at build time, but then for example, we’re actually in a couple minutes about to make a major announcement, and when we blog about it we want to be able to tweak it, fix it, preview it, et cetera without having to issue a five to 10-minute build every time we change one letter of one blog post.</p>\n<p>Guillermo: With incremental static generation, you can rebuild one page at a time. What could take minutes or even seconds, depending on how big your site is, now takes milliseconds. Again, you didn’t have to give up on any of the benefits of static. That’s perhaps the thing I’m most excited about that went stable on Next.js 9.5, and specifically because the JS community and the React community and the framework community and static site generated community have been talking about this unicorn of making a static incremental for a long time, so the fact that Next.js did it, it’s being used in production and it’s there for everybody to use, I think it’s a major, major, major milestone.</p>\n<p>Guillermo: There’s lots of little DX benefits. One that’s really nice in my opinion is Next.js, as I said, has a page system. You would argue, \"Okay, so let’s say that I’m uber.com and I’ve decided to migrate on Next.js, do I need to migrate every URL inside over to Next.js in order to go live?\" This has become a pretty important concern for us, because lots of people choose Next.js, but they already are running big things, so how do you reconcile the two?</p>\n<p>Guillermo: One of the things that Next.js allows you to do in 9.5 is you can say, \"I want to handle all new pages that I created with Next.js with Next.js, and the rest I want to hand off to a legacy system.\" That allows you incremental, incremental is the keyword here today, incremental adoption of Next.js. You can sort of begin to strangle your legacy application with your Next.js optimized application one page at a time, when you deploy and you introduce in your Next.js page, it gets handled by Next. If it doesn’t match the Next.js routing system, it goes to the legacy system.</p>\n<p>Drew: That sounds incredibly powerful, and the incremental rendering piece of that, I can think of several projects immediately that would really benefit that have maybe 30-minute build times for fixing a typo, as you say. That sort of technology is a big change.</p>\n<p>Guillermo: We talked to one of the largest, I believe, use cases in Jamstack in the wild, and it was basically a documentation website and their build times were 40 minutes. We’re doing a lot in this space, by the way, like we’re making pre-rendering a lot faster as well. One of my intuitions for years to come is that as platforms get better, as the primitives get better, as the build pipelines get better we’re going to continue to extend the useful lifetime of statics. Like what ended up taking 40 minutes is going to take four.</p>\n<p>Guillermo: A great example is we’re rolling out an incremental build cache, as well, system. I sort of pre-announced it on Twitter the other day, we’re already seeing 5.5 times faster incremental builds. One of the things that I like about Jamstack is that the core tenet is pre-render as much as possible. I do think that’s extremely valuable, because when you’re pre-rendering you’re not rendering just in time at runtime. Like what otherwise the visitor would incur in in terms of rendering costs on the server gets transferred to build time.</p>\n<p>Guillermo: One of the most exciting things that’s coming to Next is that without you doing anything as well, the build process is also getting faster. On the Vercel side, we’re also taking advantage of some new cloud technology to make pre-rendering a lot faster as well. I think we’re always going to live in this hybrid world, but as technology gets better, build times will get better, pre-rendering will get better and faster, and then you’ll have more and more opportunities to do kind of a mix of the two.</p>\n<p>Drew: Sounds like there’s some really exciting things coming in the future for Next.js. Is there anything else we should know before we sort of go away and get started working with Next.js?</p>\n<p>Guillermo: Yeah. I think for a lot of people for whom this is new, you can go to nextjs.org/learn, it’ll walk you through building your first small static site with Next.js, and then it’ll walk you through the journey of adding more and more complexity over time, so it’s a really fun tutorial. I recommend also staying tuned for our announcement that I was just starting to share on twitter.com/vercel, where we share a lot of Next.js news. Specifically we highlight a lot of the work that’s being done on our open source projects and our community projects and so on. For myself as well, twitter.com/rauchg if you want to stay on top of our thoughts on the ecosystem.</p>\n<p>Drew: I’ve been learning all about Next.js today, what have you been learning about lately, Guillermo?</p>\n<p>Guillermo: As a random tangent that I’ve been learning about, I decided to study more economics, so I’ve been really concerned with like what is the next big thing that’s coming in terms of enabling people at scale to live better lives. I think we’re going through a transition period, especially in the US, of noticing that a lot of the institutions that people were \"banking on\", like the education system, like the healthcare system, a lot of those, like where you live and whether you’re going to own a house or rent and things like that, a lot of these things are changing, they have changed rapidly, and people have lost their compass.</p>\n<p>Guillermo: Things like, \"Oh, should I go to college? Should I get a student loan?\" and things like that, and there is a case to be made for capitalism 3.0, and there is a case to be made for next level of evolution in social and economic systems. I’ve been just trying to expand my horizons in learning a lot more about what could be next, no pun intended. I’ve found there’s lots of great materials and lots of great books. A lot of people have been thinking about this problem, and there is lots of interesting solutions in the making.</p>\n<p>Drew: That’s fascinating. If you, dear listener, would like to hear more from Guillermo, you can find him on Twitter at @RauchG, and you can find more about Next.js and keep up to date with everything that goes on in that space at nextjs.org. Thanks for joining us today, Guillermo. Do you have any parting words?</p>\n<p>Guillermo: No, thank you for having me.</p>\n","descriptionType":"html","publishedDate":"Tue, 25 Aug 2020 05:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fb1a5498-6210-4075-8596-7a562a14c00a/smashing-podcast-episode-23.png","linkMd5":"8abfe7b036a7eadf0d06267630e489aa","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn92@2020_3/2020/09/05/07-59-16-362_20bc157305701668.webp","destWidth":1201,"destHeight":631,"sourceBytes":313587,"destBytes":68814,"author":"hello@smashingmagazine.com (Drew McLellan)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fb1a5498-6210-4075-8596-7a562a14c00a/smashing-podcast-episode-23.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5223c15e-205e-4f46-83f6-b97c51e6754d/guillermo-rauch-200x200.jpg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn43@2020_4/2020/09/05/07-59-35-459_18014d9d226a68da.webp"},"publishedOrCreatedDate":1599292755733},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Everything Developers Need To Know About Figma","link":"https://smashingmagazine.com/2020/09/figma-developers-guide/","description":"<p>If you aren’t using it yet the name Figma is surely a name that you’ve heard more and more over the last few years. </p>\n<p>Figma is a relatively new design tool that is browser-based. This means you don’t need to install it locally or buy expensive licenses to give team members access to design files. This has made design more accessible than ever and that’s why many developers now find themselves needing to learn how to work with design tools.</p>\n<p>Since many developers don’t have a lot of experience playing around in design tools we’ll cover all the basics developers need to know about so you can confidently navigate around Figma and extract any information you might need when working with the designs sent to you by a designer.</p>\n<p>I’ll also cover some specific Figma features that make it easier for developers such as providing CSS information about elements used within the design.</p>\n<h4>A Quick Note About Shortcuts</h4>\n<p>Most shortcuts are written for both Windows and Mac, where the Ctrl key on Windows corresponds to the Cmd key on the Mac, and Alt is used for both Alt (Windows) and Option/Alt (Mac).</p>\n<p>For example, Ctrl/Cmd + Alt + C is Ctrl + Alt + C on Windows and Cmd + Alt/Option + C on the Mac.</p>\n<h3>Developer Handoff</h3>\n<p>To understand the hype around Figma and why you suddenly find yourself needing to learn how design tools work as a developer, it’s helpful to look back on the developer handoff process before Figma was around as it has changed significantly.</p>\n<p>Design teams used to send an email to the development team with dozens of attachments containing static images of the design, exported assets, and even word documents with the page copy. Developers usually didn’t have access to the full design files as licenses for design software were expensive and not strictly necessary. Communication and feedback were scattered across email, project management tools, and meeting notes. Everyone was struggling with keeping track of changes to the design; every time the design was updated, it needed to be sent to everyone involved — yet again.</p>\n<p>As design tools modernized, this process got more streamlined. Designers would often use separate tools like Zeplin or Invision to handoff the designs to developers. Developers now had better access to the designs and had more tools available to extract information about typography, colors, and measurements. Although it was easier to find the latest version of a design for everyone, designers needed to work in separate tools and keep them in sync. A big improvement but still not perfect.</p>\n<p>Figma is a design tool that is rapidly gaining in popularity and shakes up the design handoff process once again. Figma is browser-based so everyone can use it regardless of their operating system and without installing anything. It’s also completely cloud-based so everyone is always looking at the latest version of the design and has built-in collaboration tools making collaborating and communicating easier than ever. </p>\n<p>If you want to follow along with this article (or just play around with Figma), I’ll be using this file to explain everything in this tutorial:</p>\n<ul>\n<li><a href=\"https://www.figma.com/community/file/827488004796756851\">Figma startup landing page dark</a> (download)</li>\n</ul>\n<h3>The Basics</h3>\n<p>When you are added as a collaborator on a Figma design you can choose to open it in the browser or you can <a href=\"https://www.figma.com/downloads/\">download the desktop app</a> (available on Windows and macOS). The desktop app is not a native app but a cross-platform electron app like Slack and Visual Studio Code. The functionality of the browser and desktop versions is largely the same. The desktop app does have built-in support for using local fonts whereas the browser version requires installing the Figma Font Helper before you can use local fonts.</p>\n<p>Figma’s interface is split into three major parts. In the middle, you’ll find a big canvas where all the designs are located. On the left side, there is a sidebar that contains the layers, assets, and pages of a file. The right toolbar contains all information about elements in the file.</p>\n<p>A file can have multiple pages and every page has one canvas. Designers often use pages to separate and organize different parts of the file with separate pages for the design system, icons, or other file assets.</p>\n<p>When opening up a new file for the first time, make sure to familiarize yourself with the different pages within the file. If the designer you are working with has made a separate page for all colors, typography, and icons it can save you time while building out the design.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bc464a52-92e4-4e3d-a224-0c5f9f8626fc/figma-interface.png\" /></p>\n<h3>Navigating Figma</h3>\n<p>Before we get to the good stuff, it’s important that you can quickly navigate around in Figma so you can work more efficiently.</p>\n<p>When you open a file you’ll start on the largest zoom level that fits all the frames in the visible area.</p>\n<ul>\n<li>You can zoom in or out by holding Cmd ⌘ and scrolling up/down or by pressing the + and - keys.</li>\n<li>If you want to scroll horizontally on the canvas you hold the spacebar and drag with your mouse.</li>\n<li>You can zoom in quickly on a single frame or element by selecting it and pressing Shift + 2.</li>\n<li>Quickly return to where all elements fit in the canvas by pressing Shift + 1.</li>\n</ul>\n<p>Don’t worry too much about remembering these shortcuts for now, just know that they are available and you can always view these and other available shortcuts by pressing Cmd + Shift + ?.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e91b57b7-dadf-4f5e-8cce-fdadd634a357/shortcuts-figma.png\" /></p>\n<p>Once you have used a shortcut it will be colored blue so you can easily see which ones you still need to learn.</p>\n<h3>Project Styles</h3>\n<p>When you’re opening a brand new project it’s helpful to set up all the basic styles first. Figma displays all the project styles in the right sidebar. Here you can easily find all the typography, colors, grids, and other styles used in the design.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/622087b6-9284-45c6-9fba-23488aad9c61/project-styles-figma.png\" /></p>\n<p>Note that the project styles will only display if no element is selected. If you want to cancel your selection and view the project styles, simply click somewhere in the canvas or use the Esc key.</p>\n<p>You can use this information to set up your layout, variables, and fonts in CSS. Simply click on the edit icon next to the style element to view all information about that style.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a4eee538-f084-42b5-83e8-4a4d6dbe13ce/select-layer-figma.png\" /></p>\n<p>If you double click an element, it will select one nesting level lower every time you double click. This is a great way to drill down into an element until you get to the desired selection.</p>\n<p><em>There are many more ways to select and navigate layers, this article just covers the basics that are used 80% of the time. Figma’s documentation teaches more ways <a href=\"https://help.figma.com/hc/en-us/articles/360040449873-Select-layers-and-objects\">to select and navigate layers</a>.</em></p>\n<p>Once you select an element, you can click the <strong>Code</strong> tab in the right sidebar to display all the CSS information about that element.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1feae473-0c3c-42d4-abdf-a5a3b795588c/code-tab-figma.png\" /></p>\n<p>It’s important to note that the CSS is automatically generated and is not perfect, especially for positioning elements. Don’t copy all CSS 1-to-1 to your project but instead use it as a guide and a quick way to get information about elements.</p>\n<h3>Dimensions And Measuring</h3>\n<p>Whenever you want to measure spaces between elements, correctly position elements, or even set the right margin or padding, all you need to do is select the element that you want to measure from, then hold the Alt and hover your mouse over the element you’d like to measure the distance to.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c85f177-b4bf-4126-a6da-ecc64c30cd81/export-settings-figma.png\" /></p>\n<p>Depending on what type of file you are exporting there will be different export settings you can tweak. Images only have a scale multiplier and you can choose the file type (PNG, JPG, SVG or PDF). Figma will use the name of the layer as the file name but you can add a file name suffix. You can then export the selected element using the export button.</p>\n<p><strong>Quick tip:</strong> <em>You can also quickly export an asset by right-clicking it, hovering on Copy/paste and copying the image or SVG code. This is useful if you don’t need to have custom export settings and just need a quick copy of a single element.</em></p>\n<h4>Export all Assets</h4>\n<p>You can export each individual asset by selecting it and clicking the export button but you can also export all assets that are exportable at once.</p>\n<p>If you want to export all the assets from the design in one go you can go to the main menu, and click <strong>Export..</strong> under the File menu. You can also use the keyboard shortcut Shift + Cmd + E on MacOS or Shift + Ctrl + E on Windows.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c56b4370-cfd0-4cf6-b000-308dc25bf018/export-all-figma.png\" /></p>\n<p>This will display a list of all the items in the file that are marked for export. You can then inspect the dimensions, file type and exclude any files before making the final export. If you hover over the thumbnail of the assets it will display the file name that the asset will have when it’s exported.</p>\n<p>If you need to make adjustments, clicking on the thumbnail of an asset will select that element in the canvas where you can easily adjust the export settings.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e98d12f0-6a0f-48a8-b620-f74a61a24528/export-all-assets-figma.png\" /></p>\n<p>If you have a lot of exportable assets in a single file, you can use a slash “/” in your layer name to mark it as a group of assets. Figma will then automatically create a folder for that group and export the assets within that group to the subfolder.</p>\n<h3>User Flow And Animations</h3>\n<p>Figma also supports a <a href=\"https://blog.jurn.io/figma-animation-examples/\">variety of animations</a> for transition between states or pages, for opening modals or menus, for dragging and swiping actions on mobile and much more. You can preview these animations by clicking the play icon in the top right to open Presentation view.</p>\n<p>To view the information about an animation, select the <strong>Prototype</strong> tab in the right sidebar and you’ll see the user flow displayed in blue arrows in the canvas. </p>\n<p>Clicking on the arrow shows you all the information about that specific animation. Each animation consists of a trigger, an action, and a transition.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/063a4696-1b9a-4cbb-8915-19024c627968/animation-tab-figma.png\" /></p>\n<p>This simple animation opens a hamburger menu. You can see that the hamburger icon has an <strong>On Tap</strong> trigger, once it is triggered it will <strong>Navigate To</strong> the screen where the mobile menu is in an opened state. The transition type is a <strong>Smart Animate</strong> transition which means Figma automatically interpolates between these two states. It does this using an <strong>Ease Out</strong> animation function with a duration of <strong>300ms</strong>.</p>\n<p>This information is necessary to exactly replicate the animations in CSS but unlike all other element information, animations can not be found in the Code tab!</p>\n<h3>Communication</h3>\n<p>If anything isn’t clear and you’d like to ask someone else on the project for clarification. All you have to do is click on the chat bubble icon in the top toolbar or hit the C key to switch to the Comment tool.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ad26699d-eb3a-4d00-8ec3-61a58bd259af/comment-tool-figma.png\" /></p>\n<p>You can now click anywhere in the design and start typing a comment or question about that element. Once you’ve finished writing your comment, you can use the V key to return to the normal cursor.</p>\n<p>Note that not everyone will automatically receive a notification that you left a comment. If you want to be sure someone sees your comment you should mention them using the @ symbol just like on Slack or Twitter.</p>\n<p>Every comment is visible to everyone who has access to the design as there are no private comments/chats. Once the issue has been resolved it can be marked as such and the comment will gray out.</p>\n<h3>Conclusion</h3>\n<p>We’ve covered a lot of ground so far in Figma and you should be able to navigate around and extract all the information you need from any Figma design file sent your way. Getting information about typography and colors, measuring margins, padding and position of elements, exporting assets and collaborating with other team members.</p>\n<p>If you want to learn more about the tool, <a href=\"https://help.figma.com/hc/en-us\">Figma’s documentation</a> is a great place to start or search when you want to learn more about a specific feature.</p>\n","descriptionType":"html","publishedDate":"Wed, 02 Sep 2020 11:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1bdb95ed-a19e-4c9e-a619-06d040d59396/figma-developers-guide.png","linkMd5":"f3b6fa9b4a0de46db15a88ca8ddaba3b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn4@2020_1/2020/09/05/07-59-16-270_75cb92274bc7f3f2.webp","destWidth":1201,"destHeight":631,"sourceBytes":286609,"destBytes":51444,"author":"hello@smashingmagazine.com (Jurn van Wissen)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1bdb95ed-a19e-4c9e-a619-06d040d59396/figma-developers-guide.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bc464a52-92e4-4e3d-a224-0c5f9f8626fc/figma-interface.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn69@2020_3/2020/09/05/07-59-29-139_6d3644dac4402151.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e91b57b7-dadf-4f5e-8cce-fdadd634a357/shortcuts-figma.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn13@2020_4/2020/09/05/07-59-18-198_cdf54c3328ea477d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/622087b6-9284-45c6-9fba-23488aad9c61/project-styles-figma.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn26@2020_2/2020/09/05/07-59-23-308_10d1eda9fda5d816.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a4eee538-f084-42b5-83e8-4a4d6dbe13ce/select-layer-figma.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn74@2020_6/2020/09/05/07-59-28-523_a50bc64359a253d0.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1feae473-0c3c-42d4-abdf-a5a3b795588c/code-tab-figma.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn71@2020_6/2020/09/05/07-59-36-784_d4cc789bafee9b33.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c85f177-b4bf-4126-a6da-ecc64c30cd81/export-settings-figma.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn2@2020_6/2020/09/05/07-59-30-921_1062453b87d2f878.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c56b4370-cfd0-4cf6-b000-308dc25bf018/export-all-figma.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn80@2020_4/2020/09/05/07-59-26-508_68f66660c58c7e75.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e98d12f0-6a0f-48a8-b620-f74a61a24528/export-all-assets-figma.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn21@2020_6/2020/09/05/07-59-22-833_c8e3ea9d55275fe3.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/063a4696-1b9a-4cbb-8915-19024c627968/animation-tab-figma.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn70@2020_2/2020/09/05/07-59-33-059_d288e727a30b9cae.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ad26699d-eb3a-4d00-8ec3-61a58bd259af/comment-tool-figma.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn53@2020_1/2020/09/05/07-59-25-737_4139e5c39fd66bfe.webp"},"publishedOrCreatedDate":1599292755725},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"September In All Its Facets (2020 Wallpapers Edition)","link":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","description":"<p>September is just around the corner and, well, that means it’s time for some new wallpapers! Since more than nine years already, our <a href=\"https://www.smashingmagazine.com/category/wallpapers\">monthly wallpapers series</a> is the perfect opportunity for artists and designers from all across the globe to challenge their creative skills and dive into a little project just for fun. What tools or techniques they use — be it illustration, lettering, or photography — and what stories they want to tell with their designs is entirely up to them. This always makes for an exciting and unique collection of wallpapers each month anew. And, of course, this month is no exception.</p>\n\n<p>In this post, you’ll find wallpaper designs for <strong>September 2020</strong>, created with love by the design community for the community. All of them are available in versions with and without a calendar and can be downloaded for free. A big thank-you to everyone who shared their artworks with us — we sincerely appreciate it!</p>\n\n<p>Last but not least, to cater for some extra variety, we also included some favorites from past September editions at the end of this post — timeless treasures from the archives that are just too good to be forgotten. Enjoy!</p>\n\n<ul>\n<li>All <strong>images can be clicked on</strong> and lead to the preview of the wallpaper,</li>\n<li>We respect and carefully consider the ideas and motivation behind each and every artist’s work. This is why we give all artists the <strong>full freedom to explore their creativity</strong> and express emotions and experience through their works. This is also why the themes of the wallpapers weren’t anyhow influenced by us but rather designed from scratch by the artists themselves.</li>\n</ul>\n\n<div>\n<h4>Submit your wallpaper</h4>\n<p>Did you know that <em>you</em> could get featured in one of our upcoming wallpapers posts, too? We are always <strong>looking for creative talent</strong>, so if you have an idea for a wallpaper for October, please don’t hesitate to submit it. We’d love to see what you’ll come up with. <a href=\"https://www.smashingmagazine.com/desktop-wallpaper-calendars-join-in/\">Join in! →</a></p>\n</div>\n\n\n\n<h3>Terrazzo</h3>\n<p>“With the end of summer and fall coming soon, I created this terrazzo pattern wallpaper to brighten up your desktop. Enjoy this month!” — Designed by <a href=\"https://www.embee.me/\">Melissa Bogemans</a> from Belgium.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/sep-20-terrazzo-full.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b72dc50f-b61a-4234-b83a-f52d7eb77f07/sep-20-terrazzo-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/sep-20-terrazzo-preview.png\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/cal/sep-20-terrazzo-cal-2560x1440.png\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/terrazzo/nocal/sep-20-terrazzo-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<h3>September Vibes</h3>\n<p>“On September 1st, the first day of school in our country, schoolchildren across Serbia would write about what autumn feels like in their neighborhood. Usually, it’s the imagery of fallen leaves rustling under the feet, foggy and chilly mornings with the sun breaking between the murky clouds, a muffled sound of a chainsaw cutting firewood somewhere in the distance, the smells of fruits and vegetables being prepared for home canning. Autumn is the season of serenity, quietness, and reflection.” — Designed by <a href=\"https://www.popwebdesign.net//portfolio-popart-studio-eng.html?id=logos\">PopArt Studio</a> from Serbia.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/sep-20-september-vibes-full.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/96aa9326-5107-4c95-8546-9023ec54dc8f/sep-20-september-vibes-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/sep-20-september-vibes-preview.png\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/cal/sep-20-september-vibes-cal-2560x1440.png\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/september-vibes/nocal/sep-20-september-vibes-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<h3>Sunset Paradise</h3>\n<p>“‘Spin me a sunset paradise; Make it glisten in the sun; Give out love and happiness; Free to each and everyone; The kindest smiles and faces; Everywhere that we look.’” — Designed by <a href=\"https://www.behance.net/moonbeamst\">Anh Nguyet Tran</a> from Vietnam.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/sep-20-sunset-paradise-full.jpg\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0e6791cf-d9b0-4e7c-809f-564d91681e6d/sep-20-sunset-paradise-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/sep-20-sunset-paradise-preview.jpg\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/cal/sep-20-sunset-paradise-cal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/cal/sep-20-sunset-paradise-cal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/cal/sep-20-sunset-paradise-cal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/cal/sep-20-sunset-paradise-cal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/cal/sep-20-sunset-paradise-cal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/cal/sep-20-sunset-paradise-cal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/cal/sep-20-sunset-paradise-cal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/cal/sep-20-sunset-paradise-cal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/cal/sep-20-sunset-paradise-cal-2560x1440.jpg\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/nocal/sep-20-sunset-paradise-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/nocal/sep-20-sunset-paradise-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/nocal/sep-20-sunset-paradise-nocal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/nocal/sep-20-sunset-paradise-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/nocal/sep-20-sunset-paradise-nocal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/nocal/sep-20-sunset-paradise-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/nocal/sep-20-sunset-paradise-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/nocal/sep-20-sunset-paradise-nocal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/sunset-paradise/nocal/sep-20-sunset-paradise-nocal-2560x1440.jpg\">2560x1440</a></li>\n</ul>\n\n<h3>Better Days Ahead</h3>\n<p>“A hopeful message we all need right now.” — Designed by <a href=\"https://footballopus.com/\">Andrew</a> from Portugal.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/better-days-ahead/sep-20-better-days-ahead-full.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d5a6796-01f5-46ab-8204-02378d2ba931/sep-20-better-days-ahead-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/better-days-ahead/sep-20-better-days-ahead-preview.png\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/better-days-ahead/cal/sep-20-better-days-ahead-cal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/better-days-ahead/cal/sep-20-better-days-ahead-cal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/better-days-ahead/cal/sep-20-better-days-ahead-cal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/better-days-ahead/cal/sep-20-better-days-ahead-cal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/better-days-ahead/cal/sep-20-better-days-ahead-cal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/better-days-ahead/cal/sep-20-better-days-ahead-cal-2560x1440.png\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/better-days-ahead/nocal/sep-20-better-days-ahead-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/better-days-ahead/nocal/sep-20-better-days-ahead-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/better-days-ahead/nocal/sep-20-better-days-ahead-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/better-days-ahead/nocal/sep-20-better-days-ahead-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/better-days-ahead/nocal/sep-20-better-days-ahead-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/better-days-ahead/nocal/sep-20-better-days-ahead-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<h3>Changing Of The Seasons</h3>\n<p>“Enjoy the warm sunny days and sleepy autumn evenings brought about by the change of seasons.” — Designed by <a href=\"https://www.librafire.com\">LibraFire</a> from Serbia.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/sep-20-changing-of-the-seasons-full.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7c7cade6-6adb-4009-af71-1cf99e5154c0/sep-20-changing-of-the-seasons-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/sep-20-changing-of-the-seasons-preview.png\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/cal/sep-20-changing-of-the-seasons-cal-2560x1440.png\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/changing-of-the-seasons/nocal/sep-20-changing-of-the-seasons-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<h3>Never Stop Exploring</h3>\n<p>Designed by <a href=\"https://www.ricardogimenes.com/\">Ricardo Gimenes</a> from Sweden.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/sep-20-never-stop-exploring-full.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7504b111-74b8-4bc6-9926-e9ab58b34fc8/sep-20-never-stop-exploring-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/sep-20-never-stop-exploring-preview.png\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-2560x1440.png\">2560x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/cal/sep-20-never-stop-exploring-cal-3840x2160.png\">3840x2160</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-2560x1440.png\">2560x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/never-stop-exploring/nocal/sep-20-never-stop-exploring-nocal-3840x2160.png\">3840x2160</a></li>\n</ul>\n\n<h3>Bi, And</h3>\n<p>“September includes both National Ampersand Day and Celebrate Bisexuality Day, which seemed like a perfect match. This features a bunch of my favorite ‘&#38;’ designs, to celebrate the happy and loving relationships that bi people can have with… anyone. Of any shape, size, gender, and orientation. They’re all valid. (Flag pairings cheatsheet, left to right: bi &#38; proud LGBTQ, also-bisexual, lesbian, straight, asexual, intersex, nonbinary, transgender. Not even trying to be a comprehensive list.)” — Designed by <a href=\"https://leifandthorn.com/\">Erin Ptah</a> from the United States.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/sep-20-bi-and-full.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/393f89c6-a5c2-4952-b4ca-d90ed5dff604/sep-20-bi-and-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/sep-20-bi-and-preview.png\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/cal/sep-20-bi-and-cal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/cal/sep-20-bi-and-cal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/cal/sep-20-bi-and-cal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/cal/sep-20-bi-and-cal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/cal/sep-20-bi-and-cal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/cal/sep-20-bi-and-cal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/cal/sep-20-bi-and-cal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/cal/sep-20-bi-and-cal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/cal/sep-20-bi-and-cal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/cal/sep-20-bi-and-cal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/cal/sep-20-bi-and-cal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/cal/sep-20-bi-and-cal-2133x1200.png\">2133x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/cal/sep-20-bi-and-cal-2560x1440.png\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/nocal/sep-20-bi-and-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/nocal/sep-20-bi-and-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/nocal/sep-20-bi-and-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/nocal/sep-20-bi-and-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/nocal/sep-20-bi-and-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/nocal/sep-20-bi-and-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/nocal/sep-20-bi-and-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/nocal/sep-20-bi-and-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/nocal/sep-20-bi-and-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/nocal/sep-20-bi-and-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/nocal/sep-20-bi-and-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/nocal/sep-20-bi-and-nocal-2133x1200.png\">2133x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/bi-and/nocal/sep-20-bi-and-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<h3>Weekend Relax</h3>\n<p>“Since we are mostly staying in this summer, I’m looking forward for the weekend to enjoy drinks with friends!” — Designed by <a href=\"https://drinkingagein.com/\">Robert</a> from the United States.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/weekend-relax/sep-20-weekend-relax-full.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d51de6a2-7b7e-449a-bda7-672bb6290cab/sep-20-weekend-relax-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/weekend-relax/sep-20-weekend-relax-preview.png\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/weekend-relax/cal/sep-20-weekend-relax-cal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/weekend-relax/cal/sep-20-weekend-relax-cal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/weekend-relax/cal/sep-20-weekend-relax-cal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/weekend-relax/cal/sep-20-weekend-relax-cal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/weekend-relax/cal/sep-20-weekend-relax-cal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/weekend-relax/cal/sep-20-weekend-relax-cal-2560x1440.png\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/weekend-relax/nocal/sep-20-weekend-relax-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/weekend-relax/nocal/sep-20-weekend-relax-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/weekend-relax/nocal/sep-20-weekend-relax-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/weekend-relax/nocal/sep-20-weekend-relax-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/weekend-relax/nocal/sep-20-weekend-relax-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/weekend-relax/nocal/sep-20-weekend-relax-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<h3>National Grandparents Day!</h3>\n<p>“On the 13th of September let’s celebrate National Grandparents Day! They are there to coo over us as babies, to fuss over us toddlers, guide us as kids, and offer love and advice through the teen years and beyond. So take the time this September 13th to say thank-you to your grandparents for all the love, care and fussing they provide through our lives.” — Designed by <a href=\"https://www.everincreasingcircles.com/content-marketing-agency-london/\">Ever Increasing Circles</a> from United Kingdom.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/sep-20-national-grandparents-day-full.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b003056-72bf-462f-98cf-ba67c66ec33e/sep-20-national-grandparents-day-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/sep-20-national-grandparents-day-preview.png\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/cal/sep-20-national-grandparents-day-cal-2560x1440.png\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/national-grandparents-day/nocal/sep-20-national-grandparents-day-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<h3>Create More</h3>\n<p>“Don’t ever let anyone else define you or your potential to do great things. Get out there and prove those naysayers wrong!” — Designed by Hitesh Puri from New Delhi, India.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/sep-20-create-more-full.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4a02803-efaf-4c77-adf5-2a16bb329b03/sep-20-create-more-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/sep-20-create-more-preview.png\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/cal/sep-20-create-more-cal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/cal/sep-20-create-more-cal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/cal/sep-20-create-more-cal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/cal/sep-20-create-more-cal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/cal/sep-20-create-more-cal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/cal/sep-20-create-more-cal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/cal/sep-20-create-more-cal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/cal/sep-20-create-more-cal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/cal/sep-20-create-more-cal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/cal/sep-20-create-more-cal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/cal/sep-20-create-more-cal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/cal/sep-20-create-more-cal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/cal/sep-20-create-more-cal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/cal/sep-20-create-more-cal-2560x1440.png\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/nocal/sep-20-create-more-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/nocal/sep-20-create-more-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/nocal/sep-20-create-more-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/nocal/sep-20-create-more-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/nocal/sep-20-create-more-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/nocal/sep-20-create-more-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/nocal/sep-20-create-more-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/nocal/sep-20-create-more-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/nocal/sep-20-create-more-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/nocal/sep-20-create-more-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/nocal/sep-20-create-more-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/nocal/sep-20-create-more-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/nocal/sep-20-create-more-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-20/create-more/nocal/sep-20-create-more-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n\n\n<h3>Oldies But Goodies</h3>\n\n<p>Be it the golden colors of late summer days, a favorite song, or, well, cats — below you’ll find a selection of <strong>September wallpapers from the past</strong> that are just too good to gather dust somewhere down in the archives. Please note that these designs don’t come with a calendar.</p>\n\n<p></p><h4>Finding Jaguar<p></p>\n<p>“Nature and our planet have given us life, enabled us to enjoy the most wonderful place known to us in the universe. People have given themselves the right to master something they do not fully understand. We dedicate this September calendar to a true nature lover, Vedran Badjun from Dalmatia, Croatia, who inspires us to love our planet, live in harmony with it and appreciate all that it has to offer. Amazon, Siberia, and every tree or animal on the planet are treasures we lose every day. Let’s change that!” — Designed by <a href=\"https://www.popwebdesign.net/index_eng.html\">PopArt Studio</a> from Serbia.</p>\n<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d5ee9f91-efb8-43aa-b04a-67d2281d4409/sep-19-finding-jaguar-large-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/305dc235-0875-4582-94d8-fba50953d129/sep-19-finding-jaguar-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/305dc235-0875-4582-94d8-fba50953d129/sep-19-finding-jaguar-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-640x480.jpg\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-800x480.jpg\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-800x600.jpg\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1152x864.jpg\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1366x768.jpg\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/finding-jaguar/nocal/sep-19-finding-jaguar-nocal-2560x1440.jpg\">2560x1440</a>    </li>\n</ul>\n\n<h4>Flower Soul</h4>\n<p>“The earth has music for those who listen. Take a break and relax and while you drive out the stress, catch a glimpse of the beautiful nature around you. Can you hear the rhythm of the breeze blowing, the flowers singing, and the butterflies fluttering to cheer you up? We dedicate flowers which symbolize happiness and love to one and all.” — Designed by <a href=\"http://acodez.in/\">Krishnankutty</a> from India.</p>\n<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f691ba9d-d4ab-4767-9899-836c61f6aeb0/sept-16-flower-soul-large-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/247433e6-81e3-4d55-9b68-55578f4138b8/sept-16-flower-soul-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/247433e6-81e3-4d55-9b68-55578f4138b8/sept-16-flower-soul-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/flower-soul/nocal/sept-16-flower-soul-nocal-2560x1440.png\">2560x1440</a></li></ul>\n\n<h4>Autumn Rains</h4>\n<p>“This autumn, we expect to see a lot of rainy days and blues, so we wanted to change the paradigm and wish a warm welcome to the new season. After all, if you come to think of it: rain is not so bad if you have an umbrella and a raincoat. Come autumn, we welcome you!” — Designed by <a href=\"https://www.popwebdesign.net/web-design-agency.html\">PopArt Studio</a> from Serbia.</p>\n<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee2102d2-b5fc-4da5-8dd8-4ad100b079e7/sept-17-autumn-rains-large-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/55161fb1-16dc-47e1-a118-5ecd0f0a3fbb/sept-17-autumn-rains-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/55161fb1-16dc-47e1-a118-5ecd0f0a3fbb/sept-17-autumn-rains-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-320x480.jpg\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-640x480.jpg\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-800x480.jpg\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-800x600.jpg\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1152x864.jpg\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1366x768.jpg\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/autumn-rains/nocal/sept-17-autumn-rains-nocal-2560x1440.jpg\">2560x1440</a></li></ul>\n\n<h4>Maryland Pride</h4>\n<p>“As summer comes to a close, so does the end of blue crab season in Maryland. Blue crabs have been a regional delicacy since the 1700s and have become Maryland’s most valuable fishing industry, adding millions of dollars to the Maryland economy each year. With more than 455 million blue crabs swimming in the Chesapeake Bay, these tasty critters can be prepared in a variety of ways and have become a summer staple in many homes and restaurants across the state. The blue crab has contributed so much to the state’s regional culture and economy, in 1989 it was named the State Crustacean, cementing its importance in Maryland history.” — Designed by <a href=\"http://bit.ly/TheHannonGroup\">The Hannon Group</a> from Washington DC.</p>\n<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0c681011-d8d1-4c4b-8e13-69aed69f9471/sept-17-marylandpride-large-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee60f479-606f-44cd-80c7-ec168d9d54f3/sept-17-marylandpride-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee60f479-606f-44cd-80c7-ec168d9d54f3/sept-17-marylandpride-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/marylandpride/nocal/sept-17-marylandpride-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/marylandpride/nocal/sept-17-marylandpride-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/marylandpride/nocal/sept-17-marylandpride-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/marylandpride/nocal/sept-17-marylandpride-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/marylandpride/nocal/sept-17-marylandpride-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/marylandpride/nocal/sept-17-marylandpride-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/marylandpride/nocal/sept-17-marylandpride-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/marylandpride/nocal/sept-17-marylandpride-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/marylandpride/nocal/sept-17-marylandpride-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/marylandpride/nocal/sept-17-marylandpride-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/marylandpride/nocal/sept-17-marylandpride-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/marylandpride/nocal/sept-17-marylandpride-nocal-2560x1440.png\">2560x1440</a></li></ul>\n\n<h4>Fresh Breeze</h4>\n<p>“I’m already looking forward to the fresh breezes of autumn, summer’s too hot for me!” — Designed by <a href=\"http://www.bryanmiller.tk/\">Bryan Van Mechelen</a> from Belgium.</p>\n<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d61cf140-da88-4653-ad00-8b619217448e/sep-18-fresh-breeze-large-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/54efeba9-bd10-4186-adf5-fdc63a1b810c/sep-18-fresh-breeze-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/54efeba9-bd10-4186-adf5-fdc63a1b810c/sep-18-fresh-breeze-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/fresh-breeze/nocal/sep-18-fresh-breeze-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/fresh-breeze/nocal/sep-18-fresh-breeze-nocal-960x560.png\">960x560</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/fresh-breeze/nocal/sep-18-fresh-breeze-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/fresh-breeze/nocal/sep-18-fresh-breeze-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/fresh-breeze/nocal/sep-18-fresh-breeze-nocal-2560x1600.png\">2560x1600</a></li></ul>\n\n<h4>Summer Collapsed Into Fall</h4>\n<p>“The lands are painted gold lit with autumn blaze. And all at once the leaves of the trees started falling, but none of them are worried. Since, everyone falls in love with fall.” — Designed by <a href=\"https://mindster.in/\">Mindster</a> from India.</p>\n<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3547576d-058e-466c-a255-51218b1affbc/sep-18-summer-collapsed-into-fall-large-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4f4dd92f-244e-4621-b703-930b072c9d76/sep-18-summer-collapsed-into-fall-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4f4dd92f-244e-4621-b703-930b072c9d76/sep-18-summer-collapsed-into-fall-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/summer-collapsed-into-fall/nocal/sep-18-summer-collapsed-into-fall-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<h4>Summer Ending</h4>\n<p>“As summer comes to an end, all the creatures pull back to their hiding places, searching for warmth within themselves and dreaming of neverending adventures under the tinted sky of closing dog days.” — Designed by <a href=\"https://www.creitive.com/\">Ana Masnikosa</a> from Belgrade, Serbia.</p>\n<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/22d5ee98-2e90-4597-a06f-88de7965c1e2/sept-17-summer-ending-large-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ed639caf-f1b5-43e7-9af6-ff85a675a4ef/sept-17-summer-ending-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ed639caf-f1b5-43e7-9af6-ff85a675a4ef/sept-17-summer-ending-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/summer-ending/nocal/sept-17-summer-ending-nocal-2560x1440.png\">2560x1440</a></li></ul>\n\n<h4>Funny Cats</h4>\n<p>“Cats are beautiful animals. They’re quiet, clean, and warm. They’re funny and can become an endless source of love and entertainment. Here for the cats!” — Designed by <a href=\"http://www.urbanui.com\">UrbanUI</a> from India.</p>\n<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/81a90359-0917-4ca1-84e5-700b5c71e3b9/sept-17-funny-cats-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/77eaabbb-9743-45b6-99f3-f35a5584275f/sept-17-funny-cats-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/77eaabbb-9743-45b6-99f3-f35a5584275f/sept-17-funny-cats-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/funny-cats/nocal/sept-17-funny-cats-nocal-360x640.png\">360x640</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/funny-cats/nocal/sept-17-funny-cats-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/funny-cats/nocal/sept-17-funny-cats-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/funny-cats/nocal/sept-17-funny-cats-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/funny-cats/nocal/sept-17-funny-cats-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/funny-cats/nocal/sept-17-funny-cats-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/funny-cats/nocal/sept-17-funny-cats-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/funny-cats/nocal/sept-17-funny-cats-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/funny-cats/nocal/sept-17-funny-cats-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/funny-cats/nocal/sept-17-funny-cats-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-17/funny-cats/nocal/sept-17-funny-cats-nocal-1920x1080.png\">1920x1080</a></li></ul><p></p>\n\n<p></p><h4>Do You Remember?</h4><p></p>\n<p></p><p>“My wife tells me ‘You have a song for everything!’ and this month was no exception. Earth, Wind, and Fire’s happy, danceable tune was the first thing to come to mind. For me, the catchy beat and memorable lyrics are such a contrast to the month that heralds the first day of autumn, ushering in a ‘temporary death’ yet with a certain, not-too-distant re-quickening. It’s the 22nd this year, so we took liberties with that excerpt. Ironically, co-writer Allee Willis claims no significance to the date, stating, in an interview with npr.org, ‘It just sang better.’” — Designed by <a href=\"http://www.codesign.cc\">Brian Frolo</a> from Cleveland, Ohio.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8b713da9-5fc9-433d-bf3c-941d26696515/sept-16-do-you-remember-large-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/31655510-b7b7-4dbc-aac5-def2be6aa7bb/sept-16-do-you-remember-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/31655510-b7b7-4dbc-aac5-def2be6aa7bb/sept-16-do-you-remember-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/do-you-remember/nocal/sept-16-do-you-remember-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/do-you-remember/nocal/sept-16-do-you-remember-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/do-you-remember/nocal/sept-16-do-you-remember-nocal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/do-you-remember/nocal/sept-16-do-you-remember-nocal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/do-you-remember/nocal/sept-16-do-you-remember-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/do-you-remember/nocal/sept-16-do-you-remember-nocal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/do-you-remember/nocal/sept-16-do-you-remember-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-16/do-you-remember/nocal/sept-16-do-you-remember-nocal-2560x1440.jpg\">2560x1440</a></li></ul>\n\n<p></p><h4>Bear Time<p></p>\n<p></p><p>Designed by <a href=\"https://www.instagram.com/auvrea_illustration/\">Bojana Stojanovic</a> from Serbia.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/71c7c07f-f784-4f21-82c5-3a08e2e8416d/sep-19-bear-time-large-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7b9c1c73-6254-49d5-9e19-4f0e83e5bb0c/sep-19-bear-time-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7b9c1c73-6254-49d5-9e19-4f0e83e5bb0c/sep-19-bear-time-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1280x1080.png\">1280x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1440x990.png\">1440x990</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/bear-time/nocal/sep-19-bear-time-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<p></p><h4>Cheerful September<p></p>\n<p></p><p>“Wanted to create something colorful and happening for this month.” — Designed by <a href=\"https://wpappointify.com/\">Ciara</a> from India.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4e739a06-364c-4a0b-868c-0c457314a965/sep-19-cheerful-september-large-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2f831ea1-0ddd-4b40-b2ac-65e05adec473/sep-19-cheerful-september-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2f831ea1-0ddd-4b40-b2ac-65e05adec473/sep-19-cheerful-september-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/cheerful-september/nocal/sep-19-cheerful-september-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/cheerful-september/nocal/sep-19-cheerful-september-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/cheerful-september/nocal/sep-19-cheerful-september-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/cheerful-september/nocal/sep-19-cheerful-september-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/cheerful-september/nocal/sep-19-cheerful-september-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/cheerful-september/nocal/sep-19-cheerful-september-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/cheerful-september/nocal/sep-19-cheerful-september-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/cheerful-september/nocal/sep-19-cheerful-september-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n\n\n<p></p><h4>National Video Games Day Delight<p></p>\n<p></p><p>“September 12th brings us National Video Games Day. US-based video game players love this day and celebrate with huge gaming tournaments. What was once a 2D experience in the home is now a global phenomenon with players playing against each other across statelines and national borders via the internet. National Video Games Day gives gamers the perfect chance to celebrate and socialize! So grab your controller, join online and let the games begin!” — Designed by <a href=\"https://www.everincreasingcircles.com/\">Ever Increasing Circles</a> from the United Kingdom.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/65043639-9b5d-4516-9371-7b0b50b1ef30/sep-19-national-video-games-day-delight-large-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a2e6f3ea-b44c-456a-a8be-509911dfb34a/sep-19-national-video-games-day-delight-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a2e6f3ea-b44c-456a-a8be-509911dfb34a/sep-19-national-video-games-day-delight-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-320x480.jpg\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-640x480.jpg\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-800x480.jpg\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-800x600.jpg\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1152x864.jpg\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1366x768.jpg\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/national-video-games-day-delight/nocal/sep-19-national-video-games-day-delight-nocal-2560x1440.jpg\">2560x1440</a></li>\n</ul>\n\n<p></p><h4>Listen Closer… The Mushrooms Are Growing…</h4><p></p>\n<p></p><p>“It’s this time of the year when children go to school and grown-ups go to collect mushrooms.” — Designed by <a href=\"http://izhik.com\">Igor Izhik</a> from Canada.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/053d1630-6081-4179-b45e-e4b9311c7ef4/sept-15-listen-closer-the-mushrooms-are-growing-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/48d2812e-6e2b-4e34-87ec-e23a53297041/sept-15-listen-closer-the-mushrooms-are-growing-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/48d2812e-6e2b-4e34-87ec-e23a53297041/sept-15-listen-closer-the-mushrooms-are-growing-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-640x480.jpg\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-800x480.jpg\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-800x600.jpg\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-1152x864.jpg\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-2560x1440.jpg\">2560x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/listen-closer-the-mushrooms-are-growing/nocal/sept-15-listen-closer-the-mushrooms-are-growing-nocal-2560x1600.jpg\">2560x1600</a></li>\n</ul>\n\n<p></p><h4>Dream It</h4><p></p>\n<p></p><p>“September for many is the month when school begins so it’s important to be positive and have an optimistic spirit about the goals one has for the upcoming year.” — Designed by <a href=\"https://www.facebook.com/teodor.dovichinski\">Teodor Dovichinski</a> from Macedonia.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/79e0b1ac-0e0d-40b7-93a5-45eed1cc522b/sept-14-dream-it-large-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2923ee81-dee1-48f2-a549-1a74c5a28154/sept-14-dream-it-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2923ee81-dee1-48f2-a549-1a74c5a28154/sept-14-dream-it-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-14/dream-it/nocal/sept-14-dream-it-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<p></p><h4>Batmom<p></p>\n<p></p><p>Designed by <a href=\"https://www.ricardogimenes.com/\">Ricardo Gimenes</a> from Sweden.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/29cb124f-93f3-42de-afdf-1600eec88476/sep-18-batmom-large-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a86a40a7-5bfa-46f4-83d1-61bfa77a877b/sep-18-batmom-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a86a40a7-5bfa-46f4-83d1-61bfa77a877b/sep-18-batmom-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-18/batmom/nocal/sep-18-batmom-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<p></p><h4>Record Of Strings</h4><p></p>\n<p></p><p>Designed by <a href=\"http://ceeandimagine.be/\">Cédric Bloem</a> from Belgium.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ce98acf6-4c2c-4b2e-9cec-d513a22e1a3b/sept-15-record-of-strings-large-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b9add0a7-888a-4cdb-ad3d-24b0c75743e2/sept-15-record-of-strings-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b9add0a7-888a-4cdb-ad3d-24b0c75743e2/sept-15-record-of-strings-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/record-of-strings/nocal/sept-15-record-of-strings-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/record-of-strings/nocal/sept-15-record-of-strings-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/record-of-strings/nocal/sept-15-record-of-strings-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/record-of-strings/nocal/sept-15-record-of-strings-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/record-of-strings/nocal/sept-15-record-of-strings-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/record-of-strings/nocal/sept-15-record-of-strings-nocal-1600x900.png\">1600x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/record-of-strings/nocal/sept-15-record-of-strings-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sept-15/record-of-strings/nocal/sept-15-record-of-strings-nocal-2560x1440.png\">2560x1440</a></li></ul>\n\n<p></p><h4>Stay Or Leave?</h4><p></p>\n<p></p><p>Designed by <a href=\"https://www.ricardogimenes.com/\">Ricardo Gimenes</a> from Sweden.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/413b8d04-e98b-4503-a3f6-e5a25cdd3ba1/sep-19-stay-or-leave-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/84692544-a30d-4a78-9685-1278d065cc6e/sep-19-stay-or-leave-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/84692544-a30d-4a78-9685-1278d065cc6e/sep-19-stay-or-leave-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/stay-or-leave/nocal/sep-19-stay-or-leave-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<p></p><h4>Put Some Green Everywhere</h4><p></p>\n<p></p><p>“I took this photo in Chaumont, France, at the garden festival. For example, plants and concrete are in good association in that corner. That’s why I think we should put more plants in the cities and everywhere.” — Designed by <a href=\"https://www.behance.net/philippebrouard\">Philippe Brouard</a> from France.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e06509ad-71e8-4fb9-a51a-c0164aa26778/sep-19-put-some-green-everywhere-large-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/545444ca-5147-4994-bb83-5dd5e5156f57/sep-19-put-some-green-everywhere-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/545444ca-5147-4994-bb83-5dd5e5156f57/sep-19-put-some-green-everywhere-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/put-some-green-everywhere/nocal/sep-19-put-some-green-everywhere-nocal-320x480.jpg\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/put-some-green-everywhere/nocal/sep-19-put-some-green-everywhere-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/put-some-green-everywhere/nocal/sep-19-put-some-green-everywhere-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/put-some-green-everywhere/nocal/sep-19-put-some-green-everywhere-nocal-1366x768.jpg\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/put-some-green-everywhere/nocal/sep-19-put-some-green-everywhere-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/put-some-green-everywhere/nocal/sep-19-put-some-green-everywhere-nocal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/put-some-green-everywhere/nocal/sep-19-put-some-green-everywhere-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/put-some-green-everywhere/nocal/sep-19-put-some-green-everywhere-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/put-some-green-everywhere/nocal/sep-19-put-some-green-everywhere-nocal-2560x1440.jpg\">2560x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/put-some-green-everywhere/nocal/sep-19-put-some-green-everywhere-nocal-2560x1600.jpg\">2560x1600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/sep-19/put-some-green-everywhere/nocal/sep-19-put-some-green-everywhere-nocal-2880x1800.jpg\">2880x1800</a></li></ul>\n\n</h4></h4></h4></h4></h4>","descriptionType":"html","publishedDate":"Mon, 31 Aug 2020 08:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b72dc50f-b61a-4234-b83a-f52d7eb77f07/sep-20-terrazzo-preview-opt.png","linkMd5":"51e5460699d28b8a80a36aec6d35537f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn15@2020_5/2020/09/05/07-59-16-641_6bd220a466403261.webp","destWidth":800,"destHeight":450,"sourceBytes":147045,"destBytes":71062,"author":"hello@smashingmagazine.com (Cosima Mielke)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b72dc50f-b61a-4234-b83a-f52d7eb77f07/sep-20-terrazzo-preview-opt.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b72dc50f-b61a-4234-b83a-f52d7eb77f07/sep-20-terrazzo-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn20@2020_2/2020/09/05/07-59-22-512_0e1defdfa82dff6a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/96aa9326-5107-4c95-8546-9023ec54dc8f/sep-20-september-vibes-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn54@2020_5/2020/09/05/07-59-32-596_d172c546e6bff1dd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0e6791cf-d9b0-4e7c-809f-564d91681e6d/sep-20-sunset-paradise-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn26@2020_6/2020/09/05/07-59-30-227_3e23577f4b6ea8bb.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d5a6796-01f5-46ab-8204-02378d2ba931/sep-20-better-days-ahead-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn23@2020_1/2020/09/05/07-59-20-604_2bea8fe69bc2182d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7c7cade6-6adb-4009-af71-1cf99e5154c0/sep-20-changing-of-the-seasons-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn93@2020_6/2020/09/05/07-59-30-848_617dbe0be0c6e32a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7504b111-74b8-4bc6-9926-e9ab58b34fc8/sep-20-never-stop-exploring-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn86@2020_6/2020/09/05/07-59-33-978_175ae084ae140669.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/393f89c6-a5c2-4952-b4ca-d90ed5dff604/sep-20-bi-and-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn68@2020_2/2020/09/05/07-59-37-231_8c187de3d85cc10f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d51de6a2-7b7e-449a-bda7-672bb6290cab/sep-20-weekend-relax-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn59@2020_6/2020/09/05/07-59-19-939_bb0f8d073a96586d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b003056-72bf-462f-98cf-ba67c66ec33e/sep-20-national-grandparents-day-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn25@2020_3/2020/09/05/07-59-29-030_dfa9a54a16dd4ce2.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4a02803-efaf-4c77-adf5-2a16bb329b03/sep-20-create-more-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn29@2020_5/2020/09/05/07-59-25-192_b9c3d8ba621544e5.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/305dc235-0875-4582-94d8-fba50953d129/sep-19-finding-jaguar-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn19@2020_2/2020/09/05/07-59-38-094_a4f221bc12bb5b91.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/247433e6-81e3-4d55-9b68-55578f4138b8/sept-16-flower-soul-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn40@2020_4/2020/09/05/07-59-22-430_b93c8e3856d7f518.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/55161fb1-16dc-47e1-a118-5ecd0f0a3fbb/sept-17-autumn-rains-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn73@2020_6/2020/09/05/07-59-34-640_b2b9d65cad24bb17.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee60f479-606f-44cd-80c7-ec168d9d54f3/sept-17-marylandpride-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn32@2020_1/2020/09/05/07-59-38-279_8c60d57bb703b0d2.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/54efeba9-bd10-4186-adf5-fdc63a1b810c/sep-18-fresh-breeze-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn94@2020_2/2020/09/05/07-59-26-762_62172f6523162a47.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4f4dd92f-244e-4621-b703-930b072c9d76/sep-18-summer-collapsed-into-fall-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn99@2020_5/2020/09/05/07-59-35-821_983a2860fd9783bd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ed639caf-f1b5-43e7-9af6-ff85a675a4ef/sept-17-summer-ending-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn75@2020_6/2020/09/05/07-59-37-035_88361bb06ad5a612.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/77eaabbb-9743-45b6-99f3-f35a5584275f/sept-17-funny-cats-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn98@2020_1/2020/09/05/07-59-18-441_4a95f42f394e62c4.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/31655510-b7b7-4dbc-aac5-def2be6aa7bb/sept-16-do-you-remember-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn13@2020_5/2020/09/05/07-59-22-942_1531663a0c906f22.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7b9c1c73-6254-49d5-9e19-4f0e83e5bb0c/sep-19-bear-time-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn56@2020_5/2020/09/05/07-59-22-122_73f5b3c174a7516e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2f831ea1-0ddd-4b40-b2ac-65e05adec473/sep-19-cheerful-september-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn81@2020_5/2020/09/05/07-59-18-176_cb0c14690363f5e0.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a2e6f3ea-b44c-456a-a8be-509911dfb34a/sep-19-national-video-games-day-delight-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn11@2020_5/2020/09/05/07-59-17-520_9c94c79db86fa37b.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/48d2812e-6e2b-4e34-87ec-e23a53297041/sept-15-listen-closer-the-mushrooms-are-growing-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn40@2020_1/2020/09/05/07-59-23-051_11009229b5926f82.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2923ee81-dee1-48f2-a549-1a74c5a28154/sept-14-dream-it-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn5@2020_1/2020/09/05/07-59-37-094_31a38d8152d60df6.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a86a40a7-5bfa-46f4-83d1-61bfa77a877b/sep-18-batmom-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn38@2020_2/2020/09/05/07-59-30-251_702c48c69963ace1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b9add0a7-888a-4cdb-ad3d-24b0c75743e2/sept-15-record-of-strings-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn35@2020_3/2020/09/05/07-59-28-180_441be02b34450d6e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/84692544-a30d-4a78-9685-1278d065cc6e/sep-19-stay-or-leave-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn58@2020_4/2020/09/05/07-59-37-403_39e97244055fa9cd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/545444ca-5147-4994-bb83-5dd5e5156f57/sep-19-put-some-green-everywhere-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn9@2020_6/2020/09/05/07-59-38-913_011fae18ea8b5f12.webp"},"publishedOrCreatedDate":1599292755756},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"How To Create A Porsche 911 With Sketch (Part 3)","link":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","description":"<p>We continue our tutorial with the wheels of our Porsche 911 car, but before we proceed with the next steps, I’d like to shine the spotlight on the <a href=\"https://newsroom.porsche.com/en_US/products/porsche-exclusive-manufaktur-911-targa-heritage-design-edition-992-eighth-generation-fuchs-wheel-21113.html\">famous Fuchs wheels</a> that were designed in the shape of a cloverleaf (or a wing). First, a bit of history:</p>\n<blockquote>“The Fuchs wheel is a specialty wheel made for the first Porsche 911/911S model in the early 1960's. Designed in conjunction with Otto Fuchs KG, Porsche modeler Heinrich Klie, and Ferdinand Porsche Jr., the Fuchs wheel was the first lightweight forged wheel to be fitted to a production automotive vehicle. They provided the rear-engined Porsche 911 sports car with a reduction in unsprung mass, through a strong and lightweight alloy wheel.”<br /><br />— Source: <a href=\"https://en.wikipedia.org/wiki/Fuchs_wheel\">Wikipedia</a></blockquote>\n\n<p>We’ll start with the design of the tires first.</p>\n<h4>Tires</h4>\n<p>Un-hide the <code>wheel base</code> in the <strong>Layers</strong> panel. Turn off <strong>Borders</strong> and set <strong>Fills</strong> to <code>#2A2A2A</code>. Then, duplicate this shape, change <strong>Fills</strong> to <code>#000000</code>, move it behind the <code>base wheel</code> (right-click on it and choose <strong>Move Backward</strong>) and push it <code>20px</code> to the right. </p>\n<p><strong>Tip</strong>: Holding Shift + → will move the selection in 10-pixel increments.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/15482314-4ebc-4416-b6d9-84a0214b7e7f/porsche128-sketch-tutorial-part-3.png\" /></p>\n<p>Select the <code>base wheel</code> and add some guidelines to make alignment of all elements easier. To do this, show the Sketch rulers (press Ctrl + R). Then, add a vertical guideline at the center of the <code>base wheel</code> with a click on the upper ruler, and do the same for the horizontal guide on the left ruler.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/493737bb-7a61-4f81-9f85-75e428463a0e/porsche129-sketch-tutorial-part-3.png\" /></p>\n<p>Temporarily <strong>turn off</strong> the guidelines by pressing Ctrl + R on the keyboard. Create a tiny rectangle with a width of <code>2px</code> and a height of <code>8px</code>, with the <strong>Fills</strong> set to <code>#000000</code> and the <strong>Borders</strong> turned off. This rectangle will serve as the base unit for creating the treads (a.k.a. the <a href=\"https://en.wikipedia.org/wiki/Tire_tread\">tread pattern</a>). Center the rectangle to the <code>base wheel</code> horizontally.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9b5ec0ab-3ef5-4459-8f5e-1989e63c048e/porsche130-sketch-tutorial-part-3.png\" /></p>\n<p>Zoom in close enough (here, I zoomed in to 3200%), choose <strong>Transform</strong> from the top toolbar, select the top middle point and push it <code>2px</code> to the right, then select the middle bottom point and push it <code>2px</code> to the left to make it look slanted.</p>\n<p><strong>Note</strong>: If you don’t see the <strong>Transform</strong> tool in the top toolbar, you can add it there via <strong>View</strong> → <strong>Customize Toolbar…</strong> or you can use the keyboard shortcut Cmd + Shift + T.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c54cf046-3ab1-4a09-a7d9-9ca006bd014e/porsche131-sketch-tutorial-part-3.png\" /></p>\n<p>Turn back <strong>on</strong> the guidelines (Ctrl + R) and make sure this rectangle is selected. Put the rectangle into a group by pressing Cmd + G on the keyboard. Give this group the name <code>treads</code>.</p>\n<p>We will use the <strong>Rotate Copies</strong> tool to create the treads around the <code>wheel base</code>. Like <strong>Create Symbol</strong>, <a href=\"https://www.sketch.com/docs/shapes/#how-to-edit-shapes-with-rotate-copies-tool\"><strong>Rotate Copies</strong></a> can be one of those features that will save you a lot of time and effort!</p>\n<p><strong>Note</strong>: If you are using Sketch version 67.0 or 67.1, you may experience a bug with <strong>Rotate Copies</strong> operation. If this happens, you will need to create the treads around the <code>wheel base</code> manually; or (better), you should <a href=\"https://www.sketch.com/updates/#version-67.2\">update to v. 67.2</a> (or later) where this issue has been resolved.</p>\n<p>Make sure the rectangle inside the group <code>treads</code> is selected, then go to <strong>Layer</strong> → <strong>Path</strong> → select <strong>Rotate Copies</strong>. A dialog box that will open will let you define how many additional copies of the selected element to make. Enter <code>71</code> so that in total we will have <strong>72</strong> rectangles around the <code>wheel base</code> that will be the treads. Press <strong>Rotate</strong> in the dialog box. After you have entered this value in the dialog, you will be presented with all of the rectangles and a circular indicator in the middle. </p>\n<p><strong>Tip:</strong> Performing this step in Sketch is very CPU and memory intensive! If you are working on a modern machine, probably you will not experience any issues; but if your Mac is a bit older, then your mileage may vary. In general, when working with a large number of copies, try to first turn off <strong>Borders</strong> to avoid getting stuck and to achieve the result of the operation faster.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a079c6cb-0900-435a-a4e1-12c0516198ce/porsche132-sketch-tutorial-part-3.png\" /></p>\n<p>Now, move this circular indicator down until it is located <em>precisely</em> at the intersection of the guides — and voilà! we have 72 rectangles evenly placed around the <code>wheel base</code>. When you’re done, press Esc or Enter. Note that if you miss putting the circular indicator (the center of rotation) right at the intersection of the guides, the rectangles won’t be distributed perfectly around the <code>wheel base</code> so be careful.</p>\n<p><strong>Note</strong>: The <strong>Rotate Copies</strong> tool doesn’t create a compound shape in the newer versions of Sketch (version <strong>52</strong> or later) and instead creates (and rotates) <em>separate copies</em> of the shape. By putting the first shape into a group we’ve secured that all created and rotated shapes are inside this group named <code>treads</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/95f13356-bec3-4b0f-aa45-43ac79d92f84/porsche133-sketch-tutorial-part-3.png\" /></p>\n<p>Select the <code>base wheel</code> again, duplicate, position it above <code>treads</code> in the <strong>Layers</strong> panel list, and scale it down by <code>14px</code>. Change <strong>Color</strong> to <code>#3F3F3F</code> and turn on <strong>Borders</strong> — set <strong>Color</strong> to <code>#000000</code>, <strong>Position</strong> to <strong>Inside</strong> and <strong>Width</strong> to <code>1px</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e5a414d6-bfa3-4c14-88f5-96cee474c6ef/porsche134-sketch-tutorial-part-3.png\" /></p>\n<p>Duplicate this circle, turn off <strong>Fills</strong> and set the <strong>Border</strong> <strong>Width</strong> to <code>20px</code>. We only want to show 2/4 of the <strong>Borders</strong> — 1/4 on the top left side and 1/4 on the bottom right side. To do that, type in the <strong>Dash</strong> field <code>r*π*0.25</code> where <code>r</code> is diameter of the circle (<code>254px</code> in my case), <code>0.25</code> is 25% (or 1/4) of the border, and <code>π</code> is <code>3.14</code>. </p>\n<p>So in this case enter the following formula in the <strong>Dash</strong> field: <code>254*3.14*0.25</code>, and press Enter (or Tab) on the keyboard.</p>\n<p><strong>Note</strong>: If you enter a number in the <strong>Dash</strong> field and press Tab on the keyboard, Sketch will automatically fill the <strong>Gap</strong> field with the same number. Same thing will happen if you press Enter.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/958e485e-0451-485a-9fd5-d49213fbfae3/porsche135-sketch-tutorial-part-3.png\" /></p>\n<p>Duplicate the circle, scale it down a bit, set the <strong>Borders</strong> <strong>Width</strong> to <code>12px</code> and apply an <strong>Angular Gradient</strong> with the following properties:</p>\n<ol>\n<li><code>#9D9D9D</code></li>\n<li><code>#000000</code></li>\n<li><code>#000000</code></li>\n<li><code>#595959</code></li>\n<li><code>#000000</code></li>\n<li><code>#000000</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45234f52-5d38-4db7-b2de-3a00a37feca4/porsche136-sketch-tutorial-part-3.png\" /></p>\n<p>Then, apply a <strong>Gaussian Blur</strong> effect with an <strong>Amount</strong> of <code>4</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b08ca234-44a8-4a50-8ecc-62b67e4d0c72/porsche137-sketch-tutorial-part-3.png\" /></p>\n<p>Once again, duplicate the circle, turn off <strong>Gaussian Blur</strong> and scale it down. Turn on <strong>Fills,</strong>  make sure it is still <code>#3F3F3F</code>, set the <strong>Borders</strong> to <strong>Outside</strong> position and <strong>Width</strong> to <code>1px</code>. Change <strong>Color</strong> to <strong>Linear Gradient</strong> and use <code>#000000</code> for the first color stop and <code>#444444</code> for the last color stop.</p>\n<p>Add <strong>Inner Shadows</strong> — for the <strong>Color</strong> use <code>#FFFFFF</code> at <code>20%</code> Alpha and set <strong>Blur</strong> to <code>2</code>; then apply <strong>Shadows</strong> — for the <strong>Color</strong> use <code>#000000</code> at <code>90%</code> Alpha and set <strong>Blur</strong> to <code>2</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/80e3ba92-4cb4-40d4-ad47-4bc6849030ff/porsche138-sketch-tutorial-part-3.png\" /></p>\n<p>Now it’s the perfect time to add a bit of a texture! Select and copy the <code>wheel base</code> shape, paste it on top, then <strong>Move Backward</strong> once so it sits just beneath the circle we’ve just created. Set <strong>Fills</strong> to <strong>Pattern Fill</strong>, <strong>Type</strong> to <strong>Fill Image</strong> and choose the <strong>bottom right pattern</strong>. Set <strong>Opacity</strong> for this shape to <code>10%</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/78fb9ced-1f63-4d58-8874-7ca5919216b7/porsche139-sketch-tutorial-part-3.png\" /></p>\n<p>Select the circle on top, duplicate, turn off <strong>Borders</strong>, <strong>Inner Shadows</strong> and <strong>Shadows</strong>. Set <strong>Fills</strong> to <code>#000000</code> and <strong>Opacity</strong> to <code>100%</code> and scale down this circle by <code>32px</code>. Apply a <strong>Gaussian Blur</strong> with the <strong>Amount</strong> of <code>4</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b9d7de40-0241-4714-912c-4f001ab58b94/porsche140-sketch-tutorial-part-3.png\" /></p>\n<p>Push it down <code>3px</code>, then duplicate and move the duplicate <code>6px</code> up.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f84c39d2-dbc4-41e2-bdbe-18075741b5f1/porsche141-sketch-tutorial-part-3.png\" /></p>\n<p>Duplicate the last circle, turn off the <strong>Gaussian Blur,</strong> push it down by <code>3px</code> and scale it down by <code>4px</code>. Add a <strong>Shadows</strong> effect with the <strong>Color</strong> set to <code>#FFFFFF</code> at <code>90%</code> Alpha and <strong>Blur</strong> set to <code>2</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/16f698dc-6897-43a1-9e02-f67958810004/porsche142-sketch-tutorial-part-3.png\" /></p>\n<p>Now, duplicate this circle, turn off <strong>Shadows</strong> and scale it down a bit (by <code>2px</code>). Turn on <strong>Borders</strong>, set position to <strong>Inside</strong>, <strong>Width</strong> to <code>1px</code> and apply a <strong>Linear Gradient</strong>:</p>\n<ol>\n<li><code>#CCCCCC</code></li>\n<li><code>#A6A6A6</code></li>\n<li><code>#A4A4A4</code></li>\n<li><code>#CFCFCF</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6bd5ab6-458d-4bf6-b42d-c3c4c556e86d/porsche143-sketch-tutorial-part-3.png\" /></p>\n<p>Change <strong>Fills</strong> to <strong>Angular Gradient</strong> with the following properties (attention! it’s a long list of color stops):</p>\n<ol>\n<li><code>#D3D3D3</code></li>\n<li><code>#ACACAC</code></li>\n<li><code>#D8D8D8</code></li>\n<li><code>#B4B4B4</code></li>\n<li><code>#8F8F8F</code></li>\n<li><code>#B2B2B2</code></li>\n<li><code>#C4C4C4</code></li>\n<li><code>#A4A4A4</code></li>\n<li><code>#C3C3C3</code></li>\n<li><code>#ADADAD</code></li>\n<li><code>#ADADAD</code></li>\n<li><code>#949494</code></li>\n<li><code>#BBBBBB</code></li>\n<li><code>#929292</code></li>\n<li><code>#C2C2C2</code></li>\n<li><code>#B4B4B4</code></li>\n<li><code>#8F8F8F</code></li>\n<li><code>#B4B4B4</code></li>\n<li><code>#D8D8D8</code></li>\n<li><code>#A9A9A9</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/460ddf1c-26e7-4e38-8abf-938906782723/porsche144-sketch-tutorial-part-3.png\" /></p>\n<p>Then, add an <strong>Inner Shadows</strong> effect — set <strong>Color</strong> to <code>#000000</code> at <code>50%</code> Alpha and set <strong>Blur</strong> and <strong>Spread</strong> to <code>2</code>.</p>\n<p>Duplicate, scale it down by <code>14px</code>, change <strong>Fills</strong> to <code>#434343</code> <strong>Solid Color</strong>, <strong>Borders</strong> position to <strong>Outside</strong>, and <strong>Inner Shadows</strong> properties to: <strong>Color</strong> <code>#000000</code> at <code>90%</code> Alpha,  <strong>Blur</strong> and <strong>Spread</strong> set to <code>24</code>. </p>\n<p>Then add two <strong>Shadows</strong> effects:</p>\n<ul>\n<li>first — <strong>Color</strong>: <code>#000000</code> at <code>50%</code> Alpha; <strong>Y</strong>: <code>2</code>; <strong>Blur</strong>: <code>5</code></li>\n<li>second — <strong>Color</strong>: <code>#000000</code> at <code>50%</code> Alpha; <strong>Blur</strong>: <code>2</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/df097a7d-3286-4d64-89cf-c101394905af/porsche145-sketch-tutorial-part-3.png\" /></p>\n<p>Again, duplicate the shape, scale it down by <code>8px</code>, turn off <strong>Fills</strong>, <strong>Shadows</strong> and <strong>Inner Shadow</strong>, and set <strong>Borders</strong> <strong>Color</strong> to <code>#414141</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6fef2757-1b09-4f18-9183-18dfdb59a102/porsche146-sketch-tutorial-part-3.png\" /></p>\n<p>Switch to the <strong>Oval</strong> tool (<code>O</code>), and draw a circle from the intersection of the guides. Turn off <strong>Fills</strong>, set <strong>Borders</strong> <strong>Color</strong> to <code>#575757</code>, position to <strong>Inside</strong> and <strong>Width</strong> to <code>1px</code>.</p>\n<p>Duplicate, scale it down a bit and make sure the border <strong>Width</strong> is <code>1px</code>. Repeat this seven more times, so at the end you have <strong>nine</strong> concentric circles. Make sure that all <strong>Borders</strong> <strong>Width</strong> are <code>1px</code>. Use the image below as reference.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6783be2c-5910-41c5-8e60-36c61d57ee97/porsche147-sketch-tutorial-part-3.png\" /></p>\n<p>Select all the concentric circles and put them into a group.</p>\n<h4>Rims</h4>\n<p>We will start working on the rim design next.</p>\n<p>Draw a circle from the intersection of the guides, then draw a rectangle on top and center it horizontally to the circle.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca79f152-0e72-46ed-9e8c-8b67ab6dbc1b/porsche148-sketch-tutorial-part-3.png\" /></p>\n<p>Select this rectangle, double-click on it to switch to <strong>vector</strong> <strong>editing mode</strong> and move the points until you have something like on the image below. Select the top two points and set the <strong>Radius</strong> to <code>20</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cdfcffd0-f983-4c79-b662-bef62b0f553c/porsche149-sketch-tutorial-part-3.png\" /></p>\n<p>We will use <strong>Rotate Copies</strong> again to distribute this shape around the circle. Select both — circle and the modified rectangle — turn off <strong>Borders</strong> and place them into a group. Now select the modified rectangle, go to <strong>Layer</strong> → <strong>Path</strong>, select <strong>Rotate Copies</strong>, enter <code>4</code> in the dialog box (so we’ll have a total of five shapes), click <strong>Rotate</strong>, and align the circular indicator to the intersection of the guides. When done, press <code>Esc</code> or <code>Enter</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0df4f7ef-ce24-494c-bc28-afcc2d685ea8/porsche150-sketch-tutorial-part-3.png\" /></p>\n<p>Select all shapes inside the group and apply a <strong>Subtract</strong> operation from the top toolbar. Add <strong>Inner Shadows</strong> effect — for the <strong>Color</strong> use <code>#FFFFF</code> at <code>50%</code> Alpha and set <strong>Blur</strong> to <code>2</code>. Then apply <strong>Shadows</strong> with <strong>Color</strong> set to <code>#000000</code> at <code>70%</code> Alpha and both <strong>Blur</strong> and <strong>Spread</strong> set to <code>2</code>. Finally, change <strong>Fills</strong> to <code>#000000</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f88bbb91-bfc5-4628-a6dc-fc16491e3d71/porsche151-sketch-tutorial-part-3.png\" /></p>\n<p>Draw a circle from the intersection of the guides but make it a bit bigger than the shape below, then draw a shape and center it horizontally to the circle. Select both, turn off <strong>Borders</strong> and put them into a group. Select the shape and perform a <strong>Rotate Copies</strong> operation. Enter <code>4</code> in the dialog box (so again, we’ll have a total of five shapes), click <strong>Rotate</strong>, and align the circular indicator to the intersection of the guides. When ready, press <code>Esc</code> or <code>Enter</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cb5ee03a-e129-4af3-91e0-5edd2c91c902/porsche152-sketch-tutorial-part-3.png\" /></p>\n<p>Select all shapes inside the group and apply a <strong>Subtract</strong> operation from the top toolbar. Add an <strong>Inner Shadows</strong> effect — for the <strong>Color</strong> use <code>#FFFFF</code> at <code>50%</code> Alpha and set <strong>Blur</strong> to <code>2</code>. Change <strong>Fills</strong> to <code>#131313</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0bdf3e82-a87e-4c1b-a139-f35defaeb48f/porsche153-sketch-tutorial-part-3.png\" /></p>\n<p>Now, we will create one rim bolt head.</p>\n<p>Zoom in close enough (I zoomed in to 400%) and draw a circle. Set <strong>Fills</strong> to <code>#4F4F4F</code>, change <strong>Borders</strong> position to <strong>Outside</strong>, <strong>Width</strong> to <code>1px</code> and use <code>#8F8F8F</code> for the <strong>Color</strong>. Add one more border but this time use <code>#000000</code> for the <strong>Color</strong>, set position to <strong>Center</strong> and make sure the <strong>Width</strong> is <code>1px</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/846d17fe-01ac-46cc-ba94-3a96f300cb2e/porsche154-sketch-tutorial-part-3.png\" /></p>\n<p>Draw a rectangle in the middle of the circle, turn off <strong>Borders</strong>, enter <strong>vector</strong> <strong>editing mode</strong>, hold Shift and click on the right segment to add a point in the middle, then do the same for the left segment. Push those points <code>2px</code> to the left and to the right to create a hexagonal shape. Apply a <strong>Linear Gradient</strong> for the <strong>Fills</strong> — use <code>#AEAEAE</code> for the top and <code>#727272</code> for the bottom color stop. Add <strong>Inner Shadows</strong> using <code>#000000</code> at <code>50%</code> Alpha for the <strong>Color</strong> and set <strong>Blur</strong> to <code>2</code>, and apply <strong>Shadows</strong> using <code>#000000</code> at <code>90%</code> Alpha for the <strong>Color</strong> and set <strong>Blur</strong> to <code>2</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/caca3c48-0fd1-47fc-b944-36cbc0f1104e/porsche155-sketch-tutorial-part-3.png\" /></p>\n<p>Duplicate the hexagonal shape, enter <strong>vector</strong> <strong>editing mode</strong>, select all the point on the left side and push them <code>1px</code> to the right, then select all top points and push them <code>1px</code> down, push the bottom points <code>1px</code> up and the right points <code>1px</code> left. Clear the <strong>Shadows</strong> and modify the <strong>Linear Gradient</strong>:</p>\n<ol>\n<li><code>#8F8F8F</code></li>\n<li><code>#979797</code></li>\n<li><code>#A4A4A4</code></li>\n<li><code>#636363</code></li>\n<li><code>#4A4A4A</code></li>\n</ol>\n<p>Now apply an <strong>Inner Shadows</strong> effect. For the <strong>Color</strong> use <code>#000000</code> with <code>50%</code> Alpha and set <strong>Blur</strong> to <code>2</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ac7b65e2-f9c4-442f-9f4b-919f7f374f85/porsche156-sketch-tutorial-part-3.png\" /></p>\n<p>Select all the shapes that we used to create the bolt head and group them into a <code>bolt head</code> group. We can <strong>Create Symbol</strong> out of the <code>bolt head</code> group and we can use it as many time as we need it.</p>\n<p>To create the new <strong>Symbol</strong>, select the <code>bolt head</code> group, right-click on it, and choose <strong>Create Symbol</strong> from the menu. The dialog box <strong>Create New Symbol</strong> will appear, give a name to the symbol (<code>bolt head</code>) and click <strong>OK</strong>.</p>\n<p>Now we need to distribute the <code>bolt head</code> symbols around the circle. Duplicate the symbol, choose <strong>Rotate</strong> from the top toolbar, drag the crosshair marker to the the intersection of the guides, and rotate it <code>72 degrees</code>. Continue duplicating and rotating the symbol in 72-degree increments, without letting the selection go.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1eb1a24b-66cd-4118-8ef9-729611910563/porsche157-sketch-tutorial-part-3.png\" /></p>\n<p>Now select each symbol instance and adjust the angle of rotation to <code>0 degrees</code>.</p>\n<p><strong>Tip</strong>: I’m suggesting to initially adjust the angle to <code>0 degrees</code> so that you can better see the process and how the bolts will look like when placed on the rim. Once the rim bolts are in place, though, my recommendation is to experiment some more and try setting a <em>different angle of rotation</em> for <em>each bolt</em> symbol. This will make the wheels look more realistic — after all, in real life it’s much more likely to see rim bolts at random angles than aligned perfectly to <code>0</code> degrees!</p>\n<p>Finally, select all the instances of the <code>bolt head</code> symbol, place them into a group <code>bolts</code> and perform a <strong>Move Backward</strong> once.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ac8498ec-bcba-4090-b2cf-8dd8b34d5e02/porsche158-sketch-tutorial-part-3.png\" /></p>\n<p>Draw a shape, set <strong>Border</strong> <strong>Color</strong> to <code>#CFCFCF</code>, set <strong>Width</strong> to <code>1px</code> and position to <strong>Inside</strong>, and use a <strong>Linear Gradient</strong> for the <strong>Fills</strong>:</p>\n<ol>\n<li><code>#5F5F5F</code></li>\n<li><code>#B5B5B5</code></li>\n<li><code>#CBCBCB</code></li>\n</ol>\n<p>Then add <strong>Inner Shadows</strong> effect using <code>#000000</code> at <code>30%</code> Alpha, and <strong>Blur</strong> set to <code>2</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4c78f5b2-476d-4830-b787-d40aac2ecd06/porsche159-sketch-tutorial-part-3.png\" /></p>\n<p>Grab the <strong>Vector</strong> tool (<code>V</code>) and draw two shapes that we will use for the highlights. Use a <strong>Linear Gradient</strong> for the <strong>Fills</strong> — use for the top color stop <code>#F3F3F3</code> at <code>100%</code> Alpha and the same color for the bottom but at <code>0%</code> Alpha. Use the same gradient settings for both shapes and also apply a <strong>Gaussian Blur</strong> with the <strong>Amount</strong> of <code>1</code> to both shapes.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8f1bd4e4-e152-4deb-a1f8-37a173c95533/porsche160-sketch-tutorial-part-3.png\" /></p>\n<p>Select all shapes that we’ve just created, group them and distribute them evenly around the rim. Use the same method that we used for the bolt heads.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4355bb58-f9c4-4b2e-a86b-e9c3989055a4/porsche161-sketch-tutorial-part-3.png\" /></p>\n<p>Select the <strong>Oval</strong> tool (<code>O</code>) and draw a circle from the intersection of the guides. Turn off <strong>Borders</strong> and use <strong>Linear Gradient</strong> with colors set to <code>#D8D8D8</code> for the top stop and <code>#848484</code> for the bottom stop. Use <strong>Inner Shadows</strong> and <strong>Shadows</strong> to make it look slightly raised.</p>\n<p>Let’s add a light <strong>Inner Shadows</strong> effect with the following properties:</p>\n<ul>\n<li><strong>Color</strong>: <code>#FFFFFF</code> at <code>80%</code> Alpha</li>\n<li><strong>Blur</strong>: <code>2</code></li>\n</ul>\n<p>Then, add a dark <strong>Inner Shadows</strong> effect:</p>\n<ul>\n<li><strong>Color</strong>: <code>#000000</code> at <code>50%</code> Alpha</li>\n<li><strong>Blur</strong>: <code>2</code></li>\n</ul>\n<p>Finally, apply a <strong>Shadows</strong> effect:</p>\n<ul>\n<li><strong>Color</strong>: <code>#000000</code> at <code>50%</code> Alpha</li>\n<li><strong>Blur</strong>: <code>2</code></li>\n<li><strong>Spread</strong>: <code>1</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d6a036a-38af-4e9d-abca-40802b84185e/porsche162-sketch-tutorial-part-3.png\" /></p>\n<p>Duplicate this circle, scale it down a bit, turn off <strong>Inner Shadows</strong> and <strong>Shadows</strong>, turn on <strong>Borders</strong> and add the first border:</p>\n<ul>\n<li><strong>Color</strong>: <code>#B5B5B5</code>;</li>\n<li><strong>Position</strong>: <strong>Outside</strong></li>\n<li><strong>Width</strong>: <code>1px</code></li>\n</ul>\n<p>Then add a second one on the top:</p>\n<ul>\n<li><strong>Color</strong>: <code>#656565</code></li>\n<li><strong>Position</strong>: <strong>Center</strong></li>\n<li><strong>Width</strong>: <code>1px</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9a61629f-ad13-40f6-adaa-480d6f123c15/porsche163-sketch-tutorial-part-3.png\" /></p>\n<p>Let’s finish the wheel design by adding to the rim the <a href=\"https://thenewswheel.com/behind-the-badge-revealing-the-historic-porsche-crests-inspiration/\">Porsche</a> <a href=\"https://thenewswheel.com/behind-the-badge-revealing-the-historic-porsche-crests-inspiration/\">emblem</a>.</p>\n<p><strong>Note</strong>: Recreating the original Porsche logo for the rims, all in vectors, is outside of the scope of this tutorial. There are a few options — you can create it yourself by following the same basic principles outlined on these pages; you can download the logo from <a href=\"https://de.wikipedia.org/wiki/Datei:Porsche_Logo.svg\">Wikipedia</a> in SVG format and then try to modify it; or you can download a copy of the logo in vector lines from <a href=\"https://nikolalazarevic.me/download/porsche-line-logo-f.svg\">my website</a> (<code>porsche-line-logo-f.svg</code>). This copy of the Porsche logo was created by me from scratch, all in vectors, and this is the variant that I recommend you to use.</p>\n<p>After downloading the logo file (<code>porsche-line-logo-f.svg</code>) bring it into our design.</p>\n<p>Switch to the <strong>Scale</strong> tool in the top toolbar, and in the dialog box enter <code>20px</code> in the height field, to adjust the size of the logo. Align the logo horizontally with the circle below.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b63e10f6-d62e-46a4-8fb1-9b74e30a6c4f/porsche164-sketch-tutorial-part-3.png\" /></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cce80386-eec2-49ad-be9a-3e3ac39ea74d/porsche164a-sketch-tutorial-part-3.png\" /></p>\n<h4>Completing the wheels — two possible workflows</h4>\n<p>Since a copy of the front wheel (once it’s complete) will be used more than once in our illustration, we have <strong>two options</strong> now: </p>\n<ul>\n<li><strong>A.</strong> We can complete the front wheel design, duplicate the wheel, make a couple of tweaks, and use the duplicate as the rear wheel. This is the easiest variant.</li>\n<li><strong>B.</strong> Or, for learning purposes, we can use a workflow involving the use of <strong>nested symbols</strong>. This is the more interesting option which I’ll explore in more detail in a bit. Buckle up!</li>\n</ul>\n<h4>A. Workflow #1: duplicate the wheel and adjust the copy</h4>\n<p>Pick up the <strong>Vector tool</strong> (<code>V</code>) and draw a shape on top of the wheel. Turn off <strong>Borders</strong> and <strong>Fill</strong> the shape with black <code>#000000</code> color. Apply <strong>Gaussian Blur</strong> with an <strong>Amount</strong> of <code>10</code>. This way we will recreate the shadow from the car body over the wheel — just an extra bit of realism added.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b87dcaa2-1cd1-4f9b-b06c-e920f00cb032/porsche165-1-sketch-tutorial-part-3.png\" /></p>\n<p>Select the <code>wheel</code> group, <code>wheel base copy</code> layer and the shadow shape layer and group these into a <code>front wheel</code> group.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/99bf1fe1-fd4e-4a3a-8a90-a9ec1761c15c/porsche165-2-sketch-tutorial-part-3.png\" /></p>\n<p>Now that the wheel is ready, duplicate the <code>front wheel</code> group, rename the group in the <strong>Layers</strong> panel list to <code>rear wheel</code> and drag it to the right to its place. </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/73408acd-dd0d-408d-b4e2-1f645018118e/porsche165-4-sketch-tutorial-part-3.png\" /></p>\n<p>Select the <code>wheel</code> group inside and push it <code>20px</code> to the right, then select the <code>wheel base copy</code> layer and push it <code>20px</code> to the left. The rear wheel is ready.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c041af60-1482-42fc-ba6f-71e8cc9cb31d/porsche165-5-sketch-tutorial-part-3.png\" /></p>\n<h4>B. Workflow #2: use nested symbols</h4>\n<p>Pick up the <strong>Vector tool</strong> (<code>V</code>) and draw a shape on top of the wheel. Turn off <strong>Borders</strong> and <strong>Fill</strong> the shape with black <code>#000000</code> color. Apply <strong>Gaussian Blur</strong> with an <strong>Amount</strong> of <code>10</code>. This way we will recreate the shadow from the car body over the wheel — just an extra bit of realism added.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b87dcaa2-1cd1-4f9b-b06c-e920f00cb032/porsche165-1-sketch-tutorial-part-3.png\" /></p>\n<p>The wheel is finished. Now we’ll use a <strong>symbol</strong> and a <strong>nested symbol</strong> to create the front and rear wheels. </p>\n<p>Select the <code>wheel</code> group, <code>wheel base copy</code> layer and the shadow shape layer and group these into a <code>front wheel</code> group.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/99bf1fe1-fd4e-4a3a-8a90-a9ec1761c15c/porsche165-2-sketch-tutorial-part-3.png\" /></p>\n<p>Here we’re coming to the more interesting bits! Select the <code>wheel</code> group and create a <code>wheel</code> symbol, then select the <code>front wheel</code> and create a <code>front wheel</code> symbol. The front wheel symbol is now a <strong>nested symbol</strong>! </p>\n<p><strong>Tip</strong>: You can learn more about nested symbols in the Sketch help <a href=\"https://www.sketch.com/docs/symbols/#creating-nested-symbols\">pages dedicated to this topic</a>, and in the <a href=\"https://medium.com/@Zomerfeld/nested-symbols-in-sketch-i-you-a67d15a35fbc\">following article</a> written by Noam Zomerfeld.</p>\n<p>Nested symbols are regular symbols that are made from other symbols that already exist in your Sketch file. In this case, the <code>front wheel</code> symbol is made from the <code>wheel</code> symbol, so the <code>wheel</code> symbol is <em>nested inside</em> the <code>front wheel</code> symbol.</p>\n<blockquote>\n<p>What could be better than one symbol? Perhaps a symbol with another one inside it — enter Nested Symbols! This feature gives you a lot of possibilities when combining symbols together. Nesting symbols can be especially useful when you need to create <strong><em>variations</em></strong> of one symbol.<br />— Javier-Simon Cuello, “<a href=\"https://www.smashingmagazine.com/2017/04/symbols-sketch/#nested-symbols\">Unleashing The Full Potential Of Symbols In Sketch</a>”</p>\n</blockquote>\n<p>Now, go to the <strong>Symbols page</strong> in Sketch, duplicate the <code>front wheel</code> symbol, select the <code>wheel</code> group and push it <code>20px</code> to the right, then select the <code>wheel base copy</code> and push it <code>20px</code> to the left. At the end, rename this symbol to <code>rear wheel</code>.  </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/01e05365-27e0-4b4c-bb56-bc4313dc4cad/porsche165c-sketch-tutorial-part-3.png\" /></p>\n<p>Go back to our design, select and duplicate the <code>front wheel</code> symbol, then using the <strong>Inspector</strong> panel change the symbol to <code>rear wheel</code>, rename the symbol in the <strong>Layers</strong> panel list to <code>rear wheel</code> and drag it to the right. Done!</p>\n<p>So far it may seem that we’ve spent more time playing with nested symbols, compared to the other workflow. That’s true. But also we have learned how to use this feature — and now if you would like to change the design of the wheels, instead of doing so in two separate groups, you’ll need to do it only <em>once</em> inside the <code>wheel</code> symbol and the changes will be automatically applied to <em>both</em> wheels of the car. This is why we used a nested symbol to create the front and rear wheels. (Also, imagine if you’re working on a design of a vehicle that has <a href=\"https://www.youtube.com/watch?v=M7FIvfx5J10\">many more wheels visible</a> from the side, not only two! The time saved will multiply.)</p>\n<p>Back to the bigger picture — with the wheels complete, we are very close to the final design. Let’s take a look.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9fea9610-16d2-499c-bd89-dea136c5217e/porsche166-sketch-tutorial-part-3.png\" /></p>\n<h4>The Shadow Under the Wheels and the Car Body</h4>\n<p>Pick the <strong>Oval</strong> tool and draw an ellipse under the wheels. Set <strong>Fills</strong> to <code>#000000</code> with <code>80%</code> <strong>Opacity</strong>, turn off <strong>Borders</strong> and apply a <strong>Gaussian Blur</strong> with an <strong>Amount</strong> of <code>5</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/37fe9212-24b0-402a-bf9b-927828f0c3a8/porsche167-sketch-tutorial-part-3.png\" /></p>\n<p>Duplicate the oval shape, adjust the width using <strong>Resize handles</strong> (make it smaller), and set <strong>Fills</strong> <strong>Opacity</strong> to <code>50%</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9dc11909-23e3-4fba-a8f8-1be147fb081d/porsche168-sketch-tutorial-part-3.png\" /></p>\n<p>Duplicate this shape once again, adjust the width, and set <strong>Fills</strong> <strong>Opacity</strong> for this layer to <code>80%</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cd7f2040-ad64-45f6-ad3d-0003e4895d15/porsche169-sketch-tutorial-part-3.png\" /></p>\n<p>Select the shadow ellipses and group them all into a <code>shadows</code> group. Move this group to the very bottom in the <strong>Layers</strong> panel list.</p>\n<h3>17. Final Touches — The Racing Decals</h3>\n<p>We are almost there! It’s time to add some racing decals to the car body and to the windshields.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4dfa6552-3531-4349-967b-b15c346366b9/porsche911-inspiration-images.png\" /></p>\n<h4>The Porsche sticker</h4>\n<p>Jump over to the <em>Wikimedia Commons</em> website and download the <a href=\"https://commons.wikimedia.org/wiki/File:Porsche_Wortmarke.svg\">Porsche Wortmarke</a> in SVG format. Bring it to our design, scale it up and position it like on the image below.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3cea8885-9cf5-4e62-9f77-31a3afb2b475/porsche170-sketch-tutorial-part-3.png\" /></p>\n<p>Create some rectangles using the <strong>Rectangle</strong> tool (<code>R</code>), set <strong>Fills</strong> to <code>#0F0F13</code> and turn off <strong>Borders</strong>. Select all elements and group them into a <code>porsche sticker</code> group, then drag this group inside <code>bodywork</code> just below the <code>door</code> layer.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/80453f0b-366c-45b7-8c1a-b8171bf9ee51/porsche171-sketch-tutorial-part-3.png\" /></p>\n<h4>Shell sticker</h4>\n<p>Next, download the vintage <a href=\"https://worldvectorlogo.com/logo/shell-6\">Shell logo</a> in SVG format and open it in Sketch. Delete the white rectangle at the bottom inside the logo group, then copy and paste it into our design. Place it just above the <code>porsche sticker</code> in the <strong>Layers</strong> panel list and position it like on the image below.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/134312b4-6200-4c73-9166-4c1bd84788f0/porsche172-sketch-tutorial-part-3.png\" /></p>\n<h4>Dunlop sticker</h4>\n<p>Download the <a href=\"https://de.wikipedia.org/wiki/Datei:DunlopLogo.svg\">Dunlop logo</a> in SVG format, open it in Sketch and delete the yellow rectangle. Bring it to our design, scale it down a bit and place in close to the tail light. Make sure that the logo is inside the <code>bodywork</code> group, right above the Shell logo in the list of layers.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d722ceb8-4798-4d37-80ee-7b37917beeeb/porsche173-sketch-tutorial-part-3.png\" /></p>\n<h4>Marlboro sticker</h4>\n<p>Get the SVG version of the <a href=\"https://commons.wikimedia.org/wiki/File:Marlboro_Logo.svg\">Marlboro logo</a> from <em>Wikimedia Commons</em>, paste into our design and scale it down. Use the <strong>resize handles</strong> to squeeze the red shape, then move the letters up, close to the red shape, and finally change <strong>Fills</strong> for the red shape to <strong>Linear Gradient</strong> with the following parameters:</p>\n<ol>\n<li><code>#E60202</code></li>\n<li><code>#BB0101</code></li>\n<li><code>#860000</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/56fa24c3-6dc4-43e7-a03b-c4c04e576152/porsche174-sketch-tutorial-part-3.png\" /></p>\n<p>Please make sure that this logo is inside <code>bodywork</code> group and above \"Dunlop\" logo.</p>\n<h4>Heuer Chronograph sticker</h4>\n<p>Download and open in Sketch the <a href=\"https://worldvectorlogo.com/logo/tag-heuer-2\">Tag Heuer</a> SVG logo. Delete everything except: the rectangle with the black border, the red rectangle, and the word “Heuer”. </p>\n<p>Select the rectangle with the black border, turn off <strong>Borders</strong> and change <strong>Fills</strong> to <code>#CC2132</code>. Next, select the inner red rectangle, turn on <strong>Borders</strong>, set <strong>Color</strong> to <code>#FFFFFF</code>, position to <strong>Outside</strong> and <strong>Width</strong> to <code>12px</code>. Then use the <strong>Type</strong> tool (<code>T</code>) and type the word <code>Chronograph</code> — for the font use <strong>Helvetica Bold</strong>, with the size set to <code>72px</code>. </p>\n<p><strong>Note</strong>: If you don’t have Helvetica Bold installed, use a font similar in appearance (for example, <strong>Arial Bold</strong>), as this scale it would be <em>difficult</em> to spot the differences.</p>\n<p>Convert the text block into vector shapes, by right-clicking on it and selecting <strong>Convert to Outlines</strong>. Finally, select the bigger red rectangle, enter <strong>vector</strong> <strong>editing mode</strong>, select the top two points and push them down a bit. Select everything and place all the elements into a <code>heuer chronograph logo</code> group.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ab8c43e6-8858-4356-99d1-6b5220c6a31a/porsche175-sketch-tutorial-part-3.png\" /></p>\n<p>Bring this modified logo to our design, scale it down and place it onto the car body. Like before, make sure it’s inside <code>bodywork</code>, and it’s above the <code>Marloboro</code> logo.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f2522e02-e9aa-419d-98aa-d38b4bf58f5b/porsche176-sketch-tutorial-part-3.png\" /></p>\n<h4>Porsche Crest Badge</h4>\n<p>Jump over to <em>Wikimedia</em> and download the <a href=\"https://de.wikipedia.org/wiki/Datei:Porsche_Logo.svg\">Porsche logo</a> in SVG format. We will need to modify and simplify it a bit because it’s too complex and we don’t need all of these details for the scale at which we’ll be using it in our illustration.</p>\n<p>Open the SVG logo file in Sketch, and first delete all the groups (<code>amw-link</code> and <code>d-link</code>) inside it. Then, select the shape on top, press <code>Enter</code> to switch to <strong>vector</strong> <strong>editing mode</strong>, select the word “Porsche” and the registered trademark symbol and delete them as well.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/756fbf8e-51b1-4d1a-84b6-e14422b2b13a/porsche177-sketch-tutorial-part-3.png\" /></p>\n<p>Next, click on the arrow in the front second crest compound shape to reveal its components, select the four paths and drag them outside the compound path, then change their color to <code>#B12B28</code>. Reveal the contents of the first compound crest shape, select all the paths that form the word “Porsche” and delete them.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0ca00db5-71c3-49f5-a339-2e56a17dbbbf/porsche178-sketch-tutorial-part-3.png\" /></p>\n<p>Bring the modified Porsche crest logo to our design, scale it down, select the path that is the last one inside the <code>Porsche logo</code> group and add a <strong>Shadows</strong> effect — for the <strong>Color</strong> use <code>#000000</code> at <code>50%</code> Alpha and set <strong>Blur</strong> to <code>2</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c505ab2b-995d-42a9-a006-26d359bb3dfb/porsche179-sketch-tutorial-part-3.png\" /></p>\n<p>The Porsche crest badge should be placed inside the <code>bodywork</code> group just like the previous stickers that we added, above the <code>heuer chronograph logo</code> group.</p>\n<h4>Rallye Monte-Carlo sticker</h4>\n<p>Draw a rounded rectangle using the <strong>Rounded</strong> <strong>Rectangle</strong> tool (<code>U</code>), enter <strong>vector</strong> <strong>editing mode</strong> and add and move the vector points to make the shape like on the image below.</p>\n<p>Set <strong>Color</strong> to <code>#9C010E</code> and turn off <strong>Borders</strong>. Duplicate this shape, change <strong>Color</strong> to, i.e., <code>#000000</code> so you can see better what you are doing, enter <strong>vector</strong> <strong>editing mode</strong>, select the top points and push them down a bit. Push by the same distance the right points to the left, and the left points to the right. Then push up the bottom points a bit more.</p>\n<p>Turn off <strong>Fills</strong>, turn on <strong>Borders</strong> with position set to <strong>Inside</strong>, <strong>Width</strong> set to <code>6px</code>, and <strong>Color</strong> to <code>#D7CB82</code>. Convert <strong>Borders</strong> into a shape by going to <strong>Layer</strong> → <strong>Convert to Outlines</strong>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c9d1c96e-9405-44d9-914e-122d8ae4d1d7/porsche180-sketch-tutorial-part-3.png\" /></p>\n<p>Draw a rectangle without <strong>Borders</strong>, set <strong>Color</strong> to <code>#D7CB82</code>, enter <strong>vector</strong> <strong>editing mode</strong>, add points in the middle of the top and bottom segment, and push them up and down a bit. Type the words: “SIEGER, WINNER, VAINQUEUR, 1968”. For the font use <strong>Helvetica Bold</strong> (or alternatively <strong>Arial Bold</strong>) with the <code>#9C010E</code> <strong>Color</strong>. Add the Porsche Wortmarke (we’ve used it earlier, remember?) to the bottom, and set <strong>Color</strong> to <code>#D7CB82</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d614e7f-6e6d-4521-865a-0027be4f8c99/porsche181-sketch-tutorial-part-3.png\" /></p>\n<p>Convert text to outlines, select the “1968” shape on the left side of the rectangle, zoom in and use <strong>Transform</strong> from the top toolbar to modify the shape:</p>\n<ol>\n<li>select the middle point on the right side and push it up a bit;</li>\n<li>select the bottom point on the right side and push it down the same amount of pixels.</li>\n</ol>\n<p>Perform a similar action for the “1968” on the right side of the rectangle, but this time use the middle and bottom points on the left side.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/849731a1-27b2-429a-a303-5822695c451c/porsche182-sketch-tutorial-part-3.png\" /></p>\n<p>Type “RALLYE” “MONTE” “-CARLO” as a <em>three</em> <em>separate words</em>, use the same font and change the <strong>Color</strong> to <code>#D7CB82</code>. </p>\n<p>Again, do a <strong>Convert to Outlines</strong> action and use <strong>Transform</strong> from the top toolbar to modify the shapes. I won’t go much into details here, but first modify the words “RALLYE” and “-CARLO” by using the method outlined above. Then, select all three shapes (the words), invoke the <strong>Transform</strong> tool, select the middle top point and push it up a bit to make the shapes elongated, and finally scale it up a bit by holding Alt + Shift on the keyboard while dragging the top right <strong>Resize handle</strong>. Use the image below as a reference.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/92947151-f2f2-4678-8b3c-77491804f473/porsche183-sketch-tutorial-part-3.png\" /></p>\n<p>Select and group all the elements we used to create this sticker into a <code>rallye monte-carlo</code> group, bring it into our design, and put it on the side windshield. In the <strong>Layers</strong> panel list this sticker should be <em>inside</em> the <code>windshields</code> group on top.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/822044fc-fb95-4507-8179-7190a5d8d95c/porsche184-sketch-tutorial-part-3.png\" /></p>\n<h4>Smashing Magazine Sticker</h4>\n<p>This is the last sticker we are going to put on the car. <a href=\"http://provide.smashingmagazine.com/smashing-magazine-logo-svg.zip\">Download the Smashing Magazine logo</a> in SVG format, open it in Sketch and draw a red (<code>#D33A2C</code>) rectangle below the logo. Select both, create a group <code>Smashing Magazine sticker</code>, copy and paste into our design. Place it next to <code>Rallye Monte Carlo</code> sticker and scale it if needed.</p>\n<p>In the <strong>Layers</strong> panel list this should be inside the <code>windshields</code> group on top.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c9425792-fcc7-4c32-b8fe-846e5b129933/porsche185-sketch-tutorial-part-3.png\" /></p>\n<p>I encourage you to add even more decals to the car body and the side windshield. Use the image below as a source for your inspiration.</p>\n<p><strong>Note</strong>: These are just examples and recreating all the decals in vectors is outside of the scope of this tutorial. You can apply the principles learned from this tutorial and tweak the decals in vector format in a similar way.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/27d86bb6-b64a-4cf1-943b-2fa8fd999aa5/porsche185a-side-windshield-decals-example.png\" /></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0eef430f-3044-407d-aab9-efbba8f91cb2/porsche185b-car-body-decals-example.png\" /></p>\n<h4>Racing Number and Drivers Names</h4>\n<p>One more important detail — since this car is a <em>racing car</em> we need to add a <em>racing number</em> to it.</p>\n<p>Download the <a href=\"https://www.fontsquirrel.com/fonts/montserrat\">Montserrat font family</a> (if you don’t have it already), install only the <strong>\"Montserrat Bold\"</strong> font variant, and type the racing number. Set the <strong>Size</strong> to <code>180px</code> and the <strong>Color</strong> to <code>#000000</code>. Then, <strong>Convert to Outlines</strong> to be able to apply a gradient to the racing number, and change <strong>Fills</strong> to a <strong>Linear Gradient</strong>:</p>\n<ol>\n<li><code>#22222B</code></li>\n<li><code>#`</code>3E3E42`</li>\n<li><code>#656566</code></li>\n<li><code>#1B1B1E</code></li>\n<li><code>#0F0F13</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b838ba5c-68f4-4d23-a6a5-34852f7c57b5/porsche186-sketch-tutorial-part-3.png\" /></p>\n<p>Now add the drivers’ last names. I will add shamelessly my last name and the last name of one of my best friends, Ivan Minic. Use the <strong>Text</strong> tool to add the names, for the font use again “<strong>Montserrat Bold</strong>”, set <strong>Size</strong> and <strong>Line</strong> to <code>20px</code> and <strong>Color</strong> to <code>#2F2F2F</code>. </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b110ab4-c666-472a-a042-9f4aeeb1ab0d/porsche187-sketch-tutorial-part-3.png\" /></p>\n<p>Select the names and the racing number, and move them inside the <code>bodywork</code> group, just above the <code>door</code> layer.</p>\n<p>Select and put all elements created so far into one group — <code>Porsche 911</code>. Our Porsche 911 is now officially finished!</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b4e01f3b-c528-4d75-985f-a25bddbc14ce/porsche188-sketch-tutorial-part-3.png\" /></p>\n<p>Finally, let’s add a background. Create a rectangle of the same size as the artboard, set the <strong>Fills</strong> to <code>#F4F3F2</code>, and push it below the <code>Porsche 911</code> group.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d4b00839-1936-4153-a925-c9b46b914c89/porsche189-sketch-tutorial-part-3.png\" /></p>\n<h3>Conclusion</h3>\n<p>We’ve put a lot of time and effort to reach the final destination and now you know too how to create all in vectors one of my favorite cars, the original Porsche 911 from 1968, in Sketch app. :)</p>\n<p>The tutorial probably wasn’t too easy, but the end results were well worth it, in my opinion.</p>\n<p>The next step, of course, is to design <em>your</em> <em>own</em> favorite car. Select a car (or another object you like) and be sure to find as many photos of it from different angles, so that you can carefully replicate all of the important details.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/38a09189-4a44-4287-a937-65910f97b4de/draw-your-favorite-car-examples.png\" /></p>\n<p>As you can see, there are certain tools and features in Sketch that you can master to create similar objects — use them to speed up and simplify the whole process.</p>\n<p>I hope you will also remember how important is the proper naming of the layers/shapes (and groups), and stacking them in the right order so that even the most complex of illustrations are easy to organize and to work with.</p>\n<p>Finally, if you have any questions, please leave a comment below or ping me on Twitter (<a href=\"https://twitter.com/colaja\">@colaja</a>) and I will gladly help you.</p>\n<h4>Further Reading</h4>\n<ol>\n<li>“<a href=\"https://medium.com/sketch-app/mastering-the-bezier-curve-in-sketch-4da8fdf0dbbb\">Mastering the Bézier Curve in Sketch</a>” (a tutorial by Peter Nowell)</li>\n<li>“<a href=\"https://www.smashingmagazine.com/2017/10/realistic-chronograph-watch-sketch/\">Designing A Realistic Chronograph Watch In Sketch</a>” (a tutorial by Nikola Lazarević)</li>\n<li>“<a href=\"https://www.sketch.com/docs/styling/#fills\">Styling — Fills</a>” (Sketch help page)</li>\n<li>“<a href=\"https://medium.com/sketch-app/harnessing-vector-awesomeness-in-sketch-3c9621408138\">Harnessing Vector Awesomeness in Sketch</a>” (a tutorial by Peter Nowell)</li>\n<li>“<a href=\"https://www.sketch.com/docs/vector-editing/\">Vector Editing (and Vector Editing Mode)</a>” (Sketch help page)</li>\n<li>“<a href=\"https://www.sketch.com/docs/shapes/\">Shapes</a>” (Sketch help page)</li>\n<li>“<a href=\"https://medium.com/sketch-app-sources/copy-styles-in-sketch-b53a907849f4\">Copy styles in Sketch</a>” (a tutorial by Drahomír Posteby-Mach)</li>\n<li>“<a href=\"https://medium.com/sketch-app-sources/getting-the-pixels-right-in-sketch-2386c730af90\">Getting the pixels right in Sketch</a>” (a tutorial by Nav Pawera)</li>\n<li>“<a href=\"https://medium.com/sketch-app-sources/everything-you-need-to-know-about-using-symbols-in-sketch-and-more-9f8d303f3a80\">Sketch Symbols, Everything you need to know, and more!</a>” (a tutorial by Brian Laiche)</li>\n<li>“<a href=\"https://www.smashingmagazine.com/2017/04/symbols-sketch/\">Unleashing The Full Potential Of Symbols In Sketch</a>” (an article by Javier Simon Cuello)</li>\n<li>“<a href=\"https://www.sketch.com/docs/shapes/#how-to-edit-shapes-with-rotate-copies-tool\">How to Edit Shapes with Rotate Copies tool</a>” (Sketch help page)</li>\n<li>“<a href=\"https://www.sketch.com/docs/symbols/#creating-nested-symbols\">Creating Nested Symbols</a>” (Sketch help page)</li>\n<li>“<a href=\"https://medium.com/@Zomerfeld/nested-symbols-in-sketch-i-you-a67d15a35fbc\">Nested Symbols in Sketch — I 😍 you</a>” (a tutorial by Noam Zomerfeld)</li>\n<li>“<a href=\"https://www.smashingmagazine.com/2017/04/symbols-sketch/#nested-symbols\">Unleashing The Full Potential Of Symbols In Sketch: Nested Symbols</a>” (a tutorial by Javier Cuello)</li>\n</ol>\n","descriptionType":"html","publishedDate":"Fri, 07 Aug 2020 10:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/38a09189-4a44-4287-a937-65910f97b4de/draw-your-favorite-car-examples.png","linkMd5":"3398e6d8c9b7be381f6ae875ed3287b9","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn8@2020_4/2020/09/05/07-59-16-430_b00910c25158635e.webp","destWidth":1920,"destHeight":1080,"sourceBytes":664098,"destBytes":107514,"author":"hello@smashingmagazine.com (Nikola Lazarević)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/38a09189-4a44-4287-a937-65910f97b4de/draw-your-favorite-car-examples.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/15482314-4ebc-4416-b6d9-84a0214b7e7f/porsche128-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn37@2020_5/2020/09/05/07-59-32-791_b81d730c640e6638.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/493737bb-7a61-4f81-9f85-75e428463a0e/porsche129-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn31@2020_1/2020/09/05/07-59-21-550_ca060f7645bb5de9.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9b5ec0ab-3ef5-4459-8f5e-1989e63c048e/porsche130-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn20@2020_1/2020/09/05/07-59-18-200_38d66d7db1a62bbd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c54cf046-3ab1-4a09-a7d9-9ca006bd014e/porsche131-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn55@2020_4/2020/09/05/07-59-32-408_f55b428b749d632e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a079c6cb-0900-435a-a4e1-12c0516198ce/porsche132-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn17@2020_2/2020/09/05/07-59-25-025_2a622094af515b4f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/95f13356-bec3-4b0f-aa45-43ac79d92f84/porsche133-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn23@2020_3/2020/09/05/07-59-18-138_88ea58872fee2f07.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e5a414d6-bfa3-4c14-88f5-96cee474c6ef/porsche134-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn40@2020_3/2020/09/05/07-59-36-282_cd2f108ae1f5d07b.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/958e485e-0451-485a-9fd5-d49213fbfae3/porsche135-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn70@2020_1/2020/09/05/07-59-27-602_e74c147a83ca4379.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45234f52-5d38-4db7-b2de-3a00a37feca4/porsche136-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn3@2020_1/2020/09/05/07-59-23-712_54eb31776006549a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b08ca234-44a8-4a50-8ecc-62b67e4d0c72/porsche137-sketch-tutorial-part-3.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/80e3ba92-4cb4-40d4-ad47-4bc6849030ff/porsche138-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn17@2020_2/2020/09/05/07-59-39-047_8e7da3f50db48311.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/78fb9ced-1f63-4d58-8874-7ca5919216b7/porsche139-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn45@2020_1/2020/09/05/07-59-30-847_3f5f0d83aa0db0c4.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b9d7de40-0241-4714-912c-4f001ab58b94/porsche140-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn9@2020_1/2020/09/05/07-59-30-119_950c5cbf631c3db3.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f84c39d2-dbc4-41e2-bdbe-18075741b5f1/porsche141-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn74@2020_4/2020/09/05/07-59-27-960_7869c1c35478bcb0.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/16f698dc-6897-43a1-9e02-f67958810004/porsche142-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn35@2020_6/2020/09/05/07-59-21-963_ae5240ab1e0353ce.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6bd5ab6-458d-4bf6-b42d-c3c4c556e86d/porsche143-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn96@2020_3/2020/09/05/07-59-17-722_093321b313391846.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/460ddf1c-26e7-4e38-8abf-938906782723/porsche144-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn16@2020_4/2020/09/05/07-59-28-419_ce07292025ebb47d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/df097a7d-3286-4d64-89cf-c101394905af/porsche145-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn14@2020_3/2020/09/05/07-59-30-035_c8261199692a8d1c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6fef2757-1b09-4f18-9183-18dfdb59a102/porsche146-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn27@2020_2/2020/09/05/07-59-33-492_a6b9b63ec9beb040.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6783be2c-5910-41c5-8e60-36c61d57ee97/porsche147-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn12@2020_1/2020/09/05/07-59-21-277_3b3a3ee792f3fb6c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca79f152-0e72-46ed-9e8c-8b67ab6dbc1b/porsche148-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn17@2020_6/2020/09/05/07-59-30-262_1759a19d644740bd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cdfcffd0-f983-4c79-b662-bef62b0f553c/porsche149-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn44@2020_1/2020/09/05/07-59-24-420_375fed5565314f6d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0df4f7ef-ce24-494c-bc28-afcc2d685ea8/porsche150-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn3@2020_2/2020/09/05/07-59-35-021_b6d60003dcd35bbf.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f88bbb91-bfc5-4628-a6dc-fc16491e3d71/porsche151-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn44@2020_6/2020/09/05/07-59-36-260_68f220498f231d96.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cb5ee03a-e129-4af3-91e0-5edd2c91c902/porsche152-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn3@2020_2/2020/09/05/07-59-21-461_18993e9d86953f43.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0bdf3e82-a87e-4c1b-a139-f35defaeb48f/porsche153-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn50@2020_4/2020/09/05/07-59-30-421_130870b4c2667b9e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/846d17fe-01ac-46cc-ba94-3a96f300cb2e/porsche154-sketch-tutorial-part-3.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/caca3c48-0fd1-47fc-b944-36cbc0f1104e/porsche155-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn43@2020_1/2020/09/05/07-59-18-210_1860c6ec5f67e7a4.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ac7b65e2-f9c4-442f-9f4b-919f7f374f85/porsche156-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn11@2020_4/2020/09/05/07-59-20-926_00d2a5c84d835ecc.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1eb1a24b-66cd-4118-8ef9-729611910563/porsche157-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn6@2020_2/2020/09/05/07-59-26-867_16181ce986245cb2.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ac8498ec-bcba-4090-b2cf-8dd8b34d5e02/porsche158-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn97@2020_3/2020/09/05/07-59-30-463_12c1006a19ee4ac4.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4c78f5b2-476d-4830-b787-d40aac2ecd06/porsche159-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn85@2020_2/2020/09/05/07-59-31-813_6a49d32d2cfd190d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8f1bd4e4-e152-4deb-a1f8-37a173c95533/porsche160-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn84@2020_3/2020/09/05/07-59-38-728_ca3c97b242c3d511.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4355bb58-f9c4-4b2e-a86b-e9c3989055a4/porsche161-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn5@2020_2/2020/09/05/07-59-32-006_1c962f500a67d2dd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d6a036a-38af-4e9d-abca-40802b84185e/porsche162-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn52@2020_4/2020/09/05/07-59-17-815_bb250b9e57c00d3a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9a61629f-ad13-40f6-adaa-480d6f123c15/porsche163-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn84@2020_2/2020/09/05/07-59-17-672_10285cc1fa2581de.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b63e10f6-d62e-46a4-8fb1-9b74e30a6c4f/porsche164-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn25@2020_4/2020/09/05/07-59-34-105_eed9b9f316792335.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cce80386-eec2-49ad-be9a-3e3ac39ea74d/porsche164a-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn77@2020_3/2020/09/05/07-59-27-692_a9e705e56ce179d7.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b87dcaa2-1cd1-4f9b-b06c-e920f00cb032/porsche165-1-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn88@2020_3/2020/09/05/07-59-25-550_c346322a5f701d89.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/99bf1fe1-fd4e-4a3a-8a90-a9ec1761c15c/porsche165-2-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn84@2020_1/2020/09/05/07-59-37-973_cb7c83519fc944ba.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/73408acd-dd0d-408d-b4e2-1f645018118e/porsche165-4-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn88@2020_6/2020/09/05/07-59-17-667_59a2c64f8cb8079d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c041af60-1482-42fc-ba6f-71e8cc9cb31d/porsche165-5-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn76@2020_3/2020/09/05/07-59-32-178_fba4042eeb638e18.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/01e05365-27e0-4b4c-bb56-bc4313dc4cad/porsche165c-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn49@2020_6/2020/09/05/07-59-26-055_fe24a4fa32d36802.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9fea9610-16d2-499c-bd89-dea136c5217e/porsche166-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn33@2020_2/2020/09/05/07-59-26-688_7190e41127f9189c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/37fe9212-24b0-402a-bf9b-927828f0c3a8/porsche167-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn82@2020_1/2020/09/05/07-59-20-215_42d38fd79608e5ac.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9dc11909-23e3-4fba-a8f8-1be147fb081d/porsche168-sketch-tutorial-part-3.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cd7f2040-ad64-45f6-ad3d-0003e4895d15/porsche169-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn12@2020_1/2020/09/05/07-59-38-164_1715d2b5f846451f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4dfa6552-3531-4349-967b-b15c346366b9/porsche911-inspiration-images.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn42@2020_2/2020/09/05/07-59-37-533_566c8688f13b22c1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3cea8885-9cf5-4e62-9f77-31a3afb2b475/porsche170-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn87@2020_1/2020/09/05/07-59-21-248_dba554df04df0e4a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/80453f0b-366c-45b7-8c1a-b8171bf9ee51/porsche171-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn83@2020_5/2020/09/05/07-59-29-778_c3e13eb8dad78abd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/134312b4-6200-4c73-9166-4c1bd84788f0/porsche172-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn18@2020_4/2020/09/05/07-59-31-266_bf8f79842cd8acf4.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d722ceb8-4798-4d37-80ee-7b37917beeeb/porsche173-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn81@2020_4/2020/09/05/07-59-33-922_f8b2b3be3032c5e4.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/56fa24c3-6dc4-43e7-a03b-c4c04e576152/porsche174-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn77@2020_4/2020/09/05/07-59-34-736_5fba2e2f3690d449.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ab8c43e6-8858-4356-99d1-6b5220c6a31a/porsche175-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn26@2020_4/2020/09/05/07-59-27-139_54447b49e4eb9099.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f2522e02-e9aa-419d-98aa-d38b4bf58f5b/porsche176-sketch-tutorial-part-3.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/756fbf8e-51b1-4d1a-84b6-e14422b2b13a/porsche177-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn2@2020_1/2020/09/05/07-59-27-838_cc35aaa0af4fcb2b.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0ca00db5-71c3-49f5-a339-2e56a17dbbbf/porsche178-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn11@2020_1/2020/09/05/07-59-33-607_94c8f554272afa04.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c505ab2b-995d-42a9-a006-26d359bb3dfb/porsche179-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn32@2020_5/2020/09/05/07-59-21-644_88ccfc8483be0099.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c9d1c96e-9405-44d9-914e-122d8ae4d1d7/porsche180-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn65@2020_5/2020/09/05/07-59-27-493_67eb18083f73c7ad.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d614e7f-6e6d-4521-865a-0027be4f8c99/porsche181-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn77@2020_3/2020/09/05/07-59-33-009_01796ed6cc433312.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/849731a1-27b2-429a-a303-5822695c451c/porsche182-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn59@2020_1/2020/09/05/07-59-20-939_0b701b66d38847b1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/92947151-f2f2-4678-8b3c-77491804f473/porsche183-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn96@2020_1/2020/09/05/07-59-33-135_cdb532073839c05b.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/822044fc-fb95-4507-8179-7190a5d8d95c/porsche184-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn49@2020_3/2020/09/05/07-59-18-774_30e0551239a5deaa.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c9425792-fcc7-4c32-b8fe-846e5b129933/porsche185-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn7@2020_4/2020/09/05/07-59-23-748_fc26a3cd16f3f087.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/27d86bb6-b64a-4cf1-943b-2fa8fd999aa5/porsche185a-side-windshield-decals-example.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn17@2020_6/2020/09/05/07-59-22-774_01986d7c0a3e502e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0eef430f-3044-407d-aab9-efbba8f91cb2/porsche185b-car-body-decals-example.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn98@2020_6/2020/09/05/07-59-34-912_bcc0a0e7b4f37a6d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b838ba5c-68f4-4d23-a6a5-34852f7c57b5/porsche186-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn40@2020_6/2020/09/05/07-59-38-416_6186aae820dc4cdd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b110ab4-c666-472a-a042-9f4aeeb1ab0d/porsche187-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn20@2020_3/2020/09/05/07-59-33-238_99799445e3d7348f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b4e01f3b-c528-4d75-985f-a25bddbc14ce/porsche188-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn99@2020_4/2020/09/05/07-59-28-753_e0a0620bea14c7b4.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d4b00839-1936-4153-a925-c9b46b914c89/porsche189-sketch-tutorial-part-3.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn60@2020_4/2020/09/05/07-59-26-391_6f21a8831f2c5914.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/38a09189-4a44-4287-a937-65910f97b4de/draw-your-favorite-car-examples.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn13@2020_6/2020/09/05/07-59-25-123_29f58048c08c47e2.webp"},"publishedOrCreatedDate":1599292755769},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Inspired Design Decisions With Bradbury Thompson: The Art Of Graphic Design","link":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","description":"<p>The idea for this series — and the book which will follow it — was sparked by a casual conversation, but writing it has had a profound impact on me and the work I make for the web.</p>\n<p>I’m more thoughtful in my approach to page layout and to the ways a page and its content adapt to different screen sizes. I have a far greater understanding of how composition helps communication and can improve the stories I tell about my clients’ businesses, products, or services.</p>\n<p>I discovered how to better create a rhythm which flows from page to page. I learned how that rhythm produces more attractive visual designs and engaging experiences, and how flexible even the simplest grids can be when approached with imagination.</p>\n<p>I became fascinated by the ways magazine art directors including Alexey Brodovitch and Bea Feitler brought images and text together. My knowledge of typography developed alongside my enthusiasm for expressive and entertaining type. I’m unlikely ever to make type as beautiful as Herb Lubalin, or as challenging as Neville Brody, but I am more confident to experiment.</p>\n<p>This project gave me the confidence to — as Ruth Ansel suggested — “step outside of what is expected,” make confident choices, and and to trust my instincts when something feels right. I learned how to channel my often rebellious attitude to conventional design thinking to develop novel solutions to often everyday design problems.</p>\n<p>We work in an industry which is now more dominated by the academic, mechanical, and technical aspects of design. Developing this series has reinforced for me that while those activities matter, as Giovanni Pintori wrote, we “need logic and imagination in equal measure.”</p>\n<p>As Neville Brody explained, “Once you have broken down the rules, literally anything is possible.” Unconventional thinking needn’t come at the expense of usability. Learning how people interact with a website or use a product shouldn’t dictate a design but instead provide a platform on which to develop engaging, entertaining, and ultimately more memorable experiences.</p>\n<p>Learning about the work of designers from different eras and various fields not only inspired my own ideas, it gave me enthusiasm to learn more. Finding new sources of inspiration has become an almost daily obsession, and while my studio walls might not yet be as full as Ruth Ansel’s and Bea Feitler’s, my bookcases, coffee tables, and desk are almost overflowing with my collection of design books.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bb688405-8701-4750-880b-59fc0142f131/issue-12-01-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>For a long time, I had a nagging feeling the web can so much more than we’re making it. Every one of the designers I’ve featured throughout this series challenged perceptions, influenced the direction of their medium, and ultimately inspired others—myself included—to create better work. I hope in some small way, this series can do the same.</p>\n<h3>Inspired By Bradbury Thompson</h3>\n<p>Studying one of the most accomplished art directors and graphic designers of the last century seems like a fitting close to this series.</p>\n<p>Bradbury Thompson was born in Kansas in 1911, and while he may not have been the best-known, there’s no doubt he was one of the most influential. Thompson studied at Washburn College in his home city of Topeka. From early on, he was inspired by print designs, especially magazines, and used this influence to design the college’s yearbooks.</p>\n<p>After graduating from Washburn, Thompson worked for five years at Capper Publications, a local printing company. This first job as a printshop junior wouldn’t have been glamorous, but it gave Thompson a broad knowledge of design and printing techniques which he would use throughout his long career.</p>\n<p>Kansas in the 1930s was well-known for its severe dust storms, but not as a creative centre, so in 1938 Thompson travelled the 1,200 miles east to New York City. Incredibly, for a young man fresh off the road from Kansas, one of his first projects was designing the 1939 World’s Fair catalogue.</p>\n<p>Thompson worked for Rogers-Kellogg-Stillson—the printing firm responsible for that World’s Fair—and was assigned to work on Westvaco Inspirations for Printers. This series of promotional booklets were published by Westvaco Corporation to showcase its line of printing papers. Each issue consisted of just sixteen pages, but gave Thomson a “rare opportunity for experimentation provided a receptive designer.”</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d96ba3c-79d6-4e8d-b78e-d14e554ce906/issue-12-02-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>Westvaco had published Inspirations since the 1920s and was already widely circulated to an audience of 35,000 agencies, museums, printers, schools, and universities.</p>\n<p>Thomson was given no budget to commission original artwork or photographs for the publication, but instead of letting this limit his ideas, he used it as an opportunity to be creative. Inspirations gave Thomson the freedom to experiment with ideas and techniques, and to explore creative concepts. He became “one of the best scroungers in my profession” by borrowing printed plates and separations from agencies, magazines, and even museums, to incorporate into his work.</p>\n<p>These borrowed elements included historical photographs and illustrations which Thomson combined with contemporary typography and modern process colors. For Victory, a spread for Inspirations in 1953, Thomson incorporated arrow illustrations and integrated them into targets made from solid colors. He borrowed elements from folk and primitive art, turning them into original works which blended modern with traditional. Working on Inspirations stimulated Thompson’s creativity, and he went on to design over 60 editions.</p>\n<p>During WW2, Thompson designed the final few issues of two wartime magazines—Victory and USA—which were published by the Office of War Information. Then in 1945 he became art director of Mademoiselle magazine and stayed in the role for the next fifteen years.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/416d0840-b415-4f94-884d-25e2f3c587bf/issue-12-03-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>The eclectic tendencies Thompson had developed working on Inspirations continued at Mademoiselle and now with a budget to work with, he commissioned up-and-coming artists Andy Warhol, Joan Miro, Willem de Kooning, and my personal favourite pop artist Jasper Johns to illustrate for its fiction section.</p>\n<p>Thomson’s magazine work didn’t begin or end with Mademoiselle and throughout his career he work on over thirty more including Business Week, the Harvard Business Review, and Smithsonian magazine.</p>\n<p>Bradbury Thompson may not be among the most famous graphic designers but he was widely recognised in the his industry, receiving all three major design awards and more. His awards included the National Society of Art Directors of the Year Award (1950) and the AIGA Medal (1975.) In 1977 Thompson was inducted into Art Directors Club Hall of Fame, and during the 1980s he won first the Frederic W. Goudy Award and then the Type Director’s Club Medal.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/77dc9dd1-4cbc-44a0-bed2-9246ee6526ab/issue-12-04-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>From his earliest experiences working in Topeka, Thompson was a details-orientated designer who paid attention to the finest details in his typography and to the precise cropping and placement of his images. His clever use of often simple palettes of process colors along with black-and-white historical illustrations and geometric forms made his work at the same time classic and contemporary.</p>\n<blockquote>\n<p>Type is a thing of constant interest to me. In short, type can be a tool, a toy, and a teacher. It can provide a means of livelihood, a hobby for relaxation, an intellectual stimulant—and a spiritual satisfaction. I believe an avid interest in type necessarily includes a zest for everyday life.<br />— Bradbury Thompson</p>\n</blockquote>\n<p>Like architecture, typography is a blend of beauty with functional utility and Thompson’s designs often combined unusual typographic arrangements with colorful shapes. For Rain, Rain, Rain — a spread for Mademoiselle magazine in 1958 — he reproduced the same raincoat wearing figure carrying an umbrella as five colored silhouettes.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af583674-7928-4f6b-a9d2-fd5251c156af/issue-12-05-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>In Futural — a spread for Westvaco Inspirations for Printers in 1962 — Thompson mirrored the simplified shapes of aeroplanes across pages, using line-work on the verso and solid colors on the recto. He regularly overprinted his colorful shapes to add depth and interest to his designs.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2fefcb8e-8d4b-40cc-98e6-c1b0ffef2791/issue-12-06-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>Using his experience of printing technologies, Thompson’s signature designs often use just four process colors. In offset printing, process colors are comprised of percentages of cyan, magenta, yellow, and key (black) inks (CMYK). This process of four-color printing is capable of producing a wide range of colors.</p>\n<p>Thompson’s best-known designs often use these colors in their purest form. He frequently separated the colors and printed them in different areas in his compositions. We use the RGB model when we design for screens, but separating those three colors in the way Thompson separated component CMYK colors can create inspiring designs for the web.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ec042da6-0bb6-4382-85e0-a1da6982a12b/issue-12-07-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>Thompson taught graphic design at Yale University’s School of Art from 1956 until his death in Connecticut in 1995.</p>\n<p>The New York Times Book Review said that his artistic autobiography, “The Art of Graphic Design,” was a book in which “art and design are gloriously and daringly mixed”, which is a good representation of his design strategy in general. “The Art of Graphic Design,” was published 1988. While the original hardcover copy I’d like for my collection is now prohibitively expensive, reprinted paperback versions are available at more realistic prices.</p>\n<h3>Processing The Color Palette</h3>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b3a454dd-c463-4d58-80f6-d5c2d163d43c/issue-12-08-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>I start implementing this first design by first considering my content, then the most appropriate HTML elements to describe it. For this Thompson-inspired design, I need only a few elements, a header, article, and aside, plus two figures:</p>\n<div>\n<pre><code>&#60;header&#62;\n  &#60;svg id=\"logo\"&#62;…&#60;/svg&#62;\n  &#60;h1&#62;…&#60;/h1&#62;\n  &#60;svg id=\"banner\"&#62;…&#60;/svg&#62;\n  &#60;/div&#62;\n&#60;/header&#62;\n\n&#60;article&#62;\n  &#60;main&#62;…&#60;/main&#62;\n&#60;/article&#62;\n\n&#60;figure&#62;…&#60;/figure&#62;\n&#60;aside&#62;…&#60;/aside&#62;\n&#60;figure&#62;…&#60;/figure&#62;\n</code></pre>\n</div>\n\n<p>As I’ve discussed throughout this series, my process always starts by applying foundation styles, which include colors and typography. I add a deep blue background color and contrasting white serif text:</p>\n<div>\n<pre><code>body {\npadding: 2rem 0;\nbackground-color: #1f455f;\nfont-family: 'serif';\ncolor: #fff; }\n</code></pre>\n</div>\n\n<p>I style my italic headlines, then add sizes for the heading levels and paragraphs:</p>\n<div>\n<pre><code>h1, h2 {\nfont-style: italic; }\n\nh1 {\nfont-size: 2.8rem; }\n\nh2 {\nfont-size: 2.027rem; }\n\np {\nfont-size: .8rem; }\n</code></pre>\n</div>\n\n<p>Finally, I color the captions which accompany both my figures’ images with a vibrant green and italicise the text to match my headline styles:</p>\n<div>\n<pre><code>figcaption {\nfont-size: .8rem;\nfont-style: italic;\ntext-align: center;\ncolor: #d2de4a; }\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a1b4b180-a256-48f2-ac6a-fce6770740f0/issue-12-09-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<h4>CMYK in RGB</h4>\n<p>To produce CMYK process colors—cyan, magenta, yellow, and key (black) in RGB (red, green, and blue) for screens, use maximum values for two out of those colors. If the result is too hard on the eyes, add black to create tints and soften the effect.</p>\n<p>On even the smallest screens, some space needs to remain empty. This allows the eye to flow around content. Margins and padding are often all that’s needed to add empty space:</p>\n<div>\n<pre><code>#logo {\nmargin: 0 auto 1rem; }\n\n#banner {\nmargin: 1rem 1rem 1rem 0; }\n\nmain, aside {\nmargin: 0 1rem; }\n\nfigure {\nmargin: 2rem auto; }\n</code></pre>\n</div>\n\n<p>Reducing the maximum width of graphic elements adds white-space and visual interest to small-screen designs:</p>\n<div>\n<pre><code>#logo {\nmax-width: 25vw; }\n\nfigure {\nmax-width: 50vw; }\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a792e26-ec87-4718-a133-07f7dd6eeac3/issue-12-10-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>The extra space available on medium-size screens allows me to introduce the first set of layout styles to this design. By splitting my running text across two columns, I help to maintain consistency in its measure. Placing my two figures, side-by-side maintains their relative proportions to my text.</p>\n<p>I start by applying grid properties and an unusual five-column symmetrical grid to the body element. Then, I add a data URI background image and position it to the right of my layout:</p>\n<div>\n<pre><code>@media (min-width: 48em) {\n\nbody {\ndisplay: grid;\ngrid-template-columns: repeat(5, 1fr);\ngap: 2rem;\nbackground-image: url(\"data:image/svg+xml…\");\nbackground-position: 120% 50%;\nbackground-repeat: no-repeat; }\n}\n</code></pre>\n</div>\n\n<p>I need to place the content of my header and article directly onto my grid, so I change those elements’ display property to contents, which effectively removes them for styling purposes:</p>\n<div>\n<pre><code>header, article {\ndisplay: contents; }\n</code></pre>\n</div>\n\n<p>Then, I place each content elements into a different set of grid columns and rows using line numbers. First, I place the Ford logo into a single column. I can remove the maximum width I set earlier as its size will now depend on the width of its column:</p>\n<div>\n<pre><code>#logo {\ngrid-column: 2;\nmargin: 0;\nmax-width: none; }\n</code></pre>\n</div>\n\n<p>The banner contains a Transit van profile, and the main headline occupies the first four of my five columns:</p>\n<div>\n<pre><code>#banner,\nh1 {\ngrid-column: 1 / 4; }\n</code></pre>\n</div>\n\n<p>By leaving the first column empty, content in the main and aside elements are indented from the left. By setting their widths to match that of my banner, I add a pleasing asymmetry to the layout:</p>\n<div>\n<pre><code>main, aside {\ngrid-column: 2 / -1; }\n</code></pre>\n</div>\n\n<p>Although my two figures are’t adjacent elements in my HTML, CSS Grid makes placing them side-by-side simple. I place them into different columns on the same row without needing to alter my HTML:</p>\n<div>\n<pre><code>figure:nth-of-type(1) {\ngrid-column: 2 / 4;\ngrid-row: 5; }\n\nfigure:nth-of-type(2) {\ngrid-column: 4 / -1;\ngrid-row: 5; }\n</code></pre>\n</div>\n\n<p>In many of my designs, I use indentation instead of paragraph spacing to create solid blocks from my running text. This effect is even more striking when setting text in multiple columns:</p>\n<div>\n<pre><code>p {\nmargin-bottom: 0; }\n\np + p {\ntext-indent: 2ch; }\n\nmain {\ncolumn-width: 16em; }\n</code></pre>\n</div>\n\n<p>Figure elements can include one or more captions and images. Captions commonly appear under the pictures they describe, but there’s no reason captions need to stay underneath. I can place them above, or to the left or right of an image too.</p>\n<p>When I place captions on either the left or right of an image, I immediately give designs the look of a magazine. I use Flexbox and then the flex-direction property to move them:</p>\n<div>\n<pre><code>figure {\ndisplay: flex; }\n</code></pre>\n</div>\n\n<p>My first figure caption appear on the left, so I reverse the flex-direction of this figure from its default row:</p>\n<div>\n<pre><code>figure:nth-of-type(1) {\nflex-direction: row-reverse; }\n</code></pre>\n</div>\n\n<p>Flexbox allows me to arrange elements vertically as well as horizontally. To place my captions at the bottom edge of my images, I change their cross-axis alignment from the default stretch to flex-end:</p>\n<div>\n<pre><code>figure {\nalign-items: flex-end; }\n</code></pre>\n</div>\n\n<p>For a finishing touch to this medium-size design, I align both captions in opposite directions:</p>\n<div>\n<pre><code>figure:nth-of-type(1) figcaption {\ntext-align: right; }\n\nfigure:nth-of-type(2) figcaption {\ntext-align: left; }\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1d4706f6-71bf-4b03-a918-0820e476e224/issue-12-11-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>Empty space helps to lead the eye at every stage of this layout. The extra space available on larger screens allows me to develop a distinctive asymmetric design.</p>\n<p>Using a compound grid—two or more overlapping or stacked grids—on one page can create eye-catching compositions. The compound grid for this design overlaps a four-column and six-column grid which creates a rhythmic pattern of 2|1|1|2. I transfer that pattern to fr units and apply them as columns to the body element:</p>\n<div>\n<pre><code>@media (min-width: 64em) {\n\nbody {\ngrid-template-columns: 2fr 1fr 1fr 2fr 2fr 1fr 1fr 2fr; }\n}\n</code></pre>\n</div>\n\n<p>Then, I add four rows using a combination of pixels, rem units, and intrinsic sizing, before setting the minimum height of the page to fill the viewport:</p>\n<div>\n<pre><code>body {\ngrid-template-rows: 100px 14rem 14rem auto;\nmin-height: 100vh; }\n</code></pre>\n</div>\n\n<p>To complete the body styles, I add two new data URI background images and specify their sizes so they’re always contained within the viewport:</p>\n<div>\n<pre><code>body {\nbackground-image:\nurl(\"data:image/svg+xml…\"),\nurl(\"data:image/svg+xml…\");\nbackground-position: 0 50%, 100% 50%;\nbackground-size: contain; }\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca1ca11d-0992-4bfb-aff9-71d7e3bb71d1/issue-12-12-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>This asymmetric design is highly structured, and every element is precisely placed onto my grid. I use line numbers to place the structural elements, raising the overlapping headline above the banner image in the stacking order:</p>\n<div>\n<pre><code>#logo {\ngrid-column: 2 / 4;\ngrid-row: 1; }\n\nh1 {\ngrid-column: 1 / 5;\ngrid-row: 2 / 4;\nalign-self: center;\nz-index: 2; }\n\n#banner {\ngrid-column: 1 / 5;\ngrid-row: 2 / 4;\nz-index: 1; }\n</code></pre>\n</div>\n\n<p>My main content occupies the last two columns and forms and island in the right of this design:</p>\n<div>\n<pre><code>main {\ngrid-column: 7 / -1;\ngrid-row: 2 / 4;\ncolumn-width: auto; }\n\naside {\ngrid-column: 6 / -1;\ngrid-row: 4 / 5; }\n</code></pre>\n</div>\n\n<p>I place the two figures onto this new grid:</p>\n<div>\n<pre><code>figure:nth-of-type(1) {\ngrid-column: 5 / 6;\ngrid-row: 2 / 3; }\n\nfigure:nth-of-type(2) {\ngrid-column: 2 / 5;\ngrid-row: 4 / 5; }\n</code></pre>\n</div>\n\n<p>Then, I adjust the direction of their flex, setting the first figure vertically, so my caption appears above its sibling image:</p>\n<div>\n<pre><code>figure:nth-of-type(1) {\nflex-direction: column-reverse; }\n</code></pre>\n</div>\n\n<p>The content of my second figure is arranged horizontally with both the image and caption resting on the baseline:</p>\n<div>\n<pre><code>figure:nth-of-type(2) {\nflex-direction: row;\nalign-items: flex-end; }\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/76f5f008-83b2-4266-9e3f-cfcb196af37a/issue-12-13-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>I fine-tune the alignment of both caption and this first Thompson-inspired design is complete:</p>\n<div>\n<pre><code>figure:nth-of-type(1) figcaption {\ntext-align: center; }\n\nfigure:nth-of-type(2) figcaption {\nflex: 1;\ntext-align: left; }\n</code></pre>\n</div>\n\n\n\n<h3>Colorfully Complementary</h3>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ef24ab4-0ae6-4f3f-a413-6e746285ffcb/issue-12-14-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>Despite the apparent complexity of this layout, I need only three structural elements in my HTML: a header which contains Transit vans in a variety of complementary colors, then two content elements, a main and an aside:</p>\n<div>\n<pre><code>&#60;header&#62;…&#60;/header&#62;\n\n&#60;main&#62;…&#60;/main&#62;\n\n&#60;aside&#62;…&#60;/aside&#62;\n</code></pre>\n</div>\n\n<p>A colorfully complementary header is the centrepiece of this design. It might be tempting to implement this using a single large image. But, I want to develop various arrangements for different screen sizes, so using nine separate images allows me to make a scrolling panel for small screens, and arrange them in a grid for medium and large screens:</p>\n<div>\n<pre><code>&#60;header&#62;\n  &#60;img src=\"header-1.svg\" alt=\"Ford Transit\"&#62;\n  &#60;img src=\"header-2.svg\" alt=\"\"&#62;\n  &#60;img src=\"header-3.svg\" alt=\"\"&#62;\n  …\n  &#60;img src=\"header-9.svg\" alt=\"\"&#62;\n&#60;/header&#62;\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b996bcb0-7986-4e51-a58b-a5862d95e7f0/issue-12-15-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>Both the main and aside elements include a headline, an exploded Transit parts SVG image, plus divisions for arranging my content into columns:</p>\n<div>\n<pre><code>&#60;main&#62;\n  &#60;h1&#62;…&#60;/h1&#62;\n  &#60;div&#62;…&#60;/div&#62;\n  &#60;div&#62;…&#60;/div&#62;\n  &#60;svg&#62;…&#60;/svg&#62;\n&#60;/main&#62;\n\n&#60;aside&#62;\n  &#60;h2&#62;…&#60;/h2&#62;\n  &#60;div&#62;…&#60;/div&#62;\n  &#60;div&#62;…&#60;/div&#62;\n  &#60;svg&#62;…&#60;/svg&#62;\n&#60;/aside&#62;\n</code></pre>\n</div>\n\n<p>I start by applying a dark grey background color to the body element, and add stying to my headlines and paragraphs:</p>\n<div>\n<pre><code>body {\nbackground-color: #262626;\nfont-family: 'sans-serif';\ncolor: #fff; }\n\nh1, h2 {\nfont-size: 2.027rem;\nfont-style: italic;\ntext-transform: uppercase; }\n\np {\nfont-size: .8rem; }\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/936ff96f-3bbf-458e-b2ff-404b2c2fb38e/issue-12-16-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>Often, normal flow plus a few foundation styles are all I need to implement a small-screen version of my designs, but this one includes layout styles from the start. I begin by transforming my header and its nine images into a horizontally scrolling panel by adding flex and overflow properties:</p>\n<div>\n<pre><code>header {\ndisplay: flex;\noverflow-x: scroll;\nmargin: 0 2rem 2rem; }\n\nheader img:not(:last-of-type) {\nmargin-right: 1rem; }\n</code></pre>\n</div>\n\n<p>The header isn’t the only element to get a layout on small screens, the main and aside elements get grids too:</p>\n<div>\n<pre><code>main, aside {\ndisplay: grid;\nmargin: 0 2rem; }\n</code></pre>\n</div>\n\n<p>First, I apply a two-column layout to the main element. The exploded Transit parts SVG image fit into the right column, so I fix its width at 100px. The left column expands to fill any remaining space.</p>\n<div>\n<pre><code>main {\ngrid-template-columns: [content] 1fr [svg] 100px; }\n</code></pre>\n</div>\n\n<p>Then, I place main element items using grid lines with names which reflect their content:</p>\n<div>\n<pre><code>h1 {\ngrid-column: content;\ngrid-row: 1; }\n\nmain &#62; div:nth-of-type(1) {\ngrid-column: content;\ngrid-row: 2; }\n\nmain &#62; div:nth-of-type(2) {\ngrid-column: content;\ngrid-row: 3; }\n\nmain &#62; svg {\ngrid-column: svg;\ngrid-row: 1 / 4; }\n</code></pre>\n</div>\n\n<p>The aside element also has a two-column layout, but this time the narrow column and its exploded Transit parts are on the left. To emphasise the distinction between my main and aside content areas, I add a solid border at the top of the aside:</p>\n<div>\n<pre><code>aside {\ngrid-template-columns: [svg] 100px [content] 1fr;\npadding-top: 1rem;\nborder-top: 3px solid #b22f65; }\n</code></pre>\n</div>\n\n<p>I use named lines to place its content into my grid:</p>\n<div>\n<pre><code>h2 {\ngrid-column: 1 / -1;\ngrid-row: 1; }\n\naside &#62; div:nth-of-type(1) {\ngrid-column: content;\ngrid-row: 2; }\n\naside &#62; div:nth-of-type(2) {\ngrid-column: content;\ngrid-row: 3; }\n\naside &#62; div:nth-of-type(3) {\ngrid-column: svg;\ngrid-row: 2 / 4; }\n</code></pre>\n</div>\n\n<p>A horizontally scrolling header and grids in my content demonstrate how it’s sometimes beneficial to use more than a single-column layout for small screens. Those same elements can be arranged in very different ways in the extra space available on medium-size screens.</p>\n<p>In this version of my design, a grid of nine colorfully complementary images fills the header. I apply grid properties and three symmetrical columns:</p>\n<div>\n<pre><code>@media (min-width: 48em) {\n\nheader {\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr;\ngap: 1rem;\noverflow-x: visible; }\n}\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/be2ec175-7f5d-444f-b313-c296af24f77e/issue-12-17-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>Unlike other elements in this design, there’s no need to place the images into this grid, as the browser’s auto-placement algorithm arranges them automatically.</p>\n<p>By default, browsers place elements horizontally across rows. But, by changing the grid-auto-flow value to column, a browser fills each column vertically before moving onto the next:</p>\n<p>With more space available for my content, I increase the number of columns from two to four:</p>\n<div>\n<pre><code>main, aside {\ngrid-template-columns: 1fr [svg] 1fr 1fr 1fr;\ngap: 2rem; }\n</code></pre>\n</div>\n\n<p>Then, I align content in my main element to the end, so it forms a solid block in the centre of my layout:</p>\n<div>\n<pre><code>main {\nalign-items: end; }\n</code></pre>\n</div>\n\n<p>My main headline spans all four columns. Although it appears first in my HTML, I can place it visually below my running text and images by adding it to the second row:</p>\n<div>\n<pre><code>h1 {\ngrid-column: 1 / -1;\ngrid-row: 2;\nborder-bottom: 3px solid #b22f65; }\n</code></pre>\n</div>\n\n<p>I place my first block of content into the left column:</p>\n<div>\n<pre><code>main &#62; div:nth-of-type(1) {\ngrid-column: 1;\ngrid-row: 1; }\n</code></pre>\n</div>\n\n<p>The second block spans two columns on the right:</p>\n<div>\n<pre><code>main &#62; div:nth-of-type(2) {\ngrid-column: 3 / span 2;\ngrid-row: 1; }\n</code></pre>\n</div>\n\n<p>Next, I place the final division—which contains my SVG image — into the second column using its line name:</p>\n<div>\n<pre><code>main &#62; div:nth-of-type(3) {\ngrid-column: svg;\ngrid-row: 1; }\n</code></pre>\n</div>\n\n<p>Implementing columns for the aside element follows a similar method. Again, I alter the visual placement of my headline using row line numbers:</p>\n<div>\n<pre><code>h2 {\ngrid-column: 3 / -1;\ngrid-row: 2; }\n\naside &#62; div:nth-of-type(1) {\ngrid-column: 1;\ngrid-row: 1 / 3; }\n\naside &#62; div:nth-of-type(2) {\ngrid-column: 3 / -1;\ngrid-row: 1; }\n\naside &#62; div:nth-of-type(3) {\ngrid-column: svg;\ngrid-row: 1 / 3; }\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a6931dab-f63e-4c70-b2fd-e01cab412a83/issue-12-18-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>A full-page image filling one half of a spread is a common sight in magazine designs. Large images like these can be equally as effective on widescreen displays. I apply grid properties to the body element with two symmetrical columns, then name the left column verso and the right column recto:</p>\n<div>\n<pre><code>@media (min-width: 64em) {\n\nbody {\ndisplay: grid;\ngrid-template-columns: [verso] 1fr [recto] 1fr;\ngap: 2rem; }\n}\n</code></pre>\n</div>\n\n<p>These terms originate in Latin where two opposite pages are called folium rectum and folium versum. I place my header into the verso column, and the main and aside elements stack in the recto column:</p>\n<div>\n<pre><code>header {\ngrid-column: verso;\ngrid-row: 1 / 4; }\n\nmain, aside {\ngrid-column: recto; }\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6314f422-1aaf-42ee-85ad-15b3e72198fe/issue-12-19-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>Finally, to improve the readability of my running text on very wide displays, I introduce a multi-column layout. A browser will automatically generate 10em-wide columns to fill the space available:</p>\n<div>\n<pre><code>@media (min-width: 72em) {\n\nmain &#62; div:nth-of-type(2),\naside &#62; div:nth-of-type(2) {\ncolumn-width: 10em;\ncolumn-gap: 2rem; }\n}\n</code></pre>\n</div>\n\n\n\n<h3>Masking Scalable Type</h3>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/139afc93-7075-41ee-a11d-1d72c36813c7/issue-12-20-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>As someone who enjoys the creative aspects of typographic design — but also values accessibility and performance — SVG has become as much a part of my everyday development toolkit as CSS and HTML.</p>\n<p>This next Thompson-inspired design combines SVG text with CSS masks and shapes, but needs very little HTML, just one header and a main element:</p>\n<div>\n<pre><code>&#60;header&#62;\n  &#60;div&#62;\n    &#60;svg&#62;…&#60;/svg&#62;\n  &#60;/div&#62;\n&#60;header&#62;\n\n&#60;main&#62;\n  &#60;svg&#62;…&#60;/svg&#62;\n&#60;/main&#62;\n</code></pre>\n</div>\n\n<p>Before I start developing the striking SVGs, I add foundation styles which give the page a deep blue background color and contrasting white text:</p>\n<div>\n<pre><code>body {\nbackground-color: #1f455e;\nfont-family: 'sans-serif';\ncolor: #fff; }\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/12ec5e63-ffdf-44f1-9235-86ddf9f1f3bb/issue-12-21-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>This header includes a scalable graphic where the repeating text is shaped by a Transit van outline. SVG includes its own method for clipping parts of an image. To define a clipping path I add a clipPath element to my SVG. This, in turn, contains a path which defines my clipped area. So I can reference this clipPath later in my SVG, I give it a unique identifier:</p>\n<div>\n<pre><code>&#60;svg&#62;\n  &#60;clipPath id=\"transit\"&#62;\n    &#60;path&#62;…&#60;/path&#62;\n  &#60;/clipPath&#62;\n&#60;/svg&#62;\n</code></pre>\n</div>\n\n<p>Then, I add the path coordinates which make up my graphical text. I give this group of brightly colored paths a class attribute value which I can use to bind it to my clipPath:</p>\n<div>\n<pre><code>&#60;svg&#62;\n  &#60;clipPath id=\"transit\"&#62;…&#60;/clipPath&#62;\n    &#60;g class=\"transit\"&#62;\n      &#60;path&#62;…&#60;/path&#62;\n    &#60;/g&#62;\n&#60;/svg&#62;\n</code></pre>\n</div>\n\n<p>Whether I include this SVG in my HTML using an image element, or embed the SVG directly into my markup, I use the CSS clip-path property to clip my graphic text using its clipPath:</p>\n<div>\n<pre><code>&#60;style type=\"text/css\"&#62;&#60;![CDATA[\n.transit {\n-webkit-clip-path: url(#transit);\nclip-path: url(#transit); }\n]]&gt;&#60;/style&#62;\n</code></pre>\n</div>\n\n<p>Using clipPath, only areas within a clipping path are displayed. Anything outside the clipped area will remain invisible.</p>\n<p>But, there’s another way to mask an element, one which works with all types of content, not just SVG. Similar to clip-path, CSS masks hide parts of an element using a black and white mask image.</p>\n<div>\n<pre><code>header div {\n-webkit-mask-image: url(\"mask.svg\");\nmask-image: url(\"mask.svg\"); }\n</code></pre>\n</div>\n\n<p>When a mask is applied, only areas of an element which coincide with the black parts of the mask will be displayed. Everything outside these areas will disappear.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c0b07e54-ecff-4a6a-b2ab-6805f43b707d/issue-12-22-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>The properties of mask-image share many similarities with backgrounds in CSS. Just like background images, masks can be positioned, repeated, and sized, and can even be developed from  background gradients. As I don’t need my mask image to repeat, I set its value to no-repeat, just as would with any background image:</p>\n<div>\n<pre><code>header div {\n-webkit-mask-repeat: no-repeat;\nmask-repeat: no-repeat; }\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee016d76-1bd8-42c1-aac6-f4f707d1d5c1/issue-12-23-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>The contents of my SVG in the main element is entirely different. This graphic contains brightly colored lines of SVG text which explain the Transit van’s pedigree. I wrap each line inside a tspan element, each with its own x and y coordinates which tightly pack the text into a solid block:</p>\n<div>\n<pre><code>&#60;svg&#62;\n&#60;text&#62;\n&#60;tspan x=\"0\" y=\"86\"&#62;BUILT AS A PASSENGER VAN, MINIBUS, &#60;/tspan&#62;\n&#60;tspan x=\"0\" y=\"156\"&#62;CUTAWAY VAN CHASSIS, AND A PICKUP &#60;/tspan&#62;\n&#60;tspan x=\"0\" y=\"226\"&#62;TRUCK. OVER 8,000,000 TRANSIT VANS &#60;/tspan&#62;\n&#60;tspan x=\"0\" y=\"296\"&#62;HAVE BEEN SOLD, MAKING IT THE THIRD &#60;/tspan&#62;\n&#60;tspan x=\"0\" y=\"366\"&#62;BEST-SELLING VAN OF ALL TIME.&#60;/tspan&#62;\n&#60;/text&#62;\n&#60;/svg&#62;\n</code></pre>\n</div>\n\n<p>SVG text elements can be styled like any HTML text, so to emphasise the solidity of this block, I choose a heavyweight, condensed sans-serif, then adjust its tracking by reducing the letter spacing by -2px;</p>\n<div>\n<pre><code>text {\nfont-family: 'sans-serif-condensed';\nfont-size: 83px;\nfont-weight: 700;\nletter-spacing: -2px; }\n</code></pre>\n</div>\n\n<p>CSS pseudo-class selectors are as useful for styling elements in SVG as they are for HTML. I use nth-of-type selectors to give each line of tspan text its own color:</p>\n<div>\n<pre><code>tspan:nth-of-type(1) {\nfill: #c43d56; }\n\ntspan:nth-of-type(2) {\nfill: #f2c867; }\n\ntspan:nth-of-type(3) {\nfill: #377dab; }\n\ntspan:nth-of-type(4) {\nfill: #fff; }\n\ntspan:nth-of-type(5) {\nfill: #c43d56; }\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32f57f0b-74dd-4641-83ee-81924541431a/issue-12-24-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>The solid style of this typographic design makes a stylish header element, but there are times when I might need to add more content to this page. For an alternative take on this design, I add a paragraph explaining the history of the Transit van’s production to my header:</p>\n<div>\n<pre><code>&#60;header&#62;\n  &#60;div&#62;\n    &#60;svg&#62;…&#60;/svg&#62;\n  &#60;/div&#62;\n\n  &#60;p&#62;…&#60;/p&#62;\n&#60;/header&#62;\n</code></pre>\n</div>\n\n<p>In my foundation styles, I add a font size and set the paragraph in uppercase to match my previous SVG text:</p>\n<div>\n<pre><code>header p {\nfont-size: .91rem;\ntext-transform: uppercase; }\n</code></pre>\n</div>\n\n<p>Then, I justify the paragraph text for people who use browsers which also support automatic hyphenation:</p>\n<div>\n<pre><code>@supports (-webkit-hyphens: auto) or (hyphens: auto) {\nheader p {\n-webkit-hyphens: auto;\nhyphens: auto;\ntext-align: justify; }\n}\n</code></pre>\n</div>\n\n<p>On small and medium-size screens, this new paragraph of text follows the header’s SVG as it does in the HTML. But, for larger screens, I want this text to float alongside the masked graphic.</p>\n<p>I give the header graphic an explicit viewport-based width, then float it to enable me to wrap my text around it using CSS Shapes. As I want this shape to match my masked graphic, I use the same mask image for the shape-outside URL:</p>\n<div>\n<pre><code>@media (min-width: 64em) {\n\nheader div {\nfloat: left;\nwidth: 65vw;\nmargin-bottom: 0;\nshape-outside: url(mask.svg);\nshape-margin: 20px; }\n}\n</code></pre>\n</div>\n\n<h3>Splitting Symmetry</h3>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9c9f49de-b0b8-4f59-aeef-c8d112bc3a23/issue-12-25-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>For the final inspired example in this issue—and in fact for the entire series—the split symmetrical layout means I need just two structural elements. By now, these header and main elements should feel very familiar. My header includes the classic Ford logo, an SVG image and a headline:</p>\n<div>\n<pre><code>&#60;header&#62;\n  &#60;svg id=\"logo\"&#62;…&#60;/svg&#62;\n  &#60;img src=\"header.svg\" alt=\"Ford Transit\"&#62;\n  &#60;h1&#62;…&#60;/h1&#62;\n&#60;/header&#62;\n</code></pre>\n</div>\n\n<p>The main element also includes a scalable image, plus a single paragraph of running text:</p>\n<div>\n<pre><code>&#60;main&#62;\n  &#60;p&#62;…&#60;/p&#62;\n  &#60;img src=\"main.svg\" alt=\"\"&#62;\n&#60;/main&#62;\n</code></pre>\n</div>\n\n<p>As always, I start small-screen first by adding color and typography foundation styles. This time, a light grey background, dark grey text, and a sans-serif typeface:</p>\n<div>\n<pre><code>body {\nbackground-color: #ededef;\nfont-family: 'sans-serif';\ncolor: #262626; }\n\nh1 {\ntext-align: center;\ntext-transform: uppercase; }\n</code></pre>\n</div>\n\n<p>The header appears first in my HTML, so I’ll style it first too by giving it a dark grey background and lighter text which is the inverse of my body styles:</p>\n<div>\n<pre><code>header {\nmargin-bottom: 2rem;\npadding: 2rem;\nbackground-color: #262626;\ncolor: #ededef; }\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d451b9ba-63ec-4293-9e22-4eb3f004fcb2/issue-12-26-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>Finally, for small screens, I centre that logo horizontally and limit its maximum width to half that of the viewport:</p>\n<div>\n<pre><code>#logo {\nmargin: 0 auto 2rem;\nmax-width: 50vw; }\n</code></pre>\n</div>\n\n<p>This design takes on more of a Thompson-inspired look with the extra space available on medium-size screens. I need to place elements in the header and main elements, so I add grid properties and four symmetrical columns to both:</p>\n<div>\n<pre><code>@media (min-width: 48em) {\n\nheader, main {\ndisplay: grid;\ngrid-template-columns: repeat(4, 1fr); }\n}\n</code></pre>\n</div>\n\n<p>Then, I add three explicit rows to my header. The first and last are 100px tall, while the middle row expands to fill all the space remaining:</p>\n<div>\n<pre><code>header {\ngrid-template-rows: 100px auto 100px; }\n</code></pre>\n</div>\n\n<p>Now it’s time to place those header elements into my columns and rows using line numbers. The Ford logo comes first and fits into the two centre columns. The headline is last and sits at the bottom while spanning the full width. I give both elements a higher z-index value, so they appear closest to the viewer in the stacking order:</p>\n<div>\n<pre><code>#logo {\ngrid-column: 2 / 4;\ngrid-row: 1;\nz-index: 2; }\n\nh1 {\ngrid-column: 1 / -1;\ngrid-row: 3;\nz-index: 2; }\n</code></pre>\n</div>\n\n<p>Then, I place the header image, so it covers every column and all the rows. By giving it a lower z-index value, I ensure it recedes to the bottom of the stacking order:</p>\n<div>\n<pre><code>header img {\ngrid-column: 1 / -1;\ngrid-row: 1 / 4;\nz-index: 1;\nalign-self: center; }\n</code></pre>\n</div>\n\n<p>With styles for the header image in place, I add a selector which applies those exact same styles to the image in my main element:</p>\n<div>\n<pre><code>header img, main img {\ngrid-column: 1 / -1;\ngrid-row: 1 / 4;\nz-index: 1;\nalign-self: center; }\n</code></pre>\n</div>\n\n<p>While vertical text won’t suit every design, it can turn a short passage into a strong visual statement. I change the paragraph’s writing-mode to vertical-rl and increase its leading using viewport-based units:</p>\n<div>\n<pre><code>main p {\nline-height: 3vw;\nwhite-space: pre-wrap;\nwriting-mode: vertical-rl; }\n</code></pre>\n</div>\n\n<p>For a decorative finishing touch, I change its color and apply a blending mode with a value of difference which also increases the legibility of this text where it appears over the graphic background:</p>\n<div>\n<pre><code>main p {\ncolor: #f4eBd5;\nmix-blend-mode: difference; }\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d13ccc94-5045-4bde-8751-69373ab8d652/issue-12-27-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>I place the paragraph into the two centre columns, align it centrally, then add a higher z-index value to ensure it appears at the top of this element’s stacking order:</p>\n<div>\n<pre><code>main p {\ngrid-column: 2 / 4;\ngrid-row: 1 / 4;\nalign-self: center;\nz-index: 2; }\n</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c3c72cb-2a62-4231-ad46-635d56efbec5/issue-12-28-inspired-design-decisions-bradbury-thompson.png\" /></p>\n<p>Until now, this main content comes after my header in the document flow. For larger screens, I want those elements to sit side-by-side, so I apply grid properties and two symmetrical columns to the body:</p>\n<div>\n<pre><code>@media (min-width: 64em) {\n\nbody {\ndisplay: grid;\ngrid-template-columns: 1fr 1fr;\nmin-height: 100vh; }\n}\n</code></pre>\n</div>\n\n<h3>Staying Inspired</h3>\n<p>When I set out to produce this series, I wanted to teach people about the importance of for inspiration outside the web. My aim was to demonstrate that looking at the challenges designers from other media have faced — and how they approached solving them — can help us make more distinctive, engaging, and ultimately successful products and websites.</p>\n<p>Of course, this series barely scratches the surface, and you can find inspiring examples in plenty more places than I’ve described here. Take a trip to your nearest art gallery, bookstore, museum, or record shop, and you’ll find yourself surrounded by inputs and inspiration.</p>\n<p>I hope this series has inspired you to think about how you design for the web differently. Are examples of design from other media and periods in history relevant to the modern web? Of course, they are. Can we learn from the past while inventing the future? Absolutely. Do we have the technologies and tools to deliver more inspired designs for the web? There’s no doubt about that.</p>\n<p>I’ve been pleased the response to this series has been overwhelmingly positive, but I know there’s plenty more I can do. This series might be coming to a close, but work has started on a new book, Inspired Design for the Web. This book will begin where Art Direction for the Web ended, will showcase more examples of inspired design, and go deeper into how we can learn lessons and apply them to make our websites and products even better.</p>\n<h4>Read More From The Series</h4>\n<ol>\n<li><a href=\"https://www.smashingmagazine.com/2019/06/inspired-design-decisions-avaunt-magazine/\">Inspired Design Decisions: Avaunt Magazine</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/07/inspired-design-decisions-pressing-matters/\">Inspired Design Decisions: Pressing Matters</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/08/inspired-design-decisions-ernest-journal\">Inspired Design Decisions: Ernest Journal</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/09/inspired-design-decisions-alexey-brodovitch/\">Inspired Design Decisions: Alexey Brodovitch</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/10/inspired-design-decisions-bea-feitler/\">Inspired Design Decisions: Bea Feitler</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/03/inspired-design-decisions-neville-brody/\">Inspired Design Decisions: Neville Brody</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/03/inspired-design-decisions-otto-storch/\">Inspired Design Decisions: Otto Storch</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/04/inspired-design-decisions-herb-lubalin/\">Inspired Design Decisions: Herb Lubalin</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/05/inspired-design-decisions-max-huber/\">Inspired Design Decisions: Max Huber</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/06/inspired-design-decisions-giovanni-pintori/\">Inspired Design Decisions: Giovanni Pintori</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/\">Inspired Design Decisions: Emmett McBain</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/\">Inspired Design Decisions: Bradbury Thompson</a></li>\n</ol>\n<p><strong>NB:</strong> <em><a href=\"https://www.smashingmagazine.com/membership/\">Smashing members</a>Smashing members have access to a beautifully designed PDF of Andy’s Inspired Design Decisions magazine and full code examples from this article. You can <a href=\"https://stuffandnonsense.co.uk/inspired-design-decisions/shop/\">buy this issue’s PDF and examples</a> as well as every other issue directly from Andy’s website.</em></p>\n","descriptionType":"html","publishedDate":"Tue, 18 Aug 2020 10:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b996bcb0-7986-4e51-a58b-a5862d95e7f0/issue-12-15-inspired-design-decisions-bradbury-thompson.png","linkMd5":"491501cfc09088ead274778300d9b170","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn36@2020_3/2020/09/05/07-59-16-597_b75a09890e733163.webp","destWidth":2880,"destHeight":2048,"sourceBytes":973621,"destBytes":279564,"author":"hello@smashingmagazine.com (Andrew Clarke)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b996bcb0-7986-4e51-a58b-a5862d95e7f0/issue-12-15-inspired-design-decisions-bradbury-thompson.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bb688405-8701-4750-880b-59fc0142f131/issue-12-01-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn44@2020_1/2020/09/05/07-59-22-081_78204c90b5189da4.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d96ba3c-79d6-4e8d-b78e-d14e554ce906/issue-12-02-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn33@2020_1/2020/09/05/07-59-28-973_089a38c8b58ab9ed.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/416d0840-b415-4f94-884d-25e2f3c587bf/issue-12-03-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn63@2020_2/2020/09/05/07-59-28-532_a31b13c2d0aff9de.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/77dc9dd1-4cbc-44a0-bed2-9246ee6526ab/issue-12-04-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn64@2020_6/2020/09/05/07-59-23-919_3202b596113ffde5.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af583674-7928-4f6b-a9d2-fd5251c156af/issue-12-05-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn5@2020_3/2020/09/05/07-59-32-974_81ff9c1193c594c3.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2fefcb8e-8d4b-40cc-98e6-c1b0ffef2791/issue-12-06-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn24@2020_3/2020/09/05/07-59-21-460_839e2e1f1b7e1895.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ec042da6-0bb6-4382-85e0-a1da6982a12b/issue-12-07-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn6@2020_5/2020/09/05/07-59-20-445_5d845fda5d39309c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b3a454dd-c463-4d58-80f6-d5c2d163d43c/issue-12-08-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn59@2020_2/2020/09/05/07-59-31-656_75b28fe7b9d61581.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a1b4b180-a256-48f2-ac6a-fce6770740f0/issue-12-09-inspired-design-decisions-bradbury-thompson.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a792e26-ec87-4718-a133-07f7dd6eeac3/issue-12-10-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn98@2020_5/2020/09/05/07-59-37-109_1055ed9fac8d61d8.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1d4706f6-71bf-4b03-a918-0820e476e224/issue-12-11-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn33@2020_3/2020/09/05/07-59-38-918_6ba5321b0d26a63d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca1ca11d-0992-4bfb-aff9-71d7e3bb71d1/issue-12-12-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn31@2020_2/2020/09/05/07-59-18-207_c29a20766aad2e45.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/76f5f008-83b2-4266-9e3f-cfcb196af37a/issue-12-13-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn74@2020_2/2020/09/05/07-59-30-570_096ee033474f859a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ef24ab4-0ae6-4f3f-a413-6e746285ffcb/issue-12-14-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn79@2020_6/2020/09/05/07-59-24-679_94b145d81ee26fe1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b996bcb0-7986-4e51-a58b-a5862d95e7f0/issue-12-15-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn7@2020_2/2020/09/05/07-59-22-009_e5a55e59fedbf84b.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/936ff96f-3bbf-458e-b2ff-404b2c2fb38e/issue-12-16-inspired-design-decisions-bradbury-thompson.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/be2ec175-7f5d-444f-b313-c296af24f77e/issue-12-17-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn3@2020_2/2020/09/05/07-59-37-545_cddf35bb47d93157.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a6931dab-f63e-4c70-b2fd-e01cab412a83/issue-12-18-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn92@2020_4/2020/09/05/07-59-30-176_e18087c49bfb6ebb.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6314f422-1aaf-42ee-85ad-15b3e72198fe/issue-12-19-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn16@2020_6/2020/09/05/07-59-21-347_902b633597bcbce6.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/139afc93-7075-41ee-a11d-1d72c36813c7/issue-12-20-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn33@2020_3/2020/09/05/07-59-30-291_fdafc4978726272f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/12ec5e63-ffdf-44f1-9235-86ddf9f1f3bb/issue-12-21-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn41@2020_2/2020/09/05/07-59-31-043_60ffbc84408a2d31.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c0b07e54-ecff-4a6a-b2ab-6805f43b707d/issue-12-22-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn54@2020_2/2020/09/05/07-59-35-845_4bc40d702bcc75a3.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee016d76-1bd8-42c1-aac6-f4f707d1d5c1/issue-12-23-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn65@2020_4/2020/09/05/07-59-35-896_a7cdb843f3601c43.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32f57f0b-74dd-4641-83ee-81924541431a/issue-12-24-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn31@2020_5/2020/09/05/07-59-19-910_7420e3bfd57f8301.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9c9f49de-b0b8-4f59-aeef-c8d112bc3a23/issue-12-25-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn7@2020_3/2020/09/05/07-59-19-399_9b5e669a7eb760e1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d451b9ba-63ec-4293-9e22-4eb3f004fcb2/issue-12-26-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn72@2020_4/2020/09/05/07-59-17-598_4c7cccb07239ca96.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d13ccc94-5045-4bde-8751-69373ab8d652/issue-12-27-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn44@2020_3/2020/09/05/07-59-31-816_1c814edec6334571.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c3c72cb-2a62-4231-ad46-635d56efbec5/issue-12-28-inspired-design-decisions-bradbury-thompson.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn75@2020_3/2020/09/05/07-59-18-755_9790480448edc9a1.webp"},"publishedOrCreatedDate":1599292755740},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"SmashingConf Live! Is A Wrap","link":"https://smashingmagazine.com/2020/08/smashingconf-live-august-wrapup/","description":"<p>Last week, we ran our very first SmashingConf Live! event, the first in a series of online events taking us through to the end of 2020. We had an amazing two days and we hope that all of our speakers and attendees did too. In this post, I’ll round up some of the key moments and feedback we’ve had.</p>\n<h3>A Team Spread Around The World</h3>\n<p>Here at Smashing, we take remote, distributed working to the extreme, and are very used to dealing with all of our different timezones. However, the conferences are the one time when most of us are together in one place. With all of us in our home locations and timezones, things were very different this time. We shared pictures of our setups in the Slack for the event, and lots of attendees joined in the fun and showed us how they were attending the conference themselves.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d4ad595d-0be6-475e-b1c0-2bf9a55dc552/smashing-live-team.jpg\" /></p>\n<blockquote><p>Trying to coordinate watching <a href=\"https://twitter.com/smashingconf?ref_src=twsrc%5Etfw\">@smashingconf</a> and playing with the 👶🏽 🙂<br /><br />At least he looks very interested in listening to Vitalys introduction 😄 <a href=\"https://t.co/xyS3vRL5YH\">pic.twitter.com/xyS3vRL5YH</a></p>— Sebastian Helzle (@sebobo) <a href=\"https://twitter.com/sebobo/status/1296463576534786050?ref_src=twsrc%5Etfw\">August 20, 2020</a></blockquote>\n\n<p>It takes a lot of people to bring you an online multi-track conference, so the full team taking care of everything and everyone behind the scenes on the day were:</p>\n<ul>\n<li>Andrea de Souza (<em>Volunteer</em>): Canada</li>\n<li>Amanda Annandale (<em>Head of Events</em>): Bristol, UK</li>\n<li>Bash Choudhry (<em>Volunteer</em>): USA</li>\n<li>Bethany Andrew (<em>Event Assistant</em>): London, UK</li>\n<li>Charis Rooda (<em>Marketing Coordinator</em>): Hong Kong</li>\n<li>Esther Fernandez (<em>Partnerships Coordinator</em>): Barcelona, Spain</li>\n<li>Jan Constantin (<em>Smashing Team</em>): Freiburg, Germany</li>\n<li>Jarijn Nijkamp (<em>Membership Lead</em>): Hong Kong</li>\n<li>Marc Thiele (<em>Board Member</em>): Dusseldorf, Germany</li>\n<li>Mariona Ciller (<em>Partnerships Manager</em>): Barcelona, Spain</li>\n<li>Rachel Andrew (<em>Editor-in-Chief</em>): Bristol, UK</li>\n<li>Raffaella Isidori (<em>Volunteer</em>): Milan, Italy</li>\n<li>Ricardo Gimenes (<em>Illustrator</em>): Malmö, Sweden</li>\n<li>Vitaly Friedman (<em>Co-Founder</em>): Dusseldorf, Germany</li>\n</ul>\n<blockquote><p>Really enjoyed the first day of <a href=\"https://twitter.com/smashingconf?ref_src=twsrc%5Etfw\">@smashingconf</a> live today. Especially the side tracks really made the experience for me.<br /><br />There you had the chance to ask questions, engage in discussions, enjoy the chats. Very immersive and engaging and definitely a highlight.</p>— Stefan Baumgartner (@ddprrt) <a href=\"https://twitter.com/ddprrt/status/1296550326967898112?ref_src=twsrc%5Etfw\">August 20, 2020</a></blockquote>\n\n<h3>Our Conference Platform</h3>\n<p>When selecting a conference platform it was important to us to have something that would enable the <strong>fun and interactivity</strong> of an in-person SmashingConf. We wanted to have sidetracks, games, places to ask questions of our speakers, all along with main stage content. While we use Zoom for workshops, we didn’t feel that asking you all to sit through two days of Zoom meetings would be very Smashing at all.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/187b1ebc-e4bb-47ee-b398-553905799863/live-platform.png\" /></p>\n<p>Amanda and the rest of the team looked at a number of options and we ultimately chose to use Hopin. We trialed the platform for our Smashing Meets events, but this was the first time we would be running at such a scale. Everything worked really well, and speakers and attendees seemed to like the setup. As a speaker, I found it felt far more interactive than the usual online conference solutions, and less like I was presenting to my office wall!</p>\n<blockquote><p>100% agree, Paul. It’s a fantastic setup, and the moderation and flow just WORKS! Well done <a href=\"https://twitter.com/smashingmag?ref_src=twsrc%5Etfw\">@smashingmag</a> <a href=\"https://twitter.com/smashingconf?ref_src=twsrc%5Etfw\">@smashingconf</a> team! <a href=\"https://t.co/Xy9BKgyVTx\">https://t.co/Xy9BKgyVTx</a></p>— Trine Falbe (@trinefalbe) <a href=\"https://twitter.com/trinefalbe/status/1296488077809143810?ref_src=twsrc%5Etfw\">August 20, 2020</a></blockquote>\n\n<h3>A Lot Of Fun, And A Lot Of Learning</h3>\n<p>With multiple sessions happening at once we had <a href=\"https://smashingconf.com/live/#speakers\">a lot of speakers</a> sharing their knowledge with us. As with our in-person events, everyone created shared Google Docs of takeaways over the two days — <a href=\"https://smashed.by/whisker\">Day One</a>, <a href=\"https://smashed.by/paw\">Day Two</a>. MC Phil Hawksworth kept everything on track on the main stage.</p>\n<p>Some amazing sketchnotes were created by <a href=\"https://twitter.com/ximenavf9\">Ximena</a> which give you a snapshot of the key takeaways from many of the talks and sessions.</p>\n<blockquote><p>I think this may be the last of the <a href=\"https://twitter.com/hashtag/sketchnotes?src=hash&#38;ref_src=twsrc%5Etfw\">#sketchnotes</a> maybe. <br /><br />GREAT TALK at <a href=\"https://twitter.com/smashingconf?ref_src=twsrc%5Etfw\">@smashingconf</a> from dina Amin. Beautiful story and Stop Motion creations with a few other thinkery things 😉💙<br /><br />“How big is your fishbowl?”<a href=\"https://twitter.com/hashtag/smashingConf?src=hash&#38;ref_src=twsrc%5Etfw\">#smashingConf</a> <a href=\"https://t.co/FMIJFbYuWg\">pic.twitter.com/FMIJFbYuWg</a></p>— Ximena Vf. (@ximenavf92) <a href=\"https://twitter.com/ximenavf92/status/1296929087219535872?ref_src=twsrc%5Etfw\">August 21, 2020</a></blockquote>\n\n<p>We even had our conference DJ Tobi playing some tunes between the mainstage talks — just like at our in-person events.</p>\n<h3>Badges</h3>\n<p>We felt that a virtual conference should have badges too. So, for SmashingConf Live we had badges featuring a variety of cats. Attendees tried to find all of the different cats — all 96 of them!</p>\n\n\n    <a href=\"https://smashingconf.com/\">\n\n    <img src=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3af9d3a1-4d9f-4b6d-9e7c-e605279b961b/smashingconf-live-badge-designs.png\" />\n\n    </a>\n\n\n\n    Friendly <a href=\"https://smashingconf.com/\">SmashingConf</a> badges for cat collectors! Every attendee gets their own badge and can trade them when meeting new people. Illustrated by our cherished illustrator, <a href=\"https://www.ricardogimenes.com/\">Ricardo Gimenes</a>.\n    \n\n\n\n<p>It really did feel like an event, rather than a webinar, and it was great to see so many people — and to meet their cats! That’s something we don’t get to do at our usual events.</p>\n<blockquote><p>These virtual badges for <a href=\"https://twitter.com/smashingconf?ref_src=twsrc%5Etfw\">@smashingconf</a> are awesome! 😺 <br /><br />I particularly vibe with the low dexterity score. <a href=\"https://t.co/4wYL1ftNpX\">pic.twitter.com/4wYL1ftNpX</a></p>— Cath Aylward (@CathAylward) <a href=\"https://twitter.com/CathAylward/status/1296523622496993284?ref_src=twsrc%5Etfw\">August 20, 2020</a></blockquote>\n\n<h3>Wishing You Were There?</h3>\n<p>If you wish you could have joined us then you have three more chances for some SmashingConf online fun! <strong>We’ve taken all of our 2020 events online</strong>, which means that between now and the end of the year you have three to choose from.</p>\n<h4>SmashingConf Freiburg Online (Sep 7–8)</h4>\n<p><a href=\"https://smashingconf.com/freiburg-2020/\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e0814bac-bee6-41a1-a311-7ade9500cd3c/online-freiburg-smashingconf-fr-small.svg\" /></a>The <a href=\"https://smashingconf.com/freiburg-2020/\">SmashingConf Freiburg</a> is moving online on the original dates: September 7th–8th. One track, two days and 13 speakers, with all of the actionable insights you expect from SmashingConf. We’ll be running the event tied to the timezone in Germany — making this a great event for Europeans. Check out the <a href=\"https://smashingconf.com/freiburg-2020/schedule\">schedule</a>, and <a href=\"https://smashingconf.com/freiburg-2020/registration\">buy tickets here</a>.</p>\n\n<h4>SmashingConf Austin/NY Online (Oct 13–14)</h4>\n<p><a href=\"https://smashingconf.com/austin-2020/\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b8a33360-66fc-433c-bd7f-cccdd33b88f7/online-smashingconf-aus-small.svg\" /></a>We have combined the programming for <a href=\"https://smashingconf.com/austin-2020/\">New York and Austin</a> as these two events were so close together and similar to each other. We’ll be running this event in Central time, just as if we were all in Austin. Check out the <a href=\"https://smashingconf.com/austin-2020/schedule\">schedule</a>, and <a href=\"https://smashingconf.com/austin-2020/registration\">buy tickets here</a>. We’d love to see you in October!</p>\n\n<h4>SmashingConf SF Online (Nov 10–11)</h4>\n<p><a href=\"https://smashingconf.com/sf-2020/\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1d5e40ef-6bc6-4894-9d38-8d862f4e1e34/smashingconf-online-sf-small.svg\" /></a>In PST, join us for a <a href=\"https://smashingconf.com/sf-2020/\">SmashingConf San Francisco</a> on November 10th–11th. The <a href=\"https://smashingconf.com/sf-2020/schedule\">schedule</a> and <a href=\"https://smashingconf.com/sf-2020/registration\">tickets</a> are online for you to take a look at. We’ll be sure to have a great celebration for our final event of 2020!</p>\n\n<p>Can’t wait to virtually see you there!</p>\n\n\n\n","descriptionType":"html","publishedDate":"Thu, 27 Aug 2020 12:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3af9d3a1-4d9f-4b6d-9e7c-e605279b961b/smashingconf-live-badge-designs.png","linkMd5":"a9cb53d45a0e601abe8e7d8fe024bba5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn60@2020_4/2020/09/05/07-59-16-416_da87b56095785838.webp","destWidth":1500,"destHeight":645,"sourceBytes":296421,"destBytes":117600,"author":"hello@smashingmagazine.com (Rachel Andrew)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3af9d3a1-4d9f-4b6d-9e7c-e605279b961b/smashingconf-live-badge-designs.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d4ad595d-0be6-475e-b1c0-2bf9a55dc552/smashing-live-team.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn16@2020_2/2020/09/05/07-59-19-620_8b20a3fd50b6ea9c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/187b1ebc-e4bb-47ee-b398-553905799863/live-platform.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn92@2020_2/2020/09/05/07-59-28-718_431332cc0e3dc359.webp","https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3af9d3a1-4d9f-4b6d-9e7c-e605279b961b/smashingconf-live-badge-designs.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e0814bac-bee6-41a1-a311-7ade9500cd3c/online-freiburg-smashingconf-fr-small.svg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn31@2020_1/2020/09/05/07-59-31-794_de6fd9e42ae4415a.svg","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b8a33360-66fc-433c-bd7f-cccdd33b88f7/online-smashingconf-aus-small.svg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn46@2020_3/2020/09/05/07-59-39-307_04a0a07a826e04ef.svg","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1d5e40ef-6bc6-4894-9d38-8d862f4e1e34/smashingconf-online-sf-small.svg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn73@2020_4/2020/09/05/07-59-32-962_93356a701556af3a.svg"},"publishedOrCreatedDate":1599292755730},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Setting Up An API Using Flask, Google’s Cloud SQL And App Engine","link":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","description":"<p>A few Python frameworks can be used to create APIs, two of which are Flask and Django. Frameworks comes with functionality that makes it easy for developers to implement the features that users need to interact with their applications. The complexity of a web application could be a deciding factor when you’re choosing which framework to work with.</p>\n<h4>Django</h4>\n<p><a href=\"https://www.djangoproject.com/\">Django</a> is a robust framework that has a predefined structure with built-in functionality. The downside of its robustness, however, is that it could make the framework too complex for certain projects. It’s best suited to complex web applications that need to leverage the advanced functionality of Django.</p>\n<h4>Flask</h4>\n<p><a href=\"https://en.wikipedia.org/wiki/Flask_(web_framework\">Flask</a>), on the other hand, is a lightweight framework for building APIs. Getting started with it is easy, and packages are available to make it robust as you go. This article will focus on defining the view functions and controller and on connecting to a database on Google Cloud and deploying to Google Cloud.</p>\n<p>For the purpose of learning, we’ll build a Flask API with a few endpoints to manage a collection of our favorite songs. The endpoints will be for <code>GET</code> and <code>POST</code> requests: fetching and creating resources. Alongside that, we will be using the suite of services on the <a href=\"https://cloud.google.com/\">Google Cloud</a> platform. We’ll set up Google’s <a href=\"https://console.cloud.google.com/marketplace/details/google-cloud-platform/cloud-sql?pli=1\">Cloud SQL</a> for our database and launch our app by deploying to <a href=\"https://cloud.google.com/appengine/docs\">App Engine</a>. This tutorial is aimed at beginners who are taking their first stab at using Google Cloud for their app.</p>\n<h3>Setting Up A Flask Project</h3>\n<p>This tutorial assumes you have Python 3.x installed. If you don’t, head over to the <a href=\"https://www.python.org/downloads/\">official website</a> to download and install it.</p>\n<p>To check whether Python is installed, launch your command-line interface (CLI) and run the command below:</p>\n<pre><code>python -V\n</code></pre>\n\n<p>Our first step is to create the directory where our project will live. We will call it <code>flask-app</code>:</p>\n<pre><code>mkdir flask-app &#38;&#38; cd flask-app\n</code></pre>\n\n<p>The first thing to do when starting a Python project is to create a virtual environment. Virtual environments isolate your working Python development. This means that this project can have its own dependencies, different from other project on your machines. <a href=\"https://docs.python.org/3/library/venv.html\">venv</a> is a module that ships with Python 3.</p>\n<p>Let’s create a virtual environment in our <code>flask-app</code> directory:</p>\n<pre><code>python3 -m venv env\n</code></pre>\n\n<p>This command creates an <code>env</code> folder in our directory. The name (in this case, <code>env</code>) is an alias for the virtual environment and can be named anything.</p>\n<p>Now that we’ve created the virtual environment, we have to tell our project to use it. To activate our virtual environment, use the following command:</p>\n<pre><code>source env/bin/activate\n</code></pre>\n\n<p>You will see that your CLI prompt now has <code>env</code> at the beginning, indicating that our environment is active.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c76f6bf-d6cf-4e65-804a-cd763c926fb5/terminal-environment-api-flask-google-cloud-sql-app-engine.png\" /></p>\n<p>Now, let’s install our Flask package:</p>\n<pre><code>pip install flask\n</code></pre>\n\n<p>Create a directory named <code>api</code> in our current directory. We’re creating this directory so that we have a folder where our app’s other folders will reside.</p>\n<pre><code>mkdir api &#38;&#38; cd api\n</code></pre>\n\n<p>Next, create a <code>main.py</code> file, which will serve as the entry point to our app:</p>\n<pre><code>touch main.py\n</code></pre>\n\n<p>Open <code>main.py</code>, and enter the following code:</p>\n<pre><code>#main.py\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef home():\n  return 'Hello World'\n\nif __name__ == '__main__':\n  app.run()\n</code></pre>\n\n<p>Let’s understand what we’ve done here. We first imported the <code>Flask</code> class from the Flask package. Then, we created an instance of the class and assigned it to <code>app</code>. Next, we created our first endpoint, which points to our app’s root. In summary, this is a view function that invokes the <code>/</code> route — it returns <code>Hello World</code>.</p>\n<p>Let’s run the app:</p>\n<pre><code>python main.py\n</code></pre>\n\n<p>This starts our local server and serves our app on <code>http://127.0.0.1:5000/</code>. Input the URL in your browser, and you will see the <code>Hello World</code> response printed on your screen.</p>\n<p>And voilà! Our app is up and running. The next task is to make it functional.</p>\n<p>To call our endpoints, we will be using Postman, which is a service that helps developers test endpoints. You can <a href=\"https://www.postman.com/downloads/\">download it</a> from the official website.</p>\n<p>Let’s make <code>main.py</code> return some data:</p>\n<pre><code>#main.py\nfrom flask import Flask, jsonify\napp = Flask(__name__)\nsongs = [\n    {\n        \"title\": \"Rockstar\",\n        \"artist\": \"Dababy\",\n        \"genre\": \"rap\",\n    },\n    {\n        \"title\": \"Say So\",\n        \"artist\": \"Doja Cat\",\n        \"genre\": \"Hiphop\",\n    },\n    {\n        \"title\": \"Panini\",\n        \"artist\": \"Lil Nas X\",\n        \"genre\": \"Hiphop\"\n    }\n]\n@app.route('/songs')\ndef home():\n    return jsonify(songs)\n\nif __name__ == '__main__':\n  app.run()\n</code></pre>\n\n<p>Here, we included a list of songs, including the song’s title and artist’s name. We then changed the root <code>/</code> route to <code>/songs</code>. This route returns the array of songs that we specified. In order to get our list as a JSON value, we JSONified the list by passing it through <code>jsonify</code>. Now, rather than seeing a simple <code>Hello world</code>, we see a list of artists when we access the <code>http://127.0.0.1:5000/songs</code> endpoint.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7b426afe-fb0e-45a1-aa45-ff09e0914409/postman-response-1-api-flask-google-cloud-sql-app-engine.png\" /></p>\n<p>You may have noticed that after every change, we had to restart our server. To enable auto-reloading when the code changes, let’s enable the debug option. To do this, change <code>app.run</code> to this:</p>\n<pre><code>app.run(debug=True)\n</code></pre>\n\n<p>Next, let’s add a song using a post request to our array. First, import the <code>request</code> object, so that we can process incoming request from our users. We’ll later use the <code>request</code> object in the view function to get the user’s input in JSON.</p>\n<pre><code>#main.py\nfrom flask import Flask, jsonify, request\n\napp = Flask(__name__)\nsongs = [\n    {\n        \"title\": \"Rockstar\",\n        \"artist\": \"Dababy\",\n        \"genre\": \"rap\",\n    },\n    {\n        \"title\": \"Say So\",\n        \"artist\": \"Doja Cat\",\n        \"genre\": \"Hiphop\",\n    },\n    {\n        \"title\": \"Panini\",\n        \"artist\": \"Lil Nas X\",\n        \"genre\": \"Hiphop\"\n    }\n]\n@app.route('/songs')\ndef home():\n    return jsonify(songs)\n\n@app.route('/songs', methods=['POST'])\ndef add_songs():\n    song = request.get_json()\n    songs.append(song)\n    return jsonify(songs)\n\nif __name__ == '__main__':\n  app.run(debug=True)\n</code></pre>\n\n<p>Our <code>add_songs</code> view function takes a user-submitted song and appends it to our existing list of songs.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4f54cdfd-7bfd-44e5-92b4-d19a9313414e/postman-response-2-api-flask-google-cloud-sql-app-engine.png\" /></p>\n<p>So far, we have returned our data from a Python list. This is just experimental, because in a more robust environment, our newly added data would be lost if we restarted the server. That is not feasible, so we will require a live database to store and retrieve the data. In comes Cloud SQL.</p>\n<h3>Why Use A Cloud SQL Instance?</h3>\n<p>According to the <a href=\"https://cloud.google.com/sql\">official website</a>:</p>\n<blockquote>“Google Cloud SQL is a fully-managed database service that makes it easy to set-up, maintain, manage and administer your relational MySQL and PostgreSQL databases in the cloud. Hosted on Google Cloud Platform, Cloud SQL provides a database infrastructure for applications running anywhere.”</blockquote>\n\n<p>This means that we can outsource the management of a database’s infrastructure entirely to Google, at flexible pricing.</p>\n<h4>Difference Between Cloud SQL And A Self-Managed Compute Engine</h4>\n<p>On Google Cloud, we can spin up a virtual machine on Google’s Compute Engine infrastructure and install our SQL instance. This means we will be responsible for vertical scalability, replication, and a host of other configuration. With Cloud SQL, we get a lot of configuration out of the box, so we can spend more time on the code and less time setting up.</p>\n<p>Before we begin:</p>\n<ol>\n<li>Sign up for <a href=\"https://cloud.google.com/\">Google Cloud</a>. Google offers $300 in <a href=\"https://cloud.google.com/free/docs/gcp-free-tier\">free credit</a> to new users.</li>\n<li>Create a <a href=\"https://cloud.google.com/resource-manager/docs/creating-managing-projects#console\">project</a>. This is pretty straightforward and can be done right from the console.</li>\n</ol>\n<h3>Create A Cloud SQL Instance</h3>\n<p>After signing up for Google Cloud, in the left panel, scroll to the “SQL” tab and click on it.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a5ea44a7-fce4-41d5-b39f-d8e8e3a1eb51/snapshot-gcp-api-flask-google-cloud-sql-app-engine-large.png\" /></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/49143198-a7d3-4960-9da7-eb68235c9458/cloud-sql-console-api-flask-google-cloud-sql-app-engine.png\" /></p>\n<p>First, we are required to choose an SQL engine. We’ll go with MySQL for this article.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8f31770f-5cc0-4ce3-bcaa-1bd9572a5ea8/creating-mysql-instance-api-flask-google-cloud-sql-app-engine.png\" /></p>\n<p>Next, we’ll create an instance. By default, our instance will be created in the US, and the zone will be automatically selected for us.</p>\n<p>Set the root password and give the instance a name, and then click the “Create” button. You can further configure the instance by clicking the “Show configuration options” dropdown. The settings allows you to configure the instance’s size, storage capacity, security, availability, backups, and more. For this article, we will go with the default settings. Not to worry, these variables can be changed later.</p>\n<p>It might take a few minutes for the process to finish. You’ll know the instance is ready when you see a green checkmark. Click on your instance’s name to go to the details page.</p>\n<p>Now, that we’re up and running, we will do a few things:</p>\n<ol>\n<li>Create a database.</li>\n<li>Create a new user.</li>\n<li>Whitelist our IP address.</li>\n</ol>\n<h4>Create A Database</h4>\n<p>Navigate to the “Database” tab to create a database.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fa8ded40-b460-4c61-8686-ceb7ec2a22e2/create-new-db-api-flask-google-cloud-sql-app-engine.png\" /></p>\n<h4>Create A New User</h4>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1be1d3a-258d-48a0-9c22-3ccf20fb19d4/create-new-user-api-flask-google-cloud-sql-app-engine.png\" /></p>\n<p>In the “Host name” section, set it to allow “% (any host)”.</p>\n<h4>Whitelist IP Address</h4>\n<p>You can connect to your database instance in one of two ways. A <strong>private IP</strong> address requires a virtual private cloud (VPC). If you go for this option, Google Cloud will create a Google-managed <a href=\"https://cloud.google.com/vpc/docs/overview\">VPC</a> and place your instance in it. For this article, we will use the <strong>public IP</strong> address, which is the default. It is public in the sense that only people whose IP addresses have been whitelisted can access the database.</p>\n<p>To whitelist your IP address, type <code>my ip</code> in a Google search to get your IP. Then, go to the “Connections” tab and “Add Network”.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8dc6e411-382e-4cd1-b886-8e3eafc64bf1/whitelist-ip-api-flask-google-cloud-sql-app-engine.png\" /></p>\n<h4>Connect To The Instance</h4>\n<p>Next, navigate to the “Overview” panel and connect using the cloud shell.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/18342610-5ce6-487f-a454-1fa96de53b73/cloud-sql-dashboard-api-flask-google-cloud-sql-app-engine.png\" /></p>\n<p>The command to connect to our Cloud SQL instance will be pre-typed in the console.</p>\n<p>You may use either the root user or the user who was created earlier. In the command below, we’re saying: Connect to the <code>flask-demo</code> instance as the user <code>USERNAME</code>. You will be prompted to input the user’s password.</p>\n<pre><code>gcloud sql connect flask-demo --user=USERNAME\n</code></pre>\n\n<p>If you get an error saying that you don’t have a project ID, you can get your project’s ID by running this:</p>\n<pre><code>gcloud projects list\n</code></pre>\n\n<p>Take the project ID that was outputted from the command above, and input it into the command below, replacing <code>PROJECT_ID</code> with it.</p>\n<pre><code>gcloud config set project PROJECT_ID\n</code></pre>\n\n<p>Then, run the <code>gcloud sql connect</code> command, and we will be connected.</p>\n<p>Run this command to see the active databases:</p>\n<pre><code>&#62; show databases;\n</code></pre>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/26641172-010a-4419-9efd-81f69763247f/show-db-shell-api-flask-google-cloud-sql-app-engine-large.png\" /></p>\n<p>My database is named <code>db_demo</code>, and I’ll run the command below to use the <code>db_demo</code> database. You might see some other databases, such as <code>information_schema</code> and <code>performance_schema</code>. These are there to store table meta data.</p>\n<pre><code>&#62; use db_demo;\n</code></pre>\n\n<p>Next, create a table that mirrors the list from our Flask app. Type the code below on a notepad and paste it in your cloud shell:</p>\n<pre><code>create table songs(\nsong_id INT NOT NULL AUTO_INCREMENT,\ntitle VARCHAR(255),\nartist VARCHAR(255),\ngenre VARCHAR(255),\nPRIMARY KEY(song_id)\n);\n</code></pre>\n\n<p>This code is a SQL command that creates a table named <code>songs</code>, with four columns (<code>song_id</code>, <code>title</code>, <code>artist</code>, and <code>genre</code>). We’ve also instructed that the table should define <code>song_id</code> as a primary key and increment automatically from 1.</p>\n<p>Now, run <code>show tables;</code> to confirm that the table has been created.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/22c4ab69-089f-4c2c-bf69-4dde17256865/show-tables-shell-api-flask-google-cloud-sql-app-engine-large.png\" /></p>\n<p>And just like that, we have created a database and our <code>songs</code> table.</p>\n<p>Our next task is to set up Google App Engine so that we can deploy our app.</p>\n<h3>Google App Engine</h3>\n<p>App Engine is a fully managed platform for developing and hosting web applications at scale. An advantage of deploying to App Engine is that it enables an app to scale automatically to meet incoming traffic.</p>\n<p>The <a href=\"https://cloud.google.com/appengine\">App Engine website</a> says:</p>\n<blockquote>“With zero server management and zero configuration deployments, developers can focus only on building great applications without the management overhead.”</blockquote>\n\n<h4>Set Up App Engine</h4>\n<p>There are a few ways to set up App Engine: through the UI of Google Cloud Console or through the Google Cloud SDK. We will use the SDK for this section. It enables us to deploy, manage, and monitor our Google Cloud instance from our local machine.</p>\n<h4>Install Google Cloud SDK</h4>\n<p>Follow the instructions to download and install the SDK for <a href=\"https://cloud.google.com/sdk/docs/quickstart-macos\">Mac</a> or <a href=\"https://cloud.google.com/sdk/docs/quickstart-windows\">Windows</a>. The guide will also show you how to initialize the SDK in your CLI and how to pick a Google Cloud project.</p>\n<p>Now that the SDK has been installed, we’re going to go update our Python script with our database’s credentials and deploy to App Engine.</p>\n<h4>Local Setup</h4>\n<p>In our local environment, we are going to update the setup to suit our new architecture, which includes Cloud SQL and App Engine.</p>\n<p>First, add an <code>app.yaml</code> file to our root folder. This is a configuration file that App Engine requires to host and run our app. It tells App Engine of our runtime and other variables that might be required. For our app, we will need to add our database’s credentials as environment variables, so that App Engine is aware of our database’s instance.</p>\n<p>In the <code>app.yaml</code> file, add the snippet below. You will have gotten the runtime and database variables from setting up the database. Replace the values with the username, password, database name, and connection name that you used when setting up Cloud SQL.</p>\n<pre><code>#app.yaml\nruntime: python37\n\nenv_variables:\n  CLOUD_SQL_USERNAME: YOUR-DB-USERNAME\n  CLOUD_SQL_PASSWORD: YOUR-DB-PASSWORD\n  CLOUD_SQL_DATABASE_NAME: YOUR-DB-NAME\n  CLOUD_SQL_CONNECTION_NAME: YOUR-CONN-NAME\n</code></pre>\n\n<p>Now, we are going to install <a href=\"https://pymysql.readthedocs.io/en/latest/\">PyMySQL</a>. This is a Python MySQL package that connects and performs queries on a MySQL database. Install the PyMySQL package by running this line in your CLI:</p>\n<pre><code>pip install pymysql\n</code></pre>\n\n<p>At this point, we are ready to use PyMySQL to connect to our Cloud SQL database from the app. This will enable us to get and insert queries in our database.</p>\n<h4>Initialize Database Connector</h4>\n<p>First, create a <code>db.py</code> file in our root folder, and add the code below:</p>\n<div>\n <pre><code>#db.py\nimport os\nimport pymysql\nfrom flask import jsonify\n\ndb_user = os.environ.get('CLOUD_SQL_USERNAME')\ndb_password = os.environ.get('CLOUD_SQL_PASSWORD')\ndb_name = os.environ.get('CLOUD_SQL_DATABASE_NAME')\ndb_connection_name = os.environ.get('CLOUD_SQL_CONNECTION_NAME')\n\n\ndef open_connection():\n    unix_socket = '/cloudsql/{}'.format(db_connection_name)\n    try:\n        if os.environ.get('GAE_ENV') == 'standard':\n            conn = pymysql.connect(user=db_user, password=db_password,\n                                unix_socket=unix_socket, db=db_name,\n                                cursorclass=pymysql.cursors.DictCursor\n                                )\n    except pymysql.MySQLError as e:\n        print(e)\n\n    return conn\n\n\ndef get_songs():\n    conn = open_connection()\n    with conn.cursor() as cursor:\n        result = cursor.execute('SELECT * FROM songs;')\n        songs = cursor.fetchall()\n        if result &#62; 0:\n            got_songs = jsonify(songs)\n        else:\n            got_songs = 'No Songs in DB'\n    conn.close()\n    return got_songs\n\ndef add_songs(song):\n    conn = open_connection()\n    with conn.cursor() as cursor:\n        cursor.execute('INSERT INTO songs (title, artist, genre) VALUES(%s, %s, %s)', (song[\"title\"], song[\"artist\"], song[\"genre\"]))\n    conn.commit()\n    conn.close()\n</code></pre>\n</div>\n\n<p>We did a few things here.</p>\n<p>First, we retrieved our database credentials from the <code>app.yaml</code> file using the <code>os.environ.get</code> method. App Engine is able to make environment variables that are defined in <code>app.yaml</code> available in the app.</p>\n<p>Secondly, we created an <code>open_connection</code> function. It connects to our MySQL database with the credentials.</p>\n<p>Thirdly, we added two functions: <code>get_songs</code> and <code>add_songs</code>. The first initiates a connection to the database by calling the <code>open_connection</code> function. It then queries the <code>songs</code> table for every row and, if empty, returns “No Songs in DB”. The <code>add_songs</code> function inserts a new record into the <code>songs</code> table.</p>\n<p>Finally, we return to where we started, our <code>main.py</code> file. Now, instead of getting our songs from an object, as we did earlier, we call the <code>add_songs</code> function to insert a record, and we call the <code>get_songs</code> function to retrieve the records from the database.</p>\n<p>Let’s refactor <code>main.py</code>:</p>\n<div>\n <pre><code>#main.py\nfrom flask import Flask, jsonify, request\nfrom db import get_songs, add_songs\n\napp = Flask(<strong>name</strong>)\n\n@app.route('/', methods=['POST', 'GET'])\ndef songs():\n    if request.method == 'POST':\n        if not request.is_json:\n            return jsonify({\"msg\": \"Missing JSON in request\"}), 400<br />\n        add_songs(request.get_json())\n        return 'Song Added'\n\n    return get_songs()<br />\nif <strong>name</strong> == '<strong>main</strong>':\n    app.run()\n</code></pre>\n</div>\n\n<p>We imported the <code>get_songs</code> and <code>add_songs</code> functions and called them in our <code>songs()</code> view function. If we are making a <code>post</code> request, we call the <code>add_songs</code> function, and if we are making a <code>get</code> request, we call the <code>get_songs</code> function.  </p>\n<p>And our app is done.</p>\n<p>Next up is adding a <code>requirements.txt</code> file. This file contains a list of packages necessary to run the app. App Engine checks this file and installs the listed packages.</p>\n<pre><code>pip freeze | grep \"Flask\\|PyMySQL\" &#62; requirements.txt\n</code></pre>\n\n<p>This line gets the two packages that we are using for the app (Flask and PyMySQL), creates a <code>requirements.txt</code> file, and appends the packages and their versions to the file.</p>\n<p>At this point, we have added three new files: <code>db.py</code>, <code>app.yaml</code>, and <code>requirements.txt</code>.</p>\n<h4>Deploy to Google App Engine</h4>\n<p>Run the following command to deploy your app:</p>\n<pre><code>gcloud app deploy\n</code></pre>\n\n<p>If it went well, your console will output this:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/63229015-b46c-433c-9041-24f9cd4702c2/postman-response-3-api-flask-google-cloud-sql-app-engine.png\" /></p>\n<p>Your app is now running on App Engine. To see it in the browser, run <code>gcloud app browse</code> in your CLI.</p>\n<p>We can launch Postman to test our <code>post</code> and <code>get</code> requests.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/63229015-b46c-433c-9041-24f9cd4702c2/postman-response-3-api-flask-google-cloud-sql-app-engine.png\" /></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e24bc46-9374-4057-8b1f-4f203c9cf75a/postman-response-4-api-flask-google-cloud-sql-app-engine.png\" /></p>\n<p>Our app is now hosted on Google’s infrastructure, and we can tweak the configuration to get all of the benefits of a serverless architecture. Going forward, you can build on this article to make your serverless application more robust.</p>\n<h3>Conclusion</h3>\n<p>Using a platform-as-a-service (PaaS) infrastructure like App Engine and Cloud SQL basically abstracts away the infrastructure level and enables us to build more quickly. As developers, we do not have to worry about configuration, backing up and restoring, the operating system, auto-scaling, firewalls,  migrating traffic, and so on. However, if you need control over the underlying configuration, then it might be better to use a custom-built service.</p>\n<h4>References</h4>\n<ul>\n<li>“<a href=\"https://www.python.org/downloads/\">Download Python</a>”</li>\n<li>“<a href=\"https://docs.python.org/3/library/venv.html\">venv — Creation of Virtual Environments</a>”, Python (documentation)</li>\n<li>“<a href=\"https://www.postman.com/downloads/\">Download Postman</a>”</li>\n<li>“<a href=\"https://cloud.google.com/sql\">Cloud SQL</a>”, Google Cloud</li>\n<li><a href=\"https://cloud.google.com/\">Google Cloud</a></li>\n<li>“<a href=\"https://cloud.google.com/free/docs/gcp-free-tier\">Google Cloud Free Tier</a>”, Google Cloud</li>\n<li>“<a href=\"https://cloud.google.com/resource-manager/docs/creating-managing-projects#console\">Creating and Managing Projects</a>”, Google Cloud</li>\n<li>“<a href=\"https://cloud.google.com/vpc/docs/overview\">VPC Overview</a>” (virtual private cloud), Google Cloud</li>\n<li>“<a href=\"https://cloud.google.com/appengine\">App Engine</a>”, Google Cloud</li>\n<li>“<a href=\"https://cloud.google.com/sdk/docs/quickstart-macos\">Quickstarts</a>” (download Google Cloud SDK), Google Cloud</li>\n<li><a href=\"https://pymysql.readthedocs.io/en/latest/\">PyMySQL documentation</a></li>\n</ul>\n","descriptionType":"html","publishedDate":"Wed, 19 Aug 2020 10:30:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/babddeaf-7d71-4dc1-99b4-19c2dd7613a2/api-flask-google-cloudsql-app-engine.png","linkMd5":"c0c90bc439e4ce9cd85d62b390813994","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn56@2020_5/2020/09/05/07-59-16-364_3d8e6c57260f62f0.webp","destWidth":1201,"destHeight":631,"sourceBytes":272566,"destBytes":63024,"author":"hello@smashingmagazine.com (Wole Oyekanmi)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/babddeaf-7d71-4dc1-99b4-19c2dd7613a2/api-flask-google-cloudsql-app-engine.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c76f6bf-d6cf-4e65-804a-cd763c926fb5/terminal-environment-api-flask-google-cloud-sql-app-engine.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn91@2020_6/2020/09/05/07-59-21-235_4d1c84e2c120a10c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7b426afe-fb0e-45a1-aa45-ff09e0914409/postman-response-1-api-flask-google-cloud-sql-app-engine.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn62@2020_1/2020/09/05/07-59-35-623_e9e1201754674791.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4f54cdfd-7bfd-44e5-92b4-d19a9313414e/postman-response-2-api-flask-google-cloud-sql-app-engine.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn47@2020_1/2020/09/05/07-59-31-642_a0234b38cc2f1705.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a5ea44a7-fce4-41d5-b39f-d8e8e3a1eb51/snapshot-gcp-api-flask-google-cloud-sql-app-engine-large.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn89@2020_5/2020/09/05/07-59-37-815_40113fbdb96a9799.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/49143198-a7d3-4960-9da7-eb68235c9458/cloud-sql-console-api-flask-google-cloud-sql-app-engine.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8f31770f-5cc0-4ce3-bcaa-1bd9572a5ea8/creating-mysql-instance-api-flask-google-cloud-sql-app-engine.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn59@2020_5/2020/09/05/07-59-17-894_92ee9d1e9fa99992.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fa8ded40-b460-4c61-8686-ceb7ec2a22e2/create-new-db-api-flask-google-cloud-sql-app-engine.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn19@2020_2/2020/09/05/07-59-20-653_48f702d2dd172d60.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1be1d3a-258d-48a0-9c22-3ccf20fb19d4/create-new-user-api-flask-google-cloud-sql-app-engine.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn64@2020_6/2020/09/05/07-59-22-186_3f197c28876bef5a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8dc6e411-382e-4cd1-b886-8e3eafc64bf1/whitelist-ip-api-flask-google-cloud-sql-app-engine.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/18342610-5ce6-487f-a454-1fa96de53b73/cloud-sql-dashboard-api-flask-google-cloud-sql-app-engine.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn19@2020_6/2020/09/05/07-59-35-900_f65eb6ed7dc73dfa.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/26641172-010a-4419-9efd-81f69763247f/show-db-shell-api-flask-google-cloud-sql-app-engine-large.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn77@2020_4/2020/09/05/07-59-19-718_d80a1ef30b58f572.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/22c4ab69-089f-4c2c-bf69-4dde17256865/show-tables-shell-api-flask-google-cloud-sql-app-engine-large.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn40@2020_5/2020/09/05/07-59-31-479_48fabae6bc5344c1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/63229015-b46c-433c-9041-24f9cd4702c2/postman-response-3-api-flask-google-cloud-sql-app-engine.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn74@2020_3/2020/09/05/07-59-40-261_41714f01ea564a26.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e24bc46-9374-4057-8b1f-4f203c9cf75a/postman-response-4-api-flask-google-cloud-sql-app-engine.png":null},"publishedOrCreatedDate":1599292755747},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Smart Interface Design Patterns In Your Pocket: Checklist Cards PDF","link":"https://smashingmagazine.com/2020/08/checklist-cards-release/","description":"<p>Every UI component, no matter if it’s an accordion, a hamburger navigation, a data table, or a carousel, brings along its unique challenges. Coming up with a new solution for every problem takes time, and often it’s really not necessary. We can rely on <strong>smart design patterns</strong> and <strong>usability tests</strong>, and ask the right questions ahead of time to avoid issues down the line.</p> \n<a href=\"https://smashingmagazine.com/2020/08/checklist-cards-release/#choose-your-deck-options\"> <img src=\"https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-header-opt_dst2qk.png\" /> </a> Meet \n<a href=\"https://smashingmagazine.com/2020/08/checklist-cards-release/#choose-your-deck\">\"Smart Interface Design Checklists\"</a>, with questions to ask when designing and building any interface component. \n<p>Meet <em>Interface Design Patterns Checklists</em>, a <strong>deck of 100 cards</strong> with common questions to ask while dealing with <em>any</em> interface challenge — from intricate data tables and web forms to troublesome hamburgers and carousels. Plus, many other components (<a href=\"https://smashingmagazine.com/2020/08/checklist-cards-release/#toc\">full list&nbsp;↓</a>), explored in full detail.</p> \n<p>Each checklist has been curated and refined for years by yours truly — all <strong>based upon usability sessions</strong>, design iterations and A/B tests. Useful <strong>for designers &amp; front-end developers</strong> to discuss everything a component requires before starting designing or coding.</p> \n<p>And if you’d like to dive into design patterns <em>live</em>, attend our upcoming <strong>online workshops</strong> on <a href=\"https://smashingmagazine.com/2020/08/checklist-cards-release/#online-workshop\">Smart Interface Design Patterns, 2020 Edition</a>, where we’ll explore 100s of practical examples over 5×2.5h live sessions.</p> \n<a href=\"https://smashingmagazine.com/2020/08/checklist-cards-release/#choose-your-deck\"> <img src=\"https://res.cloudinary.com/indysigner/image/upload/v1596442224/checklists-box-cards-2x-opt_mj0fzc.png\" /> </a> \n<div> \n</div> \n<h3>About The Checklists</h3> \n<p>Meet <strong>100 checklist cards</strong> with everything you need to tackle any UI challenge — from intricate tables to troublesome carousels. Created to help us all keep track of all the fine little details to design and <strong>build better interfaces, faster</strong>. Plus, it's useful to <em>not</em> forget anything critical and avoid costly mistakes down the line. <a href=\"https://smashed.by/deck-preview\">Check the preview</a>.</p> \n<p>When working on pretty much any interface problem, we sit down with designers and developers and talk about its design, markup and behavior — using checklists. The deck creates a much-needed <strong>sense of alignment</strong>, so everyone is one the same page before jumping into design or coding tools.</p> \n<p>The deck <strong>includes checklists on</strong>:</p> \n<ul> \n <li><a href=\"https://www.dropbox.com/s/wrjo2rpgi7gfmy0/smart-interface-design-checklists-preview.pdf?dl=0\">designing for touch</a> (free preview),</li> \n <li>hamburger menu and accordions,</li> \n <li>carousels and navigation,</li> \n <li>filtering, sorting, search,</li> \n <li>data tables and feature comparison,</li> \n <li>pricing plans and product page,</li> \n <li>sliders and video players,</li> \n <li>configurators and wizards,</li> \n <li>date pickers and calendars,</li> \n <li>timelines, maps, seating plans,</li> \n <li>privacy and authentication,</li> \n <li>onboarding and offboarding,</li> \n <li>reviews and testimonials,</li> \n <li>video and audio players,</li> \n <li>web forms and donation forms.</li> \n <li>Plus, <a href=\"https://www.dropbox.com/s/7kjet8nwo3anipe/interface-design-checklists-preview.pdf?dl=0\">400 practical interface examples</a> (free preview).</li> \n</ul> \n<a href=\"https://res.cloudinary.com/indysigner/image/upload/v1596445215/twocards-opt_gu2jwe.png\"> <img src=\"https://res.cloudinary.com/indysigner/image/upload/v1596445215/twocards-opt_gu2jwe.png\" /> </a> \n<p>Beautifully designed by our dear illustrator <a href=\"https://www.ricardogimenes.com/\">Ricardo Gimenes</a>, this deck is always by your side — on your desk or on your phone when you’re on the go.</p> \n<p>Additionally, you get <strong>practical examples</strong>, action points and the checklists in a wide resolution (16×9) for reference and presentations.</p> \n<a href=\"https://www.dropbox.com/s/7kjet8nwo3anipe/interface-design-checklists-preview.pdf?dl=0\"> <img src=\"https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-1-opt_oesglb.png\" /> </a> \n<a href=\"https://www.dropbox.com/s/7kjet8nwo3anipe/interface-design-checklists-preview.pdf?dl=0\"> <img src=\"https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-4-opt_qyr9w7.png\" /> </a> A little bonus: 400 practical examples, action points and the checklist in 16×9. \n<p>You’ll get:</p> \n<ul> \n <li><strong>100 checklists cards</strong> on everything from carousels to web forms, carefully curated and designed,</li> \n <li><strong>Practical examples</strong> and action points for your reference in 16×9,</li> \n <li><strong>Editable text file</strong> to adjust for your needs,</li> \n <li><strong>Life-time access to the deck</strong>, updated regularly.</li> \n <li><a href=\"https://smashingconf.com/online-workshops/registration#smart-interfaces\">Attend online workshop</a> or <a href=\"https://smashingmagazine.com/printed-books/checklist-cards/\">get the checklist PDF.</a></li> \n</ul> \n<a href=\"https://smashingmagazine.com/2020/08/checklist-cards-release/#choose-your-deck-options\"> <img src=\"https://res.cloudinary.com/indysigner/image/upload/v1596442224/checklists-cards-only-2x-opt_zoyedy.png\" /> </a> \n<div> \n</div> \n<h3>Table of Contents</h3> \n<div> \n <div> \n  <div>\n    Designing For Touch Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>26 questions</strong>, including:</p> \n  <ul> \n   <li>Input is never precise: are hit targets at least 48×48px?</li> \n   <li>Can users tap on the same spot to undo actions?</li> \n   <li>Do we expose critical navigation at the bottom on mobile?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Accordion Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>14 questions</strong>, including:</p> \n  <ul> \n   <li>What icon do we choose to indicate expansion?</li> \n   <li>Should expanded sections collapse automatically?</li> \n   <li>Should the user be scrolled automatically when expanded?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Navigation Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>30 questions</strong>, including:</p> \n  <ul> \n   <li>Do drop-downs appear/disappear on hover, tap/click, or both?</li> \n   <li>Do nav items appear in a full page/partial overlay or slide-in?</li> \n   <li>Can we split the nav vertically for sub-menus on mobile?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Hamburger Menu Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>23 questions</strong>, including:</p> \n  <ul> \n   <li>Can we avoid a hamburger icon and show navigation as is?</li> \n   <li>What happens when the user opens both search and hamburger?</li> \n   <li>Do we expose critical navigation by default on desktop/mobile?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Filtering Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>25 questions</strong>, including:</p> \n  <ul> \n   <li>Do we expose popular or relevant filters by default?</li> \n   <li>Do we display the number of expected results for each filter?</li> \n   <li>Do we apply filters automatically or manually on “Apply” button?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Sorting Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>32 questions</strong>, including:</p> \n  <ul> \n   <li>Do we repeat sorting at the bottom of the content list?</li> \n   <li>Do we include the “Sort by” label separately from the buttons/dropdown?</li> \n   <li>Does the default sorting reflect the diversity of all major product types?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Search Autocomplete Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>33 questions</strong>, including:</p> \n  <ul> \n   <li>Do we surface frequent hits, popular searches, products or categories at the top of autosuggestions?</li> \n   <li>On what character do we start displaying autosuggestions?</li> \n   <li>Do we use a look-ahead pattern for search queries?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Carousels Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>37 questions</strong>, including:</p> \n  <ul> \n   <li>Can we just show a grid of images instead of a carousel?</li> \n   <li>Is there a way to pause a carousel if it’s auto-rotating?</li> \n   <li>How do we choose the sequence of slides?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Tables Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>28 questions</strong>, including:</p> \n  <ul> \n   <li>Do we add steppers to navigate through columns or rows predictably?</li> \n   <li>Do we highlight the cell, row or column on user’s tap/click?</li> \n   <li>With rows as cards on mobile, do we expose relevant data for comparison?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Pricing Plans Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>51 questions</strong>, including:</p> \n  <ul> \n   <li>How many features do we want to display per plan?</li> \n   <li>Do we want to allow customers to switch currency (€/$/£)?</li> \n   <li>Can we avoid requiring credit card data for the free trial period?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Sliders Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>19 questions</strong>, including:</p> \n  <ul> \n   <li>Do we provide a text input fallback for precise input?</li> \n   <li>Are there any values on a slider that shouldn’t be accepting?</li> \n   <li>Should users be able to “lock” some values?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Date Pickers Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>20 questions</strong>, including:</p> \n  <ul> \n   <li>What presets (‘prev day’/’current day’) do we need for faster navigation?</li> \n   <li>Do we use dots color coding for different rates or days?</li> \n   <li>How do we avoid displaying&nbsp;unavailable dates&nbsp;or zero-results?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Configurators Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>33 questions</strong>, including:</p> \n  <ul> \n   <li>What’s the entry point to the configurator?</li> \n   <li>Should the user automatically move to the next step when finished?</li> \n   <li>For every step, do we explain and highlight dependencies?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Feature Comparison Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>27 questions</strong>, including:</p> \n  <ul> \n   <li>Can users see only differences, similarities and selected attributes for all products/plans?</li> \n   <li>Can the user move columns left and right?</li> \n   <li>Should we ask customers to choose preferred attributes?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Timelines Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>24 questions</strong>, including:</p> \n  <ul> \n   <li>How do we expose/highlight critical events (e.g. now/coming up next)?</li> \n   <li>Should some events or time segments be available/fixed at all times?</li> \n   <li>Do we communicate changes over time with an underlying histogram?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Schedule And Calendars Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>25 questions</strong>, including:</p> \n  <ul> \n   <li>Do we provide quick jumps between tracks?</li> \n   <li>Should we consider flipping the timing header by 90 degrees?</li> \n   <li>Do we display what’s happening now and coming up next?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Maps Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>26 questions</strong>, including:</p> \n  <ul> \n   <li>Do we provide zooming? How many levels of depth will zoom provide?</li> \n   <li>Would an autocomplete search help users find information faster?</li> \n   <li>For charts, can we flip axis to make use of available space?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Seating Plans Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>23 questions</strong>, including:</p> \n  <ul> \n   <li>What kinds of pricing tiers and discounted tickets (senior, student) do we have?</li> \n   <li>Do we have any planes or floors that users need to navigate between?</li> \n   <li>Do we calculate and display an experience score for each seat?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Privacy Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>44 questions</strong>, including:</p> \n  <ul> \n   <li>Can we group user data according to low/medium/high priority?</li> \n   <li>Can we gradually request more user permissions when we need them?</li> \n   <li>Do we ask for permissions only if we are likely to get them?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Onboarding Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>15 questions</strong>, including:</p> \n  <ul> \n   <li>Can we avoid intro tours, tooltips, wizards and slideshows as they are usually skipped?</li> \n   <li>Do we use empty state to indicate our features?</li> \n   <li>When is the right timing to show a particular feature?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Reviews and Testimonials Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>36 questions</strong>, including:</p> \n  <ul> \n   <li>Can we group testimonials by a feature/impact and highlight them together?</li> \n   <li>Do we highlight the number of testimonials/reviews prominently?</li> \n   <li>Do we display name, photo, title, age, location, role, company, brand logo?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Web Forms Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>76 questions</strong>, including:</p> \n  <ul> \n   <li>Will we be using floating labels? If so, are they accessible?</li> \n   <li>For a country selector, do we display some countries as frequently used?</li> \n   <li>Do we show the number of errors above the “Submit” button and in the tab title as a prefix?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Donation Form Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>32 questions</strong>, including:</p> \n  <ul> \n   <li>Do we include any testimonials or stories next to the donation form?</li> \n   <li>What suggested donation amounts do we display, and how many?</li> \n   <li>Which types of donations do we have: one-off, monthly, quarterly, annually?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Authentication Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>34 questions</strong>, including:</p> \n  <ul> \n   <li>What password requirements do we want/need to implement?</li> \n   <li>Do we really need CAPTCHA, or can we use honeypot/time traps instead?</li> \n   <li>Do we limit the frequency of password recovery attempts?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Product Page Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>76 questions</strong>, including:</p> \n  <ul> \n   <li>What layout do we use for the page (tabs, accordions, one long page, floating bar)?</li> \n   <li>Do we display the final price (incl. standard shipping, taxes, payment fees, currency)?</li> \n   <li>What do we display when an item is out of stock (notification via SMS/email)?</li>\n  </ul> \n </div> \n <div> \n  <div>\n    Video Player Checklist \n  </div> \n </div> \n <div>\n   + \n </div> \n <div> \n  <p>Overall, <strong>33 questions</strong>, including:</p> \n  <ul> \n   <li>How do we optimize for precise input and fast-forwards (keyboard, buttons)?</li> \n   <li>Do we use preview clips, popularity bar, key moments preview?</li> \n   <li>Do we persist the position of the video track on refresh?</li>\n  </ul> \n </div> \n</div> \n<h3>About the Author</h3> \n<p><a href=\"https://twitter.com/smashingmag\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c1dda88d-056e-4fdf-9827-76237a824556/vitaly-friedman.jpg\" /></a>Vitaly Friedman loves beautiful content and doesn’t like to give in easily. When he is not writing or speaking at a conference, he’s most probably running <a href=\"https://www.smashingmagazine.com/smashing-workshops/\">front-end/UX workshops</a> and webinars. He loves solving complex UX, front-end and performance problems. <a href=\"https://www.smashingmagazine.com/smashing-workshops/#in-house-workshop\">Get in touch</a>.</p> \n<h3>“Smart Interface Design Patterns, 2020 Edition”, Online Workshop with Vitaly Friedman (Sep 22 – Oct 6)</h3> \n<p>Do you want to dive deeper into the bits and pieces of smart interface design patterns? We’ll be hosting a <a href=\"https://smashingconf.com/online-workshops/registration#smart-interfaces\">series of online workshops</a>, in which we’ll take a microscopic examination of common interface components and <strong>reliable solutions</strong> to get them right — both on desktop and on mobile.</p> \n<p>We’ll study <strong>100s of hand-picked examples</strong> and we’ll design interfaces <em>live</em>, from mega-dropdowns and car configurators — all the way to timelines and onboarding. And: we’ll be reviewing and providing feedback to each other’s work. <strong><a href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-sep/\">Check all topics and schedule</a></strong>.</p> \n<a href=\"https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-5-opt_g2fsel.png\"> <img src=\"https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-5-opt_g2fsel.png\" /> </a> \n<a href=\"https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-2-opt_osdbs0.png\"> <img src=\"https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-2-opt_osdbs0.png\" /> </a> \n<a href=\"https://res.cloudinary.com/indysigner/image/upload/v1596455165/checklists-6-opt_qtpe9f.png\"> <img src=\"https://res.cloudinary.com/indysigner/image/upload/v1596455165/checklists-6-opt_qtpe9f.png\" /> </a> Vitaly's \n<a href=\"https://smashingconf.com/online-workshops/workshops/vitaly-friedman-sep/\">Smart Interface Design Patterns Workshop</a>, broken down into 5×2.5h sessions, with 100s of practical examples. \n<p>The workshop is delivered in <strong>five 2.5h long sessions</strong> with lots of time for you to ask all your questions. It's for interface designers, front-end designers and developers who’d love to be prepared for any challenge coming their way.</p> \n<p>You’ll walk away with a <strong>toolbox</strong> of practical techniques for your product, website, desktop app or a mobile app.</p> \n<h3>Thank You For Your Support!</h3> \n<p>We sincerely hope that the insights you’ll gain from our little goodies will help you boost your skills while also building wonderful, new friends. A sincere <strong>thank you</strong> for your kind, ongoing support, patience and generosity — for being smashing, now and ever. ❤️</p> \n<h3>More Smashing Stuff</h3> \n<p>In the past few years, we were very lucky to have worked together with some talented, caring people from the web community to publish their wealth of experience as <a href=\"https://smashingmagazine.com/printed-books/\">printed books that stand the test of time</a>. Paul and Alla are some of these people. Have you checked out their books already?</p> \n<div> \n <div>\n  <a href=\"https://smashingmagazine.com/printed-books/click/\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d395974c-79bf-47d6-9a08-498742240cbc/click-cover-opt.png\" /></a>\n </div>\n <h4><a href=\"https://smashingmagazine.com/printed-books/ethical-design-handbook/\">Click!</a></h4>\n <p>A practical guide on how to encourage clicks without shady tricks.</p>\n <p><a href=\"https://smashingmagazine.com/printed-books/click/\">Add to cart $39</a></p> \n <div>\n  <a href=\"https://smashingmagazine.com/printed-books/design-systems/\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b69371e6-1f3e-4f89-ba9c-d162b1554f5b/design-systems-shop-image-2-opt.png\" /></a>\n </div>\n <h4><a href=\"https://smashingmagazine.com/printed-books/design-systems/\">Design Systems</a></h4>\n <p>A practical guide to creating design languages for digital products.</p> \n <p><a href=\"https://smashingmagazine.com/printed-books/design-systems/\">Add to cart $39</a></p> \n <div>\n  <a href=\"https://smashingmagazine.com/printed-books/form-design-patterns/\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9cda1204-2dde-49f5-882a-ceef0ba24675/product-hint-workshop.png\" /></a>\n </div>\n <h4><a href=\"https://smashingconf.com/online-workshops\">Front-End &amp; UX Workshops</a></h4>\n <p>Interactive, live online sessions, broken into 2.5h segments and a friendly Q&amp;A.</p>\n <p><a href=\"https://smashingconf.com/online-workshops\">Jump to topics&nbsp;→</a></p> \n</div>","descriptionType":"html","publishedDate":"Tue, 04 Aug 2020 14:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0f038321-f095-4eee-b9bc-b6dbf66b7fb5/smashing-checklists-cards-box.png","linkMd5":"2954bfe0e134e38e8bb6b7bd231c4f60","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn84@2020_4/2020/09/05/07-59-16-523_ae82ae6cbe0476f1.webp","destWidth":2000,"destHeight":1390,"sourceBytes":1086411,"destBytes":58524,"author":"hello@smashingmagazine.com (Vitaly Friedman)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0f038321-f095-4eee-b9bc-b6dbf66b7fb5/smashing-checklists-cards-box.png","articleImgCdnMap":{"https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-header-opt_dst2qk.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn61@2020_4/2020/09/05/07-59-27-229_8c62354324f61aa2.webp","https://res.cloudinary.com/indysigner/image/upload/v1596442224/checklists-box-cards-2x-opt_mj0fzc.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn2@2020_3/2020/09/05/07-59-24-075_c4b9c6b941d7cdc3.webp","https://res.cloudinary.com/indysigner/image/upload/v1596445215/twocards-opt_gu2jwe.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn9@2020_2/2020/09/05/07-59-37-194_dfc545927bc9de28.webp","https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-1-opt_oesglb.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn45@2020_6/2020/09/05/07-59-27-012_ee6c9704e6fd5048.webp","https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-4-opt_qyr9w7.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn1@2020_2/2020/09/05/07-59-36-931_2442e391bec436ee.webp","https://res.cloudinary.com/indysigner/image/upload/v1596442224/checklists-cards-only-2x-opt_zoyedy.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c1dda88d-056e-4fdf-9827-76237a824556/vitaly-friedman.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn27@2020_1/2020/09/05/07-59-31-788_18dfb889159c02ec.webp","https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-5-opt_g2fsel.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn99@2020_6/2020/09/05/07-59-19-130_55b43cffccdb982c.webp","https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-2-opt_osdbs0.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn95@2020_2/2020/09/05/07-59-37-693_56e663176545d859.webp","https://res.cloudinary.com/indysigner/image/upload/v1596455165/checklists-6-opt_qtpe9f.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn64@2020_6/2020/09/05/07-59-36-678_aa157f4ea46d5f1e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d395974c-79bf-47d6-9a08-498742240cbc/click-cover-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn81@2020_4/2020/09/05/07-59-27-509_458024b9c4284dda.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b69371e6-1f3e-4f89-ba9c-d162b1554f5b/design-systems-shop-image-2-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn46@2020_4/2020/09/05/07-59-29-141_93af5a839dcf9fe5.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9cda1204-2dde-49f5-882a-ceef0ba24675/product-hint-workshop.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn79@2020_3/2020/09/05/07-59-25-520_4e73367035a5b666.webp"},"publishedOrCreatedDate":1599292755746},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"How To Build Your Own Comment System Using Firebase","link":"https://smashingmagazine.com/2020/08/comment-system-firebase/","description":"<p>A comments section is a great way to build a community for your blog. Recently when I started blogging, I thought of adding a comments section. However, it wasn’t easy. Hosted comments systems, such as Disqus and Commento, come with their own set of problems:</p>\n<ul>\n<li>They own your data.</li>\n<li>They are not free.</li>\n<li>You cannot customize them much.</li>\n</ul>\n<p>So, I decided to build my own comments system. Firebase seemed like a perfect hosting alternative to running a back-end server.</p>\n<p>First of all, you get all of the benefits of having your own database: You control the data, and you can structure it however you want. Secondly, you don’t need to set up a back-end server. You can easily control it from the front end. It’s like having the best of both worlds: a hosted system without the hassle of a back end.</p>\n<p>In this post, that’s what we’ll do. We will learn how to set up Firebase with Gatsby, a static site generator. But the principles can be applied to any static site generator.</p>\n<p>Let’s dive in!</p>\n<h3>What Is Firebase?</h3>\n<p><a href=\"https://firebase.google.com\">Firebase</a> is a back end as a service that offers tools for app developers such as database, hosting, cloud functions, authentication, analytics, and storage.</p>\n<p><a href=\"https://firebase.google.com/docs/firestore\">Cloud Firestore</a> (Firebase’s database) is the functionality we will be using for this project. It is a NoSQL database. This means it’s not structured like a SQL database with rows, columns, and tables. You can think of it as a large JSON tree.</p>\n<h3>Introduction to the Project</h3>\n<p>Let’s initialize the project by cloning or downloading the <a href=\"https://github.com/smashingmagazine/blog-comments\">repository from GitHub</a>.</p>\n<p>I’ve created two branches for every step (one at the beginning and one at the end) to make it easier for you to track the changes as we go.</p>\n<p>Let’s run the project using the following command:</p>\n<pre><code>gatsby develop</code></pre>\n\n<p>If you open the project in your browser, you will see the bare bones of a basic blog.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dfb9afb7-164a-4861-a0f2-a134ec193959/blog-comment-system-firebase.png\" /></p>\n<p>The comments section is not working. It is simply loading a sample comment, and, upon the comment’s submission, it logs the details to the console.</p>\n<p>Our main task is to get the comments section working.</p>\n<h3>How the Comments Section Works</h3>\n<p>Before doing anything, let’s understand how the code for the comments section works.</p>\n<p>Four components are handling the comments sections:</p>\n<ul>\n<li><code>blog-post.js</code></li>\n<li><code>Comments.js</code></li>\n<li><code>CommentForm.js</code></li>\n<li><code>Comment.js</code></li>\n</ul>\n<p>First, we need to identify the comments for a post. This can be done by making a unique ID for each blog post, or we can use the slug, which is always unique.</p>\n<p>The <code>blog-post.js</code> file is the layout component for all blog posts. It is the perfect entry point for getting the slug of a blog post. This is done using a GraphQL query.</p>\n<pre><code>export const query = graphql`\n     query($slug: String!) {\n         markdownRemark(fields: { slug: { eq: $slug } }) {\n             html\n             frontmatter {\n                 title\n             }\n             fields {\n                 slug\n             }\n         }\n     }\n`\n</code></pre>\n\n<p>Before sending it over to the <code>Comments.js</code> component, let’s use the <code>substring()</code> method to get rid of the trailing slash (<code>/</code>) that Gatsby adds to the slug.</p>\n<div>\n <pre><code>const slug = post.fields.slug.substring(1, post.fields.slug.length - 1)\n\nreturn (\n     &#60;Layout&#62;\n         &#60;div className=\"container\"&#62;\n             &#60;h1&#62;{post.frontmatter.title}&#60;/h1&#62;\n             &#60;div dangerouslySetInnerHTML={{ __html: post.html }} /&#62;\n             &#60;Comments comments={comments} slug={slug} /&#62;\n         &#60;/div&#62;\n     &#60;/Layout&#62;\n     )\n }\n</code></pre>\n</div>\n\n<p>The <code>Comments.js</code> component maps each comment and passes its data over to <code>Comment.js</code>, along with any replies. For this project, I have decided to go one level deep with the commenting system.</p>\n<p>The component also loads <code>CommentForm.js</code> to capture any top-level comments.</p>\n<div>\n <pre><code>const Comments = ({ comments, slug }) =&#62; {\n     return (\n         &#60;div&#62;\n             &#60;h2&#62;Join the discussion&#60;/h2&#62;\n             &#60;CommentForm slug={slug} /&#62;\n             &#60;CommentList&#62;\n                 {comments.length &#62; 0 &#38;&#38;\n                     comments\n                         .filter(comment =&#62; !comment.pId)\n                         .map(comment =&#62; {\n                             let child\n                             if (comment.id) {\n                                 child = comments.find(c =&#62; comment.id === c.pId)\n                             }\n                             return (\n                                 &#60;Comment\n                                     key={comment.id}\n                                     child={child}\n                                     comment={comment}\n                                     slug={slug}\n                                 /&#62;\n                             )\n                         })}\n                     &#60;/CommentList&#62;\n                 &#60;/div&#62;\n             )\n         }\n</code></pre>\n</div>\n\n<p>Let’s move over to <code>CommentForm.js</code>. This file is simple, rendering a comment form and handling its submission. The submission method simply logs the details to the console.</p>\n<pre><code>const handleCommentSubmission = async e =&#62; {\n     e. preventDefault()\n         let comment = {\n             name: name,\n             content: content,\n             pId: parentId ∣∣ null,\n             time: new Date(),\n         }\n         setName(\"\")\n         setContent(\"\")\n         console.log(comment)\n     }\n</code></pre>\n\n<p>The <code>Comment.js</code> file has a lot going on. Let’s break it down into smaller pieces.</p>\n<p>First, there is a <code>SingleComment</code> component, which renders a comment.</p>\n<p>I am using the <a href=\"https://adorable.io\">Adorable</a> API to get a cool avatar. The Moment.js library is used to render time in a human-readable format.</p>\n<div>\n <pre><code>const SingleComment = ({ comment }) =&#62; (\n     &#60;div&#62;\n         &#60;div className=\"flex-container\"&#62;\n             &#60;div className=\"flex\"&#62;\n                 &#60;img\n                     src=\"<a href=\"https://api.adorable.io/avazars/65/abott@adorable.png&#34;\">https://api.adorable.io/avazars/65/abott@adorable.png\"</a>\n                     alt=\"Avatar\"\n                 /&#62;\n             &#60;/div&#62;\n             &#60;div className=\"flex\"&#62;\n                 &#60;p className=\"comment-author\"&#62;\n                     {comment.name} &#60;span&#62;says&#60;/span&#62;\n                 &#60;/p&#62;\n                 {comment.time} &#38;&#38;(&#60;time&#62;(moment(comment.time.toDate()).calendar()}&#60;/time&#62;)}\n             &#60;/div&#62;\n         &#60;/div&#62;\n         &#60;/p&#62;{comment.content}&#60;/p&#62;\n     &#60;/div&#62;\n)\n</code></pre>\n</div>\n\n<p>Next in the file is the <code>Comment</code> component. This component shows a child comment if any child comment was passed to it. Otherwise, it renders a reply box, which can be toggled on and off by clicking the “Reply” button or “Cancel Reply” button.</p>\n<div>\n <pre><code>const Comment = ({ comment, child, slug }) =&#62; {\n     const [showReplyBox, setShowReplyBox] = useState(false)\n     return (\n         &#60;CommentBox&#62;\n             &#60;SingleComment comment={comment} /&#62;\n             {child &#38;&#38; (\n                 &#60;CommentBox child className=comment-reply\"&#62;\n                     &#60;SingleComment comment={child} /&#62;\n                 &#60;/CommentBox&#62;\n             )}\n             {!child &#38;&#38; (\n                 &#60;div&#62;\n                     {showReplyBox ? (\n                         &#60;div&#62;\n                             &#60;button\n                                 className=\"btn bare\"\n                                 onClick={() =&#62; setShowReplyBoy(false)}\n                             &#62;\n                                 Cancel Reply\n                             &#60;/button&#62;\n                             &#60;CommentForm parentId={comment.id} slug={slug} /&#62;\n                         &#60;/div&#62;\n                     ) : (\n                         &#60;button className=\"btn bare\" onClick={() =&#62; setShowReplyBox(true)}&#62;\n                             Reply\n                         &#60;/button&#62;\n                     )}\n                 &#60;/div&#62;\n             )}\n         &#60;/div&#62;\n     )}\n&#60;/CommentBox&#62;\n</code></pre>\n</div>\n\n<p>Now that we have an overview, let’s go through the steps of making our comments section.</p>\n<h3>1. Add Firebase</h3>\n<p>First, let’s set up Firebase for our project.</p>\n<p>Start by signing up. Go to <a href=\"https://firebase.google.com\">Firebase</a>, and sign up for a Google account. If you don’t have one, then click “Get Started”.</p>\n<p>Click on “Add Project” to add a new project. Add a name for your project, and click “Create a project”.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8355d5dd-6495-447b-b4e9-2b13966edf31/initialize-firebase-comment-system-firebase.png\" /></p>\n<p>Once we have created a project, we’ll need to set up Cloud Firestore.</p>\n<p>In the left-side menu, click “Database”. Once a page opens saying “Cloud Firestore”, click “Create database” to create a new Cloud Firestore database.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b060076d-0b58-4066-b4ba-93f1e6496b6b/cloud-firestore-comment-system-firebase.png\" /></p>\n<p>When the popup appears, choose “Start in test mode”. Next, pick the Cloud Firestore location closest to you.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5b96c1e5-9636-4b59-a678-dece2241b909/test-mode-firestore-comment-system-firebase.png\" /></p>\n<p>Once you see a page like this, it means you’ve successfully created your Cloud Firestore database.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cdf9bc20-be85-46a5-805a-7ce6dece9ad1/firestore-dashboard-comment-system-firebase.png\" /></p>\n<p>Let’s finish by setting up the logic for the application. Go back to the application and install Firebase:</p>\n<pre><code>yarn add firebase</code></pre>\n\n<p>Add a new file, <code>firebase.js</code>, in the root directory. Paste this content in it:</p>\n<pre><code>import firebase from \"firebase/app\"\nimport \"firebase/firestore\"\n\nvar firebaseConfig = 'yourFirebaseConfig'\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const firestore = firebase.firestore()\n\nexport default firebase</code></pre>\n\n<p>You’ll need to replace <code>yourFirebaseConfig</code> with the one for your project. To find it, click on the gear icon next to “Project Overview” in the Firebase app.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7f225de-4fae-419c-b669-bacef0b8efe7/project-settings-comment-system-firebase.png\" /></p>\n<p>This opens up the settings page. Under your app’s subheading, click the web icon, which looks like this:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/943be067-e379-4135-9664-7dd1c85d957f/project-installation-comment-system-firebase.png\" /></p>\n<p>This opens a popup. In the “App nickname” field, enter any name, and click “Register app”. This will give your <code>firebaseConfig</code> object.</p>\n<div>\n <pre><code>&#60;!-- The core Firebase JS SDK is always required and must be listed first --&#62;\n&#60;script src=\"<a href=\"https://www.gstatic.com/firebasejs/7.15.5/firebase-app.js&#34;&#62;&#60;/script\">https://www.gstatic.com/firebasejs/7.15.5/firebase-app.js\"&#62;&#60;/script</a>&#62;\n\n&#60;!-- TODO: Add SDKs for Firebase products that you want to use\n    <a href=\"https://firebase.google.com/docs/web/setup#available-libraries\">https://firebase.google.com/docs/web/setup#available-libraries</a> --&#62;\n\n&#60;script&#62;\n    // Your web app’s Firebase configuration\n    var firebaseConfig = {\n\n    ...\n\n    };\n    // Initialize Firebase\n    firbase.initializeApp(firebaseConfig);\n&#60;/script&#62;\n</code></pre>\n</div>\n\n<p>Copy just the contents of the <code>firebaseConfig</code> object, and paste it in the <code>firebase.js</code> file.</p>\n<h4>Is It OK to Expose Your Firebase API Key?</h4>\n<p>Yes. As <a href=\"https://stackoverflow.com/questions/37482366/is-it-safe-to-expose-firebase-apikey-to-the-public/37484053#37484053\">stated by a Google engineer</a>, exposing your API key is OK.</p>\n<p>The only purpose of the API key is to identify your project with the database at Google. If you have set strong security rules for Cloud Firestore, then you don’t need to worry if someone gets ahold of your API key.</p>\n<p>We’ll talk about security rules in the last section.</p>\n<p>For now, we are running Firestore in test mode, so you should not reveal the API key to the public.</p>\n<h4>How to Use Firestore?</h4>\n<p>You can store data in one of two types:</p>\n<ul>\n<li><strong>collection</strong><br />A collection contains documents. It is like an array of documents.</li>\n<li><strong>document</strong><br />A document contains data in a field-value pair.</li>\n</ul>\n<p>Remember that a <a href=\"https://firebase.google.com/docs/firestore/data-model\">collection may contain only documents</a> and not other collections. But a document may contain other collections.</p>\n<p>This means that if we want to store a collection within a collection, then we would store the collection in a document and store that document in a collection, like so:</p>\n<pre><code>{collection-1}/{document}/{collection-2}</code></pre>\n\n<h4>How to Structure the Data?</h4>\n<p>Cloud Firestore is hierarchical in nature, so people tend to store data like this:</p>\n<pre><code>blog/{blog-post-1}/content/comments/{comment-1}</code></pre>\n\n<p>But storing data in this way often introduces problems.</p>\n<p>Say you want to get a comment. You’ll have to look for the comment stored deep inside the blog collection. This will make your code more error-prone. Chris Esplin recommends <a href=\"https://howtofirebase.com/firestore-sub-collections-2e23c998540d\">never using sub-collections</a>.</p>\n<p>I would recommend storing data as a flattened object:</p>\n<pre><code>blog-posts/{blog-post-1}\ncomments/{comment-1}</code></pre>\n\n<p>This way, you can get and send data easily.</p>\n<h4>How to Get Data From Firestore?</h4>\n<p>To get data, Firebase gives you two methods:</p>\n<ul>\n<li><code>get()</code><br />This is for getting the content once.</li>\n<li><code>onSnapshot()</code><br />This method sends you data and then continues to send updates unless you unsubscribe.</li>\n</ul>\n<h4>How to Send Data to Firestore?</h4>\n<p>Just like with getting data, Firebase has two methods for saving data:</p>\n<ul>\n<li><code>set()</code><br />This is used to specify the ID of a document.</li>\n<li><code>add()</code><br />This is used to create documents with automatic IDs.</li>\n</ul>\n<p>I know, this has been a lot to grasp. But don’t worry, we’ll revisit these concepts again when we reach the project.</p>\n<h3>2. Create Sample Date</h3>\n<p>The next step is to create some sample data for us to query. Let’s do this by going to Firebase.</p>\n<p>Go to Cloud Firestore. Click “Start a collection”. Enter <code>comments</code> for the “Collection ID”, then click “Next”.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0f9402dc-f86c-484f-9961-f42b198f9a1e/add-collection-comment-system-firebase.png\" /></p>\n<p>For the “Document ID”, click “Auto-ID. Enter the following data and click “Save”.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3981e7e7-6039-4ba2-bced-15d2074cddc8/add-document-comment-system-firebase.png\" /></p>\n<p>While you’re entering data, make sure the “Fields” and “Types” match the screenshot above. Then, click “Save”.</p>\n<p>That’s how you add a comment manually in Firestore. The process looks cumbersome, but don’t worry: From now on, our app will take care of adding comments.</p>\n<p>At this point, our database looks like this: <code>comments/{comment}</code>.</p>\n<h3>3. Get the Comments Data</h3>\n<p>Our sample data is ready to query. Let’s get started by getting the data for our blog.</p>\n<p>Go to <code>blog-post.js</code>, and import the Firestore from the Firebase file that we just created.</p>\n<pre><code>import {firestore} from \"../../firebase.js\"</code></pre>\n\n<p>To query, we will use the <code>useEffect</code> hook from React. If you haven’t already, let’s import it as well.</p>\n<pre><code>useEffect(() =&#62; {\n    firestore\n      .collection(`comments`)\n      .onSnapshot(snapshot =&#62; {\n        const posts = snapshot.docs\n        .filter(doc =&#62; doc.data().slug === slug)\n        .map(doc =&#62; {\n          return { id: doc.id, ...doc.data() }\n        })\n        setComments(posts)\n      })\n}, [slug])</code></pre>\n\n<p>The method used to get data is <code>onSnapshot</code>. This is because we also want to listen to state changes. So, the comments will get updated without the user having to refresh the browser.</p>\n<p>We used the <code>filter</code> and <code>map</code> methods to find the comments whose slug matches the current slug.</p>\n<p>One last thing we need to think about is cleanup. Because <code>onSnapshot</code> continues to send updates, this could introduce a memory leak in our application. Fortunately, Firebase provides a <a href=\"https://firebase.google.com/docs/firestore/query-data/listen#detach_a_listener\">neat fix</a>.</p>\n<pre><code>useEffect(() =&#62; {\n    const cleanUp = firestore\n      .doc(`comments/${slug}`)\n      .collection(\"comments\")\n      .onSnapshot(snapshot =&#62; {\n        const posts = snapshot.docs.map(doc =&#62; {\n          return { id: doc.id, ...doc.data() }\n        })\n        setComments(posts)\n      })\n    return () =&#62; cleanUp()\n  }, [slug])</code></pre>\n\n<p>Once you’re done, run <code>gatsby develop</code> to see the changes. We can now see our comments section getting data from Firebase.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/213a2b74-24e4-43e5-8c99-3e1ed1dfab17/getting-firestore-data-comment-system-firebase.png\" /></p>\n<p>Let’s work on storing the comments.</p>\n<h3>4. Store Comments</h3>\n<p>To store comments, navigate to the <code>CommentForm.js</code> file. Let’s import Firestore into this file as well.</p>\n<pre><code>import { firestore } from \"../../firebase.js\"</code></pre>\n\n<p>To save a comment to Firebase, we’ll use the <code>add()</code> method, because we want Firestore to create documents with an auto-ID.</p>\n<p>Let’s do that in the <code>handleCommentSubmission</code> method.</p>\n<pre><code>firestore\n.collection(`comments`)\n.add(comment)\n.catch(err =&#62; {\n   console.error('error adding comment: ', err)\n })</code></pre>\n\n<p>First, we get the reference to the comments collection, and then add the comment. We’re also using the <code>catch</code> method to catch any errors while adding comments.</p>\n<p>At this point, if you open a browser, you can see the comments section working. We can add new comments, as well as post replies. What’s more amazing is that everything works without our having to refresh the page.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62f81445-8cd1-4e3b-b224-aee6d898fd46/storing-comment-comment-system-firebase.png\" /></p>\n<p>You can also check Firestore to see that it is storing the data.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/13a27873-9696-459a-9e44-ec0d5f705b00/stored-data-firestore-comment-system-firebase.png\" /></p>\n<p>Finally, let’s talk about one crucial thing in Firebase: security rules.</p>\n<h3>5. Tighten Security Rules</h3>\n<p>Until now, we’ve been running Cloud Firestore in test mode. This means that anybody with access to the URL can add to and read our database. That is scary.</p>\n<p>To tackle that, Firebase provides us with security rules. We can create a database pattern and restrict certain activities in Cloud Firestore.</p>\n<p>In addition to the two basic operations (read and write), Firebase offers more granular operations: get, list, create, update, and delete.</p>\n<p>A read operation can be broken down as:</p>\n<ul>\n<li><code>get</code><br />Get a single document.</li>\n<li><code>list</code><br />Get a list of documents or a collection.</li>\n</ul>\n<p>A write operation can be broken down as:</p>\n<ul>\n<li><code>create</code><br />Create a new document.</li>\n<li><code>update</code><br />Update an existing document.</li>\n<li><code>delete</code><br />Delete a document.</li>\n</ul>\n<p>To secure the application, head back to Cloud Firestore. Under “Rules”, enter this:</p>\n<pre><code>service cloud.firestore {\n    match /databases/{database}/documents {\n    match /comments/{id=**} {\n        allow read, create;\n      }\n    }\n}</code></pre>\n\n<p>On the first line, we define the service, which, in our case, is Firestore. The next lines tell Firebase that anything inside the <code>comments</code> collection may be read and created.</p>\n<p>If we had used this:</p>\n<pre><code>allow read, write;</code></pre>\n\n<p>… that would mean that users could update and delete existing comments, which we don’t want.</p>\n<p>Firebase’s security rules are extremely powerful, allowing us to restrict certain data, activities, and even users.</p>\n<h3>On To Building Your Own Comments Section</h3>\n<p>Congrats! You have just seen the power of Firebase. It is such an excellent tool to build secure and fast applications.</p>\n<p>We’ve built a super-simple comments section. But there’s no stopping you from exploring further possibilities:</p>\n<ul>\n<li>Add profile pictures, and store them in Cloud Storage for Firebase;</li>\n<li>Use Firebase to allow users to create an account, and authenticate them using Firebase authentication;</li>\n<li>Use Firebase to create inline Medium-like comments.</li>\n</ul>\n<p>A great way to start would be to head over to <a href=\"https://firebase.google.com/docs/firestore\">Firestore’s documentation</a>.</p>\n<p>Finally, let’s head over to the comments section below and discuss your experience with building a comments section using Firebase.</p>\n","descriptionType":"html","publishedDate":"Mon, 24 Aug 2020 10:30:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/78cb8ad5-2002-4bd7-9e54-a630bcfcb339/comment-system-firebase.png","linkMd5":"d3941734f9d21fb1526a62ff1d7b9b2c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn20@2020_2/2020/09/05/07-59-16-376_9a6cfbd2366ee517.webp","destWidth":1201,"destHeight":631,"sourceBytes":174816,"destBytes":53086,"author":"hello@smashingmagazine.com (Aman Thakur)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/78cb8ad5-2002-4bd7-9e54-a630bcfcb339/comment-system-firebase.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dfb9afb7-164a-4861-a0f2-a134ec193959/blog-comment-system-firebase.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn56@2020_2/2020/09/05/07-59-28-759_9dda7b69c008b4fe.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8355d5dd-6495-447b-b4e9-2b13966edf31/initialize-firebase-comment-system-firebase.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn97@2020_6/2020/09/05/07-59-26-802_2851e8d56dc15e73.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b060076d-0b58-4066-b4ba-93f1e6496b6b/cloud-firestore-comment-system-firebase.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn37@2020_6/2020/09/05/07-59-39-375_5e29cbd9e58bffe1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5b96c1e5-9636-4b59-a678-dece2241b909/test-mode-firestore-comment-system-firebase.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn36@2020_1/2020/09/05/07-59-31-561_6a698c47c5d2d5a5.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cdf9bc20-be85-46a5-805a-7ce6dece9ad1/firestore-dashboard-comment-system-firebase.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn17@2020_3/2020/09/05/07-59-26-951_4d773cfd99e8e813.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7f225de-4fae-419c-b669-bacef0b8efe7/project-settings-comment-system-firebase.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn79@2020_1/2020/09/05/07-59-38-709_e996cc524e175823.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/943be067-e379-4135-9664-7dd1c85d957f/project-installation-comment-system-firebase.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn69@2020_4/2020/09/05/07-59-30-523_96f6677f675161af.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0f9402dc-f86c-484f-9961-f42b198f9a1e/add-collection-comment-system-firebase.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn41@2020_2/2020/09/05/07-59-39-369_d8a47c58f0b22b5c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3981e7e7-6039-4ba2-bced-15d2074cddc8/add-document-comment-system-firebase.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn52@2020_4/2020/09/05/07-59-19-961_95629e82ac97338f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/213a2b74-24e4-43e5-8c99-3e1ed1dfab17/getting-firestore-data-comment-system-firebase.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn55@2020_4/2020/09/05/07-59-20-179_c79bb47d9539c335.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62f81445-8cd1-4e3b-b224-aee6d898fd46/storing-comment-comment-system-firebase.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn36@2020_5/2020/09/05/07-59-17-776_7f8b8b187106779c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/13a27873-9696-459a-9e44-ec0d5f705b00/stored-data-firestore-comment-system-firebase.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn48@2020_3/2020/09/05/07-59-35-809_553bcb4dd8b6a712.webp"},"publishedOrCreatedDate":1599292755759},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"How To Use Styled-Components In React","link":"https://smashingmagazine.com/2020/07/styled-components-react/","description":"<p>Styled components are a CSS-in-JS tool that bridges the gap between components and styling, offering numerous features to get you up and running in styling components in a functional and reusable way. In this article, you’ll learn the basics of styled components and how to properly apply them to your React applications. You should have worked on React previously before going through this tutorial. If you’re looking for various options in styling React components, you can check out our <a href=\"https://www.smashingmagazine.com/2020/05/styling-components-react/\">previous post on the subject</a>.</p>\n<p>At the core of CSS is the capability to target any HTML element — globally — no matter its position in the DOM tree. This can be a hindrance when used with components, because components demand, to a reasonable extent, colocation (i.e. keeping assets such as states and styling) closer to where they’re used (known as localization).</p>\n<p>In React’s own words, styled components are “<strong>visual primitives for components</strong>”, and their goal is to give us a flexible way to style components. The result is a tight coupling between components and their styles.</p>\n<p>Note: Styled components are available both for React and React Native, and while you should definitely check out the React Native guide, our focus here will be on styled components for React.</p>\n<h3>Why Styled Components?</h3>\n<p>Apart from helping you to scope styles, styled components include the following features:</p>\n<ul>\n<li><strong>Automatic vendor prefixing</strong><br />You can use standard CSS properties, and styled components will add vendor prefixes should they be needed.</li>\n<li><strong>Unique class names</strong><br />Styled components are independent of each other, and you do not have to worry about their names because the library handles that for you.</li>\n<li><strong>Elimination of dead styles</strong><br />Styled components remove unused styles, even if they’re declared in your code.</li>\n<li>and <a href=\"https://styled-components.com/docs/basics#motivation\">many more</a>.</li>\n</ul>\n<h3>Installation</h3>\n<p>Installing styled components is easy. You can do it through a <a href=\"https://styled-components.com/docs/basics#installation\">CDN</a> or with a package manager such as Yarn…</p>\n<pre><code>yarn add styled-components</code></pre>\n\n<p>… or npm:</p>\n<pre><code>npm i styled-components</code></pre>\n\n<p>Our demo uses <a href=\"https://create-react-app.dev/\">create-react-app</a>.</p>\n<h3>Starting Out</h3>\n<p>Perhaps the first thing you’ll notice about styled components is their syntax, which can be daunting if you don’t understand the <a href=\"https://mxstbr.blog/2016/11/styled-components-magic-explained/\">magic behind styled components</a>. To put it briefly, styled components use JavaScript’s <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals\">template literals</a> to bridge the gap between components and styles. So, when you create a styled component, what you’re actually creating is a React component with styles. It looks like this:</p>\n<pre><code>import styled from \"styled-components\";\n\n// Styled component named StyledButton\nconst StyledButton = styled.button`\n  background-color: black;\n  font-size: 32px;\n  color: white;\n`;\n\nfunction Component() {\n  // Use it like any other component.\n  return &#60;StyledButton&#62; Login &#60;/StyledButton&#62;;\n}</code></pre>\n\n<p>Here, <code>StyledButton</code> is the styled component, and it will be rendered as an HTML button with the contained styles. <code>styled</code> is an internal utility method that transforms the styling from JavaScript into actual CSS.</p>\n<p>In raw HTML and CSS, we would have this:</p>\n<pre><code>button {\n  background-color: black;\n  font-size: 32px;\n  color: white;\n}\n\n&#60;button&#62; Login &#60;/button&#62;</code></pre>\n\n<p>If styled components are React components, can we use props? Yes, we can.</p>\n<h3>Adapting Based on Props</h3>\n<p>Styled components are <strong>functional</strong>, so we can easily style elements dynamically. Let’s assume we have two types of buttons on our page, one with a black background, and the other blue. We do not have to create two styled components for them; we can adapt their styling based on their props.</p>\n<div>\n<pre><code>import styled from \"styled-components\";\n\nconst StyledButton = styled.button<code>min-width: 200px;\n  border: none;\n  font-size: 18px;\n  padding: 7px 10px;\n  /* The resulting background color will be based on the bg props. */\n  background-color: ${props =&#38;gt; props.bg === \"black\" ? \"black\" : \"blue\";</code>;\n\nfunction Profile() {\n  return (\n    &#60;div&#62;\n      &#60;StyledButton bg=\"black\"&#62;Button A&#60;/StyledButton&#62;\n      &#60;StyledButton bg=\"blue\"&#62;Button B&#60;/StyledButton&#62;\n    &#60;/div&#62;\n  )\n}</code></pre>\n</div>\n\n<p>Because <code>StyledButton</code> is a React component that accepts props, we can assign a different background color based on the existence or value of the <code>bg</code> prop.</p>\n<p>You’ll notice, though, that we haven’t given our button a <code>type</code>. Let’s do that:</p>\n<div>\n<pre><code>function Profile() {\n  return (\n    &#60;&#62;\n      &#60;StyledButton bg=\"black\" type=\"button\"&#62;\n        Button A\n      &#60;/StyledButton&#62;\n      &#60;StyledButton bg=\"blue\" type=\"submit\" onClick={() =&#62; alert(\"clicked\")}&#62;\n        Button B\n      &#60;/StyledButton&#62;\n    &#60;/&#62;\n  );\n}</code></pre>\n</div>\n\n<p>Styled components can differentiate between the <a href=\"https://styled-components.com/docs/basics#passed-props\">types of props</a> they receive. They know that <code>type</code> is an HTML attribute, so they actually render <code>&#60;button type=\"button\"&#62;Button A&#60;/button&#62;</code>, while using the <code>bg</code> prop in their own processing. Notice how we attached an event handler, too?</p>\n<p>Speaking of attributes, an extended syntax lets us manage props using the <a href=\"https://styled-components.com/docs/api#attrs\"><code>attrs</code> constructor</a>. Check this out:</p>\n<pre><code>const StyledContainer = styled.section.attrs((props) =&#62; ({\n  width: props.width || \"100%\",\n  hasPadding: props.hasPadding || false,\n}))`\n  --container-padding: 20px;\n  width: ${(props) =&#62; props.width}; // Falls back to 100%\n  padding: ${(props) =&#62;\n    (props.hasPadding &#38;&#38; \"var(--container-padding)\") || \"none\"};\n`;</code></pre>\n\n<p>Notice how we don’t need a ternary when setting the width? That’s because we’ve already set a default for it with <code>width: props.width || \"100%\",</code>. Also, we used <a href=\"https://styled-components.com/docs/basics#passed-props\">CSS custom properties</a> because we can!</p>\n<p>Note: If styled components are React components, and we can pass props, then can we also use states? The library’s GitHub account has an <a href=\"https://github.com/styled-components/styled-components/issues/1746\">issue addressing this</a> very matter.</p>\n<h4>Extending Styles</h4>\n<p>Let’s say you’re working on a landing page, and you’ve set your <a href=\"https://css-tricks.com/the-inside-problem/\">container to a certain max-width</a> to keep things centered. You have a <code>StyledContainer</code> for that:</p>\n<pre><code>const StyledContainer = styled.section`\n  max-width: 1024px;\n  padding: 0 20px;\n  margin: 0 auto;\n`;</code></pre>\n\n<p>Then, you discover that you need a smaller container, with padding of 10 pixels on both sides, instead of 20 pixels. Your first thought might be to create another styled component, and you’d be right, but it wouldn’t take any time before you realize that you are duplicating styles.</p>\n<pre><code>const StyledContainer = styled.section`\n  max-width: 1024px;\n  padding: 0 20px;\n  margin: 0 auto;\n`;\n\nconst StyledSmallContainer = styled.section`\n  max-width: 1024px;\n  padding: 0 10px;\n  margin: 0 auto;\n`;</code></pre>\n\n<p>Before you go ahead and create <code>StyledSmallContainer</code>, like in the snippet above, let’s learn the way to reuse and inherit styles. It’s more or less like how the <code>spread</code> operator works:</p>\n<pre><code>const StyledContainer = styled.section`\n  max-width: 1024px;\n  padding: 0 20px;\n  margin: 0 auto;\n`;\n\n// Inherit StyledContainer in StyledSmallConatiner\nconst StyledSmallContainer = styled(StyledContainer)`\n  padding: 0 10px;\n`;\n\nfunction Home() {\n  return (\n    &#60;StyledContainer&#62;\n      &#60;h1&#62;The secret is to be happy&#60;/h1&#62;\n    &#60;/StyledContainer&#62;\n  );\n}\n\nfunction Contact() {\n  return (\n    &#60;StyledSmallContainer&#62;\n      &#60;h1&#62;The road goes on and on&#60;/h1&#62;\n    &#60;/StyledSmallContainer&#62;\n  );\n}</code></pre>\n\n<p>In your <code>StyledSmallContainer</code>, you’ll get all of the styles from <code>StyledContainer</code>, but the padding will be overridden. Keep in mind that, ordinarily, you’ll get a section element rendered for <code>StyledSmallContainer</code>, because that’s what <code>StyledContainer</code> renders. But that doesn’t mean it’s carved in stone or unchangeable.</p>\n<h4>The “as” Polymorphic Prop</h4>\n<p>With the <a href=\"https://styled-components.com/docs/api#as-polymorphic-prop\"><code>as</code> polymorphic prop</a>, you can swap the <strong>end</strong> element that gets rendered. One use case is when you inherit styles (as in the last example). If, for example, you’d prefer a <code>div</code> to a <code>section</code> for <code>StyledSmallContainer</code>, you can pass the <code>as</code> prop to your styled component with the value of your preferred element, like so:</p>\n<pre><code>function Home() {\n  return (\n    &#60;StyledContainer&#62;\n      &#60;h1&#62;It’s business, not personal&#60;/h1&#62;\n    &#60;/StyledContainer&#62;\n  );\n}\n\nfunction Contact() {\n  return (\n    &#60;StyledSmallContainer as=\"div\"&#62;\n      &#60;h1&#62;Never dribble when you can pass&#60;/h1&#62;\n    &#60;/StyledSmallContainer&#62;\n  );\n}</code></pre>\n\n<p>Now, <code>StyledSmallContainer</code> will be rendered as a <code>div</code>. You could even have a custom component as your value:</p>\n<pre><code>function Home() {\n  return (\n    &#60;StyledContainer&#62;\n      &#60;h1&#62;It’s business, not personal&#60;/h1&#62;\n    &#60;/StyledContainer&#62;\n  );\n}\n\nfunction Contact() {\n  return (\n    &#60;StyledSmallContainer as={StyledContainer}&#62;\n      &#60;h1&#62;Never dribble when you can pass&#60;/h1&#62;\n    &#60;/StyledSmallContainer&#62;\n  );\n}</code></pre>\n\n<p>Don’t take it for granted.</p>\n<h4>SCSS-Like Syntax</h4>\n<p>The CSS preprocessor <a href=\"https://stylis.js.org/\">Stylis</a> enables styled components to support SCSS-like syntax, such as nesting:</p>\n<pre><code>const StyledProfileCard = styled.div`\n  border: 1px solid black;\n\n  &#62; .username {\n    font-size: 20px;\n    color: black;\n    transition: 0.2s;\n\n    &#38;:hover {\n      color: red;\n    }\n\n    + .dob {\n      color: grey;\n    }\n  }\n`;\n\nfunction ProfileCard() {\n  return (\n    &#60;StyledProfileCard&#62;\n      &#60;h1 className=\"username\"&#62;John Doe&#60;/h1&#62;\n      &#60;p className=\"dob\"&#62;\n        Date: &#60;span&#62;12th October, 2013&#60;/span&#62;\n      &#60;/p&#62;\n      &#60;p className=\"gender\"&#62;Male&#60;/p&#62;\n    &#60;/StyledProfileCard&#62;\n  );\n}</code></pre>\n\n<h4>Animation</h4>\n<p>Styled components have a <code>keyframes</code> helper that assists with constructing (reusable) animation keyframes. The advantage here is that the keyframes will be detached from the styled components and can be exported and reused wherever needed.</p>\n<pre><code>import styled, {keyframes} from \"styled-components\";\n\nconst slideIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst Toast = styled.div`\n  animation: ${slideIn} 0.5s cubic-bezier(0.4, 0, 0.2, 1) both;\n  border-radius: 5px;\n  padding: 20px;\n  position: fixed;\n`;</code></pre>\n\n<h4>Global Styling</h4>\n<p>While the original goal of CSS-in-JS and, by extension, styled components is scoping of styles, we can also leverage styled components’ global styling. Because we’re mostly working with scoped styles, you might think that’s an invariable factory setting, but you’d be wrong. Think about it: What really is scoping? It’s technically possible for us — in the name of global styling — to do something similar to this:</p>\n<pre><code>ReactDOM.render(\n  &#60;StyledApp&#62;\n    &#60;App /&#62;\n  &#60;/StyledApp&#62;,\n  document.getElementById(\"root\")\n);</code></pre>\n\n<p>But we already have a helper function — <code>createGlobalStyle</code> — whose sole reason for existence is global styling. So, why deny it its responsibility?</p>\n<p>One thing we can use <code>createGlobalStyle</code> for is to <a href=\"https://necolas.github.io/normalize.css/\">normalize the CSS</a>:</p>\n<pre><code>import {createGlobalStyle} from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    /* Your css reset here */\n`;\n\n// Use your GlobalStyle\nfunction App() {\n  return (\n    &#60;div&#62;\n      &#60;GlobalStyle /&#62;\n      &#60;Routes /&#62;\n    &#60;/div&#62;\n  );\n}</code></pre>\n\n<p><strong>Note:</strong> Styles created with <code>createGlobalStyle</code> do not accept any children. Learn more <a href=\"https://styled-components.com/docs/api#createglobalstyle\">in the documentation</a>.</p>\n<p>At this point, you might be wondering why we should bother using <code>createGlobalStlye</code> at all. Here are a few reasons:</p>\n<ul>\n<li>We can’t target anything outside of the root render without it (for example, <code>html</code>, <code>body</code>, etc.).</li>\n<li><code>createGlobalStyle</code> injects styles but does not render any actual elements. If you look at the last example closely, you’ll notice we didn’t specify any HTML element to render. This is cool because we might not actually need the element. After all, we’re concerned with global styles. We are targeting selectors at large, not specific elements.</li>\n<li><code>createGlobalStyle</code> is not scoped and can be rendered anywhere in our app and will be applicable as long as it’s in the DOM. Think about the <strong>concept</strong>, not the <strong>structure</strong>.</li>\n</ul>\n<pre><code>import {createGlobalStyle} from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  /* Your css reset here */\n\n  .app-title {\n    font-size: 40px;\n  }\n`;\n\nconst StyledNav = styled.nav`\n    /* Your styles here */\n`;\n\nfunction Nav({children}) {\n  return (\n    &#60;StyledNav&#62;\n      &#60;GlobalStyle /&#62;\n      {children}\n    &#60;/StyledNav&#62;\n  );\n}\n\nfunction App() {\n  return (\n    &#60;div&#62;\n      &#60;Nav&#62;\n        &#60;h1 className=\"app-title\"&#62;STYLED COMPONENTS&#60;/h1&#62;\n      &#60;/Nav&#62;\n      &#60;Main /&#62;\n      &#60;Footer /&#62;\n    &#60;/div&#62;\n  );\n}</code></pre>\n\n<p>If you think about the structure, then <code>app-title</code> should not be styled as set in <code>GlobalStyle</code>. But it doesn’t work that way. Wherever you choose to render your <code>GlobalStyle</code>, it will be injected when your component is <strong>rendered</strong>.</p>\n<p><strong>Be careful</strong>: <code>createGlobalStyles</code> will only be rendered if and when it’s in the DOM.</p>\n<h4>CSS Helper</h4>\n<p>Already we’ve seen how to adapt styles based on props. What if we wanted to go a little further? The CSS helper function helps to achieve this. Let’s assume we have two text-input fields with states: empty and active, each with a different color. We can do this:</p>\n<pre><code>const StyledTextField = styled.input`\n  color: ${(props) =&#62; (props.isEmpty ? \"none\" : \"black\")};\n`;</code></pre>\n\n<p>All’s well. Subsequently, if we need to add another state of filled, we’d have to modify our styles:</p>\n<pre><code>const StyledTextField = styled.input`\n  color: ${(props) =&#62;\n    props.isEmpty ? \"none\" : props.active ? \"purple\" : \"blue\"};\n`;</code></pre>\n\n<p>Now the ternary operation is growing in complexity. What if we add another state to our text-input fields later on? Or what if we want to give each state additional styles, other than color? Can you imagine cramping the styles into the ternary operation? The <code>css</code> helper comes in handy.</p>\n<pre><code>const StyledTextField = styled.input`\n  width: 100%;\n  height: 40px;\n\n  ${(props) =&#62;\n    (props.empty &#38;&#38;\n      css`\n        color: none;\n        backgroundcolor: white;\n      `) ||\n    (props.active &#38;&#38;\n      css`\n        color: black;\n        backgroundcolor: whitesmoke;\n      `)}\n`;</code></pre>\n\n<p>What we’ve done is sort of expanded our ternary syntax to accommodate more styles, and with a more understandable and organized syntax. If the previous statement seems wrong, it’s because the code is trying to do too much. So, let’s step back and refine:</p>\n<pre><code>const StyledTextField = styled.input`\nwidth: 100%;\nheight: 40px;\n\n// 1. Empty state\n${(props) =&#62;\n  props.empty &#38;&#38;\n  css`\n    color: none;\n    backgroundcolor: white;\n  `}\n\n// 2. Active state\n${(props) =&#62;\n  props.active &#38;&#38;\n  css`\n    color: black;\n    backgroundcolor: whitesmoke;\n  `}\n\n// 3. Filled state\n${(props) =&#62;\n  props.filled &#38;&#38;\n  css`\n    color: black;\n    backgroundcolor: white;\n    border: 1px solid green;\n  `}\n`;</code></pre>\n\n<p>Our refinement splits the styling into three different manageable and easy-to-understand chunks. It’s a win.</p>\n<h4>StyleSheetManager</h4>\n<p>Like the CSS helper, <code>StyleSheetManager</code> is a helper method for modifying how styles are processed. It takes certain props — like <code>disableVendorPrefixes</code> (you can check out the <a href=\"https://styled-components.com/docs/api#stylesheetmanager\">full list</a>) — that help you opt out of <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\">vendor prefixes</a> from its subtree.</p>\n<pre><code>import styled, {StyleSheetManager} from \"styled-components\";\n\nconst StyledCard = styled.div`\n  width: 200px;\n  backgroundcolor: white;\n`;\n\nconst StyledNav = styled.div`\n  width: calc(100% - var(--side-nav-width));\n`;\n\nfunction Profile() {\n  return (\n    &#60;div&#62;\n      &#60;StyledNav /&#62;\n      &#60;StyleSheetManager disableVendorPrefixes&#62;\n        &#60;StyledCard&#62; This is a card &#60;/StyledCard&#62;\n      &#60;/StyleSheetManager&#62;\n    &#60;/div&#62;\n  );\n}</code></pre>\n\n<p><code>disableVendorPrefixes</code> is passed as a prop to <code>&#60;StyleSheetManager&#62;</code>. So, the styled components wrapped by <code>&#60;StyleSheetManager&#62;</code> would be disabled, but not the ones in <code>&#60;StyledNav&#62;</code>.</p>\n<h4>Easier Debugging</h4>\n<p>When introducing styled components to one of my colleagues, one of their complaints was that it’s hard to locate a rendered element in the DOM — or in React Developer Tools, for that matter. This is one of the drawbacks of styled components: In trying to provide unique class names, it assigns unique hashes to elements, which happen to be cryptic, but it makes the <code>displayName</code> readable for easier debugging.</p>\n<pre><code>import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\n\nconst LoginButton = styled.button`\n  background-color: white;\n  color: black;\n  border: 1px solid red;\n`;\n\nfunction App() {\n  return (\n    &#60;div className=\"App\"&#62;\n      &#60;LoginButton&#62;Login&#60;/LoginButton&#62;\n    &#60;/div&#62;\n  );\n}</code></pre>\n\n<p>By default, styled components render <code>LoginButton</code> as <code>&#60;button class=\"LoginButton-xxxx xxxx\"&#62;Login&#60;/button&#62;</code> in the DOM, and as <code>LoginButton</code> in React Developer Tools, which makes debugging easier. We can toggle the <code>displayName</code> boolean if we don’t want this behavior. This requires a Babel configuration.</p>\n<p><strong>Note</strong>: In the documentation, the package <code>babel-plugin-styled-components</code> is specified, as well as a <code>.babelrc</code> configuration file. The issue with this is that, because we’re using <code>create-react-app</code>, we can’t configure a lot of things unless we eject. This is where Babel macros come in.</p>\n<p>We’ll need to install <code>babel-plugin-macros</code> with npm or Yarn, and then create a <code>babel-plugin-macros.config.js</code> at the root of our application, with the content:</p>\n<pre><code>module.exports = {\n  styledComponents: {\n    displayName: true,\n    fileName: false,\n  },\n};</code></pre>\n\n<p>With the <code>fileName</code> value inverted, the <code>displayName</code> will be prefixed with the file name for even more unique precision.</p>\n<p>We also now need to import from the <code>macro</code>:</p>\n<pre><code>// Before\nimport styled from \"styled-components\";\n\n// After\nimport styled from \"styled-components/macro\";</code></pre>\n\n<h3>Conclusion</h3>\n<p>Now that you can programmatically compose your CSS, do not abuse the freedom. For what it’s worth, do your very best to maintain sanity in your styled components. Don’t try to compose heavy conditionals, nor suppose that every thing should be a styled component. Also, do not over-abstract by creating nascent styled components for use cases that you are only guessing are somewhere around the corner.</p>\n<h4>Further Resources</h4>\n<ol>\n<li><a href=\"https://styled-components.com/docs\">Documentation</a>, Styled Components</li>\n<li>“<a href=\"https://levelup.gitconnected.com/building-a-reusable-component-system-with-react-js-and-styled-components-4e9f1018a31c\">Building a Reusable Component System with React.js and styled-components</a>”, Lukas Gisder-Dubé</li>\n<li><a href=\"https://styled-components.com/docs/advanced#nextjs\">Usage with Next.js</a></li>\n<li><a href=\"https://styled-components.com/docs/advanced#gatsby\">Usage with Gatsby</a></li>\n</ol>\n","descriptionType":"html","publishedDate":"Thu, 23 Jul 2020 10:30:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af37862f-c811-4e56-a9b9-96116da63a2b/styled-components-react.png","linkMd5":"d807f2e63b530bff5bc73387a294756b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn99@2020_1/2020/09/05/07-59-16-429_5b0683fd29501ae7.webp","destWidth":1201,"destHeight":631,"sourceBytes":174658,"destBytes":47418,"author":"hello@smashingmagazine.com (Adebiyi Adedotun)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af37862f-c811-4e56-a9b9-96116da63a2b/styled-components-react.png","publishedOrCreatedDate":1599292755762},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"How To Do More With Vue Router","link":"https://smashingmagazine.com/2020/08/vue-router-features/","description":"<p><a href=\"https://router.vuejs.org/\">Vue Router</a> is the official router for Vue. It deeply integrates with Vue core to make building Single Page Applications with Vue a breeze. Some of its popular features include:</p>\n<ol>\n<li>Dynamic Route matching.</li>\n<li>Named Routes.</li>\n<li>Named views.</li>\n<li>Programmatic navigation.</li>\n</ol>\n<p>These features are heavily used when developing with Vue and this is because they are part of the basics you need to understand to efficiently use the Router. But the Vue Router has some very useful features that can be very helpful in development and in this article, we’re going to take a look at them. </p>\n<p>For the purpose of this tutorial, we’re going to be building a simple application that would help in understanding some of the concepts covered in this article. You can find all the code used in this article on <a href=\"https://github.com/Timibadass/vue-router-demo\">GitHub</a>. If you are interested in doing more with the router, you’ll benefit from this tutorial.</p>\n<p><strong><em>Note: This article requires a basic understanding of Vuejs and Vue Router.</em></strong></p>\n<h3>Scroll Behaviour</h3>\n<p>This is the behavior that is observed when navigating from one page to another. The default behavior of Vue router is only noticeable after scrolling to a position that isn’t the top of the page. This is because, by default, the scroll position when navigating away from a page is maintained on a new page. What this means is, if you click on a link that leads to a new route ( i.e from <code>/home</code> to <code>/about</code>) in a position that is let’s say close to the footer of the current page, the new page would start from that same position instead of starting from the top of the page.</p>\n<p>I have created a Vue application using the Vue CLI command <code>vue create vue-router-demo</code>, I also selected Vue Router as part of the options while setting up my app because we will be using it throughout this tutorial.</p>\n<p>We will also need to make API calls to <a href=\"https://jsonplaceholder.typicode.com/\">JSONPlaceholder</a>, to illustrate some of the concepts using Vue router. For this, we will be using Axios. To install <a href=\"https://www.smashingmagazine.com/2020/05/getting-started-axios-nuxt/\">Axios</a>:</p>\n<pre><code># using YARN\nyarn add axios\n# or NPM\nnpm install axios</code></pre>\n\n<p>After installing Axios, we can update our <code>Home.vue</code> to look like this:</p>\n<div>\n<pre><code>&#60;template&#62;\n    &#60;div class=\"home\"&#62;\n        &#60;p v-if=\"loading\" class=\"post--empty\"&#62;Loading....&#60;/p&#62;\n        &#60;ul v-else&#62;\n            &#60;li v-for=\"post in posts\" :key=\"post.id\"&#62;\n                &#60;router-link\n                    :to=\"{ name: 'Post', params: { id: post.id, post: post } }\"\n                &#62;\n                    {{ post.title }}\n                &#60;/router-link&#62;\n            &#60;/li&#62;\n        &#60;/ul&#62;\n    &#60;/div&#62;\n&#60;/template&#62;\n&#60;script&#62;\n    // @ is an alias to /src\n    import axios from \"axios\";\n    export default {\n        name: \"Home\",\n        data() {\n            return {\n                posts: null,\n                loading: false,\n            };\n        },\n        mounted() {\n            this.getPosts();\n        },\n        methods: {\n            async getPosts() {\n                this.loading = true;\n                try {\n                    let res = await axios({\n                        url: \"<a href=\"https://jsonplaceholder.typicode.com/posts&#34;\">https://jsonplaceholder.typicode.com/posts\"</a>,\n                        method: \"GET\",\n                    });\n                    let posts = res.data;\n                    this.posts = posts;\n                    this.loading = false;\n                } catch (error) {\n                    this.loading = false;\n                }\n            },\n        },\n    };\n&#60;/script&#62;\n&#60;style&#62;\n    .home {\n        padding: 0 30px;\n        max-width: 800px;\n        margin: 0 auto;\n    }\n    @keyframes blink {\n        from {\n            opacity: 1;\n        }\n        to {\n            opacity: 0;\n        }\n    }\n    .post--empty {\n        height: 250px;\n        margin-top: 30px;\n        animation: blink 0.8s ease-in-out infinite alternate both;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-family: \"Lobster\", cursive;\n    }\n    ul {\n        text-align: left;\n    }\n    a {\n        color: inherit;\n    }\n&#60;/style&#62;</code></pre>\n</div>\n\n<p>Here, we’re importing <code>axios</code> and using it to fetch a list of <code>posts</code> from JSONPlaceholder in the <code>getPost</code> method. We’re also assigning the array of posts gotten from this API call to <code>posts</code> from the <code>data</code> function from this page, this is because we want to use this data in our template section. After this, we loop through the array of posts in a list ( <code>&#60;ul&#62;&#60;/ul&#62;</code>) and also attach a link to each post using <code>id</code> of each post as the link param (this is called <a href=\"https://router.vuejs.org/guide/essentials/dynamic-matching.html#reacting-to-params-changes\">dynamic route matching</a>). We have also added a paragraph that would serve as a loading indicator.</p>\n<p>At this point, here’s what this page looks like:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5cbdcd62-1743-4dca-896e-5c2e2c503eb8/01-landing-page-vue-router.png\" /></p>\n<p>The next thing would be to create the page that will display the info for each post and create a link for it in the router of our app.</p>\n<p><strong><em>Post.vue</em></strong></p>\n<pre><code>&#60;template&#62;\n    &#60;div class=\"about\"&#62;\n        &#60;div class=\"post\"&#62;\n            &#60;h1&#62;{{ post.title }}&#60;/h1&#62;\n            &#60;p v-html=\"post.body\"&#62;&#60;/p&#62;\n        &#60;/div&#62;\n        &#60;p&#62;End of page&#60;/p&#62;\n    &#60;/div&#62;\n&#60;/template&#62;\n&#60;script&#62;\n    export default {\n        name: \"Post\",\n        props: [\"id\", \"post\"],\n    };\n&#60;/script&#62;\n&#60;style&#62;\n    .post {\n        padding: 0 30px;\n        height: 110vh;\n        margin: 0 auto;\n    }\n    p {\n        margin: 10px 0;\n    }\n&#60;/style&#62;</code></pre>\n\n<p>Here, we make use of <a href=\"https://router.vuejs.org/guide/essentials/passing-props.html\">passing props to route components</a> to define <code>id</code> and <code>post</code> which we’re passing from the previous page in the form of route params. This is a neat way of accessing route params and query as opposed to doing this:</p>\n<p><strong><em>Post.vue</em></strong></p>\n<pre><code>&#60;script&#62;\n    export default {\n        name: \"Post\",\n        data() {\n            return {\n                post: this.$route.post,\n            };\n        },\n    };\n&#60;/script&#62;</code></pre>\n\n<p>We then make use of this <code>post</code> value in the template section to display post title and body. Finally, we add a paragraph to the end of the page. We also add styling for the page in the styling section, which includes defining a <code>height</code> of <code>110vh</code>. This is because we need the page to have a height that is more than the default height <code>100vh</code> so we can observe the default scroll behavior of the router. </p>\n<p>The next thing would be to create a route that would display each post. Update your <code>index.js</code> file in the <strong><em>/router</em></strong> folder ( or <strong><em>router.js</em></strong> file) to look like this:</p>\n<div>\n<pre><code>import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Home from '../views/Home.vue'\nVue.use(VueRouter)\nconst routes = [{\n        path: '/',\n        name: 'Home',\n        component: Home\n    },\n    {\n        path: '/:id',\n        name: 'Post',\n        props: true,\n        component: () =&#62;\n            import ( /<em> webpackChunkName: \"post\" </em>/ '../views/Post.vue')\n    }\n]\nconst router = new VueRouter({\n    mode: 'history',\n    base: process.env.BASE_URL,\n    routes\n})\nexport default router</code></pre>\n</div>\n\n<p>Here, we define a new route that makes use of <code>id</code> that would be passed to this route from the homepage. We’re also decoupling the router param (in this case, <code>post</code> and <code>id</code>) using props.</p>\n<p>The top of this page looks like this:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7972db9e-971d-40b2-9e41-2dbc4a5105df/02-top-post-page.png\" /></p>\n<p>If we click on any of the posts on the home page that does not require us to scroll, we would not notice any weird behavior scroll wise, but if we scroll down a little and click on the last post in this list, this should be the position the <code>/post</code> page would land on:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/852b446c-4def-4e6d-b449-bb0e560a3945/03-default-scroll-position-vue-router.png\" /></p>\n<p>This is bad for UX and this is because the user isn’t expecting this behavior and they might need to start from the top of a page to get the full information on the said page.</p>\n<p>Vue Router comes with the option to customize this behavior to individual preferences, an example would be saving scroll position of a previous route when trying to move back/forward. To fix the current issue in our app, we would update our router file to include the following:</p>\n<pre><code>import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Home from '../views/Home.vue'\nVue.use(VueRouter)\nconst routes = [...]\nconst router = new VueRouter({\n    mode: 'history',\n    base: process.env.BASE_URL,\n    routes,\n    //add this\n    scrollBehavior(to, from, savedPosition) {\n        return { x: 0, y: 0 }\n    }\n})\nexport default router</code></pre>\n\n<p>Now, if we scroll to the bottom of the home page and click on the last post, you should notice that it now starts from the top of the page.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d39f1661-8ce5-4d9c-8c41-11f7f78844ee/04-new-scroll-position-vue-router.png\" /></p>\n<h3>Data Fetching</h3>\n<p>When fetching data from an API, we either call the method in the <code>mounted</code> or <code>created</code> lifecycle hook, these are by far the most popular methods people use when developing in Vue. Vue router comes with another method in which we make this API request before navigating to a new route by making this request using the <code>beforeRouterEnter</code> guard in such a component. Here is an example of how to fetch data from JSONPlaceholder using this method:</p>\n<pre><code>beforeRouteEnter(to, from, next) {\n    axios\n        .get(\"https://jsonplaceholder.typicode.com/posts\")\n        .then((res) =&#62; {\n            next((vm) =&#62; vm.fetchData(res));\n        })\n        .catch((err) =&#62; {\n            console.error(err);\n        });\n},\nmethods: {\n    fetchData(res) {\n        let post = res.data;\n        this.posts = post;\n    },\n\n},</code></pre>\n\n<p>Here, we’re fetching a list of posts from an API using Axios and when this request is complete, we call <code>next</code>. At this point in the lifecycle of this component, <code>this</code> is not available because the component has not been created but we have access to <code>vm</code> which gives us access to the component’s instance. Inside this function, we pass the response from the API request <code>res</code> to our method <code>fetchData</code> which we’ve created to assign the value from this response to <code>post</code> so we can use it in our template. Now, if we refresh our <code>/</code> route, we would notice that the data gets updated very fast and at no time is there a blank or page ( provided the request is successful).</p>\n<h3>Transitions</h3>\n<p>Vue comes with a <code>&#60;transition&#62;&#60;/ transition&#62;</code> component that enables easy implementation  of <a href=\"https://www.smashingmagazine.com/2020/07/css-transitions-vuejs-nuxtjs/\">CSS transitions</a> and animations. This feature can be extended to work for navigation between routes in Vue. Here’s an example:</p>\n<pre><code>&#60;template&#62;\n    &#60;div id=\"app\"&#62;\n        &#60;div id=\"nav\"&#62;\n            &#60;router-link to=\"/\"&#62;Home&#60;/router-link&#62;\n        &#60;/div&#62;\n        &#60;transition name=\"slide-fade\"&#62;\n          &#60;router-view /&#62;\n        &#60;/transition&#62;\n    &#60;/div&#62;\n&#60;/template&#62;\n&#60;style&#62;\n    #app {\n        font-family: Avenir, Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-align: center;\n        color: #2c3e50;\n    }\n    #nav {\n        padding: 30px;\n    }\n    #nav a {\n        font-weight: bold;\n        color: #2c3e50;\n    }\n    #nav a.router-link-exact-active {\n        color: #42b983;\n    }\n    .slide-fade-enter-active {\n        transition: transform 0.3s cubic-bezier(1, 0.5, 0.8, 1),\n            color 0.5s cubic-bezier(1, 0.5, 0.8, 1);\n    }\n    .slide-fade-leave-active {\n        transition: transform 1s cubic-bezier(1, 0.5, 0.8, 1),\n            color 1s cubic-bezier(1, 0.5, 0.8, 1);\n    }\n    .slide-fade-enter {\n        color: mediumblue;\n        transform: translateY(20px);\n    }\n    .slide-fade-leave-to {\n        transform: translateX(100px);\n        color: cyan;\n    }\n&#60;/style&#62;</code></pre>\n\n<p>Here, we’re adding a transition with the name <code>slide-fade</code> to our application and wrapping it around all the route navigation that would take place in the app. We’re also adding a set of styles that control/define the way the transitions would work in our app. Without these rules, there would be no visible transition taking place. Now, if we try to navigate from the homepage to the individual posts, we would notice a sliding and fading transition taking place during the navigation process.</p>\n<p>There are two types of route based transitions.</p>\n<h4>1. Per-route Transition</h4>\n<p>This type of transition is defined in the component that renders a route and so, it only affects the navigation to and from such a page. This gives us the ability to define a special transition for individual routes if we want. Here is an example of how to do that.</p>\n<div>\n<pre><code>&#60;template&#62;\n // add a transition component with name and mode props\n    &#60;transition name=\"slide-fade\" mode=\"in-out\"&#62;\n        &#60;div class=\"about\"&#62;\n            &#60;div class=\"post\"&#62;\n                &#60;h1&#62;{{ post.title }}&#60;/h1&#62;\n                &#60;p v-html=\"post.body\"&#62;&#60;/p&#62;\n            &#60;/div&#62;\n            &#60;p&#62;End of page&#60;/p&#62;\n        &#60;/div&#62;\n    &#60;/transition&#62;\n&#60;/template&#62;\n&#60;script&#62;\n    export default {\n        name: \"Post\",\n        props: [\"id\", \"post\"],\n    };\n&#60;/script&#62;\n&#60;style&#62;\n    //...\n\n    .slide-fade-enter-active {\n        transition: transform 2s cubic-bezier(1, 0.5, 0.8, 1), opacity 2s ease-in;\n    }\n    .slide-fade-leave-active {\n        transition: transform 2s cubic-bezier(1, 0.5, 0.8, 1), opacity 2s ease-out;\n    }\n    .slide-fade-enter {\n        opacity: 1;\n        transform: skewY(20deg);\n    }\n    .slide-fade-leave-to {\n        transform: skewY(-45deg);\n        opacity: 0.5;\n    }\n&#60;/style&#62;</code></pre>\n</div>\n\n<p>If you try to navigate away from this page, we would notice the page gets skewed and fades for a duration of <code>2s</code> as the navigation changes.</p>\n<h4>2. Route-Based Dynamic Transition</h4>\n<p>This is similar to the general method of adding transitions to all routes in your application but it has one major difference, that is, it accepts a dynamic transition <code>name</code> prop which gives you the ability to change the transition type any way you want. Let us create an example of how to do this.</p>\n<p>We’re going to update our <code>App.vue</code> file with a dynamic <code>name</code> prop and configure it to choose a transition name depending on a value.</p>\n<div>\n<pre><code> &#60;template&#62;\n    &#60;div id=\"app\"&#62;\n        &#60;div id=\"nav\"&#62;\n            &#60;router-link to=\"/\"&#62;Home&#60;/router-link&#62;\n        &#60;/div&#62;\n        &#60;transition :name=\"transitionName\"&#62;\n            &#60;router-view /&#62;\n        &#60;/transition&#62;\n    &#60;/div&#62;\n&#60;/template&#62;\n&#60;script&#62;\n    export default {\n        data() {\n            return {\n                transitionName: \"slide-fade\",\n            };\n        },\n        watch: {\n            $route(to, from, params) {\n                const toParam = to.params &#38;&#38; to.params.id ? to.params.id : 0;\n                this.transitionName = toParam % 2 === 0 ? \"slide-left\" : \"slide-fade\";\n            },\n        },\n    };\n&#60;/script&#62;\n&#60;style&#62;\n    /<em> add transition styles </em>/\n    .slide-fade-enter-active {\n        transition: transform 0.3s cubic-bezier(1, 0.5, 0.8, 1),\n            color 0.5s cubic-bezier(1, 0.5, 0.8, 1);\n    }\n    .slide-fade-leave-active {\n        transition: transform 1s cubic-bezier(1, 0.5, 0.8, 1),\n            color 1s cubic-bezier(1, 0.5, 0.8, 1);\n    }\n    .slide-fade-enter {\n        color: mediumblue;\n        transform: translateY(20px);\n    }\n    .slide-fade-leave-to {\n        transform: translateX(100px);\n        color: cyan;\n    }\n    .slide-left-enter-active {\n        transition: transform 0.3s cubic-bezier(1, 0.5, 0.8, 1),\n            color 0.5s cubic-bezier(1, 0.5, 0.8, 1);\n    }\n    .slide-left-leave-active {\n        transition: transform 1s cubic-bezier(1, 0.5, 0.8, 1),\n            color 1s cubic-bezier(1, 0.5, 0.8, 1);\n    }\n    .slide-left-enter {\n        color: mediumblue;\n        transform: translateY(20px);\n    }\n    .slide-left-leave-to {\n        transform: skewY(90deg);\n        color: cyan;\n    }\n&#60;/style&#62;</code></pre>\n</div>\n\n<p>Here, we’re adding a dynamic transition name which is defined in the script section of our app. We’re also watching the <code>$route</code> so that whenever it changes, we run the function that checks if the current route has a param of <code>id</code> otherwise, we give it a value of <code>0</code>. We also determine the transition name based on the type of number the <code>id</code> is (i.e even or odd number). Now, if we navigate between the landing page and the different posts available, we would observe there are two types of transitions occurring as we navigate.</p>\n<h3>Meta Fields And Navigation Guards</h3>\n<h4>Meta Fields</h4>\n<p>Meta fields help provide extra context to a certain route. An example of such context would be if a user needs to be authenticated to access such route or not. Here’s what this looks like:</p>\n<pre><code>import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Home from '../views/Home.vue'\nVue.use(VueRouter)\nconst routes = [{\n        path: '/',\n        name: 'Home',\n        component: Home,\n        // add meta to this route\n        meta: {\n            requiresAuth: true\n        }\n    },\n]\nconst router = new VueRouter({\n    mode: 'history',\n    base: process.env.BASE_URL,\n    routes\n})\nexport default router</code></pre>\n\n<p>Here, we’ve added a meta property <code>requiresAuth</code> to the <code>/</code> route meaning we want users to be authenticated before they can access that route. Note that ‘requiresAuth’ is not a standard property, so you can choose any name you prefer. Whatever value you select at the end can be accessible in the <code>$route</code> object. This meta field at this point would not prevent unauthorized users from accessing that route, we need to hook it up to the Navigation guard.</p>\n<h4>Navigation Guard</h4>\n<p>Just as the name implies, the navigation guard helps protect and guard routes based on your preferences (i.e redirect to another page or preventing the navigation). This feature works together with the Route Meta Fields to effectively guard the routes of your application. There are 3 ways of adding router guard in our app:</p>\n<h5>1. <strong>In-component</strong></h5>\n<p>Vue offers the option to configure your router guard for a particular route directly inside your components. Here’s an example in our <code>Home.vue</code> file:</p>\n<div>\n<pre><code>&#60;template&#62;\n    &#60;div class=\"home\"&#62;\n        &#60;p v-if=\"loading\" class=\"post--empty\"&#62;Loading....&#60;/p&#62;\n        &#60;ol v-else&#62;\n             &#60;!-- add this text to your template --&#62;\n            &#60;p v-if=\"guest\"&#62;Hi Guest&#60;/p&#62;\n            &#60;li v-for=\"post in posts\" :key=\"post.id\"&#62;\n                &#60;router-link\n                    :to=\"{ name: 'Post', params: { id: post.id, post: post } }\"\n                &#62;\n                    {{ post.title }}\n                &#60;/router-link&#62;\n            &#60;/li&#62;\n        &#60;/ol&#62;\n    &#60;/div&#62;\n&#60;/template&#62;\n&#60;script&#62;\n    // @ is an alias to /src\n    import axios from \"axios\";\n    export default {\n        name: \"Home\",\n        data() {\n            return {\n                posts: null,\n                // add this property\n                guest: false,\n                loading: false,\n            };\n        },\n        // add this function\n        beforeRouteEnter(to, from, next) {\n            if (to.matched.some((record) =&#62; record.meta.requiresAuth)) {\n                // this route requires auth, check if logged in\n                // if not, display guest greeting.\n                const loggedIn = JSON.parse(localStorage.getItem(\"loggedIn\"));\n                if (!loggedIn) {\n                    next((vm) =&#62; {\n                        vm.guest = true;\n                    });\n                } else {\n                    next();\n                }\n            } else {\n                next(); // make sure to always call next()!\n            }\n        },\n        methods: {...}\n    };\n&#60;/script&#62;\n&#60;style&#62;...&#60;/style&#62;</code></pre>\n</div>  \n\n<p>Here, we’re adding a paragraph that is only visible to unauthenticated users. We also add a property that controls the visibility of this text. Finally we have a router method <code>beforeRouteEnter</code> in which we also connect the router guard and check if the user is authenticated or not using a value that would be manually added later. We also have an <code>if/else</code> statement, and inside this statement, we change the value of <code>guest</code> depending on the authentication of the user.</p>\n<p>And in your <code>App.vue</code>, add this lifecycle to the file.</p>\n<pre><code>export default {\n        mounted() {\n            localStorage.setItem(\"loggedIn\", false);\n        }\n    };</code></pre>\n\n<p>So if you refresh your app, we should see the text we added in the <code>Home.vue</code> file.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6ee779b8-99de-4a61-a61a-20ac2dcdf988/05-guest-user-text.png\" /></p>\n<h5>2. <strong>Per-route</strong></h5>\n<p>We can also add a router guard to our apps per-route in our router file as another property inside the specific route object. Here’s an example:</p>\n<pre><code>{\n        path: '/',\n        name: 'Home',\n        component: Home,\n        // add meta to this route\n        meta: {\n            requiresAuth: true\n        },\n        beforeEnter: (to, from, next) =&#62; {\n            if (to.name !== 'Home') {\n                console.log('Per-Route navigation guard ti wa online');\n                next()\n            } else next()\n        }\n    }</code></pre>\n\n<p>Here, we add a router guard to the <code>/</code> route and we’re currently just logging a random text to the console but we can do a couple of things inside this guard. Now, each time you visit the home page, you would see this in your console:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/545e8950-9776-4648-be89-1acc3840fa6b/06-message-in-terminal-vue-router.png\" /></p>\n<h5>3. <strong>Globally</strong></h5>\n<p>We also have the option of creating a router guard that works globally for every part of the app (provided it meets the guard condition). This global guard is created in the router file just like the <strong><em>per-route guard</em></strong> but instead of defining it inside a specific route object, it is defined as a method of the <code>router</code> instance. For an example of how it works, we’re going to create a new file and route in our app and name it <code>guest.vue</code>, then add the following lines of code to the file.</p>\n<pre><code>&#60;template&#62;\n    &#60;div&#62;\n        &#60;h1&#62;Guest page&#60;/h1&#62;\n        &#60;p&#62;You're seeing this page because you are not logged in&#60;/p&#62;\n    &#60;/div&#62;\n&#60;/template&#62;\n&#60;script&#62;\n&#60;/script&#62;\n&#60;style&#62;&#60;/style&#62;</code></pre>\n\n<p>Next, we create a <code>/login</code> route with this newly created page and add a meta property to other existing routes.</p>\n<div>\n<pre><code>    // create new route\n    {\n        path: '/login',\n        name: 'login',\n        component: () =&#62;\n            import ( /<em> webpackChunkName: \"auth\" </em>/ '../views/guest.vue')\n    }, {\n        path: '/:id',\n        name: 'Post',\n        props: true,a        // add meta property\n        meta: {\n            requiresAuth: true\n        },\n        component: () =&#62;\n            import ( /<em> webpackChunkName: \"post\" </em>/ '../views/Post.vue')\n    }</code></pre>\n</div>\n\n<p>The next thing would be to create the global navigation guard for all routes that require authentication and check the user’s authentication using <code>localStorage</code> (previously created). We would redirect users that have a <code>loggedIn</code> value of false to <code>/login</code>.</p>\n<div>\n<pre><code>router.beforeEach((to, from, next) =&#62; {\n    if (to.matched.some((record) =&#62; record.meta.requiresAuth)) {\n        // this route requires auth, check if logged in\n        // if not, display guest greeting.\n        const loggedIn = JSON.parse(localStorage.getItem(\"loggedIn\"));\n        if (!loggedIn) {\n            next({\n                path: '/login'\n            });\n        } else {\n            next();\n        }\n    } else {\n        next(); // make sure to always call next()!\n    }\n})</code></pre>\n</div>\n\n<p>So if you check your app in your browser, you would notice it is currently on this page:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/efe12761-3cc2-4b9f-a857-f37ddb265b02/07-guest-page-vue-router.png\" /></p>\n<p>If we try to navigate to any of the existing routes, we would automatically get redirected to this page no what we do and that means our router guard is effectively guarding those routes.</p>\n<h3>Conclusion</h3>\n<p>We can see that the Vue Router is a very powerful tool that can be used for more than just creating routes in your application. We have learned how to configure the scroll behavior of routes in our application, the different ways to add transitions to routes in our app, how to fetch data from an API before a component gets mounted, how to use meta property for our routes and the different ways to set up router guard.</p>\n<h4>Resources</h4>\n<ol>\n<li><a href=\"https://router.vuejs.org/\">Vue Router</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/07/css-transitions-vuejs-nuxtjs/\">CSS Transitions In Vuejs And Nuxtjs</a></li>\n</ol>\n","descriptionType":"html","publishedDate":"Mon, 31 Aug 2020 13:30:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9c79f83b-eeaa-47a7-a553-148e726a0b2d/vue-router-features.png","linkMd5":"5155f9648fe66b7e6f7f7224ebbda820","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn15@2020_3/2020/09/05/07-59-16-340_c9377f94315804b9.webp","destWidth":1201,"destHeight":631,"sourceBytes":285121,"destBytes":57894,"author":"hello@smashingmagazine.com (Timi Omoyeni)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9c79f83b-eeaa-47a7-a553-148e726a0b2d/vue-router-features.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5cbdcd62-1743-4dca-896e-5c2e2c503eb8/01-landing-page-vue-router.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7972db9e-971d-40b2-9e41-2dbc4a5105df/02-top-post-page.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn25@2020_6/2020/09/05/07-59-32-955_29111a62b40af441.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/852b446c-4def-4e6d-b449-bb0e560a3945/03-default-scroll-position-vue-router.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn90@2020_2/2020/09/05/07-59-24-886_97a1fbc30ee3226f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d39f1661-8ce5-4d9c-8c41-11f7f78844ee/04-new-scroll-position-vue-router.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn43@2020_6/2020/09/05/07-59-20-174_32e4e7cd7ab535c7.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6ee779b8-99de-4a61-a61a-20ac2dcdf988/05-guest-user-text.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn89@2020_3/2020/09/05/07-59-20-867_5e874c5210e71468.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/545e8950-9776-4648-be89-1acc3840fa6b/06-message-in-terminal-vue-router.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn38@2020_1/2020/09/05/07-59-27-169_a47543fafd378a5f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/efe12761-3cc2-4b9f-a857-f37ddb265b02/07-guest-page-vue-router.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn44@2020_2/2020/09/05/07-59-21-006_edc454a36a0a975d.webp"},"publishedOrCreatedDate":1599292755728},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Demystifying Django’s Magic","link":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/","description":"<p>According to the official documentation,</p> \n<blockquote>\n Django is a high-level Python Web framework that encourages rapid development and clean, pragmatic design. Built by experienced developers, it takes care of much of the hassle of Web development, so you can focus on writing your app without needing to reinvent the wheel. It’s free and open source.\n <br />\n <br />— \n <a href=\"https://www.djangoproject.com/\">DjangoProject.com</a>\n</blockquote> \n<p>It is one of Python’s popular framework for building web applications and is most preferred for its scalability in creating a boilerplate with laid down configurations and files. This wraps up the whole goal of Django for developers;</p> \n<blockquote>\n “...building a great application in little time and less worry over basic settings.”\n</blockquote> \n<p>There are basic configurations, files and styling that cuts across all web application, no matter what you’re building. When using Django, these are generated for you automatically when you run certain commands at different points in the development cycle of your application. With this, you’ll have enough time to focus on the core aspect of your developing your application while Django handles the others for you.</p> \n<p>It means that there are a lot of things happening underneath the hood. For someone who does not have a full grasp of the moving parts, this can be overwhelming. In this article we’re going to be learning about the following:</p> \n<ul> \n <li><a href=\"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/#installing-django\">Installation of Django</a></li> \n <li><a href=\"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/#startproject-startapp-commands\">The <code>startproject</code> and <code>startapp</code> commands</a></li> \n <li>Django configuration files which include;</li> \n <ul> \n  <li><a href=\"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/#settings-py-file\">settings.py</a></li> \n  <li><a href=\"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/#routing\">urls.py</a></li> \n  <li><a href=\"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/#manage-py-file\">manage.py</a></li> \n </ul> \n <li><a href=\"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/#models-layout\">Models Layout</a></li> \n <li><a href=\"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/#routing\">Routing</a></li> \n</ul> \n<p>We’ll learn how these all fit together and the role they play. It’s important to know that it will not be possible to take a look at everything happening inside of Django. For cases outside the scope of this tutorial, there will be links to point you to resources that will help with that.</p> \n<p>For learning purpose, we will be building an e-commerce platform. This is not a full-blown e-commerce site, our application will have only two basic features; creating products and making orders from the admin’s view. </p> \n<p>This article will guide you through understanding Django’s pre-built commands, files and basics. It is targeted at developers who have used Django or intend to use it and want to know what happens under the hood. While it is not compulsory that you must have used Django, having experience with the basics of Django before continuing with this article will give you an advantage. You need to have a working knowledge of Python to fully grasp what will be covered in this piece.</p> \n<h3>Installing Django</h3> \n<p>If you do not have Django installed already, here are the steps to do that. </p> \n<p>First, create a virtual environment, named <code>djangodev</code>. You need this to isolate your Django workspace and its dependent packages. </p> \n<pre><code>python3 -m venv ~/.virtualenvs/djangodev</code></pre> \n<p>Now to get into your virtual environment, you need to get it activated;</p> \n<pre><code>source ~/.virtualenvs/djangodev/bin/activate</code></pre> \n<p>If you get any error running with <code>source</code> you can make use of this alternative command,</p> \n<pre><code>. ~/.virtualenvs/djangodev/bin/activate</code></pre> \n<p>For Windows users, make use of this instead,</p> \n<pre><code>...\\&gt; %HOMEPATH%\\.virtualenvs\\djangodev\\Scripts\\activate.bat</code></pre> \n<p><strong>Note:</strong> You need to activate the virtual environment anytime you want to use Django.</p> \n<p>Now that you’re in your virtual env, install Django:</p> \n<pre><code>python -m pip install Django</code></pre> \n<p>To check if Django was properly installed, run;</p> \n<pre><code>python -m django --version</code></pre> \n<p>Shakaboom! Now you’re set for some magic, get your wands ready!</p> \n<p>The method of creating files and folders at the go might be simple and straightforward. However, it is not ideal when you have to create a medium or large project and a deadline to beat. We always have a deadline to beat, even for personal projects.</p> \n<p>Following this method when creating a new large project, you’ll have to create multiple files and folders and make multiple settings, which could lead to the creation of avoidable bugs and a lot of wasted time. <code>startproject</code> and <code>startapp</code> commands available to us through Django aim to solve this problem. These two commands create files, folders and carry out lots of configuration for you.</p> \n<p>Let’s get started by generating a new application using the <code>startproject</code> command.</p> \n<h3>Scaffolding An Application</h3> \n<p>We’ll generate our application and take a look at the files that are generated, as well as few commands we’ll use. Run this command in your terminal to get started;</p> \n<pre><code>django-admin startproject ecommerce_site</code></pre> \n<p>When installing Django, <code>django-admin</code> is added to your path to give it access to perform its actions. It’s Django’s command-line utility for administrative responsibilities. Learn more <code>django-admin</code> uses <a href=\"https://docs.djangoproject.com/en/3.0/ref/django-admin/\">here</a>; it is a little beyond the scope of this article.</p> \n<p><code>startproject</code> is a Django command that helps <em>generate the project</em>. Here we pass to it the name of our project <em>ecommerce_site</em>. It then goes on to create the project in a directory called <em>ecommerce_site</em>. The directory should look like this,</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5fae0b8f-c96c-4f9c-9393-6db1fdb696a0/ecommerce-site-demystifying-djangos-magic.png\" /></p> \n<p>We’ll need to navigate into the newly created directory and run the command to <em>generate the app</em>.</p> \n<pre><code>cd ecommerce_site\npython manage.py startapp trading</code></pre> \n<p><code>startapp</code> is a command executed by <code>manage.py</code> in the project directory, it creates multiple files, and a folder named using the name specified in the command, in this case, what’s specified is <code>trading</code>. The app folder consists of simple files that should be needed for creating features of an application. Now your directory should be looking like this:</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/017ae1ef-cb8b-44bc-afbe-1bf04eba5623/trading-demystifying-djangos-magic.png\" /></p> \n<p>If you’re wondering the difference between a project and an app. A project is a Django web application, it can consist of one or more apps. It’s the folder holding <code>manage.py</code> and the other <strong><em>module</em></strong> that includes the <code>settings.py</code> and other files. An app is a python package that does a certain feature, includes files like <code>models.py</code>, the <strong><em>migration</em></strong> directory and more. You can check out this <a href=\"https://stackoverflow.com/a/19351042/2119604\">answer</a> on Stack Overflow for more.</p> \n<p>The <code>startproject</code> will create the main project directory, while the <code>startapp</code> will create the app directory. Both are also been passed a name to be used in generation. The <code>startproject</code> is the first command run when creating a new project, while the <code>startapp</code> is run inside the new project directory. </p> \n<p>The current layout is a great mapping you can use for whatever application you are building. It’s scalable and consists of files you will be needing. There is a chance to create, rename, edit and move files within the project. </p> \n<h3>Django’s Configuration</h3> \n<p>Django provides different settings and configurations for you, after running the two commands in different files, let’s run through the generated files to learn what each does.</p> \n<h4><code>settings.py</code></h4> \n<p>Most web applications need configurations like; authentication to verify users, permissions to allow certain users with certain abilities and set security standards. All these are needed to give your users the best experience needed. It will take a long time for you as a developer to begin to roll each of these on your own, for every application you work on.</p> \n<p>Django provides you with these needed configurations and more — such that you can opt for the ones you want and plug them in. These are done in <a href=\"https://gist.github.com/gabbyprecious/42783e465e727e67a098f8ff42f943bd\"><code>settings.py</code></a>, there are already laid settings created to provide basic functionalities for you. </p> \n<p>When Django tries to run a project, there are certain variables it looks for. The <code>settings.py</code> is the file holding those variables that lead to other files or information. Django is directed to this file from the <code>manage.py</code> file and takes information or loads other files it is led to from here. </p> \n<p>These configurations include:</p> \n<ul> \n <li><code>DEBUG</code><br />The <code>DEBUG</code> functionality is set to <code>True</code> to enable reading of errors and debugging code in development, it should be set to <code>False</code> during production (i.e when you are deploying). This setting allows you to be able to debug your code better with the help of Django when it tries running your code.</li> \n <li><code>INSTALLED_APPS</code><br />This is a list of all apps performing a certain feature in Django. It comes with some defaults apps like the <code>'django.contrib.auth'</code> which is used for user authentication, <code>django.contrib.admin'</code> for admin functionality, and <code>'django.contrib.messages'</code> needed in sending notification or info to users. Any other app you create using the <code>startapp</code> command will have to be in here before it can be run by Django. </li> \n <li><code>MIDDLEWARE</code> is a lightweight framework for processing inputs and outputs going through Django requests and responses. Each middleware does a specific function with an app, like the <code>'django.contrib.auth.middleware.AuthenticationMiddleware'</code> works with the <code>'django.contrib.sessions'</code> to associate users with requests. You should check out further features of each middleware on the <a href=\"https://docs.djangoproject.com/en/3.0/ref/middleware/\">docs</a>.</li> \n <li><code>ROOT_URLCONF</code> is a variable to a path where Django looks for your <code>urlpatterns</code> when a request is passed to your Django application. Whenever a request is made in a Django application, Django searches this variable and loads the leading file and loops though the <code>urlpatterns</code> list in search for the matching path.</li> \n <li><code>TEMPLATES</code> is a setting to allow rendering of HTML files to represent a view. It communicates with the request, auth and messages apps. The <code>'BACKEND'</code> value and the <code>'APP_DIRS'</code> set to <code>True</code> enables Django to search for HTML files within <strong>/templates</strong> folder. The <code>'context_processors'</code> in the <code>OPTIONS</code> are <em>callables</em>, that take in the request as an argument and merge it with the context when a template is been rendered, these callables work to help with debugging, authentication, and handling of requests generally. </li> \n <li><code>WSGI_APPLICATION</code> is a path leading to the <code>application</code> variable in <code>wsgi.py</code> file.</li> \n <li><code>DATABASE</code> is a dictionary that holds access to an external database(or internal like in the case of the default sqlite) like PostgresSQL, MySQL and MongoDB. Here is an example of a Postgres database I will be using for our example:</li> \n</ul> \n<pre><code>DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql_psycopg2',\n        'NAME': 'db_name',\n        'USER': 'db_user',\n        'PASSWORD': 'db_password',\n        'HOST': 'localhost',\n        'PORT': '',\n    }\n}</code></pre> \n<p>You can decide to use the default sqlite database, this doesn’t work great for production. You can set up a Postgres database like above, you will have to create the database first and pass the user, password with write permission to the database. </p> \n<p><strong>Note</strong>: <em>For the purpose of this tutorial you can use the default sqlite database set already. The above is a demonstration on how you can set SQL and NO-SQL database connection in Django.</em></p> \n<ul> \n <li><code>AUTH_PASSWORD_VALIDATORS</code> these are functions that are called for password validations. They are called when creating users (and admins too) records, resetting and changing passwords. You can learn more about them from the official <a href=\"https://docs.djangoproject.com/en/3.0/topics/auth/passwords/#enabling-password-validation\">documentation</a>. </li> \n</ul> \n<p>More documentation on settings can be found <a href=\"https://docs.djangoproject.com/en/3.0/ref/settings/\">here</a>.</p> \n<h4><code>manage.py</code></h4> \n<p>Most web projects need an entry point where commands start from. An entry point acting as a gateway into the application. In every Django project, it is usually the <a href=\"https://gist.github.com/gabbyprecious/0938bc50bfc729a82f256d526ed955d0\"><code>manage.py</code></a> file.</p> \n<p>This file is needed as a starting point in your application. From here, all commands are run and everything starts up here. </p> \n<p><code>manage.py</code> does the same function as <a href=\"https://docs.djangoproject.com/en/3.0/ref/django-admin/\">django-admin</a>. It also tells Django the location for the configurations you have in your application. This is set by default and does not need to be changed. </p> \n<p>It uses <code>def main()</code> function to handle the default settings module to our <code>settings.py</code> file. It tries to import the execute function, and if it runs into error it throws the <code>ImportError</code>. Otherwise, it takes in whatever argument is passed by the <code>sys.argv</code> from the command line and executes. </p> \n<p><code>sys.argv</code> is a list that takes in the command passed in via the terminal. When we run <code>python manage.py runserver</code> in the command line, <code>sys.argv</code> gets set to <code>[\"manage.py\", \"runserver\"]</code> and this is passed to the <code>execute()</code> function. </p> \n<p>Arguments like <code>python manage.py startapp trading</code> or <code>python manage.py makemigrations</code> are set to <code>[ \"manage.py\", \"startapp\", \"trading\"]</code> and <code>[\"manage.py\", \"makemigrations\"]</code> respectively for execution. </p> \n<p>The if statement is set to run if the command given set to <code>manage.py</code>.</p> \n<p>Aside from running <code>django-admin</code> functions, you will be using it in running server, handle migrations, and other commands your project will be using. You will also need it when deploying, testing and debugging your projects. </p> \n<h3>Model Layout</h3> \n<p>Django provides a simple modelling layout for you. You configure your models in the <code>models.py</code> file in the <code>trading</code> directory. Your classes (or models) are layouts your database tables will follow. </p> \n<p>You define your classes based on the data types you want to get from the user(or the admin) for each table. Our models create a migration file that works with the <code>DATABASE</code> variable in the <code>settings.py</code>.</p> \n<p>Let’s create two models we’ll need, for products and orders:</p> \n<div> \n <pre><code>from django.db import models\n\nclass Product(models.Model):\n    name = models.CharField(max_length=50)\n    image = models.ImageField(upload_to='products', default='python.png')\n    price = models.IntegerField()\n    description = models.TextField()\n\n    def <strong>str</strong>(self):\n        return self.name\n\nclass Order(models.Model):\n    product =  models.ForeignKey(Product, on_delete=models.CASCADE)\n    quantity = models.IntegerField()\n    date = models.DateField(auto_now_add=True)\n    user = models.CharField(max_length=50)\n\n    def <strong>str</strong>(self):\n        return self.user</code></pre> \n</div> \n<p>The product model has a name, price, description and an image (which when saved will be uploaded to a <code>products</code> folder. This gets created if it folder doesn’t exist) columns. The <code>order</code> has a <code>product</code> (linked to the <code>products</code> table), the quantity, date and user columns. </p> \n<p>With this information, Django creates a database schema for the app. Also, creates a Python database-access API for accessing Product and Order objects. Django has a built migration tool so you don’t have to use external packages for migrations.</p> \n<p>Next step is to run the migration command and migrate to the database. But before we do that, we have to register <code>trading</code> as an app in our project directory. </p> \n<p>First off, we have to configure the trading directory as an app in Django. Django has that done for you in the <code>app.py</code> file. This file registers <code>trading</code> as an app and will be further used in the <code>settings.py</code> file. </p> \n<p>Now, in <code>settings.py</code> add <code>trading</code> in <code>INSTALLED_APP</code>. It should look like this:</p> \n<pre><code>INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'trading.apps.TradingConf',\n]</code></pre> \n<p>On the terminal, run: </p> \n<pre><code>$ python manage.py makemigrations trading\n$ python manage.py migrate</code></pre> \n<p><strong>Note:</strong> Your virtual environment must be activated and you should be inside the project directory. </p> \n<p><code>python manage.py makemigrations trading</code> takes note of changes made in the trading module and creates a file in the <code>migration</code> folder of changes in <code>models.py</code> and <code>python manage.py migrate</code> then updates the changes. </p> \n<p>You can find the generated migration file from the <code>python manage.py makemigrations trading</code> command in the <code>migration</code> directory named <code>0001_initial.py</code>. You can see the classes and columns as commands for creation inside the file. As more changes in <code>models.py</code> are made, more files will be generated here.</p> \n<h3>Admin Features</h3> \n<p>In our current application, we’ll need admin features to manage the products and orders that will be created in the application. Django provides us with an in-built admin functionality already at our disposal. The admin app(feature) has also been registered in our <code>INSTALLED_APP</code> list; <code>'django.contrib.admin'</code>. </p> \n<p>Also, the URL for the admin has also been registered in the <code>urlpatterns</code> list our URL configuration file <code>urls.py</code>; <code>path('admin/', admin.site.urls),</code>. The <code>admin.py</code> file makes it possible for you to register models and the CRUD actions that are to be performed on the models.</p> \n<p>To set up the admin, run this on the terminal:</p> \n<pre><code>$ python manage.py createsuperuser</code></pre> \n<p>You’ll be prompted to enter a username, email and password. After that, you’ve successfully created an admin. To get started with the admin functionality, run the server:</p> \n<pre><code>$ python manage.py runserver</code></pre> \n<p>Visiting <a href=\"http://127.0.0.1:8000/admin/\">http://127.0.0.1:8000/admin/</a> will lead to a login session, when you log in (with username and password you created) you are directed to admin dashboard:</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/057ff96c-1dbc-4b27-bc38-8e09ed6acf4e/admin-demystifying-djangos-magic.png\" /></p> \n<p>The groups and users are default configurations that allow <a href=\"https://docs.djangoproject.com/en/3.0/ref/contrib/admin/\">admin</a> to access user management and permission. Now let’s register our models. </p> \n<p>In the <code>admin.py</code>, add the following lines:</p> \n<pre><code>from django.contrib import admin\n\n# Register your models here.\nfrom .models import Product, Order\n\nadmin.site.register(Product)\nadmin.site.register(Order)</code></pre> \n<p><code>from django.contrib import admin</code> imports the admin functionality from Django, and then we imported the two classes from our <code>models.py</code> and registered them so an admin can perform CRUD actions on products and order from the dashboard. </p> \n<p>After registering the models, your dashboard should look like this: </p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45f161a9-2aca-4999-9981-5bd6a335a688/admin-1-demystifying-djangos-magic.png\" /></p> \n<p>Adding products:</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d175a919-f3ad-4eb6-8dff-a307d48053f6/addproduct-demystifying-djangos-magic.png\" /></p> \n<p>Making orders from admin dashboard:</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0f945876-f286-45d9-bfa1-816c91dc8a02/makeorder-demystifying-djangos-magic.png\" /></p> \n<h3>Easy Routing</h3> \n<p>Every site needs route or URLs leading to specific pages with certain information for the end-user. Collections of similar information or application are accessed in a particular route. There is a need for grouping routes together for accessibility and communication within files. Django has that done for you in the <a href=\"https://gist.github.com/gabbyprecious/e384f8773d0b9031b79c4d0c0699e0b1\"><code>urls.py</code></a> file. </p> \n<p>The <code>urls.py</code> is a file leading from the <code>ROOT_CONF</code> variable in the <code>settings.py</code>. This is where our main URL configuration is done. When we create views in different files or folders, or even in the <code>urls.py</code> file, they have to be configured in the <code>urlpatterns</code> list. </p> \n<p>Django expects a list named <code>urlpatterns</code> in the file. You can change the file in the <code>ROOT_CONF</code> variable to any other file which you placed the <code>urlpatterns</code> list.</p> \n<pre><code>urlpatterns = [\n    path('admin/', admin.site.urls),\n]</code></pre> \n<p>The list consists of objects that are instances of <code>path</code> or <code>re-path</code>. Each instance has two compulsory parameters, the pattern <code>'admin/'</code>, and a view or URL file, <code>admin.site.urls</code>. </p> \n<p>The instances could also be leading to another file with more URL configurations. This is done for readability. </p> \n<h4><code>views.py</code></h4> \n<p>An important need for a backend application is the views which each route maps to. In Django, you write your function or class based views for an app in the <code>views.py</code> file. A view is a class or function that processes a request and sends back a response to your user. </p> \n<p>Edit your <code>views.py</code> file to this:</p> \n<div> \n <pre><code>from django.http import HttpResponse\n\ndef home(request):\n    return HttpResponse(\"This is a shopping site for products\")\n\ndef order(request):\n    return HttpResponse(\"Hello, welcome to our store, browse to our products and order!\")</code></pre> \n</div> \n<p>Here we imported <code>HTTPResponse</code> to use it in defining two views (function views) to return sentence when called on. <code>def home</code> should be called when you visit the primary address and <code>def order</code> when you access the order URL. </p> \n<p>After creating our views we need to assign it to different routes(or <code>urlpatterns</code>). That can be done in several ways, we can create a <code>urlpatterns</code> list in the same file, or we could import <code>trading.views</code> into <code>ecommerce_site.urls</code> file and create the path. </p> \n<p>The preferred way to do so is creating a sub URL configuration file (inside <code>trading</code>), and including it in <code>ecommerce_site.urls</code>. Create a <code>urls.py</code> file in the <code>trading</code> directory. Your directory should look like: </p> \n<pre><code>trading/\n    __init__.py\n    admin.py\n    apps.py\n    migrations/\n        __init__.py\n        0001_initial.py\n    models.py\n    tests.py\n    urls.py\n    views.py</code></pre> \n<p>Add the following code to your new file (<code>urls.py</code>)</p> \n<pre><code>from django.urls import path\n\nfrom . import views\n\nurlpatterns = [\n    path('', views.home, name='home'),\n    path('order/', views.order, name='order'),\n]</code></pre> \n<p>Let’s register the <code>trading</code> URL configuration file(<code>urls.py</code>) in the project URLs configuration file,</p> \n<pre><code>from django.contrib import admin\nfrom django.urls import include, path\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('trading.urls'))\n]</code></pre> \n<p>To be able to access the <code>urlpatterns</code> we will use the <code>include</code> class from <code>django.urls</code> in line 2. Then chose a pattern and attached the <code>urls.py</code> file in the trading directory. </p> \n<p>What we did here was to import the <code>path</code> class from django, and the <code>views.py</code> file. Then our list consists of two path instances for each view. So <code>def home</code> is called on <a href=\"http://127.0.0.1:8000/\">http://127.0.0.1:8000/</a>.</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d5531b5-f78d-4cda-8d8c-d069055246fa/def-home-demystifying-djangos-magic.png\" /></p> \n<p>And <code>def order</code> is called on <a href=\"http://127.0.0.1:8000/order/\">http://127.0.0.1:8000/order/</a>.</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d8fafcd8-8f1c-4e69-8afe-4d0746037444/def-order-demystifying-djangos-magicpng.png\" /></p> \n<p><strong>Note:</strong> The process of running <code>startproject</code> and <code>startapp</code> is not compulsory but highly encouraged by Django. And you can create/move files and folders after running each command to your working convenience. </p> \n<h3>Dependency Tree</h3> \n<p>Here is the process in which Django processes requests from URLs coming:</p> \n<ol> \n <li>Django searches for the root location (path) for your URLs in the <code>ROOT_CONF</code> variable. </li> \n <li>Django loads the python file given in the path provided. And locates the <code>urlpatterns</code> variable, this is a list containing all instances of <code>django.urls.path()</code> and/or <code>django.urls.re_path()</code>. </li> \n <li>In the list, Django goes in order and looks for a matching URL. </li> \n <li>Python, imports and calls the view (either function-based or class-based view). Which is furthered passed with the HTTP request.</li> \n <li>The view processes the request and information passed and either returns a message/template or redirects to another view. </li> \n <li>If no URL pattern matches, or if an exception is raised during any point in this process, Django invokes an appropriate error-handling view.</li> \n</ol> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e65ef97f-74bd-4582-8c7f-4f771622a68a/tree-demystifying-djangos-magic.jpg\" /></p> \n<h3>Conclusion</h3> \n<p>We have learnt of the possibility of creating files for Django without the command line. Also we have learnt the advantages and the building block of a Django Project. Django is an amazing tool in building backend projects with the goal to create simplicity. </p> \n<p>You can check out the code for this tutorial on <a href=\"https://github.com/gabbyprecious/ecommerce_site/\">GitHub</a>.</p> \n<h4>Resources</h4> \n<ul> \n <li><a href=\"https://docs.djangoproject.com/en/3.0/topics/auth/passwords/\">Password management in Django</a></li> \n <li><a href=\"https://docs.djangoproject.com/en/3.0/intro/\">Django: Getting started</a></li> \n <li><a href=\"https://docs.djangoproject.com/en/3.0/ref/settings/\">Django: Settings</a></li> \n <li><a href=\"https://www.oreilly.com/library/view/lightweight-django/9781491946275/ch01.html\"><em>Lightweight Django</em> by O'Reilly</a></li> \n</ul>","descriptionType":"html","publishedDate":"Fri, 28 Aug 2020 07:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3b6fd034-e3ca-43fe-96a8-64fed37b4667/demystifying-djangos-magic.png","linkMd5":"90725d421e0a2e80cbc6fae6b90f5416","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn38@2020_6/2020/09/05/07-59-16-321_115defa28278fbb6.webp","destWidth":1201,"destHeight":631,"sourceBytes":281560,"destBytes":55822,"author":"hello@smashingmagazine.com (Precious Ndubueze)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3b6fd034-e3ca-43fe-96a8-64fed37b4667/demystifying-djangos-magic.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5fae0b8f-c96c-4f9c-9393-6db1fdb696a0/ecommerce-site-demystifying-djangos-magic.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn48@2020_6/2020/09/05/07-59-19-816_fb2e70efdee02915.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/017ae1ef-cb8b-44bc-afbe-1bf04eba5623/trading-demystifying-djangos-magic.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/057ff96c-1dbc-4b27-bc38-8e09ed6acf4e/admin-demystifying-djangos-magic.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn65@2020_3/2020/09/05/07-59-29-612_f85c6db7f1cd1855.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45f161a9-2aca-4999-9981-5bd6a335a688/admin-1-demystifying-djangos-magic.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn68@2020_2/2020/09/05/07-59-33-825_774625e20b96a45f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d175a919-f3ad-4eb6-8dff-a307d48053f6/addproduct-demystifying-djangos-magic.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0f945876-f286-45d9-bfa1-816c91dc8a02/makeorder-demystifying-djangos-magic.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn6@2020_3/2020/09/05/07-59-30-112_e2651016513df790.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d5531b5-f78d-4cda-8d8c-d069055246fa/def-home-demystifying-djangos-magic.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn25@2020_1/2020/09/05/07-59-37-294_c4d9dd6aacd6e79d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d8fafcd8-8f1c-4e69-8afe-4d0746037444/def-order-demystifying-djangos-magicpng.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn65@2020_3/2020/09/05/07-59-39-404_c29e8a78cd7fe268.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e65ef97f-74bd-4582-8c7f-4f771622a68a/tree-demystifying-djangos-magic.jpg":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn62@2020_6/2020/09/05/07-59-25-399_29dfec2687f99e70.webp"},"publishedOrCreatedDate":1599292755732},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"The Renaissance Of No-Code For Web Designers","link":"https://smashingmagazine.com/2020/07/renaissance-no-code-web-designers/","description":"<p>The word Renaissance — which means “rebirth” in French — was given to a tremendous period of philosophical and artistic achievements that began in the 14th century.</p>\n<p>During this time, there were a wide range of developments, including:</p>\n<ul>\n<li>Use of oil paints, rather than tempera, which made the painting process easier.</li>\n<li>Use of fabric, rather than wooden boards, which reduced the expenses of painting.</li>\n<li>Translation of classical texts in architecture, anatomy, philosophy, and more, making knowledge more accessible to the general public.</li>\n</ul>\n<p>These developments and more made the Renaissance one of the most productive artistic eras in history, dramatically reducing the creative barrier and attracting a large audience rather than just a small group of elites.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/73a2316f-0633-4523-b3dc-3b23bc97fe47/stone-block-example.jpg\" /></p>\n<p>Just like the Renaissance era, today’s web design field is exploring its potential through no-code development platforms (NCDPs). These tools allow non-programmers to create application software through graphical user interfaces and configuration, instead of traditional computer programming.</p>\n<h3>The Designer/Developer Mental Model</h3>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6f4547a-1e9d-435f-9e3f-1b9beda062ea/5-renaissance-no-code-web-designers.jpg\" /></p>\n<p>In 2000, usability expert Jakob Nielsen introduced “Jakob’s Law,” the idea that users develop mental models of the products they interact with based on their previous experience. The more users can focus on their goal without challenging this mental model, the easier it is for them to achieve that goal.</p>\n<blockquote>“CSS is closer to painting than Python.”<br />— Chris Coyier, co-founder at CodePen</blockquote>\n\n<p>Design and development skills are rooted in different types of thinking and require different types of tools. While designers use WYSIWYG editors like Figma, Sketch, and Photoshop to place elements on the canvas, developers work with IDEs like VSCode, Webstorm, and Brackets. In order to remain productive, designers and developers need to be able to make changes and receive instant feedback, according to their mental model.</p>\n<p>So, using drag and drop builders may actually interfere with developers who want to debug fast, but working only with a text editor may be inappropriate for designers who want to test composition.</p>\n<h4>Designers And Code</h4>\n<p>Many designers understand the functional differences between a mockup and a working product. In order to understand the possibilities of the medium, where to draw the boundaries and how to deal with the constraints, many designers are willing to “get their hands dirty” when it comes to learning code — but they have difficulties. </p>\n<p>One of the main reasons designers are not coders is because there is a large gap between the designer's mental model and the conceptual model of many code editors. Design and development take two very different modes of thought. This mismatch leads to a difficult and frustrating learning curve for designers that they might not be able to overcome. </p>\n<h4>Code Abstraction</h4>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4c2c1f23-263a-4686-aecd-2b0774454b0b/4-renaissance-no-code-web-designers.jpg\" /></p>\n<p>Abstraction is a core concept of computer science. Languages, frameworks, and libraries are built on different abstraction layers of complexity to facilitate, optimize, and guarantee productivity.</p>\n<blockquote>“Visual programming tools abstract code away from the creator, making them significantly more accessible. The real magic of these tools, however, is how they integrate all of the underlying layers of software into end products, providing useful functionality through modular components that can be harnessed through intuitive visual interfaces.”<br />— Jeremy Q. Ho, <a href=\"https://jeremyqho.com/no-code-is-new-programming\">No Code is New Programming</a></blockquote>\n\n<p>When working with abstraction layers, there are tools such as <a href=\"https://www.editorx.com\">Editor X</a> and <a href=\"https://studio.design/\">Studio</a> for websites/web applications, <a href=\"https://draftbit.com/\">Draftbit</a> and <a href=\"https://kodika.io/\">Kodika</a> for mobile apps, and <a href=\"https://www.modulz.app/\">Modulz</a> for design systems, which enable a visual representation of code, in addition to code capabilities.</p>\n<p>By adopting a familiar visual medium, the learning curve becomes easier for designers. </p>\n<p>If Chris Wanstrath the co-founder and former CEO of GitHub said, <a href=\"https://www.idgconnect.com/idgconnect/opinion/1011905/github-ceo-future-coding-coding\">“the future of coding is no coding at all,”</a> then surely no-code is a legitimate way to develop — despite the perception that these tools don't offer the flexibility to write your own code, line by line.</p>\n<p>Indeed, we see that interest in the term “nocode” is growing:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db4d2c7e-c7e8-42cb-a147-61f3c413bb0f/2-renaissance-no-code-web-designers.png\" /></p>\n<h4>Difference Between Imperative And Declarative Programming</h4>\n<p>In order to understand the development of no-code tools for designers, you need to know the distinction between two types of programming:</p>\n<ol>\n<li><strong>Imperative Programming</strong><br />Deconstruct the result into a sequence of imperatives, i.e. explicit control flow. For example: JavaScript, Python, C ++.</li>\n<li><strong>Declarative Programming</strong><br />Declare the result, i.e. implicit control flow. For example: SQL, HTML, CSS.</li>\n</ol>\n<p>Declarative languages are often domain-specific languages, or DSL, which means they’re used for a specific purpose, in a specific domain.</p>\n<p>For example, SQL is DSL for working with databases, HTML is DSL for adding semantic structure and meaning to content on a web page, and CSS is DSL for adding style.</p>\n<blockquote>“There are too many variables to consider. The point of CSS is to make it so you don’t have to worry about them all. Define some constraints. Let the language work out the details.”<br />— Keith J. Grant, <a href=\"https://keithjgrant.com/posts/2018/06/resilient-declarative-contextual/\">Resilient, Declarative, Contextual</a></blockquote>\n\n<p>Imperative programming sets specific, step-by-step instructions to the browser to get the desired result, while declarative programming states the desired result and the browser does the work by itself.</p>\n<h3>The Middle Ages</h3>\n<p>The effort to create a visual interface tool for web design development started in the 1990s through groundbreaking attempts like InContext Spider, Netscape Navigator Gold, Microsoft FrontPage, and of course, <a href=\"https://web.archive.org/web/20030215141658/www.intranetjournal.com/reviews/dw.shtml\">Dreamweaver</a>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a0065eb-a81e-4c55-b851-00da3d527e5b/9-renaissance-no-code-web-designers.png\" /></p>\n<p>During this period, the common terminology included: <em>visual HTML authoring tool, WYSIWYG web page compositor</em>, or simply <em>HTML editor</em>. The term “no-code” was popular in the 1990s — but for a different reason. In 1996, the American rock band Pearl Jam released their fourth studio album, <em>No Code</em>.</p>\n<p>These no-code tools dramatically reduced the creative barrier and attracted a large audience, the Internet wasn't ready for these types of tools at the time.</p>\n<p>This effort was limited for the following reasons:</p>\n<h4>1. Layout</h4>\n<p>When the inventor of the World Wide Web Tim Berners-Lee launched his creation in 1989, he didn’t offer a way to design a website.</p>\n<p>This came along in October 1994, after a series of suggestions on how to design the Internet by different people — including one from Håkon Wium Lie — who proposed an idea that attracted everyone’s attention. Lie believed in a declarative style that would allow browsers to handle the processing — it was called Cascading Style Sheets, or simply CSS.</p>\n<blockquote>“CSS stood out because it was simple, especially compared to some of its earliest competitors.”<br />— Jason Hoffman, <a href=\"https://css-tricks.com/look-back-history-css/\">A Look Back at the History of CSS</a></blockquote>\n\n<p>For a long time after, CSS provided design solutions for a single object — but it didn’t give an adequate response to the relationship between the objects.</p>\n<p>Methods to address this were effectively hacks, and they weren’t able to handle a great deal of complexity. As sites evolved from simple documents to complex applications, web layouts became difficult to assemble. Instead of using a style in a declarative way as Lie designed, web developers were forced to use imperative programming.</p>\n<p>A grid system based on the rules of Swiss designer Josef Müller-Brockmann that was customary in print from the 1940s seems like a distant dream when considering anything related to the Web.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0ea5d3fb-f38a-42f8-9169-ff9cf53f9211/1-renaissance-no-code-web-designers.png\" /></p>\n<p>Because of these layout limitations, no-code platforms were forced to add an abstract layer to perform backstage calculations. This layer causes a range of problems, including losing the semantic value of the objects, performance issues, bulky code, a complex learning curve, unscalability, and accessibility issues.</p>\n<h4>2. Browser Alignment</h4>\n<p>In the early days, browser makers were the ones who decided how to build the Internet. This led to the Web becoming a manipulative commodity. Competition between browsers led to unique “design features”. This forced the need to rebuild the same site several times, so it could be accessed from multiple browsers.</p>\n<blockquote>“Developers in the 90s would often have to make three or four versions of every website they built, so that it would be compatible with each of the browsers available at the time.”<br />— Amy Dickens, <a href=\"https://www.smashingmagazine.com/2019/01/web-standards-guide/\">Web Standards: The What, The Why, And The How</a></blockquote>\n\n<p>To offset the need to build websites that fit specific browsers, the World Wide Web Consortium (WC3) community was established at MIT in 1994. The WC3 is an international community working to develop functional, accessible and cross-compatible web standards.</p>\n<p>When the standards were introduced, browser makers were encouraged to stick to one way of doing things — thus preventing several versions of the same site from being built. Despite WC3’s recommendations, it took a long time for browsers to meet the same standards.</p>\n<p>Due to a lack of alignment between the browsers (Internet Explorer, I’m looking at you), CSS for a time was stuck and no new capabilities were added. Once a declarative language doesn’t support something, it requires you to lean on all kinds of imperative hacks in order to achieve that goal.</p>\n<h4>3. Data Binding</h4>\n<p>In the early years of the Web, sites were developed as a collection of static pages with no semantic meaning. When Web 2.0 arrived, it received the description “the web as a platform,” which led to a significant change — pages had dynamic content, which affected the connection to the data, and of course the semantic meaning.</p>\n<blockquote>“Sites in the 1990s were usually either brochure-ware (static HTML pages with insipid content) or they were interactive in a flashy, animated, JavaScript kind of way.”<br />— Joshua Porter, <a href=\"http://www.digital-web.com/articles/web_2_for_designers/\">Web 2.0 for Designers</a></blockquote>\n\n<p>Indeed, connecting to data using a no-code approach has existed for a long time — but the user experience was difficult. Additionally, the transition to semantic marking so content could be detected in no-code tools was difficult because of the mixing between declarative and imperative programming.</p>\n<p>No-code tools didn’t mesh with those core tasks.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94363a36-e9b9-4f1b-bf90-6254d8c2bc67/3-renaissance-no-code-web-designers.jpg\" /></p>\n<h3>Proto-Renaissance</h3>\n<p>On June 29, 2007, the nature of the Internet was changed dramatically. This was the day when Steve Jobs introduced the iPhone — a combination of mobile phone and media player that connected to the Internet and enabled multi-touch navigation.</p>\n<blockquote>When the iPhone was introduced in 2007, it was a turning point for web design. All of a sudden web designers lost control of the canvas on which we designed websites. Previously, websites only had to work on monitor screens, which varied in size, but not all that much. How were we supposed to make our websites work on these tiny little screens?<br />— Clarissa Peterson, <a href=\"http://shop.oreilly.com/product/0636920029199.do\">Learning Responsive Web Design</a></blockquote>\n\n<p>This created new challenges for web design development. Mainly, how to build a site that can be used on multiple types of devices. Many “hack” approaches to layout design simply fell apart — they caused more problems than they solved.</p>\n<p>Everything needed to be reevaluated.</p>\n<h3>The No-Code Renaissance</h3>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e357067a-16f8-4870-aeea-aa086318f697/8-renaissance-no-code-web-designers.jpg\" /></p>\n<p>Browsers supporting WC3 standards (Chrome and Firefox ) <a href=\"https://en.wikipedia.org/wiki/Usage_share_of_web_browsers\">have huge market share</a> today, which has pushed more browsers to support the standards. The fact that all of the browsers support the same standard, enable alignment in the building of sites and ensure these capabilities would continue to work as standards and browsers evolve.</p>\n<p>Methods such as media query, flexbox and grid — which are natively available in the browsers for layout design — have paved the way for flexible layouts, even when element sizes are dynamic.</p>\n<blockquote>“When CSS Grid shipped in March 2017, our toolbox reached a tipping point. At last we have technology powerful enough to let us really get creative with layout. We can use the power of graphic design to convey meaning through our use of layout—creating unique layouts for each project, each section, each type of content, each page.”<br />— Rachel Andrew, <a href=\"https://rachelandrew.co.uk/books/the-new-css-layout\">The New CSS Layout</a></blockquote>\n\n<p>In this way, HTML became cleaner and it was able to achieve its original purpose: a semantic description of the content.</p>\n<p>Finally, thanks to alignment between the browsers and new capabilities, no-code tools are backed by powerful, uniform technology. These changes created a clearer distinction between declarative and imperative. New possibilities were created to solve old problems.</p>\n<blockquote>“Simplicity is the ultimate sophistication.”<br />— Leonardo da Vinci</blockquote>\n\n<h4>The Effect Of No-code On Designers</h4>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2933c182-3a9a-43fb-8938-a1da8b33f557/9-renaissance-effect-no-code-web-designers.png\" /></p>\n<p>The developments of the Internet over the years has led to a situation where the abstraction between design and code is constantly improving. This has implications for the way web designers plan and implement their designs.</p>\n<h5>1. Design Planning</h5>\n<p>While popular design tools use static content for dynamic web design, no-code tools allow designers to work with the web’s own materials.</p>\n<blockquote>“Photoshop is the most effective way to show your clients what their website will never look like.”<br />— Stephen Hay, author of Responsive Design Workflow</blockquote>\n\n<p>If we have a complex design with different states, micro-interactions, animations and responsive breakpoints — by using no-code tools we can work in a more tangible way. </p>\n<p>Additionally, the development of the web enables no-code tools to clearly separate content from the design (which allows designers to visually manage real content). Reflecting the dynamic content in the design (e.g. text, images, videos, and audio), gives designers a clearer understanding of how it will appear.</p>\n<p>The advantage of working in the no-code workspace is that interactions appear immediately. This allows designers to quickly test their design choices and see if they work.</p>\n<h5>2. Design Implementation</h5>\n<p>After investing in design perfection, designers should explain the visual and conceptual decisions to developers through prototypes. Prototypes not only take time in terms of preparation, but their design is also often implemented incorrectly due to misinterpretations.</p>\n<p>With no-code tools, designers are able to place objects on their display and handle their visibility and behavior with ease and speed. In other words, they can design the end result without depending on anyone else.</p>\n<p>To use myself as an example, when the Coronavirus pandemic hit, I worked with a small team on <a href=\"https://www.happy2talk.org/homeen\">a project to help connect young volunteers to isolated seniors</a>. In just three days, myself and another designer built the website and connected user registration data to a database, while the team’s developer worked to integrate data from the site into a separate mobile app.</p>\n<h4>The Effect Of No-code On Developers</h4>\n<p>Will no-code tools completely replace developers? The short answer: No. The significant change is in the way designers and developers can work together to create websites.</p>\n<p>In addition to the development of CSS, Javascript has also evolved in parallel and perhaps even more. The idea that frontend developers need to control all the abilities makes no sense. And yet, the development of no-code over the years has enabled designers to build their own designs.</p>\n<p>It’s a win-win situation, in which  developers can focus on developing logic, and designers have more control over the user experience and styling.</p>\n<h3>The Effort Is Not Yet Complete</h3>\n<p>I don’t want to leave you with the impression that designers have complete freedom to design with no-code tools. There are still some missing style capabilities that CSS has not yet solved, and these still require imperative development.</p>\n<p>Unlike in the Middle Ages, where art was considered as handicraft without a theoretical basis, Renaissance developments changed the status of the artist — who was suddenly considered a polymath.</p>\n<p>No-code tools remove bottlenecks, which allows designers to gain more ownership, influence, and control over the experiences they design.</p>\n<p>We’ve come a long way from the days when designers weren’t able to bring their designs to life. As the Internet evolves, browsers align, capabilities are added and the accessibility of technology becomes easier — designers are faced with new opportunities to create, think, and change their status with no-code tools.</p>\n<p>The no-code movement not only affects how things are done, but by who.</p>\n<p><strong>Credits</strong>: <em>Yoav Avrahami and Jeremy Hoover contributed to this article.</em></p>\n<h4>Further Reading on SmashingMag:</h4>\n\n<ul>\n<li><a href=\"https://www.smashingmagazine.com/2020/06/vitruvius-web-design/\">What Vitruvius Can Teach Us About Web Design</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/01/split-personality-brutalist-web-development/\">The Split Personality Of Brutalist Web Development</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/11/newspapers-teach-web-design/\">What Newspapers Can Teach Us About Web Design</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/02/foldable-web-meaning/\">What Does A Foldable Web Actually Mean?</a></li>\n</ul>\n\n\n\n","descriptionType":"html","publishedDate":"Thu, 30 Jul 2020 13:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d938f7b6-62df-4844-b3ab-5b274ac28602/renaissance-no-code-web-designers.png","linkMd5":"5dc2ee4cf02a8d13b4ca79f601851ab2","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn66@2020_1/2020/09/05/07-59-16-744_4a421c39da753c62.webp","destWidth":1201,"destHeight":631,"sourceBytes":223735,"destBytes":48050,"author":"hello@smashingmagazine.com (Uri Paz)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d938f7b6-62df-4844-b3ab-5b274ac28602/renaissance-no-code-web-designers.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/73a2316f-0633-4523-b3dc-3b23bc97fe47/stone-block-example.jpg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn44@2020_3/2020/09/05/07-59-26-238_74c074efcd863e8e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6f4547a-1e9d-435f-9e3f-1b9beda062ea/5-renaissance-no-code-web-designers.jpg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn76@2020_5/2020/09/05/07-59-22-259_01ad76eacc2fba83.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4c2c1f23-263a-4686-aecd-2b0774454b0b/4-renaissance-no-code-web-designers.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn54@2020_6/2020/09/05/07-59-40-895_3019922163c9c1fd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db4d2c7e-c7e8-42cb-a147-61f3c413bb0f/2-renaissance-no-code-web-designers.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn100@2020_5/2020/09/05/07-59-38-705_f2f169053c842fc6.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a0065eb-a81e-4c55-b851-00da3d527e5b/9-renaissance-no-code-web-designers.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn76@2020_5/2020/09/05/07-59-23-875_deefe6a32c813057.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0ea5d3fb-f38a-42f8-9169-ff9cf53f9211/1-renaissance-no-code-web-designers.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn82@2020_1/2020/09/05/07-59-33-179_fe07d3e03b62a7c5.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94363a36-e9b9-4f1b-bf90-6254d8c2bc67/3-renaissance-no-code-web-designers.jpg":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn6@2020_1/2020/09/05/07-59-35-229_0306c04b0ee8d78d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e357067a-16f8-4870-aeea-aa086318f697/8-renaissance-no-code-web-designers.jpg":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn27@2020_1/2020/09/05/07-59-35-359_99f55d6e4ecdf982.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2933c182-3a9a-43fb-8938-a1da8b33f557/9-renaissance-effect-no-code-web-designers.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn16@2020_5/2020/09/05/07-59-38-052_8128f18f9d096db7.webp"},"publishedOrCreatedDate":1599292755754},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Understanding Client-Side GraphQl With Apollo-Client In React Apps","link":"https://smashingmagazine.com/2020/07/client-side-graphql-apollo-client-react-apps/","description":"<p>According to <a href=\"https://2019.stateofjs.com/data-layer/graphql/\">State of JavaScript 2019</a>, 38.7% of developers would like to use GraphQL, while 50.8% of developers would like to learn GraphQL.</p>\n<p>Being a query language, GraphQL simplifies the workflow of building a client application. It removes the complexity of managing API endpoints in client-side apps because it exposes a single HTTP endpoint to fetch the required data. Hence, it <a href=\"https://hub.packtpub.com/7-reasons-to-choose-graphql-apis-over-rest-for-building-your-apis/\">eliminates overfetching and underfetching of data</a>, as in the case of REST.</p>\n<p>But GraphQL is just a query language. In order to use it easily, we need a platform that does the heavy lifting for us. One such platform is Apollo.</p>\n<p>The Apollo platform is an implementation of GraphQL that transfers data between the cloud (the server) to the UI of your app. When you use Apollo Client, all of the logic for retrieving data, tracking, loading, and updating the UI is encapsulated by the <code>useQuery</code> hook (as in the case of React). Hence, data fetching is declarative. It also has zero-configuration caching. Just by setting up Apollo Client in your app, you get an intelligent cache out of the box, with no additional configuration required.</p>\n<p>Apollo Client is also interoperable with other frameworks, such as Angular, Vue.js, and React.</p>\n<p><strong>Note</strong>: <em>This tutorial will benefit those who have worked with RESTful or other forms of APIs in the past on the client-side and want to see whether GraphQL is worth taking a shot at. This means you should have worked with an API before; only then will you be able to understand how beneficial GraphQL could be to you. While we will be covering a few basics of GraphQL and Apollo Client, a good knowledge of JavaScript and React Hooks will come in handy.</em></p>\n<h3>GraphQL Basics</h3>\n<p>This article isn’t a <a href=\"https://www.howtographql.com/\"><strong>complete introduction</strong></a> to GraphQL, but we will define a few conventions before continuing.</p>\n<h4>What Is GraphQL?</h4>\n<p>GraphQL is a <a href=\"http://spec.graphql.org/June2018/\">specification</a> that describes a declarative query language that your clients can use to ask an API for the exact data they want. This is achieved by creating a strong type schema for your API, with ultimate flexibility. It also ensures that the API resolves data and that client queries are validated against a schema. This definition means that GraphQL contains some specifications that make it a declarative query language, with an API that is statically typed (built around Typescript) and making it possible for the client to leverage those type systems to ask the API for the exact data it wants.</p>\n<p>So, if we created some types with some fields in them, then, from the client-side, we could say, “Give us this data with these exact fields”. Then the API will respond with that exact shape, just as if we were using a type system in a strongly typed language. You can learn more in <a href=\"https://www.smashingmagazine.com/2020/05/typescript-modern-react-projects-webpack-babel/#comments-typescript-modern-react-projects-webpack-babel\">my Typescript article</a>.</p>\n<p>Let’s look at some conventions of GraphQl that will help us as we continue.</p>\n<h4>The Basics</h4>\n<ul>\n<li><strong>Operations</strong><br />  In GraphQL, every action performed is called an operation. There are a few operations, namely:<ul>\n<li><strong>Query</strong><br />  This operation is concerned with fetching data from the server. You could also call it a read-only fetch.</li>\n<li><strong>Mutation</strong><br />  This operation involves creating, updating, and deleting data from a server. It is popularly called a CUD (create, update, and delete) operation. </li>\n<li><strong>Subscriptions</strong><br />  This operation in GraphQL involves sending data from a server to its clients when specific events take place. They are usually implemented with <a href=\"https://itnext.io/how-we-manage-live-1m-graphql-websocket-subscriptions-11e1880758b0\">WebSockets</a>.</li>\n</ul>\n</li>\n</ul>\n<p>In this article, we will be dealing only with query and mutation operations.</p>\n<ul>\n<li><strong>Operation</strong> <strong>names</strong><br />  There are <strong>unique</strong> <strong>names</strong> for your client-side query and mutation operations.</li>\n<li><strong>Variables</strong> <strong>and arguments</strong><br />  Operations can define arguments, very much like a function in most programming languages. Those variables can then be passed to query or mutation calls inside the operation as arguments. Variables are expected to be given at runtime during the execution of an operation from your client.</li>\n<li><strong>Aliasing</strong><br />  This is a convention in client-side GraphQL that involves renaming verbose or vague field names with simple and readable field names for the UI. Aliasing is necessary in use cases where you don’t want to have conflicting field names.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/339220be-7afd-4320-b115-01e3188287d4/1-figure-client-side-graphql-apollo-client-react-apps.png\" /></p>\n<h3>What Is Client-Side GraphQL?</h3>\n<p>When a front-end engineer builds UI components using any framework, like Vue.js or (in our case) React, those components are modeled and designed from a certain pattern on the client to suit the data that will be fetched from the server.</p>\n<p>One of the most common problems with RESTful APIs is overfetching and underfetching. This happens because the only way for a client to download data is by hitting endpoints that return <strong>fixed</strong> data structures. <strong>Overfetching</strong> in this context means that a client downloads more information than is required by the app.</p>\n<p>In GraphQL, on the other hand, you’d simply send a single query to the GraphQL server that includes the required data. The server would then respond with a JSON object of the exact data you’ve requested — hence, no overfetching. Sebastian Eschweiler explains the <a href=\"https://medium.com/codingthesmartway-com-blog/rest-vs-graphql-418eac2e3083\">differences between RESTful APIs and GraphQL</a>.</p>\n<p>Client-side GraphQL is a client-side infrastructure that interfaces with data from a GraphQL server to perform the following functions:</p>\n<ul>\n<li>It manages data by sending queries and mutating data without you having to construct HTTP requests all by yourself. You can spend less time plumbing data and more time building the actual application.</li>\n<li>It manages the complexity of a cache for you. So, you can store and retrieve the data fetched from the server, without any third-party interference, and easily avoid refetching duplicate resources. Thus, it identifies when two resources are the same, which is great for a complex app.</li>\n<li>It keeps your UI consistent with Optimistic UI, a convention that simulates the results of a mutation (i.e. the created data) and updates the UI even before receiving a response from the server. Once the response is received from the server, the optimistic result is thrown away and replaced with the actual result.</li>\n</ul>\n<p>For further information about client-side GraphQL, spare an hour with the cocreator of GraphQL and other cool folks on <a href=\"https://www.youtube.com/watch?v=pvgvcilFj9M&#38;feature=youtu.be\">GraphQL Radio</a>.</p>\n<h4>What Is Apollo Client?</h4>\n<p>Apollo Client is an <a href=\"https://www.robinwieruch.de/why-apollo-advantages-disadvantages-alternatives#apollos-features\">interoperable</a>, ultra-flexible, community-driven GraphQL client for JavaScript and native platforms. Its impressive features include a robust state-management tool (<a href=\"https://www.apollographql.com/docs/link/\">Apollo Link</a>), a <a href=\"https://www.apollographql.com/docs/ios/caching/#gatsby-focus-wrapper\">zero-config caching</a> system, a <a href=\"https://www.apollographql.com/docs/react/why-apollo/#declarative-data-fetching\">declarative approach</a> to fetching data, easy-to-implement <a href=\"https://www.apollographql.com/docs/react/data/pagination/#gatsby-focus-wrapper\">pagination</a>, and the <a href=\"https://www.apollographql.com/docs/react/performance/optimistic-ui/#gatsby-focus-wrapper\">Optimistic UI</a> for your client-side application.</p>\n<p>Apollo Client stores not only the state from the data fetched from the server, but also the state that it has created locally on your client; hence, it manages state for both API data and local data.</p>\n<p>It’s also important to note that you can use Apollo Client alongside other state-management tools, like Redux, without conflict. Plus, it’s possible to migrate your state management from, say, <a href=\"https://engineering.circle.com/https-medium-com-mattdionis-move-over-redux-apollo-client-as-a-state-management-solution-1f9325f96cdd\">Redux to Apollo Client</a> (which is beyond the scope of this article). Ultimately, the main purpose of Apollo Client is to enable engineers to query data in an API seamlessly.</p>\n<h4>Features of Apollo Client</h4>\n<p>Apollo Client has won over so many engineers and companies because of its extremely helpful features that make building modern robust applications a breeze. The following features come baked in:</p>\n<ul>\n<li><strong>Caching</strong><br />  Apollo Client supports caching on the fly.</li>\n<li><strong>Optimistic UI</strong><br />  Apollo Client has cool support for the Optimistic UI. It involves temporarily displaying the final state of an operation (mutation) while the operation is in progress. Once the operation is complete, the real data replaces the optimistic data.</li>\n<li><strong>Pagination</strong><br />  Apollo Client has built-in functionality that makes it quite easy to implement pagination in your application. It takes care of most of the technical headaches of fetching a list of data, either in patches or at once, using the <code>fetchMore</code> function, which comes with the <code>useQuery</code> hook.</li>\n</ul>\n<p>In this article, we will look at a selection of these features.</p>\n<p>Enough of the theory. Tighten your seat belt and grab a cup of coffee to go with your pancakes, as we get our hands dirty.</p>\n<h3>Building Our Web App</h3>\n<p><em>This project is inspired by Scott Moss.</em></p>\n<p>We will be building a simple pet shop web app, whose features include:</p>\n<ul>\n<li>fetching our pets from the server-side;</li>\n<li>creating a pet (which involves creating the name, type of pet, and image);</li>\n<li>using the Optimistic UI;</li>\n<li>using pagination to segment our data.</li>\n</ul>\n<p>To begin, clone the repository, ensuring that the <a href=\"https://github.com/krofax/-Pet-App-with-Apollo-Graphql-with-React/tree/starter\"><code>starter</code></a> branch is what you’ve cloned.</p>\n<h5>Getting Started</h5>\n<ul>\n<li>Install the <a href=\"https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm\">Apollo Client Developer Tools</a> extension for Chrome.</li>\n<li>Using the command-line interface (CLI), navigate to the directory of the cloned repository, and run the command to get all dependencies: <code>npm install</code>.</li>\n<li>Run the command <code>npm run app</code> to start the app.</li>\n<li>While still in the root folder, run the command <code>npm run server</code>. This will start our back-end server for us, which we’ll use as we proceed.</li>\n</ul>\n<p>The app should open up in a configured port. Mine is <code>http://localhost:1234/</code>; yours is probably something else.</p>\n<p>If everything worked well, your app should look like this:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/31bd5c75-4696-41c9-b736-1fe23888ae3e/figure-02-client-side-graphql-apollo-client-react-apps.png\" /></p>\n<p>You’ll notice that we’ve got no pets to display. That’s because we haven’t created such functionality yet.</p>\n<p>If you’ve installed <a href=\"https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm\">Apollo Client Developer Tools</a> correctly, open up the developer tools and click on the tray icon. You’ll see “Apollo” and something like this:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4e1bcf4c-32d2-4623-9f8c-563af8399ce1/figure-03-client-side-graphql-apollo-client-react-apps.png\" /></p>\n<p>Like the Redux and React developer tools, we will be using Apollo Client Developer Tools to write and test our queries and mutations. The extension comes with the <a href=\"https://www.apollographql.com/docs/apollo-server/testing/graphql-playground/\">GraphQL Playground</a>.</p>\n<h3>Fetching Pets</h3>\n<p>Let’s add the functionality that fetches pets. Move over to <code>client/src/client.js</code>. We’ll be writing Apollo Client, linking it to an API, exporting it as a default client, and writing a new query.</p>\n<p>Copy the following code and paste it in <code>client.js</code>:</p>\n<pre><code>import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\n\nconst link = new HttpLink({ uri: 'https://localhost:4000/' })\nconst cache = new InMemoryCache()\nconst client = new ApolloClient({\n  link,\n  cache\n})\nexport default client</code></pre>\n\n<p>Here’s an explanation of what is happening above:</p>\n<ul>\n<li><code>ApolloClient</code><br />This will be the function that wraps our app and, thus, interfaces with the HTTP, caches the data, and updates the UI.</li>\n<li><code>InMemoryCache</code><br />This is the normalized data store in Apollo Client that helps with manipulating the cache in our application.</li>\n<li><code>HttpLink</code><br />This is a standard network interface for modifying the control flow of GraphQL requests and fetching GraphQL results. It acts as middleware, fetching results from the GraphQL server each time the link is fired. Plus, it’s a good substitute for other options, like <code>Axios</code> and <code>window.fetch</code>.</li>\n<li>We declare a link variable that is assigned to an instance of <code>HttpLink</code>. It takes a <code>uri</code> property and a value to our server, which is <code>https://localhost:4000/</code>.</li>\n<li>Next is a cache variable that holds the new instance of <code>InMemoryCache</code>.</li>\n<li>The client variable also takes an instance of <code>ApolloClient</code> and wraps the <code>link</code> and <code>cache</code>.</li>\n<li>Lastly, we export the <code>client</code> so that we can use it across the application.</li>\n</ul>\n<p>Before we get to see this in action, we’ve got to make sure that our entire app is exposed to Apollo and that our app can receive data fetched from the server and that it can mutate that data.</p>\n<p>To achieve this, let’s head over to <code>client/src/index.js</code>:</p>\n<pre><code>import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport App from './components/App'\nimport client from './client'\nimport './index.css'\nconst Root = () =&#62; (\n  &#60;BrowserRouter&#62;</code>\n<code>    &#60;ApolloProvider client={client}&#62;\n      &#60;App /&#62;\n    &#60;/ApolloProvider&#62;</code>\n<code>  &#60;/BrowserRouter&#62;\n);\nReactDOM.render(&#60;Root /&#62;, document.getElementById('app'))\nif (module.hot) {\n  module.hot.accept()\n}</code></pre>\n\n<p>As you’ll notice in the highlighted code, we’ve wrapped the <code>App</code> component in <code>ApolloProvider</code> and passed the client as a prop to the <code>client</code>. <code>ApolloProvider</code> is similar to React's <a href=\"https://reactjs.org/docs/context.html#contextprovider\"><code>Context.Provider</code></a>. It wraps your React app and places the client in context, which allows you to access it from anywhere in your component tree.</p>\n<p>To fetch our pets from the server, we need to write queries that request the <strong>exact fields</strong> that we want. Head over to <code>client/src/pages/Pets.js</code>, and copy and paste the following code into it:</p>\n<div>\n<pre><code>import React, {useState} from 'react'\nimport gql from 'graphql-tag'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\nimport PetsList from '../components/PetsList'\nimport NewPetModal from '../components/NewPetModal'\nimport Loader from '../components/Loader'</code>\n\n<code>const GET_PETS = gql<code>query getPets {\n    pets {\n      id\n      name\n      type\n      img\n    }\n  }</code>;</code>\n\n<code>export default function Pets () {\n  const [modal, setModal] = useState(false)</code>\n<code>  const { loading, error, data } = useQuery(GET_PETS);\n\n  if (loading) return &#60;Loader /&#62;;\n\n  if (error) return &#60;p&#62;An error occured!&#60;/p&#62;;</code>\n\n\n<code>  const onSubmit = input =&#62; {\n    setModal(false)\n  }\n\n\n  if (modal) {\n    return &#60;NewPetModal onSubmit={onSubmit} onCancel={() =&#62; setModal(false)} /&#62;\n  }\n  return (\n    &#60;div className=\"page pets-page\"&#62;\n      &#60;section&#62;\n        &#60;div className=\"row betwee-xs middle-xs\"&#62;\n          &#60;div className=\"col-xs-10\"&#62;\n            &#60;h1&#62;Pets&#60;/h1&#62;\n          &#60;/div&#62;\n          &#60;div className=\"col-xs-2\"&#62;\n            &#60;button onClick={() =&#62; setModal(true)}&#62;new pet&#60;/button&#62;\n          &#60;/div&#62;\n        &#60;/div&#62;\n      &#60;/section&#62;\n      &#60;section&#62;</code>\n<code>        &#60;PetsList pets={data.pets}/&#62;</code>\n<code>      &#60;/section&#62;\n    &#60;/div&#62;\n  )\n}\n</code></pre>\n</div>\n\n<p>With a few bits of code, we are able to fetch the pets from the server.</p>\n<h4>What Is gql?</h4>\n<p>It’s important to note that operations in GraphQL are generally JSON objects written with <code>graphql-tag</code> and with backticks.</p>\n<p><a href=\"https://github.com/apollographql/graphql-tag\"><code>gql</code></a> tags are JavaScript template literal tags that parse GraphQL query strings into the <a href=\"https://medium.com/@adamhannigan81/understanding-the-graphql-ast-f7f7b8e62aa4\">GraphQL AST (abstract syntax tree)</a>. </p>\n<ul>\n<li><strong>Query operations</strong><br />  In order to fetch our pets from the server, we need to perform a query operation. <ul>\n<li>Because we’re making a <code>query</code> operation, we needed to specify the <code>type</code> of operation before naming it.</li>\n<li>The name of our query is <code>GET_PETS</code>. It’s a <a href=\"https://www.apollographql.com/docs/apollo-server/schema/schema/#naming-conventions\">naming convention</a> of GraphQL to use camelCase for field names.</li>\n<li>The name of our fields is <code>pets</code>. Hence, we specify the exact fields that we need from the server <code>(id, name, type, img)</code>.</li>\n<li><code>useQuery</code> is a <a href=\"https://reactjs.org/docs/hooks-intro.html\">React hook</a> that is the basis for executing queries in an Apollo application. To perform a query operation in our React component, we call the <code>useQuery</code> hook, which was initially imported from <a href=\"https://www.apollographql.com/docs/react/api/react-hooks/\"><code>@apollo/react-hooks</code></a>. Next, we pass it a GraphQL query string, which is <code>GET_PETS</code> in our case. </li>\n</ul>\n</li>\n<li>When our component renders, <code>useQuery</code> returns an object response from Apollo Client that contains loading, error, and data properties. Thus, they are destructured, so that we can use them to render the UI.</li>\n<li><code>useQuery</code> is awesome. We don’t have to include <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\"><code>async-await</code></a>. It’s already taken care of in the background. Pretty cool, isn’t it?<ul>\n<li><code>loading</code><br />  This property helps us handle the loading state of the application. In our case, we return a <code>Loader</code> component while our application loads. By default, loading is <code>false</code>.</li>\n<li><code>error</code><br />  Just in case, we use this property to handle any error that might occur.</li>\n<li><code>data</code><br />  This contains our actual data from the server.</li>\n<li>Lastly, in our <code>PetsList</code> component, we pass the <code>pets</code> props, with <code>data.pets</code> as an object value.</li>\n</ul>\n</li>\n</ul>\n<p>At this point, we have successfully queried our server.</p>\n<p>To start our application, let’s run the following command:</p>\n<ul>\n<li>Start the client app. Run the command  <code>npm run app</code> in your CLI.</li>\n<li>Start the server. Run the command <code>npm run server</code> in another CLI.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ad20716-d7ad-48c4-9103-ce2a52f21e2d/figure-04-client-side-graphql-apollo-client-react-apps.png\" /></p>\n<p>If all went well, you should see this:</p>\n<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/95fbcc64-1546-4c22-baa4-a1fc8eb007a3/figure-05-client-side-graphql-apollo-client-react-apps.gif\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/95fbcc64-1546-4c22-baa4-a1fc8eb007a3/figure-05-client-side-graphql-apollo-client-react-apps.gif\" /></a>Pets queried from the server.\n\n<h3>Mutating Data</h3>\n<p>Mutating data or creating data in Apollo Client is almost the same as querying data, with very slight changes.</p>\n<p>Still in <code>client/src/pages/Pets.js</code>, let’s copy and paste the highlighted code:</p>\n<div>\n<pre><code>....\n\nconst GET_PETS = gql`\n  query getPets {\n    pets {\n      id\n      name\n      type\n      img\n    }\n  }\n`;</code>\n\n<code>const NEW_PETS = gql`\n  mutation CreateAPet($newPet: NewPetInput!) {\n    addPet(input: $newPet) {\n      id\n      name\n      type\n      img\n    }\n  }\n`;</code>\n\n<code>  const Pets = () =&#62; {\n  const [modal, setModal] = useState(false)\n  const { loading, error, data } = useQuery(GET_PETS);</code>\n<code>  const [createPet, newPet] = useMutation(NEW_PETS);</code>\n<code>  const onSubmit = input =&#62; {\n    setModal(false)</code>\n<code>    createPet({\n      variables: { newPet: input }\n    });\n  }\n\n  if (loading || newPet.loading) return &#60;Loader /&#62;;\n\n  if (error || newPet.error) return &#60;p&#62;An error occured&#60;/p&#62;;</code>\n\n<code>  if (modal) {\n    return &#60;NewPetModal onSubmit={onSubmit} onCancel={() =&#62; setModal(false)} /&#62;\n  }\n  return (\n    &#60;div className=\"page pets-page\"&#62;\n      &#60;section&#62;\n        &#60;div className=\"row betwee-xs middle-xs\"&#62;\n          &#60;div className=\"col-xs-10\"&#62;\n            &#60;h1&#62;Pets&#60;/h1&#62;\n          &#60;/div&#62;\n          &#60;div className=\"col-xs-2\"&#62;\n            &#60;button onClick={() =&#62; setModal(true)}&#62;new pet&#60;/button&#62;\n          &#60;/div&#62;\n        &#60;/div&#62;\n      &#60;/section&#62;\n      &#60;section&#62;\n        &#60;PetsList pets={data.pets}/&#62;\n      &#60;/section&#62;\n    &#60;/div&#62;\n  )\n}\n\nexport default Pets\n</code></pre>\n</div>\n\n<p>To create a mutation, we would take the following steps.</p>\n<h4>1. <code>mutation</code></h4>\n<p>To create, update, or delete, we need to perform the <code>mutation</code> operation. The <code>mutation</code> operation has a <code>CreateAPet</code> name, with one argument. This argument has a <code>$newPet</code> variable, with a type of <code>NewPetInput</code>. The <code>!</code> means that the operation is required; thus, GraphQL won’t execute the operation unless we pass a <code>newPet</code> variable whose type is <code>NewPetInput</code>.</p>\n<h4>2. <code>addPet</code></h4>\n<p>The <code>addPet</code> function, which is inside the <code>mutation</code> operation, takes an argument of <code>input</code> and is set to our <code>$newPet</code> variable. The field sets specified in our <code>addPet</code> function must be equal to the field sets in our query. The field sets in our operation are:</p>\n<ul>\n<li><code>id</code></li>\n<li><code>name</code></li>\n<li><code>type</code></li>\n<li><code>img</code></li>\n</ul>\n<h4>3. <code>useMutation</code></h4>\n<p>The <code>useMutation</code> <a href=\"https://www.apollographql.com/docs/react/data/mutations/\">React hook</a> is the primary API for executing mutations in an Apollo application. When we need to mutate data, we call <code>useMutation</code> in a React component and pass it a GraphQL string (in our case, <code>NEW_PETS</code>).</p>\n<p>When our component renders <code>useMutation</code>, it returns a tuple (that is, an ordered set of data constituting a record) in an array that includes:</p>\n<ul>\n<li>a <code>mutate</code> function that we can call at any time to execute the mutation;</li>\n<li>an object with fields that represent the current status of the mutation's execution.</li>\n</ul>\n<p>The <code>useMutation</code> hook is passed a GraphQL mutation string (which is <code>NEW_PETS</code> in our case). We destructured the tuple, which is the function (<code>createPet</code>) that will mutate the data and the object field (<code>newPets</code>).</p>\n<h4>4. <code>createPet</code></h4>\n<p>In our <code>onSubmit</code> function, shortly after the <code>setModal</code> state, we defined our <code>createPet</code>. This function takes a <code>variable</code> with an object property of a value set to <code>{ newPet: input }</code>. The <code>input</code> represents the various input fields in our form (such as name, type, etc.).</p>\n<p>With that done, the outcome should look like this:</p>\n<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a9545a2f-42be-4a71-9a94-01a5a9d25d7c/6-figure-client-side-graphql-apollo-client-react-apps.gif\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a9545a2f-42be-4a71-9a94-01a5a9d25d7c/6-figure-client-side-graphql-apollo-client-react-apps.gif\" /></a>Mutation without instant update.\n\n<p>If you observe the GIF closely, you’ll notice that our created pet doesn’t show up instantly, only when the page is refreshed. However, it has been updated on the server.</p>\n<p>The big question is, why doesn’t our pet update instantly? Let's find out in the next section.</p>\n<h3>Caching In Apollo Client</h3>\n<p>The reason our app doesn’t update automatically is that our newly created data doesn’t match the <a href=\"https://www.apollographql.com/docs/react/data/mutations/#making-all-other-cache-updates\">cache data</a> in Apollo Client. So, there is a conflict as to what exactly it needs to be updated from the cache. </p>\n<p>Simply put, if we perform a mutation that updates or deletes multiple entries (a node), then we are responsible for updating any queries referencing that node, so that it modifies our <strong>cached</strong> data to match the modifications that a mutation makes to our <strong>back-end</strong> data.</p>\n<h4>Keeping Cache In Sync</h4>\n<p>There are a few ways to keep our cache in sync each time we perform a mutation operation.</p>\n<p>The first is by refetching matching queries after a mutation, using the <a href=\"https://www.apollographql.com/docs/react/caching/cache-interaction/#updating-after-a-mutation\"><code>refetchQueries</code></a> object property (the simplest way).</p>\n<p><strong>Note:</strong> <em>If we were to use this method, it would take an object property in our <code>createPet</code> function called <code>refetchQueries</code>, and it would contain an array of objects with a value of the query: <code>refetchQueries: [{ query: GET_PETS }]</code>.</em></p>\n<p>Because our focus in this section isn’t just to update our created pets in the UI, but to manipulate the cache, we won’t be using this method.</p>\n<p>The second approach is to use the <code>update</code> function. In Apollo Client, there’s an <a href=\"https://www.apollographql.com/docs/tutorial/mutations/#update-data-with-usemutation\"><code>update</code></a> helper function that helps modify the cache data, so that it syncs with the modifications that a mutation makes to our back-end data. Using this function, we can read and write to the cache.</p>\n<h4>Updating The Cache</h4>\n<p>Copy the following highlighted code, and paste it in <code>client/src/pages/Pets.js</code>:</p>\n<pre><code>......\nconst Pets = () =&#62; {\n  const [modal, setModal] = useState(false)\n  const { loading, error, data } = useQuery(GET_PETS);</code>\n<code>  const [createPet, newPet] = useMutation(NEW_PETS, {\n    update(cache, { data: { addPet } }) {\n      const data = cache.readQuery({ query: GET_PETS });\n      cache.writeQuery({\n        query: GET_PETS,\n        data: { pets: [addPet, ...data.pets] },\n      });\n    },\n    }\n  );</code>\n<code>  .....\n</code></pre>\n\n<p>The <code>update</code> function receives two arguments:</p>\n<ul>\n<li>The first argument is the cache from Apollo Client.</li>\n<li>The second is the exact mutation response from the server. We destructure the <code>data</code> property and set it to our mutation (<code>addPet</code>).</li>\n</ul>\n<p>Next, to update the function, we need to check for what query needs to be updated (in our case, the <code>GET_PETS</code> query) and read the cache.</p>\n<p>Secondly, we need to write to the <code>query</code> that was read, so that it knows we’re about to update it. We do so by passing an object that contains a <code>query</code> object property, with the value set to our <code>query</code> operation (<code>GET_PETS</code>), and a <code>data</code> property whose value is a <code>pet</code> object and that has an array of the <code>addPet</code> mutation and a copy of the pet's data.</p>\n<p>If you followed these steps carefully, you should see your pets update automatically as you create them. Let’s take a look at the changes:</p>\n<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6f8eb6e7-876b-498b-b129-8e311f3a19d7/figure-07-client-side-graphql-apollo-client-react-apps.gif\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6f8eb6e7-876b-498b-b129-8e311f3a19d7/figure-07-client-side-graphql-apollo-client-react-apps.gif\" /></a>Pets updates instantly.\n\n<h3>Optimistic UI</h3>\n<p>A lot of people are big fans of loaders and spinners. There’s nothing wrong with using a loader; there are perfect use cases where a loader is the best option. I’ve written about <a href=\"https://www.smashingmagazine.com/2020/04/skeleton-screens-react/\">loaders versus spinners</a> and their best use cases.</p>\n<p>Loaders and spinners indeed play an important role in UI and UX design, but the arrival of Optimistic UI has stolen the spotlight.</p>\n<h4>What Is Optimistic UI?</h4>\n<p>Optimistic UI is a convention that simulates the results of a mutation (created data) and updates the UI before receiving a response from the server. Once the response is received from the server, the optimistic result is thrown away and replaced with the actual result.</p>\n<p>In the end, an optimistic UI is nothing more than a way to manage perceived performance and avoid loading states.</p>\n<p>Apollo Client has a very interesting way of integrating the Optimistic UI. It gives us a simple hook that allows us to write to the local cache after mutation. Let's see how it works!</p>\n<h4>Step 1</h4>\n<p>Head over to <code>client/src/client.js</code>, and add only the highlighted code.</p>\n<pre><code>import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'</code>\n<code>import { setContext } from 'apollo-link-context'\nimport { ApolloLink } from 'apollo-link'\nconst http = new HttpLink({ uri: \"http://localhost:4000/\" });\nconst delay = setContext(\n  request =&#62; \n    new Promise((success, fail) =&#62; {\n      setTimeout(() =&#62; {\n        success()\n      }, 800)\n    })\n)\nconst link = ApolloLink.from([\n  delay,\n  http\n])</code>\n<code>const cache = new InMemoryCache()\nconst client = new ApolloClient({\n  link,\n  cache\n})\nexport default client\n</code></pre>\n\n<p>The first step involves the following:</p>\n<ul>\n<li>We import <code>setContext</code> from <a href=\"https://www.apollographql.com/docs/link/links/context/\"><code>apollo-link-context</code></a>. The <code>setContext</code> function takes a callback function and returns a promise whose <code>setTimeout</code> is set to <code>800ms</code>, in order to create a delay when a mutation operation is performed.</li>\n<li>The <code>ApolloLink.from</code> method ensures that the network activity that represents the link (our API) from <code>HTTP</code> is delayed. </li>\n</ul>\n<h4>Step 2</h4>\n<p>The next step is using the Optimistic UI hook. Slide back to <code>client/src/pages/Pets.js</code>, and add only the highlighted code below.</p>\n<pre><code>.....\n\nconst Pets = () =&#62; {\n  const [modal, setModal] = useState(false)\n  const { loading, error, data } = useQuery(GET_PETS);\n  const [createPet, newPet] = useMutation(NEW_PETS, {\n    update(cache, { data: { addPet } }) {\n      const data = cache.readQuery({ query: GET_PETS });\n      cache.writeQuery({\n        query: GET_PETS,\n        data: { pets: [addPet, ...data.pets] },\n      });\n    },\n    }\n  );\n  const onSubmit = input =&#62; {\n    setModal(false)\n    createPet({\n      variables: { newPet: input },</code>\n<code>      optimisticResponse: {\n        __typename: 'Mutation',\n        addPet: {\n          __typename: 'Pet',\n          id: Math.floor(Math.random() * 10000 + ''),\n          name: input.name,\n          type: input.type,\n          img: 'https://via.placeholder.com/200'\n        }\n      }</code>\n<code>    });\n  }\n  .....\n</code></pre>\n\n<p>The <a href=\"https://www.apollographql.com/docs/react/performance/optimistic-ui/#basic-optimistic-ui\"><code>optimisticResponse</code></a> object is used if we want the UI to update immediately when we create a pet, instead of waiting for the server response.</p>\n<p>The code snippets above include the following:</p>\n<ul>\n<li><code>__typename</code> is injected by Apollo into the query to fetch the <code>type</code> of the queried entities. Those types are used by Apollo Client to build the <code>id</code> property (which is a symbol) for caching purposes in <code>apollo-cache</code>. So, <code>__typename</code> is a valid property of the query response. </li>\n<li>The mutation is set as the <code>__typename</code> of <code>optimisticResponse</code>.</li>\n<li>Just as earlier defined, our mutation’s name is <code>addPet</code>, and the <code>__typename</code> is <code>Pet</code>.</li>\n<li>Next are the fields of our mutation that we want the optimistic response to update:<ul>\n<li><code>id</code><br />  Because we don’t know what the ID from the server will be, we made one up using <code>Math.floor</code>.</li>\n<li><code>name</code><br />  This value is set to <code>input.name</code>.</li>\n<li><code>type</code><br />  The type’s value is <code>input.type</code>.</li>\n<li><code>img</code><br />  Now, because our server generates images for us, we used a placeholder to mimic our image from the server.</li>\n</ul>\n</li>\n</ul>\n<p>This was indeed a long ride. If you got to the end, don’t hesitate to take a break from your chair with your cup of coffee.</p>\n<p>Let's take a look at our outcome. The supporting repository for this project is <a href=\"https://github.com/krofax/-Pet-App-with-Apollo-Graphql-with-React\">on GitHub</a>. Clone and experiment with it.</p>\n<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/22b14d1a-9d5b-4215-8b3b-275d0beb148e/figure-08-client-side-graphql-apollo-client-react-apps.gif\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/22b14d1a-9d5b-4215-8b3b-275d0beb148e/figure-08-client-side-graphql-apollo-client-react-apps.gif\" /></a>Final result of our app.\n\n<h3>Conclusion</h3>\n<p>The amazing features of Apollo Client, such as the Optimistic UI and pagination, make building client-side apps a reality.</p>\n<p>While Apollo Client works very well with other frameworks, such as Vue.js and Angular, React developers have Apollo Client Hooks, and so they can’t help but enjoy building a great app.</p>\n<p>In this article, we’ve only scratched the surface. Mastering Apollo Client demands constant practice. So, go ahead and clone the repository, add pagination, and play around with the other features it offers.</p>\n<p>Please do share your feedback and experience in the comments section below. We can also discuss your progress <a href=\"https://twitter.com/beveloper\">on Twitter</a>. Cheers!</p>\n<h4>References</h4>\n<ul>\n<li>“<a href=\"https://frontendmasters.com/courses/client-graphql-react/\">Client-Side GraphQL In React</a>”, Scott Moss, Frontend Master</li>\n<li>“<a href=\"https://www.apollographql.com/docs/\">Documentation</a>”, Apollo Client</li>\n<li>“<a href=\"https://uxdesign.cc/the-optimistic-ui-with-react-f1420e317d54\">The Optimistic UI With React</a>”, Patryk Andrzejewski</li>\n<li>“<a href=\"https://www.smashingmagazine.com/2016/11/true-lies-of-optimistic-user-interfaces/\">True Lies Of Optimistic User Interfaces</a>”, Smashing Magazine</li>\n</ul>\n","descriptionType":"html","publishedDate":"Wed, 29 Jul 2020 10:30:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ae600a94-e096-4843-8bb6-85450d39bce8/client-side-graphql-apollo-client-react-apps.png","linkMd5":"2de9e609eb9cf95b580b73d5f31a0743","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn80@2020_3/2020/09/05/07-59-16-375_812f1a3d8f323dfb.webp","destWidth":1201,"destHeight":631,"sourceBytes":255027,"destBytes":62360,"author":"hello@smashingmagazine.com (Blessing Krofegha)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ae600a94-e096-4843-8bb6-85450d39bce8/client-side-graphql-apollo-client-react-apps.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/339220be-7afd-4320-b115-01e3188287d4/1-figure-client-side-graphql-apollo-client-react-apps.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn72@2020_3/2020/09/05/07-59-23-723_aced4a1d210390d6.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/31bd5c75-4696-41c9-b736-1fe23888ae3e/figure-02-client-side-graphql-apollo-client-react-apps.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn100@2020_4/2020/09/05/07-59-33-281_cd20646e0c48f2cc.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4e1bcf4c-32d2-4623-9f8c-563af8399ce1/figure-03-client-side-graphql-apollo-client-react-apps.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ad20716-d7ad-48c4-9103-ce2a52f21e2d/figure-04-client-side-graphql-apollo-client-react-apps.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn30@2020_2/2020/09/05/07-59-39-302_656c26ece0a93844.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/95fbcc64-1546-4c22-baa4-a1fc8eb007a3/figure-05-client-side-graphql-apollo-client-react-apps.gif":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn52@2020_6/2020/09/05/07-59-22-216_58ac4ac60ee62676.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a9545a2f-42be-4a71-9a94-01a5a9d25d7c/6-figure-client-side-graphql-apollo-client-react-apps.gif":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn98@2020_4/2020/09/05/07-59-29-544_14d641e7fbd62e9d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6f8eb6e7-876b-498b-b129-8e311f3a19d7/figure-07-client-side-graphql-apollo-client-react-apps.gif":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn74@2020_6/2020/09/05/07-59-25-011_949345bdbf78870b.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/22b14d1a-9d5b-4215-8b3b-275d0beb148e/figure-08-client-side-graphql-apollo-client-react-apps.gif":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn97@2020_4/2020/09/05/07-59-32-627_23a5d67e19e36046.webp"},"publishedOrCreatedDate":1599292755764},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"A Practical Guide To Product Tours In React Apps","link":"https://smashingmagazine.com/2020/08/guide-product-tours-react-apps/","description":"<p>As <a href=\"https://www.appcues.com/blog/product-tours-walkthroughs-ultimate-guide\">stated on Appcues</a>:</p> \n<blockquote>\n “Product tours — sometimes called product walkthroughs — introduce users to a new product and help them find their bearings.”\n</blockquote> \n<p>Usually, when it needs to showcase a new feature or complex UI functionality in a web app, the customer-success team would send a campaign email to all of its users. While this is a great way to create such awareness, some users might not have the opportunity to see the added feature; hence, the purpose of the email would be defeated.</p> \n<p>A better way to increase user awareness of a particular feature in a web app is by integrating concise, self-explanatory UI tips, called product tours.</p> \n<p>Product tours guide users to <a href=\"https://www.apty.io/blog/tips-for-using-product-tours\">“a-ha” moments</a>, or showcase high-value features that are being underused. Product tours can be powerful tools to introduce users to a new product and to help them find their bearings. They can draw attention to product launches, promo offers, and product sales.</p> \n<p>But when done wrong, product tours can end up feeling like a backseat driver. And no one likes a backseat driver, do they?</p> \n<p>In this tutorial, you’ll learn about what a product tour is and the types of product-tour packages in the React ecosystem, along with their pros and cons.</p> \n<p>If you’re building customer-facing products using React, then you might be keen to implement this in your React application. By the end, we’ll have built a product tour for a simple shopping-cart UI using <a href=\"https://react-joyride.com/\">React Joyride</a>.</p> \n<p>We won’t go through React and JavaScript’s syntax basics, but you don’t have to be an expert in either of these languages to follow along.</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6717714-c15e-460d-ab38-bc41da584920/01-guide-product-tours-react-apps.png\" /></p> \n<h3>Product Tour Guidelines</h3> \n<p>Product tours are a tricky aspect of web apps, requiring some user-experience expertise to drive results. I’d recommend going through <a href=\"https://www.appcues.com/blog/product-tours-walkthroughs-ultimate-guide\">Appcues’ tips</a> for product tours. The following are a few guidelines to consider.</p> \n<h4>Never Lecture</h4> \n<p>Putting a lot of tours on a web page is tempting. But users are usually not keen on long introductory tutorials. They become anxious when they have to ingest a lot of information before being able to use a feature in the app.</p> \n<h4>Break It Down</h4> \n<p>Don’t teach everything. Focus on a single feature, and create a tour of two to three steps to showcase that feature. Show many small tours, rather than a single long tour. Prioritize their sequence.</p> \n<h4>Add Value</h4> \n<p>Do you enjoy taking your own tour? How about your teammates? Present the tour in such a way that users will understand. Showcase value, rather than stories.</p> \n<p>Now that we know the value of product tours and seen some guidelines for building them, let’s cover some React libraries for product tours and learn how to use them.</p> \n<p>There are only a few React-based libraries for implementing tours. Two of the most popular are <a href=\"https://smashingmagazine.com/2020/08/guide-product-tours-react-apps/#react-tour\">React Tour</a> and <a href=\"https://smashingmagazine.com/2020/08/guide-product-tours-react-apps/#react-joyride\">React Joyride</a>.</p> \n<h3>React Tour</h3> \n<p><a href=\"https://github.com/elrumordelaluz/reactour\">React Tour</a> has around 1,600 stars on GitHub and is being actively developed. The best use case for React Tour is a simple product tour in which little customization is required. A <a href=\"https://reactour.js.org/\">demo</a> is available.</p> \n<h4>How It Works</h4> \n<p>With React Tour, you pass the <code>className</code> selector and content for each step to the component. The library will render the tour’s user interface based on a button click, or after you’ve mounted the component. It’s simple for static pages and UIs:</p> \n<pre><code> const steps = [\n  {\n    selector: '.first-tour',\n    content: 'This is the content for the first tour.',\n  },\n  {\n    selector: '.second-tour',\n    content: 'Here is the content for the second Tour.',\n  }\n  // ...\n]\n</code></pre> \n<h4>Pros</h4> \n<ul> \n <li>React Tour is best for tours that need little customization.</li> \n <li>It works well for static content and for dynamic content whose selector labels always exist in the UI.</li> \n <li>Fans of styled-components might find it interesting because it has a hard dependency on styled-components.</li> \n</ul> \n<h4>Cons</h4> \n<ul> \n <li>If your project has no dependency on styled-components, then you might not find it easy to implement.</li> \n <li>Your creativity will be limited because it doesn’t support customization.</li> \n</ul> \n<h3>React Joyride</h3> \n<p>The other main product-tour library is <a href=\"https://github.com/gilbarbara/react-joyride\">React Joyride</a>, which has about 3,100 stars on GitHub and is also actively maintained.</p> \n<h4>How It Works</h4> \n<p>We pass the <code>className</code> as a target and the content. The state stores the tour. The Joyride component uses <a href=\"https://docs.react-joyride.com/step\">steps</a> as props.</p> \n<pre><code>  state = {\n    steps: [\n      {\n        target: '.my-first-step',\n        content: 'This is my awesome feature!',\n      },\n      {\n        target: '.my-other-step',\n        content: 'This is another awesome feature!',\n      },\n      ...\n    ]\n  };\n\n  render () {\n    const { steps } = this.state;\n\n    return (\n      \n  <div>\n   \n        \n        ...\n      \n  </div>\n    );\n  }\n}\n</code></pre> \n<h4>Pros</h4> \n<ul> \n <li>Integrating React Joyride in a web app is less rigid than with React Tour, and it has no hard dependency on other libraries.</li> \n <li>Events and actions are made available, which fosters customization.</li> \n <li>It’s frequently improved.</li> \n</ul> \n<h4>Cons</h4> \n<ul> \n <li>The UI isn’t as elegant as React Tour’s.</li> \n</ul> \n<h4>Why React Joyride?</h4> \n<p>Product tours, especially for really big web apps, require <strong>customization</strong>, and that sets React Joyride apart from React Tour. The example project we’ll make demands some creativity and customization — hence, we’ll go with React Joyride.</p> \n<h3>Building A Simple Product Tour</h3> \n<p>First, we’ll build a simple React tour using the props available to us in React Joyride. Next, we’ll use the <code>useReducer</code> hook to automate the tour’s processes.</p> \n<p>Clone the “<a href=\"https://github.com/krofax/React-product-tour/tree/standard-tour\">standard-tour</a>” branch in the GitHub repository, or use the web page of your choice, as long as you’re able to follow along.</p> \n<p>Install the packages by running <code>npm install</code>.</p> \n<p>To start the app, run <code>npm run start</code>.</p> \n<p>We’ll be covering the following steps:</p> \n<ul> \n <li>define the tour’s steps;</li> \n <li>enable a skip option in each step;</li> \n <li>change text labels on buttons and links;</li> \n <li>customize styles like button colors and text alignment.</li> \n</ul> \n<p>Then, we’ll add some custom features:</p> \n<ul> \n <li>autostart the tour;</li> \n <li>start the tour manually (i.e. with a link or button click);</li> \n <li>hide the blinking beacon.</li> \n</ul> \n<p>The <a href=\"https://docs.react-joyride.com/props\">props</a> in React Joyride enable us to perform some basic functionality.</p> \n<p>For this tutorial, we’ll build a product tour of the UI shown below:</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/10f70b43-689d-4684-bf38-047c519334ce/02-guide-product-tours-react-apps.png\" /></p> \n<h4>Define The Tour’s Steps</h4> \n<p>To begin with, ensure that you’re targeting the particular <code>classNames</code> that will hold the content of the tour on the page — that is, according to whether you’ll be using your UI instead of the shopping-cart UI.</p> \n<p>In the <code>component</code> folder, create a <code>Tour.js</code> file, and paste the following code into it. Also, ensure that the target <code>classNames</code> exist in your style sheet. Throughout this article, we’ll tweak the <code>Tour.js</code> component to suit the task at hand.</p> \n<pre><code>import React from \"react\";\nimport JoyRide from \"react-joyride\";\nconst TOUR_STEPS = [\n  {\n    target: \".tour-logo\",\n    content: \"This is our tour’s logo\",\n  },\n  {\n    target: \".tour-cart\",\n    content:\n      \"View the cart you’ve added here\",\n  },\n  {\n    target: \".tour-contact\",\n    content: \"Contact the developer\",\n  },\n  {\n    target: \".tour-policy\",\n    content: \"We accept returns after 14 days max\",\n  },\n];\n</code></pre> \n<p>What we’ve done is simply define our tour’s steps by targeting the <code>classNames</code> that will form the bedrock of our content (the text). The <code>content</code> property is where we define the <code>text</code> that we want to see when the tour starts.</p> \n<h4>Enable Skip Option in Each Step</h4> \n<p>A skip option is important in cases where a user isn’t interested in a particular tour. We can add this feature by setting the <code>showSkipButton</code> prop to <code>true</code>, which will skip the remaining steps. Also, the <code>continuous</code> prop comes in handy when we need to show the <code>Next</code> button in each step.</p> \n<div> \n <pre><code> const Tour = () =&gt; {\n  return (\n    &lt;&gt;\n      &lt;JoyRide steps={TOUR_STEPS} continuous={true} showSkipButton={true} /&gt;\n    &lt;/&gt;\n  );\n};\n</code></pre> \n</div> \n<h4>Change Text Labels On Buttons And Links</h4> \n<p>To change the <code>text</code> labels on either buttons or links, we’ll use the <code>locale</code> prop. The <code>locale</code> prop has two objects, <code>last</code> and <code>skip</code>. We specified our <code>last</code> tour as the <code>End tour</code>, while <code>skip</code> is the <code>Close tour</code>.</p> \n<pre><code> const Tour = () =&gt; {\n  return (\n    &lt;&gt;\n      &lt;JoyRide\n        steps={TOUR_STEPS}\n        continuous={true}\n        showSkipButton={true}\n        locale={{\n          last: \"End tour\",\n          skip: \"Close tour\"\n        }}\n      /&gt;\n    &lt;/&gt;\n  );\n};\n</code></pre> \n<h4>Customize Styles, Like Button Colors And Text Alignment</h4> \n<p>The default color of buttons is red, and text alignment is always set right. Let’s apply some custom styles to change button colors and align text properly.</p> \n<p>We see in our code that the <code>styles</code> prop is an object. It has other objects with unique values, including:</p> \n<ul> \n <li><code>tooltipContainer</code><br />Its key is <code>textAlign</code>, and its value is <code>left</code>.</li> \n <li><code>buttonNext</code><br />Its key is <code>backgroundColor</code>, and its value is <code>green</code>.</li> \n <li><code>buttonBack</code><br />Its key is <code>marginRight</code>, and its value is <code>10px</code>.</li> \n <li><code>locale</code><br />Its keys are <code>last</code> and <code>skip</code>, and its values are <code>End Tour</code> and <code>Close Tour</code>, respectively.</li> \n</ul> \n<pre><code>const Tour = () =&gt; {\n  return (\n    &lt;&gt;\n      &lt;JoyRide\n        steps={TOUR_STEPS}\n        continuous={true}\n        showSkipButton={true}\n        styles={{\n          tooltipContainer: {\n            textAlign: \"left\"\n          },\n          buttonNext: {\n            backgroundColor: \"green\"\n          },\n          buttonBack: {\n            marginRight: 10\n          }\n        }}\n        locale={{\n          last: \"End tour\",\n          skip: \"Close tour\"\n        }}\n      /&gt;\n    &lt;/&gt;\n  );\n};\n</code></pre> \n<p>The library exposes some props to use on our elements in place of the default elements, some of which are:</p> \n<ul> \n <li><a href=\"https://docs.react-joyride.com/custom-components#beaconcomponent\"><code>beaconComponent</code></a></li> \n <li><a href=\"https://docs.react-joyride.com/custom-components#tooltipcomponent\"><code>tooltipComponent</code></a></li> \n</ul> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cfad9cec-160b-4f5c-8d66-571a2d4ecb0e/04-guide-product-tours-react-apps.png\" /></p> \n<h3>useReducer</h3> \n<p>We’ve seen how to create a product tour and how to customize it using the various <a href=\"https://docs.react-joyride.com/props\">props</a> of Joyride.</p> \n<p>The problem with props, however, is that, as your web app scales and you need more tours, you don’t just want to add steps and pass props to them. You want to be able to automate the process by ensuring that the process of managing tours is controlled by functions, and not merely <code>props</code>. Therefore, we’ll use <code>useReducer</code> to revamp the process of building tours.</p> \n<p>In this segment, we are going to take control of the tour by using <a href=\"https://github.com/gilbarbara/react-joyride/blob/master/src/constants/actions.js\"><code>actions</code></a> and <a href=\"https://github.com/gilbarbara/react-joyride/blob/master/src/constants/events.js\"><code>events</code></a>, made available by the library through a callback function.</p> \n<p>To make this process feel less daunting, we’ll break this down into steps, enabling us to build the tour in chunks.</p> \n<p>The complete <a href=\"https://github.com/krofax/React-product-tour/tree/master\">source code</a> is available, but I’d advise you to follow this guide, to understand how it works. All of our steps will be done in the <code>Tour.js</code> file in the <code>components</code> folder.</p> \n<h4>Define the Steps</h4> \n<pre><code>import React from \"react\";\nimport JoyRide from \"react-joyride\";\nconst TOUR_STEPS = [\n  {\n    target: \".tour-logo\",\n    content: \"This is our tour’s logo.\",\n  },\n  {\n    target: \".tour-cart\",\n    content:\n      \"View the cart you’ve added here\",\n  },\n  {\n    target: \".tour-contact\",\n    content: \"Contact the developer\",\n  },\n  {\n    target: \".tour-policy\",\n    content: \"We accept returns after 14 days max\",\n  },\n];\n</code></pre> \n<p>In this first step, we define our steps by targeting the appropriate <code>classNames</code> and setting our content (text).</p> \n<h4>Define the Initial State</h4> \n<div> \n <pre><code> const INITIAL_STATE = {\n  run: false,\n  continuous: true,\n  loading: false,\n  stepIndex: 0, // Make the component controlled\n  steps: TOUR_STEPS,\n  key: new Date(), // This field makes the tour to re-render when the tour is restarted\n};\n</code></pre> \n</div> \n<p>In this step, we define some important <code>states</code>, including:</p> \n<ul> \n <li>Set the <code>run</code> field to <code>false</code>, to ensure that the tour doesn’t start automatically.</li> \n <li>Set the <code>continuous</code> prop to <code>true</code>, because we want to show the button.</li> \n <li><code>stepIndex</code> is the index number, which is set to <code>0</code>.</li> \n <li>The <code>steps</code> field is set to the <code>TOUR_STEPS</code> that we declared in step 1.</li> \n <li>The <code>key</code> field makes the tour re-render when the tour is restarted.</li> \n</ul> \n<h4>Manage The State With Reducer</h4> \n<div> \n <pre><code> const reducer = (state = INITIAL_STATE, action) =&gt; {\n  switch (action.type) {\n    // start the tour\n    case \"START\":\n      return { ...state, run: true };\n    // Reset to 0th step\n    case \"RESET\":\n      return { ...state, stepIndex: 0 };\n    // Stop the tour\n    case \"STOP\":\n      return { ...state, run: false };\n    // Update the steps for next / back button click\n    case \"NEXT_OR_PREV\":\n      return { ...state, ...action.payload };\n    // Restart the tour - reset go to 1st step, restart create new tour\n    case \"RESTART\":\n      return {\n        ...state,\n        stepIndex: 0,\n        run: true,\n        loading: false,\n        key: new Date()\n      };\n    default:\n      return state;\n  }\n};\n</code></pre> \n</div> \n<p>In this step, using a <code>switch</code> statement when <code>case</code> is <code>START</code>, we return the state and set the <code>run</code> field to <code>true</code>. Also, when <code>case</code> is <code>RESET</code>, we return the state and set <code>stepIndex</code> to <code>0</code>. Next, when <code>case</code> is <code>STOP</code>, we set the <code>run</code> field to <code>false</code>, which will stop the tour. Lastly, when <code>case</code> is <code>RESET</code>, we restart the tour and create a new tour.</p> \n<p>According to the <a href=\"https://github.com/gilbarbara/react-joyride/blob/master/src/constants/events.js\"><code>events</code></a> (<code>start</code>, <code>stop</code>, and <code>reset</code>), we’ve dispatched the proper state to manage the tour.</p> \n<h4>Listen to the Callback Changes and Dispatch State Changes</h4> \n<div> \n <pre><code> import JoyRide, { ACTIONS, EVENTS, STATUS } from \"react-joyride\";\nconst callback = data =&gt; {\n    const { action, index, type, status } = data;\n    if (action === ACTIONS.CLOSE\n                ||\n       (status === STATUS.SKIPPED &amp;&amp; tourState.run)\n                ||\n      status === STATUS.FINISHED\n    ) {\n      dispatch({ type: \"STOP\" });\n    } else if (type === EVENTS.STEP_AFTER || type === EVENTS.TARGET_NOT_FOUND) {\n      dispatch({\n        type: \"NEXT_OR_PREV\",\n        payload: { stepIndex: index + (action === ACTIONS.PREV ? -1 : 1) }\n      });\n    }\n};\n</code></pre> \n</div> \n<p>Using the exposed <code>EVENTS</code>, <a href=\"https://github.com/gilbarbara/react-joyride/blob/master/src/constants/actions.js\"><code>ACTIONS</code></a>, and <a href=\"https://github.com/gilbarbara/react-joyride/blob/master/src/constants/status.js\"><code>STATUS</code></a> labels offered by React Joyride, we listen to the click events and then perform some conditional operations.</p> \n<p>In this step, when the close or skip button is clicked, we close the tour. Otherwise, if the next or back button is clicked, we check whether the target element is active on the page. If the target element is active, then we go to that step. Otherwise, we find the next-step target and iterate.</p> \n<h4>Autostart the Tour With useEffect</h4> \n<pre><code>useEffect(() =&gt; {\n  if(!localStorage.getItem(\"tour\"){\n    dispatch({ type: \"START\"});\n  }\n}, []);\n</code></pre> \n<p>In this step, the tour is auto-started when the page loads or when the component is mounted, using the <code>useEffect</code> hook.</p> \n<h4>Trigger The Start Button</h4> \n<pre><code>const startTour = () =&gt; {\n  dispatch({ type: \"RESTART\" });\n};\n</code></pre> \n<p>The function in this last step starts the tour when the <code>start</code> button is clicked, just in case the user wishes to view the tour again. Right now, our app is set up so that the tour will be shown every time the user refreshes the page.</p> \n<p>Here’s the final code for the tour functionality in <code>Tour.js</code>:</p> \n<div> \n <pre><code>import React, { useReducer, useEffect } from \"react\";\nimport JoyRide, { ACTIONS, EVENTS, STATUS } from \"react-joyride\";\n\n// Define the steps\nconst TOUR_STEPS = [\n  {\n    target: \".tour-logo\",\n    content: \"This is our tour’s logo.\",\n    disableBeacon: true,\n  },\n  {\n    target: \".tour-cart\",\n    content:\n      \"View the cart you’ve added here\",\n  },\n  {\n    target: \".tour-contact\",\n    content: \"Contact the developer\",\n  },\n  {\n    target: \".tour-policy\",\n    content: \"We accept returns after 14 days max\",\n  },\n];\n\n// Define our state\nconst INITIAL_STATE = {\n  key: new Date(),\n  run: false,\n  continuous: true,\n  loading: false,\n  stepIndex: 0,\n  steps: TOUR_STEPS,\n};\n\n// Set up the reducer function\nconst reducer = (state = INITIAL_STATE, action) =&gt; {\n  switch (action.type) {\n    case \"START\":\n      return { ...state, run: true };\n    case \"RESET\":\n      return { ...state, stepIndex: 0 };\n    case \"STOP\":\n      return { ...state, run: false };\n    case \"NEXT_OR_PREV\":\n      return { ...state, ...action.payload };\n    case \"RESTART\":\n      return {\n        ...state,\n        stepIndex: 0,\n        run: true,\n        loading: false,\n        key: new Date(),\n      };\n    default:\n      return state;\n  }\n};\n\n// Define the Tour component\nconst Tour = () =&gt; {\n  const [tourState, dispatch] = useReducer(reducer, INITIAL_STATE);\n  useEffect(() =&gt; {\n    if (!localStorage.getItem(\"tour\")) {\n      dispatch({ type: \"START\" });\n    }\n  }, []);\n  const callback = (data) =&gt; {\n    const { action, index, type, status } = data;\n    if (\n      action === ACTIONS.CLOSE ||\n      (status === STATUS.SKIPPED &amp;&amp; tourState.run) ||\n      status === STATUS.FINISHED\n    ) {\n      dispatch({ type: \"STOP\" });\n    } else if (type === EVENTS.STEP_AFTER || type === EVENTS.TARGET_NOT_FOUND) {\n      dispatch({\n        type: \"NEXT_OR_PREV\",\n        payload: { stepIndex: index + (action === ACTIONS.PREV ? -1 : 1) },\n      });\n    }\n  };\n  const startTour = () =&gt; {\n    dispatch({ type: \"RESTART\" });\n  };\n  return (\n    &lt;&gt;\n      &lt;button className=\"btn btn-primary\" onClick={startTour}&gt;\n        Start Tour\n      &lt;/button&gt;\n      &lt;JoyRide\n        {...tourState}\n        callback={callback}\n        showSkipButton={true}\n        styles={{\n          tooltipContainer: {\n            textAlign: \"left\",\n          },\n\n          buttonBack: {\n            marginRight: 10,\n          },\n        }}\n        locale={{\n          last: \"End tour\",\n        }}\n      /&gt;\n    &lt;/&gt;\n  );\n};\nexport default Tour;\n</code></pre> \n</div> \n<h3>Conclusion</h3> \n<p>We’ve seen how to build a product tour in a web UI with React. We’ve also covered some guidelines for making product tours effective.</p> \n<p>Now, you can experiment with the React Joyride library and come up with something awesome in your next web app. I would love to hear your views in the comments section below.</p> \n<h4>Resources</h4> \n<ul> \n <li><a href=\"https://docs.react-joyride.com/\">Documentation</a>, React Joyride</li> \n <li>“<a href=\"https://www.dtelepathy.com/blog/design/seven-exceptional-product-tours-and-the-best-practices-they-teach-us\">Seven Exceptional Product Tours, and the Best Practices They Teach Us</a>”, Morgan Brown, Telepathy</li> \n <li>“<a href=\"https://www.appcues.com/blog/product-tours-walkthroughs-ultimate-guide\">The Ultimate Guide to Product Tours and Walkthroughs</a>”, Margaret Kelsey, Appcues</li> \n</ul>","descriptionType":"html","publishedDate":"Thu, 06 Aug 2020 10:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/be5721b9-e89b-4bda-b51f-6a480b72179e/guide-product-tours-react-apps.png","linkMd5":"8aad86784c6c5de060112293fddfd490","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn47@2020_5/2020/09/05/07-59-16-373_96a7bf94c628ccc3.webp","destWidth":1201,"destHeight":631,"sourceBytes":249623,"destBytes":60722,"author":"hello@smashingmagazine.com (Blessing Krofegha)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/be5721b9-e89b-4bda-b51f-6a480b72179e/guide-product-tours-react-apps.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6717714-c15e-460d-ab38-bc41da584920/01-guide-product-tours-react-apps.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn76@2020_6/2020/09/05/07-59-30-489_2e5471810f87e1b3.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/10f70b43-689d-4684-bf38-047c519334ce/02-guide-product-tours-react-apps.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn32@2020_5/2020/09/05/07-59-35-667_3cdce6a7b6963fad.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cfad9cec-160b-4f5c-8d66-571a2d4ecb0e/04-guide-product-tours-react-apps.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn53@2020_6/2020/09/05/07-59-27-766_6b62d72f927bdc8e.webp"},"publishedOrCreatedDate":1599292755757},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Can You Design A Website For The Five Senses?","link":"https://smashingmagazine.com/2020/08/design-website-five-senses/","description":"<p>Maybe it’s the whiff of someone’s perfume. Or a bite of pizza from a new restaurant. Or a song playing over the loudspeakers at the store. But the second it hits, you’re immediately transported to another place, time, or mood.</p>\n<p>Imagine if your website could evoke this kind of response. Visitors who respond to the sensory stimulation would instantly be in a more positive headspace, which they’d then associate with the site and your brand. </p>\n<p>Just be careful if you’re going to attempt this. Not every sense-triggered memory or emotion is going to be a positive one, so you want to focus on more generalized and shared experiences that come with little risk of backfiring. </p>\n<p>Here are some ideas to help you do this: </p>\n<h3>Designing For The Sense Of Sight</h3>\n<p>A website is a medium to be seen, so you’d assume that the sense of sight is the most powerful one to play with. But there’s a difference between a visitor taking in the photos and words on a web page and <em>feeling</em> something because of what they’ve seen. </p>\n<p>The truth is, sight is the most pragmatic of the senses. Typically, what you see is what you get.</p>\n<p>Nevertheless, it is possible to design a website so that it alters the mood of anyone who visits it. </p>\n<p><a href=\"https://www.smashingmagazine.com/2010/01/color-theory-for-designers-part-1-the-meaning-of-color/\">Color theory</a> is one tool you can use to inspire visitors to feel a certain way based on what they see. However, that can be problematic as colors often have multiple meanings not just across cultures but within them as well. So, while you might think you’re making visitors feel happier with bright yellow hues, it could instead be making them feel overwhelmed and anxious. </p>\n<p>What I’d suggest you focus on is how to use visuals to create an immersive experience that transports your visitors to another place or time. They shouldn’t need to look past the homepage for it either (though it’s a good idea if you can make it extend across the site). </p>\n<p>Travel and hospitality sites have a tendency to do this well. Let’s look at an example. </p>\n<p><a href=\"https://www.visitphilly.com/\">Visit Philly</a> is a tourism site I like to use to find things to do around the city. And that’s because this is how most of the pages on the site are designed: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a20d0900-e93e-4213-8471-0290e10b75e7/visit-philly-homepage.png\" /></p>\n<p>Each page feels like a physically immersive experience without forcing visitors to watch a background video or scroll through a carousel of photos. Instead, each full-sized image perfectly encapsulates the setting that awaits each visitor. </p>\n<p>Unlike staged, overly manipulated or stock photos that portray an unrealistic reality, <a href=\"https://www.nngroup.com/articles/photos-as-web-content/\">visitors aren’t likely to ignore this kind of content</a>. Because it’s real and it’s also easy to put themselves in the shoes of the people they’re looking at. The man and his dog. The family going for a walk. Or the people enjoying the spectacle that is Spruce Street Harbor Park: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/71ef31c0-8569-47a7-ace3-b1f7b96d8149/visit-philadelphia-website-spruce-street-park.png\" /></p>\n<p>For people who’ve been to Philadelphia, the visuals on this site are likely to lure them back to the good times they had. And for people who are new to the city, the oversized visuals that show off the city’s hotspots enable them to picture what it’s like to go, which is a very effective way to sell someone on an experience.</p>\n<h3>Designing For The Sense Of Smell</h3>\n<p>Back in elementary school, our teachers would reward us with good scores on homework and tests with a handwritten note like “Great work!” and a scratch-n-sniff sticker. Like these ones available on <a href=\"https://www.etsy.com/listing/742393212/1970s-original-scratch-n-sniff-stickers?ga_order=most_relevant&#38;ga_search_type=all&#38;ga_view_type=gallery&#38;ga_search_query=scratch+and+sniff+stickers&#38;ref=sr_gallery-1-12\">Etsy</a>: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4ceecd64-42dd-4614-8c3d-7d1f6717d5c2/etsy-scratch-n-sniff-stickers.png\" /></p>\n<p>If you don’t know what these are, the name says it all. You scratch your nail against the sticker and it smells just like the picture on it. </p>\n<p>Looking at this photo, I can still smell the “Berry Good” strawberry. This is going to sound crazy, but it reminds me of success. I don’t know if my teachers had an entire pack of the strawberry stickers, but it’s the one I got most frequently. And so I guess that’s why I associate it with good grades just by looking at it.</p>\n<p>This is what you want to aim for with your website. You want to depict some recognizable scent in a way that the majority (if not all) of your visitors instantly feel good. </p>\n<p>For example: </p>\n<p>A used bookstore or library website with imagery that depicts rows upon rows of old books like the <a href=\"https://providenceathenaeum.org/\">Providence Athenaeum</a>: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/03294e04-2132-4699-8314-042cd589af25/providence-athenaeum-book-smell.png\" /></p>\n<p>Voracious readers will definitely be able to smell the athenaeum and its old collection of books through this photo. </p>\n<p>Or how about a company that’s known for making cleaning products like <a href=\"https://tide.com/\">Tide</a>? </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8daea8d9-a6f0-45f5-aabe-47cf40cf5f55/tide-website-laundry.png\" /></p>\n<p>Even if you don’t use Tide to do your laundry, you know exactly what the first image in this carousel is going to smell like. </p>\n<p>Fresh laundry is the scent of cleanliness and comfort. I’d also argue that it’s the scent of satisfaction because nothing feels better than getting laundry done and over with. </p>\n<p>I also really like what <a href=\"https://www.coffeeculturecafe.com/\">Coffee Culture Cafe &#38; Eatery</a> has done with its homepage video: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7170b1e-7b37-4e06-b847-2ad6364d8794/coffee-culture-beans.png\" /></p>\n<p>It’s not abnormal for a restaurant or cafe to show photos of its food or drinks. However, this is the raw product: the coffee beans. And as any coffee drinker can attest, this photo smells delicious and is something that’s sure to awaken their anticipation in ordering their first cup. </p>\n<h3>Designing For The Sense Of Sound</h3>\n<p>I was driving to the beach over the weekend when a song came on that made me smile. It was “What I Got” by Sublime, a song I listened to many times when making the long drive to the beach with friends in college. </p>\n<p>Although I was alone on this particular trip and headed to a different beach, there was something about that song that instantly transformed my mood. The stress I was feeling about work melted away and all I could focus on was how good it was going to feel to spend the day in the sunshine by the water.</p>\n<p>That’s something that the right sound can do. It can pull us out of the present and take us back to a memory of the past. Or it can overwhelm us with emotion that has no real grounding in the moment and, yet, there it is.</p>\n<p>It doesn’t have to be music. And, honestly, on a website, it shouldn’t be. But that doesn’t mean you can’t still appeal to visitors’ ears through design. </p>\n<p>There are two ways to approach this. </p>\n<p>The first is to include imagery that depicts a predictable sound and one that brings joy (or whatever positive emotion you’re shooting for). Take the website for <a href=\"https://www.kindermusik.com/\">Kindermusik</a>: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9245a10c-ec8a-43ad-92dc-f1e6ac42270a/kindermusik-girl-playing-xylophone.png\" /></p>\n<p>For many of us, the xylophone was one of the first instruments we were introduced to as kids. So, it’s hard to imagine anyone seeing the top photo and not immediately hear the sounds of a kid banging away on the bars. </p>\n<p>And while this school is all about providing kids with music-based education, not every image sounds like music. For instance, the Benefits page has this photo at the top: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af9e8d11-8a7f-468f-bab8-0b94beef0f46/kindermusik-kid-laughing.png\" /></p>\n<p>There might not be any sound coming through this site, but we all know the distinctive sound of a baby’s laugh. For parents trying to decide where to have their kids educated, they’ll be pleased to hear the sound of a child laughing as they visit this web page. </p>\n<p>The other way to approach sound in design is to remove it entirely from the experience. </p>\n<p>This works well for places like <a href=\"https://www.scandinave.com/vieux-montreal/en/\">Scandinave Spa</a> where customers come to enjoy the solitude and silence as they retreat from pressures of society, work, life and so on: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e97c6c5b-3074-4b32-a63f-eb71038187b5/scandinave-spa-silence.png\" /></p>\n<p>If a lack of noise is what makes the real life experience so valuable, then choosing images that represent this is really important. So, obviously, sites like these won’t have images of people standing around talking nor will it incorporate bright or flashy lights. </p>\n<p>A calm experience is best depicted by an absence of noise, movement and distraction.</p>\n<h3>Designing For The Sense Of Taste</h3>\n<p><a href=\"https://www.psychologytoday.com/us/blog/psychology-tomorrow/201904/the-cooking-show-paradox\">Dr. Bence Nanay</a> wrote about the cooking show paradox on Psychology Today, debating why it is that so many people enjoy watching someone else cook. It can’t possibly be to learn how to cook as recipes are everywhere online. And while they might enjoy the competitive aspect of some of these shows, he suggests the main reason is this:</p>\n<blockquote>\n<p>Watching cooking shows is eating vicariously in the most literal sense possible — we get mental imagery of tasting and smelling the food without actually tasting or smelling it.</p>\n</blockquote>\n<p>I think we can expand a bit further on Nanay’s argument. </p>\n<p>I also believe that people become more invested in an outcome when they get to see the process of it being made. This isn’t something we’re usually allowed to see as consumers. We go out to eat and the food is sitting there on a plate for us. So, there’s something about the build-up of watching food or drinks being made that adds something extra to the experience. </p>\n<p>That’s why I don’t think it’s enough to just use static <a href=\"https://www.smashingmagazine.com/2020/06/web-designers-help-restaurants-digital-experiences/\">photos of a restaurant’s dishes</a> or food company’s products on a website. Not if you want to deeply connect to the visitors’ sense of taste, that is. </p>\n<p>For instance, this is the video that’s embedded into the top of <a href=\"https://sweetcharlies.com/\">Sweet Charlie’s</a> website: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/74f42f07-8d56-49af-9350-0d180e120b62/anthropologie-clothing-closeup.png\" /></p>\n<p>But this is nothing more than window-shopping done virtually. Anyone could walk through a store and brush their hands through racks of clothes. Don’t get me wrong, it’s a necessary functionality. However, this isn’t how we use the sense of touch to create a deeper connection with visitors. </p>\n<p>We need to play around with more drastic tactile sensations. </p>\n<p>One element you might want to fixate on is temperature. If there’s a heating or cooling element, work with that. </p>\n<p>Another element you can play with is the feeling or pressure of human touch. There are many applications for this, though it’s particularly useful for websites that advertise therapeutic services. </p>\n<p>For instance, this is how <a href=\"https://www.massageenvy.com/\">Massage Envy</a> invites people to its spa services: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/455157cc-f0bb-4645-8e0b-673e28a333c9/massage-envy-website.png\" /></p>\n<p>This is a good start. Some spa and massage websites just show images of empty massage rooms and tables. At least here prospective customers can kind of see the massage process. </p>\n<p>I don’t think there’s much to <em>feel</em> here though as the positioning of the masseuse and pressure being applied seem unrealistic. I’m guessing it’s a stock photo chosen for its symmetry, color and attractiveness.</p>\n<p>But there are ways to capture the tangible experience while still making it look good for a website. For instance, the <a href=\"https://thebodhispa.com/\">Bodhi Spa</a> uses a video to take visitors through various services they can experience — alone or with others — at the space. </p>\n<p>At one point, they’re shown someone getting a massage: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/348495a0-2578-4900-8048-2bfd0775297b/bodhi-spa-massage-photo.png\" /></p>\n<p>Notice the symmetry of this screengrab and how it doesn’t have to come at the expense of authenticity. Plus, the video shows customers how the massage feels as the masseuse applies pressure and moves her hands around the woman’s neck and head.</p>\n<p>Visitors then get to see a couple enjoying the benefits of hydrotherapy, with the woman picking up a handful of salt and placing it in the pool they’re in: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7e58b37e-263d-42cd-8db2-357062753a59/bodhi-spa-salt-pool.png\" /></p>\n<p>There’s a lot to <em>touch</em> in this video. The fine salt crystals. The warm water in the hydrotherapy tub. And, shortly after this screengrab, the couple holds hands as they enter the cool-down room. </p>\n<p>A copywriter can certainly convey a lot of the feel-good benefits of something like this, but it’s also effective to let visitors see it with their own two eyes and experience it vicariously through others. </p>\n<h3>Wrapping Up</h3>\n<p>While I think that trying to design for all five senses at once would lead to sensory overload, choosing one particularly potent sense to design for is a great idea. </p>\n<p>If you can find a way to recreate that sense through your site, your visitors may experience: </p>\n<ul>\n<li>Heightened awareness, </li>\n<li>Positive and happier thoughts than before they entered the site, </li>\n<li>A greater connection to the bigger picture and a willingness to take next steps on the site.</li>\n</ul>\n<p>We often focus on how to connect to our audience through their pain, but why don’t we focus on connecting through happiness for a change? I think we could all use a little more of that these days. </p>\n","descriptionType":"html","publishedDate":"Tue, 04 Aug 2020 08:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d16f246a-9faa-401a-b2d7-efca13b254e2/design-website-five-senses.png","linkMd5":"90139c1573575fffdbeaa42a49e64624","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn39@2020_4/2020/09/05/07-59-16-388_cc9fca031ff9ba2f.webp","destWidth":1201,"destHeight":631,"sourceBytes":260136,"destBytes":53438,"author":"hello@smashingmagazine.com (Suzanne Scacca)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d16f246a-9faa-401a-b2d7-efca13b254e2/design-website-five-senses.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a20d0900-e93e-4213-8471-0290e10b75e7/visit-philly-homepage.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn37@2020_4/2020/09/05/07-59-34-610_dc4e64960a84656a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/71ef31c0-8569-47a7-ace3-b1f7b96d8149/visit-philadelphia-website-spruce-street-park.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn55@2020_5/2020/09/05/07-59-38-570_6bcc3d0251dbfedf.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4ceecd64-42dd-4614-8c3d-7d1f6717d5c2/etsy-scratch-n-sniff-stickers.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn96@2020_2/2020/09/05/07-59-38-852_da725c9ac52adc5c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/03294e04-2132-4699-8314-042cd589af25/providence-athenaeum-book-smell.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn64@2020_2/2020/09/05/07-59-31-769_87152692d1cdc7f3.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8daea8d9-a6f0-45f5-aabe-47cf40cf5f55/tide-website-laundry.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn3@2020_3/2020/09/05/07-59-25-754_f52a8fb748535546.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7170b1e-7b37-4e06-b847-2ad6364d8794/coffee-culture-beans.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn18@2020_1/2020/09/05/07-59-27-018_c5411994c39dad21.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9245a10c-ec8a-43ad-92dc-f1e6ac42270a/kindermusik-girl-playing-xylophone.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn86@2020_4/2020/09/05/07-59-35-883_158bc37334c3cb66.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af9e8d11-8a7f-468f-bab8-0b94beef0f46/kindermusik-kid-laughing.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn76@2020_6/2020/09/05/07-59-18-144_f0e5d919966631fc.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e97c6c5b-3074-4b32-a63f-eb71038187b5/scandinave-spa-silence.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/74f42f07-8d56-49af-9350-0d180e120b62/anthropologie-clothing-closeup.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn87@2020_4/2020/09/05/07-59-37-932_4691c0d33812664f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/455157cc-f0bb-4645-8e0b-673e28a333c9/massage-envy-website.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn73@2020_2/2020/09/05/07-59-35-828_4095d4a81af981b1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/348495a0-2578-4900-8048-2bfd0775297b/bodhi-spa-massage-photo.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn24@2020_5/2020/09/05/07-59-23-980_a690cd935334f70e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7e58b37e-263d-42cd-8db2-357062753a59/bodhi-spa-salt-pool.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn86@2020_1/2020/09/05/07-59-32-333_e997850580ec8012.webp"},"publishedOrCreatedDate":1599292755745},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Smashing Podcast Episode 21 With Chris Ferdinandi: Are Modern Best Practices Bad For The Web?","link":"https://smashingmagazine.com/2020/07/smashing-podcast-episode-21/","description":"<p>Today, we’re asking if modern best practices are bad for the web? Are modern frameworks taking us down the wrong path? I speak to Lean Web expert Chris Ferdinandi to find out.</p>\n\n\n<h3>Show Notes</h3>\n<ul>\n<li>Chris’ page with <a href=\"https://gomakethings.com/smashing-podcast\">links and notes for the podcast</a></li>\n<li><a href=\"https://leanweb.dev\">The Lean Web book</a></li>\n<li><a href=\"https://gomakethings.com\">Chris Ferdinandi</a> on the web</li>\n<li><a href=\"https://twitter.com/chrisferdinandi\">Chris on Twitter</a></li>\n<li><a href=\"https://vanillajspodcast.com\">The Vanilla JavaScript Podcast</a></li>\n</ul>\n<h4>Weekly Update</h4>\n<ul>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/07/design-wireframes-accessible-html-css/\">Translating Design Wireframes Into Accessible HTML/CSS</a>”<br /><em>by Harris Schneiderman</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/07/desktop-apps-electron-vue-javascript/\">Building Desktop Apps With Electron And Vue</a>”<br /><em>by Timi Omoyeni</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/07/css-techniques-legibility/\">Modern CSS Techniques To Improve Legibility</a>”<br /><em>by Edoardo Cavazza</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/07/styled-components-react/\">How To Use Styled-Components In React</a>”<br /><em>by Adebiyi Adedotun Lukman</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/\">How To Create A Porsche 911 With Sketch</a>”<br /><em>by Nikola Lazarević</em></li>\n</ul>\n<h3>Transcript</h3>\n<p><a href=\"https://twitter.com/chrisferdinandi\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/013d0d6a-f33c-41ea-bfe6-f99f95fdd75d/chris-ferdinandi-200x200-opt.jpg\" /></a>Drew McLellan: He’s the author of Vanilla JS Pocket Guide Series, creator of the Vanilla JS Academy Training Program, and host of the Vanilla JS Podcast. He’s developed a Tips newsletter, it’s read by nearly 10,000 developers each weekday. He’s taught developers at organizations like Chobani and The Boston Globe. And his JavaScript plugins have been used by organizations like Apple and Harvard Business School. Most of all, he loves to help people learn Vanilla JavaScript. So we know he’d rather pick Vanilla JavaScript over a framework, but did you know he was once picked out in a police lineup as being the person least likely to have committed the crime? My Smashing friends, please welcome Chris Ferdinandi. Hello, Chris. How are you?</p>\n\n<p>Chris Ferdinandi: Oh, I’m smashing. Thanks for having me.</p>\n<p>Drew: I wanted to talk to you today about this concept of a Lean Web, which something of a passion for you, isn’t it?</p>\n<p>Chris: Yes, very much so.</p>\n<p>Drew: Why don’t you set the scene for us? When we talk about a Lean Web, what is the problem we are trying to solve?</p>\n<p>Chris: Yeah, great question. Just as a caveat for all the listeners, this episode might get a little old man yells at cloud. I’m going to try to avoid that. When I look at the way we build for the web today, it feels a little bit like a bloated over-engineered mess. I’ve come to believe that a lot of what we think of as best practices today might actually be making the web worse.</p>\n<p>Chris: The Lean Web is an approach to web development that is focused on simplicity, on performance, and the developer experience over... I’m sorry, not the developer experience. The user experience rather, over the developer experience, and the ease of building things from a team perspective, which is what I think where we put a lot of focus today and as we’ll probably get into in our conversation.</p>\n<p>Chris: I’ve actually come to find that a lot of these things we think of as improving the developer experience do so for a subset of developers, but not necessarily everybody who’s working on the thing you’re building. So there’s a whole bunch of issues with that too, that we can dig into. But really, the Lean Web is about focusing on simplicity and performance for the user and really prioritizing or putting the focus on the people who use the things we make rather than us, the people who are making it.</p>\n<p>Drew: As the web matures as a development platform, there seems to be this ever increasing drive towards specialization.</p>\n<p>Chris: Yes.</p>\n<p>Drew: People who used to cover Full Stack, and then we split into front-end and back-end. And then that front-end split into people who do CSS or JavaScript development. And then increasingly within JavaScript, it becomes more specialized. Somebody might consider themselves and market themselves as a React developer or an Angular developer, and their entire identity and outlook is based around a particular framework that they are highly skilled in. Is this dependency on frameworks, the core of our work on the web, a bad thing?</p>\n<p>Chris: It’s nuanced. I used to be very strongly in the yes, always camp. I think broadly, I still feel like yes, our obsession as an industry with frameworks and tools in general really, is potentially a little bit to our detriment. I don’t think frameworks are inherently bad. I think they’re useful for a very narrow subset of use cases. And we end up using them for almost everything, including lots of situations where they’re really not necessarily the best choice for you or for the project.</p>\n<p>Chris: When I think about a lot of the issues that we have on the web today, the core of those issues really starts with our over-reliance on frameworks. Everything else that comes after that is in many ways, because we throw so much not just frameworks which is JavaScript in general, at the web. I say that as someone who professionally teaches people how to write and use JavaScript. That’s how I make my money. And I’m here saying that I think we use too much JavaScript, which is sometimes a little bit of an odd thing.</p>\n<p>Drew: In the time before the big frameworks sprouted up, we used to build user interfaces and things with jQuery or whatever. And then frameworks came along and they gave us more of this concept of a state-based UI.</p>\n<p>Chris: Yes.</p>\n<p>Drew: Now, that’s a fairly complex bit of engineering that you’re required to get in place. Does working with less JavaScript exclude using something like that, or do you have to re-implement it yourself? Are you just creating a loaded boilerplate?</p>\n<p>Chris: A lot of it depends on what you’re doing. If you have a non-changing interface, you can build a state-based UI with... I don’t know, maybe a dozen or so lines of code. If you have a non-changing interface, I would honestly probably say state-based UI. It’s not necessarily the right approach. There’s probably other things you can do instead. Think of static site generators, some pre-rendered markup, even an old-school WordPress or PHP driven site.</p>\n<p>Chris: But where this starts to get interesting is when you get into more dynamic and interactive interfaces. Not just apps. I know people love to draw this line between websites and apps, and I think there’s this weird blend between the two of them and the line is not always as clear. When you start to get into more the user does stuff, something changes. State-based UI becomes a little bit more important. But you still don’t need tons of code to make that happen.</p>\n<p>Chris: I look at something like React or Vue, which are absolutely amazing pieces of engineering. I don’t want to take away from the people who work on those. I ended up as a learning exercise, building my own mini-framework just to get a better sense for how these things work under the hood. It is really hard to account for all of the different moving pieces. So I have tremendous respect for the people who build and work on these tools. But React and Vue are both about 30 kilobytes after minifying and gzipping. So once you unpack them, they’re substantially bigger than that.</p>\n<p>Chris: Not all of it, but a good chunk of that weight is devoted to this thing called the virtual DOM. There are alternatives that use similar APIs or approaches. For React, you have Preact, which is 2.5 kilobytes or about 3 kilobytes instead of 30. It’s a tenth of the size. For Vue, you have Alpine JS instead, which is about 7 kilobytes. Still, substantially smaller. The big difference between those and their big brother counterparts, is that they’ve shed the virtual DOM. They may drop a method or two. But generally, it’s the same approach and the same kind of API in the way of working with code, and they’re substantially smaller.</p>\n<p>Chris: I think a lot of the tools we use are potentially overpowered for the things we’re trying to do. If you need a state-based UI and you need reactive data and these dynamic interfaces, that’s great. I think one of the big things I try and talk about today is not... never use tools. For me, Vanilla JS is not you’re handwriting every single line of code and every single project you do. That’s madness. I couldn’t do that, I don’t do that. But it’s being more selective about the tools we use. We always go for the multi-tool, the Swiss Army knife that has all these things in it. And sometimes, all you really need is a pair of scissors. You don’t need all the other stuff, but we have it anyways.</p>\n<p>Chris: Which is a really long way to... I’m sorry, of answering your question. Which is sometimes it’s more code than you could or would want to write yourself, but it’s not nearly as much code as I think we think it requires. When I say you don’t need a framework, I get a lot of push-back around this idea that, \"Well, if you don’t use a framework, you’re basically writing your own.\" Then that comes with its own problems. I think there’s a place in between using React or Vue and writing your own framework, and it’s maybe picking something that’s a little bit smaller. There are sometimes reasons where writing your own framework might actually be the right call, depending on what you’re trying to do. It’s all very fluid and subjective.</p>\n<p>Drew: It’s quite interesting that as a learning exercise, you implemented your own state-based framework. I remember in the past, I used to think that every time I reached for a library or something, I liked to think that I could implement it myself.</p>\n<p>Chris: Sure, sure.</p>\n<p>Drew: But reaching for the library saved me the hassle of doing that. I knew if I had to write this code myself, I knew what approach I’d take to do it. And that was true all the way up to using things like jQuery and things. These days, I think if I had to write my own version of Vue or React, I have almost no idea what’s happening now in that library, in all that code.</p>\n<p>Drew: For those of us who are not familiar, when you say something like Preact drops the virtual DOM and makes everything a lot smaller, what’s that virtual DOM giving us?</p>\n<p>Chris: To answer that question, I want to take just a slight step back. One of the nicest things that frameworks and other state-based libraries give you is DOM diffing. If you’re not really updating the UI that much, you could get by with saying, \"Here’s a string of what the markup is supposed to look like. In HTML, I’ll just put all this markup in this element.\" When you need to change something, you do it again. That is a little expensive for browsers, because it triggers a repaint.</p>\n<p>Chris: But I think potentially more importantly than that, one of the issues with doing that is that you have any sort of interactive element in there, a form-field, a link that someone has focused on. That focus is lost because the element... even though you have a new thing that looks similar, it’s not the same literal element. So if focus is lost, it can create confusion for people using screen readers. There’s just a whole bunch of problems with that.</p>\n<p>Chris: Any state-based UI thing worth its weight is going to implement some for of DOM diffing, where they say, \"Here’s what the UI should look like. Here’s what it looks like right now in the DOM. What’s different?\" And it’s going to go and change those things. It’s effectively doing the stuff you would do just manually updating the UI yourself, but it’s doing it for you under the hood. So you can just say, \"Here’s what I want it to look like.\" And then the library or framework figures it out.</p>\n<p>Chris: The smaller things like Preact or Alpine, they’re actually doing that directly. They’re converting the string you provide them of what the UI should look like into HTML elements. And then they’re comparing each element to its corresponding piece in the literal DOM. As you end up with UIs that get bigger and bigger and bigger, that can have a performance implication because querying the DOM over and over again becomes expensive. If you want to get a sense for the type of interface where this becomes a problem, right-click and inspect element on the \"Favorite\" button on Twitter, or the \"Like\" button on Facebook. And take a look at the nesting of divs that gets you to that element. It’s very, very deep. It’s like a dozen or so divs, nested one inside the other just for that single tweet.</p>\n<p>Chris: When you start going that many layers down, it starts to really impact performance. What the virtual DOM does is instead of checking the real DOM every time, it creates an object-based map of what the UI looks like in JavaScript. And then does the same thing for the UI you want to replace the existing one with, and it compares those two. That’s a lot more performance in theory, than doing that in the real DOM. Once it gets a list of the things it needs to change, it just runs off and makes those changes. But it only has to attack the DOM once. It’s not checking every single element, every single time. If you have interfaces like Twitters or Facebooks or QuickBooks or something like that, virtual DOM probably makes a lot of sense.</p>\n<p>Chris: The challenge with it is... the difference between Preact and React is 27 kilobytes before you unpack the whole thing into its actual codewave. The raw download and unpacking and compiling time on that alone can add quite a bit of latency to the initial load on a UI. That becomes even more pronounced if your users are on not the latest devices from Apple. Even an Android device from a couple of years ago or a feature phone, or if you have people in developing countries, it’s just really... the time to get going is slower. And then on top of that, the actual interactive time is slower because of the extra abstraction.</p>\n<p>Chris: So it’s not just you load it and they’re comparable in speed. Each micro interaction that someone makes and the changes that need to happen can also be slightly slower just because of all that extra code in there. If you have a really, really complex UI with lots of nested elements and lots of data, then the virtual DOM’s performance gains outweigh that extra code weight. But any typical UI for a typical app that most of what I see developers using React or Vue for, the benefit you get from the virtual DOM just isn’t there and they’d be better off. Even if you want to keep the same convenience of React, use Preact. It’s a fraction of the size, it’ll work exactly the same way, and it’ll more performing. This is the kind of thing that I tend to argue for.</p>\n<p>Chris: We need to be better about picking the right tool for the job. If you go with an approach like that, if you get to a point where a virtual DOM actually makes sense, it’s much easier to port Preact into React than if you rolled your own. That’s the situation. If you’re really worried about that, you get some future-proofing built in too.</p>\n<p>Drew: Some might say, they might make the argument that these frameworks, things like Vue, React are so highly optimized for performance that you get so much benefit there that surely just pairing that with a package manager in a bundler to make sure you’re only sending down the code that you want to. Surely, you are way ahead already just by doing that?</p>\n<p>Chris: Yeah. I don’t agree. I don’t really have much more to elaborate on that other than... I guess maybe, but not really. Even with a bundler, you still need that React core. Even with the bundling, that’s still going to be bigger than using something like Preact.</p>\n<p>Chris: Drew, I really appreciate you leading the question on this. Because one of the other things I do talk about in my book, The Lean Web, and my talk of the same name, is how these tools... You mentioned the bundling, for example. One of the things we do to get around the performance hit that we take from using all this JavaScript is we throw even more JavaScript at the front-end to account for it. One of the ways we do that is package managers and module bundlers.</p>\n<p>Chris: As you alluded to... for those of you who don’t know, these are tools that will... they will compile all of your little individual JavaScript bits into one big file. The newer ones and the more... I don’t want to call them thoughtful. But the newer ones will use a feature called tree shaking, where they get rid of any code that isn’t actually needed. If that code has some dependencies that aren’t used for the thing you’ve actually done, they’ll drop some of that stuff out to make your packages as small as possible. It’s actually not a terrible idea, but it results in this thing I typically call dependency health where you have this really delicate house of cards of dependencies on top of dependencies on top of dependencies.</p>\n<p>Chris: Getting your process set up takes time. And anybody who has ever run an NPM install and then discovered that a bunch of dependencies were out of date and had to spend an hour trying to figure out which ones needed to be fixed and oh, it’s actually a dependency in a dependency and you don’t have the ability to go fix it yourself. It’s a whole thing. Maybe it works for you, but I’d rather spend my time not messing around trying to get my dependencies together.</p>\n<p>Chris: I’ve started collecting tweets from people where they complain about time wasted on their workflow. One of my favorites, Brad Frost a couple year ago, was talking about the depressing realization that the thing you’ve been slogging through in modern JS could have taken you 10 minutes in jQuery. I’m not really a jQuery fan, but I feel that pain when it comes to working with frameworks.</p>\n<p>Chris: The other issue with a lot of these tools is they start to become gatekeepers. I don’t know how much you really want to dive into this or not, Drew. But one of my big push-backs against JS, all the things in a workflow. Especially when you start to then say, \"Well, if we’re already using JS for the HTML, why not use it for CSS too?\" You start to exclude a lot of really talented people from the development process. It’s just a really big loss for the project for the community as a whole.</p>\n<p>Drew: Well, I certainly am... I started picking up React at the beginning of 2020, adding that to my skillset. I’ve been doing it now for nearly seven months. I’ve got to say one part I’m least confident in is setting up the tooling around getting a project started.</p>\n<p>Drew: It seems like there’s an awful lot of work to get something to Hello World, and there’s even more that you’ve got to know to get it to be production ready. That has to make development more difficult to get started with if this is being put forward as what you should be doing in 2020 to learn to be a web developer. Somebody coming in new to it is going to have a real problem. It’s going to be a real barrier to entry, isn’t it?</p>\n<p>Chris: Absolutely. The other piece here is that JavaScript developers aren’t always the only people working on a code base or contributing in a meaningful way to that code base. The more we make knowing JavaScript a requirement for working with a code base, the less likely those people are to be able to actually participate in the project.</p>\n<p>Chris: An example of that, that I like to talk about is WordPress, who has been recently... I shouldn’t say recently at this point. It’s been a couple of years now. But they’ve been shifting their back-end stack more and more to JavaScript, away from PHP, which is not inherently a bad thing. Their new editor, Gutenburg, is built on React.</p>\n<p>Chris: In 2018, WordPress’s lead accessibility consultant, Rian Rietveld, whose name I almost certainly butchered... she very publicly resigned from her positioned and documented why in a really detailed article. The core of the problem was that her and her team were tasked with auditing this editor to make sure that it was going to be accessible. WordPress comprises now 30% of the web. Their goal is to democratize publishing, so accessibility is a really important part of that. It should be an important part of any web project. But for them in particular, it is acutely important. Her team’s whole job is to make sure... her team’s whole job was to make sure that this editor would be accessible. But because neither she nor anyone on her team had React experience and because they couldn’t find volunteers in the accessibility community with that experience, it made it really difficult for her and her team to do their work.</p>\n<p>Chris: Historically, they could identify errors and then go in and fix them. But with the new React based workflow, they were reduced to identifying bugs and then filing tickets. They got added to a backlog along with all the other feature development requests that the JavaScript developers were working on. A lot of stuff that could have been easily fixed didn’t make it into the first release.</p>\n<p>Chris: In May of 2019, about a year after Rian resigned, there was a detailed accessibility audit done on Gutenburg. The full report was 329 pages. The executive summary alone was 34 pages. It documented 91 accessibility related bugs in quite a bit of detail. Many of these were really... I don’t want to call them simple low-hanging fruit, but a lot of them were basic things that Rian’s team could have fixed and it would have freed up the developers to focus on feature development. That’s ultimately what it seems like they ended up doing, was spending a lot of time on feature development and pushing this stuff off til later. But that team is super important to the project, and they suddenly got locked out of the process because of a technical choice.</p>\n<p>Chris: Alex Russell is a developer on the Chrome team. He wrote this article a couple of years ago called The Developer Bait and Switch, where he talked about the straw man argument of frameworks. This idea that these tools let you move faster and because of that, you can iterate faster and deliver better experiences. It’s this idea that a better developer experience means a better user experience. I think this is a very clear example of how that argument doesn’t always play out the way people believe it does. It’s a better experience for maybe some people, not for everyone.</p>\n<p>Chris: CSS developers, people working on design systems, their ability to create tools that others can use sometimes gets limited by these tool choices too. In my experience, I used to be better at CSS. It’s changed a lot in the last few years and I am nowhere near as good as I used to be. In my experience, the people who are really advanced CSS developers... and I do mean that in the truest sense. People who work on CSS are proper web developers working on a programming language. It’s a very special, or can be a very specialized thing. The people who are exceptionally good at it, in my experience, are not always also very good at JavaScript because you end up diving really deep into one thing and you slide a little bit on some other stuff. Their ability to work with these technologies gets hindered as well, which is too bad because it used to not be the case.</p>\n<p>Chris: When the stack was simpler, it was easier for people from multiple disciplines to participate in the development process. I think that’s to the detriment of both the things we build and the community at large, when that’s no longer the case.</p>\n<p>Drew: I found recently in a project researching ways to deal with some of the CSS problems, workflow problems, we’re having multiple working on the project and the bundle size increasing and the old CSS never getting removed. It was a React project, so we were looking at some of these CSS in JavaScript approaches to see what would be best for us to use to solve the problems that we had. What became very quickly apparent is there’s not only one solution to do this. There are dozens of different ways you could do this.</p>\n<p>Drew: CSS in JS is a general approach, but you might go from one project to the next and it’s completely influenced in a completely different way. Even if you’re a CSS person and you learn a particular approach on a project, those skills may not be transferrable anyway. It’s very difficult to see how somebody should investment too much time in learning that if they’re not particularly comfortable with JavaScript.</p>\n<p>Chris: Yeah. The other interesting thing that I think you just got out a little bit is when I talk about this, one of the biggest pieces of push-back I get is that frameworks enforce conventions. You’re going with Vanilla JavaScript, you’ve got this green field-blue sky, you can do anything you want kind of project. With React, there’s a React way to do things.</p>\n<p>Chris: But one of the things I have found is that there are Reacty approaches, but there’s not a strict one right way to do things with React. It’s one of the things people love about it. It’s a little bit more flexible, you can do things a couple of different ways if you want. Same with Vue. You can use that HTML based thing where you’ve got your properties right in the HTML and Vue replaces them, but you can also use a more JSX-like templating kind of syntax if you’d prefer.</p>\n<p>Chris: I’ve heard multiple folks complain about when they’re learning React, one of the big problems is you Google how to do X in React and you get a dozen articles telling you a dozen different ways that you could do that thing. That’s not to say they don’t put some guardrails on a project. I don’t think it’s as clearcut as, \"I’ve chosen a framework. Now this is the way I build with it.\" To be honest, I don’t know that that’s necessarily something I’d want either. I don’t think you’d want those tightly confined... some people do, maybe. But if you’re touting that as a benefit, I don’t think it’s quite as pronounced as people sometimes make it out to be.</p>\n<p>Chris: You got into an interesting thing though just there, where you were mentioning the CSS that is no longer needed. I think that is one of the legitimately interesting things that something like CSS and JS... or tying your CSS to JavaScript components in some way can get you is if that component drops out, the CSS also in theory, goes away with it. A lot of this to me feels like throwing engineering at people problems. Invariably, you’re still dependent on people somewhere along the line. That’s not to say never use those approaches, but they’re certainly not the only way to get at this problem.</p>\n<p>Chris: There are tools you can use to audit your HTML and pull out the styles that aren’t being used even without using CSS and JavaScript. You can write CSS \"the old-fashioned way\" and still do the linting of unused styles. There are authoring approaches to CSS that give you a CSS in JS-like output and keep your style sheet small without spitting out these gibberish human unreadable class names that you get with CSS and JS sometimes. Like X2354ABC, or just these nonsense words that get spit out.</p>\n<p>Chris: This is where I start to get really into the old man yells at cloud kind of thing. I’m really showing my developer age here. But yeah, it’s not necessarily that these things are bad, and they’re built to solve legitimate problems. I sometimes feel like there’s a little bit of a... if it’s good enough for Facebook, it’s good enough for us kind of thing that happens with these. Well, Facebook uses this tool. If we’re a real engineering program... team, department, organization, we should too. I don’t necessarily think that’s the right way to think about it. It’s because Facebook deals with problems that you don’t, and vice-versa. The size and scale of what they work on is just different, and that’s okay.</p>\n<p>Drew: Exactly. I see some of these things like CSS and JavaScript to be almost like a polyfill. We’ve got legitimate problems, we need a way to solve it. The technology isn’t providing us a way to solve it yet. Maybe whilst we wait for the web platform to evolve and to get around to addressing that problem, this thing that we do right now with JavaScript kind of will see us through and we’ll be okay. We know it’s bad. We know it’s not a great solution, but it helps us right now. And hopefully in the while we can pull it out and use the native solution.</p>\n<p>Chris: It’s really funny you bring this up. Because literally last night, I was watching a talk from Jeremy Keith from last year about progressive web apps. But he was talking about how a couple of decades ago, he was trying to convince people to use JavaScript. Which seems ridiculous at the time, but JavaScript was this new thing. He showed people how you could do cool things like change the color of a link on hover with this new... It seems absurd that you would need JavaScript for that now, because that’s what CSS does for you. But things like the focus attribute or property just didn’t exist at the time.</p>\n<p>Chris: One of the things he said in the talk that I think really resonated with me is that JavaScript in many ways, paves those cow paths. It’s this very flexible and open language that we can use to create or bolt in features that don’t exist yet. And then eventually, browsers catch up and implement these features in a more native way. But it takes time. I completely understand what you’re saying about this. It’s not the perfect solution, but it’s what we have right now.</p>\n<p>Chris: I think for me, the biggest difference between polyfills and some of these solutions is polyfills are designed to be ripped out. If I have a feature I want to implement that the browser doesn’t support yet, but there’s some sort of specification for it and I write a polyfill... once browsers catch up, I can rip that polyfill out and I don’t have to change anything. But when you go down the path of using some of these tools, ripping them up out means rewriting your whole code base. That’s really expensive and problematic. That’s not to say never use them, but I feel really strongly that we should be giving thought to picking tools that can easily be pulled out later. If we no longer need them or the platform catches up, it doesn’t require a huge rewrite to pull them out.</p>\n<p>Chris: So getting to that we have a whole bunch of styles we don’t use anymore thing, that’s why I would personally favor a build tool technology that audits your CSS against the rendered markup and pulls out the things you don’t need. Because down the road if a platform catches up, you can pull that piece of the build tool out without having to change everything. It’s just augmenting what you already have, whereas CSS and JS doesn’t give you that same kind of benefit. I’m just picking on that one, but I think about a lot of these technologies more broadly.</p>\n<p>Chris: I do feel things like React or Vue are probably paving some cow paths that browsers will eventually catch up with and probably use similar approaches if not the same, so there may be less rewriting involved there. A lot of the ecosystem stuff that gets plugged in around that may be less so.</p>\n<p>Drew: I think it’s right, isn’t it, that the web platform moves slowly and carefully. You think if five years ago, we were all putting JavaScript Carousels on our pages. They were everywhere. Everyone was implementing JavaScript Carousels. If the web platform had jumped and implemented a Carousel solution to satisfy that need, it would not be sat there with nobody using it because people aren’t doing that with Carousels anymore. Because it was just a fad, a design trend. To counteract that and stop the platform itself becoming bloated and becoming a problem that needs solving, it does have to move at a lot steadier pace. The upshot of that is HTML that I wrote in 1999 still works today because of that slow process.</p>\n<p>Drew: One of the other areas where things seem to be bloating out on the web is... I guess it’s related to the framework conversation. But it’s the concept of a single-page app. I feel like that a lot of promises are made around single-page apps as to their performance, like you’re getting all this benefit because you’re not reloading the entire page framework. I feel like they don’t always make good on those performance promises. Would you agree with that?</p>\n<p>Chris: Yes. Although I will confess, despite having a very lengthy chapter in my book on this and talking about that a lot in talks and conversations with people, I don’t think single-page apps are always a terrible thing. But I do think this idea that you need one for performance is overstated. You can oftentimes get that same level of performance with different approaches.</p>\n<p>Chris: I think one of the bigger challenges with single-page apps is... For anybody who’s unfamiliar with those. When a single-page app, instead of having separate HTML files or if you’re using something like a database driven site like WordPress, even though you don’t have actual physical HTML files for each page in your WordPress site, WordPress is creating HTML files on the fly and sending them back to browsers when URLs are requested. For purposes of this conversation, instead of having separate HTML files for every view in your app, a single-page app has a single HTML file. That’s what makes it a single-page app. JavaScript handles everything. Rendering the content, routing to different URL paths, fetching new content if it needs to from an API or something like that.</p>\n<p>Chris: One of the spoken benefits of these or stated benefits of these is that only the content on the page changes. You don’t have to re-download all the JS and the CSS. Oh, and you can do those fancy page transitions that designers sometimes love. In theory, this is more performant than having to reload the whole page.</p>\n<p>Chris: The problem with this approach from my perspective is that it also breaks a bunch of stuff that the browser just gives you for free out-of-the-box, and then you need to recreate it with more JS. You have an app that’s slow because it has a lot of JS. So you throw even more JavaScript at it to improve that performance and in doing so, you break a bunch of browser features and then have to re-implement those with even more JS too.</p>\n<p>Chris: For example, some things that the browser will do for free with a traditional website that you need to recreate with JavaScript when you go the single-page app. You need to intercept clicks on links and suppress them from actually firing, with your JavaScript. You then need to figure out what you actually need to show based on that URL, which is normally something that would get handled on the server or based on the file that goes with that URL path. You need to actually update the URL in the address bar without triggering a page reload. You need to listen for forward and back clicks on the browser and update content again, just like you would with clicks on links. You need to update the document title.</p>\n<p>Chris: You also need to shift focus in a way that announces the change in page to people who are using screen readers and other devices so that they’re not confused about where they are or what’s going on. Because they can’t see the change that’s happening, they’re hearing it announced. If you don’t actually shift focus anywhere, that announcement doesn’t happen. These are all things that the browser would do for you that get broken with single-page apps.</p>\n<p>Chris: On top of that, because you have all this extra JavaScript, this is complicated. So most people use frameworks and libraries to handle this sort of thing. Because of all this extra JavaScript to support this approach, you end up with potentially slower initial page load than you would have otherwise. Depending on the content you have, this approach I think sometimes can make sense. If you have an app that is driven by API data where you don’t necessarily know what those URL paths are going to look like ahead of time.</p>\n<p>Chris: Just an example here. You have an animal rescue where you have some adoptable animals, and that data comes from Petfinder, the animal adoption website. You have a bunch of animals there. Petfinder manages that, but you want to display them on your site with the Petfinder API. When your website’s being built, it doesn’t always necessarily have visibility to what pets are available in this exact moment and what kind of URL paths you’re going to need. A single-page app can help you there because it can dynamically on the fly, create these nice URLs that map with each dog or cat.</p>\n<p>Chris: Something like Instagram with lots of user created content, maybe that also makes sense. But for a lot of things, we do know where those URLs are going to be ahead of time. Creating an HTML file that has the content on it already is going to be just as fast as... sometimes even faster than the JavaScript based single-page app approach, especially if you use some other techniques to keep your overall CSS and JavaScript size down. I use this approach on a course portal that I have. The page loads feel instantaneous because HTML is so easy for browsers to render compared to other parts of the stack. It feels like a single-page app, but it’s not.</p>\n<p>Drew: Especially when you consider hosting solutions like a Jamstack approach of putting HTML files out in a CDN so it’s being served somewhere physically close to the user.</p>\n<p>Chris: Yep.</p>\n<p>Drew: Loading those pages can just be so, so quick.</p>\n<p>Chris: Yes. Absolutely. Absolutely. One of the other arguments I think people used to make in favor of single-page apps is offline access. If someone loads it and then their network goes down, the app is already up and all the routes are handled just with the file that’s already there. So there’s no reloading, they don’t lose any work. That was true for a long time. Now with service workers and progressive web apps, that is I think less of a compelling argument, especially since service workers can fetch full HTML files and cache them ahead of time if needed.</p>\n<p>Chris: You can literally have your whole app available offline before someone has even visited those pages if you want. It just happens in the background without the user having to do anything. It’s again, one of those technologies that maybe made sense for certain use cases a few years ago a little less compelling now.</p>\n<p>Drew: It reminds me slightly of when we used to build websites in Flash.</p>\n<p>Chris: Yes.</p>\n<p>Drew: And you’d have just a rectangle embedded in an HTML page which is your Flash Player, and you’d build your entire site in that. You had to reimplement absolutely everything. There was no back button. If you wanted a back button, you had to create a back button, and then you had to create what the concept of a page was. You were writing code upon code, upon code to reimplement just as you are saying things that the browser already does for you. Does all this JavaScript that we’re putting into our pages to create this functionality... is this going to cause fragility in our front-ends?</p>\n<p>Chris: Yes. This is almost certainly from my mind, one of the biggest issues with our over-reliance on JavaScript. JavaScript is just by its nature, is a scripting language, the most fragile part of the front-end stack.</p>\n<p>Chris: For example, if I write an HTML element that doesn’t exist, I spell article like arcitle instead of article and the browser runs across that, it’s going to be like, \"Oh, I don’t know what this is. Whatever, I’ll just treat it like a div.\" And it keeps going. If I mistype a CSS property... Let’s say I forget the B in bold, so I write old instead, font way old. The browser’s going to be, \"I don’t know what this is. Whatever, we’ll just keep going.\" Your thing won’t be bold, but it will still be there.</p>\n<p>Chris: With JavaScript, if you mistype a variable name or you try to use a property, you try to call a variable that doesn’t exist or a myriad of other things happen... your minifier messes up and pulls one line of code to the one before it without a semicolon where it needs one, the whole app crashes. Everything from that line on stop working. Sometimes even stuff that happens before that doesn’t complete, depending on how your app is set up. You can very quickly end up with an app that in a different approach, one where you rely a lot more on HTML and CSS, it would work. It might not look exactly right, but it would still work... to one that doesn’t work at all.</p>\n<p>Chris: There’s an argument to be made that in 2020, JavaScript is an integral and important part of the web and most people don’t disable it and most people are using devices that can actually handle modern JavaScript. That’s true, but that’s not the only reason why JavaScript doesn’t work right, even if you have a linter there for example and you catch bugs ahead of time and things. There’s plenty of reasons why JavaScript can go horribly awry on you. CDNs fail.</p>\n<p>Chris: Back in July of last, a year ago this month... at least, when we’re recording this... a bad deploy took down Cloudflare. Interestingly as we’re recording this, I think a week or two ago, Cloudflare had another massive outage that broke a whole bunch of things, which is not a knock on Cloudflare. They’re an incredibly important service that powers a ton of the web. But CDNs do sometimes go down. They are a provider used by 10% of Fortune 1,000 companies. If your JS is served by that CDN and it breaks, the JavaScript file never loads. And if your content is dependent on that JS, your users get nothing instead of getting something just not styled the way you’d like.</p>\n<p>Chris: Firewalls and ad blockers get overly aggressive with what they block. I used to work at a company that had a JavaScript white list because they were extremely security conscious, they worked with some government contract stuff. They had a list of allowed JavaScript, and if your site or if your URL wasn’t part of that, no JavaScript. You have these sites. I remember going to a site where it had one of the hamburger kind of style menus on every view whether it was desktop or mobile, and I could not access any page other than the homepage because no JavaScript, no hamburger, that was it.</p>\n<p>Chris: Sometimes connections just timeout for reasons. Either the file takes a while or someone’s in a spotty or slow connection. Ian Feather, an engineer at BuzzFeed, shared that about 1% of requests for JavaScript on the site fail which is 13 million requests a month. Or it was last year, it’s probably even more now. That’s a lot of failed JavaScript. People commuting go through tunnels and lose the internet. There’s just all sorts of reasons why JavaScript can fail and when it does, it’s so catastrophic.</p>\n<p>Chris: And so we built this web that should be faster than ever. It’s 2020, 5G is starting to become a thing. I thought 4G was amazing. 4G is about as fast as my home wifi network. 5G is even faster, which is just bonkers. Yet somehow, we have websites that are slower and less performant than they were 5 or 10 years ago, and that makes no sense to me. It doesn’t have to be that way.</p>\n<p>Drew: How do we get out of this mess, Chris?</p>\n<p>Chris: Great question. I want to be really clear. I know I’ve hammered on this a couple times. I’m not saying all the new stuff is bad, never use it. But what I do want to encourage is a little bit more thoughtfulness about how we build for the web.</p>\n<p>Chris: I think the overlying theme here is that old doesn’t mean obsolete. It doesn’t mean never embrace new stuff, but don’t be so quick to just jump on all the shiny new stuff just because it’s there. I know it’s one of the things that keeps this industry really exciting and makes it fun to work in, there’s always something new to learn. But when you pick these new things, do it because it’s the right tool for the job and not just because it’s the shiny new thing.</p>\n<p>Chris: One of the other things we didn’t get into as much as I would have liked, but I think is really important, is that the platform has caught up in a really big way in the last few years. Embracing that as much as possible is going to result in a web experience for people that is faster, that is less fragile, that is easier for you to build and maintain because it requires fewer dependencies such as using what the browser gives you out-of-the-box. We used to need jQuery to select things like classes. Now browsers have native ways to do that. People like JSX because it allows you to write HTML in JavaScript in a more seamless way. But we also have template literals in Vanilla JavaScript that give you that same level of ease without the additional dependency. HTML itself can now replace a lot of things that used to require JavaScript, which is absolutely amazing.</p>\n<p>Chris: We talked a little bit about... this is a CSS thing, but hovers over links and how that used to require JavaScript. But using things like the details and summary elements, you can create disclosure, like expand and collapse or accordion elements natively with no scripting needed. You can do auto complete inputs using just a... I shouldn’t say just, I hate that word. But using a humble input element and then a data list element that gets associated with it, with some options. If you’re curious about how any of this stuff works over at vanillajstoolkit.com, I have a bunch of JavaScript stuff that the platform gives you. But I also have some used to require JavaScript and now doesn’t kind of things that might be interesting too if you want some code samples to go along with this.</p>\n<p>Chris: On the CSS side of things, my most popular Vanilla JS plugin ever is this library that lets you animate scrolling down to anchor links. It is very big. It’s the hardest piece of code I’ve ever had to write. And it now is completely replaced with a single line of CSS, scroll behavior smooth. It’s more performant. It’s easier to write. It’s easier to modify its behavior. It’s just a better overall solution.</p>\n<p>Chris: One of the other things that I wish we did more is leaning on multi-page apps. I feel a little bit vindicated here, because I recently saw an article from someone at Google that actually pushes for this approach now too. I thought that was pretty interesting, given this huge angular and then framework... all the things, boom, that Google started a few years back. Kind of cool to see them come back around to this. Using things like static site generators and awesome services like Netlify and CDN caching, you can create incredibly fast web experiences for people using individual HTML files for all of your different views. So kind of leaning on some of this out-of-the-box stuff.</p>\n<p>Chris: In situations where that’s not realistic for you, where you do need more JavaScript, you do need some sort of library, maybe taking a look at the smaller and more modular approaches first instead of just going for the behemoths of the industry. Instead of React, would Preact work? Instead of angular... I mean, instead of Vue rather, would Alpine JS work? There’s also this really interesting pre-compiler out there now called Svelt, that gives you a framework-like experience and then compiles all your code into Vanilla JavaScript. So you get these really tiny bundles that have just what you need and nothing else. Instead of CSS and JavaScript, could you bolt in some third party CSS linter that will compare your HTML to your CSS and pull out the stuff that got left in there by accident? Would a different way of authoring your CSS, like object oriented CSS by Nicole Sullivan, work instead? We didn’t really get to talk about that, but it’s a really cool thing people should check out.</p>\n<p>Chris: And then I think maybe the third and most important piece here, even though it’s less of a specific approach and more just a thing I wish more people kept in mind, is that the web is for everyone. A lot of the tools that we use today work for people who have good internet connections and powerful devices. But they don’t work for people who are on older devices, have spotty internet connections. This is not just people in developing areas. This is also people in the U.K., in certain parts of the U.S. where we have absolutely abysmal internet connections. The middle of our country has very slow internet. I know there’s places in part of London where they can’t wire a new broadband in for historical reasons, so you’re left with these old internet connections that are really bad. There’s places like that all over the world. Last time I was in Italy, same thing. The internet there was horrible. I don’t know if it’s changed since then.</p>\n<p>Chris: The things we build today don’t always work for everyone, and that’s too bad. Because the vision of the web, the thing I love about it, is that it is a platform for absolutely everyone.</p>\n<p>Drew: If listeners want to find out more about this approach, you’ve gone into loads of detail to it in your book, The Lean Web. And that’s available online. Is it a physical book or a digital book?</p>\n<p>Chris: It’s a little bit of both. Well, no. It’s definitely not a physical book. You go to leanweb.dev. You can read the whole thing for free online. You can also if you want, there’s EPUB and PDF versions available for a really small amount of money, I forget how much now. I haven’t looked at it in a while. The whole thing is free online if you want it. You can also watch a talk on this topic where I go into more details if you want.</p>\n<p>Chris: But I’ve also put together a special page just for listeners of Smashing Podcast at gomakethings.com/smashingpodcast, because I’m very creative with naming things. That includes a bunch of resources in addition to the book, around things that we talked about today. It links to a lot of the different techniques that we covered, other articles I’ve written that go deeper into some of these topics and expand on my thinking a little bit. If folks want to learn more, that would probably be the best place to start.</p>\n<p>Drew: That’s terrific. Thank you. I’ve been learning all about the Lean Web. What have you been learning about lately, Chris?</p>\n<p>Chris: Yeah, a couple of things. I alluded to this a little bit earlier with watching Jeremy’s video on progressive web apps. I have been putting off learning how to actually write my own progressive web app for a couple of years because I didn’t have a specific need on anything I was working with. I recently learned from one of my students who is in South Africa, that they have been dealing with rolling blackouts because of some stuff they have going on down there. As a result, she is not able to work on some of the projects we’ve been doing together regularly, because the power goes out and she can’t access the learning portal and follow along.</p>\n<p>Chris: For me, now building an experience where it works even if someone doesn’t have internet has become a higher priority than... I realized that maybe it was before, so I just started digging into that and hope to get that put together in the next few weeks. We’ll see. Jeremy Keith’s resources on this have been an absolute lifesaver though. I’m glad they exist.</p>\n<p>Chris: I know, Drew, you mentioned one of the reasons you like to ask this question is to show that people no matter how seasoned they are, are always learning. Just a little related anecdote. I have been a web developer for I think, about eight years now. I still have to Google the CSS property to use for making things italic, literally every single time I use it. For some reason, my brain defaults to text decoration even though that’s not the right one. I’ll try a couple of combinations of different things, and I always have one word wrong every time. I also sometimes write italics instead of italic. Yeah. If anybody ever there is ever feeling like, oh, I’m never going to learn this stuff... just know that no matter how seasoned you are, there’s always some really basic thing that you Google over and over again.</p>\n<p>Drew: I’ve been a web developer for 22, 23 years, and I have to Google the different properties for Flexbox still, every time. Although I’ve been using that for 23 years. But yeah, some things just... there’s probably going to more of those as I get older.</p>\n<p>Chris: Yeah. Honestly, I ended up building a whole website of stuff I Google over and over again, just to have an easier copy-paste reference because that was easier than Googling.</p>\n<p>Drew: That’s not a bad idea.</p>\n<p>Chris: That’s the kind of lazy I am. I’ll build a whole website to save myself like three seconds of Googling.</p>\n<p>Drew: If you the listener would like to hear more from Chris, you can find his book on the web at leanweb.dev, and his developer Tips newsletter and more at gomakethings.com. Chris is on Twitter at Chris Ferdinandi. And you can check out his podcast at vanillajspodcast.com or wherever you usually get your podcasts. Thanks for joining us today, Chris. Do you have any parting words?</p>\n<p>Chris: No. Thank you so much for having me, Drew. I had an absolutely smashing time. This was heaps of fun. I really appreciate the opportunity to come chat.</p>\n","descriptionType":"html","publishedDate":"Tue, 28 Jul 2020 05:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/305b256f-0b65-4042-995c-1c3e806ad6dd/smashing-podcast-episode-21.png","linkMd5":"16c40e68c02c8dbd92a41f61b38f53b0","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn33@2020_3/2020/09/05/07-59-16-354_f385da0cfc6d17ec.webp","destWidth":1201,"destHeight":631,"sourceBytes":289608,"destBytes":66034,"author":"hello@smashingmagazine.com (Drew McLellan)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/305b256f-0b65-4042-995c-1c3e806ad6dd/smashing-podcast-episode-21.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/013d0d6a-f33c-41ea-bfe6-f99f95fdd75d/chris-ferdinandi-200x200-opt.jpg":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn93@2020_6/2020/09/05/07-59-24-472_f4744a805d1a186d.webp"},"publishedOrCreatedDate":1599292755752},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Accessibility In Chrome DevTools","link":"https://smashingmagazine.com/2020/08/accessibility-chrome-devtools/","description":"<p>I spend a lot of time in DevTools, and in doing so, I’ve come to learn about some of the more ‘hidden’ features in DevTools and would love to share some of them with you in this article — specifically around accessibility.</p>\n<p>This article uses Google Chrome since it’s a browser I use and feel comfortable with. That being said, Firefox, Safari, and Edge have all made great strides in their developer tools, and they definitely have some great accessibility-related features of their own. </p>\n<p>You might already be familiar with DevTools, but here’s a quick reminder how to inspect an element on a webpage:</p>\n<ol>\n<li>Open a webpage you are interested in inspecting, in Google Chrome</li>\n<li>Use the shortcut Cmd + Shift + C (Ctrl + Shift + C on Windows)</li>\n<li>Your pointer is in Inspect Element mode, go ahead and click an element on the webpage</li>\n</ol>\n<p>Just like that, you’ve opened up DevTools and have begun inspecting elements. The different panels correspond to different features, e.g. around JavaScript debugging, performance, and so on.</p>\n<p>There are accessibility-related features scattered throughout, so let us explore what they do, where they live, and how to use them.</p>\n<h3>Contrast Ratio</h3>\n<p>This is a feature to check whether the inspected text has a satisfactory color contrast against the background color.</p>\n<p>Typically, a <a href=\"https://webaim.org/articles/contrast/\">high level of contrast</a> between the text color and underlying background color means more legible text for users of different abilities. In addition, it helps support users reading your text in a variety of <a href=\"https://www.w3.org/WAI/perspective-videos/contrast/\">environmental conditions</a>, consider these examples which can impact how a user perceives text legibility:</p>\n<ul>\n<li>Looking at a screen while outside with lots of sunlight</li>\n<li>A mobile device has lowered its screen brightness all the way down to preserve battery life</li>\n</ul>\n<blockquote>“The intent is to provide enough contrast between text and its background so that it can be read by people with moderately low vision.”<br /><br />— <a href=\"https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum.html\">Understanding Success Criterion 1.4.3: Contrast (Minimum)</a></blockquote>\n\n<p>Using the contrast ratio tool can give us an immediate yes/no answer to the question: does this text meet the minimum contrast standard. Using this tool can help influence the design and <a href=\"https://toolness.github.io/accessible-color-matrix/\">color scheme</a> of your website, which can lead to more readable content for users with low vision.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/069416b8-6099-4284-be39-914fe858f9fc/accessibility-chrome-devtools-contrast-ratio.png\" /></p>\n<p>Available in the color picker tool, the contrast ratio feature can inform you on whether a minimum contrast requirement has been met. To access this feature:</p>\n<ol>\n<li>Inspect a text element with the DevTools</li>\n<li>Find the color property in the Styles pane, and click the small colored square to bring up the color picker tool</li>\n<li>Click on the text which says ‘Contrast ratio’ which presents further information on this subject</li>\n</ol>\n<p>The three ratios represent:</p>\n<ul>\n<li>Your current contrast ratio</li>\n<li>The <a href=\"https://www.w3.org/WAI/WCAG21/quickref/#contrast-minimum\">minimum</a> contrast ratio (AA)</li>\n<li>The <a href=\"https://www.w3.org/WAI/WCAG21/quickref/#contrast-enhanced\">enhanced</a> contrast ratio (AAA)</li>\n</ul>\n<p>As an exercise for yourself: drag the circular color picker tool across the color spectrum and observe the points at which the minimum contrast and enhanced contrast ratios are satisfied.</p>\n<p>This feature can also be reported to you through a Lighthouse Report, covered in Lighthouse section of this article.</p>\n<h3>Accessibility Inspector</h3>\n<p>This refers to a DevTools pane which lets you view various accessibility properties and ARIA information for DOM nodes.</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA\">ARIA</a> refers to a collection of properties, typically used in HTML, which in turn makes your website more accessible to individuals of different abilities. It’s absolutely worth using on your own websites, but it does require understanding the <a href=\"https://developer.mozilla.org/en-US/docs/Learn/Accessibility\">fundamentals of web accessibility</a> to ensure you’re using it in a way which will help your users.</p>\n<p>For example consider the following piece of HTML:</p>\n<pre><code>&#60;p class=\"alert\" role=\"alert\"&#62;\n    That transaction was successful\n&#60;/p&#62;\n</code></pre>\n\n<p>An assistive device, such as a <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Screen_reader\">screen reader,</a> can use the <code>role=\"alert\"</code> property to announce such information to the user. The Accessibility pane within DevTools can cherry-pick such a property (<code>role</code>) and present it to you, so it’s clear what accessibility-related properties an element has.</p>\n<p>Validating the information you see in this pane can help answer the question: “Am I coding accessibility incorrectly”, whether it’s syntactically or structurally, just keep in mind, applying accessibility techniques with the correct syntax, and having an <a href=\"https://www.w3.org/WAI/fundamentals/accessibility-intro/\">accessible website</a>, are two different things!</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9fa36b74-911c-4945-909d-f24608129e74/accessibility-chrome-devtools-a11y-inspector.png\" /></p>\n<p>To start using this, you can open up the Accessibility pane with an inspected element:</p>\n<ol>\n<li>Inspect any element on the page, e.g. a hyperlink or search box</li>\n<li>Open up the Accessibility pane which is found in the Elements Panel<br /><strong>Bonus tip</strong>: rather than having to locate the pane (it’s not open by default), I search for ‘Show Accessibility’ in the Command Menu (Cmd + Shift + P).</li>\n</ol>\n<p>You’ll find a bunch of information here, such as:</p>\n<ul>\n<li>An <a href=\"https://www.w3.org/WAI/PF/aria-implementation/#intro_treetypes\">accessibility tree</a> (a subset of the DOM tree)</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA\">ARIA</a> attributes</li>\n<li>Computed accessibility properties (e.g. is something focusable, is it editable, does it pass form validation)</li>\n</ul>\n<p>Depending on the inspected element, some of this information may not be applicable, for example, maybe an element legitimately does not need ARIA attributes. </p>\n<p>As with most features in DevTools, what you see in this pane is ‘live’ — changes you make in the Elements Panel DOM Tree are reflected back to this pane immediately, making it helpful for correcting a misspelled ARIA attribute for example.</p>\n<p>If you’re confident in your use of Accessibility, possibly because you’re using an alternative automated testing tool such as <a href=\"https://www.deque.com/axe/\">axe</a>, then you may not use this pane very often, and that’s okay.</p>\n<p>If you’re interested in learning more while looking at real-world websites, I’ve made a 14-minute video on <a href=\"https://www.youtube.com/watch?v=xWPMfcjhts8\">Accessibility debugging with Chrome DevTools</a>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a2278821-a2b8-42d6-bb65-6bf14e59e94c/accessibility-chrome-devtools-lighthouse.png\" /></p>\n<p>While checking for security, general web best practices, performance is helpful. Let’s focus on how to run an accessibility audit in Lighthouse:</p>\n<ol>\n<li>Navigate to the Lighthouse panel in DevTools</li>\n<li>Uncheck all categories, but keep 'Accessibility’ checked</li>\n<li>Click ‘Generate Report’</li>\n<li>In the resulting report, click through the different suggestions to learn more about them</li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/44e9cf35-5865-4186-b71c-96223e4fd949/accessibility-chrome-devtools-lighthouse-passed.png\" /></p>\n<p>If you want to learn more about Accessibility (I certainly do!), clicking through failed, but even passed audits are a great way to learn since almost each audit links off to dedicated web developer documentation on the audit itself, and why it’s important.</p>\n<p>For the most part, the audit documentation pages are extremely succinct and I highly recommend them. Let’s take a look at the audit <a href=\"https://web.dev/document-title/\">documentation</a> for ensuring a <code>&#60;title&#62;</code>  element is present. It specifies:</p>\n<ul>\n<li>How the Lighthouse title audit fails</li>\n<li>How to add a title</li>\n<li>Tips for creating great titles</li>\n<li>Example of a title <em>not</em> to use, along with a title worth using</li>\n</ul>\n<p>And in the case of the document title documentation, it only took 300 words to explain those 4 points above.</p>\n<p>One interesting thing to note, unlike the Accessibility pane, Lighthouse Audits are very instructional by default, making the Lighthouse panel a great place to visit when you’re just getting started out.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d7b4bf85-3b35-471f-9dc1-457051154eb1/accessibility-chrome-devtools-lighthouse-learn-more.png\" /></p>\n<p> As you become more advanced with building accessible pages, you may move away from pre-defined audits and spend more time in the accessibility pane.</p>\n<h3>Emulate Vision Deficiencies</h3>\n<p>This is a DevTools feature to apply vision deficiencies, such as blurred vision, to the current page.</p>\n<blockquote>“Globally, approximately 1 in 12 men (8%) and 1 in 200 women have color vision deficiencies.”<br /><br />— <a href=\"https://www.w3.org/TR/low-vision-needs/\">Accessibility Requirements for People with Low Vision</a></blockquote>\n\n<p>You’ll want to use this feature to help ensure your website meets the needs of your users. If your website is displaying an important image, you may discover that this image is difficult to comprehend for someone with <a href=\"https://en.wikipedia.org/wiki/Color_blindness\">tritanopia</a> (impaired blue and yellow vision), or is even difficult to comprehend for someone with blurred vision.</p>\n<blockquote>“Some low visual acuity can be corrected with glasses, contact lenses, or surgery — and some cannot. Therefore, some people will have blurry vision (low visual acuity) no matter what.”<br /><br />— <a href=\"https://www.w3.org/TR/low-vision-needs/\">Accessibility Requirements for People with Low Vision</a></blockquote>\n\n<p>For example, in the case of an image, you may find that there is a higher resolution image available for download while emulating blurred vision via DevTools, rather than a user with blurred vision can use and in turn comprehend what the image is showing. This will require some <a href=\"https://www.smashingmagazine.com/2018/04/designing-accessibility-inclusion/\">design/UX based problem-solving skills</a> — possibly from you/your colleagues — but it can be the difference between meeting the needs of your users, or not meeting their needs.</p>\n<p>💡️ <strong>Please note</strong>: <em>The following image is partially blurred, to demonstrate the ‘Blurred vision’ emulation feature of DevTools.</em></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8b7629f2-b7ba-4467-847e-a749c7488b25/accessibility-chrome-devtools-emulating-blurred-vision.png\" /></p>\n<p>You can try this feature out with the following steps:</p>\n<ol>\n<li>Open the Command Menu (Cmd + Shift + P or Ctrl + Shift + P on Windows)</li>\n<li>Search for and select ‘Show rendering’</li>\n<li>Select a vision deficiency such as ‘Blurred vision’ from the Emulate vision deficiencies section in the Rendering Pane.</li>\n</ol>\n<p>Here are a few examples of vision deficiencies you can apply via DevTools:</p>\n<ul>\n<li><strong>Blurred vision</strong><br />Where vision is less precise</li>\n<li><strong>Protanopia</strong><br />Color blindness resulting from insensitivity to red light</li>\n<li><strong>Tritanopia</strong><br />Impaired blue and yellow vision</li>\n</ul>\n<p>Emulation features like this will not fully account for subtle differences in how such deficiencies manifest themselves with individuals, let alone the wide range of vision deficiencies out there. That being said, this feature can still help us as web developers with understanding and improving the accessibility of our pages.</p>\n<h3>Inspect Element Tooltip</h3>\n<p>This feature refers to an improved tooltip which now surfaces accessibility-related information when you use the ‘Inspect Element’ feature. It’s a subtle, yet still very important feature since it can inform you of how accessible elements are, at a quick glance.</p>\n<p>I say it’s important because in the case of the four other features mentioned in this article, they require intentional action on our part (click the generate report button, navigate to the Accessibility pane, open the color picker tool, and so on). However, for this feature, it surfaces in one of the most common actions of DevTools while inspecting an element.</p>\n<p>As a short challenge for yourself, take a look at the following two screenshots. They demonstrate the enhanced DevTools Inspect Element tooltip which now has an accessibility section on there. Can you identify what the properties in that section represent?</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a3dbe3e-72ce-40c3-9db4-fae993d60ad9/accessibility-chrome-devtools-inspect-tooltip.png\" /></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a2120835-5cfc-47c1-9c62-25cd1d46354d/accessibility-chrome-devtools-inspect-tooltip-alt.png\" /></p>\n<p>You may notice that these are the exact same pieces of information we saw earlier — as part of the Contrast Ratio section and the Accessibility Inspector. They’re the same properties but surfaced in a (hopefully) simpler way.</p>\n<p>Note: There’s also a “Keyboard-focusable” property in that tooltip (the very last item). This indicates whether or not the item is <a href=\"https://web.dev/control-focus-with-tabindex/\">keyboard accessible</a>. If true, this will typically suggest the element in question can be focussed by tabbing to it.</p>\n<p>The way I see it: Inspect Element is an extremely common use case within browser DevTools, so cherry-picking useful accessibility-related properties for the Inspect Element tooltip can serve as a helpful reminder, and prompt us as web developers to investigate further and ensure what we’re building is accessible.</p>\n<h3>Conclusion</h3>\n<p>Web developer tooling to improve accessibility has improved rapidly over the years, but sometimes these tools are hidden away or simply undocumented. In this article, we explored some of those features which can hopefully help us when applying accessibility best practices to the websites we build.</p>\n<p>Here’s a reminder of what we covered:</p>\n<ul>\n<li><strong>Contrast ratio</strong><br />Check whether the inspected text element has a satisfactory contrast ratio.</li>\n<li><strong>Accessibility Inspector</strong><br />View various accessibility properties and ARIA information.</li>\n<li><strong>Lighthouse</strong><br />A website checker that covers best practices, accessibility, and more.</li>\n<li><strong>Emulate vision deficiencies</strong><br />A tool to apply vision deficiencies (such as blurred vision) to the page.</li>\n<li><strong>Inspect Element Tooltip</strong><br />An improved tooltip which surfaces accessibility-related information.</li>\n</ul>\n<p>I make the <a href=\"https://umaar.com/dev-tips/\">Dev Tips</a> mailing list if you want to keep up to date with over 200 web development tips! I also post loads of bonus web development resources on my <a href=\"https://twitter.com/umaar\">Twitter</a>.</p>\n<p>That’s it for now! Thank you for reading.</p>\n","descriptionType":"html","publishedDate":"Thu, 13 Aug 2020 07:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1aaa4f81-68d8-4c74-aa38-6d843cbd0d72/accessibility-chrome-devtools.png","linkMd5":"692062341a74418e56f3a5d4d97a92e4","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn59@2020_5/2020/09/05/07-59-16-728_dc09a9666ee1bdf3.webp","destWidth":1201,"destHeight":631,"sourceBytes":211032,"destBytes":49212,"author":"hello@smashingmagazine.com (Umar Hansa)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1aaa4f81-68d8-4c74-aa38-6d843cbd0d72/accessibility-chrome-devtools.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/069416b8-6099-4284-be39-914fe858f9fc/accessibility-chrome-devtools-contrast-ratio.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn40@2020_2/2020/09/05/07-59-22-198_886476045649df01.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9fa36b74-911c-4945-909d-f24608129e74/accessibility-chrome-devtools-a11y-inspector.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn67@2020_2/2020/09/05/07-59-27-427_8f7da5e6cd51912f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a2278821-a2b8-42d6-bb65-6bf14e59e94c/accessibility-chrome-devtools-lighthouse.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn76@2020_6/2020/09/05/07-59-39-889_4fd9cedb953acf55.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/44e9cf35-5865-4186-b71c-96223e4fd949/accessibility-chrome-devtools-lighthouse-passed.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn61@2020_5/2020/09/05/07-59-30-059_b85b37af0664bd5d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d7b4bf85-3b35-471f-9dc1-457051154eb1/accessibility-chrome-devtools-lighthouse-learn-more.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn59@2020_6/2020/09/05/07-59-33-717_450edc26cff084e1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8b7629f2-b7ba-4467-847e-a749c7488b25/accessibility-chrome-devtools-emulating-blurred-vision.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn64@2020_6/2020/09/05/07-59-22-407_c24035121a2b56a5.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a3dbe3e-72ce-40c3-9db4-fae993d60ad9/accessibility-chrome-devtools-inspect-tooltip.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn66@2020_6/2020/09/05/07-59-35-057_f993eb0e957835a3.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a2120835-5cfc-47c1-9c62-25cd1d46354d/accessibility-chrome-devtools-inspect-tooltip-alt.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn86@2020_5/2020/09/05/07-59-18-809_9b3a8b1b045b5019.webp"},"publishedOrCreatedDate":1599292755739},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Smashing Podcast Episode 22 With Chris Coyier: What Is Serverless?","link":"https://smashingmagazine.com/2020/08/smashing-podcast-episode-22/","description":"<p>Today, we’re talking about Serverless architectures. What does that mean, and how does it differ from how we might build sites currently? I spoke to Chris Coyier to find out.</p>\n\n\n\n<h3>Show Notes</h3>\n<ul>\n<li>Chris’ microsite <a href=\"https://serverless.css-tricks.com\">The Power of Serverless for Front-end Developers</a></li>\n<li>Chris <a href=\"https://twitter.com/chriscoyier\">on Twitter</a></li>\n<li><a href=\"https://shoptalkshow.com\">ShopTalk Show podcast</a></li>\n</ul>\n<h4>Weekly Update</h4>\n<ul>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/08/redux-real-world-application/\">Setting Up Redux For Use In A Real-World Application</a>,”<br /><em>by Jerry Navi</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/08/design-website-five-senses/\">Can You Design A Website For The Five Senses?</a>,”<br /><em>by Suzanne Scacca</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/08/static-blog-sapper-strapi/\">Creating A Static Blog With Sapper And Strapi</a>,”<br /><em>by Daniel Madalitso Phiri</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/08/guide-product-tours-react-apps/\">A Practical Guide To Product Tours In React Apps</a>,”<br /><em>by Blessing Krofegha</em></li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/\">How To Create A Porsche 911 With Sketch </a>,”<br /><em>by Nikola Lazarević</em></li>\n</ul>\n<h3>Transcript</h3>\n<p><a href=\"https://twitter.com/chriscoyier\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5b69c357-771a-428c-92d3-89322ec41af7/chris-coyier-200x200-opt.jpg\" /></a>Drew McLellan: He’s a web designer and developer who you may know from CSS-Tricks, a website he started more than 10 years ago and that remains a fantastic learning resource for those building websites. He’s the co-founder of CodePen, the browser based coding playground and community used by front-enders all around the world to share what they make and find inspiration from those they follow. Alongside Dave Rupert is the co-host of ShopTalk Show, a podcast all about making websites. So we know he knows a lot about web development, but did you know he once won a hot dog eating competition using only his charm? My smashing friends, please welcome Chris Coyier. Hello Chris, how are you?</p>\n\n<p>Chris Coyier: Hey, I’m smashing.</p>\n<p>Drew: I wanted to talk to you today not about CodePen, and I don't necessarily want to talk to you about CSS-Tricks, which is one of those amazing resources that I’m sure everyone knows appears right at the top of Google Search results when looking for answers about any web dev question. Up pops your face and there’s a useful blog post written by you or one of your guest contributors.</p>\n<p>Chris: Oh, I used to actually do that. There was a... I don't know, it probably was during the time of when Google had that weird social network. What was that? Google Plus?</p>\n<p>Drew: Oh, Plus, yeah.</p>\n<p>Chris: Yeah, where they would associate a website with a Plus account, and so my Plus account had an avatar, and the avatar was me, so it would show up in search results. I think those days are gone. I think if you...</p>\n<p>Drew: I think so, yeah-</p>\n<p>Chris: Yeah.</p>\n<p>Drew: But I kind of wanted to talk to you about something that has been a little bit more of a sort of side interest of yours, and that’s this concept of serverless architectures.</p>\n<p>Chris: Mm (affirmative).</p>\n<p>Drew: This is something you’ve been learning sort of more about for a little while. Is that right?</p>\n<p>Chris: Yeah, yeah. I’m just a fan. It seems like a natural fit to the evolution of front-end development, which is where I feel like I have, at least, some expertise. I consider myself much more of a... much more useful on the front-end than the back-end, not that I... I do it all these days. I’ve been around long enough that I’m not afraid of looking at a little Ruby code, that’s for sure. But I prefer the front-end. I’ve studied it more. I’ve participated in projects more at that level, and then along comes this little kind of a new paradigm that says, \"You can use your JavaScript skills on the server,\" and it’s interesting. You know? That’s how I think of it. There’s a lot more to it than that, but that’s why I care, is because I feel it’s like front-end developers have dug so deep into JavaScript. And now we can use that same skill set elsewhere. Mm, pretty cool.</p>\n<p>Drew: Seems like a whole new world has opened up, whereas if you were just a front-end coder... I say, just a front-end coder, I shouldn't. If you’re a front-end coder, and you’re used to working with a colleague or a friend to help you with the back-end implementation, suddenly that’s opened up. And it’s something that you can manage more of the whole stack yourself.</p>\n<p>Chris: Yeah, yeah. That’s it.</p>\n<p>Drew: Addressing the elephant in the room, right at the top. We’re talking about serverless, and obviously, naming things is hard. We all know that. Serverless architecture doesn't mean there are no servers, does it?</p>\n<p>Chris: I think it’s mandatory, like if this is the first podcast you’re hearing of it, or in the first... you’re only hearing the word \"serverless\" in the first dozen times you ever heard it, it’s mandatory that you have a visceral reaction and have this kind of, \"Oh, but there are still servers.\" That’s okay. If that’s happening to you right now, just know that, that’s a required step in this. It’s just like anything else in life. There’s stages to understanding. The first time you hear something, you’re required to kind of reject it a little bit, and then only after a dozen times or so, or after it’s proven its worth a little bit to you, do you get to enter the further stages of understanding here. But the word has won, so if you’re still fighting against the word \"serverless\", I hate to tell you, that the train has left the station there. The word is already successful. You’re not going to win this one. So, sorry.</p>\n<p>Chris: But I do think it’s interesting that... it’s starting to be like, maybe there actually aren't servers involved sometimes. I would think one of the things that locked serverless in as a concept was AWS Lambda. They were kind of the first on the scene. A lambda is like a function that you give to AWS and it puts it in the magical sky and then... it has a URL, and you can hit it and it will run that function and return something if you want it to. You know? That’s just HTTP or whatever. That’s how it works, which... the first time you hear that, you’re like, \"Why? I don't care.\" But then, there’s some obvious things to it. It could know my API keys that nobody else has access to. That’s why you run back-end to begin with, is that it knows secret stuff that doesn't have to be in the JavaScript on the client side. So if it needs to talk to a database, it can do that. It can do that securely without having to expose API keys elsewhere. Or even where that data is or how it gets it, it's...</p>\n<p>Chris: So that’s pretty cool. I can write a function that talks to a database, get some data, returns that. Cool. So, Lambda is that, but AWS works. You have to pick a region. You’re like, \"I don't know. Where it should be, Virginia? Oregon? Should I pick the Australia one? I don't know.\" They have 20, 30. I don't even know how many they have these days, but even lambdas had regions. They, I think, these days have Lambda@Edge, which means it’s all of the regions, which is kind of cool. But they were first, and now everybody’s got something like Lambda. All the cloud services. They want some kind of service in this world. One of them is CloudFlare. CloudFlare has workers. They have way more locations than AWS has, but they executed it kind of at a different time too... the way a CloudFlare worker... it’s similar to a lambda in that you can run Node. You can run JavaScript. You can run a number of other languages too, but... I think of this stuff largely, the most interesting language is JavaScript, just because of the prevalence of it.</p>\n<p>Chris: It happens just at the CDN level, which I guess is a server, but I tend to not think of CDNs as a server. Not as obviously as something else. It’s starting to feel even more serverless-y lately. Is a CDN a server? I mean, I guess it’s a computer somewhere, but it feels like even less server-y.</p>\n<p>Drew: It feels like, yes, a CDN may be a server, but it’s the most sort of minimal version of a server. It’s like a thin server, if you like.</p>\n<p>Chris: Yeah. Sure.</p>\n<p>Drew: All right. I’ve heard it said... I can't remember the source to credit, unfortunately, but I’ve heard serverless described as being \"like using a ride-sharing service like Uber or Lyft\" or whatever. You can be carless and not own a car, but that doesn't mean you never use a car.</p>\n<p>Chris: Yeah, it doesn't mean cars don't exist. Mm, that’s nice.</p>\n<p>Drew: You just summon one when you need it, but at the same time, you’re not paying the upfront purchase cost of a car. You’re not paying maintenance or fuel or-</p>\n<p>Chris: Right, and the pricing makes sense, too, right? That’s nice. That’s a nice analogy, I think. And then, because it’s at the CDN level too, it just intercepts HTTP requests that are already happening, which means you don't ask it... you don't send a request to it and it sends a request back. It’s just happening during the request naturally, which also makes it feel less server-y. I don't know, it’s interesting. It’s interesting for sure. So that’s a big deal, though, that you brought up the pricing thing. That you only pay for what you use. That’s significant too, because... let’s say, you’re a back-end dev, who’s used to spinning up servers their whole life. And they run the costs, \"I need this kind of server with this kind of memory and this kind of CPU and these kind of specs. And this is how much it’s going to cost.\" Serverless comes along and chops the head off of that pricing.</p>\n<p>Chris: So, even if you’re a back-end dev who just doesn't like this that much, that they’re just not into it, like your skill set is just what it is over the years, you compare the price and you’re like, \"What? I could be paying 1% of what I was paying before?\" You are not allowed to not care about that, right? If you’re this back-end dev that’s paying a hundred times more for their service than they need to be paying, you’re just kind of bad at your job then. Sorry to say. This has come along and this has shattered pricing in a lot of ways. You have to care about that. And it’s kind of cool that somebody else is... It’s not like you don't have to worry about security at all, but it’s not your server. You don't have... your lambda or cloud function, or your worker, or whatever, isn't sitting on a server that’s right next to some really sensitive data on your own network. It’s not right next to your database.</p>\n<p>Chris: If somebody writes code that somehow tries to eject itself from the worker or the lambda, or whatever, and try to get access to other things in their way, there’s nothing there to get. So the security’s a big deal too, so again, if that’s your job as the server admin, is to deal with the security of this thing. Running it, running certain things in Lambda, you just get some natural security from it, which is great. So, it’s way cheaper. It’s way more secure. It encourages these small modular architecture, which can be a good idea. It seems to be domino after domino of good ideas here. That’s why it’s notable. You know?</p>\n<p>Drew: Yeah, I mean, traditionally with a server based architecture that we’ve been running for decades on the web, you have a web server that you run yourself. It holds your front-end code, your back-end code, your database and everything. Then you need to maintain that and keep it running and pay the bills, and even if it’s not being used, it’s there clocking up bills. The user would make a request and it would build all that HTML query stuff from the database, send it all down the line to the browser. That process works. It’s how loads of things are built. It’s probably the majority of how the web is built. It’s how things like WordPress work. Is this really a problem that we need to solve? I mean, we’ve talked about costs a little bit. What are the other sort of problems with that, that we're... that we need to address, and that serverless might help us with?</p>\n<p>Chris: Yeah, the problems with the old school approach. Yeah, I don't know, maybe there isn't any. I mean, I’m not saying the whole web needs to change their whole... the whole thing overnight. I don't know. Maybe it doesn't really, but I think it opens up doors. It just seems like, when good ideas arrive like this, they just slowly change how the web operates at all. So, if there’s some CMS that is built in some way that expects a database to be there, it means that maybe the hosts of the future will start leveraging this in interesting ways. Maybe it feels to you like it’s still just a traditional server, but the hosts themselves have farmed it out, how they operate, to serverless architectures. So you don't even really know that that’s happening, but they’ve found a way to slash their costs by hosting the stuff that you need in serverless ways. Maybe yeah don't even need to care as a developer, but at a meta level, that’s what’s happening. Maybe. I don't know.</p>\n<p>Chris: It also doesn't mean that... Databases are still there. If it turns out that architecturally having a relational database is the correct way to store that data, great. I mention that because this world of Serverless is kind of growing up at the same time that JAMstack is. And JAMstack is this architecture that's, \"You should be serving your website off of static hosts, that run nothing at all except for...\" They’re like little CDNs. They’re like, \"I can do nothing. I don't run PHP. I don't run Ruby. I run nothing. I run on a tiny little web server that’s just designed to serve static files only.\"</p>\n<p>Chris: \"And then, if you need to do more than that, if you need to pull data from a relational database, then please do it at some other time, not at the server time. You can either do it in a build process ahead of time, and pull that stuff out of the database, pre-build static files and I’ll serve those, or do it at runtime.\" Meaning you get this shell of a document, and then it makes a JavaScript request to get some data and prefills it then. So you do it ahead of time or after time, but it doesn't mean, \"Don't use a relational database.\" It just means, \"Don't have the server generate it at the time of the request of the document,\" which is a... I don't know, it’s a little bit of a paradigm shift.</p>\n<p>Chris: It’s not just JAMstack either. We’re also living in the time of JavaScript frameworks. We’re living in a time where it’s starting to be a little more expected that the way that a JavaScript application boots up, is that it mounts some components, and as those components mount, it asks for the data that it needs. And so, it can be kind of a natural fit for something like a React website to be like, \"Well, I’ll just hit a serverless function to cough up the data that it needs. It hits some JSON API essentially. I get the JSON data that I need and I construct myself out of that data, and then I render onto the page.\" Now, whether that’s good or bad for the web, it’s like, \"I don't know. Too bad. Ship has sailed. That’s how a lot of people are building sites.\" It’s just client rendered things. So, serverless and modern JavaScript kind of go hand in hand.</p>\n<p>Drew: I suppose you don't have to wholesale... be looking at one architecture or another. There’s an area in the middle where parts of an infrastructure might be more traditional and parts could be serverless, I’m guessing?</p>\n<p>Chris: Yeah. Well, they’re trying to tell you that anyway. Anybody that wants to sell you any part of their architecture is like, \"You don't have to buy in all right now. Just do it a little bit.\" Because of course, they want you to dip your toe into whatever they’re selling, because once you dip the toe, the chances that you splash yourself into the pool is a lot higher. So, I think that... it’s not a lie, though, necessarily, although I find a little less luck in... I don't want my stack to be a little bit of everything. I think there’s some technical death there that I don't always want to swallow.</p>\n<p>Drew: Mm (affirmative).</p>\n<p>Chris: But it’s possible to do. I think the most quoted one is... let’s say I have a site that has an eCommerce element to it, which means... and let’s say large scale eCommerce, so 10,000 products or something, that this JAMstack architecture hasn't gotten to the point where that’s always particularly efficient to rebuild that statically. So, the thinking goes, \"Then don't.\" Let that part kind of hydrate naturally with... hit serverless functions and get the data that it needs, and do all that. But the rest of the site, which isn't... there’s not as many pages, there’s not as much data, you could kind of pre-render or whatever. So a little bit of both.</p>\n<p>Drew: Of course, plenty of people are dealing with legacy systems that... some old database thing that was built in the 2000s that they may be able to stick a sort of JSON API layer on top of...</p>\n<p>Chris: Yeah.</p>\n<p>Drew: ... and build something more modern, and perhaps serverless, and then still interact with those legacy systems by sort of gluing it altogether in a weird way.</p>\n<p>Chris: Yeah. I like that though, isn't it? Aren't... most websites already exist. How many of us are totally green-fielding websites? Most of us work on some crap that already exists that needs to be dragged into the future for some reason, because I don't know, developers want to work faster, or you can't hire anybody in COBOL anymore, or whatever the story is. You know?</p>\n<p>Drew: So terminology wise, we’re talking about JAMstack which is this methodology of running a code pretty much in the browser, serving it from a CDN. So, not having anything dynamic on the server. And then when we talk about serverless, we’re talking about those small bits of functionality that run on their server somewhere else. Is that right? That we were talking about these cloud function kind of-</p>\n<p>Chris: Yeah, I mean, they just happen to be both kind of hot ideas right now. So it’s kind of easy to talk about one and talk about the other. But they don't necessarily need to be together. You could run a JAMstack site that has nothing to do with serverless anything. You’re just doing it, you just pre-build the site and run it, and you can use serverless without having to care about JAMstack. In fact, CodePen does nothing JAMstack at all. Not that we want to talk about CodePen necessarily, but it’s a Ruby on Rails app. It runs on a whole bunch of AWS EC2 instances and a variety of other architecture to make it happen. But we use serverless stuff whenever we can for whatever we can, because it’s cheap and secure, and just a nice way to work. So, no JAMstack in use at all but serverless all over the place.</p>\n<p>Drew: That’s quite interesting. What sort of tasks are you putting serverless to on CodePen?</p>\n<p>Chris: Well, there’s a whole bunch of things. One of them is, I think, hopefully fairly obvious is, I need... the point of CodePen is that you write each HTML, CSS and JavaScript in the browser and it renders it in front of you, right? But you can pick pre-processor languages as well. Let’s say you like Sass. You turn Sass on in the CSS, and you write Sass. Well, something has to process the Sass. These days, Sass is written in Dart or something.</p>\n<p>Chris: Theoretically, you could do that in the client. But these libraries that do pre-processing are pretty big. I don't think I want to ship the entire Sass library to you, just to run that thing. I don't want to... it’s just not, that’s not the right architecture for this necessarily. Maybe it is down the road, I mean, we could talk about offline crap, yada, yada, Web Workers. There’s a million architectural things we could do. But here’s how it does work now, is there’s a lambda. It processes Sass. It has one tiny, tiny, tiny, little job.</p>\n<p>Chris: You send it this blob of Sass and it sends you stuff back, which is the processed CSS, maybe a site map, whatever. It has one tiny little job and we probably pay for that lambda, like four cents or something. Because lambdas are just incredibly cheap and you can hammer it too. You don't have to worry about scale. You just hit that thing as much as you want and your bill will be astonishingly cheap. There is moments where serverless starts to cross that line of being too expensive. I don't know what that is, I’m not that master of stuff like that. But generally, any serverless stuff we do, we basically... all nearly count as free, because it’s that cheap. But there’s one for Sass. There’s one for Less. There’s one for Babbel. There’s one for TypeScript. There’s one for... All those are individual lambdas that we run. Here’s some code, give it to the lambda, it comes back, and we do whatever we’re going to do with it. But we use it for a lot more than that, even recently.</p>\n<p>Chris: Here’s an example. Every single Pen on CodePen has a screenshot. That’s kind of cool, right? So, the people make a thing and then we need a PNG or a JPEG, or something of it, so that we can... that way when you tweet it, you get the little preview of it. If you share it in Slack, you get the little preview of it. We use it on the website itself to render... instead of an iframe, if we could detect that the Pen isn't animated, because an iframe’s image is much lighter, so why not use the image? It’s not animated anyway. Just performance gains like that. So each of those screenshots has a URL to it, obviously. And we’ve architected it so that that URL is actually a serverless function. It’s a worker. And so, if that URL gets hit, we can really quickly check if we’ve already taken that screenshot or not.</p>\n<p>Chris: That’s actually enabled by CloudFlare Workers, because CloudFlare Workers are not just a serverless function, but they have a data store too. They have this thing called key-value store, so the ID of that, we can just check really quick and it’ll be, \"True or false, do you have it or not?\" If it’s got it, it serves it. And it serves it over CloudFlare, which is super fast to begin with. And then gives you all this ability too. Because it’s an image CDN, you can say, \"Well, serve it in the optimal format. Serve it as these dimensions.\" I don't have to make the image in those dimensions. You just put the dimensions in the URL and it comes back as that size, magically. So that’s really nice. If it doesn't have it, it asks another serverless function to make it really quick. So it’ll make it and then it’ll put it in a bucket somewhere... because you have to have a origin for the image, right? You have to actually host it somewhere usually. So we put it in an S3 bucket real quick and then serve it.</p>\n<p>Chris: So there’s no queuing server, there’s no nothing. It’s like serverless functions manage the creation, storage and serving of these images. And there’s like 50 million or 80 million of them or something. It’s a lot, so it handles that as scale pretty nicely. We just don't even touch it. It just happens. It all happens super fast. Super nice.</p>\n<p>Drew: I guess it... well, a serverless function is ideally going to suit a task that needs very little knowledge of state of things. I mean, you mentioned CloudFlare’s ability to store key-value pairs to see if you’ve got something cached already or not.</p>\n<p>Chris: Yeah. That’s what they’re trying to solve, though, with those. Those key-value pairs, is that... I think that traditionally was true. They’re like, \"Avoid state in the thing,\" because you just can't count on it. And CloudFlare Workers are being like, \"Yeah, actually, you can deal with state, to some degree.\" It’s not as fancy as a... I don't know, it’s key values, so it’s a key in a value. It’s not like a nested, relational fancy thing. So there’s probably some limits to that. But this is baby days for this. I think that stuff’s going to evolve to be more powerful, so you do have some ability to do some state-like stuff.</p>\n<p>Drew: And sometimes the limitation, that sort of limited ability to maintain state, or the fact that you have no... you want to maintain no state at all, kind of pushes you into an architecture that gives you this sort of... Well, when we talk about the software philosophy of \"Small Pieces Loosely Joined\", don't we?</p>\n<p>Chris: Mm (affirmative).</p>\n<p>Drew: Where each little component does one thing and does it well. And doesn't really know about the rest of the ecosystem around it. And it seems that really applies to this concept of serverless functions. Do you agree?</p>\n<p>Chris: Yeah. I think you could have a philosophical debate whether that’s a good idea or not. You know? I think some people like the monolith, as it were. I think there’s possible... there’s ways to overdo this and to make too many small parts that are too hard to test altogether. It’s nice to have a test that’s like, \"Oh, I wonder if my Sass function is working. Well, let’s just write a little test for it and make sure that it is.\" But let’s say, what matters to the user is some string of seven of those. How do you test all seven of them together? I think that story gets a little more complicated. I don't know how to speak super intelligently to all that stuff, but I know that it’s not necessarily that, if you roll with all serverless functions that’s automatically a better architecture than any other architecture. I like it. It reasons out to me nicely, but I don't know that it’s the end-all be-all of all architectures. You know?</p>\n<p>Drew: To me, it feels extremely web-like, in that... this is exactly how HTML works, isn't it? You deliver some HTML and the browser will then go and fetch your images and fetch your JavaScript and fetch your CSS. It seems like it’s an expansion of that -</p>\n<p>Chris: It’s nice.</p>\n<p>Drew: ... sort of idea. But, one thing we know about the web, is it’s designed to be resilient because network’s fragile.</p>\n<p>Chris: Mm (affirmative).</p>\n<p>Drew: How robust is the sort of serverless approach? What happens if something... if one of those small pieces goes away?</p>\n<p>Chris: That would be very bad. You know? It would be a disaster. Your site would go down just like any other server, if it happens to go down, I guess.</p>\n<p>Drew: Are there ways to mitigate that, that are particularly -</p>\n<p>Chris: I don't know.</p>\n<p>Drew: ... suited to this sort of approach, that you’ve come across?</p>\n<p>Chris: Maybe. I mean, like I said, a really super fancy robust thing might be like... let’s say you visit CodePen and let’s say that there’s a JavaScript implementation of Sass and we noticed that you’re on a fairly fast network and that you’re idle right now. Maybe we’ll go grab that JavaScript and we’ll throw it in a service worker. Then, if we detect that the lambda fails, or something, or that you have this thing installed already, then we’ll hit the service worker instead of the lambda, and service workers are able to work offline. So, that’s kind of nice too. That’s interesting. I mean, they are the same language-ish. Service workers are JavaScript and a lot of Cloud functions are JavaScript, so there’s some... I think that’s a possibility, although that... it’s just, that’s some serious technical that... It just scares me to have this chunk of JavaScript that you’ve delivered to how many thousands of user, that you don't necessarily know what they have, and what version of it they have. Eww, but that’s just my own scarediness. I’m sure some people have done a good job with that type of thing.</p>\n<p>Chris: I actually don't know. Maybe you know some strategies that I don't, on resiliency of serverless.</p>\n<p>Drew: I guess there’s a failure mode, a style of failure, that could happen with serverless functions, where you run a function once and it fails, and you can run it a second time immediately afterwards and it would succeed, because it might hit a completely different server. Or whatever the problem was, when that run may not exist on a second request. The issues of an entire host being down is one thing, but maybe there are... you have individual problems with the machine. You have a particular server where its memory has gone bad, and it’s throwing a load of errors, and the first time you hit it, it’s going to fail. Second time, that problem might have been rooted around.</p>\n<p>Chris: Companies that tend to offer this technology, you have to trust them, but they also happen to be the type of companies that... this is their pride. This is the reason why people use them is because they’re reliable. I’m sure people could point to some AWS outages of the past, but they tend to be a little rare, and not super common. If you were hosting your own crap, I bet they got you beat from an SLA percentage kind of level. You know? So it’s not like, \"Don't build in a resilient way,\" but generally the type of companies that offer these things are pretty damn reliable. The chances of you going down because you screwed up that function are a lot higher than because their architecture is failing.</p>\n<p>Drew: I suppose, I mean, just like anything where you’re using an API or something that can fail, is just making sure you structure your code to cope with that failure mode, and to know what happens next, rather than just throwing up an error to the user, or just dying, or what have you. It’s being aware of that and asking the user to try again. Or trying again yourself, or something.</p>\n<p>Chris: Yeah, I like that idea of trying more than once, rather than just being, \"Oh no. Fail. Abort.\" \"I don't know, why don't you try again there, buddy?\"</p>\n<p>Drew: So I mean, when it comes to testing and development of serverless functions, sort of cloud functions, is that something that can be done locally? Does it have to be done in the cloud? Are there ways to manage that?</p>\n<p>Chris: I think there are some ways. I don't know if the story is as awesome. It’s still a relatively new concept, so I think that that gets better and better. But from what I know, for one thing, you’re writing a fairly normal Node function. Assuming you’re using JavaScript to do this, and I know that on Lambda specifically, they support all kinds of stuff. You can write a fricking PHP Cloud Function. You can write a Ruby Cloud Function. So, I know I’m specifically talking about JavaScript, because I have a feeling that most of these things are JavaScript. Even no matter what language it is, I mean, you can go to your command line locally and execute the thing. Some of that testing is... you just test it like you would any other code. You just call the function locally and see if it works.</p>\n<p>Chris: It’s a little different story when you’re talking about an HTTP request to it, that’s the thing that you’re trying to test. Does it respond to the request properly? And does it return the stuff properly? I don't know. The network might get involved there. So you might want to write tests at that level. That’s fine. I don't know. What is the normal story there? You spin up some kind of local server or something that serves it. Use Postman, I don't know. But there's... Frameworks try to help too. I know that the serverless \".com\", which is just terribly confusing, but there’s literally a company called Serverless and they make a framework for writing the serverless functions that helps you deploy them.</p>\n<p>Chris: So if you like NPM install serverless, you get their framework. And it’s widely regarded as very good, because it’s just very helpful, but they don't have their own cloud or whatever. You write these and then it helps you get them to a real lambda. Or it might work with multiple cloud providers. I don't even know these days, but their purpose of existing is to make the deployment story easier. I don't know what... AWS is not renowned for their simplicity. You know? There’s all this world of tooling to help you use AWS and they’re one of them.</p>\n<p>Chris: They have some kind of paid product. I don't even know what it is exactly. I think one of the things they do is... the purpose of using them is for testing, is to have a dev environment that’s for testing your serverless function.</p>\n<p>Drew: Yeah, because I guess, that is quite a big part of the workflow, isn't it? If you’ve written your JavaScript function, you’ve tested it locally, you know it’s going to do the job. How do you actually pick which provider it’s going to go into and how do you get it onto that service? Now, I mean, that’s a minefield, isn't it?</p>\n<p>Chris: Yeah. I mean, if you want to use no tooling at all, I think they have a really... like AWS, specifically, has a really rudimentary GUI for the thing. You can paste the code in there and hit save and be like, \"Okay, I guess it’s live now.\" That’s not the best dev story, but I think you could do it that way. I know CloudFlare workers have this thing called Wrangler that you install locally. You spin it up and it spins up a fake browser on the top and then dev tools below. Then you can visit the URL and it somehow intercepts that and runs your local cloud function against it. Because one of the interesting things about workers is... you know how I described how it... you don't hit a URL and then it returns stuff. It just automatically runs when you... when it intercepts the URL, like CDN style.</p>\n<p>Chris: So, one of the things it can do is manipulate the HTML on the way through. The worker, it has access to the complete HTML document. They have a jQuery-esque thing that’s like, \"Look for this selector. Get the content from it. Replace it with this content. And then continue the request.\" So you can mess with code on the way through it. To test that locally, you’re using their little Wrangler tool thing to do that. Also, I think the way we did it was... it’s also a little dangerous. The second you put it live, it’s affecting all your web traffic. It’s kind of a big deal. You don't want to screw up a worker. You know? You can spin up a dev worker that’s at a fake subdomain, and because it’s CloudFlare, you can... CloudFlare can just make a subdomain anyway. I don't know. It’s just kind of a nice way to do a... as you’re only affecting sub-domain traffic, not your main traffic yet. But the subdomain’s just a mirror of a production anyway, so that’s kind of a... that’s a testing story there.</p>\n<p>Chris: It brings up an interesting thing, though, to me. It’s like... imagine you have two websites. One of them is... for us it’s like a Ruby on Rails app. Whatever. It’s a thing. But we don't have a CMS for that. That’s just like... it’s not a CMS, really. I think there’s probably Ruby CMSs, but there’s not any renowned ones. You know? It seems like all the good CMSs are PHP, for some reason. So, you want a quality CMS. Drew, you’ve lived in the CMS market for a long time -</p>\n<p>Drew: Absolutely.</p>\n<p>Chris: ... so you know how this goes. Let’s say you want to manage your sites in Perch or whatever, because it’s a good CMS and that’s the proper thing to use to build the kind of pages you want to build. But you don't want to run them on the same server. Unless you want to manage the pages on one site, but show them on another site. Well, I don't know, there’s any number of ways to do that. But one JavaScript way could be, \"Okay, load the page. There’s an empty div there. Run some JavaScript. Ask the other site for the content of that page and then plunk it out on the new page.\" That’s fine, I guess, but now you’re in a client side rendered page. It’s going to be slow. It’s going to have bad SEO, because... Google will see it eventually, but it takes 10 days or something. It’s just a bad story for SEO. It’s not very resilient, because who knows what’s going to happen in the network. It’s not the greatest way to do this kind of \"content elsewhere, content on site B, show page of site A\", situation.</p>\n<p>Chris: You could also do it on the server side, though. Let’s say you had... Ruby is capable of granting a network request too, but that’s even scarier because then if something fails on the network, the whole page could die or something. It’s like a nervous thing. I don't love doing that either. But we did this just recently with a worker, in that we... because the worker’s JavaScript, it can make a fetch request. So, it fetches site A, it finds this div on the page, and then it goes and asks site B for the content. Gets the content. Plugs it into that div, and serves the page before it gets anything. So it looks like a server rendered page, but it wasn't. It all happened at the... on the edge, at the worker level, at the serverless level.</p>\n<p>Chris: So it’s kind of cool. I think you can imagine a fetch request on the browser probably takes, I don't know, a second and a half or something. It probably takes a minute to do it. But because these are... site B is hosted on some nice hosting and Cloudflare has some... who knows what kind of super computers they use to do it. They do. Those are just two servers talking to each other, and that fetch request happens just so super duper, duper fast. It’s not limited to the internet connection speed of the user, so that little request takes like two milliseconds to get that data. So it’s kind of this cool way to stitch together a site from multiple sources and have it feel like, and behave like, a server rendered page. I think there’s a cool future to that.</p>\n<p>Drew: Are there any sort of conventions that are sort of springing up around serverless stuff. I’m sort of thinking about how to architect things. Say I’ve got something where I want to do two sort of requests to different APIs. I want to take in a postal address and geocode it against one, and then take those coordinates and send that to a florist who’s going to flower bomb my front yard or something. How would you build that? Would you do two separate things? Or would you turn that into one function and just make the request once from the browser?</p>\n<p>Chris: Mm (affirmative). That’s a fascinating question. I’d probably have an architect function or something. One function would be the one that’s in charge of orchestrating the rest of them. It doesn't have to be, your website is the hub and it only communicates to this array of single sources. Serverless functions can talk to other serverless functions. So I think that’s somewhat common to have kind of an orchestrator function that makes the different calls and stitches them together, and returns them as one. I think that is probably smart and faster, because you want servers talking to servers, not the client talking to a whole bunch of servers. If it can make one request and get everything that it needs, I think that’s probably generally a good idea-</p>\n<p>Drew: Yeah, that sounds smart. Yep.</p>\n<p>Chris: But I think that’s the ultimate thing. You get a bunch of server nerds talking, they’ll talk about the different approaches to that exact idea in 10 different ways.</p>\n<p>Drew: Yeah. No, that sounds pretty smart. I mean, you mentioned as well that this approach is ideal if you’re using APIs where you’ve got secret information. You’ve got API keys or something that you don't want to live in the client. Because I don't know, maybe this florist API charges you $100 dollars every time flower bomb someone.</p>\n<p>Chris: Easily.</p>\n<p>Drew: You can basically use those functions to almost proxy the request and add in the secret information as it goes, and keep it secret. That’s a viable way to work?</p>\n<p>Chris: Yeah, yeah. I think so. I mean, secrets are, I don't know, they’re interesting. They’re a form of buy in I think to whatever provider you go with, because... I think largely because of source control. It’s kind of like, you could just put your API key right in the serverless function, because it’s just going to a server, right? You don't even have to abstract it, really. The client will never see that code that executes, but in order for it to get there, there’s probably a source control along the way. It’s probably like you commit to master, and then master... then some kind of deployment happens that makes that thing go to the serverless function. Then you can't put your API key in there, because then it’s in the repo, and you don't put your API keys in repos. That’s good advice. Now there’s stuff. We’ve just done... at CodePen recently, we started using this git-crypt thing, which is an interesting way to put keys safely into your repos, because it’s encrypted by the time anybody’s looking at that file.</p>\n<p>Chris: But only locally they’re decrypted, so they’re useful. So it’s just kind of an interesting idea. I don't know if that helps in this case, but usually, cloud providers of these things have a web interface that's, \"Put your API keys here, and we’ll make them available at runtime of that function.\" Then it kind of locks... it doesn't lock you in forever but it kind of is... it’s not as easy to move, because all your keys are... you put in some input field and some admin interface somewhere.</p>\n<p>Drew: Yeah, I think that’s the way that Netlify manage it.</p>\n<p>Chris: They all do, you know?</p>\n<p>Drew: Yeah. You have the secret environment variables that you can set from the web interface. That seems to work quite nicely.</p>\n<p>Chris: Yeah, right. But then you got to leave... I don't know, it’s not that big of a deal. I’m not saying they’re doing anything nefarious or anything. How do you deal with those secrets? Well, it’s a hard problem. So they kind of booted it to, I don't know, \"Just put them in this input field and we’ll take care of it for you, don't worry about it.\"</p>\n<p>Drew: Is there anything that you’ve seen that stands out as an obvious case for things that you can do with serverless, that you just couldn't do with a traditional kind of serverfull approach? Or is it just taking that code and sort of almost deploying it in a different way?</p>\n<p>Chris: It’s probably mostly that. I don't know that it unlocks any possibility that you just absolutely couldn't run it any other way. Yeah, I think that’s a fair answer, but it does kind of commoditize it in an interesting way. Like, if somebody writes a really nice serverless function... I don't know that this exists quite yet, but there could kind of a marketplace, almost, for these functions. Like, I want a really good serverless function that can take a screenshot. That could be an open source project that lots of eyeballs around, that does a tremendously good job of doing it and solves all these weird edge cases. That’s the one I want to use. I think that’s kind of cool. You know? That you can kind of benefit from other people’s experience in that way. I think that will happen more and more.</p>\n<p>Drew: I guess it’s the benefit that we talked about, right at the top, of enabling people who write JavaScript and may have written JavaScript only for the front-end, to expand and use those skills on the back-end as well.</p>\n<p>Chris: Yeah, yeah. I think so, I think that's... because there’s moments like... you don't have to be tremendously skilled to know what’s appropriate and what’s not for a website. Like, I did a little tutorial the other week, where there was this glitch uses these... when you save a glitch, they give you a slug for your thing that you built, that's, \"Whiskey, tango, foxtrot. 1,000.\" It’s like a clever little thing. The chances of it being unique are super high, because I think they even append a number to it or something too. But they end up being these fun little things. They open source their library that has all those words in it, but it’s like a hundred, thousands of words. The file is huge. You know? It’s megabytes large of just a dictionary of words. You probably learn in your first year of development, \"Don't ship a JavaScript file that’s megabytes of a dictionary.\" That’s not a good thing to ship. You know? But Node doesn't care. You can ship hundreds of them. It’s irrelevant to the speed on a server.</p>\n<p>Drew: Yeah.</p>\n<p>Chris: It doesn't matter on a server. So, I could be like, \"Hmm, well, I’ll just do it in Node then.\" I’ll have a statement that says, \"Words equal require words,\" or whatever, and a note at the top, \"Have it randomize a number. Pull it out of the array and return it.\" So that serverless function is eight lines of code with a packaged@JSON that pulls in this open source library. And then my front-end code, there’s a URL to the serverless function. It hits that URL. The URL returns one word or a group of words or whatever. You build your own little API for it. And now, I have a really kind of nice, efficient thing. What was nice about that is, it’s so simple. I’m not worried about the security of it. I don't... you know?</p>\n<p>Chris: It’s just... a very average or beginner JavaScript developer, I think, can pull that off, which is cool. That’s an enabling thing that they didn't have before. Before, they were like, \"Well, here’s a 2MB array of words.\" \"Oh, I can't ship that to the client.\" \"Oh, you’ll just shut down then.\" You might hit this wall that’s like, \"I just can't do that part then. I need to ask somebody else to help me with that or just not do it or pick more boring slugs or some...\" It’s just, you have to go some other way that is a wall to you, because you couldn't do it. And now, you're, \"Oh, well, I’ll just...\" Instead of having that in my script slash, or in my source slash scripts folder, I’ll put it in my functions folder instead.</p>\n<p>Chris: You kind of like moved the script from one folder to the other. And that one happens to get deployed as a serverless function instead. How cool is that? You know? You’re using the same exact skill set, almost. There’s still some rough edges to it, but it’s pretty close.</p>\n<p>Drew: It’s super cool. You’ve put together a sort of little micro site all about these ideas, haven't you?</p>\n<p>Chris: Yeah. I was a little early to the game. I was just working on it today, though, because... it gets pull requests. The idea... well, it’s at serverless.css-tricks.com and... there’s a dash in CSS-Tricks, by the way. So it’s a subdomain of CSS-Tricks, and I built it serverlessly too, so this is... CSS-Tricks is like a WordPress site, but this is a static site generator site. All the content of it is in the GitHub repo, which is open-source. So if you want to change the content of the site, you can just submit a poll request, which is nice because there’s been a hundred or so of those over time. But I built all the original content.</p>\n<p>Drew: It’s a super useful place, because it lists... If you’re thinking, \"Right, I want to get started with serverless functions,\" it lists all the providers who you could try it and...</p>\n<p>Chris: That’s all it is, pretty much, is lists of technology. Yeah.</p>\n<p>Drew: Which is great, because otherwise, you’re just Googling for whatever and you don't know what you’re finding. Yeah, it’s lists of API providers that help you do these sorts of things.</p>\n<p>Chris: Forms is one example of that, because... so the minute that you choose to... let’s say, you’re going to go JAMstack, which I know that’s not necessarily the point of this, but you see how hand in hand they are. All of a sudden, you don't have a PHP file or whatever to process that form with. How do you do forms on a JAMstack site? Well, there’s any number of ways to do it. Everybody and their sister wants to help you solve that problem, apparently. So I think if I was the inventor of the word JAMstack, so they try to help you naturally, but you don't have to use them.</p>\n<p>Chris: In fact, I was so surprised putting this site together. Let’s see. There’s six, nine, twelve, fifteen, eighteen, twenty one, twenty two services out there, that want to help you serverlessly process your forms on this site right now. If you want to be the 23rd, you’re welcome to it, but you have some competition out there. So the idea behind this is that you write a form in HTML, like literally a form element. And then the action attribute of the form, it can't point anywhere internally, because there’s nothing to point to. You can't process, so it points externally. It points to whatever they want you to point it to. They’ll process the form and then they tend to do things that you’d expect them to, like send an email notification. Or send a Slack thing. Or then send it to Zapier and Zapier will send it somewhere else. They all have slightly different feature sets and pricing and things, but they’re all trying to solve that problem for you, like, \"You don't want to process your own forms? No problem. We’ll process it for you.\"</p>\n<p>Drew: Yeah, it’s a super useful resource. I’d really recommend everyone check it out. It’s serverless.css-tricks.com. So, I’ve been learning all about serverless. What have you been learning about lately, Chris?</p>\n<p>Chris: Well, I’m still very much in this world too and learning about serverless stuff. I had an idea to... I used to play this online role playing game ages ago. I just recently discovered that it’s still alive. It’s a text based medieval fantasy kind of game. I played it when AOL was a thing, because AOL wanted to have these games that you had to be logged on to play it, because they wanted you to spend hours and hours on AOL, so they could send you these huge bills, which was, I’m sure, why they did so well at some point.</p>\n<p>Drew: So billing by the second. Yeah.</p>\n<p>Chris: Yeah. So games was big for them. If they could get you playing games with other people on there. So this game kind of... it didn't debut there, but it moved to AOL, because I’m sure they got a juicy deal for it, but it was so... I mean, it’s just, couldn't possibly be nerdier. You’re a dwarven mage and you get rune staff from your leather sheath. And you type commands into it like a terminal. Then the game responds to you. I played that game for a very long time. I was very into it. I got into the community of it and the spirit of it. It was kind of a... it was like I was just alone by myself at my computer, but yet I look back on that time in my life, and be like, \"That was a wonderful time in my life.\" I was really... I just liked the people and the game and all that. But then I grew up and stopped playing it, because life happens to you.</p>\n<p>Chris: I only found out recently, because somebody started doing a podcast about it again... I don't know how I came across it, but I just did. I was like, \"This game is alive and well in today’s world, are you kidding me? This text based thing.\" And I was more than happy to reactivate and get my old characters back and play it. But only to find out that the clients that they have you download for this game, haven't evolved at all. They are awful. They almost assume that you’re using Windows. There’s just these terribly cheesy poorly rendering... and it’s text based, you think it’d at least have nice typography. No. So I’m like, \"I could be involved. I could write a client for this game. Put beautiful typography in it.\" Just modernize the thing, and I think the players of the game would appreciate it, but it felt overwhelming to me. \"How can I do it?\" But I find some open source projects. One of them is like... you can play the game through an actual terminal window, and it uses some open source libs to kind of make a GUI out of a terminal window.</p>\n<p>Drew: Really?</p>\n<p>Chris: I don't know. So that was kind of cool. I was like, \"If they wrote that, there must be code in there to how to connect to the game and get it all going and stuff. So at least I have some starter code.\" I was trying to go along the app, \"Maybe I’ll do it in Flutter or something,\" so the final product app would work on mobile phones and, \"I could really modernize this thing.\" But then I got overwhelmed. I was like, \"Ah, this is too big a... I can't. I’m busy.\" But I found another person who had the same idea and they were way further along with it, so I could just contribute on a design level. And it’s been really fun to work on, but I’ve been learning a lot too, because it’s rare for me to jump into a project that’s somebody else’s baby, and I’m just contributing to a little bit, and that has totally different technology choices than I would have ever picked.</p>\n<p>Chris: It’s an Electron app. They picked that, which is also kind of a cool way to go too, because it’s my web skills... so I’m not learning anything too weird, and it’s cross-platform, which is great. So, I’ve been learning a lot about Electron. I think it’s fun.</p>\n<p>Drew: That’s fascinating. It’s always amazing how little side projects and things that we do for fun, end up being the place where we sometimes learn the most. And learn skills that can then feed back into our sort of daily work.</p>\n<p>Chris: That’s the only way I learn things. I’m dragged into something that... I was like, \"They’re not...\" It’s rendered with a JavaScript library called Mithril, which is... I don't know if you’ve ever heard of it, but it’s weird. It’s not... it’s almost like writing React without JSX. You have to \"create element\" and do all these... but it’s supposed to benchmark way better than it... And it actually kind of matters because in this text based game, the text is just flying. There’s a lot of data manipulation, which is like... you’d think this text based game would be so easy for a browser window to run, but it’s actually kind of not. There’s so much data manipulation happening, that you really have to be really... we have to be conscientious about the speed of the rendering. You know?</p>\n<p>Drew: That’s fascinating-</p>\n<p>Chris: Pretty cool.</p>\n<p>Drew: Yeah. If you, dear listener, would like to hear more from Chris, you can find him on Twitter, where he’s @chriscoyier. Of course, CSS-Tricks can be found at css-tricks.com and CodePen at codepen.io. But most of all, I recommend that you subscribe to the ShopTalk Show podcast if you haven't already done so, at shoptalkshow.com. Thanks for joining us today, Chris. Do you have any parting words?</p>\n<p>Chris: Smashingpodcast.com. I hope that’s the real URL.</p>\n","descriptionType":"html","publishedDate":"Tue, 11 Aug 2020 05:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1d082fe5-9487-4dac-83b9-ac0fec8bd674/smashing-podcast-episode-22.png","linkMd5":"3e8c255a1b00cf50ca908e0c292a71f6","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn23@2020_3/2020/09/05/07-59-16-390_3d506a243c2f2cb9.webp","destWidth":1201,"destHeight":631,"sourceBytes":362902,"destBytes":68914,"author":"hello@smashingmagazine.com (Drew McLellan)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1d082fe5-9487-4dac-83b9-ac0fec8bd674/smashing-podcast-episode-22.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5b69c357-771a-428c-92d3-89322ec41af7/chris-coyier-200x200-opt.jpg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn2@2020_1/2020/09/05/07-59-30-414_9c382500268bab8d.webp"},"publishedOrCreatedDate":1599292755744},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"How To Help Your Clients Get More Backlinks Through Design","link":"https://smashingmagazine.com/2020/08/clients-backlinks-design/","description":"<p>There are certain truths when it comes to what helps a website rank in search. Google wants to see: </p>\n<ul>\n<li>Mobile-first design</li>\n<li>Fast page speeds</li>\n<li>Top-notch security</li>\n<li>User-friendly navigation</li>\n<li>Trustworthiness and expertise</li>\n</ul>\n<p>… among other things. It also wants to see high-authority websites link back to your website. </p>\n<p>And if your clients aren’t obsessed with getting backlinks right now, just wait and see. They’re highly coveted and some businesses will go to great lengths to get them. </p>\n<p>Obviously, the quality of the content has to be there if it’s going to be share-worthy. However, the way a page looks can also make or break whether someone decides to share a link to it.</p>\n<p>You might not think this is something you can help with as a web designer, but you definitely can. And this post will provide you with a number of tips on how to contribute to this great quest for backlinks. </p>\n<h3>How To Design Sites That High-Authority Sources Want To Link To</h3>\n<p>The quality of a backlinked page can reflect on the quality and reputation of the linking website, so authoritative sites have to be incredibly choosy about who they give backlinks to. </p>\n<p>The content needs to be reputable and valuable. That’s non-negotiable. But the design has to be top-of-the-line, too. </p>\n<p>Let’s take a look at some ways in which you can help your clients’ websites be seen as trustworthy sources worth linking to.</p>\n<h4>Tip #1: Visualize Data Whenever Possible</h4>\n<p>In my line of work, one of the most common reasons I link to other websites is to cite data that they discovered or own. I do this to strengthen my points as well as to lend credibility to the arguments I’m making. </p>\n<p>That said, there usually isn’t just one organization doing research on the topics I’m interested in, which means I need to figure out which site is worth linking to. And that often comes down to how well they’ve visually depicted the data. </p>\n<p>To be clear, I’m not just referring to statistical data. This also pertains to things like breakdowns of processes. Like if I’m researching how various companies handle a given task and a website has a great visual depiction of their workflow, I may be more inclined to link to that page since it’s more valuable. </p>\n<p>Let me show you an example. </p>\n<p>Let’s say I’m writing an article about why people uninstall mobile apps. I don’t just want to cite a random list of what I think are the reasons for something like this. I know that the evidence exists, so I go searching for sources that can back me up. </p>\n<p>In my research on the subject, I find two credible sources that present similar sets of findings. This article appeared on <a href=\"https://www.forbes.com/sites/ciocentral/2013/11/21/why-people-uninstall-apps/#104d78384be4\">Forbes</a>:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/987241e4-0c4a-41bd-88a7-1ba94a48b1c7/forbes-research-article-design.png\" /></p>\n<p>And this blog post and infographic was published by <a href=\"https://clevertap.com/blog/uninstall-apps/\">CleverTap</a>: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41695563-d56c-42b4-a979-c43d432ceaaf/clevertap-article-infographic.png\" /></p>\n<p>Let’s say that the two surveys both have a large pool of respondents and the research was done recently. In that case, I’d turn my attention to the way in which the findings are presented. </p>\n<p>There are a number of reasons why I’d choose CleverTap over Forbes any day. </p>\n<p>For one, CleverTap translated its findings into a user-friendly format. We’ve known for years that infographics get more engagement and shares than plain text content. Sharing and linking are two different kinds of engagement, but we usually do them for the same reason: </p>\n<p><strong>We trust the source or find some value in the content and want others to discover it as well.</strong></p>\n<p>So, because CleverTap presented this beautiful breakdown of its findings, it’s enabled me to more quickly and effectively identify the facts I’m looking for, more so than the run-on paragraphs on the Forbes site. With Forbes’ presentation of the data, I’d basically have to copy-and-paste the content into my own document and do some formatting of my own to try and figure out what’s going on. </p>\n<p>No one should have to work for their data, just like no one should have to work to get through a website.</p>\n<p>So, that’s reason number one. CleverTap shows extra care and consideration for the data that’s being presented as well as an understanding of the audience who needs to read it. </p>\n<p>Reason number two is that Forbes’s page is littered with ads. When one disappears, another two appear in its place. It’s distracting and I don’t believe in sending people to a website that so blatantly prioritizes its profits over its content. Again, linked-to websites can have an impact on the linking website’s reputation, so this is something to consider when you design your own.</p>\n<p>The last reason I’d link to CleverTap’s page over Forbes’ is because <a href=\"https://www.smashingmagazine.com/2020/05/data-visualization-mobile-web-experience/\">visually designed data</a> saves me the trouble of having to create graphics on my own. It’s not like I can’t cite the data as is, but why should I? I know that it’s easier for my readers to find key data points and understand them when I call them out visually. </p>\n<p>Plus, I’m already giving the linked website credit for their work, so I am more than happy to provide a companion branded image. It lends even more credibility to my source.</p>\n<h4>Tip #2: Make Lengthy Pages Easier To Scan</h4>\n<p>I have clients who constantly come to me and say, “I need you to write a 2,000-word article so I can rank #1 on Google.”</p>\n<p>This is one of those SEO myths that’s part fact and part fiction. Here’s why: </p>\n<p><a href=\"https://twitter.com/JohnMu\">Google’s John Mueller</a> is often asked on Twitter to confirm various assumptions we have about SEO (since Google itself is so tight-lipped about it). And that’s when we get useful gems like this: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/42dae39a-6901-47bb-a07e-e313ef336547/google-john-mueller-on-page-length.png\" /></p>\n<p>That’s what I tell my clients, but without the snark obviously. It’s not about hitting a target number of words that will magically make a web page rank. All you need to do is match the search intent and then unpack the topic as fully as needed. </p>\n<p>That said, there is <a href=\"https://backlinko.com/content-study\">data from Backlinko</a> that confirms that longer pages do rank higher in search…</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/54a765de-d380-4158-8ceb-40143ce810da/backlinko-long-form-content-links.png\" /></p>\n<p>But it’s not the sheer volume of words that lends to a lengthy web page’s rank. It’s because longer content tends to be more authoritative which makes it more link-worthy. </p>\n<p>Interesting, right? </p>\n<p>So, knowing this, you should do everything in your power to make a lengthy piece of content (any linkable page, really — including informational pages and the home page) super easy to scan, read and link to. Because even the most engaged reader is apt to miss important details or give up part of the way through if you don’t design the page the right way.</p>\n<p>For the purposes of this example, I’m going to show you two examples of long blog posts that are top-ranked for “how to price a saas product”. </p>\n<p><a href=\"https://www.profitwell.com/blog/saas-pricing\">ProfitWell</a> handles it well enough and has 93 external followed links to show for it, according to <a href=\"https://moz.com/products/pro/seo-toolbar\">MozBar</a>. These are backlinks that pass SEO value onto Google, which is how a website ranks higher thanks to its backlink profile.</p>\n<p>All I probably need to do is show you what the above-the-fold looks like to demonstrate why this article hasn’t been linked to nearly as much as one of its competitors. Here it is: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e5cf21d9-1604-4270-994c-8c6169e31ea3/profitwell-saas-pricing-blog-post.png\" /></p>\n<p>In terms of overall design, ProfitWell has a great website. It’s even done a fantastic job laying out the post so it’s easy to scan through and read.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bc401368-0ced-49b3-a346-b1cbb5fc1234/profitwell-blog-post-with-graphics.png\" /></p>\n<p>In just this screenshot alone you can see how effectively the designer has worked their magic on the page, including text enhancements like:</p>\n<ul>\n<li>Header tags,</li>\n<li>Bolded and highlighted hyperlinks,</li>\n<li>Data visualizations, </li>\n<li>Short sentence and paragraph structures, </li>\n<li>Bulleted and numbered lists.</li>\n</ul>\n<p>However, it has a number of things working against it, which is what I believe has cost it backlinks. </p>\n<p>One is the overwhelming amount of distractions: the cumbersome sidebar, the sticky social share bar, the chat widget that needs to be dismissed and a lead gen pop-up that adheres to the bottom-left corner at times. Secondly, this is a long article. If people want to read it in full — especially on mobile — it’s going to take a lot of scrolling to get all the way through it.</p>\n<p>Now let me show you how <a href=\"https://www.cobloom.com/blog/saas-pricing-models#\">Cobloom</a>’s page design is likely why <strong>it has 159 external followed links.</strong></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f24a6b17-152d-419d-9a49-b8778ad47d12/cobloom-saas-pricing-article.png\" /></p>\n<p>This looks fantastic, right? There are three sticky elements always present: </p>\n<ul>\n<li>The sticky table of contents on the left,</li>\n<li>The chat widget which is part of the ToC bar,</li>\n<li>The social share widget.</li>\n</ul>\n<p>But the sticky parts of the page never compromise the content: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca184adb-f9b8-4205-9f09-023ac493bc95/cobloom-blog-post-design.png\" /></p>\n<p>In fact, the table of contents on the left makes the page easier to read (among other design choices that have been made). Readers can click on the section that they’re interested in without having to bother with scrolling down the page. </p>\n<p>The only thing I’d say this page falls short on is the mobile experience. The table of contents isn’t present and the page feels a little wobbly, as if the horizontal dimensions weren’t properly sized. So, in terms of this being a link-worthy page on mobile, I’d say it’s not when compared to ProfitWell’s super mobile-friendly post. </p>\n<p>But that’s a good lesson for you to take away from this. <a href=\"https://www.smashingmagazine.com/2020/01/mobile-pwa-sticky-bars-elements/\">Use your sticky elements on mobile wisely.</a> Rather than disrupt a post with a chat widget or a lead gen promotional bar, place the table of contents beneath it and let it serve as a secondary “navigation” for lengthier pages.</p>\n<h4>Tip #3: “Design” Each Page’s Metadata</h4>\n<p>As a writer, I spend a lot of time looking for the right links to place within my content. Which means a good chunk of my day is spent on Google, social media and Feedly trying to hunt down the perfect sources. </p>\n<p>Can you guess how I narrow down my options to ensure that I always share or link to the best content for my website visitors or social connections? I use the page’s metadata to help me decide. </p>\n<p>I’m not the only one who cares about the external “image” of a web page either. There’s <a href=\"https://buzzsumo.com/blog/how-to-massively-boost-your-blog-traffic-with-these-5-awesome-image-stats/\">plenty of research</a> that points to attractive social media content getting more shares than those that aren’t. </p>\n<p>So, in addition to designing pages to look more trustworthy and user-friendly, I’d suggest designing your metadata to make it look more carefully groomed. If you’ve taken the time to create a buttoned-up micro-image of the page, people looking for sources for their authoritative websites are more likely to give yours a closer look. </p>\n<p>As such, there are a couple things I’d recommend you do to increase the likelihood that this happens: </p>\n<p>The first thing is to ensure that the page’s metadata appears complete in search. </p>\n<p>For instance, here’s what comes up when I search <a href=\"https://www.google.com/\">Google</a> for “the most trusted brands in the world”: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e9176f63-71d8-4c5c-bb59-ff086506cda5/google-search-most-trusted-brands.png\" /></p>\n<p>For the most part, the meta titles are all fine as you can see them in full or, at the very least, get the gist of what the page is about and how it answers the search’s intent. </p>\n<p>The descriptions aren’t that great, though, as some are nonsensical and some are incomplete. Both qualities demonstrate that the people behind the site didn’t care enough to write a helpful description for it. Authoritative figures are going to care about stuff like this. </p>\n<p>One reason why is because it makes it harder for them to figure out which sites to look deeper into. It’s a pain having to review every top-ranking page because no details are provided to help weed out the so-so from the great. Also, if metadata isn’t filled in, the page might not look all that great when shared on social media, again requiring the sharer to do more work and clean it up.</p>\n<p>Let me show you an example: </p>\n<p>This is what MozBar reports to me from the <a href=\"https://morningconsult.com/most-trusted-brands/\">Morning Consult</a> page that ranks #2 for this search query: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3868fae1-3d87-4ed3-8734-a733d0acc8be/morningconsult-metadata.png\" /></p>\n<p>The page title includes a bunch of icons that thankfully don’t appear in search results. The meta description, however, doesn’t exist. This is why when Google tried to retrieve a description about the page, it created this mess from the report’s findings: </p>\n<blockquote>“USPS. Score: 42.0% Amazon. 38.8% Google. 37.9% PayPal. 36.5% Chick-Fil-A. 36.2% The Hershey Company. 36.1% UPS. 36.1% Cheerios. Dove. 34.1% Tide. 34.1% Ziploc. 33.8% Clorox. USPS. Score: 42.0% Amazon. 38.8% Google. 37.9% PayPal. Chick-Fil-A. 36.2% The Hershey Company. 36.1% UPS. 36.1% Cheerios. Dove. 34.1% Tide. 34.1% ...”</blockquote>\n\n<p>That might be enough to keep someone from clicking into the site, believing that if the metadata is this messy, the page is too. </p>\n<p>As for the shareability piece, the lack of metadata causes issues, too. Here’s what this page looks like on Facebook, LinkedIn and Twitter (in that order):</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4379348-39a5-491f-9a9b-01ca9a3d7619/morningconsult-socialmedia-links.png\" /></p>\n<p>Two of the shares pull in the brand logo and tagline, but not the featured image of the page. Two of the shares show no description at all while the other shows a snippet of the first sentence on the page. </p>\n<p>Again, this lack of attention to detail ends up creating more work for the sharer, which might be reason enough for them not to share it. Or not to share anything from that website again. </p>\n<p>One last thing you can do to make your pages look more link-worthy in search is to use schema markup. The #1 page (from <a href=\"https://blog.infegy.com/who-are-the-worlds-most-trusted-brands-and-why\">Infegy</a>) for “the most trusted brands in the world” did a good job of this (in addition to writing their metadata). The results look great: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/566428b4-6d9f-4b6d-88f3-9ce6cd36f896/googlesearch-featuredsnippet.png\" /></p>\n<p>If I needed this data for an article I was writing today, I’d probably end up focusing most of my efforts on this piece since it’s clear that the page and its metadata were so carefully built by its creators.</p>\n<p>To recap: There are three things you should pay attention to when setting up link-worthy pages of your site for search: </p>\n<ul>\n<li>Include complete SEO metadata.</li>\n<li>Attach a featured image to the page that’s relevant and descriptive. </li>\n<li>Use schema markup whenever possible.</li>\n</ul>\n<h3>Wrapping Up</h3>\n<p>You might not be too concerned with backlinks, but the owners of your websites certainly are or will be once they catch wind of the power they wield in Google. While a lot of the linkability of a page does depend on the quality of the content, certain design choices you make can affect it as well. So, add these strategies to your SEO-friendly design processes and help your clients claim those highly coveted top-ranking spots. </p>\n","descriptionType":"html","publishedDate":"Fri, 21 Aug 2020 10:30:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a46ebd5b-f680-407f-8975-a06963d03fda/clients-backlinks-design.png","linkMd5":"8be8634c820c7dc900f70d342c72e08a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn42@2020_3/2020/09/05/07-59-16-758_f22b8770981e376f.webp","destWidth":1201,"destHeight":631,"sourceBytes":263598,"destBytes":56704,"author":"hello@smashingmagazine.com (Suzanne Scacca)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a46ebd5b-f680-407f-8975-a06963d03fda/clients-backlinks-design.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/987241e4-0c4a-41bd-88a7-1ba94a48b1c7/forbes-research-article-design.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn89@2020_6/2020/09/05/07-59-34-257_5bf2377c64fa10e1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41695563-d56c-42b4-a979-c43d432ceaaf/clevertap-article-infographic.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn90@2020_4/2020/09/05/07-59-30-784_56005e73f8e4713d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/42dae39a-6901-47bb-a07e-e313ef336547/google-john-mueller-on-page-length.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn18@2020_4/2020/09/05/07-59-34-675_e628373ebe29092f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/54a765de-d380-4158-8ceb-40143ce810da/backlinko-long-form-content-links.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn83@2020_3/2020/09/05/07-59-27-788_64de4372a40961f9.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e5cf21d9-1604-4270-994c-8c6169e31ea3/profitwell-saas-pricing-blog-post.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn53@2020_4/2020/09/05/07-59-34-741_4abd84d3fe5d1c20.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bc401368-0ced-49b3-a346-b1cbb5fc1234/profitwell-blog-post-with-graphics.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn42@2020_4/2020/09/05/07-59-27-187_89468594467aa955.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f24a6b17-152d-419d-9a49-b8778ad47d12/cobloom-saas-pricing-article.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn56@2020_4/2020/09/05/07-59-26-381_e18be72ac1cf454e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca184adb-f9b8-4205-9f09-023ac493bc95/cobloom-blog-post-design.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn46@2020_4/2020/09/05/07-59-37-394_e718233f018a14c9.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e9176f63-71d8-4c5c-bb59-ff086506cda5/google-search-most-trusted-brands.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn69@2020_3/2020/09/05/07-59-39-444_c611c4524064a4e9.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3868fae1-3d87-4ed3-8734-a733d0acc8be/morningconsult-metadata.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn95@2020_5/2020/09/05/07-59-28-768_9f63a7c858ba70e3.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4379348-39a5-491f-9a9b-01ca9a3d7619/morningconsult-socialmedia-links.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn77@2020_2/2020/09/05/07-59-36-148_2cc7218d73e032f1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/566428b4-6d9f-4b6d-88f3-9ce6cd36f896/googlesearch-featuredsnippet.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn47@2020_6/2020/09/05/07-59-37-159_471207db6c9c3759.webp"},"publishedOrCreatedDate":1599292755734},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"How To Create A Porsche 911 With Sketch (Part 1)","link":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","description":"<p>If you’re both a <a href=\"https://en.wiktionary.org/wiki/petrolhead\">petrolhead</a> (a.k.a. a big car enthusiast) with a special place in your heart for the legendary Porsche 911, and also a fan of the powerful <a href=\"https://www.smashingmagazine.com/tag/sketch/\">Sketch app</a>, then this tutorial is for you. Today, we’ll be pushing Sketch to its limits — step by step. You will learn how to create a very realistic and detailed vector illustration of a vintage Porsche 911 using basic shapes, layer styles and Sketch features (such as “Rotate Copies” and “Symbols”). You’ll learn how to master the Vector tool, apply multiple shadow effects and use gradients. I’ll also explain how you can rotate and duplicate objects with just a few special clicks. No bitmap images will be used, which means the final illustration could be scaled up to any size with no loss of detail.</p>\n<p>This tutorial is geared more towards experienced illustrators but if you’re new to Sketch you should be able to profit from it too as all of the steps are explained in great detail.</p>\n<p><strong>Note</strong>: <em>This is the first part of this tutorial in which we’ll focus on laying out the main “groundwork”, i.e. we’ll create and tweak the body of the car. In addition, we’ll also make the front signal lights and the tail lights. If you like, you can also skip to <a href=\"https://www.smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/\">Part 2</a> and <a href=\"https://www.smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/\">Part 3</a>.</em></p>\n<h4>The Porsche 911</h4>\n<p>But first, a bit of background about the car that we’ll be making.</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Porsche_911\">Model 911</a> is a 2-doors sports car produced by Porsche from 1963 through 1989 when it was succeeded by a new model with the same name. The original 911 series is often cited as the most successful competition car ever, especially its variations optimized for racing. In September 1999, the original Porsche 911 won 5-th place in the prestigious “<a href=\"https://en.wikipedia.org/wiki/Car_of_the_Century\">Car of the Century</a>” award. </p>\n<p>The first 911 also had an almost unique concept for its time — rear-engine, rear-wheel-drive. (At a much later time, another company created a car with the same concept. It’s quite likely that you may have heard of this other car, too — this was the famous <a href=\"https://www.hotcars.com/things-never-knew-about-the-delorean-from-back-to-the-future/\">DeLorean DMC-12</a>! The DeLorean became very popular in 1985 when <a href=\"https://www.imdb.com/title/tt0088763/\"><em>Back to the Future</em></a> was released in cinemas.) </p>\n<p>Now buckle up and let’s go — as we have a long, narrow, windy (but fun) road ahead of us. Start the engine (Sketch app), shift into first gear (create a new file), and release the clutch (start drawing on the blank canvas)!</p>\n<p><strong>Note:</strong> <em>I’ve written on the topic of using Sketch for vector illustration before. If you’re curious, do check my previous tutorial which is about designing a chronograph with Sketch: “<a href=\"https://www.smashingmagazine.com/2017/10/realistic-chronograph-watch-sketch/\">Designing A Realistic Chronograph Watch In Sketch</a>.”</em></p>\n<h3>Let’s Draw A Car!</h3>\n<p>To be able to better follow the steps in this tutorial, I will provide you with the original Sketch source file. This file will help you follow the process more easily but I encourage you to replicate the steps in a new file, starting with a blank canvas.</p>\n<ul>\n<li><a href=\"http://provide.smashingmagazine.com/Porsche-911-Sketch-tutorial.zip\">Download the Porsche 911 Sketch file</a> (1.4 MB)</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50607166-7574-4153-bd04-763e3e320b46/porsche-final-sketch-tutorial-part-1.png\" /></p>\n<h3>1. Artboard Settings</h3>\n<p>The first step is to create a new Sketch document. Name the document “Porsche911” and set up a new artboard with the same name, size: <code>1920px</code> wide and <code>1080px</code> high.</p>\n<h3>2. Tracing The Car With the Vector tool</h3>\n<p>For this step, we need an <a href=\"http://www.optimiced.com/en/2020/01/31/most-iconic-vehicles-in-movies-part-1/\">image of a Porsch</a><a href=\"http://www.optimiced.com/en/?p=2682\">e 911</a> that will serve as a reference to outline the car in Sketch.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ac0aeccb-677b-4019-a52a-612c18f9cbef/porsche911-reference-image-sketch-tutorial-part-1.png\" /></p>\n<p>Download, copy and paste the image into the artboard. Right-click on the reference image in the list of layers in the <strong>Layers</strong> panel and choose <strong>Lock Layer</strong> to lock the layer with the reference image so that it doesn’t move accidentally.</p>\n<p><strong>Tip</strong>: <em>The other way to lock a layer in Sketch is to hover the layer name while pressing</em> Alt <em>and clicking on the lock icon.</em></p>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d899c7b0-a89e-470b-910c-03409becb896/porsche00-sketch-tutorial-part-1.png\" /></p>\n<p>We will use the <strong>Vector</strong> tool to outline the car body. The result of this operation will be a vector shape. Each shape is made up of points and Bézier handles. Bézier handles are used to add curvature to a shape.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/376bedde-ba59-453f-be71-f36e391cec05/points-bezier-handles-and-point-types-sketch-tutorial-part-1.png\" /></p>\n<h4>Know Your Points And Bézier Handles</h4>\n<p>For every point you add with the <strong>Vector</strong> tool, there are four point types to choose from: <em>straight</em>, <em>mirrored</em>, <em>disconnected</em>, and <em>asymmetric</em>. The point type describes how Bézier handles should behave. You can cycle through these types by selecting a point and hitting 1, 2, 3, or 4 on your keyboard. You can find point type for the selected point in the <strong>Inspector</strong> panel.</p>\n<h4>Point Types</h4>\n<h5>1. Straight</h5>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6f843afe-8568-4115-a375-39c1da734417/point-type-straight-sketch-tutorial-part-1.png\" /></p>\n<p>The “straight” option will give you a straight corner. This type also allows you to add a corner <strong>Radius</strong> via the <strong>Inspector</strong> panel on the right.</p>\n<h5>2. Mirrored</h5>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06e07e96-7bab-40c7-9389-0f27d88fb7a0/point-type-mirrored-sketch-tutorial-part-1.png\" /></p>\n<p>“Mirrored” will add two Bézier handles that mirror each other so they are always parallel and the same length on both sides.</p>\n<h5>3. Disconnected</h5>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f959552-5f42-483c-a261-ed12f9eb74aa/point-type-disconnected-sketch-tutorial-part-1.png\" /></p>\n<p>This option will give you two Bézier handles that you can change individually. Perfect for sharp corners!</p>\n<h5>4. Asymmetric</h5>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0ae1bffb-129b-4a35-a219-cedfad54a014/point-type-asymmetric-sketch-tutorial-part-1.png\" /></p>\n<p>“Asymmetric” is almost the same as “mirrored”, but it only keeps the Bézier handles parallel. You can change the length of the handles individually.</p>\n<p>Now that you know more about points and handles, let’s continue.</p>\n<p><strong>Note:</strong> <em>To learn more about the Bézier Curves in Sketch app, check the following tutorial by Peter Nowell: “<a href=\"https://medium.com/sketch-app/mastering-the-bezier-curve-in-sketch-4da8fdf0dbbb\">Mastering the Bézier Curve in Sketch</a>”.</em></p>\n<p>Select the <strong>Vector</strong> tool by pressing V on the keyboard, zoom in (press Z and click to zoom in) and start outlining the car body. Click once to create a point, move some distance away, click to add a second point and <em>without</em> releasing the mouse button, <em>drag that point</em> to create a curve and use Bézier to control the curve.</p>\n<p><strong>Tip</strong>: <em>I’d suggest you give temporarily the border some bright color and a thicker width (use the Inspector panel to change these) so you can trace the car shape more comfortably.</em></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1a76238b-e314-42e9-a504-4184d5177fad/porsche01-sketch-tutorial-part-1.png\" /></p>\n<p>Carry on doing this around the main shape of the car, but <em>exclude</em> the front and back windshields. Practice is needed to reach perfection and with time you’ll get better with using the <strong>Vector</strong> tool. Once you are ready with tracing of the body of the car, the results should look like on the screenshot below.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d3da5027-219a-43e8-8d18-91b601072788/porsche02-sketch-tutorial-part-1.png\" /></p>\n<p>Next we need to “cut out” the side windows from the car main body. Use the <strong>Vector</strong> tool to create two shapes over the side windows. Name the shapes <code>side window 1</code> and <code>side window 2</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3a9b48a1-5f70-48a0-9907-c3ad9794e458/porsche03-sketch-tutorial-part-1.png\" /></p>\n<p>Duplicate these two shapes (Cmd + D) and <em>hide the copies</em> for now. (We will use the copies later for the side windows.) Select the car body shape and the two visible side windows shapes, and apply a <strong>Subtract</strong> operation from the top Sketch toolbar. Name the resulting shape <code>car body</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/59646d80-819d-4244-b567-8420874dc67b/porsche04-sketch-tutorial-part-1.png\" /></p>\n<p>Next, create the bottom part of the car with the <strong>Vector</strong> tool. You can trace it, but it’s not really important to be 100% accurate as the details of the shape which will not be visible do not particularly matter. Name this shape <code>floor</code>, then move it in the <strong>Layers</strong> panel below the <code>car body</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/26cc0aed-e3a4-4e75-a5f2-e588eccfd6c0/porsche05-sketch-tutorial-part-1.png\" /></p>\n<p>There is only one more thing to do before we complete this step — to draw a wheel. Pick the <strong>Oval</strong> tool by pressing O on the keyboard and create a circle the same size as the wheel in the reference image.</p>\n<p>Hold Shift and Alt as you drag to make a perfect circle from the center out. Give this shape the name of <code>wheel base</code> and make sure that its position is above the <code>floor</code> and below the <code>car body</code> layers in the <strong>Layers</strong> panel list.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e26206a1-7d68-46ad-8c9f-8b2a4529719e/porsche06-sketch-tutorial-part-1.png\" /></p>\n<h3>3. Add Color, Shadows, And Reflections To The Car Body</h3>\n<p>Next, we will focus on the car body, so for now we can hide the reference image, as well as the <code>wheel base</code> and <code>floor</code> layers. What I usually like to do at this point is to unlock the reference image, move it outside the artboard and place it <em>above</em> it (or whatever other place works for you — below or on the left or right side of the artboard), so I can still use it for reference.</p>\n<p>Or, alternatively, you can unlock the reference image, make a copy (Cmd + D), move the copy outside the artboard so it could be used for reference, and hide the original reference image inside the artboard.</p>\n<p><strong>Tip</strong>: <em>Click on the eye icon next to the layer’s name in the Layers panel list to hide it. To unlock the layer, click with the right mouse button in the Layers panel and choose Unlock Layer, or just click on the lock icon next to the layer’s name.</em></p>\n<p>First let’s set the basic color for our car. Select <code>car body</code>, uncheck <strong>Borders</strong> and for the <strong>Fills</strong> Color use <code>#E9E9E7</code>.</p>\n<p><strong>Tip</strong>: <em>Use</em> F <em>on the keyboard to quickly toggle Fills on and off, and use</em> B <em>to quickly toggle Borders on or off.</em></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94433c92-e2ec-4e67-a816-0cda8ec839fe/porsche07-sketch-tutorial-part-1.png\" /></p>\n<p><strong>Note:</strong> <em>New to Sketch? Check first this very detailed Sketch help page about working with Fills: “<a href=\"https://www.sketch.com/docs/styling/#fills\">Styling — Fills</a>”.</em></p>\n<p>Next we will continue with the shadows (the darker parts of the car body). Use the <strong>Vector</strong> tool to draw a shape like on the image below.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee826393-d679-4eb0-b6e1-5b836ab96a6e/porsche08-sketch-tutorial-part-1.png\" /></p>\n<p>As you can see, the shape is longer than the car body, so we will fix that right now. Select both shapes (<code>car body</code> and the shape we’ve just created) and perform a <strong>Mask</strong> operation from the top toolbar. Sketch will place the result automatically into a group. Give this resulting group the name <code>bodywork</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c5110c86-962b-49bc-8e23-56ceb008aafa/porsche09-sketch-tutorial-part-1.png\" /></p>\n<p>Now select again the shape that we’ve created, turn off <strong>Borders</strong>, set the <strong>Fills</strong> Color to <code>#E1E1E1</code> and apply a <strong>Gaussian Blur</strong> with an <strong>Amount</strong> of <code>4</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1fff6e5d-5dff-4d5a-8cf7-7839ce7880fd/porsche10-sketch-tutorial-part-1.png\" /></p>\n<p>Draw another shape with the <strong>Vector</strong> tool. Use the image below as a reference.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3e399fb2-2ece-4ac5-aff1-5f62a12ed9a6/porsche11-sketch-tutorial-part-1.png\" /></p>\n<p>Use the <strong>Layers</strong> panel to move this shape into the group <code>bodywork</code>. Turn off <strong>Borders</strong>, and apply a <strong>Linear Gradient</strong> with the following parameters:</p>\n<ol>\n<li><code>#E4E4E4</code></li>\n<li><code>#C5C5C5</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8bd88515-865b-4372-86e4-ffdcda36ade8/porsche12-sketch-tutorial-part-1.png\" /></p>\n<p>Apply a <strong>Gaussian Blur</strong> with an <strong>Amount</strong> of <code>6</code> to soften its edges a bit, and add a <strong>Shadow</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#FFFFFF</code></li>\n<li><strong>Alpha:</strong> <code>90%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>-8</code>; <strong>Blur:</strong> <code>10</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4890f4e9-509b-4f1a-a2c9-55f1d30d500c/porsche13-sketch-tutorial-part-1.png\" /></p>\n<p>Next, to add a shadow at the bottom of the <a href=\"https://www.merriam-webster.com/dictionary/carrosserie\"><em>carrosserie</em></a>, draw a shape using the <strong>Vector</strong> tool, set <strong>Fills</strong> to <code>#4E4E4E</code>, place it inside the <code>bodywork</code> group and apply a <strong>Gaussian Blur</strong> with an <strong>Amount</strong> of <code>12</code>. Use the image below as a reference.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e750f078-6783-4f04-a17e-a2f749db0ff9/porsche14-sketch-tutorial-part-1.png\" /></p>\n<p>To finish with the shadows, draw a small shape using the <strong>Vector</strong> tool, like on the image below, fill it with <code>#D8D8D8</code> and give it a <strong>Gaussian Blur</strong> effect with an <strong>Amount</strong> of <code>5</code>. Don’t forget to place it inside the <code>bodywork</code> group.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f65c5832-f816-46aa-9f6b-a300aa2301df/porsche15-sketch-tutorial-part-1.png\" /></p>\n<p>To add light reflections we will create three shapes using the <strong>Vector</strong> tool and fill them with the following colors:</p>\n<ol>\n<li><code>#F9F9F9</code></li>\n<li><code>#F1F1F1</code></li>\n<li><code>#F1F1F1</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/63197e2b-85a7-4f1b-a0a1-3221fef47ecb/porsche16-sketch-tutorial-part-1.png\" /></p>\n<p>Move those layers inside the <code>bodywork</code> group, turn off <strong>Borders</strong> and apply a <strong>Gaussian Blur</strong> with an <strong>Amount</strong> of <code>6</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f48c0f6c-bc7f-44b3-aa19-b70cc7edf4f3/porsche17-sketch-tutorial-part-1.png\" /></p>\n<p>Finish this step by drawing two shapes using the <strong>Vector</strong> tool. Name these shapes <code>front fender</code> and <code>rear fender</code>. Set the color to <code>#393939</code>, remove the <strong>Borders</strong>, again move these inside the group and give them a <strong>Gaussian Blur</strong> effect with <strong>Amount</strong> of <code>2</code>, and set <strong>Opacity</strong> to <code>50%</code>. Use the image below as a reference.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/86b57bc0-d372-4894-88c3-ce17d780755d/porsche18-sketch-tutorial-part-1.png\" /></p>\n<p><strong>Note:</strong> <em>From now on, everything we create needs to be placed inside the <code>bodywork</code> group.</em></p>\n<h3>4. Creating The Door (And All Sorts Of Lids)</h3>\n<p>This step is pretty straightforward and will take only a couple of minutes to complete. We will add a bunch of lids and a door in this step.</p>\n<p>Select the <strong>Vector</strong> tool (V) and start drawing the lids. You don’t have to <em>close</em> the shapes, just leave them open, because we don’t actually need closed shapes — just the lines. To do that, press Esc key when you are satisfied with each line. Set the border <strong>Color</strong> to black (<code>#000000</code>) and <strong>Width</strong> to <code>1px</code>. Use the image below as a reference.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/edc56586-ccf2-49dc-96fe-7cd9a90e44ff/porsche19-sketch-tutorial-part-1.png\" /></p>\n<p>Select the Fuel Tank, Front Trunk and Rear Engine lids layers and add to them <strong>Shadows</strong> effects with the following parameters:</p>\n<ul>\n<li><strong>Color</strong>: <code>#FFFFFF</code></li>\n<li><strong>Alpha</strong>: <code>90%</code></li>\n<li><strong>X</strong>: <code>0</code>; <strong>Y</strong>: <code>2</code>; <strong>Blur</strong>: <code>2</code>; <strong>Spread</strong>: <code>0</code>;</li>\n</ul>\n<p>Next, select the Fog Light Place Lid layer and apply slightly different <strong>Shadows</strong>:</p>\n<ul>\n<li><strong>Color</strong>: <code>#FFFFFF</code></li>\n<li><strong>Alpha</strong>: <code>20%</code></li>\n<li><strong>X</strong>: <code>2</code>; <strong>Y</strong>: <code>0</code>; <strong>Blur</strong>: <code>2</code>; <strong>Spread</strong>: <code>2</code>;</li>\n</ul>\n<p>Pick up the <strong>Oval</strong> tool (O) and create a small circle that will represent the Jack Point cover. Turn off <strong>Fills</strong> and add an <strong>Outside</strong> border, with a <strong>Width</strong> of <code>1px</code> and the <strong>Color</strong> set to <code>#000000</code>. Apply <strong>Shadows</strong>, with the <strong>Color</strong> set to <code>#FFFFFF</code> at <code>30%</code> alpha and the <strong>Blur</strong> and <strong>Spread</strong> set to <code>2</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5d248af5-ee98-4b68-b70d-5ed2561af575/porsche20-sketch-tutorial-part-1.png\" /></p>\n<p>Next, we will draw a door with the <strong>Vector</strong> tool (V), the same way as we drew all the lids.</p>\n<p>Make the reference image in the background visible, set the <code>bodywork</code> layer to <code>50%</code> <strong>Opacity</strong> and trace the door lines from the photo.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee24db00-a385-4bbe-84b1-f0332c75c9a7/porsche21a-sketch-tutorial-part-1.png\" /></p>\n<p>When you are done, hide the reference image again, set <code>bodywork</code> layer <strong>Opacity</strong> to <code>100%</code> and style the door shape.</p>\n<p>Set the door’s shape border <strong>Color</strong> to black (<code>#000000</code>), <strong>Width</strong> to <code>2px</code> and apply <strong>Shadows</strong>:</p>\n<ul>\n<li><strong>Color</strong>: <code>#FFFFFF</code></li>\n<li><strong>Alpha</strong>: <code>40%</code></li>\n<li><strong>X</strong>: <code>2</code>; <strong>Y</strong>: <code>2</code>; <strong>Blur</strong>: <code>2</code>; <strong>Spread</strong>: <code>2</code>;</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/098a0243-2a47-4e24-89e0-c5cc7e3f5771/porsche21b-sketch-tutorial-part-1.png\" /></p>\n<p><strong>Tip</strong>: <em>Don’t forget to give appropriate names to the shapes/layers. Proper naming of each shape/layer may help you later on, as your Sketch file becomes more and more complex!</em></p>\n<p>Draw two tiny rectangles using the <strong>Vector</strong> tool (V). Press and hold Shift while drawing to make the lines straight. It’s important to align the bottom of the rectangles like on the image below. Fill both rectangles with black color and turn off <strong>Borders</strong>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/96fd87de-813f-4a5c-b1b5-65ad460ffb4a/porsche22-sketch-tutorial-part-1.png\" /></p>\n<p><strong>Tip</strong>: <em>Alternatively, you can draw these two tiny rectangles using the Rectangle tool</em> (R), <em>enter Vector Editing mode by pressing</em> Enter <em>on the keyboard, select the bottom two points of each rectangle and align them properly.</em></p>\n<p>Finally, draw a new shape using the <strong>Vector</strong> tool again. Set <strong>Fills</strong> to black, turn off <strong>Borders</strong> and apply <strong>Shadows</strong> with the <strong>Color</strong> set to <code>#FFFFFF</code> at <code>60%</code> alpha and the <strong>Y</strong> and <strong>Blur</strong> set to <code>2</code>. Give this shape a name of <code>engine lid</code>. Use the image below for reference.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a719238c-9804-4f8b-ab14-fff42e476106/porsche23-sketch-tutorial-part-1.png\" /></p>\n<h3>5. Front Signal Lights And Horn</h3>\n<p>To start with the making of the signal lights, switch to the <strong>Rectangle</strong> tool (R) and draw a rectangle. Fill it with black <strong>Color</strong>, turn off <strong>Borders</strong> and apply <strong>Shadows</strong>:</p>\n<ul>\n<li><strong>Color</strong>: <code>#FFFFFF</code></li>\n<li><strong>Alpha</strong>: <code>30%</code></li>\n<li><strong>X</strong>: <code>2</code>; <strong>Y</strong>: <code>-3</code>; <strong>Blur</strong>: <code>2</code>; <strong>Spread</strong>: <code>2</code>;</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3024c9ee-85af-4429-be94-e8f8c69e1911/porsche24-sketch-tutorial-part-1.png\" /></p>\n<p>Enter <strong>Vector Editing mode</strong> by <a href=\"https://www.sketch.com/docs/vector-editing/\">double-clicking on the rectangle shape</a> (or by pressing Enter), select the top right point, move it to the left <code>15px</code> using the ← arrow on the keyboard and set the <strong>Radius</strong> to <code>9px</code>. Press Enter again to exit <strong>Vector Editing mode</strong>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/816e3f53-4a90-436c-bded-c44d012bd4c8/porsche25-sketch-tutorial-part-1.png\" /></p>\n<p>Duplicate (Cmd + D) this shape, turn off <strong>Shadows</strong>, and add a <strong>Linear Gradient</strong> fill; use <code>#ECECEC</code> for the first color stop and <code>#7F7F7F</code> for the last color stop.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41853d38-7001-4990-9f2c-6f0dfd23fc82/porsche26-sketch-tutorial-part-1.png\" /></p>\n<p>Move this shape <code>2px</code> to the left using the left arrow key on the keyboard, then enter <strong>Vector Editing mode</strong> (double-click on the shape), select the top two points and push them down by <code>2px</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c7a88c3a-2533-49e2-8517-980aec2a70db/porsche27-sketch-tutorial-part-1.png\" /></p>\n<p>Duplicate this shape (Cmd + D), change Color from <strong>Linear Gradient</strong> to <strong>Solid Color</strong> and pick <em>any</em> color you want. I will use yellow, but this is just temporary. Next, double-click on the shape to enter <strong>Vector Editing mode</strong>, select the top two points and move them down <code>3px</code>, select the bottom two points and move them up <code>3px</code>, select the right two points and move them to the left <code>3px</code>, and finally select the bottom right point and move it to the left <code>3px</code> so the right edge becomes parallel with the right edge of the shape below.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1600cb7a-8e36-45d9-b07b-07e326e36d88/porsche28-sketch-tutorial-part-1.png\" /></p>\n<p>We need to split this shape into two parts. One shape will be used for the space for the horn and the other for the turn signal light. Let’s make it simple, without some fancy Boolean operations: duplicate the shape, name the original <code>horn space</code> and the copy <code>turn-signal</code>, and then hide the <code>turn-signal</code> shape because we will use it later.</p>\n<p>First we need to modify the <code>horn space</code> shape. Select the shape, enter <strong>Vector Editing mode</strong>, select the top right point, set <strong>Radius</strong> back to <code>0</code> (using the <strong>Inspector</strong> panel on the right), move this point to the right until it’s aligned with the bottom right point (a vertical red line will appear), and then select both points on the right and move them to the left to create a small shape that we will use for the horn. Use the image below as a reference.</p>\n<p><strong>Tip</strong>: <em>Hold</em> Shift <em>while dragging the points to maintain a straight path.</em></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/35a2f8ba-55d5-45e2-a5c3-d216ffde9ab8/porsche29-sketch-tutorial-part-1.png\" /></p>\n<p>Next, un-hide <code>turn-signal</code>, double-click it to enter <strong>Vector Editing mode</strong>, select the two points on the left and drag them to the right until there’s a small gap between shapes.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ef191151-e4c2-459c-93f8-601934200f61/porsche30-sketch-tutorial-part-1.png\" /></p>\n<p>Back to the <code>horn space</code> shape. Double-click to enter <strong>Vector Editing mode</strong>, hold Shift and click on the right segment to add a point in the exact middle. Now, double-click on that newly added point to turn it into a <strong>Mirrored</strong> point type, and using the ← arrow on the keyboard move it <code>4px</code> to the left. Then, select the bottom right point and move it <code>2px</code> to the left.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9dd67cf5-6ff0-4683-954e-1ea7c09a5a57/porsche31-sketch-tutorial-part-1.png\" /></p>\n<p>We will modify the <code>turn-signal</code> in a similar fashion. Select the <code>turn-signal</code> shape, press Enter to access <strong>Vector Editing mode</strong>, add a point in the exact middle of the left segment, turn it into <strong>Mirrored</strong> type using the <strong>Inspector</strong> panel, and push it <code>3px</code> to the left using the left arrow key on the keyboard.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d16c2699-9cef-4e67-b8d1-2adc1beff5ab/porsche32-sketch-tutorial-part-1.png\" /></p>\n<h4>Horn</h4>\n<p>Let’s complete the horn first. Select the <code>horn space</code> shape and apply a <strong>Linear Gradient</strong> — use <code>#1D1D1D</code> for the top color stop and <code>#D0D0D0</code> for the bottom color stop, then drag the top stop to the right and the bottom stop to the left to adjust the gradient angle.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8a535d1f-aa34-4198-bfb2-a6ba455a388a/porsche33-sketch-tutorial-part-1.png\" /></p>\n<p>Now, duplicate this shape (Cmd + D), switch Color to <strong>Solid Color</strong> and set to <code>#131313</code>, switch to <strong>Vector Editing mode</strong>, select the two left points and drag them a bit to the right.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cb1b6dfd-eb7f-42bf-a4c8-399a375ece0f/porsche34-sketch-tutorial-part-1.png\" /></p>\n<p>Select the top left point, push it a bit to the right, add a point in the middle of the left segment, turn it into a <strong>Mirrored</strong> point, and move it <code>2px</code> to the left.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d1f1e63-fb9c-463e-b0bb-dcaa30ae5506/porsche35-sketch-tutorial-part-1.png\" /></p>\n<p>Let’s add a grille over the horn space.</p>\n<p>Pick up the <strong>Rectangle</strong> tool (R) and create a tiny rectangle shape over the horn space, with a height of <code>2px</code>, with the <strong>Fills</strong> set to <code>#9A9A9A</code> and the <strong>Borders</strong> turned off. Duplicate it, change the height to <code>1px</code>, change the color to <code>#000000</code>, move it down so it’s below the grey rectangle, switch to <strong>Vector Editing mode</strong>, select the bottom left point and move it <code>2px</code> to the right. Select both shapes and place them inside a group (Cmd + G). We will use this element to build the grille. Give it a name of <code>grille element</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/01df63a2-5473-473b-a0a3-7e4f84a26b3c/porsche36-sketch-tutorial-part-1.png\" /></p>\n<p>Duplicate this group and move it <code>7px</code> up and <code>2px</code> right, then duplicate it again and push it <code>7px</code> up and <code>3px</code> right.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ac5d98a1-bcf6-4b16-ba6d-0b9aa25a913c/porsche37-sketch-tutorial-part-1.png\" /></p>\n<p>Our grille now extends <em>past</em> the <code>horn space</code>, so we need to fix it. Select all the elements that are part of the horn and perform a <strong>Mask</strong> operation so that none of the created elements go outside of the horn space. </p>\n<p>Sketch will place the result automatically into a group. Give this resulting group the name of <code>horn</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4668f743-d338-45b2-8f8d-14aecb7ad3f2/porsche38-sketch-tutorial-part-1.png\" /></p>\n<h4>Turn Signal Light</h4>\n<p>Select the <code>turn-signal</code> shape and add a <strong>Linear Gradient</strong> fill. Set the gradient to a horizontal position with the right-pointing arrow in the color dialog and use the following colors:</p>\n<ol>\n<li><code>#FFA137</code></li>\n<li><code>#B23821</code></li>\n<li><code>#B23821</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64f21d5c-f029-433e-b04b-e637076afdc3/porsche39-sketch-tutorial-part-1.png\" /></p>\n<p>Add an <strong>Inner Shadows</strong> effect with the following properties:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>40%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>5</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>And apply a <strong>Shadows</strong> effect:</p>\n<ul>\n<li><strong>Color:</strong> <code>#FFFFFF</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>2</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>It’s time to add the light bulbs. First, use the <strong>Oval tool</strong> (O) to draw a circle like on the image below. Turn off <strong>Borders</strong>, set <strong>Fills</strong> <strong>Opacity</strong> to 0% and apply <strong>Inner Shadows</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>12%</code></li>\n<li><strong>X:</strong> <code>-9</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>9</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/31131c48-159b-45e5-be43-c5c95021889b/porsche40-sketch-tutorial-part-1.png\" /></p>\n<p>Then, draw a small rectangle with the <strong>Rectangle</strong> tool (R) and use <strong>Radius (Round Corners)</strong> in the <strong>Inspector</strong> panel to create a rounded rectangle that will serve as a light bulb in our car illustration. Turn off <strong>Borders</strong>, and set <strong>Fills</strong> to <strong>Linear Gradient</strong>:</p>\n<ol>\n<li><code>#C06D25</code></li>\n<li><code>#DE8D55</code></li>\n<li><code>#BC4E08</code></li>\n<li><code>#A64A15</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a671d077-2dd0-4940-9c7d-421a54bf7c58/porsche41-sketch-tutorial-part-1.png\" /></p>\n<p>Finally select both — the circle and the rounded rectangle — and perform a <strong>Mask</strong> operation to place the rectangle inside the circle. Name the resulting group <code>light1</code>.</p>\n<p><strong>Tip</strong>: <em>Sketch may turn off Inner Shadows on the masking shape (in this case, <code>light1</code>) while performing a Mask operation, so select the masking shape and check. If Inner Shadows are turned off, turn them back on using the Inspector panel. It’s a good idea to check for this every time when performing a Mask operation.</em></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/69d35857-e891-448b-857d-b9ace04ffa0b/porsche42-sketch-tutorial-part-1.png\" /></p>\n<p>We will add a second light bulb in a similar way. Draw a circle, turn off <strong>Borders</strong>, set <strong>Fills</strong> <strong>Opacity</strong> to <code>0%</code> and add <strong>Inner Shadows</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>18%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>12</code>; <strong>Blur:</strong> <code>5</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d08d8a3-ee97-4540-bbf9-79d83e168ade/porsche43-sketch-tutorial-part-1.png\" /></p>\n<p>Duplicate this circle and scale it down. Modify the existing <strong>Inner Shadow</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>28%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>-5</code>; <strong>Blur:</strong> <code>5</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>And add another one on top of it:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>2</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>Then select both and group them into a <code>light2</code> group.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5eddea80-48df-4d68-a4a4-f29a3de4fded/porsche44-sketch-tutorial-part-1.png\" /></p>\n<p>In the <strong>Layers</strong> panel list select <code>turn-signal</code>, <code>light1</code> and <code>light2</code> and apply a <strong>Mask</strong> operation. This way <code>light1</code> and <code>light2</code> will be <em>inside</em> <code>turn-signal</code>. Name the resulting group <code>turn signal light</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58602f97-7538-422a-8219-ff5cb825866e/porsche45-sketch-tutorial-part-1.png\" /></p>\n<p>To complete the turn signal light, we need to add a tiny screw on the right side of it. We will construct our screw using a circle, so grab the <strong>Oval</strong> tool (O), and draw a small circle on the right, close to the edge of the signal light. Set the <strong>Fill</strong> <strong>Opacity</strong> to <code>0%</code>, set <strong>Borders</strong> Width to <code>1px</code>, position <strong>Inside</strong>, and color to <code>#B3B3B3</code> with alpha <code>30%</code>; and add an <strong>Inner Shadows</strong> effect:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>2</code>; <strong>Blur:</strong> <code>2</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/203b891a-c68c-4b26-a1a0-030114c27125/porsche46-sketch-tutorial-part-1.png\" /></p>\n<p>Duplicate this circle, scale it down, turn off <strong>Borders</strong>, set <strong>Fills</strong> to <code>#B2CBDF</code> with <strong>Opacity</strong> back to <code>100%</code> and add the following <strong>Shadows</strong> and <strong>Inner Shadows</strong>.</p>\n<p>First <strong>Inner Shadow</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#FFFFFF</code></li>\n<li><strong>Alpha:</strong> <code>80%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>1</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>Second <strong>Inner Shadow</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>1</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>And at the end, a <strong>Shadows</strong> effect:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>100%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>2</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b5d4340c-64c9-4ac9-9afe-82623a8c55e2/porsche47-sketch-tutorial-part-1.png\" /></p>\n<p>We need one more circle for the screw, so again, duplicate the previous circle, scale it down, set <strong>Fills</strong> to <code>#303030</code>, and turn off <strong>Shadows</strong> and <strong>Inner Shadows</strong>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3e86d4fd-8765-4349-bc47-870cb476e60c/porsche48-sketch-tutorial-part-1.png\" /></p>\n<p><strong>Tip</strong>: <em>At this point, you may end up with a <code>1px</code> circle which still looks a little bigger than what you can see in the screenshot above, and you may also have some trouble aligning it properly. If this happens, check whether Pixel Fitting is checked in Sketch Preferences, and if it is, it might be a good idea (at least temporarily) to disable it: go to Preferences → Layers → un-check the Pixel Fitting checkbox.</em></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d855d4e-7467-40bd-8636-e4018ed291b1/porsche48a-turn-off-pixel-fitting-sketch-tutorial-part-1.png\" /></p>\n<p>Select all circles that we used to create the screw and group them into a <code>screw</code> group, then move this resulting group inside the <code>turn signal light</code> group on top. </p>\n<p>Now it’s time to use the <strong>Create Symbol</strong> feature in Sketch and create a new Symbol out of the <code>screw</code> group. Later, we could use this symbol in our illustration as many times as we need it.</p>\n<p><strong>Tip</strong>: <em>Symbols are created for those elements that you expect to reuse. When you use them right, Symbols can become a <a href=\"https://www.smashingmagazine.com/2017/04/symbols-sketch/\">very powerful feature</a>; they can speed up your workflow by giving you a way to <a href=\"https://medium.com/sketch-app-sources/everything-you-need-to-know-about-using-symbols-in-sketch-and-more-9f8d303f3a80\">save and reuse common elements</a> across your illustrations and designs. When you make changes to a Symbol, those changes will be automatically applied to all the instances of this Symbol in your designs.</em></p>\n<p>To create a Symbol, select the <code>screw</code> group in the <strong>Layers</strong> panel list, right-click on it, and choose <strong>Create Symbol</strong> from the menu. The dialog box <strong>Create New Symbol</strong> will appear; give a name to the symbol (<code>screw</code> in this case) and click <strong>OK</strong>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b91b2d2-fc60-43b6-b0d4-3d4dbda6cf25/porsche49-sketch-tutorial-part-1.png\" /></p>\n<p>There is one more small detail to add. Zoom in close enough (i.e., 3200%) and draw a tiny rectangle. Turn off <strong>Borders</strong> and set <strong>Fills</strong> to <code>#131313</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fe39e6ee-32ff-4024-b213-50c288783316/porsche50-sketch-tutorial-part-1.png\" /></p>\n<h3>6. Tail Lights</h3>\n\n<p>We are going to build the tail lights the same way as we did in the previous step. Let’s quickly go through this step.</p>\n<p>Draw the rectangle. Fill it with black color, turn off <strong>Borders</strong> and apply <strong>Shadows</strong>:</p>\n<ul>\n<li><strong>Color</strong>: <code>#FFFFFF</code></li>\n<li><strong>Alpha</strong>: <code>30%</code></li>\n<li><strong>X</strong>: <code>-2</code>; <strong>Y</strong>: <code>-3</code>; <strong>Blur</strong>: <code>2</code>; <strong>Spread</strong>: <code>2</code>;</li>\n</ul>\n<p>Enter <strong>Vector Editing mode</strong>, move the top left corner <code>15px</code> to the right and set <strong>Radius</strong> to <code>9px</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d2a87ddc-e813-429c-bc47-1139118c4ab2/porsche51-sketch-tutorial-part-1.png\" /></p>\n<p>Duplicate the rectangle, turn off <strong>Shadows</strong> and add a <strong>Linear Gradient</strong> fill; use <code>#ECECEC</code> for the first color stop and <code>#7F7F7F</code> for the last color stop. Then, move it <code>2px</code> to the right, enter <strong>Vector Editing mode</strong>, select the top two points and push them down <code>2px</code>. </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4f3777c7-4dda-41d6-8f9a-8d21adfacc3c/porsche52-sketch-tutorial-part-1.png\" /></p>\n<p>Duplicate this shape (Cmd + D), change Color from <strong>Linear Gradient</strong> to <strong>Solid Color</strong> and pick any color you want. Next, switch to <strong>Vector Editing mode</strong>, select the top two points and move them down <code>3px</code>, select the bottom two points and move them up <code>3px</code>, select the left two points and move them to the right <code>3px</code>, and finally select the bottom left point and move it to the left <code>3px</code> so the right edge becomes parallel with the right edge of the shape below.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8734e964-d23c-4934-abad-8af9cb72e1d1/porsche53-sketch-tutorial-part-1.png\" /></p>\n<p>Now, change <strong>Fills</strong> to <strong>Linear Gradient</strong>. Set the gradient to a horizontal position with the right-pointing arrow in the color dialog and use the following colors:</p>\n<ol>\n<li><code>#5D1720</code></li>\n<li><code>#621822</code></li>\n<li><code>#662423</code></li>\n<li><code>#B04643</code></li>\n<li><code>#C25F56</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/076661fe-a189-4f8e-aa86-01b489d97bdb/porsche54-sketch-tutorial-part-1.png\" /></p>\n<p>Add an <strong>Inner Shadows</strong> effect with the following properties:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>5</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>And apply a <strong>Shadows</strong> effect:</p>\n<ul>\n<li><strong>Color:</strong> <code>#FFFFFF</code></li>\n<li><strong>Alpha:</strong> <code>50%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>2</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/03a2e498-1d95-4d3e-b5e2-e135fc16a545/porsche55-sketch-tutorial-part-1.png\" /></p>\n<p>Let’s now move to the design of the tail light’s light bulbs.</p>\n<p>Use the <strong>Rectangle</strong> tool (R) to draw a rectangle like on the image below. Turn off <strong>Borders</strong>, set <strong>Fills</strong> <strong>Opacity</strong> to <code>0%</code> and apply <strong>Inner Shadows</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>40%</code></li>\n<li><strong>X:</strong> <code>-2</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>5</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/23128a7b-3eef-4b35-b583-d907fdf8d738/porsche56-sketch-tutorial-part-1.png\" /></p>\n<p>Then, draw a small rectangle with the <strong>Rectangle</strong> tool (R) and use <strong>Radius (Round Corners)</strong> in the <strong>Inspector</strong> panel to create a rounded rectangle that will serve the purpose of a light bulb. Turn off <strong>Borders</strong>, and set <strong>Fills</strong> to <strong>Linear Gradient</strong>:</p>\n<ol>\n<li><code>#B75D61</code></li>\n<li><code>#6B2224</code></li>\n</ol>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/25ce2966-6db7-4c16-9b0b-2580778c2bda/porsche57-sketch-tutorial-part-1.png\" /></p>\n<p>Finally, select both rectangles and perform a <strong>Mask</strong> operation to place the rounded rectangle inside the other rectangle. Name the resulting group <code>tail-light1</code>.</p>\n<p><strong>Tip</strong>: <em>Again, remember that Sketch may turn off Inner Shadows on the masking shape while performing a Mask operation, so select the masking shape and check. If Inner Shadows are turned off, turn them back on using the Inspector panel.</em></p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/51dbd948-5dba-4cab-bb86-2275e1d35900/porsche58-sketch-tutorial-part-1.png\" /></p>\n<p>Draw a rectangle, turn off <strong>Borders</strong>, set <strong>Fills</strong> <strong>Opacity</strong> to <code>0%</code> and add <strong>Shadows</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>30%</code></li>\n<li><strong>X:</strong> <code>-2</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>2</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/89bbc8ff-6184-4d8d-b7f0-972835b6bad4/porsche59-sketch-tutorial-part-1.png\" /></p>\n<p>Draw a small circle, turn off <strong>Borders</strong>, set <strong>Fills</strong> <strong>Opacity</strong> to <code>0%</code> and apply the following <strong>Inner Shadows</strong>.</p>\n<p>First <strong>Inner Shadow</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>40%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>-2</code>; <strong>Blur:</strong> <code>5</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p>Second <strong>Inner Shadow</strong>:</p>\n<ul>\n<li><strong>Color:</strong> <code>#000000</code></li>\n<li><strong>Alpha:</strong> <code>30%</code></li>\n<li><strong>X:</strong> <code>0</code>; <strong>Y:</strong> <code>0</code>; <strong>Blur:</strong> <code>5</code>; <strong>Spread:</strong> <code>0</code></li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/84c67afc-b259-44b3-b51b-4e9c4df8ba03/porsche60-sketch-tutorial-part-1.png\" /></p>\n<p>Select the rectangle and circle that we’ve just created and place them inside the group (Cmd + G) <code>tail-light2</code>.</p>\n<p>Finish this step by adding the <code>screw</code> symbol instance. Go to <strong>Insert</strong> → <strong>Document</strong>, choose <strong>screw</strong>, click over the <code>tail-light2</code> to insert the symbol and then position it to the correct spot. Use the image below as a reference.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0c2e8592-27ee-4921-a9e3-3142dbdc5126/porsche61-sketch-tutorial-part-1.png\" /></p>\n<p>Let’s take a look at the bigger picture and check what we did so far!</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/754e9262-0840-4f72-89eb-06af10fe4e4c/porsche62-sketch-tutorial-part-1.png\" /></p>\n<h3>Conclusion</h3>\n<p>Good job! The main body of the car is now ready; we have the door shape, the lids, the front turn light and the tale lights.</p>\n<p>In the <a href=\"https://www.smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/\">next part of the tutorial</a>, we’ll continue with the windows, bumpers, headlights, the interior, and a few other elements of the car. Stay tuned!</p>\n","descriptionType":"html","publishedDate":"Fri, 24 Jul 2020 09:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50607166-7574-4153-bd04-763e3e320b46/porsche-final-sketch-tutorial-part-1.png","linkMd5":"8c330b5b2eb90530988935b001f6de03","destWidth":1920,"destHeight":1080,"sourceBytes":503679,"destBytes":95846,"author":"hello@smashingmagazine.com (Nikola Lazarević)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50607166-7574-4153-bd04-763e3e320b46/porsche-final-sketch-tutorial-part-1.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50607166-7574-4153-bd04-763e3e320b46/porsche-final-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn55@2020_1/2020/09/05/07-59-23-720_9a2b172fb98dba88.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ac0aeccb-677b-4019-a52a-612c18f9cbef/porsche911-reference-image-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn100@2020_3/2020/09/05/07-59-35-099_2840af99ab315f29.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d899c7b0-a89e-470b-910c-03409becb896/porsche00-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn13@2020_3/2020/09/05/07-59-34-709_4fe2006bcbef7de0.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/376bedde-ba59-453f-be71-f36e391cec05/points-bezier-handles-and-point-types-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn36@2020_2/2020/09/05/07-59-38-101_6b70aca1cc6a86de.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6f843afe-8568-4115-a375-39c1da734417/point-type-straight-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn28@2020_1/2020/09/05/07-59-24-020_d3ab491751a01503.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06e07e96-7bab-40c7-9389-0f27d88fb7a0/point-type-mirrored-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn28@2020_6/2020/09/05/07-59-20-391_9b45b4450ee35c41.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f959552-5f42-483c-a261-ed12f9eb74aa/point-type-disconnected-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn63@2020_4/2020/09/05/07-59-33-763_9067d66967fe32e3.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0ae1bffb-129b-4a35-a219-cedfad54a014/point-type-asymmetric-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn95@2020_2/2020/09/05/07-59-35-856_5b4f9e5f90072e9b.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1a76238b-e314-42e9-a504-4184d5177fad/porsche01-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn75@2020_3/2020/09/05/07-59-22-654_3f760af3be4fe896.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d3da5027-219a-43e8-8d18-91b601072788/porsche02-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn100@2020_1/2020/09/05/07-59-26-446_fafa12fbb1580378.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3a9b48a1-5f70-48a0-9907-c3ad9794e458/porsche03-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn28@2020_1/2020/09/05/07-59-28-735_1088e63099fc832d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/59646d80-819d-4244-b567-8420874dc67b/porsche04-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn45@2020_2/2020/09/05/07-59-19-211_1d2c5a7b05f383bd.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/26cc0aed-e3a4-4e75-a5f2-e588eccfd6c0/porsche05-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn58@2020_4/2020/09/05/07-59-25-449_4b59891761c30a75.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e26206a1-7d68-46ad-8c9f-8b2a4529719e/porsche06-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn26@2020_1/2020/09/05/07-59-26-774_394cfe69c76e3053.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94433c92-e2ec-4e67-a816-0cda8ec839fe/porsche07-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn14@2020_4/2020/09/05/07-59-39-838_9a5a2aa5811d69ff.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee826393-d679-4eb0-b6e1-5b836ab96a6e/porsche08-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn61@2020_2/2020/09/05/07-59-19-176_e0959223f8b4700c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c5110c86-962b-49bc-8e23-56ceb008aafa/porsche09-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn20@2020_3/2020/09/05/07-59-18-564_db238a60885441f1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1fff6e5d-5dff-4d5a-8cf7-7839ce7880fd/porsche10-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn87@2020_5/2020/09/05/07-59-30-058_e98e668bf479c847.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3e399fb2-2ece-4ac5-aff1-5f62a12ed9a6/porsche11-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn100@2020_4/2020/09/05/07-59-18-518_3fcdf04f2f3e19bc.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8bd88515-865b-4372-86e4-ffdcda36ade8/porsche12-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn61@2020_5/2020/09/05/07-59-37-531_eb6ddf8d1a745f79.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4890f4e9-509b-4f1a-a2c9-55f1d30d500c/porsche13-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn39@2020_4/2020/09/05/07-59-18-733_1be4fdaacf3687ee.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e750f078-6783-4f04-a17e-a2f749db0ff9/porsche14-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn43@2020_6/2020/09/05/07-59-39-311_3e520e3566617224.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f65c5832-f816-46aa-9f6b-a300aa2301df/porsche15-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn72@2020_4/2020/09/05/07-59-29-663_4c166497a4d21920.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/63197e2b-85a7-4f1b-a0a1-3221fef47ecb/porsche16-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn23@2020_2/2020/09/05/07-59-21-406_15097a774e43f138.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f48c0f6c-bc7f-44b3-aa19-b70cc7edf4f3/porsche17-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn36@2020_3/2020/09/05/07-59-33-649_edaa9ab6549cd5c9.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/86b57bc0-d372-4894-88c3-ce17d780755d/porsche18-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn50@2020_2/2020/09/05/07-59-24-263_5c0a21c886857f83.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/edc56586-ccf2-49dc-96fe-7cd9a90e44ff/porsche19-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn28@2020_6/2020/09/05/07-59-20-349_fa8708d362a7c795.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5d248af5-ee98-4b68-b70d-5ed2561af575/porsche20-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn50@2020_4/2020/09/05/07-59-32-664_89a67da7c122482e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee24db00-a385-4bbe-84b1-f0332c75c9a7/porsche21a-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn19@2020_2/2020/09/05/07-59-25-248_b5e827dfe1f7a432.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/098a0243-2a47-4e24-89e0-c5cc7e3f5771/porsche21b-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn23@2020_6/2020/09/05/07-59-33-614_de4a1dcfabf1f660.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/96fd87de-813f-4a5c-b1b5-65ad460ffb4a/porsche22-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn89@2020_5/2020/09/05/07-59-35-693_8b179657d9214a9a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a719238c-9804-4f8b-ab14-fff42e476106/porsche23-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn100@2020_6/2020/09/05/07-59-39-399_bf0a379f3386fd5a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3024c9ee-85af-4429-be94-e8f8c69e1911/porsche24-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn53@2020_4/2020/09/05/07-59-30-278_27ab3a7680c1739c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/816e3f53-4a90-436c-bded-c44d012bd4c8/porsche25-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn71@2020_3/2020/09/05/07-59-20-135_671037d58092b893.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41853d38-7001-4990-9f2c-6f0dfd23fc82/porsche26-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn66@2020_4/2020/09/05/07-59-26-077_904da4502af89887.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c7a88c3a-2533-49e2-8517-980aec2a70db/porsche27-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn38@2020_3/2020/09/05/07-59-25-609_26dc6bc82d003976.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1600cb7a-8e36-45d9-b07b-07e326e36d88/porsche28-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn10@2020_5/2020/09/05/07-59-19-350_4da3d0cf4cad893f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/35a2f8ba-55d5-45e2-a5c3-d216ffde9ab8/porsche29-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn21@2020_4/2020/09/05/07-59-25-051_bc6d5d698832395e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ef191151-e4c2-459c-93f8-601934200f61/porsche30-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn47@2020_5/2020/09/05/07-59-20-986_e61341417f38c47c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9dd67cf5-6ff0-4683-954e-1ea7c09a5a57/porsche31-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn26@2020_2/2020/09/05/07-59-39-184_0e9762ed0266d09c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d16c2699-9cef-4e67-b8d1-2adc1beff5ab/porsche32-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn16@2020_4/2020/09/05/07-59-17-818_1a2c7f260d54a1cb.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8a535d1f-aa34-4198-bfb2-a6ba455a388a/porsche33-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn8@2020_3/2020/09/05/07-59-35-864_04b0dadcdc7c5f23.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cb1b6dfd-eb7f-42bf-a4c8-399a375ece0f/porsche34-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn71@2020_3/2020/09/05/07-59-26-440_201a45f4a8939edb.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d1f1e63-fb9c-463e-b0bb-dcaa30ae5506/porsche35-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn34@2020_4/2020/09/05/07-59-34-410_0e69be86e73e404d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/01df63a2-5473-473b-a0a3-7e4f84a26b3c/porsche36-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn34@2020_3/2020/09/05/07-59-29-966_c9e2e9a52921c7d4.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ac5d98a1-bcf6-4b16-ba6d-0b9aa25a913c/porsche37-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn72@2020_3/2020/09/05/07-59-38-663_6a9409550bc898bb.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4668f743-d338-45b2-8f8d-14aecb7ad3f2/porsche38-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn34@2020_2/2020/09/05/07-59-23-772_b60a8848c0eb3ae4.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64f21d5c-f029-433e-b04b-e637076afdc3/porsche39-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn28@2020_4/2020/09/05/07-59-21-878_767ef495f2fd96f8.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/31131c48-159b-45e5-be43-c5c95021889b/porsche40-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn99@2020_6/2020/09/05/07-59-22-575_05410f3991440619.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a671d077-2dd0-4940-9c7d-421a54bf7c58/porsche41-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn41@2020_3/2020/09/05/07-59-32-956_67c35b4575cb3aab.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/69d35857-e891-448b-857d-b9ace04ffa0b/porsche42-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn39@2020_4/2020/09/05/07-59-24-701_b295c49c1458d730.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d08d8a3-ee97-4540-bbf9-79d83e168ade/porsche43-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn43@2020_1/2020/09/05/07-59-23-177_cc0781255de66f59.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5eddea80-48df-4d68-a4a4-f29a3de4fded/porsche44-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn59@2020_1/2020/09/05/07-59-36-487_2b8a92791f7b3b25.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58602f97-7538-422a-8219-ff5cb825866e/porsche45-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn76@2020_6/2020/09/05/07-59-26-486_67e5f988cca804d6.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/203b891a-c68c-4b26-a1a0-030114c27125/porsche46-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn65@2020_3/2020/09/05/07-59-25-135_8fc5ff1d60322bf6.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b5d4340c-64c9-4ac9-9afe-82623a8c55e2/porsche47-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn55@2020_3/2020/09/05/07-59-17-989_739685e0edfc2c83.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3e86d4fd-8765-4349-bc47-870cb476e60c/porsche48-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn6@2020_6/2020/09/05/07-59-29-049_966447334b676659.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d855d4e-7467-40bd-8636-e4018ed291b1/porsche48a-turn-off-pixel-fitting-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn97@2020_6/2020/09/05/07-59-20-707_62a163819df7debe.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b91b2d2-fc60-43b6-b0d4-3d4dbda6cf25/porsche49-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn9@2020_1/2020/09/05/07-59-31-439_587a81b6084a2d14.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fe39e6ee-32ff-4024-b213-50c288783316/porsche50-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn22@2020_3/2020/09/05/07-59-26-951_7e872cf3edc686ed.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d2a87ddc-e813-429c-bc47-1139118c4ab2/porsche51-sketch-tutorial-part-1.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4f3777c7-4dda-41d6-8f9a-8d21adfacc3c/porsche52-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn40@2020_2/2020/09/05/07-59-28-676_ed0175a5a413b764.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8734e964-d23c-4934-abad-8af9cb72e1d1/porsche53-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn6@2020_5/2020/09/05/07-59-25-781_f0dc23c4ee0fca4f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/076661fe-a189-4f8e-aa86-01b489d97bdb/porsche54-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn78@2020_3/2020/09/05/07-59-39-463_0cd2c3fada36418e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/03a2e498-1d95-4d3e-b5e2-e135fc16a545/porsche55-sketch-tutorial-part-1.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/23128a7b-3eef-4b35-b583-d907fdf8d738/porsche56-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn63@2020_1/2020/09/05/07-59-33-557_db3e46daa8bc94d7.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/25ce2966-6db7-4c16-9b0b-2580778c2bda/porsche57-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn93@2020_6/2020/09/05/07-59-34-030_7cf00fd93a894590.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/51dbd948-5dba-4cab-bb86-2275e1d35900/porsche58-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn2@2020_1/2020/09/05/07-59-31-941_715f14bf6c7c0534.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/89bbc8ff-6184-4d8d-b7f0-972835b6bad4/porsche59-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn52@2020_3/2020/09/05/07-59-36-491_966f9c39e717ba47.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/84c67afc-b259-44b3-b51b-4e9c4df8ba03/porsche60-sketch-tutorial-part-1.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0c2e8592-27ee-4921-a9e3-3142dbdc5126/porsche61-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn54@2020_4/2020/09/05/07-59-38-541_79481169ed718651.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/754e9262-0840-4f72-89eb-06af10fe4e4c/porsche62-sketch-tutorial-part-1.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn22@2020_4/2020/09/05/07-59-31-311_cb6d5d4e2b7d0677.webp"},"publishedOrCreatedDate":1599292755762},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Building A Component Library With React And Emotion","link":"https://smashingmagazine.com/2020/09/component-library-react-emotion/","description":"<p>According to Clearleft, a component library is:</p> \n<blockquote>\n “A collection of components, organised in a meaningful manner, and often (but not necessarily) providing some way to browse and preview those components and their associated assets.”\n <br />\n <br />— “\n <a href=\"https://clearleft.com/posts/on-building-component-libraries\">On Building Component Libraries</a>,” Clearleft\n</blockquote> \n<p>We’ll learn how to build a component library by making one that comprises four components:</p> \n<ol> \n <li><a href=\"https://smashingmagazine.com/2020/09/component-library-react-emotion/#button-component\"><code>Button</code></a><br />A wrapper around the default HTML button</li> \n <li><a href=\"https://smashingmagazine.com/2020/09/component-library-react-emotion/#box-component\"><code>Box</code></a><br />A container (HTML div) with custom properties</li> \n <li><a href=\"https://smashingmagazine.com/2020/09/component-library-react-emotion/#columns-component\"><code>Columns</code></a><br />A container whose children are spaced evenly across the x-axis</li> \n <li><a href=\"https://smashingmagazine.com/2020/09/component-library-react-emotion/#stack-component\"><code>Stack</code></a><br />A container whose children are spaced evenly across the y-axis</li> \n</ol> \n<p>These components could then be used in whatever application we are working on. We’ll build the component library using React and Emotion.</p> \n<p>At the end of this piece, you should be able to create a component library that fits whatever use case you have in mind. This knowledge will come handy when you’re working with a team that needs to make use of reusable components.</p> \n<p>First, let’s get started by establishing what the Emotion library is. The documentation explains:</p> \n<blockquote>\n “Emotion is a library designed for writing CSS styles with JavaScript. It provides powerful and predictable style composition in addition to a great developer experience with features such as source maps, labels, and testing utilities.”\n <br />\n <br />— “\n <a href=\"https://emotion.sh/docs/introduction\">Introduction</a>,” Emotion Docs\n</blockquote> \n<p>In essence, Emotion is a CSS-in-JavaScript library, and an interesting thing about CSS-in-JavaScript libraries is that they enable you to collocate components with styles. Being able to tie them up together in a scope ensures that some component styles don’t interfere with others, which is crucial to our component library.</p> \n<p>Emotion exposes two APIs for React:</p> \n<ul> \n <li><code>@emotion/core</code></li> \n <li><code>@emotion/styled</code></li> \n</ul> \n<p>Before we dive into how these APIs work, note that they both support the styling of components with template strings and objects.</p> \n<p>The <strong>core API</strong> is actually like the regular <code>style</code> property we currently use today when building apps with React, with the addition of vendor prefixing, nested selectors, media queries, and more.</p> \n<p>Using the object approach with the core API would typically look like this:</p> \n<pre><code>import { jsx } from '@emotion/core'\n\nlet Box = props =&gt; {\n  return (\n    &lt;div\n      css={{\n        backgroundColor: 'grey'\n      }}\n      {...props}\n    /&gt;\n  )\n}\n</code></pre> \n<p>This is a rather contrived example that shows how we could style a <code>Box</code> component with Emotion. It’s like swapping out the <code>style</code> property for a <code>css</code> property, and then we’re good to go.</p> \n<p>Now, let’s see how we could use the template string approach with the same core API:</p> \n<pre><code>import { jsx, css } from '@emotion/core'\n\nlet Box = props =&gt; {\n  return (\n    &lt;div\n      css={css`\n        background-color: grey\n      `}\n      {...props}\n    /&gt;\n  )\n}\n</code></pre> \n<p>All we did was wrap the template string with the <code>css</code> tag function, and Emotion handles the rest.</p> \n<p>The <strong>styled API</strong>, which is built on the core API, takes a slightly different approach to styling components. This API is called with a particular HTML element or React component, and that element is called with an object or a template string that contains the styles for that element.</p> \n<p>Let’s see how we could use the object approach with the styled API:</p> \n<pre><code>import styled from '@emotion/styled'\n\nconst Box = styled.div({\n        backgroundColor: 'grey'\n});\n</code></pre> \n<p>Here is one way to use the styled API, which is an alternative to using the core API. The rendered outputs are the same.</p> \n<p>Now, let’s see how we could use the template string approach using the styled API:</p> \n<pre><code>import styled from '@emotion/styled'\n\nconst Box = styled.div`\n        background-color: grey\n`\n</code></pre> \n<p>This achieves the same thing as the object approach, only with a template string this time.</p> \n<p>We could use either the core API or the styled API when building components or an application. I prefer the styled approach for a component library for a couple of reasons:</p> \n<ul> \n <li>It achieves a lot with few keystrokes.</li> \n <li>It takes in an <code>as</code> prop, which helps with dynamically changing the HTML element from the call site. Let’s say we default to a paragraph element, and we need a header element because of semantics; we can pass the header element as a value to the <code>as</code> property.</li> \n</ul> \n<h4>Getting Started</h4> \n<p>To get started, let’s clone the <a href=\"https://github.com/smashingmagazine/component-library\">setup scripts</a> on GitHub, which we can do on the command line:</p> \n<pre><code>git clone git@github.com:smashingmagazine/component-library.git</code></pre> \n<p>This command copies the code in that repository to the <code>component-library</code>’s folder. It contains the code required to set up a component library, which includes <a href=\"https://rollupjs.org/guide/en/\">Rollup</a> to help bundle our library.</p> \n<p>We currently have a <code>components</code> folder with an <code>index.js</code> file, which does nothing. We’ll be creating new folders under the <code>components</code> folder for each component we build in our library. Each component’s folder will expose the following files:</p> \n<ul> \n <li><code>Component.js</code><br />This is the component we’re building.</li> \n <li><code>index.js</code><br />This exports the component from <code>Component.js</code> and makes referencing components from a different location easier.</li> \n <li><code>Component.story.js</code><br />This essentially renders our component in its multiple states using Storybook.</li> \n</ul> \n<p>It also ships with a <code>utils</code> folder, which defines certain properties that would be used in our components. The folder contains several files:</p> \n<ul> \n <li><code>helpers.js</code><br />This contains helper functions that we are going to be using across our application.</li> \n <li><code>units.js</code><br />This defines spacing and font-size units, which we will use later.</li> \n <li><code>theme.js</code><br />This defines our component library’s palette, shadows, typography, and shape.</li> \n</ul> \n<p>Let’s look at what we’ve defined in the <code>units.js</code> file:</p> \n<pre><code>export const spacing = {\n  none: 0,\n  xxsmall: '4px',\n  xsmall: '8px',\n  small: '12px',\n  medium: '20px',\n  gutter: '24px',\n  large: '32px',\n  xlarge: '48px',\n  xxlarge: '96px',\n};\n\nexport const fontSizes = {\n  xsmall: '0.79rem',\n  small: '0.889rem',\n  medium: '1rem',\n  large: '1.125rem',\n  xlarge: '1.266rem',\n  xxlarge: '1.424rem',\n};\n</code></pre> \n<p>This defines the <code>spacing</code> and <code>fontSizes</code> rules. The spacing rule was inspired by the <a href=\"https://github.com/seek-oss/braid-design-system\">Braid design system</a>, which is based on multiples of four. The <code>fontSizes</code> are derived from the major second (1.125) type scale, which is a good scale for product websites. If you’re curious to learn more about type scale, “<a href=\"https://medium.com/sketch-app-sources/exploring-responsive-type-scales-cf1da541be54\">Exploring Responsive Type Scales</a>” explains the value of knowing the scales appropriate for different websites.</p> \n<p>Next, let’s through the <code>theme.js</code> file!</p> \n<div> \n <pre><code>import { spacing } from './units';\n\nconst white = '#fff';\nconst black = '#111';\n\nconst palette = {\n  common: {\n    black,\n    white,\n  },\n  primary: {\n    main: '#0070F3',\n    light: '#146DD6',\n    contrastText: white,\n  },\n  error: {\n    main: '#A51C30',\n    light: '#A7333F',\n    contrastText: white,\n  },\n  grey: {\n    100: '#EAEAEA',\n    200: '#C9C5C5',\n    300: '#888',\n    400: '#666',\n  },\n};\n\nconst shadows = {\n  0: 'none',\n  1: '0px 5px 10px rgba(0, 0, 0, 0.12)',\n  2: '0px 8px 30px rgba(0, 0, 0, 0.24)',\n};\n\nconst typography = {\n  fontFamily:\n    \"Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Ubuntu, 'Helvetica Neue', sans-serif\",\n};\n\nconst shape = {\n  borderRadius: spacing['xxsmall'],\n};\n\nexport const theme = {\n  palette,\n  shadows,\n  typography,\n  shape,\n};\n</code></pre> \n</div> \n<p>In the theme file, we’ve defined our <code>palette</code>, which is essentially the colors we’re going to be using across all components in our library. We also have a <code>shadows</code> object, where we define our <code>box-shadow</code> values. There’s also the <code>typography</code> object, which currently just defines our <code>fontFamily</code>. Finally, <code>shape</code> is used for properties such as <code>border-radius</code>. This theme’s structure is inspired by <a href=\"https://material-ui.com/\">Material-UI</a>.</p> \n<p>Next, our <code>helpers.js</code> file!</p> \n<pre><code>export const isObjectEmpty = (obj) =&gt; {\n  return Object.keys(obj).length === 0;\n};\n</code></pre> \n<p>Here, we only expose the <code>isObjectEmpty</code> function, which takes in an object and returns <code>true</code> if the object is empty. It returns <code>false</code> if it has any values. We’re going to make use of this function later.</p> \n<p>Now that we’ve gone through all of the files in the <code>utils</code> folder, it’s about time to start building our components!</p> \n<h3>Buttons</h3> \n<p>Buttons are one of the most used components on the web. They’re used everywhere and can take different forms, shapes, sizes, and more.</p> \n<p>Here are the buttons we’re going to build in <a href=\"https://www.figma.com/file/WQIRHS8QV3B7ZPDSW327uT/Minimalist?node-id=0%3A1\">Figma</a>.</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/87382448-81c9-4bdf-a844-3243c6ee825a/button-component-library-react-emotion.png\" /></p> \n<p>These subtle variations are going to be applied as properties to our button. We would like the buttons in our component library to accept properties such as <code>variant</code>, <code>size</code>, <code>enableElevation</code> (i.e. <code>box-shadow</code>), and <code>color</code>.</p> \n<p>Starting with the button component, let’s create a <code>Button</code> folder, where we will define everything related to buttons, as discussed earlier.</p> \n<p>Let's create our button component:</p> \n<pre><code>import styled from '@emotion/styled';\nimport isPropValid from '@emotion/is-prop-valid';\n\nconst StyledButton = () =&gt; {};\n\nconst IGNORED_PROPS = ['color'];\n\nconst buttonConfig = {\n  shouldForwardProp: (prop) =&gt;\n    isPropValid(prop) &amp;&amp; !IGNORED_PROPS.includes(prop),\n};\n\nexport const Button = styled('button', buttonConfig)(StyledButton);\n</code></pre> \n<p>Here, we’ve started off by setting up our button component with a <code>buttonConfig</code>. The <code>buttonConfig</code> contains <code>shouldForwardProp</code>, which is used to control the properties that should be forwarded to the DOM, because properties such as <code>color</code> show up on the rendered element by default.</p> \n<p>Next, let’s define our button sizes, which we’re going to use in the button component!</p> \n<pre><code>const buttonSizeProps = {\n  small: {\n    fontSize: fontSizes['xsmall'],\n    padding: `${spacing['xsmall']} ${spacing['small']}`,\n  },\n  medium: {\n    fontSize: fontSizes['small'],\n    padding: `${spacing['small']} ${spacing['medium']}`,\n  },\n  large: {\n    fontSize: fontSizes['medium'],\n    padding: `${spacing['medium']} ${spacing['large']}`,\n  },\n};\n</code></pre> \n<p><code>buttonSizeProps</code> is a map of our size values (<code>small</code>, <code>medium</code>, and <code>large</code>), and it returns <code>fontSize</code> and <code>padding</code> values based on the sizes. For a small button, we’d need a small font with small padding. The same goes for the medium and large sizes to scale them appropriately.</p> \n<p>Next, let’s define a function that provides valid CSS properties based on the passed variant:</p> \n<pre><code>const getPropsByVariant = ({ variant, color, theme }) =&gt; {\n\n  const colorInPalette = theme.palette[color];\n\n  const variants = {\n    outline: colorInPalette\n      ? outlineVariantPropsByPalette\n      : defaultOutlineVariantProps,\n    solid: colorInPalette\n      ? solidVariantPropsByPalette\n      : defaultSolidVariantProps,\n  };\n\n  return variants[variant] || variants.solid;\n};\n</code></pre> \n<p>Here, the <code>getPropsByVariant</code> function takes in <code>variant</code>, <code>color</code>, and <code>theme</code> properties and returns the properties of the specified variant; if no variant is specified, it defaults to <code>solid</code>. <code>colorInPalette</code> retrieves the palette assigned to the specified color if found, and <code>undefined</code> if not found in our <code>theme</code> object.</p> \n<p>In each variant, we check whether a palette actually exists for the color specified; if we don’t, then we use colors from the <code>common</code> and <code>grey</code> objects of our theme, which we will apply in <code>defaultOutlineVariantProps</code> and <code>defaultSolidVariantProps</code>.</p> \n<p>Next, let’s define our variant properties!</p> \n<pre><code>const defaultSolidVariantProps = {\n  main: {\n    border: `1px solid ${theme.palette.grey[100]}`,\n    backgroundColor: theme.palette.grey[100],\n    color: theme.palette.common.black,\n  },\n  hover: {\n    border: `1px solid ${theme.palette.grey[200]}`,\n    backgroundColor: theme.palette.grey[200],\n  },\n};\n\nconst defaultOutlineVariantProps = {\n  main: {\n    border: `1px solid ${theme.palette.common.black}`,\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.black,\n  },\n  hover: {\n    border: `1px solid ${theme.palette.common.black}`,\n    backgroundColor: theme.palette.common.white,\n    color: theme.palette.common.black,\n  },\n};\n\nconst solidVariantPropsByPalette = colorInPalette &amp;&amp; {\n  main: {\n    border: `1px solid ${colorInPalette.main}`,\n    backgroundColor: colorInPalette.main,\n    color: colorInPalette.contrastText,\n  },\n  hover: {\n    border: `1px solid ${colorInPalette.light}`,\n    backgroundColor: colorInPalette.light,\n  },\n};\n\nconst outlineVariantPropsByPalette = colorInPalette &amp;&amp; {\n  main: {\n    border: `1px solid ${colorInPalette.main}`,\n    backgroundColor: theme.palette.common.white,\n    color: colorInPalette.main,\n  },\n  hover: {\n    border: `1px solid ${colorInPalette.light}`,\n    backgroundColor: theme.palette.common.white,\n    color: colorInPalette.light,\n  },\n};\n</code></pre> \n<p>Here, we define the properties that are going to be applied to our button based on the selected variants. And, as discussed earlier, <code>defaultSolidVariantProps</code> and <code>defaultOutlineVariantProps</code> use colors from our <code>common</code> and <code>grey</code> objects as fallbacks for when the color specified isn’t in our palette or when no color is specified for what we put in place.</p> \n<p>By the way, the <code>solidVariantPropsByPalette</code> and <code>outlineVariantPropsByPalette</code> objects use the color from our palette as specified by the button. They both have <code>main</code> and <code>hover</code> properties that differentiate the button’s default and hover styles, respectively.</p> \n<p>The button design we’ve used accounts for two variants, which we can check out in <a href=\"https://www.figma.com/file/WQIRHS8QV3B7ZPDSW327uT/Component-Library?node-id=0%3A1\">our component library design</a>.</p> \n<p>Next, let’s create our <code>StyledButton</code> function, which combines all we’ve done so far.</p> \n<div> \n <pre><code>const StyledButton = ({\n  color,\n  size,\n  variant,\n  enableElevation,\n  disabled,\n  theme,\n}) =&gt; {\n  if (isObjectEmpty(theme)) {\n    theme = defaultTheme;\n  }\n\n  const fontSizeBySize = buttonSizeProps[size]?.fontSize;\n  const paddingBySize = buttonSizeProps[size]?.padding;\n  const propsByVariant = getPropsByVariant({ variant, theme, color });\n\n  return {\n    fontWeight: 500,\n    cursor: 'pointer',\n    opacity: disabled &amp;&amp; 0.7,\n    transition: 'all 0.3s linear',\n    padding: buttonSizeProps.medium.padding,\n    fontSize: buttonSizeProps.medium.fontSize,\n    borderRadius: theme.shape.borderRadius,\n    fontFamily: theme.typography.fontFamily,\n    boxShadow: enableElevation &amp;&amp; theme.shadows[1],\n    ...(propsByVariant &amp;&amp; propsByVariant.main),\n    ...(paddingBySize &amp;&amp; { padding: paddingBySize }),\n    ...(fontSizeBySize &amp;&amp; { fontSize: fontSizeBySize }),\n    '&amp;:hover': !disabled &amp;&amp; {\n      boxShadow: enableElevation &amp;&amp; theme.shadows[2],\n      ...(propsByVariant &amp;&amp; propsByVariant.hover),\n    },\n  };\n};\n</code></pre> \n</div> \n<p>In the <code>StyledButton</code> function, we’re assigning <code>defaultTheme</code> to the theme if the <code>theme</code> object is empty which makes it optional for the consumers of our library to use Emotion’s <a href=\"https://emotion.sh/docs/emotion-theming#themeprovider-reactcomponenttype\">ThemeProvider</a> in order to make use of the library. We assigned <code>fontSize</code> and <code>padding</code> based on the <code>buttonSizeProps</code> object. We defined several default button properties, such as <code>fontWeight</code> and <code>cursor</code>, which aren’t tied to any property, and we also derived <code>color</code>, <code>backgroundColor</code>, and <code>border</code> values based on the result of <code>propsByVariant</code>.</p> \n<p>Now that we’ve created our <code>Button</code> component, let’s see how we can use it:</p> \n<pre><code>&lt;Button\n    variant=\"solid\"\n    color=\"primary\"\n    size=\"small\"\n    enableElevation\n    disabled\n&gt;\n    Small Outline Elevated Button\n&lt;/Button&gt;\n</code></pre> \n<p>We can check what that looks like <a href=\"https://codesandbox.io/s/component-lib-button-wp0c9?file=/src/App.js\">on CodeSandbox</a>:</p> \n<p>That’s how to use the <code>Button</code> component. We define the following properties:</p> \n<ul> \n <li>We define a variant with a <code>solid</code> value. We could have specified <code>outline</code> instead. If the <code>variant</code> prop isn’t provided, we would also default to <code>solid</code>.</li> \n <li>We define <code>color</code>, with a value of <code>primary</code>. We also support <code>error</code> as a color value or a color from a <code>theme</code> object. If the <code>color</code> property isn’t specified, we would fall back to our default color state.</li> \n <li>We define <code>size</code>, with a value of <code>small</code>. It could be <code>medium</code> (the default) or <code>large</code>.</li> \n <li>We define <code>EnableElevation</code> because we want some <code>box-shadow</code> on our button. We could have chosen not to use it.</li> \n <li>Finally, we define <code>disabled</code> because we want our button to be disabled. The additional thing we do to a disabled button is reduce its opacity.</li> \n</ul> \n<p>The button doesn’t need to take any property. It defaults to a solid medium-sized button.</p> \n<h3>Box Component</h3> \n<p>A box component is a container that can hold any component or HTML element. It accepts but is not limited to properties such as <code>padding</code>, <code>margin</code>, <code>display</code>, and <code>width</code>. It can also be used as a base component for some of the other components we’ll get into later.</p> \n<p>Here’s what it looks like on Figma:</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7abe7c6-addd-4bd2-b2d4-4b752b132182/box-component-library-react-emotion.png\" /></p> \n<p>Before diving into the code, let’s not forget to create a new folder for this component.</p> \n<p>Now, let’s create our <code>Box</code> component:</p> \n<div> \n <pre><code>\nimport styled from '@emotion/styled';\nimport isPropValid from '@emotion/is-prop-valid';\nimport { spacing, theme as defaultTheme } from '../../utils';\n\nconst StyledBox = ({\n  paddingX,\n  paddingY,\n  marginX,\n  marginY,\n  width,\n  display,\n  theme,\n  ...props\n}) =&gt; {\n\n  if (isObjectEmpty(theme)) {\n    theme = defaultTheme;\n  }\n\n  const padding = spacing[props.padding];\n  let paddingTop = spacing[props.paddingTop];\n  let paddingRight = spacing[props.paddingRight];\n  let paddingBottom = spacing[props.paddingBottom];\n  let paddingLeft = spacing[props.paddingLeft];\n  if (paddingX) {\n    paddingLeft = spacing[paddingX];\n    paddingRight = spacing[paddingX];\n  }\n  if (paddingY) {\n    paddingTop = spacing[paddingY];\n    paddingBottom = spacing[paddingY];\n  }\n  let margin = spacing[props.margin];\n  let marginTop = spacing[props.marginTop];\n  let marginRight = spacing[props.marginRight];\n  let marginBottom = spacing[props.marginBottom];\n  let marginLeft = spacing[props.marginLeft];\n  if (marginX) {\n    marginLeft = spacing[marginX];\n    marginRight = spacing[marginX];\n  }\n  if (marginY) {\n    marginTop = spacing[marginY];\n    marginBottom = spacing[marginY];\n  }\n  return {\n    padding,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n    paddingLeft,\n    margin,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    width,\n    display,\n    fontFamily: theme.typography.fontFamily,\n  };\n};\n\nconst IGNORED_PROPS = ['display', 'width'];\n\nconst boxConfig = {\n  shouldForwardProp: (prop) =&gt;\n    isPropValid(prop) &amp;&amp; !IGNORED_PROPS.includes(prop),\n};\n\nexport const Box = styled('div', boxConfig)(StyledBox);\n</code></pre> \n</div> \n<p>The <code>spacing</code> rule we defined earlier is being applied to both padding and margin, as we can see in the <code>Box</code> component. We receive contextual values for padding and margin, and we look up their actual values from the <code>spacing</code> object.</p> \n<p>We accept <code>paddingX</code> and <code>paddingY</code> props to update padding across the horizontal and vertical axis, respectively. We do the same for <code>marginX</code> and <code>marginY</code> as well.</p> \n<p>Also, we don’t want the <code>display</code> and <code>width</code> props to get forwarded to the DOM because we only need them in CSS. So, we add them to our list of props to ignore, and pass that on to our config.</p> \n<p>Here’s how we could use the <code>Box</code> component:</p> \n<pre><code>&lt;Box\n  padding=\"small\"\n  paddingTop=\"medium\"\n  paddingBottom=\"medium\"\n&gt;\n  Simple Box Component\n&lt;/Box&gt;\n</code></pre> \n<p>We can see what this looks like on <a href=\"https://codesandbox.io/s/component-lib-box-m71mf?file=/src/App.js\">CodeSandbox</a>.</p> \n<p>In this <code>Box</code> component, we’ve assigned <code>small</code> as a value to our <code>padding</code> property, and <code>medium</code> to the <code>paddingTop</code> and <code>paddingBottom</code> properties. When rendered, the <code>Box</code> component will have its <code>padding-left</code> and <code>padding-right</code> properties set to <code>12px</code> each, and its <code>padding-top</code> and <code>padding-bottom</code> properties set to <code>20px</code>. We could have replaced <code>paddingTop</code> and <code>paddingBottom</code> with <code>paddingY</code> and gotten the same result.</p> \n<h3>Columns Component</h3> \n<p>The <code>Columns</code> component is a variation of our <code>Box</code> component, with a <code>display</code> type of <code>flex</code> and with children spaced evenly across the x-axis.</p> \n<p>Here is a representation of the <code>Columns</code> component in Figma:</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c708b65a-b35b-4de8-aef1-fc83267e3ccb/columns-component-library-react-emotion.png\" /></p> \n<p>Let’s build our <code>Columns</code> component!</p> \n<div> \n <pre><code>import React from 'react';\nimport { Box } from '../Box';\n\nexport const Columns = ({ children, space, ...props }) =&gt; {\n  return (\n    &lt;Box display=\"flex\" {...props}&gt;\n      {React.Children.map(children, (child, index) =&gt; {\n        if (child.type !== Box) {\n          console.warn(\n            'Each child in a Columns component should be a Box component'\n          );\n        }\n\n        if (index &gt; 0) {\n          return React.cloneElement(child, {\n            marginLeft: space,\n            width: '100%',\n          });\n        }\n\n        return React.cloneElement(child, { width: '100%' });\n      })}\n    &lt;/Box&gt;\n  );\n};\n</code></pre> \n</div> \n<p>We’re using <a href=\"https://reactjs.org/docs/react-api.html#reactchildren\">React.Children</a> to map over the <code>Columns</code> component’s children. And we’re adding <code>marginLeft</code> and <code>width</code> properties to each of the children, except the first child, which doesn’t need a <code>marginLeft</code> property because it’s the leftmost child in the column. We expect each child to be a <code>Box</code> element to ensure that the necessary styles are applied to it.</p> \n<p>Here’s how we could use the <code>Columns</code> component:</p> \n<pre><code>&lt;Columns space=\"small\"&gt;\n  &lt;Box&gt; Item 1&lt;/Box&gt;\n  &lt;Box&gt; Item 2&lt;/Box&gt;\n  &lt;Box&gt; Item 3&lt;/Box&gt;\n&lt;/Columns&gt;\n</code></pre> \n<p>We can see what that looks like on <a href=\"https://codesandbox.io/s/component-lib-columns-x1g0m\">CodeSandbox</a>.</p> \n<p>The <code>Columns</code> children here are spaced evenly across the x-axis by 12 pixels because that’s what the value of <code>small</code> resolves to, as we’ve defined earlier. Because the <code>Columns</code> component is literally a <code>Box</code> component, it can take in other <code>Box</code> component properties, and we can customize it as much as we want.</p> \n<h3>Stack Component</h3> \n<p>This is also a variation of our <code>Box</code> component that takes the full width of the parent element and whose children are spaced evenly across the y-axis.</p> \n<p>Here is a representation of the <code>Stack</code> component in Figma:</p> \n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/42ff98d5-f414-4de3-a4b7-a7c1e2ce7e4d/stack-component-library-react-emotion.png\" /></p> \n<p>Let’s build our <code>Stack</code> component:</p> \n<pre><code>import React from 'react';\nimport { Box } from '../Box';\nimport { Columns } from '../Columns';\n\nconst StackChildrenTypes = [Box, Columns];\nconst UnsupportedChildTypeWarning =\n  'Each child in a Stack component should be one of the types: Box, Columns';\n\nexport const Stack = ({ children, space, ...props }) =&gt; {\n  return (\n    &lt;Box {...props}&gt;\n      {React.Children.map(children, (child, index) =&gt; {\n        if (!StackChildrenTypes.includes(child.type)) {\n          console.warn(UnsupportedChildTypeWarning);\n        }\n\n        if (index &gt; 0) {\n          return React.cloneElement(child, { marginTop: space });\n        }\n\n        return child;\n      })}\n    &lt;/Box&gt;\n  );\n};\n</code></pre> \n<p>Here, we map over each child with <code>React.Children</code> and apply a <code>paddingTop</code> property to it with the value of the <code>space</code> argument. As for the first child, we need it to take its original position, so we skip adding a <code>marginTop</code> property to it. We also accept each child to be a <code>Box</code> so that we can apply the necessary properties to it.</p> \n<p>Here’s how we could use the <code>Stack</code> component:</p> \n<pre><code>&lt;Stack space=\"small\"&gt;\n  &lt;Box marginTop=\"medium\"&gt; Item 1&lt;/Box&gt;\n  &lt;Box&gt; Item 2&lt;/Box&gt;\n  &lt;Box&gt; Item 3&lt;/Box&gt;\n&lt;/Stack&gt;\n</code></pre> \n<p>We can see what that looks like on <a href=\"https://codesandbox.io/s/component-lib-stack-3kx9m?file=/src/App.js\">CodeSandbox</a>.</p> \n<p>Here, the <code>Box</code> elements are spaced evenly with the <code>small</code> unit, and the first <code>Box</code> takes a separate <code>marginTop</code> property. This shows that you can customize components however you wish.</p> \n<h4>Conclusion</h4> \n<p>We’ve gone through the basics of using Emotion to create components in React using the APIs that it provides. This is just one of many ways to go about building a component library. There are some nuances to building it for a brand because you might not have to take theming and some other things into consideration. But if you plan to release the library to the public one day, then you’ll have to deal with requests for those missing pieces, so consider that possibility and make the library a little flexible ahead of time.</p> \n<p>If you have any questions, feel free to drop them as comments.</p> \n<p>The <a href=\"https://github.com/smashingmagazine/component-library/tree/final\">repository for this article</a> is on GitHub, and the <a href=\"https://www.figma.com/file/WQIRHS8QV3B7ZPDSW327uT/Component-Library?node-id=0%3A1\">button designs</a> we’ve used are on Figma.</p> \n<h4>References</h4> \n<ul> \n <li>“<a href=\"https://clearleft.com/posts/on-building-component-libraries\">On Building Component Libraries</a>”, Mark Perkins, Clearleft</li> \n <li>“<a href=\"https://medium.com/sketch-app-sources/exploring-responsive-type-scales-cf1da541be54\">Exploring Responsive Type Scales</a>”, Joseph Mueller</li> \n <li>“<a href=\"https://frontendmasters.com/courses/design-systems/\">Design Systems With React and Storybook</a>”, Emma Bostian, Frontend Masters</li> \n <li><a href=\"https://emotion.sh/docs/introduction\">Emotion official documentation</a></li> \n</ul>","descriptionType":"html","publishedDate":"Fri, 04 Sep 2020 10:30:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b09a7a19-084a-4252-89f2-ab8b168f778c/component-library-react-emotion.png","linkMd5":"c2ff886e4902a296612efa5d4bdb8cd3","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn29@2020_1/2020/09/05/07-59-16-597_1a2c71f88da434b5.webp","destWidth":1201,"destHeight":631,"sourceBytes":273651,"destBytes":60174,"author":"hello@smashingmagazine.com (Ademola Adegbuyi)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b09a7a19-084a-4252-89f2-ab8b168f778c/component-library-react-emotion.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/87382448-81c9-4bdf-a844-3243c6ee825a/button-component-library-react-emotion.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn12@2020_2/2020/09/05/07-59-23-746_966af261b620f296.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7abe7c6-addd-4bd2-b2d4-4b752b132182/box-component-library-react-emotion.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn70@2020_6/2020/09/05/07-59-35-858_9dc40fa79d2916c4.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c708b65a-b35b-4de8-aef1-fc83267e3ccb/columns-component-library-react-emotion.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn45@2020_1/2020/09/05/07-59-25-321_2cb4bbec264dd423.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/42ff98d5-f414-4de3-a4b7-a7c1e2ce7e4d/stack-component-library-react-emotion.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn7@2020_2/2020/09/05/07-59-28-017_8631d77aa5d6f6ec.webp"},"publishedOrCreatedDate":1599292755729},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Mastering Props And PropTypes In React","link":"https://smashingmagazine.com/2020/08/mastering-props-proptypes-react/","description":"<p>Do props and PropTypes confuse you? You’re not alone. I’m going to guide you through everything about props and PropTypes. They can make your life significantly easier when developing React apps. This tutorial will introduce you to the details about props, passing and accessing props, and passing information to any component using props.</p>\n<p>Building React applications involves breaking down the UI into several components, which implies that we will need to pass data from one component to another. Props are an important mechanism for passing information between React components, and we’re going to look into them in great detail. This article would be incomplete without looking into PropTypes, because they ensure that components use the correct data type and pass the right data.</p>\n<p>It’s always a good practice to validate the data we get as props by using PropTypes. You will also learn about integrating PropTypes in React, typechecking with PropTypes, and using defaultProps. At the end of this tutorial, you will understand how to use props and PropTypes effectively. It is important that you already have basic knowledge of how <a href=\"https://reactjs.org/docs/thinking-in-react.html\">React works</a>.</p>\n<h3>Understanding Props</h3>\n<p>React allows us to pass information to components using things called props (short for properties). Because React comprises several components, props make it possible to share the same data across the components that need them. It makes use of one-directional data flow (parent-to-child components). However, with a callback function, it’s possible to pass props back from a child to a parent component.</p>\n<p>These data can come in different forms: numbers, strings, arrays, functions, objects, etc. We can pass props to any component, just as we can declare attributes in any HTML tag. Take a look at the code below:</p>\n<pre><code>&#60;PostList posts={postsList} /&#62;\n</code></pre>\n\n<p>In this snippet, we are passing a prop named <code>posts</code> to a component named <code>PostList</code>. This prop has a value of <code>{postsList}</code>. Let’s break down how to access and pass data.</p>\n<h4>Passing and Accessing Props</h4>\n<p>To make this tutorial interesting,  let’s create an application that shows a list of users’ names and posts. The app demo is shown below:</p>\n<p>See the Pen <a href=\"https://codepen.io/smashingmag/pen/MWyKQpd\">Passing and Accessing Props</a> by <a href=\"https://codepen.io/davidadeneye\">David Adeneye</a>.</p>\n<p>The app comprises collections of components: an <code>App</code> component, a <code>PostList</code> component, and a <code>Post</code> component<strong>.</strong></p>\n<p>The list of posts will require data such as the <code>content</code> and the <code>name</code> of the user. We can construct the data like so:</p>\n<pre><code>const postsList = [\n  {\n    id: 1,\n    content: \"The world will be out of the pandemic soon\",\n    user: \"Lola Lilly\",\n  },\n  {\n    id: 2,\n    content: \"I'm really exited I'm getting married soon\",\n    user: \"Rebecca Smith\",\n  },\n  {\n    id: 3,\n    content: \"What is your take on this pandemic\",\n    user: \"John Doe\",\n  },\n  {\n    id: 4,\n    content: \"Is the world really coming to an end\",\n    user: \"David Mark\",\n  },\n];\n</code></pre>\n\n<p>After this, we need the <code>App</code> component to pull the data, Here is the basic structure of that component:</p>\n<pre><code>const App = () =&#62; {\n  return (\n    &#60;div&#62;\n      &#60;PostList posts={postsList} /&#62;\n    &#60;/div&#62;\n  );\n};\n</code></pre>\n\n<p>Here, we are passing an array of posts as a prop to the <code>PostList</code> (which we’ll create in a bit). The parent component, <code>PostList</code>, will access the data in <code>postsList</code>, which will be passed as <code>posts</code> props to the child component (<code>Post</code>). If you’ll remember, our app comprises three components, which we’ll create as we proceed.</p>\n<p>Let’s create the <code>PostList</code>:</p>\n<pre><code>class PostList extends React.Component {\n  render() {\n    return (\n      &#60;React.Fragment&#62;\n        &#60;h1&#62;Latest Users Posts&#60;/h1&#62;\n        &#60;ul&#62;\n          {this.props.posts.map((post) =&#62; {\n            return (\n              &#60;li key={post.id}&#62;\n                &#60;Post {...post} /&#62;\n              &#60;/li&#62;\n            );\n          })}\n        &#60;/ul&#62;\n      &#60;/React.Fragment&#62;\n    );\n  }\n}\n</code></pre>\n\n<p>The <code>PostList</code> component will receive <code>posts</code> as its prop. It will then loop through the <code>posts</code> prop, <code>this.props.posts</code>, to return each posted item as a <code>Post</code> component (which we will model later). Also, note the use of the <code>key</code> in the snippet above. For those new to React, a <a href=\"https://reactjs.org/docs/lists-and-keys.html\">key</a> is a unique identifier assigned to each item in our list, enabling us to distinguish between items. In this case, the key is the <code>id</code> of each post. There’s no chance of two items having the same <code>id</code>, so it’s a good piece of data to use for this purpose.</p>\n<p>Meanwhile, the remaining properties are passed as props to the <code>Post</code> component ( <code>&#60;Post {...post} /&#62;</code> ).</p>\n<p>So, let’s create the <code>Post</code> component and make use of the props in it:</p>\n<pre><code>const Post = (props) =&#62; {\n  return (\n    &#60;div&#62;\n      &#60;h2&#62;{props.content}&#60;/h2&#62;\n      &#60;h4&#62;username: {props.user}&#60;/h4&#62;\n    &#60;/div&#62;\n  );\n};\n</code></pre>\n\n<p>We are constructing the <code>Post</code> component as a functional component, rather than defining it as a class component like we did for the <code>PostList</code> component. I did this to show you how to access props in a functional component, compared to how we access them in a class component with <code>this.props</code><strong>.</strong> Because this a functional component, we can access the values using <code>props</code><strong>.</strong></p>\n<p>We’ve learned now how to pass and access props, and also how to pass information from one component to the other. Let’s consider now how props work with functions.</p>\n<h4>Passing Functions Via Props</h4>\n<p>In the preceding section, we passed an array of data as props from one component to another. But what if we are working with functions instead? React allows us to pass functions between components. This comes in handy when we want to trigger a state change in a parent component from its child component. Props are supposed to be immutable; you should not attempt to change the value of a prop. You have to do that in the component that passes it down, which is the parent component.</p>\n<p>Let’s create a simple demo app that listens to a click event and changes the state of the app. To change the state of the app in a different component, we have to pass down our function to the component whose state needs to change. In this way, we will have a function in our child component that is able to change state.</p>\n<p>Sounds a bit complex? I have created a simple React application that changes state with the click of a button and renders a piece of welcome information:</p>\n<p>See the Pen <a href=\"https://codepen.io/smashingmag/pen/WNwrMEY\">Passing Function via Props in React</a> by <a href=\"https://codepen.io/davidadeneye\">David Adeneye</a>.</p>\n<p>In the demo above, we have two components. One is the <code>App</code> component, which is the parent component that contains the app’s state and the function to set the state. The <code>ChildComponent</code> will be the child in this scenario, and its task is to render the welcome information when the state changes.</p>\n<p>Let’s break this down into code:</p>\n<pre><code>class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShow: true,\n    };\n  }\n  toggleShow = () =&#62; {\n    this.setState((state) =&#62; ({ isShow: !state.isShow }));\n  };\n  render() {\n    return (\n      &#60;div&#62;\n        &#60;ChildComponent isShow={this.state.isShow} clickMe={this.toggleShow} /&#62;\n      &#60;/div&#62;\n    );\n  }\n}\n</code></pre>\n\n<p>Notice that we’ve set our state to <code>true</code>, and the method to change the state is created in the <code>App</code> component. In the <code>render()</code> function, we pass the state of the app, as the prop <code>isShow</code>, to the <code>ChildComponent</code> component. We also pass the <code>toggleShow()</code> function as a prop named <code>clickMe</code>.</p>\n<p>We will use this in the <code>ChildComponent</code> which looks like this:</p>\n<pre><code>class ChildComponent extends React.Component {\n  clickMe = () =&#62; {\n    this.props.clickMe();\n  };\n  render() {\n    const greeting = \"Welcome to React Props\";\n    return (\n      &#60;div style={{ textAlign: \"center\", marginTop: \"8rem\" }}&#62;\n        {this.props.isShow ? (\n          &#60;h1 style={{ color: \"green\", fontSize: \"4rem\" }}&#62;{greeting}&#60;/h1&#62;\n        ) : null}\n        &#60;button onClick={this.clickMe}&#62;\n          &#60;h3&#62;click Me&#60;/h3&#62;\n        &#60;/button&#62;\n      &#60;/div&#62;\n    );\n  }\n}\n</code></pre>\n\n<p>The most important thing above is that the <code>App</code> component passes down a function as a prop to the <code>ChildComponent</code>. The function <code>clickMe()</code> is used for the click handler in the <code>ChildComponent</code>, whereas the <code>ChildComponent</code> doesn’t know the logic of the function — it only triggers the function when the button gets clicked. The state is changed when the function is called, and once the state has changed, the state is passed down as a prop again. All affected components, like the child in our case, will render again.</p>\n<p>We have to pass the state of the app, <code>isShow</code>, as a prop to the <code>ChildComponent</code>, because without it, we cannot write the logic above to display <code>greeting</code> when the state is updated.</p>\n<p>Now that we’ve looked at functions, let’s turn to validation. It’s always a good practice to validate the data we get through props by using PropTypes. Let’s dive into that now.</p>\n<h3>What Are PropTypes In React?</h3>\n<p>PropTypes are a mechanism to ensure that components use the correct data type and pass the right data, and that components use the right type of props, and that receiving components receive the right type of props.</p>\n<p>We can think of it like a puppy being delivered to a pet store.  The pet store doesn't want pigs, lions, frogs, or geckos — it wants puppies. PropTypes ensure that the correct data type (puppy) is delivered to the pet store, and not some other kind of animal.</p>\n<p>In the section above, we saw how to pass information to any component using props. We passed props directly as an attribute to the component, and we also passed props from outside of the component and used them in that component. But we didn’t check what type of values we are getting in our component through props or that everything still works.</p>\n<p>It’s totally upon us whether to validate the data we get in a component through props. But in a complex application, it is always a good practice to validate that data.</p>\n<h4>Using PropTypes</h4>\n<p>To make use of PropTypes, we have to add the package as a dependency to our application through npm or Yarn, by running the following code in the command line. For npm:</p>\n<pre><code>npm install --save prop-types\n</code></pre>\n\n<p>And for Yarn:</p>\n<pre><code>yarn add prop-types\n</code></pre>\n\n<p>To use PropTypes, we first need to import PropTypes from the prop-types package:</p>\n<pre><code>import PropTypes from 'prop-types';\n</code></pre>\n\n<p>Let’s use ProTypes in our app that lists users’ posts. Here is how we will use it for the <code>Post</code> component:</p>\n<pre><code>Post.proptypes = {\n  id: PropTypes.number,\n  content: PropTypes.string,\n  user: PropTypes.string\n}\n</code></pre>\n\n<p>Here, <code>PropTypes.string</code> and <code>PropTypes.number</code> are prop validators that can be used to make sure that the props received are of the right type. In the code above, we’re declaring <code>id</code> to be a number, while <code>content</code> and <code>user</code> are to be strings.</p>\n<p>Also, PropTypes are useful in catching bugs. And we can enforce passing props by using <code>isRequired</code>:</p>\n<pre><code>Post.proptypes = {\n  id: PropTypes.number.isRequired,\n  content: PropTypes.string.isRequired,\n  user: PropTypes.string.isRequired\n}\n</code></pre>\n\n<p>PropTypes have a lot of validators. Here are some of the most common ones:</p>\n<div>\n <pre><code>Component.proptypes = {\n  stringProp: PropTypes.string,         // The prop should be a string\n  numberProp: PropTypes.number,         // The prop should be a number\n  anyProp: PropTypes.any,               // The prop can be of any data type\n  booleanProp: PropTypes.bool,          // The prop should be a function\n  functionProp: PropTypes.func          // The prop should be a function\n  arrayProp: PropTypes.array            // The prop should be an array\n}\n</code></pre>\n</div>\n\n<p>More types are available, which you can check in <a href=\"https://reactjs.org/docs/typechecking-with-proptypes.html#proptypes\">React’s documentation</a>].</p>\n<h4>Default Props</h4>\n<p>If we want to pass some default information to our components using props, React allows us to do so with something called <code>defaultProps</code>. In cases where PropTypes are optional (that is, they are not using <code>isRequired</code>), we can set <code>defaultProps</code>. Default props ensure that props have a value, in case nothing gets passed. Here is an example:</p>\n<pre><code>Class Profile extends React.Component{\n\n  // Specifies the default values for props\n  static defaultProps = {\n    name: 'Stranger'\n  };\n\n  // Renders \"Welcome, Stranger\":\n  render() {\n    return &#60;h2&#62; Welcome, {this.props.name}&#60;h2&#62;\n  }\n}\n</code></pre>\n\n<p>Here, <code>defaultProps</code> will be used to ensure that <code>this.props.name</code> has a value, in case it is not specified by the parent component. If no name is passed to the class <code>Profile</code>, then it will have the default property <code>Stranger</code> to fall back on. This prevents any error when no prop is passed. I advise you always to use <code>defaultProps</code> for every optional PropType.</p>\n<h3>Conclusion</h3>\n<p>I hope you’ve enjoyed working through this tutorial. Hopefully, it has shown you how important props and propTypes are to building React applications, because without them, we wouldn’t be able to pass data between components when interactions happen. They are a core part of the component-driven and state-management architecture that React is designed around.</p>\n<p>PropTypes are a bonus for ensuring that components use the correct data type and pass the right data, and that components use the right type of props, and that receiving components receive the right type of props.</p>\n<p>If you have any questions, you can leave them in the comments section below, and I’ll be happy to answer every one and work through any issues with you.</p>\n<h4>References</h4>\n<ul>\n<li>“<a href=\"https://reactjs.org/docs/thinking-in-react.html\">Thinking in React</a>”, React Docs</li>\n<li>“<a href=\"https://reactjs.org/docs/lists-and-keys.html\">List and Keys</a>”, React Docs</li>\n<li>“<a href=\"https://reactjs.org/docs/typechecking-with-proptypes.html#proptypes\">Typechecking With PropTypes</a>”, React Docs</li>\n<li>“<a href=\"https://www.robinwieruch.de/react-pass-props-to-component\">How to Pass Props to Components in React</a>”, Robin Wieruch</li>\n</ul>\n","descriptionType":"html","publishedDate":"Mon, 17 Aug 2020 10:30:00 +0000","feedId":9306,"bgimg":"","linkMd5":"1b2bfad10a3f721d1e85463bc2b0f035","bgimgJsdelivr":"","metaImg":"","author":"hello@smashingmagazine.com (Adeneye David Abiodun)","publishedOrCreatedDate":1599292755737},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Using Mobx As A State Manager In React Native Applications","link":"https://smashingmagazine.com/2020/08/mobx-state-manager-react-native-applications/","description":"<p>State management is an integral part of developing JavaScript applications especially React and React Native applications. In this tutorial, we are going to learn how to use the MobX library for state management; understand the core concepts, some use cases and build a simple example. </p>\n<p><strong>Note:</strong> <em>Basic knowledge of Javascript and React Native will be of great benefit as you work through this tutorial.</em></p>\n<h3>Using MobX In React Applications</h3>\n<p>State is the data that your component(s) is working with — it holds the data that a component requires and it dictates what a component renders. State management is the process of managing how the state gets updated and passed from one component to another. Monitoring and working with data in an application can be difficult and that’s the need for state management libraries. Handling all the data for your application can be a little daunting especially when your application grows in size and complexity, building your own state management tool is not just time-consuming but difficult, This is why you might want to use a state management library.</p>\n<p>However, it is important to know that state isn’t the only data that a component renders, components can also render props passed down to it. </p>\n<h3>Options For State Management</h3>\n<p>State management libraries for React Native applications include; <a href=\"https://www.smashingmagazine.com/2020/01/introduction-react-context-api/\">React Context API</a>, <a href=\"https://www.smashingmagazine.com/2018/07/redux-designers-guide/\">Redux</a>, MobX and <a href=\"https://blog.logrocket.com/state-management-with-unstated-next/\">Unstated Next</a>.  </p>\n<p>Although these state managers each have their advantages and disadvantages, I personally recommend MobX because of its simplicity, minimal boilerplate code — it doesn’t require you change your code, this is because in its core, MobX is and looks like JavaScript; you don’t need a change of architecture to support it (unlike Redux and to a lesser extent Context).</p>\n<p>In fact it’s such an invisible abstraction that in many cases if you take out all of the MobX code — the <em>@observable</em>, <em>@computed</em>, <em>@action</em> and <em>observer</em> decorators, your code will work exactly the same (though it’ll have some performance issues) and it’s not limited to a global state. These are some reasons to go forward with MobX as a state manager of choice for your React Native applications.</p>\n<p>Although it’s also important to note some issues with using MobX as a state manager, some of which include its avoidance of rules on how to implement it and MobX can be difficult to debug especially when you change state directly in a component without using the <code>@actions</code> parameter.</p>\n<h3>What Is MobX?</h3>\n<p>According to the <a href=\"https://mobx.js.org/README.html\">official documentation</a>, MobX is a battle-tested library that makes state management simple and scalable by transparently applying functional reactive programming. MobX treats your application like a spreadsheet. The logic is that <em>Anything that can be derived from the application state, should be done automatically</em>. </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ef57e66c-2fd4-4a3e-beee-c270dc05040b/5-using-mobx-state-manager-react-native-applications.png\" /></p>\n<h3>Core Principles And Concept Of MobX</h3>\n<p>MobX differentiates itself from other state managers with the following concepts.</p>\n<h4>1. State</h4>\n<p>State is the data your application holds — it’s roughly the entire contents of its memory. This also applies to your components.</p>\n<h4>2. Derivations</h4>\n<p>In MobX, anything that can be derived from the state without interactions is a derivation. Examples of derivations include:</p>\n<ul>\n<li>User interface,</li>\n<li>Backend add-ons such as changes to a server.</li>\n</ul>\n<p>MobX has two mains types of derivations:</p>\n<ul>\n<li><strong>Computed values</strong><br />Computed values are mostly values that can be derived from a current state using pure functions.</li>\n<li><strong>Reactions</strong><br />Reactions in derivations are side effects that happen as a results of changes in your application state. They are similar to a computed value, but instead of producing a new value, a reaction produces a side effect for things like printing to the console, making network requests, incrementally updating the React component tree to patch the DOM, and so on.</li>\n</ul>\n<p>A golden rule when using MobX is that when creating a value based on the current state, use a computed value. </p>\n<h4>3. Actions</h4>\n<p>Unlike derivations, actions are code that cause changes to an application state — code that changes the state. They are anything that modifies the state. With MobX you can make it explicit in your code, Actions are mostly user events such as inputs, backend data pushes or even scheduled events. </p>\n<p>To better understand Actions, let’s look at an example from the <a href=\"https://mobx.js.org/refguide/action.html\">MobX documentation</a>.</p>\n<pre><code>class Ticker {\n    @observable tick = 0\n\n    @action\n    increment() {\n        this.tick++ // 'this' will always be correct\n    }\n}\n\nconst ticker = new Ticker()\nsetInterval(ticker.increment, 1000)</code></pre>   \n\n<p>Here, we set an <code>@observable</code> tick with an initial value of 0. Next, we created a function increment that is also an action that updates the initial value once a tick is made every second. </p>\n<h3>Observables In MobX</h3>\n<p>Observables or observable values in MobX are mostly JavaScript primitives, plain objects, classes, arrays and maps. They’re mostly used by first declaring an observable and adding a value to it and then calling it by adding an @observable as shown below:</p>\n<pre><code>  observable(value)\n @observable classProperty = value</code></pre>\n\n<h3>Store Architecture Approach In MobX</h3>\n<p>MobX principal architecture includes parts and ideas such as services, store, view models and containers — some of which are explained below. </p>\n<ul>\n<li><strong>Service</strong><br />This is usually a function called from a container; they can be used to get data from APIs and be added to the store. </li>\n<li><strong>Store</strong><br />As the name implies, this is the central place of the state used by an application. Usually in MobX, these include the observables, variables, actions and computed properties. </li>\n<li><strong>Container</strong><br />This calls <code>service</code> and puts data from View Model to View Component as React <strong>props</strong> (should be marked with <code>@observer</code> decorator).</li>\n</ul>\n<h3>MobX In React And Native Applications</h3>\n<p>For learning purposes, in this tutorial, we are going to build a simple list app that will allow a user to add, view, and delete list items. We will be using MobX as a state manager in this application to add lists, update and delete them from the app state. However, it’s important to note that you already understand the basic concepts of JavaScript and React. </p>\n<p>Without further ado, let’s start! </p>\n<h3>Setting Up Your Environment</h3>\n<p>Now that we know how what MobX is and how it works, let me walk you through setting up your project. </p>\n<p>First, let’s create a project with the following, write the following code on your terminal to initialise a project:</p>\n<pre><code>npx create-react-app listapp</code></pre>\n\n<p>The above code will create a bare React application using the <a href=\"https://github.com/facebook/create-react-app\">create-react-app</a> package. Move into the project directory:</p>\n<pre><code>cd listapp</code></pre>\n\n<p>For this app, we will need three components: </p>\n<ul>\n<li><code>TitleInput</code><br />This will contain the title for our project and an input form for adding lists. </li>\n<li><code>List</code><br />This will be an input form that would allow a user to add a list. It will have an add button to add our list items. </li>\n<li><code>ListsDisplay</code><br />This component will display all of the user list items and also a delete button that’s automatically generated when a user adds a list item. </li>\n</ul>\n<p>We will use a Store.js to contain the app state and methods to modify it similar to Redux. Let’s outline what they will be used for. </p>\n<ul>\n<li><code>mobx</code><br />This is the state manager we will be using for this project.</li>\n<li><code>mobx-react</code><br />This is the official React bindings for MobX.</li>\n<li><code>bootstrap</code><br />We will be using bootstrap version 4.5 to style our project.</li>\n<li><code>uuid</code><br />This is used to automatically create keys for deleting lists.</li>\n</ul>\n<p>Having done that, let’s go ahead and install these packages. I will be installing them with an npm alternative done in yarn:</p>\n<pre><code>yarn add mobx mobx-react bootstrap@4.5.0 uuid</code></pre>\n\n<p>Once the packages are installed, we will start our app in development mode by running the code below in our terminal:</p>\n<pre><code>yarn start</code></pre>\n\n<h3>Setting Up Our App Store</h3>\n<p>Let’s create a store for our project. First, create a file in the root directory of our project called <strong>ListStore</strong>, this will be the central location of our app state. </p>\n<p>For this app, we will need to create a <strong>ListStore</strong> in order not to repeat ourselves when we use it in other app components.</p>\n<div>\n<pre><code>/<strong><em> src/Store.js </em></strong>/\n\nimport { observable, action, computed } from \"mobx\";\nimport { v4 } from \"uuid\";\n\nexport class List {\n  @observable value\n  @observable done\n\n  constructor (value) {\n    this.id = v4()\n    this.value = value\n  }\n}\n\nexport class ListStore {\n  @observable lists = []\n  @observable filter = \"\"\n  @action addList = (value) =&#62; {\n    this.lists.push(new List(value))\n  }\n\n  @action deleteList = (list) =&#62; {\n    this.lists = this.lists.filter(t =&#62; t !== list)\n  }\n  @computed get filteredLists () {\n    const matchCase = new RegExp(this.filter, \"i\")\n    return this.lists.filter(list=&#62; !this.filter || matchCase.test(list.value))\n  }\n}</code></pre><br /></div>\n\n<p>In the code above, we imported three functions from <code>mobx</code>.</p>\n<ul>\n<li><code>observable</code><br />This holds a variable which can be updated in the event of a change in state.</li>\n<li><code>action</code><br />Used to modify the application state.</li>\n<li><code>computed</code><br />Values that can be derived from the existing state or other computed values, it changes after a state gets modified. </li>\n</ul>\n<p>The class <code>List</code> has two object values which are <code>done</code> and <code>value</code> which will hold the initial state of the app and the modification in the case of changes. </p>\n<p>We want our new list to automatically create a key so that we can automatically get a delete button once a list is created, Here uuid is used to automatically create keys in our application.</p>\n<p>Next, we added an <code>addList</code> function that will add lists when clicked by using the <code>.push()</code> method to <em>push</em> the list in the array we already created in the <code>@observable lists</code> array.</p>\n<p>The <code>deleteList</code> function accepts <code>List</code> as a property which is supposed to be the item the user wants to remove. Then we set the value of <code>this.Lists</code> to a new array after we have removed the selected item.</p>\n<p>Both <code>addLists</code> and <code>deleteList</code> are actions because they modify the state of our app when changes are made. </p>\n<h3>Initializing The MobX Store</h3>\n<p>Next on our list is to import our store in our <strong>App.js</strong> and use it in our project. </p>\n<pre><code>import React from 'react';\nimport Navbar from \"./components/navbar\";\nimport ListDisplay from \"./components/ListDisplay\";\nimport {ListStore} from './ListStore';\nfunction App() {\n  const store = new ListStore()\n  return (\n    &#60;div&#62;\n      &#60;Navbar store={store}/&#62;\n      &#60;ListDisplay store={store}/&#62;\n    &#60;/div&#62;\n  );\n}\nexport default App;</code></pre>\n\n\n<p>Here we imported the <strong>TitleInput</strong> and <strong>ListDisplay</strong> components. Then we initialized the store in our <code>App.js</code> in order to be able to pass it as props to the <strong>TitleInput</strong> and <strong>ListDisplay</strong> components. </p>\n<p>Normally this will throw an error because we’ve not worked on the other components, so let’s do that. Let’s build out the <code>ListDisplay</code> component. </p>\n<h3><code>ListDisplay</code></h3>\n<p>This component displays all of our added lists and also automatically generates a delete button once a new list is added. </p>\n<pre><code>import React from 'react'\n\nimport List from \"./List\";\nimport { observer } from 'mobx-react';\n\nfunction ListDisplay(props) {\n  const { deleteList, filteredLists } = props.store\n\n  return (\n    &#60;div&#62;\n        &#60;div className=\"container\"&#62;\n          {filteredLists.map(list =&#62; (\n            &#60;List key={list.id} \n              list={list}  \n                deleteList={deleteList} \n            /&#62;\n          ))}\n        &#60;/div&#62;\n    &#60;/div&#62;\n  )\n}\nexport default observer(ListDisplay)</code></pre>\n\n<p>For this component, we created a function <code>ListDisplay</code> and made it an observer, we also destructure the <code>list</code> and <code>deletelist</code> functions from the store, by doing this, we made it easier to pass then as object props.</p>\n<p>Next, we map through <code>filteredLists</code> to return the lists, which we then use in building the individual list by passing the returned item as props to the <strong>List</strong> component.</p>\n<p>Once done, our component should look like this with lists added:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/30f7a23d-885d-4475-b2f3-5a27791b41ec/1-using-mobx-state-manager-react-native-applications.png\" /></p>\n<p>Next is to add a <strong>List</strong> and <strong>TitleInput</strong> components.</p>\n<h3>List Component</h3>\n<p>Just like our other components, our <code>List</code> component will export the list as an observer in order to help the store watch it for changes. </p>\n<pre><code>import React from 'react'\nimport { observer } from 'mobx-react'\nfunction List(props) {\n  return (\n    &#60;div className=\"card\"&#62;\n      &#60;div className=\"card-body\"&#62;\n          &#60;div className=\"d-flex justify-content-between \n          align-items-center\"&#62;\n            &#60;p className={`title ${props.list.done \n              ? \"text-secondary\" : \"\"}`}&#62;\n              {props.list.value}\n              &#60;/p&#62;\n            &#60;div&#62;\n            &#60;button \n              onClick={props.deleteList.bind(this, props.list)} \n                className=\"btn btn-danger \n                  font-weight-bold py-2 px-5 ml-2\"&#62;\n                Delete\n              &#60;/button&#62;\n            &#60;/div&#62;\n          &#60;/div&#62;\n      &#60;/div&#62;\n    &#60;/div&#62;\n  )\n}\nexport default observer(List)</code></pre>\n\n<p>I used the bootstrap to create cards in the first set of <code>divs</code> and also align the delete icon to move towards the right-hand side of the app. First, we created a card component to handle our <code>list</code> and then we created a button tag for the delete <code>button</code> that will accept two objects of this and pass a prop to the list, this will on click, will remove the selected list item from the lists in the page. </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eb4c5a62-77cf-4322-9255-f259bd1bbe7a/2-using-mobx-state-manager-react-native-applications.png\" /></p>\n<p>Next is to our <strong>TitleInput</strong> which will contain our input form for adding lists and the title for the project. </p>\n<h3><code>TitleInput</code></h3>\n<p>Similar to our other projects, we will be adding an <code>@observer</code> function so that the component will be able to accept props from the app Store. </p>\n<div>\n <pre><code>\nimport React, { useState } from 'react'\nimport { observer } from 'mobx-react'\nfunction Navbar(props) {\n  const [value, setValue] = useState(\"\")\n\n  const {addList} = props.store\n  const prepareAddList = (e) =&#62; {\n    e.preventDefault()\n    addList(value)\n    setValue(\"\")\n  }\n  return (\n    &#60;div className=\"container mt-3\"&#62;\n      &#60;h1 className=\"title\"&#62;List App&#60;/h1&#62;\n      &#60;form onSubmit={prepareAddList} className=\"form-group\"&#62;\n          &#60;div className=\"row ml-lg-2\"&#62;\n            &#60;input className=\"form-control-lg col-12 col-lg-9 \n              col-sm-12 mr-3 border border-secondary\" \n                value={value} type=\"text\" onChange={(e) =&#62; \n                  setValue(e.target.value)} placeholder=\"Enter list\"\n                  /&#62;\n                   &#60;button className=\"col-lg-2 col-5 col-sm-5 mt-2 \n                  mt-lg-0 mt-sm-2 btn btn-lg btn-success \n                font-weight-bold\"&#62;\n              Add to List\n            &#60;/button&#62;\n          &#60;/div&#62;\n      &#60;/form&#62;\n     &#60;/div&#62;\n  )\n}\nexport default observer(Navbar)</code></pre>\n</div>\n\n<p>First, we initialized an initial state. Using React Hooks, we added an initial state called <code>values</code> which we set to an empty string. We use this to hold the value of what is entered in the input field. To know more about React Hooks, you can check out <a href=\"https://www.smashingmagazine.com/2020/04/react-hooks-best-practices/\">this article</a> by David Abiodun.</p>\n<p>Then we called an object for adding lists to the store <code>addList</code> and passed it as props from the app store.</p>\n<p>Next we created a function <code>preparedAddList</code> to accept an event object for the input forms, we also added a button for adding the lists manually on click. </p>\n<p>Almost done, we need to restart our project server by running:</p>\n<pre><code>yarn start</code></pre>\n\n<p>And our <code>TitleInput</code> should look like this:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f7e6d224-98a2-4b96-9f67-8b33a38cf79c/4-using-mobx-state-manager-react-native-applications.png\" /></p>\n<p>We are now done with all of our app components, so let’s assemble it in our <code>App.js</code>. To do that, we need to import our components <code>titleInput</code> and <code>ListDisplay</code>. We also need to import our store from the Store component.</p>\n<p>In order for MobX to work in our App, we need to pass the MobX store as props in our App and individual components so that they get the properties and functions in the store. </p>\n<pre><code>import React from 'react';\nimport Navbar from \"./components/navbar\";\nimport ListDisplay from \"./components/ListDisplay\";\nimport {ListStore} from './ListStore';\nfunction App() {\n  const store = new ListStore()\n  return (\n    &#60;div&#62;\n      &#60;Navbar store={store}/&#62;\n      &#60;ListDisplay store={store}/&#62;\n    &#60;/div&#62;\n  );\n}\nexport default App;</code></pre>\n\n<p>Our app should look like this when completed:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6078e2a-0591-402c-9a5d-bd9445451038/3-using-mobx-state-manager-react-native-applications.png\" /></p>\n<h3>Conclusion</h3>\n<p>MobX is a great state manager especially for React-based applications, building our list app, we’ve learned the basic concepts of MobX, state, derivations, and actions. A working version of this app can be found <a href=\"https://codesandbox.io/s/iamfortunelistapp-tc1pn\">here</a>:</p>\n\n\n<p>You can take this further by using MobX in the next application you build that involves the management of state. I’d love to see what new things you come up with. You can read more on MobX and state management applications in the references below. </p>\n<h4>Resources And References</h4>\n<ul>\n<li>“<a href=\"https://medium.com/react-native-training/react-native-with-mobx-getting-started-ba7e18d8ff44\">React Native with MobX — Getting Started</a>,” Nader Dabit, Medium</li>\n<li>“<a href=\"https://mobx.js.org/intro/concepts.html\">Concepts &#38; Principles</a>” MobX (official documentation)</li>\n<li>“<a href=\"https://www.smashingmagazine.com/2020/04/react-hooks-best-practices/\">Best Practices With React Hooks</a>,” Adeneye David Abiodun, Smashing Magazine</li>\n</ul>\n","descriptionType":"html","publishedDate":"Wed, 26 Aug 2020 11:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/aee2bf87-676a-4b01-98a0-17dbc997f1e8/mobx-state-manager-react-native-applications.png","linkMd5":"b7e12972db0bd44e3f243eb7c65c92c5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn55@2020_5/2020/09/05/07-59-16-435_2fba90910bd050e7.webp","destWidth":1201,"destHeight":631,"sourceBytes":345729,"destBytes":73616,"author":"hello@smashingmagazine.com (Fortune Ikechi)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/aee2bf87-676a-4b01-98a0-17dbc997f1e8/mobx-state-manager-react-native-applications.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ef57e66c-2fd4-4a3e-beee-c270dc05040b/5-using-mobx-state-manager-react-native-applications.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn78@2020_3/2020/09/05/07-59-34-236_e634dc406eb3925d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/30f7a23d-885d-4475-b2f3-5a27791b41ec/1-using-mobx-state-manager-react-native-applications.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn11@2020_4/2020/09/05/07-59-27-958_6d051c22f9b07da6.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eb4c5a62-77cf-4322-9255-f259bd1bbe7a/2-using-mobx-state-manager-react-native-applications.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn30@2020_1/2020/09/05/07-59-32-168_97f816062f891c41.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f7e6d224-98a2-4b96-9f67-8b33a38cf79c/4-using-mobx-state-manager-react-native-applications.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn12@2020_5/2020/09/05/07-59-19-414_afafe9b86a981a9b.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6078e2a-0591-402c-9a5d-bd9445451038/3-using-mobx-state-manager-react-native-applications.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn96@2020_3/2020/09/05/07-59-21-744_ea744685185ebed3.webp"},"publishedOrCreatedDate":1599292755733},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"4 Ways To Creatively Use Icons In Your Mobile Apps","link":"https://smashingmagazine.com/2020/09/icons-mobile-apps/","description":"<p>There’s nothing novel about using icons within mobile apps. From the home screen icon to the navigation menu, they’re pretty much a standard part of the apps that designers build. </p>\n<p>They come with big benefits too: </p>\n<ul>\n<li>Minimized distractions, </li>\n<li>More attractive UIs, </li>\n<li>Empowerment of users to easily engage with the app,</li>\n<li>Elimination of language barriers, </li>\n<li>Improvement of brand recognizability.</li>\n</ul>\n<p>But are we using icons as best as we can or are there ways to improve the mobile UX even further with iconography? Today, I want to look at a number of ways you can creatively add icons or icon-like elements to your apps and bring more life (and engagement) to them in the process. </p>\n<h3>Making The Most Out Of Icons</h3>\n<p>Icons are super useful design elements for mobile interfaces. While we do have to be careful with icons (like making sure navigational icons are always paired with text as well as not using so many that the interface becomes like a puzzle to be solved), there are some additional use cases I want you to consider: </p>\n<h4>1. Show Hints Of Branded Icons Throughout The App</h4>\n<p>Users will first get a glimpse of an app’s branded logo icon from the app store. Once installed, this icon will become a persistent presence on the user’s smart device, which will foster greater awareness of the app. </p>\n<p>What I’ve noticed with many apps, though, is that the brand icon doesn’t often appear past that point. In some cases, it makes total sense. An app isn’t like a website that needs that steady logo anchor so users can always quickly get “Home”. But… </p>\n<p>I can’t help but feel like small branded elements throughout could add a unique touch to the experience. They wouldn’t detract from the experience. Instead, they’d show up in bite-sized chunks that add something extra to the experience. </p>\n<p>One example I really like is the <a href=\"https://www.cheapoair.com/mobile\">CheapOair</a> app. This is the logo that appears when a user first opens it. It’s the same one that appears at the top of the corresponding website:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/29016ec4-b16c-417b-af7f-4043844b0d6b/9-icons-mobile-apps.png\" /></p>\n<p>Now, if you were to look at the app store page for CheapOair or how it appears on a user’s home screen, you’d see that the full logo isn’t used. Instead, users see the luggage-shaped “O” icon: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e324f7d-e2bf-4f45-94d3-3a818b6681df/10-icons-mobile-apps.png\" /></p>\n<p>It’s unique. It’s memorable. And it works well in tiny spaces, like as the desktop favicon or on smaller mobile screens. </p>\n<p>Now, for an app like CheapOair that aggregates travel listings from different airlines, hotels, car rental agencies and so on, it’s only natural to expect some lag time as users move through the app. And while the designers could’ve used a more traditional loading icon (like the spinning wheel or progress bar), it uses its branded icon instead:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/573bf166-1758-4687-ace0-464d1c58aad3/1-icons-mobile-apps.png\" /></p>\n<p>The stamps are in the shape of a moon. It’s not officially part of Hotels.com’s branding, but it’s a very recognizable icon for its rewards members.</p>\n<p>Because of this recognizability, its placement within hotel search results pages is helpful as it allows users to quickly scroll through and see which hotels they can earn another stamp with: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3070eba6-3daa-46c5-bdda-6a2c8b4f4b22/12-icons-mobile-apps.png\" /></p>\n<p>There are many different factors that users consider when booking a hotel room, including price, distance, average user rating and so on. But rather than bog down the main listing with this extra detail that’s only relevant to rewards members, the use of the icon and its placement in the bottom-left corner of the image for eligible hotels is a good choice. </p>\n<p>So, even if you don’t feel like using the actual brand logo within the app (or find no reason to), this example proves that there are other ways to use brand-adjacent iconography to improve the experience. </p>\n<h4>2. Use Icons To Encourage More Gestures And Actions</h4>\n<p>One of the keys to retaining more app users is to give them a reason to regularly engage with it. And if your users can’t remember which gestures to use when they’re inside the app or they find the act of interacting with it to be boring, that may be enough reason for them to go looking for apps that do a better job of capturing their attention. </p>\n<p>Even if your users don’t have any problem with how the engaging elements are presented to them, what happens if someone they know suggests an app that they like better? And they see how much more they like the presentation of different elements? </p>\n<p>Either way, you don’t want to give them a reason to lose interest or look for greener pastures. And I think that icons added to gestures and clickable targets can help with this. </p>\n<p>This, for instance, is the <a href=\"https://www.boomeranggmail.com/\">Boomerang for Gmail</a> app: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dc5c2d25-9cc1-481e-8894-447493084283/11-icons-mobile-apps.png\" /></p>\n<p>I needed a way to “pause” my Gmail inbox during the workday (to prevent distractions) as well as in my off hours (to keep myself from working). While there are a number of distraction-blocking tools available, I loved the simplicity and elegance of this one. I especially appreciated this sorting gesture. </p>\n<p>There’s no need to open the message and use the options bar to select the right option. When messages appear in my inbox, it takes no more than a second to swipe left and take action because of how clearly labeled they are. And because I use this app every day, my finger automatically knows which icon to flick the message to: archive, mark as read, Boomerang (for another day/time), move or delete. </p>\n<p>Again, if you can make engaging with an app go more smoothly — which, in this case, I attribute to the complex gesture simplified by recognizable icons — you’ll find users are more likely to use it. </p>\n<p>Your app doesn’t need to have swiping gestures in order to play around with engaging icon design. <a href=\"https://www.duolingo.com/mobile\">Duolingo</a>, for example, has brought its language modules to life thanks to these animated icons: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/694d5e2a-1f56-484b-9f5d-1ecad2210e4d/3-icons-mobile-apps.png\" /></p>\n<p>Have you ever read something online that was so good (or maybe even so bad) that you <em>had</em> to know who wrote it? For the most part, online publications just put a byline at the top and a short bio under the post. BuzzFeed, however, gives its author more than just name recognition. It pairs their byline with an iconized headshot. </p>\n<p>This is a great touch. It tells readers from the get-go that they have real writers behind this piece and lets them connect to the writer on a more personal level. </p>\n<p>It’s also just too easy for this detail to get lost on a page because of the title, subtitle, read-minutes and other metadata that publications put at the top. I’d say in terms of making an article more attractive and welcoming, even this small of an icon helps set the stage for an enjoyable reading experience. </p>\n<p>Food service apps could probably benefit from this as well. Only, in this case, it would be food items and products that become iconized. Like what the <a href=\"https://www.sonicdrivein.com/app\">SONIC Drive-in</a> app does: </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a29d0e0d-eb5b-4728-8ac0-5724c7d47009/7-icons-mobile-apps.png\" /></p>\n<p>There was <a href=\"https://www.dailymail.co.uk/femail/food/article-4610156/Why-posh-restaurant-menus-never-pictures.html\">a study done by Durham University</a> on the connection between images and satisfaction with a food order. The study looked at a number of variables, but this one is particularly relevant to what we’re looking at in the SONIC app: </p>\n<blockquote>“Our research revealed that if a restaurant wants to make use of imagery and visual prompts on their menu, this needs to be combined with commonly used and ‘accurate’ food names to <strong>increase marketing power</strong>. While it may seem a basic approach, photos can act as <strong>a positive reinforcement</strong> for customers who have made a visual connection that reflects the name of that dish.”</blockquote>\n\n<p>This is exactly what SONIC does in the above example. Rather than show one of their cups filled with the soft drink or show no photo at all, it displays the brand logos as icons beside each. </p>\n<p>These brands are so deeply ingrained in the consumer consciousness that it will make the ordering process go much easier. It should also lead to greater satisfaction overall as there’s no surprise about what they’re getting. </p>\n<p>Then, there’s the use case for marketplaces, like <a href=\"https://www.rakuten.com/mobile.htm\">Rakuten</a>:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/96716a79-6f45-440e-9bc0-75fb2ce315fb/5-icons-mobile-apps.png\" /></p>\n<p>This ebates app helps users make money off of their online purchases. </p>\n<p>Now imagine if this app were just a text-only list of deals. Sure, it would still be usable and useful… but users would likely resort to the search bar to find deals as opposed to actually reading through what’s available. And if your users can only find what they want through search, there’s something wrong — especially if you’re presenting them with the hottest offers or products of the day. </p>\n<p>I looked around and couldn’t find any ecommerce marketplace that does something like this — pairing a product or deal with a brand icon — which I find surprising. While I realize users can sort through listings by brand name, wouldn’t an iconized brand logo help users more easily locate items they want to buy from search results? </p>\n<p>I guess the big argument against this would be for marketplaces pushing their own products (like Amazon does). By displaying a brand icon either in search results or on a product’s page, it might deter users from buying the item if it’s from a lesser-known and unrecognizable brand. </p>\n<p>For concepts like Rakuten, however, it totally works and I’d urge you to use it when you can.</p>\n<h3>Wrapping Up</h3>\n<p>As you can tell by these examples, you’re not going to completely revamp the look and feel of your mobile app with icons. Instead, by adding very subtle touches here and there — that users are bound to take notice of — you’ll impress them with your attention to detail while making the overall experience more enjoyable. This, in turn, can lead to greater levels of engagement and higher rates of user retention.</p>\n<h4>Further Reading on SmashingMag:</h4>\n\n<ul>\n<li><a href=\"https://www.smashingmagazine.com/2020/04/responsive-web-desktop-development-flutter/\">Responsive Web And Desktop Development With Flutter</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/03/visual-design-language-building-blocks/\">Visual Design Language: The Building Blocks Of Design</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/02/design-mobile-apps-one-hand-usage/\">How To Design Mobile Apps For One-Hand Usage</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/12/things-stop-doing-mobile-app-design/\">5 Things To Stop Doing In Mobile App Design</a></li>\n</ul>\n\n\n\n\n","descriptionType":"html","publishedDate":"Thu, 03 Sep 2020 13:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a6db935e-12ab-448f-aca4-98213cdbaee1/icons-mobile-apps.png","linkMd5":"bfb80d7e10b5ce2cc36e767b323e14aa","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn20@2020_2/2020/09/05/07-59-16-374_6be1aca13a2a7e64.webp","destWidth":1201,"destHeight":631,"sourceBytes":260957,"destBytes":53684,"author":"hello@smashingmagazine.com (Suzanne Scacca)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a6db935e-12ab-448f-aca4-98213cdbaee1/icons-mobile-apps.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/29016ec4-b16c-417b-af7f-4043844b0d6b/9-icons-mobile-apps.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn9@2020_4/2020/09/05/07-59-32-806_a1d6ceb289f52276.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e324f7d-e2bf-4f45-94d3-3a818b6681df/10-icons-mobile-apps.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn13@2020_4/2020/09/05/07-59-32-136_479fcf299d0fa700.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/573bf166-1758-4687-ace0-464d1c58aad3/1-icons-mobile-apps.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn75@2020_6/2020/09/05/07-59-20-542_3023736225b20093.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3070eba6-3daa-46c5-bdda-6a2c8b4f4b22/12-icons-mobile-apps.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn71@2020_3/2020/09/05/07-59-27-147_d18850e16aecda7d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dc5c2d25-9cc1-481e-8894-447493084283/11-icons-mobile-apps.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn32@2020_1/2020/09/05/07-59-28-708_a7b07988d953bb3a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/694d5e2a-1f56-484b-9f5d-1ecad2210e4d/3-icons-mobile-apps.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn58@2020_6/2020/09/05/07-59-29-646_4ea639c4c229dbfe.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a29d0e0d-eb5b-4728-8ac0-5724c7d47009/7-icons-mobile-apps.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn79@2020_5/2020/09/05/07-59-37-215_a48c5d8de5a9e100.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/96716a79-6f45-440e-9bc0-75fb2ce315fb/5-icons-mobile-apps.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn23@2020_6/2020/09/05/07-59-31-720_4680e162505dfe3a.webp"},"publishedOrCreatedDate":1599292755725},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Forms And Validation In Ionic React","link":"https://smashingmagazine.com/2020/08/forms-validation-ionic-react/","description":"<p>Ionic Framework is a UI Toolkit for building cross-platform mobile applications using HTML, CSS, and JavaScript. The release of Ionic 5 in early 2020 came with official support for React, enabling React developers to easily build mobile applications using their favorite tools. There isn’t much support for working with forms, however, and many of the existing libraries available for building forms in the React ecosystem do not play nicely with Ionic Framework’s components.</p>\n<p>You will learn how to build forms using Ionic React’s UI input components in this tutorial. You will also learn how to use a library to help with detecting form input changes and responding to validation rules. Finally, you will learn to make your forms accessible to screen readers by adding helpful text to your inputs’ ARIA attributes.</p>\n<h3>Ionic’s Form Components</h3>\n<p>Forms are an important part of most web and mobile applications today. Whether you are enabling access to restricted parts of your application through user registration and login forms or collecting feedback from your users, you have to — at some point in your application’s lifecycle — build a form.</p>\n<p>Ionic provides prebuilt components for working with forms — some of which include <code>IonItem</code>, <code>IonLabel</code>, <code>IonInput</code>, <code>IonCheckbox</code> and <code>IonRadio</code>. We can combine these components to build standard looking forms without adding any styling ourselves.</p>\n<p>For example, the following code:</p>\n<pre><code>&#60;form className=\"ion-padding\"&#62;\n  &#60;IonItem&#62;\n    &#60;IonLabel position=\"floating\"&#62;Username&#60;/IonLabel&#62;\n    &#60;IonInput /&#62;\n  &#60;/IonItem&#62;\n  &#60;IonItem&#62;\n    &#60;IonLabel position=\"floating\"&#62;Password&#60;/IonLabel&#62;\n    &#60;IonInput type=\"password\" /&#62;\n  &#60;/IonItem&#62;\n  &#60;IonItem lines=\"none\"&#62;\n    &#60;IonLabel&#62;Remember me&#60;/IonLabel&#62;\n    &#60;IonCheckbox defaultChecked={true} slot=\"start\" /&#62;\n  &#60;/IonItem&#62;\n  &#60;IonButton className=\"ion-margin-top\" type=\"submit\" expand=\"block\"&#62;\n    Login\n  &#60;/IonButton&#62;\n&#60;/form&#62;</code></pre>\n\n<p>Will give us a login form which looks like this:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41f3f797-3f25-46ef-b3f6-60864958917d/01-standard-login-form-ios.png\" /></p>\n<p>Out of the box, Ionic's form components look great on iOS or Android, but they can be a bit unwieldy if you are working with React. As with most tools in the React ecosystem, you have to decide how you want to go about building your forms when it comes to functionality and accessibility — both equally as important as design.</p>\n<p>While there are already so many React form helpers available to choose from, most of them do not work with Ionic's form components. I suspect the main reason for this is that the event fired when a field value changes in Ionic is <code>onIonChange</code>, whereas most of the existing form libraries listen for <code>onChange</code>.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4d760812-8ca0-4d65-bd06-2199800eb38b/fig-02-change-event-triggered.png\" /></p>\n<h3>React Hook Form: Small And Fast React Forms Library</h3>\n<p>Thankfully, it isn't all doom and gloom. I recently came across React Hook Form (RHF), a library for working with forms in React projects. It provides support for controlled or uncontrolled components and input validation, and the API is hooks-based so it only works with functional components.</p>\n<p>The most appealing feature for Ionic React developers — in my opinion — is the wrapper <code>&#60;Controller /&#62;</code> component it provides for working with controlled components. The component has an <code>onChangeName</code> prop which can be used to specify the change event name for whatever component instance you pass to it. I’ll show you how this makes working with forms in Ionic really easy in the following sections.</p>\n<h3>Building A Signup Form</h3>\n<p>Let's see how RHF helps us with form functionality as we build a registration form in Ionic. If you are running the latest version of the Ionic CLI (run <code>npm i -g @ionic/cli</code> to confirm), start a new Ionic app with React by running the following command:</p>\n<pre><code>ionic start myApp blank --type=react</code></pre> \n\n<p>I used a blank template here. You should be able to rewrite your existing forms to use the React Hook Form library with ease, especially if your components are written as Functional Components. </p>\n<p><strong>Note:</strong> <em>You should remove the <code>ExploreContainer</code> component and its import in Home.tsx before proceeding with this tutorial.</em></p>\n<p>To get started with your form, install the React Hook Form package by running the following command in your project’s root directory:</p>\n<pre><code>yarn add react-hook-form</code></pre>\n\n<p>This will make the React Hook Form library available in your project. Let’s create a form input field using the library. Open the <strong>Home.tsx</strong> file and replace its contents with the following:</p>\n<div>\n<pre><code>import { IonContent, IonPage, IonText, IonItem, IonLabel, IonInput, IonButton } from \"@ionic/react\";\nimport React from \"react\";\nimport \"./Home.css\";\nimport { Controller, useForm } from 'react-hook-form';\n\nconst Home: React.FC = () =&#62; {\n  const { control, handleSubmit } = useForm();\n\n  const registerUser = (data) =&#62; {\n    console.log('creating a new user account with: ', data);\n  }\n\n  return (\n    &#60;IonPage&#62;\n      &#60;IonContent className=\"ion-padding\"&#62;\n        &#60;IonText color=\"muted\"&#62;\n          &#60;h2&#62;Create Account&#60;/h2&#62;\n        &#60;/IonText&#62;\n        &#60;form onSubmit={handleSubmit(registerUser)}&#62;\n          &#60;IonItem&#62;\n            &#60;IonLabel position=\"floating\"&#62;Email&#60;/IonLabel&#62;\n            &#60;Controller\n              as={&#60;IonInput type=\"email\" /&#62;}\n              name=\"email\"\n              control={control}\n              onChangeName=\"onIonChange\"\n            /&#62;\n          &#60;/IonItem&#62;\n          &#60;IonButton expand=\"block\" type=\"submit\" className=\"ion-margin-top\"&#62;\n            Register\n          &#60;/IonButton&#62;\n        &#60;/form&#62;\n      &#60;/IonContent&#62;\n    &#60;/IonPage&#62;\n  );\n};\nexport default Home;</code></pre>\n</div>\n\n<p>This gives you a form with a single field to collect an email address. Let’s break down the important parts (highlighted in the code block).</p>\n<p>First, we destructure the return value of the <code>useForm()</code> hook from RHF. <code>handleSubmit</code> passes your input’s values to the handler function you specify when the form passes validation. <code>control</code> is an object containing methods used for registering controlled components into RHF.</p>\n<p>Next, we have a standard form item block, but unlike the example for the login form, we pass the <code>IonInput</code> component to RHF’s <code>&#60;Controller /&#62;</code> component, register the change event by setting <code>&#60;Controller /&#62;</code>'s <code>onChangeName</code> prop to Ionic’s change event name, and set the <code>control</code> prop to the control object from invoking <code>useForm()</code>.</p>\n<p>This is good so far, but you might find yourself repeating nearly the same code over and over again. You could try to make a reusable <code>Input</code> component that builds an input field with given properties.</p>\n<p>Create a file in the <strong>src/components</strong> directory named <strong>Input.tsx</strong> and add the following code to the file:</p>\n<div>\n<pre><code>import React, { FC } from \"react\";\nimport { IonItem, IonLabel, IonInput } from \"@ionic/react\";\nimport { Controller, Control } from \"react-hook-form\";\n\nexport interface InputProps {\n  name: string;\n  control?: Control;\n  label?: string;\n  component?: JSX.Element;\n}\n\nconst Input: FC&#60;InputProps&#62; = ({\n  name,\n  control,\n  component,\n  label,\n}) =&#62; {\n  return (\n    &#60;&#62;\n      &#60;IonItem&#62;\n        {label &#38;&#38; (\n          &#60;IonLabel position=\"floating\"&#62;{label}&#60;/IonLabel&#62;\n        )}\n        &#60;Controller\n          as={component ?? &#60;IonInput /&#62;}\n          name={name}\n          control={control}\n          onChangeName=\"onIonChange\"\n        /&#62;\n      &#60;/IonItem&#62;\n    &#60;/&#62;\n  );\n};\n\nexport default Input;</code></pre>\n</div>\n\n<p>This component receives a <code>name</code> prop and optional <code>control</code>, <code>component</code> and <code>label</code> props and renders an input field using the Ionic form components introduced earlier. This reduces the amount of code you have to write when creating form input fields. You can finish the rest of your form using this component. Edit the Home.tsx file with the following changes:</p>\n<div>\n<pre><code>import { IonContent, IonPage, IonText, IonInput, IonButton, IonCheckbox, IonItem, IonLabel } from \"@ionic/react\";\nimport React from \"react\";\nimport \"./Home.css\";\nimport { useForm } from \"react-hook-form\";\nimport Input, { InputProps } from \"../components/Input\";\n\nconst Home: React.FC = () =&#62; {\n  const { control, handleSubmit } = useForm();\n\n  const formFields: InputProps[] = [\n    {\n      name: \"email\",\n      component: &#60;IonInput type=\"email\" /&#62;,\n      label: \"Email\",\n    },\n    {\n      name: \"fullName\",\n      label: \"Full Name\",\n    },\n    {\n      name: \"password\",\n      component: &#60;IonInput type=\"password\" clearOnEdit={false} /&#62;,\n      label: \"Password\",\n    },\n  ];\n\n  const registerUser = (data) =&#62; {\n    console.log(\"creating a new user account with: \", data);\n  };\n\n  return (\n    &#60;IonPage&#62;\n      &#60;IonContent&#62;\n        &#60;div className=\"ion-padding\"&#62;\n          &#60;IonText color=\"muted\"&#62;\n            &#60;h2&#62;Create Account&#60;/h2&#62;\n          &#60;/IonText&#62;\n          &#60;form onSubmit={handleSubmit(registerUser)}&#62;\n            {formFields.map((field, index) =&#62; (\n              &#60;Input {...field} control={control} key={index} /&#62;\n            ))}\n            &#60;IonItem&#62;\n              &#60;IonLabel&#62;I agree to the terms of service&#60;/IonLabel&#62;\n              &#60;IonCheckbox slot=\"start\" /&#62;\n            &#60;/IonItem&#62;\n            &#60;IonButton expand=\"block\" type=\"submit\" className=\"ion-margin-top\"&#62;\n              Register\n            &#60;/IonButton&#62;\n          &#60;/form&#62;\n        &#60;/div&#62;\n      &#60;/IonContent&#62;\n    &#60;/IonPage&#62;\n  );\n};\n\nexport default Home;</code></pre>\n</div>\n\n<p>With your setup so far, you have an array of your form’s input fields (<code>name</code> is the only required property), with each field rendered using the <code>Input</code> component from earlier. You can take this even further and have your field data in a JSON file, keeping the code within your components with forms clean. At this point, your app (running at <a href=\"http://localhost:8100\">http://localhost:8100</a> with the <code>ionic serve</code> command) should look like this:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f0b47e63-0f94-4bec-bbd2-1ca2af58294d/03-registration-form-ios.png\" /></p>\n<h3>How About Field Validation?</h3>\n<p>You might have noticed that our form’s input fields do not have any validation logic yet. If this were an app intended for real-world use, that could lead to many undesirable effects unless your API is set up to validate incoming data. By the way, your API must always validate incoming data.</p>\n<p>RHF comes with validation which aligns with the HTML standard for form validation built-in. This works great for simple validation like making a field required or setting minimum and maximum field lengths. If you want to use <a href=\"https://haacked.com/archive/2007/08/21/i-knew-how-to-validate-an-email-address-until-i.aspx/\">complex validation logic</a>, I would recommend using <a href=\"https://github.com/jquense/yup\">Yup</a>. While you can use any object schema validation library, RHF supports Yup out of the box.</p>\n<p>Run the following command to install the library (and typings):</p>\n<pre><code>yarn add yup @types/yup</code></pre>\n\n<p>Next, add this to your component’s imports:</p>\n<pre><code>import { object, string } from 'yup';\n\nconst Home: React.FC = () =&#62; { ... }</code></pre>\n\n<p>Then, add the following code at the top of your component:</p>\n<pre><code>const Home: React.FC = () =&#62; {\n  const validationSchema = object().shape({\n    email: string().required().email(),\n    fullName: string().required().min(5).max(32),\n    password: string().required().min(8),\n  });\n  // ...\n}</code></pre>\n\n<p>Here, we’ve created an object schema and added validation rules to each property using <code>yup</code>. The names in the object must match with names in your form’s input tags otherwise your rules won’t be triggered.</p>\n<p>Finally, update your <code>useForm()</code> hook to use the schema we’ve defined by setting the <code>validationSchema</code> property like this:</p>\n<pre><code>const { control, handleSubmit } = useForm({\n  validationSchema,\n});</code></pre>\n\n<p>Now, when you click on the submit button the <code>handleSubmit</code> handler isn’t invoked and the form data isn’t submitted. While this is exactly what we wanted, it looks like there is no way for the user to know what’s happening. Let’s fix this by showing text hints when a field isn’t filled correctly.</p>\n<p>First, update the <code>Input</code> component to look like the following:</p>\n<div>\n<pre><code>import React, { FC } from \"react\";\nimport { IonItem, IonLabel, IonInput, IonText } from \"@ionic/react\";\nimport { Controller, Control, NestDataObject, FieldError } from \"react-hook-form\";\n\nexport interface InputProps {\n  name: string;\n  control?: Control;\n  label?: string;\n  component?: JSX.Element;\n  errors?: NestDataObject&#60;Record&#60;string, any&#62;, FieldError&#62;;\n}\n\nconst Input: FC&#60;InputProps&#62; = ({\n  name,\n  control,\n  component,\n  label,\n  errors,\n}) =&#62; {\n  return (\n    &#60;&#62;\n      &#60;IonItem&#62;\n        {label &#38;&#38; &#60;IonLabel position=\"floating\"&#62;{label}&#60;/IonLabel&#62;}\n        &#60;Controller\n          as={component ?? &#60;IonInput /&#62;}\n          name={name}\n          control={control}\n          onChangeName=\"onIonChange\"\n        /&#62;\n      &#60;/IonItem&#62;\n      {errors &#38;&#38; errors[name] &#38;&#38; (\n        &#60;IonText color=\"danger\" className=\"ion-padding-start\"&#62;\n          &#60;small&#62;{errors[name].message}&#60;/small&#62;\n        &#60;/IonText&#62;\n      )}\n    &#60;/&#62;\n  );\n};\n\nexport default Input;</code></pre>\n</div>\n\n<p>Here, we’ve updated our component to receive an extra optional property which is the error object from RHF, and we display an error message in the returned input field whenever there is an error. One last thing, add the errors object to your destructured object and update the component in your loop:</p>\n<div>\n<pre><code>const { control, handleSubmit, errors } = useForm({\n  validationSchema,\n});</code></pre>\n</div>\n\n<div>\n<pre><code>  {formFields.map((field, index) =&#62; (\n    &#60;Input {...field} control={control} key={index} errors={errors} /&#62;\n  ))}</code></pre>\n</div>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a325ed62-f12e-43f0-886d-d35899c96f9b/04-registration-form-with-error-messages-ios.png\" /></p>\n<p>Your forms now provide visual cues when a user isn’t doing something right. Yup allows you to change the error message. You can do this by passing a string to the validation method you’re using. For email, as an example, you can do the following:</p>\n<pre><code>{\n  email: string()\n    .email('Please provide a valid email address')\n    .required('This is a required field'),\n}</code></pre>\n\n\n\n<h3>Improving Accessibility</h3>\n<p>Ionic’s components are usually wrappers over the corresponding native element, meaning that they accept most — if not all — of that element’s existing attributes. You can improve your input fields and make them more accessible to visually impaired users by setting ARIA attributes with relevant text.</p>\n<p>To continue with our example registration form, open the Input.tsx file and make the following changes:</p>\n<div>\n<pre><code>import React, { FC } from \"react\";\nimport { IonItem, IonLabel, IonInput, IonText } from \"@ionic/react\";\nimport { Controller, Control, NestDataObject, FieldError } from \"react-hook-form\";\n\nexport interface InputProps {\n  name: string;\n  control?: Control;\n  label?: string;\n  component?: JSX.Element;\n  errors?: NestDataObject&#60;Record&#60;string, any&#62;, FieldError&#62;;\n}\n\nconst Input: FC&#60;InputProps&#62; = ({\n  name,\n  control,\n  component,\n  label,\n  errors,\n}) =&#62; {\n  return (\n    &#60;&#62;\n      &#60;IonItem&#62;\n        {label &#38;&#38; &#60;IonLabel position=\"floating\"&#62;{label}&#60;/IonLabel&#62;}\n        &#60;Controller\n          as={\n            component ?? (\n              &#60;IonInput\n                aria-invalid={errors &#38;&#38; errors[name] ? \"true\" : \"false\"}\n                aria-describedby={<code>${name}Error</code>}\n              /&#62;\n            )\n          }\n          name={name}\n          control={control}\n          onChangeName=\"onIonChange\"\n        /&#62;\n      &#60;/IonItem&#62;\n      {errors &#38;&#38; errors[name] &#38;&#38; (\n        &#60;IonText color=\"danger\" className=\"ion-padding-start\"&#62;\n          &#60;small&#62;\n            &#60;span role=\"alert\" id={<code>${name}Error</code>}&#62;\n              {errors[name].message}\n            &#60;/span&#62;\n          &#60;/small&#62;\n        &#60;/IonText&#62;\n      )}\n    &#60;/&#62;\n  );\n};\n\nexport default Input;</code></pre>\n</div>\n\n<p>The default <code>IonInput</code> component we’re passing to <code>Controller</code> now includes an <code>aria-invalid</code> attribute to indicate whether the field has an error, and an <code>aria-describedby</code> attribute to point to the corresponding error message. The error message is now wrapped with a <code>span</code> having an ARIA role set to “error”. Now, when your field has an error, a screen reader will highlight that field and read out the error message.</p>\n<ul>\n<li>You’ll find the GitHub repo over <a href=\"https://github.com/smashingmagazine/ionic-react-forms\">here</a>.</li>\n</ul>\n<h3>Conclusion</h3>\n<p>Congratulations! You have learned how to build and validate forms when building cross-platform apps using Ionic. You’ve also seen how easy it is to make your input fields accessible to users with a visual impairment. Hopefully, this tutorial provides a solid platform that you can use when building forms in your Ionic React apps. There are other components for building forms (such as select and radios) that we didn’t explore in this tutorial, but you can find and read more about them in the official docs.</p>\n<h4>References</h4>\n<ul>\n<li><a href=\"https://ionicframework.com/docs/\">Ionic Framework Docs</a></li>\n<li><a href=\"https://react-hook-form.com/\">React Hook Form</a></li>\n<li><a href=\"https://github.com/jquense/yup\">Yup Docs</a></li>\n<li><a href=\"https://haacked.com/archive/2007/08/21/i-knew-how-to-validate-an-email-address-until-i.aspx/\">Phil Haack on Validating Email Addresses</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA\">Accessibility on MDN Web Docs</a></li>\n</ul>\n","descriptionType":"html","publishedDate":"Thu, 20 Aug 2020 11:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/904d0dc8-ba87-4646-892d-d7f04c9c27b0/forms-validation-ionic-react.png","linkMd5":"fa41336deda35415b1959d255ba9a56c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn49@2020_4/2020/09/05/07-59-16-344_b296d76024a98e86.webp","destWidth":1201,"destHeight":631,"sourceBytes":272927,"destBytes":54294,"author":"hello@smashingmagazine.com (Jerry Navi)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/904d0dc8-ba87-4646-892d-d7f04c9c27b0/forms-validation-ionic-react.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41f3f797-3f25-46ef-b3f6-60864958917d/01-standard-login-form-ios.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn86@2020_3/2020/09/05/07-59-33-440_e690978bdeb2a9a7.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4d760812-8ca0-4d65-bd06-2199800eb38b/fig-02-change-event-triggered.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn10@2020_1/2020/09/05/07-59-25-790_1f186ec487d41a30.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f0b47e63-0f94-4bec-bbd2-1ca2af58294d/03-registration-form-ios.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn55@2020_1/2020/09/05/07-59-34-545_ddb84638215acfc7.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a325ed62-f12e-43f0-886d-d35899c96f9b/04-registration-form-with-error-messages-ios.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn71@2020_2/2020/09/05/07-59-22-311_b1ae578e6c35a2b1.webp"},"publishedOrCreatedDate":1599292755735},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Making Memories To Last (August 2020 Wallpapers Edition)","link":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","description":"<p>Everybody loves a beautiful wallpaper to freshen up their desktops and home screens, right? To cater for new and unique artworks on a regular basis, we started our <a href=\"https://www.smashingmagazine.com/category/wallpapers\">monthly wallpapers challenge</a> more than nine years ago, and from the early days on to today, artists and designers from all across the globe have accepted the challenge and submitted their designs to it. It wasn’t any different this time around, of course.</p>\n\n<p>In this post, you’ll find their wallpapers for <strong>August 2020</strong>. All of them are available in versions with and without a calendar — to help you count down the days to a big deadline (or a few days off, maybe?) or continue to use your favorite even after the month has ended. You decide. A big thank-you to everyone who shared their designs with us — we sincerely appreciate it!</p>\n\n<p>As a little bonus goodie, we also added some “oldies” at the end of this post, timeless wallpaper treasures that we rediscovered way down in our archives and that are just too good to gather dust. Now there’s only one question left to be answered: Which one will accompany you through the new month?</p>\n\n<ul>\n<li>All <strong>images can be clicked on</strong> and lead to the preview of the wallpaper,</li>\n<li>We respect and carefully consider the ideas and motivation behind each and every artist’s work. This is why we give all artists the <strong>full freedom to explore their creativity</strong> and express emotions and experience through their works. This is also why the themes of the wallpapers weren’t anyhow influenced by us but rather designed from scratch by the artists themselves.</li>\n</ul>\n\n<div>\n<h4>Submit your wallpaper</h4>\n<p>Did you know that <em>you</em> could get featured in one of our upcoming wallpapers posts, too? We are always <strong>looking for creative talent</strong>, so if you have an idea for a wallpaper for September, please don’t hesitate to submit it. We’d love to see what you’ll come up with. <a href=\"https://www.smashingmagazine.com/desktop-wallpaper-calendars-join-in/\">Join in! →</a></p>\n</div>\n\n\n\n<h3>We’re All The Same</h3>\n<p>Designed by <a href=\"https://www.librafire.com/\">LibraFire</a> from Serbia.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/aug-20-were-all-the-same-full.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/552aea44-8886-49c7-b14a-e08f11e7ae07/aug-20-were-all-the-same-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/aug-20-were-all-the-same-preview.png\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/cal/aug-20-were-all-the-same-cal-2560x1440.png\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/were-all-the-same/nocal/aug-20-were-all-the-same-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<h3>Women’s Equality Day</h3>\n<p>“Women’s Equality Day is a US celebration of the prohibition denying voting rights on the basis of sex. It’s a celebration of those trailblazers and suffragists who faught for their right to vote. So this 26th of August let’s honor them for the vitally important change they brought about back in 1920.” — Designed by <a href=\"https://www.everincreasingcircles.com/content-marketing-agency-london/\">Ever Increasing Circles</a> from the United Kingdom.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/aug-20-womens-equality-day-full.jpg\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f82dc671-22cd-4f90-84f0-e02b2f23b75d/aug-20-womens-equality-day-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/aug-20-womens-equality-day-preview.jpg\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-320x480.jpg\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-640x480.jpg\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-800x480.jpg\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-800x600.jpg\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1152x864.jpg\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1366x768.jpg\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/cal/aug-20-womens-equality-day-cal-2560x1440.jpg\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-320x480.jpg\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-640x480.jpg\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-800x480.jpg\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-800x600.jpg\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1152x864.jpg\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1366x768.jpg\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/womens-equality-day/nocal/aug-20-womens-equality-day-nocal-2560x1440.jpg\">2560x1440</a></li>\n</ul>\n\n<h3>August Days</h3>\n<p>“August is the month when we get sunburnt doing agricultural works, hike across the wild and untamed forests, and explore the depths of sun-kissed oceans and seas. The wind is mild and warm, the nights are filled with chatter, smiles, and music. August days are scattered around everywhere, and we try to catch and use up each and every one of them until summer gets lost in the face of murky autumn. In August, we chase laughs, sunsets, and memories.” — Designed by <a href=\"https://www.popwebdesign.net/portfolio-popart-studio-eng.html?id=illustrations\">PopArt Studio</a> from Serbia.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/aug-20-august-days-full.jpg\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/912b0587-26fb-45e9-95cc-98523cc83822/aug-20-august-days-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/aug-20-august-days-preview.jpg\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-320x480.jpg\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-640x480.jpg\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-800x480.jpg\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-800x600.jpg\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1152x864.jpg\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1366x768.jpg\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/cal/aug-20-august-days-cal-2560x1440.jpg\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-320x480.jpg\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-640x480.jpg\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-800x480.jpg\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-800x600.jpg\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1152x864.jpg\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1366x768.jpg\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-days/nocal/aug-20-august-days-nocal-2560x1440.jpg\">2560x1440</a></li>\n</ul>\n\n<h3>Live In The Moment</h3>\n<p>“My dog Sami inspired me for this one. He lives in the moment and enjoys every second with a big smile on his face. I wish we could learn to enjoy life like he does! Happy August everyone!” — Designed by <a href=\"http://westievibes.com/\">Westie Vibes</a> from Portugal.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/live-in-the-moment/aug-20-live-in-the-moment-full.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94ef26e5-f09e-4f91-97a9-3b6ef7e23f7d/aug-20-live-in-the-moment-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/live-in-the-moment/aug-20-live-in-the-moment-preview.png\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/live-in-the-moment/cal/aug-20-live-in-the-moment-cal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/live-in-the-moment/cal/aug-20-live-in-the-moment-cal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/live-in-the-moment/cal/aug-20-live-in-the-moment-cal-1080x1920.png\">1080x1920</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/live-in-the-moment/cal/aug-20-live-in-the-moment-cal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/live-in-the-moment/cal/aug-20-live-in-the-moment-cal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/live-in-the-moment/cal/aug-20-live-in-the-moment-cal-2560x1440.png\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/live-in-the-moment/nocal/aug-20-live-in-the-moment-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/live-in-the-moment/nocal/aug-20-live-in-the-moment-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/live-in-the-moment/nocal/aug-20-live-in-the-moment-nocal-1080x1920.png\">1080x1920</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/live-in-the-moment/nocal/aug-20-live-in-the-moment-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/live-in-the-moment/nocal/aug-20-live-in-the-moment-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/live-in-the-moment/nocal/aug-20-live-in-the-moment-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<h3>In A Sunbeam</h3>\n<p>“A lot of summer activities and holiday travels had to be canceled this month, but our pets don’t know that - they’re perfectly happy to lie around at home and soak up the sun. I wanted to make some calming art that would channel that energy, to help people recharge between all the stressors you have to face these days.” — Designed by <a href=\"https://bicatperson.com/\">Erin Ptah</a> from the United States.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/aug-20-in-a-sunbeam-full.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/91ed0fb4-11b0-4fcd-80e7-c407f5bc1b38/aug-20-in-a-sunbeam-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/aug-20-in-a-sunbeam-preview.png\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/cal/aug-20-in-a-sunbeam-cal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/cal/aug-20-in-a-sunbeam-cal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/cal/aug-20-in-a-sunbeam-cal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/cal/aug-20-in-a-sunbeam-cal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/cal/aug-20-in-a-sunbeam-cal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/cal/aug-20-in-a-sunbeam-cal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/cal/aug-20-in-a-sunbeam-cal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/cal/aug-20-in-a-sunbeam-cal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/cal/aug-20-in-a-sunbeam-cal-2560x1440.png\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/nocal/aug-20-in-a-sunbeam-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/nocal/aug-20-in-a-sunbeam-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/nocal/aug-20-in-a-sunbeam-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/nocal/aug-20-in-a-sunbeam-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/nocal/aug-20-in-a-sunbeam-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/nocal/aug-20-in-a-sunbeam-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/nocal/aug-20-in-a-sunbeam-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/nocal/aug-20-in-a-sunbeam-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/in-a-sunbeam/nocal/aug-20-in-a-sunbeam-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<h3>Creating Buzz</h3>\n<p>Designed by <a href=\"https://www.ricardogimenes.com/\">Ricardo Gimenes</a> from Sweden.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/aug-20-creating-buzz-full.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2537214b-f891-4571-b341-a926652c745c/aug-20-creating-buzz-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/aug-20-creating-buzz-preview.png\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-2560x1440.png\">2560x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/cal/aug-20-creating-buzz-cal-3840x2160.png\">3840x2160</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-2560x1440.png\">2560x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/creating-buzz/nocal/aug-20-creating-buzz-nocal-3840x2160.png\">3840x2160</a></li>\n</ul>\n\n<h3>August And A Half</h3>\n<p>“Somewhere it’s summer, somewhere else it’s winter time.” — Designed by <a href=\"https://www.behance.net/diuno07\">Dan Di</a> from Italy.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/aug-20-august-and-a-half-full.jpg\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/80c18fa2-4810-46f0-a020-dfcd598c09b2/aug-20-august-and-a-half-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/aug-20-august-and-a-half-preview.jpg\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-320x480.jpg\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-640x480.jpg\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-800x480.jpg\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-800x600.jpg\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1152x864.jpg\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1366x768.jpg\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1600x900.jpg\">1600x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/cal/aug-20-august-and-a-half-cal-2560x1440.jpg\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-320x480.jpg\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-640x480.jpg\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-800x480.jpg\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-800x600.jpg\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1152x864.jpg\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1366x768.jpg\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1600x900.jpg\">1600x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/august-and-a-half/nocal/aug-20-august-and-a-half-nocal-2560x1440.jpg\">2560x1440</a></li>\n</ul>\n\n<h3>Remembering The Freedom Struggle</h3>\n<p>“Freedom is the highest value. August tells the tales of sacrifices and courage of a nation that fought its way through a very difficult path for independence.” — Designed by <a href=\"https://aufaitux.com/\">AufaitUX</a> from India.</p>\n<a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/remembering-the-freedom-struggle/aug-20-remembering-the-freedom-struggle-full.jpg\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8575f30f-aebf-436f-b5c0-3a781914ab22/aug-20-remembering-the-freedom-struggle-preview-opt.png\" /></a>\n<ul>\n<li><a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/remembering-the-freedom-struggle/aug-20-remembering-the-freedom-struggle-preview.jpg\">preview</a></li>\n<li>with calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/remembering-the-freedom-struggle/cal/aug-20-remembering-the-freedom-struggle-cal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/remembering-the-freedom-struggle/cal/aug-20-remembering-the-freedom-struggle-cal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/remembering-the-freedom-struggle/cal/aug-20-remembering-the-freedom-struggle-cal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/remembering-the-freedom-struggle/cal/aug-20-remembering-the-freedom-struggle-cal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/remembering-the-freedom-struggle/cal/aug-20-remembering-the-freedom-struggle-cal-2560x1440.jpg\">2560x1440</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/remembering-the-freedom-struggle/nocal/aug-20-remembering-the-freedom-struggle-nocal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/remembering-the-freedom-struggle/nocal/aug-20-remembering-the-freedom-struggle-nocal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/remembering-the-freedom-struggle/nocal/aug-20-remembering-the-freedom-struggle-nocal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/remembering-the-freedom-struggle/nocal/aug-20-remembering-the-freedom-struggle-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-20/remembering-the-freedom-struggle/nocal/aug-20-remembering-the-freedom-struggle-nocal-2560x1440.jpg\">2560x1440</a></li>\n</ul>\n\n\n\n<h3>Oldies But Goodies</h3>\n\n<p>A crackling fire, a well-deserved nap on a hot summer day, a cornfield glowing golden in the midday sun — <strong>a lot of things have inspired the design community</strong> to create an August wallpaper in the last few years. Here are some favorites from our archives. (Please note that these designs don’t come with a calendar.)</p>\n\n<p></p><h4>Colorful Summer</h4><p></p>\n<p></p><p>“‘Always keep mint on your windowsill in August, to ensure that the buzzing flies will stay outside where they belong. Don’t think summer is over, even when roses droop and turn brown and the stars shift position in the sky. Never presume August is a safe or reliable time of the year.’ (Alice Hoffman)” — Designed by <a href=\"https://www.instagram.com/lenartlivia/\">Lívi</a> from Hungary.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4425cee-41ad-4ab7-96af-9dab9d1115ec/aug-19-colorful-summer-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4da5f29-93df-4a10-80d2-116d2748c9e1/aug-19-colorful-summer-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4da5f29-93df-4a10-80d2-116d2748c9e1/aug-19-colorful-summer-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/colorful-summer/nocal/aug-19-colorful-summer-nocal-800x480.jpg\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/colorful-summer/nocal/aug-19-colorful-summer-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/colorful-summer/nocal/aug-19-colorful-summer-nocal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/colorful-summer/nocal/aug-19-colorful-summer-nocal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/colorful-summer/nocal/aug-19-colorful-summer-nocal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/colorful-summer/nocal/aug-19-colorful-summer-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/colorful-summer/nocal/aug-19-colorful-summer-nocal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/colorful-summer/nocal/aug-19-colorful-summer-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/colorful-summer/nocal/aug-19-colorful-summer-nocal-2560x1440.jpg\">2560x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/colorful-summer/nocal/aug-19-colorful-summer-nocal-3475x4633.jpg\">3475x4633</a></li></ul>\n\n<p></p><h4>Smoky Mountain Bigfoot Conference</h4><p></p>\n<p></p><p>“Headed towards Smoky Mountain Bigfoot Conference this summer? Oh, they say it’s gonna be a big one! Get yourself out there well-prepared, armed with patience and ready to have loads of fun with fellow Bigfoot researchers. Looking forward to those campsite nights under the starry sky, with electrifying energy of expectations filling up the air? Lucky you!” — Designed by <a href=\"https://www.popwebdesign.net/\">Pop Art Studio</a> from Serbia.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ad3b2b1a-510c-440a-bc6b-901ea16e3c90/aug-19-smoky-mountain-bigfoot-conference-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/75afe75c-1a04-420f-b12d-02a02ec6d520/aug-19-smoky-mountain-bigfoot-conference-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/75afe75c-1a04-420f-b12d-02a02ec6d520/aug-19-smoky-mountain-bigfoot-conference-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-320x480.jpg\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-640x480.jpg\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-800x480.jpg\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-800x600.jpg\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1152x864.jpg\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1366x768.jpg\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-19/smoky-mountain-bigfoot-conference/nocal/aug-19-smoky-mountain-bigfoot-conference-nocal-2560x1440.jpg\">2560x1440</a></li></ul>\n\n<p></p><h4>Childhood Memories</h4><p></p>\n<p></p><p>Designed by <a href=\"http://capitanbollito.com\">Francesco Paratici</a> from Australia.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0e78c0ea-650c-4284-a61a-3f281d4d4413/august-12-childhood-memories-4-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a92e8178-2097-4bf1-9803-1d85bb2710a5/august-12-childhood-memories-4-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0e78c0ea-650c-4284-a61a-3f281d4d4413/august-12-childhood-memories-4-full-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-childhood_memories__4-nocal-320x480.jpg\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-childhood_memories__4-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-childhood_memories__4-nocal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-childhood_memories__4-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-childhood_memories__4-nocal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-childhood_memories__4-nocal-1366x768.jpg\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-childhood_memories__4-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-childhood_memories__4-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-childhood_memories__4-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-childhood_memories__4-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-childhood_memories__4-nocal-2560x1440.jpg\">2560x1440</a></li>\n</ul>\n\n<p></p><h4>Handwritten August</h4><p></p>\n<p></p><p>“I love typograhy handwritten style.” — Designed by Chalermkiat Oncharoen from Thailand.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4011a427-17f6-4223-9eb4-f759f54251f7/aug-13-handwritten-august-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/52bea7de-ac48-4387-baf7-aaea0311e27a/aug-13-handwritten-august-preview-opt.png\" /> </a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4011a427-17f6-4223-9eb4-f759f54251f7/aug-13-handwritten-august-full-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/handwritten-august/nocal/aug-13-handwritten-august-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n<p></p><h4>Bee Happy!</h4><p></p>\n<p></p><p>“August means that fall is just around the corner, so I designed this wallpaper to remind everyone to ‘bee happy’ even though summer is almost over. Sweeter things are ahead!” — Designed by Emily Haines from the United States.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fe3c5086-c859-4d07-b477-164a15433f15/aug-16-bee-happy-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9652bddf-d511-4014-867d-585b4b05e9c0/aug-16-bee-happy-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9652bddf-d511-4014-867d-585b4b05e9c0/aug-16-bee-happy-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/bee-happy/nocal/aug-16-bee-happy-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/bee-happy/nocal/aug-16-bee-happy-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/bee-happy/nocal/aug-16-bee-happy-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/bee-happy/nocal/aug-16-bee-happy-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/bee-happy/nocal/aug-16-bee-happy-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/bee-happy/nocal/aug-16-bee-happy-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/bee-happy/nocal/aug-16-bee-happy-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/bee-happy/nocal/aug-16-bee-happy-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/bee-happy/nocal/aug-16-bee-happy-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/bee-happy/nocal/aug-16-bee-happy-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/bee-happy/nocal/aug-16-bee-happy-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/bee-happy/nocal/aug-16-bee-happy-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/bee-happy/nocal/aug-16-bee-happy-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/bee-happy/nocal/aug-16-bee-happy-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/bee-happy/nocal/aug-16-bee-happy-nocal-2560x1440.png\">2560x1440</a></li></ul>\n\n<p></p><h4>Estonian Summer Sun</h4><p></p>\n<p></p><p>“This is a moment from Southern Estonia that shows amazing summer nights.” Designed by <a href=\"http://sviiter.it\">Erkki Pung / Sviiter</a> from Estonia.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b076e1e-1df6-4b2d-8207-3e052b411a8c/aug-13-estonian-summer-sun-full-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b40ec210-dcdf-4288-82ff-36ac0573049b/aug-13-estonian-summer-sun-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b40ec210-dcdf-4288-82ff-36ac0573049b/aug-13-estonian-summer-sun-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/estonian-summer-sun/nocal/aug-13-estonian-summer-sun-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/estonian-summer-sun/nocal/aug-13-estonian-summer-sun-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/estonian-summer-sun/nocal/aug-13-estonian-summer-sun-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/estonian-summer-sun/nocal/aug-13-estonian-summer-sun-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-13/estonian-summer-sun/nocal/aug-13-estonian-summer-sun-nocal-1920x1200.png\">1920x1200</a></li></ul>\n\n<p></p><h4>Coffee Break Time</h4><p></p>\n<p></p><p>Designed by <a href=\"https://www.ricardogimenes.com/\">Ricardo Gimenes</a> from Sweden.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b7fcfa12-a939-437c-a2c1-320294b54030/aug-18-coffee-break-time-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ec380c41-2c66-41b9-b716-3a7a45f58ea4/aug-18-coffee-break-time-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ec380c41-2c66-41b9-b716-3a7a45f58ea4/aug-18-coffee-break-time-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1400x1050.png\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/coffee-break-time/nocal/aug-18-coffee-break-time-nocal-2560x1440.png\">2560x1440</a></li></ul>\n\n<p></p><h4>Purple Haze</h4><p></p>\n<p></p><p>“Meet Lucy: she lives in California, loves summer and sunbathing at the beach. This is our Jimi Hendrix Experience tribute. Have a lovely summer!” — Designed by <a href=\"https://www.popwebdesign.net/index_eng.html\">PopArt Web Design</a> from Serbia.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d83bc7cc-54f4-4168-98e5-a1ea189ba705/aug-18-purple-haze-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fa898595-87e5-4818-8db6-460f6b658ab6/aug-18-purple-haze-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fa898595-87e5-4818-8db6-460f6b658ab6/aug-18-purple-haze-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-320x480.jpg\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-640x480.jpg\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-800x480.jpg\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-800x600.jpg\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1152x864.jpg\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1366x768.jpg\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-18/purple-haze/nocal/aug-18-purple-haze-nocal-2560x1440.jpg\">2560x1440</a></li></ul>\n\n\n\n<p></p><h4>Psst, It’s Camping Time…</h4><p></p>\n<p></p><p>“August is one of my favorite months, when the nights are long and deep and crackling fire makes you think of many things at once and nothing at all at the same time. It’s about heat and cold which allow you to touch the eternity for a few moments.” — Designed by <a href=\"http://izhik.com\">Igor Izhik</a> from Canada.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a3b4015-afe0-4299-9696-22c3543d2665/aug-16-psst-its-camping-time-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a263dc14-0e54-40ad-9a5f-bc7dc2adee15/aug-16-psst-its-camping-time-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a263dc14-0e54-40ad-9a5f-bc7dc2adee15/aug-16-psst-its-camping-time-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/psst-its-camping-time/nocal/aug-16-psst-its-camping-time-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/psst-its-camping-time/nocal/aug-16-psst-its-camping-time-nocal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/psst-its-camping-time/nocal/aug-16-psst-its-camping-time-nocal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/psst-its-camping-time/nocal/aug-16-psst-its-camping-time-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/psst-its-camping-time/nocal/aug-16-psst-its-camping-time-nocal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/psst-its-camping-time/nocal/aug-16-psst-its-camping-time-nocal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/psst-its-camping-time/nocal/aug-16-psst-its-camping-time-nocal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/psst-its-camping-time/nocal/aug-16-psst-its-camping-time-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/psst-its-camping-time/nocal/aug-16-psst-its-camping-time-nocal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/psst-its-camping-time/nocal/aug-16-psst-its-camping-time-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/psst-its-camping-time/nocal/aug-16-psst-its-camping-time-nocal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/psst-its-camping-time/nocal/aug-16-psst-its-camping-time-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/psst-its-camping-time/nocal/aug-16-psst-its-camping-time-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/psst-its-camping-time/nocal/aug-16-psst-its-camping-time-nocal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/psst-its-camping-time/nocal/aug-16-psst-its-camping-time-nocal-2560x1440.jpg\">2560x1440</a></li></ul>\n\n<p></p><h4>Hello Again</h4><p></p>\n<p></p><p>“In Melbourne it is the last month of quite a cool winter so we are looking forward to some warmer days to come.” — Designed by <a href=\"http://www.tazi.com.au\">Tazi</a> from Australia.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/812278fd-ebf0-46a6-90c1-c65032ca65e0/aug-17-hello-again-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f767666c-03bf-42c5-b5ee-2e0ebc0ef441/aug-17-hello-again-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f767666c-03bf-42c5-b5ee-2e0ebc0ef441/aug-17-hello-again-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/hello-again/nocal/aug-17-hello-again-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/hello-again/nocal/aug-17-hello-again-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/hello-again/nocal/aug-17-hello-again-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/hello-again/nocal/aug-17-hello-again-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/hello-again/nocal/aug-17-hello-again-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/hello-again/nocal/aug-17-hello-again-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/hello-again/nocal/aug-17-hello-again-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/hello-again/nocal/aug-17-hello-again-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/hello-again/nocal/aug-17-hello-again-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/hello-again/nocal/aug-17-hello-again-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/hello-again/nocal/aug-17-hello-again-nocal-2560x1440.png\">2560x1440</a></li></ul>\n\n<p></p><h4>Liqiu And Orange Daylily Season</h4><p></p>\n<p></p><p>“Liqiu signifies the beginning of autumn in East Asian cultures. After entering the Liqiu, the mountains in Eastern Taiwan’s East Rift Valley are covered in a sea of golden flowers, very beautiful. The production season for high-mountain daylilies is in August. Chihke Mountain, in Yuli Township, and Sixty-Stone Mountain, in Fuli Township, which are both located in Hualien County, are two of the country’s three high-mountain daylily production areas.” — Designed by <a href=\"https://pixiv.me/sunday1216\">Hong, Zi-Qing</a> from Taiwan.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d78a0d1a-694d-4dc1-bc97-1f96529b51b8/aug-17-liqiu-and-orange-daylily-season-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/787b79df-290c-4a4b-996b-ac8f1f9a5364/aug-17-liqiu-and-orange-daylily-season-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/787b79df-290c-4a4b-996b-ac8f1f9a5364/aug-17-liqiu-and-orange-daylily-season-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/liqiu-and-orange-daylily-season/nocal/aug-17-liqiu-and-orange-daylily-season-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/liqiu-and-orange-daylily-season/nocal/aug-17-liqiu-and-orange-daylily-season-nocal-1080x1920.png\">1080x1920</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/liqiu-and-orange-daylily-season/nocal/aug-17-liqiu-and-orange-daylily-season-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/liqiu-and-orange-daylily-season/nocal/aug-17-liqiu-and-orange-daylily-season-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/liqiu-and-orange-daylily-season/nocal/aug-17-liqiu-and-orange-daylily-season-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/liqiu-and-orange-daylily-season/nocal/aug-17-liqiu-and-orange-daylily-season-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/liqiu-and-orange-daylily-season/nocal/aug-17-liqiu-and-orange-daylily-season-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/liqiu-and-orange-daylily-season/nocal/aug-17-liqiu-and-orange-daylily-season-nocal-2560x1440.png\">2560x1440</a></li></ul>\n\n<p></p><h4>Summer Nap</h4><p></p>\n<p></p><p>Designed by <a href=\"http://dorvandavoudi.com\">Dorvan Davoudi</a> from Canada.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/80a729c6-385d-4e22-bb2c-61266a7f5a96/aug-16-summer-nap-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7e52aff7-6aac-4b28-b75c-f118e8591211/aug-16-summer-nap-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7e52aff7-6aac-4b28-b75c-f118e8591211/aug-16-summer-nap-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-800x480.jpg\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-800x600.jpg\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-1152x864.jpg\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-1366x768.jpg\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-16/summer-nap/nocal/aug-16-summer-nap-nocal-2560x1440.jpg\">2560x1440</a></li></ul>\n\n<p></p><h4>Happy Janmashtami</h4><p></p>\n<p></p><p>“Janmashtami, the day that Lord Krishna was born, is an important Hindu Festival which is celebrated worldwide. The idea was to create the Lord Krishna’s flute-playing persona, in a minimalist design form.” — Designed by <a href=\"http://damnperfect.com\">Damn Perfect</a> from Jaipur, India.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2db155fe-49c6-4a9b-823f-722dae068396/aug-17-happy-janmashtami-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/84a8c5d0-ff12-47e9-8715-6adb18fdbb6e/aug-17-happy-janmashtami-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/84a8c5d0-ff12-47e9-8715-6adb18fdbb6e/aug-17-happy-janmashtami-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-320x480.jpg\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-640x480.jpg\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-800x480.jpg\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-800x600.jpg\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1024x1024.jpg\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1152x864.jpg\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1280x720.jpg\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1280x800.jpg\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1280x1024.jpg\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1366x768.jpg\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1400x1050.jpg\">1400x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1440x900.jpg\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1600x1200.jpg\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1680x1200.jpg\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1920x1080.jpg\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-1920x1440.jpg\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/happy-janmashtami/nocal/aug-17-happy-janmashtami-nocal-2560x1440.jpg\">2560x1440</a></li></ul>\n\n<p></p><h4>A Bloom Of Jellyfish</h4><p></p>\n<p></p><p>“I love going to aquariums – the colors, patterns and array of blue hues attract the nature lover in me while still appeasing my design eye. One of the highlights is always the jellyfish tanks. They usually have some kind of light show in them, which makes the jellyfish fade from an intense magenta to a deep purple – and it literally tickles me pink. On a recent trip to uShaka Marine World, we discovered that the collective noun for jellyfish is a bloom and, well, it was love-at-first-collective-noun all over again. I’ve used some intense colours to warm up your desktop and hopefully transport you into the depths of your own aquarium.” — Designed by <a href=\"http://wonderlandcollective.co.za/\">Wonderland Collective</a> from South Africa.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/07ada30f-acbb-4d56-bee4-96ec97ee1624/aug-15-a-bloom-of-jellyfish-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ab455651-b92b-46f4-9c31-c911231a9038/aug-15-a-bloom-of-jellyfish-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ab455651-b92b-46f4-9c31-c911231a9038/aug-15-a-bloom-of-jellyfish-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/a-bloom-of-jellyfish/nocal/aug-15-a-bloom-of-jellyfish-nocal-320x480.jpg\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/a-bloom-of-jellyfish/nocal/aug-15-a-bloom-of-jellyfish-nocal-800x600.jpg\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/a-bloom-of-jellyfish/nocal/aug-15-a-bloom-of-jellyfish-nocal-1024x768.jpg\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/a-bloom-of-jellyfish/nocal/aug-15-a-bloom-of-jellyfish-nocal-1280x960.jpg\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/a-bloom-of-jellyfish/nocal/aug-15-a-bloom-of-jellyfish-nocal-1680x1050.jpg\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/a-bloom-of-jellyfish/nocal/aug-15-a-bloom-of-jellyfish-nocal-1920x1200.jpg\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/a-bloom-of-jellyfish/nocal/aug-15-a-bloom-of-jellyfish-nocal-2560x1440.jpg\">2560x1440</a></li></ul>\n\n<p></p><h4>Saturn Among The Stars</h4><p></p>\n<p></p><p>“This summer I have a telescope. Every night I look to the sky and I look into the stars. Fortunately, I can see Saturn.” — Designed by <a href=\"http://www.silocreativo.com/en/\">Verónica Valenzuela</a> from Spain.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a4419e8-da1f-4153-812e-6e20010a75f3/aug-15-saturn-among-the-stars-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3ab8b929-3b56-487b-a00b-4649117f9153/aug-15-saturn-among-the-stars-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3ab8b929-3b56-487b-a00b-4649117f9153/aug-15-saturn-among-the-stars-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/saturn-among-the-stars/nocal/aug-15-saturn-among-the-stars-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/saturn-among-the-stars/nocal/aug-15-saturn-among-the-stars-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/saturn-among-the-stars/nocal/aug-15-saturn-among-the-stars-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/saturn-among-the-stars/nocal/aug-15-saturn-among-the-stars-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/saturn-among-the-stars/nocal/aug-15-saturn-among-the-stars-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/saturn-among-the-stars/nocal/aug-15-saturn-among-the-stars-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/saturn-among-the-stars/nocal/aug-15-saturn-among-the-stars-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/saturn-among-the-stars/nocal/aug-15-saturn-among-the-stars-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-15/saturn-among-the-stars/nocal/aug-15-saturn-among-the-stars-nocal-2560x1440.png\">2560x1440</a></li></ul>\n\n<p></p><h4>Colorstrike</h4><p></p>\n<p></p><p>Designed by AndrР№ Presser from Germany.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/66ba6de4-14ad-4853-92d6-3f0354021845/august-12-colorstrike-96-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bae24bfd-a6e3-4ea3-90a8-0c9ea50ca3fa/august-12-colorstrike-96-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bae24bfd-a6e3-4ea3-90a8-0c9ea50ca3fa/august-12-colorstrike-96-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-colorstrike__96-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-colorstrike__96-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-colorstrike__96-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-colorstrike__96-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/august-12/august-12-colorstrike__96-nocal-2560x1440.png\">2560x1440</a></li></ul>\n\n<p></p><h4>I Love Summer</h4><p></p>\n<p></p><p>“I love the summer nights and the sounds of the sea, the crickets, the music of some nice party.” — Designed by <a href=\"https://www.upwork.com/freelancers/~0120e9966be1097d99\">Maria Karapaunova</a> from Bulgaria.</p><p></p>\n<p></p><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/85e8fcf3-ffb5-48bb-bcc8-2dffb21c95c2/aug-17-i-love-summer-full-opt.png\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f7e5117-1377-4b3a-9140-c89c78fa2cce/aug-17-i-love-summer-preview-opt.png\" /></a><p></p>\n<ul>\n<li><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f7e5117-1377-4b3a-9140-c89c78fa2cce/aug-17-i-love-summer-preview-opt.png\">preview</a></li>\n<li>without calendar: <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-320x480.png\">320x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-640x480.png\">640x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-800x480.png\">800x480</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-800x600.png\">800x600</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1024x768.png\">1024x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1024x1024.png\">1024x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1152x864.png\">1152x864</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1280x720.png\">1280x720</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1280x800.png\">1280x800</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1280x960.png\">1280x960</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1280x1024.png\">1280x1024</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1366x768.png\">1366x768</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1440x900.png\">1440x900</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1440x1050.png\">1440x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1600x1200.png\">1600x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1680x1050.png\">1680x1050</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1680x1200.png\">1680x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1920x1080.png\">1920x1080</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1920x1200.png\">1920x1200</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-1920x1440.png\">1920x1440</a>, <a href=\"http://files.smashingmagazine.com/wallpapers/aug-17/i-love-summer/nocal/aug-17-i-love-summer-nocal-2560x1440.png\">2560x1440</a></li>\n</ul>\n\n","descriptionType":"html","publishedDate":"Fri, 31 Jul 2020 08:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/552aea44-8886-49c7-b14a-e08f11e7ae07/aug-20-were-all-the-same-preview-opt.png","linkMd5":"2685c4c3d7ebad88e71bc608c92ad423","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn11@2020_3/2020/09/05/07-59-16-324_4fc4bdca883468dc.webp","destWidth":800,"destHeight":450,"sourceBytes":105268,"destBytes":47754,"author":"hello@smashingmagazine.com (Cosima Mielke)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/552aea44-8886-49c7-b14a-e08f11e7ae07/aug-20-were-all-the-same-preview-opt.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/552aea44-8886-49c7-b14a-e08f11e7ae07/aug-20-were-all-the-same-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn30@2020_6/2020/09/05/07-59-34-362_f2f183674d5845a1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f82dc671-22cd-4f90-84f0-e02b2f23b75d/aug-20-womens-equality-day-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn79@2020_1/2020/09/05/07-59-30-131_dac56113ad0096ea.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/912b0587-26fb-45e9-95cc-98523cc83822/aug-20-august-days-preview-opt.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94ef26e5-f09e-4f91-97a9-3b6ef7e23f7d/aug-20-live-in-the-moment-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn100@2020_3/2020/09/05/07-59-21-825_be061621c8017823.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/91ed0fb4-11b0-4fcd-80e7-c407f5bc1b38/aug-20-in-a-sunbeam-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn86@2020_1/2020/09/05/07-59-35-684_8ecc970f4e5f6bc8.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2537214b-f891-4571-b341-a926652c745c/aug-20-creating-buzz-preview-opt.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/80c18fa2-4810-46f0-a020-dfcd598c09b2/aug-20-august-and-a-half-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn51@2020_5/2020/09/05/07-59-38-417_4428781ca1b2010c.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8575f30f-aebf-436f-b5c0-3a781914ab22/aug-20-remembering-the-freedom-struggle-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn52@2020_1/2020/09/05/07-59-28-455_9f20c424f85977b9.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4da5f29-93df-4a10-80d2-116d2748c9e1/aug-19-colorful-summer-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn59@2020_1/2020/09/05/07-59-35-655_750c716dc564e891.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/75afe75c-1a04-420f-b12d-02a02ec6d520/aug-19-smoky-mountain-bigfoot-conference-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn8@2020_6/2020/09/05/07-59-22-835_fb27a1e813befcc7.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a92e8178-2097-4bf1-9803-1d85bb2710a5/august-12-childhood-memories-4-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn79@2020_2/2020/09/05/07-59-18-017_642f7e5af91b7891.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/52bea7de-ac48-4387-baf7-aaea0311e27a/aug-13-handwritten-august-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn80@2020_6/2020/09/05/07-59-22-954_6e85588bd58fb144.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9652bddf-d511-4014-867d-585b4b05e9c0/aug-16-bee-happy-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn94@2020_4/2020/09/05/07-59-28-086_950f8471fb3b88b2.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b40ec210-dcdf-4288-82ff-36ac0573049b/aug-13-estonian-summer-sun-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn1@2020_4/2020/09/05/07-59-24-899_ca4874cbfef4e911.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ec380c41-2c66-41b9-b716-3a7a45f58ea4/aug-18-coffee-break-time-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn14@2020_3/2020/09/05/07-59-37-614_4a5c52cd3c09a989.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fa898595-87e5-4818-8db6-460f6b658ab6/aug-18-purple-haze-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn38@2020_5/2020/09/05/07-59-29-411_73d4c3900bfb0f0a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a263dc14-0e54-40ad-9a5f-bc7dc2adee15/aug-16-psst-its-camping-time-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn31@2020_5/2020/09/05/07-59-23-862_b8310cc279a56955.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f767666c-03bf-42c5-b5ee-2e0ebc0ef441/aug-17-hello-again-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn51@2020_6/2020/09/05/07-59-23-198_e1d8c839744339be.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/787b79df-290c-4a4b-996b-ac8f1f9a5364/aug-17-liqiu-and-orange-daylily-season-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn4@2020_1/2020/09/05/07-59-23-139_f8589ddaeb1ffe09.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7e52aff7-6aac-4b28-b75c-f118e8591211/aug-16-summer-nap-preview-opt.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/84a8c5d0-ff12-47e9-8715-6adb18fdbb6e/aug-17-happy-janmashtami-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn92@2020_5/2020/09/05/07-59-25-705_67bd96fa1c4260fc.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ab455651-b92b-46f4-9c31-c911231a9038/aug-15-a-bloom-of-jellyfish-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn86@2020_3/2020/09/05/07-59-19-314_8fd5eabd6499b1cb.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3ab8b929-3b56-487b-a00b-4649117f9153/aug-15-saturn-among-the-stars-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn76@2020_3/2020/09/05/07-59-25-947_ec0d94ca4aea3c28.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bae24bfd-a6e3-4ea3-90a8-0c9ea50ca3fa/august-12-colorstrike-96-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn90@2020_6/2020/09/05/07-59-34-830_3c20feaa8b920c7e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f7e5117-1377-4b3a-9140-c89c78fa2cce/aug-17-i-love-summer-preview-opt.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn16@2020_5/2020/09/05/07-59-33-182_8bced4e421c2bf0f.webp"},"publishedOrCreatedDate":1599292755760},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Inspired Design Decisions With Emmett McBain: Art Direction As Social Equity","link":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","description":"<p>Along with advertising, selling is a skill that people often frown on. It’s true: no one likes someone coercing or misleading them, and nobody enjoys being interrupted. </p>\n<p>But being sold to well — by a salesperson who understands your aspirations, motivations, and needs — can be an experience that benefits buyers and sellers.</p>\n<p>Learning how to sell was one of the best things I did early on in my working life. Back then, I sold photographic equipment, and although I never enjoyed the stress which came from meeting sales targets, I always enjoyed meeting with photographers.</p>\n<p>Finding new customers often meant cold-calling, knocking on a studio door, and frequently being rejected. I spent time talking about someone’s work before I mentioned the products my company paid me to sell. I was genuinely interested in photography, but also I’d learned that understanding someone’s problems was as crucial as explaining how my products could help solve them.</p>\n<p>What I learned has served me immeasurably well since I stopped selling cameras and started selling my talent. It’s helped me deal with people, not least in presenting (read: selling) my ideas to clients.</p>\n<p>It’s a fact of life that not always the best idea or the best execution wins a pitch or presentation. It’s often the idea which is being sold by the best salesperson.</p>\n<p>Selling ideas should become one of your best skills, so learn to sell. Learn how to talk about your work so that the person you’re selling to understands your ideas and why they should buy them from you. Learn to inspire people with your words as well as your work. Make them feel like they’re so much a part of your ideas that they simply must buy from you.</p>\n<p>As a Black American graphic designer who worked in advertising during the 1950s, ’60s, and ’70s, Emmett McBain not only had incredible talent, he also understood how to sell to other African Americans.</p>\n<p>He knew that to sell his clients’ products, his designs needed to resonate with Black audiences, by showing images they related to and language which was familiar to them.</p>\n<p>As a grey-bearded Englishman, it’s not easy for me to understand cultural perspectives which are different from mine. But, I’ve learned the value of making designs that speak to people whatever they look like and wherever they live. Not only to sell my clients’ products to them but so that everyone feels their needs are being listened to and their importance understood.</p>\n<p>Born in Chicago in 1935, Emmett McBain was an African American graphic designer whose work had a remarkable impact on the representation of African Americans in advertising.</p>\n<p>McBain studied at several art schools and graduated after studying commercial art at the American Academy of Art in Chicago. </p>\n<p>Vince Cullers and Associates—the first African American-owned full-service advertising agency in the USA was founded in 1958. Cullers believed that “selling Black” needed \"thinking Black\" if advertisers were to reach African American consumers. He not only sold to African Americans but helped to educate them in advertising and employ them at his agency. One of those employees was the newly graduated Emmett McBain.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58c578c5-f73d-4723-b4ec-faf89f3b68d0/issue-11-01-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<p>With two years of commercial experience behind him, McBain left Vince Cullers and moved to Playboy Records as an assistant art editor. But, he didn’t stay in a junior role for long and quickly became Playboy’s promotion art director. McBain carved out a niche as a cover artist, and in 1958 his Playboy Jazz All-Stars album art was named Billboard Magazine’s Album Cover of the Week.</p>\n<p>In 1959, McBain moved on from Playboy, but he didn’t leave behind his work on album covers. His newly-founded design studio McBain Associates regularly worked with Mercury Records, and he designed over 75 album covers by the time he was 24.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/939d16b0-b5d5-4b1c-b77a-0e9a1bfb4c48/issue-11-03-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<p>McBain returned to Vince Cullers Advertising as its creative director in 1968 and made some of his most important contributions to advertising for Black Americans.</p>\n<p>Before the 1960s, Black consumers were largely ignored by brand-name manufacturers and the mainstream advertising industry which served them. Advertising to African Americans was limited mainly to newspapers specific to Black audiences.</p>\n<p>White clients were reticent to spend money selling to African Americans as advertisers saw black consumers as having little disposable income. In the politically charged atmosphere of the time, companies were also afraid to associate their brands with African Americans.</p>\n<p>African Americans were unrepresented in the advertising industry too, and the number of Black people working in advertising was tiny. But, in the mid-1960s, advertising agencies began to recruit African Americans. These agencies hoped their experiences would make clients’ messages more relatable to African American audiences who, by then, spent almost $30 billion each year.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/735c8402-7469-4819-b70a-ff1e7057e3e6/issue-11-02-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<p>McBain’s work featured positive messages for African Americans and the Black community. He used images of everyday people in usual surroundings for clients who included Newport’s menthol cigarettes, Philip Morris’ Marlboro, and SkinFood Cosmetics’ beauty products specifically for Black skin. Like Vince Cullers, McBain knew that selling to Black consumers meant understanding their different needs. He understood that — as his future partner, copywriter Thomas Burrell said — “Black people are not dark-skinned white people.”</p>\n<p>In 1971, Emmett McBain partnered with Burrell to form Burrell-McBain Inc., which they described in an advertisement as “An Advertising Agency for the Black Commercial Market.” Rather than exploit Black Americans, Burrell and McBain aimed to form authentic and respectful relationships with Black audiences.</p>\n<p>Before Burrell and McBain, the iconic white cowboy was the face of Marlboro cigarettes. But, McBain’s Marlboro man was more relatable to African American smokers. Whereas Marlboro’s cowboy was shown in an idealized version of the American West, McBain’s Black characters were seen smoking in everyday surroundings.</p>\n<p>Their Marlboro campaign was a huge success and Burrell and McBain went on to win Coca-Cola and McDonald’s as clients, helping them become the largest Black-owned advertising agency in America.</p>\n<p>McBain left the agency he co-founded in 1974 and set out on a career as an artist. He opened his art gallery, The Black Eye, and formed a consultancy — also called The Black Eye — which helped agencies to better connect with the African American community.</p>\n<p>Emmett McBain died of cancer in 2012 and since then has been recognized by AIGA, the Society of Typographic Arts, and the Art Directors Clubs of Chicago and Detroit. </p>\n<p>Sadly, there hasn’t been a book published about Emmett McBain and his contribution to advertising and design. I haven’t heard his name mentioned at design conferences or seen him referenced in articles relating to modern-day design and particularly the web.</p>\n<p>McBain’s later work had a profound impact on advertising from the 1960s onwards, but I’m especially fond of his record cover designs. The burst with energy which reflects the jazz music McBain loved. His colors are exciting and vibrant. His choice of typefaces and the ways he deconstructed and rebuilt type are inspiring. There’s plenty to inspire us in the work of Emmett McBain.</p>\n<h3>Aligning Vertical Content</h3>\n<p>Whichever graphic style I choose, the HTML needed to implement this first McBain-inspired design is identical. I need three structural elements; a header which contains my SVG logo and headlines, main, and an aside which includes a table of Citroën DS production numbers:</p>\n<pre><code>&#60;header&#62;\n  &#60;svg&#62;…&#60;/svg&#62;\n\n  &#60;div&#62;\n    &#60;svg&#62;…&#60;/svg&#62;\n    &#60;svg&#62;…&#60;/svg&#62;\n  &#60;/div&#62;\n&#60;/header&#62;\n\n&#60;main&#62;\n  &#60;p&#62;…&#60;/p&#62;\n&#60;/main&#62;\n\n&#60;aside&#62;\n  &#60;table&#62;…&#60;/table&#62;\n&#60;/aside&#62;</code></pre>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58729814-03ea-43da-bbf1-f95450adbdfe/issue-11-04-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<p>For scalability across screen sizes, I use SVGs for the two headlines in my header. Using SVG provides an extra degree of consistency for the second headline’s stroked text, but I mustn’t forget accessibility.</p>\n<p>In issue 8, I explained how to help people who use assistive technology using adding ARIA to SVGs. I add an ARIA role attribute, plus a level attribute which replaces the missing semantics. Adding a title element also helps assistive technology understand the difference between several blocks of SVG, but browsers won’t display this title:</p>\n<pre><code>&#60;svg role=\"heading\" aria-level=\"1\" aria-label=\"Citroën DS\"&#62;\n  &#60;title&#62;Citroën DS&#60;/title&#62;\n  &#60;path&#62;…&#60;/path&#62;\n&#60;/svg&#62;</code></pre>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ddb0a92d-08f9-467b-b892-45ed76462b65/issue-11-05-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<p>To begin this design, I add basic foundation styles for every screen size starting with foreground and background colours:</p>\n<pre><code>body {\nbackground-color: #fff;\ncolor: #262626; }</code></pre>\n\n<p>I add pixel precise dimensions to the SVG elements in my header, then use auto horizontal margins to centre the Citroën logo:</p>\n<pre><code>header &#62; svg {\nmargin: 0 auto;\nwidth: 80px; }\n\nheader div svg {\nmax-height: 80px; }</code></pre>\n\n<p>In his inspiring design, Emmet McBain included vertical black stripes to add structure to his layout. To achieve a similar effect without adding extra elements to my HTML, I add dark borders to both the left and right sides of my main paragraph:</p>\n<pre><code>main p {\npadding: .75rem 0;\nborder-right: 5px solid #262626;\nborder-left: 5px solid #262626; }</code></pre>\n\n<p>The same technique adds a similar effect to my table of Citroën DS production numbers. I add the two outer borders to my table:</p>\n<pre><code>aside table {\nwidth: 100%;\nborder-right: 5px solid #262626;\nborder-left: 5px solid #262626;\nborder-collapse: collapse; }</code></pre>\n\n<p>Then, I add a third rule to the right of my table headers:</p>\n<pre><code>aside th { \npadding-right: .75rem;\npadding-left: .75rem;\nborder-right: 5px solid #262626; }</code></pre>\n\n<p>By ensuring every cell fills half the width of my table, this vertical stripe runs down the centre, from top to bottom:</p>\n<pre><code>aside th,\naside td {\nwidth: 50%;\nbox-sizing: border-box; }</code></pre>\n\n<p>When someone reads numerical tabular data like these pairs of years and production numbers, their eyes scan down the year column. Then, they follow across to see how many cars Citroën manufactured during that year. People might also compare production numbers looking for either high or low numbers.</p>\n<p>To make their comparisons easier, I align production numbers to the right:</p>\n<pre><code>aside td {\ntext-align: right; }</code></pre>\n\n<p>Depending on the OpenType features available in the font you’ve chosen, you can also improve tabular data readability by specifying lining rather than old-style numerals. Some old-style numerals—including 3, 4, 7, and 9 — have descenders which can drop below the baseline. These make longer strings of numbers more difficult to read. Lining numerals, on the other hand, include numbers that sit on the baseline.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/993259ad-e775-4b66-90a0-273621bf5cdb/issue-11-06-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<p>OpenType features also control the width of numerals which makes comparing strings of numbers in a table easier. Whereas proportional numbers can be different sizes, tabular numerals are all the same width so tens, hundreds, and thousands will be more precisely aligned:</p>\n<pre><code>aside td {\nfont-variant-numeric: lining-nums tabular-nums; }</code></pre>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d54853ab-8c08-4d74-9d0b-aac4418d0e8d/issue-11-07-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<p>Finally, I introduce the circle motif to the bottom of this small screen design. I don’t want to include these circular images in my HTML, so I use a CSS generated content data URI where the image file is encoded into a string:</p>\n<pre><code>aside:after {\ncontent: url(\"data:image/svg+xml…\"); }</code></pre>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ddb0a92d-08f9-467b-b892-45ed76462b65/issue-11-05-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<p>I’m frequently surprised at how few changes I need to make to develop designs for multiple screen sizes. Switching from small screens to medium-size designs often requires no more than minor changes to type sizes and introducing simple layout styles.</p>\n<p>I start by horizontally aligning the Citroën logo and SVG headlines in my header. On medium and large screens, this logo comes first in my HTML, and the headlines come second. But visually the elements are reversed. Flexbox is the ideal tool for making this switch, simply by changing the default flex-direction value from row to flex-direction: row-reverse:</p>\n<pre><code>@media (min-width: 48em) {\n\nheader {\ndisplay: flex;\nflex-direction: row-reverse;\nalign-items: flex-start; }\n}</code></pre>\n\n<p>Earlier, I gave my logo a precise width. But, I want the headlines to fill all the remaining horizontal space, so I give their parent division a flex-grow value of 1. Then, I add a viewport-based margin to keep the headlines and logo apart:</p>\n<pre><code>header div {\nflex-grow: 1;\nmargin-right: 2vw; }</code></pre>\n\n<p>For this medium-size design, I developed the layout using a symmetrical three-column grid, which I apply to both main and aside elements:</p>\n<pre><code>main,\naside {\ndisplay: grid;\ngrid-template-columns: repeat(3, 1fr);\ngap: 1rem; }</code></pre>\n\n<p>Then, using the same technique I used for the aside element previously, I generate two images for the main element and place them into the first and third columns in my grid:</p>\n<pre><code>main:before {\ngrid-column: 1;\ncontent: url(\"data:image/svg+xml…\"); }\n\nmain:after {\ngrid-column: 3;\ncontent: url(\"data:image/svg+xml…\"); }</code></pre>\n\n<p>I repeat the process for the aside element, with this new :after content replacing the generated image I added for small screens:</p>\n<pre><code>aside:before {\ngrid-column: 1;\ncontent: url(\"data:image/svg+xml…\"); }\n\naside:after {\ngrid-column: 3;\ncontent: url(\"data:image/svg+xml…\"); }</code></pre>\n\n<p>The extra space available on medium-size screens allows me to introduce more of the vertical stripe motif, which is inspired by Emmett McBain’s original design. The vertical borders on the left and right of the main paragraph are already in place, so all that remains is for me to change its writing-mode to vertical-rl and rotate it by 180 degrees:</p>\n<pre><code>main p {\njustify-self: center;\nwriting-mode: vertical-rl;\ntransform: rotate(180deg); }</code></pre>\n\n<p>Some browsers respect grid properties and will stretch a table to the full height of the grid row without help. Others need a little help, so for them, I give my production numbers table an explicit height which adds an even amount of space between its rows:  </p>\n<pre><code>aside table {\nheight: 100%; }</code></pre>\n\n<p>The full effect of this McBain-inspired design comes when screens are wide enough to display main and aside elements side-by-side. I apply a simple two-column symmetrical grid:</p>\n<pre><code>@media (min-width: 64em) {\n\nbody {\ndisplay: grid;\ngrid-template-columns: 1fr 1fr;\ngap: 1rem; }\n}</code></pre>\n\n<p>Then, I place the main and aside elements using line numbers, with the header spanning the full-width of my layout:</p>\n<pre><code>header {\ngrid-column: 1 / -1; }\n\nmain {\ngrid-column: 1; }\n\naside {\ngrid-column: 2; }</code></pre>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0ec47c78-7fe2-486a-b098-44684d115d4a/issue-11-08-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<h3>Looking Unstructured</h3>\n<p>The bright colours and irregular shapes of blocks in this next design are as unexpected as the jazz which inspired Emmett McBain’s original. While the arrangement of these layout might look unstructured, the code I need to develop it certainly isn’t. In fact, there are just two structural elements, header and main:</p>\n<pre><code>&#60;header&#62;\n  &#60;svg id=\"logo\"&#62;…&#60;/svg&#62;\n  &#60;h1&#62;…&#60;/h1&#62;\n  &#60;p&#62;…&#60;/p&#62;\n  &#60;svg&#62;…&#60;/svg&#62;\n&#60;/header&#62;\n\n&#60;main&#62;\n  &#60;small&#62;…&#60;/small&#62;\n  &#60;h2&#62;…&#60;/h2&#62;\n  &#60;p&#62;…&#60;/p&#62;\n&#60;/main&#62;</code></pre>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6585d08e-e8e6-42e7-a40f-276387dbd1f3/issue-11-09-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<p>I start by applying background and foreground colours, plus a generous amount of padding to allows someone’s eyes to roam around and through spaces in the design:</p>\n<pre><code>body {\npadding: 2rem;\nbackground-color: #fff;\ncolor: #262626; }</code></pre>\n\n<p>Those brightly coloured blocks would dominate the limited space available on a small screen. Instead, I add the same bright colours to my header:</p>\n<pre><code>header {\npadding: 2rem 2rem 4rem;\nbackground-color: #262626; }\n\nheader h1 {\ncolor: #c2ce46; }\n\nheader p {\ncolor: #fc88dc; }</code></pre>\n\n<p>Irregular shapes are an aspect of this design which I want visible at every screen size, so I use a polygon path to clip the header. Only areas inside the clip area remain visible, everything else turns transparent:</p>\n<pre><code>header {\n-webkit-clip-path: polygon(…);\nclip-path: polygon(…); }</code></pre>\n\n<p>Attention to even the smallest details of typography lets people know that every aspect of a design has been carefully considered. A horizontal line in the small element at the start of my main content changes length alongside the text.</p>\n<p>I don’t want to add a presentational horizontal rule to my HTML, and instead opt for a combination of Flexbox and pseudo-elements in my CSS. First, I style the small element’s text:</p>\n<pre><code>main small {\nfont-size: .8em;\nletter-spacing: .15em;\nline-height: .8;\ntext-transform: uppercase; }</code></pre>\n\n<p>Then, I add an :after pseudo-element with a thin bottom border which matches the colour of my text:</p>\n<pre><code>main small:after {\ncontent: \"\";\ndisplay: block;\nmargin-left: .75rem;\nborder-bottom: 1px solid #262626; }</code></pre>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f6f1d050-cb29-47b3-8789-9326b18e0ade/issue-11-10-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<p>Adding flex properties aligns the text and my pseudo-element to the bottom of the small element. By giving the pseudo-element a flex-grow value of 1 allows it to change its width to compliment longer and shorter strings of text:</p>\n<pre><code>main small {\ndisplay: flex;\nalign-items: flex-end; }\n\nmain small:after {\nflex-grow: 1; }</code></pre>\n\n<p>I enjoy surprises, and there’s more to my second-level “Champion de France” headline than meets the eye. </p>\n<p>Almost ten years ago, Dave Rupert released Lettering.js, a jQuery plugin which uses Javascript to wrap individual letters, lines, and words text with span elements. Those separate elements can then be styled in any number of ways. With just one multi-coloured element in this design, I apply the same technique without serving a script:</p>\n<div>\n<pre><code>&#60;h2&#62;Champion &#60;span&#62;d&#60;/span&#62;&#60;span&#62;e&#60;/span&#62; &#60;span&#62;F&#60;/span&#62;&#60;span&#62;r&#60;/span&#62;&#60;span&#62;a&#60;/span&#62;&#60;span&#62;n&#60;/span&#62;&#60;span&#62;c&#60;/span&#62;&#60;span&#62;e&#60;/span&#62;&#60;/h2&#62;</code></pre>\n</div>\n\n<p>Then, I give each selected letter its own colour:</p>\n<pre><code>h2 span:nth-of-type(1) { \ncolor: #c43d56; }\n\nh2 span:nth-of-type(2) {\ncolor: #905dd8; }\n\nh2 span:nth-of-type(3) {\ncolor: #377dab; }</code></pre>\n\n<p>I’ve always viewed the challenge of responsive design as an opportunity to be creative and to make the most of every screen size. The extra space available on medium and large screens allows me to introduce the large, irregularly shaped blocks of color, which makes this design unexpected.</p>\n<p>First, I apply grid properties and an eight-column symmetrical grid to the body element:</p>\n<pre><code>@media (min-width: 48em) {\n\nbody {\ndisplay: grid;\ngrid-template-columns: repeat(8, 1fr); }\n}</code></pre>\n\n<p>Then, I place my header into three of those columns. With the coloured blocks now visible, I change the header’s background colour to a dark grey:</p>\n<pre><code>header {\ngrid-column: 4 / 7;\nbackground-color: #262626; }</code></pre>\n\n<p>Centring content both horizontally and vertically was a challenge before Flexbox, but now aligning and justifying my header content is simple:</p>\n<pre><code>header {\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center; }</code></pre>\n\n<p>I change the colour of my header’s text elements:</p>\n<pre><code>header h1 {\ncolor: #fed36e; }\n\nheader p {\ncolor: #fff; }</code></pre>\n\n<p>Then, I apply negative horizontal margins, so my header overlaps elements close to it:</p>\n<pre><code>header {\nmargin-right: 1.5vw;\nmargin-left: -1.5vw; }</code></pre>\n\n<p>My main element needs no extra styling, and I place it onto my grid using line numbers:</p>\n<pre><code>main {\ngrid-column: 7 / -1; }</code></pre>\n\n<p>Elements needed to develop a design needn’t be in HTML. Pseudo-elements created in CSS can take their place, which keeps HTML free from any presentation. I use a :before pseudo-element applied to the body:</p>\n<pre><code>body:before {\ndisplay: block;\ncontent: \"\"; }</code></pre>\n\n<p>Then, I add a data URI background image which will cover the entire pseudo-element regardless of its size:</p>\n<pre><code>body:before {\nbackground-image: url(\"data:image/svg+xml…\");\nbackground-position: 0 0;\nbackground-repeat: no-repeat;\nbackground-size: cover; }</code></pre>\n\n<p>CSS Grid treats pseudo-elements just like any other, allowing me to place those colourful blocks into my grid using line numbers:</p>\n<pre><code>body:before {\ngrid-column: 1 / 4; }</code></pre>\n\n<p>Whereas developers mostly use media query breakpoints to introduce significant changes to a layout, sometimes, only minor changes are needed to tweak a design. Jeremy Keith calls these moments “tweakpoints.”</p>\n<p>This medium-size McBain-inspired design works well at larger sizes, but I want to tweak its layout and add more detail to the very largest screens. I start by adding four extra columns to my grid:</p>\n<pre><code>@media (min-width: 82em) {\n\nbody {\ngrid-template-columns: repeat(12, 1fr); }\n}</code></pre>\n\n<p>Then I reposition the generated colour blocks, header, and main elements using new line numbers:</p>\n<pre><code>body:before {\ngrid-column: 1 / 8; }\n\nheader {\ngrid-column: 7 / 10; }\n\nmain {\ngrid-column: 9 / -1; }</code></pre>\n\n<p>These elements now overlap, so to prevent them from forming new rows in my grid, I give them all the same grid-row value:</p>\n<pre><code>body:before,\nheader,\nmain {\ngrid-row: 1; }</code></pre>\n\n<p>This tweak to my design adds another block of colour between the header and main. To preserve the semantics of my HTML, I add a pseudo-element and a data URI image before my main content:</p>\n<pre><code>main:before {\ndisplay: block;\ncontent: url(\"data:image/svg+xml…\"); \nfloat: left;\nmargin-right: 2vw;\nwidth: 10vw; }</code></pre>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4df7a6e3-7331-4fc3-9979-cd02c303ecdc/issue-11-11-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<h3>Deconstructing Type-images</h3>\n<p>Early in his career, Emmett McBain’s record cover designs showed he had a flair for typography. He was often playful with type, deconstructing, and rebuilding it to form unexpected shapes. This control over type has never been easy online, but SVG makes almost everything possible.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/111460d7-3456-4374-84cb-b979a33d35e6/issue-11-12-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<p>This next McBain-inspired design relies on SVG and just two structural HTML elements; a header which contains the large type-based graphic, a main element for my content:</p>\n<pre><code>&#60;header&#62;\n  &#60;h1&#62;…&#60;/h1&#62;\n  &#60;p&#62;…&#60;/p&#62;\n  &#60;svg&#62;…&#60;/svg&#62;\n&#60;/header&#62;\n\n&#60;main&#62;\n  &#60;h2&#62;…&#60;h2&#62;\n  &#60;div&#62;…&#60;/div&#62;\n  &#60;svg&#62;…&#60;/svg&#62;\n&#60;/main&#62;</code></pre>\n\n<p>I need very few foundation styles to start developing this design. First, I add background and foreground colours and padding inside my two elements:</p>\n<pre><code>body {\nbackground-color: #fff;\ncolor: #262626; }\n\nheader,\nmain {\npadding: 2rem; }</code></pre>\n\n<p>Second, I define styles for my type which includes both headings and the paragraph of text which follows them: </p>\n<pre><code>h1,\nh2,\nh1 + p {\nletter-spacing: .05em;\nline-height: 1.4;\ntext-transform: uppercase; }</code></pre>\n\n<p>I give my main content a rich purple background which matches the Citroën’s colour in the panel opposite: </p>\n<pre><code>main {\nbackground-color: #814672;\ncolor: #fff; }</code></pre>\n\n<p>This design is dominated by a large graphic that includes a profile of the Citroën DS and a stylized type-image of the words “Champion de France.” The arrangement of its letters would be tricky to accomplish using CSS positioning and transforms, making SVG the perfect choice.</p>\n<p>This SVG contains three groups of paths. The first includes outlines of the words “Champion de:” </p>\n<pre><code>&#60;svg&#62;\n\n&#60;g id=\"champion-de\"&#62;\n  &#60;path&#62;…&#60;/path&#62;\n&#60;/g&#62;\n\n&#60;/svg&#62;</code></pre>\n\n<p>The next group includes paths for the brightly coloured arrangement of letters. I give each letter a unique id attribute to make it possible to style them individually:</p>\n<pre><code>&#60;g id=\"france\"&#62;\n  &#60;path id=\"letter-f\"&#62;…&#60;/path&#62;\n  &#60;path id=\"letter-r\"&#62;…&#60;/path&#62;\n  &#60;path id=\"letter-a\"&#62;…&#60;/path&#62;\n  &#60;path id=\"letter-n\"&#62;…&#60;/path&#62;\n  &#60;path id=\"letter-c\"&#62;…&#60;/path&#62;\n  &#60;path id=\"letter-e\"&#62;…&#60;/path&#62;\n&#60;/g&#62;</code></pre>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3b633c9-9627-4b02-b2ff-26e8124eb520/issue-11-13-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<p>Then, I add class attributes to group of paths which make up the Citroën DS profile. With these attributes in place, I can adjust the car’s colours to complement different colour themes and even change them across media query breakpoints:</p>\n<pre><code>&#60;g id=\"citroen\"&#62;\n  &#60;path class=\"car-paint\"&#62;…&#60;/path&#62;\n  &#60;path class=\"car-tyres\"&#62;…&#60;/path&#62;\n  &#60;path class=\"car-wheels\"&#62;…&#60;/path&#62;\n  &#60;path class=\"car-shadow\"&#62;…&#60;/path&#62;\n  &#60;path class=\"car-lights\"&#62;…&#60;/path&#62;\n  &#60;path class=\"car-stroke\"&#62;…&#60;/path&#62;\n&#60;/g&#62;</code></pre>\n\n<p>Medium-size screens allow me to tweak the positions of my Citroën DS profile and type-image:</p>\n<pre><code>@media (min-width: 48em) {\n\nheader svg {\nmargin-bottom: -6rem;\ntransform: scale(.85) translateY(-4rem) rotate(-20deg); }\n}</code></pre>\n\n<p>The order of these transforms is important, as various combinations of rotate, scale, and translate give subtly different results. Then, I add columns to my main content:</p>\n<pre><code>main div {\ncolumn-width: 14em;\ncolumn-gap: 2rem; }</code></pre>\n\n<p>Until now, this main content comes after my header in the document flow. For larger screens, I want those elements to sit side-by-side, so I apply grid properties and twelve columns to the body:</p>\n<pre><code>@media (min-width: 48em) {\n\nbody {\ndisplay: grid;\ngrid-template-columns: repeat(12, 1fr); }\n}</code></pre>\n\n<p>I place the header and main into my grid using line numbers. The header spans seven columns, while the main content spans only five, producing an asymmetrical layout from a symmetrical grid:</p>\n<pre><code>header {\ngrid-column: 1 / 8; }\n\nmain {\ngrid-column: 8 / -1; }</code></pre>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/70e091b8-d82f-4600-9bf0-2c233c54b85b/issue-11-14-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<h3>Scaling Graphical Text</h3>\n<p>The distinction between SVG and HTML has become blurred, the more I use SVG into my work. SVG is an XML-based format and is entirely at home when it’s incorporated into HTML. This final McBain-inspired design relies on SVG in HTML not just for its striking imagery, but also for text.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bbbcc3a5-8573-45b1-9b93-94daba2a1e4d/issue-11-15-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<p>To develop this striking red and black design, I need four structural HTML elements. A header contains an image of the iconic Citroën DS. The banner division includes a large headline developed using SVG text. The main element includes my running text, and finally an aside for supplementary content:</p>\n<pre><code>&#60;svg&#62;…&#60;/svg&#62;\n\n&#60;header&#62;\n  &#60;svg&#62;…&#60;/svg&#62;\n&#60;/header&#62;\n\n&#60;div id=\"banner\"&#62;\n  &#60;svg&#62;…&#60;/svg&#62;\n&#60;/div&#62;\n\n&#60;main&#62;\n  &#60;div id=\"heading\"&#62;\n    &#60;svg role=\"heading\" aria-level=\"1\"&#62;…&#60;/svg&#62;\n  &#60;/div&#62;\n\n  &#60;div class=\"content\"&#62;\n    &#60;p class=\"dropcap\"&#62;…&#60;/p&#62;\n    &#60;p&#62;…&#60;/p&#62;\n  &#60;/div&#62;\n&#60;/main&#62;\n\n&#60;aside&#62;\n  &#60;small&#62;…&#60;/small&#62;\n  &#60;svg role=\"heading\" aria-level=\"2\"&#62;…&#60;/svg&#62;\n  &#60;p&#62;…&#60;/p&#62;\n  &#60;figure&#62;…&#60;/figure&#62;\n\n  &#60;svg role=\"heading\" aria-level=\"2\"&#62;…&#60;/svg&#62;\n  &#60;p&#62;…&#60;/p&#62;\n&#60;/aside&#62;</code></pre>\n\n<p>I used to think using SVG to render text was as inappropriate as setting text within images but having used SVG more, I realize I was wrong. </p>\n<p>In issue 8, I explained how like HTML text, SVG text is accessible and selectable. It also has the advantage of being infinitely style-able using clipping paths, gradient fills, filters, masks, and strokes.</p>\n<p>The banner division’s headline includes two text elements. The first contains the large word “Champion,” the second contains “de France.” Pairs of x and y coordinates on each tspan element place those words precisely where I want them to develop a solid slab of text: </p>\n<pre><code>&#60;svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 850 360\"&#62;\n\n&#60;title&#62;Champion de France&#60;/title&#62;\n\n&#60;g fill=\"#ff\" fill-rule=\"evenodd\"&#62;\n\n&#60;text&#62;\n  &#60;tspan class=\"title__dropcap\" x=\"0\" y=\"240\"&#62;C&#60;/tspan&#62;\n  &#60;tspan class=\"title\" x=\"180\" y=\"160\"&#62;hampion&#60;/tspan&#62;\n&#60;/text&#62;\n\n&#60;text&#62;\n  &#60;tspan class=\"title__small\" x=\"600\" y=\"260\"&#62;de France&#60;/tspan&#62;\n&#60;/text&#62;\n\n&#60;/g&#62;\n&#60;/svg&#62;</code></pre>\n\n<p>Whether I choose to incorporate this SVG into my HTML or link to it as an external image, I can use CSS to define its style. This headline is a linked image, so I add my styles to the SVG file:</p>\n<pre><code>&#60;svg&#62;\n\n&#60;style type=\"text/css\"&#62;\n&#60;![CDATA[\n\ntext {\ncolor: #fff; }\n\n.title {\nfont-family: Clarendon URW;\nfont-size: 150px; }\n\n.title__dropcap {\nfont-family: Clarendon URW;\nfont-size: 300px;\ntext-transform: lowercase; }\n\n.title__small {\nfont-family: Obviously;\nfont-size: 85px;\ntext-transform: uppercase; }\n\n]]&gt;\n&#60;/style&#62;\n\n&#60;/svg&#62;</code></pre>\n\n<p>I start by adding foundation colour and typography styles. I’ve chosen to indent the start of each new paragraph, so I remove all bottom margins and add a 2ch wide indent to every subsequent paragraph:</p>\n<pre><code>body {\nbackground-color: #a73448;\ncolor: #fff; }\n\n.content p {\nmargin-bottom: 0; }\n\n.content p + p {\ntext-indent: 2ch; }</code></pre>\n\n<p>The dark grey background and red text of my aside element are opposite to those elsewhere in my design. Increasing lightness and saturation makes colours appear more vibrant against dark backgrounds:</p>\n<pre><code>aside {\nbackground-color: #262626;\ncolor: #d33c56; }</code></pre>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/05552ff3-be0e-424d-897a-931c7f992483/issue-11-16-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<p>Medium-size screens allow me to tweak the design of my content to get the most from the extra space available. I use two different multiple-column layout properties. First, specifying two columns of variable widths for my content division. Then, any number of columns which will all have a width of 16em: </p>\n<pre><code>@media (min-width: 48em) {\n\n.content {\ncolumn-count: 2;\ncolumn-gap: 2rem; }\n\naside {\ncolumn-width: 16em;\ncolumn-gap: 2rem; }\n}</code></pre>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d6cdf13d-8709-4f3c-b9e6-b29878550606/issue-11-17-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<p>Most of my styling is visible to people who use even the smallest screens, so developing a large-screen layout involves applying grid properties and twelve columns to the body element:</p>\n<pre><code>@media (min-width: 64em) {\n\nbody {\ndisplay: grid;\ngrid-template-columns: repeat(12, 1fr); }\n}</code></pre>\n\n<p>I place the Citroën logo into the first column:</p>\n<pre><code>body &#62; svg {\ngrid-column: 1; }</code></pre>\n\n<p>Then, the header which contains an image of the iconic DS spans  four columns: </p>\n<pre><code>header {\ngrid-column: 3 / span 4; }</code></pre>\n\n<p>Both the banner division with its stylish SVG headline and my main content’s running text occupy eight columns:</p>\n<pre><code>#banner,\nmain {\ngrid-column: 1 / span 8; }</code></pre>\n\n<p>And finally, the reversed-theme aside element occupies three columns on the right of my design. To ensure this content spans every row from the top to bottom of my layout, I place it using row line numbers:</p>\n<pre><code>aside {\ngrid-column: 10 / -1;\ngrid-row: 1 / 6; }</code></pre>\n\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db84b6b9-0b15-4b5a-80d6-3aecc5119d5e/issue-11-18-inspired-design-decisions-emmett-mcbain.png\" /></p>\n<h4>Read More From The Series</h4>\n<ul>\n<li><a href=\"https://www.smashingmagazine.com/2019/06/inspired-design-decisions-avaunt-magazine/\">Inspired Design Decisions: Avaunt Magazine</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/07/inspired-design-decisions-pressing-matters/\">Inspired Design Decisions: Pressing Matters</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/08/inspired-design-decisions-ernest-journal\">Inspired Design Decisions: Ernest Journal</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/09/inspired-design-decisions-alexey-brodovitch/\">Inspired Design Decisions: Alexey Brodovitch</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2019/10/inspired-design-decisions-bea-feitler/\">Inspired Design Decisions: Bea Feitler</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/03/inspired-design-decisions-neville-brody/\">Inspired Design Decisions: Neville Brody</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/03/inspired-design-decisions-otto-storch/\">Inspired Design Decisions: Otto Storch</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/04/inspired-design-decisions-herb-lubalin/\">Inspired Design Decisions: Herb Lubalin</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/05/inspired-design-decisions-max-huber/\">Inspired Design Decisions: Max Huber</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/06/inspired-design-decisions-giovanni-pintori/\">Inspired Design Decisions: Giovanni Pintori</a></li>\n<li><a href=\"https://www.smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/\">Inspired Design Decisions: Bradbury Thompson</a></li>\n</ul>\n<p><strong>NB:</strong> <em><a href=\"https://www.smashingmagazine.com/membership/\">Smashing members</a>Smashing members have access to a beautifully designed PDF of Andy’s Inspired Design Decisions magazine and full code examples from this article. You can <a href=\"https://stuffandnonsense.co.uk/inspired-design-decisions/shop/\">buy this issue’s PDF and examples</a> as well as every other issue directly from Andy’s website.</em></p>\n","descriptionType":"html","publishedDate":"Tue, 28 Jul 2020 09:30:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/111460d7-3456-4374-84cb-b979a33d35e6/issue-11-12-inspired-design-decisions-emmett-mcbain.png","linkMd5":"6d77beab5e26415895dfcce7df4ea0ba","destWidth":1400,"destHeight":935,"sourceBytes":633157,"destBytes":138634,"author":"hello@smashingmagazine.com (Andrew Clarke)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/111460d7-3456-4374-84cb-b979a33d35e6/issue-11-12-inspired-design-decisions-emmett-mcbain.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58c578c5-f73d-4723-b4ec-faf89f3b68d0/issue-11-01-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn82@2020_4/2020/09/05/07-59-35-925_f2e58e2028206a18.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/939d16b0-b5d5-4b1c-b77a-0e9a1bfb4c48/issue-11-03-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn90@2020_5/2020/09/05/07-59-31-911_301ded403a56f7fe.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/735c8402-7469-4819-b70a-ff1e7057e3e6/issue-11-02-inspired-design-decisions-emmett-mcbain.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58729814-03ea-43da-bbf1-f95450adbdfe/issue-11-04-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn91@2020_3/2020/09/05/07-59-23-843_8c4b0c205d806b45.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ddb0a92d-08f9-467b-b892-45ed76462b65/issue-11-05-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn86@2020_4/2020/09/05/07-59-21-768_9ca04700dd894eaf.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/993259ad-e775-4b66-90a0-273621bf5cdb/issue-11-06-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn62@2020_5/2020/09/05/07-59-39-371_5ce84630050252d9.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d54853ab-8c08-4d74-9d0b-aac4418d0e8d/issue-11-07-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn32@2020_6/2020/09/05/07-59-18-952_6aa2d685ae2d1650.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0ec47c78-7fe2-486a-b098-44684d115d4a/issue-11-08-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn77@2020_2/2020/09/05/07-59-28-535_e29bf4d5d3845141.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6585d08e-e8e6-42e7-a40f-276387dbd1f3/issue-11-09-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn68@2020_3/2020/09/05/07-59-21-317_48740b81d5af0fb1.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f6f1d050-cb29-47b3-8789-9326b18e0ade/issue-11-10-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn20@2020_1/2020/09/05/07-59-35-380_55f1373970a7891e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4df7a6e3-7331-4fc3-9979-cd02c303ecdc/issue-11-11-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn51@2020_5/2020/09/05/07-59-26-901_7d1373ea263e8111.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/111460d7-3456-4374-84cb-b979a33d35e6/issue-11-12-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn45@2020_1/2020/09/05/07-59-32-364_19ff974727ea4ea4.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3b633c9-9627-4b02-b2ff-26e8124eb520/issue-11-13-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn83@2020_1/2020/09/05/07-59-25-588_d7de1efeaa9c0d4f.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/70e091b8-d82f-4600-9bf0-2c233c54b85b/issue-11-14-inspired-design-decisions-emmett-mcbain.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bbbcc3a5-8573-45b1-9b93-94daba2a1e4d/issue-11-15-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn84@2020_6/2020/09/05/07-59-23-602_329f7372524d67b6.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/05552ff3-be0e-424d-897a-931c7f992483/issue-11-16-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn52@2020_3/2020/09/05/07-59-21-580_0c95537e4666ad41.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d6cdf13d-8709-4f3c-b9e6-b29878550606/issue-11-17-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn35@2020_6/2020/09/05/07-59-23-913_59ad360171ddba7e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db84b6b9-0b15-4b5a-80d6-3aecc5119d5e/issue-11-18-inspired-design-decisions-emmett-mcbain.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn100@2020_3/2020/09/05/07-59-24-754_19e5cc5b0b91edf7.webp"},"publishedOrCreatedDate":1599292755759},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Create A Responsive Dashboard With Angular Material And ng2-Charts","link":"https://smashingmagazine.com/2020/07/responsive-dashboard-angular-material-ng2-charts-schematics/","description":"<p>Creating a dashboard from scratch is often pretty complicated. You have to create tools to collect data on items of interest. Once collected this data has to be presented in an easy to understand and meaningful way to your users. It involves intricate planning of what data to include and how to display it effectively. Once you have a plan, implementing the design is a massive task especially since it involves building multiple components.</p>\n<p>With Angular Material and ng2-charts, you can take advantage of schematics to cut down the effort and time you may spend building a dashboard. Angular Material ships with a number of schematics that you could use to generate a dashboard. Similarly, ng2-charts provides schematics for generating multiple chart components. In this article, I’ll illustrate how to use both ng2-charts and Angular Material to set up a dashboard fairly quickly.</p>\n<h3>An Example</h3>\n<p>To illustrate how to build a dashboard, we’ll take the example of an online store selling leather goods like bags, wallets, key holders, and so on. The store owner would like to track information such as where customers come from to their online store, how their products sell, how traffic sources relate to sales, among other things.</p>\n<p>We’ll build a dashboard to display this information and help the store owner analyze it. The dashboard will contain four small summary cards, four different kinds of charts, and a table listing most recent orders made. The four summary cards will display information such as total revenue from sales, average order value, the total number of orders, and number of returning customers. The charts will display the number of units sold for each product, sales by traffic source, online store sessions over time, and sales for the week.   </p>\n<h4>Prerequisites</h4>\n<p>To follow along, you’ll need to have Angular CLI installed. If you do not have it installed, you can find out how to get it at <a href=\"https://cli.angular.io/\">cli.angular.io</a>. If you’re not starting from a pre-existing Angular project, you need to generate one by running <code>ng new &#60;your project name&#62;</code>. For instance, to create an admin panel for the aforementioned store, we’ll run: </p>\n<pre><code>ng new store-admin-panel</code></pre>\n\n<p>Your project also needs to have routes configured for it. If you’re starting from a new app, select <strong>yes</strong> when prompted on whether to add an Angular Routing module during your project setup above.</p>\n<h3>Add Angular Material And Ng2-Charts To Your Project</h3>\n<p>Angular Material ships with various schematics for generating a variety of useful components like address books, trees, tables, navigation, and so on. To add Angular Material to your project, run:</p>\n<pre><code>ng add @angular/material</code></pre>\n\n<p>Pick a theme from the options provided in subsequent prompts. Next, you’ll be prompted to choose whether to add Angular Material typography styles and browser animations. You do not need these and could just respond no. </p>\n<p>Next, you’ll need to install ng2-charts. ng2-charts requires <strong>charts.js</strong> as a dependency. To install ng2-charts run:</p>\n<pre><code>npm install ng2-charts --save</code></pre>\n\n<p>Then install charts.js:</p>\n<pre><code>npm install chart.js --save</code></pre>\n\n<p>To access the charts, add the <code>ChartsModule</code> to the <code>AppModule</code>’s imports.</p>\n<pre><code>import { ChartsModule } from 'ng2-charts';\n\n@NgModule({\n  imports: [\n   …\n   ChartsModule,\n   …\n]\n})</code></pre>\n\n<p>Lastly, install ng2-charts schematics as a dev dependency because they do not ship with ng2-charts by default.</p>\n<pre><code>npm install --save-dev ng2-charts-schematics</code></pre>\n\n<h3>Generating A Navigation Component</h3>\n<p>First off, we’ll need to add a navigation component to help users maneuver through the app comfortably. The navigation should contain links to the dashboard and other pages that will be part of the admin panel. Angular material provides a schematic that generates a navigation component. We’ll name this component <code>nav</code>. Adding a side nav to the application is accomplished by running:</p>\n<pre><code>ng generate @angular/material:navigation nav</code></pre>\n\n<p>To link other routes in the navigation, use the <code>routerLink</code> directive and change the page name in the toolbar depending on what route a user is on. </p>\n<div>\n<pre><code>// nav.component.ts\n...\nmenuItems = ['dashboard', ’sales', 'orders', 'customers', 'products'];</code></pre>\n</div>\n\n<div>\n<pre><code>&#60;!--nav.component.html--&#62;\n...\n&#60;mat-nav-list&#62;\n     &#60;a *ngFor=\"let item of menuItems\" mat-list-item [routerLink]=\"'/'+item\"&#62; {{item | titlecase}} &#60;/a&#62;\n...</code></pre>\n</div>\n\n<p>To see this component, add it to <code>app.component.html</code>. </p>\n<pre><code>&#60;!--app.component.html--&#62;\n&#60;app-nav&#62;&#60;/app-nav&#62;</code></pre>\n\n<p>This is what the <code>NavComponent</code> looks like. </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64525c20-ec36-43bf-80f5-4e7f6b23da65/1-navigation-component.png\" /></p>\n<p>Since the nav will be displayed alongside other components, adding a <code>router-outlet</code> to it would help switch between the other different components. In the <code>nav.component.html</code> template, just after the closing <code>&#60;/mat-toolbar&#62;</code>, replace the <code>&#60;!-- Add Content Here --&#62;</code> comment  with <code>&#60;router-outlet&#62;&#60;/router-outlet&#62;</code>.</p>\n<pre><code>&#60;!--nav.component.html--&#62;\n&#60;mat-sidenav-container&#62;\n   ...\n   &#60;mat-sidenav-content&#62;\n     &#60;mat-toolbar&#62;\n       ...\n     &#60;/mat-toolbar&#62;\n     &#60;router-outlet&#62;&#60;/router-outlet&#62;\n   &#60;/mat-sidenav-content&#62;\n &#60;/mat-sidenav-container&#62;</code></pre>\n\n<p>In the screenshots that follow in this article, this nav component will be omitted to better highlight the dashboard we’ll be generating for the sake of the tutorial. If you’re following along while building this dashboard, the nav will still appear as pictured above in your browser with the dashboard within it. </p>\n<h3>Generate The Dashboard</h3>\n<p>The most important part of the dashboard is its layout. It needs to hold all the components mentioned earlier and be responsive when displayed on different devices. To generate the dashboard layout, you’ll need to run the <code>@angular/material:dashboard</code> schematic. It will generate a responsive dashboard component. Pass the preferred name for your dashboard to the schematic. In this instance, let’s name it <code>dash</code>.</p>\n<pre><code>ng generate @angular/material:dashboard dash</code></pre>\n\n<p>To view the newly generated dashboard within the nav component, add a route for it to the router. </p>\n<div>\n<pre><code>// app-routing.module.ts\nimport { DashComponent } from './dash/dash.component';\n\nconst routes: Routes = [{ path: 'dashboard', component: DashComponent }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})</code></pre>\n</div>\n\n<p>Once done, to see the results, run <code>npm start</code> and head on over to <code>localhost:4200/dashboard</code>. You should see this:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/03b01f0c-2f7b-4057-a66e-d81f966419a8/2-generated-dashboard-component.png\" /></p>\n<p>The schematic generates four cards in the template and displays them in a responsive grid. The Angular Material CDK uses the <code>Layout</code> package to style this responsive card grid. The <code>BreakpointObserver</code> utility of the <code>Layout</code> package assesses media queries and makes UI changes based on them. There are various breakpoints available but within the generated component, only two categories are catered for. The <code>Breakpoints.Handset</code> and other queries that do not match it.  The <code>Layout</code> package specifies <a href=\"https://material.angular.io/cdk/layout/api#BreakpointState\">14 breakpoint states</a> that you can use to customize the responsiveness of your dashboard. </p>\n<pre><code>// dashboard.component.js\n...\ncards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) =&#62; {\n      if (matches) {\n        ...\n      }\n      ...\n    })\n  );</code></pre>\n\n<p>Going back to the dashboard, since four summary cards, four charts, and a table will be on the dashboard, we need nine cards in total. <code>Breakpoints.Handset</code> and <code>Breakpoints.Tablet</code> matches will display in a one-column grid where:</p>\n<ul>\n<li>The four summary cards will span one row. </li>\n<li>The charts will span two rows. </li>\n<li>The table will span four rows. </li>\n</ul>\n<p>Non-<code>Breakpoints.Handset</code> and non-<code>Breakpoints.Tablet</code> matches will display in four columns where:</p>\n<ul>\n<li>The four summary cards will span one row and one column. </li>\n<li>The charts will span two rows and two columns. </li>\n<li>The table will span four rows and four columns. </li>\n</ul>\n<p>It should look something like the screenshot below in non-<code>Breakpoints.Handset</code> and non-<code>Breakpoints.Tablet</code> matches. On <code>Breakpoints.Handset</code> and <code>Breakpoints.Tablet</code> matches, everything will just display in one column.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/858d60fe-4fe2-4b0f-b39d-007a6f79022b/3-dashboard-component-with-additional-cards.png\" /></p>\n<h3>Create A Card Component</h3>\n<p>In the dashboard component, all the cards are generated through iteration. To prevent repetition, when adding all the new components, we’ll create a reusable card component. The card component will accept a title as input and use <code>ng-content</code> to dynamically add the rest of the content. To create the card component, run:</p>\n<pre><code>ng g c card -m app --style css</code></pre>\n\n<p>From the dashboard component template, we’ll just take the markup enclosed within the <code>&#60;mat-card&#62;</code> tag and place it In the card template:</p>\n<div>\n<pre><code>&#60;!--card.component.html--&#62;\n&#60;mat-card class=\"dashboard-card\"&#62;\n   &#60;mat-card-header&#62;\n       &#60;mat-card-title&#62;\n           {{title}}\n           &#60;button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\"&#62;\n               &#60;mat-icon&#62;more_vert&#60;/mat-icon&#62;\n           &#60;/button&#62;\n           &#60;mat-menu #menu=\"matMenu\" xPosition=\"before\"&#62;\n               &#60;button mat-menu-item&#62;Expand&#60;/button&#62;\n               &#60;button mat-menu-item&#62;Remove&#60;/button&#62;\n           &#60;/mat-menu&#62;\n       &#60;/mat-card-title&#62;\n   &#60;/mat-card-header&#62;\n   &#60;mat-card-content class=\"dashboard-card-content\"&#62;\n       &#60;ng-content&#62;&#60;/ng-content&#62;\n   &#60;/mat-card-content&#62;\n&#60;/mat-card&#62;</code></pre>\n</div>\n\n<p>To add the title as input to the card:</p>\n<pre><code>// card.component.ts\nimport { Component, Input } from '@angular/core';\n\n...\n\nexport class CardComponent{\n @Input() title: string;\n\n\n...\n}</code></pre>\n\n<p>To style the card:</p>\n<pre><code>/*card.component.css*/\n.more-button {\n   position: absolute;\n   top: 5px;\n   right: 10px;\n}\n\n.dashboard-card {\n   position: absolute;\n   top: 15px;\n   left: 15px;\n   right: 15px;\n   bottom: 15px;\n}\n\n\n.dashboard-card-content {\n   text-align: center;\n   flex-grow: 1;\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   max-height: 100%;\n   justify-content: center;\n   align-items: stretch;\n}\n\nmat-card {\n   display: flex;\n   flex-direction: column;\n}</code></pre>\n\n<h3>Adding Cards To The Dashboard</h3>\n<p>Since the dashboard elements will be added individually and not through iteration, the dashboard component needs to be modified to account for this. In <code>dashboard.component.ts</code>, remove the <code>cards</code> property and replace it with a <code>cardLayout</code> property instead. The <code>cardLayout</code> variable will define the number of columns for the material grid list and how many rows and columns each of the dashboard cards will span. <code>Breakpoints.Handset</code> and <code>Breakpoints.Tablet</code> query matches will display in 1 column and those that do not match will display in 4 columns. </p>\n<div>\n<pre><code>// dashboard.component.js\n...\n\n\ncardLayout = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n   map(({ matches }) =&#62; {\n     if (matches) {\n       return {\n         columns: 1,\n         miniCard: { cols: 1, rows: 1 },\n         chart: { cols: 1, rows: 2 },\n         table: { cols: 1, rows: 4 },\n       };\n     }\n\n    return {\n       columns: 4,\n       miniCard: { cols: 1, rows: 1 },\n       chart: { cols: 2, rows: 2 },\n       table: { cols: 4, rows: 4 },\n     };\n   })\n );\n\n...</code></pre>\n</div>\n\n<p>In the <code>dash.component.html</code> template, replace the <code>colspan</code> and <code>rowspan</code> values of <code>mat-grid-tile</code> elements and the <code>cols</code> property of the <code>mat-grid-list</code> element.</p>\n<div>\n<pre><code>&#60;!--dash.component.html--&#62;\n&#60;div class=\"grid-container\"&#62;\n &#60;h1 class=\"mat-h1\"&#62;Dashboard&#60;/h1&#62;\n &#60;mat-grid-list cols=\"{{ ( cardLayout | async )?.columns }}\" rowHeight=\"200px\"&#62;\n   &#60;!--Mini Cards--&#62;\n   &#60;mat-grid-tile <em>ngFor=\"let i of [1, 2, 3, 4]\" [colspan]=\"( cardLayout | async )?.miniCard.cols\"\n     [rowspan]=\"( cardLayout | async )?.miniCard.rows\"&#62;\n     &#60;app-card title=\"Card {{i}}\"&#62;&#60;div&#62;Mini Card Content Here&#60;/div&#62;&#60;/app-card&#62;\n   &#60;/mat-grid-tile&#62;\n   &#60;!--Charts--&#62;\n   &#60;mat-grid-tile </em>ngFor=\"let i of [5, 6, 7, 8]\" [colspan]=\"( cardLayout | async )?.chart.cols\"\n     [rowspan]=\"( cardLayout | async )?.chart.rows\"&#62;\n     &#60;app-card title=\"Card {{i}}\"&#62;&#60;div&#62;Chart Content Here&#60;/div&#62;&#60;/app-card&#62;\n   &#60;/mat-grid-tile&#62;\n   &#60;!--Table--&#62;\n   &#60;mat-grid-tile [colspan]=\"( cardLayout | async )?.table.cols\" [rowspan]=\"( cardLayout | async )?.table.rows\"&#62;\n     &#60;app-card title=\"Card 9\"&#62;&#60;div&#62;Table Content Here&#60;/div&#62;&#60;/app-card&#62;\n   &#60;/mat-grid-tile&#62;\n &#60;/mat-grid-list&#62;\n&#60;/div&#62;</code></pre>\n</div>\n\n<p>The dashboard will end up looking exactly like the most recent screenshot linked above.</p>\n<h3>Generating The Charts</h3>\n<p>The four charts that we need for the dashboard are:</p>\n<ul>\n<li>A radar chart of products by unit sold.</li>\n<li>A pie chart of sales by traffic source.</li>\n<li>A bar chart of online store sessions.</li>\n<li>A line chart of sales across the year.</li>\n</ul>\n<p>Similar to creating the dashboard, generating chart components involves running a schematic. Using the ng2-charts schematics, generate the four different charts. We’ll place them in a folder called charts. Run <code>ng generate ng2-charts-schematics:&#60;chart type&#62; &#60;chart name&#62;</code>.  </p>\n<pre><code>ng generate ng2-charts-schematics:radar charts/product-sales-chart\nng generate ng2-charts-schematics:pie charts/sales-traffic-chart\nng generate ng2-charts-schematics:line charts/annual-sales-chart \nng generate ng2-charts-schematics:bar charts/store-sessions-chart</code></pre>\n\n<p>After running these commands, all four chart components are generated and are populated with sample data ready for display. Depending on what data you’d like to show, pick charts that most suit your data visualization needs. For each of the charts generated above, add the <code>chartContainer</code> class to the <code>div</code>s that enclose the <code>canvas</code> element in the chart templates. </p>\n<pre><code>&#60;div class=\"chartContainer\"&#62;\n  &#60;canvas baseChart width=\"400\" height=\"400\"&#62;\n    ...</code></pre>\n\n<p>Next, add this styling to <code>styles.css</code> so that they could be accessible to all the chart components. </p>\n<pre><code>/*styles.css*/\n...\n\n.chartContainer canvas {\n    max-height: 250px;\n    width: auto;\n}\n\n.chartContainer{\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}</code></pre>\n\n\n\n<h3>Adding Data To The Charts</h3>\n<p>The generated chart components come with sample data already plugged in. If you have pre-existing services that provide your own data, you can add this data from them to the chart components. The charts take labels for the x-axis, data or data sets, a chart type, colors, a legend as well as other <a href=\"https://valor-software.com/ng2-charts\">customization options</a>. To provide the data and labels to the charts, create a service that will fetch data from a source of your choice and return it in a form that the charts accept. For instance, the <code>AnnualSalesChartComponent</code> receives its dataset and labels from the <code>SalesService</code>’s <code>getSalesByMonth</code> method which returns an array of sales for each month for the current year. You can <a href=\"https://gist.github.com/zaracooper/4fd1c430f547a247595bf91b6268120c\">find this service here</a> and <a href=\"https://gist.github.com/zaracooper/6e3cdc46290ee5076a8c7b97c5ca52b1\">data it returns here</a>. Inject the service as a private property to the <code>AnnualSalesChartComponent</code> constructor. Call the method that returns the required chart data from the service within the <code>ngOnInit</code> lifecycle hook. </p>\n<div>\n<pre><code>// annual-sales-chart.component.ts\nimport { SalesService } from ’src/app/sales/sales.service';\n\n\n...\n\n\nexport class AnnualSalesChartComponent implements OnInit {\n  public salesChartData: ChartDataSets[] = [\n   { data: [], label: 'Total Sales' },\n ];\n\n public salesChartLabels: Label[] = [];\n  ...\n\n  constructor(private salesService: SalesService) { }\n  ngOnInit() {\n   this.salesService.getSalesByMonth().subscribe({\n     next: salesItems =&#62; {\n       salesItems.forEach(li =&#62; {\n         this.salesChartData[0].data.push(li.revenue);\n         this.salesChartLabels.push(li.month);\n       });\n     },\n    ...\n   });\n }\n}</code></pre>\n</div>\n\n<h3>Adding Charts To The Dashboard</h3>\n<p>The next step involves adding the charts to the dashboard, in <code>dash.component.html</code>. Here’s what that looks like:</p>\n<div>\n<pre><code>&#60;!--dash.component.html--&#62;\n...\n\n&#60;!--Charts--&#62;\n&#60;mat-grid-tile [colspan]=\"( cardLayout | async )?.chart.cols\" [rowspan]=\"( cardLayout | async )?.chart.rows\"&#62;\n   &#60;app-card title=\"Monthly Revenue\"&#62;\n       &#60;app-annual-sale-chart&#62;&#60;/app-annual-sale-chart&#62;\n   &#60;/app-card&#62;\n&#60;/mat-grid-tile&#62;\n&#60;mat-grid-tile [colspan]=\"( cardLayout | async )?.chart.cols\" [rowspan]=\"( cardLayout | async )?.chart.rows\"&#62;\n   &#60;app-card title=\"Product Sales\"&#62;\n       &#60;app-product-sales-chart&#62;&#60;/app-product-sales-chart&#62;\n   &#60;/app-card&#62;\n&#60;/mat-grid-tile&#62;\n&#60;mat-grid-tile [colspan]=\"( cardLayout | async )?.chart.cols\" [rowspan]=\"( cardLayout | async )?.chart.rows\"&#62;\n   &#60;app-card title=\"Sales by Traffic Source\"&#62;\n       &#60;app-sales-traffic-chart&#62;&#60;/app-sales-traffic-chart&#62;\n   &#60;/app-card&#62;\n&#60;/mat-grid-tile&#62;\n&#60;mat-grid-tile [colspan]=\"( cardLayout | async )?.chart.cols\" [rowspan]=\"( cardLayout | async )?.chart.rows\"&#62;\n   &#60;app-card title=\"Online Store Sessions by Traffic Source\"&#62;\n       &#60;app-store-sessions-chart&#62;&#60;/app-store-sessions-chart&#62;\n   &#60;/app-card&#62;\n&#60;/mat-grid-tile&#62;\n\n...</code></pre>\n</div>\n\n<p>This is what the resultant responsive dashboard looks like. </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/727f98e5-fd11-44ee-8e88-31241040a936/4-dashboard-with-charts.png\" /></p>\n<h3>Generating A Table</h3>\n<p>We’ll add an orders table to give the shop owner an overview of the most recent orders placed and their status. To generate the orders table component, run the schematic:</p>\n<pre><code>ng generate @angular/material:table orders-table</code></pre>\n\n<p>This will generate a table component that will look like this. </p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d74e333f-a26f-49ab-92d9-5f203d5f6d76/5-table-generated-with-schematic.png\" /></p>\n<p>Tables with many columns may be difficult to make responsive for handset and tablet views. When adding the table to a card, make it horizontally scrollable so that all the data can be viewed properly and is not obstructed. You can do this by adding the styling below to your table component:</p>\n<div>\n<pre><code>&#60;!--table.component.html--&#62;\n&#60;div class=\"mat-elevation-z8 small-table\"&#62;\n &#60;table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\"&#62;\n   ...</code></pre>\n</div>\n\n<pre><code>/*table.component.css*/\n\n...\n\n.small-table{\n  overflow-x: scroll !important;\n}</code></pre>\n\n<p>To add the table to the dash component:</p>\n<div>\n<pre><code>&#60;!-- dashboard.component.html&#62;\n...\n  &#60;mat-grid-tile [colspan]=\"( cardLayout | async )?.table.cols\" [rowspan]=\"( cardLayout | async )?.table.rows\"&#62;\n     &#60;app-card title=\"Latest Orders\"&#62;\n       &#60;app-orders-table&#62;&#60;/app-orders-table&#62;\n     &#60;/app-card&#62;\n  &#60;/mat-grid-tile&#62;\n...</code></pre>\n</div>\n\n<h3>Adding Data To The Table</h3>\n<p>Like with charts, you can add data to the table in the <code>ngOnInit</code> method from a service. Additionally, you will need to modify your table’s generated data source to consume data from the service. To start off, inject the service in the table’s class constructor. Let’s take the example of a table listing the latest orders for this dashboard. To get data for the table, let’s inject the <code>OrderService</code> in the <code>OrdersTableComponent</code> constructor, change the <code>MatTable</code> type assertion of the table view child, and amend the list of displayed columns to reflect an <a href=\"https://gist.github.com/zaracooper/8f2df77f4e41fb274d7ae1878a737260\">order interface</a>. If you’re interested in the data being added to the table, you can find it <a href=\"https://gist.github.com/zaracooper/50b2a8736bc1268a26e97f49f0e5ba33\">here</a>. The last thing involves getting the total length of the data items available to be used to set the total in the table’s <code>&#60;mat-paginator&#62;</code>.</p>\n<div>\n<pre><code>// orders-table.component.ts\nimport { OrderService } from '../orders.service';\nimport { Order } from '../order';\n...\nexport class OrdersTableComponent implements AfterViewInit, OnInit {\n...\n @ViewChild(MatTable) table: MatTable;\n dataLength: number;\n\n displayedColumns = [\n   \"id\",\n   \"date\",\n   \"name\",\n   \"status\",\n   \"orderTotal\",\n   \"paymentMode\",\n ];\n...\nconstructor(private orderService: OrderService){}\n\nngOnInit() {\n this.datasource = new OrdersTableDataSource(this.orderService);\n this.orderService.getOrderCount().subscribe({\n   next: orderCount =&#62; {\n    this.dataLength = orderCount;\n   },\n   ...\n });\n}\n...\n}</code></pre>\n</div>\n\n<p>Next, we’ll need to modify the <code>OrdersTableDataSource</code> class to accept the <code>OrderService</code> as a parameter in its constructor. We’ll have to modify its <code>connect</code> and <code>destroy</code> methods as well. The <code>connect</code> method connects the data source to the table and updates the table when new data items are emitted from the stream it returns, in this case, an orders array observable. The <code>dataMutations</code> constant combines the first data load, pagination, and sorting events into one stream for the table to consume. Pagination and sorting are handled by the <code>OrderService</code> server-side. So we need to pass the offset and page size from paginator and the active sort field and sort direction of the sort property to the <code>getOrders</code> method of the <code>OrderService</code>. The <code>disconnect</code> method should be used to close any connections made and release resources held up in the connect method.</p>\n<div>\n<pre><code>// orders-table.datasource.ts\n...\nexport class OrdersTableDataSource extends DataSource&#60;Order&#62; {\n paginator: MatPaginator;\n sort: MatSort;\n\n constructor(private orderService: OrderService) {\n   super();\n }\n\n connect(): Observable&#60;Order[]&gt; {\n   const dataMutations = [\n     of('Initial load'),\n     this.paginator.page,\n     this.sort.sortChange\n   ];\n\n   return merge(...dataMutations).pipe(mergeMap(() =&#62; {\n     return this.orderService.getOrders(\n       this.paginator.pageIndex * this.paginator.pageSize,\n       this.paginator.pageSize,\n       this.sort.active,\n       this.sort.direction\n     );\n   }));\n }\n\n disconnect() {} \n}</code></pre>\n</div>\n\n<p>In the orders table template, insert the new columns and bind the <code>length</code> property of <code>&#60;mat-paginator&#62;</code> to the <code>dataLength</code> property. For the status column, use a <code>&#60;mat-chip&#62;</code> element for better visualization of the order status. To have access to <code>&#60;mat-chip&#62;</code>, add the <code>MatChipsModule</code> as an import to <code>AppModule</code>. </p>\n<div>\n<pre><code>&#60;!-- orders-table.component.html --&#62;\n&#60;div class=\"mat-elevation-z8\"&#62;\n &#60;table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\"&#62;\n   &#60;!-- Id Column --&#62;\n   &#60;ng-container matColumnDef=\"id\"&#62;\n     &#60;th mat-header-cell <em>matHeaderCellDef mat-sort-header&#62;Id&#60;/th&#62;\n     &#60;td mat-cell </em>matCellDef=\"let row\"&#62;{{row.id}}&#60;/td&#62;\n   &#60;/ng-container&#62;\n\n   &#60;!-- Date Column --&#62;\n   &#60;ng-container matColumnDef=\"date\"&#62;\n     &#60;th mat-header-cell <em>matHeaderCellDef mat-sort-header&#62;Date&#60;/th&#62;\n     &#60;td mat-cell </em>matCellDef=\"let row\"&#62;{{row.date | date }}&#60;/td&#62;\n   &#60;/ng-container&#62;\n\n   &#60;!-- Name Column --&#62;\n   &#60;ng-container matColumnDef=\"name\"&#62;\n     &#60;th mat-header-cell <em>matHeaderCellDef mat-sort-header&#62;Name&#60;/th&#62;\n     &#60;td mat-cell </em>matCellDef=\"let row\"&#62;{{row.name}}&#60;/td&#62;\n   &#60;/ng-container&#62;\n\n   &#60;!-- Order Total Column --&#62;\n   &#60;ng-container matColumnDef=\"orderTotal\"&#62;\n     &#60;th mat-header-cell <em>matHeaderCellDef mat-sort-header&#62;Order Total&#60;/th&#62;\n     &#60;td mat-cell </em>matCellDef=\"let row\"&#62;{{row.orderTotal | currency}}&#60;/td&#62;\n   &#60;/ng-container&#62;\n\n   &#60;!-- Payment Mode Column --&#62;\n   &#60;ng-container matColumnDef=\"paymentMode\"&#62;\n     &#60;th mat-header-cell <em>matHeaderCellDef mat-sort-header&#62;Payment Mode&#60;/th&#62;\n     &#60;td mat-cell </em>matCellDef=\"let row\"&#62;{{row.paymentMode}}&#60;/td&#62;\n   &#60;/ng-container&#62;\n\n   &#60;!-- Status Column --&#62;\n   &#60;ng-container matColumnDef=\"status\"&#62;\n     &#60;th mat-header-cell <em>matHeaderCellDef mat-sort-header&#62;Status&#60;/th&#62;\n     &#60;td mat-cell </em>matCellDef=\"let row\"&#62;\n       &#60;mat-chip-list&#62;\n         &#60;mat-chip color=\"{{ row.status == 'delivered' ? 'primary' : ( row.status == ’shipped' ? 'accent' : 'warn' ) }}\" selected&#62;\n           {{row.status}}\n         &#60;/mat-chip&#62;\n       &#60;/mat-chip-list&#62;\n     &#60;/td&#62;\n   &#60;/ng-container&#62;\n\n   &#60;tr mat-header-row <em>matHeaderRowDef=\"displayedColumns\"&#62;&#60;/tr&#62;\n   &#60;tr mat-row </em>matRowDef=\"let row; columns: displayedColumns;\"&#62;&#60;/tr&#62;\n &#60;/table&#62;\n\n &#60;mat-paginator #paginator [length]=\"dataLength\" [pageIndex]=\"0\" [pageSize]=\"5\" [pageSizeOptions]=\"[5, 10, 15, 20]\"&#62;\n &#60;/mat-paginator&#62;\n&#60;/div&#62;</code></pre>\n</div>\n\n<p>Once data has been added to the table, this is what the dashboard will look like:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dc091412-fb24-4cbe-9112-15042dc44619/6-dashboard-with-table-and-charts.png\" /></p>\n<h3>Creating A Mini Card Component</h3>\n<p>All that’s left to complete the dashboard is to populate the four small cards that sit at the top. Having smaller summary cards as part of the dashboard makes it easy to highlight brief pieces of information that do not need whole charts or tables. In this example, the four mini cards will display total sales, average order value, the total number of orders, and the number of returning customers that visited the store for the day. This is just an example. These mini cards cannot be generated like with the navigation, dashboard layout, charts, and the table. They have no schematics. Below we’ll briefly go through how to create them. Although we’re going to add data specific to the example, you can add whatever you want to them or decide to do away with them altogether. To start off, generate the <code>mini-card</code> component, run:</p>\n<pre><code>ng g c mini-card -m app --style css</code></pre>\n\n<p>You can find the template for the component linked <a href=\"https://gist.github.com/zaracooper/0da55032826780469cfead865bbc7e40\">here</a> and its styling <a href=\"https://gist.github.com/zaracooper/a98bfd68663b6184dc29534818716c4e\">here</a>. This component has eight input properties that you can find out how to add <a href=\"https://gist.github.com/zaracooper/c402daa3510035a5a5a83eb31a9c5e48\">here</a>. To get data to the mini card components, inject the service that provides data to them in the <code>DashComponent</code> constructor. Assign data received from the service to a property of the <code>DashComponent</code>. In this instance, we’ll get data from the <code>StoreSummaryService</code> and assign it to the <code>miniCardData</code> property. Here’s how:</p>\n<div>\n<pre><code>// dash.component.ts\nexport class DashComponent implements OnInit{\n...\n miniCardData: StoreSummary[];\n\n constructor(private breakpointObserver: BreakpointObserver, private summaryService: StoreSummaryService) {}\n\n ngOnInit() {\n   this.summaryService.getStoreSummary().subscribe({\n     next: summaryData =&#62; {\n       this.miniCardData = summaryData;\n     }\n   });\n } \n}</code></pre>\n</div>\n\n<p>To add the <code>mini-cards</code> to the dash component and have them populated with data from the service:</p>\n<div>\n<pre><code>&#60;!--dash.component.html--&#62;\n...\n\n&#60;!--Mini Cards--&#62;\n   &#60;mat-grid-tile *ngFor=\"let mc of miniCardData\" [colspan]=\"( cardLayout | async )?.miniCard.cols\"\n     [rowspan]=\"( cardLayout | async )?.miniCard.rows\"&#62;\n     &#60;app-mini-card [title]=\"mc.title\" [textValue]=\"mc.textValue\" [value]=\"mc.value\" [color]=\"mc.color\" [percentValue]=\"mc.percentValue\"&#62;&#60;/app-mini-card&#62;\n   &#60;/mat-grid-tile&#62;\n\n...</code></pre>\n</div>\n\n<p>The screenshot below is what the dashboard will look like with the mini cards populated.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/81b662c2-2d6c-4869-b235-2410e6b7188c/7-dashboard-with-charts-tables-mini-cards.png\" /></p>\n<h3>Putting All Together</h3>\n<p>In the end, the dashboard component template should contain:</p>\n<div>\n<pre><code>&#60;!-- dashboard.component.html --&#62;\n&#60;div class=\"grid-container\"&#62;\n &#60;h1 class=\"mat-h1\"&#62;Dashboard&#60;/h1&#62;\n &#60;mat-grid-list cols=\"{{ ( cardLayout | async )?.columns }}\" rowHeight=\"200px\"&#62;\n   &#60;!--Mini Cards--&#62;\n   &#60;mat-grid-tile *ngFor=\"let mc of miniCardData\" [colspan]=\"( cardLayout | async )?.miniCard.cols\"\n     [rowspan]=\"( cardLayout | async )?.miniCard.rows\"&#62;\n     &#60;app-mini-card [icon]=\"mc.icon\" [title]=\"mc.title\" [value]=\"mc.value\" [color]=\"mc.color\" [isIncrease]=\"mc.isIncrease\" duration=\"since last month\" [percentValue]=\"mc.percentValue\" [isCurrency]=\"mc. isCurrency\"&#62;&#60;/app-mini-card&#62;\n   &#60;/mat-grid-tile&#62;\n   &#60;!--Charts--&#62;\n   &#60;mat-grid-tile [colspan]=\"( cardLayout | async )?.chart.cols\" [rowspan]=\"( cardLayout | async )?.chart.rows\"&#62;\n     &#60;app-card title=\"Monthly Revenue\"&#62;\n       &#60;app-annual-sale-chart&#62;&#60;/app-annual-sale-chart&#62;\n     &#60;/app-card&#62;\n   &#60;/mat-grid-tile&#62;\n   &#60;mat-grid-tile [colspan]=\"( cardLayout | async )?.chart.cols\" [rowspan]=\"( cardLayout | async )?.chart.rows\"&#62;\n     &#60;app-card title=\"Product Sales\"&#62;\n       &#60;app-product-sales-chart&#62;&#60;/app-product-sales-chart&#62;\n     &#60;/app-card&#62;\n   &#60;/mat-grid-tile&#62;\n   &#60;mat-grid-tile [colspan]=\"( cardLayout | async )?.chart.cols\" [rowspan]=\"( cardLayout | async )?.chart.rows\"&#62;\n     &#60;app-card title=\"Sales by Traffic Source\"&#62;\n       &#60;app-sales-traffic-chart&#62;&#60;/app-sales-traffic-chart&#62;\n     &#60;/app-card&#62;\n   &#60;/mat-grid-tile&#62;\n   &#60;mat-grid-tile [colspan]=\"( cardLayout | async )?.chart.cols\" [rowspan]=\"( cardLayout | async )?.chart.rows\"&#62;\n     &#60;app-card title=\"Online Store Sessions by Traffic Source\"&#62;\n       &#60;app-store-sessions-chart&#62;&#60;/app-store-sessions-chart&#62;\n     &#60;/app-card&#62;\n   &#60;/mat-grid-tile&#62;\n   &#60;!--Table--&#62;\n   &#60;mat-grid-tile [colspan]=\"( cardLayout | async )?.table.cols\" [rowspan]=\"( cardLayout | async )?.table.rows\"&#62;\n     &#60;app-card title=\"Latest Orders\"&#62;\n       &#60;app-orders-table&#62;&#60;/app-orders-table&#62;\n     &#60;/app-card&#62;\n   &#60;/mat-grid-tile&#62;\n &#60;/mat-grid-list&#62;\n&#60;/div&#62;</code></pre>\n</div>\n\n<p>Here’s what the resultant dashboard contains.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b3d35898-bfac-4916-b78f-218411cc5184/8-completed-dashboard.png\" /></p>\n<h3>Conclusion</h3>\n<p>Creating dashboards involves a fair amount of work and planning. A way to make building them faster is to use the various schematics provided by Angular Material and ng2-charts. With these schematics, running a command will generate a wholly complete component and can result in having a dashboard up and running fairly quickly. This leaves you a lot more time to focus on creating data services and adding them to your dashboard components.</p>\n<p>If you want to learn more about some of the schematics provided by Angular Material, visit <a href=\"https://material.angular.io/guide/schematics\">material.angular.io</a>, and for those provided by ng2-charts, visit <a href=\"https://valor-software.com/ng2-charts/#schematics\">their site linked here</a>. </p>\n","descriptionType":"html","publishedDate":"Mon, 27 Jul 2020 10:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dd58cbbe-3363-4651-bdbd-2a93841fd565/responsive-dashboard-angular-material-ng2-charts-schematics.png","linkMd5":"49147f5e0fdeef5d08e1f0588727e911","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn52@2020_5/2020/09/05/07-59-16-741_dd050be32401173a.webp","destWidth":1201,"destHeight":631,"sourceBytes":244410,"destBytes":56284,"author":"hello@smashingmagazine.com (Zara Cooper)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dd58cbbe-3363-4651-bdbd-2a93841fd565/responsive-dashboard-angular-material-ng2-charts-schematics.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64525c20-ec36-43bf-80f5-4e7f6b23da65/1-navigation-component.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn60@2020_2/2020/09/05/07-59-23-274_e4fbaa6df7166925.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/03b01f0c-2f7b-4057-a66e-d81f966419a8/2-generated-dashboard-component.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn8@2020_1/2020/09/05/07-59-36-183_d733fa5c2596662a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/858d60fe-4fe2-4b0f-b39d-007a6f79022b/3-dashboard-component-with-additional-cards.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn14@2020_6/2020/09/05/07-59-31-358_095ea2c7939787c7.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/727f98e5-fd11-44ee-8e88-31241040a936/4-dashboard-with-charts.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn92@2020_3/2020/09/05/07-59-19-471_9aa895f87ee01c1b.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d74e333f-a26f-49ab-92d9-5f203d5f6d76/5-table-generated-with-schematic.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn69@2020_6/2020/09/05/07-59-35-006_2ce9a5714c759cb0.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dc091412-fb24-4cbe-9112-15042dc44619/6-dashboard-with-table-and-charts.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/81b662c2-2d6c-4869-b235-2410e6b7188c/7-dashboard-with-charts-tables-mini-cards.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn28@2020_4/2020/09/05/07-59-36-631_4aaa2024f5e74da7.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b3d35898-bfac-4916-b78f-218411cc5184/8-completed-dashboard.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn79@2020_3/2020/09/05/07-59-21-392_fd74f4bba4a32552.webp"},"publishedOrCreatedDate":1599292755755},{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","title":"Creating A Static Blog With Sapper And Strapi","link":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","description":"<p>In this tutorial, we will build a statically generated minimal blog with Sapper, a Svelte-based progressive JavaScript framework, for our front end, and then use Strapi, an open-source headless content management system (CMS), for the back end of our application. This tutorial is aimed at intermediate front-end developers, specifically those who want the versatility of a headless CMS, like Strapi, as well as the minimal structure of a JavaScript framework, like Sapper. Feel free to try out the <a href=\"https://sapper-minimal-blog.netlify.app/\">demo</a> or check out the <a href=\"https://github.com/malgamves/strapi-starter-minimal-sapper-blog\">source code</a> on GitHub.</p>\n<p>To go through the article smoothy, you will need the LTS version of <a href=\"https://nodejs.org/en/download/\">Node.js</a> and either <a href=\"https://yarnpkg.com/getting-started/install\">Yarn</a> or <a href=\"https://www.npmjs.com/get-npm\">npm</a> installed on your device beforehand. It’s also worth mentioning that you will need to have a basic understanding of JavaScript and GraphQL queries.</p>\n<p>Before getting started, let’s get some definitions out of the way. A static-site generator is a tool that generates static websites, and a static website can be defined as a website that is sourced from purely static HTML files. For an overview of your options for static-site generators today, check out “<a href=\"https://strapi.io/blog/top-10-static-site-generators-in-2020\">Top 10 Static Site Generators in 2020</a>”.</p>\n<p>A <strong>headless CMS</strong>, on the other hand, is a CMS accessible via an API. Unlike the traditional CMS’ of the past, a headless CMS is front-end agnostic and doesn’t tie you to a single programming language or platform. Strapi’s article “<a href=\"https://strapi.io/blog/frontend-developers-headless-cms\">Why Frontend Developers Should Use a Headless CMS</a>” is good resource to understand the usefulness of a headless CMS.</p>\n<p>Static-site generators, like headless CMS’, are quickly gaining mainstream appeal in the front-end web development community. Both pieces of technology bring with them a much lower barrier to entry, flexibility, and a generally better developer experience. We’ll see all this and more as we build our blog.</p>\n<p>You might be wondering, “<strong>Why should I use this</strong> instead of the alternatives?” Sapper is based on Svelte, which is known for its <a href=\"https://rawgit.com/krausest/js-framework-benchmark/master/webdriver-ts-results/table.html\">speed</a> and relatively small bundle size. In a world where performance plays a huge role in determining an effective user experience, we want to optimize for that. Developers today are spoiled for choice when it comes to front-end frameworks — if we want to optimize for speed, performance, and developer experience (like I do in this project), then Sapper is a solid choice!</p>\n<p>So, let’s get started building our minimal blog, starting with our Sapper front end.</p>\n<h3>Sapper Front End</h3>\n<p>Our front end is built with Sapper, a framework for building extremely high-performance web apps using Svelte. Sapper, which is short for “Svelte app maker”, enables developers to export pages as a static website, which we will be doing today. Svelte has a very opinionated way of scaffolding projects, using <a href=\"https://github.com/Rich-Harris/degit\">Degit</a>.</p>\n<blockquote>“Degit makes copies of Git repositories and fetches the latest commit in the repository. This is a more efficient approach than using <code>git clone</code>, because we’re not downloading the entire Git history.”</blockquote>\n\n<p>First, install Degit by running <code>npm install -g degit</code> in your command-line interface (CLI).</p>\n<p>Next up, run the following commands in the CLI to set up our project.</p>\n<pre><code>npx degit \"sveltejs/sapper-template#rollup\" frontend\n# or: npx degit \"sveltejs/sapper-template#webpack\" frontend\ncd frontend\nnpm install\nnpm run dev\n</code></pre>\n\n<p><strong>Note</strong>: <em>We have the option of using either Rollup or Webpack to bundle our project. For this tutorial, we will be using <a href=\"https://rollupjs.org/guide/en/\">Rollup</a>.</em></p>\n<p>These commands scaffold a new project in the <code>frontend</code> directory, install its dependencies, and start a server on <code>localhost</code>.</p>\n<p>If you’re new to Sapper, the directory structure will need some explaining.</p>\n<h4>Sapper’s App Structure</h4>\n<p>If you look in the project directory, you’ll see this:</p>\n<pre><code>├ package.json\n├ src\n│ ├ routes\n│ │ ├ # your routes here\n│ │ ├ _error.svelte\n│ │ └ index.svelte\n│ ├ client.js\n│ ├ server.js\n│ ├ service-worker.js\n│ └ template.html\n├ static\n│ ├ # your files here\n└ rollup.config.js / webpack.config.js\n</code></pre>\n\n<p><strong>Note</strong>: <em>When you first run Sapper, it will create an additional <code>__sapper__</code> directory containing generated files. You’ll also notice a few extra files and a <code>cypress</code> directory — we don’t need to worry about those for this article.</em></p>\n<p>You will see a few files and folders. Besides those already mentioned above, these are some you can expect:</p>\n<ul>\n<li><code>package.json</code><br />This file contains your app’s dependencies and defines a number of scripts.</li>\n<li><code>src</code><br />This contains the three <strong>entry points</strong> for your app: <code>src/client.js</code>, <code>src/server.js</code>, and (optionally) <code>src/service-worker.js</code>, along with a <code>src/template.html</code> file.</li>\n<li><code>src/routes</code><br />This is the meat of the app (that is, the pages and server routes).</li>\n<li><code>static</code><br />This is a place to put any files that your app uses: fonts, images, and so on. For example, <code>static/favicon.png</code> will be served as <code>/favicon.png</code>.</li>\n<li><code>rollup.config.js</code><br />We’re using Rollup to bundle our app. You probably won’t need to change its configuration, but if you want to, this is where you would do it.</li>\n</ul>\n<p>The directory structure is pretty minimal for the functionality that the project provides. Now that we have an idea of what our project directory looks like and what each file and folder does, we can run our application with <code>npm run dev</code>.</p>\n<p>You should see the Svelte-eque starter home page of our blog.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af08fc9a-9b96-4773-97bf-bbed6703c5cb/1-static-blog-sapper-strapi.png\" /></p>\n<p>This looks really good! Now that our front end is set up and working, we can move on to the back end of the application, where we will set up Strapi.</p>\n<h3>Strapi Back End</h3>\n<p>Strapi is both headless and self-hosted, which means we have control over our content and where it’s hosted — no server, language, or vendor lock-in to worry about, and we can keep our content private. Strapi is built with JavaScript and has a content editor built with React. We’ll use this content editor to create some content models and store actual content that we can query later on. But before we can do all of this, we have to set it up by following the instructions below.</p>\n<h4>1. Install Strapi and Create New Project</h4>\n<ul>\n<li>Open your CLI.</li>\n<li>Run <code>yarn create strapi-app backend --quickstart</code>. This will create a new folder named <code>backend</code> and build the React admin UI.</li>\n</ul>\n<h4>2. Create Administrator</h4>\n<ul>\n<li>Navigate to <a href=\"http://localhost:1337/admin\">http://localhost:1337/admin</a>.</li>\n<li>Complete the form to create the first user, the administrator.</li>\n<li>Click “Ready to start”.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a254e4a8-5a02-44a1-a9e8-318639ea7a5f/2-static-blog-sapper-strapi.png\" /></p>\n<h3>3. Create Blog Collection Type</h3>\n<ul>\n<li>Navigate to “Content-Types Builder”, under “Plugins” in the left-hand menu.</li>\n<li>Click the “+ Create new collection type” link.</li>\n<li>Name it “blog”.</li>\n<li>Click “Continue”.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c1ba238c-9467-4f96-ba42-f7cb3b535bdc/3-static-blog-sapper-strapi.png\" /></p>\n<ul>\n<li>Add a “Text field” (short text), and name it “Title”.</li>\n<li>Click the “+ Add another field” button.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/432133c2-e962-414b-9ae4-faaa55a098ca/4-static-blog-sapper-strapi.png\" /></p>\n<ul>\n<li>Add a “Text field” (long text), and name it “Description”.</li>\n<li>Click the “+ Add another field” button.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca8fdf58-b710-4474-8ab5-1e15d30421ad/5-static-blog-sapper-strapi.png\" /></p>\n<ul>\n<li>Add a “Date field” of the type “date”, and name it “Published”.</li>\n<li>Click the “+ Add another field” button.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/785c90a0-a4de-481c-b8a9-f098a5ce0bdb/6-static-blog-sapper-strapi.png\" /></p>\n<ul>\n<li>Add a “Rich Text field”, and name it “Body”.</li>\n<li>Click the “+ Add another field” button.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1404583e-270a-411e-9a57-7390b9b56639/7-static-blog-sapper-strapi.png\" /></p>\n<ul>\n<li>Add another “Text field” (short text), and name it “Slug”.</li>\n<li>Click the “+ Add another field” button.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bfc2e239-1878-4a44-80e3-670809c7c076/8-static-blog-sapper-strapi.png\" /></p>\n<ul>\n<li>Add a “Relation field”.</li>\n<li>On the right side of the relation, click on the arrow and select “User”.</li>\n<li>On the left side of the relation, change the field name to “author”.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7f17b758-ea2b-4e34-a5e9-7246b9d8ae3c/9-static-blog-sapper-strapi.png\" /></p>\n<ul>\n<li>Click the “Finish” button.</li>\n<li>Click the “Save” button, and wait for Strapi to restart.</li>\n</ul>\n<p>When it’s finished, your collection type should look like this:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fe1a67c4-b7f8-4f88-a938-1d1f08c423d9/10-static-blog-sapper-strapi.png\" /></p>\n<h4>4. Add a New User to “Users” Collection Type</h4>\n<ul>\n<li>Navigate to “Users” under “Collection Types” in the left-hand menu.</li>\n<li>Click “Add new user”.</li>\n<li>Enter your desired “Email”, “Username”, and “Password”, and toggle the “Confirmed” button.</li>\n<li>Click “Save”.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6c9bd6c2-4055-481d-85ef-14f53fb73215/11-static-blog-sapper-strapi.png\" /></p>\n<p>Now we have a new user who we can attribute articles to when adding articles to our “Blog” collection type.</p>\n<h4>5. Add Content to “Blogs” Collection Type</h4>\n<ul>\n<li>Navigate to “Blogs” under “Collection Types” in the left-hand menu.</li>\n<li>Click “Add new blog”.</li>\n<li>Fill in the information in the fields specified (you have the option to select the user whom you just created as an author).</li>\n<li>Click “Save”.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/72d0c184-ea88-45b2-a12c-604d0f3bb398/12-static-blog-sapper-strapi.png\" /></p>\n<h4>6. Set Roles and Permissions</h4>\n<ul>\n<li>Navigate to “Roles and Permissions” under “Plugins” in the left-hand menu.</li>\n<li>Click the “Public” role.</li>\n<li>Scroll down under “Permissions”, and find “Blogs”.</li>\n<li>Tick the boxes next to “find” and “findone”.</li>\n<li>Click “Save”.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/84ad18eb-c81d-4b46-a51f-4f54b00b1ffa/13-static-blog-sapper-strapi.png\" /></p>\n<h4>7. Send Requests to the Collection Types API</h4>\n<p>Navigate to <a href=\"https://localhost:1337/Blogs\">https://localhost:1337/Blogs</a> to query your data.</p>\n<p>You should get back some JSON data containing the content that we just added. For this tutorial, however, we will be using Strapi’s GraphQL API.</p>\n<p>To enable it:</p>\n<ul>\n<li>Open your CLI.</li>\n<li>Run <code>cd backend</code> to navigate to <code>./backend</code>.</li>\n<li>Run <code>yarn strapi install graphql</code> to install the GraphQL plugin.</li>\n</ul>\n<p>Alternatively, you can do this:</p>\n<ul>\n<li>In the admin UI, navigate to “Marketplace” under “General” in the left-hand menu.</li>\n<li>Click “Download” on the GraphQL card.</li>\n<li>Wait for Strapi to restart.</li>\n</ul>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1b33dcfb-c13b-46f7-9e72-9f4af263519f/14-static-blog-sapper-strapi.png\" /></p>\n<p>When the GraphQL plugin is installed and Strapi is back up and running, we can test queries in the <a href=\"https://localhost:1337/graphql\">GraphQL playground</a>.</p>\n<p>That is all for our back-end setup. All that’s left for us to do is consume the GraphQL API and render all of this beautiful content.</p>\n<h3>Piecing Together Both Ends</h3>\n<p>We’ve just queried our Strapi back end and gotten back some data. All we have to do now is set up our front end to render the content that we get from Strapi via the GraphQL API. Because we are using the Strapi GraphQL, we will have to install the Svelte Apollo client and a few other packages to make sure everything works properly.</p>\n<h3>Installing Packages</h3>\n<ul>\n<li>Open the CLI, and navigate to <code>./frontend</code>.</li>\n<li>Run <code>npm i --save apollo-boost graphql svelte-apollo moment</code>.</li>\n</ul>\n<blockquote><a href=\"https://momentjs.com/\">Moment.js</a> helps us to parse, validate, manipulate, and display dates and times in JavaScript.</blockquote>\n\n<p>The packages are now installed, which means we are able to make GraphQL queries in our Svelte app. The blog we’re building will have three pages: “home”, “about” and “articles”. All of our blog posts from Strapi will be displayed on the “articles” page, giving users access to each article. If we think about how that would look, our “articles” page’s route will be <code>/articles</code>, and then each article’s route will be <code>/articles/:slug</code>, where slug is what we enter in the “Slug” field when adding the content in the admin UI.</p>\n<p>This is important to understand because we will tailor our Svelte app to work in the same way.</p>\n<p>In<code>./frontend/src/routes</code>, you will notice a folder named “blog”. We don’t need this folder in this tutorial, so you can delete it. Doing so will break the app, but don’t worry: It’ll be back up and running once we make our “articles” page, which we’ll do now.</p>\n<ul>\n<li>Navigate to<code>./frontend/src/routes</code>.</li>\n<li>Create a folder named “articles”.</li>\n<li>In<code>./frontend/src/routes/articles</code>, create a file named <code>index.svelte</code>, and paste the following code in it.</li>\n<li>When pasting, be sure to replace <code>&#60;Your Strapi GraphQL Endpoint&#62;</code> with your actual Strapi GraphQL endpoint. For your local version, this will usually be <code>https://localhost:1337/graphql</code>.</li>\n</ul>\n<div><pre><code>&#60;script context=\"module\"&#62;\n        import ApolloClient, { gql } from 'apollo-boost';<br />        import moment from 'moment';\n\n        const blogQuery = gql<code>query Blogs {  \n                blogs {\n                        id\n                        Title\n                        Description\n                        Published\n                        Body\n                        author {\n                                username\n                        }\n                        Slug\n                }\n        }</code>;\n        export async function preload({params, query}) {\n                const client = new ApolloClient({ \n                        uri: '&#60;Your Strapi GraphQL Endpoint&#62;',\n                        fetch: this.fetch\n                         });\n                const results = await client.query({\n                        query: blogQuery\n                })\n                return {posts: results.data.blogs}\n        }\n&#60;/script&#62;\n\n&#60;script&#62;\n        export let posts;\n&#60;/script&#62;\n\n&#60;style&#62;\n        ul, p {\n                margin: 0 0 1em 0;\n                line-height: 1.5;\n        }\n        .main-title {\n                font-size: 25px;\n        }\n&#60;/style&#62;\n\n&#60;svelte:head&#62;\n        &#60;title&#62;articles&#60;/title&#62;\n&#60;/svelte:head&#62;\n\n&#60;h1&#62;recent posts&#60;/h1&#62;\n\n&#60;ul&#62;\n{#each posts as post}\n    &#60;li&#62;\n          &#60;a class=\"main-title\" rel='prefetch' href='articles/{post.Slug}'&#62;\n            {post.Title}\n          &#60;/a&#62;\n    &#60;/li&#62;\n    &#60;p&#62; \n  {moment().to(post.Published, \"DD-MM-YYYY\")} ago by {post.author.username} \n    &#60;/p&#62;\n{/each}\n&#60;/ul&#62;\n</code></pre>\n</div>\n\n<p>This file represents our <code>/articles</code> route. In the code above, we’ve imported a few packages and then used Apollo Client to make a query: <code>blogQuery</code>. We then stored our query response in a variable, <code>results</code>, and used the <code>preload()</code> function to process the data needed on our page. The function then returns <code>posts</code>, a variable with the parsed query result.</p>\n<p>We’ve used Svelte’s <code>#each</code> block to loop through the data from Strapi, displaying the title, date of publication, and author. Our <code>&#60;a&#62;</code> tag, when clicked, goes to a page defined by the slug that we entered for our post in Strapi’s admin UI. This means that when the link is clicked, we open up a page for a particular article, and the slug is used to identify that article.</p>\n<p>For our <code>/articles/:slug</code> route, create a file named <code>[slug].svelte</code>, in <code>./src/routes/articles</code>, and paste the following code:</p>\n<div><pre><code>&#60;script context=\"module\"&#62;\n        import ApolloClient, { gql } from 'apollo-boost';<br />        import moment from 'moment';\n\n        const blogQuery = gql<code>query Blogs($Slug: String!) {\n                blogs: blogs(where: { Slug: $Slug }) {\n                        id\n                        Title\n                        Description\n                        Published\n                        Body\n                        author {\n                                username\n                        }\n                        Slug\n                }\n                }</code>;\n        export async function preload({params, query}) {\n                const client = new ApolloClient({ \n                        uri: '&#60;Your Strapi GraphQL Endpoint&#62;',\n                        fetch: this.fetch\n                         });\n                const results = await client.query({\n                        query: blogQuery,\n                        variables: {\"Slug\" : params.slug} \n                })\n                return {post: results.data.blogs}\n        }\n&#60;/script&#62;\n\n&#60;script&#62;\n        export let post;\n&#60;/script&#62;\n\n&#60;style&#62;\n        .content :global(h2) {\n                font-size: 1.4em;\n                font-weight: 500;\n        }\n        .content :global(pre) {\n                background-color: #f9f9f9;\n                box-shadow: inset 1px 1px 5px rgba(0,0,0,0.05);\n                padding: 0.5em;\n                border-radius: 2px;\n                overflow-x: auto;\n        }\n        .content :global(pre) :global(code) {\n                background-color: transparent;\n                padding: 0;\n        }\n        .content :global(ul) {\n                line-height: 1.5;\n        }\n        .content :global(li) {\n                margin: 0 0 0.5em 0;\n        }\n&#60;/style&#62;\n\n&#60;svelte:head&#62;\n        &#60;title&#62;an amazing article&#60;/title&#62;\n&#60;/svelte:head&#62;\n\n{#each post as post}\n                &#60;h2&#62;{post.Title}&#60;/h2&#62;\n                &#60;h3&#62;{moment().to(post.Published)} by {post.author.username}&#60;/h3&#62;\n\n                &#60;div class='content'&#62;\n                {@html post.Body} &#60;/div&#62;\n\n{/each}\n\n&#60;p&#62;⇺&#60;a href=\"articles\"&#62; back to articles&#60;/a&#62;&#60;/p&#62;\n</code></pre>\n</div>\n\n\n\n<p><strong>Note</strong>: <em>In Svelte, dynamic parameters are encoded using <code>[brackets]</code>. Our <code>[slug].svelte</code> file lets us add routes for different posts dynamically.</em></p>\n<p>Just like in <code>routes/articles/index.svelte</code>, here we’ve imported a few packages, and then used Apollo Client to make a query: <code>blogQuery</code>. This query is different because we’re filtering our data to make sure it returns a specific blog post. The <code>params</code> argument in our <code>preload()</code> function lets us access <code>params.slug</code>, which is the slug of the current page (that is, the slug of this particular blog post). We used <code>params.slug</code> as a variable in our GraphQL query so that only the data with a slug matching the slug of our web page is returned. We then stored our query response in a variable (<code>results</code>), and our <code>preload()</code> function returns <code>posts</code>, a variable with the parsed query result.</p>\n<p>Finally, we displayed our post’s title, publication date, and body (wrapped in Svelte’s <a href=\"https://svelte.dev/tutorial/html-tags\"><code>{@html}</code> tag</a>).</p>\n<p>That’s it. We can now dynamically display pages for any posts added to Strapi’s back end.</p>\n<p>We can now work on the “about” and “home” pages. In <code>./frontend/src/routes</code>, paste this code in the <code>about.svelte</code> file:</p>\n<div><pre><code>&#60;svelte:head&#62;\n        &#60;title&#62;about&#60;/title&#62;\n&#60;/svelte:head&#62;\n\n&#60;h1&#62;about this site&#60;/h1&#62;\n\n&#60;p&#62;\nminimalist web design really let's the content stand out and shine. \nthis is why a simple website design is the first choice of so many artists, photographers, \nand even some writers. they want their creative content to be the center of attention, \nrather than design elements created by someone else. \n&#60;/p&#62;\n\n&#60;p&#62;this minimal blog is built with &#60;a href=\"<a href=\"https://svelte.dev/&#34;&#62;svelte&#60;/a\">https://svelte.dev/\"&#62;svelte&#60;/a</a>&#62; and &#60;a href=\"<a href=\"https://strapi.io/&#34;&#62;strapi&#60;/a\">https://strapi.io/\"&#62;strapi&#60;/a</a>&#62; \nimages by &#60;a href=\"<a href=\"https://unsplash.com/@glencarrie&#34;&#62;glen\">https://unsplash.com/@glencarrie\"&#62;glen</a> carrie&#60;/a&#62; from unsplash \n&#60;/p&#62;\n</code></pre>\n</div>\n\n<p>For our home page, let’s go to <code>./frontend/src/routes</code> and paste the following code in <code>index.svelte</code>:</p>\n<div><pre><code>&#60;style&#62;\n        h1, figure, p {\n                text-align: center;\n                margin: 0 auto;\n        }\n        h1 {\n                font-size: 2.8em;\n                font-weight: 400;\n                margin: 0 0 0.5em 0;\n        }\n        figure {\n                margin: 0 0 1em 0;\n        }\n        img {\n                width: 100%;\n                max-width: 400px;\n                margin: 0 0 1em 0;\n        }\n        p {\n                margin: 1em auto;\n                padding-bottom: 1em;\n        }\n        @media (min-width: 480px) {\n                h1 {\n                        font-size: 4em;\n                }\n        }\n&#60;/style&#62;\n\n&#60;svelte:head&#62;\n        &#60;title&#62;a minimal sapper blog&#60;/title&#62;\n&#60;/svelte:head&#62;\n&#60;p&#62;welcome to&#60;/p&#62;\n&#60;h1&#62;the&#60;b&#62;blog.&#60;/b&#62;&#60;/h1&#62;\n\n&#60;figure&#62;\n        &#60;img alt='the birds on a line' src='bird-bg.png'&#62;\n        &#60;figcaption&#62;where less is more&#60;/figcaption&#62;\n&#60;/figure&#62;\n\n&#60;p&#62;\n&#60;strong&#62;\nwe're minimal and that might seem boring, except you're actually paying attention.\n&#60;/strong&#62;\n&#60;/p&#62;\n&#60;p class=\"link\"&#62;&#60;a href=\"about\"&#62;find out why&#60;/a&#62;...&#60;/p&#62;\n</code></pre>\n</div>\n\n<p>We’ve created all the pages needed in order for our app to run as expected. If you run the app now, you should see something like this:</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8d269475-1f87-4d78-a620-6b5a591453a2/15-static-blog-sapper-strapi.png\" /></p>\n<p>Pretty sweet, yeah?</p>\n<p>Locally, everything works great, but we want to deploy our static blog to the web and share our beautiful creation. Let’s do that.</p>\n<h3>Deploy To Netlify</h3>\n<p>We’re going to deploy our application to Netlify, but before we can do that, log into your <a href=\"https://www.netlify.com/\">Netlify</a> account (or create an account, if you don’t already have one). Sapper gives us the option to deploy a static version of our website, and we’ll do just that.</p>\n<ul>\n<li>Navigate to <code>./frontend</code>.</li>\n<li>Run <code>npm run export</code> to export a static version of the application.</li>\n</ul>\n<p>Your application will be exported to <code>./frontend/sapper/export</code>.</p>\n<p>Drag your exported folder into Netlify, and your website will be live in an instant.</p>\n<p><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1df4f5ef-6a1e-4ec2-8962-8a01f86a443e/16-static-blog-sapper-strapi.png\" /></p>\n<p>Optionally, we can deploy our website from Git by following <a href=\"https://docs.netlify.com/configure-builds/get-started/#basic-build-settings\">Netlify’s documentation</a>. Be sure to add <code>npm run export</code> as the build command and <code>__sapper__/export</code> as the base directory.</p>\n<p>We also have the option to deploy to with <a href=\"https://vercel.com/\">Vercel</a> (formally ZEIT, as mentioned in <a href=\"https://sapper.svelte.dev/docs#Deployment\">Sapper’s documentation</a>).</p>\n<h3>Conclusion</h3>\n<p>That was fun, right? We just built a static blog with Sapper and Strapi and deployed it to Netlify in less than 15 minutes? Besides the stellar developer experience, Strapi and Sapper are such a delight to work with. They bring a fresh perspective to building for the web, and this tutorial is a testament to that. We definitely aren’t limited to static websites, and I can’t wait to see what you all build after this. Share your projects with me <a href=\"https://twitter.com/malgamves\">on Twitter</a>. I can’t wait to see them. Take care, till next time!</p>\n<h4>Resources</h4>\n<ul>\n<li>“<a href=\"https://jsreport.io/sapper-framework/\">Sapper — The New JavaScript Framework You Seriously Need to Try</a>”, John Hannah, JavaScript Report</li>\n<li><a href=\"https://sapper.svelte.dev/docs/\">Docs</a>, Sapper</li>\n<li>“<a href=\"https://strapi.io/blog/frontend-developers-headless-cms\">Why Frontend Developers Should Use a Headless CMS</a>”, Daniel Madalitso Phiri, Strapi</li>\n<li>“<a href=\"https://strapi.io/blog/strapi-starter-nuxt-blog\">Strapi Starter Nuxt Blog</a>”, Maxime Castres, Strapi</li>\n<li>“<a href=\"https://strapi.io/blog/top-10-static-site-generators-in-2020\">Top 10 Static Site Generators in 2020</a>”, Daniel Madalitso Phiri, Strapi</li>\n</ul>\n","descriptionType":"html","publishedDate":"Wed, 05 Aug 2020 09:00:00 +0000","feedId":9306,"bgimg":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d3232e5-09b9-41ab-9f68-8e99c343c203/static-blog-sapper-strapi.png","linkMd5":"04f983498c330e5d7ff840935749afba","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn46@2020_5/2020/09/05/07-59-16-841_d4d658c66106f8e4.webp","destWidth":1201,"destHeight":631,"sourceBytes":309580,"destBytes":60902,"author":"hello@smashingmagazine.com (Daniel Madalitso Phiri)","enclosureType":"image/png","enclosureUrl":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d3232e5-09b9-41ab-9f68-8e99c343c203/static-blog-sapper-strapi.png","articleImgCdnMap":{"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af08fc9a-9b96-4773-97bf-bbed6703c5cb/1-static-blog-sapper-strapi.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a254e4a8-5a02-44a1-a9e8-318639ea7a5f/2-static-blog-sapper-strapi.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn75@2020_6/2020/09/05/07-59-37-969_ae4cd93ad52f450a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c1ba238c-9467-4f96-ba42-f7cb3b535bdc/3-static-blog-sapper-strapi.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn57@2020_2/2020/09/05/07-59-35-729_70fbcc8eb77cb75a.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/432133c2-e962-414b-9ae4-faaa55a098ca/4-static-blog-sapper-strapi.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn72@2020_3/2020/09/05/07-59-18-090_52cf6ccaa70a241b.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca8fdf58-b710-4474-8ab5-1e15d30421ad/5-static-blog-sapper-strapi.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/785c90a0-a4de-481c-b8a9-f098a5ce0bdb/6-static-blog-sapper-strapi.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn89@2020_4/2020/09/05/07-59-19-207_de1d5cb0795462e4.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1404583e-270a-411e-9a57-7390b9b56639/7-static-blog-sapper-strapi.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn30@2020_1/2020/09/05/07-59-38-317_2e434935790e3744.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bfc2e239-1878-4a44-80e3-670809c7c076/8-static-blog-sapper-strapi.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn86@2020_4/2020/09/05/07-59-29-070_5be9022395b3c9d0.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7f17b758-ea2b-4e34-a5e9-7246b9d8ae3c/9-static-blog-sapper-strapi.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn68@2020_2/2020/09/05/07-59-37-694_802b893ca92e8f3b.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fe1a67c4-b7f8-4f88-a938-1d1f08c423d9/10-static-blog-sapper-strapi.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn41@2020_5/2020/09/05/07-59-34-818_83fa182091cf427e.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6c9bd6c2-4055-481d-85ef-14f53fb73215/11-static-blog-sapper-strapi.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn17@2020_5/2020/09/05/07-59-29-441_f21335153c5dbca8.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/72d0c184-ea88-45b2-a12c-604d0f3bb398/12-static-blog-sapper-strapi.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn71@2020_4/2020/09/05/07-59-21-048_d3b31538a21b062d.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/84ad18eb-c81d-4b46-a51f-4f54b00b1ffa/13-static-blog-sapper-strapi.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn11@2020_4/2020/09/05/07-59-36-367_44abfa5517cb08a7.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1b33dcfb-c13b-46f7-9e72-9f4af263519f/14-static-blog-sapper-strapi.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn65@2020_3/2020/09/05/07-59-28-962_5ead1c81523e2089.webp","https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8d269475-1f87-4d78-a620-6b5a591453a2/15-static-blog-sapper-strapi.png":null,"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1df4f5ef-6a1e-4ec2-8962-8a01f86a443e/16-static-blog-sapper-strapi.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn25@2020_2/2020/09/05/07-59-39-079_82572cd9ad303a00.webp"},"publishedOrCreatedDate":1599292755749}],"record":{"createdTime":"2020-09-05 15:59:15","updatedTime":"2020-09-05 15:59:15","feedId":9306,"fetchDate":"Sat, 05 Sep 2020 07:59:15 +0000","fetchMs":247,"handleMs":1244,"totalMs":28478,"newArticles":0,"totalArticles":40,"status":1,"type":0,"ip":"45545bae64f98079bf9fa9362b52b0a1","hostName":"us-036*","requestId":"75f496ff4fe94b49b219642d599df049_9306","contentType":"application/xml","totalBytes":29126057,"bgimgsTotal":39,"bgimgsGithubTotal":37,"articlesImgsTotal":536,"articlesImgsGithubTotal":498,"successGithubMap":{"myreaderx8":20,"myreaderx7":20,"myreaderx15":19,"myreaderx6":20,"myreaderx16":19,"myreaderx32":21,"myreaderx4":19,"myreaderx10":20,"myreaderx11":20,"myreaderx3":20,"myreaderx33":18,"myreaderx2":21,"myreaderx12":20,"myreaderx13":20,"myreaderx1":18,"myreaderx30":21,"myreaderx31":20,"myreaderx18":21,"myreaderx19":20,"myreaderx":19,"myreaderx25":20,"myreaderx27":21,"myreaderx21":18,"myreaderx22":20,"myreaderx24":21,"myreaderx5oss":19,"myreaderx29":20},"failGithubMap":{"myreaderx14":21,"myreaderx23":19}},"feed":{"createdTime":"2020-08-25 04:35:01","updatedTime":"2020-09-01 09:22:18","id":9306,"name":"Articles on Smashing Magazine — For Web Designers And Developers","url":"http://rss1.smashingmagazine.com/feed/?f=coding-std","subscriber":null,"website":null,"icon":"https://www.smashingmagazine.com/images/favicon/app-icon-512x512.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx64/cdn15@2020_3/2020/09/05/07-59-14-961_9ebd481c7b050d1f.png","description":"Recent content in Articles on Smashing Magazine — For Web Designers And Developers","weekly":null,"link":"https://www.smashingmagazine.com"},"noPictureArticleList":[{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"a4dec1fe83c49a7924bf09761305d38c"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"0ae5a604742fc5fdb0e1c7bcacfa3b97"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"db8f89eda9d79fba0a32a36340d2b29a"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"98f381c2c21b71537b96366addc8ca07"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"1d07a3a7ea9e5c230cc1a792c9ee5246"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"3398e6d8c9b7be381f6ae875ed3287b9"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"491501cfc09088ead274778300d9b170"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"a9cb53d45a0e601abe8e7d8fe024bba5"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"c0c90bc439e4ce9cd85d62b390813994"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"2954bfe0e134e38e8bb6b7bd231c4f60"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"5155f9648fe66b7e6f7f7224ebbda820"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"90725d421e0a2e80cbc6fae6b90f5416"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"2de9e609eb9cf95b580b73d5f31a0743"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"90139c1573575fffdbeaa42a49e64624"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"8c330b5b2eb90530988935b001f6de03"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"2685c4c3d7ebad88e71bc608c92ad423"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"6d77beab5e26415895dfcce7df4ea0ba"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"49147f5e0fdeef5d08e1f0588727e911"},{"createdTime":"2020-09-05 15:59:42","updatedTime":"2020-09-05 15:59:42","id":null,"feedId":9306,"linkMd5":"04f983498c330e5d7ff840935749afba"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":29126057,"tmpBgImgCdnBytes":0,"extra4":{"start":1599292754183,"total":0,"statList":[{"spend":345,"msg":"获取xml内容"},{"spend":1244,"msg":"解释文章"},{"spend":2888,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":26798,"msg":"正文链接上传到cdn"}]},"extra5":536,"extra6":536,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50607166-7574-4153-bd04-763e3e320b46/porsche-final-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"sourceBytes":503679,"destBytes":95846,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":630,"convertSpendMs":119,"createdTime":"2020-09-05 15:59:15","host":"us-028*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn75/contents/2020/09/05/07-59-16-464_8efb49fe58fb49e9.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:16 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8ADA:4B6D:8BD9A7:139BE44:5F53452F"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn75/contents/2020/09/05/07-59-16-464_8efb49fe58fb49e9.webp","historyStatusCode":[],"spendMs":51},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"491.9 KB","destSize":"93.6 KB","compressRate":"19%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/111460d7-3456-4374-84cb-b979a33d35e6/issue-11-12-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1400,"destHeight":935,"sourceBytes":633157,"destBytes":138634,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":621,"convertSpendMs":110,"createdTime":"2020-09-05 15:59:15","host":"us-032*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn96/contents/2020/09/05/07-59-16-438_90fcaee9da6ba2af.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:16 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9E1E:7FDF:77E013:CF535D:5F534554"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn96/contents/2020/09/05/07-59-16-438_90fcaee9da6ba2af.webp","historyStatusCode":[],"spendMs":102},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"618.3 KB","destSize":"135.4 KB","compressRate":"21.9%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/111460d7-3456-4374-84cb-b979a33d35e6/issue-11-12-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1400,"destHeight":935,"sourceBytes":633157,"destBytes":138634,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":515,"convertSpendMs":113,"createdTime":"2020-09-05 15:59:16","host":"us-032*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn96/contents/2020/09/05/07-59-17-018_90fcaee9da6ba2af.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:17 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9E1E:7FDF:77E044:CF5365:5F534554"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn96/contents/2020/09/05/07-59-17-018_90fcaee9da6ba2af.webp","historyStatusCode":[],"spendMs":49},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"618.3 KB","destSize":"135.4 KB","compressRate":"21.9%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50607166-7574-4153-bd04-763e3e320b46/porsche-final-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"sourceBytes":503679,"destBytes":95846,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":613,"convertSpendMs":191,"createdTime":"2020-09-05 15:59:16","host":"us-028*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn75/contents/2020/09/05/07-59-17-089_8efb49fe58fb49e9.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:17 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8ADA:4B6D:8BD9F1:139DA10:5F534554"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn75/contents/2020/09/05/07-59-17-089_8efb49fe58fb49e9.webp","historyStatusCode":[],"spendMs":50},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"491.9 KB","destSize":"93.6 KB","compressRate":"19%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/49143198-a7d3-4960-9da7-eb68235c9458/cloud-sql-console-api-flask-google-cloud-sql-app-engine.png","sourceStatusCode":200,"destWidth":2848,"destHeight":604,"sourceBytes":126578,"destBytes":47024,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":511,"convertSpendMs":53,"createdTime":"2020-09-05 15:59:17","host":"us-014*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn91/contents/2020/09/05/07-59-17-707_a9098a27c0f6b3cf.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:17 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C552:3E2D:1FF1B9:5AF7F3:5F53454E"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn91/contents/2020/09/05/07-59-17-707_a9098a27c0f6b3cf.webp","historyStatusCode":[],"spendMs":51},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"123.6 KB","destSize":"45.9 KB","compressRate":"37.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/49143198-a7d3-4960-9da7-eb68235c9458/cloud-sql-console-api-flask-google-cloud-sql-app-engine.png","sourceStatusCode":200,"destWidth":2848,"destHeight":604,"sourceBytes":126578,"destBytes":47024,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":253,"convertSpendMs":62,"createdTime":"2020-09-05 15:59:17","host":"us-014*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn91/contents/2020/09/05/07-59-17-962_a9098a27c0f6b3cf.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:18 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C552:3E2D:1FF1BF:5AF8D9:5F534555"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn91/contents/2020/09/05/07-59-17-962_a9098a27c0f6b3cf.webp","historyStatusCode":[],"spendMs":57},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"123.6 KB","destSize":"45.9 KB","compressRate":"37.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f2522e02-e9aa-419d-98aa-d38b4bf58f5b/porsche176-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"sourceBytes":190761,"destBytes":22396,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":772,"convertSpendMs":20,"createdTime":"2020-09-05 15:59:17","host":"us-030*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn8/contents/2020/09/05/07-59-18-027_86ea4d37edef92e4.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:18 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8C92:0E12:13C96DB:204A335:5F534546"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn8/contents/2020/09/05/07-59-18-027_86ea4d37edef92e4.webp","historyStatusCode":[],"spendMs":44},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"186.3 KB","destSize":"21.9 KB","compressRate":"11.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f2522e02-e9aa-419d-98aa-d38b4bf58f5b/porsche176-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"sourceBytes":190761,"destBytes":22396,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":393,"convertSpendMs":20,"createdTime":"2020-09-05 15:59:18","host":"us-014*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn8/contents/2020/09/05/07-59-18-435_86ea4d37edef92e4.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:18 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C552:3E2D:1FF1CB:5AF8ED:5F534556"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn8/contents/2020/09/05/07-59-18-435_86ea4d37edef92e4.webp","historyStatusCode":[],"spendMs":41},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"186.3 KB","destSize":"21.9 KB","compressRate":"11.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/03a2e498-1d95-4d3e-b5e2-e135fc16a545/porsche55-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":550,"sourceBytes":188327,"destBytes":20532,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":486,"convertSpendMs":30,"createdTime":"2020-09-05 15:59:18","host":"us-011*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn1/contents/2020/09/05/07-59-18-484_cd2571adf2cb5980.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:18 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A26C:0153:113FF34:1DA8611:5F534551"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn1/contents/2020/09/05/07-59-18-484_cd2571adf2cb5980.webp","historyStatusCode":[],"spendMs":38},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"183.9 KB","destSize":"20.1 KB","compressRate":"10.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/03a2e498-1d95-4d3e-b5e2-e135fc16a545/porsche55-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":550,"sourceBytes":188327,"destBytes":20532,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":211,"convertSpendMs":44,"createdTime":"2020-09-05 15:59:18","host":"us-030*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn1/contents/2020/09/05/07-59-18-683_cd2571adf2cb5980.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:18 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8C94:6DAE:10D0838:1CBF13C:5F534546"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn1/contents/2020/09/05/07-59-18-683_cd2571adf2cb5980.webp","historyStatusCode":[],"spendMs":58},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"183.9 KB","destSize":"20.1 KB","compressRate":"10.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a190152-01fb-4904-9437-273f7fad02c4/porsche113-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":375,"sourceBytes":49445,"destBytes":11510,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":422,"convertSpendMs":29,"createdTime":"2020-09-05 15:59:18","host":"us-016*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn24/contents/2020/09/05/07-59-18-750_08281aa559116e28.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:18 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CD1E:2833:71B0C:131D24:5F534555"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn24/contents/2020/09/05/07-59-18-750_08281aa559116e28.webp","historyStatusCode":[],"spendMs":38},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48.3 KB","destSize":"11.2 KB","compressRate":"23.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a190152-01fb-4904-9437-273f7fad02c4/porsche113-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":375,"sourceBytes":49445,"destBytes":11510,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":422,"convertSpendMs":20,"createdTime":"2020-09-05 15:59:18","host":"us-010*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn24/contents/2020/09/05/07-59-19-179_08281aa559116e28.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:19 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C004:6DAD:8FB16E:14B81D7:5F534556"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn24/contents/2020/09/05/07-59-19-179_08281aa559116e28.webp","historyStatusCode":[],"spendMs":39},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48.3 KB","destSize":"11.2 KB","compressRate":"23.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af08fc9a-9b96-4773-97bf-bbed6703c5cb/1-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"sourceBytes":266004,"destBytes":27170,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":464,"convertSpendMs":54,"createdTime":"2020-09-05 15:59:19","host":"us-002*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn40/contents/2020/09/05/07-59-19-730_3f3aa94c2f970157.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:19 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["82FA:7D8A:10A6181:1B2C064:5F534556"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn40/contents/2020/09/05/07-59-19-730_3f3aa94c2f970157.webp","historyStatusCode":[],"spendMs":41},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"259.8 KB","destSize":"26.5 KB","compressRate":"10.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d2a87ddc-e813-429c-bc47-1139118c4ab2/porsche51-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"sourceBytes":196653,"destBytes":22920,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":864,"convertSpendMs":47,"createdTime":"2020-09-05 15:59:19","host":"europe-23*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn19/contents/2020/09/05/07-59-19-912_191befa39f7fbd62.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:20 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["929C:3477:D41D06A:10054A61:5F534557"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn19/contents/2020/09/05/07-59-19-912_191befa39f7fbd62.webp","historyStatusCode":[],"spendMs":172},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"192 KB","destSize":"22.4 KB","compressRate":"11.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af08fc9a-9b96-4773-97bf-bbed6703c5cb/1-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"sourceBytes":266004,"destBytes":27170,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":442,"convertSpendMs":55,"createdTime":"2020-09-05 15:59:19","host":"us-002*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn40/contents/2020/09/05/07-59-20-188_3f3aa94c2f970157.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:20 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["82FA:7D8A:10A61B3:1B2C156:5F534557"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn40/contents/2020/09/05/07-59-20-188_3f3aa94c2f970157.webp","historyStatusCode":[],"spendMs":36},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"259.8 KB","destSize":"26.5 KB","compressRate":"10.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d2a87ddc-e813-429c-bc47-1139118c4ab2/porsche51-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"sourceBytes":196653,"destBytes":22920,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":459,"convertSpendMs":65,"createdTime":"2020-09-05 15:59:20","host":"us-035*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn19/contents/2020/09/05/07-59-20-552_191befa39f7fbd62.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:20 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9872:2835:12D457:301076:5F534557"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn19/contents/2020/09/05/07-59-20-552_191befa39f7fbd62.webp","historyStatusCode":[],"spendMs":39},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"192 KB","destSize":"22.4 KB","compressRate":"11.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a1b4b180-a256-48f2-ac6a-fce6770740f0/issue-12-09-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":1400,"destHeight":1205,"sourceBytes":150726,"destBytes":95836,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1815,"convertSpendMs":190,"createdTime":"2020-09-05 15:59:20","host":"europe-59*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn35/contents/2020/09/05/07-59-21-784_15950e42ee95c6df.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:22 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B4E0:BB64:C75E5A5:F0595F5:5F53452C"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn35/contents/2020/09/05/07-59-21-784_15950e42ee95c6df.webp","historyStatusCode":[],"spendMs":467},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"147.2 KB","destSize":"93.6 KB","compressRate":"63.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4e1bcf4c-32d2-4623-9f8c-563af8399ce1/figure-03-client-side-graphql-apollo-client-react-apps.png","sourceStatusCode":200,"destWidth":1216,"destHeight":578,"sourceBytes":27993,"destBytes":11004,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":533,"convertSpendMs":51,"createdTime":"2020-09-05 15:59:21","host":"us-037*","referer":"https://smashingmagazine.com/2020/07/client-side-graphql-apollo-client-react-apps/","linkMd5ListStr":"2de9e609eb9cf95b580b73d5f31a0743","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn68/contents/2020/09/05/07-59-22-381_5c67e59c65fc35c9.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:22 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C3CE:22F8:90A14F:14F315E:5F53455A"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn68/contents/2020/09/05/07-59-22-381_5c67e59c65fc35c9.webp","historyStatusCode":[],"spendMs":40},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"27.3 KB","destSize":"10.7 KB","compressRate":"39.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e97c6c5b-3074-4b32-a63f-eb71038187b5/scandinave-spa-silence.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"sourceBytes":776683,"destBytes":39408,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1874,"convertSpendMs":68,"createdTime":"2020-09-05 15:59:20","host":"europe63*","referer":"https://smashingmagazine.com/2020/08/design-website-five-senses/","linkMd5ListStr":"90139c1573575fffdbeaa42a49e64624","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn56/contents/2020/09/05/07-59-22-246_0732557043f2faa3.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:22 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8A4A:B506:18710404:1D880A54:5F534555"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn56/contents/2020/09/05/07-59-22-246_0732557043f2faa3.webp","historyStatusCode":[],"spendMs":273},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"758.5 KB","destSize":"38.5 KB","compressRate":"5.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/735c8402-7469-4819-b70a-ff1e7057e3e6/issue-11-02-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1400,"destHeight":567,"sourceBytes":1281589,"destBytes":107858,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":992,"convertSpendMs":78,"createdTime":"2020-09-05 15:59:21","host":"us-032*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn47/contents/2020/09/05/07-59-22-617_a019ee382d6d2de3.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:22 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9E1C:3911:3D7FD2:838E45:5F534559"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn47/contents/2020/09/05/07-59-22-617_a019ee382d6d2de3.webp","historyStatusCode":[],"spendMs":47},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.2 MB","destSize":"105.3 KB","compressRate":"8.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4e1bcf4c-32d2-4623-9f8c-563af8399ce1/figure-03-client-side-graphql-apollo-client-react-apps.png","sourceStatusCode":200,"destWidth":1216,"destHeight":578,"sourceBytes":27993,"destBytes":11004,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":456,"convertSpendMs":62,"createdTime":"2020-09-05 15:59:22","host":"us-024*","referer":"https://smashingmagazine.com/2020/07/client-side-graphql-apollo-client-react-apps/","linkMd5ListStr":"2de9e609eb9cf95b580b73d5f31a0743","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn68/contents/2020/09/05/07-59-22-813_5c67e59c65fc35c9.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:22 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["EAD4:1CD8:112538F:1CE0F46:5F53452F"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn68/contents/2020/09/05/07-59-22-813_5c67e59c65fc35c9.webp","historyStatusCode":[],"spendMs":77},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"27.3 KB","destSize":"10.7 KB","compressRate":"39.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e97c6c5b-3074-4b32-a63f-eb71038187b5/scandinave-spa-silence.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"sourceBytes":776683,"destBytes":39408,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":491,"convertSpendMs":65,"createdTime":"2020-09-05 15:59:22","host":"us-026*","referer":"https://smashingmagazine.com/2020/08/design-website-five-senses/","linkMd5ListStr":"90139c1573575fffdbeaa42a49e64624","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn56/contents/2020/09/05/07-59-22-993_0732557043f2faa3.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:23 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A780:474C:A76DD:1CB066:5F534559"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn56/contents/2020/09/05/07-59-22-993_0732557043f2faa3.webp","historyStatusCode":[],"spendMs":57},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"758.5 KB","destSize":"38.5 KB","compressRate":"5.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a1b4b180-a256-48f2-ac6a-fce6770740f0/issue-12-09-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":1400,"destHeight":1205,"sourceBytes":150726,"destBytes":95836,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":805,"convertSpendMs":364,"createdTime":"2020-09-05 15:59:22","host":"us-011*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn35/contents/2020/09/05/07-59-23-049_15950e42ee95c6df.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:23 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A26C:0153:11401ED:1DA8D2C:5F534559"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn35/contents/2020/09/05/07-59-23-049_15950e42ee95c6df.webp","historyStatusCode":[],"spendMs":49},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"147.2 KB","destSize":"93.6 KB","compressRate":"63.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/735c8402-7469-4819-b70a-ff1e7057e3e6/issue-11-02-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1400,"destHeight":567,"sourceBytes":1281589,"destBytes":107858,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":488,"convertSpendMs":97,"createdTime":"2020-09-05 15:59:22","host":"us-026*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn47/contents/2020/09/05/07-59-23-103_a019ee382d6d2de3.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:23 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A780:474C:A76E0:1CB07C:5F53455B"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn47/contents/2020/09/05/07-59-23-103_a019ee382d6d2de3.webp","historyStatusCode":[],"spendMs":53},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.2 MB","destSize":"105.3 KB","compressRate":"8.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/55b07e9f-10c2-443a-b511-be65e5cc32a9/porsche124-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":539,"sourceBytes":250273,"destBytes":40528,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":464,"convertSpendMs":58,"createdTime":"2020-09-05 15:59:23","host":"us-020*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn67/contents/2020/09/05/07-59-23-484_7d58a8da61f64d04.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:23 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B2FA:49F8:804025:D7A9F9:5F53455B"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn67/contents/2020/09/05/07-59-23-484_7d58a8da61f64d04.webp","historyStatusCode":[],"spendMs":42},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"244.4 KB","destSize":"39.6 KB","compressRate":"16.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b90fa8c7-d63b-4e89-80e2-04b896c68a26/1-autonomy-online-indieweb-preview.png","sourceStatusCode":200,"destWidth":2500,"destHeight":1456,"sourceBytes":832658,"destBytes":375306,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1760,"convertSpendMs":1179,"createdTime":"2020-09-05 15:59:23","host":"us-024*","referer":"https://smashingmagazine.com/2020/08/autonomy-online-indieweb/","linkMd5ListStr":"db8f89eda9d79fba0a32a36340d2b29a","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn88/contents/2020/09/05/07-59-24-807_da083041bafa4841.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:24 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["ACFE:4E19:72F5B1:CBA486:5F53455B"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn88/contents/2020/09/05/07-59-24-807_da083041bafa4841.webp","historyStatusCode":[],"spendMs":142},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"813.1 KB","destSize":"366.5 KB","compressRate":"45.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9dc11909-23e3-4fba-a8f8-1be147fb081d/porsche168-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":250,"sourceBytes":106231,"destBytes":13658,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":471,"convertSpendMs":16,"createdTime":"2020-09-05 15:59:24","host":"us-005*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn81/contents/2020/09/05/07-59-25-346_3e66ea122706969b.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:25 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C184:3317:1229A50:1E33E59:5F53455D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn81/contents/2020/09/05/07-59-25-346_3e66ea122706969b.webp","historyStatusCode":[],"spendMs":96},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"103.7 KB","destSize":"13.3 KB","compressRate":"12.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/55b07e9f-10c2-443a-b511-be65e5cc32a9/porsche124-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":539,"sourceBytes":250273,"destBytes":40528,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1797,"convertSpendMs":46,"createdTime":"2020-09-05 15:59:23","host":"europe-56*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn67/contents/2020/09/05/07-59-24-980_7d58a8da61f64d04.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:25 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C374:2C9C:68A84C9:7E49B26:5F53455D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn67/contents/2020/09/05/07-59-24-980_7d58a8da61f64d04.webp","historyStatusCode":[],"spendMs":503},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"244.4 KB","destSize":"39.6 KB","compressRate":"16.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b90fa8c7-d63b-4e89-80e2-04b896c68a26/1-autonomy-online-indieweb-preview.png","sourceStatusCode":200,"destWidth":2500,"destHeight":1456,"sourceBytes":832658,"destBytes":375306,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":822,"convertSpendMs":402,"createdTime":"2020-09-05 15:59:24","host":"us-010*","referer":"https://smashingmagazine.com/2020/08/autonomy-online-indieweb/","linkMd5ListStr":"db8f89eda9d79fba0a32a36340d2b29a","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn88/contents/2020/09/05/07-59-25-764_da083041bafa4841.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:25 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C004:6DAD:8FB2A3:14B8322:5F534558"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn88/contents/2020/09/05/07-59-25-764_da083041bafa4841.webp","historyStatusCode":[],"spendMs":51},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"813.1 KB","destSize":"366.5 KB","compressRate":"45.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/912b0587-26fb-45e9-95cc-98523cc83822/aug-20-august-days-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"sourceBytes":32892,"destBytes":12660,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":410,"convertSpendMs":15,"createdTime":"2020-09-05 15:59:25","host":"us-006*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn12/contents/2020/09/05/07-59-25-811_c65cdadb2cd8cf10.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:25 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C2B4:082F:101BEBE:1B784ED:5F534558"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn12/contents/2020/09/05/07-59-25-811_c65cdadb2cd8cf10.webp","historyStatusCode":[],"spendMs":49},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.1 KB","destSize":"12.4 KB","compressRate":"38.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f230f5a9-b69a-4c44-a237-5157ebe0f7db/8-building-react-apps-storybook.png","sourceStatusCode":200,"destWidth":1366,"destHeight":738,"sourceBytes":39979,"destBytes":18568,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":952,"convertSpendMs":35,"createdTime":"2020-09-05 15:59:25","host":"europe65*","referer":"https://smashingmagazine.com/2020/09/building-react-apps-storybook/","linkMd5ListStr":"a4dec1fe83c49a7924bf09761305d38c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn95/contents/2020/09/05/07-59-26-001_5dc745c29c65b0b6.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:26 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D8F0:BAC3:17FD3135:1CF9B682:5F534559"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn95/contents/2020/09/05/07-59-26-001_5dc745c29c65b0b6.webp","historyStatusCode":[],"spendMs":248},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39 KB","destSize":"18.1 KB","compressRate":"46.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f230f5a9-b69a-4c44-a237-5157ebe0f7db/8-building-react-apps-storybook.png","sourceStatusCode":200,"destWidth":1366,"destHeight":738,"sourceBytes":39979,"destBytes":18568,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":478,"convertSpendMs":71,"createdTime":"2020-09-05 15:59:26","host":"us-022*","referer":"https://smashingmagazine.com/2020/09/building-react-apps-storybook/","linkMd5ListStr":"a4dec1fe83c49a7924bf09761305d38c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn95/contents/2020/09/05/07-59-26-735_5dc745c29c65b0b6.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:26 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D6EA:121E:81BE9F:D80DDF:5F534559"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn95/contents/2020/09/05/07-59-26-735_5dc745c29c65b0b6.webp","historyStatusCode":[],"spendMs":38},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39 KB","destSize":"18.1 KB","compressRate":"46.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9dc11909-23e3-4fba-a8f8-1be147fb081d/porsche168-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":250,"sourceBytes":106231,"destBytes":13658,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1340,"convertSpendMs":15,"createdTime":"2020-09-05 15:59:25","host":"europe69*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn81/contents/2020/09/05/07-59-26-643_3e66ea122706969b.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:26 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["96AC:2C9E:16BD5682:1B8A20B0:5F534559"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn81/contents/2020/09/05/07-59-26-643_3e66ea122706969b.webp","historyStatusCode":[],"spendMs":260},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"103.7 KB","destSize":"13.3 KB","compressRate":"12.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/912b0587-26fb-45e9-95cc-98523cc83822/aug-20-august-days-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"sourceBytes":32892,"destBytes":12660,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1088,"convertSpendMs":11,"createdTime":"2020-09-05 15:59:25","host":"europe-60*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn12/contents/2020/09/05/07-59-26-869_c65cdadb2cd8cf10.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:27 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["BE9E:B505:D010BF5:FAB7DB7:5F534525"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn12/contents/2020/09/05/07-59-26-869_c65cdadb2cd8cf10.webp","historyStatusCode":[],"spendMs":181},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.1 KB","destSize":"12.4 KB","compressRate":"38.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2537214b-f891-4571-b341-a926652c745c/aug-20-creating-buzz-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"sourceBytes":36866,"destBytes":17106,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":861,"convertSpendMs":13,"createdTime":"2020-09-05 15:59:26","host":"europe64*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn9/contents/2020/09/05/07-59-27-280_37c57b8beb654cf2.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:27 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D05C:BAC2:C984671:F353FA8:5F53455E"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn9/contents/2020/09/05/07-59-27-280_37c57b8beb654cf2.webp","historyStatusCode":[],"spendMs":179},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36 KB","destSize":"16.7 KB","compressRate":"46.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/949a3af1-96b6-487b-991f-dae1fbcf8615/banggod-screenshot-tips-create-customer-centric-landing-pages.png","sourceStatusCode":200,"destWidth":1999,"destHeight":1075,"sourceBytes":506975,"destBytes":98016,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1260,"convertSpendMs":74,"createdTime":"2020-09-05 15:59:26","host":"europe68*","referer":"https://smashingmagazine.com/2020/08/tips-customer-centric-landing-pages/","linkMd5ListStr":"0ae5a604742fc5fdb0e1c7bcacfa3b97","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn30/contents/2020/09/05/07-59-27-470_590d18540fdb5310.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:27 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B8F6:DA23:5E0069C:7125757:5F53455E"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn30/contents/2020/09/05/07-59-27-470_590d18540fdb5310.webp","historyStatusCode":[],"spendMs":525},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"495.1 KB","destSize":"95.7 KB","compressRate":"19.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca8fdf58-b710-4474-8ab5-1e15d30421ad/5-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"sourceBytes":153458,"destBytes":34060,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":499,"convertSpendMs":100,"createdTime":"2020-09-05 15:59:27","host":"us-039*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn23/contents/2020/09/05/07-59-28-157_4bd13b981e555271.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:28 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A242:6DAD:8FB30C:14B8614:5F53455E"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn23/contents/2020/09/05/07-59-28-157_4bd13b981e555271.webp","historyStatusCode":[],"spendMs":44},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"149.9 KB","destSize":"33.3 KB","compressRate":"22.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/84c67afc-b259-44b3-b51b-4e9c4df8ba03/porsche60-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":400,"sourceBytes":149815,"destBytes":26036,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":495,"convertSpendMs":89,"createdTime":"2020-09-05 15:59:27","host":"us-53*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn44/contents/2020/09/05/07-59-28-327_7f4ac54397bb2a1a.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:28 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["83E2:4ADB:111EC10:1C13EE4:5F53455F"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn44/contents/2020/09/05/07-59-28-327_7f4ac54397bb2a1a.webp","historyStatusCode":[],"spendMs":46},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"146.3 KB","destSize":"25.4 KB","compressRate":"17.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/949a3af1-96b6-487b-991f-dae1fbcf8615/banggod-screenshot-tips-create-customer-centric-landing-pages.png","sourceStatusCode":200,"destWidth":1999,"destHeight":1075,"sourceBytes":506975,"destBytes":98016,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":510,"convertSpendMs":74,"createdTime":"2020-09-05 15:59:28","host":"us-002*","referer":"https://smashingmagazine.com/2020/08/tips-customer-centric-landing-pages/","linkMd5ListStr":"0ae5a604742fc5fdb0e1c7bcacfa3b97","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn30/contents/2020/09/05/07-59-28-481_590d18540fdb5310.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:28 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8BFE:45BA:9901F8:1551973:5F534556"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn30/contents/2020/09/05/07-59-28-481_590d18540fdb5310.webp","historyStatusCode":[],"spendMs":72},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"495.1 KB","destSize":"95.7 KB","compressRate":"19.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2537214b-f891-4571-b341-a926652c745c/aug-20-creating-buzz-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"sourceBytes":36866,"destBytes":17106,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":952,"convertSpendMs":12,"createdTime":"2020-09-05 15:59:27","host":"europe-60*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn9/contents/2020/09/05/07-59-28-304_37c57b8beb654cf2.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:28 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["BE9E:B505:D010D10:FABB24B:5F53455F"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn9/contents/2020/09/05/07-59-28-304_37c57b8beb654cf2.webp","historyStatusCode":[],"spendMs":255},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36 KB","destSize":"16.7 KB","compressRate":"46.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/84c67afc-b259-44b3-b51b-4e9c4df8ba03/porsche60-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":400,"sourceBytes":149815,"destBytes":26036,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":412,"convertSpendMs":35,"createdTime":"2020-09-05 15:59:28","host":"us-006*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn44/contents/2020/09/05/07-59-28-759_7f4ac54397bb2a1a.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:28 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C2B4:082F:101BFF0:1B788CC:5F53455D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn44/contents/2020/09/05/07-59-28-759_7f4ac54397bb2a1a.webp","historyStatusCode":[],"spendMs":37},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"146.3 KB","destSize":"25.4 KB","compressRate":"17.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca3db691-8b5c-40b3-928f-5df7a7f8e989/porsche122-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":539,"sourceBytes":143113,"destBytes":25188,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":438,"convertSpendMs":39,"createdTime":"2020-09-05 15:59:28","host":"us-025*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn41/contents/2020/09/05/07-59-29-156_334256058c869ee4.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:29 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D99C:14B5:4260A6:B10C25:5F53455F"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn41/contents/2020/09/05/07-59-29-156_334256058c869ee4.webp","historyStatusCode":[],"spendMs":42},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"139.8 KB","destSize":"24.6 KB","compressRate":"17.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/30e99c0c-16a9-42e8-9081-341fb9c991f8/porsche120-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":599,"sourceBytes":142198,"destBytes":19896,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":448,"convertSpendMs":38,"createdTime":"2020-09-05 15:59:29","host":"us-029*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn62/contents/2020/09/05/07-59-29-521_122a49c6fe362e46.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:29 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["EA32:16F6:1CD50:5E0A0:5F534560"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn62/contents/2020/09/05/07-59-29-521_122a49c6fe362e46.webp","historyStatusCode":[],"spendMs":48},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"138.9 KB","destSize":"19.4 KB","compressRate":"14%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca8fdf58-b710-4474-8ab5-1e15d30421ad/5-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"sourceBytes":153458,"destBytes":34060,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1500,"convertSpendMs":64,"createdTime":"2020-09-05 15:59:28","host":"europe-22*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn23/contents/2020/09/05/07-59-29-619_4bd13b981e555271.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:29 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D8BE:BAC3:17FD34EE:1CF9C136:5F534561"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn23/contents/2020/09/05/07-59-29-619_4bd13b981e555271.webp","historyStatusCode":[],"spendMs":192},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"149.9 KB","destSize":"33.3 KB","compressRate":"22.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/30e99c0c-16a9-42e8-9081-341fb9c991f8/porsche120-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":599,"sourceBytes":142198,"destBytes":19896,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":409,"convertSpendMs":38,"createdTime":"2020-09-05 15:59:29","host":"us-55*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn62/contents/2020/09/05/07-59-29-947_122a49c6fe362e46.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:29 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["83B8:1CD5:2A0AA6:6B1BF1:5F534560"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn62/contents/2020/09/05/07-59-29-947_122a49c6fe362e46.webp","historyStatusCode":[],"spendMs":50},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"138.9 KB","destSize":"19.4 KB","compressRate":"14%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca3db691-8b5c-40b3-928f-5df7a7f8e989/porsche122-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":539,"sourceBytes":143113,"destBytes":25188,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":394,"convertSpendMs":28,"createdTime":"2020-09-05 15:59:29","host":"us-032*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn41/contents/2020/09/05/07-59-30-046_334256058c869ee4.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:30 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9E1C:3911:3D815F:839188:5F534560"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn41/contents/2020/09/05/07-59-30-046_334256058c869ee4.webp","historyStatusCode":[],"spendMs":54},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"139.8 KB","destSize":"24.6 KB","compressRate":"17.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/936ff96f-3bbf-458e-b2ff-404b2c2fb38e/issue-12-16-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2200,"destHeight":1475,"sourceBytes":684329,"destBytes":144380,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":705,"convertSpendMs":227,"createdTime":"2020-09-05 15:59:30","host":"us-015*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn78/contents/2020/09/05/07-59-30-782_93a526e8baf36a27.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:30 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["AEDC:3303:7E090D:11120AC:5F534562"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn78/contents/2020/09/05/07-59-30-782_93a526e8baf36a27.webp","historyStatusCode":[],"spendMs":119},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"668.3 KB","destSize":"141 KB","compressRate":"21.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dc091412-fb24-4cbe-9112-15042dc44619/6-dashboard-with-table-and-charts.png","sourceStatusCode":200,"destWidth":2200,"destHeight":1932,"sourceBytes":282309,"destBytes":90972,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1302,"convertSpendMs":867,"createdTime":"2020-09-05 15:59:30","host":"us-011*","referer":"https://smashingmagazine.com/2020/07/responsive-dashboard-angular-material-ng2-charts-schematics/","linkMd5ListStr":"49147f5e0fdeef5d08e1f0588727e911","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn57/contents/2020/09/05/07-59-31-304_244453a38aed074f.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:31 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A30A:0E10:40ED71:B6160B:5F534530"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn57/contents/2020/09/05/07-59-31-304_244453a38aed074f.webp","historyStatusCode":[],"spendMs":49},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"275.7 KB","destSize":"88.8 KB","compressRate":"32.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dc091412-fb24-4cbe-9112-15042dc44619/6-dashboard-with-table-and-charts.png","sourceStatusCode":200,"destWidth":2200,"destHeight":1932,"sourceBytes":282309,"destBytes":90972,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":337,"convertSpendMs":194,"createdTime":"2020-09-05 15:59:31","host":"us-002*","referer":"https://smashingmagazine.com/2020/07/responsive-dashboard-angular-material-ng2-charts-schematics/","linkMd5ListStr":"49147f5e0fdeef5d08e1f0588727e911","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn57/contents/2020/09/05/07-59-31-654_244453a38aed074f.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:31 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8BFE:45BA:9902C4:1551F68:5F534560"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn57/contents/2020/09/05/07-59-31-654_244453a38aed074f.webp","historyStatusCode":[],"spendMs":43},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"275.7 KB","destSize":"88.8 KB","compressRate":"32.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/936ff96f-3bbf-458e-b2ff-404b2c2fb38e/issue-12-16-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2200,"destHeight":1475,"sourceBytes":684329,"destBytes":144380,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":801,"convertSpendMs":387,"createdTime":"2020-09-05 15:59:30","host":"us-017*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn78/contents/2020/09/05/07-59-31-672_93a526e8baf36a27.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:31 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B4B8:7210:8B9A60:12FACAE:5F534562"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn78/contents/2020/09/05/07-59-31-672_93a526e8baf36a27.webp","historyStatusCode":[],"spendMs":49},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"668.3 KB","destSize":"141 KB","compressRate":"21.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c54cf046-3ab1-4a09-a7d9-9ca006bd014e/porsche131-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"sourceBytes":21981,"destBytes":10072,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1040,"convertSpendMs":20,"createdTime":"2020-09-05 15:59:31","host":"us-55*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx12/cdn55/contents/2020/09/05/07-59-31-609_f55b428b749d632e.webp","resp":{"code":409,"msg":"Conflict","body":"{\n  \"message\": \"is at 24a852eabb0a9965754b8be62fd91e0570b8e5a1 but expected d5cd06e20c51f4f4c3947cfd716933a5e1d1e7fb\",\n  \"documentation_url\": \"https://docs.github.com/rest/reference/repos#create-or-update-file-contents\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-length":["222"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:32 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["409 Conflict"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":[""],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["83B8:1CD5:2A0AB8:6B1C39:5F534561"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["5000"],"x-ratelimit-remaining":["4618"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["382"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 409,url is : https://api.github.com/repos/myreaderx12/cdn55/contents/2020/09/05/07-59-31-609_f55b428b749d632e.webp","historyStatusCode":[],"spendMs":669},"base64UserPassword":null,"token":"a1222******************************20071"},"githubUser":"myreaderx12","githubHttpCode":409,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.5 KB","destSize":"9.8 KB","compressRate":"45.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/70e091b8-d82f-4600-9bf0-2c233c54b85b/issue-11-14-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":2880,"destHeight":2048,"sourceBytes":891691,"destBytes":291596,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":874,"convertSpendMs":373,"createdTime":"2020-09-05 15:59:31","host":"us-001*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn94/contents/2020/09/05/07-59-32-288_ffa573942cda7c6a.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:32 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CE0A:11AE:299963:69C46D:5F534562"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn94/contents/2020/09/05/07-59-32-288_ffa573942cda7c6a.webp","historyStatusCode":[],"spendMs":87},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"870.8 KB","destSize":"284.8 KB","compressRate":"32.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8d269475-1f87-4d78-a620-6b5a591453a2/15-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"sourceBytes":66044,"destBytes":17878,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1247,"convertSpendMs":61,"createdTime":"2020-09-05 15:59:31","host":"europe21*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn71/contents/2020/09/05/07-59-32-499_66f34b0b5a1428c9.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:32 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C362:BAC2:C9849E8:F354270:5F534561"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn71/contents/2020/09/05/07-59-32-499_66f34b0b5a1428c9.webp","historyStatusCode":[],"spendMs":169},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"64.5 KB","destSize":"17.5 KB","compressRate":"27.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8d269475-1f87-4d78-a620-6b5a591453a2/15-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"sourceBytes":66044,"destBytes":17878,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":494,"convertSpendMs":44,"createdTime":"2020-09-05 15:59:32","host":"us-005*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn71/contents/2020/09/05/07-59-33-172_66f34b0b5a1428c9.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:33 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["BEE2:52FE:91105E:1458D21:5F534564"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn71/contents/2020/09/05/07-59-33-172_66f34b0b5a1428c9.webp","historyStatusCode":[],"spendMs":40},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"64.5 KB","destSize":"17.5 KB","compressRate":"27.1%"},{"code":1,"isDone":false,"source":"https://res.cloudinary.com/indysigner/image/upload/v1596442224/checklists-cards-only-2x-opt_zoyedy.png","sourceStatusCode":200,"destWidth":1261,"destHeight":850,"sourceBytes":129913,"destBytes":96206,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":607,"convertSpendMs":84,"createdTime":"2020-09-05 15:59:32","host":"europe-58*","referer":"https://smashingmagazine.com/2020/08/checklist-cards-release/","linkMd5ListStr":"2954bfe0e134e38e8bb6b7bd231c4f60","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn89/contents/2020/09/05/07-59-32-915_48e6c0e366ee661d.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:33 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["ADD6:DA23:5E00838:7125975:5F534564"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn89/contents/2020/09/05/07-59-32-915_48e6c0e366ee661d.webp","historyStatusCode":[],"spendMs":456},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"126.9 KB","destSize":"94 KB","compressRate":"74.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/70e091b8-d82f-4600-9bf0-2c233c54b85b/issue-11-14-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":2880,"destHeight":2048,"sourceBytes":891691,"destBytes":291596,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1028,"convertSpendMs":654,"createdTime":"2020-09-05 15:59:32","host":"us-024*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn94/contents/2020/09/05/07-59-33-228_ffa573942cda7c6a.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:33 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8B22:0566:106E816:1AEAC05:5F53455E"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn94/contents/2020/09/05/07-59-33-228_ffa573942cda7c6a.webp","historyStatusCode":[],"spendMs":48},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"870.8 KB","destSize":"284.8 KB","compressRate":"32.7%"},{"code":1,"isDone":false,"source":"https://res.cloudinary.com/indysigner/image/upload/v1596442224/checklists-cards-only-2x-opt_zoyedy.png","sourceStatusCode":200,"destWidth":1261,"destHeight":850,"sourceBytes":129913,"destBytes":96206,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":220,"convertSpendMs":101,"createdTime":"2020-09-05 15:59:33","host":"us-039*","referer":"https://smashingmagazine.com/2020/08/checklist-cards-release/","linkMd5ListStr":"2954bfe0e134e38e8bb6b7bd231c4f60","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn89/contents/2020/09/05/07-59-33-585_48e6c0e366ee661d.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:33 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A242:6DAD:8FB409:14B8932:5F534564"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn89/contents/2020/09/05/07-59-33-585_48e6c0e366ee661d.webp","historyStatusCode":[],"spendMs":48},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"126.9 KB","destSize":"94 KB","compressRate":"74.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8dc6e411-382e-4cd1-b886-8e3eafc64bf1/whitelist-ip-api-flask-google-cloud-sql-app-engine.png","sourceStatusCode":200,"destWidth":1194,"destHeight":1396,"sourceBytes":180544,"destBytes":73118,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1656,"convertSpendMs":64,"createdTime":"2020-09-05 15:59:32","host":"europe-25*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn8/contents/2020/09/05/07-59-34-059_625b169ecd431375.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:34 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B1BA:7A5A:16A91B5C:1B692643:5F534564"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn8/contents/2020/09/05/07-59-34-059_625b169ecd431375.webp","historyStatusCode":[],"spendMs":428},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"176.3 KB","destSize":"71.4 KB","compressRate":"40.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8826ad35-d313-4904-899f-36b4e38755c1/porsche71-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"sourceBytes":106506,"destBytes":9020,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":875,"convertSpendMs":20,"createdTime":"2020-09-05 15:59:34","host":"europe-60*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn22/contents/2020/09/05/07-59-34-715_b3e2ca7620f16098.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:34 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["DABC:B506:18711411:1D8823BA:5F534566"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn22/contents/2020/09/05/07-59-34-715_b3e2ca7620f16098.webp","historyStatusCode":[],"spendMs":162},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"104 KB","destSize":"8.8 KB","compressRate":"8.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/87cbc5c0-0452-41c5-9e94-9e935826a8fd/porsche104-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":700,"sourceBytes":131843,"destBytes":12092,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1206,"convertSpendMs":23,"createdTime":"2020-09-05 15:59:33","host":"europe-56*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn1/contents/2020/09/05/07-59-34-789_05e34e4afda3afcd.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:34 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C374:2C9C:68A874F:7E49E10:5F534565"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn1/contents/2020/09/05/07-59-34-789_05e34e4afda3afcd.webp","historyStatusCode":[],"spendMs":164},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"128.8 KB","destSize":"11.8 KB","compressRate":"9.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d175a919-f3ad-4eb6-8dff-a307d48053f6/addproduct-demystifying-djangos-magic.png","sourceStatusCode":200,"destWidth":1366,"destHeight":705,"sourceBytes":63030,"destBytes":28288,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":429,"convertSpendMs":37,"createdTime":"2020-09-05 15:59:34","host":"us-030*","referer":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/","linkMd5ListStr":"90725d421e0a2e80cbc6fae6b90f5416","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn15/contents/2020/09/05/07-59-35-116_6a7299c035beaa37.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:35 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8C92:0E12:13CA109:204C2DA:5F534561"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn15/contents/2020/09/05/07-59-35-116_6a7299c035beaa37.webp","historyStatusCode":[],"spendMs":42},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"61.6 KB","destSize":"27.6 KB","compressRate":"44.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/87cbc5c0-0452-41c5-9e94-9e935826a8fd/porsche104-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":700,"sourceBytes":131843,"destBytes":12092,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":205,"convertSpendMs":42,"createdTime":"2020-09-05 15:59:35","host":"us-005*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn1/contents/2020/09/05/07-59-35-162_05e34e4afda3afcd.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:35 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["BEE2:52FE:9110BC:1458E08:5F534566"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn1/contents/2020/09/05/07-59-35-162_05e34e4afda3afcd.webp","historyStatusCode":[],"spendMs":45},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"128.8 KB","destSize":"11.8 KB","compressRate":"9.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d175a919-f3ad-4eb6-8dff-a307d48053f6/addproduct-demystifying-djangos-magic.png","sourceStatusCode":200,"destWidth":1366,"destHeight":705,"sourceBytes":63030,"destBytes":28288,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":210,"convertSpendMs":42,"createdTime":"2020-09-05 15:59:35","host":"us-039*","referer":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/","linkMd5ListStr":"90725d421e0a2e80cbc6fae6b90f5416","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn15/contents/2020/09/05/07-59-35-343_6a7299c035beaa37.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:35 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A242:6DAD:8FB45D:14B89CB:5F534565"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn15/contents/2020/09/05/07-59-35-343_6a7299c035beaa37.webp","historyStatusCode":[],"spendMs":46},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"61.6 KB","destSize":"27.6 KB","compressRate":"44.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8dc6e411-382e-4cd1-b886-8e3eafc64bf1/whitelist-ip-api-flask-google-cloud-sql-app-engine.png","sourceStatusCode":200,"destWidth":1194,"destHeight":1396,"sourceBytes":180544,"destBytes":73118,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":765,"convertSpendMs":68,"createdTime":"2020-09-05 15:59:34","host":"us-033*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn8/contents/2020/09/05/07-59-35-324_625b169ecd431375.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:35 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E8B6:56EB:123593D:1E615DC:5F534567"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn8/contents/2020/09/05/07-59-35-324_625b169ecd431375.webp","historyStatusCode":[],"spendMs":105},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"176.3 KB","destSize":"71.4 KB","compressRate":"40.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7e52aff7-6aac-4b28-b75c-f118e8591211/aug-16-summer-nap-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"sourceBytes":112225,"destBytes":13960,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":422,"convertSpendMs":21,"createdTime":"2020-09-05 15:59:35","host":"us-037*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn40/contents/2020/09/05/07-59-35-424_a2e35167c003b3f4.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:35 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C3CE:22F8:90A425:14F38FF:5F534566"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn40/contents/2020/09/05/07-59-35-424_a2e35167c003b3f4.webp","historyStatusCode":[],"spendMs":42},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"109.6 KB","destSize":"13.6 KB","compressRate":"12.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7e52aff7-6aac-4b28-b75c-f118e8591211/aug-16-summer-nap-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"sourceBytes":112225,"destBytes":13960,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":406,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:35","host":"us-031*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn40/contents/2020/09/05/07-59-35-843_a2e35167c003b3f4.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:35 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D1BE:4A19:918E0B:15F8794:5F534565"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn40/contents/2020/09/05/07-59-35-843_a2e35167c003b3f4.webp","historyStatusCode":[],"spendMs":47},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"109.6 KB","destSize":"13.6 KB","compressRate":"12.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8826ad35-d313-4904-899f-36b4e38755c1/porsche71-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"sourceBytes":106506,"destBytes":9020,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":927,"convertSpendMs":25,"createdTime":"2020-09-05 15:59:35","host":"europe-58*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn22/contents/2020/09/05/07-59-35-789_b3e2ca7620f16098.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:35 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["ADD6:DA23:5E008E6:71259E1:5F534565"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn22/contents/2020/09/05/07-59-35-789_b3e2ca7620f16098.webp","historyStatusCode":[],"spendMs":175},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"104 KB","destSize":"8.8 KB","compressRate":"8.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e24bc46-9374-4057-8b1f-4f203c9cf75a/postman-response-4-api-flask-google-cloud-sql-app-engine.png","sourceStatusCode":200,"destWidth":1516,"destHeight":888,"sourceBytes":109216,"destBytes":37606,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":477,"convertSpendMs":82,"createdTime":"2020-09-05 15:59:36","host":"us-022*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn56/contents/2020/09/05/07-59-36-532_495d2e0a57cd59bb.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:36 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D6EA:121E:81C291:D813A6:5F534562"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn56/contents/2020/09/05/07-59-36-532_495d2e0a57cd59bb.webp","historyStatusCode":[],"spendMs":44},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"106.7 KB","destSize":"36.7 KB","compressRate":"34.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e24bc46-9374-4057-8b1f-4f203c9cf75a/postman-response-4-api-flask-google-cloud-sql-app-engine.png","sourceStatusCode":200,"destWidth":1516,"destHeight":888,"sourceBytes":109216,"destBytes":37606,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":447,"convertSpendMs":79,"createdTime":"2020-09-05 15:59:36","host":"us-020*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn56/contents/2020/09/05/07-59-36-995_495d2e0a57cd59bb.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:37 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B2FA:49F8:8047BD:D7B3D5:5F534566"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn56/contents/2020/09/05/07-59-36-995_495d2e0a57cd59bb.webp","historyStatusCode":[],"spendMs":51},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"106.7 KB","destSize":"36.7 KB","compressRate":"34.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4e694672-02df-4a9d-9145-31c8918674ed/white-label-application-color-schemes-css-custom-properties.png","sourceStatusCode":200,"destWidth":1948,"destHeight":1552,"sourceBytes":448535,"destBytes":380910,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1205,"convertSpendMs":364,"createdTime":"2020-09-05 15:59:35","host":"us-018*","referer":"https://smashingmagazine.com/2020/08/application-color-schemes-css-custom-properties/","linkMd5ListStr":"1d07a3a7ea9e5c230cc1a792c9ee5246","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn35/contents/2020/09/05/07-59-37-010_18448b695f4dd83f.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:37 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["AF40:73D5:8D0956:145A8AC:5F534568"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn35/contents/2020/09/05/07-59-37-010_18448b695f4dd83f.webp","historyStatusCode":[],"spendMs":52},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"438 KB","destSize":"372 KB","compressRate":"84.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/846d17fe-01ac-46cc-ba94-3a96f300cb2e/porsche154-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"sourceBytes":293162,"destBytes":29196,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":434,"convertSpendMs":34,"createdTime":"2020-09-05 15:59:36","host":"us-003*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn49/contents/2020/09/05/07-59-37-388_54d106b5d4d0e034.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:37 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9FFC:2F1C:226228:55A11A:5F534563"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn49/contents/2020/09/05/07-59-37-388_54d106b5d4d0e034.webp","historyStatusCode":[],"spendMs":43},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"286.3 KB","destSize":"28.5 KB","compressRate":"10%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b08ca234-44a8-4a50-8ecc-62b67e4d0c72/porsche137-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"sourceBytes":134825,"destBytes":16164,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":416,"convertSpendMs":24,"createdTime":"2020-09-05 15:59:37","host":"us-008*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn72/contents/2020/09/05/07-59-37-497_5cfc5df2ddf1aaef.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:37 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B430:44BF:1E37BD:59C770:5F534566"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn72/contents/2020/09/05/07-59-37-497_5cfc5df2ddf1aaef.webp","historyStatusCode":[],"spendMs":38},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"131.7 KB","destSize":"15.8 KB","compressRate":"12%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b08ca234-44a8-4a50-8ecc-62b67e4d0c72/porsche137-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"sourceBytes":134825,"destBytes":16164,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":451,"convertSpendMs":34,"createdTime":"2020-09-05 15:59:37","host":"us-012*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn72/contents/2020/09/05/07-59-37-967_5cfc5df2ddf1aaef.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:38 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E134:11AF:4A671D:BC975D:5F534565"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn72/contents/2020/09/05/07-59-37-967_5cfc5df2ddf1aaef.webp","historyStatusCode":[],"spendMs":65},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"131.7 KB","destSize":"15.8 KB","compressRate":"12%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4e694672-02df-4a9d-9145-31c8918674ed/white-label-application-color-schemes-css-custom-properties.png","sourceStatusCode":200,"destWidth":1948,"destHeight":1552,"sourceBytes":448535,"destBytes":380910,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1047,"convertSpendMs":608,"createdTime":"2020-09-05 15:59:37","host":"us-024*","referer":"https://smashingmagazine.com/2020/08/application-color-schemes-css-custom-properties/","linkMd5ListStr":"1d07a3a7ea9e5c230cc1a792c9ee5246","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn35/contents/2020/09/05/07-59-38-075_18448b695f4dd83f.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:38 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["ACFE:4E19:72FC88:CBADA7:5F534566"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn35/contents/2020/09/05/07-59-38-075_18448b695f4dd83f.webp","historyStatusCode":[],"spendMs":51},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"438 KB","destSize":"372 KB","compressRate":"84.9%"},{"code":1,"isDone":false,"source":"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3af9d3a1-4d9f-4b6d-9e7c-e605279b961b/smashingconf-live-badge-designs.png","sourceStatusCode":200,"destWidth":400,"destHeight":172,"sourceBytes":19118,"destBytes":19118,"feedId":9306,"totalSpendMs":234,"convertSpendMs":0,"createdTime":"2020-09-05 15:59:38","host":"europe65*","referer":"https://smashingmagazine.com/2020/08/smashingconf-live-august-wrapup/","linkMd5ListStr":"a9cb53d45a0e601abe8e7d8fe024bba5","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn67/contents/2020/09/05/07-59-38-332_4569100c80448576.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:38 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D8F0:BAC3:17FD3DDA:1CF9CB2C:5F534568"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn67/contents/2020/09/05/07-59-38-332_4569100c80448576.webp","historyStatusCode":[],"spendMs":174},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.7 KB","destSize":"18.7 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/846d17fe-01ac-46cc-ba94-3a96f300cb2e/porsche154-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"sourceBytes":293162,"destBytes":29196,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":408,"convertSpendMs":44,"createdTime":"2020-09-05 15:59:37","host":"us-029*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn49/contents/2020/09/05/07-59-37-824_54d106b5d4d0e034.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:37 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["EA32:16F6:1CD59:5E0C5:5F534568"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn49/contents/2020/09/05/07-59-37-824_54d106b5d4d0e034.webp","historyStatusCode":[],"spendMs":45},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"286.3 KB","destSize":"28.5 KB","compressRate":"10%"},{"code":1,"isDone":false,"source":"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_auto/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3af9d3a1-4d9f-4b6d-9e7c-e605279b961b/smashingconf-live-badge-designs.png","sourceStatusCode":200,"destWidth":400,"destHeight":172,"sourceBytes":19118,"destBytes":19118,"feedId":9306,"totalSpendMs":242,"convertSpendMs":0,"createdTime":"2020-09-05 15:59:38","host":"europe62*","referer":"https://smashingmagazine.com/2020/08/smashingconf-live-august-wrapup/","linkMd5ListStr":"a9cb53d45a0e601abe8e7d8fe024bba5","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn67/contents/2020/09/05/07-59-38-729_4569100c80448576.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:38 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B9EA:B50F:11B6B2FF:15776F5C:5F534564"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn67/contents/2020/09/05/07-59-38-729_4569100c80448576.webp","historyStatusCode":[],"spendMs":183},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.7 KB","destSize":"18.7 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/017ae1ef-cb8b-44bc-afbe-1bf04eba5623/trading-demystifying-djangos-magic.png","sourceStatusCode":200,"destWidth":650,"destHeight":546,"sourceBytes":31295,"destBytes":8574,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":868,"convertSpendMs":15,"createdTime":"2020-09-05 15:59:38","host":"europe69*","referer":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/","linkMd5ListStr":"90725d421e0a2e80cbc6fae6b90f5416","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn88/contents/2020/09/05/07-59-39-104_80e65f4a3f544e6b.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:39 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["96AC:2C9E:16BD6481:1B8A3708:5F534569"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn88/contents/2020/09/05/07-59-39-104_80e65f4a3f544e6b.webp","historyStatusCode":[],"spendMs":171},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.6 KB","destSize":"8.4 KB","compressRate":"27.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/017ae1ef-cb8b-44bc-afbe-1bf04eba5623/trading-demystifying-djangos-magic.png","sourceStatusCode":200,"destWidth":650,"destHeight":546,"sourceBytes":31295,"destBytes":8574,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":403,"convertSpendMs":15,"createdTime":"2020-09-05 15:59:39","host":"us-008*","referer":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/","linkMd5ListStr":"90725d421e0a2e80cbc6fae6b90f5416","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn88/contents/2020/09/05/07-59-39-684_80e65f4a3f544e6b.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:39 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B430:44BF:1E37DB:59C82F:5F53456A"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn88/contents/2020/09/05/07-59-39-684_80e65f4a3f544e6b.webp","historyStatusCode":[],"spendMs":41},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.6 KB","destSize":"8.4 KB","compressRate":"27.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5cbdcd62-1743-4dca-896e-5c2e2c503eb8/01-landing-page-vue-router.png","sourceStatusCode":200,"destWidth":2480,"destHeight":1408,"sourceBytes":371410,"destBytes":131714,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":626,"convertSpendMs":143,"createdTime":"2020-09-05 15:59:39","host":"us-040*","referer":"https://smashingmagazine.com/2020/08/vue-router-features/","linkMd5ListStr":"5155f9648fe66b7e6f7f7224ebbda820","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn81/contents/2020/09/05/07-59-39-656_4461d039e7201e30.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:39 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A042:6EFE:3E566F:8E5804:5F534563"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn81/contents/2020/09/05/07-59-39-656_4461d039e7201e30.webp","historyStatusCode":[],"spendMs":53},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"362.7 KB","destSize":"128.6 KB","compressRate":"35.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5cbdcd62-1743-4dca-896e-5c2e2c503eb8/01-landing-page-vue-router.png","sourceStatusCode":200,"destWidth":2480,"destHeight":1408,"sourceBytes":371410,"destBytes":131714,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":582,"convertSpendMs":163,"createdTime":"2020-09-05 15:59:39","host":"us-029*","referer":"https://smashingmagazine.com/2020/08/vue-router-features/","linkMd5ListStr":"5155f9648fe66b7e6f7f7224ebbda820","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn81/contents/2020/09/05/07-59-40-320_4461d039e7201e30.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:59:40 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["EA32:16F6:1CD5A:5E0C9:5F534569"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn81/contents/2020/09/05/07-59-40-320_4461d039e7201e30.webp","historyStatusCode":[],"spendMs":57},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"362.7 KB","destSize":"128.6 KB","compressRate":"35.5%"}],"extra10_invalidATagHrefValue":{"https://smashingmagazine.com/2020/09/component-library-react-emotion/_#button-component":"https://smashingmagazine.com/2020/09/component-library-react-emotion/#button-component","https://smashingmagazine.com/2020/09/component-library-react-emotion/_#columns-component":"https://smashingmagazine.com/2020/09/component-library-react-emotion/#columns-component","https://smashingmagazine.com/2020/08/checklist-cards-release/_#choose-your-deck":"https://smashingmagazine.com/2020/08/checklist-cards-release/#choose-your-deck","https://smashingmagazine.com/2020/08/checklist-cards-release/_/printed-books/ethical-design-handbook/":"https://smashingmagazine.com/printed-books/ethical-design-handbook/","https://smashingmagazine.com/2020/08/checklist-cards-release/_/printed-books/design-systems/":"https://smashingmagazine.com/printed-books/design-systems/","https://smashingmagazine.com/2020/08/demystifying-djangos-magic/_#models-layout":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/#models-layout","https://smashingmagazine.com/2020/08/checklist-cards-release/_/printed-books/checklist-cards/":"https://smashingmagazine.com/printed-books/checklist-cards/","https://smashingmagazine.com/2020/09/component-library-react-emotion/_#box-component":"https://smashingmagazine.com/2020/09/component-library-react-emotion/#box-component","https://smashingmagazine.com/2020/08/checklist-cards-release/_#toc":"https://smashingmagazine.com/2020/08/checklist-cards-release/#toc","https://smashingmagazine.com/2020/08/redux-real-world-application/_mailto:'test@email.com":"mailto:'test@email.com","https://smashingmagazine.com/2020/09/component-library-react-emotion/_#stack-component":"https://smashingmagazine.com/2020/09/component-library-react-emotion/#stack-component","https://smashingmagazine.com/2020/08/guide-product-tours-react-apps/_#react-joyride":"https://smashingmagazine.com/2020/08/guide-product-tours-react-apps/#react-joyride","https://smashingmagazine.com/2020/08/demystifying-djangos-magic/_#routing":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/#routing","https://smashingmagazine.com/2020/08/guide-product-tours-react-apps/_#react-tour":"https://smashingmagazine.com/2020/08/guide-product-tours-react-apps/#react-tour","https://smashingmagazine.com/2020/08/demystifying-djangos-magic/_#settings-py-file":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/#settings-py-file","https://smashingmagazine.com/2020/08/checklist-cards-release/_#choose-your-deck-options":"https://smashingmagazine.com/2020/08/checklist-cards-release/#choose-your-deck-options","https://smashingmagazine.com/2020/08/checklist-cards-release/_#online-workshop":"https://smashingmagazine.com/2020/08/checklist-cards-release/#online-workshop","https://smashingmagazine.com/2020/08/checklist-cards-release/_/printed-books/":"https://smashingmagazine.com/printed-books/","https://smashingmagazine.com/2020/08/checklist-cards-release/_/printed-books/click/":"https://smashingmagazine.com/printed-books/click/","https://smashingmagazine.com/2020/08/redux-real-world-application/_mailto:abc@xy.z":"mailto:abc@xy.z","https://smashingmagazine.com/2020/08/checklist-cards-release/_/printed-books/form-design-patterns/":"https://smashingmagazine.com/printed-books/form-design-patterns/","https://smashingmagazine.com/2020/08/demystifying-djangos-magic/_#installing-django":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/#installing-django","https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/_mailto:advertising@smashingmagazine.com":"mailto:advertising@smashingmagazine.com","https://smashingmagazine.com/2020/08/demystifying-djangos-magic/_#startproject-startapp-commands":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/#startproject-startapp-commands","https://smashingmagazine.com/2020/08/smashing-guide-search-engine-optimization/_#smashing-seo-cheat-sheet":"https://smashingmagazine.com/2020/08/smashing-guide-search-engine-optimization/#smashing-seo-cheat-sheet","https://smashingmagazine.com/2020/08/demystifying-djangos-magic/_#manage-py-file":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/#manage-py-file"},"extra111_proxyServerAndStatMap":{"http://us-032.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,200,200]},"http://us-037.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,200,200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":12,"resultList":[200,200,200,200,200,200,200,200,200,200,200,200]},"http://us-007.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-028.herokuapp.com/":{"failCount":0,"successCount":10,"resultList":[200,200,200,200,200,200,200,200,200,200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":10,"resultList":[200,200,200,200,200,200,200,200,200,200]},"http://us-011.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,200,200]},"http://us-020.herokuapp.com/":{"failCount":0,"successCount":11,"resultList":[200,200,200,200,200,200,200,200,200,200,200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,200,200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":8,"resultList":[200,200,200,200,200,200,200,200]},"http://us-54.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-004.herokuapp.com/":{"failCount":0,"successCount":10,"resultList":[200,200,200,200,200,200,200,200,200,200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":8,"resultList":[200,200,200,200,200,200,200,200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,200,200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,200,200]},"http://us-016.herokuapp.com/":{"failCount":0,"successCount":11,"resultList":[200,200,200,200,200,200,200,200,200,200,200]},"http://us-013.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,200,200]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":10,"resultList":[200,200,200,200,200,200,200,200,200,200]},"http://europe-24.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,200,200]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":10,"resultList":[200,200,200,200,200,200,200,200,200,200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":8,"resultList":[200,200,200,200,200,200,200,200]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":10,"resultList":[200,200,200,200,200,200,200,200,200,200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,200,200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":11,"resultList":[200,200,200,200,200,200,200,200,200,200,200]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":11,"resultList":[200,200,200,200,200,200,200,200,200,200,200]},"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":7,"resultList":[200,200,200,200,200,200,200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":7,"resultList":[200,200,200,200,200,200,200]},"http://europe62.herokuapp.com/":{"failCount":0,"successCount":10,"resultList":[200,200,200,200,200,200,200,200,200,200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":11,"resultList":[200,200,200,200,200,200,200,200,200,200,200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":12,"resultList":[200,200,200,200,200,200,200,200,200,200,200,200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":8,"resultList":[200,200,200,200,200,200,200,200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[206,200,200,200,200,206,200,200,200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":8,"resultList":[200,200,200,200,200,200,200,200]},"http://us-015.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,200,200]},"http://us-024.herokuapp.com/":{"failCount":0,"successCount":11,"resultList":[200,200,200,200,200,200,200,200,200,200,200]},"http://europe70.herokuapp.com/":{"failCount":0,"successCount":8,"resultList":[200,200,200,200,200,200,200,200]},"http://us-038.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,200,200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":8,"resultList":[200,200,200,200,200,200,200,200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":10,"resultList":[200,200,200,200,200,200,200,200,200,200]},"http://europe21.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,206,200]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":12,"resultList":[200,200,200,200,200,200,200,200,200,200,200,200]},"http://us-003.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":10,"resultList":[200,200,200,200,200,200,200,200,200,200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":11,"resultList":[200,200,200,200,200,200,200,200,200,200,200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":11,"resultList":[200,200,200,200,200,200,200,200,200,200,200]},"http://us-018.herokuapp.com/":{"failCount":0,"successCount":10,"resultList":[200,200,200,200,200,200,200,200,200,200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,200,200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":10,"resultList":[200,200,200,200,200,200,200,200,200,200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":7,"resultList":[200,200,200,200,200,200,200]},"http://europe-58.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,200,200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":11,"resultList":[200,200,200,200,200,200,200,200,200,200,200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":8,"resultList":[200,200,200,200,200,200,200,200]},"http://europe66.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,200,200]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":11,"resultList":[200,200,200,200,200,200,200,200,200,200,200]},"http://us-019.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":10,"resultList":[200,200,200,200,200,200,200,200,200,200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":9,"resultList":[200,200,200,200,200,200,200,200,200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":10,"resultList":[200,200,200,200,200,200,200,200,200,200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":11,"resultList":[200,200,200,200,200,200,200,200,200,200,200]},"http://us-023.herokuapp.com/":{"failCount":0,"successCount":7,"resultList":[200,200,206,200,200,200,200]},"http://us-040.herokuapp.com/":{"failCount":0,"successCount":7,"resultList":[200,200,200,200,200,200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fd8db1ed-e488-45e7-9024-4a6966a07386/76-porsche-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":575,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn70@2020_1/2020/09/05/07-59-16-296_a7f839a5bac6cf4c.webp","sourceBytes":163952,"destBytes":29754,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1250,"convertSpendMs":25,"createdTime":"2020-09-05 15:59:15","host":"us-040*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"160.1 KB","destSize":"29.1 KB","compressRate":"18.1%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/08641efe-0b90-498b-8ea1-d3e5a4474524/customer-centric-landing-pages.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn25@2020_2/2020/09/05/07-59-16-281_a05f26c9d5aa7045.webp","sourceBytes":286283,"destBytes":58586,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1291,"convertSpendMs":47,"createdTime":"2020-09-05 15:59:15","host":"us-54*","referer":"https://smashingmagazine.com/2020/08/tips-customer-centric-landing-pages/","linkMd5ListStr":"0ae5a604742fc5fdb0e1c7bcacfa3b97","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"279.6 KB","destSize":"57.2 KB","compressRate":"20.5%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3b6fd034-e3ca-43fe-96a8-64fed37b4667/demystifying-djangos-magic.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn38@2020_6/2020/09/05/07-59-16-321_115defa28278fbb6.webp","sourceBytes":281560,"destBytes":55822,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1349,"convertSpendMs":40,"createdTime":"2020-09-05 15:59:15","host":"us-007*","referer":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/","linkMd5ListStr":"90725d421e0a2e80cbc6fae6b90f5416","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"275 KB","destSize":"54.5 KB","compressRate":"19.8%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1bdb95ed-a19e-4c9e-a619-06d040d59396/figma-developers-guide.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn4@2020_1/2020/09/05/07-59-16-270_75cb92274bc7f3f2.webp","sourceBytes":286609,"destBytes":51444,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1347,"convertSpendMs":45,"createdTime":"2020-09-05 15:59:15","host":"us-008*","referer":"https://smashingmagazine.com/2020/09/figma-developers-guide/","linkMd5ListStr":"f3b6fa9b4a0de46db15a88ca8ddaba3b","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"279.9 KB","destSize":"50.2 KB","compressRate":"17.9%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9c79f83b-eeaa-47a7-a553-148e726a0b2d/vue-router-features.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn15@2020_3/2020/09/05/07-59-16-340_c9377f94315804b9.webp","sourceBytes":285121,"destBytes":57894,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1386,"convertSpendMs":51,"createdTime":"2020-09-05 15:59:15","host":"us-037*","referer":"https://smashingmagazine.com/2020/08/vue-router-features/","linkMd5ListStr":"5155f9648fe66b7e6f7f7224ebbda820","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"278.4 KB","destSize":"56.5 KB","compressRate":"20.3%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/552aea44-8886-49c7-b14a-e08f11e7ae07/aug-20-were-all-the-same-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn11@2020_3/2020/09/05/07-59-16-324_4fc4bdca883468dc.webp","sourceBytes":105268,"destBytes":47754,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1389,"convertSpendMs":32,"createdTime":"2020-09-05 15:59:15","host":"us-028*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"102.8 KB","destSize":"46.6 KB","compressRate":"45.4%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/305b256f-0b65-4042-995c-1c3e806ad6dd/smashing-podcast-episode-21.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn33@2020_3/2020/09/05/07-59-16-354_f385da0cfc6d17ec.webp","sourceBytes":289608,"destBytes":66034,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1403,"convertSpendMs":101,"createdTime":"2020-09-05 15:59:15","host":"us-019*","referer":"https://smashingmagazine.com/2020/07/smashing-podcast-episode-21/","linkMd5ListStr":"16c40e68c02c8dbd92a41f61b38f53b0","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"282.8 KB","destSize":"64.5 KB","compressRate":"22.8%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/78cb8ad5-2002-4bd7-9e54-a630bcfcb339/comment-system-firebase.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn20@2020_2/2020/09/05/07-59-16-376_9a6cfbd2366ee517.webp","sourceBytes":174816,"destBytes":53086,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1397,"convertSpendMs":58,"createdTime":"2020-09-05 15:59:15","host":"us-024*","referer":"https://smashingmagazine.com/2020/08/comment-system-firebase/","linkMd5ListStr":"d3941734f9d21fb1526a62ff1d7b9b2c","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"170.7 KB","destSize":"51.8 KB","compressRate":"30.4%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a6db935e-12ab-448f-aca4-98213cdbaee1/icons-mobile-apps.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn20@2020_2/2020/09/05/07-59-16-374_6be1aca13a2a7e64.webp","sourceBytes":260957,"destBytes":53684,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1421,"convertSpendMs":56,"createdTime":"2020-09-05 15:59:15","host":"us-51*","referer":"https://smashingmagazine.com/2020/09/icons-mobile-apps/","linkMd5ListStr":"bfb80d7e10b5ce2cc36e767b323e14aa","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"254.8 KB","destSize":"52.4 KB","compressRate":"20.6%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e3d756a-fadc-47f7-b69c-4448f11d215b/smashing-news-topple-newsletter.png","sourceStatusCode":200,"destWidth":1709,"destHeight":1007,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn43@2020_3/2020/09/05/07-59-16-362_dbde8350e613d4d3.webp","sourceBytes":198396,"destBytes":58952,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1429,"convertSpendMs":98,"createdTime":"2020-09-05 15:59:15","host":"us-016*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"193.7 KB","destSize":"57.6 KB","compressRate":"29.7%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d16f246a-9faa-401a-b2d7-efca13b254e2/design-website-five-senses.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn39@2020_4/2020/09/05/07-59-16-388_cc9fca031ff9ba2f.webp","sourceBytes":260136,"destBytes":53438,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1420,"convertSpendMs":99,"createdTime":"2020-09-05 15:59:15","host":"us-028*","referer":"https://smashingmagazine.com/2020/08/design-website-five-senses/","linkMd5ListStr":"90139c1573575fffdbeaa42a49e64624","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"254 KB","destSize":"52.2 KB","compressRate":"20.5%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/904d0dc8-ba87-4646-892d-d7f04c9c27b0/forms-validation-ionic-react.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn49@2020_4/2020/09/05/07-59-16-344_b296d76024a98e86.webp","sourceBytes":272927,"destBytes":54294,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1433,"convertSpendMs":47,"createdTime":"2020-09-05 15:59:15","host":"us-035*","referer":"https://smashingmagazine.com/2020/08/forms-validation-ionic-react/","linkMd5ListStr":"fa41336deda35415b1959d255ba9a56c","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"266.5 KB","destSize":"53 KB","compressRate":"19.9%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ae600a94-e096-4843-8bb6-85450d39bce8/client-side-graphql-apollo-client-react-apps.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn80@2020_3/2020/09/05/07-59-16-375_812f1a3d8f323dfb.webp","sourceBytes":255027,"destBytes":62360,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1436,"convertSpendMs":76,"createdTime":"2020-09-05 15:59:15","host":"us-016*","referer":"https://smashingmagazine.com/2020/07/client-side-graphql-apollo-client-react-apps/","linkMd5ListStr":"2de9e609eb9cf95b580b73d5f31a0743","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"249 KB","destSize":"60.9 KB","compressRate":"24.5%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fb1a5498-6210-4075-8596-7a562a14c00a/smashing-podcast-episode-23.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn92@2020_3/2020/09/05/07-59-16-362_20bc157305701668.webp","sourceBytes":313587,"destBytes":68814,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1454,"convertSpendMs":54,"createdTime":"2020-09-05 15:59:15","host":"us-55*","referer":"https://smashingmagazine.com/2020/08/smashing-podcast-episode-23/","linkMd5ListStr":"8abfe7b036a7eadf0d06267630e489aa","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"306.2 KB","destSize":"67.2 KB","compressRate":"21.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2eed3901-40d8-4e54-9577-cf769ff31882/gmail-settings.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn63@2020_5/2020/09/05/07-59-16-428_efa711aa0050b28a.webp","sourceBytes":157496,"destBytes":35782,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1457,"convertSpendMs":141,"createdTime":"2020-09-05 15:59:15","host":"us-020*","referer":"https://smashingmagazine.com/2020/08/lessons-web-app-designers-learn-google/","linkMd5ListStr":"90050a70ad8778f8abad9e0a4b74cfcb","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"153.8 KB","destSize":"34.9 KB","compressRate":"22.7%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1d082fe5-9487-4dac-83b9-ac0fec8bd674/smashing-podcast-episode-22.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn23@2020_3/2020/09/05/07-59-16-390_3d506a243c2f2cb9.webp","sourceBytes":362902,"destBytes":68914,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1469,"convertSpendMs":61,"createdTime":"2020-09-05 15:59:15","host":"us-012*","referer":"https://smashingmagazine.com/2020/08/smashing-podcast-episode-22/","linkMd5ListStr":"3e8c255a1b00cf50ca908e0c292a71f6","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"354.4 KB","destSize":"67.3 KB","compressRate":"19%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af37862f-c811-4e56-a9b9-96116da63a2b/styled-components-react.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn99@2020_1/2020/09/05/07-59-16-429_5b0683fd29501ae7.webp","sourceBytes":174658,"destBytes":47418,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1507,"convertSpendMs":139,"createdTime":"2020-09-05 15:59:15","host":"us-020*","referer":"https://smashingmagazine.com/2020/07/styled-components-react/","linkMd5ListStr":"d807f2e63b530bff5bc73387a294756b","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"170.6 KB","destSize":"46.3 KB","compressRate":"27.1%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/aee2bf87-676a-4b01-98a0-17dbc997f1e8/mobx-state-manager-react-native-applications.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn55@2020_5/2020/09/05/07-59-16-435_2fba90910bd050e7.webp","sourceBytes":345729,"destBytes":73616,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1508,"convertSpendMs":62,"createdTime":"2020-09-05 15:59:15","host":"us-010*","referer":"https://smashingmagazine.com/2020/08/mobx-state-manager-react-native-applications/","linkMd5ListStr":"b7e12972db0bd44e3f243eb7c65c92c5","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"337.6 KB","destSize":"71.9 KB","compressRate":"21.3%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/babddeaf-7d71-4dc1-99b4-19c2dd7613a2/api-flask-google-cloudsql-app-engine.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn56@2020_5/2020/09/05/07-59-16-364_3d8e6c57260f62f0.webp","sourceBytes":272566,"destBytes":63024,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1536,"convertSpendMs":49,"createdTime":"2020-09-05 15:59:15","host":"us-55*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"266.2 KB","destSize":"61.5 KB","compressRate":"23.1%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/38a09189-4a44-4287-a937-65910f97b4de/draw-your-favorite-car-examples.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn8@2020_4/2020/09/05/07-59-16-430_b00910c25158635e.webp","sourceBytes":664098,"destBytes":107514,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1546,"convertSpendMs":109,"createdTime":"2020-09-05 15:59:15","host":"us-51*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"648.5 KB","destSize":"105 KB","compressRate":"16.2%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0f038321-f095-4eee-b9bc-b6dbf66b7fb5/smashing-checklists-cards-box.png","sourceStatusCode":200,"destWidth":2000,"destHeight":1390,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn84@2020_4/2020/09/05/07-59-16-523_ae82ae6cbe0476f1.webp","sourceBytes":1086411,"destBytes":58524,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1587,"convertSpendMs":158,"createdTime":"2020-09-05 15:59:15","host":"us-004*","referer":"https://smashingmagazine.com/2020/08/checklist-cards-release/","linkMd5ListStr":"2954bfe0e134e38e8bb6b7bd231c4f60","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1 MB","destSize":"57.2 KB","compressRate":"5.4%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/be5721b9-e89b-4bda-b51f-6a480b72179e/guide-product-tours-react-apps.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn47@2020_5/2020/09/05/07-59-16-373_96a7bf94c628ccc3.webp","sourceBytes":249623,"destBytes":60722,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1615,"convertSpendMs":57,"createdTime":"2020-09-05 15:59:15","host":"us-004*","referer":"https://smashingmagazine.com/2020/08/guide-product-tours-react-apps/","linkMd5ListStr":"8aad86784c6c5de060112293fddfd490","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"243.8 KB","destSize":"59.3 KB","compressRate":"24.3%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b09a7a19-084a-4252-89f2-ab8b168f778c/component-library-react-emotion.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn29@2020_1/2020/09/05/07-59-16-597_1a2c71f88da434b5.webp","sourceBytes":273651,"destBytes":60174,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1742,"convertSpendMs":46,"createdTime":"2020-09-05 15:59:15","host":"us-031*","referer":"https://smashingmagazine.com/2020/09/component-library-react-emotion/","linkMd5ListStr":"c2ff886e4902a296612efa5d4bdb8cd3","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"267.2 KB","destSize":"58.8 KB","compressRate":"22%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b996bcb0-7986-4e51-a58b-a5862d95e7f0/issue-12-15-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2880,"destHeight":2048,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn36@2020_3/2020/09/05/07-59-16-597_b75a09890e733163.webp","sourceBytes":973621,"destBytes":279564,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1794,"convertSpendMs":262,"createdTime":"2020-09-05 15:59:15","host":"us-51*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"950.8 KB","destSize":"273 KB","compressRate":"28.7%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b72dc50f-b61a-4234-b83a-f52d7eb77f07/sep-20-terrazzo-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn15@2020_5/2020/09/05/07-59-16-641_6bd220a466403261.webp","sourceBytes":147045,"destBytes":71062,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1804,"convertSpendMs":21,"createdTime":"2020-09-05 15:59:15","host":"us-016*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"143.6 KB","destSize":"69.4 KB","compressRate":"48.3%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3af9d3a1-4d9f-4b6d-9e7c-e605279b961b/smashingconf-live-badge-designs.png","sourceStatusCode":200,"destWidth":1500,"destHeight":645,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn60@2020_4/2020/09/05/07-59-16-416_da87b56095785838.webp","sourceBytes":296421,"destBytes":117600,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1882,"convertSpendMs":82,"createdTime":"2020-09-05 15:59:15","host":"us-032*","referer":"https://smashingmagazine.com/2020/08/smashingconf-live-august-wrapup/","linkMd5ListStr":"a9cb53d45a0e601abe8e7d8fe024bba5","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"289.5 KB","destSize":"114.8 KB","compressRate":"39.7%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dd58cbbe-3363-4651-bdbd-2a93841fd565/responsive-dashboard-angular-material-ng2-charts-schematics.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn52@2020_5/2020/09/05/07-59-16-741_dd050be32401173a.webp","sourceBytes":244410,"destBytes":56284,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1925,"convertSpendMs":41,"createdTime":"2020-09-05 15:59:15","host":"europe67*","referer":"https://smashingmagazine.com/2020/07/responsive-dashboard-angular-material-ng2-charts-schematics/","linkMd5ListStr":"49147f5e0fdeef5d08e1f0588727e911","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"238.7 KB","destSize":"55 KB","compressRate":"23%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1aaa4f81-68d8-4c74-aa38-6d843cbd0d72/accessibility-chrome-devtools.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn59@2020_5/2020/09/05/07-59-16-728_dc09a9666ee1bdf3.webp","sourceBytes":211032,"destBytes":49212,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1949,"convertSpendMs":37,"createdTime":"2020-09-05 15:59:15","host":"europe-23*","referer":"https://smashingmagazine.com/2020/08/accessibility-chrome-devtools/","linkMd5ListStr":"692062341a74418e56f3a5d4d97a92e4","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"206.1 KB","destSize":"48.1 KB","compressRate":"23.3%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2dbd0b35-8a07-4450-86b5-23e2a2a35b79/error-handling-nodejs-error-classes.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn54@2020_2/2020/09/05/07-59-16-740_10e374d50d3d94f8.webp","sourceBytes":268335,"destBytes":51690,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1967,"convertSpendMs":38,"createdTime":"2020-09-05 15:59:15","host":"europe-24*","referer":"https://smashingmagazine.com/2020/08/error-handling-nodejs-error-classes/","linkMd5ListStr":"95a28e879b5bf82c42d52040c5380364","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"262 KB","destSize":"50.5 KB","compressRate":"19.3%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d938f7b6-62df-4844-b3ab-5b274ac28602/renaissance-no-code-web-designers.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn66@2020_1/2020/09/05/07-59-16-744_4a421c39da753c62.webp","sourceBytes":223735,"destBytes":48050,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1990,"convertSpendMs":37,"createdTime":"2020-09-05 15:59:15","host":"europe62*","referer":"https://smashingmagazine.com/2020/07/renaissance-no-code-web-designers/","linkMd5ListStr":"5dc2ee4cf02a8d13b4ca79f601851ab2","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"218.5 KB","destSize":"46.9 KB","compressRate":"21.5%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f742cac-ca4a-4df3-8438-e8bc472e209a/application-color-schemes-css-custom-properties.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn32@2020_4/2020/09/05/07-59-16-768_c669f49ef582b786.webp","sourceBytes":284116,"destBytes":60972,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2006,"convertSpendMs":41,"createdTime":"2020-09-05 15:59:15","host":"europe63*","referer":"https://smashingmagazine.com/2020/08/application-color-schemes-css-custom-properties/","linkMd5ListStr":"1d07a3a7ea9e5c230cc1a792c9ee5246","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"277.5 KB","destSize":"59.5 KB","compressRate":"21.5%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/12a07f10-edcb-4e4f-8045-5ba1da468360/indieweb-autonomy-online.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn87@2020_1/2020/09/05/07-59-16-778_999505b5277d2a7a.webp","sourceBytes":234238,"destBytes":49200,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2010,"convertSpendMs":41,"createdTime":"2020-09-05 15:59:15","host":"europe67*","referer":"https://smashingmagazine.com/2020/08/autonomy-online-indieweb/","linkMd5ListStr":"db8f89eda9d79fba0a32a36340d2b29a","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"228.7 KB","destSize":"48 KB","compressRate":"21%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a46ebd5b-f680-407f-8975-a06963d03fda/clients-backlinks-design.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn42@2020_3/2020/09/05/07-59-16-758_f22b8770981e376f.webp","sourceBytes":263598,"destBytes":56704,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2012,"convertSpendMs":47,"createdTime":"2020-09-05 15:59:15","host":"europe70*","referer":"https://smashingmagazine.com/2020/08/clients-backlinks-design/","linkMd5ListStr":"8be8634c820c7dc900f70d342c72e08a","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"257.4 KB","destSize":"55.4 KB","compressRate":"21.5%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d3232e5-09b9-41ab-9f68-8e99c343c203/static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn46@2020_5/2020/09/05/07-59-16-841_d4d658c66106f8e4.webp","sourceBytes":309580,"destBytes":60902,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2076,"convertSpendMs":41,"createdTime":"2020-09-05 15:59:16","host":"europe-58*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"302.3 KB","destSize":"59.5 KB","compressRate":"19.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a2e6f3ea-b44c-456a-a8be-509911dfb34a/sep-19-national-video-games-day-delight-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn11@2020_5/2020/09/05/07-59-17-520_9c94c79db86fa37b.webp","sourceBytes":149354,"destBytes":38076,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1038,"convertSpendMs":24,"createdTime":"2020-09-05 15:59:17","host":"us-018*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"145.9 KB","destSize":"37.2 KB","compressRate":"25.5%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1099fbe7-7cfb-415d-b3ec-73741005a514/smashing-guide-search-engine-optimization.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn7@2020_1/2020/09/05/07-59-17-262_d2c89f38c8a5c984.webp","sourceBytes":243660,"destBytes":53702,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2440,"convertSpendMs":39,"createdTime":"2020-09-05 15:59:15","host":"europe21*","referer":"https://smashingmagazine.com/2020/08/smashing-guide-search-engine-optimization/","linkMd5ListStr":"9ab841fbcb7541b22c992e4217b61978","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"237.9 KB","destSize":"52.4 KB","compressRate":"22%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/73408acd-dd0d-408d-b4e2-1f645018118e/porsche165-4-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":686,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn88@2020_6/2020/09/05/07-59-17-667_59a2c64f8cb8079d.webp","sourceBytes":542079,"destBytes":39494,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1292,"convertSpendMs":41,"createdTime":"2020-09-05 15:59:17","host":"us-026*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"529.4 KB","destSize":"38.6 KB","compressRate":"7.3%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a14ce96-af2d-466e-bf48-c199273ccdaa/building-react-apps-storybook.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn22@2020_4/2020/09/05/07-59-17-403_9d980bdd409e415b.webp","sourceBytes":282353,"destBytes":55394,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2526,"convertSpendMs":48,"createdTime":"2020-09-05 15:59:15","host":"europe66*","referer":"https://smashingmagazine.com/2020/09/building-react-apps-storybook/","linkMd5ListStr":"a4dec1fe83c49a7924bf09761305d38c","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"275.7 KB","destSize":"54.1 KB","compressRate":"19.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9a61629f-ad13-40f6-adaa-480d6f123c15/porsche163-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":750,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn84@2020_2/2020/09/05/07-59-17-672_10285cc1fa2581de.webp","sourceBytes":530645,"destBytes":55042,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1391,"convertSpendMs":64,"createdTime":"2020-09-05 15:59:17","host":"us-039*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"518.2 KB","destSize":"53.8 KB","compressRate":"10.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6bd5ab6-458d-4bf6-b42d-c3c4c556e86d/porsche143-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn96@2020_3/2020/09/05/07-59-17-722_093321b313391846.webp","sourceBytes":361244,"destBytes":28208,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1293,"convertSpendMs":26,"createdTime":"2020-09-05 15:59:17","host":"us-002*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"352.8 KB","destSize":"27.5 KB","compressRate":"7.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/62f81445-8cd1-4e3b-b224-aee6d898fd46/storing-comment-comment-system-firebase.png","sourceStatusCode":200,"destWidth":1600,"destHeight":960,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn36@2020_5/2020/09/05/07-59-17-776_7f8b8b187106779c.webp","sourceBytes":78363,"destBytes":22130,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1233,"convertSpendMs":74,"createdTime":"2020-09-05 15:59:17","host":"us-010*","referer":"https://smashingmagazine.com/2020/08/comment-system-firebase/","linkMd5ListStr":"d3941734f9d21fb1526a62ff1d7b9b2c","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"76.5 KB","destSize":"21.6 KB","compressRate":"28.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eee382bb-43e2-45d6-8682-3509a06c9cb8/zoom-navigation.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn27@2020_3/2020/09/05/07-59-17-779_0c614ff3e14a813a.webp","sourceBytes":127376,"destBytes":40236,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1291,"convertSpendMs":46,"createdTime":"2020-09-05 15:59:17","host":"us-034*","referer":"https://smashingmagazine.com/2020/08/lessons-web-app-designers-learn-google/","linkMd5ListStr":"90050a70ad8778f8abad9e0a4b74cfcb","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"124.4 KB","destSize":"39.3 KB","compressRate":"31.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d451b9ba-63ec-4293-9e22-4eb3f004fcb2/issue-12-26-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2000,"destHeight":1475,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn72@2020_4/2020/09/05/07-59-17-598_4c7cccb07239ca96.webp","sourceBytes":633574,"destBytes":124470,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1567,"convertSpendMs":159,"createdTime":"2020-09-05 15:59:17","host":"us-010*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"618.7 KB","destSize":"121.6 KB","compressRate":"19.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0cdc4495-d28d-4b6b-907a-904bd9301130/google-translate-dashboard.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn48@2020_4/2020/09/05/07-59-17-811_4bf9ff225c390b79.webp","sourceBytes":61690,"destBytes":15810,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1246,"convertSpendMs":52,"createdTime":"2020-09-05 15:59:17","host":"us-039*","referer":"https://smashingmagazine.com/2020/08/lessons-web-app-designers-learn-google/","linkMd5ListStr":"90050a70ad8778f8abad9e0a4b74cfcb","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"60.2 KB","destSize":"15.4 KB","compressRate":"25.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d16c2699-9cef-4e67-b8d1-2adc1beff5ab/porsche32-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn16@2020_4/2020/09/05/07-59-17-818_1a2c7f260d54a1cb.webp","sourceBytes":149509,"destBytes":21244,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1369,"convertSpendMs":63,"createdTime":"2020-09-05 15:59:17","host":"us-006*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"146 KB","destSize":"20.7 KB","compressRate":"14.2%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cb418b05-a190-4e3e-85f1-7ece1fa1039b/redux-real-world-application.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn27@2020_4/2020/09/05/07-59-17-473_84e41fee6d33f1e5.webp","sourceBytes":278841,"destBytes":58960,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2705,"convertSpendMs":40,"createdTime":"2020-09-05 15:59:15","host":"europe-25*","referer":"https://smashingmagazine.com/2020/08/redux-real-world-application/","linkMd5ListStr":"cdfbc1833104e26676bb8df00a8b2a3c","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"272.3 KB","destSize":"57.6 KB","compressRate":"21.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d6a036a-38af-4e9d-abca-40802b84185e/porsche162-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":750,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn52@2020_4/2020/09/05/07-59-17-815_bb250b9e57c00d3a.webp","sourceBytes":531780,"destBytes":53978,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1317,"convertSpendMs":36,"createdTime":"2020-09-05 15:59:17","host":"us-026*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"519.3 KB","destSize":"52.7 KB","compressRate":"10.2%"},{"code":1,"isDone":false,"source":"http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3eac1975-cebe-4b97-8d13-01e212282245/lessons-web-app-designers-learn-google.png","sourceStatusCode":200,"destWidth":1201,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn11@2020_6/2020/09/05/07-59-17-381_2ec8f7970865d938.webp","sourceBytes":260886,"destBytes":57606,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2709,"convertSpendMs":52,"createdTime":"2020-09-05 15:59:15","host":"europe-59*","referer":"https://smashingmagazine.com/2020/08/lessons-web-app-designers-learn-google/","linkMd5ListStr":"90050a70ad8778f8abad9e0a4b74cfcb","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"254.8 KB","destSize":"56.3 KB","compressRate":"22.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bbbc6354-9b73-4060-a6ad-bf3a4641c1f2/2-autonomy-online-indieweb.jpg","sourceStatusCode":200,"destWidth":1600,"destHeight":1067,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn4@2020_1/2020/09/05/07-59-17-792_31984b8be523769a.webp","sourceBytes":240569,"destBytes":95370,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1521,"convertSpendMs":83,"createdTime":"2020-09-05 15:59:17","host":"us-53*","referer":"https://smashingmagazine.com/2020/08/autonomy-online-indieweb/","linkMd5ListStr":"db8f89eda9d79fba0a32a36340d2b29a","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"234.9 KB","destSize":"93.1 KB","compressRate":"39.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8f31770f-5cc0-4ce3-bcaa-1bd9572a5ea8/creating-mysql-instance-api-flask-google-cloud-sql-app-engine.png","sourceStatusCode":200,"destWidth":1016,"destHeight":1290,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn59@2020_5/2020/09/05/07-59-17-894_92ee9d1e9fa99992.webp","sourceBytes":137510,"destBytes":56848,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1372,"convertSpendMs":44,"createdTime":"2020-09-05 15:59:17","host":"us-002*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"134.3 KB","destSize":"55.5 KB","compressRate":"41.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b5d4340c-64c9-4ac9-9afe-82623a8c55e2/porsche47-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn55@2020_3/2020/09/05/07-59-17-989_739685e0edfc2c83.webp","sourceBytes":127023,"destBytes":20254,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1430,"convertSpendMs":21,"createdTime":"2020-09-05 15:59:17","host":"us-014*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"124 KB","destSize":"19.8 KB","compressRate":"15.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7867f606-b5dd-41f2-9f8a-6be9e3aeae64/porsche85-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":554,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn68@2020_6/2020/09/05/07-59-18-061_893f6a649458653f.webp","sourceBytes":107994,"destBytes":16096,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1244,"convertSpendMs":50,"createdTime":"2020-09-05 15:59:17","host":"us-53*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"105.5 KB","destSize":"15.7 KB","compressRate":"14.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/432133c2-e962-414b-9ae4-faaa55a098ca/4-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn72@2020_3/2020/09/05/07-59-18-090_52cf6ccaa70a241b.webp","sourceBytes":150496,"destBytes":33844,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1274,"convertSpendMs":58,"createdTime":"2020-09-05 15:59:17","host":"us-030*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"147 KB","destSize":"33.1 KB","compressRate":"22.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2f831ea1-0ddd-4b40-b2ac-65e05adec473/sep-19-cheerful-september-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn81@2020_5/2020/09/05/07-59-18-176_cb0c14690363f5e0.webp","sourceBytes":37885,"destBytes":25406,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1218,"convertSpendMs":13,"createdTime":"2020-09-05 15:59:17","host":"us-007*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37 KB","destSize":"24.8 KB","compressRate":"67.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e91b57b7-dadf-4f5e-8cce-fdadd634a357/shortcuts-figma.png","sourceStatusCode":200,"destWidth":2808,"destHeight":468,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn13@2020_4/2020/09/05/07-59-18-198_cdf54c3328ea477d.webp","sourceBytes":27437,"destBytes":34742,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1002,"convertSpendMs":41,"createdTime":"2020-09-05 15:59:18","host":"us-040*","referer":"https://smashingmagazine.com/2020/09/figma-developers-guide/","linkMd5ListStr":"f3b6fa9b4a0de46db15a88ca8ddaba3b","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.8 KB","destSize":"33.9 KB","compressRate":"126.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/95f13356-bec3-4b0f-aa45-43ac79d92f84/porsche133-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn23@2020_3/2020/09/05/07-59-18-138_88ea58872fee2f07.webp","sourceBytes":82818,"destBytes":13052,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1622,"convertSpendMs":20,"createdTime":"2020-09-05 15:59:17","host":"europe-57*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"80.9 KB","destSize":"12.7 KB","compressRate":"15.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af9e8d11-8a7f-468f-bab8-0b94beef0f46/kindermusik-kid-laughing.png","sourceStatusCode":200,"destWidth":1425,"destHeight":740,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn76@2020_6/2020/09/05/07-59-18-144_f0e5d919966631fc.webp","sourceBytes":664411,"destBytes":85576,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1471,"convertSpendMs":79,"createdTime":"2020-09-05 15:59:17","host":"us-018*","referer":"https://smashingmagazine.com/2020/08/design-website-five-senses/","linkMd5ListStr":"90139c1573575fffdbeaa42a49e64624","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"648.8 KB","destSize":"83.6 KB","compressRate":"12.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ceffe1a-0611-4e80-bca4-eb679ddda34e/porsche70a-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn93@2020_1/2020/09/05/07-59-18-389_2d6bc600a3728b63.webp","sourceBytes":176618,"destBytes":22954,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1225,"convertSpendMs":32,"createdTime":"2020-09-05 15:59:18","host":"us-035*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"172.5 KB","destSize":"22.4 KB","compressRate":"13%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9b5ec0ab-3ef5-4459-8f5e-1989e63c048e/porsche130-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn20@2020_1/2020/09/05/07-59-18-200_38d66d7db1a62bbd.webp","sourceBytes":67528,"destBytes":9666,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1795,"convertSpendMs":18,"createdTime":"2020-09-05 15:59:17","host":"europe69*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65.9 KB","destSize":"9.4 KB","compressRate":"14.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca1ca11d-0992-4bfb-aff9-71d7e3bb71d1/issue-12-12-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2880,"destHeight":2048,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn31@2020_2/2020/09/05/07-59-18-207_c29a20766aad2e45.webp","sourceBytes":784993,"destBytes":313952,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1956,"convertSpendMs":403,"createdTime":"2020-09-05 15:59:17","host":"us-022*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"766.6 KB","destSize":"306.6 KB","compressRate":"40%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/77eaabbb-9743-45b6-99f3-f35a5584275f/sept-17-funny-cats-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn98@2020_1/2020/09/05/07-59-18-441_4a95f42f394e62c4.webp","sourceBytes":58116,"destBytes":35994,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1283,"convertSpendMs":17,"createdTime":"2020-09-05 15:59:18","host":"us-023*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.8 KB","destSize":"35.2 KB","compressRate":"61.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/caca3c48-0fd1-47fc-b944-36cbc0f1104e/porsche155-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":340,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn43@2020_1/2020/09/05/07-59-18-210_1860c6ec5f67e7a4.webp","sourceBytes":87568,"destBytes":33736,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1904,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:17","host":"europe61*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"85.5 KB","destSize":"32.9 KB","compressRate":"38.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/233ab34b-cb53-4727-8042-3a8887b8891f/7-building-react-apps-storybook.png","sourceStatusCode":200,"destWidth":1366,"destHeight":738,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn63@2020_6/2020/09/05/07-59-18-305_50d2f4ba662b422f.webp","sourceBytes":81069,"destBytes":38002,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1876,"convertSpendMs":40,"createdTime":"2020-09-05 15:59:17","host":"europe65*","referer":"https://smashingmagazine.com/2020/09/building-react-apps-storybook/","linkMd5ListStr":"a4dec1fe83c49a7924bf09761305d38c","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"79.2 KB","destSize":"37.1 KB","compressRate":"46.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a92e8178-2097-4bf1-9803-1d85bb2710a5/august-12-childhood-memories-4-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn79@2020_2/2020/09/05/07-59-18-017_642f7e5af91b7891.webp","sourceBytes":256146,"destBytes":99346,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2247,"convertSpendMs":23,"createdTime":"2020-09-05 15:59:17","host":"europe61*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"250.1 KB","destSize":"97 KB","compressRate":"38.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c5110c86-962b-49bc-8e23-56ceb008aafa/porsche09-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn20@2020_3/2020/09/05/07-59-18-564_db238a60885441f1.webp","sourceBytes":74178,"destBytes":18610,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1411,"convertSpendMs":65,"createdTime":"2020-09-05 15:59:18","host":"us-028*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"72.4 KB","destSize":"18.2 KB","compressRate":"25.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3e399fb2-2ece-4ac5-aff1-5f62a12ed9a6/porsche11-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn100@2020_4/2020/09/05/07-59-18-518_3fcdf04f2f3e19bc.webp","sourceBytes":116555,"destBytes":25842,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2182,"convertSpendMs":57,"createdTime":"2020-09-05 15:59:17","host":"europe65*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"113.8 KB","destSize":"25.2 KB","compressRate":"22.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/822044fc-fb95-4507-8179-7190a5d8d95c/porsche184-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn49@2020_3/2020/09/05/07-59-18-774_30e0551239a5deaa.webp","sourceBytes":212273,"destBytes":23398,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1024,"convertSpendMs":20,"createdTime":"2020-09-05 15:59:18","host":"us-009*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"207.3 KB","destSize":"22.8 KB","compressRate":"11%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6a5fb82a-1680-4a17-8ad0-14b8365bb55f/1-smashing-guide-search-engine-optimization.png","sourceStatusCode":200,"destWidth":1149,"destHeight":751,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn27@2020_2/2020/09/05/07-59-18-819_f6db196284a6c05a.webp","sourceBytes":81600,"destBytes":21090,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1223,"convertSpendMs":45,"createdTime":"2020-09-05 15:59:18","host":"us-004*","referer":"https://smashingmagazine.com/2020/08/smashing-guide-search-engine-optimization/","linkMd5ListStr":"9ab841fbcb7541b22c992e4217b61978","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"79.7 KB","destSize":"20.6 KB","compressRate":"25.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4890f4e9-509b-4f1a-a2c9-55f1d30d500c/porsche13-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn39@2020_4/2020/09/05/07-59-18-733_1be4fdaacf3687ee.webp","sourceBytes":127904,"destBytes":12756,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2242,"convertSpendMs":55,"createdTime":"2020-09-05 15:59:17","host":"europe-23*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"124.9 KB","destSize":"12.5 KB","compressRate":"10%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/100b69a5-eba4-4321-9266-97afd6490244/porsche112-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":375,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn66@2020_3/2020/09/05/07-59-19-168_90cf50180f01e88c.webp","sourceBytes":169137,"destBytes":29418,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1356,"convertSpendMs":51,"createdTime":"2020-09-05 15:59:18","host":"us-025*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"165.2 KB","destSize":"28.7 KB","compressRate":"17.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4e25fe70-b782-45a3-938e-30c893587aab/porsche77-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":575,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn73@2020_5/2020/09/05/07-59-19-177_d7896014ff9f8f2f.webp","sourceBytes":104441,"destBytes":22710,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1292,"convertSpendMs":34,"createdTime":"2020-09-05 15:59:18","host":"us-001*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"102 KB","destSize":"22.2 KB","compressRate":"21.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0331074a-b252-4d26-ac02-fc5d68589a72/porsche115-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":365,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn41@2020_1/2020/09/05/07-59-19-013_830b2425c82ddbc8.webp","sourceBytes":92414,"destBytes":16278,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1490,"convertSpendMs":20,"createdTime":"2020-09-05 15:59:18","host":"us-033*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"90.2 KB","destSize":"15.9 KB","compressRate":"17.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee826393-d679-4eb0-b6e1-5b836ab96a6e/porsche08-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn61@2020_2/2020/09/05/07-59-19-176_e0959223f8b4700c.webp","sourceBytes":87814,"destBytes":26528,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1416,"convertSpendMs":109,"createdTime":"2020-09-05 15:59:18","host":"us-038*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"85.8 KB","destSize":"25.9 KB","compressRate":"30.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a2120835-5cfc-47c1-9c62-25cd1d46354d/accessibility-chrome-devtools-inspect-tooltip-alt.png","sourceStatusCode":200,"destWidth":1560,"destHeight":906,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn86@2020_5/2020/09/05/07-59-18-809_9b3a8b1b045b5019.webp","sourceBytes":134294,"destBytes":44616,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1993,"convertSpendMs":72,"createdTime":"2020-09-05 15:59:18","host":"europe70*","referer":"https://smashingmagazine.com/2020/08/accessibility-chrome-devtools/","linkMd5ListStr":"692062341a74418e56f3a5d4d97a92e4","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"131.1 KB","destSize":"43.6 KB","compressRate":"33.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d54853ab-8c08-4d74-9d0b-aac4418d0e8d/issue-11-07-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":788,"destHeight":500,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn32@2020_6/2020/09/05/07-59-18-952_6aa2d685ae2d1650.webp","sourceBytes":97731,"destBytes":49588,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1479,"convertSpendMs":32,"createdTime":"2020-09-05 15:59:18","host":"europe67*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"95.4 KB","destSize":"48.4 KB","compressRate":"50.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8ae75186-a0ae-4c90-956d-9402da34d792/porsche100-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn70@2020_1/2020/09/05/07-59-19-199_aceae07f5bcb7e59.webp","sourceBytes":495267,"destBytes":50554,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1428,"convertSpendMs":67,"createdTime":"2020-09-05 15:59:18","host":"us-013*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"483.7 KB","destSize":"49.4 KB","compressRate":"10.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f7e6d224-98a2-4b96-9f67-8b33a38cf79c/4-using-mobx-state-manager-react-native-applications.png","sourceStatusCode":200,"destWidth":945,"destHeight":104,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn12@2020_5/2020/09/05/07-59-19-414_afafe9b86a981a9b.webp","sourceBytes":6807,"destBytes":3188,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1163,"convertSpendMs":6,"createdTime":"2020-09-05 15:59:19","host":"us-022*","referer":"https://smashingmagazine.com/2020/08/mobx-state-manager-react-native-applications/","linkMd5ListStr":"b7e12972db0bd44e3f243eb7c65c92c5","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.6 KB","destSize":"3.1 KB","compressRate":"46.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58939fb2-146f-4771-bf1f-91af136d4c59/paletton-application-color-schemes-css-custom-properties.png","sourceStatusCode":200,"destWidth":1108,"destHeight":845,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn96@2020_3/2020/09/05/07-59-19-320_72ed0812f22ea025.webp","sourceBytes":418869,"destBytes":72884,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1364,"convertSpendMs":99,"createdTime":"2020-09-05 15:59:18","host":"us-006*","referer":"https://smashingmagazine.com/2020/08/application-color-schemes-css-custom-properties/","linkMd5ListStr":"1d07a3a7ea9e5c230cc1a792c9ee5246","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"409.1 KB","destSize":"71.2 KB","compressRate":"17.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/59646d80-819d-4244-b567-8420874dc67b/porsche04-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn45@2020_2/2020/09/05/07-59-19-211_1d2c5a7b05f383bd.webp","sourceBytes":1570402,"destBytes":98972,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1638,"convertSpendMs":144,"createdTime":"2020-09-05 15:59:18","host":"us-021*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.5 MB","destSize":"96.7 KB","compressRate":"6.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ab455651-b92b-46f4-9c31-c911231a9038/aug-15-a-bloom-of-jellyfish-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn86@2020_3/2020/09/05/07-59-19-314_8fd5eabd6499b1cb.webp","sourceBytes":191656,"destBytes":44638,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1402,"convertSpendMs":32,"createdTime":"2020-09-05 15:59:18","host":"us-029*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"187.2 KB","destSize":"43.6 KB","compressRate":"23.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6908068c-7878-4185-a8c2-6eb623cf34dd/porsche66-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":799,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn81@2020_1/2020/09/05/07-59-19-338_54854d9b2064314b.webp","sourceBytes":251025,"destBytes":37958,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1421,"convertSpendMs":92,"createdTime":"2020-09-05 15:59:18","host":"us-52*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"245.1 KB","destSize":"37.1 KB","compressRate":"15.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9c9f49de-b0b8-4f59-aeef-c8d112bc3a23/issue-12-25-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":1400,"destHeight":635,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn7@2020_3/2020/09/05/07-59-19-399_9b5e669a7eb760e1.webp","sourceBytes":284409,"destBytes":47116,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1366,"convertSpendMs":70,"createdTime":"2020-09-05 15:59:18","host":"us-034*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"277.7 KB","destSize":"46 KB","compressRate":"16.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/785c90a0-a4de-481c-b8a9-f098a5ce0bdb/6-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn89@2020_4/2020/09/05/07-59-19-207_de1d5cb0795462e4.webp","sourceBytes":131803,"destBytes":30640,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2243,"convertSpendMs":72,"createdTime":"2020-09-05 15:59:18","host":"europe-58*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"128.7 KB","destSize":"29.9 KB","compressRate":"23.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c3c72cb-2a62-4231-ad46-635d56efbec5/issue-12-28-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2880,"destHeight":2048,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn75@2020_3/2020/09/05/07-59-18-755_9790480448edc9a1.webp","sourceBytes":557354,"destBytes":178446,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3150,"convertSpendMs":206,"createdTime":"2020-09-05 15:59:17","host":"europe-23*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"544.3 KB","destSize":"174.3 KB","compressRate":"32%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/727f98e5-fd11-44ee-8e88-31241040a936/4-dashboard-with-charts.png","sourceStatusCode":200,"destWidth":2500,"destHeight":1937,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn92@2020_3/2020/09/05/07-59-19-471_9aa895f87ee01c1b.webp","sourceBytes":212256,"destBytes":58252,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1618,"convertSpendMs":274,"createdTime":"2020-09-05 15:59:18","host":"us-018*","referer":"https://smashingmagazine.com/2020/07/responsive-dashboard-angular-material-ng2-charts-schematics/","linkMd5ListStr":"49147f5e0fdeef5d08e1f0588727e911","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"207.3 KB","destSize":"56.9 KB","compressRate":"27.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1600cb7a-8e36-45d9-b07b-07e326e36d88/porsche28-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn10@2020_5/2020/09/05/07-59-19-350_4da3d0cf4cad893f.webp","sourceBytes":144054,"destBytes":27984,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2358,"convertSpendMs":56,"createdTime":"2020-09-05 15:59:18","host":"europe62*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"140.7 KB","destSize":"27.3 KB","compressRate":"19.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/30b104ce-358e-414c-81a7-22cc28c51fb2/fig-05-final-app-home-screen-unauthenticated-user.png","sourceStatusCode":200,"destWidth":1600,"destHeight":824,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn36@2020_1/2020/09/05/07-59-19-674_7d40bec985e97e9f.webp","sourceBytes":48870,"destBytes":11534,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1254,"convertSpendMs":47,"createdTime":"2020-09-05 15:59:19","host":"us-014*","referer":"https://smashingmagazine.com/2020/08/redux-real-world-application/","linkMd5ListStr":"cdfbc1833104e26676bb8df00a8b2a3c","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.7 KB","destSize":"11.3 KB","compressRate":"23.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d2955e1-0e0a-45bb-9ab9-b779c4232505/4-building-react-apps-storybook.png","sourceStatusCode":200,"destWidth":1360,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn54@2020_2/2020/09/05/07-59-19-449_02a912fbfca9f3c8.webp","sourceBytes":42232,"destBytes":18892,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1817,"convertSpendMs":40,"createdTime":"2020-09-05 15:59:18","host":"europe-22*","referer":"https://smashingmagazine.com/2020/09/building-react-apps-storybook/","linkMd5ListStr":"a4dec1fe83c49a7924bf09761305d38c","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"41.2 KB","destSize":"18.4 KB","compressRate":"44.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5fae0b8f-c96c-4f9c-9393-6db1fdb696a0/ecommerce-site-demystifying-djangos-magic.png","sourceStatusCode":200,"destWidth":400,"destHeight":209,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn48@2020_6/2020/09/05/07-59-19-816_fb2e70efdee02915.webp","sourceBytes":13319,"destBytes":4060,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1129,"convertSpendMs":10,"createdTime":"2020-09-05 15:59:19","host":"us-53*","referer":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/","linkMd5ListStr":"90725d421e0a2e80cbc6fae6b90f5416","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13 KB","destSize":"4 KB","compressRate":"30.5%"},{"code":1,"isDone":false,"source":"https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-5-opt_g2fsel.png","sourceStatusCode":200,"destWidth":2266,"destHeight":1264,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn99@2020_6/2020/09/05/07-59-19-130_55b43cffccdb982c.webp","sourceBytes":155494,"destBytes":97880,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1612,"convertSpendMs":87,"createdTime":"2020-09-05 15:59:18","host":"europe69*","referer":"https://smashingmagazine.com/2020/08/checklist-cards-release/","linkMd5ListStr":"2954bfe0e134e38e8bb6b7bd231c4f60","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"151.8 KB","destSize":"95.6 KB","compressRate":"62.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3981e7e7-6039-4ba2-bced-15d2074cddc8/add-document-comment-system-firebase.png","sourceStatusCode":200,"destWidth":1600,"destHeight":1192,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn52@2020_4/2020/09/05/07-59-19-961_95629e82ac97338f.webp","sourceBytes":123833,"destBytes":35230,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1249,"convertSpendMs":62,"createdTime":"2020-09-05 15:59:19","host":"us-030*","referer":"https://smashingmagazine.com/2020/08/comment-system-firebase/","linkMd5ListStr":"d3941734f9d21fb1526a62ff1d7b9b2c","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"120.9 KB","destSize":"34.4 KB","compressRate":"28.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d51de6a2-7b7e-449a-bda7-672bb6290cab/sep-20-weekend-relax-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn59@2020_6/2020/09/05/07-59-19-939_bb0f8d073a96586d.webp","sourceBytes":54663,"destBytes":31304,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1272,"convertSpendMs":16,"createdTime":"2020-09-05 15:59:19","host":"us-006*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"53.4 KB","destSize":"30.6 KB","compressRate":"57.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/26641172-010a-4419-9efd-81f69763247f/show-db-shell-api-flask-google-cloud-sql-app-engine-large.png","sourceStatusCode":200,"destWidth":800,"destHeight":336,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn77@2020_4/2020/09/05/07-59-19-718_d80a1ef30b58f572.webp","sourceBytes":39019,"destBytes":14892,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1966,"convertSpendMs":14,"createdTime":"2020-09-05 15:59:18","host":"europe64*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.1 KB","destSize":"14.5 KB","compressRate":"38.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/04757eb7-bc43-47bb-8630-7490cdb76119/porsche70b-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn3@2020_1/2020/09/05/07-59-19-762_9794e1029f27906c.webp","sourceBytes":162573,"destBytes":22008,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1803,"convertSpendMs":36,"createdTime":"2020-09-05 15:59:19","host":"europe-57*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"158.8 KB","destSize":"21.5 KB","compressRate":"13.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d4ad595d-0be6-475e-b1c0-2bf9a55dc552/smashing-live-team.jpg","sourceStatusCode":200,"destWidth":3040,"destHeight":1520,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn16@2020_2/2020/09/05/07-59-19-620_8b20a3fd50b6ea9c.webp","sourceBytes":369499,"destBytes":519770,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1815,"convertSpendMs":204,"createdTime":"2020-09-05 15:59:19","host":"us-010*","referer":"https://smashingmagazine.com/2020/08/smashingconf-live-august-wrapup/","linkMd5ListStr":"a9cb53d45a0e601abe8e7d8fe024bba5","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"360.8 KB","destSize":"507.6 KB","compressRate":"140.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/213a2b74-24e4-43e5-8c99-3e1ed1dfab17/getting-firestore-data-comment-system-firebase.png","sourceStatusCode":200,"destWidth":1600,"destHeight":826,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn55@2020_4/2020/09/05/07-59-20-179_c79bb47d9539c335.webp","sourceBytes":32054,"destBytes":12948,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1381,"convertSpendMs":102,"createdTime":"2020-09-05 15:59:19","host":"us-018*","referer":"https://smashingmagazine.com/2020/08/comment-system-firebase/","linkMd5ListStr":"d3941734f9d21fb1526a62ff1d7b9b2c","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.3 KB","destSize":"12.6 KB","compressRate":"40.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/816e3f53-4a90-436c-bded-c44d012bd4c8/porsche25-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn71@2020_3/2020/09/05/07-59-20-135_671037d58092b893.webp","sourceBytes":142460,"destBytes":23460,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1322,"convertSpendMs":72,"createdTime":"2020-09-05 15:59:19","host":"us-034*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"139.1 KB","destSize":"22.9 KB","compressRate":"16.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1c5adc17-17e0-49e7-8ef8-227b65b6ebf9/porsche63-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":700,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn38@2020_4/2020/09/05/07-59-19-995_d68ba069c41773c0.webp","sourceBytes":285468,"destBytes":24972,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2344,"convertSpendMs":45,"createdTime":"2020-09-05 15:59:18","host":"europe-56*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"278.8 KB","destSize":"24.4 KB","compressRate":"8.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/37fe9212-24b0-402a-bf9b-927828f0c3a8/porsche167-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":250,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn82@2020_1/2020/09/05/07-59-20-215_42d38fd79608e5ac.webp","sourceBytes":106407,"destBytes":13470,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1039,"convertSpendMs":18,"createdTime":"2020-09-05 15:59:20","host":"us-011*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"103.9 KB","destSize":"13.2 KB","compressRate":"12.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/708a3132-d288-488c-96e0-dd20264671fc/porsche117-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":413,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn57@2020_4/2020/09/05/07-59-20-015_0e8bf352ca8083b2.webp","sourceBytes":162334,"destBytes":29718,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2337,"convertSpendMs":28,"createdTime":"2020-09-05 15:59:18","host":"europe-60*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"158.5 KB","destSize":"29 KB","compressRate":"18.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32f57f0b-74dd-4641-83ee-81924541431a/issue-12-24-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2880,"destHeight":2048,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn31@2020_5/2020/09/05/07-59-19-910_7420e3bfd57f8301.webp","sourceBytes":526068,"destBytes":232102,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1890,"convertSpendMs":287,"createdTime":"2020-09-05 15:59:19","host":"us-026*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"513.7 KB","destSize":"226.7 KB","compressRate":"44.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/06e07e96-7bab-40c7-9389-0f27d88fb7a0/point-type-mirrored-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":800,"destHeight":250,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn28@2020_6/2020/09/05/07-59-20-391_9b45b4450ee35c41.webp","sourceBytes":18620,"destBytes":5716,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":903,"convertSpendMs":8,"createdTime":"2020-09-05 15:59:20","host":"us-008*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.2 KB","destSize":"5.6 KB","compressRate":"30.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/edc56586-ccf2-49dc-96fe-7cd9a90e44ff/porsche19-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn28@2020_6/2020/09/05/07-59-20-349_fa8708d362a7c795.webp","sourceBytes":370910,"destBytes":39890,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1353,"convertSpendMs":114,"createdTime":"2020-09-05 15:59:19","host":"us-039*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"362.2 KB","destSize":"39 KB","compressRate":"10.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/04f4b9a4-7d90-494e-94ce-36b17a7ab94b/porsche111-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":375,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn93@2020_2/2020/09/05/07-59-20-485_f3b84383e7fa8551.webp","sourceBytes":162154,"destBytes":20018,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1255,"convertSpendMs":57,"createdTime":"2020-09-05 15:59:20","host":"us-040*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"158.4 KB","destSize":"19.5 KB","compressRate":"12.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d39f1661-8ce5-4d9c-8c41-11f7f78844ee/04-new-scroll-position-vue-router.png","sourceStatusCode":200,"destWidth":2386,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn43@2020_6/2020/09/05/07-59-20-174_32e4e7cd7ab535c7.webp","sourceBytes":83580,"destBytes":39974,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1935,"convertSpendMs":75,"createdTime":"2020-09-05 15:59:19","host":"europe65*","referer":"https://smashingmagazine.com/2020/08/vue-router-features/","linkMd5ListStr":"5155f9648fe66b7e6f7f7224ebbda820","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"81.6 KB","destSize":"39 KB","compressRate":"47.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d5a6796-01f5-46ab-8204-02378d2ba931/sep-20-better-days-ahead-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn23@2020_1/2020/09/05/07-59-20-604_2bea8fe69bc2182d.webp","sourceBytes":52766,"destBytes":31110,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1322,"convertSpendMs":16,"createdTime":"2020-09-05 15:59:20","host":"us-020*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.5 KB","destSize":"30.4 KB","compressRate":"59%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3e31cc9a-7764-47c5-a72b-22b6cf38ab17/google-maps-predictive-search.png","sourceStatusCode":200,"destWidth":1132,"destHeight":573,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn8@2020_6/2020/09/05/07-59-20-555_33caf2be7fea94a8.webp","sourceBytes":442248,"destBytes":84196,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1447,"convertSpendMs":50,"createdTime":"2020-09-05 15:59:20","host":"us-004*","referer":"https://smashingmagazine.com/2020/08/lessons-web-app-designers-learn-google/","linkMd5ListStr":"90050a70ad8778f8abad9e0a4b74cfcb","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"431.9 KB","destSize":"82.2 KB","compressRate":"19%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/91906257-32ce-4b3c-b125-a6a4b542e416/porsche93-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":418,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn63@2020_4/2020/09/05/07-59-20-440_83888c7c9b29d8bd.webp","sourceBytes":119545,"destBytes":21364,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1883,"convertSpendMs":23,"createdTime":"2020-09-05 15:59:19","host":"europe69*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"116.7 KB","destSize":"20.9 KB","compressRate":"17.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d855d4e-7467-40bd-8636-e4018ed291b1/porsche48a-turn-off-pixel-fitting-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":751,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn97@2020_6/2020/09/05/07-59-20-707_62a163819df7debe.webp","sourceBytes":307713,"destBytes":57724,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1486,"convertSpendMs":48,"createdTime":"2020-09-05 15:59:20","host":"us-027*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"300.5 KB","destSize":"56.4 KB","compressRate":"18.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c1925540-8eb1-4f8d-906f-a316c696df12/porsche125-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":562,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn68@2020_1/2020/09/05/07-59-20-466_e5196824facddfc4.webp","sourceBytes":186949,"destBytes":34414,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1903,"convertSpendMs":29,"createdTime":"2020-09-05 15:59:19","host":"europe-57*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"182.6 KB","destSize":"33.6 KB","compressRate":"18.4%"},{"code":1,"isDone":false,"source":"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/429b9952-3488-4c33-a14f-4be85eef27ac.png","sourceStatusCode":200,"destWidth":700,"destHeight":466,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn84@2020_2/2020/09/05/07-59-20-971_514fc432fa65bd57.webp","sourceBytes":21193,"destBytes":12552,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":878,"convertSpendMs":14,"createdTime":"2020-09-05 15:59:20","host":"us-032*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.7 KB","destSize":"12.3 KB","compressRate":"59.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/849731a1-27b2-429a-a303-5822695c451c/porsche182-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":341,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn59@2020_1/2020/09/05/07-59-20-939_0b701b66d38847b1.webp","sourceBytes":105680,"destBytes":28948,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1244,"convertSpendMs":21,"createdTime":"2020-09-05 15:59:20","host":"us-51*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"103.2 KB","destSize":"28.3 KB","compressRate":"27.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ef191151-e4c2-459c-93f8-601934200f61/porsche30-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn47@2020_5/2020/09/05/07-59-20-986_e61341417f38c47c.webp","sourceBytes":140118,"destBytes":26558,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1379,"convertSpendMs":147,"createdTime":"2020-09-05 15:59:20","host":"us-012*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"136.8 KB","destSize":"25.9 KB","compressRate":"19%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fa8ded40-b460-4c61-8686-ceb7ec2a22e2/create-new-db-api-flask-google-cloud-sql-app-engine.png","sourceStatusCode":200,"destWidth":1524,"destHeight":914,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn19@2020_2/2020/09/05/07-59-20-653_48f702d2dd172d60.webp","sourceBytes":127986,"destBytes":43994,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1637,"convertSpendMs":59,"createdTime":"2020-09-05 15:59:20","host":"us-032*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"125 KB","destSize":"43 KB","compressRate":"34.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/573bf166-1758-4687-ace0-464d1c58aad3/1-icons-mobile-apps.png","sourceStatusCode":200,"destWidth":2000,"destHeight":2000,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn75@2020_6/2020/09/05/07-59-20-542_3023736225b20093.webp","sourceBytes":376087,"destBytes":162798,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1934,"convertSpendMs":610,"createdTime":"2020-09-05 15:59:19","host":"us-022*","referer":"https://smashingmagazine.com/2020/09/icons-mobile-apps/","linkMd5ListStr":"bfb80d7e10b5ce2cc36e767b323e14aa","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"367.3 KB","destSize":"159 KB","compressRate":"43.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/72d0c184-ea88-45b2-a12c-604d0f3bb398/12-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn71@2020_4/2020/09/05/07-59-21-048_d3b31538a21b062d.webp","sourceBytes":97759,"destBytes":22202,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1245,"convertSpendMs":66,"createdTime":"2020-09-05 15:59:20","host":"us-004*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"95.5 KB","destSize":"21.7 KB","compressRate":"22.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ec042da6-0bb6-4382-85e0-a1da6982a12b/issue-12-07-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2400,"destHeight":1608,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn6@2020_5/2020/09/05/07-59-20-445_5d845fda5d39309c.webp","sourceBytes":5684409,"destBytes":140752,"targetWebpQuality":67,"feedId":9306,"totalSpendMs":3855,"convertSpendMs":355,"createdTime":"2020-09-05 15:59:18","host":"europe-24*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.4 MB","destSize":"137.5 KB","compressRate":"2.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ac7b65e2-f9c4-442f-9f4b-919f7f374f85/porsche156-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn11@2020_4/2020/09/05/07-59-20-926_00d2a5c84d835ecc.webp","sourceBytes":109364,"destBytes":22412,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1716,"convertSpendMs":23,"createdTime":"2020-09-05 15:59:20","host":"europe67*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"106.8 KB","destSize":"21.9 KB","compressRate":"20.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c76f6bf-d6cf-4e65-804a-cd763c926fb5/terminal-environment-api-flask-google-cloud-sql-app-engine.png","sourceStatusCode":200,"destWidth":1142,"destHeight":188,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn91@2020_6/2020/09/05/07-59-21-235_4d1c84e2c120a10c.webp","sourceBytes":50169,"destBytes":4170,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1148,"convertSpendMs":9,"createdTime":"2020-09-05 15:59:20","host":"us-008*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49 KB","destSize":"4.1 KB","compressRate":"8.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3cea8885-9cf5-4e62-9f77-31a3afb2b475/porsche170-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn87@2020_1/2020/09/05/07-59-21-248_dba554df04df0e4a.webp","sourceBytes":103561,"destBytes":10994,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1227,"convertSpendMs":26,"createdTime":"2020-09-05 15:59:20","host":"us-020*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"101.1 KB","destSize":"10.7 KB","compressRate":"10.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6783be2c-5910-41c5-8e60-36c61d57ee97/porsche147-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn12@2020_1/2020/09/05/07-59-21-277_3b3a3ee792f3fb6c.webp","sourceBytes":425743,"destBytes":31526,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":987,"convertSpendMs":35,"createdTime":"2020-09-05 15:59:21","host":"us-012*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"415.8 KB","destSize":"30.8 KB","compressRate":"7.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6ee779b8-99de-4a61-a61a-20ac2dcdf988/05-guest-user-text.png","sourceStatusCode":200,"destWidth":1724,"destHeight":586,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn89@2020_3/2020/09/05/07-59-20-867_5e874c5210e71468.webp","sourceBytes":103232,"destBytes":51398,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1975,"convertSpendMs":37,"createdTime":"2020-09-05 15:59:20","host":"europe62*","referer":"https://smashingmagazine.com/2020/08/vue-router-features/","linkMd5ListStr":"5155f9648fe66b7e6f7f7224ebbda820","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"100.8 KB","destSize":"50.2 KB","compressRate":"49.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/efe12761-3cc2-4b9f-a857-f37ddb265b02/07-guest-page-vue-router.png","sourceStatusCode":200,"destWidth":2214,"destHeight":610,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn44@2020_2/2020/09/05/07-59-21-006_edc454a36a0a975d.webp","sourceBytes":56613,"destBytes":14922,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1458,"convertSpendMs":122,"createdTime":"2020-09-05 15:59:20","host":"us-024*","referer":"https://smashingmagazine.com/2020/08/vue-router-features/","linkMd5ListStr":"5155f9648fe66b7e6f7f7224ebbda820","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.3 KB","destSize":"14.6 KB","compressRate":"26.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6585d08e-e8e6-42e7-a40f-276387dbd1f3/issue-11-09-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1400,"destHeight":502,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn68@2020_3/2020/09/05/07-59-21-317_48740b81d5af0fb1.webp","sourceBytes":271200,"destBytes":65402,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1654,"convertSpendMs":41,"createdTime":"2020-09-05 15:59:20","host":"us-016*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"264.8 KB","destSize":"63.9 KB","compressRate":"24.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/63197e2b-85a7-4f1b-a0a1-3221fef47ecb/porsche16-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn23@2020_2/2020/09/05/07-59-21-406_15097a774e43f138.webp","sourceBytes":151114,"destBytes":26128,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1069,"convertSpendMs":58,"createdTime":"2020-09-05 15:59:21","host":"us-51*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"147.6 KB","destSize":"25.5 KB","compressRate":"17.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/493737bb-7a61-4f81-9f85-75e428463a0e/porsche129-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn31@2020_1/2020/09/05/07-59-21-550_ca060f7645bb5de9.webp","sourceBytes":68893,"destBytes":10206,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":900,"convertSpendMs":19,"createdTime":"2020-09-05 15:59:21","host":"us-016*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"67.3 KB","destSize":"10 KB","compressRate":"14.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cb5ee03a-e129-4af3-91e0-5edd2c91c902/porsche152-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn3@2020_2/2020/09/05/07-59-21-461_18993e9d86953f43.webp","sourceBytes":431146,"destBytes":63820,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1351,"convertSpendMs":43,"createdTime":"2020-09-05 15:59:21","host":"us-037*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"421 KB","destSize":"62.3 KB","compressRate":"14.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b3d35898-bfac-4916-b78f-218411cc5184/8-completed-dashboard.png","sourceStatusCode":200,"destWidth":2400,"destHeight":1672,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn79@2020_3/2020/09/05/07-59-21-392_fd74f4bba4a32552.webp","sourceBytes":336365,"destBytes":81566,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1561,"convertSpendMs":183,"createdTime":"2020-09-05 15:59:20","host":"us-55*","referer":"https://smashingmagazine.com/2020/07/responsive-dashboard-angular-material-ng2-charts-schematics/","linkMd5ListStr":"49147f5e0fdeef5d08e1f0588727e911","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"328.5 KB","destSize":"79.7 KB","compressRate":"24.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6314f422-1aaf-42ee-85ad-15b3e72198fe/issue-12-19-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2880,"destHeight":2048,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn16@2020_6/2020/09/05/07-59-21-347_902b633597bcbce6.webp","sourceBytes":984825,"destBytes":316642,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2385,"convertSpendMs":312,"createdTime":"2020-09-05 15:59:20","host":"us-55*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"961.7 KB","destSize":"309.2 KB","compressRate":"32.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/40de6f18-c871-4e8d-98af-560e00d3c331/1-building-react-apps-storybook.png","sourceStatusCode":200,"destWidth":1366,"destHeight":738,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn16@2020_1/2020/09/05/07-59-21-486_812f2e90227ed647.webp","sourceBytes":51071,"destBytes":23884,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1406,"convertSpendMs":50,"createdTime":"2020-09-05 15:59:21","host":"europe-25*","referer":"https://smashingmagazine.com/2020/09/building-react-apps-storybook/","linkMd5ListStr":"a4dec1fe83c49a7924bf09761305d38c","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49.9 KB","destSize":"23.3 KB","compressRate":"46.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c505ab2b-995d-42a9-a006-26d359bb3dfb/porsche179-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn32@2020_5/2020/09/05/07-59-21-644_88ccfc8483be0099.webp","sourceBytes":204651,"destBytes":24772,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2326,"convertSpendMs":20,"createdTime":"2020-09-05 15:59:20","host":"europe21*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"199.9 KB","destSize":"24.2 KB","compressRate":"12.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64f21d5c-f029-433e-b04b-e637076afdc3/porsche39-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn28@2020_4/2020/09/05/07-59-21-878_767ef495f2fd96f8.webp","sourceBytes":183722,"destBytes":28336,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1398,"convertSpendMs":142,"createdTime":"2020-09-05 15:59:21","host":"us-028*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"179.4 KB","destSize":"27.7 KB","compressRate":"15.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/16f698dc-6897-43a1-9e02-f67958810004/porsche142-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn35@2020_6/2020/09/05/07-59-21-963_ae5240ab1e0353ce.webp","sourceBytes":346940,"destBytes":23674,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1253,"convertSpendMs":36,"createdTime":"2020-09-05 15:59:21","host":"us-004*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"338.8 KB","destSize":"23.1 KB","compressRate":"6.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6078e2a-0591-402c-9a5d-bd9445451038/3-using-mobx-state-manager-react-native-applications.png","sourceStatusCode":200,"destWidth":846,"destHeight":434,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn96@2020_3/2020/09/05/07-59-21-744_ea744685185ebed3.webp","sourceBytes":19343,"destBytes":11012,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1755,"convertSpendMs":16,"createdTime":"2020-09-05 15:59:21","host":"europe21*","referer":"https://smashingmagazine.com/2020/08/mobx-state-manager-react-native-applications/","linkMd5ListStr":"b7e12972db0bd44e3f243eb7c65c92c5","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.9 KB","destSize":"10.8 KB","compressRate":"56.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7b9c1c73-6254-49d5-9e19-4f0e83e5bb0c/sep-19-bear-time-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn56@2020_5/2020/09/05/07-59-22-122_73f5b3c174a7516e.webp","sourceBytes":57666,"destBytes":22614,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1249,"convertSpendMs":13,"createdTime":"2020-09-05 15:59:21","host":"us-008*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.3 KB","destSize":"22.1 KB","compressRate":"39.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/95fbcc64-1546-4c22-baa4-a1fc8eb007a3/figure-05-client-side-graphql-apollo-client-react-apps.gif","sourceStatusCode":200,"destWidth":600,"destHeight":270,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn52@2020_6/2020/09/05/07-59-22-216_58ac4ac60ee62676.webp","sourceBytes":45706,"destBytes":16738,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1376,"convertSpendMs":177,"createdTime":"2020-09-05 15:59:21","host":"us-020*","referer":"https://smashingmagazine.com/2020/07/client-side-graphql-apollo-client-react-apps/","linkMd5ListStr":"2de9e609eb9cf95b580b73d5f31a0743","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"44.6 KB","destSize":"16.3 KB","compressRate":"36.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bb688405-8701-4750-880b-59fc0142f131/issue-12-01-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":1400,"destHeight":461,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn44@2020_1/2020/09/05/07-59-22-081_78204c90b5189da4.webp","sourceBytes":1007397,"destBytes":71126,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1462,"convertSpendMs":56,"createdTime":"2020-09-05 15:59:21","host":"us-55*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"983.8 KB","destSize":"69.5 KB","compressRate":"7.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a325ed62-f12e-43f0-886d-d35899c96f9b/04-registration-form-with-error-messages-ios.png","sourceStatusCode":200,"destWidth":843,"destHeight":767,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn71@2020_2/2020/09/05/07-59-22-311_b1ae578e6c35a2b1.webp","sourceBytes":173293,"destBytes":10842,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1243,"convertSpendMs":44,"createdTime":"2020-09-05 15:59:21","host":"us-024*","referer":"https://smashingmagazine.com/2020/08/forms-validation-ionic-react/","linkMd5ListStr":"fa41336deda35415b1959d255ba9a56c","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"169.2 KB","destSize":"10.6 KB","compressRate":"6.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f1be1d3a-258d-48a0-9c22-3ccf20fb19d4/create-new-user-api-flask-google-cloud-sql-app-engine.png","sourceStatusCode":200,"destWidth":1448,"destHeight":780,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn64@2020_6/2020/09/05/07-59-22-186_3f197c28876bef5a.webp","sourceBytes":115802,"destBytes":39038,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1203,"convertSpendMs":45,"createdTime":"2020-09-05 15:59:21","host":"europe-59*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"113.1 KB","destSize":"38.1 KB","compressRate":"33.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2fefcb8e-8d4b-40cc-98e6-c1b0ffef2791/issue-12-06-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2400,"destHeight":1608,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn24@2020_3/2020/09/05/07-59-21-460_839e2e1f1b7e1895.webp","sourceBytes":3509499,"destBytes":306172,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3891,"convertSpendMs":276,"createdTime":"2020-09-05 15:59:19","host":"europe61*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.3 MB","destSize":"299 KB","compressRate":"8.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b996bcb0-7986-4e51-a58b-a5862d95e7f0/issue-12-15-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2880,"destHeight":2048,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn7@2020_2/2020/09/05/07-59-22-009_e5a55e59fedbf84b.webp","sourceBytes":973621,"destBytes":279564,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2103,"convertSpendMs":496,"createdTime":"2020-09-05 15:59:21","host":"us-024*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"950.8 KB","destSize":"273 KB","compressRate":"28.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94ef26e5-f09e-4f91-97a9-3b6ef7e23f7d/aug-20-live-in-the-moment-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn100@2020_3/2020/09/05/07-59-21-825_be061621c8017823.webp","sourceBytes":35523,"destBytes":20368,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2133,"convertSpendMs":12,"createdTime":"2020-09-05 15:59:21","host":"europe-59*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.7 KB","destSize":"19.9 KB","compressRate":"57.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ddb0a92d-08f9-467b-b892-45ed76462b65/issue-11-05-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1900,"destHeight":1453,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn86@2020_4/2020/09/05/07-59-21-768_9ca04700dd894eaf.webp","sourceBytes":494182,"destBytes":138346,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3124,"convertSpendMs":161,"createdTime":"2020-09-05 15:59:20","host":"europe-24*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba,6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"482.6 KB","destSize":"135.1 KB","compressRate":"28%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2933b8df-9c1e-442d-a68f-3e5aad0f9da3/porsche110-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":375,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn91@2020_1/2020/09/05/07-59-22-492_965be962ece7ec7c.webp","sourceBytes":121898,"destBytes":15702,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1233,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:22","host":"us-028*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"119 KB","destSize":"15.3 KB","compressRate":"12.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/05552ff3-be0e-424d-897a-931c7f992483/issue-11-16-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1401,"destHeight":912,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn52@2020_3/2020/09/05/07-59-21-580_0c95537e4666ad41.webp","sourceBytes":616192,"destBytes":116090,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2760,"convertSpendMs":86,"createdTime":"2020-09-05 15:59:20","host":"europe-25*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"601.8 KB","destSize":"113.4 KB","compressRate":"18.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/37f58588-dbbc-4c1c-af37-e0dfbe47db96/porsche107-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":376,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn96@2020_3/2020/09/05/07-59-22-492_49b2bb8a5e0bb16f.webp","sourceBytes":133802,"destBytes":19290,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1251,"convertSpendMs":17,"createdTime":"2020-09-05 15:59:22","host":"us-016*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"130.7 KB","destSize":"18.8 KB","compressRate":"14.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/069416b8-6099-4284-be39-914fe858f9fc/accessibility-chrome-devtools-contrast-ratio.png","sourceStatusCode":200,"destWidth":3424,"destHeight":2224,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn40@2020_2/2020/09/05/07-59-22-198_886476045649df01.webp","sourceBytes":979133,"destBytes":293746,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3001,"convertSpendMs":991,"createdTime":"2020-09-05 15:59:20","host":"us-037*","referer":"https://smashingmagazine.com/2020/08/accessibility-chrome-devtools/","linkMd5ListStr":"692062341a74418e56f3a5d4d97a92e4","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"956.2 KB","destSize":"286.9 KB","compressRate":"30%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/247433e6-81e3-4d55-9b68-55578f4138b8/sept-16-flower-soul-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn40@2020_4/2020/09/05/07-59-22-430_b93c8e3856d7f518.webp","sourceBytes":58298,"destBytes":13476,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1705,"convertSpendMs":12,"createdTime":"2020-09-05 15:59:21","host":"europe67*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.9 KB","destSize":"13.2 KB","compressRate":"23.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6f4547a-1e9d-435f-9e3f-1b9beda062ea/5-renaissance-no-code-web-designers.jpg","sourceStatusCode":200,"destWidth":1681,"destHeight":1681,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn76@2020_5/2020/09/05/07-59-22-259_01ad76eacc2fba83.webp","sourceBytes":2353736,"destBytes":344652,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1568,"convertSpendMs":219,"createdTime":"2020-09-05 15:59:21","host":"us-012*","referer":"https://smashingmagazine.com/2020/07/renaissance-no-code-web-designers/","linkMd5ListStr":"5dc2ee4cf02a8d13b4ca79f601851ab2","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.2 MB","destSize":"336.6 KB","compressRate":"14.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/31131c48-159b-45e5-be43-c5c95021889b/porsche40-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn99@2020_6/2020/09/05/07-59-22-575_05410f3991440619.webp","sourceBytes":166290,"destBytes":24656,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1263,"convertSpendMs":28,"createdTime":"2020-09-05 15:59:22","host":"us-004*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"162.4 KB","destSize":"24.1 KB","compressRate":"14.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8b7629f2-b7ba-4467-847e-a749c7488b25/accessibility-chrome-devtools-emulating-blurred-vision.png","sourceStatusCode":200,"destWidth":3424,"destHeight":2224,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn64@2020_6/2020/09/05/07-59-22-407_c24035121a2b56a5.webp","sourceBytes":1059413,"destBytes":380544,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2959,"convertSpendMs":1444,"createdTime":"2020-09-05 15:59:20","host":"us-028*","referer":"https://smashingmagazine.com/2020/08/accessibility-chrome-devtools/","linkMd5ListStr":"692062341a74418e56f3a5d4d97a92e4","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1 MB","destSize":"371.6 KB","compressRate":"35.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f452bbf2-dba0-440c-bcc3-2c801f286259/porsche94-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn83@2020_6/2020/09/05/07-59-22-379_fd7028cec7ecd4b3.webp","sourceBytes":228457,"destBytes":38726,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1401,"convertSpendMs":64,"createdTime":"2020-09-05 15:59:22","host":"europe63*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"223.1 KB","destSize":"37.8 KB","compressRate":"17%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/27d86bb6-b64a-4cf1-943b-2fa8fd999aa5/porsche185a-side-windshield-decals-example.png","sourceStatusCode":200,"destWidth":800,"destHeight":423,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn17@2020_6/2020/09/05/07-59-22-774_01986d7c0a3e502e.webp","sourceBytes":227961,"destBytes":48480,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1391,"convertSpendMs":29,"createdTime":"2020-09-05 15:59:22","host":"us-021*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"222.6 KB","destSize":"47.3 KB","compressRate":"21.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af637c91-1da5-449f-9426-bac02fdd2184/porsche103-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":650,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn59@2020_3/2020/09/05/07-59-22-653_b4ddc05f67b9ea4a.webp","sourceBytes":139648,"destBytes":16854,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1790,"convertSpendMs":34,"createdTime":"2020-09-05 15:59:21","host":"europe21*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"136.4 KB","destSize":"16.5 KB","compressRate":"12.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/75afe75c-1a04-420f-b12d-02a02ec6d520/aug-19-smoky-mountain-bigfoot-conference-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn8@2020_6/2020/09/05/07-59-22-835_fb27a1e813befcc7.webp","sourceBytes":79457,"destBytes":14418,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1499,"convertSpendMs":15,"createdTime":"2020-09-05 15:59:22","host":"us-55*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"77.6 KB","destSize":"14.1 KB","compressRate":"18.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/31655510-b7b7-4dbc-aac5-def2be6aa7bb/sept-16-do-you-remember-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn13@2020_5/2020/09/05/07-59-22-942_1531663a0c906f22.webp","sourceBytes":182875,"destBytes":39462,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1473,"convertSpendMs":19,"createdTime":"2020-09-05 15:59:22","host":"us-033*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"178.6 KB","destSize":"38.5 KB","compressRate":"21.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e98d12f0-6a0f-48a8-b620-f74a61a24528/export-all-assets-figma.png","sourceStatusCode":200,"destWidth":1600,"destHeight":1203,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn21@2020_6/2020/09/05/07-59-22-833_c8e3ea9d55275fe3.webp","sourceBytes":181547,"destBytes":54046,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1410,"convertSpendMs":68,"createdTime":"2020-09-05 15:59:22","host":"us-009*","referer":"https://smashingmagazine.com/2020/09/figma-developers-guide/","linkMd5ListStr":"f3b6fa9b4a0de46db15a88ca8ddaba3b","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"177.3 KB","destSize":"52.8 KB","compressRate":"29.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/48d2812e-6e2b-4e34-87ec-e23a53297041/sept-15-listen-closer-the-mushrooms-are-growing-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn40@2020_1/2020/09/05/07-59-23-051_11009229b5926f82.webp","sourceBytes":56784,"destBytes":24110,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1230,"convertSpendMs":14,"createdTime":"2020-09-05 15:59:22","host":"us-51*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.5 KB","destSize":"23.5 KB","compressRate":"42.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b72dc50f-b61a-4234-b83a-f52d7eb77f07/sep-20-terrazzo-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn20@2020_2/2020/09/05/07-59-22-512_0e1defdfa82dff6a.webp","sourceBytes":147045,"destBytes":71062,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2656,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:21","host":"europe63*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"143.6 KB","destSize":"69.4 KB","compressRate":"48.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1a76238b-e314-42e9-a504-4184d5177fad/porsche01-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn75@2020_3/2020/09/05/07-59-22-654_3f760af3be4fe896.webp","sourceBytes":1294687,"destBytes":81684,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3053,"convertSpendMs":89,"createdTime":"2020-09-05 15:59:20","host":"europe67*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.2 MB","destSize":"79.8 KB","compressRate":"6.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d08d8a3-ee97-4540-bbf9-79d83e168ade/porsche43-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn43@2020_1/2020/09/05/07-59-23-177_cc0781255de66f59.webp","sourceBytes":146891,"destBytes":18810,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1276,"convertSpendMs":28,"createdTime":"2020-09-05 15:59:22","host":"us-028*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"143.4 KB","destSize":"18.4 KB","compressRate":"12.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/04a7228f-1fa6-473d-9e65-c24756b20dd9/google-search-console-overview.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn48@2020_4/2020/09/05/07-59-23-146_fe429d24d917e408.webp","sourceBytes":111628,"destBytes":37480,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1280,"convertSpendMs":36,"createdTime":"2020-09-05 15:59:22","host":"us-016*","referer":"https://smashingmagazine.com/2020/08/lessons-web-app-designers-learn-google/","linkMd5ListStr":"90050a70ad8778f8abad9e0a4b74cfcb","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"109 KB","destSize":"36.6 KB","compressRate":"33.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/52bea7de-ac48-4387-baf7-aaea0311e27a/aug-13-handwritten-august-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn80@2020_6/2020/09/05/07-59-22-954_6e85588bd58fb144.webp","sourceBytes":49636,"destBytes":22048,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1931,"convertSpendMs":14,"createdTime":"2020-09-05 15:59:22","host":"europe-25*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48.5 KB","destSize":"21.5 KB","compressRate":"44.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64525c20-ec36-43bf-80f5-4e7f6b23da65/1-navigation-component.png","sourceStatusCode":200,"destWidth":1440,"destHeight":826,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn60@2020_2/2020/09/05/07-59-23-274_e4fbaa6df7166925.webp","sourceBytes":35234,"destBytes":7874,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1210,"convertSpendMs":32,"createdTime":"2020-09-05 15:59:22","host":"us-55*","referer":"https://smashingmagazine.com/2020/07/responsive-dashboard-angular-material-ng2-charts-schematics/","linkMd5ListStr":"49147f5e0fdeef5d08e1f0588727e911","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.4 KB","destSize":"7.7 KB","compressRate":"22.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f767666c-03bf-42c5-b5ee-2e0ebc0ef441/aug-17-hello-again-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn51@2020_6/2020/09/05/07-59-23-198_e1d8c839744339be.webp","sourceBytes":52729,"destBytes":30930,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1306,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:22","host":"us-004*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.5 KB","destSize":"30.2 KB","compressRate":"58.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/01fb2551-7001-4a7d-bad6-aef30d764755/3-autonomy-online-indieweb.png","sourceStatusCode":200,"destWidth":3000,"destHeight":1750,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn87@2020_1/2020/09/05/07-59-23-071_063da7f3af0e5c72.webp","sourceBytes":1070467,"destBytes":208692,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2242,"convertSpendMs":214,"createdTime":"2020-09-05 15:59:22","host":"us-51*","referer":"https://smashingmagazine.com/2020/08/autonomy-online-indieweb/","linkMd5ListStr":"db8f89eda9d79fba0a32a36340d2b29a","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1 MB","destSize":"203.8 KB","compressRate":"19.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/787b79df-290c-4a4b-996b-ac8f1f9a5364/aug-17-liqiu-and-orange-daylily-season-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn4@2020_1/2020/09/05/07-59-23-139_f8589ddaeb1ffe09.webp","sourceBytes":51488,"destBytes":25194,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2039,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:22","host":"europe67*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.3 KB","destSize":"24.6 KB","compressRate":"48.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45234f52-5d38-4db7-b2de-3a00a37feca4/porsche136-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn3@2020_1/2020/09/05/07-59-23-712_54eb31776006549a.webp","sourceBytes":126268,"destBytes":22736,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1227,"convertSpendMs":24,"createdTime":"2020-09-05 15:59:23","host":"us-51*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"123.3 KB","destSize":"22.2 KB","compressRate":"18%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c9425792-fcc7-4c32-b8fe-846e5b129933/porsche185-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn7@2020_4/2020/09/05/07-59-23-748_fc26a3cd16f3f087.webp","sourceBytes":221379,"destBytes":27052,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1254,"convertSpendMs":32,"createdTime":"2020-09-05 15:59:23","host":"us-028*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"216.2 KB","destSize":"26.4 KB","compressRate":"12.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/339220be-7afd-4320-b115-01e3188287d4/1-figure-client-side-graphql-apollo-client-react-apps.png","sourceStatusCode":200,"destWidth":800,"destHeight":325,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn72@2020_3/2020/09/05/07-59-23-723_aced4a1d210390d6.webp","sourceBytes":121381,"destBytes":15182,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1552,"convertSpendMs":14,"createdTime":"2020-09-05 15:59:23","host":"us-008*","referer":"https://smashingmagazine.com/2020/07/client-side-graphql-apollo-client-react-apps/","linkMd5ListStr":"2de9e609eb9cf95b580b73d5f31a0743","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"118.5 KB","destSize":"14.8 KB","compressRate":"12.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bbbcc3a5-8573-45b1-9b93-94daba2a1e4d/issue-11-15-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1400,"destHeight":935,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn84@2020_6/2020/09/05/07-59-23-602_329f7372524d67b6.webp","sourceBytes":637579,"destBytes":135632,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1478,"convertSpendMs":85,"createdTime":"2020-09-05 15:59:23","host":"us-037*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"622.6 KB","destSize":"132.5 KB","compressRate":"21.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/87382448-81c9-4bdf-a844-3243c6ee825a/button-component-library-react-emotion.png","sourceStatusCode":200,"destWidth":1550,"destHeight":1354,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn12@2020_2/2020/09/05/07-59-23-746_966af261b620f296.webp","sourceBytes":212449,"destBytes":43758,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1270,"convertSpendMs":59,"createdTime":"2020-09-05 15:59:23","host":"us-016*","referer":"https://smashingmagazine.com/2020/09/component-library-react-emotion/","linkMd5ListStr":"c2ff886e4902a296612efa5d4bdb8cd3","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"207.5 KB","destSize":"42.7 KB","compressRate":"20.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a263dc14-0e54-40ad-9a5f-bc7dc2adee15/aug-16-psst-its-camping-time-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn31@2020_5/2020/09/05/07-59-23-862_b8310cc279a56955.webp","sourceBytes":127540,"destBytes":18200,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1213,"convertSpendMs":14,"createdTime":"2020-09-05 15:59:23","host":"us-020*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"124.6 KB","destSize":"17.8 KB","compressRate":"14.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/622087b6-9284-45c6-9fba-23488aad9c61/project-styles-figma.png","sourceStatusCode":200,"destWidth":1910,"destHeight":1596,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn26@2020_2/2020/09/05/07-59-23-308_10d1eda9fda5d816.webp","sourceBytes":170289,"destBytes":114494,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2236,"convertSpendMs":78,"createdTime":"2020-09-05 15:59:22","host":"europe-22*","referer":"https://smashingmagazine.com/2020/09/figma-developers-guide/","linkMd5ListStr":"f3b6fa9b4a0de46db15a88ca8ddaba3b","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"166.3 KB","destSize":"111.8 KB","compressRate":"67.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d848c21a-6f17-4d8a-a725-2d68e353417c/zoma-countdown-screenshot-tips-create-customer-centric-landing-pages.png","sourceStatusCode":200,"destWidth":1999,"destHeight":479,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn15@2020_2/2020/09/05/07-59-23-985_d285e32de786eda4.webp","sourceBytes":99550,"destBytes":29238,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1433,"convertSpendMs":45,"createdTime":"2020-09-05 15:59:23","host":"us-004*","referer":"https://smashingmagazine.com/2020/08/tips-customer-centric-landing-pages/","linkMd5ListStr":"0ae5a604742fc5fdb0e1c7bcacfa3b97","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"97.2 KB","destSize":"28.6 KB","compressRate":"29.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d6cdf13d-8709-4f3c-b9e6-b29878550606/issue-11-17-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1400,"destHeight":489,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn35@2020_6/2020/09/05/07-59-23-913_59ad360171ddba7e.webp","sourceBytes":374009,"destBytes":70562,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1330,"convertSpendMs":40,"createdTime":"2020-09-05 15:59:23","host":"us-008*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"365.2 KB","destSize":"68.9 KB","compressRate":"18.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6f843afe-8568-4115-a375-39c1da734417/point-type-straight-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":800,"destHeight":250,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn28@2020_1/2020/09/05/07-59-24-020_d3ab491751a01503.webp","sourceBytes":16528,"destBytes":5128,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1384,"convertSpendMs":8,"createdTime":"2020-09-05 15:59:23","host":"us-032*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.1 KB","destSize":"5 KB","compressRate":"31%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4668f743-d338-45b2-8f8d-14aecb7ad3f2/porsche38-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn34@2020_2/2020/09/05/07-59-23-772_b60a8848c0eb3ae4.webp","sourceBytes":102269,"destBytes":14668,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2120,"convertSpendMs":40,"createdTime":"2020-09-05 15:59:22","host":"europe62*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"99.9 KB","destSize":"14.3 KB","compressRate":"14.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/348495a0-2578-4900-8048-2bfd0775297b/bodhi-spa-massage-photo.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn24@2020_5/2020/09/05/07-59-23-980_a690cd935334f70e.webp","sourceBytes":1471174,"destBytes":61656,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1429,"convertSpendMs":103,"createdTime":"2020-09-05 15:59:23","host":"us-55*","referer":"https://smashingmagazine.com/2020/08/design-website-five-senses/","linkMd5ListStr":"90139c1573575fffdbeaa42a49e64624","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.4 MB","destSize":"60.2 KB","compressRate":"4.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58729814-03ea-43da-bbf1-f95450adbdfe/issue-11-04-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1400,"destHeight":912,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn91@2020_3/2020/09/05/07-59-23-843_8c4b0c205d806b45.webp","sourceBytes":540766,"destBytes":124910,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1716,"convertSpendMs":125,"createdTime":"2020-09-05 15:59:23","host":"us-012*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"528.1 KB","destSize":"122 KB","compressRate":"23.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8cfe128b-746d-4ee3-abb2-b2b298a7d230/porsche109-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":375,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn54@2020_3/2020/09/05/07-59-24-127_ded9e9ebe836dad1.webp","sourceBytes":130385,"destBytes":18490,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1210,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:23","host":"us-025*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"127.3 KB","destSize":"18.1 KB","compressRate":"14.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45ef1b00-d961-4360-b973-0a0a1dfe90f9/porsche89-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn96@2020_5/2020/09/05/07-59-24-034_386a256d5b1d4dbd.webp","sourceBytes":86249,"destBytes":9312,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1633,"convertSpendMs":21,"createdTime":"2020-09-05 15:59:23","host":"europe-25*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"84.2 KB","destSize":"9.1 KB","compressRate":"10.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a4281b88-4f1e-40f1-bfe1-0c15603d6dd8/porsche67-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":799,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn57@2020_2/2020/09/05/07-59-24-190_eab145db9181a877.webp","sourceBytes":250885,"destBytes":26382,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1276,"convertSpendMs":54,"createdTime":"2020-09-05 15:59:23","host":"us-013*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"245 KB","destSize":"25.8 KB","compressRate":"10.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1a29cb6e-6644-4917-b7d0-aaed0be4b2e0/3-building-react-apps-storybook.png","sourceStatusCode":200,"destWidth":1149,"destHeight":420,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn69@2020_4/2020/09/05/07-59-24-286_381f841a50c1521a.webp","sourceBytes":27142,"destBytes":12262,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1167,"convertSpendMs":17,"createdTime":"2020-09-05 15:59:23","host":"us-52*","referer":"https://smashingmagazine.com/2020/09/building-react-apps-storybook/","linkMd5ListStr":"a4dec1fe83c49a7924bf09761305d38c","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.5 KB","destSize":"12 KB","compressRate":"45.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f73f759f-4e8f-41b9-9579-3542cfbac14d/porsche105-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":587,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn62@2020_6/2020/09/05/07-59-24-294_a3a9783e71faf360.webp","sourceBytes":291068,"destBytes":20848,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1319,"convertSpendMs":76,"createdTime":"2020-09-05 15:59:23","host":"us-001*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"284.2 KB","destSize":"20.4 KB","compressRate":"7.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/77dc9dd1-4cbc-44a0-bed2-9246ee6526ab/issue-12-04-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2400,"destHeight":1614,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn64@2020_6/2020/09/05/07-59-23-919_3202b596113ffde5.webp","sourceBytes":5553119,"destBytes":300906,"targetWebpQuality":67,"feedId":9306,"totalSpendMs":2101,"convertSpendMs":388,"createdTime":"2020-09-05 15:59:23","host":"us-032*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.3 MB","destSize":"293.9 KB","compressRate":"5.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/86b57bc0-d372-4894-88c3-ce17d780755d/porsche18-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn50@2020_2/2020/09/05/07-59-24-263_5c0a21c886857f83.webp","sourceBytes":260254,"destBytes":23690,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1389,"convertSpendMs":148,"createdTime":"2020-09-05 15:59:23","host":"us-038*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"254.2 KB","destSize":"23.1 KB","compressRate":"9.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a0065eb-a81e-4c55-b851-00da3d527e5b/9-renaissance-no-code-web-designers.png","sourceStatusCode":200,"destWidth":1000,"destHeight":763,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn76@2020_5/2020/09/05/07-59-23-875_deefe6a32c813057.webp","sourceBytes":510483,"destBytes":62382,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1959,"convertSpendMs":52,"createdTime":"2020-09-05 15:59:23","host":"europe21*","referer":"https://smashingmagazine.com/2020/07/renaissance-no-code-web-designers/","linkMd5ListStr":"5dc2ee4cf02a8d13b4ca79f601851ab2","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"498.5 KB","destSize":"60.9 KB","compressRate":"12.2%"},{"code":1,"isDone":false,"source":"https://res.cloudinary.com/indysigner/image/upload/v1596442224/checklists-box-cards-2x-opt_mj0fzc.png","sourceStatusCode":200,"destWidth":910,"destHeight":936,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn2@2020_3/2020/09/05/07-59-24-075_c4b9c6b941d7cdc3.webp","sourceBytes":179495,"destBytes":70896,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1152,"convertSpendMs":63,"createdTime":"2020-09-05 15:59:23","host":"us-015*","referer":"https://smashingmagazine.com/2020/08/checklist-cards-release/","linkMd5ListStr":"2954bfe0e134e38e8bb6b7bd231c4f60","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"175.3 KB","destSize":"69.2 KB","compressRate":"39.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50607166-7574-4153-bd04-763e3e320b46/porsche-final-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn55@2020_1/2020/09/05/07-59-23-720_9a2b172fb98dba88.webp","sourceBytes":503679,"destBytes":95846,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2240,"convertSpendMs":89,"createdTime":"2020-09-05 15:59:22","host":"europe67*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"491.9 KB","destSize":"93.6 KB","compressRate":"19%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/013d0d6a-f33c-41ea-bfe6-f99f95fdd75d/chris-ferdinandi-200x200-opt.jpg","sourceStatusCode":200,"destWidth":200,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn93@2020_6/2020/09/05/07-59-24-472_f4744a805d1a186d.webp","sourceBytes":8347,"destBytes":7312,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1175,"convertSpendMs":4,"createdTime":"2020-09-05 15:59:24","host":"us-033*","referer":"https://smashingmagazine.com/2020/07/smashing-podcast-episode-21/","linkMd5ListStr":"16c40e68c02c8dbd92a41f61b38f53b0","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.2 KB","destSize":"7.1 KB","compressRate":"87.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/43992c37-cee8-48a7-958c-10ae945ec0f7/porsche72-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn98@2020_3/2020/09/05/07-59-24-632_c9b4d815292d980a.webp","sourceBytes":93438,"destBytes":11740,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1281,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:24","host":"us-021*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"91.2 KB","destSize":"11.5 KB","compressRate":"12.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5fed3e5a-c40c-43f9-9ef7-bbc20008f329/porsche79-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":223,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn78@2020_6/2020/09/05/07-59-24-638_0480aa1b6230c07d.webp","sourceBytes":56260,"destBytes":11504,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1421,"convertSpendMs":29,"createdTime":"2020-09-05 15:59:24","host":"us-017*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"54.9 KB","destSize":"11.2 KB","compressRate":"20.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cdfcffd0-f983-4c79-b662-bef62b0f553c/porsche149-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn44@2020_1/2020/09/05/07-59-24-420_375fed5565314f6d.webp","sourceBytes":509086,"destBytes":62264,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1857,"convertSpendMs":38,"createdTime":"2020-09-05 15:59:23","host":"europe-59*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"497.2 KB","destSize":"60.8 KB","compressRate":"12.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b40ec210-dcdf-4288-82ff-36ac0573049b/aug-13-estonian-summer-sun-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":500,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn1@2020_4/2020/09/05/07-59-24-899_ca4874cbfef4e911.webp","sourceBytes":157428,"destBytes":37208,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1223,"convertSpendMs":24,"createdTime":"2020-09-05 15:59:24","host":"us-009*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"153.7 KB","destSize":"36.3 KB","compressRate":"23.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/69d35857-e891-448b-857d-b9ace04ffa0b/porsche42-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn39@2020_4/2020/09/05/07-59-24-701_b295c49c1458d730.webp","sourceBytes":107709,"destBytes":7814,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2037,"convertSpendMs":20,"createdTime":"2020-09-05 15:59:23","host":"europe21*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"105.2 KB","destSize":"7.6 KB","compressRate":"7.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fd8db1ed-e488-45e7-9024-4a6966a07386/76-porsche-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":575,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn42@2020_5/2020/09/05/07-59-25-015_e202ccf0e1c8b9c6.webp","sourceBytes":163952,"destBytes":29754,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1008,"convertSpendMs":57,"createdTime":"2020-09-05 15:59:24","host":"us-017*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"160.1 KB","destSize":"29.1 KB","compressRate":"18.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/35a2f8ba-55d5-45e2-a5c3-d216ffde9ab8/porsche29-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn21@2020_4/2020/09/05/07-59-25-051_bc6d5d698832395e.webp","sourceBytes":163810,"destBytes":31558,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1254,"convertSpendMs":59,"createdTime":"2020-09-05 15:59:24","host":"us-013*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"160 KB","destSize":"30.8 KB","compressRate":"19.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a079c6cb-0900-435a-a4e1-12c0516198ce/porsche132-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn17@2020_2/2020/09/05/07-59-25-025_2a622094af515b4f.webp","sourceBytes":101255,"destBytes":10050,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1269,"convertSpendMs":30,"createdTime":"2020-09-05 15:59:24","host":"us-025*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"98.9 KB","destSize":"9.8 KB","compressRate":"9.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/852b446c-4def-4e6d-b449-bb0e560a3945/03-default-scroll-position-vue-router.png","sourceStatusCode":200,"destWidth":2454,"destHeight":1400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn90@2020_2/2020/09/05/07-59-24-886_97a1fbc30ee3226f.webp","sourceBytes":74377,"destBytes":12630,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1734,"convertSpendMs":84,"createdTime":"2020-09-05 15:59:24","host":"europe-56*","referer":"https://smashingmagazine.com/2020/08/vue-router-features/","linkMd5ListStr":"5155f9648fe66b7e6f7f7224ebbda820","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"72.6 KB","destSize":"12.3 KB","compressRate":"17%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6f8eb6e7-876b-498b-b129-8e311f3a19d7/figure-07-client-side-graphql-apollo-client-react-apps.gif","sourceStatusCode":200,"destWidth":600,"destHeight":279,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn74@2020_6/2020/09/05/07-59-25-011_949345bdbf78870b.webp","sourceBytes":109027,"destBytes":54094,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1944,"convertSpendMs":652,"createdTime":"2020-09-05 15:59:23","host":"us-029*","referer":"https://smashingmagazine.com/2020/07/client-side-graphql-apollo-client-react-apps/","linkMd5ListStr":"2de9e609eb9cf95b580b73d5f31a0743","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"106.5 KB","destSize":"52.8 KB","compressRate":"49.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ef24ab4-0ae6-4f3f-a413-6e746285ffcb/issue-12-14-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":1400,"destHeight":635,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn79@2020_6/2020/09/05/07-59-24-679_94b145d81ee26fe1.webp","sourceBytes":489650,"destBytes":80506,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2676,"convertSpendMs":52,"createdTime":"2020-09-05 15:59:23","host":"europe-59*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"478.2 KB","destSize":"78.6 KB","compressRate":"16.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db84b6b9-0b15-4b5a-80d6-3aecc5119d5e/issue-11-18-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1400,"destHeight":489,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn100@2020_3/2020/09/05/07-59-24-754_19e5cc5b0b91edf7.webp","sourceBytes":335967,"destBytes":70496,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2677,"convertSpendMs":39,"createdTime":"2020-09-05 15:59:23","host":"europe63*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"328.1 KB","destSize":"68.8 KB","compressRate":"21%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/935244dd-cd15-4530-8f7c-f54d9311c5d6/2020-smashing-online-events-preview.png","sourceStatusCode":200,"destWidth":1634,"destHeight":335,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn33@2020_4/2020/09/05/07-59-25-188_abc05eafd5e4dd0b.webp","sourceBytes":104292,"destBytes":35558,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1251,"convertSpendMs":26,"createdTime":"2020-09-05 15:59:24","host":"us-52*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"101.8 KB","destSize":"34.7 KB","compressRate":"34.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d8955d41-7aca-489e-88a2-d2bc9e8009fd/google-maps-search-example.png","sourceStatusCode":200,"destWidth":1111,"destHeight":574,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn26@2020_4/2020/09/05/07-59-25-091_4fbe463c31e1fad7.webp","sourceBytes":439059,"destBytes":84798,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1443,"convertSpendMs":43,"createdTime":"2020-09-05 15:59:24","host":"us-001*","referer":"https://smashingmagazine.com/2020/08/lessons-web-app-designers-learn-google/","linkMd5ListStr":"90050a70ad8778f8abad9e0a4b74cfcb","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"428.8 KB","destSize":"82.8 KB","compressRate":"19.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/38a09189-4a44-4287-a937-65910f97b4de/draw-your-favorite-car-examples.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn13@2020_6/2020/09/05/07-59-25-123_29f58048c08c47e2.webp","sourceBytes":664098,"destBytes":107514,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1482,"convertSpendMs":150,"createdTime":"2020-09-05 15:59:24","host":"us-038*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"648.5 KB","destSize":"105 KB","compressRate":"16.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8bc611e8-7558-44b1-9baf-c9feb907d2fc/porsche65-sketch-tutorial-part-2.png","sourceStatusCode":206,"destWidth":1920,"destHeight":520,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn86@2020_6/2020/09/05/07-59-24-973_c6889b54e208a74c.webp","sourceBytes":147007,"destBytes":23554,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1913,"convertSpendMs":45,"createdTime":"2020-09-05 15:59:24","host":"europe68*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[206],"sourceSize":"143.6 KB","destSize":"23 KB","compressRate":"16%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c708b65a-b35b-4de8-aef1-fc83267e3ccb/columns-component-library-react-emotion.png","sourceStatusCode":200,"destWidth":1654,"destHeight":852,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn45@2020_1/2020/09/05/07-59-25-321_2cb4bbec264dd423.webp","sourceBytes":44343,"destBytes":5618,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1324,"convertSpendMs":50,"createdTime":"2020-09-05 15:59:24","host":"us-005*","referer":"https://smashingmagazine.com/2020/09/component-library-react-emotion/","linkMd5ListStr":"c2ff886e4902a296612efa5d4bdb8cd3","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43.3 KB","destSize":"5.5 KB","compressRate":"12.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/203b891a-c68c-4b26-a1a0-030114c27125/porsche46-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn65@2020_3/2020/09/05/07-59-25-135_8fc5ff1d60322bf6.webp","sourceBytes":137987,"destBytes":19268,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2290,"convertSpendMs":23,"createdTime":"2020-09-05 15:59:23","host":"europe64*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"134.8 KB","destSize":"18.8 KB","compressRate":"14%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e65ef97f-74bd-4582-8c7f-4f771622a68a/tree-demystifying-djangos-magic.jpg","sourceStatusCode":200,"destWidth":1600,"destHeight":1043,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn62@2020_6/2020/09/05/07-59-25-399_29dfec2687f99e70.webp","sourceBytes":148765,"destBytes":52240,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1357,"convertSpendMs":58,"createdTime":"2020-09-05 15:59:24","host":"us-021*","referer":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/","linkMd5ListStr":"90725d421e0a2e80cbc6fae6b90f5416","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"145.3 KB","destSize":"51 KB","compressRate":"35.1%"},{"code":1,"isDone":false,"source":"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/fc799218-49c0-4835-a6cc-1b6f44f4620f.png","sourceStatusCode":200,"destWidth":700,"destHeight":246,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn8@2020_4/2020/09/05/07-59-25-537_50a924e145b33275.webp","sourceBytes":13887,"destBytes":7852,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":903,"convertSpendMs":12,"createdTime":"2020-09-05 15:59:25","host":"us-018*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.6 KB","destSize":"7.7 KB","compressRate":"56.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9cda1204-2dde-49f5-882a-ceef0ba24675/product-hint-workshop.png","sourceStatusCode":200,"destWidth":480,"destHeight":697,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn79@2020_3/2020/09/05/07-59-25-520_4e73367035a5b666.webp","sourceBytes":58608,"destBytes":26462,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1242,"convertSpendMs":32,"createdTime":"2020-09-05 15:59:25","host":"us-039*","referer":"https://smashingmagazine.com/2020/08/checklist-cards-release/","linkMd5ListStr":"2954bfe0e134e38e8bb6b7bd231c4f60","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"57.2 KB","destSize":"25.8 KB","compressRate":"45.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/26cc0aed-e3a4-4e75-a5f2-e588eccfd6c0/porsche05-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn58@2020_4/2020/09/05/07-59-25-449_4b59891761c30a75.webp","sourceBytes":1323307,"destBytes":99716,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1497,"convertSpendMs":139,"createdTime":"2020-09-05 15:59:24","host":"us-033*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.3 MB","destSize":"97.4 KB","compressRate":"7.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b87dcaa2-1cd1-4f9b-b06c-e920f00cb032/porsche165-1-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":686,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn88@2020_3/2020/09/05/07-59-25-550_c346322a5f701d89.webp","sourceBytes":721389,"destBytes":55142,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1350,"convertSpendMs":44,"createdTime":"2020-09-05 15:59:25","host":"us-014*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9,3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"704.5 KB","destSize":"53.8 KB","compressRate":"7.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c7a88c3a-2533-49e2-8517-980aec2a70db/porsche27-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn38@2020_3/2020/09/05/07-59-25-609_26dc6bc82d003976.webp","sourceBytes":185527,"destBytes":27082,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1662,"convertSpendMs":122,"createdTime":"2020-09-05 15:59:24","host":"us-029*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"181.2 KB","destSize":"26.4 KB","compressRate":"14.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4a02803-efaf-4c77-adf5-2a16bb329b03/sep-20-create-more-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn29@2020_5/2020/09/05/07-59-25-192_b9c3d8ba621544e5.webp","sourceBytes":20030,"destBytes":13714,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1667,"convertSpendMs":12,"createdTime":"2020-09-05 15:59:24","host":"europe64*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.6 KB","destSize":"13.4 KB","compressRate":"68.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/84a8c5d0-ff12-47e9-8715-6adb18fdbb6e/aug-17-happy-janmashtami-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn92@2020_5/2020/09/05/07-59-25-705_67bd96fa1c4260fc.webp","sourceBytes":40448,"destBytes":11828,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1385,"convertSpendMs":11,"createdTime":"2020-09-05 15:59:25","host":"us-002*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39.5 KB","destSize":"11.6 KB","compressRate":"29.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3b633c9-9627-4b02-b2ff-26e8124eb520/issue-11-13-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1400,"destHeight":914,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn83@2020_1/2020/09/05/07-59-25-588_d7de1efeaa9c0d4f.webp","sourceBytes":635166,"destBytes":118870,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1434,"convertSpendMs":85,"createdTime":"2020-09-05 15:59:25","host":"us-026*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"620.3 KB","destSize":"116.1 KB","compressRate":"18.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ad26699d-eb3a-4d00-8ec3-61a58bd259af/comment-tool-figma.png","sourceStatusCode":200,"destWidth":800,"destHeight":80,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn53@2020_1/2020/09/05/07-59-25-737_4139e5c39fd66bfe.webp","sourceBytes":1784,"destBytes":3298,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1542,"convertSpendMs":4,"createdTime":"2020-09-05 15:59:25","host":"europe-56*","referer":"https://smashingmagazine.com/2020/09/figma-developers-guide/","linkMd5ListStr":"f3b6fa9b4a0de46db15a88ca8ddaba3b","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.7 KB","destSize":"3.2 KB","compressRate":"184.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee24db00-a385-4bbe-84b1-f0332c75c9a7/porsche21a-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn19@2020_2/2020/09/05/07-59-25-248_b5e827dfe1f7a432.webp","sourceBytes":1549943,"destBytes":84310,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3162,"convertSpendMs":107,"createdTime":"2020-09-05 15:59:23","host":"europe67*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.5 MB","destSize":"82.3 KB","compressRate":"5.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8daea8d9-a6f0-45f5-aabe-47cf40cf5f55/tide-website-laundry.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn3@2020_3/2020/09/05/07-59-25-754_f52a8fb748535546.webp","sourceBytes":708012,"destBytes":90860,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1447,"convertSpendMs":61,"createdTime":"2020-09-05 15:59:25","host":"us-030*","referer":"https://smashingmagazine.com/2020/08/design-website-five-senses/","linkMd5ListStr":"90139c1573575fffdbeaa42a49e64624","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"691.4 KB","destSize":"88.7 KB","compressRate":"12.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41853d38-7001-4990-9f2c-6f0dfd23fc82/porsche26-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":912,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn66@2020_4/2020/09/05/07-59-26-077_904da4502af89887.webp","sourceBytes":154966,"destBytes":24914,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1213,"convertSpendMs":31,"createdTime":"2020-09-05 15:59:25","host":"us-009*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"151.3 KB","destSize":"24.3 KB","compressRate":"16.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8734e964-d23c-4934-abad-8af9cb72e1d1/porsche53-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn6@2020_5/2020/09/05/07-59-25-781_f0dc23c4ee0fca4f.webp","sourceBytes":235688,"destBytes":27774,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2389,"convertSpendMs":61,"createdTime":"2020-09-05 15:59:24","host":"europe-22*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"230.2 KB","destSize":"27.1 KB","compressRate":"11.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3ab8b929-3b56-487b-a00b-4649117f9153/aug-15-saturn-among-the-stars-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn76@2020_3/2020/09/05/07-59-25-947_ec0d94ca4aea3c28.webp","sourceBytes":27669,"destBytes":18592,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1700,"convertSpendMs":14,"createdTime":"2020-09-05 15:59:25","host":"europe61*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"27 KB","destSize":"18.2 KB","compressRate":"67.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4d760812-8ca0-4d65-bd06-2199800eb38b/fig-02-change-event-triggered.png","sourceStatusCode":200,"destWidth":1648,"destHeight":938,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn10@2020_1/2020/09/05/07-59-25-790_1f186ec487d41a30.webp","sourceBytes":83781,"destBytes":54304,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2428,"convertSpendMs":67,"createdTime":"2020-09-05 15:59:24","host":"europe-60*","referer":"https://smashingmagazine.com/2020/08/forms-validation-ionic-react/","linkMd5ListStr":"fa41336deda35415b1959d255ba9a56c","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"81.8 KB","destSize":"53 KB","compressRate":"64.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6407777f-0fb9-43c8-b22a-e0f192631230/porsche87-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":383,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn47@2020_6/2020/09/05/07-59-26-288_8ac8c0ff4b96ee88.webp","sourceBytes":105716,"destBytes":16366,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1261,"convertSpendMs":17,"createdTime":"2020-09-05 15:59:25","host":"us-51*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"103.2 KB","destSize":"16 KB","compressRate":"15.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f325c47-9912-46f7-a888-441de1571c55/zubryby-application-color-schemes-css-custom-properties.jpeg","sourceStatusCode":200,"destWidth":1065,"destHeight":750,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn29@2020_3/2020/09/05/07-59-26-191_67f3535bc0443da5.webp","sourceBytes":196367,"destBytes":100972,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1403,"convertSpendMs":55,"createdTime":"2020-09-05 15:59:25","host":"us-023*","referer":"https://smashingmagazine.com/2020/08/application-color-schemes-css-custom-properties/","linkMd5ListStr":"1d07a3a7ea9e5c230cc1a792c9ee5246","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"191.8 KB","destSize":"98.6 KB","compressRate":"51.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/01e05365-27e0-4b4c-bb56-bc4313dc4cad/porsche165c-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn49@2020_6/2020/09/05/07-59-26-055_fe24a4fa32d36802.webp","sourceBytes":748304,"destBytes":55564,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2271,"convertSpendMs":44,"createdTime":"2020-09-05 15:59:24","host":"europe68*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"730.8 KB","destSize":"54.3 KB","compressRate":"7.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/73a2316f-0633-4523-b3dc-3b23bc97fe47/stone-block-example.jpg","sourceStatusCode":200,"destWidth":2000,"destHeight":822,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn44@2020_3/2020/09/05/07-59-26-238_74c074efcd863e8e.webp","sourceBytes":241775,"destBytes":27772,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1322,"convertSpendMs":44,"createdTime":"2020-09-05 15:59:26","host":"europe63*","referer":"https://smashingmagazine.com/2020/07/renaissance-no-code-web-designers/","linkMd5ListStr":"5dc2ee4cf02a8d13b4ca79f601851ab2","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"236.1 KB","destSize":"27.1 KB","compressRate":"11.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f24a6b17-152d-419d-9a49-b8778ad47d12/cobloom-saas-pricing-article.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn56@2020_4/2020/09/05/07-59-26-381_e18be72ac1cf454e.webp","sourceBytes":802262,"destBytes":103906,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1426,"convertSpendMs":59,"createdTime":"2020-09-05 15:59:25","host":"us-016*","referer":"https://smashingmagazine.com/2020/08/clients-backlinks-design/","linkMd5ListStr":"8be8634c820c7dc900f70d342c72e08a","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"783.5 KB","destSize":"101.5 KB","compressRate":"13%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d4b00839-1936-4153-a925-c9b46b914c89/porsche189-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn60@2020_4/2020/09/05/07-59-26-391_6f21a8831f2c5914.webp","sourceBytes":491910,"destBytes":98112,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1439,"convertSpendMs":82,"createdTime":"2020-09-05 15:59:25","host":"us-004*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"480.4 KB","destSize":"95.8 KB","compressRate":"19.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58602f97-7538-422a-8219-ff5cb825866e/porsche45-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn76@2020_6/2020/09/05/07-59-26-486_67e5f988cca804d6.webp","sourceBytes":123364,"destBytes":20300,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1274,"convertSpendMs":23,"createdTime":"2020-09-05 15:59:26","host":"us-020*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"120.5 KB","destSize":"19.8 KB","compressRate":"16.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c56b4370-cfd0-4cf6-b000-308dc25bf018/export-all-figma.png","sourceStatusCode":200,"destWidth":924,"destHeight":852,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn80@2020_4/2020/09/05/07-59-26-508_68f66660c58c7e75.webp","sourceBytes":32660,"destBytes":31894,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1278,"convertSpendMs":35,"createdTime":"2020-09-05 15:59:26","host":"us-008*","referer":"https://smashingmagazine.com/2020/09/figma-developers-guide/","linkMd5ListStr":"f3b6fa9b4a0de46db15a88ca8ddaba3b","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.9 KB","destSize":"31.1 KB","compressRate":"97.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d3da5027-219a-43e8-8d18-91b601072788/porsche02-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn100@2020_1/2020/09/05/07-59-26-446_fafa12fbb1580378.webp","sourceBytes":1572170,"destBytes":98280,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2188,"convertSpendMs":235,"createdTime":"2020-09-05 15:59:25","host":"us-53*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.5 MB","destSize":"96 KB","compressRate":"6.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cb1b6dfd-eb7f-42bf-a4c8-399a375ece0f/porsche34-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn71@2020_3/2020/09/05/07-59-26-440_201a45f4a8939edb.webp","sourceBytes":182010,"destBytes":21826,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2340,"convertSpendMs":53,"createdTime":"2020-09-05 15:59:25","host":"europe-23*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"177.7 KB","destSize":"21.3 KB","compressRate":"12%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/54efeba9-bd10-4186-adf5-fdc63a1b810c/sep-18-fresh-breeze-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn94@2020_2/2020/09/05/07-59-26-762_62172f6523162a47.webp","sourceBytes":60503,"destBytes":34466,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1248,"convertSpendMs":24,"createdTime":"2020-09-05 15:59:26","host":"us-038*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.1 KB","destSize":"33.7 KB","compressRate":"57%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9fea9610-16d2-499c-bd89-dea136c5217e/porsche166-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn33@2020_2/2020/09/05/07-59-26-688_7190e41127f9189c.webp","sourceBytes":428711,"destBytes":74070,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1812,"convertSpendMs":133,"createdTime":"2020-09-05 15:59:25","host":"us-011*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"418.7 KB","destSize":"72.3 KB","compressRate":"17.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8355d5dd-6495-447b-b4e9-2b13966edf31/initialize-firebase-comment-system-firebase.png","sourceStatusCode":200,"destWidth":1600,"destHeight":967,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn97@2020_6/2020/09/05/07-59-26-802_2851e8d56dc15e73.webp","sourceBytes":87874,"destBytes":27820,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1291,"convertSpendMs":68,"createdTime":"2020-09-05 15:59:26","host":"us-025*","referer":"https://smashingmagazine.com/2020/08/comment-system-firebase/","linkMd5ListStr":"d3941734f9d21fb1526a62ff1d7b9b2c","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"85.8 KB","destSize":"27.2 KB","compressRate":"31.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1eb1a24b-66cd-4118-8ef9-729611910563/porsche157-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn6@2020_2/2020/09/05/07-59-26-867_16181ce986245cb2.webp","sourceBytes":285538,"destBytes":31296,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1246,"convertSpendMs":34,"createdTime":"2020-09-05 15:59:26","host":"us-001*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"278.8 KB","destSize":"30.6 KB","compressRate":"11%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ba525f39-d953-4a9e-bb79-643c7217c786/porsche116-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":365,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn2@2020_6/2020/09/05/07-59-26-743_43ee7a4700418500.webp","sourceBytes":104965,"destBytes":17256,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1310,"convertSpendMs":14,"createdTime":"2020-09-05 15:59:26","host":"us-013*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"102.5 KB","destSize":"16.9 KB","compressRate":"16.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e26206a1-7d68-46ad-8c9f-8b2a4529719e/porsche06-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn26@2020_1/2020/09/05/07-59-26-774_394cfe69c76e3053.webp","sourceBytes":1581545,"destBytes":108832,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2028,"convertSpendMs":136,"createdTime":"2020-09-05 15:59:25","host":"us-035*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.5 MB","destSize":"106.3 KB","compressRate":"6.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b7b854ab-4d28-453d-8a97-cb93b0091dcb/porsche95-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":504,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn21@2020_4/2020/09/05/07-59-26-977_02f7ddb26e47ada1.webp","sourceBytes":144205,"destBytes":28938,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1234,"convertSpendMs":55,"createdTime":"2020-09-05 15:59:26","host":"us-017*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"140.8 KB","destSize":"28.3 KB","compressRate":"20.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0177efdc-7a55-48e4-b7d2-a657caa12fb4/topple-smashing-cat-recording-1200x800.png","sourceStatusCode":200,"destWidth":1200,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn14@2020_1/2020/09/05/07-59-26-943_808b4837972f6152.webp","sourceBytes":102977,"destBytes":60702,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1355,"convertSpendMs":46,"createdTime":"2020-09-05 15:59:26","host":"us-52*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"100.6 KB","destSize":"59.3 KB","compressRate":"58.9%"},{"code":1,"isDone":false,"source":"https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-1-opt_oesglb.png","sourceStatusCode":200,"destWidth":2008,"destHeight":1136,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn45@2020_6/2020/09/05/07-59-27-012_ee6c9704e6fd5048.webp","sourceBytes":42405,"destBytes":38900,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":968,"convertSpendMs":50,"createdTime":"2020-09-05 15:59:26","host":"us-009*","referer":"https://smashingmagazine.com/2020/08/checklist-cards-release/","linkMd5ListStr":"2954bfe0e134e38e8bb6b7bd231c4f60","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"41.4 KB","destSize":"38 KB","compressRate":"91.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4df7a6e3-7331-4fc3-9979-cd02c303ecdc/issue-11-11-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1400,"destHeight":489,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn51@2020_5/2020/09/05/07-59-26-901_7d1373ea263e8111.webp","sourceBytes":317669,"destBytes":57568,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1946,"convertSpendMs":78,"createdTime":"2020-09-05 15:59:25","host":"us-028*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"310.2 KB","destSize":"56.2 KB","compressRate":"18.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f286674-df7d-4b50-b51f-1d779df584f8/zoma-reviews-screenshot-tips-create-customer-centric-landing-pages.png","sourceStatusCode":200,"destWidth":996,"destHeight":549,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn37@2020_3/2020/09/05/07-59-26-840_72e52d8cd90129cf.webp","sourceBytes":52107,"destBytes":25074,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1969,"convertSpendMs":18,"createdTime":"2020-09-05 15:59:25","host":"europe-24*","referer":"https://smashingmagazine.com/2020/08/tips-customer-centric-landing-pages/","linkMd5ListStr":"0ae5a604742fc5fdb0e1c7bcacfa3b97","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.9 KB","destSize":"24.5 KB","compressRate":"48.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/545e8950-9776-4648-be89-1acc3840fa6b/06-message-in-terminal-vue-router.png","sourceStatusCode":200,"destWidth":2418,"destHeight":456,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn38@2020_1/2020/09/05/07-59-27-169_a47543fafd378a5f.webp","sourceBytes":105902,"destBytes":38862,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1269,"convertSpendMs":46,"createdTime":"2020-09-05 15:59:26","host":"us-033*","referer":"https://smashingmagazine.com/2020/08/vue-router-features/","linkMd5ListStr":"5155f9648fe66b7e6f7f7224ebbda820","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"103.4 KB","destSize":"38 KB","compressRate":"36.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7170b1e-7b37-4e06-b847-2ad6364d8794/coffee-culture-beans.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn18@2020_1/2020/09/05/07-59-27-018_c5411994c39dad21.webp","sourceBytes":1223965,"destBytes":65712,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1516,"convertSpendMs":95,"createdTime":"2020-09-05 15:59:26","host":"us-029*","referer":"https://smashingmagazine.com/2020/08/design-website-five-senses/","linkMd5ListStr":"90139c1573575fffdbeaa42a49e64624","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.2 MB","destSize":"64.2 KB","compressRate":"5.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ab8c43e6-8858-4356-99d1-6b5220c6a31a/porsche175-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":327,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn26@2020_4/2020/09/05/07-59-27-139_54447b49e4eb9099.webp","sourceBytes":64203,"destBytes":23438,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1467,"convertSpendMs":28,"createdTime":"2020-09-05 15:59:26","host":"us-005*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"62.7 KB","destSize":"22.9 KB","compressRate":"36.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fe39e6ee-32ff-4024-b213-50c288783316/porsche50-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":900,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn22@2020_3/2020/09/05/07-59-26-951_7e872cf3edc686ed.webp","sourceBytes":145843,"destBytes":13870,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2347,"convertSpendMs":26,"createdTime":"2020-09-05 15:59:25","host":"europe-58*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"142.4 KB","destSize":"13.5 KB","compressRate":"9.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bc401368-0ced-49b3-a346-b1cbb5fc1234/profitwell-blog-post-with-graphics.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn42@2020_4/2020/09/05/07-59-27-187_89468594467aa955.webp","sourceBytes":305828,"destBytes":54100,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1331,"convertSpendMs":43,"createdTime":"2020-09-05 15:59:26","host":"us-021*","referer":"https://smashingmagazine.com/2020/08/clients-backlinks-design/","linkMd5ListStr":"8be8634c820c7dc900f70d342c72e08a","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"298.7 KB","destSize":"52.8 KB","compressRate":"17.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cdf9bc20-be85-46a5-805a-7ce6dece9ad1/firestore-dashboard-comment-system-firebase.png","sourceStatusCode":200,"destWidth":1600,"destHeight":835,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn17@2020_3/2020/09/05/07-59-26-951_4d773cfd99e8e813.webp","sourceBytes":148846,"destBytes":34798,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2451,"convertSpendMs":46,"createdTime":"2020-09-05 15:59:25","host":"europe70*","referer":"https://smashingmagazine.com/2020/08/comment-system-firebase/","linkMd5ListStr":"d3941734f9d21fb1526a62ff1d7b9b2c","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"145.4 KB","destSize":"34 KB","compressRate":"23.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f91d1112-106e-4520-91d8-98451625d763/porsche88-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":383,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn87@2020_6/2020/09/05/07-59-27-087_9121196ee5871629.webp","sourceBytes":93664,"destBytes":7132,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1757,"convertSpendMs":17,"createdTime":"2020-09-05 15:59:26","host":"europe-59*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"91.5 KB","destSize":"7 KB","compressRate":"7.6%"},{"code":1,"isDone":false,"source":"https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-header-opt_dst2qk.png","sourceStatusCode":200,"destWidth":1260,"destHeight":710,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn61@2020_4/2020/09/05/07-59-27-229_8c62354324f61aa2.webp","sourceBytes":131144,"destBytes":63334,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1079,"convertSpendMs":49,"createdTime":"2020-09-05 15:59:27","host":"us-025*","referer":"https://smashingmagazine.com/2020/08/checklist-cards-release/","linkMd5ListStr":"2954bfe0e134e38e8bb6b7bd231c4f60","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"128.1 KB","destSize":"61.8 KB","compressRate":"48.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3070eba6-3daa-46c5-bdda-6a2c8b4f4b22/12-icons-mobile-apps.png","sourceStatusCode":200,"destWidth":2000,"destHeight":2000,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn71@2020_3/2020/09/05/07-59-27-147_d18850e16aecda7d.webp","sourceBytes":866366,"destBytes":209110,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2122,"convertSpendMs":663,"createdTime":"2020-09-05 15:59:26","host":"us-032*","referer":"https://smashingmagazine.com/2020/09/icons-mobile-apps/","linkMd5ListStr":"bfb80d7e10b5ce2cc36e767b323e14aa","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"846.1 KB","destSize":"204.2 KB","compressRate":"24.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2e4c64c5-defa-451d-91c4-2cbae4e33a7b/porsche68-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":700,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn58@2020_4/2020/09/05/07-59-27-456_c4c3e914eac004b0.webp","sourceBytes":312978,"destBytes":37714,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1313,"convertSpendMs":103,"createdTime":"2020-09-05 15:59:26","host":"us-038*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"305.6 KB","destSize":"36.8 KB","compressRate":"12.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c9d1c96e-9405-44d9-914e-122d8ae4d1d7/porsche180-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":235,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn65@2020_5/2020/09/05/07-59-27-493_67eb18083f73c7ad.webp","sourceBytes":23301,"destBytes":8826,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1159,"convertSpendMs":14,"createdTime":"2020-09-05 15:59:27","host":"us-013*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.8 KB","destSize":"8.6 KB","compressRate":"37.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d395974c-79bf-47d6-9a08-498742240cbc/click-cover-opt.png","sourceStatusCode":200,"destWidth":480,"destHeight":697,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn81@2020_4/2020/09/05/07-59-27-509_458024b9c4284dda.webp","sourceBytes":87117,"destBytes":60114,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1053,"convertSpendMs":24,"createdTime":"2020-09-05 15:59:27","host":"us-016*","referer":"https://smashingmagazine.com/2020/08/checklist-cards-release/","linkMd5ListStr":"2954bfe0e134e38e8bb6b7bd231c4f60","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"85.1 KB","destSize":"58.7 KB","compressRate":"69%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/958e485e-0451-485a-9fd5-d49213fbfae3/porsche135-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn70@2020_1/2020/09/05/07-59-27-602_e74c147a83ca4379.webp","sourceBytes":88658,"destBytes":14510,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1265,"convertSpendMs":40,"createdTime":"2020-09-05 15:59:27","host":"us-001*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"86.6 KB","destSize":"14.2 KB","compressRate":"16.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9fa36b74-911c-4945-909d-f24608129e74/accessibility-chrome-devtools-a11y-inspector.png","sourceStatusCode":200,"destWidth":3424,"destHeight":2224,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn67@2020_2/2020/09/05/07-59-27-427_8f7da5e6cd51912f.webp","sourceBytes":996270,"destBytes":411190,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2529,"convertSpendMs":958,"createdTime":"2020-09-05 15:59:26","host":"us-55*","referer":"https://smashingmagazine.com/2020/08/accessibility-chrome-devtools/","linkMd5ListStr":"692062341a74418e56f3a5d4d97a92e4","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"972.9 KB","destSize":"401.6 KB","compressRate":"41.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4a6af75-68b2-443f-88be-114fe115fe91/google-hangouts-simple-navigation.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn90@2020_2/2020/09/05/07-59-27-805_3f739f59e46c4ee3.webp","sourceBytes":945958,"destBytes":38984,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1261,"convertSpendMs":55,"createdTime":"2020-09-05 15:59:27","host":"us-005*","referer":"https://smashingmagazine.com/2020/08/lessons-web-app-designers-learn-google/","linkMd5ListStr":"90050a70ad8778f8abad9e0a4b74cfcb","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"923.8 KB","destSize":"38.1 KB","compressRate":"4.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/756fbf8e-51b1-4d1a-84b6-e14422b2b13a/porsche177-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":233,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn2@2020_1/2020/09/05/07-59-27-838_cc35aaa0af4fcb2b.webp","sourceBytes":70055,"destBytes":12382,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1244,"convertSpendMs":23,"createdTime":"2020-09-05 15:59:27","host":"us-033*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"68.4 KB","destSize":"12.1 KB","compressRate":"17.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cce80386-eec2-49ad-be9a-3e3ac39ea74d/porsche164a-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":543,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn77@2020_3/2020/09/05/07-59-27-692_a9e705e56ce179d7.webp","sourceBytes":189902,"destBytes":26400,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1384,"convertSpendMs":28,"createdTime":"2020-09-05 15:59:27","host":"us-52*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"185.5 KB","destSize":"25.8 KB","compressRate":"13.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/54a765de-d380-4158-8ceb-40143ce810da/backlinko-long-form-content-links.png","sourceStatusCode":200,"destWidth":768,"destHeight":528,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn83@2020_3/2020/09/05/07-59-27-788_64de4372a40961f9.webp","sourceBytes":78585,"destBytes":17762,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1317,"convertSpendMs":40,"createdTime":"2020-09-05 15:59:27","host":"us-017*","referer":"https://smashingmagazine.com/2020/08/clients-backlinks-design/","linkMd5ListStr":"8be8634c820c7dc900f70d342c72e08a","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"76.7 KB","destSize":"17.3 KB","compressRate":"22.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/30f7a23d-885d-4475-b2f3-5a27791b41ec/1-using-mobx-state-manager-react-native-applications.png","sourceStatusCode":200,"destWidth":804,"destHeight":436,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn11@2020_4/2020/09/05/07-59-27-958_6d051c22f9b07da6.webp","sourceBytes":20766,"destBytes":11796,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1135,"convertSpendMs":17,"createdTime":"2020-09-05 15:59:27","host":"us-010*","referer":"https://smashingmagazine.com/2020/08/mobx-state-manager-react-native-applications/","linkMd5ListStr":"b7e12972db0bd44e3f243eb7c65c92c5","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.3 KB","destSize":"11.5 KB","compressRate":"56.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/42ff98d5-f414-4de3-a4b7-a7c1e2ce7e4d/stack-component-library-react-emotion.png","sourceStatusCode":200,"destWidth":1050,"destHeight":734,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn7@2020_2/2020/09/05/07-59-28-017_8631d77aa5d6f6ec.webp","sourceBytes":26771,"destBytes":3616,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1227,"convertSpendMs":35,"createdTime":"2020-09-05 15:59:27","host":"us-022*","referer":"https://smashingmagazine.com/2020/09/component-library-react-emotion/","linkMd5ListStr":"c2ff886e4902a296612efa5d4bdb8cd3","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.1 KB","destSize":"3.5 KB","compressRate":"13.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cfad9cec-160b-4f5c-8d66-571a2d4ecb0e/04-guide-product-tours-react-apps.png","sourceStatusCode":200,"destWidth":1357,"destHeight":581,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn53@2020_6/2020/09/05/07-59-27-766_6b62d72f927bdc8e.webp","sourceBytes":107919,"destBytes":21920,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1771,"convertSpendMs":37,"createdTime":"2020-09-05 15:59:27","host":"europe-60*","referer":"https://smashingmagazine.com/2020/08/guide-product-tours-react-apps/","linkMd5ListStr":"8aad86784c6c5de060112293fddfd490","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"105.4 KB","destSize":"21.4 KB","compressRate":"20.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f84c39d2-dbc4-41e2-bdbe-18075741b5f1/porsche141-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn74@2020_4/2020/09/05/07-59-27-960_7869c1c35478bcb0.webp","sourceBytes":342929,"destBytes":22768,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1775,"convertSpendMs":26,"createdTime":"2020-09-05 15:59:27","host":"europe64*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"334.9 KB","destSize":"22.2 KB","compressRate":"6.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b9add0a7-888a-4cdb-ad3d-24b0c75743e2/sept-15-record-of-strings-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn35@2020_3/2020/09/05/07-59-28-180_441be02b34450d6e.webp","sourceBytes":147455,"destBytes":47366,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1313,"convertSpendMs":21,"createdTime":"2020-09-05 15:59:27","host":"us-002*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"144 KB","destSize":"46.3 KB","compressRate":"32.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9652bddf-d511-4014-867d-585b4b05e9c0/aug-16-bee-happy-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn94@2020_4/2020/09/05/07-59-28-086_950f8471fb3b88b2.webp","sourceBytes":69866,"destBytes":23740,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1683,"convertSpendMs":15,"createdTime":"2020-09-05 15:59:27","host":"europe68*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"68.2 KB","destSize":"23.2 KB","compressRate":"34%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/56aac196-196b-4313-9b2f-31532fc89aa8/porsche101-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn49@2020_1/2020/09/05/07-59-28-202_69f47d3cbf328ede.webp","sourceBytes":266998,"destBytes":22172,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2207,"convertSpendMs":34,"createdTime":"2020-09-05 15:59:26","host":"europe-22*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"260.7 KB","destSize":"21.7 KB","compressRate":"8.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8575f30f-aebf-436f-b5c0-3a781914ab22/aug-20-remembering-the-freedom-struggle-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn52@2020_1/2020/09/05/07-59-28-455_9f20c424f85977b9.webp","sourceBytes":49781,"destBytes":23140,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1319,"convertSpendMs":19,"createdTime":"2020-09-05 15:59:27","host":"us-018*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48.6 KB","destSize":"22.6 KB","compressRate":"46.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b41cce14-162a-4d37-8a9e-ea75bd6d93bc/lition-application-color-schemes-css-custom-properties.png","sourceStatusCode":200,"destWidth":1477,"destHeight":912,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn84@2020_4/2020/09/05/07-59-27-766_53f46eb7dfdd3136.webp","sourceBytes":522768,"destBytes":173186,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3015,"convertSpendMs":98,"createdTime":"2020-09-05 15:59:26","host":"europe21*","referer":"https://smashingmagazine.com/2020/08/application-color-schemes-css-custom-properties/","linkMd5ListStr":"1d07a3a7ea9e5c230cc1a792c9ee5246","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"510.5 KB","destSize":"169.1 KB","compressRate":"33.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a4eee538-f084-42b5-83e8-4a4d6dbe13ce/select-layer-figma.png","sourceStatusCode":206,"destWidth":1046,"destHeight":776,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn74@2020_6/2020/09/05/07-59-28-523_a50bc64359a253d0.webp","sourceBytes":41600,"destBytes":39688,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1269,"convertSpendMs":54,"createdTime":"2020-09-05 15:59:28","host":"us-023*","referer":"https://smashingmagazine.com/2020/09/figma-developers-guide/","linkMd5ListStr":"f3b6fa9b4a0de46db15a88ca8ddaba3b","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[206],"sourceSize":"40.6 KB","destSize":"38.8 KB","compressRate":"95.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0ec47c78-7fe2-486a-b098-44684d115d4a/issue-11-08-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1400,"destHeight":518,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn77@2020_2/2020/09/05/07-59-28-535_e29bf4d5d3845141.webp","sourceBytes":293665,"destBytes":65652,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1312,"convertSpendMs":40,"createdTime":"2020-09-05 15:59:28","host":"us-011*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"286.8 KB","destSize":"64.1 KB","compressRate":"22.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/460ddf1c-26e7-4e38-8abf-938906782723/porsche144-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn16@2020_4/2020/09/05/07-59-28-419_ce07292025ebb47d.webp","sourceBytes":418152,"destBytes":34760,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1804,"convertSpendMs":30,"createdTime":"2020-09-05 15:59:27","host":"europe-23*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"408.4 KB","destSize":"33.9 KB","compressRate":"8.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3868fae1-3d87-4ed3-8734-a733d0acc8be/morningconsult-metadata.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn95@2020_5/2020/09/05/07-59-28-768_9f63a7c858ba70e3.webp","sourceBytes":138925,"destBytes":39742,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1333,"convertSpendMs":59,"createdTime":"2020-09-05 15:59:28","host":"us-028*","referer":"https://smashingmagazine.com/2020/08/clients-backlinks-design/","linkMd5ListStr":"8be8634c820c7dc900f70d342c72e08a","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"135.7 KB","destSize":"38.8 KB","compressRate":"28.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4954dee-3b1f-44e7-8bac-4aef8bef661b/search-engine-cartoon.png","sourceStatusCode":200,"destWidth":1500,"destHeight":873,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn47@2020_2/2020/09/05/07-59-28-671_cc673c5e15e2cd25.webp","sourceBytes":366054,"destBytes":69920,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1749,"convertSpendMs":49,"createdTime":"2020-09-05 15:59:27","host":"us-030*","referer":"https://smashingmagazine.com/2020/08/smashing-guide-search-engine-optimization/","linkMd5ListStr":"9ab841fbcb7541b22c992e4217b61978","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"357.5 KB","destSize":"68.3 KB","compressRate":"19.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b68c944c-717f-40f9-ae77-ec83a0219dc4/06-dispatched-actions-changes-tracked-in-redux-dev-tools-extensions.png","sourceStatusCode":200,"destWidth":853,"destHeight":501,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn20@2020_6/2020/09/05/07-59-28-471_3a1d9c101e892171.webp","sourceBytes":34974,"destBytes":18182,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1918,"convertSpendMs":16,"createdTime":"2020-09-05 15:59:27","host":"europe61*","referer":"https://smashingmagazine.com/2020/08/redux-real-world-application/","linkMd5ListStr":"cdfbc1833104e26676bb8df00a8b2a3c","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.2 KB","destSize":"17.8 KB","compressRate":"52%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dfb9afb7-164a-4861-a0f2-a134ec193959/blog-comment-system-firebase.png","sourceStatusCode":200,"destWidth":1600,"destHeight":961,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn56@2020_2/2020/09/05/07-59-28-759_9dda7b69c008b4fe.webp","sourceBytes":161963,"destBytes":57630,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1679,"convertSpendMs":65,"createdTime":"2020-09-05 15:59:28","host":"us-006*","referer":"https://smashingmagazine.com/2020/08/comment-system-firebase/","linkMd5ListStr":"d3941734f9d21fb1526a62ff1d7b9b2c","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"158.2 KB","destSize":"56.3 KB","compressRate":"35.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/187b1ebc-e4bb-47ee-b398-553905799863/live-platform.png","sourceStatusCode":200,"destWidth":1822,"destHeight":1057,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn92@2020_2/2020/09/05/07-59-28-718_431332cc0e3dc359.webp","sourceBytes":766408,"destBytes":117660,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1480,"convertSpendMs":93,"createdTime":"2020-09-05 15:59:28","host":"us-51*","referer":"https://smashingmagazine.com/2020/08/smashingconf-live-august-wrapup/","linkMd5ListStr":"a9cb53d45a0e601abe8e7d8fe024bba5","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"748.4 KB","destSize":"114.9 KB","compressRate":"15.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b4e01f3b-c528-4d75-985f-a25bddbc14ce/porsche188-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn99@2020_4/2020/09/05/07-59-28-753_e0a0620bea14c7b4.webp","sourceBytes":487209,"destBytes":96078,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1448,"convertSpendMs":77,"createdTime":"2020-09-05 15:59:28","host":"us-016*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"475.8 KB","destSize":"93.8 KB","compressRate":"19.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dc5c2d25-9cc1-481e-8894-447493084283/11-icons-mobile-apps.png","sourceStatusCode":200,"destWidth":2000,"destHeight":2000,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn32@2020_1/2020/09/05/07-59-28-708_a7b07988d953bb3a.webp","sourceBytes":358272,"destBytes":142330,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2024,"convertSpendMs":566,"createdTime":"2020-09-05 15:59:27","host":"us-014*","referer":"https://smashingmagazine.com/2020/09/icons-mobile-apps/","linkMd5ListStr":"bfb80d7e10b5ce2cc36e767b323e14aa","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"349.9 KB","destSize":"139 KB","compressRate":"39.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3a9b48a1-5f70-48a0-9907-c3ad9794e458/porsche03-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn28@2020_1/2020/09/05/07-59-28-735_1088e63099fc832d.webp","sourceBytes":1566618,"destBytes":98884,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2160,"convertSpendMs":112,"createdTime":"2020-09-05 15:59:27","host":"us-026*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.5 MB","destSize":"96.6 KB","compressRate":"6.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3e86d4fd-8765-4349-bc47-870cb476e60c/porsche48-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn6@2020_6/2020/09/05/07-59-29-049_966447334b676659.webp","sourceBytes":107931,"destBytes":22830,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1424,"convertSpendMs":35,"createdTime":"2020-09-05 15:59:28","host":"us-005*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"105.4 KB","destSize":"22.3 KB","compressRate":"21.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4f3777c7-4dda-41d6-8f9a-8d21adfacc3c/porsche52-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn40@2020_2/2020/09/05/07-59-28-676_ed0175a5a413b764.webp","sourceBytes":212142,"destBytes":24812,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1866,"convertSpendMs":48,"createdTime":"2020-09-05 15:59:27","host":"europe65*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"207.2 KB","destSize":"24.2 KB","compressRate":"11.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b003056-72bf-462f-98cf-ba67c66ec33e/sep-20-national-grandparents-day-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn25@2020_3/2020/09/05/07-59-29-030_dfa9a54a16dd4ce2.webp","sourceBytes":54349,"destBytes":36758,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1235,"convertSpendMs":21,"createdTime":"2020-09-05 15:59:28","host":"us-009*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"53.1 KB","destSize":"35.9 KB","compressRate":"67.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/46ef112a-ca27-4cff-a617-6b89fd1b9954/porsche90-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":510,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn22@2020_4/2020/09/05/07-59-29-209_466bec613a75818d.webp","sourceBytes":65322,"destBytes":10070,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1366,"convertSpendMs":44,"createdTime":"2020-09-05 15:59:28","host":"us-021*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"63.8 KB","destSize":"9.8 KB","compressRate":"15.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2cacc6a2-9f0f-417c-b672-7018539099f9/porsche121-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":599,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn50@2020_6/2020/09/05/07-59-29-244_83d011239ecc442a.webp","sourceBytes":180354,"destBytes":11558,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1215,"convertSpendMs":24,"createdTime":"2020-09-05 15:59:28","host":"us-001*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"176.1 KB","destSize":"11.3 KB","compressRate":"6.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b69371e6-1f3e-4f89-ba9c-d162b1554f5b/design-systems-shop-image-2-opt.png","sourceStatusCode":200,"destWidth":400,"destHeight":580,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn46@2020_4/2020/09/05/07-59-29-141_93af5a839dcf9fe5.webp","sourceBytes":52393,"destBytes":41386,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1261,"convertSpendMs":15,"createdTime":"2020-09-05 15:59:28","host":"us-013*","referer":"https://smashingmagazine.com/2020/08/checklist-cards-release/","linkMd5ListStr":"2954bfe0e134e38e8bb6b7bd231c4f60","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.2 KB","destSize":"40.4 KB","compressRate":"79%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/70754da5-b3e0-4180-8a30-ed54db53ecb5/porsche80-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":554,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn81@2020_1/2020/09/05/07-59-29-015_0d3deafa3e84df9f.webp","sourceBytes":164216,"destBytes":30676,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1810,"convertSpendMs":27,"createdTime":"2020-09-05 15:59:28","host":"europe-24*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"160.4 KB","destSize":"30 KB","compressRate":"18.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/416d0840-b415-4f94-884d-25e2f3c587bf/issue-12-03-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2400,"destHeight":1592,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn63@2020_2/2020/09/05/07-59-28-532_a31b13c2d0aff9de.webp","sourceBytes":4533575,"destBytes":215608,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3964,"convertSpendMs":262,"createdTime":"2020-09-05 15:59:26","host":"europe67*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.3 MB","destSize":"210.6 KB","compressRate":"4.8%"},{"code":1,"isDone":false,"source":"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/6e5520a3-8de2-430b-8d99-f69fc05d21b9.jpg","sourceStatusCode":200,"destWidth":700,"destHeight":447,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn10@2020_4/2020/09/05/07-59-29-000_1901cc8915b5fc92.webp","sourceBytes":51912,"destBytes":32536,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1565,"convertSpendMs":16,"createdTime":"2020-09-05 15:59:28","host":"europe68*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.7 KB","destSize":"31.8 KB","compressRate":"62.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bfc2e239-1878-4a44-80e3-670809c7c076/8-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn86@2020_4/2020/09/05/07-59-29-070_5be9022395b3c9d0.webp","sourceBytes":155579,"destBytes":34758,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1868,"convertSpendMs":70,"createdTime":"2020-09-05 15:59:28","host":"europe62*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"151.9 KB","destSize":"33.9 KB","compressRate":"22.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1b33dcfb-c13b-46f7-9e72-9f4af263519f/14-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn65@2020_3/2020/09/05/07-59-28-962_5ead1c81523e2089.webp","sourceBytes":222715,"destBytes":52518,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1998,"convertSpendMs":91,"createdTime":"2020-09-05 15:59:28","host":"europe-58*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"217.5 KB","destSize":"51.3 KB","compressRate":"23.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fa898595-87e5-4818-8db6-460f6b658ab6/aug-18-purple-haze-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn38@2020_5/2020/09/05/07-59-29-411_73d4c3900bfb0f0a.webp","sourceBytes":177346,"destBytes":41590,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1650,"convertSpendMs":67,"createdTime":"2020-09-05 15:59:28","host":"us-038*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"173.2 KB","destSize":"40.6 KB","compressRate":"23.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6c9bd6c2-4055-481d-85ef-14f53fb73215/11-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn17@2020_5/2020/09/05/07-59-29-441_f21335153c5dbca8.webp","sourceBytes":96426,"destBytes":21662,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1737,"convertSpendMs":149,"createdTime":"2020-09-05 15:59:28","host":"us-033*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"94.2 KB","destSize":"21.2 KB","compressRate":"22.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bc464a52-92e4-4e3d-a224-0c5f9f8626fc/figma-interface.png","sourceStatusCode":200,"destWidth":3024,"destHeight":1978,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn69@2020_3/2020/09/05/07-59-29-139_6d3644dac4402151.webp","sourceBytes":236940,"destBytes":285530,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2292,"convertSpendMs":687,"createdTime":"2020-09-05 15:59:28","host":"us-035*","referer":"https://smashingmagazine.com/2020/09/figma-developers-guide/","linkMd5ListStr":"f3b6fa9b4a0de46db15a88ca8ddaba3b","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"231.4 KB","destSize":"278.8 KB","compressRate":"120.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/057ff96c-1dbc-4b27-bc38-8e09ed6acf4e/admin-demystifying-djangos-magic.png","sourceStatusCode":200,"destWidth":1366,"destHeight":698,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn65@2020_3/2020/09/05/07-59-29-612_f85c6db7f1cd1855.webp","sourceBytes":56166,"destBytes":27050,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1288,"convertSpendMs":84,"createdTime":"2020-09-05 15:59:29","host":"us-017*","referer":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/","linkMd5ListStr":"90725d421e0a2e80cbc6fae6b90f5416","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"54.8 KB","destSize":"26.4 KB","compressRate":"48.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f65c5832-f816-46aa-9f6b-a300aa2301df/porsche15-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn72@2020_4/2020/09/05/07-59-29-663_4c166497a4d21920.webp","sourceBytes":199193,"destBytes":18916,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1301,"convertSpendMs":96,"createdTime":"2020-09-05 15:59:29","host":"us-006*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"194.5 KB","destSize":"18.5 KB","compressRate":"9.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d96ba3c-79d6-4e8d-b78e-d14e554ce906/issue-12-02-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2400,"destHeight":1606,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn33@2020_1/2020/09/05/07-59-28-973_089a38c8b58ab9ed.webp","sourceBytes":4731207,"destBytes":269420,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3770,"convertSpendMs":270,"createdTime":"2020-09-05 15:59:26","host":"europe-56*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.5 MB","destSize":"263.1 KB","compressRate":"5.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/80453f0b-366c-45b7-8c1a-b8171bf9ee51/porsche171-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn83@2020_5/2020/09/05/07-59-29-778_c3e13eb8dad78abd.webp","sourceBytes":98934,"destBytes":12888,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1165,"convertSpendMs":27,"createdTime":"2020-09-05 15:59:29","host":"us-034*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"96.6 KB","destSize":"12.6 KB","compressRate":"13%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/694d5e2a-1f56-484b-9f5d-1ecad2210e4d/3-icons-mobile-apps.png","sourceStatusCode":200,"destWidth":2000,"destHeight":2000,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn58@2020_6/2020/09/05/07-59-29-646_4ea639c4c229dbfe.webp","sourceBytes":601413,"destBytes":170958,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1633,"convertSpendMs":430,"createdTime":"2020-09-05 15:59:29","host":"us-52*","referer":"https://smashingmagazine.com/2020/09/icons-mobile-apps/","linkMd5ListStr":"bfb80d7e10b5ce2cc36e767b323e14aa","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"587.3 KB","destSize":"167 KB","compressRate":"28.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1fff6e5d-5dff-4d5a-8cf7-7839ce7880fd/porsche10-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn87@2020_5/2020/09/05/07-59-30-058_e98e668bf479c847.webp","sourceBytes":100982,"destBytes":11464,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1421,"convertSpendMs":67,"createdTime":"2020-09-05 15:59:29","host":"us-022*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"98.6 KB","destSize":"11.2 KB","compressRate":"11.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0f945876-f286-45d9-bfa1-816c91dc8a02/makeorder-demystifying-djangos-magic.png","sourceStatusCode":200,"destWidth":1366,"destHeight":714,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn6@2020_3/2020/09/05/07-59-30-112_e2651016513df790.webp","sourceBytes":63445,"destBytes":26064,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1265,"convertSpendMs":39,"createdTime":"2020-09-05 15:59:29","host":"us-040*","referer":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/","linkMd5ListStr":"90725d421e0a2e80cbc6fae6b90f5416","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"62 KB","destSize":"25.5 KB","compressRate":"41.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0e6791cf-d9b0-4e7c-809f-564d91681e6d/sep-20-sunset-paradise-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn26@2020_6/2020/09/05/07-59-30-227_3e23577f4b6ea8bb.webp","sourceBytes":73757,"destBytes":13114,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1141,"convertSpendMs":18,"createdTime":"2020-09-05 15:59:29","host":"us-54*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"72 KB","destSize":"12.8 KB","compressRate":"17.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b9d7de40-0241-4714-912c-4f001ab58b94/porsche140-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn9@2020_1/2020/09/05/07-59-30-119_950c5cbf631c3db3.webp","sourceBytes":343477,"destBytes":21230,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1298,"convertSpendMs":30,"createdTime":"2020-09-05 15:59:29","host":"us-027*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"335.4 KB","destSize":"20.7 KB","compressRate":"6.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a86a40a7-5bfa-46f4-83d1-61bfa77a877b/sep-18-batmom-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn38@2020_2/2020/09/05/07-59-30-251_702c48c69963ace1.webp","sourceBytes":13596,"destBytes":7546,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1167,"convertSpendMs":11,"createdTime":"2020-09-05 15:59:29","host":"us-007*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.3 KB","destSize":"7.4 KB","compressRate":"55.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca79f152-0e72-46ed-9e8c-8b67ab6dbc1b/porsche148-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn17@2020_6/2020/09/05/07-59-30-262_1759a19d644740bd.webp","sourceBytes":394326,"destBytes":32450,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1339,"convertSpendMs":32,"createdTime":"2020-09-05 15:59:29","host":"us-003*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"385.1 KB","destSize":"31.7 KB","compressRate":"8.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a9545a2f-42be-4a71-9a94-01a5a9d25d7c/6-figure-client-side-graphql-apollo-client-react-apps.gif","sourceStatusCode":200,"destWidth":600,"destHeight":280,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn98@2020_4/2020/09/05/07-59-29-544_14d641e7fbd62e9d.webp","sourceBytes":284299,"destBytes":127500,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3611,"convertSpendMs":580,"createdTime":"2020-09-05 15:59:27","host":"europe-56*","referer":"https://smashingmagazine.com/2020/07/client-side-graphql-apollo-client-react-apps/","linkMd5ListStr":"2de9e609eb9cf95b580b73d5f31a0743","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"277.6 KB","destSize":"124.5 KB","compressRate":"44.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/01df63a2-5473-473b-a0a3-7e4f84a26b3c/porsche36-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":619,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn34@2020_3/2020/09/05/07-59-29-966_c9e2e9a52921c7d4.webp","sourceBytes":143626,"destBytes":38680,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2374,"convertSpendMs":55,"createdTime":"2020-09-05 15:59:28","host":"europe-60*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"140.3 KB","destSize":"37.8 KB","compressRate":"26.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee6c09a0-911a-4018-888b-a2bce371dc2b/porsche81-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":516,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn30@2020_2/2020/09/05/07-59-30-279_f00850a351cab8fd.webp","sourceBytes":191367,"destBytes":29980,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1306,"convertSpendMs":41,"createdTime":"2020-09-05 15:59:29","host":"us-031*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"186.9 KB","destSize":"29.3 KB","compressRate":"15.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/74d9afbe-faf3-45f2-bbd2-bde664ac407a/porsche127-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":697,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn13@2020_5/2020/09/05/07-59-30-237_79585c8be38b3bfc.webp","sourceBytes":346308,"destBytes":47054,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1494,"convertSpendMs":41,"createdTime":"2020-09-05 15:59:29","host":"us-015*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"338.2 KB","destSize":"46 KB","compressRate":"13.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f82dc671-22cd-4f90-84f0-e02b2f23b75d/aug-20-womens-equality-day-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn79@2020_1/2020/09/05/07-59-30-131_dac56113ad0096ea.webp","sourceBytes":73945,"destBytes":25500,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1740,"convertSpendMs":13,"createdTime":"2020-09-05 15:59:29","host":"europe-57*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"72.2 KB","destSize":"24.9 KB","compressRate":"34.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/df097a7d-3286-4d64-89cf-c101394905af/porsche145-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn14@2020_3/2020/09/05/07-59-30-035_c8261199692a8d1c.webp","sourceBytes":404310,"destBytes":29650,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2543,"convertSpendMs":26,"createdTime":"2020-09-05 15:59:28","host":"europe-56*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"394.8 KB","destSize":"29 KB","compressRate":"7.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5b69c357-771a-428c-92d3-89322ec41af7/chris-coyier-200x200-opt.jpg","sourceStatusCode":200,"destWidth":200,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn2@2020_1/2020/09/05/07-59-30-414_9c382500268bab8d.webp","sourceBytes":6436,"destBytes":4638,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1510,"convertSpendMs":4,"createdTime":"2020-09-05 15:59:29","host":"europe62*","referer":"https://smashingmagazine.com/2020/08/smashing-podcast-episode-22/","linkMd5ListStr":"3e8c255a1b00cf50ca908e0c292a71f6","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.3 KB","destSize":"4.5 KB","compressRate":"72.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a6931dab-f63e-4c70-b2fd-e01cab412a83/issue-12-18-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2880,"destHeight":2048,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn92@2020_4/2020/09/05/07-59-30-176_e18087c49bfb6ebb.webp","sourceBytes":806391,"destBytes":319020,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1780,"convertSpendMs":271,"createdTime":"2020-09-05 15:59:29","host":"us-010*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"787.5 KB","destSize":"311.5 KB","compressRate":"39.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/139afc93-7075-41ee-a11d-1d72c36813c7/issue-12-20-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":1400,"destHeight":635,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn33@2020_3/2020/09/05/07-59-30-291_fdafc4978726272f.webp","sourceBytes":412384,"destBytes":97028,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1429,"convertSpendMs":53,"createdTime":"2020-09-05 15:59:29","host":"us-019*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"402.7 KB","destSize":"94.8 KB","compressRate":"23.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0bdf3e82-a87e-4c1b-a139-f35defaeb48f/porsche153-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn50@2020_4/2020/09/05/07-59-30-421_130870b4c2667b9e.webp","sourceBytes":575392,"destBytes":63886,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1316,"convertSpendMs":51,"createdTime":"2020-09-05 15:59:30","host":"us-035*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"561.9 KB","destSize":"62.4 KB","compressRate":"11.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/943be067-e379-4135-9664-7dd1c85d957f/project-installation-comment-system-firebase.png","sourceStatusCode":200,"destWidth":1600,"destHeight":441,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn69@2020_4/2020/09/05/07-59-30-523_96f6677f675161af.webp","sourceBytes":52352,"destBytes":20544,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1231,"convertSpendMs":25,"createdTime":"2020-09-05 15:59:30","host":"us-040*","referer":"https://smashingmagazine.com/2020/08/comment-system-firebase/","linkMd5ListStr":"d3941734f9d21fb1526a62ff1d7b9b2c","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.1 KB","destSize":"20.1 KB","compressRate":"39.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3024c9ee-85af-4429-be94-e8f8c69e1911/porsche24-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":696,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn53@2020_4/2020/09/05/07-59-30-278_27ab3a7680c1739c.webp","sourceBytes":167443,"destBytes":28572,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2380,"convertSpendMs":65,"createdTime":"2020-09-05 15:59:28","host":"europe64*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"163.5 KB","destSize":"27.9 KB","compressRate":"17.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7c9ec98b-608e-4d3d-9410-b255220718e8/porsche82-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":516,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn81@2020_5/2020/09/05/07-59-30-642_6d86d757b119df9b.webp","sourceBytes":317593,"destBytes":28126,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1248,"convertSpendMs":49,"createdTime":"2020-09-05 15:59:30","host":"us-003*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"310.1 KB","destSize":"27.5 KB","compressRate":"8.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/76f5f008-83b2-4266-9e3f-cfcb196af37a/issue-12-13-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":1400,"destHeight":489,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn74@2020_2/2020/09/05/07-59-30-570_096ee033474f859a.webp","sourceBytes":354070,"destBytes":70868,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1304,"convertSpendMs":41,"createdTime":"2020-09-05 15:59:30","host":"us-027*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"345.8 KB","destSize":"69.2 KB","compressRate":"20%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ac8498ec-bcba-4090-b2cf-8dd8b34d5e02/porsche158-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn97@2020_3/2020/09/05/07-59-30-463_12c1006a19ee4ac4.webp","sourceBytes":284839,"destBytes":30918,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1771,"convertSpendMs":29,"createdTime":"2020-09-05 15:59:29","host":"europe-24*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"278.2 KB","destSize":"30.2 KB","compressRate":"10.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e1fd11cb-7fa1-4bcd-9cd9-60b311640827/porsche118-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":365,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn54@2020_4/2020/09/05/07-59-30-712_2d9107cadd07950c.webp","sourceBytes":150995,"destBytes":13820,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1507,"convertSpendMs":23,"createdTime":"2020-09-05 15:59:30","host":"us-023*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"147.5 KB","destSize":"13.5 KB","compressRate":"9.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41695563-d56c-42b4-a979-c43d432ceaaf/clevertap-article-infographic.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn90@2020_4/2020/09/05/07-59-30-784_56005e73f8e4713d.webp","sourceBytes":226955,"destBytes":50922,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1321,"convertSpendMs":47,"createdTime":"2020-09-05 15:59:30","host":"us-54*","referer":"https://smashingmagazine.com/2020/08/clients-backlinks-design/","linkMd5ListStr":"8be8634c820c7dc900f70d342c72e08a","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"221.6 KB","destSize":"49.7 KB","compressRate":"22.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7c7cade6-6adb-4009-af71-1cf99e5154c0/sep-20-changing-of-the-seasons-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn93@2020_6/2020/09/05/07-59-30-848_617dbe0be0c6e32a.webp","sourceBytes":49523,"destBytes":25648,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1338,"convertSpendMs":17,"createdTime":"2020-09-05 15:59:30","host":"us-031*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48.4 KB","destSize":"25 KB","compressRate":"51.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b6717714-c15e-460d-ab38-bc41da584920/01-guide-product-tours-react-apps.png","sourceStatusCode":200,"destWidth":908,"destHeight":706,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn76@2020_6/2020/09/05/07-59-30-489_2e5471810f87e1b3.webp","sourceBytes":66689,"destBytes":24976,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2318,"convertSpendMs":27,"createdTime":"2020-09-05 15:59:29","host":"europe69*","referer":"https://smashingmagazine.com/2020/08/guide-product-tours-react-apps/","linkMd5ListStr":"8aad86784c6c5de060112293fddfd490","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65.1 KB","destSize":"24.4 KB","compressRate":"37.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/44e9cf35-5865-4186-b71c-96223e4fd949/accessibility-chrome-devtools-lighthouse-passed.png","sourceStatusCode":200,"destWidth":3394,"destHeight":2198,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn61@2020_5/2020/09/05/07-59-30-059_b85b37af0664bd5d.webp","sourceBytes":636195,"destBytes":312898,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3586,"convertSpendMs":1199,"createdTime":"2020-09-05 15:59:28","host":"europe70*","referer":"https://smashingmagazine.com/2020/08/accessibility-chrome-devtools/","linkMd5ListStr":"692062341a74418e56f3a5d4d97a92e4","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"621.3 KB","destSize":"305.6 KB","compressRate":"49.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c85f177-b4bf-4126-a6da-ecc64c30cd81/export-settings-figma.png","sourceStatusCode":200,"destWidth":1714,"destHeight":790,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn2@2020_6/2020/09/05/07-59-30-921_1062453b87d2f878.webp","sourceBytes":94899,"destBytes":70398,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1309,"convertSpendMs":42,"createdTime":"2020-09-05 15:59:30","host":"us-007*","referer":"https://smashingmagazine.com/2020/09/figma-developers-guide/","linkMd5ListStr":"f3b6fa9b4a0de46db15a88ca8ddaba3b","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"92.7 KB","destSize":"68.7 KB","compressRate":"74.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e2c098c0-c56e-4eb7-8148-338b6fe0c7ce/smashing-newsletter-topple-has-news.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn62@2020_2/2020/09/05/07-59-30-898_4bc397a564903077.svg","sourceBytes":25038,"destBytes":25038,"feedId":9306,"totalSpendMs":1735,"convertSpendMs":0,"createdTime":"2020-09-05 15:59:30","host":"europe-24*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.5 KB","destSize":"24.5 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/78fb9ced-1f63-4d58-8874-7ca5919216b7/porsche139-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn45@2020_1/2020/09/05/07-59-30-847_3f5f0d83aa0db0c4.webp","sourceBytes":413478,"destBytes":38490,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2011,"convertSpendMs":32,"createdTime":"2020-09-05 15:59:30","host":"europe-58*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"403.8 KB","destSize":"37.6 KB","compressRate":"9.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/134312b4-6200-4c73-9166-4c1bd84788f0/porsche172-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn18@2020_4/2020/09/05/07-59-31-266_bf8f79842cd8acf4.webp","sourceBytes":129935,"destBytes":16584,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1279,"convertSpendMs":19,"createdTime":"2020-09-05 15:59:30","host":"us-023*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"126.9 KB","destSize":"16.2 KB","compressRate":"12.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/12ec5e63-ffdf-44f1-9235-86ddf9f1f3bb/issue-12-21-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":1400,"destHeight":185,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn41@2020_2/2020/09/05/07-59-31-043_60ffbc84408a2d31.webp","sourceBytes":112992,"destBytes":26496,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2143,"convertSpendMs":16,"createdTime":"2020-09-05 15:59:30","host":"europe70*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"110.3 KB","destSize":"25.9 KB","compressRate":"23.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/858d60fe-4fe2-4b0f-b39d-007a6f79022b/3-dashboard-component-with-additional-cards.png","sourceStatusCode":200,"destWidth":2300,"destHeight":1710,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn14@2020_6/2020/09/05/07-59-31-358_095ea2c7939787c7.webp","sourceBytes":113868,"destBytes":28826,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1465,"convertSpendMs":258,"createdTime":"2020-09-05 15:59:30","host":"us-035*","referer":"https://smashingmagazine.com/2020/07/responsive-dashboard-angular-material-ng2-charts-schematics/","linkMd5ListStr":"49147f5e0fdeef5d08e1f0588727e911","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"111.2 KB","destSize":"28.2 KB","compressRate":"25.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/22c4ab69-089f-4c2c-bf69-4dde17256865/show-tables-shell-api-flask-google-cloud-sql-app-engine-large.png","sourceStatusCode":200,"destWidth":800,"destHeight":243,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn40@2020_5/2020/09/05/07-59-31-479_48fabae6bc5344c1.webp","sourceBytes":24541,"destBytes":9088,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1144,"convertSpendMs":14,"createdTime":"2020-09-05 15:59:31","host":"us-028*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24 KB","destSize":"8.9 KB","compressRate":"37%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4053dbb-7cee-4c57-becf-c292b2f0dbc3/tispr-palette-application-color-schemes-css-custom-properties.png","sourceStatusCode":200,"destWidth":1904,"destHeight":1574,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn29@2020_2/2020/09/05/07-59-30-443_8cae0c4c44d77dcd.webp","sourceBytes":554635,"destBytes":431172,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3444,"convertSpendMs":211,"createdTime":"2020-09-05 15:59:28","host":"europe-22*","referer":"https://smashingmagazine.com/2020/08/application-color-schemes-css-custom-properties/","linkMd5ListStr":"1d07a3a7ea9e5c230cc1a792c9ee5246","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"541.6 KB","destSize":"421.1 KB","compressRate":"77.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/754e9262-0840-4f72-89eb-06af10fe4e4c/porsche62-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn22@2020_4/2020/09/05/07-59-31-311_cb6d5d4e2b7d0677.webp","sourceBytes":206294,"destBytes":26056,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2607,"convertSpendMs":117,"createdTime":"2020-09-05 15:59:29","host":"europe66*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"201.5 KB","destSize":"25.4 KB","compressRate":"12.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d7d445fc-c88c-44b2-bacc-4372768b2e75/porsche74-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":700,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn68@2020_1/2020/09/05/07-59-31-727_a90942fd8178331b.webp","sourceBytes":199652,"destBytes":26532,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1285,"convertSpendMs":64,"createdTime":"2020-09-05 15:59:31","host":"us-008*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"195 KB","destSize":"25.9 KB","compressRate":"13.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8198adbe-010c-4c28-a78a-0111ebe61ff0/2-building-react-apps-storybook.png","sourceStatusCode":200,"destWidth":1366,"destHeight":738,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn52@2020_4/2020/09/05/07-59-31-528_7e5fa3e1634a0a9f.webp","sourceBytes":38413,"destBytes":18080,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1286,"convertSpendMs":36,"createdTime":"2020-09-05 15:59:31","host":"europe67*","referer":"https://smashingmagazine.com/2020/09/building-react-apps-storybook/","linkMd5ListStr":"a4dec1fe83c49a7924bf09761305d38c","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.5 KB","destSize":"17.7 KB","compressRate":"47.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4f54cdfd-7bfd-44e5-92b4-d19a9313414e/postman-response-2-api-flask-google-cloud-sql-app-engine.png","sourceStatusCode":200,"destWidth":2056,"destHeight":1512,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn47@2020_1/2020/09/05/07-59-31-642_a0234b38cc2f1705.webp","sourceBytes":236678,"destBytes":71514,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1455,"convertSpendMs":122,"createdTime":"2020-09-05 15:59:31","host":"us-004*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"231.1 KB","destSize":"69.8 KB","compressRate":"30.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5b96c1e5-9636-4b59-a678-dece2241b909/test-mode-firestore-comment-system-firebase.png","sourceStatusCode":200,"destWidth":1600,"destHeight":836,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn36@2020_1/2020/09/05/07-59-31-561_6a698c47c5d2d5a5.webp","sourceBytes":369685,"destBytes":77928,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1505,"convertSpendMs":61,"createdTime":"2020-09-05 15:59:31","host":"us-51*","referer":"https://smashingmagazine.com/2020/08/comment-system-firebase/","linkMd5ListStr":"d3941734f9d21fb1526a62ff1d7b9b2c","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"361 KB","destSize":"76.1 KB","compressRate":"21.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b3a454dd-c463-4d58-80f6-d5c2d163d43c/issue-12-08-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":1400,"destHeight":513,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn59@2020_2/2020/09/05/07-59-31-656_75b28fe7b9d61581.webp","sourceBytes":378010,"destBytes":85486,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1400,"convertSpendMs":42,"createdTime":"2020-09-05 15:59:31","host":"us-032*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"369.2 KB","destSize":"83.5 KB","compressRate":"22.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4b91b2d2-fc60-43b6-b0d4-3d4dbda6cf25/porsche49-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":900,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn9@2020_1/2020/09/05/07-59-31-439_587a81b6084a2d14.webp","sourceBytes":210235,"destBytes":54056,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1992,"convertSpendMs":58,"createdTime":"2020-09-05 15:59:30","host":"europe-58*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"205.3 KB","destSize":"52.8 KB","compressRate":"25.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/51dbd948-5dba-4cab-bb86-2275e1d35900/porsche58-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn2@2020_1/2020/09/05/07-59-31-941_715f14bf6c7c0534.webp","sourceBytes":154301,"destBytes":6306,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1176,"convertSpendMs":20,"createdTime":"2020-09-05 15:59:31","host":"us-52*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"150.7 KB","destSize":"6.2 KB","compressRate":"4.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c1dda88d-056e-4fdf-9827-76237a824556/vitaly-friedman.jpg","sourceStatusCode":200,"destWidth":400,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn27@2020_1/2020/09/05/07-59-31-788_18dfb889159c02ec.webp","sourceBytes":11187,"destBytes":9420,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1610,"convertSpendMs":14,"createdTime":"2020-09-05 15:59:31","host":"europe-25*","referer":"https://smashingmagazine.com/2020/08/checklist-cards-release/","linkMd5ListStr":"2954bfe0e134e38e8bb6b7bd231c4f60","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.9 KB","destSize":"9.2 KB","compressRate":"84.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4c78f5b2-476d-4830-b787-d40aac2ecd06/porsche159-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn85@2020_2/2020/09/05/07-59-31-813_6a49d32d2cfd190d.webp","sourceBytes":523891,"destBytes":66424,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1396,"convertSpendMs":47,"createdTime":"2020-09-05 15:59:31","host":"us-025*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"511.6 KB","destSize":"64.9 KB","compressRate":"12.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/96716a79-6f45-440e-9bc0-75fb2ce315fb/5-icons-mobile-apps.png","sourceStatusCode":200,"destWidth":2000,"destHeight":2000,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn23@2020_6/2020/09/05/07-59-31-720_4680e162505dfe3a.webp","sourceBytes":550212,"destBytes":174336,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1786,"convertSpendMs":598,"createdTime":"2020-09-05 15:59:31","host":"us-012*","referer":"https://smashingmagazine.com/2020/09/icons-mobile-apps/","linkMd5ListStr":"bfb80d7e10b5ce2cc36e767b323e14aa","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"537.3 KB","destSize":"170.2 KB","compressRate":"31.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/08f72eac-b64e-4bc2-b579-fc49db1f125d/porsche98-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn66@2020_1/2020/09/05/07-59-31-685_bfc7c2919a159a0d.webp","sourceBytes":292446,"destBytes":22148,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2537,"convertSpendMs":48,"createdTime":"2020-09-05 15:59:30","host":"europe62*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"285.6 KB","destSize":"21.6 KB","compressRate":"7.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e0814bac-bee6-41a1-a311-7ade9500cd3c/online-freiburg-smashingconf-fr-small.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn31@2020_1/2020/09/05/07-59-31-794_de6fd9e42ae4415a.svg","sourceBytes":13867,"destBytes":13867,"feedId":9306,"totalSpendMs":1644,"convertSpendMs":0,"createdTime":"2020-09-05 15:59:31","host":"europe63*","referer":"https://smashingmagazine.com/2020/08/smashingconf-live-august-wrapup/","linkMd5ListStr":"a9cb53d45a0e601abe8e7d8fe024bba5","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.5 KB","destSize":"13.5 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/03294e04-2132-4699-8314-042cd589af25/providence-athenaeum-book-smell.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn64@2020_2/2020/09/05/07-59-31-769_87152692d1cdc7f3.webp","sourceBytes":2286867,"destBytes":215330,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1573,"convertSpendMs":105,"createdTime":"2020-09-05 15:59:31","host":"us-020*","referer":"https://smashingmagazine.com/2020/08/design-website-five-senses/","linkMd5ListStr":"90139c1573575fffdbeaa42a49e64624","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.2 MB","destSize":"210.3 KB","compressRate":"9.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4355bb58-f9c4-4b2e-a86b-e9c3989055a4/porsche161-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":750,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn5@2020_2/2020/09/05/07-59-32-006_1c962f500a67d2dd.webp","sourceBytes":527248,"destBytes":55760,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1346,"convertSpendMs":63,"createdTime":"2020-09-05 15:59:31","host":"us-029*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"514.9 KB","destSize":"54.5 KB","compressRate":"10.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/939d16b0-b5d5-4b1c-b77a-0e9a1bfb4c48/issue-11-03-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1400,"destHeight":1044,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn90@2020_5/2020/09/05/07-59-31-911_301ded403a56f7fe.webp","sourceBytes":1857387,"destBytes":173064,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1506,"convertSpendMs":107,"createdTime":"2020-09-05 15:59:31","host":"us-013*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.8 MB","destSize":"169 KB","compressRate":"9.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/eb4c5a62-77cf-4322-9255-f259bd1bbe7a/2-using-mobx-state-manager-react-native-applications.png","sourceStatusCode":200,"destWidth":761,"destHeight":100,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn30@2020_1/2020/09/05/07-59-32-168_97f816062f891c41.webp","sourceBytes":13172,"destBytes":11660,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1147,"convertSpendMs":11,"createdTime":"2020-09-05 15:59:31","host":"us-021*","referer":"https://smashingmagazine.com/2020/08/mobx-state-manager-react-native-applications/","linkMd5ListStr":"b7e12972db0bd44e3f243eb7c65c92c5","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12.9 KB","destSize":"11.4 KB","compressRate":"88.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5e324f7d-e2bf-4f45-94d3-3a818b6681df/10-icons-mobile-apps.png","sourceStatusCode":200,"destWidth":1132,"destHeight":399,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn13@2020_4/2020/09/05/07-59-32-136_479fcf299d0fa700.webp","sourceBytes":55599,"destBytes":17036,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1284,"convertSpendMs":19,"createdTime":"2020-09-05 15:59:31","host":"us-005*","referer":"https://smashingmagazine.com/2020/09/icons-mobile-apps/","linkMd5ListStr":"bfb80d7e10b5ce2cc36e767b323e14aa","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"54.3 KB","destSize":"16.6 KB","compressRate":"30.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/10e1bd08-e371-401a-9c51-6bce73a5d12a/porsche96-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":350,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn34@2020_2/2020/09/05/07-59-32-220_185c0faf43aa6557.webp","sourceBytes":71977,"destBytes":17364,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1202,"convertSpendMs":14,"createdTime":"2020-09-05 15:59:31","host":"us-009*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"70.3 KB","destSize":"17 KB","compressRate":"24.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d13ccc94-5045-4bde-8751-69373ab8d652/issue-12-27-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2880,"destHeight":2048,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn44@2020_3/2020/09/05/07-59-31-816_1c814edec6334571.webp","sourceBytes":516861,"destBytes":132572,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1897,"convertSpendMs":293,"createdTime":"2020-09-05 15:59:31","host":"us-016*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"504.7 KB","destSize":"129.5 KB","compressRate":"25.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c54cf046-3ab1-4a09-a7d9-9ca006bd014e/porsche131-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn55@2020_4/2020/09/05/07-59-32-408_f55b428b749d632e.webp","sourceBytes":21981,"destBytes":10072,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":884,"convertSpendMs":19,"createdTime":"2020-09-05 15:59:32","host":"us-012*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.5 KB","destSize":"9.8 KB","compressRate":"45.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/522354cd-0944-4f35-8168-8518e6529635/lmnt-screenshot-tips-create-customer-centric-landing-pages.png","sourceStatusCode":200,"destWidth":1999,"destHeight":1002,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn80@2020_1/2020/09/05/07-59-32-266_1e88327942211d0d.webp","sourceBytes":844798,"destBytes":83704,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1924,"convertSpendMs":107,"createdTime":"2020-09-05 15:59:31","host":"us-037*","referer":"https://smashingmagazine.com/2020/08/tips-customer-centric-landing-pages/","linkMd5ListStr":"0ae5a604742fc5fdb0e1c7bcacfa3b97","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"825 KB","destSize":"81.7 KB","compressRate":"9.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/111460d7-3456-4374-84cb-b979a33d35e6/issue-11-12-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1400,"destHeight":935,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn45@2020_1/2020/09/05/07-59-32-364_19ff974727ea4ea4.webp","sourceBytes":633157,"destBytes":138634,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1183,"convertSpendMs":92,"createdTime":"2020-09-05 15:59:32","host":"us-038*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"618.3 KB","destSize":"135.4 KB","compressRate":"21.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c041af60-1482-42fc-ba6f-71e8cc9cb31d/porsche165-5-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":686,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn76@2020_3/2020/09/05/07-59-32-178_fba4042eeb638e18.webp","sourceBytes":543476,"destBytes":40048,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1932,"convertSpendMs":47,"createdTime":"2020-09-05 15:59:31","host":"europe-59*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"530.7 KB","destSize":"39.1 KB","compressRate":"7.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/96aa9326-5107-4c95-8546-9023ec54dc8f/sep-20-september-vibes-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn54@2020_5/2020/09/05/07-59-32-596_d172c546e6bff1dd.webp","sourceBytes":72470,"destBytes":24364,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1209,"convertSpendMs":14,"createdTime":"2020-09-05 15:59:32","host":"us-013*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"70.8 KB","destSize":"23.8 KB","compressRate":"33.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7e58b37e-263d-42cd-8db2-357062753a59/bodhi-spa-salt-pool.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn86@2020_1/2020/09/05/07-59-32-333_e997850580ec8012.webp","sourceBytes":1348217,"destBytes":60654,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3008,"convertSpendMs":91,"createdTime":"2020-09-05 15:59:30","host":"europe66*","referer":"https://smashingmagazine.com/2020/08/design-website-five-senses/","linkMd5ListStr":"90139c1573575fffdbeaa42a49e64624","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.3 MB","destSize":"59.2 KB","compressRate":"4.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/35f0a643-816f-4949-bf51-6d886e9b19d0/google-hangouts-main-navigation.png","sourceStatusCode":200,"destWidth":645,"destHeight":304,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn97@2020_5/2020/09/05/07-59-32-564_23bce8d742c8b60f.webp","sourceBytes":129319,"destBytes":8466,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2006,"convertSpendMs":16,"createdTime":"2020-09-05 15:59:31","host":"europe64*","referer":"https://smashingmagazine.com/2020/08/lessons-web-app-designers-learn-google/","linkMd5ListStr":"90050a70ad8778f8abad9e0a4b74cfcb","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"126.3 KB","destSize":"8.3 KB","compressRate":"6.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/90056e86-2fba-4ce6-9af8-8ef9e88aa186/pdf-checklists-smart-interface-design-patterns.png","sourceStatusCode":200,"destWidth":1200,"destHeight":500,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn58@2020_4/2020/09/05/07-59-32-727_da945d147b72d8f1.webp","sourceBytes":329303,"destBytes":68666,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1341,"convertSpendMs":55,"createdTime":"2020-09-05 15:59:32","host":"us-001*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"321.6 KB","destSize":"67.1 KB","compressRate":"20.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5d248af5-ee98-4b68-b70d-5ed2561af575/porsche20-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn50@2020_4/2020/09/05/07-59-32-664_89a67da7c122482e.webp","sourceBytes":320422,"destBytes":54226,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1458,"convertSpendMs":115,"createdTime":"2020-09-05 15:59:32","host":"us-025*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"312.9 KB","destSize":"53 KB","compressRate":"16.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1982330a-e38e-4e30-a0ef-46ee8f8eebd5/porsche84-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":326,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn21@2020_3/2020/09/05/07-59-32-534_07613f4fa3ae4692.webp","sourceBytes":93611,"destBytes":24100,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1810,"convertSpendMs":19,"createdTime":"2020-09-05 15:59:31","host":"europe-56*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"91.4 KB","destSize":"23.5 KB","compressRate":"25.7%"},{"code":1,"isDone":false,"source":"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/76871246-0610-4b56-bdcc-408fe7522b5b.png","sourceStatusCode":200,"destWidth":700,"destHeight":398,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn4@2020_5/2020/09/05/07-59-32-893_f6b9e709a333b64d.webp","sourceBytes":140566,"destBytes":26714,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":976,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:32","host":"us-012*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"137.3 KB","destSize":"26.1 KB","compressRate":"19%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f61eb739-36a5-4ede-afd6-5ca93f4d0000/porsche83-sketch-tutorial-part-2.png","sourceStatusCode":206,"destWidth":1920,"destHeight":516,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn18@2020_4/2020/09/05/07-59-32-555_78e3afefa726da02.webp","sourceBytes":351600,"destBytes":50596,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1955,"convertSpendMs":50,"createdTime":"2020-09-05 15:59:31","host":"europe68*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[206],"sourceSize":"343.4 KB","destSize":"49.4 KB","compressRate":"14.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/29016ec4-b16c-417b-af7f-4043844b0d6b/9-icons-mobile-apps.png","sourceStatusCode":200,"destWidth":2000,"destHeight":2000,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn9@2020_4/2020/09/05/07-59-32-806_a1d6ceb289f52276.webp","sourceBytes":403453,"destBytes":129446,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2151,"convertSpendMs":954,"createdTime":"2020-09-05 15:59:31","host":"us-017*","referer":"https://smashingmagazine.com/2020/09/icons-mobile-apps/","linkMd5ListStr":"bfb80d7e10b5ce2cc36e767b323e14aa","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"394 KB","destSize":"126.4 KB","compressRate":"32.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1d5e40ef-6bc6-4894-9d38-8d862f4e1e34/smashingconf-online-sf-small.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn73@2020_4/2020/09/05/07-59-32-962_93356a701556af3a.svg","sourceBytes":20553,"destBytes":20553,"feedId":9306,"totalSpendMs":1250,"convertSpendMs":0,"createdTime":"2020-09-05 15:59:32","host":"us-031*","referer":"https://smashingmagazine.com/2020/08/smashingconf-live-august-wrapup/","linkMd5ListStr":"a9cb53d45a0e601abe8e7d8fe024bba5","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.1 KB","destSize":"20.1 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3d614e7f-6e6d-4521-865a-0027be4f8c99/porsche181-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":232,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn77@2020_3/2020/09/05/07-59-33-009_01796ed6cc433312.webp","sourceBytes":29065,"destBytes":19448,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1251,"convertSpendMs":21,"createdTime":"2020-09-05 15:59:32","host":"us-019*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.4 KB","destSize":"19 KB","compressRate":"66.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/22b14d1a-9d5b-4215-8b3b-275d0beb148e/figure-08-client-side-graphql-apollo-client-react-apps.gif","sourceStatusCode":200,"destWidth":600,"destHeight":259,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn97@2020_4/2020/09/05/07-59-32-627_23a5d67e19e36046.webp","sourceBytes":1166982,"destBytes":329910,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3487,"convertSpendMs":1781,"createdTime":"2020-09-05 15:59:30","host":"us-019*","referer":"https://smashingmagazine.com/2020/07/client-side-graphql-apollo-client-react-apps/","linkMd5ListStr":"2de9e609eb9cf95b580b73d5f31a0743","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.1 MB","destSize":"322.2 KB","compressRate":"28.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9f7e5117-1377-4b3a-9140-c89c78fa2cce/aug-17-i-love-summer-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn16@2020_5/2020/09/05/07-59-33-182_8bced4e421c2bf0f.webp","sourceBytes":16421,"destBytes":12206,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1128,"convertSpendMs":12,"createdTime":"2020-09-05 15:59:32","host":"us-51*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16 KB","destSize":"11.9 KB","compressRate":"74.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/15482314-4ebc-4416-b6d9-84a0214b7e7f/porsche128-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":396,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn37@2020_5/2020/09/05/07-59-32-791_b81d730c640e6638.webp","sourceBytes":132904,"destBytes":23900,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1826,"convertSpendMs":32,"createdTime":"2020-09-05 15:59:32","host":"europe-22*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"129.8 KB","destSize":"23.3 KB","compressRate":"18%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7972db9e-971d-40b2-9e41-2dbc4a5105df/02-top-post-page.png","sourceStatusCode":200,"destWidth":2378,"destHeight":1018,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn25@2020_6/2020/09/05/07-59-32-955_29111a62b40af441.webp","sourceBytes":94975,"destBytes":32564,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2022,"convertSpendMs":149,"createdTime":"2020-09-05 15:59:31","host":"us-033*","referer":"https://smashingmagazine.com/2020/08/vue-router-features/","linkMd5ListStr":"5155f9648fe66b7e6f7f7224ebbda820","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"92.7 KB","destSize":"31.8 KB","compressRate":"34.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/92947151-f2f2-4678-8b3c-77491804f473/porsche183-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":341,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn96@2020_1/2020/09/05/07-59-33-135_cdb532073839c05b.webp","sourceBytes":144664,"destBytes":39212,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1255,"convertSpendMs":27,"createdTime":"2020-09-05 15:59:32","host":"us-037*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"141.3 KB","destSize":"38.3 KB","compressRate":"27.1%"},{"code":1,"isDone":false,"source":"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/9bc037a8-698f-47f7-a7c8-020242726535.png","sourceStatusCode":200,"destWidth":700,"destHeight":414,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn48@2020_5/2020/09/05/07-59-33-185_09424b50aa3a2b68.webp","sourceBytes":29287,"destBytes":16314,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":968,"convertSpendMs":11,"createdTime":"2020-09-05 15:59:33","host":"us-008*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.6 KB","destSize":"15.9 KB","compressRate":"55.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b110ab4-c666-472a-a042-9f4aeeb1ab0d/porsche187-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":423,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn20@2020_3/2020/09/05/07-59-33-238_99799445e3d7348f.webp","sourceBytes":158276,"destBytes":26272,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1264,"convertSpendMs":34,"createdTime":"2020-09-05 15:59:32","host":"us-028*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"154.6 KB","destSize":"25.7 KB","compressRate":"16.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/063a4696-1b9a-4cbb-8915-19024c627968/animation-tab-figma.png","sourceStatusCode":200,"destWidth":1786,"destHeight":1069,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn70@2020_2/2020/09/05/07-59-33-059_d288e727a30b9cae.webp","sourceBytes":168092,"destBytes":134820,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1532,"convertSpendMs":90,"createdTime":"2020-09-05 15:59:32","host":"us-54*","referer":"https://smashingmagazine.com/2020/09/figma-developers-guide/","linkMd5ListStr":"f3b6fa9b4a0de46db15a88ca8ddaba3b","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"164.2 KB","destSize":"131.7 KB","compressRate":"80.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a671d077-2dd0-4940-9c7d-421a54bf7c58/porsche41-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn41@2020_3/2020/09/05/07-59-32-956_67c35b4575cb3aab.webp","sourceBytes":166187,"destBytes":16708,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1841,"convertSpendMs":29,"createdTime":"2020-09-05 15:59:32","host":"europe-60*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"162.3 KB","destSize":"16.3 KB","compressRate":"10.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/31bd5c75-4696-41c9-b736-1fe23888ae3e/figure-02-client-side-graphql-apollo-client-react-apps.png","sourceStatusCode":200,"destWidth":1359,"destHeight":611,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn100@2020_4/2020/09/05/07-59-33-281_cd20646e0c48f2cc.webp","sourceBytes":18677,"destBytes":8620,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1412,"convertSpendMs":142,"createdTime":"2020-09-05 15:59:32","host":"us-024*","referer":"https://smashingmagazine.com/2020/07/client-side-graphql-apollo-client-react-apps/","linkMd5ListStr":"2de9e609eb9cf95b580b73d5f31a0743","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.2 KB","destSize":"8.4 KB","compressRate":"46.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0ea5d3fb-f38a-42f8-9169-ff9cf53f9211/1-renaissance-no-code-web-designers.png","sourceStatusCode":200,"destWidth":1833,"destHeight":811,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn82@2020_1/2020/09/05/07-59-33-179_fe07d3e03b62a7c5.webp","sourceBytes":1968432,"destBytes":111934,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1573,"convertSpendMs":150,"createdTime":"2020-09-05 15:59:32","host":"us-007*","referer":"https://smashingmagazine.com/2020/07/renaissance-no-code-web-designers/","linkMd5ListStr":"5dc2ee4cf02a8d13b4ca79f601851ab2","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.9 MB","destSize":"109.3 KB","compressRate":"5.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3322fdb3-7ed4-4c6d-8935-62a9653af97e/porsche91-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":550,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn39@2020_6/2020/09/05/07-59-33-383_8bbcf79e6a3f6a7d.webp","sourceBytes":75838,"destBytes":14290,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1203,"convertSpendMs":20,"createdTime":"2020-09-05 15:59:33","host":"us-032*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"74.1 KB","destSize":"14 KB","compressRate":"18.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/155863d5-4da0-4ad4-b10e-982a7f0b1bc7/porsche78-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":223,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn43@2020_4/2020/09/05/07-59-33-439_8dd9956984768c09.webp","sourceBytes":60601,"destBytes":11726,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1142,"convertSpendMs":11,"createdTime":"2020-09-05 15:59:33","host":"us-020*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.2 KB","destSize":"11.5 KB","compressRate":"19.3%"},{"code":1,"isDone":false,"source":"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/7d187eb5-f747-43c9-b1dd-ed60e936f3c1.png","sourceStatusCode":200,"destWidth":700,"destHeight":356,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn74@2020_6/2020/09/05/07-59-33-562_2c1df665bcfe4221.webp","sourceBytes":37976,"destBytes":10018,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":901,"convertSpendMs":12,"createdTime":"2020-09-05 15:59:33","host":"us-001*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.1 KB","destSize":"9.8 KB","compressRate":"26.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/41f3f797-3f25-46ef-b3f6-60864958917d/01-standard-login-form-ios.png","sourceStatusCode":200,"destWidth":990,"destHeight":763,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn86@2020_3/2020/09/05/07-59-33-440_e690978bdeb2a9a7.webp","sourceBytes":181190,"destBytes":6074,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1575,"convertSpendMs":28,"createdTime":"2020-09-05 15:59:32","host":"europe70*","referer":"https://smashingmagazine.com/2020/08/forms-validation-ionic-react/","linkMd5ListStr":"fa41336deda35415b1959d255ba9a56c","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"176.9 KB","destSize":"5.9 KB","compressRate":"3.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6fef2757-1b09-4f18-9183-18dfdb59a102/porsche146-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn27@2020_2/2020/09/05/07-59-33-492_a6b9b63ec9beb040.webp","sourceBytes":409205,"destBytes":32002,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1435,"convertSpendMs":104,"createdTime":"2020-09-05 15:59:32","host":"us-004*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"399.6 KB","destSize":"31.3 KB","compressRate":"7.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f48c0f6c-bc7f-44b3-aa19-b70cc7edf4f3/porsche17-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn36@2020_3/2020/09/05/07-59-33-649_edaa9ab6549cd5c9.webp","sourceBytes":162335,"destBytes":13914,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1497,"convertSpendMs":57,"createdTime":"2020-09-05 15:59:32","host":"us-55*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"158.5 KB","destSize":"13.6 KB","compressRate":"8.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5f959552-5f42-483c-a261-ed12f9eb74aa/point-type-disconnected-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":800,"destHeight":250,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn63@2020_4/2020/09/05/07-59-33-763_9067d66967fe32e3.webp","sourceBytes":19423,"destBytes":5604,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1202,"convertSpendMs":34,"createdTime":"2020-09-05 15:59:33","host":"us-024*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19 KB","destSize":"5.5 KB","compressRate":"28.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/098a0243-2a47-4e24-89e0-c5cc7e3f5771/porsche21b-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn23@2020_6/2020/09/05/07-59-33-614_de4a1dcfabf1f660.webp","sourceBytes":274395,"destBytes":46210,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1699,"convertSpendMs":68,"createdTime":"2020-09-05 15:59:32","host":"us-016*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"268 KB","destSize":"45.1 KB","compressRate":"16.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/af583674-7928-4f6b-a9d2-fd5251c156af/issue-12-05-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2400,"destHeight":1604,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn5@2020_3/2020/09/05/07-59-32-974_81ff9c1193c594c3.webp","sourceBytes":3322180,"destBytes":216338,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3923,"convertSpendMs":361,"createdTime":"2020-09-05 15:59:30","host":"europe70*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.2 MB","destSize":"211.3 KB","compressRate":"6.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d7b4bf85-3b35-471f-9dc1-457051154eb1/accessibility-chrome-devtools-lighthouse-learn-more.png","sourceStatusCode":200,"destWidth":2868,"destHeight":734,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn59@2020_6/2020/09/05/07-59-33-717_450edc26cff084e1.webp","sourceBytes":110485,"destBytes":69816,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1370,"convertSpendMs":97,"createdTime":"2020-09-05 15:59:33","host":"us-037*","referer":"https://smashingmagazine.com/2020/08/accessibility-chrome-devtools/","linkMd5ListStr":"692062341a74418e56f3a5d4d97a92e4","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"107.9 KB","destSize":"68.2 KB","compressRate":"63.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/23128a7b-3eef-4b35-b583-d907fdf8d738/porsche56-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn63@2020_1/2020/09/05/07-59-33-557_db3e46daa8bc94d7.webp","sourceBytes":141941,"destBytes":25418,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2193,"convertSpendMs":23,"createdTime":"2020-09-05 15:59:32","host":"europe65*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"138.6 KB","destSize":"24.8 KB","compressRate":"17.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/45f161a9-2aca-4999-9981-5bd6a335a688/admin-1-demystifying-djangos-magic.png","sourceStatusCode":200,"destWidth":1366,"destHeight":653,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn68@2020_2/2020/09/05/07-59-33-825_774625e20b96a45f.webp","sourceBytes":62528,"destBytes":26498,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1308,"convertSpendMs":59,"createdTime":"2020-09-05 15:59:33","host":"us-012*","referer":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/","linkMd5ListStr":"90725d421e0a2e80cbc6fae6b90f5416","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"61.1 KB","destSize":"25.9 KB","compressRate":"42.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d722ceb8-4798-4d37-80ee-7b37917beeeb/porsche173-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn81@2020_4/2020/09/05/07-59-33-922_f8b2b3be3032c5e4.webp","sourceBytes":226248,"destBytes":22734,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1251,"convertSpendMs":21,"createdTime":"2020-09-05 15:59:33","host":"us-52*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"220.9 KB","destSize":"22.2 KB","compressRate":"10%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7504b111-74b8-4bc6-9926-e9ab58b34fc8/sep-20-never-stop-exploring-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn86@2020_6/2020/09/05/07-59-33-978_175ae084ae140669.webp","sourceBytes":26560,"destBytes":18052,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1259,"convertSpendMs":37,"createdTime":"2020-09-05 15:59:33","host":"us-029*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25.9 KB","destSize":"17.6 KB","compressRate":"68%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0ca00db5-71c3-49f5-a339-2e56a17dbbbf/porsche178-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":342,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn11@2020_1/2020/09/05/07-59-33-607_94c8f554272afa04.webp","sourceBytes":251384,"destBytes":54258,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1923,"convertSpendMs":27,"createdTime":"2020-09-05 15:59:32","host":"europe63*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"245.5 KB","destSize":"53 KB","compressRate":"21.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/25ce2966-6db7-4c16-9b0b-2580778c2bda/porsche57-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn93@2020_6/2020/09/05/07-59-34-030_7cf00fd93a894590.webp","sourceBytes":191092,"destBytes":17558,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1226,"convertSpendMs":30,"createdTime":"2020-09-05 15:59:33","host":"us-005*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"186.6 KB","destSize":"17.1 KB","compressRate":"9.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b63e10f6-d62e-46a4-8fb1-9b74e30a6c4f/porsche164-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":750,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn25@2020_4/2020/09/05/07-59-34-105_eed9b9f316792335.webp","sourceBytes":534697,"destBytes":54592,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1068,"convertSpendMs":39,"createdTime":"2020-09-05 15:59:33","host":"us-038*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"522.2 KB","destSize":"53.3 KB","compressRate":"10.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf0ec3fd-e3b2-4591-8345-a8f1a98bfb8f/porsche86-sketch-tutorial-part-2.png","sourceStatusCode":206,"destWidth":800,"destHeight":554,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn52@2020_5/2020/09/05/07-59-33-962_6776a5733c1ad3ae.webp","sourceBytes":100575,"destBytes":23036,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1719,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:33","host":"europe21*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[206],"sourceSize":"98.2 KB","destSize":"22.5 KB","compressRate":"22.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5dd5cb21-9f92-44e1-be76-455bda57200f/porsche119-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":435,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn10@2020_3/2020/09/05/07-59-34-250_dfa70394fcbc65c6.webp","sourceBytes":147194,"destBytes":22988,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1249,"convertSpendMs":45,"createdTime":"2020-09-05 15:59:33","host":"us-021*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"143.7 KB","destSize":"22.4 KB","compressRate":"15.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/552aea44-8886-49c7-b14a-e08f11e7ae07/aug-20-were-all-the-same-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn30@2020_6/2020/09/05/07-59-34-362_f2f183674d5845a1.webp","sourceBytes":105268,"destBytes":47754,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1306,"convertSpendMs":48,"createdTime":"2020-09-05 15:59:33","host":"us-025*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"102.8 KB","destSize":"46.6 KB","compressRate":"45.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/987241e4-0c4a-41bd-88a7-1ba94a48b1c7/forbes-research-article-design.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn89@2020_6/2020/09/05/07-59-34-257_5bf2377c64fa10e1.webp","sourceBytes":399903,"destBytes":101548,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1596,"convertSpendMs":171,"createdTime":"2020-09-05 15:59:33","host":"us-017*","referer":"https://smashingmagazine.com/2020/08/clients-backlinks-design/","linkMd5ListStr":"8be8634c820c7dc900f70d342c72e08a","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"390.5 KB","destSize":"99.2 KB","compressRate":"25.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6d1f1e63-fb9c-463e-b0bb-dcaa30ae5506/porsche35-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn34@2020_4/2020/09/05/07-59-34-410_0e69be86e73e404d.webp","sourceBytes":182490,"destBytes":20844,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1298,"convertSpendMs":51,"createdTime":"2020-09-05 15:59:33","host":"us-013*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"178.2 KB","destSize":"20.4 KB","compressRate":"11.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6428a3fe-18b5-4a30-a7de-bd3b6e8dc310/topple-smashingconf-online-event.png","sourceStatusCode":200,"destWidth":1200,"destHeight":643,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn45@2020_3/2020/09/05/07-59-34-450_d97874b11ade2682.webp","sourceBytes":187078,"destBytes":58106,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1309,"convertSpendMs":35,"createdTime":"2020-09-05 15:59:34","host":"us-52*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"182.7 KB","destSize":"56.7 KB","compressRate":"31.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ef57e66c-2fd4-4a3e-beee-c270dc05040b/5-using-mobx-state-manager-react-native-applications.png","sourceStatusCode":200,"destWidth":810,"destHeight":590,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn78@2020_3/2020/09/05/07-59-34-236_e634dc406eb3925d.webp","sourceBytes":16791,"destBytes":31148,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1798,"convertSpendMs":26,"createdTime":"2020-09-05 15:59:33","host":"europe64*","referer":"https://smashingmagazine.com/2020/08/mobx-state-manager-react-native-applications/","linkMd5ListStr":"b7e12972db0bd44e3f243eb7c65c92c5","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.4 KB","destSize":"30.4 KB","compressRate":"185.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/147528a7-3b45-4f54-836a-a134da707b54/fig-02-application-initial-state-in-redux-dev-tools-extension.png","sourceStatusCode":200,"destWidth":855,"destHeight":499,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn50@2020_6/2020/09/05/07-59-34-517_f5453d6b41c52527.webp","sourceBytes":32464,"destBytes":20642,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1256,"convertSpendMs":27,"createdTime":"2020-09-05 15:59:34","host":"us-029*","referer":"https://smashingmagazine.com/2020/08/redux-real-world-application/","linkMd5ListStr":"cdfbc1833104e26676bb8df00a8b2a3c","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.7 KB","destSize":"20.2 KB","compressRate":"63.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8514fbaa-1a33-4b8f-9d41-fa4fe5a2b55c/porsche97-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":603,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn31@2020_1/2020/09/05/07-59-34-314_6175c104bc589f68.webp","sourceBytes":238557,"destBytes":36208,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2375,"convertSpendMs":47,"createdTime":"2020-09-05 15:59:33","host":"europe67*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"233 KB","destSize":"35.4 KB","compressRate":"15.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f0b47e63-0f94-4bec-bbd2-1ca2af58294d/03-registration-form-ios.png","sourceStatusCode":200,"destWidth":841,"destHeight":737,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn55@2020_1/2020/09/05/07-59-34-545_ddb84638215acfc7.webp","sourceBytes":160680,"destBytes":8520,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2111,"convertSpendMs":30,"createdTime":"2020-09-05 15:59:33","host":"europe-59*","referer":"https://smashingmagazine.com/2020/08/forms-validation-ionic-react/","linkMd5ListStr":"fa41336deda35415b1959d255ba9a56c","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"156.9 KB","destSize":"8.3 KB","compressRate":"5.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/55161fb1-16dc-47e1-a118-5ecd0f0a3fbb/sept-17-autumn-rains-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn73@2020_6/2020/09/05/07-59-34-640_b2b9d65cad24bb17.webp","sourceBytes":197172,"destBytes":40020,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1241,"convertSpendMs":21,"createdTime":"2020-09-05 15:59:34","host":"us-021*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"192.6 KB","destSize":"39.1 KB","compressRate":"20.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bae24bfd-a6e3-4ea3-90a8-0c9ea50ca3fa/august-12-colorstrike-96-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn90@2020_6/2020/09/05/07-59-34-830_3c20feaa8b920c7e.webp","sourceBytes":21898,"destBytes":4208,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1105,"convertSpendMs":11,"createdTime":"2020-09-05 15:59:34","host":"us-038*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.4 KB","destSize":"4.1 KB","compressRate":"19.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d899c7b0-a89e-470b-910c-03409becb896/porsche00-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":872,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn13@2020_3/2020/09/05/07-59-34-709_4fe2006bcbef7de0.webp","sourceBytes":623702,"destBytes":54570,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1733,"convertSpendMs":53,"createdTime":"2020-09-05 15:59:33","host":"us-009*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"609.1 KB","destSize":"53.3 KB","compressRate":"8.7%"},{"code":1,"isDone":false,"source":"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/15e488aa-1cb5-4303-aad6-d85201f69b14.png","sourceStatusCode":200,"destWidth":700,"destHeight":496,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn12@2020_5/2020/09/05/07-59-34-772_7fcd2c876f8635bf.webp","sourceBytes":23173,"destBytes":18384,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":965,"convertSpendMs":19,"createdTime":"2020-09-05 15:59:34","host":"us-53*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.6 KB","destSize":"18 KB","compressRate":"79.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/56fa24c3-6dc4-43e7-a03b-c4c04e576152/porsche174-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":350,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn77@2020_4/2020/09/05/07-59-34-736_5fba2e2f3690d449.webp","sourceBytes":174688,"destBytes":50244,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1299,"convertSpendMs":28,"createdTime":"2020-09-05 15:59:34","host":"us-009*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"170.6 KB","destSize":"49.1 KB","compressRate":"28.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a20d0900-e93e-4213-8471-0290e10b75e7/visit-philly-homepage.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn37@2020_4/2020/09/05/07-59-34-610_dc4e64960a84656a.webp","sourceBytes":1946828,"destBytes":158628,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1672,"convertSpendMs":98,"createdTime":"2020-09-05 15:59:33","host":"us-001*","referer":"https://smashingmagazine.com/2020/08/design-website-five-senses/","linkMd5ListStr":"90139c1573575fffdbeaa42a49e64624","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.9 MB","destSize":"154.9 KB","compressRate":"8.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e5cf21d9-1604-4270-994c-8c6169e31ea3/profitwell-saas-pricing-blog-post.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn53@2020_4/2020/09/05/07-59-34-741_4abd84d3fe5d1c20.webp","sourceBytes":296195,"destBytes":84630,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1536,"convertSpendMs":147,"createdTime":"2020-09-05 15:59:34","host":"us-017*","referer":"https://smashingmagazine.com/2020/08/clients-backlinks-design/","linkMd5ListStr":"8be8634c820c7dc900f70d342c72e08a","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"289.3 KB","destSize":"82.6 KB","compressRate":"28.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/42dae39a-6901-47bb-a07e-e313ef336547/google-john-mueller-on-page-length.png","sourceStatusCode":200,"destWidth":597,"destHeight":186,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn18@2020_4/2020/09/05/07-59-34-675_e628373ebe29092f.webp","sourceBytes":42199,"destBytes":16746,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1689,"convertSpendMs":9,"createdTime":"2020-09-05 15:59:33","host":"europe-22*","referer":"https://smashingmagazine.com/2020/08/clients-backlinks-design/","linkMd5ListStr":"8be8634c820c7dc900f70d342c72e08a","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"41.2 KB","destSize":"16.4 KB","compressRate":"39.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a4e175d4-8868-4167-882b-3d8b165fce75/buttons-application-color-schemes-css-custom-properties.png","sourceStatusCode":200,"destWidth":2400,"destHeight":1357,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn57@2020_3/2020/09/05/07-59-34-707_9dbcbef31532c50f.webp","sourceBytes":314786,"destBytes":92132,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1516,"convertSpendMs":164,"createdTime":"2020-09-05 15:59:34","host":"us-005*","referer":"https://smashingmagazine.com/2020/08/application-color-schemes-css-custom-properties/","linkMd5ListStr":"1d07a3a7ea9e5c230cc1a792c9ee5246","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"307.4 KB","destSize":"90 KB","compressRate":"29.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d74e333f-a26f-49ab-92d9-5f203d5f6d76/5-table-generated-with-schematic.png","sourceStatusCode":200,"destWidth":1440,"destHeight":1072,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn69@2020_6/2020/09/05/07-59-35-006_2ce9a5714c759cb0.webp","sourceBytes":46134,"destBytes":15460,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1526,"convertSpendMs":91,"createdTime":"2020-09-05 15:59:34","host":"us-033*","referer":"https://smashingmagazine.com/2020/07/responsive-dashboard-angular-material-ng2-charts-schematics/","linkMd5ListStr":"49147f5e0fdeef5d08e1f0588727e911","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.1 KB","destSize":"15.1 KB","compressRate":"33.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0df4f7ef-ce24-494c-bc28-afcc2d685ea8/porsche150-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn3@2020_2/2020/09/05/07-59-35-021_b6d60003dcd35bbf.webp","sourceBytes":398731,"destBytes":36848,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1277,"convertSpendMs":26,"createdTime":"2020-09-05 15:59:34","host":"us-002*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"389.4 KB","destSize":"36 KB","compressRate":"9.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ac0aeccb-677b-4019-a52a-612c18f9cbef/porsche911-reference-image-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn100@2020_3/2020/09/05/07-59-35-099_2840af99ab315f29.webp","sourceBytes":1560737,"destBytes":86642,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1469,"convertSpendMs":107,"createdTime":"2020-09-05 15:59:34","host":"us-014*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.5 MB","destSize":"84.6 KB","compressRate":"5.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/fe1a67c4-b7f8-4f88-a938-1d1f08c423d9/10-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn41@2020_5/2020/09/05/07-59-34-818_83fa182091cf427e.webp","sourceBytes":159972,"destBytes":37382,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1934,"convertSpendMs":60,"createdTime":"2020-09-05 15:59:34","host":"europe64*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"156.2 KB","destSize":"36.5 KB","compressRate":"23.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2b56d582-7595-41a3-aef8-170c90e677e0/porsche102-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn24@2020_6/2020/09/05/07-59-35-254_f11aa8a34d1c0b40.webp","sourceBytes":112934,"destBytes":9098,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1240,"convertSpendMs":36,"createdTime":"2020-09-05 15:59:34","host":"us-006*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"110.3 KB","destSize":"8.9 KB","compressRate":"8.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0eef430f-3044-407d-aab9-efbba8f91cb2/porsche185b-car-body-decals-example.png","sourceStatusCode":200,"destWidth":800,"destHeight":423,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn98@2020_6/2020/09/05/07-59-34-912_bcc0a0e7b4f37a6d.webp","sourceBytes":140212,"destBytes":32252,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2311,"convertSpendMs":17,"createdTime":"2020-09-05 15:59:33","host":"europe68*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"136.9 KB","destSize":"31.5 KB","compressRate":"23%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3eb7a5ab-1491-4ee8-a4cb-a04e08b27f2a/porsche64-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":700,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn95@2020_4/2020/09/05/07-59-35-454_86892e0efe9fe6f1.webp","sourceBytes":290404,"destBytes":23118,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1296,"convertSpendMs":91,"createdTime":"2020-09-05 15:59:34","host":"us-026*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"283.6 KB","destSize":"22.6 KB","compressRate":"8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a3dbe3e-72ce-40c3-9db4-fae993d60ad9/accessibility-chrome-devtools-inspect-tooltip.png","sourceStatusCode":200,"destWidth":1600,"destHeight":914,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn66@2020_6/2020/09/05/07-59-35-057_f993eb0e957835a3.webp","sourceBytes":153771,"destBytes":56540,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1983,"convertSpendMs":57,"createdTime":"2020-09-05 15:59:34","host":"europe-56*","referer":"https://smashingmagazine.com/2020/08/accessibility-chrome-devtools/","linkMd5ListStr":"692062341a74418e56f3a5d4d97a92e4","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"150.2 KB","destSize":"55.2 KB","compressRate":"36.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94363a36-e9b9-4f1b-bf90-6254d8c2bc67/3-renaissance-no-code-web-designers.jpg","sourceStatusCode":200,"destWidth":1400,"destHeight":1400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn6@2020_1/2020/09/05/07-59-35-229_0306c04b0ee8d78d.webp","sourceBytes":655941,"destBytes":246410,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2520,"convertSpendMs":184,"createdTime":"2020-09-05 15:59:33","host":"us-033*","referer":"https://smashingmagazine.com/2020/07/renaissance-no-code-web-designers/","linkMd5ListStr":"5dc2ee4cf02a8d13b4ca79f601851ab2","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"640.6 KB","destSize":"240.6 KB","compressRate":"37.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f6f1d050-cb29-47b3-8789-9326b18e0ade/issue-11-10-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1900,"destHeight":1456,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn20@2020_1/2020/09/05/07-59-35-380_55f1373970a7891e.webp","sourceBytes":594894,"destBytes":145310,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1627,"convertSpendMs":178,"createdTime":"2020-09-05 15:59:34","host":"us-018*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"581 KB","destSize":"141.9 KB","compressRate":"24.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4da5f29-93df-4a10-80d2-116d2748c9e1/aug-19-colorful-summer-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn59@2020_1/2020/09/05/07-59-35-655_750c716dc564e891.webp","sourceBytes":27606,"destBytes":15834,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1244,"convertSpendMs":14,"createdTime":"2020-09-05 15:59:35","host":"us-51*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"27 KB","destSize":"15.5 KB","compressRate":"57.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/96fd87de-813f-4a5c-b1b5-65ad460ffb4a/porsche22-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn89@2020_5/2020/09/05/07-59-35-693_8b179657d9214a9a.webp","sourceBytes":296106,"destBytes":37840,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1152,"convertSpendMs":125,"createdTime":"2020-09-05 15:59:35","host":"us-021*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"289.2 KB","destSize":"37 KB","compressRate":"12.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c1ba238c-9467-4f96-ba42-f7cb3b535bdc/3-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn57@2020_2/2020/09/05/07-59-35-729_70fbcc8eb77cb75a.webp","sourceBytes":158249,"destBytes":37164,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1319,"convertSpendMs":66,"createdTime":"2020-09-05 15:59:35","host":"us-52*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"154.5 KB","destSize":"36.3 KB","compressRate":"23.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0ae1bffb-129b-4a35-a219-cedfad54a014/point-type-asymmetric-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":800,"destHeight":250,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn95@2020_2/2020/09/05/07-59-35-856_5b4f9e5f90072e9b.webp","sourceBytes":19278,"destBytes":6034,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1154,"convertSpendMs":8,"createdTime":"2020-09-05 15:59:35","host":"us-010*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.8 KB","destSize":"5.9 KB","compressRate":"31.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/13a27873-9696-459a-9e44-ec0d5f705b00/stored-data-firestore-comment-system-firebase.png","sourceStatusCode":200,"destWidth":1600,"destHeight":941,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn48@2020_3/2020/09/05/07-59-35-809_553bcb4dd8b6a712.webp","sourceBytes":110846,"destBytes":35164,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1559,"convertSpendMs":107,"createdTime":"2020-09-05 15:59:35","host":"us-012*","referer":"https://smashingmagazine.com/2020/08/comment-system-firebase/","linkMd5ListStr":"d3941734f9d21fb1526a62ff1d7b9b2c","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"108.2 KB","destSize":"34.3 KB","compressRate":"31.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7abe7c6-addd-4bd2-b2d4-4b752b132182/box-component-library-react-emotion.png","sourceStatusCode":200,"destWidth":1496,"destHeight":1030,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn70@2020_6/2020/09/05/07-59-35-858_9dc40fa79d2916c4.webp","sourceBytes":41043,"destBytes":5106,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1312,"convertSpendMs":85,"createdTime":"2020-09-05 15:59:35","host":"us-017*","referer":"https://smashingmagazine.com/2020/09/component-library-react-emotion/","linkMd5ListStr":"c2ff886e4902a296612efa5d4bdb8cd3","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"40.1 KB","destSize":"5 KB","compressRate":"12.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/10f70b43-689d-4684-bf38-047c519334ce/02-guide-product-tours-react-apps.png","sourceStatusCode":200,"destWidth":1361,"destHeight":657,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn32@2020_5/2020/09/05/07-59-35-667_3cdce6a7b6963fad.webp","sourceBytes":122680,"destBytes":33892,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1727,"convertSpendMs":38,"createdTime":"2020-09-05 15:59:34","host":"europe-57*","referer":"https://smashingmagazine.com/2020/08/guide-product-tours-react-apps/","linkMd5ListStr":"8aad86784c6c5de060112293fddfd490","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"119.8 KB","destSize":"33.1 KB","compressRate":"27.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/455157cc-f0bb-4645-8e0b-673e28a333c9/massage-envy-website.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn73@2020_2/2020/09/05/07-59-35-828_4095d4a81af981b1.webp","sourceBytes":763084,"destBytes":70596,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1438,"convertSpendMs":64,"createdTime":"2020-09-05 15:59:35","host":"us-005*","referer":"https://smashingmagazine.com/2020/08/design-website-five-senses/","linkMd5ListStr":"90139c1573575fffdbeaa42a49e64624","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"745.2 KB","destSize":"68.9 KB","compressRate":"9.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/18342610-5ce6-487f-a454-1fa96de53b73/cloud-sql-dashboard-api-flask-google-cloud-sql-app-engine.png","sourceStatusCode":200,"destWidth":2344,"destHeight":1356,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn19@2020_6/2020/09/05/07-59-35-900_f65eb6ed7dc73dfa.webp","sourceBytes":183110,"destBytes":61322,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1134,"convertSpendMs":90,"createdTime":"2020-09-05 15:59:35","host":"us-002*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"178.8 KB","destSize":"59.9 KB","compressRate":"33.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7b426afe-fb0e-45a1-aa45-ff09e0914409/postman-response-1-api-flask-google-cloud-sql-app-engine.png","sourceStatusCode":200,"destWidth":1754,"destHeight":1182,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn62@2020_1/2020/09/05/07-59-35-623_e9e1201754674791.webp","sourceBytes":172937,"destBytes":53828,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2533,"convertSpendMs":65,"createdTime":"2020-09-05 15:59:34","host":"europe68*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"168.9 KB","destSize":"52.6 KB","compressRate":"31.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4f4dd92f-244e-4621-b703-930b072c9d76/sep-18-summer-collapsed-into-fall-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn99@2020_5/2020/09/05/07-59-35-821_983a2860fd9783bd.webp","sourceBytes":33656,"destBytes":17286,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1242,"convertSpendMs":12,"createdTime":"2020-09-05 15:59:35","host":"europe-23*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.9 KB","destSize":"16.9 KB","compressRate":"51.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9245a10c-ec8a-43ad-92dc-f1e6ac42270a/kindermusik-girl-playing-xylophone.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn86@2020_4/2020/09/05/07-59-35-883_158bc37334c3cb66.webp","sourceBytes":953412,"destBytes":96946,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1450,"convertSpendMs":67,"createdTime":"2020-09-05 15:59:35","host":"us-033*","referer":"https://smashingmagazine.com/2020/08/design-website-five-senses/","linkMd5ListStr":"90139c1573575fffdbeaa42a49e64624","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"931.1 KB","destSize":"94.7 KB","compressRate":"10.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d3ebb32a-6899-41eb-9454-5ff3aa3b8fd3/porsche92-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn16@2020_4/2020/09/05/07-59-36-039_183dc2301b36c685.webp","sourceBytes":134420,"destBytes":15414,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1258,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:35","host":"us-014*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"131.3 KB","destSize":"15.1 KB","compressRate":"11.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/03b01f0c-2f7b-4057-a66e-d81f966419a8/2-generated-dashboard-component.png","sourceStatusCode":200,"destWidth":1429,"destHeight":1127,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn8@2020_1/2020/09/05/07-59-36-183_d733fa5c2596662a.webp","sourceBytes":52889,"destBytes":12102,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1307,"convertSpendMs":73,"createdTime":"2020-09-05 15:59:35","host":"us-039*","referer":"https://smashingmagazine.com/2020/07/responsive-dashboard-angular-material-ng2-charts-schematics/","linkMd5ListStr":"49147f5e0fdeef5d08e1f0588727e911","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.6 KB","destSize":"11.8 KB","compressRate":"22.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/91ed0fb4-11b0-4fcd-80e7-c407f5bc1b38/aug-20-in-a-sunbeam-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn86@2020_1/2020/09/05/07-59-35-684_8ecc970f4e5f6bc8.webp","sourceBytes":151642,"destBytes":28056,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2421,"convertSpendMs":19,"createdTime":"2020-09-05 15:59:34","host":"europe-60*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"148.1 KB","destSize":"27.4 KB","compressRate":"18.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee016d76-1bd8-42c1-aac6-f4f707d1d5c1/issue-12-23-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2618,"destHeight":686,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn65@2020_4/2020/09/05/07-59-35-896_a7cdb843f3601c43.webp","sourceBytes":211516,"destBytes":146542,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1665,"convertSpendMs":225,"createdTime":"2020-09-05 15:59:35","host":"us-029*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"206.6 KB","destSize":"143.1 KB","compressRate":"69.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/96a602f8-a203-44a4-b1eb-c237f8daac2c/google-drive-search-matches.png","sourceStatusCode":200,"destWidth":1427,"destHeight":517,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn4@2020_5/2020/09/05/07-59-35-920_5e9e916d779006bd.webp","sourceBytes":120695,"destBytes":40646,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1247,"convertSpendMs":30,"createdTime":"2020-09-05 15:59:35","host":"europe61*","referer":"https://smashingmagazine.com/2020/08/lessons-web-app-designers-learn-google/","linkMd5ListStr":"90050a70ad8778f8abad9e0a4b74cfcb","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"117.9 KB","destSize":"39.7 KB","compressRate":"33.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8a535d1f-aa34-4198-bfb2-a6ba455a388a/porsche33-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn8@2020_3/2020/09/05/07-59-35-864_04b0dadcdc7c5f23.webp","sourceBytes":124542,"destBytes":25768,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2207,"convertSpendMs":49,"createdTime":"2020-09-05 15:59:34","host":"europe65*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"121.6 KB","destSize":"25.2 KB","compressRate":"20.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c0b07e54-ecff-4a6a-b2ab-6805f43b707d/issue-12-22-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2000,"destHeight":1450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn54@2020_2/2020/09/05/07-59-35-845_4bc40d702bcc75a3.webp","sourceBytes":934345,"destBytes":216512,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1766,"convertSpendMs":202,"createdTime":"2020-09-05 15:59:35","host":"us-001*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"912.4 KB","destSize":"211.4 KB","compressRate":"23.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e4379348-39a5-491f-9a9b-01ca9a3d7619/morningconsult-socialmedia-links.png","sourceStatusCode":200,"destWidth":628,"destHeight":420,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn77@2020_2/2020/09/05/07-59-36-148_2cc7218d73e032f1.webp","sourceBytes":75660,"destBytes":13218,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1576,"convertSpendMs":12,"createdTime":"2020-09-05 15:59:35","host":"europe68*","referer":"https://smashingmagazine.com/2020/08/clients-backlinks-design/","linkMd5ListStr":"8be8634c820c7dc900f70d342c72e08a","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"73.9 KB","destSize":"12.9 KB","compressRate":"17.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5223c15e-205e-4f46-83f6-b97c51e6754d/guillermo-rauch-200x200.jpg","sourceStatusCode":200,"destWidth":200,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn43@2020_4/2020/09/05/07-59-35-459_18014d9d226a68da.webp","sourceBytes":7039,"destBytes":5970,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2031,"convertSpendMs":11,"createdTime":"2020-09-05 15:59:35","host":"us-024*","referer":"https://smashingmagazine.com/2020/08/smashing-podcast-episode-23/","linkMd5ListStr":"8abfe7b036a7eadf0d06267630e489aa","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"5.8 KB","compressRate":"84.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e5a414d6-bfa3-4c14-88f5-96cee474c6ef/porsche134-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn40@2020_3/2020/09/05/07-59-36-282_cd2f108ae1f5d07b.webp","sourceBytes":87056,"destBytes":13812,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1213,"convertSpendMs":27,"createdTime":"2020-09-05 15:59:35","host":"us-006*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"85 KB","destSize":"13.5 KB","compressRate":"15.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e357067a-16f8-4870-aeea-aa086318f697/8-renaissance-no-code-web-designers.jpg","sourceStatusCode":200,"destWidth":1999,"destHeight":1999,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn27@2020_1/2020/09/05/07-59-35-359_99f55d6e4ecdf982.webp","sourceBytes":654751,"destBytes":519244,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2153,"convertSpendMs":185,"createdTime":"2020-09-05 15:59:34","host":"europe69*","referer":"https://smashingmagazine.com/2020/07/renaissance-no-code-web-designers/","linkMd5ListStr":"5dc2ee4cf02a8d13b4ca79f601851ab2","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"639.4 KB","destSize":"507.1 KB","compressRate":"79.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/58c578c5-f73d-4723-b4ec-faf89f3b68d0/issue-11-01-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1400,"destHeight":331,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn82@2020_4/2020/09/05/07-59-35-925_f2e58e2028206a18.webp","sourceBytes":561542,"destBytes":61526,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2668,"convertSpendMs":37,"createdTime":"2020-09-05 15:59:34","host":"europe-22*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"548.4 KB","destSize":"60.1 KB","compressRate":"11%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/960a0ed0-70e0-40dd-8601-e0b03dca3b77/porsche108-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":375,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn32@2020_1/2020/09/05/07-59-36-393_adf30de047c0eb36.webp","sourceBytes":204015,"destBytes":25820,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1264,"convertSpendMs":32,"createdTime":"2020-09-05 15:59:36","host":"us-030*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"199.2 KB","destSize":"25.2 KB","compressRate":"12.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/84ad18eb-c81d-4b46-a51f-4f54b00b1ffa/13-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn11@2020_4/2020/09/05/07-59-36-367_44abfa5517cb08a7.webp","sourceBytes":238174,"destBytes":43558,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1667,"convertSpendMs":78,"createdTime":"2020-09-05 15:59:35","host":"us-026*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"232.6 KB","destSize":"42.5 KB","compressRate":"18.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5eddea80-48df-4d68-a4a4-f29a3de4fded/porsche44-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn59@2020_1/2020/09/05/07-59-36-487_2b8a92791f7b3b25.webp","sourceBytes":147055,"destBytes":21152,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1212,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:36","host":"us-010*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"143.6 KB","destSize":"20.7 KB","compressRate":"14.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/061e6628-01a0-4bd9-b188-e09a54b0648b/6-building-react-apps-storybook.png","sourceStatusCode":200,"destWidth":1366,"destHeight":738,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn82@2020_1/2020/09/05/07-59-36-213_d18ba96d01b83587.webp","sourceBytes":73444,"destBytes":34596,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1807,"convertSpendMs":39,"createdTime":"2020-09-05 15:59:35","host":"europe-56*","referer":"https://smashingmagazine.com/2020/09/building-react-apps-storybook/","linkMd5ListStr":"a4dec1fe83c49a7924bf09761305d38c","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"71.7 KB","destSize":"33.8 KB","compressRate":"47.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/89bbc8ff-6184-4d8d-b7f0-972835b6bad4/porsche59-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn52@2020_3/2020/09/05/07-59-36-491_966f9c39e717ba47.webp","sourceBytes":147838,"destBytes":26738,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1263,"convertSpendMs":33,"createdTime":"2020-09-05 15:59:36","host":"us-034*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"144.4 KB","destSize":"26.1 KB","compressRate":"18.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f88bbb91-bfc5-4628-a6dc-fc16491e3d71/porsche151-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn44@2020_6/2020/09/05/07-59-36-260_68f220498f231d96.webp","sourceBytes":507076,"destBytes":63042,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1522,"convertSpendMs":40,"createdTime":"2020-09-05 15:59:36","host":"europe69*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"495.2 KB","destSize":"61.6 KB","compressRate":"12.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/81b662c2-2d6c-4869-b235-2410e6b7188c/7-dashboard-with-charts-tables-mini-cards.png","sourceStatusCode":200,"destWidth":2400,"destHeight":1931,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn28@2020_4/2020/09/05/07-59-36-631_4aaa2024f5e74da7.webp","sourceBytes":308374,"destBytes":99596,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1925,"convertSpendMs":198,"createdTime":"2020-09-05 15:59:35","host":"us-53*","referer":"https://smashingmagazine.com/2020/07/responsive-dashboard-angular-material-ng2-charts-schematics/","linkMd5ListStr":"49147f5e0fdeef5d08e1f0588727e911","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"301.1 KB","destSize":"97.3 KB","compressRate":"32.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b16cdeed-7b86-49e5-9d72-e936bd202372/porsche114-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":375,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn84@2020_6/2020/09/05/07-59-36-911_218dc93e2ccc5faa.webp","sourceBytes":47738,"destBytes":9224,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1146,"convertSpendMs":15,"createdTime":"2020-09-05 15:59:36","host":"us-002*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.6 KB","destSize":"9 KB","compressRate":"19.3%"},{"code":1,"isDone":false,"source":"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/8888751b-76bb-4e3e-b4b6-96d7c6f4e5b0.png","sourceStatusCode":200,"destWidth":700,"destHeight":329,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn22@2020_4/2020/09/05/07-59-37-007_e1fa610de2ab959f.webp","sourceBytes":25965,"destBytes":18344,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":948,"convertSpendMs":11,"createdTime":"2020-09-05 15:59:36","host":"us-023*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25.4 KB","destSize":"17.9 KB","compressRate":"70.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2923ee81-dee1-48f2-a549-1a74c5a28154/sept-14-dream-it-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn5@2020_1/2020/09/05/07-59-37-094_31a38d8152d60df6.webp","sourceBytes":7961,"destBytes":4794,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1107,"convertSpendMs":10,"createdTime":"2020-09-05 15:59:36","host":"us-007*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.8 KB","destSize":"4.7 KB","compressRate":"60.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1feae473-0c3c-42d4-abdf-a5a3b795588c/code-tab-figma.png","sourceStatusCode":200,"destWidth":1914,"destHeight":1296,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn71@2020_6/2020/09/05/07-59-36-784_d4cc789bafee9b33.webp","sourceBytes":87327,"destBytes":84530,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1539,"convertSpendMs":90,"createdTime":"2020-09-05 15:59:36","host":"us-039*","referer":"https://smashingmagazine.com/2020/09/figma-developers-guide/","linkMd5ListStr":"f3b6fa9b4a0de46db15a88ca8ddaba3b","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"85.3 KB","destSize":"82.5 KB","compressRate":"96.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b3880f78-987e-4e35-b547-288ba1b47a74/porsche123-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":539,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn93@2020_3/2020/09/05/07-59-37-062_1af79a80ac21f66f.webp","sourceBytes":171616,"destBytes":26278,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1266,"convertSpendMs":42,"createdTime":"2020-09-05 15:59:36","host":"us-54*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"167.6 KB","destSize":"25.7 KB","compressRate":"15.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ed639caf-f1b5-43e7-9af6-ff85a675a4ef/sept-17-summer-ending-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn75@2020_6/2020/09/05/07-59-37-035_88361bb06ad5a612.webp","sourceBytes":165032,"destBytes":35662,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1568,"convertSpendMs":26,"createdTime":"2020-09-05 15:59:36","host":"us-026*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"161.2 KB","destSize":"34.8 KB","compressRate":"21.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8b47be41-e1b7-4a82-a728-b1a36682263a/google-calendar-customization.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn23@2020_5/2020/09/05/07-59-36-887_ae1f386e764609bf.webp","sourceBytes":119801,"destBytes":29346,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2153,"convertSpendMs":34,"createdTime":"2020-09-05 15:59:35","host":"europe65*","referer":"https://smashingmagazine.com/2020/08/lessons-web-app-designers-learn-google/","linkMd5ListStr":"90050a70ad8778f8abad9e0a4b74cfcb","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"117 KB","destSize":"28.7 KB","compressRate":"24.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a792e26-ec87-4718-a133-07f7dd6eeac3/issue-12-10-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":1400,"destHeight":513,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn98@2020_5/2020/09/05/07-59-37-109_1055ed9fac8d61d8.webp","sourceBytes":273030,"destBytes":65326,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1345,"convertSpendMs":56,"createdTime":"2020-09-05 15:59:36","host":"us-031*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"266.6 KB","destSize":"63.8 KB","compressRate":"23.9%"},{"code":1,"isDone":false,"source":"https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-4-opt_qyr9w7.png","sourceStatusCode":200,"destWidth":2254,"destHeight":1272,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn1@2020_2/2020/09/05/07-59-36-931_2442e391bec436ee.webp","sourceBytes":97720,"destBytes":166540,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1393,"convertSpendMs":118,"createdTime":"2020-09-05 15:59:36","host":"us-019*","referer":"https://smashingmagazine.com/2020/08/checklist-cards-release/","linkMd5ListStr":"2954bfe0e134e38e8bb6b7bd231c4f60","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"95.4 KB","destSize":"162.6 KB","compressRate":"170.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d5531b5-f78d-4cda-8d8c-d069055246fa/def-home-demystifying-djangos-magic.png","sourceStatusCode":200,"destWidth":1366,"destHeight":704,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn25@2020_1/2020/09/05/07-59-37-294_c4d9dd6aacd6e79d.webp","sourceBytes":30859,"destBytes":14726,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1251,"convertSpendMs":42,"createdTime":"2020-09-05 15:59:36","host":"us-011*","referer":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/","linkMd5ListStr":"90725d421e0a2e80cbc6fae6b90f5416","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.1 KB","destSize":"14.4 KB","compressRate":"47.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/393f89c6-a5c2-4952-b4ca-d90ed5dff604/sep-20-bi-and-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn68@2020_2/2020/09/05/07-59-37-231_8c187de3d85cc10f.webp","sourceBytes":135398,"destBytes":53584,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1037,"convertSpendMs":19,"createdTime":"2020-09-05 15:59:37","host":"us-020*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"132.2 KB","destSize":"52.3 KB","compressRate":"39.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bf907aee-dc1b-453f-aae3-f07425e3a2ab/topple-smashing-podcast-coffeetogo.png","sourceStatusCode":200,"destWidth":1200,"destHeight":673,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn18@2020_5/2020/09/05/07-59-37-276_69d1600f38642d5e.webp","sourceBytes":186028,"destBytes":72432,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1323,"convertSpendMs":52,"createdTime":"2020-09-05 15:59:36","host":"us-035*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"181.7 KB","destSize":"70.7 KB","compressRate":"38.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/84692544-a30d-4a78-9685-1278d065cc6e/sep-19-stay-or-leave-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn58@2020_4/2020/09/05/07-59-37-403_39e97244055fa9cd.webp","sourceBytes":23655,"destBytes":15218,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1194,"convertSpendMs":18,"createdTime":"2020-09-05 15:59:37","host":"us-54*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.1 KB","destSize":"14.9 KB","compressRate":"64.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/566428b4-6d9f-4b6d-88f3-9ce6cd36f896/googlesearch-featuredsnippet.png","sourceStatusCode":200,"destWidth":1117,"destHeight":595,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn47@2020_6/2020/09/05/07-59-37-159_471207db6c9c3759.webp","sourceBytes":80426,"destBytes":26140,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2110,"convertSpendMs":30,"createdTime":"2020-09-05 15:59:36","host":"europe-57*","referer":"https://smashingmagazine.com/2020/08/clients-backlinks-design/","linkMd5ListStr":"8be8634c820c7dc900f70d342c72e08a","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"78.5 KB","destSize":"25.5 KB","compressRate":"32.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a29d0e0d-eb5b-4728-8ac0-5724c7d47009/7-icons-mobile-apps.png","sourceStatusCode":200,"destWidth":2000,"destHeight":2000,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn79@2020_5/2020/09/05/07-59-37-215_a48c5d8de5a9e100.webp","sourceBytes":419509,"destBytes":157308,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1811,"convertSpendMs":379,"createdTime":"2020-09-05 15:59:36","host":"us-014*","referer":"https://smashingmagazine.com/2020/09/icons-mobile-apps/","linkMd5ListStr":"bfb80d7e10b5ce2cc36e767b323e14aa","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"409.7 KB","destSize":"153.6 KB","compressRate":"37.5%"},{"code":1,"isDone":false,"source":"https://res.cloudinary.com/indysigner/image/upload/v1596455165/checklists-6-opt_qtpe9f.png","sourceStatusCode":200,"destWidth":2124,"destHeight":1300,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn64@2020_6/2020/09/05/07-59-36-678_aa157f4ea46d5f1e.webp","sourceBytes":229685,"destBytes":184464,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2035,"convertSpendMs":92,"createdTime":"2020-09-05 15:59:36","host":"europe-23*","referer":"https://smashingmagazine.com/2020/08/checklist-cards-release/","linkMd5ListStr":"2954bfe0e134e38e8bb6b7bd231c4f60","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"224.3 KB","destSize":"180.1 KB","compressRate":"80.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ca184adb-f9b8-4205-9f09-023ac493bc95/cobloom-blog-post-design.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn46@2020_4/2020/09/05/07-59-37-394_e718233f018a14c9.webp","sourceBytes":222035,"destBytes":83386,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1385,"convertSpendMs":51,"createdTime":"2020-09-05 15:59:36","host":"us-015*","referer":"https://smashingmagazine.com/2020/08/clients-backlinks-design/","linkMd5ListStr":"8be8634c820c7dc900f70d342c72e08a","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"216.8 KB","destSize":"81.4 KB","compressRate":"37.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8bd88515-865b-4372-86e4-ffdcda36ade8/porsche12-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":738,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn61@2020_5/2020/09/05/07-59-37-531_eb6ddf8d1a745f79.webp","sourceBytes":225938,"destBytes":28984,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1291,"convertSpendMs":68,"createdTime":"2020-09-05 15:59:37","host":"us-031*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"220.6 KB","destSize":"28.3 KB","compressRate":"12.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/be2ec175-7f5d-444f-b313-c296af24f77e/issue-12-17-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":1400,"destHeight":591,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn3@2020_2/2020/09/05/07-59-37-545_cddf35bb47d93157.webp","sourceBytes":472285,"destBytes":83484,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1165,"convertSpendMs":49,"createdTime":"2020-09-05 15:59:37","host":"us-51*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"461.2 KB","destSize":"81.5 KB","compressRate":"17.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ec380c41-2c66-41b9-b716-3a7a45f58ea4/aug-18-coffee-break-time-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn14@2020_3/2020/09/05/07-59-37-614_4a5c52cd3c09a989.webp","sourceBytes":18233,"destBytes":12362,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1574,"convertSpendMs":11,"createdTime":"2020-09-05 15:59:36","host":"europe-58*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.8 KB","destSize":"12.1 KB","compressRate":"67.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/552e308b-65b4-4ceb-bf29-34857ac4ae33/porsche69-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":700,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn80@2020_1/2020/09/05/07-59-37-531_911700c6055486bd.webp","sourceBytes":234170,"destBytes":21306,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1304,"convertSpendMs":62,"createdTime":"2020-09-05 15:59:37","host":"europe-59*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"228.7 KB","destSize":"20.8 KB","compressRate":"9.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/50d627f8-edc8-40fd-a516-63a8db139f42/porsche99-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn37@2020_5/2020/09/05/07-59-37-776_97d655ab31a4d877.webp","sourceBytes":278463,"destBytes":29892,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1677,"convertSpendMs":43,"createdTime":"2020-09-05 15:59:36","host":"us-040*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"271.9 KB","destSize":"29.2 KB","compressRate":"10.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ea2add0-730a-475e-9f47-bc0a8ff54e6b/fig-03-final-app-home-page.png","sourceStatusCode":200,"destWidth":1600,"destHeight":824,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn91@2020_4/2020/09/05/07-59-37-783_a8f280cfcb4a5f16.webp","sourceBytes":89638,"destBytes":21822,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1321,"convertSpendMs":63,"createdTime":"2020-09-05 15:59:37","host":"us-012*","referer":"https://smashingmagazine.com/2020/08/redux-real-world-application/","linkMd5ListStr":"cdfbc1833104e26676bb8df00a8b2a3c","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"87.5 KB","destSize":"21.3 KB","compressRate":"24.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4dfa6552-3531-4349-967b-b15c346366b9/porsche911-inspiration-images.png","sourceStatusCode":200,"destWidth":1920,"destHeight":862,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn42@2020_2/2020/09/05/07-59-37-533_566c8688f13b22c1.webp","sourceBytes":2818389,"destBytes":221476,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1762,"convertSpendMs":129,"createdTime":"2020-09-05 15:59:36","host":"us-027*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.7 MB","destSize":"216.3 KB","compressRate":"7.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a5ea44a7-fce4-41d5-b39f-d8e8e3a1eb51/snapshot-gcp-api-flask-google-cloud-sql-app-engine-large.png","sourceStatusCode":200,"destWidth":1200,"destHeight":792,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn89@2020_5/2020/09/05/07-59-37-815_40113fbdb96a9799.webp","sourceBytes":73123,"destBytes":17904,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2057,"convertSpendMs":55,"createdTime":"2020-09-05 15:59:36","host":"europe66*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"71.4 KB","destSize":"17.5 KB","compressRate":"24.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/99bf1fe1-fd4e-4a3a-8a90-a9ec1761c15c/porsche165-2-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":735,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn84@2020_1/2020/09/05/07-59-37-973_cb7c83519fc944ba.webp","sourceBytes":420246,"destBytes":45790,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1709,"convertSpendMs":48,"createdTime":"2020-09-05 15:59:37","host":"us-037*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9,3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"410.4 KB","destSize":"44.7 KB","compressRate":"10.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7f17b758-ea2b-4e34-a5e9-7246b9d8ae3c/9-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn68@2020_2/2020/09/05/07-59-37-694_802b893ca92e8f3b.webp","sourceBytes":144712,"destBytes":33664,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2487,"convertSpendMs":55,"createdTime":"2020-09-05 15:59:36","host":"europe61*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"141.3 KB","destSize":"32.9 KB","compressRate":"23.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/376bedde-ba59-453f-be71-f36e391cec05/points-bezier-handles-and-point-types-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn36@2020_2/2020/09/05/07-59-38-101_6b70aca1cc6a86de.webp","sourceBytes":61433,"destBytes":29826,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1019,"convertSpendMs":43,"createdTime":"2020-09-05 15:59:37","host":"us-022*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"60 KB","destSize":"29.1 KB","compressRate":"48.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cd7f2040-ad64-45f6-ad3d-0003e4895d15/porsche169-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":250,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn12@2020_1/2020/09/05/07-59-38-164_1715d2b5f846451f.webp","sourceBytes":104216,"destBytes":12930,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1350,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:37","host":"us-030*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"101.8 KB","destSize":"12.6 KB","compressRate":"12.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2933c182-3a9a-43fb-8938-a1da8b33f557/9-renaissance-effect-no-code-web-designers.png","sourceStatusCode":200,"destWidth":1275,"destHeight":764,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn16@2020_5/2020/09/05/07-59-38-052_8128f18f9d096db7.webp","sourceBytes":343600,"destBytes":44822,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1327,"convertSpendMs":50,"createdTime":"2020-09-05 15:59:37","host":"us-018*","referer":"https://smashingmagazine.com/2020/07/renaissance-no-code-web-designers/","linkMd5ListStr":"5dc2ee4cf02a8d13b4ca79f601851ab2","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"335.5 KB","destSize":"43.8 KB","compressRate":"13%"},{"code":1,"isDone":false,"source":"https://res.cloudinary.com/indysigner/image/upload/v1596445215/twocards-opt_gu2jwe.png","sourceStatusCode":200,"destWidth":2000,"destHeight":1297,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn9@2020_2/2020/09/05/07-59-37-194_dfc545927bc9de28.webp","sourceBytes":429281,"destBytes":245348,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2085,"convertSpendMs":259,"createdTime":"2020-09-05 15:59:36","host":"europe70*","referer":"https://smashingmagazine.com/2020/08/checklist-cards-release/","linkMd5ListStr":"2954bfe0e134e38e8bb6b7bd231c4f60","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"419.2 KB","destSize":"239.6 KB","compressRate":"57.2%"},{"code":1,"isDone":false,"source":"https://res.cloudinary.com/indysigner/image/upload/v1596441658/checklists-2-opt_osdbs0.png","sourceStatusCode":200,"destWidth":1950,"destHeight":1128,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn95@2020_2/2020/09/05/07-59-37-693_56e663176545d859.webp","sourceBytes":71474,"destBytes":51524,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1507,"convertSpendMs":69,"createdTime":"2020-09-05 15:59:37","host":"europe-25*","referer":"https://smashingmagazine.com/2020/08/checklist-cards-release/","linkMd5ListStr":"2954bfe0e134e38e8bb6b7bd231c4f60","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"69.8 KB","destSize":"50.3 KB","compressRate":"72.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/74f42f07-8d56-49af-9350-0d180e120b62/anthropologie-clothing-closeup.png","sourceStatusCode":200,"destWidth":1422,"destHeight":788,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn87@2020_4/2020/09/05/07-59-37-932_4691c0d33812664f.webp","sourceBytes":1424900,"destBytes":125956,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1705,"convertSpendMs":209,"createdTime":"2020-09-05 15:59:37","host":"us-024*","referer":"https://smashingmagazine.com/2020/08/design-website-five-senses/","linkMd5ListStr":"90139c1573575fffdbeaa42a49e64624","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.4 MB","destSize":"123 KB","compressRate":"8.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/305dc235-0875-4582-94d8-fba50953d129/sep-19-finding-jaguar-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn19@2020_2/2020/09/05/07-59-38-094_a4f221bc12bb5b91.webp","sourceBytes":203819,"destBytes":64506,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1298,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:37","host":"us-006*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"199 KB","destSize":"63 KB","compressRate":"31.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a254e4a8-5a02-44a1-a9e8-318639ea7a5f/2-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn75@2020_6/2020/09/05/07-59-37-969_ae4cd93ad52f450a.webp","sourceBytes":96180,"destBytes":23460,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1792,"convertSpendMs":53,"createdTime":"2020-09-05 15:59:37","host":"europe21*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"93.9 KB","destSize":"22.9 KB","compressRate":"24.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ee60f479-606f-44cd-80c7-ec168d9d54f3/sept-17-marylandpride-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn32@2020_1/2020/09/05/07-59-38-279_8c60d57bb703b0d2.webp","sourceBytes":74353,"destBytes":20944,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1229,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:37","host":"us-034*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"72.6 KB","destSize":"20.5 KB","compressRate":"28.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/20aa72e5-ee79-475b-aef7-5bcf6658b89b/porsche75-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn23@2020_6/2020/09/05/07-59-38-166_afa2c26b6d62ab0f.webp","sourceBytes":107555,"destBytes":10040,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1147,"convertSpendMs":20,"createdTime":"2020-09-05 15:59:37","host":"europe-56*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"105 KB","destSize":"9.8 KB","compressRate":"9.3%"},{"code":1,"isDone":false,"source":"https://mcusercontent.com/16b832d9ad4b28edf261f34df/images/f694b0f7-ddf6-4222-b949-e200fdfb04e4.png","sourceStatusCode":200,"destWidth":700,"destHeight":404,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn60@2020_4/2020/09/05/07-59-38-315_656fe9f8c91d3365.webp","sourceBytes":56078,"destBytes":36612,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":998,"convertSpendMs":17,"createdTime":"2020-09-05 15:59:38","host":"us-014*","referer":"https://smashingmagazine.com/2020/08/monthly-roundup-08-2020/","linkMd5ListStr":"0d1221073e95e6b7f05ac9daa2c3d55f","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"54.8 KB","destSize":"35.8 KB","compressRate":"65.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33e34a6d-ec7c-4dca-a8c1-59de00044491/porsche106-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":376,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn64@2020_6/2020/09/05/07-59-38-304_5403a61cdba3da20.webp","sourceBytes":112572,"destBytes":18592,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":994,"convertSpendMs":19,"createdTime":"2020-09-05 15:59:38","host":"us-002*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"109.9 KB","destSize":"18.2 KB","compressRate":"16.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/80c18fa2-4810-46f0-a020-dfcd598c09b2/aug-20-august-and-a-half-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn51@2020_5/2020/09/05/07-59-38-417_4428781ca1b2010c.webp","sourceBytes":37219,"destBytes":22660,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1254,"convertSpendMs":18,"createdTime":"2020-09-05 15:59:38","host":"us-039*","referer":"https://smashingmagazine.com/2020/07/desktop-wallpaper-calendars-august-2020/","linkMd5ListStr":"2685c4c3d7ebad88e71bc608c92ad423","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.3 KB","destSize":"22.1 KB","compressRate":"60.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b838ba5c-68f4-4d23-a6a5-34852f7c57b5/porsche186-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":470,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn40@2020_6/2020/09/05/07-59-38-416_6186aae820dc4cdd.webp","sourceBytes":162030,"destBytes":43808,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1344,"convertSpendMs":31,"createdTime":"2020-09-05 15:59:37","host":"us-010*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"158.2 KB","destSize":"42.8 KB","compressRate":"27%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1404583e-270a-411e-9a57-7390b9b56639/7-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":900,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn30@2020_1/2020/09/05/07-59-38-317_2e434935790e3744.webp","sourceBytes":129709,"destBytes":29702,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2314,"convertSpendMs":66,"createdTime":"2020-09-05 15:59:37","host":"europe-24*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"126.7 KB","destSize":"29 KB","compressRate":"22.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ac5d98a1-bcf6-4b16-ba6d-0b9aa25a913c/porsche37-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn72@2020_3/2020/09/05/07-59-38-663_6a9409550bc898bb.webp","sourceBytes":148851,"destBytes":27166,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1307,"convertSpendMs":109,"createdTime":"2020-09-05 15:59:38","host":"us-53*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"145.4 KB","destSize":"26.5 KB","compressRate":"18.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/71ef31c0-8569-47a7-ace3-b1f7b96d8149/visit-philadelphia-website-spruce-street-park.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn55@2020_5/2020/09/05/07-59-38-570_6bcc3d0251dbfedf.webp","sourceBytes":2571224,"destBytes":215158,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1544,"convertSpendMs":86,"createdTime":"2020-09-05 15:59:38","host":"us-026*","referer":"https://smashingmagazine.com/2020/08/design-website-five-senses/","linkMd5ListStr":"90139c1573575fffdbeaa42a49e64624","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.5 MB","destSize":"210.1 KB","compressRate":"8.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a7f225de-4fae-419c-b669-bacef0b8efe7/project-settings-comment-system-firebase.png","sourceStatusCode":200,"destWidth":1600,"destHeight":1097,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn79@2020_1/2020/09/05/07-59-38-709_e996cc524e175823.webp","sourceBytes":387376,"destBytes":59034,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1401,"convertSpendMs":80,"createdTime":"2020-09-05 15:59:38","host":"us-018*","referer":"https://smashingmagazine.com/2020/08/comment-system-firebase/","linkMd5ListStr":"d3941734f9d21fb1526a62ff1d7b9b2c","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"378.3 KB","destSize":"57.7 KB","compressRate":"15.2%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8f1bd4e4-e152-4deb-a1f8-37a173c95533/porsche160-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn84@2020_3/2020/09/05/07-59-38-728_ca3c97b242c3d511.webp","sourceBytes":312433,"destBytes":54488,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1397,"convertSpendMs":48,"createdTime":"2020-09-05 15:59:38","host":"us-006*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"305.1 KB","destSize":"53.2 KB","compressRate":"17.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/812581ce-773d-4db6-9d73-f78d2db6902f/google-hangouts-seconary-navigation.png","sourceStatusCode":200,"destWidth":1148,"destHeight":669,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn5@2020_5/2020/09/05/07-59-38-966_919f1b84497b436d.webp","sourceBytes":473410,"destBytes":32140,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1214,"convertSpendMs":35,"createdTime":"2020-09-05 15:59:38","host":"us-011*","referer":"https://smashingmagazine.com/2020/08/lessons-web-app-designers-learn-google/","linkMd5ListStr":"90050a70ad8778f8abad9e0a4b74cfcb","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"462.3 KB","destSize":"31.4 KB","compressRate":"6.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0c2e8592-27ee-4921-a9e3-3142dbdc5126/porsche61-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn54@2020_4/2020/09/05/07-59-38-541_79481169ed718651.webp","sourceBytes":393537,"destBytes":47804,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2668,"convertSpendMs":46,"createdTime":"2020-09-05 15:59:37","host":"europe66*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"384.3 KB","destSize":"46.7 KB","compressRate":"12.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4ceecd64-42dd-4614-8c3d-7d1f6717d5c2/etsy-scratch-n-sniff-stickers.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn96@2020_2/2020/09/05/07-59-38-852_da725c9ac52adc5c.webp","sourceBytes":888187,"destBytes":110888,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1497,"convertSpendMs":68,"createdTime":"2020-09-05 15:59:38","host":"us-034*","referer":"https://smashingmagazine.com/2020/08/design-website-five-senses/","linkMd5ListStr":"90139c1573575fffdbeaa42a49e64624","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"867.4 KB","destSize":"108.3 KB","compressRate":"12.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/80e3ba92-4cb4-40d4-ad47-4bc6849030ff/porsche138-sketch-tutorial-part-3.png","sourceStatusCode":200,"destWidth":800,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn17@2020_2/2020/09/05/07-59-39-047_8e7da3f50db48311.webp","sourceBytes":133197,"destBytes":17060,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1252,"convertSpendMs":33,"createdTime":"2020-09-05 15:59:38","host":"us-040*","referer":"https://smashingmagazine.com/2020/08/porsche-911-sketch-tutorial-part-3/","linkMd5ListStr":"3398e6d8c9b7be381f6ae875ed3287b9","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"130.1 KB","destSize":"16.7 KB","compressRate":"12.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/db4d2c7e-c7e8-42cb-a147-61f3c413bb0f/2-renaissance-no-code-web-designers.png","sourceStatusCode":200,"destWidth":1999,"destHeight":1163,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn100@2020_5/2020/09/05/07-59-38-705_f2f169053c842fc6.webp","sourceBytes":137321,"destBytes":55288,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2508,"convertSpendMs":68,"createdTime":"2020-09-05 15:59:37","host":"europe63*","referer":"https://smashingmagazine.com/2020/07/renaissance-no-code-web-designers/","linkMd5ListStr":"5dc2ee4cf02a8d13b4ca79f601851ab2","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"134.1 KB","destSize":"54 KB","compressRate":"40.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9dd67cf5-6ff0-4683-954e-1ea7c09a5a57/porsche31-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn26@2020_2/2020/09/05/07-59-39-184_0e9762ed0266d09c.webp","sourceBytes":155982,"destBytes":28736,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1246,"convertSpendMs":67,"createdTime":"2020-09-05 15:59:38","host":"us-015*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"152.3 KB","destSize":"28.1 KB","compressRate":"18.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/786f9a95-1882-4046-b1ce-38dd1499f894/porsche126-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn21@2020_1/2020/09/05/07-59-39-097_aa755995aab2c770.webp","sourceBytes":280933,"destBytes":48710,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1367,"convertSpendMs":67,"createdTime":"2020-09-05 15:59:38","host":"us-027*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"274.3 KB","destSize":"47.6 KB","compressRate":"17.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ad20716-d7ad-48c4-9103-ce2a52f21e2d/figure-04-client-side-graphql-apollo-client-react-apps.png","sourceStatusCode":200,"destWidth":1095,"destHeight":227,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn30@2020_2/2020/09/05/07-59-39-302_656c26ece0a93844.webp","sourceBytes":22622,"destBytes":17790,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1329,"convertSpendMs":22,"createdTime":"2020-09-05 15:59:38","host":"us-003*","referer":"https://smashingmagazine.com/2020/07/client-side-graphql-apollo-client-react-apps/","linkMd5ListStr":"2de9e609eb9cf95b580b73d5f31a0743","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.1 KB","destSize":"17.4 KB","compressRate":"78.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b8a33360-66fc-433c-bd7f-cccdd33b88f7/online-smashingconf-aus-small.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn46@2020_3/2020/09/05/07-59-39-307_04a0a07a826e04ef.svg","sourceBytes":22755,"destBytes":22755,"feedId":9306,"totalSpendMs":1197,"convertSpendMs":0,"createdTime":"2020-09-05 15:59:38","host":"us-019*","referer":"https://smashingmagazine.com/2020/08/smashingconf-live-august-wrapup/","linkMd5ListStr":"a9cb53d45a0e601abe8e7d8fe024bba5","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.2 KB","destSize":"22.2 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1df4f5ef-6a1e-4ec2-8962-8a01f86a443e/16-static-blog-sapper-strapi.png","sourceStatusCode":200,"destWidth":1600,"destHeight":909,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn25@2020_2/2020/09/05/07-59-39-079_82572cd9ad303a00.webp","sourceBytes":138425,"destBytes":26414,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2177,"convertSpendMs":62,"createdTime":"2020-09-05 15:59:37","host":"europe-57*","referer":"https://smashingmagazine.com/2020/08/static-blog-sapper-strapi/","linkMd5ListStr":"04f983498c330e5d7ff840935749afba","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"135.2 KB","destSize":"25.8 KB","compressRate":"19.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/993259ad-e775-4b66-90a0-273621bf5cdb/issue-11-06-inspired-design-decisions-emmett-mcbain.png","sourceStatusCode":200,"destWidth":1496,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn62@2020_5/2020/09/05/07-59-39-371_5ce84630050252d9.webp","sourceBytes":44942,"destBytes":26478,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1211,"convertSpendMs":18,"createdTime":"2020-09-05 15:59:38","host":"us-035*","referer":"https://smashingmagazine.com/2020/07/inspired-design-decisions-emmett-mcbain/","linkMd5ListStr":"6d77beab5e26415895dfcce7df4ea0ba","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43.9 KB","destSize":"25.9 KB","compressRate":"58.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b060076d-0b58-4066-b4ba-93f1e6496b6b/cloud-firestore-comment-system-firebase.png","sourceStatusCode":200,"destWidth":1600,"destHeight":834,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn37@2020_6/2020/09/05/07-59-39-375_5e29cbd9e58bffe1.webp","sourceBytes":463219,"destBytes":63986,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1339,"convertSpendMs":83,"createdTime":"2020-09-05 15:59:38","host":"us-54*","referer":"https://smashingmagazine.com/2020/08/comment-system-firebase/","linkMd5ListStr":"d3941734f9d21fb1526a62ff1d7b9b2c","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"452.4 KB","destSize":"62.5 KB","compressRate":"13.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a719238c-9804-4f8b-ab14-fff42e476106/porsche23-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn100@2020_6/2020/09/05/07-59-39-399_bf0a379f3386fd5a.webp","sourceBytes":422247,"destBytes":47818,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1728,"convertSpendMs":110,"createdTime":"2020-09-05 15:59:38","host":"us-022*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"412.4 KB","destSize":"46.7 KB","compressRate":"11.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d8fafcd8-8f1c-4e69-8afe-4d0746037444/def-order-demystifying-djangos-magicpng.png","sourceStatusCode":200,"destWidth":1366,"destHeight":704,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn65@2020_3/2020/09/05/07-59-39-404_c29e8a78cd7fe268.webp","sourceBytes":33639,"destBytes":16450,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1277,"convertSpendMs":36,"createdTime":"2020-09-05 15:59:39","host":"us-023*","referer":"https://smashingmagazine.com/2020/08/demystifying-djangos-magic/","linkMd5ListStr":"90725d421e0a2e80cbc6fae6b90f5416","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.9 KB","destSize":"16.1 KB","compressRate":"48.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0f9402dc-f86c-484f-9961-f42b198f9a1e/add-collection-comment-system-firebase.png","sourceStatusCode":200,"destWidth":1600,"destHeight":1142,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn41@2020_2/2020/09/05/07-59-39-369_d8a47c58f0b22b5c.webp","sourceBytes":106481,"destBytes":30976,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1342,"convertSpendMs":64,"createdTime":"2020-09-05 15:59:38","host":"us-031*","referer":"https://smashingmagazine.com/2020/08/comment-system-firebase/","linkMd5ListStr":"d3941734f9d21fb1526a62ff1d7b9b2c","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"104 KB","destSize":"30.2 KB","compressRate":"29.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e1abbde2-fd45-4a3d-91c4-25e4a9de28ac/fig-04-final-app-diary-entries-page.png","sourceStatusCode":200,"destWidth":1600,"destHeight":826,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn50@2020_4/2020/09/05/07-59-39-365_777901b936afb824.webp","sourceBytes":82630,"destBytes":21980,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1350,"convertSpendMs":46,"createdTime":"2020-09-05 15:59:38","host":"us-007*","referer":"https://smashingmagazine.com/2020/08/redux-real-world-application/","linkMd5ListStr":"cdfbc1833104e26676bb8df00a8b2a3c","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"80.7 KB","destSize":"21.5 KB","compressRate":"26.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/acba0f8b-a698-4633-b0d4-eda05367ec8f/color-split-application-color-schemes-css-custom-propertiespng.png","sourceStatusCode":200,"destWidth":1132,"destHeight":864,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn91@2020_5/2020/09/05/07-59-39-123_f6cfdf38243dc556.webp","sourceBytes":227550,"destBytes":81244,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1891,"convertSpendMs":54,"createdTime":"2020-09-05 15:59:38","host":"europe-57*","referer":"https://smashingmagazine.com/2020/08/application-color-schemes-css-custom-properties/","linkMd5ListStr":"1d07a3a7ea9e5c230cc1a792c9ee5246","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"222.2 KB","destSize":"79.3 KB","compressRate":"35.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/545444ca-5147-4994-bb83-5dd5e5156f57/sep-19-put-some-green-everywhere-preview-opt.png","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn9@2020_6/2020/09/05/07-59-38-913_011fae18ea8b5f12.webp","sourceBytes":275274,"destBytes":79002,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1657,"convertSpendMs":34,"createdTime":"2020-09-05 15:59:38","host":"europe-24*","referer":"https://smashingmagazine.com/2020/08/desktop-wallpaper-calendars-september-2020/","linkMd5ListStr":"51e5460699d28b8a80a36aec6d35537f","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"268.8 KB","destSize":"77.2 KB","compressRate":"28.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e750f078-6783-4f04-a17e-a2f749db0ff9/porsche14-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn43@2020_6/2020/09/05/07-59-39-311_3e520e3566617224.webp","sourceBytes":192182,"destBytes":17496,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2248,"convertSpendMs":59,"createdTime":"2020-09-05 15:59:38","host":"europe-23*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"187.7 KB","destSize":"17.1 KB","compressRate":"9.1%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e9176f63-71d8-4c5c-bb59-ff086506cda5/google-search-most-trusted-brands.png","sourceStatusCode":200,"destWidth":1425,"destHeight":789,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn69@2020_3/2020/09/05/07-59-39-444_c611c4524064a4e9.webp","sourceBytes":212867,"destBytes":77168,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1438,"convertSpendMs":55,"createdTime":"2020-09-05 15:59:39","host":"us-011*","referer":"https://smashingmagazine.com/2020/08/clients-backlinks-design/","linkMd5ListStr":"8be8634c820c7dc900f70d342c72e08a","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"207.9 KB","destSize":"75.4 KB","compressRate":"36.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1d4706f6-71bf-4b03-a918-0820e476e224/issue-12-11-inspired-design-decisions-bradbury-thompson.png","sourceStatusCode":200,"destWidth":2880,"destHeight":2048,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn33@2020_3/2020/09/05/07-59-38-918_6ba5321b0d26a63d.webp","sourceBytes":785604,"destBytes":266422,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3430,"convertSpendMs":357,"createdTime":"2020-09-05 15:59:37","host":"europe62*","referer":"https://smashingmagazine.com/2020/08/inspired-design-decisions-bradbury-thompson/","linkMd5ListStr":"491501cfc09088ead274778300d9b170","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"767.2 KB","destSize":"260.2 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/076661fe-a189-4f8e-aa86-01b489d97bdb/porsche54-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":550,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn78@2020_3/2020/09/05/07-59-39-463_0cd2c3fada36418e.webp","sourceBytes":253204,"destBytes":21476,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1284,"convertSpendMs":37,"createdTime":"2020-09-05 15:59:39","host":"europe62*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"247.3 KB","destSize":"21 KB","compressRate":"8.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/01f2121c-7b89-4f45-a808-5359671e44b7/fig-01-application-data-model.png","sourceStatusCode":200,"destWidth":1500,"destHeight":1165,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn48@2020_5/2020/09/05/07-59-39-455_c7af8da943052326.webp","sourceBytes":179876,"destBytes":44192,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2554,"convertSpendMs":100,"createdTime":"2020-09-05 15:59:38","host":"europe61*","referer":"https://smashingmagazine.com/2020/08/redux-real-world-application/","linkMd5ListStr":"cdfbc1833104e26676bb8df00a8b2a3c","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"175.7 KB","destSize":"43.2 KB","compressRate":"24.6%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/22459350-2fd5-4cc9-9c53-9644e878e848/porsche73-sketch-tutorial-part-2.png","sourceStatusCode":200,"destWidth":1920,"destHeight":700,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn33@2020_2/2020/09/05/07-59-39-658_94a41a4baf7f0024.webp","sourceBytes":257829,"destBytes":53304,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1853,"convertSpendMs":62,"createdTime":"2020-09-05 15:59:38","host":"europe66*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-2/","linkMd5ListStr":"98f381c2c21b71537b96366addc8ca07","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"251.8 KB","destSize":"52.1 KB","compressRate":"20.7%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/94433c92-e2ec-4e67-a816-0cda8ec839fe/porsche07-sketch-tutorial-part-1.png","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn14@2020_4/2020/09/05/07-59-39-838_9a5a2aa5811d69ff.webp","sourceBytes":62812,"destBytes":10554,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2082,"convertSpendMs":75,"createdTime":"2020-09-05 15:59:38","host":"europe62*","referer":"https://smashingmagazine.com/2020/07/porsche-911-sketch-tutorial-part-1/","linkMd5ListStr":"8c330b5b2eb90530988935b001f6de03","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"61.3 KB","destSize":"10.3 KB","compressRate":"16.8%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/33a190f4-23db-4dd1-98e0-756937bc99a6/5-building-react-apps-storybook.png","sourceStatusCode":200,"destWidth":1360,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn57@2020_3/2020/09/05/07-59-39-875_df9f0f89c133024f.webp","sourceBytes":41113,"destBytes":18652,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":1840,"convertSpendMs":61,"createdTime":"2020-09-05 15:59:39","host":"europe-58*","referer":"https://smashingmagazine.com/2020/09/building-react-apps-storybook/","linkMd5ListStr":"a4dec1fe83c49a7924bf09761305d38c","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"40.1 KB","destSize":"18.2 KB","compressRate":"45.4%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a2278821-a2b8-42d6-bb65-6bf14e59e94c/accessibility-chrome-devtools-lighthouse.png","sourceStatusCode":200,"destWidth":3394,"destHeight":2198,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn76@2020_6/2020/09/05/07-59-39-889_4fd9cedb953acf55.webp","sourceBytes":635709,"destBytes":326118,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2806,"convertSpendMs":825,"createdTime":"2020-09-05 15:59:38","host":"us-030*","referer":"https://smashingmagazine.com/2020/08/accessibility-chrome-devtools/","linkMd5ListStr":"692062341a74418e56f3a5d4d97a92e4","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"620.8 KB","destSize":"318.5 KB","compressRate":"51.3%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/63229015-b46c-433c-9041-24f9cd4702c2/postman-response-3-api-flask-google-cloud-sql-app-engine.png","sourceStatusCode":200,"destWidth":1736,"destHeight":804,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn74@2020_3/2020/09/05/07-59-40-261_41714f01ea564a26.webp","sourceBytes":88442,"destBytes":29594,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":2189,"convertSpendMs":76,"createdTime":"2020-09-05 15:59:39","host":"europe-24*","referer":"https://smashingmagazine.com/2020/08/api-flask-google-cloudsql-app-engine/","linkMd5ListStr":"c0c90bc439e4ce9cd85d62b390813994,c0c90bc439e4ce9cd85d62b390813994","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"86.4 KB","destSize":"28.9 KB","compressRate":"33.5%"},{"code":1,"isDone":false,"source":"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4c2c1f23-263a-4686-aecd-2b0774454b0b/4-renaissance-no-code-web-designers.jpg","sourceStatusCode":200,"destWidth":1920,"destHeight":1201,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn54@2020_6/2020/09/05/07-59-40-895_3019922163c9c1fd.webp","sourceBytes":1115038,"destBytes":407624,"targetWebpQuality":75,"feedId":9306,"totalSpendMs":3531,"convertSpendMs":210,"createdTime":"2020-09-05 15:59:39","host":"europe70*","referer":"https://smashingmagazine.com/2020/07/renaissance-no-code-web-designers/","linkMd5ListStr":"5dc2ee4cf02a8d13b4ca79f601851ab2","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.1 MB","destSize":"398.1 KB","compressRate":"36.6%"}],"successGithubMap":{"myreaderx8":20,"myreaderx7":20,"myreaderx15":19,"myreaderx6":20,"myreaderx16":19,"myreaderx32":21,"myreaderx4":19,"myreaderx10":20,"myreaderx11":20,"myreaderx3":20,"myreaderx33":18,"myreaderx2":21,"myreaderx12":20,"myreaderx13":20,"myreaderx1":18,"myreaderx30":21,"myreaderx31":20,"myreaderx18":21,"myreaderx19":20,"myreaderx":19,"myreaderx25":20,"myreaderx27":21,"myreaderx21":18,"myreaderx22":20,"myreaderx24":21,"myreaderx5oss":19,"myreaderx29":20},"failGithubMap":{"myreaderx14":21,"myreaderx23":19}}