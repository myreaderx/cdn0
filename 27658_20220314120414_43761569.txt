{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2022-03-14 20:03:48","updatedTime":"2022-03-14 20:03:48","title":"Spark CommitCoordinator 保证数据一致性","link":"http://www.jasongj.com/spark/committer/","description":"<blockquote>\n <p>原创文章，转载请务必将下面这段话置于文章开头处。<br>本文转发自<a href=\"http://www.jasongj.com\"><strong>技术世界</strong></a>，<a href=\"http://www.jasongj.com/spark/committer\">原文链接</a>　<a href=\"http://www.jasongj.com/spark/committer/\">http://www.jasongj.com/spark/committer/</a></br></p>\n</blockquote>\n<blockquote>\n <p>本文所述内容均基于 2018年9月17日 Spark 最新 Release 2.3.1 版本，以及 hadoop-2.6.0-cdh-5.4.4</p>\n</blockquote>\n<h1 id=\"概述\"><a href=\"http://www.jasongj.com/spark/committer/#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h1>\n<p>Spark 输出数据到 HDFS 时，需要解决如下问题：</p>\n<ul>\n <li>由于多个 Task 同时写数据到 HDFS，如何保证要么所有 Task 写的所有文件要么同时对外可见，要么同时对外不可见，即保证数据一致性</li>\n <li>同一 Task 可能因为 Speculation 而存在两个完全相同的 Task 实例写相同的数据到 HDFS中，如何保证只有一个 commit 成功</li>\n <li>对于大 Job（如具有几万甚至几十万 Task），如何高效管理所有文件</li>\n</ul>\n<h1 id=\"commit-原理\"><a href=\"http://www.jasongj.com/spark/committer/#commit-原理\" class=\"headerlink\" title=\"commit 原理\"></a>commit 原理</h1>\n<p>本文通过 Local mode 执行如下 Spark 程序详解 commit 原理<br>\n  <figure class=\"highlight scala\">\n   <table>\n    <tr>\n     <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br /></br></br></pre></td>\n     <td class=\"code\"><pre><span class=\"line\">sparkContext.textFile(<span class=\"string\">\"/json/input.zstd\"</span>)</span><br><span class=\"line\">  .map(_.split(<span class=\"string\">\",\"</span>))</span><br><span class=\"line\">  .saveAsTextFile(<span class=\"string\">\"/jason/test/tmp\"</span>)</span><br /></br></br></pre></td>\n    </tr>\n   </table>\n  </figure></br></p>\n<p>在详述 commit 原理前，需要说明几个述语</p>\n<ul>\n <li>Task，即某个 Application 的某个 Job 内的某个 Stage 的一个 Task</li>\n <li>TaskAttempt，Task 每次执行都视为一个 TaskAttempt。对于同一个 Task，可能同时存在多个 TaskAttemp</li>\n <li>Application Attempt，即 Application 的一次执行</li>\n</ul>\n<p>在本文中，会使用如下缩写</p>\n<ul>\n <li>${output.dir.root} 即输出目录根路径</li>\n <li>${appAttempt} 即 Application Attempt ID，为整型，从 0 开始</li>\n <li>${taskAttemp} 即 Task Attetmp ID，为整型，从 0 开始</li>\n</ul>\n<h2 id=\"检查-Job-输出目录\"><a href=\"http://www.jasongj.com/spark/committer/#检查-Job-输出目录\" class=\"headerlink\" title=\"检查 Job 输出目录\"></a>检查 Job 输出目录</h2>\n<p>在启动 Job 之前，Driver 首先通过 FileOutputFormat 的 checkOutputSpecs 方法检查输出目录是否已经存在。若已存在，则直接抛出 <em>FileAlreadyExistsException</em><br><img src=\"http://www.jasongj.com/img/spark/spark5_committer/check_output_path.png\" alt=\"Check output path\" /></br></p>\n<h2 id=\"Driver执行setupJob\"><a href=\"http://www.jasongj.com/spark/committer/#Driver执行setupJob\" class=\"headerlink\" title=\"Driver执行setupJob\"></a>Driver执行setupJob</h2>\n<p>Job 开始前，由 Driver（本例使用 local mode，因此由 main 线程执行）调用 FileOuputCommitter.setupJob 创建 Application Attempt 目录，即 ${output.dir.root}/_temporary/${appAttempt}<br><img src=\"http://www.jasongj.com/img/spark/spark5_committer/setup_job.png\" alt=\"Setup job\" /></br></p>\n<h2 id=\"Task执行setupTask\"><a href=\"http://www.jasongj.com/spark/committer/#Task执行setupTask\" class=\"headerlink\" title=\"Task执行setupTask\"></a>Task执行setupTask</h2>\n<p>由各 Task 执行 FileOutputCommitter.setupTask 方法（本例使用 local mode，因此由 task 线程执行）。该方法不做任何事情，因为 Task 临时目录由 Task 按需创建。<br><img width=\"80%\" style=\"margin: 0 auto;\" src=\"http://www.jasongj.com/img/spark/spark5_committer/setup_task.png\" alt=\"Setup task\" /></br></p>\n<h2 id=\"按需创建-Task-目录\"><a href=\"http://www.jasongj.com/spark/committer/#按需创建-Task-目录\" class=\"headerlink\" title=\"按需创建 Task 目录\"></a>按需创建 Task 目录</h2>\n<p>本例中，Task 写数据需要通过 <em>TextOutputFormat</em> 的 <em>getRecordWriter</em> 方法创建 <em>LineRecordWriter</em>。而创建前需要通过 <em>FileOutputFormat.getTaskOutputPath</em>设置 Task 输出路径，即 <code>${output.dir.root}/_temporary/${appAttempt}/_temporary/${taskAttempt}/${fileName}</code>。该 Task Attempt 所有数据均写在该目录下的文件内<br><img src=\"http://www.jasongj.com/img/spark/spark5_committer/create_task_output_file.png\" alt=\"Create task output file\" /></br></p>\n<h2 id=\"检查是否需要-commit\"><a href=\"http://www.jasongj.com/spark/committer/#检查是否需要-commit\" class=\"headerlink\" title=\"检查是否需要 commit\"></a>检查是否需要 commit</h2>\n<p>Task 执行数据写完后，通过 FileOutputCommitter.needsTaskCommit 方法检查是否需要 commit 它写在 <code>${output.dir.root}/_temporary/${appAttempt}/_temporary/${taskAttempt}</code> 下的数据。</p>\n<p>检查依据是 <code>${output.dir.root}/_temporary/${appAttempt}/_temporary/${taskAttempt}</code> 目录是否存在<br><img src=\"http://www.jasongj.com/img/spark/spark5_committer/need_commit_task.png\" alt=\"Need commmit task\" /></br></p>\n<p>如果需要 commit，并且开启了 Output commit coordination，还需要通过 RPC 由 Driver 侧的 OutputCommitCoordinator 判断该 Task Attempt 是否可以 commit<br><img src=\"http://www.jasongj.com/img/spark/spark5_committer/need_commit_task_detail.png\" alt=\"Need commmit task detail\" /></br></p>\n<p>之所以需要由 Driver 侧的 CommitCoordinator 判断是否可以 commit，是因为可能由于 speculation 或者其它原因（如之前的 TaskAttemp 未被 Kill 成功）存在同一 Task 的多个 Attemp 同时写数据且都申请 commit 的情况。</p>\n<h2 id=\"CommitCoordinator\"><a href=\"http://www.jasongj.com/spark/committer/#CommitCoordinator\" class=\"headerlink\" title=\"CommitCoordinator\"></a>CommitCoordinator</h2>\n<p>当申请 commitTask 的 TaskAttempt 为失败的 Attempt，则直接拒绝</p>\n<p>若该 TaskAttempt 成功，并且 CommitCoordinator 未允许过该 Task 的其它 Attempt 的 commit 请求，则允许该 TaskAttempt 的 commit 请求</p>\n<p>若 CommitCoordinator 之前已允许过该 TaskAttempt 的 commit 请求，则继续同意该 TaskAttempt 的 commit 请求，即 CommitCoordinator 对该申请的处理是幂等的。</p>\n<p>若该 TaskAttempt 成功，且 CommitCoordinator 之前已允许该 Task 的其它 Attempt 的 commit 请求，则直接拒绝当前 TaskAttempt 的 commit 请求<br><img src=\"http://www.jasongj.com/img/spark/spark5_committer/coordinator_handle_request.png\" alt=\"Coordinator handle request\" /></br></p>\n<p>OutputCommitCoordinator 为了实现上述功能，为每个 ActiveStage 维护一个如下 StageState<br>\n  <figure class=\"highlight scala\">\n   <table>\n    <tr>\n     <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br /></br></br></br></pre></td>\n     <td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">case</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">StageState</span>(<span class=\"params\">numPartitions: <span class=\"type\">Int</span></span>) </span>{</span><br><span class=\"line\">  <span class=\"keyword\">val</span> authorizedCommitters = <span class=\"type\">Array</span>.fill[<span class=\"type\">TaskAttemptNumber</span>](numPartitions)(<span class=\"type\">NO_AUTHORIZED_COMMITTER</span>)</span><br><span class=\"line\">  <span class=\"keyword\">val</span> failures = mutable.<span class=\"type\">Map</span>[<span class=\"type\">PartitionId</span>, mutable.<span class=\"type\">Set</span>[<span class=\"type\">TaskAttemptNumber</span>]]()</span><br><span class=\"line\">  }</span><br /></br></br></br></pre></td>\n    </tr>\n   </table>\n  </figure></br></p>\n<p>该数据结构中，保存了每个 Task 被允许 commit 的 TaskAttempt。默认值均为 <em>NO_AUTHORIZED_COMMITTER</em></p>\n<p>同时，保存了每个 Task 的所有失败的 Attempt</p>\n<h2 id=\"commitTask\"><a href=\"http://www.jasongj.com/spark/committer/#commitTask\" class=\"headerlink\" title=\"commitTask\"></a>commitTask</h2>\n<p>当 TaskAttempt 被允许 commit 后，Task (本例由于使用 local model，因此由 task 线程执行)会通过如下方式 commitTask。</p>\n<p>当 <code>mapreduce.fileoutputcommitter.algorithm.version</code> 的值为 1 (默认值)时，Task 将 taskAttemptPath 即 <code>${output.dir.root}/_temporary/${appAttempt}/_temporary/${taskAttempt}</code> 重命令为 committedTaskPath 即 <code>${output.dir.root}/_temporary/${appAttempt}/${taskAttempt}</code><br><img src=\"http://www.jasongj.com/img/spark/spark5_committer/commit_task_v1.png\" alt=\"Commit task v1\" /></br></p>\n<p>若 <code>mapreduce.fileoutputcommitter.algorithm.version</code> 的值为 2，直接将taskAttemptPath 即 <code>${output.dir.root}/_temporary/${appAttempt}/_temporary/${taskAttempt}</code> 内的所有文件移动到 outputPath 即 <code>${output.dir.root}/</code><br><img src=\"http://www.jasongj.com/img/spark/spark5_committer/commit_task_v2.png\" alt=\"Commit task v2\" /></br></p>\n<h2 id=\"commitJob\"><a href=\"http://www.jasongj.com/spark/committer/#commitJob\" class=\"headerlink\" title=\"commitJob\"></a>commitJob</h2>\n<p>当所有 Task 都执行成功后，由 Driver （本例由于使用 local model，故由 main 线程执行）执行 <code>FileOutputCommitter.commitJob</code></p>\n<p>若 <code>mapreduce.fileoutputcommitter.algorithm.version</code> 的值为 1，则由 Driver 单线程遍历所有 committedTaskPath 即 <code>${output.dir.root}/_temporary/${appAttempt}/${taskAttempt}</code>，并将其下所有文件移动到 finalOutput 即 <code>${output.dir.root}</code> 下<br><img src=\"http://www.jasongj.com/img/spark/spark5_committer/commit_job_v1.png\" alt=\"Commit job v1\" /></br></p>\n<p>若 <code>mapreduce.fileoutputcommitter.algorithm.version</code> 的值为 2，则无须移动任何文件。因为所有 Task 的输出文件已在 commitTask 内被移动到 finalOutput 即 <code>${output.dir.root}</code> 内<br><img src=\"http://www.jasongj.com/img/spark/spark5_committer/commit_job_v2.png\" alt=\"Commit job v2\" /></br></p>\n<p>所有 commit 过的 Task 输出文件移动到 finalOutput 即 <code>${output.dir.root}</code> 后，Driver 通过 cleanupJob 删除 <code>${output.dir.root}/_temporary/</code> 下所有内容<br><img width=\"70%\" style=\"margin: 0 auto;\" src=\"http://www.jasongj.com/img/spark/spark5_committer/cleanup_job.png\" alt=\"Cleanup job\" /></br></p>\n<h2 id=\"recoverTask\"><a href=\"http://www.jasongj.com/spark/committer/#recoverTask\" class=\"headerlink\" title=\"recoverTask\"></a>recoverTask</h2>\n<p>上文所述的 commitTask 与 commitJob 机制，保证了一次 Application Attemp 中不同 Task 的不同 Attemp 在 commit 时的数据一致性</p>\n<p>而当整个 Application retry 时，在之前的 Application Attemp 中已经成功 commit 的 Task 无须重新执行，其数据可直接恢复</p>\n<p>恢复 Task 时，先获取上一次的 Application Attempt，以及对应的 committedTaskPath，即 <code>${output.dir.root}/_temporary/${preAppAttempt}/${taskAttempt}</code></p>\n<p>若 <code>mapreduce.fileoutputcommitter.algorithm.version</code> 的值为 1，并且 preCommittedTaskPath 存在（说明在之前的 Application Attempt 中该 Task 已被 commit 过），则直接将 preCommittedTaskPath 重命名为 committedTaskPath</p>\n<p>若 <code>mapreduce.fileoutputcommitter.algorithm.version</code> 的值为 2，无须恢复任何数据，因为在之前 Application Attempt 中 commit 过的 Task 的数据已经在 commitTask 中被移动到 <code>${output.dir.root}</code> 中<br><img src=\"http://www.jasongj.com/img/spark/spark5_committer/recover_task.png\" alt=\"Recover task\" /></br></p>\n<h2 id=\"abortTask\"><a href=\"http://www.jasongj.com/spark/committer/#abortTask\" class=\"headerlink\" title=\"abortTask\"></a>abortTask</h2>\n<p>中止 Task 时，由 Task 调用 <code>FileOutputCommitter.abortTask</code> 方法删除 <code>${output.dir.root}/_temporary/${appAttempt}/_temporary/${taskAttempt}</code><br><img src=\"http://www.jasongj.com/img/spark/spark5_committer/abort_task.png\" alt=\"Abort task\" /></br></p>\n<h2 id=\"abortJob\"><a href=\"http://www.jasongj.com/spark/committer/#abortJob\" class=\"headerlink\" title=\"abortJob\"></a>abortJob</h2>\n<p>中止 Job 由 Driver 调用 <code>FileOutputCommitter.abortJob</code> 方法完成。该方法通过 <code>FileOutputCommitter.cleanupJob</code> 方法删除 <code>${output.dir.root}/_temporary</code></p>\n<h1 id=\"总结\"><a href=\"http://www.jasongj.com/spark/committer/#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1>\n<h2 id=\"V1-vs-V2-committer-过程\"><a href=\"http://www.jasongj.com/spark/committer/#V1-vs-V2-committer-过程\" class=\"headerlink\" title=\"V1 vs. V2 committer 过程\"></a>V1 vs. V2 committer 过程</h2>\n<p>V1 committer（即 <code>mapreduce.fileoutputcommitter.algorithm.version</code> 的值为 1），commit 过程如下</p>\n<ul>\n <li>Task 线程将 TaskAttempt 数据写入 <code>${output.dir.root}/_temporary/${appAttempt}/_temporary/${taskAttempt}</code></li>\n <li>commitTask 由 Task 线程将 <code>${output.dir.root}/_temporary/${appAttempt}/_temporary/${taskAttempt}</code> 移动到 <code>${output.dir.root}/_temporary/${appAttempt}/${taskAttempt}</code></li>\n <li>commitJob 由 Driver 单线程依次将所有 <code>${output.dir.root}/_temporary/${appAttempt}/${taskAttempt}</code> 移动到 <code>${output.dir.root}</code>，然后创建 <code>_SUCCESS</code> 标记文件</li>\n <li>recoverTask 由 Task 线程将 <code>${output.dir.root}/_temporary/${preAppAttempt}/${preTaskAttempt}</code> 移动到 <code>${output.dir.root}/_temporary/${appAttempt}/${taskAttempt}</code></li>\n</ul>\n<p>V2 committer（即 <code>mapreduce.fileoutputcommitter.algorithm.version</code> 的值为 2），commit 过程如下</p>\n<ul>\n <li>Task 线程将 TaskAttempt 数据写入 <code>${output.dir.root}/_temporary/${appAttempt}/_temporary/${taskAttempt}</code></li>\n <li>commitTask 由 Task 线程将 <code>${output.dir.root}/_temporary/${appAttempt}/_temporary/${taskAttempt}</code> 移动到 <code>${output.dir.root}</code></li>\n <li>commitJob 创建 <code>_SUCCESS</code> 标记文件</li>\n <li>recoverTask 无需任何操作</li>\n</ul>\n<h2 id=\"V1-vs-V2-committer-性能对比\"><a href=\"http://www.jasongj.com/spark/committer/#V1-vs-V2-committer-性能对比\" class=\"headerlink\" title=\"V1 vs. V2 committer 性能对比\"></a>V1 vs. V2 committer 性能对比</h2>\n<p>V1 在 Job 执行结束后，在 Driver 端通过 commitJob 方法，单线程串行将所有 Task 的输出文件移动到输出根目录。移动以文件为单位，当 Task 个数较多（大 Job，或者小文件引起的大量小 Task），Name Node RPC 较慢时，该过程耗时较久。在实践中，可能因此发生所有 Task 均执行结束，但 Job 不结束的问题。甚至 commitJob 耗时比 所有 Task 执行时间还要长</p>\n<p>而 V2 在 Task 结束后，由 Task 在 commitTask 方法内，将自己的数据文件移动到输出根目录。一方面，Task 结束时即移动文件，不需等待 Job 结束才移动文件，即文件移动更早发起，也更早结束。另一方面，不同 Task 间并行移动文件，极大缩短了整个 Job 内所有 Task 的文件移动耗时</p>\n<h2 id=\"V1-vs-V2-committer-一致性对比\"><a href=\"http://www.jasongj.com/spark/committer/#V1-vs-V2-committer-一致性对比\" class=\"headerlink\" title=\"V1 vs. V2 committer 一致性对比\"></a>V1 vs. V2 committer 一致性对比</h2>\n<p>V1 只有 Job 结束，才会将数据文件移动到输出根目录，才会对外可见。在此之前，所有文件均在 <code>${output.dir.root}/_temporary/${appAttempt}</code> 及其子文件内，对外不可见。</p>\n<p>当 commitJob 过程耗时较短时，其失败的可能性较小，可认为 V1 的 commit 过程是两阶段提交，要么所有 Task 都 commit 成功，要么都失败。</p>\n<p>而由于上文提到的问题， commitJob 过程可能耗时较久，如果在此过程中，Driver 失败，则可能发生部分 Task 数据被移动到 ${output.dir.root} 对外可见，部分 Task 的数据未及时移动，对外不可见的问题。此时发生了数据不一致性的问题</p>\n<p>V2 当 Task 结束时，立即将数据移动到 ${output.dir.root}，立即对外可见。如果 Application 执行过程中失败了，已 commit 的 Task 数据仍然对外可见，而失败的 Task 数据或未被 commit 的 Task 数据对外不可见。也即 V2 更易发生数据一致性问题</p>\n<h1 id=\"Spark-系列文章\"><a href=\"http://www.jasongj.com/spark/committer/#Spark-系列文章\" class=\"headerlink\" title=\"Spark 系列文章\"></a>Spark 系列文章</h1>\n<ul>\n <li><a href=\"http://www.jasongj.com/spark/skew/\">Spark性能优化之道——解决Spark数据倾斜（Data Skew）的N种姿势</a></li>\n <li><a href=\"http://www.jasongj.com/spark/rbo/\">Spark SQL / Catalyst 内部原理 与 RBO</a></li>\n <li><a href=\"http://www.jasongj.com/spark/cbo/\">Spark SQL 性能优化再进一步 CBO 基于代价的优化</a></li>\n <li><a href=\"http://www.jasongj.com/spark/committer/\">Spark CommitCoordinator 保证数据一致性</a></li>\n <li><a href=\"http://www.jasongj.com/spark/ci_cd/\">Spark 灰度发布在十万级节点上的成功实践 CI CD</a></li>\n</ul>","descriptionType":"html","publishedDate":"Tue, 25 Sep 2018 23:20:13 +0000","feedId":27658,"bgimg":"http://www.jasongj.com/img/spark/spark5_committer/check_output_path.png","linkMd5":"567fecb59e7f904fcdc73f1eb0e8ccc2","destWidth":1516,"destHeight":1084,"sourceBytes":411454,"destBytes":181020,"author":"","articleImgCdnMap":{"http://www.jasongj.com/img/spark/spark5_committer/check_output_path.png":null,"http://www.jasongj.com/img/spark/spark5_committer/setup_job.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn17@2020_3/2022/03/14/12-04-01-370_faf843c52ae5c3fd.webp","http://www.jasongj.com/img/spark/spark5_committer/setup_task.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn21@2020_4/2022/03/14/12-03-55-857_3927ec251df9205d.webp","http://www.jasongj.com/img/spark/spark5_committer/create_task_output_file.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn8@2020_3/2022/03/14/12-04-01-646_7d580a1a3f17782c.webp","http://www.jasongj.com/img/spark/spark5_committer/need_commit_task.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn45@2020_6/2022/03/14/12-03-59-875_19046e0a39f8661f.webp","http://www.jasongj.com/img/spark/spark5_committer/need_commit_task_detail.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn50@2020_5/2022/03/14/12-03-59-750_989d3c506a6012a5.webp","http://www.jasongj.com/img/spark/spark5_committer/coordinator_handle_request.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn25@2020_1/2022/03/14/12-04-00-615_2d95fd4039578a9e.webp","http://www.jasongj.com/img/spark/spark5_committer/commit_task_v1.png":null,"http://www.jasongj.com/img/spark/spark5_committer/commit_task_v2.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn37@2020_4/2022/03/14/12-04-01-761_5623c528bbd2ba9c.webp","http://www.jasongj.com/img/spark/spark5_committer/commit_job_v1.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn51@2020_1/2022/03/14/12-04-01-414_2b0321ee092025bc.webp","http://www.jasongj.com/img/spark/spark5_committer/commit_job_v2.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn5@2020_5/2022/03/14/12-04-14-136_dd790921148b4167.webp","http://www.jasongj.com/img/spark/spark5_committer/cleanup_job.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn29@2020_3/2022/03/14/12-03-56-927_a61321c168460f63.webp","http://www.jasongj.com/img/spark/spark5_committer/recover_task.png":null,"http://www.jasongj.com/img/spark/spark5_committer/abort_task.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn33@2020_2/2022/03/14/12-03-55-058_d6f39fef1d09c596.webp"},"publishedOrCreatedDate":1647259428613}],"record":{"createdTime":"2022-03-14 20:03:48","updatedTime":"2022-03-14 20:03:48","feedId":27658,"fetchDate":"Mon, 14 Mar 2022 12:03:48 +0000","fetchMs":1814,"handleMs":36,"totalMs":28181,"newArticles":0,"totalArticles":49,"status":1,"type":0,"ip":"4cf9ab886509ef3fd2ece0a16b714d9c","hostName":"europe21*","requestId":"79c0fbedee144c0280933cd335b57d1c_27658","contentType":"application/xml","totalBytes":1998578,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":14,"articlesImgsGithubTotal":11,"successGithubMap":{"myreaderx25":1,"myreaderx8":1,"myreaderx15":1,"myreaderx16":1,"myreaderx21":1,"myreaderx4":1,"myreaderx11":1,"myreaderx3":1,"myreaderx30":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1,"myreaderx31":1}},"feed":{"createdTime":"2020-09-07 02:41:57","updatedTime":"2020-09-07 04:44:09","id":27658,"name":"技术世界","url":"http://www.jasongj.com/atom.xml","subscriber":118,"website":null,"icon":"https://www.gravatar.com/avatar/b7c3335ef8378cf904c036c9f55912c9","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx64/cdn56@2020_3/2020/09/06/20-44-01-919_23594f0cd775e7e9.jpg","description":"分享交流大数据领域技术，包括但不限于Storm、Spark、Hadoop等流行分布式计算系统，Kafka、MetaQ等分布式消息系统，MongoDB、Cassandra等NoSQL，PostgreSQL、MySQL等RDBMS以及其它前沿技术","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2022-03-14 20:04:14","updatedTime":"2022-03-14 20:04:14","id":null,"feedId":27658,"linkMd5":"567fecb59e7f904fcdc73f1eb0e8ccc2"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":1998578,"tmpBgImgCdnBytes":0,"extra4":{"start":1647259426303,"total":0,"statList":[{"spend":2274,"msg":"获取xml内容"},{"spend":36,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":22298,"msg":"正文链接上传到cdn"}]},"extra5":14,"extra6":14,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/check_output_path.png","sourceStatusCode":200,"destWidth":1516,"destHeight":1084,"sourceBytes":411454,"destBytes":181020,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":2796,"convertSpendMs":77,"createdTime":"2022-03-14 20:03:48","host":"europe63*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2,567fecb59e7f904fcdc73f1eb0e8ccc2","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn99/contents/2022/03/14/12-03-51-200_37c6f13e15290d2f.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 14 Mar 2022 12:03:51 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9C94:363B:94CAA15:9737FCF:622F2F27"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1647260081"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn99/contents/2022/03/14/12-03-51-200_37c6f13e15290d2f.webp","historyStatusCode":[],"spendMs":238},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"401.8 KB","destSize":"176.8 KB","compressRate":"44%"},{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/check_output_path.png","sourceStatusCode":200,"destWidth":1516,"destHeight":1084,"sourceBytes":411454,"destBytes":181020,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":733,"convertSpendMs":70,"createdTime":"2022-03-14 20:03:51","host":"europe63*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2,567fecb59e7f904fcdc73f1eb0e8ccc2","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn99/contents/2022/03/14/12-03-51-802_37c6f13e15290d2f.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 14 Mar 2022 12:03:52 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9C94:363B:94CAB32:97380EB:622F2F27"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1647260081"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn99/contents/2022/03/14/12-03-51-802_37c6f13e15290d2f.webp","historyStatusCode":[],"spendMs":373},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"401.8 KB","destSize":"176.8 KB","compressRate":"44%"},{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/recover_task.png","sourceStatusCode":200,"destWidth":1254,"destHeight":1462,"sourceBytes":596747,"destBytes":298394,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":4688,"convertSpendMs":216,"createdTime":"2022-03-14 20:03:52","host":"us-018*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn12/contents/2022/03/14/12-03-56-958_f65e4f61a2819a9a.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 14 Mar 2022 12:03:57 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["920E:5DE7:6A45EAD:E2B1C67:622F2F2C"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1647260075"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn12/contents/2022/03/14/12-03-56-958_f65e4f61a2819a9a.webp","historyStatusCode":[],"spendMs":45},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"582.8 KB","destSize":"291.4 KB","compressRate":"50%"},{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/recover_task.png","sourceStatusCode":200,"destWidth":1254,"destHeight":1462,"sourceBytes":596747,"destBytes":298394,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":458,"convertSpendMs":162,"createdTime":"2022-03-14 20:03:57","host":"us-018*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn12/contents/2022/03/14/12-03-57-478_f65e4f61a2819a9a.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 14 Mar 2022 12:03:57 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["920E:5DE7:6A45ED3:E2B1CB0:622F2F2D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1647260075"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn12/contents/2022/03/14/12-03-57-478_f65e4f61a2819a9a.webp","historyStatusCode":[],"spendMs":52},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"582.8 KB","destSize":"291.4 KB","compressRate":"50%"},{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/commit_task_v1.png","sourceStatusCode":200,"destWidth":2700,"destHeight":1508,"sourceBytes":722236,"destBytes":335804,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":10873,"convertSpendMs":248,"createdTime":"2022-03-14 20:03:52","host":"europe-23*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn41/contents/2022/03/14/12-04-02-698_f57e899cb30f807c.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 14 Mar 2022 12:04:03 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CF56:45CB:B13EEA:B48099:622F2F32"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1647260078"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn41/contents/2022/03/14/12-04-02-698_f57e899cb30f807c.webp","historyStatusCode":[],"spendMs":377},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"705.3 KB","destSize":"327.9 KB","compressRate":"46.5%"},{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/commit_task_v1.png","sourceStatusCode":200,"destWidth":2700,"destHeight":1508,"sourceBytes":722236,"destBytes":335804,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":622,"convertSpendMs":210,"createdTime":"2022-03-14 20:04:03","host":"europe-56*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn41/contents/2022/03/14/12-04-03-414_f57e899cb30f807c.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 14 Mar 2022 12:04:03 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E2BC:363B:94CC3A9:97399D2:622F2F33"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1647260078"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn41/contents/2022/03/14/12-04-03-414_f57e899cb30f807c.webp","historyStatusCode":[],"spendMs":291},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"705.3 KB","destSize":"327.9 KB","compressRate":"46.5%"}],"extra10_invalidATagHrefValue":{"http://www.jasongj.com/spark/committer/_#CommitCoordinator":"http://www.jasongj.com/spark/committer/#CommitCoordinator","http://www.jasongj.com/spark/committer/_#概述":"http://www.jasongj.com/spark/committer/#概述","http://www.jasongj.com/spark/committer/_#总结":"http://www.jasongj.com/spark/committer/#总结","http://www.jasongj.com/spark/committer/_#Spark-系列文章":"http://www.jasongj.com/spark/committer/#Spark-系列文章","http://www.jasongj.com/spark/committer/_#Task执行setupTask":"http://www.jasongj.com/spark/committer/#Task执行setupTask","http://www.jasongj.com/spark/committer/_#检查-Job-输出目录":"http://www.jasongj.com/spark/committer/#检查-Job-输出目录","http://www.jasongj.com/spark/committer/_#abortTask":"http://www.jasongj.com/spark/committer/#abortTask","http://www.jasongj.com/spark/committer/_#commitJob":"http://www.jasongj.com/spark/committer/#commitJob","http://www.jasongj.com/spark/committer/_#Driver执行setupJob":"http://www.jasongj.com/spark/committer/#Driver执行setupJob","http://www.jasongj.com/spark/committer/_#abortJob":"http://www.jasongj.com/spark/committer/#abortJob","http://www.jasongj.com/spark/committer/_#V1-vs-V2-committer-性能对比":"http://www.jasongj.com/spark/committer/#V1-vs-V2-committer-性能对比","http://www.jasongj.com/spark/committer/_#V1-vs-V2-committer-一致性对比":"http://www.jasongj.com/spark/committer/#V1-vs-V2-committer-一致性对比","http://www.jasongj.com/spark/committer/_#recoverTask":"http://www.jasongj.com/spark/committer/#recoverTask","http://www.jasongj.com/spark/committer/_#commit-原理":"http://www.jasongj.com/spark/committer/#commit-原理","http://www.jasongj.com/spark/committer/_#commitTask":"http://www.jasongj.com/spark/committer/#commitTask","http://www.jasongj.com/spark/committer/_#V1-vs-V2-committer-过程":"http://www.jasongj.com/spark/committer/#V1-vs-V2-committer-过程","http://www.jasongj.com/spark/committer/_#检查是否需要-commit":"http://www.jasongj.com/spark/committer/#检查是否需要-commit","http://www.jasongj.com/spark/committer/_#按需创建-Task-目录":"http://www.jasongj.com/spark/committer/#按需创建-Task-目录"},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-018.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/abort_task.png","sourceStatusCode":200,"destWidth":1294,"destHeight":424,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn33@2020_2/2022/03/14/12-03-55-058_d6f39fef1d09c596.webp","sourceBytes":134420,"destBytes":72220,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":3084,"convertSpendMs":41,"createdTime":"2022-03-14 20:03:52","host":"us-022*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"131.3 KB","destSize":"70.5 KB","compressRate":"53.7%"},{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/setup_task.png","sourceStatusCode":200,"destWidth":1174,"destHeight":538,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn21@2020_4/2022/03/14/12-03-55-857_3927ec251df9205d.webp","sourceBytes":155879,"destBytes":65440,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":4119,"convertSpendMs":28,"createdTime":"2022-03-14 20:03:52","host":"europe68*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"152.2 KB","destSize":"63.9 KB","compressRate":"42%"},{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/cleanup_job.png","sourceStatusCode":200,"destWidth":900,"destHeight":304,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn29@2020_3/2022/03/14/12-03-56-927_a61321c168460f63.webp","sourceBytes":87804,"destBytes":48838,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":4884,"convertSpendMs":17,"createdTime":"2022-03-14 20:03:52","host":"us-034*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"85.7 KB","destSize":"47.7 KB","compressRate":"55.6%"},{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/need_commit_task_detail.png","sourceStatusCode":200,"destWidth":1576,"destHeight":1258,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn50@2020_5/2022/03/14/12-03-59-750_989d3c506a6012a5.webp","sourceBytes":473690,"destBytes":234544,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":7753,"convertSpendMs":406,"createdTime":"2022-03-14 20:03:52","host":"us-025*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"462.6 KB","destSize":"229 KB","compressRate":"49.5%"},{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/need_commit_task.png","sourceStatusCode":200,"destWidth":1944,"destHeight":796,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn45@2020_6/2022/03/14/12-03-59-875_19046e0a39f8661f.webp","sourceBytes":372095,"destBytes":175498,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":8207,"convertSpendMs":66,"createdTime":"2022-03-14 20:03:52","host":"europe-60*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"363.4 KB","destSize":"171.4 KB","compressRate":"47.2%"},{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/coordinator_handle_request.png","sourceStatusCode":200,"destWidth":1412,"destHeight":1118,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn25@2020_1/2022/03/14/12-04-00-615_2d95fd4039578a9e.webp","sourceBytes":445068,"destBytes":227366,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":8937,"convertSpendMs":84,"createdTime":"2022-03-14 20:03:52","host":"europe-56*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"434.6 KB","destSize":"222 KB","compressRate":"51.1%"},{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/setup_job.png","sourceStatusCode":200,"destWidth":2040,"destHeight":836,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn17@2020_3/2022/03/14/12-04-01-370_faf843c52ae5c3fd.webp","sourceBytes":369644,"destBytes":155606,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":9436,"convertSpendMs":96,"createdTime":"2022-03-14 20:03:52","host":"us-006*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"361 KB","destSize":"152 KB","compressRate":"42.1%"},{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/commit_job_v1.png","sourceStatusCode":200,"destWidth":1644,"destHeight":1190,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn51@2020_1/2022/03/14/12-04-01-414_2b0321ee092025bc.webp","sourceBytes":581387,"destBytes":254866,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":9289,"convertSpendMs":144,"createdTime":"2022-03-14 20:03:52","host":"us-026*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"567.8 KB","destSize":"248.9 KB","compressRate":"43.8%"},{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/create_task_output_file.png","sourceStatusCode":200,"destWidth":2396,"destHeight":974,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn8@2020_3/2022/03/14/12-04-01-646_7d580a1a3f17782c.webp","sourceBytes":478990,"destBytes":218972,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":9618,"convertSpendMs":216,"createdTime":"2022-03-14 20:03:52","host":"us-017*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"467.8 KB","destSize":"213.8 KB","compressRate":"45.7%"},{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/commit_task_v2.png","sourceStatusCode":200,"destWidth":1896,"destHeight":1460,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn37@2020_4/2022/03/14/12-04-01-761_5623c528bbd2ba9c.webp","sourceBytes":693772,"destBytes":323154,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":9866,"convertSpendMs":300,"createdTime":"2022-03-14 20:03:52","host":"us-010*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"677.5 KB","destSize":"315.6 KB","compressRate":"46.6%"},{"code":1,"isDone":false,"source":"http://www.jasongj.com/img/spark/spark5_committer/commit_job_v2.png","sourceStatusCode":200,"destWidth":1652,"destHeight":1210,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn5@2020_5/2022/03/14/12-04-14-136_dd790921148b4167.webp","sourceBytes":491813,"destBytes":222074,"targetWebpQuality":75,"feedId":27658,"totalSpendMs":22128,"convertSpendMs":138,"createdTime":"2022-03-14 20:03:52","host":"us-029*","referer":"http://www.jasongj.com/spark/committer/","linkMd5ListStr":"567fecb59e7f904fcdc73f1eb0e8ccc2","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"480.3 KB","destSize":"216.9 KB","compressRate":"45.2%"}],"successGithubMap":{"myreaderx25":1,"myreaderx8":1,"myreaderx15":1,"myreaderx16":1,"myreaderx21":1,"myreaderx4":1,"myreaderx11":1,"myreaderx3":1,"myreaderx30":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1,"myreaderx31":1}}