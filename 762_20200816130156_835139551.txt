{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-08-16 21:01:56","updatedTime":"2020-08-16 21:01:56","title":"FEX 技术周刊 - 2020/04/13","link":"http://fex.baidu.com/blog/2020/04/fex-weekly-13/","description":"作者：wuyiping <br> <h2 id=\"深阅读\">深阅读</h2>\n\n<p><strong>The JavaScript Framework That Puts Web Pages on a Diet</strong><br />\nhttps://www.wired.com/story/javascript-framework-puts-web-pages-diet/<br />\nSvelte, created by a graphics editor for The New York Times, has attracted a following among programmers who want their pages to load faster. 另附：<a href=\"https://lihautan.com/the-svelte-compiler-handbook/\">The Svelte Compiler Handbook</a>.</p>\n\n<p><strong>A practical guide to writing technical specs</strong><br />\nhttps://stackoverflow.blog/2020/04/06/a-practical-guide-to-writing-technical-specs/<br />\nWriting a technical spec increases the chances of having a successful project, service, or feature that all stakeholders involved are satisfied with. It decreases the chances of something going horribly wrong during implementation and even after you’ve launched your product.</p>\n\n<p><strong>What are your favorite low-coding apps / tools as a developer?</strong><br />\nhttps://news.ycombinator.com/item?id=22786853<br />\nSince low-coding is super trendy these days, I was wondering if there are actually useful apps not only for non-devs but also for lazy-devs? I tried couple of no-code apps, but found them inflexible –not really giving you the opportunity to dive-in and customize.</p>\n\n<p><strong>Ant Design 开源项目经验分享，你想知道的都在这儿了</strong><br />\nhttps://mp.weixin.qq.com/s/qpZB9tPiLrHIbJnwi-8KKg<br />\nAnt Design 在 2015 年 5 月 7 日第一次提交代码，全部提交和讨论都在 GitHub 进行，无内网版本，是一个完全开源的前端项目。本文基于 Ant Design 多年来的项目运作，与大家交流开源项目的运作经验，主要内容围绕项目文档、网站、代码规范和风格、单元测试、发布规范、开源项目运营等几大方面，为大家提供实用的指引。另附：<a href=\"https://blog.bitsrc.io/useful-tips-for-a-successful-open-source-project-a505d05aad07\">Useful Tips for a Successful Open-Source Project</a>.</p>\n\n<p><strong>前端智能化：人机协同的编程方式</strong><br />\nhttps://www.yuque.com/zhenzishadow/tx7xtl/xhol3k<br />\n在imgcook.com发布之后，我们在掘金、知乎、微信朋友圈和公众号发表了很多文章，收获最多的反馈是：前端要失业了。按照现在的趋势来看，对P5左右前端工程师的需求将大幅度降低。imgcook.com 官网底部有统计，从数据分析智能生成UI和逻辑代码的情况，imgcook 已经可以替代P5前端工程师完成工作的80%。无论趋势还是数据，都能看到传统前端低技术价值、高重复的工作正走向消亡。</p>\n\n<p><strong>Electron 在 Taro IDE 的开发实践</strong><br />\nhttps://aotu.io/notes/2020/04/07/electron-in-taro-ide/index.html<br />\nTaro IDE 是一款我们正在精心打造的一站式移动端研发工作台。除了需要实现 Taro 从创建项目到预览、编译的全部能力，还需要打通用户测试、调试、监控等一系列流程。为了提升开发体验，仅仅一个命令行工具是远远不够的，我们需要开发一款桌面客户端，并同时提供 Windows、MacOS 等不同系统的版本。</p>\n\n<p><strong>探索 webpack5 新特性 Module federation 在腾讯文档的应用</strong><br />\nhttp://www.alloyteam.com/2020/04/14338/<br />\nwebpack5 的令人激动的新特性 Module federation 可能并不会让很多开发者激动，但是对于深受多应用伤害的腾讯文档来说，却是着实让人眼前一亮，这篇文章就带你了解腾讯文档的困境以及 Module federation 可以如何帮助我们走出这个困境。</p>\n\n<p><strong>React Folder Structure in 5 Steps</strong><br />\nhttps://www.robinwieruch.de/react-folder-structure<br />\nHow to structure large React apps into folders and files is a highly opinionated topic. I struggled for a while writing about this subject, because there is no right way to do it. However, every other week people ask me about how I structure my React projects. Not only about folder structures for small React projects, but more importantly about scalable React applications. After implementing React applications for a few years now, I want to give you a breakdown on how I approach this matter for my personal projects, for my client’s projects, and for my React workshops. It only takes 5 steps, and you decide what makes sense to you and how far you want to push it. So let’s get started.</p>\n\n<p><strong>Tips for Writing Animation Code Efficiently</strong><br />\nhttps://css-tricks.com/tips-for-writing-animation-code-efficiently/<br />\nI’ve been coding web animations and helping others do the same for years now. However, I have yet to see a concise list of tips focused on how to efficiently build animations, so here you go!</p>\n\n<p><strong>Rapid, enterprise-class development with UmiJS</strong><br />\nhttps://blog.logrocket.com/rapid-enterprise-class-development-umijs/<br />\nUmi provides out-of-the-box tools and plugins to aid rapid development of scalable applications. Coupled with its server-side implementation of routing and content delivery, Umi makes for a really attractive tool for frontend development.</p>\n\n<p><strong>Building dark mode on Stack Overflow</strong><br />\nhttps://stackoverflow.blog/2020/03/31/building-dark-mode-on-stack-overflow/<br />\nThe work I’m about to talk about was never about dark mode specifically, even though countless users asked for it. By solving everything along the way to dark mode, Stack Overflow would modernize its front-end codebase, enable accessibility-conscious theming, and push for adoption of our design system. We could give our users dark mode and offer future accessibility modes for free?</p>\n\n<p><strong>From 48k lines of code to 10—the story of GitHub’s JavaScript SDK</strong><br />\nhttps://github.blog/2020-04-09-from-48k-lines-of-code-to-10-the-story-of-githubs-javascript-sdk/<br />\n@octokit/rest wasn’t originally created by GitHub. Instead, @bkeepers decided to adopt the package that was the most popular back in 2017: github. In this post, we’ll cover the story of @octokit/rest—the official JavaScript SDK for GitHub’s REST APIs. 另附：<a href=\"https://github.blog/2020-04-09-github-protips-tips-tricks-hacks-and-secrets-from-lee-reilly/\">GitHub Protips: Tips, tricks, hacks, and secrets from Lee Reilly</a>, <a href=\"https://github.blog/2020-04-07-celebrating-15-years-of-git-an-interview-with-git-maintainer-junio-hamano/\">Celebrating 15 years of Git: An interview with Git maintainer Junio Hamano</a>.</p>\n\n<p><strong>Understanding (all) JavaScript module formats and tools</strong><br />\nhttps://weblogs.asp.net/dixin/understanding-all-javascript-module-formats-and-tools<br />\nJavaScript language was initially invented for simple form manipulation, with no built-in features like module or namespace. In years, tons of terms, patterns, libraries, syntax, and tools are invented to modularize JavaScript. This article discusses all mainstream module systems, formats, libraries, and tools in JavaScript.</p>\n\n<p><strong>Why you should stop using Google Analytics on your website</strong><br />\nhttps://plausible.io/blog/remove-google-analytics<br />\nMore recently my thinking about this has changed. Using Google Analytics is a habit website owners, bloggers and web developers should try to stop. Here’s a look at why you should remove Google Analytics from your website and help create a more open, independent web that’s more friendly to the visitors.</p>\n\n<p><strong>Working With PDFs in Node.js Using pdf-lib</strong><br />\nhttp://thecodebarbarian.com/working-with-pdfs-in-node-js.html<br />\nThe <a href=\"https://github.com/Hopding/pdf-lib\">pdf-lib</a> npm module is a great tool for creating and editting PDFs with Node.js. Puppeteer is a great tool for generating PDFs from HTML, but unfortunately browser support for print layouts in CSS is not very good in my experience. The pdf-lib module gives you very fine grained control over PDFs, and is great for tasks like merging PDFs, adding page numbers and watermarks, splitting PDFs, and basically anything else you might use the ILovePDF API for.</p>\n\n<p><strong>LEGO.com - Accelerating with Serverless!</strong><br />\nhttps://medium.com/lego-engineering/accelerating-with-serverless-625da076964b<br />\nTo set the context to what we are going to discuss here, LEGO.com was migrated to serverless from a typical legacy monolith ecommerce platform in July 2019. It was a fast paced 10 months journey and serverless made this migration a success. The implementation included many microservices and over 100 lambda functions in addition to many other AWS services.</p>\n\n<p><strong>On ‘Good Enough’ Architecture</strong><br />\nhttps://www.youtube.com/watch?v=PzEox3szeRc<br />\nA 40 minute talk on software architecture looking at situations where architecture was too elaborate or too simple and how we can learn to hit the ‘sweet spot’ for our own projects. As one commenter says: “One of the best talks I heard about the important balance between centralization and autonomy in the age of DevOps and microservices.</p>\n\n<p><strong>TiDB 4.0 - A Peek into the Future of Database: A Unified Infrastructure to Adapt Intelligently</strong><br />\nhttps://pingcap.com/blog/future-of-database-unified-infrastructure-to-adapt-intelligently/<br />\nThe future of the database is about unification, adaptiveness, and intelligence. I believe when we face the uncertainties and the unpredictables in the future, we will have the unified infrastructure to adapt intelligently.</p>\n\n<p><strong>Data Science: Reality Doesn’t Meet Expectations</strong><br />\nhttps://dfrieds.com/articles/data-science-reality-vs-expectations.html<br />\nOver the past few years, I’ve worked as a Data Scientist, a Data Engineer, and as an industry consultant. I’ve also learned from the stories of dozens of data scientists and similar professions, actively read articles on data science and followed data science thought leaders on Twitter. Across these diverse data experiences, I have noticed common themes. Below are seven most common (and at times flagrant) ways that data science has failed to meet expectations in industry. Throughout each section, I’ll propose solutions to these shortcomings.</p>\n\n<p><strong>Dataviz and the 20th Anniversary of R, an Interview With Hadley Wickham</strong><br />\nhttps://medium.com/nightingale/dataviz-and-the-20th-anniversary-of-r-an-interview-with-hadley-wickham-ea245078fc8a<br />\nCatching up with the creator of ggplot and tidyr about community, Tidyverse, and what’s in store for R over the next 20 years</p>\n\n<p><strong>Pros and Cons of Rust and Go</strong><br />\nhttps://dmv.myhatchpad.com/insight/choosing-between-rust-or-go/<br />\nOne expert’s take on the Pros, Cons, and Controversies of each language. 另附：<a href=\"https://github.com/hecrj/iced\">Iced - A cross-platform GUI library for Rust, inspired by Elm</a>, <a href=\"https://redislabs.com/blog/redis-stars-podcast-rust-vs-go-and-what-makes-live-coding-so-compelling/\">Rust vs. Go and What Makes Live-Coding So Compelling</a>.</p>\n\n<p><strong>Reimagining ReadMe’s Markdown Engine</strong><br />\nhttps://blog.readme.com/readme-flavored-markdown/<br />\nThe result of this work is our ReadMe-flavored syntax extension and a brand spanking new Markdown engine to go with it! Let’s look a bit deeper at how this works in practice, and why it’s so useful. Say we had some docs we were syncing to ReadMe from our repo. In one of them, we might want to display a set of tabbed code blocks. Sure, we could handwrite the magic block, but honestly even I wouldn’t know how to do that off the top of my head! Let’s take the lazy route, and rip the generated source code for this component directly out of ReadMe’s raw editor. 另附：<a href=\"https://www.swyx.io/writing/markdown-mistakes/\">6 Things Markdown Got Wrong</a>.</p>\n\n<h2 id=\"新鲜货\">新鲜货</h2>\n\n<p><strong>New Google SRE book: Building Secure and Reliable Systems</strong><br />\nhttps://landing.google.com/sre/books/<br />\nCan a system be considered truly reliable if it isn’t fundamentally secure? Or can it be considered secure if it’s unreliable? Security is crucial to the design and operation of scalable systems in production, as it plays an important part in product quality, performance, and availability. In this book, experts from Google share best practices to help your organization design scalable and reliable systems that are fundamentally secure.</p>\n\n<p><strong>Qt Roadmap for 2020</strong><br />\nhttps://www.qt.io/blog/qt-roadmap-for-2020<br />\n2020 will be an exciting year for Qt, as we have so many great things shaping up to be released. The baseline is Qt 5.15 LTS coming in May with pre-releases already available. A lot of new functionality for increased productivity is coming for our tools for both designers and developers. With Qt for MCU we can address a whole new range of target devices. On top of it all, we have the next major release of Qt – Qt 6 – coming at the end of the year.</p>\n\n<p><strong>jQuery 3.5.0 Released!</strong><br />\nhttp://blog.jquery.com/2020/04/10/jquery-3-5-0-released/<br />\nThe main change in this release is a security fix, and it’s possible you will need to change your own code to adapt. With what we call “positional selectors” being deprecated and slated for removal in jQuery 4.0, we’ve added the last two necessary replacement methods.</p>\n\n<p><strong>Some of What’s Coming in Vue 3</strong><br />\nhttps://alligator.io/vuejs/whats-coming-in-vue-3/<br />\nA summary of features in the next major release of Vue, still upcoming.</p>\n\n<p><strong>Playwright</strong><br />\nhttps://github.com/microsoft/playwright<br />\nPlaywright is a Node library to automate the Chromium, WebKit and Firefox browsers with a single API. It enables cross-browser web automation that is ever-green, capable, reliable and fast.</p>\n\n<p><strong>这个程序员写的免费在线 PS，让他三十岁前财务自由</strong><br />\nhttps://zhuanlan.zhihu.com/p/70636726<br />\n家住捷克的伊万·库茨基尔 (Ivan Kutskir) 是个 90 后自由职业程序员。虽然伊万从来没有公司的正式工作，但这不是因为他太菜了，而是因为他太强了：他就读于捷克最好的大学。自学生时代起，他就靠着自己的编程天赋挣零花钱养活自己。他每月只需工作大约 20 小时，就能赚够一个月 300 美元的生活费——这大致已经相当于国内不加班月薪三万的水平。这样的自由生活给了他极大的空间做自己喜欢的事。在这期间，他写了许多试验性的个人项目，从 Flash 小游戏到 3D 模型渲染工具等等不一而足。这之中一个名叫 Photopea 的图片编辑器项目，让今天的他过上了每月被动收入上万美元的「财务自由」生活。</p>\n\n<p><strong>Preact 10.4</strong><br />\nhttps://github.com/preactjs/preact/releases/tag/10.4.0<br />\nThis release contains some very amazing improvements to hydration and to performance when memoized vnodes are used.</p>\n\n<p><strong>ReactAdmin</strong><br />\nhttps://marmelab.com/react-admin/<br />\nA Web Framework for B2B applications.</p>\n\n<p><strong>React Trello</strong><br />\nhttps://github.com/rcdexta/react-trello<br />\nPluggable components to add a Trello (like) kanban board to your application</p>\n\n<p><strong>MVP.css - Minimalist stylesheet for HTML elements</strong><br />\nhttps://andybrewer.github.io/mvp/<br />\nNo class names, no frameworks, just semantic HTML and you’re done.</p>\n\n<p><strong>Franc</strong><br />\nhttps://github.com/wooorm/franc<br />\nNatural language detection.</p>\n\n<p><strong>node-notifier</strong><br />\nhttps://github.com/mikaelbr/node-notifier<br />\nSend cross platform native notifications using Node.js. Notification Center for macOS, notify-osd/libnotify-bin for Linux, Toasters for Windows 8/10, or taskbar balloons for earlier Windows versions. Growl is used if none of these requirements are met. Works well with Electron.</p>\n\n<p><strong>Quakejs.com</strong><br />\nhttp://www.quakejs.com/<br />\n<a href=\"https://github.com/inolen/quakejs\">QuakeJS</a> is a port of ioquake3 to JavaScript with the help of Emscripten.\nThis project started to demonstrate the feasibility of browser-based gaming, and what better way than with a classic game whose core gameplay revolves around the kind of responsive APIs that are available with HTML5 today.</p>\n\n<p><strong>markmap-lib - markdown + mindmap + library</strong><br />\nhttps://markmap.js.org/\nMarkmap is a combination of Markdown syntax and mindmap. It is first implemented by markmap. markmap-lib is a reimplementation of markmap, with some additional features. Mark it up! Visualize your Markdown with mindmaps.</p>\n\n<p><strong>FreeRDP: A Remote Desktop Protocol Implementation</strong><br />\nhttps://www.freerdp.com/<br />\nFreeRDP is a free implementation of the Remote Desktop Protocol (RDP), released under the Apache license. Enjoy the freedom of using your software wherever you want, the way you want it, in a world where interoperability can finally liberate your computing experience.</p>\n\n<p><strong>Rclone</strong><br />\nhttps://github.com/rclone/rclone<br />\nRclone (“rsync for cloud storage”) is a command line program to sync files and directories to and from different cloud storage providers.</p>\n\n<p><strong>Open Source Virtual Background</strong><br />\nhttps://elder.dev/posts/open-source-virtual-background/<br />\nUnfortunately, Zoom’s linux client only supports the “chroma-key” A.K.A. “green screen” background removal method. This method requires a solid color backdrop, ideally a green screen with uniform lighting. Since I do not have a green screen I decided to simply implement my own background removal, which was obviously better than cleaning my apartment or just using my laptop all the time. It turns out we can actually get pretty decent results with off the shelf, open source components and just a little of our own code.</p>\n\n<p><strong>This Video Has X Views</strong><br />\nhttps://www.youtube.com/watch?v=BxV14h0kFs0<br />\nThe title of this video should change with the times. But nothing lasts forever: here’s the story of how I made it work, why it used to be easier to make that work, and how it all ties in to the White Cliffs of Dover and the end of the universe.</p>\n\n<p><strong>Codeberg.org: A Free, Non-Commercial GitHub Alternative</strong><br />\nhttps://codeberg.org/<br />\nIt’s built on top of Gitea, a Go-powered self-hosted Git service.</p>\n\n<p><strong>WhyTheName</strong><br />\nhttps://wiki.debian.org/WhyTheName<br />\nAn IT-etymology/linuxguistics page for people wondering “how come the package yasysmand-cling has such a strange name?” Giving cryptic names to software is a well-established UNIX tradition, and the explanations are often missing from the documentation, either because the developers imagine it’s obvious (usually wrongly) or because they think nobody cares (and here they’re usually right, or it would turn up as FAQ material).</p>\n\n<h2 id=\"设计\">设计</h2>\n\n<p><strong>编辑器设计系列｜每天都在用，你真的了解它么？</strong><br />\nhttps://www.yuque.com/elevenyang/tvy47l/qdugkw<br />\n提起编辑器，你会想到什么？也许你从来没有意识到，但是从接触计算机开始，你就和各种编辑器打上了交道。Windows 98 中的画图软件也许是你的启蒙。计算机课上当你敲下第一个五彩斑斓的字，作出第一张会动的幻灯片，画出第一个图表，Office 三件套开启了一扇新的大门。再后来，你学会了用记事本写下第一行 if…else…， 但始终没能学会怎么用 PS 修图，不过幸好很快学会了用美图秀秀。现在的你，可能在各行各业，你的电脑上装满各种专业软件，每天一打开它们，可能一天就过去了。你依赖着这些专业软件完成工作赚钱养家，如果哪天它们不小心崩了，丢失了辛苦一天的成果，你大概可以问候遍所有它的亲戚。百年以前，人们的生产工具还都是实实在在看得见摸得着的物品。可现在，就在一方小屏幕中，通过各种各样的虚拟工具，尤其是其中的编辑器，你的生产力得到了翻天覆地的提升。生产力工具的好用与否，直接关系到每个人的工作和生活。这，就是编辑器设计的意义所在。</p>\n\n<p><strong>设计师要懂的微文案设计</strong><br />\nhttps://mp.weixin.qq.com/s/AVyUQb-hjqQKong-dn9aUg<br />\n“微文案”这个概念其实在国内是没有官方的称呼，它是由Microcopy直译过来的。Micro - 微小的，Copy - 文本，所以合并润色后即为“微文案”。微文案简单理解就是App页面中，帮助用户更好的理解服务以及辅助他们作出抉择的文案。例如：错误提示文案，按钮文案，点击触发器，弹窗文案等等，都属于微文案的范畴。可以这样理解，除了和产品直接相关的文案（例如产品名称，产品介绍，产品价格等等），其他在页面中出现的文案都可以属于微文案设计的一部分。</p>\n\n<p><strong>Office 改版背后，藏着的这套超全面的宝藏设计系统</strong><br />\nhttps://www.uisdc.com/fluent-design-system<br />\n如果你是 Windows 10 系统的用户，那么最近应该会注意到 Windows 系统的图标正在逐步地被替换，升级，（在忽略广大国内全家桶软件影响的情况下）Windows 10 正在随着 Fluent Design 的注入而正在变得越来越优雅。</p>\n\n<p><strong>Everyday Color Theory</strong><br />\nhttps://medium.com/google-design/everyday-color-theory-59c1ca0770cb<br />\nA poetic crash course on the history of color.</p>\n\n<p><strong>How People Read Online: New and Old Findings</strong><br />\nhttps://www.nngroup.com/articles/how-people-read-online/<br />\nSummary: Looking back at findings from a series of eyetracking studies over 13 years, we see that fundamental scanning behaviors remain constant, even as designs change.</p>\n\n<h2 id=\"产品及其它\">产品及其它</h2>\n\n<p><strong>Good Product Managers, Great Product Managers</strong><br />\nhttps://threader.app/thread/1249039638829793280<br />\nHow to properly manage a product roadmap https://news.ycombinator.com/item?id=22827275<br />\nThere are Good Product Managers and there are Great Product Managers. There are also Okay Product Managers and Bad Product Managers, but we will focus on the Good and the Great here.</p>\n\n<p><strong>英国全能数学家John Conway因新冠去世，他曾发明风靡一个时代的电脑游戏，还能心算万年历</strong><br />\nhttps://mp.weixin.qq.com/s?__biz=MzIzNjc1NzUzMw==&amp;mid=2247540018&amp;idx=1&amp;sn=13e41619f7e3e0a320b6df8e9e6c7e9f<br />\n当代最有趣的数学家John Horton Conway，因为新冠肺炎逝世了，享年82岁。有人评价他，世界上可能有比他更厉害的数学家，但是在顶尖的数学家里，没有人能比他科普做得更好。他在数学领域多点开花，是一个在组合博弈论、几何、数论、群论、算法甚至量子力学理论等多个方面都做出贡献的天才数学家。他发明的一款生命游戏，在上世纪70年代占据了1/4的计算机，成为那时极客的最爱。他还算出在24维空间的球迷密堆积中，每个球体都和196560个球体接触。</p>\n\n<p><strong>万字长文实录：消费者变了！</strong><br />\nhttps://mp.weixin.qq.com/s?__biz=MzUyMDQ5NzI5Mg==&amp;mid=2247516976&amp;idx=1&amp;sn=5a38a1f52be133e409a20ceb4de3de04<br />\n这个世界上只有两种产品：解决问题的和创造独特体验的，如果你的产品两种都不是，那要赶紧想办法再创业和找工作了。产品和服务的边界越来越模糊，产品即服务，按需订阅，这是大的产品革新方向。我们的产品需要升级，升级的动力来自于消费者全新的购买标准和偏好。Z世代买东西有全新的标准，比如我吃马卡龙是因为颜色好，我使用这个手机是因为科技感。工艺、审美和包装，构成了产品升级换代的核心动力。产品的升级，最终导致平均单价升高。学习营销只学习一个月，而实践和优化营销，是一辈子的事。在这个过程中，希望大家坚守价值观，善良是我们唯一常胜不败的价值投资。</p>\n\n<p><strong>陆奇万字演讲：通讯、娱乐和 B 端获客是产业创新三大机会</strong><br />\nhttps://mp.weixin.qq.com/s/Fov9tYoAZK3EkmJnFwwzNQ<br />\n目前我们经历的AI+边缘计算+5G通讯技术的阶段，不再使用手指录入信息，而是使用传感器；不再使用显示器输出信息，而是采用深度学习来完成自动化过程。因此这一次数字化的广度和深度都将非常巨大。要抓住这一波机会，陆奇认为在C端，娱乐、通讯、社交都是关注重点。B端的根本需求是降低成本、提高产出，大B的主要需求是信息化的大量应用，小B的主要需求是获客。任何一个技术启动的企业分种子期、早期、成长期、成熟期。一个早期创业公司只有两件事，找到市场匹配的产品、活下去，别的什么都不重要。\n对于C端产品，核心是用户，流程是关键，另外是获客和变现，增长模式必须要有裂变。只有把这四个核心要素协调好，快速迭代才能跑通一个模式。在B端，产品上的客户满意度是关键，销售上一定要找到可行的消费模式，保证高的毛利。最重要的是要保持盈利模式，是要全方位的产品和业务一起开发，快速迭代。比较好的例子是Zoom，为什么它到40分钟开始收费，就是不断迭代和测试出来的。另外，在早期一定要活下去。任何一家公司的收入不到一定阶段，没法养活自己。</p>\n\n<p><strong>陈春花：协同管理的挑战不在技能，在于心性</strong><br />\nhttps://mp.weixin.qq.com/s/edT8eb_OLg657yoP5-xpIA<br />\n以前很多人认为数字化是一部分企业、一部分领域需要的技术能力，还有一些行业和领域不着急应用数字化，但这次非常特殊的疫情危机让我们突然明白，在线化、数字化是个必选项，会对每一个组织管理行为和组织效率带来很大的变化。面向未来，领导者一定要做出正确的决定：致力于消除复杂性、创新客户体验；致力于系统整体效率、成为伙伴。所以最有效的管理者是不断重新审视自己的信仰，不是关心自己是不是正确，而是如何服务于公司业务、服务于公司客户。坦白讲在数字化进程中，我被很多人问到底有什么方法、到底有什么技术能解决。我研究到最后发现，对于管理者来讲，最大的挑战不是技能而是心性的问题。你要真心愿意去理解、帮助别人，去利他、欣赏、接受，你才真正能够获得系统整体最大效率，这也是数字化对管理者的基本要求。</p>\n\n<blockquote>\n  <p>对数据可视化有兴趣的可以阅读由 AntV 带来的 <a href=\"https://www.yuque.com/mo-college/weekly/ypovn2\">墨者修齐 2020-04-12 · G6 中的样式定义及状态管理、what is a bar chart、Where Innovation Happens、Breaking the wave、How to Lie With Maps</a></p>\n</blockquote>\n\n<p>– THE END –</p>\n","descriptionType":"text/html","publishedDate":"Mon, 13 Apr 2020 00:00:00 +0000","feedId":762,"bgimg":"","linkMd5":"d62b4ebe9a30396a9acdf513f51e27e0","metaImg":"","author":""},{"createdTime":"2020-08-16 21:01:28","updatedTime":"2020-08-16 21:01:28","title":"FEX 技术周刊 - 2020/05/25","link":"http://fex.baidu.com/blog/2020/05/fex-weekly-25/","description":"作者：2betop <br> <h2 id=\"本期看点\">本期看点</h2>\n\n<p><strong>A Guide to Threat Modelling for Developers</strong><br />\nhttps://martinfowler.com/articles/agile-threat-modelling.html#ExplainAndExplore<br />\nThis article provides clear and simple steps to help teams that want to adopt threat modelling. Threat modelling is a risk-based approach to designing secure systems. It is based on identifying threats in order to develop mitigations to them. With cyber security risk increasing and enterprises becoming more aware of their liabilities, software development teams need effective ways to build security into software. Unfortunately, they often struggle to adopt threat modelling. Many methodologies require complicated, exhaustive upfront analysis which does not match how modern software teams work. Therefore, rather than stopping everything to create the perfect threat model, I encourage teams to start simple and grow from there.</p>\n\n<p><strong>The Third Age of JavaScript</strong><br />\nhttps://www.swyx.io/writing/js-third-age/<br />\n2020 feels like the start of a new Age. If the First Age was about building out a language, and the Second Age was about users exploring and expanding the language, the Third Age is about clearing away legacy assumptions and collapsing layers of tooling.</p>\n\n<p><strong>Framer for Web is Here!</strong><br />\nhttps://blog.prototypr.io/framer-for-web-is-here-65b7376a583d<br />\nAnd It’s Here to Kill Figma. The Framer Team is pulling up it’s pants. I sniffed something cooking when they announced a public beta for Framer for web… FRAMER FOR WEB? Yes, I don’t know how they did it, but their powerful set of tools, plugins and animation controls are now all on web.</p>\n\n<p><strong>Microsoft Build 2020</strong><br />\nhttps://www.microsoft.com/en-us/build<br />\nhttps://new.qq.com/rain/a/20200523A04MVT00<br />\nIntroducing .NET Multi-platform App UI https://devblogs.microsoft.com/dotnet/introducing-net-multi-platform-app-ui/<br />\nMicrosoft: we were wrong about open source https://www.theverge.com/2020/5/18/21262103/microsoft-open-source-linux-history-wrong-statement<br />\nIntroducing App Service Static Web App https://techcommunity.microsoft.com/t5/azure-app-service/introducing-app-service-static-web-apps/ba-p/1394451<br />\nWindows Package Manager Preview https://devblogs.microsoft.com/commandline/windows-package-manager-preview/<br />\nWindows Terminal 1.0 https://devblogs.microsoft.com/commandline/windows-terminal-1-0/<br />\nMicrosoft is bringing Linux GUI apps to Windows 10 https://www.theverge.com/2020/5/19/21263377/microsoft-windows-10-linux-gui-apps-gpu-acceleration-wsl-features<br />\nAnnouncing Microsoft Lists https://techcommunity.microsoft.com/t5/microsoft-365-blog/announcing-microsoft-lists-your-smart-information-tracking-app/ba-p/1372233</p>\n\n<p><strong>OceanBase：蚂蚁爬上舞台</strong><br />\nhttps://mp.weixin.qq.com/s/9EA_mHtkBpJ0prPK0hfgjA<br />\n2020年，阳振坤55岁。每天晚上下班回到家大概十点半，他会换一套衣服，在小区里快走半小时，大概3000米，如果下雨就换成室内走路，这是他坚持了22年的习惯。OceanBase 团队，从最初的一个人，到0.1版本时的20人，到1.0时的50人，到2.0时的100人，到如今所有人都在为 3.0 加班加点。十年难言顺遂，容颜渐老，但大多数人都未离队。“有什么东西支撑你们走下来吗？”我问。“集中式数据库的技术已经走到了尽头，我丝毫不怀疑在未来会有几家公司打破“分布式数据库”的技术瓶颈。不过，目前我们是世界上唯一的那个。如果说这么多年有东西在支撑着我，这就是理由。”阳振坤说。</p>\n\n<h2 id=\"深阅读\">深阅读</h2>\n\n<p><strong>The Science Behind Web Vitals</strong><br />\nhttps://blog.chromium.org/2020/05/the-science-behind-web-vitals.html<br />\nWeb Vitals is an initiative by Google to help business owners, marketers and developers alike identify opportunities to improve user experiences. These signals are guided by extensive work by many researchers in the fields of human–computer interaction (HCI) and user experience (UX). But figuring out the right metrics and thresholds is not as simple as picking up a research paper and finding the answer.</p>\n\n<p><strong>The Need for Speed, 23 Years Later</strong><br />\nhttps://www.nngroup.com/articles/the-need-for-speed/<br />\nSummary: In spite of an increase in Internet speed, webpage speeds have not improved over time. 另附：<a href=\"https://web.dev/lighthouse-whats-new-6.0/\">What’s New in Lighthouse 6.0</a>, New metrics, Performance score update, new audits, and more.</p>\n\n<p><strong>Understanding the ECMAScript spec, part 4</strong><br />\nhttps://v8.dev/blog/understanding-ecmascript-part-4<br />\nIn this episode, we take a deeper look into cover grammars. They are a way to specify the grammar for syntactic constructs which look ambiguous at first. Again, we’ll skip the subscripts for [In, Yield, Await] for brevity, as they aren’t important for this blog post.</p>\n\n<p><strong>Figure It Out</strong><br />\nhttps://alistapart.com/article/figure-it-out/<br />\nColor is, without a doubt, the visual element most often misunderstood and misused. While it’s nice to think that precise color values are interchangeable (setting aside any cultural associations), your perception doesn’t work that way. In the same way that certain frequencies on the radio come in clearer than others, certain colors do the same. You need to account for, or at least consider, the unevenness of color perception.</p>\n\n<p><strong>前端状态管理设计——优雅与妥协的艺术</strong><br />\nhttps://cdc.tencent.com/2020/05/22/frontend-state-management-research/<br />\n本文主要是想表达，在状态管理这件事上，我们尝试一切，试图找到某种通用的优雅的解决方案，但是，在所有方案中，我们都不得不进行一些妥协。如果我们能够从历史的角度去观察，往往能够发现，世界上没有完美的事物，有一种说法“历史都是妥协出来的”，我们可以换一个好听的词，叫“博弈”，但是无论如何，我们都在追求着，每个人的追求不同，代码风格的优雅，代码量少，代码性能极致，代码明显没有bug……这些追求，驱动着我们不断探索和思考。</p>\n\n<p><strong>icejs：企业级前端研发框架的演进与实践</strong><br />\nhttps://mp.weixin.qq.com/s/9nPwc0s93PZxOdM1ZllTCA<br />\nicejs 是淘系中后台项目组经过近三年的演进沉淀出的一个基于 React 的研发框架，目前已在淘系、飞猪等众多内部中后台业务项目里被广泛使用。从最初的工程构建工具演进成研发框架，这背后有着怎样的历程，以及新的框架又给我们提供了怎样的能力，这篇文章将会给大家进行分享。</p>\n\n<p><strong>阿里云开放平台微前端方案的沙箱实现</strong><br />\nhttps://mp.weixin.qq.com/s/yXi1jYACrDAFqT7IKv3a5w<br />\n应用沙箱可能是微前端技术体系里面最有意思的部分。一般来说沙箱是微前端技术体系中不是必须要做的事情，因为如果规范做的足够好，是能够避免掉一些变量冲突读写，CSS 样式冲突的情况。但是如果你在一个足够大的体系中，总不能仅仅通过规范来保证应用的可靠性，还是需要技术手段去治理运行时的一些冲突问题，这个也是沙箱方案成为微前端技术体系的一部分原因。首先纵观各类技术方案，有一个大前提决定了这个沙箱如何做：最终微应用是 单实例 or 多实例 存在宿主应用中。这个直接决定了这个沙箱的复杂度和技术方案。另附：<a href=\"https://gist.github.com/FlorianRappl/96b6284310faad0bb7a58c83d930c64f\">State of Microfrontends</a></p>\n\n<p><strong>积木Sketch Plugin：设计同学的贴心搭档</strong><br />\nhttps://tech.meituan.com/2020/05/21/waimai-sketch-plugin.html<br />\n多年来，美团外卖一直在高速增长，但整个客户端的UI组件一直没有得到很好的统一。而在开发过程中因UI缺乏同一的标准导致各种问题凸显，积木插件Sketch Plugin应运而生。外卖技术团队将其打造成为UI一致性的抓手，最终帮助团队减少开发成本，提升了交付的质量，并为美团多个业务团队提供了很好的支持服务。本文主要介绍了Sketch Plugin项目的背景，并由浅入深地带领大家认识了Sketch Plugin项目，文中还详细解读了该技术的各种优缺点，同时还提供了详细的实践步骤和踩坑总结。</p>\n\n<p><strong>Good coders borrow, great coders steal</strong><br />\nhttps://stackoverflow.blog/2020/05/20/good-coders-borrow-great-coders-steal/<br />\nCopying and pasting can be dangerous, but then again, so can many aspects of software development when done incautiously. In this post, I’ll take a look at what code copying actually means for software development, what good code theft means, and the pitfalls of copying badly.</p>\n\n<p><strong>The Modern Web</strong><br />\nhttps://css-tricks.com/the-modern-web/<br />\nDo people reach for React-powered SPAs too much? Probably, but that’s not without reason. There is innovation there that draws people in. The question is, how can we improve it? From a front-of-the-front-end perspective, the fact that front-end frameworks like React encourage demand us write a front-end in components is compelling all by itself. There is optimism and pessimism in both posts. The ending sentences of both are starkly different.</p>\n\n<p><strong>npm v7 Series - Arborist Deep Dive</strong><br />\nhttps://blog.npmjs.org/post/618653678433435649/npm-v7-series-arborist-deep-dive<br />\n@npmcli/arborist is the dependency tree manager for npm, new in npm v7. It provides facilities for doing nearly everything that npm does with package trees, and fully replaces large parts of the npm CLI codebase. Way back in the summer of 2019, I stumbled upon and wrote about an old bug buried deep in npm’s read-package-tree module. At the time, I was just trying to work out why npm install was so much slower than npm ci, and if there was anything that could be done about it. Stumbling across that weird old bug, and seeing the refactoring required to fix it, is what led eventually to Arborist.</p>\n\n<p><strong>The Unreasonable Effectiveness Of Declarative Programming</strong><br />\nhttps://bollu.github.io/mathemagic/declarative/index.html<br />\nI show off minanim.js , a tiny, 100LoC, yet feature-complete library for building animations declaratively, and why someone would want to do things this way. Enjoy!</p>\n\n<p><strong>Stealing Secrets from Developers using Websockets</strong><br />\nhttps://medium.com/@stestagg/stealing-secrets-from-developers-using-websockets-254f98d577a0<br />\nA couple of articles have hit the sites recently about websites abusing websocket functionality to port-scan user’s computers’. The reason these techniques work is because browsers allow websockets from public origins to open websockets connections to localhost without many protections. This got me thinking. I know that popular JavaScript frameworks use websockets in development to automatically reload pages when content changes. Could a malicious website eaves-drop on that traffic, and find out when developers are saving their code? The reality was slightly worse than I had thought.</p>\n\n<p><strong>The Great CoffeeScript to Typescript Migration of 2017</strong><br />\nhttps://dropbox.tech/frontend/the-great-coffeescript-to-typescript-migration-of-2017<br />\nThis post is longer than most. We wanted to capture the massive scope of migrating hundreds of thousands of lines of CoffeeScript to TypeScript. We share how we picked TypeScript in the first place, how we mapped out the migration, and when things didn’t go according to plan. The migration wrapped up in fall 2017. In the process we developed some pretty nifty tooling, and became one of the first companies to adopt TypeScript at scale.</p>\n\n<p><strong>What a typical 100% Serverless Architecture looks like in AWS!</strong><br />\nhttps://medium.com/serverless-transformation/what-a-typical-100-serverless-architecture-looks-like-in-aws-40f252cd0ecb<br />\nWhat would such an architecture look like on a web project? At Theodo, we’re loving serverless and using the technology on more and more projects. Some services and patterns start to be used extensively. So we decided to share our architecture best-practices for a web application. If you are new to serverless and looking for a high level guide answering those questions, you’ve come to the right place! 另附：<a href=\"https://stackoverflow.blog/2020/05/18/you-want-efficient-application-scaling-go-serverless/\">You want efficient application scaling? Go serverless!</a>.</p>\n\n<p><strong>Data-Driven Algorithm Design</strong><br />\nhttps://cacm.acm.org/magazines/2020/6/245164-data-driven-algorithm-design/fulltext<br />\nThe best algorithm for a computational problem generally depends on the “relevant inputs,” a concept that depends on the application domain and often defies formal articulation. Although there is a large literature on empirical approaches to selecting the best algorithm for a given application domain, there has been surprisingly little theoretical analysis of the problem. We model the problem of identifying a good algorithm from data as a statistical learning problem. Our framework captures several state-of-the-art empirical and theoretical approaches to the problem, and our results identify conditions under which these approaches are guaranteed to perform well. We interpret our results in the contexts of learning greedy heuristics, instance feature-based algorithm selection, and parameter tuning in machine learning.</p>\n\n<p><strong>Three bugs in the Go MySQL Driver</strong><br />\nhttps://github.blog/2020-05-20-three-bugs-in-the-go-mysql-driver/<br />\nAdding to this challenge, authzd is deployed to our Kubernetes clusters, where we’ve been experiencing issues with high latencies when opening new TCP connections, something that particularly affects the pooling of connections in the Go MySQL driver. One of the most dangerous lies that programmers tell themselves is that the network is reliable, because, well, most of the time the network is reliable. But when it gets slow or spotty, that’s when things start breaking, and we get to find out the underlying issues in the libraries we take for granted. Here’s what it took, from a MySQL point of view, to get authzd ready to serve all our production traffic while meeting our availability SLOs.</p>\n\n<p><strong>SQL Is Dead, Right?</strong><br />\nhttps://thenewstack.io/sql-is-dead-right/<br />\nIn 2020, SQL begins to think about its near half-century reign. It is a solid, relatively easy to use (and certainly, very familiar), reliable solution that just gets the job done. As the armies of analysts and database developers who know and love it will attest, SQL has been a groundbreaker in its field. After all, it’s the language of the relational databases that deliver the solutions that power every big enterprise and has done so for decades.</p>\n\n<p><strong>Designing tasteful CLIs: a case study</strong><br />\nhttp://esr.ibiblio.org/?p=8697<br />\nIan is working on a utility he calls “igor” intended to script interactions with GitLab, a major public forge site. Like many such sites, it has a sort of remote-procedure-call interface that allows you, as an alternative to clicky-dancing on the visible Web interface, to pass it JSON datagrams and get back responses that do useful things like – for example – publishing a release tarball of a project where GitLab users can easily find it.</p>\n\n<p><strong>Five Years of Rust</strong><br />\nhttps://blog.rust-lang.org/2020/05/15/five-years-of-rust.html<br />\nWith all that’s going on in the world you’d be forgiven for forgetting that as of today, it has been five years since we released 1.0! Rust has changed a lot these past five years, so we wanted to reflect back on all of our contributors’ work since the stabilization of the language.</p>\n\n<h2 id=\"新鲜货\">新鲜货</h2>\n\n<p><strong>Electron 9.0.0</strong><br />\nhttps://www.electronjs.org/blog/electron-9-0<br />\nElectron 9.0.0 has been released! It includes upgrades to Chromium 83, V8 8.3, and Node.js 12.14. We’ve added several new API integrations for our spellchecker feature, enabled PDF viewer, and much more! 另附：<a href=\"https://news.ycombinator.com/item?id=23211851\">Is there still a place for native desktop apps</a>.</p>\n\n<p><strong>AI-powered code submissions</strong><br />\nhttps://daniel.haxx.se/blog/2020/05/20/ai-powered-code-submissions/<br />\nOn this day, the curl project received the first “AI-powered” submitted issues and pull-requests. They were submitted by MonocleAI, which is described as: MonocleAI, an AI bug detection and fixing platform where we use AI &amp; ML techniques to learn from previous vulnerabilities to discover and fix future software defects before they cause software failures.</p>\n\n<p><strong>What Is Nix</strong><br />\nhttps://engineering.shopify.com/blogs/engineering/what-is-nix<br />\nThe most basic, fundamental idea behind Nix is this: Everything on your computer implicitly depends on a whole bunch of other things on your computer. All software exists in a graph of dependencies. Most of the time, this graph is implicit. Nix makes this graph explicit.</p>\n\n<p><strong>Announcing React Native for macOS and more</strong><br />\nhttps://microsoft.github.io/react-native-windows/blog/2020/05/19/rn4mupdadates<br />\nWe’re excited to announce our first preview release aligning with React Native 0.62! As a preview release, we will try our best not to make breaking changes, but still have a few bumps to sort out before we’re ready for release. You can now start trying out the 0.62-preview of React Native for Windows! A similar upgrade for React Native for macOS is in progress. Stay tuned for the next update!</p>\n\n<p><strong>A Complete Walkthrough to Using WebGL</strong><br />\nhttps://xem.github.io/articles/webgl-guide.html<br />\nThis guide is a complete, summarized WebGL tutorial, with tiny interactive demos in each chapter. It’s mainly inspired by the book WebGL Programming Guide and the websites Webgl2Fundamentals, LearnWebgl &amp; MDN. Starting nearly from scratch, you’ll be able to create your own 3D interactive scenes without needing to use any library or framework: only vanilla JS &amp; WebGL. My goal was to gather all the information and tricks about WebGL I found scattered everywhere, and present them in a short and helpful way. I hope you’ll enjoy it!</p>\n\n<p><strong>Defold</strong><br />\nhttps://defold.com/<br />\nDefold is a free and open game engine with a developer-friendly license.</p>\n\n<p><strong>umi-request</strong><br />\nhttps://github.com/umijs/umi-request/blob/master/README_zh-CN.md<br />\n网络请求库，基于 fetch 封装, 兼具 fetch 与 axios 的特点, 旨在为开发者提供一个统一的 api 调用方式, 简化使用, 并提供诸如缓存, 超时, 字符编码处理, 错误处理等常用功能.</p>\n\n<p><strong>React-Pivot</strong><br />\nhttps://github.com/davidguttman/react-pivot<br />\nReact-Pivot is a data-grid component with pivot-table-like functionality for data display, filtering, and exploration.</p>\n\n<p><strong>React Motion Layout</strong><br />\nhttps://github.com/jeffersonlicet/react-motion-layout<br />\nBeautiful immersive React hero animations.</p>\n\n<p><strong>Revealjs V4.0</strong><br />\nhttps://github.com/hakimel/reveal.js/releases/tag/4.0.0<br />\nreveal.js is an open source HTML presentation framework. It enables anyone with a web browser to create fully featured and beautiful presentations for free.</p>\n\n<p><strong>Howler.js</strong><br />\nhttps://github.com/goldfire/howler.js<br />\nJavascript audio library for the modern web.</p>\n\n<p><strong>new.css</strong><br />\nhttps://newcss.net/<br />\nnew.css is a classless CSS framework to write modern websites using only HTML. It’s ~4.5kb. It’s perfect for: A dead-simple blog; Collecting your most used links; Making a simple “about me” site; Rendering markdown-generated HTML. 另附：<a href=\"https://dohliam.github.io/dropin-minimal-css/\">Drop-in Minimal CSS</a>.</p>\n\n<p><strong>XP.css</strong><br />\nhttps://botoxparty.github.io/XP.css/<br />\nA design system for building faithful recreations of old UIs.</p>\n\n<p><strong>ws: a Node.js WebSocket library</strong><br />\nhttps://github.com/websockets/ws<br />\nws is a simple to use, blazing fast, and thoroughly tested WebSocket client and server implementation. Passes the quite extensive Autobahn test suite: server, client.</p>\n\n<p><strong>Discrete Mathematics - An Open Introduction, 3rd edition</strong><br />\nhttp://discrete.openmathbooks.org/dmoi3.html<br />\nThe text began as a set of lecture notes for the discrete mathematics course at the University of Northern Colorado. This course serves both as an introduction to topics in discrete math and as the “introduction to proofs” course for math majors. The course is usually taught with a large amount of student inquiry, and this text is written to help facilitate this. Four main topics are covered: counting, sequences, logic, and graph theory. Along the way, proofs are introduced, including proofs by contradiction, proofs by induction, and combinatorial proofs. 另附：<a href=\"https://jeremykun.com/2020/05/17/second-edition-of-a-programmers-introduction-to-mathematics/\">Second Edition of A Programmer’s Introduction to Mathematics</a>.</p>\n\n<h2 id=\"设计\">设计</h2>\n\n<p><strong>Responsible Innovation: The Next Wave of Design Thinking</strong><br />\nhttps://medium.com/microsoft-design/responsible-innovation-the-next-wave-of-design-thinking-86bc9e9a8ae8<br />\nBuilding your moral imagination to create a more ethical future.</p>\n\n<p><strong>Design education for the next generation</strong><br />\nhttps://blog.marvelapp.com/design-education-next-generation/<br />\nHow School of Art at California State University Long Beach use Marvel to bring students up to speed with real industry tools.</p>\n\n<p><strong>Can Data Visualization Improve The Mobile Web Experience?</strong><br />\nhttps://www.smashingmagazine.com/2020/05/data-visualization-mobile-web-experience/<br />\nSince more and more web traffic comes from mobile users, our websites need to be in the best position to serve them. The easiest thing to do would be to remove unnecessary content from the site. However, it may not always be the best solution. In this article, Suzanne Scacca proposes some ways to turn essential content into graphics to conserve space, create a more engaging UI and preserve the overall integrity of your content on mobile.</p>\n\n<p><strong>Modern Touch-Friendly Design</strong><br />\nhttps://addyosmani.com/blog/touch-friendly-design/<br />\nThese are touch-friendly guidelines I strive to follow for my apps and am happy to recommend to others. I’ve visualized these recommendations for YouTube and Twitter’s mobile sites.</p>\n\n<h2 id=\"产品及其它\">产品及其它</h2>\n\n<p><strong>Architecture Jams: a Collaborative Way of Designing Software</strong><br />\nhttps://blog.pragmaticengineer.com/software-architecture-jams/<br />\nMost successful projects I’ve seen from rebuilding Uber’s payments systems to building Skype for the Web all started as an architecture jam. Of course, eventually these massive projects broke up to multiple streams, with their own architecture jams. Some were more, and some less efficient. Here are approaches I’ve seen good architecture jams follow, over the years.</p>\n\n<p><strong>It’s Time to Get Back Into RSS</strong><br />\nhttps://danielmiessler.com/blog/its-time-to-get-back-into-rss/<br />\nWe all mourned when Reader died and took RSS with it, but it’s time to return to what made it great. A lot of people who were on the internet in the early 2000’s remember something called RSS. It stands for really simple syndication, and it allowed content creators to publish updates to the world in a well-understood format. The idea—which seems strange to type out—is that millions of people in the world could create and publish ideas, thoughts, and content…and then people who enjoyed that content would collect sources into a reader, which was called, well, an RSS Reader.</p>\n\n<p><strong>玉伯：做一个简单自由有爱的技术人</strong><br />\nhttps://segmentfault.com/a/1190000022676508<br />\n前端工程师如何成长？如何管理前端团队？如何打造团队文化？近日，蚂蚁研究员兼体验技术部负责人玉伯，在蚂蚁内部技术人的成长公开课上，分享了他的人生愿景和心路历程。</p>\n\n<p><strong>如果失去华为，中国会怎样</strong><br />\nhttps://mp.weixin.qq.com/s/-eYKZ25-yUZ72n_ZQBcwYg<br />\n华为的问题，不是一个简单的企业问题，美国已经将华为的问题，上升到了政治和国家安全的角度，这背后一定是有战略性考量的，中国一定要以同等的支持，来帮助华为脱困，这关系到能否保住中国改革开放成果的问题，也可以说关系到中国国运的问题。另附：<a href=\"https://mp.weixin.qq.com/s/I6YrGg3DiouPYmB4_FWC3w\">任正非：我的精神导师是毛泽东</a>。</p>\n\n<blockquote>\n  <p>对数据可视化有兴趣的可以阅读由 AntV 带来的 <a href=\"https://www.yuque.com/mo-college/weekly/wwucgc\">墨者修齐 2020-05-24 Happy Data、数据匿名化的五种方法、星空彩绘诺贝尔、城市建筑档案的可视化</a></p>\n</blockquote>\n\n<p>– THE END —</p>\n","descriptionType":"text/html","publishedDate":"Mon, 25 May 2020 00:00:00 +0000","feedId":762,"bgimg":"","linkMd5":"a7cc728a5411656aee62c850f3add26a","metaImg":"","author":""},{"createdTime":"2020-08-16 21:01:28","updatedTime":"2020-08-16 21:01:28","title":"FEX 技术周刊 - 2020/04/20","link":"http://fex.baidu.com/blog/2020/04/fex-weekly-20/","description":"作者：zengdeping <br> <h1 id=\"20200420---azure世界的电脑\">2020.04.20 - Azure：世界的电脑</h1>\n\n<h2 id=\"业界会议\">业界会议</h2>\n\n<p><strong>Microsoft Online Tech Forum</strong><br />\nhttps://techforum.microsoft.com/virtualsummit/zh-cn/index<br />\nMicrosoft Online Tech Forum 微软在线技术峰会是一场面向技术专业人群与生态合作伙伴的前沿科技交流大会。围绕“数字化转型加速度”主题，以微软自身技术发展和数字化转型实践为引，从云，生产力、商业应用及数字化转型实践层面助力企业及个人提升自身技术实力，加速数字化转型，成就智能未来。强烈推荐两个主题演讲：炉边对谈及技术愿景解读、微软 Azure：世界的电脑。对 Low Code 感兴趣的同学可以关注 Power Platform。</p>\n\n<h2 id=\"深阅读\">深阅读</h2>\n\n<p><strong>Refactoring: This class is too large</strong><br />\nhttps://martinfowler.com/articles/class-too-large.html<br />\nAn example of refactoring from a real (flawed) code base. In this article I walk through a set of refactorings from a real code base. This is not intended to demonstrate perfection, but it does represent reality.</p>\n\n<p><strong>Writing an Emulator in JavaScript (and Interfacing with Multiple UIs)</strong><br />\nhttps://www.taniarascia.com/writing-an-emulator-in-javascript-chip8/<br />\nI spent a good portion of my childhood playing emulated NES and SNES games on my computer, but I never imagined I’d write an emulator myself one day. However, my boyfriend Vanya challenged me to write a Chip-8 interpreter to learn some of the basic concepts of lower-level programming languages and how a CPU works, and the end result is a Chip-8 emulator in JavaScript that I wrote with his guidance.</p>\n\n<p><strong>Reusable Code: The Good, the Bad, and the Ugly</strong><br />\nhttps://codeburst.io/reusable-code-the-good-the-bad-and-the-ugly-e49cd7bd696<br />\nThe mythical “reusable code” idea has existed for decades. It showed up shortly after the first lines of code were written. We preach re-usability and sometimes strive for it but it rarely becomes a reality. I’ve seen various levels of success with this over the years. Everything from “we have a \nreusable library that 75% of us use” to “we have shared code libraries here, but never use them in your projects”. A recent discussion led me to think about this. Why don’t more software development organizations have shared code libraries?</p>\n\n<p><strong>The evolution of asynchronous programming in JavaScript</strong><br />\nhttps://blog.logrocket.com/evolution-async-programming-javascript/<br />\nIn this article, we will use callbacks, promises, and async/await to illustrate the concepts of async JavaScript and explain how they work.</p>\n\n<p><strong>前端生产方式：过去 10 年回顾和未来 10 年展望</strong><br />\nhttps://mp.weixin.qq.com/s/c6-9wnxKTq5w3BVqlBFxPQ<br />\n在写这篇文章之前，我一直在思考该用什么的方式能讲清楚前端为什么要向智能化方向切换的理由，真的反复思考很久，后来决定还是以我做前端的过去 10 年的所见所闻来做个解答吧，这样让大家也都更有些体感。</p>\n\n<p><strong>面向对象编程，再见！</strong><br />\nhttps://mp.weixin.qq.com/s/MndDONJy6it8G_kJZK1yww<br />\n几十年来我都在用面向对象的语言编程。我用过的第一个面向对象的语言是 C++，后来是 Smalltalk，最后是 .NET 和 Java。我曾经对使用继承、封装和多态充满热情。它们是范式的三大支柱。我渴望实现重用之美，并在这个令人兴奋的新天地中享受前辈们积累的智慧。想到将现实世界的一切映射到类中，使得整个世界都可以得到整齐的规划，我无法抑制自己的兴奋。然而我大错特错了。当然，面向对象在早期承诺了许多。而直到今天，这些承诺依然在教室里、博客上和网上资源中传授给青涩的程序员们。我花了多年才意识到面向对象的谎言。以前我也曾经青涩，曾经轻信。然后我发现被骗了。再见，面向对象编程。</p>\n\n<p><strong>从MongoDB迁移到ES后，我们减少了80%的服务器</strong><br />\nhttps://mp.weixin.qq.com/s/q-RJx6UPDakWimNnWo_bUA<br />\n本文内容涉及到MongoDB与Elasticsearch两大阵营，可能会引起口水之争，仅代表个人经验之谈，非阵营之说，围绕两个话题展开：为什么要从MongoDB迁移到Elasticsearch？如何从MongoDB迁移到Elasticsearch？</p>\n\n<p><strong>33 line React</strong><br />\nhttps://leontrolski.github.io/33-line-react.html<br />\nIn this post, I’m going to make the smallest React-like thing that can do the above. It’s very mithril influenced.</p>\n\n<p><strong>Profiling React.js Performance</strong><br />\nhttps://addyosmani.com/blog/profiling-react-js/<br />\nToday, we’ll look at measuring React component render performance with the React Profiler API, measuring interactions with React’s new experimental Interaction Tracing API and measuring custom metrics using the User Timing API.</p>\n\n<p><strong>Auto Effect Pattern with Redux and React Hooks</strong><br />\nhttps://tech.ebayinc.com/engineering/auto-effect-pattern-with-redux-and-react-hooks/<br />\nA pattern for managing HTTP requests with Redux and React hooks. It separates concerns of data fetching and binding logic from components into hooks to make it easier to use.</p>\n\n<p><strong>Best Practices With React Hooks</strong><br />\nhttps://www.smashingmagazine.com/2020/04/react-hooks-best-practices/<br />\nThis article covers the rules of React Hooks and how to effectively start using them in your projects. Please note that in order to follow this article in detail, you will need to know how to use React Hooks.</p>\n\n<p><strong>Gain access to your functions with CORS</strong><br />\nhttps://www.openfaas.com/blog/function-cors/<br />\nThis post will show you how to gain access to your functions from a known endpoint through the use of CORS headers.</p>\n\n<p><strong>Userscripts Are Fun And Are Still Very Much Relevant</strong><br />\nhttps://dutzi.party/userscripts-are-fun/<br />\nhttps://github.com/dutzi/userscripts/<br />\nA userscript is a script that usually helps make the web a better place. Want to use J and K keys to scroll through the new Facebook UI? There’s a userscript for that! Need that YouTube video on your drive? Guess what? You can!</p>\n\n<p><strong>Comparing HTTP/3 vs. HTTP/2 Performance</strong><br />\nhttps://blog.cloudflare.com/http-3-vs-http-2/<br />\nwe’re very excited to be allowed to help push this standard forward. Our implementation is holding up well, offering better performance in some cases and at worst similar to HTTP/2. As the standard finalizes, we’re looking forward to seeing browsers add support for HTTP/3 in mainstream versions. As for us, we continue to support the latest drafts while at the same time looking for more ways to leverage HTTP/3 to get even better performance, be it congestion tuning, prioritization or system capacity (CPU and raw network throughput). 另附：<a href=\"https://www.fastly.com/blog/how-http3-and-quic-help-long-tail-connections\">How HTTP/3 and QUIC aim to help the connections that need it most</a>.</p>\n\n<p><strong>Object Stores Starting to Look Like Databases</strong><br />\nhttps://www.datanami.com/2020/04/16/object-stores-starting-to-look-like-databases/<br />\nTechnically, any repository of data could be considered a ‘database’ but now object stores, such as those vast repositories of data sitting behind an S3 API, are beginning to resemble more structured, traditional databases in many ways. This feels a trend and market that will continue to grow in the near future.</p>\n\n<p><strong>TerminusDB: A Technical History</strong><br />\nhttp://blog.terminusdb.com/2020/04/14/terminusdb-a-technical-history/<br />\nTerminusDB is an open source (GPLv3) full featured in-memory graph database management system with a rich query language: WOQL (the Web Object Query Language).</p>\n\n<p><strong>The Computer Scientist Who Can’t Stop Telling Stories</strong><br />\nhttps://www.quantamagazine.org/computer-scientist-donald-knuth-cant-stop-telling-stories-20200416/<br />\nFor pioneering computer scientist Donald Knuth, good coding is synonymous with beautiful expression.</p>\n\n<p><strong>Finally We May Have a Path to the Fundamental Theory of Physics… and It’s Beautiful</strong><br />\nhttps://writings.stephenwolfram.com/2020/04/finally-we-may-have-a-path-to-the-fundamental-theory-of-physics-and-its-beautiful/<br />\nThe most important thing—about which I’m extremely excited—is that I think we’re finally on the right track. Of course, perhaps not surprisingly, it’s still technically difficult. Part of that difficulty comes directly from computational irreducibility and from the difficulty of working out the consequences of underlying rules. But part of the difficulty also comes from the very success and sophistication of existing physics.</p>\n\n<p><strong>How to Rediscover the Joy of Programming?</strong><br />\nhttps://news.ycombinator.com/item?id=22860682<br />\nA popular Hacker News discussion from this week about how to make programming really click for you, rather than being merely a daily slog.</p>\n\n<h2 id=\"新鲜货\">新鲜货</h2>\n\n<p><strong>Edge 81 稳定版亮点速览</strong><br />\nhttps://sspai.com/post/60041<br />\n经历了早前简短的 暂停 后，新版 Edge 浏览器近期向稳定版用户正式推送了 Edge 81 稳定版本，在这个版本中，不少 Edge 浏览器独有的特色体验悉数回归，总算是实现了 Web 标准兼容性和特色功能之间的完美平衡。在这篇文章中我们就来对 Edge 浏览器新版更新中的亮点进行汇总。</p>\n\n<p><strong>Bash 脚本教程</strong><br />\nhttps://wangdoc.com/bash/<br />\n阮一峰老师的互联网文档计划中的 Bash 教程，介绍 Linux 命令行 Bash 的基本用法和脚本编程。</p>\n\n<p><strong>GitHub is now free for teams</strong><br />\nhttps://github.blog/2020-04-14-github-is-now-free-for-teams/<br />\nThis means teams can now manage their work together in one place: CI/CD, project management, code review, packages, and more. We want everyone to be able to ship great software on the platform developers love. 另附：<a href=\"https://github.blog/2020-04-15-npm-has-joined-github/\">npm has joined GitHub</a>, <a href=\"https://blog.npmjs.org/post/615388323067854848/so-long-and-thanks-for-all-the-packages\">So long, and thanks for all the packages!</a>.</p>\n\n<p><strong>Announcing CodePen support for Flutter</strong><br />\nhttps://medium.com/flutter/announcing-codepen-support-for-flutter-bb346406fe50<br />\nCodePen has been a big fan of Flutter and the Dart programming language for years. We’re pretty pumped that Flutter now supports mobile and the web. The Flutter community is growing fast, which is why we’re excited to support Flutter with its own custom CodePen editor! Flutter is officially a first-class member of the CodePen community. We can’t wait to see what you build with Flutter on CodePen.</p>\n\n<p><strong>Puppeteer 3.0</strong><br />\nhttps://github.com/puppeteer/puppeteer/releases/tag/v3.0.0<br />\nPuppeteer can now fetch a Firefox Nightly binary for you via PUPPETEER_PRODUCT=firefox npm install. Also, there’s now an example showing how to launch Firefox with Puppeteer.</p>\n\n<p><strong>What’s New in Swift 5.2</strong><br />\nhttps://www.raywenderlich.com/9224115-what-s-new-in-swift-5-2<br />\nSwift 5.2 is now available as part of Xcode 11.4. In this article, you’ll get an overview of the changes you’ll see moving to Swift 5.2.</p>\n\n<p><strong>All 200+ Google Cloud products described in 4 words or less</strong><br />\nhttps://medium.com/google-cloud/google-cloud-products-described-in-4-words-or-less-7776af0552cd<br />\n‪Includes Google Cloud, Firebase, Google Maps Platform, G Suite APIs.</p>\n\n<p><strong>Vime</strong><br />\nhttps://vime-js.com/<br />\nAll your media player needs in one place - a modern alternative to Videojs and Plyr. Supports Html5, Hls, Dash, YouTube, Vimeo, Dailymotion and more to come.</p>\n\n<p><strong>React PDF viewer</strong><br />\nhttps://github.com/phuoc-ng/react-pdf-viewer<br />\nA React component to view a PDF document. It’s written in TypeScript, and powered by React hooks completely.</p>\n\n<p><strong>Flip Counter Plugin</strong><br />\nhttps://pqina.nl/flip/<br />\nflip is the most advanced Flip counter plugin available on the web. It’s super easy to setup, amazingly flexible and beautifully animated.</p>\n\n<p><strong>node-libcurl - libcurl bindings for Node.js.</strong><br />\nhttps://github.com/JCMais/node-libcurl<br />\nThe fastest URL transfer library for Node.js.</p>\n\n<p><strong>Falcon: Free, open-source SQL client for Windows and Mac</strong><br />\nhttps://github.com/plotly/falcon<br />\nFalcon is a free, open-source SQL editor with inline data visualization. It currently supports connecting to RedShift, MySQL, PostgreSQL, IBM DB2, Impala, MS SQL, Oracle, SQLite and more (for connecting to Oracle, please, see here the instructions to install the required free Oracle Instant Client). 另附：<a href=\"https://tableplus.com/\">TablePlus - Database management made easy</a>.</p>\n\n<p><strong>The Webpage, an online RSS reader and news aggregator, styled like a newspaper</strong><br />\nhttps://news.russellsaw.io/?id=8ae26a2e-ec3b-41f3-bd7c-688349737e7e<br />\nRSS Feeds for the 20th century.</p>\n\n<p><strong>KolibriOS</strong><br />\nhttps://kolibrios.org/en/<br />\nKolibriOS is a tiny yet incredibly powerful and fast operating system. This power requires only a few megabyte disk space and 8MB of RAM to run. Kolibri features a rich set of applications that include word processor, image viewer, graphical editor, web browser and well over 30 exciting games. Full FAT12/16/32 support is implemented, as well as read-only support for NTFS, ISO9660 and Ext2/3/4. Drivers are written for popular sound, network and graphics cards.</p>\n\n<p><strong>Workstream</strong><br />\nhttps://workstream.paperspace.com/<br />\nYour full computer in the cloud. Workstream is a super fast, virtual computer you can use for anything.</p>\n\n<p><strong>Front-End Challenges</strong><br />\nhttps://css-tricks.com/front-end-challenges/<br />\nMy favorite way to level up as a front-end developer is to do the work. Literally just build websites. If you can do it for money, great, you should. If the websites you make can help yourself or anyone else you care about, then that’s also great. In lieu of that, you can also make things simply for the sake of making them, and you’ll still level up. It’s certainly better than just reading about things!</p>\n\n<h2 id=\"设计\">设计</h2>\n\n<p><strong>The Decline of Usability</strong><br />\nhttps://datagubbe.se/decusab/<br />\nIn which we delve into the world of user interface design.</p>\n\n<p><strong>Inclusive Design vs Accessible Design (with Infographic)</strong><br />\nhttps://www.toptal.com/designers/ui/inclusive-design-infographic<br />\nEvery designer, regardless of their specialty, should aim to create digital products that can be used by the widest range of people. To do that, they must step away from preconceived notions of what a “typical” user is, and instead, look at people as unique, diverse individuals who have differing abilities at different times in their lives, based on their particular environment.</p>\n\n<p><strong>Open UI</strong><br />\nhttps://open-ui.org/<br />\nUI component patterns have evolved and stabilized but have not made their way to browsers or standards. Designers and developers reinvent the same components for every product they build. When building a web app or web page designers and developers should have a common set of components at their disposal. We shouldn’t have to rebuild a dropdown, modal dialog, split button, or other components before we build our products.</p>\n\n<h2 id=\"产品及其它\">产品及其它</h2>\n\n<p><strong>Google Wave 的失败给现代实时协作办公的一个重大教训</strong><br />\nhttps://mp.weixin.qq.com/s/dXpC-NOdGVkqTsbKeKl8ng<br />\n当Google Wave在2009年的I/O大会上首次亮相时，人们感到它是一种与众不同的工具。不仅是因为它是远程办公热潮出现之前的第一个统一办公区和协作平台，而且还在尝试解决如今我们面临的许多问题。然而，不到两年的时间，Google Wave就失败了。如果我们回顾该平台的推出方式，就不会对于为何它在Saas创新历史上的昙花一现感到奇怪了。该产品缺乏重点，涉及定位问题以及发布计划乏善可陈等等，而且这些只是其中的部分问题。如今，由于越来越多的公司采用分布式模型，因此从Wave的错误中吸取教训非常重要。随着实时协作工具的全面兴起，反思先驱的故事可以为未来提供宝贵的经验教训。</p>\n\n<p><strong>A New Hope</strong><br />\nhttp://blog.cleancoder.com/uncle-bob/2020/04/05/ANewHope.html<br />\nAre you glad you’re a programmer Dad? It’s an important job, Son. I never want to be anything else. Except, of course, your Dad.</p>\n\n<blockquote>\n  <p>对数据可视化有兴趣的可以阅读由 AntV 带来的 <a href=\"https://www.yuque.com/mo-college/weekly/mu76li\">墨者修齐 2020-04-19 · 香港特别行政区行政长官林郑月娥的民众支持率、Space Junk、龙卷风迁移-可视化大数据移动、The flowing Vector Map</a></p>\n</blockquote>\n\n<p>– THE END –</p>\n","descriptionType":"text/html","publishedDate":"Mon, 20 Apr 2020 00:00:00 +0000","feedId":762,"bgimg":"","linkMd5":"5ca0d87a7c0ffea8d72fb51fe04d953e","metaImg":"","author":""},{"createdTime":"2020-08-16 21:01:28","updatedTime":"2020-08-16 21:01:28","title":"FEX 技术周刊 - 2020/03/23","link":"http://fex.baidu.com/blog/2020/03/fex-weekly-23/","description":"作者：Dafrok <br> <h2 id=\"深阅读\">深阅读</h2>\n\n<p><strong>Wikimedia (The Folks Behind Wikipedia) Are Adopting Vue.js</strong><br />\nhttps://phabricator.wikimedia.org/T241180<br />\nWikimedia will be using Vue for their future front-end development, but no, Wikipedia is not becoming an SPA! This post digs into the how and why of the decision, while on Twitter, Vue.js creator Evan You <a href=\"https://twitter.com/youyuxi/status/1240635308141613056\">explains more from his side</a>. Hacker News had <a href=\"https://news.ycombinator.com/item?id=22625556\">a very busy thread</a> on the topic too. 另附：<a href=\"https://plausible.io/blog/you-probably-dont-need-a-single-page-app\">You probably don’t need a single-page application</a>.</p>\n\n<p><strong>Please consider not adopting Google WebComponents</strong><br />\nhttps://forum.palemoon.org/viewtopic.php?f=1&amp;t=24004<br />\nhttps://news.ycombinator.com/item?id=22604070<br />\nDear Web Developer(s), While, as a software developer ourselves, we understand very well that new features are exciting to use and integrate into your work, we ask that you please consider not adopting Google WebComponents in your designs. This is especially important if you are a web developer creating frameworks for websites to use. With Google WebComponents here we mean the use of CustomElements and Shadow DOM, especially when used in combination, and in dynamically created document structures (e.g. using module loading/unloading and/or slotted elements). 另附两个浏览器相关的：<a href=\"https://drewdevault.com/2020/03/18/Reckless-limitless-scope.html\">The reckless, infinite scope of web browsers</a>, <a href=\"https://github.com/luruke/browser-2020\">Things you can do with a browser in 2020</a>.</p>\n\n<p><strong>How to do effective video calls</strong><br />\nhttps://martinfowler.com/articles/effective-video-calls.html<br />\nDuring 2011-2012 there was a small but significant revolution in how we worked at ThoughtWorks. When we needed to communicate while separated we used to do telephone meetings, but within a year the telephone disappeared and we started using video calls instead. As we got more comfortable with video, we took more opportunity to collaborate with video meetings rather than trying to get everyone together in one place. Now the Coronavirus Disease 2019 (Covid-19) has struck, a lot more people are getting acquainted with remote working and the video calls that come with them. So I thought I’d share some of things I, and my colleagues, have learned about doing them.</p>\n\n<p><strong>7.9.0 Released: Smaller preset-env output, Typescript 3.8 support and a new JSX transform</strong><br />\nhttps://babeljs.io/blog/2020/03/16/7.9.0<br />\nWhile preparing the Babel 8.0.0 release (in the next months), we just finished working on a new minor release which includes updates related to @babel/preset-env, TypeScript 3.8, Flow, and JSX!</p>\n\n<p><strong>An Interactive Introduction to AntV</strong><br />\nhttps://observablehq.com/@jiazhewang/introduction-to-antv<br />\nAntV is an technology brand for data visualization. It contains multiple open-source JavaScript libraries to support visualization needs in various fields, including statistical charts, graph visualization, geospatial visualization and even automatic chart recommendation and generation. Tested by huge data business in Ant Financial Services Group and Alibaba Group, it can guarantee various data analysis scenarios. This notebook will introduce the capabilities of AntV in various aspects and show you related demos.</p>\n\n<p><strong>进无止境，AntV 统计图表 G2Plot 1.0 发布</strong><br />\nhttps://www.yuque.com/antv/blog/igfe4h<br />\nG2Plot 是一个开箱即用、易于配置、体验优雅的统计图表库，致力于帮助用户以最小成本生成高质量统计图表。 G2Plot 最初诞生于阿里经济体 BI 产品真实场景的业务诉求。动态、高度不确定是 BI 产品和中台系统业务数据的一个普遍特征，而这种特征对统计图表的功能和体验提出了巨大的挑战。如何能够帮助报表系统和一线前端在复杂数据条件下快速高效地创建统计图表，同时保证图表在各种显示空间和数据状态下的可读性和可用性？ 为解决这两个痛点问题，AntV 与 DeepInsight、QuickBI 和 FBI，阿里经济体三个优秀 BI 产品技术团队联手打造了 G2Plot。自去年 11 月发布 0.x 试用版后，G2Plot 经历了 20 多个小版本的迭代优化，图表类型已从最常用的 7 个扩展到 40 多个，在核心 BI 产品真实场景上线验证后终于带来 1.0 正式版。希望我们在数据可视化业务，特别是 BI 产品中的开发和设计经验能够帮助到更多用户轻松制作优雅的统计图表。</p>\n\n<p><strong>前后端一体化：前后端分离将死</strong><br />\nhttps://mp.weixin.qq.com/s/s7MwTrP-bsrlUAco1vNGTw<br />\n在所有的引子里， 我们已经准备了所有的论据，所以只需要：</p>\n<ul>\n  <li>使用可以跨前后端的语言，构建领域模型</li>\n  <li>将后端服务、前端设施细化为更小的组件</li>\n  <li>设计 DSL 将领域模型转换到特定平台的代码<br />\n你就可以杀死前后端分离，就是这么简单。前后端分离将死，不是现在，但是可能在五年后开始。你说呢？</li>\n</ul>\n\n<p><strong>React Production Performance Monitoring</strong><br />\nhttps://kentcdodds.com/blog/react-production-performance-monitoring<br />\nHow to set up performance monitoring for production React applications. 另附：<a href=\"https://blog.bitsrc.io/5-recommended-tools-for-optimizing-performance-in-reactjs-29eb2a3ec46d\">5 Recommended Tools for Optimizing Performance in ReactJS</a>.</p>\n\n<p><strong>How to Use WordPress with React to Build a Modern Web App</strong><br />\nhttps://snipcart.com/blog/reactjs-wordpress-rest-api-example<br />\nWordPress REST API is a huge step forward for frontend developers looking to combine the power of JavaScript frameworks like React (or Vue.js) with WordPress. This is exactly what I want to do today with this demo of the WordPress REST API in the work. I’ll use WordPress as a backend, and the REST API to feed data into a React app.</p>\n\n<p><strong>‘CSS X’</strong><br />\nhttps://www.w3.org/blog/2020/03/css-x/<br />\nCSS development started some 25 years ago. Originally the goal was to provide some good but simple typography for a single column of text with the occasional image. But the technology proved popular, and flexible enough that the scope could be made much wider. And since then the work of adding new capabilities hasn’t stopped. CSS now handles multiple columns, vertical text, diagonal text, layout for graphical user interfaces, image operations, animations, some key and mouse interaction, and more.</p>\n\n<p><strong>Neumorphism and CSS</strong><br />\nhttps://css-tricks.com/neumorphism-and-css/<br />\nNeumorphism (aka neomorphism) is a relatively new design trend and a term that’s gotten a good amount of buzz lately. It’s aesthetic is marked by minimal and real-looking UI that’s sort of a new take on skeuomorphism — hence the name. It got its name in a UX Collective post from December 2019, and since then, various design and development communities have been actively discussing the trend, usually with differing opinions.</p>\n\n<p><strong>Do You Really Understand the Viewport</strong><br />\nhttps://hackernoon.com/do-you-really-understand-the-viewport-lv663ye4<br />\nIf you are a web developer, you must have heard about viewport, and the below line may seem familiar to you. <code class=\"highlighter-rouge\">&lt;meta name=”viewport” content=”width=device-width, initial-scale=1\" /&gt;</code>. But do you really understand what this line of code actually does?</p>\n\n<p><strong>Creating a Pencil Effect in SVG</strong><br />\nhttps://heredragonsabound.blogspot.com/2020/02/creating-pencil-effect-in-svg.html<br />\nDragons Abound produces maps in SVG, which is a vector graphics format.  Vector graphics have a lot of features (such as lossless zoom) that are nice for maps.</p>\n\n<p><strong>Rendering charts with OffscreenCanvas</strong><br />\nhttps://blog.scottlogic.com/2020/03/19/offscreen-canvas.html<br />\nRendering charts can be a very intensive operation for the browser, especially multiple charting widgets in the context of a wider application. OffscreenCanvas is growing in browser support and allows canvas rendering to be delegated to a WebWorker. This post looks at what performance improvements we can realistically expect and some gotchas that can crop up along the way.</p>\n\n<p><strong>The Rise of the No-Code Movement</strong><br />\nhttps://www.sitepoint.com/the-rise-of-the-no-code-movement/<br />\nOver the past couple of years, the rise of the no-code movement has started to change the landscape of tech. Ironically, Lamdba School itself is a product of the no-code movement, building its MVP (that has served 3,000 students) using a combination of tools such as Typeform, Airtable, and Retool. The no-code movement has also been called low code or visual development. The makers of no-code platforms are still discussing the best label for the movement but for now, I will stick with ‘no-code’.</p>\n\n<p><strong>Serverless in the wild: characterizing and optimising the serverless workload at a large cloud provider</strong><br />\nhttps://blog.acolyer.org/2020/03/20/serverless-in-the-wild/<br />\nToday’s paper analyses serverless workloads on Azure (the characterisation of those workloads is interesting in its own right), where users want fast function start times (avoiding cold starts), and the cloud provider wants to minimise resources consumed (costs).</p>\n\n<p><strong>Abstractions and serverless</strong><br />\nhttps://blog.softwaremill.com/abstractions-and-serverless-3dfaccaf85b6<br />\nIT systems are inherently hard to comprehend. That’s why we divide systems into smaller pieces. If this division is done properly, instead of understanding everything about a system, we only need to understand each piece in isolation, and how the small pieces are composed. Performing the division “properly” is obviously not trivial, and is the crux of the problem, which we’ve been studying for quite some time.</p>\n\n<p><strong>How event-driven architecture solves modern web app problems</strong><br />\nhttps://stackoverflow.blog/2020/03/16/how-event-driven-architecture-solves-modern-web-app-problems/<br />\nIn this article, we’ll discuss some of the problems driving innovation in modern web development. Then we’ll dive into the basics of event-driven architecture (EDA), which tries to address these problems by thinking about back-end architecture in a novel way.</p>\n\n<p><strong>Ways to Compute Pi in SQL</strong><br />\nhttps://www.memsql.com/blog/ways-to-compute-pi-in-sql/<br />\nIn celebration of Pi Day, I asked MemSQL’s Engineering team to come up with clever ways to compute pi in SQL. Because that’s the kind of thing we engineers enjoy! And, given pi’s privileged status in mathematical history – and my own history of earning a bachelor’s degree in Mathematics – I just couldn’t resist.</p>\n\n<p><strong>What is the Future of Machine Learning?</strong><br />\nhttps://codeburst.io/what-is-the-future-of-machine-learning-f93749833645<br />\nMachine Learning has been one of the hottest topics of discussion among the C-suite. The blog speaks about the future of Machine Learning. Read this to know more.</p>\n\n<h2 id=\"新鲜货\">新鲜货</h2>\n\n<p><strong>计算机界的最高奖，居然颁给了拍动画片的</strong><br />\nhttp://www.geekpark.net/news/257218<br />\n3 月 18 日，国际计算机协会（ACM）公布了 2019 年图灵奖的获奖人，分别是计算机科学家、皮克斯动画工作室联合创始人 Edwin E. Catmull，以及来自斯坦福大学计算机图形学实验室教授 Patrick M. Hanrahan。</p>\n\n<p><strong>GitHub for mobile is now available</strong><br />\nhttps://github.blog/2020-03-17-github-for-mobile-is-now-available/<br />\nAt Universe, we announced GitHub for mobile as a fully-native GitHub experience on iOS and Android. Now, you can stay in touch with your team, triage issues, and even merge code, right from your mobile device, anywhere. 另附：<a href=\"https://github.blog/2020-03-18-set-up-your-digital-classroom-with-github-classroom/\">Set up your digital classroom with GitHub Classroom</a>.</p>\n\n<p><strong>npm is joining GitHub</strong><br />\nhttps://github.blog/2020-03-16-npm-is-joining-github/<br />\nhttps://blog.npmjs.org/post/612764866888007680/next-phase-montage<br />\nThe amazing energy and creativity of millions of JavaScript developers is evident every day in the work that appears in npm. We are honored to support that community in a new way. The future of npm and the JavaScript ecosystem is very bright.</p>\n\n<p><strong>Introducing MongoDB Developer Hub</strong><br />\nhttps://www.mongodb.com/blog/post/introducing-developer-hub<br />\nWe are excited to announce the launch of our new Developer Hub: https://developer.mongodb.com. The Developer Hub will serve as the central location for all MongoDB developer content, programs, and resources. We built the Developer Hub from the ground up to serve the needs of developers using MongoDB products like MongoDB Atlas and MongoDB Stitch.</p>\n\n<p><strong>Tabler Icons</strong><br />\nhttps://github.com/tabler/tabler-icons<br />\nA set of over 300 free MIT-licensed high-quality SVG icons for you to use in your web projects. Each icon is designed on a 24x24 grid and a 2px stroke.</p>\n\n<p><strong>ERP beyond your fridge</strong><br />\nhttps://grocy.info/<br />\ngrocy is a web-based self-hosted groceries &amp; household management solution for your home. Open Source. Built with passion.</p>\n\n<p><strong>React-Reverse-Portal</strong><br />\nhttps://github.com/httptoolkit/react-reverse-portal<br />\nBuild an element once, move it anywhere.</p>\n\n<p><strong>fdir</strong><br />\nhttps://github.com/thecodrr/fdir<br />\nThe fastest directory crawler for NodeJS. Crawls 1m files in &lt; 1s</p>\n\n<p><strong>Ervy - Bring charts to terminal</strong><br />\nhttps://www.chunqiuyiyu.com/ervy/<br />\nBring charts to terminal.</p>\n\n<p><strong>μPlot</strong><br />\nhttps://github.com/leeoniya/uPlot<br />\nA small (&lt; 25 KB min), fast chart for time series, lines, areas, ohlc &amp; bars (MIT Licensed)</p>\n\n<p><strong>Uppload</strong><br />\nhttps://uppload.js.org/<br />\nUppload is a better JavaScript image uploader. It’s highly customizable with 30+ plugins, completely free and open-source, and can be used with any file uploading backend.</p>\n\n<p><strong>heapify</strong><br />\nhttps://github.com/luciopaiva/heapify<br />\nThe fastest JavaScript priority queue out there. Zero dependencies.</p>\n\n<p><strong>Seafox</strong><br />\nhttps://github.com/KFlash/seafox<br />\nA blazing fast 100% spec compliant, self-hosted javascript parser written in Typescript.</p>\n\n<p><strong>Neo - The webworkers driven UI framework (Beta version)</strong><br />\nhttps://github.com/neomjs/neo<br />\nhttps://codeburst.io/introduction-guide-for-neo-mjs-the-webworkers-driven-ui-framework-c78471715f9d<br />\nThis is a new paradigm. If you want to enter a new era of making better Web Based User Interfaces, the following concepts will be addictive.</p>\n\n<p><strong>Stateless Password Manager</strong><br />\nhttps://lesspass.com/#/<br />\nStop wasting your time synchronizing your encrypted vault. Remember one master password to access your passwords, anywhere, anytime. No sync needed.</p>\n\n<p><strong>Activists created a 12.5 million block digital library in ‘Minecraft’ to bypass censorship laws (MSFT)</strong><br />\nhttps://www.pulse.com.gh/bi/tech/activists-created-a-125-million-block-digital-library-in-minecraft-to-bypass/bn4gpcc<br />\nReporters Without Borders created “The Uncensored Library” within “Minecraft” as what it calls a “loophole to overcome censorship.” The digital library in an open “Minecraft” server has articles and information that has been censored in many countries, but is accessible through the game. RSF said that it chose “Minecraft” because it is available in many more places than sensitive information likely to be censored. For example, Yulia Berezovskaia, editor-in-chief of the Russian news site grani.ru, which is blocked in Russia, said she’s working with RSF to republish articles from her website on “Minecraft.”</p>\n\n<p><strong>Icon - Organize SVG icons in one place</strong><br />\nhttps://iconset.io/<br />\nFree, cross-platform and fast SVG icon manager app for designers, developers or product teams. Works on both Mac and Windows.</p>\n\n<h2 id=\"设计\">设计</h2>\n\n<p><strong>Why UX Should Be an Integral Part of Your Agile Workflow</strong><br />\nhttps://www.infoq.com/presentations/ux-ba-agile/<br />\nKevin Guenther is a Principal Consultant of User Experience (UX) Design, Kevin helps define and drive the future of Online clients’ digital experiences. He identifies and sets product strategies, envisions UX ecosystems and inspires project teams to push the boundaries of what’s possible. Kevin brings with him 20 years of knowledge in human-computer interaction and excellence in design execution.</p>\n\n<p><strong>Bonnaroo Music &amp; Arts Festival: Site Redesign</strong><br />\nhttps://uxplanet.org/bonnaroo-music-arts-festival-site-redesign-7deac38e1617<br />\nIn this 2.5 week project, assigned by Ironhack — Amsterdam, I worked solo to design a festival website with a one-year life cycle. The one-year cycle included three stages: pre-event, during event, and post-event. My primary focus was on the pre-event (hype and ticket sales) stage. Relating my design to the existing brand identity and site history was a key requirement of the final design.</p>\n\n<p><strong>中国设计师不容小觑,AntDesign有望成为世界级设计体系</strong><br />\nhttps://mp.weixin.qq.com/s/iFsMB6VHrR4w3Wo3mfYLYw<br />\nAnt Design是第一个由国内团队开发的面向世界的集视觉规范、交互模式、前端组件于一体的设计语言。去年 Ant Design 发布了全新的3.0体系，带来了全面的设计系统革新。而最近，蚂蚁金服体验技术部 UED，对外正式发布了 Ant Design 4.0，较往常不一样的是，这是一次非常大的突破，升级。也代表着 Ant Design 将从 UI 组件库的概念升级至面向企业级的设计体系，这在国内也好，或在全世界也好，都属于领先水平。</p>\n\n<p><strong>为什么支付宝要换 Logo 颜色？分析下目前 Logo 的主色趋势</strong><br />\nhttps://www.uisdc.com/alipay-logo-design<br />\n最近支付宝变更了主色，将本来的天蓝色变更成了深蓝色，相信大家都已经在各个平台的推送新闻中关注到这个消息，我们来看看色彩的对比。我要从这个事件入手，来分析下现在UI主色定义的大趋势和成因。</p>\n\n<p><strong>「云游敦煌」小程序背后的设计故事</strong><br />\nhttps://cdc.tencent.com/2020/03/20/design-story-of-dunhuang-trip-2/<br />\n莫高窟久远而璀璨的文化，应该被更多人看见。帮助更多人探索、游览、守护莫高窟，是我们产品的愿景。让游览敦煌，变成随时随地。作为设计团队，把远在西北中敦煌石窟的感受，转译到每个老百姓的指尖，是这次我们要解决的难题。</p>\n\n<p><strong>My Thoughts on Framer X</strong><br />\nhttps://blog.prototypr.io/my-thoughts-on-framer-x-81abd13bcdf7<br />\nI started my first ever co-op internship this past winter as a UI/UX designer at a fin-tech company. In short, I joined when the company was at a huge overhaul, the design team being no exception. Originally using Sketch to design and InVision to prototype, the team was interested in integrating a new design tool to their belt, Framer X, “a lightning fast interactive design tool” that could hopefully fulfill our needs for both. I took some time to play around with Framer and present my findings with the team.</p>\n\n<h2 id=\"产品及其它\">产品及其它</h2>\n\n<p><strong>The End of Starsky Robotics</strong><br />\nhttps://medium.com/starsky-robotics-blog/the-end-of-starsky-robotics-acb8a6a8a5f5<br />\nIn 2015, I got obsessed with the idea of driverless trucks and started Starsky Robotics. In 2016, we became the first street-legal vehicle to be paid to do real work without a person behind the wheel. In 2018, we became the first street-legal truck to do a fully unmanned run, albeit on a closed road. In 2019, our truck became the first fully-unmanned truck to drive on a live highway.</p>\n\n<p><strong>ReMarkable’s redesigned e-paper tablet is more powerful and more papery</strong><br />\nhttps://techcrunch.com/2020/03/17/remarkables-redesigned-e-paper-tablet-is-more-powerful-and-more-papery/<br />\nhttps://sspai.com/post/59339<br />\nDesigned for the creation and consumption of monochromatic content like long documents, e-books, notes and sketches, the reMarkable set itself apart as a more minimalist alternative (or complement) to the likes of the iPad or Surface.</p>\n\n<p><strong>Ten Tips for Cultivating Creativity, From the Director of the Lifelong Kindergarten Group at MIT</strong><br />\nhttps://thereader.mitpress.mit.edu/ten-tips-for-cultivating-creativity/<br />\nThe challenge is not how to “teach creativity” to children, but rather how to create a fertile environment in which their creativity will take root, grow, and flourish.</p>\n\n<blockquote>\n  <p>对数据可视化有兴趣的可以阅读由 AntV 带来的 <a href=\"https://www.yuque.com/mo-college/weekly/psmgx3\">墨者修齐 2020-03-22·上手 G6 小 tips、Introduction to AntV、A Model of Breast Cancer Causation、ChartIO: a visual version of SQL</a></p>\n</blockquote>\n","descriptionType":"text/html","publishedDate":"Mon, 23 Mar 2020 00:00:00 +0000","feedId":762,"bgimg":"","linkMd5":"e4f80e463a115bc7cb62f9434cf24a25","metaImg":"","author":""},{"createdTime":"2020-08-16 21:01:28","updatedTime":"2020-08-16 21:01:28","title":"FEX 技术周刊 - 2020/05/11","link":"http://fex.baidu.com/blog/2020/05/fex-weekly-11/","description":"作者：renpin <br> <h2 id=\"本期看点\">本期看点</h2>\n\n<p><strong>Driving engineers to an arbitrary date is a value destroying mistake</strong><br />\nhttps://iism.org/article/driving-engineers-to-an-arbitrary-date-is-a-value-destroying-mistake-49<br />\nIn this article we’ll be concentrating on high value software projects and why driving engineers to create detailed estimates for these projects, and then pressuring them to complete the software according to those estimates, is a value destroying mistake.</p>\n\n<p><strong>Rebuilding our tech stack for the new Facebook.com</strong><br />\nhttps://engineering.fb.com/web/facebook-redesign/<br />\n译文 https://www.yuque.com/docs/share/6aee9dd5-da3f-462b-b4bd-caec0ec6f60e<br />\nWhen we thought about how we would build a new web app — one designed for today’s browsers, with the features people expect from Facebook — we realized that our existing tech stack wasn’t able to support the app-like feel and performance we needed. A complete rewrite is extremely rare, but in this case, since so much has changed on the web over the course of the past decade, we knew it was the only way we’d be able to achieve our goals for performance and sustainable future growth. Today, we’re sharing the lessons we’ve learned while rearchitecting Facebook.com, using React (a declarative JavaScript library for building user interfaces) and Relay (a GraphQL client for React).</p>\n\n<p><strong>Introducing Web Vitals: essential metrics for a healthy site</strong><br />\nhttps://blog.chromium.org/2020/05/introducing-web-vitals-essential-metrics.html<br />\n译文 https://mp.weixin.qq.com/s/BSlOnrmDLWhzpCWAuTOulw  <br />\nOptimizing for quality of user experience is key to the long-term success of any site on the web. Through our ongoing engagement and collaboration with millions of web developers and site owners, we’ve developed many helpful metrics and tools across Google to help business owners, marketers, and developers alike identify opportunities to improve user experiences. However, abundance of metrics and tools creates its own set of prioritization, clarity, and consistency challenges for many. Today we are introducing a new program, <a href=\"https://web.dev/vitals/\">Web Vitals</a>, an initiative by Google to provide unified guidance for quality signals that, we believe, are essential to delivering a great user experience on the web. 另附：<a href=\"https://simonhearne.com/2020/web-performance-rebrand/\">Is it time for a Web Performance rebrand?</a>.</p>\n\n<p><strong>GitHub - Codespaces - Your instant dev environment</strong><br />\nhttps://github.com/features/codespaces<br />\nhttps://github.blog/2020-05-06-new-from-satellite-2020-github-codespaces-github-discussions-securing-code-in-private-repositories-and-more/<br />\nGet the full Visual Studio Code experience without leaving GitHub. Develop from anywhere, anytime. With your development in the cloud, you can contribute code from any device, using VS Code or your browser. Contribute to projects without complicating your local setup. Spin up dev environments with a click—even for projects you haven’t worked on before—and switch between them with ease.</p>\n\n<p><strong>从「物种起源」到「设计进化论」- 阿里云设计语言哲思</strong><br />\nhttps://mp.weixin.qq.com/s/IOu_IRbhXmTr_SUKyzDveA<br />\n10万年前，语言第一次出现的时候，茹毛饮血的智人一定没有想到，地球的文明，原来从这样简单的咿咿呀呀悄然开始；5100多年前，文字就在尼罗河畔的纸草上开始若隐若现，彼时的他们也一定没有猜到，有一种东西竟然可以超越时空，将不同的咿咿呀呀记录下来，为后续持续传承的文明推开大门；也许就在几年前，我们也未曾妄想，原来“语言”还有更多元的承载方式，它可以融入任何一种形态，在产品间进行沟通与表达，完成「真实世界」和「虚拟世界」的对话。</p>\n\n<h2 id=\"深阅读\">深阅读</h2>\n\n<p><strong>Write Libraries, Not Frameworks</strong><br />\nhttps://www.brandonsmith.ninja/blog/libraries-not-frameworks<br />\nFrameworks aren’t always bad, but they are a much bigger risk - for both the creators and the users - than libraries are. If your framework can be a library without losing much, it probably should be. If you don’t work at a major tech company, you probably don’t have the time or energy to give a framework all of the attention it requires. Libraries aren’t everything, but they should be preferred.</p>\n\n<p><strong>Deno 1.0: What you need to know</strong><br />\nhttps://blog.logrocket.com/deno-1-0-what-you-need-to-know/<br />\nAfter almost two years, the wait is nearly over. The API has been frozen, and the countdown to Deno 1.0, officially scheduled for release on May 13, has begun. Due to its famous creator and forward-thinking vision, Deno is sure to be the most exciting and controversial JavaScript-related release in recent memory. Deno is a general-purpose JavaScript/TypeScript programming environment. It brings together many of the best open-source technologies and offers a comprehensive solution in one small executable file.</p>\n\n<p><strong>PHP showing its maturity in release 7.4</strong><br />\nhttps://lwn.net/SubscriberLink/818973/507f4b5e09ab9870/<br />\nThis year PHP turned 25 and, as with all things, the hope is that with age comes wisdom and maturity. Often derided as a great way to write bad (and insecure) code, PHP is hard to ignore completely when it is used in nearly eight out of ten websites. With PHP 7.4.5 released in April, it’s worthwhile to take a look at modern PHP, how it has evolved to address the criticisms of the past, and what lies ahead in its future.</p>\n\n<p><strong>6 Faux Pas of HTTP API Design</strong><br />\nhttps://blog.readme.com/http-api-faux-pas/<br />\nHTTP APIs are very loose by definition: there’s no standards body, no API validator and not always someone there to tell you when you may be doing something incorrect. At ReadMe we have lots of experience in building, consuming and viewing APIs created by others. I asked engineers in the ReadMe team, “What are some common issues or pitfalls you see when using APIs?” This is a definitely a non-exhaustive list, but avoiding some of these pitfalls will make your APIs more “standard,” intuitive, and easy to use. We came up with the following faux pas.</p>\n\n<p><strong>Continuation 在 JS 中的应用</strong><br />\nhttps://zhuanlan.zhihu.com/p/94611888<br />\nReact 新近发布的 Hooks、Suspense、Concurrent Mode 等新功能让人眼前一亮，甚至惊叹 JS 居然有如此魔力。同时，这几个功能或多或少附带一些略显奇怪的规则，没有更深层次理解的话难以把握。其实这里面并没有什么“黑科技”，就大的趋势来讲，前端整体上还是在不断借鉴计算机其它领域的优秀实践，来帮助我们更方便地解决人机交互问题。本文着眼于支撑这些功能的一个底层编程概念 Continuation（译作“续延”），期望能够在了解它之后，大家对这几个功能有进一步的理解和掌握。当然，Continuation 在 React 之外也有很多的应用，可以一眼窥豹。</p>\n\n<p><strong>useRequest- 蚂蚁中台标准请求 Hooks</strong><br />\n<a href=\"https://hooks.umijs.org/zh-CN/hooks/async\">useRequest</a> 是一个超级强大，且生产完备的网络请求 Hooks，目前已经成为蚂蚁中台最佳实践内置网络请求方案。在蚂蚁内部中台应用，写网络请求，都推荐用 useRequest。useRequest 可能是目前社区中最强大，最接地气的请求类 Hooks 了。可以覆盖 99% 的网络请求场景，无论是读还是写，无论是普通请求还是分页请求，无论是缓存还是防抖节流，通通都能支持。只有你想不到，没有它做不到（吹牛 ~）。另附：<a href=\"https://github.com/alewin/useWorker\">useWorker - A React Hook for Blocking-Free Background Tasks</a></p>\n\n<p><strong>SuperCell的中台你们学不会</strong><br />\nhttps://mp.weixin.qq.com/s/3AnS2I8fM6pat8vNN0586w<br />\n2018 年以来，中台概念横扫整个中国信息化行业，成为了所有企业都在追捧的超级新星。如今，你不提中台都不好意思跟人说你是做信息化的。任何一个企业不立个中台项目，感觉就是已经落伍，跟不上时代潮流了。传说中台的概念的起源于一次偶得，马云在一次出访过程中，进入了一个世外桃源之地（芬兰），获得了高人指点（SuperCell），从而悟出了“中台”这门绝世武功，带回中土，掀起了“中台风暴”。但在我对 SuperCell 的模式进行深入研究以后发现：SuperCell 的中台，大部分企业是学不会的。</p>\n\n<p><strong>对于走专业路线还是管理路线的看法</strong><br />\nhttps://mp.weixin.qq.com/s/mGVduRcOpO92pO7wE0tKBg<br />\n眼界很重要，这样看问题会在高处，脚下的路会更清晰，不容易做出错误的决定。对于走专业路线还是走管理路线这件事情，我觉得大家需要跳出来，从外部好好审视下自己以及自己所处的环境。认清现实，做出合理的决定。</p>\n\n<p><strong>2020 有哪些不容错过的前端技术趋势</strong><br />\nhttps://mp.weixin.qq.com/s/baLi6j9Kw0tqXHTfiHPcPQ<br />\n四位技术人不四、杜欢、海波和堂主对 2020 年前端发展趋势进行了展望，同时也阐述 2020 年前端从业者可能将要面临的挑战。</p>\n\n<p><strong>A Complete Guide to CSS Functions</strong><br />\nhttps://css-tricks.com/complete-guide-to-css-functions/<br />\nLike any other programming language, CSS has functions. They can be inserted where you’d place a value, or in some cases, accompanying another value declaration.</p>\n\n<p><strong>Virtual Reality in 2020</strong><br />\nhttps://www.sitepen.com/blog/virtual-reality-in-2020/<br />\nVirtual reality (VR) is one of the most interesting emerging technologies for the web in 2020. Recently at HalfStack Phoenix I shared insights on VR, WebVR, the web, and what makes VR a lasting technology that will change the way we interact with information over the coming decade.</p>\n\n<p><strong>Qt and Android, Which is the Best Framework for Your Embedded Software?</strong><br />\nhttps://www.qt.io/blog/qt-or-android-which-is-the-best-framework-for-your-embedded-software<br />\nA new white paper from Witekio has finally identified an answer to a question pondered by software engineers the world over: In which cases should I use Qt, Android, or even both?</p>\n\n<p><strong>Common mistakes with React Testing Library</strong><br />\nhttps://kentcdodds.com/blog/common-mistakes-with-react-testing-library<br />\nSome mistakes I frequently see people making with React Testing Library.</p>\n\n<p><strong>How application performance metrics helps developers</strong><br />\nhttps://about.gitlab.com/blog/2020/05/07/working-with-performance-metrics/<br />\nAutomatically detect and monitor Kubernetes Clusters and deployed applications from the GitLab interface with application performance metrics (APM).</p>\n\n<p><strong>How Khan Academy Successfully Handled 2.5x Traffic in a Week</strong><br />\nhttp://engineering.khanacademy.org/posts/handling-2x-traffic-in-a-week.htm<br />\nIn this post I’ll discuss architectural aspects that play a key role in the scalability of our site. Two fundamental components of our architecture serve us particularly well here. We use Google Cloud, including AppEngine, Datastore, and Memcache, and Fastly CDN, and they were the backbone of the serverless and caching strategy that’s key to our scalability.</p>\n\n<p><strong>Rewriting the heart of our sync engine</strong><br />\nhttps://dropbox.tech/infrastructure/rewriting-the-heart-of-our-sync-engine<br />\nRewriting the sync engine was really hard, and we don’t want to blindly celebrate it, because in many environments it would have been a terrible idea. It turned out that this was an excellent idea for Dropbox but only because we were very thoughtful about how we went about this process. In particular, we’re going to share reflections on how to think about a major software rewrite and highlight the key initiatives that made this project a success, like having a very clean data model.</p>\n\n<p><strong>Serverless Needs Standardization to Be the Future of Application Infrastructure</strong><br />\nhttps://thenewstack.io/serverless-needs-standards-to-be-the-future-of-application-infrastructure/<br />\nServerless gives developers the freedom to focus on building functionality into their code, rather than managing the servers on which those functions run. This liberation from mundane yet vital operational responsibility has the potential to unlock significant innovation and business value for application developers, but the lack of standardization risks fragmenting the serverless ecosystem and creating winners and losers. With standardization comes the power of open source collaboration that has fueled innovation since the dawn of the computing era.</p>\n\n<p><strong>What Netlify’s Infrastructure Team Learned as It Increased Deploy Speed by up to 2x</strong><br />\nhttps://www.netlify.com/blog/2020/05/05/what-netlifys-infrastructure-team-learned-as-it-increased-deploy-speed-by-up-to-2x/<br />\nWhat if you realized you could optimize the structure of an existing system by doing less work? We can probably all attest that it’s one thing to notice an opportunity, and an entirely different beast to actually roll it out into production. This is the story of how the infrastructure team at Netlify took a 4 year old codebase and isolated an issue, tested a few different solutions (with some interesting stumbling blocks along the way), and eventually improved observability while rolling it out to production. The result of this work is what we’re fondly calling “nitro deploys”, a 2x increase in the speed of our deploy mechanism.</p>\n\n<p><strong>We Chat, They Watch</strong><br />\nhttps://citizenlab.ca/2020/05/we-chat-they-watch/<br />\nHow International Users Unwittingly Build up WeChat’s Chinese Censorship Apparatus</p>\n\n<p><strong>0X10 RULES</strong><br />\nhttps://fabiensanglard.net/ilike/index.html<br />\nThe site started in a world before smartphones and tablets at a time where Apple products still used PowerPC processors. The hand-crafted framework to run it grew organically over the years and remarkably followed the path of most software. It became bloated and obsolete. In 2018, it was time to revise the engine. I wanted to build something rooted in simplicity, responsiveness, and speed. I opted for a drastic approach where instead of starting from my existing framework and removing/fixing features, I started from scratch and added only what I needed.</p>\n\n<p><strong>Human Programming Interface</strong><br />\nhttps://beepb00p.xyz/hpi.html<br />\nI’m using HPI (Human Programming Interface) package as a means of unifying, accessing and interacting with all of my personal data. HPI is a Python package (named my), a collection of modules for: social networks: posts, comments, favorites; reading: e-books and pdfs; annotations: highlights and comments…</p>\n\n<h2 id=\"新鲜货\">新鲜货</h2>\n\n<p><strong>V8 release v8.3</strong><br />\nhttps://v8.dev/blog/v8-release-83<br />\nFaster ArrayBuffer tracking in the garbage collecto; Bigger Wasm memories…</p>\n\n<p><strong>npm v7 Series - Introduction</strong><br />\nhttps://blog.npmjs.org/post/617484925547986944/npm-v7-series-introduction<br />\nnpm v7 is based on a handful of technical and user experience principles, and each post in this series will tie back to one or more of these in some way.</p>\n\n<p><strong>Announcing Flutter 1.17</strong><br />\nhttps://medium.com/flutter/announcing-flutter-1-17-4182d8af7f8e<br />\nIncludes Metal support for faster iOS performance, new Material components, new Network tracking tooling and more!</p>\n\n<p><strong>Visual Studio Code April 2020 Released</strong><br />\nhttps://code.visualstudio.com/updates/v1_45</p>\n\n<p><strong>Jest 26: Tick Tock</strong><br />\nhttps://jestjs.io/blog/2020/05/05/jest-26<br />\nOne of the instrumental releases was Jest 15 which tied everything together and provided good defaults that allowed people to run Jest often without any setup. However, this approach has a big downside as Jest installs a lot of dependencies into your projects that you may not need. We are now beginning to address this shortcoming and are working on reducing Jest’s install size while keeping it approachable and extensible. We have made the following breaking changes in Jest 26. 另附： <a href=\"https://github.com/Raathigesh/majestic\">Majestic - Zero config GUI for Jest</a></p>\n\n<p><strong>ESLint v7.0.0 released</strong><br />\nhttps://eslint.org/blog/2020/05/eslint-v7.0.0-released<br />\nWe just pushed ESLint v7.0.0, which is a major release upgrade of ESLint. This release adds some new features and fixes several bugs found in the previous release. This release also has some breaking changes, so please read the following closely.</p>\n\n<p><strong>Q</strong><br />\nhttps://quantumjavascript.app/ <br />\n似乎是个量子计算的设计器，没看懂怎么用</p>\n\n<p><strong>React Flow - A Library for Rendering Interactive Graphs</strong><br />\nhttps://webkid.io/blog/react-flow-node-based-graph-library/<br />\nWe just open sourced <a href=\"https://github.com/wbkd/react-flow\">React Flow</a> : A library for rendering interactive node-based graphs with a smooth panning and zooming behaviour and lots of nice features and even some useful plugins like a mini map!</p>\n\n<p><strong>React Cool Inview</strong><br />\nhttps://github.com/wellyshen/react-cool-inview<br />\nA React hook that monitors an element enters or leaves the viewport (or another element) with performant and efficient way, using Intersection Observer. It’s lightweight and super flexible, which can cover all the cases that you need, like lazy-loading images and videos, infinite scrolling web app, triggering animations, tracking impressions, and more.</p>\n\n<p><strong>Pico - Take browser screenshots in Javascript</strong><br />\nhttps://github.com/nikersify/pico<br />\nPico’s goal is to produce high precision screenshots of any viewport entirely client side. This is different from simply capturing a webpage using Puppeteer or a similar tool in that the screenshot taking happens entirely client side. The viewport screenshots include scrolled element scroll states, cross-origin images, input states, web fonts, canvas contents, current video frame contents, and much more information that you wouldn’t be able to get using something like a headless browser.</p>\n\n<p><strong>nut.js (Native UI Toolkit)</strong><br />\nhttps://github.com/nut-tree/nut.js <br />\nnut.js is a cross-platform native UI automation / testing tool. It allows for native UI interactions via keyboard and / or mouse, but additionally gives you the possibility to navigate the screen based on image matching.</p>\n\n<p><strong>Start Profiling - Fast or Slow</strong><br />\nhttps://www.fastorslow.com/<br />\nFast or Slow is a global performance monitoring solution for your websites that detects and reports on the most important factors in your users’ experience of your website. Fast or Slow measures this experience from a variety of locations, giving you a wide overview of how site visitors experience your site.</p>\n\n<p><strong>GeckoView</strong><br />\nhttps://mozilla.github.io/geckoview/<br />\nAndroid offers a built-in WebView, which applications can hook into in order to display web pages within the context of their app. However, Android’s WebView is not really intended for building browsers, and hence, many advanced Web APIs are disabled. Furthermore, it is also a moving target: different phones might have different versions of WebView, all of which your app has to support.</p>\n\n<p><strong>Miniblink</strong><br />\nhttps://miniblink.net/<br />\nhttps://www.zhihu.com/question/290767285/answer/1200063036<br />\nminiblink是一个开源的、单文件、且目前已知的最小的基于chromium的，浏览器控件。通过其导出的纯C接口，几行代码即可创建一个浏览器控件。</p>\n\n<p><strong>Rich</strong><br />\nhttps://github.com/willmcgugan/rich<br />\nRich is a Python library for rendering rich text and beautiful formatting to the terminal. The Rich API makes it easy to add colorful text (up to 16.7 million colors) with styles (bold, italic, underline etc.) to your script or application. Rich can also render pretty tables, progress bars, markdown, syntax highlighted source code, and tracebacks – out of the box.</p>\n\n<p><strong>Caddy2 - A new kind of extensible platform for server apps</strong><br />\nhttps://caddyserver.com/v2 <br />\nhttps://news.ycombinator.com/item?id=23070567<br />\nCaddy is a single, self-contained, static binary with zero external dependencies because it’s written in Go. These values comprise important parts of the project’s vision because they simplify deployment and reduce tedious troubleshooting in production environments.</p>\n\n<p><strong>Introducing Scylla Open Source 4.0</strong><br />\nhttps://www.scylladb.com/2020/05/07/introducing-scylla-open-source-4-0/<br />\nScylla (a Cassandra-compatible NoSQL data store aiming to be the “world’s fastest column-store database”) now provides production-ready lightweight Transactions (LWT), a DynamoDB-compatible API (Alternator), and operator for Kubernetes, and more.</p>\n\n<p><strong>TileDB 2.0 and the Future of Data Science</strong><br />\nhttps://medium.com/tiledb/tiledb-2-0-and-the-future-of-data-science-929cdcfe95ed<br />\nTileDB is an open-source and cloud-native storage engine for chunked, compressed, multi-dimensional arrays. It introduces a universal data format, general enough for all application domains, and with built-in data versioning. It offers many APIs and data science tool integrations. Today we announce TileDB 2.0, a huge milestone for our community and company.</p>\n\n<p><strong>OpenCV directly in the browser (webassembly + webworker)</strong><br />\nhttps://aralroca.com/blog/opencv-in-the-web<br />\nOpenCV is the most popular library of Computer Vision, and has existed since 1999! What it does is providing a user-friendly and highly efficient development environment. It is a library written in C and C++ by Intel. We’ll see how to use the OpenCV library directly on the browser! To do this, we will compile OpenCV to webassembly and then run it inside a webworker.</p>\n\n<p><strong>SIGGRAPH 2020 Technical Paper: N-Dimensional Rigid Body Dynamics</strong><br />\nhttps://marctenbosch.com/news/2020/05/siggraph-2020-technical-paper-n-dimensional-rigid-body-dynamics/<br />\nExcited to announce that my technical paper “N-Dimensional Rigid Body Dynamics” was accepted to SIGGRAPH 2020! Very proud to present research developed for 4D Toys &amp; Miegakure at such a prestigious conference.</p>\n\n<p><strong>Orca: an esolang for audio-visual live coding</strong><br />\nhttps://git.sr.ht/~rabbits/orca<br />\nOrca is an esoteric programming language designed to quickly create procedural sequencers, in which every letter of the alphabet is an operation, where lowercase letters operate on bang, uppercase letters operate each frame. This application is not a synthesizer, but a flexible livecoding environment capable of sending MIDI, OSC &amp; UDP to your audio/visual interfaces, like Ableton, Renoise, VCV Rack or SuperCollider. The livecoding environment for the C implementation runs in a terminal. It’s designed to be power efficient. It can handle large files, even if your terminal is small.</p>\n\n<p><strong>Pose Animator</strong><br />\nhttps://github.com/yemount/pose-animator/<br />\nPose Animator takes a 2D vector illustration and animates its containing curves in real-time based on the recognition result from PoseNet and FaceMesh. It borrows the idea of skeleton-based animation from computer graphics and applies it to vector characters.</p>\n\n<p><strong>Lite – A small, fast text editor</strong><br />\nhttps://github.com/rxi/lite<br />\nlite is a lightweight text editor written mostly in Lua — it aims to provide something practical, pretty, small and fast, implemented as simply as possible; easy to modify and extend, or to use without doing either.</p>\n\n<p><strong>Inkscape 1.0</strong><br />\nhttps://inkscape.org/release/inkscape-1.0/<br />\nInkscape is a Free and open source vector graphics editor for GNU/Linux, Windows and MacOS X. It offers a rich set of features and is widely used for both artistic and technical illustrations such as cartoons, clip art, logos, typography, diagramming and flowcharting. It uses vector graphics to allow for sharp printouts and renderings at unlimited resolution and is not bound to a fixed number of pixels like raster graphics. Inkscape uses the standardized SVG file format as its main format, which is supported by many other applications including web browsers.</p>\n\n<p><strong>Making Emacs popular again</strong><br />\nhttps://lwn.net/SubscriberLink/819452/1480c3a59d3d9093/<br />\nThe Emacs editor predates Linux, and was once far more popular, but it has fallen into relative obscurity over the years. In a mega-thread on the emacs-devel mailing list, participants discussed various ideas for making Emacs more “attractive”, in both aesthetic and in “appealing to more users” senses of that term. Any improvements to Emacs in that regard have numerous hurdles to overcome, however. There are technical questions and, naturally, licensing considerations, but there is also the philosophical question of what it is, exactly, that stops the venerable text editor from being more popular.</p>\n\n<h2 id=\"设计\">设计</h2>\n\n<p><strong>The Past Is Still Present – An Overview of Timeless Design</strong><br />\nhttps://www.toptal.com/designers/ux/timeless-design<br />\nDigital designers would be wise to recognize the value of creating work that maintains relevancy for years to come. Maybe instead of obsessing over the latest trends, the industry ought to applaud work that has stood the test of time. User interfaces may never hold the nostalgic charm of a rugged, old Vespa scooter, but digital products can still improve lives. The longer they do, the more likely they are to leave a legacy that lasts for decades to come.</p>\n\n<p><strong>Task-Oriented Design — more than Mobile First and RWD</strong><br />\nhttps://blog.prototypr.io/task-oriented-design-more-than-mobile-first-and-rwd-712bd5e4ca52<br />\nNow you already know that Task-Oriented Design is a natural trend that already exists and becomes more popular in recent years. I described this type of thinking in my blog article — this story is its extension. I hope it will help you to design more consciously. When you create a solution for multiple devices, it is crucial to know the specific device’s abilities and limitations. This will let you design the best user experience.</p>\n\n<p><strong>Benchmarking UX: Tracking Metrics</strong><br />\nhttps://www.nngroup.com/articles/benchmarking-ux/<br />\nQuantitatively evaluate a product or service’s user experience by using metrics to gauge its relative performance against a meaningful standard.</p>\n\n<p><strong>Reducing Design Risk</strong><br />\nhttps://www.smashingmagazine.com/2020/05/reducing-design-risk/<br />\nThe pressure to rush market and usability research carries risk. We’ll offer four practical techniques to mitigate this risk and create designs that better serve customers and the company: context over convenience, compromise, better design decisions, design reduction.</p>\n\n<h2 id=\"产品及其它\">产品及其它</h2>\n\n<p><strong>Surprising Things About Working at Well-Known Tech Unicorns</strong><br />\nhttps://blog.pragmaticengineer.com/surprising-things-about-working-at-tech-unicorns/<br />\nMy past few companies - Skype, Skyscanner, Uber - have been well-known companies that I’ve joined in their “unicorn” phase. Unicorns are private companies that have reached the $1B valuation - and they usually do this in less than ten years. All of these companies were well-known consumer brands by the time I joined, many of my friends using them daily. As such, I had high expectations and was excited to start. But expectations and reality don’t always match. Here are the 13 most unexpected things I’ve learned from these working experiences.</p>\n\n<p><strong>How Apple reinvented the cursor for iPad</strong><br />\nhttps://techcrunch.com/2020/05/06/how-apple-reinvented-the-cursor-for-ipad/<br />\nApple SVP Craig Federighi talks about the iPad’s new cursor and Magic Keyboard. The new iPad cursor is a product of what came before, but it’s blending, rather than layering, that makes it successful in practice. The blending of the product team’s learnings across Apple TV, Mac and iPad. The blending of touch, mouse and touchpad modalities. And, of course, the blending of a desire to make something new and creative and the constraint that it also had to feel familiar and useful right out of the box. It’s a speciality that Apple, when it is at its best, continues to hold central to its development philosophy.</p>\n\n<blockquote>\n  <p>对数据可视化有兴趣的可以阅读由 AntV 带来的 <a href=\"https://www.yuque.com/mo-college/weekly/kpab5d\">墨者修齐 2020-05-10 · 可视化700年的利率下降情况、Famous Hope Quotes as Charts、手画线算法、CO2 EMISSION VS. VULNERABILITY TO CLIMATE CHANGE BY NATION</a></p>\n</blockquote>\n\n<p>– THE END –</p>\n","descriptionType":"text/html","publishedDate":"Mon, 11 May 2020 00:00:00 +0000","feedId":762,"bgimg":"","linkMd5":"d79e697b83d13344d8b0f90a15a6de35","metaImg":"","author":""},{"createdTime":"2020-08-16 21:01:27","updatedTime":"2020-08-16 21:01:27","title":"FEX 技术周刊 - 2020/06/01","link":"http://fex.baidu.com/blog/2020/06/fex-weekly-01/","description":"作者：nwind <br> <h2 id=\"本期看点\">本期看点</h2>\n\n<p><strong>面向 Model 编程的前端架构设计</strong><br />\nhttps://zhuanlan.zhihu.com/p/144157268<br />\n这篇文章将简略地介绍我们当前的无线前端架构设计及其演进之路。主要内容分成几个部分：1）当前的前端方案及其解决的问题; 2）现在面对的新挑战; 3）我们的前端方案设计和选择。希望我们的经验能带给大家一些启发。另附：<a href=\"https://ourai.ws/posts/model-driven-frontend-web-development/\">我来聊聊模型驱动的前端开发</a>.</p>\n\n<p><strong>Snowpack 2.0: A Build System for the Modern Web</strong><br />\nhttps://www.snowpack.dev/posts/2020-05-26-snowpack-2-0-release/<br />\nSnowpack 2.0 is a build system designed for this new era of web development. Snowpack removes the bundler from your dev environment, leveraging native ES Module (ESM) support to serve built files directly to the browser. This isn’t just a faster tool, it’s a new approach to web build systems.</p>\n\n<p><strong>Software will eat software in a remote-first world</strong><br />\nhttps://themargins.substack.com/p/software-will-eat-software-in-a-remote<br />\n[译]软件吃软件，编程工作会越来越多吗？ http://www.ruanyifeng.com/blog/2020/05/will-programmers-increase.html<br />\nThis topic is really too big to fit in a single newsletter, and we are already at more than a thousand words. On the one hand, I do welcome these changes. I fundamentally believe that I’ve lucked into the technology industry, and many of the opportunities I’ve exploited were available to me because only I was in the right room at the right time, a few times quite literally so.</p>\n\n<p><strong>Rediscovering the Small Web</strong><br />\nhttps://neustadt.fr/essays/the-small-web/<br />\nMost websites today are built like commercial products by professionals and marketers, optimised to draw the largest audience, generate engagement and ‘convert’. But there is also a smaller, less-visible web designed by regular people to simply to share their interests and hobbies with the world. A web that is unpolished, often quirky but often also fun, creative and interesting.</p>\n\n<p><strong>The Web We Lost: Volume One</strong><br />\nhttp://www.zeldman.com/2020/05/29/the-web-we-lost-volume-one/<br />\nIdon’t miss Flash but I sure miss this level of creativity and experimentation on the web. As today’s “The Web We’ve Lost” exercise for designers, please take a look back at Matt Owens’s historic Volume One project—outstanding design work Matt created in Flash during the 1990s and early 2000s, now memorialized in screenshots.</p>\n\n<h2 id=\"深阅读\">深阅读</h2>\n\n<p><strong>The Process of Making Vue 3</strong><br />\nhttps://increment.com/frontend/making-vue-3/<br />\nLessons from rewriting the next major version of Vue.js.</p>\n\n<p><strong>High-performance garbage collection for C++</strong><br />\nhttps://v8.dev/blog/high-performance-cpp-gc<br />\nThis post is the first in a series of Oilpan blog posts which will provide an overview of the core principles of Oilpan and its C++ APIs. For this post we will cover some of the supported features, explain how they interact with various subsystems of the garbage collector, and do a deep dive into concurrently reclaiming objects in the sweeper.</p>\n\n<p><strong>A first look at records and tuples in JavaScript</strong><br />\nhttps://2ality.com/2020/05/records-tuples-first-look.html<br />\nIn this blog post, we take a first look at the ECMAScript proposal “Record &amp; Tuple” (by Robin Ricard and Rick Button). This proposal adds two kinds of compound primitive values to JavaScript: Records, immutable compared-by-value versions of plain objects. Tuples, immutable compared-by-value versions of Arrays.</p>\n\n<p><strong>Today’s JavaScript, From An Outsider’s Perspective</strong><br />\nhttp://lea.verou.me/2020/05/todays-javascript-from-an-outsiders-perspective/<br />\nLea is a JavaScript expert, but she was trying to help a computer scientist friend work with JS and commented on the frustrations along the way.</p>\n\n<p><strong>RecoilJS is meant to rock your React world</strong><br />\nhttps://mariosfakiolas.com/blog/recoiljs-is-meant-to-rock-your-react-world/<br />\nRecoilJS is a state management library for React which was made publicly available recently by Facebook . The truth is that they have been using it for some time internally, so they finally decided to open-source it 😍 In my humble opinion RecoilJS makes React hell stronger. Let’s see why.</p>\n\n<p><strong>Watched All 27 React Europe Talks So You Don’t Have To</strong><br />\nhttps://www.telerik.com/blogs/i-watched-all-27-react-europe-talks-so-you-dont-have-to<br />\nOk, you still might want to watch the talks—they were quite good! But we’re all busy people, so I thought you all might appreciate my notes from all twenty-seven React Europe talks. The notes should help you quickly get a sense of what each talk covered, so you can decide if you want to watch the full video or not. 另附：<a href=\"https://twitter.com/nodejs/status/1265652603901349889\">Node.js Turns 11 Years Old</a>.</p>\n\n<p><strong>Responsive Web Design Turns Ten</strong><br />\nhttps://ethanmarcotte.com/wrote/responsive-design-at-10/<br />\nTen years ago the phrase ‘responsive web design’ was first coined. This guiding blog post, outlining the three ‘ingredients’ needed (fluid grids, flexible images, and media queries), soon followed. Here, Ethan takes a look back at just how responsive design came to be.</p>\n\n<p><strong>Godot Engine - Godot Editor running in a web browser</strong><br />\nhttps://godotengine.org/article/godot-editor-running-web-browser<br />\nGodot Engine - Free and open source 2D and 3D game engine. In the last few months, thanks to the great sponsorship of Mozilla I’ve been working on a big surprise for Godot 4.0, namely making the editor available as an HTML5 application. This DOES NOT mean that we will move completely to the Web like other engines did. It will only be provided as a complementary option to the native editor, as a way to lower the entry barrier. Let me explain further.</p>\n\n<p><strong>Why is Kubernetes getting so popular?</strong><br />\nhttps://stackoverflow.blog/2020/05/29/why-kubernetes-getting-so-popular/<br />\nTo try to understand the popularity of Kubernetes, let’s consider some questions. When was the last time developers could agree on the way to deploy production applications? How many developers do you know who run tools as is out of the box? How many cloud operations engineers today don’t understand how applications work? We’ll explore the answers in this article.</p>\n\n<p><strong>A Jepsen Analysis of MongoDB 4.2.6</strong><br />\nhttp://jepsen.io/analyses/mongodb-4.2.6<br />\nThis report represents a brief investigation relative to most Jepsen reports; we have not investigated pauses, crashes, or clock skew in depth; nor have we introduced membership changes or shard reallocation. Disk and filesystem-related issues could also prove fruitful. 另附：<a href=\"https://news.ycombinator.com/item?id=23270429\">Do You Still Use MongoDB?</a>.</p>\n\n<p><strong>What blocks faster code releases? It starts with testing</strong><br />\nhttps://about.gitlab.com/blog/2020/05/29/what-blocks-faster-code-release/<br />\nOur 2020 DevSecOps Survey found testing was the number one reason for release delays, but planning and code reviews were also challenges. Here’s what you need to know.</p>\n\n<h2 id=\"新鲜货\">新鲜货</h2>\n\n<p><strong>Marketing for Engineers</strong><br />\nhttps://github.com/LisaDziuba/Marketing-for-Engineers<br />\nGitHub 热榜：乌克兰小姐姐写给工程师看的《市场修炼手册》 https://zhuanlan.zhihu.com/p/144565273<br />\nIt’s a hand-picked collection of resources for solving practical marketing tasks, such as: finding beta testers, growing first user base, advertising project without a budget, scaling marketing activities for building constant revenue streams. We faced these question when we made our first product (a tool for iOS engineers). It took us almost 2 years to learn how to market our project. 😤 During this time we read, tried and bookmarked many useful things: articles, videos, spreadsheets, podcasts &amp; tools. These resources helped us a lot! Please, learn, adapt and test awesome marketing hacks from our collection &amp; experience. Good luck!</p>\n\n<p><strong>Code in the browser with GitHub Classroom</strong><br />\nhttps://github.blog/2020-05-26-code-in-the-browser-with-github-classroom/\nA familiar scenario for teachers: students need to run your starter code for an assignment, but software conflicts and varying devices get in the way. Whether they’re in your classroom or working from their homes, you want all of your students to successfully complete their assignments, but first, you’ll have to help them navigate their different devices and setups. 另附：<a href=\"https://about.gitlab.com/blog/2020/05/28/using-gitlab-web-ide-gitlab-ci-cd/\">How to make small changes using GitLab’s Web IDE</a>.</p>\n\n<p><strong>The Best GraphQL IDEs and Their Features</strong><br />\nhttps://retool.com/blog/the-best-graphql-ides-and-their-features/<br />\nTo support the growing number of developers building APIs, new integrated development environments (IDEs), tools, and resources have been developed. But which one is the best for you? Below, we review the best GraphQL IDEs available.</p>\n\n<p><strong>The 2020 Developer Survey results are here!</strong><br />\nhttps://stackoverflow.blog/2020/05/27/2020-stack-overflow-developer-survey-results/<br />\nThe results of this survey reflect the opinions and experiences of nearly 65,000 developers. It’s important to note, however, that the survey was conducted in February, before COVID-19 had been declared a global pandemic, and countries across the world had gone into lockdown. We’re eager to share with the public some of the interesting statistics and changes reflected in this data, but we also understand that it’s important to be humble and realistic: a lot of the answers developers gave might look very different if the same survey were conducted today.</p>\n\n<p><strong>web.dev LIVE: A digital event over three days and three time zones</strong><br />\nhttps://blog.chromium.org/2020/05/webdev-live-digital-event-over-three.html<br />\nwe’re planning a three day digital event - web.dev LIVE - where web developers can come together, from the comfort of their homes to hear about the latest, most helpful updates to the platform, learn modern web techniques and to connect with other developers — including those who are pushing the community forward and have been on the front line with COVID related work. The event will take place from June 30th to July 2nd and will include short three-hour content streams (in English) hosted on web.dev/live.</p>\n\n<p><strong>Homebrew 2.3.0</strong><br />\nhttps://brew.sh/2020/05/29/homebrew-2.3.0/<br />\nhe most significant changes since 2.2.0 are GitHub Actions CI usage, fetching resources before installation, Docker image improvements and the deprecation of brew install from URLs.</p>\n\n<p><strong>Android Studio 4.0 Released</strong><br />\nhttps://android-developers.googleblog.com/2020/05/android-studio-4.html<br />\nLots of new stuff in the latest release of the official IDE for Android development, including a new Motion Editor to help bring your apps to life, a Build Analyzer to investigate causes for slower build times, and Java 8 language APIs you can use regardless of your app’s minimum API level.</p>\n\n<p><strong>Strapi 3.0 Released: An Open Source Headless Node.js CMS</strong><br />\nhttps://strapi.io/blog/strapi-stable-community-edition<br />\n5 years after the first commit, 3 years after the launch of the company, we’re incredibly excited to announce the general availability of Strapi Community Edition. This stable version is a huge milestone and marks the beginning of a new and exciting chapter for the Strapi project and open source community.</p>\n\n<p><strong>Pug 3.0.0</strong><br />\nhttps://medium.com/rollingversions/pug-3-0-0-2897d6dec294<br />\nPug is a high-performance template engine heavily influenced by Haml and implemented with JavaScript for Node.js and browsers.</p>\n\n<p><strong>React Animation Libraries for 2020</strong><br />\nhttps://blog.bitsrc.io/react-animation-libraries-for-2020-437a21c73fed<br />\nRecommended React animation libraries that take care of page transitions, scroll events, entering and exiting components, etc.</p>\n\n<p><strong>React Cosmos - A dev environment for building scalable, high-quality user interfaces</strong><br />\nhttps://github.com/react-cosmos/react-cosmos<br />\nReact Cosmos is intended to bridge the gap between UI designers and developers by creating a single repository for UI components.</p>\n\n<p><strong>number-precision</strong><br />\nhttps://github.com/nefe/number-precision<br />\nPerform addition, subtraction, multiplication and division operations precisely using javascript.</p>\n\n<p><strong>Fluor.js - Sprinkle interactivity on your design</strong><br />\nhttps://fluorjs.github.io/<br />\nFluor.js is a tiny JavaScript library that provides you with a high-level language to easily add interactions and effects to your websites. It is great for prototypes, UI and UX research and for all websites that do not require the cumbersome machinery of a full-fledged framework. It is inspired by uilang and Alpine.js, has no dependencies and can be added to any page with a single line of HTML.</p>\n\n<p><strong>Perspective</strong><br />\nhttps://github.com/finos/perspective<br />\nPerspective is an interactive visualization component for large, real-time datasets. Originally developed for J.P. Morgan’s trading business, Perspective makes it simple to build real-time &amp; user configurable analytics entirely in the browser, or in concert with Python and/or Jupyterlab. Use it to create reports, dashboards, notebooks and applications, with static data or streaming updates via Apache Arrow.</p>\n\n<p><strong>LATEX.css</strong><br />\nhttps://latex.now.sh/<br />\nThis almost class-less CSS library turns your HTML document into a website that looks like a LATEX document. Write semantic HTML, add <code class=\"highlighter-rouge\">&lt;link rel=\"stylesheet\" href=\"https://latex.now.sh/style.css\"&gt;</code> to the <code class=\"highlighter-rouge\">&lt;head&gt;</code> of your project and you are good to go. The source code can be found on GitHub at https://github.com/vincentdoerig/latex-css.</p>\n\n<p><strong>Pure CSS Gaze - An ongoing series in which I create art using only CSS and HTML</strong><br />\nhttps://github.com/cyanharlow/purecss-gaze<br />\nHTML/CSS drawing in style of italian renaissance painting. Hand-coded entirely in HTML &amp; CSS.</p>\n\n<p><strong>htmlx - high power tools for HTML</strong><br />\nhttps://htmx.org/<br />\nhtmx allows you to access AJAX, WebSockets and Server Sent Events directly in HTML, using attributes, so you can build modern user interfaces with the simplicity and power of hypertext. htmx is small (~7k min.gz’d), dependency-free, extendable &amp; IE11 compatible</p>\n\n<p><strong>Rough Notation - A small JavaScript library to create and animate annotations on a web page</strong><br />\nhttps://roughnotation.com/<br />\nRough Notation uses RoughJS to create a hand-drawn look and feel. Elements can be annotated in a number of different styles. Animation duration and delay can be configured, or just turned off. Rough Notation is about 3.2kb in size when gzipped, and the code is available on GitHub.</p>\n\n<p><strong>RobotGo, Go Native cross-platform GUI automation</strong><br />\nhttps://github.com/go-vgo/robotgo<br />\nGolang Desktop Automation. Control the mouse, keyboard, bitmap, read the screen, Window Handle and global event listener.</p>\n\n<p><strong>Micro</strong><br />\nhttps://github.com/zyedidia/micro<br />\nmicro is a terminal-based text editor that aims to be easy to use and intuitive, while also taking advantage of the capabilities of modern terminals. It comes as a single, batteries-included, static binary with no dependencies; you can download and use it right now!</p>\n\n<p><strong>Bear Blog</strong><br />\nhttps://bearblog.dev/<br />\nhttps://github.com/HermanMartinus/bearblog/<br />\nFree, no-nonsense, super-fast blogging. No javascript, no stylesheets, no trackers. Just your words. Bear is all you need to build a fantastic and optimized site or blog. It works perfectly on any viewing device. All you need to focus on is writing good content. <a href=\"https://herman.bearblog.dev/\">View example blog</a>.</p>\n\n<p><strong>Obsidian</strong><br />\nhttps://obsidian.md/<br />\nObsidian is a powerful knowledge base that works on top of a local folder of plain text Markdown files. The human brain is non-linear: we jump from idea to idea, all the time. Your second brain should work the same. In Obsidian, making and following [[connections]] is frictionless. Tend to your notes like a gardener; at the end of the day, sit back and marvel at your own knowledge graph.</p>\n\n<p><strong>AudioMass - an open-source web based audio and waveform editing tool</strong><br />\nhttps://audiomass.co/<br />\nAudioMass lets you record, or use your existing audio tracks, and modify them by trimming, cutting, pasting or applying a plethora of effects, from compression and paragraphic equalizers to reverb, delay and distortion fx. AudioMass also supports more than 20 hotkeys combinations and a dynamic responsive interface to ensure ease of use and that your producivity remains high. it is written solely in plain old-school javascript, weights approximately 65kb and has no backend or framework dependencies.</p>\n\n<h2 id=\"设计\">设计</h2>\n\n<p><strong>Prototyping at Slack</strong><br />\nhttps://slack.engineering/prototyping-at-slack-b1ec3a298226<br />\nA picture is worth a thousand words; a prototype is worth a thousand meetings.” A brief look at some examples of Slack’s prototyping process.</p>\n\n<p><strong>Understanding color theory: the color wheel and finding complementary colors</strong><br />\nhttps://www.invisionapp.com/inside-design/understanding-color-theory-the-color-wheel-and-finding-complementary-colors/<br />\nIn order to unleash the power of color, you first have to start by understanding color theory, the color wheel, how to use complementary colors to create an impactful color scheme, and the psychological effects of those colors.</p>\n\n<p><strong>Equivalent Experiences: What Are They?</strong><br />\nhttps://www.smashingmagazine.com/2020/05/equivalent-experiences-part1/<br />\nAn equivalent experience is one that has been deliberately conceived of and built to be able to be used by the widest possible range of people. To create an equivalent experience, you must understand all the different ways people interact with technology, as well as common barriers they experience.</p>\n\n<p><strong>有内味儿了！新版QQ黄脸表情是如何设计出来的？</strong><br />\nhttps://www.uisdc.com/qq-expression-evolution-diary<br />\n发消息带表情已成为「网上冲浪」的社交礼仪，QQ 内自带的黄脸表情同样被广为使用。但伴随着社会文化的变迁，黄脸表情在使用时总让人感觉「表情用时方恨少」。别着急，新表情已安排。QQ 4 月上新了一批神仙表情，「疑惑」「 辣眼睛」「 沧桑」「 尴尬」，这些表情是否也是你的日常？如果你也被击中的话，跟我一起看看表情的设计故事吧！</p>\n\n<h2 id=\"产品及其它\">产品及其它</h2>\n\n<p><strong>Habits of High-Functioning Teams</strong><br />\nhttps://deniseyu.io/2020/05/23/habits-of-high-performing-teams.html<br />\nI often struggle to explain what it means to be part of a high-functioning software team. Sure, there are mountains of literature, and an entire genre of LinkedIn thought leadership that professes all kinds of guidelines and heuristics about what makes teams work, but in my experience, it’s hard to internalize these ideas and follow someone else’s model if you’ve never seen what good looks like. In this post, I’ll try to document the characteristics and habits of the highest-performing teams I’ve been on.</p>\n\n<p><strong>Tools for better thinking</strong><br />\nhttps://untools.co/<br />\nCollection of thinking tools and frameworks to help you solve problems, make decisions and understand systems.</p>\n\n<p><strong>How an 8-Year-Old Millionaire is Changing Content and Design</strong><br />\nhttps://uxmag.com/articles/how-an-8-year-old-millionaire-is-changing-content-and-design<br />\nIn 2019, the top earning YouTuber was Ryan ToyReview AKA “Ryan’s World.” He made over $26 Million from his business ventures thanks to his YouTube success. He’s 8.</p>\n\n<p><strong>每个周五夜晚，都有几十万个智能音箱被同时唤醒</strong><br />\nhttps://mp.weixin.qq.com/s/euOPTD8b1ZJABbpn3NBGwg<br />\n智能音箱为何半夜说梦话，语音助手为何频频插嘴？是机性的丧失还是道德的沦丧？欢迎收看本期浅黑科技之“语音唤醒技术背后的小秘密”。</p>\n\n<p>– THE END —</p>\n","descriptionType":"text/html","publishedDate":"Mon, 01 Jun 2020 00:00:00 +0000","feedId":762,"bgimg":"","linkMd5":"2bac777dcbe5e8acc4db8c2fb441d0d3","metaImg":"","author":""},{"createdTime":"2020-08-16 21:01:28","updatedTime":"2020-08-16 21:01:28","title":"FEX 技术周刊 - 2020/05/18","link":"http://fex.baidu.com/blog/2020/05/fex-weekly-18/","description":"作者：exialym <br> <h2 id=\"本期看点\">本期看点</h2>\n\n<p><strong>前端开发的瓶颈与未来之路</strong><br />\nhttps://zhuanlan.zhihu.com/p/139731168<br />\n前端开发的瓶颈到底在哪里，前端技术是否已经走到一个十字路口，全栈化的系统架构是否能改变目前的窘境？本文将根据我自己的开发经历谈谈当下前端开发中遇到的一些问题和想法。我们再回到前端，那么未来的前端到底会发展成什么样？长期而言充满了未知数，谁也没法预测，但是短期来讲我比较关注几个东西：ESBuild、Deno、Figma。如果你仔细研究一番，上面的这些新鲜东西，都是起源于前端，但又不把视野局限在前端。或许这就是前端未来的发展方向吧。</p>\n\n<p><strong>万物代码化：从低代码、云开发到云研发</strong><br />\nhttps://mp.weixin.qq.com/s/9IKyltXqzRzG2YOmUVeu3A<br />\n过去的几个月里，我陆陆续续和不同公司的人一起讨论了开发、研发的未来。光是发我写过的几篇文章的链接，已经不能很好地解决问题。所以我决定写一篇长长的文章，来帮助更多地人理解：研发的未来在哪里？我也是从我的所做、所见、所听中，构建了整个的模型，并非从未来穿越到现在，所以其中的一些设想，可能并非如此准确。</p>\n\n<p><strong>Second-guessing the modern web</strong><br />\nhttps://macwright.org/2020/05/10/spa-fatigue.html<br />\nhttps://twitter.com/dan_abramov/status/1259614150386425858<br />\nThere is a sweet spot of React: in moderately interactive interfaces. Complex forms that require immediate feedback, UIs that need to move around and react instantly. That’s where it excels. I helped build the editors in Mapbox Studio and Observable and for the most part, React was a great choice. But there’s a lot on either side of that sweet spot. The high performance parts aren’t React.</p>\n\n<p><strong>Deno 1.0</strong><br />\nhttps://deno.land/v1<br />\nhttps://areknawo.com/deno-why-all-the-buzz/<br />\nhttps://mp.weixin.qq.com/s/85x4uep6SAZ9v_AR2hqv4w<br />\nWith the changing JavaScript language, and new additions like TypeScript, building Node projects can become an arduous endeavor, involving managing build systems and other heavy handed tooling that takes away from the fun of dynamic language scripting. Furthermore the mechanism for linking to external libraries is fundamentally centralized through the NPM repository, which is not inline with the ideals of the web. We feel that the landscape of JavaScript and the surrounding software infrastructure has changed enough that it was worthwhile to simplify. We seek a fun and productive scripting environment that can be used for a wide range of tasks. 另附：<a href=\"https://github.com/anthonychu/azure-functions-deno-worker\">Deno worker for Azure Functions</a>、<a href=\"https://www.youtube.com/watch?v=M3BM9TB-8yA\">10 Things I Regret About Node.js</a>.</p>\n\n<p><strong>为什么顶尖高手，都有窄门思维？</strong><br />\nhttps://mp.weixin.qq.com/s/RWUPANKFMj1MlIf3XfCmLQ<br />\n这个世界上，总有人选择开始简单的事情。虽然开始是“宽门”，但会发现，到后面竞争者挤满了道路，越来越难。而另一些人，会选择开始很难的事情，虽然开始是“窄门”，看上去荆棘密布，但一旦披荆斩棘跨过去，海阔天空。但其实这个世界上，哪有全程好走的路，哪里有一路“宽门”？差别只是，高手心中装着更大的格局，哪怕舍弃1000万的利润分出去，也在所不惜。他们不是不在乎钱，而是相信只要方向正确，资源、技能、优势，一切皆可积累。顶尖高手，总是选择“窄门”。</p>\n\n<h2 id=\"深阅读\">深阅读</h2>\n\n<p><strong>DataWorks 前端架构演进与 Serverless 实践之路</strong><br />\nhttps://developer.aliyun.com/article/760167<br />\nDataWorks 是一个提供了大数据 OS 能力、并以 all in one box 的方式提供专业高效、安全可靠的一站式大数据智能云研发平台，提供了数据集成、数据开发、数据治理、数据安全、数据服务、应用开发、机器学习完整数据链路的产品。</p>\n\n<p><strong>大规格文件的上传优化</strong><br />\nhttps://aotu.io/notes/2020/05/12/file-upload/index.html<br />\n在开发过程中，收到这样一个问题反馈，在网站上传 100 MB 以上的文件经常失败，重试也要等老半天，这就难为需要上传大规格文件的用户了。那么应该怎么做才能快速上传，就算失败了再次发送也能从上次中断的地方继续上传呢？下文为你揭晓答案~</p>\n\n<p><strong>干掉过多的if…else：据说这项技能可以看出程序员的境界</strong><br />\nhttps://mp.weixin.qq.com/s/rXwqnPN2WiMxcLXOlz0cjA<br />\nif…else是所有高级编程语言都有的必备功能。但现实中的代码往往存在着过多的 if…else。虽然 if…else 是必须的，但滥用 if…else 会对代码的可读性、可维护性造成很大伤害，进而危害到整个软件系统。现在软件开发领域出现了很多新技术、新概念，但 if…else 这种基本的程序形式并没有发生太大变化。使用好 if…else 不仅对于现在，而且对于将来，都是十分有意义的。今天我们就来看看如何“干掉”代码中的 if…else，还代码以清爽。</p>\n\n<p><strong>A (Mostly) Complete Guide to React Rendering Behavior</strong><br />\nhttps://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/<br />\nI’ve seen a lot of ongoing confusion over when, why, and how React will re-render components, and how use of Context and React-Redux will affect the timing and scope of those re-renders. After having typed up variations of this explanation dozens of times, it seems it’s worth trying to write up a consolidated explanation that I can refer people to. Note that all this information is available online already, and has been explained in numerous other excellent blog posts and articles, several of which I’m linking at the end in the “Further Information” section for reference. But, people seem to be struggling to put the pieces together for a full understanding, so hopefully this will help clarify things for someone.</p>\n\n<p><strong>Accessible Animations in React</strong><br />\nhttps://joshwcomeau.com/react/prefers-reduced-motion/<br />\nAs humans, we tend to bias around our own experiences. The “Golden Rule”—treat others as you want to be treated—totally ignores the fact that people are different! Not everyone experiences things the same way, and we need to be mindful about that. An animation that delights me might make someone else so woozy that they need to lie down for half an hour afterwards. Every non-trivial feature that gets added to a browser is the result of a lot of hard work and coordination. The fact that the prefers-reduced-motion media query exists in every major browser is a testament to how much work browser vendors put in, not to mention the operating system developers who built the control in the first place!</p>\n\n<p><strong>CSS fix for 100vh in mobile WebKit</strong><br />\nhttps://allthingssmitty.com/2020/05/11/css-fix-for-100vh-in-mobile-webkit/<br />\nNot long ago there was some buzz around how WebKit handles 100vh in CSS, essentially ignoring the bottom edge of the browser viewport. Some have suggested avoid using 100vh, others have come up with different alternatives to work around the problem. In fact, this issue goes further back a few years when Nicolas Hoizey filed a bug with WebKit on the subject (the short of it: WebKit says this is “intentional” 🧐).</p>\n\n<p><strong>Let’s Take a Deep Dive Into the CSS Contain Property</strong><br />\nhttps://css-tricks.com/lets-take-a-deep-dive-into-the-css-contain-property/<br />\nThis article has covered the basics of the CSS contain property with its values, benefits, and potential performance gains. There are some excellent benefits to applying this property to certain elements in HTML; which elements need this applied is up to you. At least, that’s what I gather since I’m unaware of any specific guidance. The general idea is apply it to elements that are containers of other elements, especially those with some form of dynamic aspect to them.</p>\n\n<p><strong>Convincing-looking 90s fonts in modern browsers</strong><br />\nhttps://vistaserv.net/blog/90s-fonts-modern-browsers<br />\nWe wanted to make a website that looked like it was from the 1990s. Sounds easy, right? Looking back from 2020, the aesthetic of the early World Wide Web stands out for the things it lacked: no CSS, emojis, fancy web fonts or non-web-safe colours.</p>\n\n<p><strong>GitLab’s Tech Stack Applications Diagram and Spreadsheet</strong><br />\nhttps://about.gitlab.com/handbook/business-ops/tech-stack-applications/<br />\nIt’s neat to see what systems a popular, widely distributed company like GitLab is using. The <a href=\"https://docs.google.com/spreadsheets/d/1mTNZHsK3TWzQdeFqkITKA0pHADjuurv37XMuHv12hDU/edit#gid=0\">spreadsheet</a> goes into quite some detail. 另附：<a href=\"https://medium.com/microsoft-design/how-fluent-ui-unlocks-the-next-generation-of-microsoft-365-experiences-8b24809faf06\">Inside GitLab: How we release software patches</a>.</p>\n\n<p><strong>How do I use Infrastructure as Code?</strong><br />\nhttps://circleci.com/blog/how-do-i-iac/<br />\nInfrastructure as code (IaC) is the process of managing and provisioning cloud and IT resources via machine readable definition files and is a part of modern continuous integration pipelines. IaC enables organizations to provision, manage, and destroy compute resources using modern DevOps tools. IaC enables this by statically defining and declaring these resources in code, then deploying and dynamically maintaining these resources via code. In this post, I will discuss the benefits of IaC and some of the tooling option currently available along with a brief demonstration on how to use them in hopes of easing the transition to using IaC.</p>\n\n<p><strong>Accelerometer and SoftSKU: Improving hardware platform performance for diverse microservices</strong><br />\nhttps://engineering.fb.com/data-center-engineering/accelerometer-and-softsku/<br />\nNew strategies to improve the performance of hardware platforms running Facebook’s microservices. SoftSKU is a novel mechanism that tailors an existing server processor to optimize it for a specific microservice without requiring any additional hardware. Accelerometer is an analytical model that predicts gains from these optimizations even before the custom hardware is installed.</p>\n\n<p><strong>First, it was Craigslist, next it’s Zapier</strong><br />\nhttps://kamerontanseli.ghost.io/first-it-was-craiglist-next-its-zapier/<br />\nAs I delve deeper into the no-code space I see a lot of Zapier, Integromat and Tray.io workflows. Some of these are actually quite complex and require some programming knowledge to understand them (which kind of defeats the point of no-code). As I was looking at some of these workflows, I couldn’t help but think how there will be this eventual shift like with Craiglist where companies will spring up that just focus on certain more complex popular workflows.</p>\n\n<p><strong>Understanding Cost Models</strong><br />\nhttp://justinjaffray.com/understanding-cost-models/<br />\nAnalytic queries can become complex, horrifically so, in fact, and assessing their costs follows suit. To alleviate this somewhat, we’re going to explore some tools we can use to attempt to travel up the ladder of abstraction for query planners. In doing so, we’re going to try to figure out where the difficulty here lives: is looking at a single query confusing because we have the wrong perspective, or is there some inherent complexity present here?</p>\n\n<p><strong>Make LLVM fast again</strong><br />\nhttps://nikic.github.io/2020/05/10/Make-LLVM-fast-again.html<br />\nConversely, there are some ongoing efforts that might make for large compile-time regressions when they do get enabled, such as the attributor framework, the knowledge retention framework and MemorySSA-based DSE. We’ll see how things look by the time of the LLVM 11 release</p>\n\n<h2 id=\"新鲜货\">新鲜货</h2>\n\n<p><strong>Up to 4GB of memory in WebAssembly</strong><br />\nhttps://v8.dev/blog/4gb-wasm-memory<br />\nThanks to recent work in Chrome and Emscripten, you can now use up to 4GB of memory in WebAssembly applications. That’s up from the previous limit of 2GB. It might seem odd that there was ever a limit - after all, no work was needed to allow people to use 512MB or 1GB of memory! - but it turns out that there are some special things happening in the jump from 2GB to 4GB, both in the browser and in the toolchain, which we’ll describe in this post.</p>\n\n<p><strong>Announcing TypeScript 3.9</strong><br />\nhttps://devblogs.microsoft.com/typescript/announcing-typescript-3-9/<br />\nFor this release our team been has been focusing on performance, polish, and stability. We’ve been working on speeding up the compiler and editing experience, getting rid of friction and papercuts, and reducing bugs and crashes.</p>\n\n<p><strong>Announcing Adobe XD support for Flutter</strong><br />\nhttps://medium.com/flutter/announcing-adobe-xd-support-for-flutter-4b3dd55ff40e<br />\nCreate in XD and export to working Flutter code. 另附：<a href=\"https://mp.weixin.qq.com/s/57CprMfvTtIeq6AdgcDdcw\">使用 Web 标准开发动态化 Flutter 应用</a>.</p>\n\n<p><strong>A first look at Unreal Engine 5</strong><br />\nhttps://www.unrealengine.com/en-US/blog/a-first-look-at-unreal-engine-5<br />\nWe’ve just released a first look at Unreal Engine 5. One of our goals in this next generation is to achieve photorealism on par with movie CG and real life, and put it within practical reach of development teams of all sizes through highly productive tools and content libraries. 另附：<a href=\"https://imgur.com/a/hdWw4ds\">MS Flight Simulator 2020 vs Real life</a>, <a href=\"https://blogs.nvidia.com/blog/2020/05/14/gtc-2020-keynote/\">NVIDIA CEO Introduces NVIDIA Ampere Architecture, NVIDIA A100 GPU in News-Packed ‘Kitchen Keynote’</a>.</p>\n\n<p><strong>React Native for Windows + macOS</strong><br />\nhttps://microsoft.github.io/react-native-windows/<br />\nReact Native for Windows + macOS brings React Native support for the Windows 10 SDK as well as the macOS 10.12 SDK. With this, you can use Javascript to build native Windows apps for all devices supported by Windows 10 including PCs, tablets, 2-in-1s, Xbox, Mixed reality devices, etc., as well as the macOS desktop and laptop ecosystems.</p>\n\n<p><strong>Coming to Chrome: a new way to use tabs</strong><br />\nhttps://www.blog.google/products/chrome/manage-tabs-with-google-chrome/<br />\nWith a simple right click, you can group your tabs together and label them with a custom name and color. Once the tabs are grouped together, you can move and reorder them on the tab strip.</p>\n\n<p><strong>Blitz</strong><br />\nhttps://github.com/blitz-js/blitz<br />\nBlitz is a Rails-like framework for monolithic, full-stack React apps — built on Next.js</p>\n\n<p><strong>Diagram</strong><br />\nhttps://github.com/mingrammer/diagrams<br />\nDiagram as Code for prototyping cloud system architectures</p>\n\n<p><strong>GitHub WYSIWYG Rich-Text Editor</strong><br />\nhttps://github.com/ckeditor/github-writer<br />\nGitHub Writer is a WYSIWYG rich-text editor for GitHub. The extension is available when creating or commenting on issues, reviews, pull requests, and wikis. It provides all the features available in the GitHub plain-text editor, including Markdown input. For features like tables, it offers a much easier experience in comparison to plain-text Markdown and allows users to be more productive. It is powered by CKEditor 5, a modern JavaScript rich-text editor.</p>\n\n<p><strong>Bootstrap 4.5.0</strong><br />\nhttps://blog.getbootstrap.com/2020/05/12/bootstrap-4-5-0/<br />\nBootstrap v4.5.0 has landed with dozens of bug fixes, some small new features, and some changes to our development. Originally planned as a v4.4.2 patch release, we’ve bumped this to a minor release on account of our new features that help bridge the gap between v4 and our upcoming v5.</p>\n\n<p><strong>Recoil - A state management library for React from facebook</strong><br />\nhttps://recoiljs.org/ <br />\nhttps://www.youtube.com/watch?v=fb3cOMFkEzs<br />\nRecoil is an experimental state management library for React apps. It provides several capabilities that are difficult to achieve with React alone, while being compatible with the newest features of React. 另附：<a href=\"https://kea.js.org/docs/introduction/what-is-kea\">Kea 2.0 - Production Ready State Management for React</a></p>\n\n<p><strong>React PIXI</strong><br />\nhttps://reactpixi.org/<br />\nWrite PIXI applications using React declarative style</p>\n\n<p><strong>Next.js 9.4</strong><br />\nhttps://nextjs.org/blog/next-9-4<br />\nFast Refresh, Incremental Static Regeneration (beta)…</p>\n\n<p><strong>fdir V3: A High Performance Directory Crawler Library</strong><br />\nhttps://github.com/thecodrr/fdir<br />\nTwo months ago it claimed to the fastest Node directory crawler and it’s now supposedly even faster than when we first linked it. Need to scan through directories rapidly either asynchronously or synchronously?</p>\n\n<p><strong>tracer for node.js</strong><br />\nhttps://github.com/baryon/tracer<br />\nA powerful and customizable logging library for node.js.</p>\n\n<p><strong>Perfume.js 5.0</strong><br />\nhttps://github.com/Zizzamia/perfume.js<br />\nWeb performance library for measuring all User-centric performance metrics</p>\n\n<p><strong>Webrecorder.io is a web archiving service to collect and revisit web pages</strong><br />\nhttps://webrecorder.io/<br />\nWebrecorder creates an interactive copy of any web page that you browse, including content revealed by your interactions such as playing video and audio, scrolling, clicking buttons, and so forth.</p>\n\n<p><strong>Draw.io VS Code Integration</strong><br />\nhttps://github.com/hediet/vscode-drawio#drawio-vs-code-integration<br />\nThis extension integrates Draw.io into VS Code. 另附：<a href=\"https://www.mongodb.com/blog/post/introducing-mongodb-for-vs-code\">Introducing MongoDB for VS Code</a>.</p>\n\n<p><strong>Announcing Hyperdrive v10</strong><br />\nhttps://blog.hypercore-protocol.org/posts/announcing-hyperdrive-10/<br />\nHyperdrive is a peer-to-peer filesystem that’s designed to help you share files quickly and safely, directly from your computer. In this post we’ll step through some of the improvements we’ve made in v10, explain how Hyperdrive fits into the broader Hypercore Protocol ecosystem, and show you how to get started using it. This release is only the beginning, and we describe our next steps in the “Looking Forward” section.</p>\n\n<p><strong>Memgraph 1.0: An Enterprise-Ready In-Memory Graph Database</strong><br />\nhttps://memgraph.com/blog/announcing-memgraph-1-0-enterprise-ready-real-time-graph-database<br />\nNow approaching 4 years old, Memgraph, a high performance in-memory graph database, has reached v1.0. It’s compatible with the Cypher query language and the Bolt protocol so you can use it from any language that has a Bolt driver. Does ‘enterprise-ready’ mean expensive? Not necessarily. It’s not open source but there is a free ‘community’ licensed version.</p>\n\n<p><strong>What’s Coming in Go 1.15</strong><br />\nhttps://lwn.net/SubscriberLink/820217/47ed80088c03b18d/<br />\nhttps://docs.google.com/presentation/d/1veyF0y6Ynr6AFzd9gXi4foaURlgbMxM-tmB4StDrdAM/edit<br />\nIn the upcoming 1.15 version, changes to the language specification are basically non-existent as expected; the improvements are in the tooling, the performance of the compiler, and in the standard library.</p>\n\n<p><strong>immudb</strong><br />\nhttps://github.com/codenotary/immudb<br />\nimmudb is a lightweight, high-speed immutable database for systems and applications. With immmudb you can track changes in sensitive data in your transactional databases and then record those changes permanently in a tamperproof immudb database. This allows you to keep an indelible history of sensitive data, for example debit/credit card transactions.</p>\n\n<p><strong>Game Programming Patterns</strong><br />\nhttp://gameprogrammingpatterns.com/<br />\nGame Programming Patterns is a collection of patterns I found in games that make code cleaner, easier to understand, and faster.</p>\n\n<h2 id=\"设计\">设计</h2>\n\n<p><strong>How Fluent UI Unlocks the Next Generation of Microsoft 365 Experiences</strong><br />\nhttps://medium.com/microsoft-design/how-fluent-ui-unlocks-the-next-generation-of-microsoft-365-experiences-8b24809faf06<br />\nContinuing our journey toward a true design-to-code system at scale</p>\n\n<p><strong>Micro-Typography: How To Space And Kern Punctuation Marks And Other Symbols</strong><br />\nhttps://www.smashingmagazine.com/2020/05/micro-typography-space-kern-punctuation-marks-symbols/<br />\nFor hundreds of years, we have been using white space in typography. Today, in 2020, how do we add spacing to punctuation marks and other symbols, and how do we adjust the space on the left and right side in an easy and consistent way? It is actually not as easy and quick as it should be.</p>\n\n<p><strong>Where did it come from? My non-computer Daily UI</strong><br />\nhttps://uxplanet.org/ui-where-did-it-come-from-1-9da086682b1d<br />\nDaily UI was created with the user interface of software or computerized devices in mind. In my challenge, I wanted to analyze and reflect on the roots of these elements.</p>\n\n<p><strong>Human-Centered Design in Real Time</strong><br />\nhttps://uxmag.com/articles/human-centered-design-in-real-time<br />\nCo-designing emergency response solutions with COVID-19 frontline workers. 另附：<a href=\"https://uxplanet.org/principles-of-human-centered-design-part-ii-e1fb61a5e9bc\">Principles of Human-Centered Design- Part II</a>.</p>\n\n<h2 id=\"产品及其它\">产品及其它</h2>\n\n<p><strong>If I could bring one thing back to the internet it would be blogs</strong><br />\nhttp://tttthis.com/blog/if-i-could-bring-one-thing-back-to-the-internet-it-would-be-blogs<br />\nBut they would be the one thing I’d bring back to the internet if I could bring one thing back. They’re the thing I miss the most and the most often. They were the most valuable thing on here, besides freer availability of news, free although low quality video content on YouTube, and I guess some kinds of social media. But blogs are something you can sit down and read and get really into to the point you forget where you even are, and think about how you want to try those things maybe in your life, or just enjoy their writing, and you can read deeper into them into past blog posts, and tune back in later and see what they’ve posted since the last things you read about them.</p>\n\n<p><strong>The most successful developers share more than they take</strong><br />\nhttps://stackoverflow.blog/2020/05/14/the-most-successful-developers-share-more-than-they-take/<br />\nAfter interviewing several developers, a pattern started to become clear: great developers share a lot. This takes different forms for different people, but is very often a blog. But for many top developers, their sharing mindset came before their success, and was the direct cause of it, not the result of it.</p>\n\n<p><strong>读书记：《这就是马云》《近观马云》《穿布鞋的马云》</strong><br />\nhttps://mp.weixin.qq.com/s/Iry4Uwuie_gqaJN8l7EjDg<br />\n当我找了一两部清晰率感人的《赢在中国》节目稍微看了看时，哇哦，我错过了什么？马云讲的真是好啊。抱歉我的词藻太少，的确只能用好，很棒，牛逼这样的词来直接表达我的感受。我想我过去是不是对马云有什么误解，因为看了太多他口若悬河跟个大忽悠似的出现在机场以及各种媒体上，要么吹牛逼，要么在装逼，要么耍聪明。加上彼时的我超级盲目自负，于是对马云直接无视了。而现在再来看《赢在中国》，也许是因为我有所经历，所以稍许能够真正感受得到他是在什么样的心态下说什么。越看，越佩服，越感慨。于是带着好奇，找了和马云相关的这几本书看了看，收获颇多，虽然好像晚到了十多年，但对我来说，或许也是最好的、应该的时间点。</p>\n\n<p>– THE END —</p>\n","descriptionType":"text/html","publishedDate":"Mon, 18 May 2020 00:00:00 +0000","feedId":762,"bgimg":"","linkMd5":"220595fb6b3f1c3fabbf52624aa08129","metaImg":"","author":""},{"createdTime":"2020-08-16 21:01:28","updatedTime":"2020-08-16 21:01:28","title":"FEX 技术周刊 - 2020/03/30","link":"http://fex.baidu.com/blog/2020/03/fex-weekly-30/","description":"作者：zhangtao <br> <h2 id=\"深阅读\">深阅读</h2>\n\n<p><strong>Emergency Website Kit</strong><br />\nhttps://mxb.dev/blog/emergency-website-kit/<br />\nIn cases of emergency, many organizations need a quick way to publish critical information. But existing (CMS) websites are often unable to handle sudden spikes in traffic. To make things worse, natural disasters can also damage local network infrastructure, sometimes leaving people with very poor mobile connections. I’ve written about the practice of publishing minimal “text-only” versions of critical news websites before and I think it makes a lot of sense to rely on the rule of least power for these things. When it comes to resilience, you just can’t beat static HTML.</p>\n\n<p><strong>Get Static</strong><br />\nhttps://meyerweb.com/eric/thoughts/2020/03/22/get-static/<br />\nIf you are in charge of a web site that provides even slightly important information, or important services, it’s time to get static.  I’m thinking here of sites for places like health departments (and pretty much all government services), hospitals and clinics, utility services, food delivery and ordering, and I’m sure there are more that haven’t occurred to me.  As much as you possibly can, get it down to static HTML and CSS and maybe a tiny bit of enhancing JS, and pare away every byte you can. 另附：<a href=\"https://bkardell.com/blog/ArchivingByDefault.html\">Making Sure Content Lives On</a>.</p>\n\n<p><strong>It’s not what programming languages do, it’s what they shepherd you to</strong><br />\nhttps://nibblestew.blogspot.com/2020/03/its-not-what-programming-languages-do.html<br />\nshepherding An invisible property of a progamming language and its ecosystem that drives people into solving problems in ways that are natural for the programming language itself rather than ways that are considered “better” in some sense. These may include things like long term maintainability, readability and performance.</p>\n\n<p><strong>State-driven interfaces with XState</strong><br />\nhttps://blog.logrocket.com/state-driven-interfaces-with-xstate/<br />\nAn alternative approach to UI development is state-driven development. This approach puts states first and events second. To me, the core difference is that we go from being on defense to offense. Instead of the user being able to trigger any event, leaving us scrambling to catch them all and write logic to handle them, we give the user a state containing a group of events. While we’re in this state, the user can trigger any event in this group, but no more. I believe this makes UI code simpler, scalable, and more robust. <a href=\"https://github.com/davidkpiano/xstate\">XState</a> is a state management library that enables state-driven development through finite-state machines.</p>\n\n<p><strong>Announcing React Native 0.62 with Flipper</strong><br />\nhttps://reactnative.dev/blog/2020/03/26/version-0.62.html<br />\nFlipper is a developer tool for debugging mobile apps. It’s popular in the Android and iOS communities, and in this release we’ve enabled support by default for new and existing React Native apps.</p>\n\n<p><strong>如何打造高性能小程序门户</strong><br />\nhttps://aotu.io/notes/2020/03/25/high-performance-miniprogram/index.html<br />\n京喜小程序自去年双十一上线微信购物一级入口后，时刻迎接着亿级用户量的挑战，细微的体验细节都有可能被无限放大，为此，“极致的页面性能”、“友好的产品体验” 和 “稳定的系统服务” 成为了我们开发团队的最基本执行原则。首页作为小程序的门户，其性能表现和用户留存率息息相关。因此，我们对京喜首页进行了一次全方位的升级改造，从加载、渲染和感知体验几大维度深挖小程序的性能可塑性。除此之外，京喜首页在微信小程序、H5、APP 三端都有落地场景，为了提高研发效率，我们使用了 Taro 框架实现多端统一，因此下文中有部分内容是和 Taro 框架息息相关的。</p>\n\n<p><strong>Webpack5 新特性 - Federated Modules</strong><br />\nhttps://zhuanlan.zhihu.com/p/115403616<br />\nhttps://mp.weixin.qq.com/s/WAYezuzMKJjn3SECiy1KVA<br />\nWebpack5 模块联邦让 Webpack 达到了线上 Runtime 的效果，让代码直接在项目间利用 CDN 直接共享，不再需要本地安装 Npm 包、构建再发布了！我们知道 Webpack 可以通过 DLL 或者 Externals 做代码共享时 Common Chunk，但不同应用和项目间这个任务就变得困难了，我们几乎无法在项目之间做到按需热插拔。模块联邦是 Webpack5 新内置的一个重要功能，可以让跨应用间真正做到模块共享。</p>\n\n<p><strong>历时四年，Dropbox 用 Rust 重写同步引擎核心代码</strong><br />\nhttps://mp.weixin.qq.com/s?__biz=MzAwODI4MjEwNQ==&amp;mid=2454586960&amp;idx=1&amp;sn=a1ddfdc13b9ca76f4caa1d4d1628733d<br />\n开源 GO 语言工具库、研究 iOS 和 Android 的 C++ 跨平台开发，花费五年时间从云平台向数据中心反向迁移……Dropbox 从未停止对技术的“折腾”。如今，这家公司又花费了四年时间重构了内部最古老、最重要的同步引擎核心代码。</p>\n\n<p><strong>New QML language features in Qt 5.15</strong><br />\nhttps://www.qt.io/blog/new-qml-language-features-in-qt-5.15<br />\nWhile big changes are on their way for Qt 6.0, QML got some new language features already in 5.15. Read on to to learn about required properties, inline components and nullish coalescing.</p>\n\n<p><strong>Open collaboration on COVID-19</strong><br />\nhttps://github.blog/2020-03-23-open-collaboration-on-covid-19/<br />\nhttps://www.mongodb.com/blog/post/helping-developers-tackle-covid19<br />\nhttps://blog.npmjs.org/post/613769880613814272/statement-on-the-covid-19-crisis<br />\nhttps://stripe.com/covid-19<br />\nhttps://blog.ycombinator.com/responding-to-covid-19/<br />\nhttp://blog.archive.org/2020/03/25/internet-archive-staff-and-covid-19-work-at-home-for-most-full-pay-furlough-with-medical-for-scanners/<br />\nIn the midst of the uncertainty and seriousness of COVID-19, we’ve been inspired to see a global community of scientists, government officials, journalists, programmers, and concerned citizens come together to collaborate on a variety of projects with the shared goal of understanding COVID-19 and coordinating on the best response. Even though many of these projects aren’t traditional software projects, the same collaborative development model is being applied to curated data sets, DIY instruction sets, and more. Below are some of the most impactful open source projects we’ve seen for tracking, understanding, and responding to COVID-19 so far.</p>\n\n<p><strong>How to manage HTML DOM with vanilla JavaScript only?</strong><br />\nhttps://htmldom.dev/<br />\nA guide with a list of different things we might normally do with a JavaScript library, but can now be done using native APIs.</p>\n\n<p><strong>An Introduction to MDXJS</strong><br />\nhttps://css-tricks.com/an-introduction-to-mdxjs/<br />\nMDX shines in cases where you want to maintain a React-based blog. Using it means you no longer have to create custom React component pages when you want to do something impossible in Markdown (or create a plugin). I have been using it on my blog for over a year and have been loving the experience One of my favorite projects so far is a React component I call Playground that can be used to demo small HTML/CSS/JavaScript snippets while allowing users to edit the code. Sure, I could have used some third-party service and embed demos with it, but this way I don’t have to load third-party scripts at all.</p>\n\n<p><strong>Please don’t write your documentation in Markdown</strong><br />\nhttps://buttondown.email/hillelwayne/archive/please-dont-write-your-documentation-in-markdown/<br />\nMarkdown is tolerable for short documentation, like a readme.md. Past that, it’s the wrong tool for the job.</p>\n\n<p><strong>Tim’s Take: A re:Invent 2020 Serverless Wishlist</strong><br />\nhttps://medium.com/@timawagner/tims-take-re-invent-2020-serverless-wishlist-7f0756da4cd0<br />\nIt’s never too early to start planning for next re:Invent!</p>\n\n<p><strong>Go, the Go Community, and the Pandemic</strong><br />\nhttps://blog.golang.org/pandemic<br />\nIn this post we want to share a few important notes about how the pandemic is affecting the Go community, a few things we’re doing to help, what you can do to help, and our plans for Go itself.</p>\n\n<h2 id=\"新鲜货\">新鲜货</h2>\n\n<p><strong>Full Third-Party Cookie Blocking and More</strong><br />\nhttps://webkit.org/blog/10218/full-third-party-cookie-blocking-and-more/<br />\nThis blog post covers several enhancements to Intelligent Tracking Prevention (ITP) in iOS and iPadOS 13.4 and Safari 13.1 on macOS to address our latest discoveries in the industry around tracking. 另附：<a href=\"https://ar.al/2020/03/25/apple-just-killed-offline-web-apps-while-purporting-to-protect-your-privacy-why-thats-a-bad-thing-and-why-you-should-care/\">Apple just killed Offline Web Apps while purporting to protect your privacy: why that’s A Bad Thing and why you should care</a></p>\n\n<p><strong>firefox’s low-latency webassembly compiler</strong><br />\nhttp://wingolog.org/archives/2020/03/25/firefoxs-low-latency-webassembly-compiler<br />\nToday I’d like to write a bit about the WebAssembly baseline compiler in Firefox.</p>\n\n<p><strong>The role low code tools may play at GitLab</strong><br />\nhttps://about.gitlab.com/blog/2020/03/26/low-code-no-code/<br />\nCitizen developers are creating code without being coders. CEO Sid Sijbrandij and senior PMM Parker Ennis explain the impact on GitLab.</p>\n\n<p><strong>Version 9.1 of Angular Now Available</strong><br />\nhttps://blog.angular.io/version-9-1-of-angular-now-available-typescript-3-8-faster-builds-and-more-eb292f989428<br />\nTypeScript 3.8, faster builds, and more</p>\n\n<p><strong>Showing the World You Can Write a Cool Program Inside One Tweet</strong><br />\nhttps://spectrum.ieee.org/tech-talk/computing/software/show-the-world-you-can-write-a-cool-program-inside-a-single-tweet<br />\nhttps://twitter.com/bbcmicrobot/status/1230644568326053888<br />\nThe BBC Micro Bot will try to run anything you can code in 280 characters or less.</p>\n\n<p><strong>ElectronCGI 1.0 – Cross-platform GUIs for .Net Core</strong><br />\nhttps://www.blinkingcaret.com/2020/03/25/electroncgi-1-0-cross-platform-guis-for-net-core/<br />\nIf you don’t know what ElectronCGI is, it’s a “two-part” library that allows invoking .NET code from Node.js and Node.js code from .NET. It’s two part because it is comprised of a npm package called electron-cgi and a NuGet package called ElectronCGi.DotNet.</p>\n\n<p><strong>TOAST UI Editor 2.0 Released!</strong><br />\nhttps://ui.toast.com/weekly-pick/en_20200318/<br />\nTOAST UI Editor is a document editing library built using JavaScript, and it offers two different modes of editors, Markdown and “What You See is What You Get” (WYSIWYG), for users to choose freely which mode is the more suitable option for different users.</p>\n\n<p><strong>Prettier 2.0 “2020”</strong><br />\nhttps://prettier.io/blog/2020/03/21/2.0.0.html<br />\nBetter defaults, a better CLI and better heuristics. Oh, and TypeScript 3.8.</p>\n\n<p><strong>Accessible UI Component Libraries Roundup</strong><br />\nhttps://www.digitala11y.com/accessible-ui-component-libraries-roundup/<br />\nHere is a list of accessible UI components that you can use for your next project. Please do let me know if there are any resources that are missing &amp; they will be added to list accordingly.</p>\n\n<p><strong>redux-toolkit - 1.3.0</strong><br />\nhttps://github.com/reduxjs/redux-toolkit/releases/tag/v1.3.0<br />\nThis release adds two new APIs: createEntityAdapter to help manage normalized state, and createAsyncThunk to abstract common data fetching behavior.</p>\n\n<p><strong>Evergreen React UI Framework by Segment</strong><br />\nhttps://github.com/segmentio/evergreen<br />\nEvergreen is a React UI Framework for building ambitious products on the web. Brought to you by Segment.</p>\n\n<p><strong>React Data Grid</strong><br />\nhttps://adazzle.github.io/react-data-grid/<br />\nExcel-like data grid component built with React.</p>\n\n<p><strong>Uppload</strong><br />\nhttps://github.com/elninotech/uppload<br />\nUppload is a better JavaScript image uploader. It’s highly customizable with 30+ plugins, completely free and open-source, and can be used with any file uploading backend.</p>\n\n<p><strong>gqless - A GraphQL client without queries</strong><br />\nhttps://gqless.dev/<br />\nAuto-generates GraphQL queries based on the data your application consumes.</p>\n\n<p><strong>ora - Elegant terminal spinner</strong><br />\nhttps://github.com/sindresorhus/ora</p>\n\n<p><strong>Zig</strong><br />\nhttps://ziglang.org/<br />\nhttps://andrewkelley.me/post/zig-cc-powerful-drop-in-replacement-gcc-clang.html<br />\nZig is a general-purpose programming language designed for robustness, optimality, and maintainability.</p>\n\n<p><strong>MeiliSearch - Ultra relevant and instant full-text search API</strong><br />\nhttps://github.com/meilisearch/MeiliSearch<br />\nMeiliSearch is a powerful, fast, open-source, easy to use and deploy search engine. Both searching and indexing are highly customizable. Features such as typo-tolerance, filters, and synonyms are provided out-of-the-box.</p>\n\n<p><strong>9 offbeat databases worth a look</strong><br />\nhttps://www.infoworld.com/article/3533410/9-offbeat-databases-worth-a-look.html<br />\nPlain old MySQL or MongoDB not doing the job? See if these unique offerings meet your needs</p>\n\n<p><strong>ION - a distributed RTC system written by pure go and flutter</strong><br />\nhttps://github.com/pion/ion<br />\nDistributed RTC System by pure Go and Flutter.</p>\n\n<p><strong>Work together like you’re in the same room</strong><br />\nhttps://screen.so/#/home<br />\nFast screen sharing with multiplayer control, drawing &amp; video.</p>\n\n<p><strong>Epidemic Calculator</strong><br />\nhttp://gabgoh.github.io/COVID/index.html<br />\nThis calculator implements a classical infectious disease model — SEIR (Susceptible → Exposed → Infected → Removed), an idealized model of spread still used in frontlines of research e.g. [Wu, et. al, Kucharski et. al].</p>\n\n<p><strong>Jitsi Meet: An open source alternative to Zoom</strong><br />\nhttps://meet.jit.si/<br />\nSecure, fully featured, and completely free video conferencing. Go ahead, video chat with the whole team. In fact, invite everyone you know. Jitsi Meet is a fully encrypted, 100% open source video conferencing solution that you can use all day, every day, for free — with no account needed.</p>\n\n<p><strong>Mycroft – Open Source Voice Assistant</strong><br />\nhttps://mycroft.ai/<br />\nMycroft is the world’s first open source voice assistant. Our software runs on many platforms—on desktop, our Mycroft Mark 1, or on a Raspberry Pi. This is open source software which can be freely remixed, extended, and improved. Mycroft may be used in anything from a science project to an enterprise software application.</p>\n\n<p><strong>Zotero - Your personal research assistant</strong><br />\nhttps://www.zotero.org/<br />\nZotero is a free, open-source research tool that helps you collect, organize, and analyze research and share it in a variety of ways. Zotero includes the best parts of older reference manager software — the ability to store author, title, and publication fields and to export that information as formatted references — and the best aspects of modern software and web applications, such as the ability to organize, tag, and search in advanced ways.</p>\n\n<h2 id=\"设计\">设计</h2>\n\n<p><strong>With love for the user: UI/UX trends 2020</strong><br />\nhttps://proarea.co/blog/with-love-for-the-user-ui-ux-trends-2020/<br />\nToday, the user and his needs are taken first. The user-first approach has proved itself in the last couple of years, although there was no point in doubting its value. Product success depends on UI/UX trends. Imagine that the user likes your app or site interface, it is comfortable for him and solves his problems quickly enough.</p>\n\n<p><strong>Why Design Systems Fail, and How to Make Them Work</strong><br />\nhttps://blog.marvelapp.com/why-design-systems-fail-how-to-make-them-work/<br />\nLearn from other’s mistakes to make your system better.</p>\n\n<p><strong>Imagineering in a Box: Sound Design</strong><br />\nhttps://uxmag.com/articles/imagineering-in-a-box-sound-design<br />\nWhether you are creating a marketing campaign, a trade show booth, an experience or a land, sound is part of telling that story and getting your audience to feel.</p>\n\n<p><strong>Sketch 64 — Search, Tints &amp; New Components Menu (again!)</strong><br />\nhttps://medium.com/sketch-app-sources/sketch-64-tints-new-components-menu-again-3d17cfed1aa1<br />\nDesign Tools are changing fast nowadays. I remember times where graphic software had only minor changes over the decade. Fortunately, these changes are made for us to boost our workflow. Let’s check out what Sketch Team has improved with the newest version 64.</p>\n\n<p><strong>除了新拟物化，还有哪些值得关注的视觉设计趋势</strong><br />\nhttps://www.uisdc.com/visual-design-trend<br />\n最近有大量的设计软件和工具雨后春笋般涌现——Sketch、Figma、Adobe Creative Cloud、C4d、Redshift等等。这使得设计创作门槛越来越低，设计师们也能够以更多的形式和更低的成本表达自己的创意。我觉得趋势应该是能够相互结合，还能以创造性的方式在 web 和许多 APP 中得到使用。如果使用正确，3D 插图、动画和自定义的组合可以为用户提供一套完整的解决方案。</p>\n\n<h2 id=\"产品及其它\">产品及其它</h2>\n\n<p><strong>The coronavirus crisis proves the internet should be a public utility</strong><br />\nhttps://qz.com/1826043/the-coronavirus-crisis-proves-internet-should-be-a-public-utility/<br />\nThis patchwork approach to public access is taking hold across the US and there is a growing understanding that internet access is a social issue that has to be addressed by governments, not private companies operating with profit as their sole motivator.</p>\n\n<p><strong>The Art of Discarding for Programmers</strong><br />\nhttps://medium.com/better-programming/the-art-of-discarding-for-programmers-73a9696d59bd<br />\nDon’t keep things around — few things are sacred.</p>\n\n<p><strong>领导力的30个“天条”</strong><br />\nhttps://mp.weixin.qq.com/s/kyc7sxEh1s6r8bBC-QpHaQ<br />\n一个高效的会议，讨论的是解决方案，而不是问题和观点。找到真问题，比解决问题重要。“无为”的人看起来没有行动，其实是引导方向之人。</p>\n\n<p><strong>假如用《西游记》的方式，打开互联网公司……</strong><br />\nhttps://mp.weixin.qq.com/s/Bmbs187lwFzzQKcOo76R1g<br />\n一个项目的上线，就好比一场西天取经的修行。路上遇上的那些数不清的魑魅魍魉，现在的英文名叫bug；其中的弯弯绕绕、艰难险阻，绝不比九九八十一少。如果用《西游记》的方式打开互联网公司，大概就是下面这样——</p>\n\n<blockquote>\n  <p>对数据可视化有兴趣的可以阅读由 AntV 带来的 <a href=\"https://www.yuque.com/mo-college/weekly/omgug9\">墨者修齐 2020-03-29 · Graphin、What is a line graph、One Angry Bird、Visallo</a></p>\n</blockquote>\n\n<p>– THE END –</p>\n","descriptionType":"text/html","publishedDate":"Mon, 30 Mar 2020 00:00:00 +0000","feedId":762,"bgimg":"","linkMd5":"3cc2a43a2523f6370222a9a92786cde1","metaImg":"","author":""},{"createdTime":"2020-08-16 21:01:28","updatedTime":"2020-08-16 21:01:28","title":"FEX 技术周刊 - 2020/06/08","link":"http://fex.baidu.com/blog/2020/06/fex-weekly-08/","description":"作者：zhangtao <br> <h2 id=\"本期看点\">本期看点</h2>\n\n<p><strong>Introducing P2P Matrix</strong><br />\nhttps://matrix.org/blog/2020/06/02/introducing-p-2-p-matrix<br />\nP2P Matrix is about more than just letting users store their own conversations: it can also avoid dependencies on the Internet itself by working over local networks, mesh networks, or situations where the Internet has been cut off. Even more interestingly, without homeservers, there is nowhere for metadata to accumulate about who is talking to who, and when - which is a legitimate complaint about today’s Matrix network, given the homeservers of all users in a given conversation necessarily have to store that conversation’s metadata.</p>\n\n<p><strong>The rise of React</strong><br />\nhttps://increment.com/frontend/the-rise-of-react/<br />\nOn the social, cultural, and technological impacts of the increasingly ubiquitous frontend framework.</p>\n\n<p><strong>一篇写给从未编程过的人的入门教程</strong><br />\nhttps://www.yuque.com/barretlee/thinking/zcs3c9<br />\n昨天我分享了一篇如何使用 PlantUML 这门简单的语言来绘制复杂的活动图、流程图和组件图等，有的同学看到了以后，询问我，“外行需要多长时间才能学会这玩意儿呀？”，这个问题不知道该如何回答，因为我并不认同“外行”这个词。我始终认为，在编程这件事情上，每个人都是内行，每个人也都是外行。事实上，从不了解 PlantUML 到能够参考文档绘制出复杂的流程图，我也就学了一个上午，边学习、边实践、边分享，于是就会了。</p>\n\n<p><strong>Grid.js - Advanced Table Plugin</strong><br />\nhttps://gridjs.io/?hn<br />\nGrid.js is a Free and open-source HTML table plugin written in TypeScript. It works with most JavaScript frameworks, including React, Angular.js, Vue and VanillaJs.</p>\n\n<p><strong>How To Become A Hacker</strong><br />\nhttps://zalberico.com/essay/2020/04/19/how-to-become-a-hacker.html<br />\nSixteen years later, I thought it’d be fun to write my own version of How to Become a Hacker to supplement ESR’s original: something I would have liked to have read myself at thirteen that focuses on some other aspects I would have found helpful too. A lot of posts about programming and related topics are rallying cries, trying to persuade you to adopt a specific programming language, framework, operating system, or specific way of doing things. This post does less of that and while I make some suggestions, it’s a more tempered view. Its goal is to fill the niche of what I think I would have liked to have read after ESR’s original post (so you should read that one first).</p>\n\n<h2 id=\"深阅读\">深阅读</h2>\n\n<p><strong>Google Is Not God of The Web</strong><br />\nhttps://bilge.world/google-page-experience<br />\nAlmost exactly two years ago, I warned that Google was on track to replace God of us all. Last month, The Verge’s Dieter Bohn reported that Google plans to begin accounting for “page experience” in its search rankings beginning in 2021. \nI’m not a “real” web developer – nor do I mean to dictate to a single one – but I know enough theory to note that of this “core web” education operation centered around web.dev is operating on some irritating assumptions. 另附：<a href=\"https://www.fastly.com/blog/ensure-ready-google-core-web-vitals\">Google’s Core Web Vitals: ensuring your site is ready for Google’s next major update</a>.</p>\n\n<p><strong>Software Engineering Within SpaceX</strong><br />\nhttps://yasoob.me/posts/software_engineering_within_spacex_launch/<br />\nSpaceX also made use of Chromium and JavaScript for Dragon 2 flight interface. I am not sure how that passed the certification. I assume it was allowed because for every mission-critical input on the display, there was a physical button underneath the display as well. So if in case the screen malfunctioned, the astronauts could potentially make use of the physical buttons.</p>\n\n<p><strong>解读新一代 Web 性能体验和质量指标</strong><br />\nhttps://segmentfault.com/a/1190000022744550<br />\n理解 Chrome 83 新增的性能指标</p>\n\n<p><strong>精读《snowpack》</strong><br />\nhttps://zhuanlan.zhihu.com/p/144993158<br />\n基于 ESM import 的构建框架不止 snowpack 一个，还有比如基于 vue 的 vite，因为浏览器支持模块化是一个标准，而不与任何框架绑定，未来任何构建工具都会基于此特性开发，这意味着在未来的五年，前端构建一定会回到十年前的速度，这个趋势是明显、确定的。</p>\n\n<p><strong>字节跳动自研强一致在线 KV &amp;表格存储实践</strong><br />\nhttps://zhuanlan.zhihu.com/p/145888430<br />\n自从 Google 发布 Spanner 论文后，国内外相继推出相关数据库产品或服务来解决数据库的可扩展问题。字节跳动在面对海量数据存储需求时，也采用了相关技术方案。本次分享将介绍我们在构建此类系统中碰到的问题，解决方案以及技术演进。</p>\n\n<p><strong>Serverless Express – Easy APIs On AWS Lambda &amp; AWS HTTP API</strong><br />\nhttps://www.serverless.com/blog/serverless-express-apis-aws-lambda-http-api/<br />\nTake existing Express.js apps and host them easily onto cheap, auto-scaling, serverless infrastructure on AWS Lambda and AWS HTTP API with <a href=\"https://github.com/serverless-components/express\">Serverless Express</a>. It’s packed loads of production-ready features, like custom domains, SSL certificates, canary deployments, and costs ~$0.000003 per request. 另附：<a href=\"https://stackoverflow.blog/2020/03/02/best-practices-for-rest-api-design/\">Best practices for REST API design</a>.</p>\n\n<p><strong>Techniques For Designing Your API and Microservices</strong><br />\nhttps://tyk.io/api-design-methodologies/<br />\nOne way of validating your API and microservice designs is to use some design techniques to surface issues before we commit to our design. Just as we use test-driven development to turn requirements into test cases that we code against, these design techniques help us to design APIs and microservices that meet the needs of our stakeholders. Let’s examine five techniques that can help you validate your API and service designs before, during, and after the design process.</p>\n\n<p><strong>Making Walmart’s Shopping Assistant Proactive</strong><br />\nhttps://medium.com/walmartlabs/making-walmarts-shopping-assistant-proactive-53a1764fcdee<br />\nSaving time for our customers using proactive actions, predictive suggestions, and feature discovery.</p>\n\n<p><strong>Reducing search indexing latency to one second</strong><br />\nhttps://blog.twitter.com/engineering/en_us/topics/infrastructure/2020/reducing-search-indexing-latency-to-one-second.html<br />\nOne of the key metrics for a search system is the indexing latency, the amount of time it takes for new information to become available in the search index. This metric is important because it determines how quickly new results show up. Not all search systems need to update their contents quickly. In a warehouse inventory system, for example, one daily update to its search index might be acceptable.</p>\n\n<p><strong>Why the developers who use Rust love it so much</strong><br />\nhttps://stackoverflow.blog/2020/06/05/why-the-developers-who-use-rust-love-it-so-much/<br />\nHere’s why Rust gets so much love, straight from the Rustaceans themselves. 另附：<a href=\"https://blog.rust-lang.org/2020/06/04/Rust-1.44.0.html\">Announcing Rust 1.44.0</a>.</p>\n\n<p><strong>Ultimate Guide to Python Debugging</strong><br />\nhttps://martinheinz.dev/blog/24<br />\nEven if you write clear and readable code, even if you cover your code with tests, even if you are very experienced developer, weird bugs will inevitably appear and you will need to debug them in some way. Lots of people resort to just using bunch of print statements to see what’s happening in their code. This approach is far from ideal and there are much better ways to find out what’s wrong with your code, some of which we will explore in this article.</p>\n\n<p><strong>The beauty of Unix pipelines</strong><br />\nhttps://prithu.xyz/posts/unix-pipeline/<br />\nThe Unix philosophy lays emphasis on building software that is simple and extensible. Each piece of software must do one thing and do it well. And that software should be able to work with other programs through a common interface – a text stream. This is one of the core philosophies of Unix which makes it so powerful and intuitive to use.</p>\n\n<h2 id=\"新鲜货\">新鲜货</h2>\n\n<p><strong>W3C Website redesign: Choosing a front end framework</strong><br />\nhttps://www.w3.org/blog/2020/06/w3c-website-redesign-choosing-a-front-end-framework/  <br />\nAs part of the W3C Website phase 1 redesign work, we are seeking the review and feedback of our exceptionally well-informed and helpful external contributors, on <a href=\"https://w3c.studio24.net/docs/choosing-front-end-framework/\">choosing a front end framework</a>.</p>\n\n<p><strong>The Stack Overflow Developer Survey 2020 Results</strong><br />\nhttps://insights.stackoverflow.com/survey/2020<br />\nThis year, we focused on seeking diverse representation while asking for information ranging from technologies and behavior to questions that will help us improve the Stack Overflow community for everybody who codes.</p>\n\n<p><strong>CKEditor 5 v19.1.1 with table enhancements, typing around widgets and print to PDF feature</strong><br />\nhttps://ckeditor.com/blog/CKEditor-5-v19.1.1-with-table-enhancements-typing-around-widgets-and-print-to-PDF-feature/<br />\nWe are happy to announce the release of CKEditor 5 v19.1.1 that introduces further enhancements for the table feature, improved typing around widgets as well as the new PDF export feature. In addition to that, we focused on the adjustments of the editor’s development tools to the newly adopted monorepo infrastructure. Read on for more details about these and other improvements!</p>\n\n<p><strong>Introducing Swift AWS Lambda Runtime</strong><br />\nhttps://swift.org/blog/aws-lambda-runtime/<br />\nDistributed as a Swift package, the Swift AWS Lambda Runtime is designed to help Swift developers build serverless functions for the Amazon Web Services Lambda platform.</p>\n\n<p><strong>Solid - A declarative Javascript library for creating user interfaces</strong><br />\nhttps://github.com/ryansolid/solid<br />\nIt does not use a Virtual DOM. Instead it opts to compile its templates down to real DOM nodes and wrap updates in fine grained reactions. This way when your state updates only the code that depends on it runs.</p>\n\n<p><strong>React Datepicker 3.0</strong><br />\nhttps://github.com/Hacker0x01/react-datepicker/releases/tag/v3.0.0<br />\nA simple and reusable datepicker component for React.</p>\n\n<p><strong>HTML5 Boilerplate 8.0.0 Released</strong><br />\nhttps://htmlcssjavascript.com/web/html5-boilerplate-8-0-0-released/<br />\nIt took a little longer than I expected, but we released HTML5 Boilerplate 8.0.0 yesterday. As I mentioned a few weeks ago, it’s the 10th anniversary release, and if I do say so myself, it’s a pretty good way to celebrate 10 years of the project. It was a lot of work getting this one out the door, but I’m really happy with how it turned out.</p>\n\n<p><strong>Rough Notation</strong><br />\nhttps://roughnotation.com/<br />\nRough Notation uses RoughJS to create a hand-drawn look and feel. Elements can be annotated in a number of different styles. Animation duration and delay can be configured, or just turned off.</p>\n\n<p><strong>Caldera - Server-side execution for React</strong><br />\nhttps://github.com/calderajs/caldera-react<br />\nCaldera is a server-side execution environment for React. Think of it as the Node.js analog to Phoenix LiveView — all of the application logic (including rendering) runs on the server, and DOM updates are sent to the client in real-time.</p>\n\n<p><strong>Simpdf :: Minimal PDF editor</strong><br />\nhttps://simpdf.com/<br />\nEdit pdf like a word doc while preserving structure and format.</p>\n\n<h2 id=\"设计\">设计</h2>\n\n<p><strong>Introducing Deck 1.0 —The Sketch to Powerpoint converter</strong><br />\nhttps://medium.com/sketch-app-sources/introducing-deck-1-0-for-sketch-a-plugin-to-convert-your-designs-into-editable-ppts-dea463294f86<br />\nTwo years back I build an MVP online tool that dealt with the same concept, Sketch to PPT converter. Later on, I decided to enhance the experience and making it a plugin rather than an online tool. With some better performance and enhanced experience here I am introducing Deck — The sketch plugin to convert your designs into an editable PPTX file.</p>\n\n<p><strong>Good Design Vs. Good UX Design</strong><br />\nhttps://uxmag.com/articles/good-design-vs-good-ux-design<br />\nThe idea of a product that is aesthetically pleasing being one that has a good user experience is a common misconception.</p>\n\n<p><strong>How To Test A Design Concept For Effectiveness</strong><br />\nhttps://www.smashingmagazine.com/2020/06/test-design-concept-effectiveness/<br />\nGetting a client or stakeholder to approve a design concept can be challenging. However, testing can make it easier, as well as ensuring you have the right solution.</p>\n\n<h2 id=\"产品及其它\">产品及其它</h2>\n\n<p><strong>Become an Effective Software Engineering Manager: My Book Review and Notes</strong><br />\nhttps://blog.pragmaticengineer.com/become-and-effective-software-engineering-manager-my-book-review/<br />\nI wish the book Become an Effective Software Engineering Manager (ebook) existed when I moved from development to management. I was one of the luckier ones: I had a formal apprentice management program with plenty of training, access to senior engineering leaders as mentors within the company, and a circle of hands-on engineering managers to learn from. Even so, this book would have helped me be more strategic about my learning and would have given me more confidence early on.</p>\n\n<p><strong>The future is not what it used to be</strong><br />\nhttps://blog.scottlogic.com/2020/06/05/the-future.html<br />\nThis pandemic has provided a relatively brief insight into a future world, one in which virtual and digital has become central to every interaction, forcing organisations and their leaders to go further and to deepen their IT adoption and business change. A world in which omni digital channels become the main customer engagement model, fully automated processes become a primary driver of productivity and the very basis of flexible and transparent supply chains. It is a world in which complete agility is a prerequisite to survival allowing adaptability to continuous changes of habit and behavior.</p>\n\n<p><strong>《科技向善》出版，马化腾序言再谈使命愿景</strong><br />\nhttps://mp.weixin.qq.com/s/krnKp91WbLGbbiucpM9miA<br />\n科技是一种能力，向善是一种选择，我们选择科技向善，不仅意味着要坚定不移地提升我们的科技能力，为用户提供更好的产品和服务，持续提升人们的生产效率和生活品质，还要有所不为、有所必为。在当下的数字化浪潮中，如何共建信任基石，让科技更好服务人类的美好生活，需要包括科技行业在内的社会多方共同探索。“科技向善”不仅是腾讯的使命愿景，也是时代的命题。在践行科技向善的路上，我们期待与更多同行、机构一起探索、创新与实践。</p>\n\n<p><strong>电子表格的历史：除非你知道它从何而来，否则你将无法预测它将走向何方</strong><br />\nhttps://sspai.com/post/60799<br />\n从 Airtable 为代表的 Nocode 工具开始，到近期因为疫情导致的 Remote 办公风潮的兴起，在面对未来迷茫的时候，答案其实往往蕴藏在过去的历史中。所以本文回溯了电子表格从 1978 年的创造史，到今天 Airtable 的现状，看看能否从历史的浪潮中，找到新的机会所在（或者说找到古典产品经理的尊严😃）。哦对了，从某种意义上说，Excel 是世界上最常用的编程语言和用户界面工具，同时也是使用最多的数据库。</p>\n\n<blockquote>\n  <p>对数据可视化有兴趣的可以阅读由 AntV 带来的 <a href=\"https://www.yuque.com/mo-college/weekly/halk0k\">墨者修齐 2020-06-05·面部识别使用的世界地图、科比的篮球生涯数据可视化、商品超级周期</a></p>\n</blockquote>\n\n<p>– THE END –</p>\n\n","descriptionType":"text/html","publishedDate":"Mon, 08 Jun 2020 00:00:00 +0000","feedId":762,"bgimg":"","linkMd5":"2668d9cafd9dc7e174334506ab91cd50","metaImg":"","author":""},{"createdTime":"2020-08-16 21:01:28","updatedTime":"2020-08-16 21:01:28","title":"FEX 技术周刊 - 2020/04/06","link":"http://fex.baidu.com/blog/2020/04/fex-weekly-06/","description":"作者：zhangjunah <br> <h1 id=\"20200406---robots-learning-to-move-like-animals\">2020.04.06 - Robots Learning to Move like Animals</h1>\n\n<h2 id=\"深阅读\">深阅读</h2>\n\n<p><strong>Robots Learning to Move like Animals</strong><br />\nhttps://bair.berkeley.edu/blog/2020/04/03/laikago/<br />\nIn this work, we present a framework for learning robotic locomotion skills by imitating animals. Given a reference motion clip recorded from an animal (e.g. a dog), our framework uses reinforcement learning to train a control policy that enables a robot to imitate the motion in the real world.  另附：<a href=\"https://ai.googleblog.com/2020/04/exploring-nature-inspired-robot-agility.html\">Exploring Nature-Inspired Robot Agility</a>.</p>\n\n<p><strong>ECMAScript 2020: The Final Feature Set</strong><br />\nhttps://pawelgrzybek.com/whats-new-in-ecmascript-2020/<br />\nhttps://2ality.com/2019/12/ecmascript-2020.html\nTC39 has just approved the <a href=\"https://tc39.es/ecma262/2020/\">ECMAScript 2020 spec</a> (a full weekend’s bedtime reading right there!) with Ecma GA approval due in a few months, but what’s new?</p>\n\n<p><strong>Pointer Compression in V8</strong><br />\nhttps://v8.dev/blog/pointer-compression<br />\nThere is a constant battle between memory and performance. As users, we would like things to be fast as well as consume as little memory as possible. Unfortunately, usually improving performance comes at a cost of memory consumption (and vice versa).</p>\n\n<p><strong>Introducing Microsoft Editor – Bring out your best writer wherever you write</strong><br />\nhttps://techcommunity.microsoft.com/t5/microsoft-365-blog/introducing-microsoft-editor-bring-out-your-best-writer-wherever/ba-p/1247931<br />\nWith the power of AI, we are bringing the Microsoft Editor experience to all the places you write, meeting you where you are, and helping you to easily bring out your best writer. No matter what language you are writing in, we have you covered. It is all part of our broader vision for Microsoft 365, a productivity experience that puts AI to work for you. Over time, Microsoft Editor will evolve, becoming more helpful and accurate as we incorporate feedback from our customers to make improvements. Microsoft Editor will begin rolling out today, with general availability by the end of April. Office 365 will become Microsoft 365 beginning April 21.</p>\n\n<p><strong>Innovating on Web Monetization: Coil and Firefox Reality</strong><br />\nhttps://hacks.mozilla.org/2020/03/web-monetization-coil-and-firefox-reality/<br />\nIn the coming weeks, Mozilla will roll out a Web Monetization experiment using Coil to support payments to creators in the Firefox Reality ecosystem. Web Monetization is an alternative approach to payments that doesn’t rely on advertising or stealing your data and attention. We wrote about Web Monetization for game developers back in the autumn, and now we’re excited to invite more of you to participate, first as creators and soon as consumers of all kinds of digital and virtual content.</p>\n\n<p><strong>Modern UX metrics on WebPageTest</strong><br />\nhttps://addyosmani.com/blog/modern-ux-metrics-on-webpagetest/<br />\nhttps://addyosmani.com/blog/pagespeed-insights-api/<br />\nThis tip covers how to measure modern UX metrics on WebPageTest using the Custom Metrics feature. On the Chrome team, we’ve recently been looking at a few new metrics we believe help better quantify what makes for a good user-experience on the web.</p>\n\n<p><strong>如何用 DDD 结合 TDD 的思想『分治』复杂问题</strong><br />\nhttps://mp.weixin.qq.com/s?__biz=MjM5Mjg4NDMwMA==&amp;mid=2652977366&amp;idx=1&amp;sn=a39a769f8dce2bec261f1a2061a15b9f<br />\n软件开发是一项复杂的集体活动，它涉及到一系列的行为和艺术，如项目管理、流程管控、知识转化、程序员心理学（狗头）等。从个体出发时，这些都是一些无关紧要的因素。作为一个 “螺丝钉”，我们所关心的是：如何去解决问题？当然了，我们把组织视为一个个体时，我们也只关心：如何去解决问题？本文是我在写 Chapi 过程中的一个感悟与过程的思考，因为它具有一定的代表性，所以记录一下供大家参考。</p>\n\n<p><strong>[译]无代码开发，站到了程序员鄙视链顶端</strong><br />\nhttps://mp.weixin.qq.com/s/wcwpxY054VJtKVXLtkM32A<br />\n微软称无代码是它的“Next Big Thing”，谷歌说无代码是下一代的变革和提升。也有越来越多的企业开始进入“无代码”领域。这是在革开发者的命吗？你可能多虑了。所谓“无代码”，并不是“不存在代码”，无代码平台的开发对后台的支撑能力提出了更高的要求，需要更为强大的技术团队。所以“无代码”不是在”淘汰”开发者，而是给予开发者更大挑战、更多机会。</p>\n\n<p><strong>I Am Switching to JS</strong><br />\nhttps://blogtitle.github.io/i-am-switching-to-js/<br />\nAfter 5 years of using Go I am finally moving on. Go has served me well and has been the best language I could have possibly used for the longest time, but it is now the moment for me to let it Go.</p>\n\n<p><strong>Is Apple trying to kill PWAs?</strong><br />\nhttps://ionicframework.com/blog/is-apple-trying-to-kill-pwas/<br />\nIt seems that any time Apple releases something there is bound to be some noise regarding it. This time, it’s in regards to browser storage and Apple’s recent proclamation that such data will be deleted after 7 days. Well let’s break this down and see what this really means for developers.</p>\n\n<p><strong>33 line React</strong><br />\nhttps://leontrolski.github.io/33-line-react.html<br />\nIn this post, I’m going to make the smallest React-like thing that can do the above. It’s very mithril influenced.</p>\n\n<p><strong>Introducing React Easy State by RisingStack</strong><br />\nhttps://blog.risingstack.com/introducing-react-easy-state-risingstack/<br />\nReact Easy State is a transparent reactivity based state manager. It automagically decides when to render which components without explicit orders from you.</p>\n\n<p><strong>What Should You Do When A Web Design Trend Becomes Too Popular?</strong><br />\nhttps://www.smashingmagazine.com/2020/03/web-design-trend-popular/<br />\nBy now, you’re probably used to seeing design trends come and go. But have you ever given any thought to what passing trends do to a website when left there for too long? As a web designer, you have a few choices. You can ignore popular design trends altogether; you can adopt them, but pull them out of rotation the second they go stale, or you can put your own unique spin on them. This guide will help you figure out which approach makes the most sense for your site.</p>\n\n<p><strong>Running Golang on the browser with WebAssembly and TinyGo</strong><br />\nhttps://marianogappa.github.io/software/2020/04/01/webassembly-tinygo-cheesse/<br />\nThis is the story of how I managed to expose my Golang chess API project cheesse as a WebAssembly binary, compiled using TinyGo, so JavaScript could use it without needing a server. The blogpost is optimised for helping others going through a similar exercise, rather than for readability, so expect a little too much of “if this, do this”. Sorry.</p>\n\n<p><strong>Hapi: A Performance deep-dive</strong><br />\nhttps://www.nearform.com/blog/hapi-a-performance-deep-dive/<br />\nhttps://hapi.dev/<br />\nRecently we were tasked with investigating performance with the popular web framework hapi. Performance means a lot of different things, but we wanted to see if we could improve the requests per seconds that hapi could perform on real-world use cases. Real-world means not just “juicing” the stats to improve various benchmark scores but actually trying to figure out what kind of bottlenecks appeared when using the framework for the application you’d normally do when writing an application deployed for a wider audience.</p>\n\n<p><strong>How Flutter led me to React Native — and vice-versa</strong><br />\nhttps://medium.com/flutter-community/how-flutter-led-me-to-react-native-and-vice-versa-7f8fc77ff295<br />\nThe experience of small teams with both tools and the decisions we made aiming for better user experience in 2017 and 2020. 另附：<a href=\"https://medium.com/flutter-community/why-flutter-has-become-the-best-choice-to-develop-a-startup-mobile-app-in-2020-5785ea153b13\">Why Flutter Has Become the Best Choice To Develop a Startup Mobile App in 2020?</a>, <a href=\"https://medium.com/flutter/flutter-web-navigating-urls-using-named-routes-307e1b1e2050\">Flutter web: Navigating URLs using named routes</a>, <a href=\"https://mp.weixin.qq.com/s/nBkcDaKkBxTL-rhKfAhLMg\">flutter: 一周感悟</a>.</p>\n\n<p><strong>Serverless Patterns</strong><br />\nhttps://medium.com/@taibi.davide/serverless-patterns-e1fb3f1d753e<br />\nAmong 24 selected works, we identified 32 patterns that we classified as orchestration, aggregation, event-management, availability, communication, and authorization. In this post, we summarize the patterns identified, together with their benefits and issues.</p>\n\n<p><strong>Puppeteer or: How I Learned to Stop Worrying and Love the Automation</strong><br />\nhttps://itnext.io/puppeteer-or-how-i-learned-to-stop-worrying-and-love-the-automation-92e96f4901e7<br />\nA step by step guide for beginners to get started with Puppeteer.</p>\n\n<p><strong>A 10-Year-Old’s Perspective on Computer Programming</strong><br />\nhttps://medium.com/better-programming/a-10-year-olds-perspective-about-computer-programming-c8556a9cb747<br />\nLet’s talk about coding!</p>\n\n<p><strong>We released simdjson 0.3: the fastest JSON parser in the world is even better!</strong><br />\nhttps://lemire.me/blog/2020/03/31/we-released-simdjson-0-3-the-fastest-json-parser-in-the-world-is-even-better/<br />\nLast year (2019), we released the simjson library. It is a C++ library available under a liberal license (Apache) that can parse JSON documents very fast. How fast? We reach and exceed 3 gigabytes per second in many instances. It can also parse millions of small JSON documents per second. The new version is much faster. How much faster? Last year, we could parse a file like simdjson at a speed of 2.0 GB/s, and then we reached 2.2 GB/s. We are now reaching 2.5 GB/s. Why go so fast? In comparison, a fast disk can reach  5 GB/s and the best network adapters are even faster.</p>\n\n<p><strong>Bringing 4K and HDR to Anime at Netflix with Sol Levante</strong><br />\nhttps://netflixtechblog.com/bringing-4k-and-hdr-to-anime-at-netflix-with-sol-levante-fa68105067cd<br />\nSome might dismiss them as simple cartoons, but anime’s diverse and fantastical stories, vibrant style, and delicate lines are an art form that has evolved and grown in popularity, variety and sophistication over the last fifty years. From its likely roots in colorful painted lanterns in the early 20th century, to gaining mainstream status in Japan in the 1970s, viewers now have hundreds of anime series and films to choose from all over the world.</p>\n\n<p><strong>An Architecture for a Multilingual Wikipedia</strong><br />\nhttp://simia.net/download/multilingualwikipedia.pdf<br />\nAn interesting paper from the creator of Wikidata that proposes a way to architect an ‘abstract’ Wikipedia where content can be rendered down into multiple languages as necessary. There’s a lot to chew on here.</p>\n\n<p><strong>How are Unix pipes implemented?</strong><br />\nhttps://toroid.org/unix-pipe-implementation<br />\nThis article is about how pipes are implemented the Unix kernel. I was a little disappointed that a recent article titled “How do Unix pipes work?” was not about the internals, and curious enough to go digging in some old sources to try to answer the question.</p>\n\n<p><strong>How we reduced our Google Maps API cost by 94%</strong><br />\nhttps://blog.cityflo.com/how-we-reduced-our-google-maps-api-cost/<br />\nBeing a highly reliable commute partner for our customers, we at Cityflo ensure high accuracy and predictability of our vehicle tracking system. Showing an accurate arrival time to our users is a big contributor to the experience that our users expect from us.</p>\n\n<p><strong>Tech Debt and the Pragmatic Middle Ground</strong><br />\nhttps://blog.pragmaticengineer.com/tech-debt/<br />\nBlissful unawareness, denial, then acceptance, then resistance. And finally, a pragmatic middle ground. This is the typical journey engineers go through in their relationship with tech debt.</p>\n\n<h2 id=\"新鲜货\">新鲜货</h2>\n\n<p><strong>Open Access to ACM Digital Library During Coronavirus Pandemic</strong><br />\nhttps://www.acm.org/articles/bulletins/2020/march/dl-access-during-covid-19<br />\nWe believe that ACM can help support research, discovery and learning during this time of crisis by opening the ACM Digital Library to all. For the next three months, there will be no fees assessed for accessing or downloading work published by ACM. We hope this will help researchers, practitioners and students maintain access to our publications as well as increasing visibility and awareness of ACM’s journals, proceedings and magazines. Please be sure to inform your colleagues that the ACM DL is now open, and will continue that way through June 30, 2020.</p>\n\n<p><strong>18 GitLab features are moving to open source</strong><br />\nhttps://about.gitlab.com/blog/2020/03/30/new-features-to-core/<br />\nWe’re open sourcing rich functionality across Plan, Create, Verify, Package, Release, Configure, and Defend.</p>\n\n<p><strong>Happy 404 Day!</strong><br />\nhttp://blog.archive.org/2020/03/30/happy-404-day-%ef%bb%bf/\nSaturday is April 4th (4/04), and here at the Internet Archive we’re marking a new holiday: 404 Day! We’re using this date to celebrate the work that’s being done to end the dreaded 404 error, record changing webpages, and preserve the internet for all to enjoy. We spoke with Gary Price—librarian, editor of InfoDocket, and a prolific user of the Wayback Machine—about why web archiving is important and how ordinary people can fight back against “link rot.”</p>\n\n<p><strong>OpenTelemetry is now beta!</strong><br />\nhttps://opensource.googleblog.com/2020/03/opentelemetry-is-now-beta.html<br />\n<a href=\"https://github.com/open-telemetry/\">OpenTelemetry</a> and OpenCensus have been a critical part of our goal of making platforms like Kubernetes more observable and more manageable. This has been a multi-year journey for us, from creating OpenCensus and growing it into a core part of major web services’ observability stack, to our announcement of OpenTelemetry last year and the rapid growth of the OpenTelemetry community.</p>\n\n<p><strong>Element Timing API - Draft Community Group Report</strong><br />\nhttps://wicg.github.io/element-timing/#sec-example<br />\nKnowing when critical elements are displayed on screen is key to understanding page load performance. While fast rendering of the essential components is not sufficient for a satisfactory loading experience, it is necessary. Therefore, monitoring these rendering timestamps is important to improve and prevent regressions in page loads. This specification gives developers and analytics providers an API to measure rendering timestamps of critical elements. There is currently no good way to measure these timestamps for real users. Existing approaches would require either registering observers too early or significant DOM manipulation. These approaches are discussed on the § 4 Security &amp; privacy considerations section.</p>\n\n<p><strong>WebTransport Draft Community Group Report</strong><br />\nhttps://wicg.github.io/web-transport/<br />\nThis document defines a set of ECMAScript APIs in WebIDL to allow data to be sent and received between a browser and server, implementing pluggable protocols underneath with common APIs on top. APIs specific to QUIC are also provided. This specification is being developed in conjunction with a protocol specification developed by the IETF QUIC Working Group.</p>\n\n<p><strong>Node 14.0.0 Release Candiate 1</strong><br />\nhttps://nodejs.org/download/rc/v14.0.0-rc.1/<br />\nFinal release of 14 as the new ‘current’ release is due in a few weeks and we’ll feature it again then. Node 14 should then become LTS in October.</p>\n\n<p><strong>The Eclipse Foundation Releases Eclipse Theia 1.0, a True Open Source Alternative to Visual Studio Code</strong><br />\nhttps://github.com/eclipse-theia/theia<br />\n能复用 VS Code 的扩展</p>\n\n<p><strong>TypeScript2Cxx</strong><br />\nhttps://github.com/ASDAlexander77/TypeScript2Cxx<br />\nTypeScript to C++</p>\n\n<p><strong>KendoReact - UI for React Developers</strong><br />\nhttps://www.telerik.com/kendo-react-ui/<br />\nBuilding UI for business apps is hard work, even with React. Make it easy with our native UI &amp; data visualization component library.</p>\n\n<p><strong>Announcing “use-sound”</strong><br />\nhttps://joshwcomeau.com/react/announcing-use-sound-react-hook/<br />\nA React Hook for Sound Effects</p>\n\n<p><strong>Trianglify</strong><br />\nhttps://github.com/qrohlf/trianglify<br />\nAlgorithmically generated triangle art.</p>\n\n<p><strong>More Toggles.css</strong><br />\nhttps://jnkkkk.github.io/MoreToggles.css/<br />\nA Pure CSS library that provides you with stylish toggles.</p>\n\n<p><strong>WebdriverIO v6 Released</strong><br />\nhttps://webdriver.io/blog/2020/03/26/webdriverio-v6-released.html<br />\nThis major update is far less “breaking” than the one last year. While all the architectural changes last year left us no choice to break a lot of things, we were very careful this time and made sure that upgrading the framework won’t become a big task. This major update is much more reasonable and contains subtle changes that will help the project further grow while remaining performant at the same time. This blog post will go into details about all major changes and will explain what you need to do to transition from v5 to the v6.</p>\n\n<p><strong>Writing an OS in Rust</strong><br />\nhttps://os.phil-opp.com/<br />\nThis blog series creates a small operating system in the Rust programming language. Each post is a small tutorial and includes all needed code, so you can follow along if you like. The source code is also available in the corresponding <a href=\"https://github.com/phil-opp/blog_os\">Github repository</a>.</p>\n\n<p><strong>Prisma 2.0 is Now in Beta: Type-safe Database Access with Prisma Client</strong><br />\nhttps://www.prisma.io/blog/prisma-2-beta-b7bcl0gd8d8e<br />\nPrisma is an open-source database toolkit. It replaces traditional ORMs and makes database access easy with an auto-generated query builder for TypeScript &amp; Node.js.</p>\n\n<p><strong>From Markdown to Video</strong><br />\nhttps://www.videopuppet.com/docs/script/<br />\nVideo Puppet makes it easy to script videos using plain text (Markdown) files. You can use Markdown, YAML or JSON format to create the script. We recommend using Markdown for manually created files (as it’s human-friendly), and JSON or YAML for automatically created script files (more machine-friendly). When working with Markdown files, make sure to name the file so it has the .md or .mkd file extension. 另附：<a href=\"https://obsproject.com/\">OBS Studio - Free and open source software for video recording and live streaming</a>.</p>\n\n<p><strong>Dolt Use Cases</strong><br />\nhttps://www.dolthub.com/blog/2020-03-30-dolt-use-cases/<br />\nDolt is Git for data. Instead of versioning files, Dolt versions tables. DoltHub is a place on the internet to share Dolt repositories. As far as we can tell, Dolt is the only database with branches. How would you use such a thing?</p>\n\n<h2 id=\"设计\">设计</h2>\n\n<p><strong>Visual Design Language: The Building Blocks Of Design</strong><br />\nhttps://www.smashingmagazine.com/2020/03/visual-design-language-building-blocks/<br />\nA robust visual design language is the cornerstone of good design. Here’s how the team at Fantasy approached designing a mobile OS for Huawei.</p>\n\n<p><strong>The 10 best UX laws and principles</strong><br />\nhttps://uxplanet.org/the-10-best-ux-laws-and-principles-7980ff22e424<br />\nThere are many User Experience principles and laws that a Designer should always look to follow. In this article, we’ve chosen a handful that we believe are the most important, and that we personally look to implement regularly. These laws and principles have not just been written by user advocates and Designers like Jakob Nielsen and Don Norman, but also by Psychologists who have years of experience studying human interaction and behaviour.</p>\n\n<p><strong>Creating Etsy’s Design Principles</strong><br />\nhttps://blog.marvelapp.com/creating-etsys-design-principles/<br />\nAligning on a shared definition of design excellence.</p>\n\n<p><strong>Building dark mode on Stack Overflow</strong><br />\nhttps://stackoverflow.blog/2020/03/31/building-dark-mode-on-stack-overflow/<br />\nOn March 30, 2020, we enabled folks to opt into a beta dark mode on Stack Overflow. Let’s talk about the work that went into it.</p>\n\n<h2 id=\"产品及其它\">产品及其它</h2>\n\n<p><strong>RSS Stuff</strong><br />\nhttps://css-tricks.com/rss-stuff/<br />\nhttps://laurakalbag.com/how-to-read-rss-in-2020/<br />\nSometimes the content is just an excerpt, encouraging you to read the rest of the content on the original site. I think this defeats the point of providing RSS, where a big benefit is that the reader can customise how the posts display in their feed reader to improve their reading experience.</p>\n\n<p><strong>45 岁的微软，放下执念后，他跨越了时代</strong><br />\nhttps://mp.weixin.qq.com/s/MzgDQcsQE_pRXvbvoLtWGw<br />\n如何不被自己的当年成功的旧基因杀死，微软做了个新榜样。45 年来，从比尔·盖茨「让每一张桌子上，每一个家庭里都有一台个人电脑」到萨提亚·纳德拉的「助力每一个人和组织，成就不凡」，微软成功的放下了执念，也改变了自己，进而跨越了时代。现在他不再高呼「Windows 就是一切」，他有自己的阵地，也有自己的边界，他似乎更愿意藏在背后，赋能其他「酷公司」，与其他年轻公司成为伙伴。</p>\n\n<p><strong>司徒君，一路走好🙏</strong><br />\nhttps://www.zhihu.com/question/384157840<br />\nhttps://mp.weixin.qq.com/s/MYgMg_jCEnQkQxUn3LI7Nw<br />\n工作是一场长跑，人生更是。可持续发展，对码农尤为重要。今年偶然发现一个非常适合码农这个群体练习的功夫：张至顺道长的金刚养生功 https://www.bilibili.com/video/BV1T7411i78T 。简单易学，在家就能练，不仅能强身健体，还有助于调整心态。</p>\n\n<blockquote>\n  <p>对数据可视化有兴趣的可以阅读由 AntV 带来的 <a href=\"https://www.yuque.com/mo-college/weekly/ettpqr\">墨者修齐 2020-04-06 · 如何创建安全的密码、Pajek 大型网络可视化工具、全球化的始于中国轮船</a></p>\n</blockquote>\n","descriptionType":"text/html","publishedDate":"Mon, 06 Apr 2020 00:00:00 +0000","feedId":762,"bgimg":"","linkMd5":"1a1b9a9e42079e6b2919ad4831116dde","metaImg":"","author":""}],"record":{"createdTime":"2020-08-16 21:01:56","updatedTime":"2020-08-16 21:01:56","feedId":762,"fetchDate":"Sun, 16 Aug 2020 13:01:56 +0000","fetchMs":1493,"handleMs":32889,"totalMs":36369,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"52.214.214.9","hostName":"europe-020.herokuapp.com","requestId":"8b1e23c4721047fbb59a27b62c60dfb8_762","bgimgsTotal":0,"bgimgsGithubTotal":0,"articlesImgsTotal":0,"articlesImgsGithubTotal":0},"extra4":{"start":1597582880119,"total":0,"statList":[{"spend":3465,"msg":"获取xml内容"},{"spend":32889,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"正文链接上传到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"}]},"extra5":0,"extra6":0,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{},"extra12ImgCdnSuccessResultVector":[]}