{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-09 23:25:04","updatedTime":"2020-10-09 23:25:04","title":"京东PLUS会员项目前端性能优化实践","link":"https://jdc.jd.com/?p=212962","description":"<p>作者：Frans</p> \n<p>京东PLUS会员项目是国内第一个电商付费会员项目，正式开通的会员数量已破千万。我团队从2016年接手这个项目的前端开发工作，一路见证了它的高速成长，也为此贡献了自己的力量。</p> \n<p>这个项目有几个特点：</p> \n<p>第一，需求多。移动端使用 H5 开发，曾有人问为什么不用原生或者 RN 开发? 我觉得吧，以这个项目的需求数量和迭代速度来看，连 H5 都难以 hold 的住，还是不要奢望原生和 RN 了。</p> \n<p>第二，产品经理多。一般的项目对接一两个产品经理，这个项目我们需要对接一个异地的产品经理“团队”；一般的项目换产品经理一个一个的换，这个项目一批一批的换……我们已经送走好几届PLUS会员产品经理了。铁打的研发，流水的产品经理。</p> \n<p><img src=\"https://img10.360buyimg.com/uba/jfs/t26500/107/2313534493/81372/ca8f2a49/5bfce866N860f0bcb.jpg\" width=\"330\" /></p> \n<p>所以说，PLUS会员项目是业务方滴，也是项目经理滴，还是产品经理滴，但终归是俺们研发滴。每念及此，我的耳边总会响起叶倩文的那首老歌：“天地悠悠，过客匆匆，潮起又潮落…”。</p> \n<p>书归正传。用户众多和需求迭代频繁，确保线上安全稳定始终是第一要务。所以在架构调整和性能优化方面我们一直都小心翼翼，以一些小修小补为主，只有到大规模改版的时候才会有大的升级改造。不过，平时我们对这些问题的思考和实践却不曾停止过，我们验证了一些行之有效的优化方案，在下一波改版中将会得到应用。</p> \n<p><img src=\"https://img11.360buyimg.com/uba/jfs/t27130/169/2282905663/5498/79bbe063/5bfce8a6Nbdad4856.jpg\" width=\"330\" /></p> \n<p>我虽然不完全认同“前端开发每十八个月难度翻一倍”的说法，但这一行发展迭代速度快却是不争的事实。若等到这些优化方案全都应用上再出来念叨，可能就显得不那么新鲜了。所以，我决定先把这些方案拿出来分享，和感兴趣的小伙伴一起讨论，进一步完善。</p> \n<p>这些方案主要针对移动端，优化核心方向是提高首页的加载速度，特别是首屏和弱网络环境下的加载速度。从持久化缓存、削减代码量、优化接口请求、提升主观感受等方面下手，比较大的改动是应用 <code><span class=\"pln\">PWA</span></code> 和升级架构。 <code><span class=\"pln\">PWA</span></code> 离线缓存可以极大的提升用户体验，不过它对于首次加载速度并无提升作用，还得靠其他优化手段，这是一套组合拳。我们先从架构升级说起吧。</p> \n<h2 id=\"\">架构升级</h2> \n<p>项目计划迁移到 <code><span class=\"typ\">Gaea</span><span class=\"lit\">4.0</span></code> 脚手架[1]，这是我们团队基于 webpack 4 开发的一套通用 Vue 单页面应用脚手架，此前的系列版本已经过数十个项目的验证，还是比较稳定的。近期新推出4.0版相较之前版本有着不小的改进。</p> \n<ul> \n <li>webpack 升级到了 4.0</li> \n <li>Babel 升级到了 7.0</li> \n <li>Vue-loader 升级到了 15</li> \n <li>重构了上传插件，一键上传到测试服务器更快更稳定</li> \n <li>针对我厂手机和电脑位于不同局域网无法互访的问题，集成了自主研发的 Carefree 解决方案[2]，方便真机测试调试</li> \n <li>集成了 NutUI 组件库[3]，可按需加载需要的UI组件</li> \n <li>集成了自主研发的基于swagger的数据mock工具SMOCK[4]</li> \n <li>支持自动生成骨架屏[5]</li> \n <li>支持 PWA</li> \n <li>…</li> \n</ul> \n<p>迁移有几个主要目的：</p> \n<p>首先，实现本项目的 webpack 构建工具升级到 4.0，之前是基于 webpack 2.0 开发的，webpack4 有不少提升，比如：</p> \n<ul> \n <li>Scope Hoisting(作用域提升，webpack3加入)，通过减少闭包函数数量加快JS的执行速度</li> \n <li>生产环境构建体积更小</li> \n <li>开发环境通过优化的增量构建机制提升构建速度，同时提供详细的错误和提示</li> \n</ul> \n<p>其次， <code><span class=\"typ\">Gaea</span><span class=\"lit\">4.0</span></code> 的 Babel 是 7.0 版的，基于 Babel7 可以实现更智能的 Babel polyfill 按需加载。</p> \n<p>再次，本次优化计划尝试的PWA、骨架屏等方案， <code><span class=\"typ\">Gaea</span><span class=\"lit\">4.0</span></code>都可以给予基础支持。</p> \n<p>最后， <code><span class=\"typ\">Gaea</span><span class=\"lit\">4.0</span></code> 集成的Carefree、新的上传插件等功能将给未来的开发和真机调试带来方便。</p> \n<h2 id=\"babelpolyfill\">Babel polyfill的按需加载</h2> \n<p>如今的 web 应用开发都是在本地进行构建，所以有条件在构建阶段把高版本的 JS 代码编译成低版本语法，这样既使用了新语法，又解决了低版本浏览器的兼容问题。承担这种转换工作的最知名的工具当属 Babel 了。而一直以来，Babel 有个饱受诟病的地方，那就是 polyfill 问题。</p> \n<p>Babel 默认只转换 JavaScript 语法，而不转换新的 API，比如 Promise、Generator、Set、Maps、Symbol 等全局对象，一些定义在全局对象上的方法（比如 Object.assign）也不会被转码。如果想让未转码的 API 可在低版本环境正常运行，这就需要使用 polyfill。</p> \n<p>polyfill 有多种方案，各有各的问题。目前应用中通常使用 babel-polyfill 方案，而第三方库中通常使用 babel-runtime 和 babel-plugin-transform-runtime 方案。</p> \n<p>babel-polyfill 提供完整的环境垫片，包含所有 API 的降级模块，可以为新的 API 和全局对象上的方法提供兜底，其主要缺点是文件较大，压缩后大概八九十KB。目前项目中采用这种方案，这次考虑予以优化，减少加载的代码体积。</p> \n<p>如上文提到，这一波改造会把项目迁移到 <code><span class=\"typ\">Gaea</span><span class=\"lit\">4.0</span></code> 脚手架中，新脚手架的 Babel 已经升级到了最新的 7.0 版。Babel7 是 Babel6 推出近三年之后发布的一个断崖式升级的大版本，包含很多新特性，其中一个引人关注的特性就是支持更智能的按需加载 polyfill。</p> \n<p>Babel7 主要是通过其提供的 <code><span class=\"lit\">@babel</span><span class=\"pun\">/</span><span class=\"pln\">preset</span><span class=\"pun\">-</span><span class=\"pln\">env</span></code> 实现按需加载的。</p> \n<p>使用 <code><span class=\"lit\">@babel</span><span class=\"pun\">/</span><span class=\"pln\">preset</span><span class=\"pun\">-</span><span class=\"pln\">env</span></code> 也需要首先安装 <code><span class=\"lit\">@babel</span><span class=\"pun\">/</span><span class=\"pln\">polyfill</span></code>，但最终打出的包并不会导入全部 polyfill。</p> \n<p></p>\n<pre class=\"crayon-plain-tag\">npm install @babel/polyfill --save</pre>\n<p></p> \n<p>同时，需要在 .browserslistrc 文件或者 .babelrc 的 targets 字段中指定需要兼容的浏览器范围。</p> \n<p>之后在.babelrc文件中对 <code><span class=\"lit\">@babel</span><span class=\"pun\">/</span><span class=\"pln\">preset</span><span class=\"pun\">-</span><span class=\"pln\">env</span></code> 进行配置。</p> \n<p><code><span class=\"lit\">@babel</span><span class=\"pun\">/</span><span class=\"pln\">preset</span><span class=\"pun\">-</span><span class=\"pln\">env</span></code> 与按需加载 polyfill 相关的选项是 <code><span class=\"pln\">useBuiltIns</span></code>，它有两个值需要重点关注： <code><span class=\"pln\">entry</span></code> 和 <code><span class=\"pln\">usage</span></code>。</p> \n<p>当值为 <code><span class=\"pln\">entry</span></code> 时，Babel 会将 <code><span class=\"kwd\">import</span><span class=\"str\">\"@babel/polyfill\"</span></code> 或者 <code><span class=\"kwd\">require</span><span class=\"pun\">(</span><span class=\"str\">\"@babel/polyfill\"</span><span class=\"pun\">)</span></code> 语句根据我们指定的环境配置替换为单个的 polyfill require。</p> \n<p>如将</p> \n<p></p>\n<pre class=\"crayon-plain-tag\">import \"@babel/polyfill\";</pre>\n<p></p> \n<p>替换为</p> \n<p></p>\n<pre class=\"crayon-plain-tag\">import \"core-js/modules/es7.string.pad-start\";\nimport \"core-js/modules/es7.string.pad-end\";</pre>\n<p></p> \n<p><code></code></p> \n<p>当值为 <code><span class=\"pln\">usage</span></code> 时，更加智能。Babel 会根据每个文件的需要和指定的环境配置添加特定的 polyfill，更牛×的是一个 bundle 中相同的 polyfill 只会加载一次，这也有助于减小 bundle 的体积。推测 Babel 是通过对文件进行静态分析实现的这种精准的按需加载 polyfill 功能。</p> \n<p>如</p> \n<p></p>\n<pre class=\"crayon-plain-tag\">var a = new Promise();</pre>\n<p></p> \n<p>转换后（如果指定的环境不支持）</p> \n<p></p>\n<pre class=\"crayon-plain-tag\">import \"core-js/modules/es6.promise\";\nvar a = new Promise();</pre>\n<p></p> \n<p><code></code><code></code></p> \n<p>转换后（如果指定的环境支持）</p> \n<p></p>\n<pre class=\"crayon-plain-tag\">var a = new Promise();</pre>\n<p></p> \n<p>我们尝试了一下，先指定需要兼容的浏览器范围，然后安装 <code><span class=\"lit\">@babel</span><span class=\"pun\">/</span><span class=\"pln\">polyfill</span></code> 并将 <code><span class=\"lit\">@babel</span><span class=\"pun\">/</span><span class=\"pln\">preset</span><span class=\"pun\">-</span><span class=\"pln\">env</span></code> 的 <code><span class=\"pln\">useBuiltIns</span></code> 选项值设为 <code><span class=\"pln\">usage</span></code>。这样 Babel 就会自动分析每一个文件并在考虑我们指定的浏览器兼容范围的情况下，为每个文件加载其需要的 polyfill。最终项目里只引入了部分 polyfill，经测算，打包后的代码(min)较直接引入完整 babel-polyfill 的方案小60多KB，同时还避免了全局变量污染。</p> \n<p>在 Babel 的配置中开启 Debug 模式，构建的时候可以看到每个文件中添加了哪些 polyfill：</p> \n<p><img src=\"https://img12.360buyimg.com/uba/jfs/t27742/64/2251782728/135145/6114ee74/5bfce908N44a2729a.png\" /></p> \n<p>(有从知乎远道而来的杠精问到：“这都什么年代了，还在兼容Android 4.0和iOS 8.0？”我叹口气、耸耸肩，与该杠精握握手…)</p> \n<p>关于这个问题的进一步思考：</p> \n<p>这种加载 polyfill 的方式已经比传统方式先进了很多，但还是不完美，比如按照我们指定的浏览器范围需要引入的某个 polyfill，对于高版本浏览器来说可能还是多余。</p> \n<p>个人觉得一种比较理想的方案是先在编译阶段通过静态分析确定可能需要 polyfill 的 API 范围但并不打包 polyfill 进去，而是当用户在浏览器中访问这个页面时，通过植入页面的JS脚本逐一检测当前浏览器是否支持这些新的 API，把不支持的找出来，通过一个请求去服务端加载对应的 polyfill 文件。当然这需要类似 <code><span class=\"pln\">polyfill</span><span class=\"pun\">.</span><span class=\"pln\">io</span></code> 的服务端 polyfill 方案支持。未来我们会沿着这个方向继续探索。</p> \n<h2 id=\"-1\">持久化缓存</h2> \n<p><code><span class=\"pln\">PWA</span></code> 是真的火了，现在的项目里没用 <code><span class=\"pln\">PWA</span></code> 出门都不好意思跟人打招呼。 <code><span class=\"pln\">PWA</span></code> 的一系列功能中最重磅的非离线缓存莫属了，虽说 H5 之前就有离线缓存（application cache）API，可惜不好用， <code><span class=\"pln\">PWA</span></code> 离线缓存足以把它拍死在沙滩上。</p> \n<p>从业务角度来讲，我们认为本项目不太适合离线访问，但我们可以利用 <code><span class=\"pln\">PWA</span></code> 把静态资源进行离线缓存，提高页面访问速度。</p> \n<p>在这种场景下，用 <code><span class=\"typ\">Service</span><span class=\"typ\">Worker</span></code> 不缓存页面自身 HTML 和接口数据，只缓存静态资源，且优先使用缓存。非首次访问的情况下，静态资源都会走缓存，页面访问速度得以大幅提升。</p> \n<p>但有一个问题，就是页面更新的问题。使用缓存优先策略，意味着每次进入页面时，在有缓存的情况下直接使用缓存。如果缓存有更新，在缓存更新之后需要刷新页面才能看到变化。自动刷新页面严重影响用户体验，而提示用户去手动刷新，在 APP 里看上去也有些奇怪，且不是所有有用户都会去手动刷新的。对于PLUS会员这种需求排队，更新频繁的项目，用户感受到的影响可能会更多。HTML5 的离线缓存 API 也有这个问题，这当然不是一个缺陷，而是“优先使用缓存”策略所决定的，只是不完全满足我们的需求罢了。</p> \n<p>针对这个问题，我们的解决方案是当文件有更新时，同时修改缓存的版本号和页面中引用这个文件的 URL 中的版本号，让浏览器直接使用新文件，不使用缓存。在页面加载之后，缓存也会更新，下次访问时，还会走缓存。</p> \n<p>这个方案还有优化空间，只有那些有变化的文件需要更改 URL 中的版本号，使用新文件，而页面中其他没有发生变化的静态资源还是可以也应该继续使用缓存。按照这个思路，我们应把代码中稳定的、不常变化的模块（比如 Vue 及其插件）尽量提取出来，让这部分内容尽可能使用缓存，当然必要的时候也可以通过相同的方式更新。而经常发生变化的部分（如业务代码）应独立打包，体积越小越好，以减小页面和缓存更新时的开销。</p> \n<p>对于这些稳定公共模块的提取我们使用 webpack 内置的 <code><span class=\"typ\">DllPlugin</span></code> 和 <code><span class=\"typ\">DllReferencePlugin</span></code> 插件来实现，通过这两个插件提前对这些公共模块进行独立编译，打出一个 vendor.dll.js 的包，之后在这部分代码没有改动的情况下不再对它们进行编译，所以项目平时的构建速度也会提升不少。vendor.dll.js 包独立存在，hash 不会发生变化，特别适合持久化缓存。</p> \n<p>于是，我们的业务代码有变化时，只需要以新版号发布业务包（app.js）即可，vendor.dll.js 依然使用本地缓存。</p> \n<p>我们来看一下具体的加载情况。</p> \n<p>首次访问，没有 <code><span class=\"pln\">PWA</span></code> 缓存，所有资源都走线上。页面加载之后，PWA会缓存静态资源。</p> \n<p><img src=\"https://img13.360buyimg.com/uba/jfs/t29494/37/750416909/16330/beee2a3d/5bfceb0eNca470da8.png\" /></p> \n<p>之后的访问，静态资源优先从缓存加载，速度极快。</p> \n<p><img src=\"https://img14.360buyimg.com/uba/jfs/t27955/35/752308160/20668/913de746/5bfceb2eN4cd14c68.png\" /></p> \n<p>当业务代码有更新时，更改页面中引用 app.js 文件的 URL 中的版本号，使得 app.js 不使用缓存，已缓存的其他静态资源依然可以使用缓存。同时更改缓存的版本号，缓存也会在页面加载之后更新，新的 app.js 文件也会被缓存。</p> \n<p><img src=\"https://img11.360buyimg.com/uba/jfs/t28873/114/746799557/18695/c055ac56/5bfceb3fNa33114f3.png\" /></p> \n<p>再次访问时，包括 app.js 在内的静态资源依然全部走缓存。</p> \n<p><img src=\"https://img12.360buyimg.com/uba/jfs/t29314/165/771912091/20926/fb405592/5bfceb52Ne4a5e0b5.png\" /></p> \n<h2 id=\"-2\">请求优化</h2> \n<p>这个是一个前后端分离的项目，前端是标准的 Vue SPA，完全通过接口同后端进行数据交互。PLUS会员业务逻辑本身比较复杂，涉及很多种用户状态，页面逻辑也复杂。不同用户看到的界面不完全相同，这受用户状态和后台配置等多种因素影响。</p> \n<p>部分接口存在相互依赖的关系，比如有接口要求传用户状态，因此需要先行通过用户信息接口拿到用户状态。再比如商品数据接口，需要先请求楼层配置信息接口，确定当前页面有哪些楼层，继而才能决定去请求哪些楼层的数据。</p> \n<p>这种串行的接口请求拖慢了首屏的渲染，这是目前影响首页性能的一个主要问题，也是这次优化的一个重点。</p> \n<p>服务端渲染（如Vue SSR），首屏直出当然是最理想的方案。但目前看来并不现实，这个项目的研发团队情况也比较复杂，前后端是两个跨职场、跨部门的团队，且需求巨多，页面改动频繁。完全的前后端分离更有助于明确职责，提高效率，减少扯皮。</p> \n<p>另一个折中的方案是，在页面上直接引一个后端的模板文件，后端研发同事通过这个模板文件把用户状态、楼层配置等前置信息打到页面上，页面在浏览器中初始化的时候直接读取这些信息，然后再去请求那些依赖这些数据的接口。这样即可避免串行请求的问题，同时还减少了几个请求，有助于提高页面加载和渲染速度。这次优化，我们计划采用这种方案。</p> \n<p>优化前：</p> \n<p><img src=\"https://img14.360buyimg.com/uba/jfs/t27127/132/2269542648/35162/fcac329b/5bfce965Nb80d804b.png\" width=\"400\" /></p> \n<p>优化后，关键请求大幅提前：</p> \n<p><img src=\"https://img30.360buyimg.com/uba/jfs/t27391/299/2266265374/36181/86d51f55/5bfce9a2N8cb1b0b8.png\" /></p> \n<p>优化前：</p> \n<p><img src=\"https://img10.360buyimg.com/imagetools/jfs/t1/20434/21/4844/17915/5c35a79eE62094cd2/5b4ac06b8ce02a65.png\" /></p> \n<p>优化后，页面开始渲染的时间明显提前：</p> \n<p><img src=\"https://img10.360buyimg.com/imagetools/jfs/t1/12110/39/4814/13918/5c35a79eEc59807d0/45ce5b45157e9d0e.png\" /></p> \n<p>梦想还是要有的。前后端分离是一种进步，但彻底的分离，也不尽善尽美，比如会有首屏加载速度和 SEO 方面的困扰。 <code><span class=\"pun\">前后端分离+服务端首屏渲染</span></code> 看起来是个更优的方案，它结合了前后端分离和服务端渲染两者的优点，既做到了前后端分离，又能保证首页渲染速度，还有利于 SEO。但在 Vue、React 等前端框架大行其道的今天，服务端渲染早已不是当年套 HTML 页面那么简单了，即便只渲染个首屏。前后端同构可能是比较好的解决方案，而这种场景下服务端渲染工作显然由前端来承担更合适，所以用 Node.js 搞个中间层是必要的。</p> \n<p><img src=\"https://img11.360buyimg.com/uba/jfs/t30118/145/779551688/371788/5c5e5a45/5bfcea02N4e2ca364.png\" width=\"400\" /></p> \n<h2 id=\"-3\">骨架屏</h2> \n<p>通过一系列优化，除了客观上首屏渲染时间的明显缩短，我们还额外给页面加上了骨架屏（skeleton screen），让用户主观感受到的页面加载和渲染速度比真实情况还快。虚虚实实，用兵之道也，一切为了用户体验。</p> \n<p>先来了解一下骨架屏的概念。骨架屏指的是在页面数据加载完成前，先给用户展示出的页面大致结构，之后渲染出真实页面内容将其换掉。这是近两年流行起来的加载控件，本质上是界面加载过程中的过渡效果。</p> \n<p>在加载完成前把网页的大概轮廓预先显示，接着逐渐加载真正内容，这样既可缓解用户等待的焦灼情绪，又能使界面的加载过程显得更自然通畅，减少了长时间白屏或者闪烁。骨架屏能给人一种页面内容“已经渲染出一部分”的感觉，相较于传统的 loading 效果，体验更佳。</p> \n<p>我们团队对骨架屏技术有比较深入的研究，开发过一个名为 <code><span class=\"lit\">@nutui</span><span class=\"pun\">/</span><span class=\"pln\">draw</span><span class=\"pun\">-</span><span class=\"pln\">page</span><span class=\"pun\">-</span><span class=\"pln\">structure</span></code> [4]的webpack插件，可实现通过 puppeteer 自动生成纯 DOM 形式的页面骨架屏，并支持自动插入到指定页面。如果对自动生成的效果不满意，还允许定制和调整。</p> \n<p>我们用这个插件在项目里小试了一把，效果还是不错滴。纯 DOM 形式的骨架屏代码，比图片、Canvas等形式数据量更小，调整起来也更灵活。</p> \n<p><img src=\"https://img20.360buyimg.com/uba/jfs/t28714/69/731951463/7994/d6aefb6e/5bfcea39N274e4d87.png\" /></p> \n<h2 id=\"-4\">图片格式</h2> \n<p>Plus会员频道首页是一个典型的电商页面，包含大量的图片。使用新兴的图片格式可以大大减少加载的图片体积，并有助于提升图片的解析和渲染速度，进而提升页面渲染速度。对于移动web来说，还有一个重要的优点——节省用户的流量（中国移动30M5块钱呢，哈哈）。</p> \n<p>去年我们在项目里应用了 <code><span class=\"typ\">WebP</span></code> 格式，收效不错。比如某张背景图片，压缩后的 png 格式是35KB，而转成 <code><span class=\"typ\">WebP</span></code> 只有4KB，两者基本看不出质量上的差别。</p> \n<p>新兴图片格式的应用的主要障碍还是兼容性，以 <code><span class=\"typ\">WebP</span></code> 为例，谷歌系的浏览器以及欧朋浏览器支持情况良好，Firefox、Edge 也都在新版本提供了支持，可惜苹果公司一直没有跟进，Safari 直到现在也没有要支持的迹象，iOS 上的应用如果想支持，还需自行打包解析库（经测试发现iOS版的京东APP已经提供了支持，点个赞）。</p> \n<p>我们使用 <code><span class=\"typ\">WebP</span></code> 的方式是在页面上通过JS判断当前浏览器是否支持 <code><span class=\"typ\">WebP</span></code>，如果支持，则在 body 上增加一个名为 “webp” 的 class，同时把判断结果写入 localStorage，之后再进入页面时直接从 localStorage 里读取，不用每次都执行判断的代码了。然后在页面的 css 中通过 “.webp” 选择器、在 Vue 的图片过滤器中通过判断结果来决定是否加载 <code><span class=\"typ\">WebP</span></code> 格式图片。</p> \n<p></p>\n<pre class=\"crayon-plain-tag\">document.createElement('canvas').toDataURL('image/webp').indexOf('data:image/webp') === 0</pre>\n<p></p> \n<p>这次的优化，我们考虑增加对我厂 <code><span class=\"pln\">DPG</span></code> 图片格式的支持。</p> \n<blockquote>\n <p>DPG 是我厂基础架构部-智能存储部推出图片压缩技术，经过 DPG 压缩后的图片兼容 jpeg，同时全平台、全部浏览器都支持，DPG 是一种有损压缩技术，但通过5名用户10000张图片的人眼浏览测试，和 WebP 的清晰度对比没有差距。该技术可以有效地减少图片大小50%，减少 CDN 带宽流量 50%，加快图片用户在设备上的渲染速度。</p>\n</blockquote> \n<p>基于我个人的理解， <code><span class=\"pln\">DPG</span></code> 格式应该是对 jpeg 格式图片通过一定算法进行了二次压缩，其本质上还是 jpeg（虽然扩展名改了），这也才能有所谓”全平台浏览器支持“的可能性。所以，特别适合将 jpeg 格式的图片替换为 <code><span class=\"pln\">DPG</span></code> 格式，当然前提是服务器上有 <code><span class=\"pln\">DPG</span></code> 格式图片。我厂的图片系统会自动生成上传图片对应的 <code><span class=\"pln\">DPG</span></code> 格式图片。所以我们定的 <code><span class=\"pln\">DPG</span></code> 格式使用条件就是原图是 jpeg 格式，且图片位于我厂图片系统中。在兼顾既有的 <code><span class=\"typ\">WebP</span></code> 格式图片加载逻辑的基础上，我们梳理后的图片加载逻辑如下图所示：</p> \n<p><img src=\"https://img13.360buyimg.com/uba/jfs/t28627/228/753346412/41830/640353d1/5bfceaacNa6dab8a3.png\" /></p> \n<p>先聊到这里吧，我去参加PLUS会员项目的需求评审了……</p> \n<h2 id=\"-5\">扩展阅读</h2> \n<p>[1] https://www.npmjs.com/package/gaea-cli</p> \n<p>[2] http://carefree.jd.com</p> \n<p>[3] http://nutui.jd.com</p> \n<p>[4] http://smock.jd.com</p> \n<p>[5] https://www.npmjs.com/package/@nutui/draw-page-structure</p> \n<p>更多文章请关注 全栈探索 微信公众号，扫描下面二维码关注：</p> \n<p><img class=\"alignnone size-full wp-image-212963\" src=\"https://jdc.jd.com/wp-content/uploads/2019/02/qrcode_for_gh_f57cf2cd8997_258-3.jpg\" alt=\"\" width=\"258\" height=\"258\" srcset=\"//jdc.jd.com/wp-content/uploads/2019/02/qrcode_for_gh_f57cf2cd8997_258-3.jpg 258w, //jdc.jd.com/wp-content/uploads/2019/02/qrcode_for_gh_f57cf2cd8997_258-3-150x150.jpg 150w\" sizes=\"(max-width: 258px) 100vw, 258px\" /></p>","descriptionType":"html","publishedDate":"Fri, 15 Feb 2019 01:46:32 +0000","feedId":16949,"bgimg":"","linkMd5":"629ef1d180ac969607135f34f7e6af45","bgimgJsdelivr":"","metaImg":"","author":"甄玉磊","articleImgCdnMap":{"https://img10.360buyimg.com/uba/jfs/t26500/107/2313534493/81372/ca8f2a49/5bfce866N860f0bcb.jpg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn20@2020_4/2020/10/09/15-25-20-739_cb8e56cecd27483d.webp","https://img11.360buyimg.com/uba/jfs/t27130/169/2282905663/5498/79bbe063/5bfce8a6Nbdad4856.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn52@2020_3/2020/10/09/15-25-19-947_b24a569182804897.webp","https://img12.360buyimg.com/uba/jfs/t27742/64/2251782728/135145/6114ee74/5bfce908N44a2729a.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn43@2020_3/2020/10/09/15-25-17-998_a88ffa13f7f40a8b.webp","https://img13.360buyimg.com/uba/jfs/t29494/37/750416909/16330/beee2a3d/5bfceb0eNca470da8.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn40@2020_6/2020/10/09/15-25-19-953_69bb691f0cc261fc.webp","https://img14.360buyimg.com/uba/jfs/t27955/35/752308160/20668/913de746/5bfceb2eN4cd14c68.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn68@2020_2/2020/10/09/15-25-17-274_07b54b4a43515192.webp","https://img11.360buyimg.com/uba/jfs/t28873/114/746799557/18695/c055ac56/5bfceb3fNa33114f3.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn75@2020_3/2020/10/09/15-25-19-406_a2a3fb6f148b978b.webp","https://img12.360buyimg.com/uba/jfs/t29314/165/771912091/20926/fb405592/5bfceb52Ne4a5e0b5.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn36@2020_5/2020/10/09/15-25-19-393_e89db95c9ba16204.webp","https://img14.360buyimg.com/uba/jfs/t27127/132/2269542648/35162/fcac329b/5bfce965Nb80d804b.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn31@2020_1/2020/10/09/15-25-20-920_7ff2526a2ec3a324.webp","https://img30.360buyimg.com/uba/jfs/t27391/299/2266265374/36181/86d51f55/5bfce9a2N8cb1b0b8.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn27@2020_5/2020/10/09/15-25-19-342_bcbbfb2220e6d7c3.webp","https://img10.360buyimg.com/imagetools/jfs/t1/20434/21/4844/17915/5c35a79eE62094cd2/5b4ac06b8ce02a65.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn47@2020_2/2020/10/09/15-25-19-531_4ca748d06d0b7963.webp","https://img10.360buyimg.com/imagetools/jfs/t1/12110/39/4814/13918/5c35a79eEc59807d0/45ce5b45157e9d0e.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn56@2020_4/2020/10/09/15-25-18-965_e706cdd90fa2f7bb.webp","https://img11.360buyimg.com/uba/jfs/t30118/145/779551688/371788/5c5e5a45/5bfcea02N4e2ca364.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn72@2020_2/2020/10/09/15-25-20-975_b13ebfc99db6fe73.webp","https://img20.360buyimg.com/uba/jfs/t28714/69/731951463/7994/d6aefb6e/5bfcea39N274e4d87.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn23@2020_3/2020/10/09/15-25-18-083_d59c96563d5fed89.webp","https://img13.360buyimg.com/uba/jfs/t28627/228/753346412/41830/640353d1/5bfceaacNa6dab8a3.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn60@2020_3/2020/10/09/15-25-19-209_d17f72964d34b0e7.webp","https://jdc.jd.com/wp-content/uploads/2019/02/qrcode_for_gh_f57cf2cd8997_258-3.jpg":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn63@2020_5/2020/10/09/15-25-21-240_152d2044f8ca9add.webp"},"publishedOrCreatedDate":1602257104000}],"record":{"createdTime":"2020-10-09 23:25:04","updatedTime":"2020-10-09 23:25:04","feedId":16949,"fetchDate":"Fri, 09 Oct 2020 15:25:04 +0000","fetchMs":5881,"handleMs":53,"totalMs":25986,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"2d58495c7a54fabcb8d2970f6d817794","hostName":"europe-59*","requestId":"36cb4ef3f34e4aa79d49b603937b9222_16949","contentType":"application/rss+xml; charset=UTF-8","totalBytes":238752,"bgimgsTotal":0,"bgimgsGithubTotal":0,"articlesImgsTotal":15,"articlesImgsGithubTotal":15,"successGithubMap":{"myreaderx8":1,"myreaderx25":1,"myreaderx15":1,"myreaderx27":1,"myreaderx10":1,"myreaderx21":1,"myreaderx22":1,"myreaderx3":1,"myreaderx33":1,"myreaderx11":1,"myreaderx23":1,"myreaderx2":1,"myreaderx24":1,"myreaderx13":1,"myreaderx1":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:13:59","updatedTime":"2020-09-07 02:44:46","id":16949,"name":"JDC | 京东设计中心","url":"http://jdc.jd.com/feed","subscriber":197,"website":null,"icon":"https://jdc.jd.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx65/cdn98@2020_3/2020/09/06/18-44-40-428_f7aeb3fc44f250f5.jpg","description":"京东设计中心","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":238752,"tmpBgImgCdnBytes":0,"extra4":{"start":1602257096181,"total":0,"statList":[{"spend":7767,"msg":"获取xml内容"},{"spend":53,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":1,"msg":"修正封面图上传失败重新上传"},{"spend":5137,"msg":"正文链接上传到cdn"}]},"extra5":15,"extra6":15,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-037.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://img14.360buyimg.com/uba/jfs/t27955/35/752308160/20668/913de746/5bfceb2eN4cd14c68.png","sourceStatusCode":200,"destWidth":918,"destHeight":80,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn68@2020_2/2020/10/09/15-25-17-274_07b54b4a43515192.webp","sourceBytes":20668,"destBytes":7484,"targetWebpQuality":75,"feedId":16949,"totalSpendMs":1118,"convertSpendMs":6,"createdTime":"2020-10-09 23:25:17","host":"europe-59*","referer":"https://jdc.jd.com/?p=212962","linkMd5ListStr":"629ef1d180ac969607135f34f7e6af45","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"7.3 KB","compressRate":"36.2%","sourceSize":"20.2 KB"},{"code":1,"isDone":false,"source":"https://img20.360buyimg.com/uba/jfs/t28714/69/731951463/7994/d6aefb6e/5bfcea39N274e4d87.png","sourceStatusCode":200,"destWidth":395,"destHeight":653,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn23@2020_3/2020/10/09/15-25-18-083_d59c96563d5fed89.webp","sourceBytes":7994,"destBytes":1226,"targetWebpQuality":75,"feedId":16949,"totalSpendMs":1911,"convertSpendMs":9,"createdTime":"2020-10-09 23:25:17","host":"europe63*","referer":"https://jdc.jd.com/?p=212962","linkMd5ListStr":"629ef1d180ac969607135f34f7e6af45","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"1.2 KB","compressRate":"15.3%","sourceSize":"7.8 KB"},{"code":1,"isDone":false,"source":"https://img12.360buyimg.com/uba/jfs/t27742/64/2251782728/135145/6114ee74/5bfce908N44a2729a.png","sourceStatusCode":200,"destWidth":1594,"destHeight":250,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn43@2020_3/2020/10/09/15-25-17-998_a88ffa13f7f40a8b.webp","sourceBytes":135145,"destBytes":40612,"targetWebpQuality":75,"feedId":16949,"totalSpendMs":1987,"convertSpendMs":44,"createdTime":"2020-10-09 23:25:17","host":"europe67*","referer":"https://jdc.jd.com/?p=212962","linkMd5ListStr":"629ef1d180ac969607135f34f7e6af45","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"39.7 KB","compressRate":"30.1%","sourceSize":"132 KB"},{"code":1,"isDone":false,"source":"https://img10.360buyimg.com/imagetools/jfs/t1/12110/39/4814/13918/5c35a79eEc59807d0/45ce5b45157e9d0e.png","sourceStatusCode":200,"destWidth":394,"destHeight":198,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn56@2020_4/2020/10/09/15-25-18-965_e706cdd90fa2f7bb.webp","sourceBytes":13918,"destBytes":9734,"targetWebpQuality":75,"feedId":16949,"totalSpendMs":2582,"convertSpendMs":7,"createdTime":"2020-10-09 23:25:17","host":"us-021*","referer":"https://jdc.jd.com/?p=212962","linkMd5ListStr":"629ef1d180ac969607135f34f7e6af45","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"9.5 KB","compressRate":"69.9%","sourceSize":"13.6 KB"},{"code":1,"isDone":false,"source":"https://img13.360buyimg.com/uba/jfs/t28627/228/753346412/41830/640353d1/5bfceaacNa6dab8a3.png","sourceStatusCode":200,"destWidth":694,"destHeight":518,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn60@2020_3/2020/10/09/15-25-19-209_d17f72964d34b0e7.webp","sourceBytes":41830,"destBytes":14974,"targetWebpQuality":75,"feedId":16949,"totalSpendMs":2876,"convertSpendMs":19,"createdTime":"2020-10-09 23:25:17","host":"us-009*","referer":"https://jdc.jd.com/?p=212962","linkMd5ListStr":"629ef1d180ac969607135f34f7e6af45","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"14.6 KB","compressRate":"35.8%","sourceSize":"40.8 KB"},{"code":1,"isDone":false,"source":"https://img30.360buyimg.com/uba/jfs/t27391/299/2266265374/36181/86d51f55/5bfce9a2N8cb1b0b8.png","sourceStatusCode":200,"destWidth":622,"destHeight":412,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn27@2020_5/2020/10/09/15-25-19-342_bcbbfb2220e6d7c3.webp","sourceBytes":36181,"destBytes":19760,"targetWebpQuality":75,"feedId":16949,"totalSpendMs":2940,"convertSpendMs":24,"createdTime":"2020-10-09 23:25:17","host":"us-51*","referer":"https://jdc.jd.com/?p=212962","linkMd5ListStr":"629ef1d180ac969607135f34f7e6af45","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"19.3 KB","compressRate":"54.6%","sourceSize":"35.3 KB"},{"code":1,"isDone":false,"source":"https://img12.360buyimg.com/uba/jfs/t29314/165/771912091/20926/fb405592/5bfceb52Ne4a5e0b5.png","sourceStatusCode":200,"destWidth":966,"destHeight":84,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn36@2020_5/2020/10/09/15-25-19-393_e89db95c9ba16204.webp","sourceBytes":20926,"destBytes":7548,"targetWebpQuality":75,"feedId":16949,"totalSpendMs":3045,"convertSpendMs":7,"createdTime":"2020-10-09 23:25:17","host":"us-017*","referer":"https://jdc.jd.com/?p=212962","linkMd5ListStr":"629ef1d180ac969607135f34f7e6af45","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"7.4 KB","compressRate":"36.1%","sourceSize":"20.4 KB"},{"code":1,"isDone":false,"source":"https://img11.360buyimg.com/uba/jfs/t28873/114/746799557/18695/c055ac56/5bfceb3fNa33114f3.png","sourceStatusCode":200,"destWidth":926,"destHeight":82,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn75@2020_3/2020/10/09/15-25-19-406_a2a3fb6f148b978b.webp","sourceBytes":18695,"destBytes":6772,"targetWebpQuality":75,"feedId":16949,"totalSpendMs":3048,"convertSpendMs":19,"createdTime":"2020-10-09 23:25:17","host":"us-025*","referer":"https://jdc.jd.com/?p=212962","linkMd5ListStr":"629ef1d180ac969607135f34f7e6af45","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"6.6 KB","compressRate":"36.2%","sourceSize":"18.3 KB"},{"code":1,"isDone":false,"source":"https://img10.360buyimg.com/imagetools/jfs/t1/20434/21/4844/17915/5c35a79eE62094cd2/5b4ac06b8ce02a65.png","sourceStatusCode":200,"destWidth":500,"destHeight":194,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn47@2020_2/2020/10/09/15-25-19-531_4ca748d06d0b7963.webp","sourceBytes":17915,"destBytes":8352,"targetWebpQuality":75,"feedId":16949,"totalSpendMs":3125,"convertSpendMs":8,"createdTime":"2020-10-09 23:25:17","host":"us-55*","referer":"https://jdc.jd.com/?p=212962","linkMd5ListStr":"629ef1d180ac969607135f34f7e6af45","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"8.2 KB","compressRate":"46.6%","sourceSize":"17.5 KB"},{"code":1,"isDone":false,"source":"https://img13.360buyimg.com/uba/jfs/t29494/37/750416909/16330/beee2a3d/5bfceb0eNca470da8.png","sourceStatusCode":200,"destWidth":924,"destHeight":82,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn40@2020_6/2020/10/09/15-25-19-953_69bb691f0cc261fc.webp","sourceBytes":16330,"destBytes":5956,"targetWebpQuality":75,"feedId":16949,"totalSpendMs":3568,"convertSpendMs":8,"createdTime":"2020-10-09 23:25:17","host":"us-005*","referer":"https://jdc.jd.com/?p=212962","linkMd5ListStr":"629ef1d180ac969607135f34f7e6af45","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"5.8 KB","compressRate":"36.5%","sourceSize":"15.9 KB"},{"code":1,"isDone":false,"source":"https://img11.360buyimg.com/uba/jfs/t27130/169/2282905663/5498/79bbe063/5bfce8a6Nbdad4856.jpg","sourceStatusCode":200,"destWidth":300,"destHeight":300,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn52@2020_3/2020/10/09/15-25-19-947_b24a569182804897.webp","sourceBytes":5498,"destBytes":3812,"targetWebpQuality":75,"feedId":16949,"totalSpendMs":3569,"convertSpendMs":7,"createdTime":"2020-10-09 23:25:17","host":"us-033*","referer":"https://jdc.jd.com/?p=212962","linkMd5ListStr":"629ef1d180ac969607135f34f7e6af45","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"3.7 KB","compressRate":"69.3%","sourceSize":"5.4 KB"},{"code":1,"isDone":false,"source":"https://img10.360buyimg.com/uba/jfs/t26500/107/2313534493/81372/ca8f2a49/5bfce866N860f0bcb.jpg","sourceStatusCode":200,"destWidth":700,"destHeight":702,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn20@2020_4/2020/10/09/15-25-20-739_cb8e56cecd27483d.webp","sourceBytes":81372,"destBytes":52388,"targetWebpQuality":75,"feedId":16949,"totalSpendMs":4448,"convertSpendMs":22,"createdTime":"2020-10-09 23:25:17","host":"us-001*","referer":"https://jdc.jd.com/?p=212962","linkMd5ListStr":"629ef1d180ac969607135f34f7e6af45","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"51.2 KB","compressRate":"64.4%","sourceSize":"79.5 KB"},{"code":1,"isDone":false,"source":"https://img14.360buyimg.com/uba/jfs/t27127/132/2269542648/35162/fcac329b/5bfce965Nb80d804b.png","sourceStatusCode":200,"destWidth":784,"destHeight":642,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn31@2020_1/2020/10/09/15-25-20-920_7ff2526a2ec3a324.webp","sourceBytes":35162,"destBytes":17434,"targetWebpQuality":75,"feedId":16949,"totalSpendMs":4607,"convertSpendMs":21,"createdTime":"2020-10-09 23:25:17","host":"us-029*","referer":"https://jdc.jd.com/?p=212962","linkMd5ListStr":"629ef1d180ac969607135f34f7e6af45","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"17 KB","compressRate":"49.6%","sourceSize":"34.3 KB"},{"code":1,"isDone":false,"source":"https://img11.360buyimg.com/uba/jfs/t30118/145/779551688/371788/5c5e5a45/5bfcea02N4e2ca364.png","sourceStatusCode":200,"destWidth":1180,"destHeight":1222,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn72@2020_2/2020/10/09/15-25-20-975_b13ebfc99db6fe73.webp","sourceBytes":371788,"destBytes":35368,"targetWebpQuality":75,"feedId":16949,"totalSpendMs":4656,"convertSpendMs":86,"createdTime":"2020-10-09 23:25:17","host":"us-037*","referer":"https://jdc.jd.com/?p=212962","linkMd5ListStr":"629ef1d180ac969607135f34f7e6af45","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"34.5 KB","compressRate":"9.5%","sourceSize":"363.1 KB"},{"code":1,"isDone":false,"source":"https://jdc.jd.com/wp-content/uploads/2019/02/qrcode_for_gh_f57cf2cd8997_258-3.jpg","sourceStatusCode":200,"destWidth":258,"destHeight":258,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn63@2020_5/2020/10/09/15-25-21-240_152d2044f8ca9add.webp","sourceBytes":27572,"destBytes":7332,"targetWebpQuality":75,"feedId":16949,"totalSpendMs":5104,"convertSpendMs":13,"createdTime":"2020-10-09 23:25:17","host":"europe-22*","referer":"https://jdc.jd.com/?p=212962","linkMd5ListStr":"629ef1d180ac969607135f34f7e6af45","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"7.2 KB","compressRate":"26.6%","sourceSize":"26.9 KB"}],"successGithubMap":{"myreaderx8":1,"myreaderx25":1,"myreaderx15":1,"myreaderx27":1,"myreaderx10":1,"myreaderx21":1,"myreaderx22":1,"myreaderx3":1,"myreaderx33":1,"myreaderx11":1,"myreaderx23":1,"myreaderx2":1,"myreaderx24":1,"myreaderx13":1,"myreaderx1":1},"failGithubMap":{}}