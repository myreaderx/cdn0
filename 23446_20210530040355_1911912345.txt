{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-05-30 12:01:45","updatedTime":"2021-05-30 12:01:45","title":"666，看hr标签实现分隔线如何玩出花","link":"https://www.zhangxinxu.com/wordpress/?p=9962","description":"<p>by <a href=\"https://www.zhangxinxu.com/\">zhangxinxu</a> from <a href=\"https://www.zhangxinxu.com/wordpress/?p=9962\">https://www.zhangxinxu.com/wordpress/?p=9962</a><br /> 本文欢迎分享与聚合，全文转载就不必了，尊重版权，圈子就这么大，若急用可以联系授权。</p> \n<p><script>window.wxShareImgUrl = 'https://www.zhangxinxu.com/study/image/share/202105-css-hr.png';</script></p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202105/css-hr-cover.png\" width=\"480\" height=\"307\" alt=\"草泥马 简笔画 html hr\" class=\"alignright thumb clip size-medium\" /></p> \n<p>日常开发经常会用到网页分隔线，例如列表下拉到最后，类似于“我是有底线的”这样的提示，就会伴随分隔线。</p> \n<p>通常，这样的分隔线是使用<code>&lt;div&gt;</code>标签模拟的，其实我们可以使用语义更好的<code>&lt;hr&gt;</code>标签模拟。</p> \n<p>HTML <code>&lt;hr&gt;</code>元素虽然是一个非闭合标签，但是也是支持<code>::before</code>和<code>::after</code>伪元素的。</p> \n<p>因此，我们可以使用<code>&lt;hr&gt;</code>标签实现各种样式的分隔线效果。</p> \n<link rel=\"stylesheet\" href=\"/study/202105/hr.css\"> \n <h3>一、基础分隔线效果</h3> \n <h5>实线</h5> \n <p>相关HTML和CSS代码如下所示：</p> \n <pre>&lt;hr class=\"hr-solid\"&gt;</pre> \n <pre>.hr-solid {\n    border: 0;\n    border-top: 1px solid #d0d0d5;\n}</pre> \n <p>实时渲染效果如下：</p> \n <hr class=\"hr-solid\"> \n  <h5>点线（1px和2px）</h5> \n  <p>相关HTML和CSS代码如下所示，使用的是浏览器默认效果，因此，不同浏览器下看到的虚点的细节可能会有所差异：</p> \n  <pre>&lt;hr class=\"hr-dotted\"&gt;\n&lt;hr class=\"hr-dotted2\"&gt;</pre> \n  <pre>.hr-dotted {\n    border: 0;\n    border-top: 1px dotted #a2a9b6;\n}\n.hr-dotted2 {\n    border: 0;\n    border-top: 2px dotted #a2a9b6;\n}</pre> \n  <p>实时渲染效果如下：</p> \n  <hr class=\"hr-dotted\"> \n   <hr class=\"hr-dotted2\"> \n    <h5>虚线（1px和2px）</h5> \n    <p>相关HTML和CSS代码如下所示，同样的，浏览器默认虚线样式，不同浏览器表现细节有差异：</p> \n    <pre>&lt;hr class=\"hr-dashed\"&gt;\n&lt;hr class=\"hr-dashed2\"&gt;</pre> \n    <pre>.hr-dashed {\n    border: 0;\n    border-top: 1px dashed #a2a9b6;\n}\n.hr-dashed2 {\n    border: 0;\n    border-top: 2px dashed #a2a9b6;\n}</pre> \n    <p>实时渲染效果如下：</p> \n    <hr class=\"hr-dashed\"> \n     <hr class=\"hr-dashed2\"> \n      <h5>双实线</h5> \n      <p>相关HTML和CSS代码如下所示：</p> \n      <pre>&lt;hr class=\"hr-double\"&gt;</pre> \n      <pre>.hr-double {\n    border: 0;\n    border-top: 3px double #d0d0d5;\n}</pre> \n      <p>实时渲染效果如下：</p> \n      <hr class=\"hr-double\"> \n       <h5>疏密可控的虚线</h5> \n       <p>这里使用线性渐变模拟虚线效果，优点是虚线的虚实比例是可以精确控制的，实现原理和细节以前介绍过，可参见“<a href=\"https://www.zhangxinxu.com/wordpress/?p=6494\">CSS3 linear-gradient线性渐变实现虚线</a>”一文。</p> \n       <p>现在有如下所示的HTML和CSS代码：</p> \n       <pre>&lt;hr class=\"hr-dashed-fixed\"&gt;</pre> \n       <pre>.hr-dashed-fixed {\n    border: 0;\n    padding-top: 1px;\n    background: repeating-linear-gradient(to right, #a2a9b6 0px, #a2a9b6 4px, transparent 0px, transparent 10px);\n</pre> \n       <p>实时渲染效果如下：</p> \n       <hr class=\"hr-dashed-fixed\"> \n        <p>这里，为了方便大家使用，我又使用CSS变量，把虚线实线比例做成可配置的了。</p> \n        <p>其中<code>--dashed-filled</code>是实线尺寸，变量<code>--dashed-filled</code>是虚线的尺寸，代码示意：</p> \n        <pre>&lt;hr class=\"hr-dashed-fixed\" style=\"--dashed-filled: 6px; --dashed-open: 5px;\"&gt;</pre> \n        <pre>.hr-dashed-fixed {\n    border: 0;\n    padding-top: 1px;\n    <span style=\"color:green;\">/* for 现代浏览器 */</span>\n    background: repeating-linear-gradient(to right, #a2a9b6 0 var(--dashed-filled, 4px), transparent 0 calc(var(--dashed-filled, 4px) + var(--dashed-open, 6px)));\n}</pre> \n        <p>实时渲染结果如下，只有在现代浏览器中才有效果，因为IE不支持CSS变量，因此，IE浏览器无效。</p> \n        <hr class=\"hr-dashed-fixed\" style=\"--dashed-filled: 6px; --dashed-open: 5px;\"> \n         <p>为了全兼容，大家可以把上面两段CSS合二为一，例如：</p> \n         <pre>.hr-dashed-fixed {\n    border: 0;\n    padding-top: 1px;\n    <span style=\"color:green;\">/* for IE浏览器 */</span>\n    background: repeating-linear-gradient(to right, #a2a9b6 0px, #a2a9b6 4px, transparent 0px, transparent 10px);\n    <span style=\"color:green;\">/* for 现代浏览器 */</span>\n    background: repeating-linear-gradient(to right, #a2a9b6 0 var(--dashed-filled, 4px), transparent 0 calc(var(--dashed-filled, 4px) + var(--dashed-open, 6px)));\n}</pre> \n         <h5>两头虚的分隔线</h5> \n         <p>这是个比较常见的分隔线效果，线的两端淡出，中间是完整的颜色。</p> \n         <p>此效果实现方法很多，我这里使用的是CSS渐变模拟的，相关HTML和CSS代码如下所示：</p> \n         <pre>&lt;hr class=\"hr-edge-weak\"&gt;</pre> \n         <pre>.hr-edge-weak {\n    border: 0;\n    padding-top: 1px;\n    background: linear-gradient(to right, transparent, #d0d0d5, transparent);\n}</pre> \n         <p>实时渲染效果如下所示：</p> \n         <hr class=\"hr-edge-weak\"> \n          <h5>斜纹分隔线</h5> \n          <p>有时候需要分界线更加明显的分隔线，则可以试试下面的代码，对应的效果是斜纹分隔线。</p> \n          <pre>&lt;hr class=\"hr-twill\"&gt;</pre> \n          <pre>.hr-twill {\n    border: 0;\n    padding: 3px;\n    background: repeating-linear-gradient(135deg, #a2a9b6 0px, #a2a9b6 1px, transparent 1px, transparent 6px);\n}</pre> \n          <p>效果如下：</p> \n          <hr class=\"hr-twill\"> \n           <p>我们也可以让斜纹表现为多彩的颜色，这里使用了遮罩实现，HTML和CSS代码为：</p> \n           <pre>&lt;hr class=\"hr-twill-colorful\"&gt;</pre> \n           <pre><span style=\"color:green;\">/* 现代浏览器only */</span>\n.hr-twill-colorful {\n    border: 0;\n    padding: 3px;\n    background: linear-gradient(135deg, red, orange,green, blue, purple);\n    --mask-image: repeating-linear-gradient(135deg, #000 0px, #000 1px, transparent 1px, transparent 6px);\n    -webkit-mask-image: var(--mask-image);\n    mask-image: var(--mask-image);\n}</pre> \n           <p>效果如下：</p> \n           <hr class=\"hr-twill-colorful\"> \n            <h5>波浪线</h5> \n            <p>这里的波浪线实现使用了特别的技巧，相关原理和细节之前专门撰文介绍过，详见：“<a href=\"https://www.zhangxinxu.com/wordpress/?p=9333\">CSS text-decoration实现宽度100%波浪线效果</a>”。</p> \n            <p>这里演示使用的前端代码则是：</p> \n            <pre>&lt;hr class=\"hr-wavy\"&gt;</pre> \n            <pre>.hr-wavy {\n    border: 0;\n    color: #d0d0d5;\n    height: .5em;\n    white-space: nowrap;\n    letter-spacing: 100vw;\n    padding-top: .5em;\n}\n.hr-wavy::before {\n    content: \"\\2000\\2000\";\n    <span style=\"color:green;\">/* IE浏览器实线代替 */</span>\n    text-decoration: overline;\n    <span style=\"color:green;\">/* 现代浏览器 */</span>\n    text-decoration: overline wavy;\n}</pre> \n            <p>效果体验：</p> \n            <hr class=\"hr-wavy\"> \n             <h5>阴影线</h5> \n             <p>这个实现比较简单，就是使用CSS <code>box-shadow</code>盒阴影属性，多用在表示层次的分隔场景中。</p> \n             <p>相关HTML和CSS代码如下所示：</p> \n             <pre>&lt;hr class=\"hr-shadow\"&gt;</pre> \n             <pre>.hr-shadow {\n    border: 0;\n    padding-top: 10px;\n    color: #d0d0d5;\n    border-top: 1px solid rgba(0,0,0,.1);\n    box-shadow: inset 0 10px 10px -10px;\n}\n</pre> \n             <p>带阴影的分隔线效果如下：</p> \n             <hr class=\"hr-shadow\"> \n              <h3>二、带点图形装饰的分隔线</h3> \n              <p>这里主要演示几个生产环境可以使用的几个样式，那些花里胡哨的分隔线这里就不展示了。</p> \n              <h5>中间有装饰</h5> \n              <p>中间有一些图形或图像，实现原理大同小异，这里使用圆和方块抛砖引玉示意下。</p> \n              <pre>&lt;hr class=\"hr-mid-circle\"&gt;\n&lt;hr class=\"hr-mid-square\"&gt;</pre> \n              <p>这里的线条使用CSS渐变绘制，而中间的图形就需要借助伪元素实现了。</p> \n              <pre>.hr-mid-circle,\n.hr-mid-square {\n    border: 0;\n    color: #d0d0d5;\n    background: linear-gradient(currentColor, currentColor) no-repeat center;\n    background-size: 100% 1px;\n}\n.hr-mid-circle::before {\n    content: '';\n    display: block;\n    width: .75em; height: .75em;\n    border-radius: 50%;\n    background-color: currentColor;\n    margin: auto;\n}\n.hr-mid-square::before {\n    content: '';\n    display: block;\n    width: .75em; height: .75em;\n    transform: rotate(45deg);\n    background-color: currentColor;\n    margin: 3px auto;\n}</pre> \n              <p>大家应该可以看到如下所示的效果，如果没有效果，看看域名是不是zhangxinxu.com，谨防假冒。</p> \n              <hr class=\"hr-mid-circle\"> \n               <hr class=\"hr-mid-square\"> \n                <h5>中间有多个装饰</h5> \n                <p>如果中间是多个圆，多个方块，那该怎么办呢？</p> \n                <p>一种方法是变成背景图，平铺，在本例中，因为是实色图形，则可以使用 <code>box-shadow</code> 进行图形复制。</p> \n                <pre>&lt;hr class=\"hr-mid-circle\" multiple&gt;\n&lt;hr class=\"hr-mid-square\" multiple&gt;</pre> \n                <p>只需要在上面CSS代码基础上加上下面这几行CSS就可以了：</p> \n                <pre>.hr-mid-circle[multiple]::before {\n    box-shadow: 1.5em 0, -1.5em 0;\n}\n.hr-mid-square[multiple]::before {\n    box-shadow: 1.25em -1.25em, -1.25em 1.25em;;\n}</pre> \n                <p>此时的浏览器渲染效果则是这样的：</p> \n                <hr class=\"hr-mid-circle\" multiline=\"\"> \n                 <hr class=\"hr-mid-square\" multiline=\"\"> \n                  <h5>装饰在两端</h5> \n                  <p>装饰有可能在两端，而不是中间，这里演示一个钻石图形在两侧对齐的例子，HTML和CSS使用的是：</p> \n                  <pre>&lt;hr class=\"hr-space-square\"&gt;</pre> \n                  <pre>.hr-space-square {\n    border: 0;\n    color: #d0d0d5;\n    background: linear-gradient(currentColor, currentColor) no-repeat center;\n    background-size: calc(100% - 1.5em - 6px) 1px;\n    display: flex;\n    justify-content: space-between;\n}\n.hr-space-square::before,\n.hr-space-square::after {\n    content: '';\n    display: block;\n    width: .75em; height: .75em;\n    transform: rotate(45deg);\n    box-sizing: border-box;\n    border: 1px solid;\n    margin: 3px;\n}</pre> \n                  <p>可以看到下面这样的效果。</p> \n                  <hr class=\"hr-space-square\"> \n                   <h5>装饰复杂一点点</h5> \n                   <p>就是线条多一点，图形的造型也稍微复杂一点的装饰效果，HTML比较简单：</p> \n                   <pre>&lt;hr class=\"hr-double-arrow\"&gt;</pre> \n                   <p>CSS这里用到了定位还有一些常见的CSS图形生成技巧：</p> \n                   <pre>.hr-double-arrow {\n    color: #d0d0d5;\n    border: double;\n    border-width: 3px 5px;\n    border-color: #d0d0d5 transparent;\n    height: 1px;\n    overflow: visible;\n    margin-left: 20px;\n    margin-right: 20px;\n    position: relative;\n}\n.hr-double-arrow:before, \n.hr-double-arrow:after {\n    content: '';\n    position: absolute;\n    width: 5px; height: 5px;\n    border-width: 0 3px 3px 0;\n    border-style: double;\n    top: -3px;\n    background: radial-gradient(2px at 1px 1px, currentColor 2px, transparent 0) no-repeat;\n}\n.hr-double-arrow:before {\n    transform: rotate(-45deg);\n    left: -20px;\n}\n.hr-double-arrow:after {\n    transform: rotate(135deg);\n    right: -20px;\n}</pre> \n                   <p>效果是这样的：</p> \n                   <hr class=\"hr-double-arrow\"> \n                    <p><span class=\"hidden\">//zxx: 如果你看到这段文字，说明你现在访问是体验糟糕的垃圾盗版网站，你可以访问原文获得很好的体验：https://www.zhangxinxu.com/wordpress/?p=9962（作者张鑫旭）</span></p> \n                    <p>还有其他一些装饰效果，例如一些星星啊，加一些花朵之类的，篇幅原因（实际上懒得折腾，需要使用SVG图形），就不展示了。</p> \n                    <h3>三、带文字内容的分隔线</h3> \n                    <p>这个可能用得更多一点，然后这里演示的效果CSS代码都大同小异，因此有些重复的CSS就不再展示了。</p> \n                    <h5>两端实线</h5> \n                    <p>HTML代码这样的：</p> \n                    <pre>&lt;hr class=\"hr-solid-content\" data-content=\"分隔线\"&gt;\n&lt;hr class=\"hr-solid-content\" data-content=\"文字自适应，背景透明\"&gt;</pre> \n                    <p>CSS代码如下，这里的实现还是需要点基本功的，因为要让左右图形自适应于文字内容，同时文字后面不能有背景色。</p> \n                    <pre>.hr-solid-content {\n    color: #a2a9b6;\n    border: 0;\n    font-size: 12px;\n    padding: 1em 0;\n    position: relative;\n}\n.hr-solid-content::before {\n    content: attr(data-content);\n    position: absolute;\n    padding: 0 1ch;\n    line-height: 1px;\n    border: solid #d0d0d5;\n    border-width: 0 99vw;\n    width: fit-content;\n    <span style=\"color:green;\">/* for 不支持fit-content浏览器 */</span>\n    white-space: nowrap;\n    left: 50%;\n    transform: translateX(-50%);\n}</pre> \n                    <p>最终实现效果如下：</p> \n                    <hr class=\"hr-solid-content\" data-content=\"分隔线\"> \n                     <hr class=\"hr-solid-content\" data-content=\"文字自适应，背景透明\"> \n                      <h5>两端虚线</h5> \n                      <p>实现原理和上面实线有些类似，也是使用一个巨大的边框，但是，此时使用dashed虚线边框是没有效果的，因为边框宽度太宽，高度为0，虚线的渲染是按照比例来的。</p> \n                      <p>这里我是使用的<code>border-image</code>配合重复线性渐变模拟的虚线边框效果，HTML代码为：</p> \n                      <pre>&lt;hr class=\"hr-dashed-content\" data-content=\"分隔线\"&gt;</pre> \n                      <p>CSS代码，<code>.hr-dashed-content</code>需要的CSS代码和上面<code>.hr-solid-content</code>一模一样，然后，额外增加下面这行CSS：</p> \n                      <pre>.hr-dashed-content::before {\n    border-image: repeating-linear-gradient(90deg, #d0d0d5, #d0d0d5 1px, transparent 1px, transparent 2px) 0 85% / / 0 repeat;\n}</pre> \n                      <p>上面的语法看不懂没关系，知道上面代码有效果就可以了，然后85%修改可以控制虚线的尺寸大小。</p> \n                      <p>实现的效果如下：</p> \n                      <hr class=\"hr-dashed-content\" data-content=\"分隔线\"> \n                       <h5>两端淡出</h5> \n                       <p>代码：</p> \n                       <pre>&lt;hr class=\"hr-fade-content\" data-content=\"分隔线\"&gt;</pre> \n                       <p>在原来实线效果基础上使用渐变作为遮罩就可以实现这样的效果了：</p> \n                       <pre><span style=\"color:green;\">// ... 一致代码略</span>\n.hr-fade-content {\n    -webkit-mask-image: linear-gradient(to right, transparent, black, transparent);\n    mask-image: linear-gradient(to right, transparent, black, transparent);\n}</pre> \n                       <p>效果就是这样的：</p> \n                       <hr class=\"hr-fade-content\" data-content=\"分隔线\"> \n                        <h5>内容装饰</h5> \n                        <p>如果希望内容用框框起来，加个背景什么的，则需要借助另外一个伪元素，因为<code>::before</code>的尺寸高度被限制在了1px, 此时只能<code>::after</code>伪元素出马，同样不展示一致的CSS代码。</p> \n                        <pre>&lt;hr class=\"hr-mid-border-content\" data-content=\"分隔线\"&gt;</pre> \n                        <pre>.hr-mid-border-content::after{\n    content: attr(data-content);\n    position: absolute;\n    padding: 4px 1ch;\n    top: 50%; left: 50%;\n    transform: translate(-50%, -50%);\n    color: transparent;\n    border: 1px solid #d0d0d5;\n}</pre> \n                        <p>效果就是酱样子滴：</p> \n                        <hr class=\"hr-mid-border-content\" data-content=\"分隔线\" style=\"line-height:1.2;\"> \n                         <h3>四、专门弄了个项目开源了</h3> \n                         <p>一个人再怎么想破脑袋，所能实现的且实用的分隔线效果也是有限的，此时，就需要大家的智慧了。</p> \n                         <p>因此，我专门在gitee上把相关CSS代码都开源出去了。</p> \n                         <p>项目地址是：<a href=\"https://gitee.com/zhangxinxu/css-hr\" rel=\"noopener\" target=\"_blank\">https://gitee.com/zhangxinxu/css-hr</a></p> \n                         <p>仓库截图示意：</p> \n                         <p><img src=\"https://image.zhangxinxu.com/image/blog/202105/2021-05-30_003511.png\" width=\"559\" height=\"394\" alt=\"仓库截图示意\" class=\"alignnone size-medium\" /></p> \n                         <p>欢迎大家贡献其他精彩的分隔线效果。</p> \n                         <p>也欢迎大家关注我的gitee账户，以后类似的小项目都会发布在gitee上，速度快，体验好。</p> \n                         <p>OK，以上就是本文全部内容，如果您觉得相关内容还不错，欢迎转发、欢迎分享、欢迎点赞！</p> \n                         <p><img src=\"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg\" width=\"20\" height=\"20\" align=\"absmiddle\" /></p> \n                         <p>本文为原创文章，欢迎分享，勿全文转载，如果实在喜欢，可收藏，永不过期，且会及时更新知识点及修正错误，阅读体验也更好。<br /> 本文地址：<a href=\"https://www.zhangxinxu.com/wordpress/?p=9962\">https://www.zhangxinxu.com/wordpress/?p=9962</a></p> \n                         <p>（本篇完）</p> \n                        </hr>\n                       </hr>\n                      </hr>\n                     </hr>\n                    </hr>\n                   </hr>\n                  </hr>\n                 </hr>\n                </hr>\n               </hr>\n              </hr>\n             </hr>\n            </hr>\n           </hr>\n          </hr>\n         </hr>\n        </hr>\n       </hr>\n      </hr>\n     </hr>\n    </hr>\n   </hr>\n  </hr>\n </hr>\n</link>","descriptionType":"html","publishedDate":"Sat, 29 May 2021 16:47:39 +0000","feedId":23446,"bgimg":"https://image.zhangxinxu.com/image/blog/202105/css-hr-cover.png","linkMd5":"f2d6766bb69c726b5d9aeca5caf1da2a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn8@2020_5/2021/05/30/04-02-51-891_971d141392e5420d.webp","destWidth":480,"destHeight":307,"sourceBytes":15453,"destBytes":9460,"author":"张 鑫旭","articleImgCdnMap":{"https://image.zhangxinxu.com/image/blog/202105/css-hr-cover.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn8@2020_5/2021/05/30/04-02-51-891_971d141392e5420d.webp","https://image.zhangxinxu.com/image/blog/202105/2021-05-30_003511.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn72@2020_1/2021/05/30/04-03-55-199_9cc77dc3beb4d4e0.webp","https://image.zhangxinxu.com/image/emtion/emoji/2764.svg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn69@2020_3/2021/05/30/04-02-55-113_345d3ecc932d1a40.svg"},"publishedOrCreatedDate":1622347305539}],"record":{"createdTime":"2021-05-30 12:01:45","updatedTime":"2021-05-30 12:01:45","feedId":23446,"fetchDate":"Sun, 30 May 2021 04:01:45 +0000","fetchMs":2250,"handleMs":8,"totalMs":132811,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"4cf9ab886509ef3fd2ece0a16b714d9c","hostName":"europe63*","requestId":"02ed55d2531e4844af7ad452a1b8c5a2_23446","contentType":"application/rss+xml; charset=UTF-8","totalBytes":28295,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":3,"articlesImgsGithubTotal":3,"successGithubMap":{"myreaderx15":1,"myreaderx21":1,"myreaderx29":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:30:26","updatedTime":"2020-09-07 04:23:12","id":23446,"name":"张鑫旭-鑫空间-鑫生活","url":"https://www.zhangxinxu.com/wordpress/feed/","subscriber":140,"website":null,"icon":"https://www.zhangxinxu.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx65/cdn55@2020_5/2020/09/06/20-23-07-457_9a339309f46b07b8.ico","description":"提高前端技术，先从使用谷歌搜索做起","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":9460,"tmpBodyImgCdnBytes":18835,"tmpBgImgCdnBytes":0,"extra4":{"start":1622347302815,"total":0,"statList":[{"spend":2716,"msg":"获取xml内容"},{"spend":8,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":63474,"msg":"正文链接上传到cdn"}]},"extra5":3,"extra6":3,"extra7ImgCdnFailResultVector":[null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe65.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe66.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202105/css-hr-cover.png","sourceStatusCode":200,"destWidth":480,"destHeight":307,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn8@2020_5/2021/05/30/04-02-51-891_971d141392e5420d.webp","sourceBytes":15453,"destBytes":9460,"targetWebpQuality":75,"feedId":23446,"totalSpendMs":2883,"convertSpendMs":5,"createdTime":"2021-05-30 12:02:49","host":"us-001*","referer":"https://www.zhangxinxu.com/wordpress/?p=9962","linkMd5ListStr":"f2d6766bb69c726b5d9aeca5caf1da2a,f2d6766bb69c726b5d9aeca5caf1da2a","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.1 KB","destSize":"9.2 KB","compressRate":"61.2%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn69@2020_3/2021/05/30/04-02-55-113_345d3ecc932d1a40.svg","sourceBytes":391,"destBytes":391,"feedId":23446,"totalSpendMs":3382,"convertSpendMs":0,"createdTime":"2021-05-30 12:02:52","host":"europe65*","referer":"https://www.zhangxinxu.com/wordpress/?p=9962","linkMd5ListStr":"f2d6766bb69c726b5d9aeca5caf1da2a","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"391 B","destSize":"391 B","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202105/2021-05-30_003511.png","sourceStatusCode":200,"destWidth":559,"destHeight":394,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn72@2020_1/2021/05/30/04-03-55-199_9cc77dc3beb4d4e0.webp","sourceBytes":11653,"destBytes":18444,"targetWebpQuality":75,"feedId":23446,"totalSpendMs":3299,"convertSpendMs":10,"createdTime":"2021-05-30 12:03:52","host":"europe65*","referer":"https://www.zhangxinxu.com/wordpress/?p=9962","linkMd5ListStr":"f2d6766bb69c726b5d9aeca5caf1da2a","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"11.4 KB","destSize":"18 KB","compressRate":"158.3%"}],"successGithubMap":{"myreaderx15":1,"myreaderx21":1,"myreaderx29":1},"failGithubMap":{}}