{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-09 21:21:51","updatedTime":"2020-10-09 21:21:51","title":"Massively Large-Scale Distributed Reinforcement Learning with Menger","link":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html","description":"<span class=\"byline-author\">Posted by Amir Yazdanbakhsh, Research Scientist, and Junchaeo Chen, Software Engineer, Google Research</span> \n<p>In the last decade, <a href=\"https://en.wikipedia.org/wiki/Reinforcement_learning\">reinforcement learning</a> (RL) has become one of the most promising research areas in machine learning and has demonstrated great potential for solving sophisticated real-world problems, such as <a href=\"https://ai.googleblog.com/2020/04/chip-design-with-deep-reinforcement.html\">chip placement</a> and <a href=\"https://people.csail.mit.edu/alizadeh/papers/deeprm-hotnets16.pdf\">resource management</a>, and solving challenging games (e.g., <a href=\"https://www.nature.com/articles/nature16961\">Go</a>, <a href=\"https://openai.com/projects/five/\">Dota 2</a>, and <a href=\"https://openai.com/blog/emergent-tool-use/\">hide-and-seek</a>). In simplest terms, an RL infrastructure is a loop of data collection and training, where <em>actors</em> explore the environment and collect samples, which are then sent to the <em>learners</em> to train and update the model. Most current RL techniques require many iterations over batches of millions of samples from the environment to learn a target task (e.g., <a href=\"https://openai.com/projects/five/\">Dota 2</a> learns from batches of 2 million frames every 2 seconds). As such, an RL infrastructure should not only scale efficiently (e.g., increase the number of actors) and collect an immense number of samples, but also be able to swiftly iterate over these extensive amounts of samples during training. </p>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\">\n <tbody>\n  <tr>\n   <td style=\"text-align: center;\"><a href=\"https://1.bp.blogspot.com/-kZCZGNEzu1w/X3dg3YW_BvI/AAAAAAAAGpY/9bMTDQKqLzwBxogATkKnm-NbQHu73vccwCLcBGAsYHQ/s576/image1.gif\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"384\" data-original-width=\"576\" src=\"https://1.bp.blogspot.com/-kZCZGNEzu1w/X3dg3YW_BvI/AAAAAAAAGpY/9bMTDQKqLzwBxogATkKnm-NbQHu73vccwCLcBGAsYHQ/s320/image1.gif\" width=\"320\" /></a></td>\n  </tr>\n  <tr>\n   <td class=\"tr-caption\" style=\"text-align: center;\">Overview of an RL system in which an actor sends trajectories (e.g., multiple samples) to a learner. The learner trains a model using the sampled data and pushes the updated model back to the actor (e.g. <a href=\"https://github.com/tensorflow/agents\">TF-Agents</a>, <a href=\"https://arxiv.org/pdf/1802.01561.pdf\">IMPALA</a>).</td>\n  </tr>\n </tbody>\n</table>\n<p> Today we introduce Menger<sup id=\"fnref1\"><a href=\"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html#fn1\" rel=\"footnote\"><small>1</small></a></sup>, a massive large-scale distributed RL infrastructure with localized inference that scales up to several thousand actors across multiple processing clusters (e.g., <a href=\"https://research.google/pubs/pub43438/#:~:text=Google's%20Borg%20system%20is%20a,tens%20of%20thousands%20of%20machines.\">Borg cells</a>), reducing the overall training time in the task of chip placement. In this post we describe how we implement Menger using <a href=\"https://cloud.google.com/blog/products/ai-machine-learning/cloud-tpu-pods-break-ai-training-records\">Google TPU accelerators</a> for fast training iterations, and present its performance and scalability on the challenging task of <a href=\"https://ai.googleblog.com/2020/04/chip-design-with-deep-reinforcement.html\">chip placement</a>. Menger reduces the training time by up to 8.6<em>x </em>compared to a baseline <a href=\"https://arxiv.org/abs/2004.10746\">implementation</a>. </p>\n<p><b>Menger System Design</b><br />There are various distributed RL systems, such as <a href=\"https://deepmind.com/research/publications/Acme\">Acme</a> and <a href=\"https://ai.googleblog.com/2020/03/massively-scaling-reinforcement.html\">SEED RL</a>, each of which focus on optimizing a single particular design point in the space of distributed reinforcement learning systems. For example, while Acme uses local inference on each actor with frequent model retrieval from the learner, SEED RL benefits from a centralized inference design by allocating a portion of TPU cores for performing batched calls. The tradeoffs between these design points are (1) paying the communication cost of sending/receiving observations and actions to/from a centralized inference server or paying the communication cost of model retrieval from a learner and (2) the cost of inference on actors (e.g., CPUs) compared to accelerators (e.g., TPUs/GPUs). Because of the requirements of our target application (e.g., size of observations, actions, and model size), Menger uses local inference in a manner similar to Acme, but pushes the scalability of actors to virtually an unbounded limit. The main challenges to achieving massive scalability and fast training on accelerators include: </p>\n<ol>\n <li>Servicing a large number of read requests from actors to a learner for model retrieval can easily throttle the learner and quickly become a major bottleneck (e.g., significantly increasing the convergence time) as the number of actors increases. </li>\n <li>The TPU performance is often limited by the efficiency of the input pipeline in feeding the training data to the TPU compute cores. As the number of TPU compute cores increases (e.g., <a href=\"https://cloud.google.com/tpu/docs/system-architecture#pod\">TPU Pod</a>), the performance of the input pipeline becomes even more critical for the overall training runtime. </li>\n</ol>\n<p><b>Efficient Model Retrieval</b><br />To address the first challenge, we introduce transparent and distributed caching components between the learner and the actors optimized in TensorFlow and backed by <a href=\"https://github.com/deepmind/reverb\">Reverb</a> (similar approach used in <a href=\"https://openai.com/projects/five/\">Dota</a>). The main responsibility of the caching components is to strike a balance between the large number of requests from actors and the learner job. Adding these caching components not only significantly reduces the pressure on the learner to service the read requests, but also further distributes the actors across multiple <a href=\"https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43438.pdf\">Borg cells</a> with a marginal communication overhead. In our study, we show that for a 16 MB model with 512 actors, the introduced caching components reduce the average read latency by a factor of ~4.0<em>x</em> leading to faster training iterations, especially for on-policy algorithms such as <a href=\"https://arxiv.org/abs/1707.06347\">PPO</a>. </p>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\">\n <tbody>\n  <tr>\n   <td style=\"text-align: center;\"><a href=\"https://1.bp.blogspot.com/-bPEExECG-ec/X3dhMogFunI/AAAAAAAAGpg/SQzJ2HXkG6cqhUQ9-fwY8tC_1hU53hprACLcBGAsYHQ/s1280/image6.gif\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"538\" data-original-width=\"1280\" height=\"268\" src=\"https://1.bp.blogspot.com/-bPEExECG-ec/X3dhMogFunI/AAAAAAAAGpg/SQzJ2HXkG6cqhUQ9-fwY8tC_1hU53hprACLcBGAsYHQ/w640-h268/image6.gif\" width=\"640\" /></a></td>\n  </tr>\n  <tr>\n   <td class=\"tr-caption\" style=\"text-align: center;\">Overview of a distributed RL system with multiple actors placed in different Borg cells. Servicing the frequent model update requests from a massive number of actors across different Borg cells throttles the learner and the communication network between learner and actors, which leads to a significant increase in the overall convergence time. The dashed lines represent <a href=\"https://en.wikipedia.org/wiki/GRPC\">gRPC</a> communication between different machines.</td>\n  </tr>\n </tbody>\n</table>\n<p></p>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\">\n <tbody>\n  <tr>\n   <td style=\"text-align: center;\"><a href=\"https://1.bp.blogspot.com/-UdKDH4Qp6bk/X3dpTm-Qe-I/AAAAAAAAGqU/cSyhh_m2KQ0D6bMLSQUUgLySFIl1nQc5QCLcBGAsYHQ/s1280/CachedLearner-Actor.gif\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"535\" data-original-width=\"1280\" height=\"268\" src=\"https://1.bp.blogspot.com/-UdKDH4Qp6bk/X3dpTm-Qe-I/AAAAAAAAGqU/cSyhh_m2KQ0D6bMLSQUUgLySFIl1nQc5QCLcBGAsYHQ/w640-h268/CachedLearner-Actor.gif\" width=\"640\" /></a></td>\n  </tr>\n  <tr>\n   <td class=\"tr-caption\" style=\"text-align: center;\">Overview of a distributed RL system with multiple actors placed in different Borg cells with the introduced transparent and distributed caching service. The learner only sends the updated model to the distributed caching services. Each caching service handles the model request updates from the nearby actors (i.e., actors placed on the same Borg cells) and the caching service. The caching service not only reduces the load on the learner for servicing the model update requests, but also reduces the average read latency by the actors.</td>\n  </tr>\n </tbody>\n</table>\n<p><b>High Throughput Input Pipeline</b><br />To deliver a high throughput input data pipeline, Menger uses <a href=\"https://deepmind.com/research/open-source/Reverb\">Reverb</a>, a recently open-sourced data storage system designed for machine learning applications that provides an efficient and flexible platform to implement <a href=\"https://developers.google.com/machine-learning/glossary#experience-replay\">experience replay</a> in a variety of on-policy/off-policy algorithms. However, using a single Reverb replay buffer service does not currently scale well in a distributed RL setting with thousands of actors, and simply becomes inefficient in terms of write throughput from actors.</p>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\">\n <tbody>\n  <tr>\n   <td style=\"text-align: center;\"><a href=\"https://1.bp.blogspot.com/-kGP9Qv_8i3o/X3dqJWLJbxI/AAAAAAAAGqc/7vy9cJfa9w8XF78lD8SpnVvsWtLwUkMIwCLcBGAsYHQ/s1280/ReplayBuffer.gif\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"704\" data-original-width=\"1280\" height=\"352\" src=\"https://1.bp.blogspot.com/-kGP9Qv_8i3o/X3dqJWLJbxI/AAAAAAAAGqc/7vy9cJfa9w8XF78lD8SpnVvsWtLwUkMIwCLcBGAsYHQ/w640-h352/ReplayBuffer.gif\" width=\"640\" /></a></td>\n  </tr>\n  <tr>\n   <td class=\"tr-caption\" style=\"text-align: center;\">A distributed RL system with a single replay buffer. Servicing a massive number of write requests from actors throttles the replay buffer and reduces its overall throughput. In addition, as we scale the learner to a setting with multiple compute engines (e.g., TPU Pod), feeding the data to these engines from a single replay buffer service becomes inefficient, which negatively impacts the overall convergence time.</td>\n  </tr>\n </tbody>\n</table>\n<p>To better understand the efficiency of the replay buffer in a distributed setting, we evaluate the average write latency for various payload sizes from 16 MB to 512 MB and a number of actors ranging from 16 to 2048. We repeat the experiment when the replay buffer and actors are placed on the same <a href=\"https://research.google/pubs/pub49065/\">Borg</a> cell. As the number of actors grows the average write latency also increases significantly. Expanding the number of actors from 16 to 2048, the average write latency increases by a factor of ~6.2<em>x</em> and ~18.9<em>x</em> for payload size 16 MB and 512 MB, respectively. This increase in the write latency negatively impacts the data collection time and leads to inefficiency in the overall training time. </p>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\">\n <tbody>\n  <tr>\n   <td style=\"text-align: center;\"><a href=\"https://1.bp.blogspot.com/-mRT4DampNnw/X3dshyC82_I/AAAAAAAAGq0/Alou3d_qhhkAX7tKnqPdx9QOaGVnWGPtACLcBGAsYHQ/s1999/image2%2B%25281%2529.png\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"1229\" data-original-width=\"1999\" height=\"394\" src=\"https://1.bp.blogspot.com/-mRT4DampNnw/X3dshyC82_I/AAAAAAAAGq0/Alou3d_qhhkAX7tKnqPdx9QOaGVnWGPtACLcBGAsYHQ/w640-h394/image2%2B%25281%2529.png\" width=\"640\" /></a></td>\n  </tr>\n  <tr>\n   <td class=\"tr-caption\" style=\"text-align: center;\">The average write latency to a single <a href=\"https://github.com/deepmind/reverb\">Reverb</a> replay buffer for various payload sizes (16 MB - 512 MB) and various number of actors (16 to 2048) when the actors and replay buffer are placed on the same Borg cells.</td>\n  </tr>\n </tbody>\n</table>\n<p>To mitigate this, we use the <a href=\"https://en.wikipedia.org/wiki/Shard_(database_architecture)\">sharding</a> capability provided by <a href=\"https://github.com/deepmind/reverb#sharding\">Reverb</a> to increase the throughput between actors, learner, and replay buffer services. Sharding balances the write load from the large number of actors across multiple replay buffer servers, instead of throttling a single replay buffer server, and also minimizes the average write latency for each replay buffer server (as fewer actors share the same server). This enables Menger to scale efficiently to thousands of actors across multiple Borg cells. </p>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\">\n <tbody>\n  <tr>\n   <td style=\"text-align: center;\"><a href=\"https://1.bp.blogspot.com/-9JuO2zOma9Q/X3dq58RwdyI/AAAAAAAAGqo/yizULYz0ng81h1tzv37Ar1-aeXafczf4wCLcBGAsYHQ/s1280/ShardedReplay.gif\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"558\" data-original-width=\"1280\" height=\"280\" src=\"https://1.bp.blogspot.com/-9JuO2zOma9Q/X3dq58RwdyI/AAAAAAAAGqo/yizULYz0ng81h1tzv37Ar1-aeXafczf4wCLcBGAsYHQ/w640-h280/ShardedReplay.gif\" width=\"640\" /></a></td>\n  </tr>\n  <tr>\n   <td class=\"tr-caption\" style=\"text-align: center;\">A distributed RL system with <em>sharded</em> replay buffers. Each replay buffer service is a dedicated data storage for a collection of actors, generally located on the same Borg cells. In addition, the sharded replay buffer configuration provides a higher throughput input pipeline to the accelerator cores.</td>\n  </tr>\n </tbody>\n</table>\n<p><b>Case Study: Chip Placement </b><br />We studied the benefits of Menger in the complex task of <a href=\"https://ai.googleblog.com/2020/04/chip-design-with-deep-reinforcement.html\">chip placement</a> for a large <a href=\"https://en.wikipedia.org/wiki/Netlist\">netlist</a>. Using 512 TPU cores, Menger achieves significant improvements in the training time (up to ~8.6<em>x</em>, reducing the training time from ~8.6 hours down to merely one hour in the fastest configuration) compared to a strong <a href=\"https://arxiv.org/abs/2004.10746\">baseline</a>. While Menger was optimized for TPUs, that the key factor for this performance gain is the architecture, and we would expect to see similar gains when tailored to use on GPUs. </p>\n<table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tr-caption-container\" style=\"margin-left: auto; margin-right: auto;\">\n <tbody>\n  <tr>\n   <td style=\"text-align: center;\"><a href=\"https://1.bp.blogspot.com/-JBn66BJc1h4/X3diIY8G_6I/AAAAAAAAGqE/3PvQniZNxpgURAReB6VZgpP22ZIlqUSIACLcBGAsYHQ/s1999/image4.png\" style=\"margin-left: auto; margin-right: auto;\"><img border=\"0\" data-original-height=\"1164\" data-original-width=\"1999\" height=\"233\" src=\"https://1.bp.blogspot.com/-JBn66BJc1h4/X3diIY8G_6I/AAAAAAAAGqE/3PvQniZNxpgURAReB6VZgpP22ZIlqUSIACLcBGAsYHQ/w400-h233/image4.png\" width=\"400\" /></a></td>\n  </tr>\n  <tr>\n   <td class=\"tr-caption\" style=\"text-align: center;\">The improvement in training time using Menger with variable number of TPU cores compared to a baseline in the task of <a href=\"https://arxiv.org/abs/2004.10746\">chip placement</a>.</td>\n  </tr>\n </tbody>\n</table>\n<p>We believe that Menger infrastructure and its promising results in the intricate task of chip placement demonstrate an innovative path forward to further shorten the chip design cycle and has the potential to not only enable further innovations in the chip design process, but other challenging real-world tasks as well. </p>\n<p><b>Acknowledgments</b><br /><em>Most of the work was done by Amir Yazdanbakhsh, Junchao Chen, and Yu Zheng.<strong> </strong>We would like to also thank Robert Ormandi, Ebrahim Songhori, Shen Wang, TF-Agents team, Albin Cassirer, Aviral Kumar, James Laudon, John Wilkes, Joe Jiang, Milad Hashemi, Sat Chatterjee, Piotr Stanczyk, Sabela Ramos, Lasse Espeholt, Marcin Michalski, Sam Fishman, Ruoxin Sang, Azalia Mirhosseini, Anna Goldie, and Eric Johnson for their help and support.</em></p>\n<!--Footnotes themselves at the bottom.-->\n<hr width=\"100%\" />\n<p><span class=\"Apple-style-span\" style=\"font-size: small;\"><a name=\"fn1\"><b>1 </b></a>A <a href=\"https://en.wikipedia.org/wiki/Menger_sponge\">Menger</a> cube is a three-dimensional fractal curve, and the inspiration for the name of this system, given that the proposed infrastructure can virtually scale ad infinitum.<a href=\"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html#fnref1\"><sup>↩</sup></a></span></p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/gJZg?a=JbcHbaO2TTI:SxYoJICBHrQ:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/gJZg?d=yIl2AUoC8zA\" border=\"0\" /></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/gJZg/~4/JbcHbaO2TTI\" height=\"1\" width=\"1\" alt=\"\" />","descriptionType":"html","publishedDate":"Fri, 02 Oct 2020 18:14:00 +0000","feedId":1156,"bgimg":"https://1.bp.blogspot.com/-kZCZGNEzu1w/X3dg3YW_BvI/AAAAAAAAGpY/9bMTDQKqLzwBxogATkKnm-NbQHu73vccwCLcBGAsYHQ/s72-c/image1.gif","linkMd5":"2d87a6f0690059aa71d2d0a722b39c82","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn74@2020_2/2020/10/09/13-21-54-225_e5205efb45964f2a.webp","destWidth":72,"destHeight":72,"sourceBytes":318243,"destBytes":180122,"author":"Google AI","articleImgCdnMap":{"https://1.bp.blogspot.com/-kZCZGNEzu1w/X3dg3YW_BvI/AAAAAAAAGpY/9bMTDQKqLzwBxogATkKnm-NbQHu73vccwCLcBGAsYHQ/s320/image1.gif":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn66@2020_5/2020/10/09/13-21-54-092_4c44b2d5eec43bd4.webp","https://1.bp.blogspot.com/-bPEExECG-ec/X3dhMogFunI/AAAAAAAAGpg/SQzJ2HXkG6cqhUQ9-fwY8tC_1hU53hprACLcBGAsYHQ/w640-h268/image6.gif":null,"https://1.bp.blogspot.com/-UdKDH4Qp6bk/X3dpTm-Qe-I/AAAAAAAAGqU/cSyhh_m2KQ0D6bMLSQUUgLySFIl1nQc5QCLcBGAsYHQ/w640-h268/CachedLearner-Actor.gif":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn61@2020_1/2020/10/09/13-22-01-629_dcf4dba373ee9f7c.webp","https://1.bp.blogspot.com/-kGP9Qv_8i3o/X3dqJWLJbxI/AAAAAAAAGqc/7vy9cJfa9w8XF78lD8SpnVvsWtLwUkMIwCLcBGAsYHQ/w640-h352/ReplayBuffer.gif":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn42@2020_5/2020/10/09/13-23-48-035_e9c66ee4e620a78a.webp","https://1.bp.blogspot.com/-mRT4DampNnw/X3dshyC82_I/AAAAAAAAGq0/Alou3d_qhhkAX7tKnqPdx9QOaGVnWGPtACLcBGAsYHQ/w640-h394/image2%2B%25281%2529.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn69@2020_2/2020/10/09/13-21-52-344_7f7969ae0cc57985.webp","https://1.bp.blogspot.com/-9JuO2zOma9Q/X3dq58RwdyI/AAAAAAAAGqo/yizULYz0ng81h1tzv37Ar1-aeXafczf4wCLcBGAsYHQ/w640-h280/ShardedReplay.gif":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn46@2020_3/2020/10/09/13-21-57-447_7a12b1997f921fd4.webp","https://1.bp.blogspot.com/-JBn66BJc1h4/X3diIY8G_6I/AAAAAAAAGqE/3PvQniZNxpgURAReB6VZgpP22ZIlqUSIACLcBGAsYHQ/w400-h233/image4.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn57@2020_6/2020/10/09/13-21-52-334_ab80f482031ae6c0.webp","http://feeds.feedburner.com/~ff/blogspot/gJZg?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn38@2020_5/2020/10/09/13-21-51-921_483d6fcb94af4f84.webp","http://feeds.feedburner.com/~r/blogspot/gJZg/~4/JbcHbaO2TTI":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn49@2020_3/2020/10/09/13-21-52-286_0c679635e93e9005.webp"},"publishedOrCreatedDate":1602249711804}],"record":{"createdTime":"2020-10-09 21:21:51","updatedTime":"2020-10-09 21:21:51","feedId":1156,"fetchDate":"Fri, 09 Oct 2020 13:21:51 +0000","fetchMs":945,"handleMs":206,"totalMs":121329,"newArticles":0,"totalArticles":25,"status":1,"type":0,"ip":"72e021969f56c10206ce79830911afb1","hostName":"us-025*","requestId":"cf9c5e5d4c084571b62e24047d6104f2_1156","contentType":"text/xml; charset=UTF-8","totalBytes":6160664,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":9,"articlesImgsGithubTotal":8,"successGithubMap":{"myreaderx15":1,"myreaderx16":1,"myreaderx6":1,"myreaderx4":1,"myreaderx33":1,"myreaderx3":1,"myreaderx1":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx19":1},"failGithubMap":{"myreaderx23":1}},"feed":{"createdTime":"2020-08-24 21:31:27","updatedTime":"2020-09-01 09:43:02","id":1156,"name":"Google AI Blog","url":"http://googleresearch.blogspot.com/atom.xml","subscriber":null,"website":null,"icon":"http://ai.googleblog.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx64/cdn73@2020_5/2020/09/01/01-43-02-287_40612c2a706c05a6.ico","description":"The latest news from Google AI.","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-10-09 21:23:51","updatedTime":"2020-10-09 21:23:51","id":null,"feedId":1156,"linkMd5":"2d87a6f0690059aa71d2d0a722b39c82"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":5980542,"tmpBgImgCdnBytes":180122,"extra4":{"start":1602249710556,"total":0,"statList":[{"spend":1044,"msg":"获取xml内容"},{"spend":206,"msg":"解释文章"},{"spend":1750,"msg":"上传封面图到cdn"},{"spend":1951,"msg":"修正封面图上传失败重新上传"},{"spend":120066,"msg":"正文链接上传到cdn"}]},"extra5":9,"extra6":9,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-bPEExECG-ec/X3dhMogFunI/AAAAAAAAGpg/SQzJ2HXkG6cqhUQ9-fwY8tC_1hU53hprACLcBGAsYHQ/w640-h268/image6.gif","sourceStatusCode":200,"destWidth":638,"destHeight":268,"sourceBytes":636500,"destBytes":702634,"targetWebpQuality":75,"feedId":1156,"totalSpendMs":3611,"convertSpendMs":3452,"createdTime":"2020-10-09 21:21:52","host":"us-034*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html","linkMd5ListStr":"2d87a6f0690059aa71d2d0a722b39c82","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn53/contents/2020/10/09/13-21-55-747_0b092c00399d372f.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Oct 2020 13:21:55 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["AFAC:096F:B604:1E542:5F8063EF"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602253111"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn53/contents/2020/10/09/13-21-55-747_0b092c00399d372f.webp","historyStatusCode":[],"spendMs":64},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"621.6 KB","destSize":"686.2 KB","compressRate":"110.4%"},{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-bPEExECG-ec/X3dhMogFunI/AAAAAAAAGpg/SQzJ2HXkG6cqhUQ9-fwY8tC_1hU53hprACLcBGAsYHQ/w640-h268/image6.gif","sourceStatusCode":200,"destWidth":638,"destHeight":268,"sourceBytes":636500,"destBytes":702634,"targetWebpQuality":75,"feedId":1156,"totalSpendMs":3037,"convertSpendMs":2902,"createdTime":"2020-10-09 21:21:55","host":"us-034*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html","linkMd5ListStr":"2d87a6f0690059aa71d2d0a722b39c82","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn53/contents/2020/10/09/13-21-58-889_0b092c00399d372f.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Oct 2020 13:21:58 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["AFAC:096F:B62F:1E5FF:5F8063F3"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602253111"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn53/contents/2020/10/09/13-21-58-889_0b092c00399d372f.webp","historyStatusCode":[],"spendMs":71},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"621.6 KB","destSize":"686.2 KB","compressRate":"110.4%"},null],"extra10_invalidATagHrefValue":{"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html_#fnref1":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html#fnref1","http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html_#fn1":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html#fn1"},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-005.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~ff/blogspot/gJZg?d=yIl2AUoC8zA","sourceStatusCode":200,"destWidth":62,"destHeight":24,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn38@2020_5/2020/10/09/13-21-51-921_483d6fcb94af4f84.webp","sourceBytes":997,"destBytes":310,"targetWebpQuality":75,"feedId":1156,"totalSpendMs":819,"convertSpendMs":5,"createdTime":"2020-10-09 21:21:51","host":"us-017*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html","linkMd5ListStr":"2d87a6f0690059aa71d2d0a722b39c82","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"997 B","destSize":"310 B","compressRate":"31.1%"},{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-JBn66BJc1h4/X3diIY8G_6I/AAAAAAAAGqE/3PvQniZNxpgURAReB6VZgpP22ZIlqUSIACLcBGAsYHQ/w400-h233/image4.png","sourceStatusCode":200,"destWidth":400,"destHeight":233,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn57@2020_6/2020/10/09/13-21-52-334_ab80f482031ae6c0.webp","sourceBytes":21666,"destBytes":9526,"targetWebpQuality":75,"feedId":1156,"totalSpendMs":982,"convertSpendMs":60,"createdTime":"2020-10-09 21:21:52","host":"us-021*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html","linkMd5ListStr":"2d87a6f0690059aa71d2d0a722b39c82","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.2 KB","destSize":"9.3 KB","compressRate":"44%"},{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/blogspot/gJZg/~4/JbcHbaO2TTI","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn49@2020_3/2020/10/09/13-21-52-286_0c679635e93e9005.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":1156,"totalSpendMs":1036,"convertSpendMs":3,"createdTime":"2020-10-09 21:21:52","host":"europe-56*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html","linkMd5ListStr":"2d87a6f0690059aa71d2d0a722b39c82","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-kZCZGNEzu1w/X3dg3YW_BvI/AAAAAAAAGpY/9bMTDQKqLzwBxogATkKnm-NbQHu73vccwCLcBGAsYHQ/s72-c/image1.gif","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn34@2020_5/2020/10/09/13-21-52-501_e5205efb45964f2a.webp","sourceBytes":318243,"destBytes":180122,"targetWebpQuality":75,"feedId":1156,"totalSpendMs":1654,"convertSpendMs":493,"createdTime":"2020-10-09 21:21:51","host":"us-030*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html","linkMd5ListStr":"2d87a6f0690059aa71d2d0a722b39c82","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"310.8 KB","destSize":"175.9 KB","compressRate":"56.6%"},{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-mRT4DampNnw/X3dshyC82_I/AAAAAAAAGq0/Alou3d_qhhkAX7tKnqPdx9QOaGVnWGPtACLcBGAsYHQ/w640-h394/image2%2B%25281%2529.png","sourceStatusCode":200,"destWidth":640,"destHeight":394,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn69@2020_2/2020/10/09/13-21-52-344_7f7969ae0cc57985.webp","sourceBytes":40579,"destBytes":16948,"targetWebpQuality":75,"feedId":1156,"totalSpendMs":1366,"convertSpendMs":19,"createdTime":"2020-10-09 21:21:52","host":"europe-60*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html","linkMd5ListStr":"2d87a6f0690059aa71d2d0a722b39c82","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39.6 KB","destSize":"16.6 KB","compressRate":"41.8%"},{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-kZCZGNEzu1w/X3dg3YW_BvI/AAAAAAAAGpY/9bMTDQKqLzwBxogATkKnm-NbQHu73vccwCLcBGAsYHQ/s72-c/image1.gif","sourceStatusCode":200,"destWidth":72,"destHeight":72,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn74@2020_2/2020/10/09/13-21-54-225_e5205efb45964f2a.webp","sourceBytes":318243,"destBytes":180122,"targetWebpQuality":75,"feedId":1156,"totalSpendMs":1651,"convertSpendMs":383,"createdTime":"2020-10-09 21:21:53","host":"us-038*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html","linkMd5ListStr":"2d87a6f0690059aa71d2d0a722b39c82","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"310.8 KB","destSize":"175.9 KB","compressRate":"56.6%"},{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-kZCZGNEzu1w/X3dg3YW_BvI/AAAAAAAAGpY/9bMTDQKqLzwBxogATkKnm-NbQHu73vccwCLcBGAsYHQ/s320/image1.gif","sourceStatusCode":200,"destWidth":320,"destHeight":213,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn66@2020_5/2020/10/09/13-21-54-092_4c44b2d5eec43bd4.webp","sourceBytes":1801638,"destBytes":1197518,"targetWebpQuality":75,"feedId":1156,"totalSpendMs":3859,"convertSpendMs":1808,"createdTime":"2020-10-09 21:21:52","host":"europe-22*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html","linkMd5ListStr":"2d87a6f0690059aa71d2d0a722b39c82","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.7 MB","destSize":"1.1 MB","compressRate":"66.5%"},{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-9JuO2zOma9Q/X3dq58RwdyI/AAAAAAAAGqo/yizULYz0ng81h1tzv37Ar1-aeXafczf4wCLcBGAsYHQ/w640-h280/ShardedReplay.gif","sourceStatusCode":200,"destWidth":640,"destHeight":279,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn46@2020_3/2020/10/09/13-21-57-447_7a12b1997f921fd4.webp","sourceBytes":796775,"destBytes":1209382,"targetWebpQuality":75,"feedId":1156,"totalSpendMs":7352,"convertSpendMs":5182,"createdTime":"2020-10-09 21:21:52","host":"europe68*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html","linkMd5ListStr":"2d87a6f0690059aa71d2d0a722b39c82","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"778.1 KB","destSize":"1.2 MB","compressRate":"151.8%"},{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-UdKDH4Qp6bk/X3dpTm-Qe-I/AAAAAAAAGqU/cSyhh_m2KQ0D6bMLSQUUgLySFIl1nQc5QCLcBGAsYHQ/w640-h268/CachedLearner-Actor.gif","sourceStatusCode":200,"destWidth":640,"destHeight":268,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn61@2020_1/2020/10/09/13-22-01-629_dcf4dba373ee9f7c.webp","sourceBytes":1044370,"destBytes":1101666,"targetWebpQuality":75,"feedId":1156,"totalSpendMs":10722,"convertSpendMs":9143,"createdTime":"2020-10-09 21:21:52","host":"us-009*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html","linkMd5ListStr":"2d87a6f0690059aa71d2d0a722b39c82","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1,019.9 KB","destSize":"1.1 MB","compressRate":"105.5%"},{"code":1,"isDone":false,"source":"https://1.bp.blogspot.com/-kGP9Qv_8i3o/X3dqJWLJbxI/AAAAAAAAGqc/7vy9cJfa9w8XF78lD8SpnVvsWtLwUkMIwCLcBGAsYHQ/w640-h352/ReplayBuffer.gif","sourceStatusCode":200,"destWidth":640,"destHeight":352,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn42@2020_5/2020/10/09/13-23-48-035_e9c66ee4e620a78a.webp","sourceBytes":1629119,"destBytes":2445120,"targetWebpQuality":75,"feedId":1156,"totalSpendMs":57081,"convertSpendMs":54654,"createdTime":"2020-10-09 21:22:52","host":"us-021*","referer":"http://feedproxy.google.com/~r/blogspot/gJZg/~3/JbcHbaO2TTI/massively-large-scale-distributed.html","linkMd5ListStr":"2d87a6f0690059aa71d2d0a722b39c82","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.6 MB","destSize":"2.3 MB","compressRate":"150.1%"}],"successGithubMap":{"myreaderx15":1,"myreaderx16":1,"myreaderx6":1,"myreaderx4":1,"myreaderx33":1,"myreaderx3":1,"myreaderx1":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx19":1},"failGithubMap":{"myreaderx23":1}}