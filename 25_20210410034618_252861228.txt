{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tColor Craft &#038; Counterpoint: A Designer&#8217;s Life with Color Vision Deficiency\t\t\t\t","link":"https://alistapart.com/article/a-designers-life-with-color-vision-deficiency/","description":"<!-- wp:paragraph --> \n<p>So, what is it like to be color blind and also work in the web design and development industry? I'll answer that question throughout this article, but it's something that's always factored into my thoughts, given my passion for design and now my career. I wonder if having “normal” vision would have made me a better artist growing up. Would it make me better at my job now? Would I have pursued a more design-oriented career, as opposed to one that’s more dev-focused? These are just some of the things that pop into my head.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>As to my job and my color vision, no, colorblindness doesn’t affect my work as much as you’d think. During design meetings, I can quickly point out areas where we need to reconsider our color palette. While reviewing layouts, I’m able to explain why we need to evaluate how—and if—we’re only conveying information with color. I like that I can bring a singular perspective to the table and a voice for others like me; I am able to offer insights that others don’t necessarily have. </p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>When you can see a larger set of colors, it’s easy to gloss over those issues because they’re functionally invisible in the moment. If a design team doesn’t have a member who sees color differently, it’s important they find a way to test with actual users who do. There is no substitute for the real thing.&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Between workarounds anyone can use when color-sensitive situations crop up, and knowing how to separate myth from actual, smart usability practices for vision differences (and which design tools to use)—I want to set the record straight on a few things about designing with color and designing for color accessibility.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading --> \n<h2>What it means to be color blind</h2> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>The term <a href=\"https://www.aoa.org/patients-and-public/eye-and-vision-problems/glossary-of-eye-and-vision-conditions/color-deficiency\"><em>color vision deficiency</em></a>,<em> </em>or CVD, more accurately reflects the type of impairment I have.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>When someone hears that I’m color blind, most immediately think that I can’t see colors whatsoever—that my entire field of vision is in grayscale, that I’m truly color <em>blind</em>. The term is very misleading and confusing because most people living with CVD are able to see many colors. (There <em>are</em> people who have a type of CVD called “<a href=\"https://en.wikipedia.org/wiki/Monochromacy\">monochromacy</a>,” which is complete color blindness. About 1 in 30,000 people are affected, and they see the world in shades of gray.) &nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Red-green color blindness is the most culturally-familiar type, but CVD is a lot more interesting and varies far more in definition.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading --> \n<h2>So what colors <em>can’t</em> you see?</h2> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>I have been asked this question more times than I can count. My answer is always the same: it’s practically impossible for me to say. For me personally, colors become harder to distinguish the less bold they are. I can attest with absolute certainty that the sky is blue, a stop sign is red, the grass is green, and Big Bird is yellow. I can <em>see</em> those colors because—whether by design or by mother nature—they’re bold. But start placing certain colors adjacent to each other, and it becomes more difficult for me. There are no colors that I <em>can’t</em> see, rather, certain colors become muddied and start blending together. It’s not the same for everyone; that’s just my version of CVD.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>As light sensors go, <a href=\"https://www.bbc.com/future/article/20150727-what-are-the-limits-of-human-vision\">humans don’t have the best eyes for color</a>. Truth be told, they’re subpar compared to most species. WE are dismally color blind—as a species.&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>On top of that, normal, “accurate” color vision varies from person to person; only minor anatomical differences determine whether your eyes are normal, “color blind,” or have extra (!) color vision powers. Let’s unpack all of that.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Without getting too technical, what I can tell you is that our retinas are responsible for our color vision. <a href=\"https://www.colour-blindness.com/general/how-it-works-science/\">Retinas have two main types of cells</a>: rods and cones. Rods are primarily responsible for reading brightness/intensity levels, while cones are more specialized for detail and for picking up a particular range of light wavelengths. A person considered to have normal color vision has three types of cones, one each for bandwidths of short, medium, and long wavelengths of light. The bandwidth each cone can perceive is shaped like a bell curve and is unique to <em>that</em> cone inside <em>your</em> eye, and there are overlaps between cones. Cones also don’t actually correspond to specific colors, but because long wavelengths fall more toward the red part of the spectrum, medium wavelengths hover closer to green, and short wavelengths tend toward blue, you’ll hear them called red, green, and blue cones, due to sheer convenience (Fig. 1).</p> \n<!-- /wp:paragraph --> \n<!-- wp:image {\"id\":7172396,\"sizeSlug\":\"full\"} --> \n<figure class=\"wp-block-image size-full\">\n <a href=\"https://en.wikipedia.org/wiki/Color_vision\"><img src=\"https://alistapart.com/wp-content/uploads/2020/06/light-spectrum-cone-wavelength-response-600x423-4.jpg\" alt=\"Spectral diagram of three bell curves (one each for short-, medium-, and long-wavelength cones), indicating their typical ranges and peak response points.\" class=\"wp-image-7172396\" /></a>\n <figcaption>\n  <br><b>Fig. 1.</b> Normalized cone response spectra in humans for short (S), medium (M), and long (L) wavelengths. Notice the overlapping nature of the bell curves, and that the peak sensitivity for each cone doesn’t neatly match up with red, green, and blue.</br>\n </figcaption>\n</figure> \n<!-- /wp:image --> \n<!-- wp:paragraph --> \n<p>Color vision deficiencies occur because one or more of these cones is missing or has limited sensitivity (such as a narrow range), or when color perception in the brain is influenced by various <a href=\"https://alistapart.com/article/a-designers-life-with-color-vision-deficiency/#colorperception\">other phenomena</a>. This means that those colors in the spectrum effectively “drop out,” but since the light is still there, the brain translates it into <em>a</em> color based on peripheral data picked up by the other cones, combined with its brightness level.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Since color vision is based on how our eyes and brain perceive light, and since our eyes have different genetic sensitivities to light, we can say that “accurate” color vision is somewhat subjective. Even people with “accurate” color vision don’t see things exactly the same way.&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Some people even have a fourth cone cell in their retinas; \"<a href=\"https://en.wikipedia.org/wiki/Tetrachromacy\">tetrachromats</a>\" have enhanced color differentiation due to extra sensitivity between red and green. The extra cone actually <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2781854/\">came standard for most mammals in the past</a>, but ongoing studies have suggested that <a href=\"https://www.bbc.com/future/article/20140905-the-women-with-super-human-vision\">12% of the world's women</a> might still have this fourth type of cone.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>There are some colors and wavelengths we can’t see because our eyes don’t have the right sensors, but for others, it’s due to anatomical make-up. The lens and cornea physically block very short wavelengths; it's why we can’t see ultraviolet light directly, even though we have the sensor capability. For people with <a href=\"https://www.theguardian.com/science/2002/may/30/medicalscience.research\">aphakia</a> (lack of a lens in one or both eyes, whether congenital or due to surgical removal), that’s not a problem; they see the color variations in near ultraviolet light naturally.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading --> \n<h2>Inside look at living with CVDs</h2> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>I think each person who has a CVD has their own set of challenges. There are also a lot of commonly-experienced situations, social and professional obstacles, and forms of discrimination and bullying we’re expected to just quietly put up with.&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Vision disabilities and color vision differences are often treated as quirky, entertaining phenomena on some mysterious map between normal vision and “blind.” People with CVDs encounter condescending remarks and dismissive treatment as part of daily life. It’s an invisible and misunderstood struggle that doesn’t have to be that way. I want to make a difference, and it fuels my desire to educate people on this topic.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Insults and passive-aggressive comments</h3> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>I’ve heard my fair share of passive-aggressive comments about my career choice. Also about my passion for art and design. Because <em>how could I possibly be a designer if I can’t see colors?</em>&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>A question like that is condescending on two levels. One, it’s as if no one should be allowed to be an artist unless they can see colors accurately. And two, it shows a complete insularity or misconstrued awareness about color vision deficiencies.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Nowadays, I work primarily as a front-end developer, but early on in my career, I designed web layouts in Photoshop. I didn’t code anything. I didn’t even write HTML. I never had an issue with colors because I was typically starting with a client’s corporate branding guidelines, so I was able to take those colors and use color palette generators to help me build out the look of my designs. I was never called out for making poor color choices, so I felt like I was doing a good job. It wasn’t until I was having a conversation with my boss, a man I looked up to as a professional, when I dropped my guard and mentioned that I was color blind. He then proceeded to question my entire decision to pursue the career I love. For a new professional, it was a pretty rough and demoralizing encounter to sit through and try to process, to say the least.&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Justifying my skill set</h3> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>It feels as though I have had to justify my career decisions and my skill set on a regular basis over the years—as if CVD prevents me from being good at my job. By and large, it’s truthfully not something that comes up most of the time in my day-to-day work.&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>At this point, most coworkers only find out that I have a CVD if I talk about it. Sometimes I even get a kick out of seeing how many months can stretch out before a situation comes along where I can mention it. It’s become an increasingly minor issue over the years, what with updated software and web technologies I can put to use when needed.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Life via form factor (or winging it)</h3> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Think for a moment about ways that color is used to convey information in the world around you. One thing that comes to my mind would be traffic lights. Color is used to let drivers know how they should proceed. No additional information is provided in case a driver is color blind. Traffic lights also use two of the colors most commonly associated with color blindness: red and green. Thankfully, most traffic lights have a common form factor. The top light is red, the middle light is yellow, and the bottom light is green. Even if I couldn’t tell the color, as long as I can tell which light is lit, then I’m able to get the necessary information.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Unfortunately, not all designs are created equal; there may be no secondary or supplemental indicator to go by. When something is only conveyed with color, that’s a gap where information can get lost on a large group of people.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Everyday social interactions</h3> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Exchanging stories with others who grew up color blind sounds unfailingly familiar. Most of us have had similar experiences when it comes to people first finding out. As in part Q&amp;A, part dog and pony show.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>We’re <em>constantly</em> asked, “What color is this?” <em>(points to a nearby object)</em> and “What color does this look like?” Then we watch as the person who asked us the question has their MIND BLOWN because we can’t see the correct color. Meanwhile, getting the color correct can sometimes be worse. First, there’s a look of confusion on the asker’s face. They can’t comprehend how we can both be color blind <em>and</em> see color at the same time, which leads to even more questions and “tests.” It turns what could have been a brief exchange into a lengthy and technical conversation, maybe at a bad time or inconvenient location.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>What I ended up learning is that these encounters will never go away, since most people I come into contact with have no knowledge about color blindness. I can either get annoyed by getting asked so many questions, or I can use it as an opportunity to educate.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Getting passed over for jobs</h3> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>The first time I was passed over for a job specifically due to my CVD was when I was a teenager. It was a part-time job after school, and I was told—point-blank—it was because I’m color blind. A position had opened up in the frame shop at a big-box crafts store I’d been working at for over a year. After having been told I was getting the position, my boss somehow found out I’m color blind, then informed me that I wasn’t qualified to work in the frames department for that very reason. That was it, no discussion. I had to watch the position go to one of my coworkers.&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>That may have been a minor blip on my teenage radar at the time, but little did I realize it was the first of many. Between the discrimination and frustration I dealt with at various jobs over the years, I eventually convinced myself to not tell new employers or coworkers about my color vision deficiency. I wasn’t going to lie about it if I got asked, but I wasn’t going to offer up that information unsolicited.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>After working in the web industry for many years, I eventually transitioned to a new approach. At this point, I have successfully proven to myself that my color vision deficiency doesn’t negatively impact my job, and that bringing it up via the lens of accessibility makes it more of a natural thing I can discuss with coworkers so we can put it to constructive use on projects.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading --> \n<h2>Inside look at how I do my job</h2> \n<!-- /wp:heading --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Relying on tools for help</h3> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Being a professional front-end developer and designer with a CVD is easier than ever because there are so many tools and resources out there. Professionally, I have relied on color picker tools, websites that offer predefined color combinations, image editing software, and the mere fact that all colors can be represented by a hexadecimal value.&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>In front-end tasks, I’m able to modify my code editor to suit my needs, for instance. I can use light or dark mode and a wide variety of color themes. I often use high-contrast themes that have been thoughtfully designed for developers with color vision deficiencies.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Tools and resources I use regularly:</p> \n<!-- /wp:paragraph --> \n<!-- wp:list --> \n<ul>\n <li><strong>Trello — </strong>Trello has a nice item labelling feature that takes CVDs into consideration. Not only can users label cards based on color, they can also use stripes, zigzags, polka dots, squiggly lines, and other shapes.</li>\n <li><strong>VSCode — </strong>Visual Studio Code is my preferred code editor. I’m able to customize the interface with pre-built themes, and I can further modify those themes if I need to. I’m currently using one called Vue Theme, which I feel works really well for me. I choose themes based on what feels like the appropriate color contrast for my specific color vision deficiency. I lean toward dark backgrounds with brighter, higher-contrasting text colors that stand out against the background color. Another one of my favorites is <a href=\"https://marketplace.visualstudio.com/items?itemName=sdras.night-owl\">Sarah Drasner</a>’<a href=\"https://marketplace.visualstudio.com/items?itemName=sdras.night-owl\">s Night Owl theme</a>.</li>\n <li><strong>Dev Tools — </strong>Whether it’s Chrome, Firefox, or Safari, I am constantly in the browser’s dev tools. There’s an ever-increasing number of features in dev tools that I can use to get the color information I need. Something I find handy is being able to Shift + click on a color value to cycle through various color formats (3 digit and 6 digit hexadecimal, RGB, HSL, and color name).</li>\n <li><strong>Color Pickers</strong> — I installed a color picker Chrome browser extension called <a href=\"https://chrome.google.com/webstore/detail/eye-dropper/hmdcmlfkchdmnmnmheododdhjedfccka?hl=en\">Eye Dropper</a> to help me quickly grab colors from web pages. It allows me to sample colors from any web page, and provides me with the color in every format. This provides me with a secondary reassurance that the color I wrote in my CSS is truly being rendered. I wish I could trust the code as I see it in dev tools, but occasionally my eyes play tricks on me—I would swear that the color I’m seeing rendered on the screen isn’t the color value in dev tools. When I think that’s the issue, I can just grab the eye dropper and triple-check.</li>\n <li><strong>Contrast Checker — </strong>I use the <a href=\"https://webaim.org/resources/contrastchecker/\">WebAIM Contrast Checker</a> to make sure that the colors I’m using are in compliance with the guidelines.</li>\n</ul> \n<!-- /wp:list --> \n<!-- wp:heading --> \n<h2>Accessibility and inclusion</h2> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Statistically, 1 out of every 12 men and 1 out of every 200 women have a color vision deficiency. Across the world, <a href=\"http://www.colourblindawareness.org/colour-blindness/\">approximately 300 million people are color blind</a>. Those are significant numbers to factor in, especially if all those users are hampered by usability issues. Color alone can prevent them from completing interactions, receiving pertinent information, and from having the same experience as users with better color vision. That last fact alone is reason enough to pay attention to the concerns outlined here.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Color disabilities and the Web Content Accessibility Guidelines</h3> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>The <a href=\"https://www.ada.gov/\">ADA</a> doesn’t specifically call out color blindness; it simply refers to visual disabilities. However, the Web Content Accessibility Guidelines <a href=\"https://www.w3.org/TR/WCAG21/#use-of-color\">(WCAG) does specifically mention color</a>. Compliance with the WCAG helps as a first step toward ensuring your site is usable by everyone, regardless of disabilities, but keep in mind that there could be additional factors at play with your site which may be “compliant” but still create difficulties for users.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Color contrast</h3> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>For those of us who have a CVD, one of the more prevalent issues is a site’s color <em>contrast</em>; trouble with specific colors doesn’t necessarily mean we’ll have trouble with the site.&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>If a site doesn’t have the proper color contrast ratio (text color on top of background color), then the site’s information may be more difficult to see or understand. WebAIM, a non-profit organization, published reports in 2019 and 2020 outlining <a href=\"https://webaim.org/projects/million/\">accessibility issues in the top one million home pages</a>. As of February 2020, 86.3% of home pages tested had insufficient contrast.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>So, what does that mean? It means that the information on those sites is not being conveyed equally, to everyone. That’s <a href=\"https://majestic.com/reports/majestic-million\">863,000 of the most influential and high-traffic sites</a> on the web delivering an unequal user experience to billions of users worldwide on a daily basis.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Data visualization</h3> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Color contrast is not the only issue when it comes to color blindness and accessibility. Data visualization is one area in particular that often relies heavily on color to convey information. It is also a prime example of what the WCAG mentions in their success criteria:&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:quote {\"className\":\"is-style-default\"} --> \n<blockquote class=\"wp-block-quote is-style-default\">\n <p>Color is not used as the only visual means of conveying information, indicating an action, prompting a response, or distinguishing a visual element. </p>\n <cite>– Web Content Accessibility Guidelines 2.1 - Success Criterion 1.4.1 Use of Color</cite>\n</blockquote> \n<!-- /wp:quote --> \n<!-- wp:paragraph --> \n<p>I follow a few accounts on Twitter that bring attention to improper use of color in data visualizations. I would recommend getting started with these—they provide a lot of useful information and raise awareness surrounding issues that those of us with a CVD face:</p> \n<!-- /wp:paragraph --> \n<!-- wp:list --> \n<ul>\n <li><a href=\"https://twitter.com/colourblindorg\">@colourblindorg</a></li>\n <li><a href=\"https://twitter.com/WeAreColorblind\">@wearecolorblind</a></li>\n <li><a href=\"https://twitter.com/WeTheColorBlind\">@WeTheColorBlind</a>.</li>\n</ul> \n<!-- /wp:list --> \n<!-- wp:paragraph --> \n<p>Thankfully, making charts, graphs, and other visual aids color accessible isn’t that difficult. There is no need to remove colors altogether. Just try to use colorblind-friendly color palettes and don’t use problematic color combinations. Make sure all the data in your charts is labeled appropriately so that your readers can get the information in multiple ways. <a href=\"https://ourworldindata.org/\">Our World in Data</a>—a scientific online publication that focuses on large global problems such as poverty, disease, climate change, war, and inequality—has great examples of data visualizations of all types that I would consider to be colorblind-friendly.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Whenever possible, I try to provide feedback from the perspective of someone who has a CVD, but I don’t make recommendations for specific color changes; I leave the color choices to those who aren’t color blind. Instead, I describe which elements I find difficult to interpret, and why. I tell them which information is getting lost on someone like me. The hope is that my feedback informs other designers of the need to make charts, tables, graphs, and maps more inclusive.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading --> \n<h2>Adding people with a CVD to your team</h2> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>As far as those of us who do have a CVD and work in the web industry: we are just as skilled and knowledgeable about our professions as anyone else, and there are plenty of ways that we can contribute to the visual aspects of projects—<em>especially</em> regarding color. We have the ability to review designs and report back whether any information is getting lost due to poor color contrast. We can inform designers if the chosen color palette is problematic. We can be the test subjects for our fellow UX designers during their usability research.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>There is also another point I’d like to get across here. There is a common misconception that a designer with a CVD doesn’t have the ability to do their job effectively. Hiring managers and other coworkers often make this assumption. Much to the contrary, people with CVDs have ways they work smart to work around their limitations. I mentioned earlier about the different tools I personally use to help me in my job. There are plenty of web industry professionals like me who use features in the tools at their disposal, getting the job done right, and so seamlessly that no one would guess they are color blind.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>That brings me to a broader point—the importance of hiring people with disabilities. I won’t go into the many, many, <em>many</em> reasons why companies should do that. Rather, I’ll mention some of the benefits from a design perspective.&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>First and foremost, if you don’t have a disability, then how can you say conclusively that you know your product will work for those who do?&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>The answer is, you can’t. Not without proper testing. Sure, there are companies out there that can help designers and developers conduct usability tests. But how amazing would it be if you had team members who could provide you with that invaluable feedback throughout the duration of each project? Think about all the knowledge you’ve accumulated about your profession. Think about all of the wisdom you can teach others. Now think about all the knowledge and wisdom that could be passed on to you by teammates living with a disability. Together, you can make your products truly inclusive. Trying to do it separately will always produce and reinforce limitations.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading --> \n<h2>Critical CVD tips for your projects</h2> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Color can enhance the message, but shouldn’t be the messenger. UX and UI designers have within their power the ability to take color blindness into consideration—or to ignore it. You can make sure information is conveyed to everyone, not just people who see color “normally.” That is a great responsibility, with real life-or-death repercussions at stake for many users.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>For those of us in the web industry, there are specific action items I’d like you to take away from all this.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Design color palettes for “everyone”</h3> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Carefully plan your color palette—not for those who are color blind, but for <em>everyone</em>. Always keep in mind that ALL the information you provide in your product needs to be easy to recognize and easy to understand by anyone who touches it. We can get too familiar with what we’re doing and forget that information is delivered in multifaceted ways, so we need to be mindful of what’s specifically being conveyed by color.&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>I highly recommend Geri Coady’s book, <a href=\"https://abookapart.com/products/color-accessibility-workflows\"><em>Color Accessibility Workflows</em></a>; it’s a fantastic resource. In it, she discusses color blindness, choosing appropriate color, compliance and testing, implementation, providing alternatives, and she includes some tips and tricks.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Don’t assume, and be careful what you ask&nbsp;</h3> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Do not assume which colors are difficult to see—actually do the research and testing. At minimum, please <a href=\"https://webaim.org/resources/contrastchecker/\">check the color contrast in your layout</a>.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>The reason I say that is because although the ADA doesn’t call out color blindness specifically, it does call out visual disabilities. In the U.S., it is illegal in the workplace (not to mention insulting and unwise) to ask people if they have a disability. In my book, that also applies to color blindness, and while it may not be illegal to ask in non-work contexts, it is definitely personally intrusive.&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>However, if people volunteer to help you with your testing and they offer up that information about themselves, that’s a different matter. It may also be a good idea to reach out to some companies that specialize in user testing with people with disabilities.&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Companies such as <a href=\"https://www.levelaccess.com/\">Level Access</a> help organizations incorporate accessibility into their daily workflows. They offer tailored training, auditing services, document remediation, and other services to help organizations achieve—and maintain—compliance with <a href=\"https://section508.gov\">Section 508</a> and the WCAG.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Test with colorblind simulators AND colorblind users</h3> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Don’t rely on colorblind simulators alone. I could write an essay about this topic. Those simulators are not accurate enough to give you a proper understanding of color vision deficiencies.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Seek out first-hand perspectives&nbsp;</h3> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Actually speak to someone who has a color vision deficiency to get their perspective, and listen with an open mind. I can’t recommend this enough. There is no better way to get an understanding of what it’s like to live with a CVD than to hear about it first hand.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Stand up for coworkers and users</h3> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Don’t make light of color vision deficiencies. It’s difficult enough living with it, let alone being an artist with it or trying to make sense of information you literally can’t see.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading --> \n<h2>Tools and further reading</h2> \n<!-- /wp:heading --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Accounts on Twitter&nbsp;</h3> \n<!-- /wp:heading --> \n<!-- wp:list --> \n<ul>\n <li><a href=\"https://twitter.com/colourblindorg\">@colourblindorg</a></li>\n <li><a href=\"https://twitter.com/WeAreColorblind\">@wearecolorblind</a></li>\n <li><a href=\"https://twitter.com/WeTheColorBlind\">@WeTheColorBlind</a></li>\n</ul> \n<!-- /wp:list --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Usability and UX</h3> \n<!-- /wp:heading --> \n<!-- wp:list --> \n<ul>\n <li><a href=\"https://uxmovement.com/buttons/the-myths-of-color-contrast-accessibility/\"><em>The Myths of Color Contrast Accessibility</em></a> — UX Movement</li>\n <li><a href=\"https://wearecolorblind.com/resources/collection/resources-for-designing-for-the-colorblind/\"><em>Resources for Designing for the Colorblind</em></a> — We Are Colorblind</li>\n <li><a href=\"https://webaim.org/projects/million/\"><em>The WebAIM Million</em></a></li>\n <li><a href=\"https://webaim.org/resources/contrastchecker/\">WebAIM Contrast Checker</a></li>\n</ul> \n<!-- /wp:list --> \n<!-- wp:heading {\"level\":3} --> \n<h3>Organizational resources</h3> \n<!-- /wp:heading --> \n<!-- wp:list --> \n<ul>\n <li><a href=\"https://www.colour-blindness.com/general/how-it-works-science/\">Color-Blindness.com</a>&nbsp;</li>\n <li><a href=\"http://www.colourblindawareness.org/\">ColourBlindAwareness.org</a></li>\n <li><a href=\"https://ourworldindata.org/\">OurWorldinData.org</a></li>\n</ul> \n<!-- /wp:list --> \n<!-- wp:heading {\"level\":3} --> \n<h3 id=\"colorperception\">Color perception and the brain</h3> \n<!-- /wp:heading --> \n<!-- wp:list --> \n<ul>\n <li><a href=\"https://en.wikipedia.org/wiki/Chromatic_adaptation\">Chromatic adaptation</a></li>\n <li><a href=\"https://en.wikipedia.org/wiki/Color_constancy\">Color constancy</a>&nbsp;</li>\n <li><a href=\"https://jeb.biologists.org/content/209/5/781\">Nocturnal color vision</a>&nbsp;</li>\n <li><a href=\"https://en.wikipedia.org/wiki/Spectral_color\">Spectral color</a></li>\n</ul> \n<!-- /wp:list --> \n<!-- wp:heading --> \n<h2>Continuing to make progress</h2> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Loving design is something that has always come naturally to me; I didn’t have to force myself down this path. Growing up, I didn’t know that I wanted the exact job that I have, but by the time I graduated high school in 2000, I knew that I wanted to combine my passions for art and computers.&nbsp;</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>I’m thankful to have been around long enough to have watched the web community evolve into what it is today. I’m thankful for all the tools that exist to help me do what I love in spite of my color vision deficiency. I’m thankful that color blindness is recognized by the WCAG, and that considerations are made for people living with color vision differences.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>There is a lot of information out there, and I recommend that people go out and read as much as they can on the topic. If you’re on Twitter, then follow people who have a CVD, or the organizations that deal with it in various ways. There is so much knowledge that can be gained by doing some simple research and adding it into your workflow.</p> \n<!-- /wp:paragraph -->","descriptionType":"text/html","publishedDate":"Thu, 11 Jun 2020 14:31:12 +0000","feedId":25,"bgimg":"https://alistapart.com/wp-content/uploads/2020/06/light-spectrum-cone-wavelength-response-600x423-4.jpg","linkMd5":"71a63f2e71642b2d4aa2daa53190879b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn41@2020_2/2021/04/10/03-45-56-030_3ec7a1493cb3393c.webp","destWidth":600,"destHeight":423,"sourceBytes":70419,"destBytes":25248,"author":"\n\t\t\t\tby \t\t\t\t\t","articleImgCdnMap":{"https://alistapart.com/wp-content/uploads/2020/06/light-spectrum-cone-wavelength-response-600x423-4.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn41@2020_2/2021/04/10/03-45-56-030_3ec7a1493cb3393c.webp"},"publishedOrCreatedDate":1618026345179},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tThe Never-Ending Job of Selling Design Systems\t\t\t\t","link":"https://alistapart.com/article/selling-design-systems/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>I’m willing to bet that you probably didn’t start your web career because you wanted to be a politician or a salesperson. But here’s the cold, hard truth, friend: if you want to work on design systems, you don’t have a choice. Someone has to pay for your time, and that means someone has to sell what you do to an audience that speaks value in an entirely different language.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>It’s not exactly easy to connect the benefits of a design system directly to revenue. With an ecomm site, you can add a feature and measure the impact. With other conversion-based digital experiences, if your work is good, your customers will convert more. But because a design system is (usually) an internal tool, it’s just harder to connect those dots.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>This article boils down the methods I’ve put into practice convincing executives not just to fund the initial push of design system work, but to <em>keep funding it</em>. I’ll share how I’ve adjusted the language I use to describe common design system benefits, allowing me to more clearly communicate with decision makers.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Know your audience</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>In my experience, design systems can be owned by information technology teams, marketing and communications departments, or (best case scenario) cross-disciplinary teams that bring many specialists together. The first thing you need to do is determine where the system lives, as in which department owns and cares for it.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>If it’s part of IT, for example, you need to think like a CIO or an IT Director and speak to their objectives and values. These leaders are typically more <em>internally</em> focused; they’ll filter the value of the design system in terms of the employees of the company. In contrast, if the system belongs to Marketing, put on your CMO or Marketing Director hat. Marketing teams are often <em>externally</em> focused; they think in terms of B2B audiences and end users.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The way organizations structure the ownership of a design system can be more complex, but let’s use these two paths (internal vs external) as frameworks for building a persuasive case for those owners.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Internal-orientation motivators</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><a href=\"https://designsystemssurvey.seesparkbox.com/2020/\">Based on the research we’ve done since 2018</a>, there are three very specific internal motivators for having a design system:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Efficiency</li><li>Onboarding</li><li>Scale.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Efficiency benefit</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Design systems allow for the rapid prototyping of new ideas using existing, production-ready components. They allow teams to reuse design and code, and they allow individuals to focus their creative energy on new problems instead of wasting it on old ones. Executives and decision-makers may abstractly understand all that, but you need to be able to tell them what it will take to realize the efficiency benefit.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>There’s a theoretical maximum to how productive a team can be. When you talk about a design system creating more efficiency in your processes, you’re really talking about raising the ceiling on that max. As happens with so many things in life, though, that comes with a trade-off. Early on, while a team is actually building the system, they won’t be as productive on the rest of their work.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The efficiency curve looks like this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172722,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2021/02/ala-ds-efficiency-1-e1612891151253.png?w=960\" alt=\"The Design System Efficiency Curve. Line graph illustrating the curvilinear relationship of productivity over time in terms of overall efficiency, in situations of transition from having no design system in place through in-process set up of the system, to eventually having an established design system. Productivity is represented on the y-axis and Time on the x-axis. Starting at 0,0 productivity dips down as the team diverts resources to set up the system, but eventually surpasses standard productivity once the system is in place.\" class=\"wp-image-7172722\" /><figcaption><em><strong>Figure 1.</strong> With Productivity on the y-axis and Time on the x-axis, the Design System Efficiency Curve dips down at the start as the team ramps up on the system, but eventually surpasses standard productivity once the system is in place.</em></figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>If you’re talking to an executive, it’s important to acknowledge this dip in productivity.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Spend some time working out these specific calculations for your organization. For example, you might need four team members for three months to reach a point where the system will save everyone on the team approximately two hours per week. You’re candidly acknowledging the necessary investment while demonstrating the eventual benefits. And make sure to mention that the productivity benefits will continue indefinitely! The math will almost always end up on your side.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Another critical point to raise is that simply having a design system has a cumulative effect on the efficiency of your teams. Since the system is an internal tool that can be used 1) across multiple products or experiences, 2) by many teams throughout the organization, and 3) in many phases of the product design and development process, you are gaining efficiencies on many levels.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The team working on in-store kiosks can build their interface with a well-tested set of components. Your UX people can use the system to prototype and test with production-ready code. The people responsible for grooming the backlog know there is a stable pattern library upon which they are building new features or fixing old ones. Anyone looking for answers to what, why, or how your organization designs and builds products will find those answers in the living system.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The efficiency at each of these (and many other) decision points is how we can raise the ceiling on our <em>total</em> possible efficiency. How this plays out is very different in each organization. I’m here to tell you that part of the work is thinking about how a design system will impact <em>every</em> part of your process—not just design or development.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4>What to measure</h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><strong><em>Action: Measure the cost of productivity with and without a design system.</em></strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>If you aren’t already, start measuring how productive your team is now. The easiest way to do this is to break your team’s work down into measurable cycles. Once you have a rough idea of how much you can get done in a cycle of work, you’ll be able to compare your efficiency before the system was in place with your efficiency after. This kind of measurable benefit will speak volumes to your executive team.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Onboarding benefits</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Growth is expensive. When you hire a new team member, you don’t just supply a salary and benefits. You need a computer, a desk, a chair, accounts to all the software/services…the list goes on. And all these expenses hit before your new employee is a fully contributing member of the team. You won’t start to recoup your investment for a few months, at least.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Design systems can reduce the time it takes your new hire to become a productive contributor. Once you have a healthy design system in place, you’re able to provide an employee with a clearly-defined and effective toolset that is well-documented and can be applied across multiple initiatives. More specifically, assigning new hires to start out working on the design system team will allow them to quickly learn how your organization designs and builds digital products.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172723,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2021/02/ala-ds-onboarding-e1612891563971.png?w=960\" alt=\"Onboarding Model. Diagram illustrating the movement and eventual cycling (depicted by arrows pointing to the right) of individuals in a &#34;Hiring Pool&#34;(represented by a cluster of dots on the left of the graphic) into the DS Team (design system team), represented by a diamond shape in the center of the graphic, then exiting the DS Team to join Other Teams (smaller diamond shapes on the right of the graphic), and finally, back into the DS Team (dashed-line arrow looping below and to the left, back into the DS Team diamond shape).\" class=\"wp-image-7172723\" /><figcaption><em><strong>Figure 2.</strong> A Model for Onboarding</em>. <em>As you bring people into your organization from your hiring pool, consider having them start on your design system team and then rotate out onto other teams. As you grow, folks who haven’t had a turn on the system team can rotate in as well.</em><br><br></figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>On the left in <strong>Fig. 2</strong>, you have a pool of potential employees. As you hire individuals, you can bring them into the design system team, where they’ll gain a deep understanding of how your organization builds digital products. Once they’re up to speed, you can seamlessly move them to another product, discipline, or feature-based team where they’ll take this knowledge and hit the ground running. Additionally, your organization can benefit from having all team members (even those who have been around for a while) periodically work a rotation with the design system team. This continuously spreads the design system<em> </em>expertise around the organization and makes it part of the fabric of how you work.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>And don’t think this approach is only valuable for designers or developers. A healthy design system team comprises people from many disciplines. In addition to team member rotation, building in time to mentor folks from many different disciplines can prove tremendously valuable in the long run. A highly functional design system team can serve as an ideal model of workflow and can educate many team members dispersed throughout the organization about how to approach their work.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Believe me, executives’ eyes will light up when you share how a design system can ensure high productivity in record time. As a caution, though, rotating people in and out of any team <em>too</em> often can leave them feeling exhausted and can make it hard for them to be productive. Remember, you have the flexibility to scale this to a level that makes sense for your team. Be smart and use this approach as it works in your context.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4>What to measure</h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><strong><em>Action: Measure the time it takes for teams to become productive.</em></strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As new people are added, a team typically returns to the “forming” stage of <a href=\"https://en.wikipedia.org/wiki/Tuckman%27s_stages_of_group_development\">Tuckman’s stages of group development</a>. This is part of the reason that growth is expensive. But with a design system in place and a healthy culture, you can reduce the time it takes the team to get back to “performing.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Scale benefits</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Traditionally, you have to hire more people to scale productivity. A design system enables a team to accomplish more with less. <a href=\"https://designsystemssurvey.seesparkbox.com/2019/#table3a\">Reusability is a major reason</a> teams choose to work in a more systematic way. Small teams with an effective system can design, build, and maintain hundreds of sites each year. They’d never come close without a design system to work with.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>UX Pin has a <a href=\"https://www.uxpin.com/create-design-system-guide/\">design system guide</a> that starts by acknowledging something that most of us ignore.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>Scaling design through hiring, without putting standards in place, is a myth. With every new hire, new ideas for color palettes, typography and patterns appear in the product, growing the inconsistency and increasing the maintenance cost. Every new hire increases the design entropy<em>.</em></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>A well-executed system allows a team to scale while keeping design entropy at bay.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4>What to measure</h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><strong><em>Action: Compare the amount of people on your team to the amount of work they are accomplishing.</em></strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Adding people to a team doesn’t necessarily mean they’ll get more work done faster. This is well-documented in historical software books like Fred Brooks’ <a href=\"https://en.wikipedia.org/wiki/The_Mythical_Man-Month#The_mythical_man-month\"><em>The Mythical Man-Month</em></a>. Eventually, you will have to investigate changing other factors (besides just adding more people) to increase productivity. A good design system can be one of these factors that increases the productivity of the team members you already have. It’s this change in productivity over scale that you need to measure and compare in order to prove value for this benefit.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>External-orientation motivators</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Let’s shift to thinking about the benefits that a design system offers to end-users. The four primary external motivators are:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Consistency</li><li>Trust</li><li>Accessibility</li><li>Usability.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Consistency and Trust benefits</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Consistency is widely assumed to be the primary benefit of a design system. We identify dozens of button designs, color variations, and inconsistent typefaces in hopes of convincing higher-ups to allow us to build a system to bring it all in line. After working on design systems for the last five or six years, I can say with confidence that a design system will not make your product more consistent.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You see, us web designers and developers are very scrappy. We can create the most inconsistent experiences within even the most rigid systems. It’s not the system itself that creates consistency, it’s the culture of an organization. It’s all of the unspoken expectations—the filters through which we make decisions—that give us the confidence to pause and ask if the work we’re doing fits <em>culturally</em> with the product we’re building. A good CMO knows this, and they won’t buy the oversimplified idea that a design system will solve the rampant inconsistencies in our work.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Because of this, these executives often have a different (and easier to measure) question: “Does it convert?” This perspective and line of conversation is not an ideal approach. Believe me, we can create experiences that convert but are not good for our users or our brands. Given this, a conversation with your CMO might go better if you <a href=\"https://alistapart.com/article/being-real-builds-trust/\">shift the language to talk about trust</a> instead.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>With inconsistent experiences, your <a href=\"https://www.nngroup.com/articles/omnichannel-consistency/\">users subconsciously lose trust</a> in your brand. They’ve been conditioned to expect a certain kind of user experience, and that’s what they should be given, even across multiple websites or products. Vanessa Mitchell wrote about <a href=\"https://www.cmo.com.au/article/642102/why-customer-trust-more-vital-brand-survival-than-it-ever-been/\">why brand trust is more vital to survival now</a> than it’s ever been:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>“Brand trust as an ‘“insurance policy”’ against future issues is not a new concept. Most organizations know trust bestowed by the consumer can not only make or break a business, it can also ensure you survive a problem in the future. But few achieve brand trust adequately, preferring to pay lip service rather than delve into what it really means: Authentically caring about customers and their needs.”</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>When your customer is using your product to accomplish a very specific task, <em>that one task is the only thing that matters to them.</em> Creating a consistent experience that works for everyone and allows them to accomplish their goals <em>is</em> building trust. CMOs need to understand how design systems empower trusted relationships so those relationships contribute to your bottom line.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4>What to measure</h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><strong><em>Action: Measure the engagement of your customers.</em></strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Customer engagement can be measured with web analytics platforms. What you’re looking for will vary depending on the context for your organization, but trends in things like time on site, visit frequency, subscription rates, and bounce rates will give you meaningful data to work with. It’s also very common to track customer engagement with metrics like <a href=\"https://en.wikipedia.org/wiki/Net_Promoter\">Net Promoter Score</a> (NPS) by asking simple questions of customers repeatedly over time. There are so many ways to structure tests of the usability of your work, so I’d encourage you to loop in the UX team to help you find tests that will demonstrate the user engagement success of the design system effort.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Accessibility benefits</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Accessibility can be a tremendous benefit of a design system. Do the work properly the first time, then allow that beautifully accessible component to serve your customers each time it is used. Certainly, it’s not a fail-safe measure—there is still integration-level testing to ensure component accessibility translates to the larger experience—but ensuring the accessibility of individual components will result in more accessible experiences. And integrating good accessibility practices into your system means more folks within your organization are aligned with this important work.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You might find at first that marketers aren’t all that interested in accessibility, but they should be. Did you know that there were 814 <a href=\"https://blog.usablenet.com/2018-ada-web-accessibility-lawsuit-recap-report\">web accessibility related lawsuits</a> (just in the US!) in 2017? Did you know that there were almost 2,300 in 2018? That’s a <strong>181% increase</strong>. <a href=\"https://www.census.gov/newsroom/releases/archives/miscellaneous/cb12-134.html\">This must be a priority</a>. First, because it’s the right thing to do. Second, because it’s important to the sustainability of the business. A design system can help you address this issue, <em>and</em> it can help you maintain compliance as you grow. This is the kind of message that resonates with leadership.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4>What to Measure</h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><strong><em>Action: Measure your compliance to accessibility guidelines over time.</em></strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Many organizations have a regular cadence of accessibility audits across their digital properties. While some of this can be automated, there’s always a manual aspect needed to truly evaluate the accessibility of a site or application. Tracking how often regressions occur in the properties served by your design system can be a great way to demonstrate the value that system is bringing to the organization.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Usability benefits</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>As with so many aspects of a design system, usability benefits come from repetition. Design system pros often hope to focus energy on solving a usability challenge <em>only once</em> before moving on to the next problem. This absolutely is a benefit of a well-constructed system. It’s also very true that “familiarity breeds usability.” Your customers will learn to use your products and begin to subconsciously rely on that familiarity with the experience to lower their cognitive load. This should be just as important to our executive leadership as it is to those of us who are practitioners.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You can also reframe this benefit in the context of conversion. Helping our users accomplish their goals is helping them convert. They are there to use your product. So make it easy to do, and they’ll do it more. This is what businesses need and what executives want to see—improving the business by helping customers. As mentioned above, we want to make sure we’re doing this in healthy ways for both our users and our brands.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4>What to Measure</h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><strong><em>Action: This might be the easiest one—measure conversion!</em></strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Running usability studies will help to validate and measure the success of your work with the system, which many organizations are already doing. Your goal should be to validate that components are usable, which will allow you to build a culture of user-centered design. Setting the bar for what it takes to evolve the system—such as requiring that changes are tested with real users—introduces this idea into the core of all your processes, where it should be.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Sell investment, not cost</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Knowing how and which internal and external motivators to touch on during conversations is significant, but there’s one last thing I’d like to mention, and it has to do with your way of thinking. A major factor in many of these conversations lies simply in how we frame things: move the conversation about the cost of building a design system into a conversation about the present and residual benefits of the investment you’re making. It’s easy to view the time and effort required to build a system as an investment in ultimately delivering high-quality digital products. But leadership will be more willing to consider realistic budgets and timelines if you talk about it like a long-term investment that has benefits on multiple levels throughout the business. This also leaves you with the ability to regularly remind them that this product will never be done—it will require ongoing funding and support.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>A design system project will not succeed if you don’t convince others that it’s the right thing to do. Successful, sustainable design systems start with the people, so you have to begin by building consensus. Building a design system means you’re asking everyone to change how they work—everyone has to be on board.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>This concept of collaboration is so core to the work of design systems that it led all of us here at Sparkbox to look for opportunities to better understand how teams around the world are designing, building, and using a more systematic approach to digital product design. For the last three years, we’ve been gathering and sharing data in the form of the <a href=\"https://designsystemssurvey.seesparkbox.com/2020/\">Design Systems Survey</a> and the <a href=\"https://seesparkbox.com/foundry/calendar_for_design_system_support_and_sucessful_design_systems\">Design System Calendar</a>. If you are considering a design system for your organization, or if you work with a design system team, the survey and calendar may be helpful in your quest to build better products.</p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 11 Feb 2021 15:00:00 +0000","feedId":25,"bgimg":"https://alistapart.com/wp-content/uploads/2021/02/ala-ds-efficiency-1-e1612891151253.png?w=960","linkMd5":"b03d88c8229a83446b494fe46a109b66","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn26@2020_5/2021/04/10/03-45-55-888_44fcf71fcfe090e9.webp","destWidth":960,"destHeight":540,"sourceBytes":34212,"destBytes":34212,"author":"\n\t\t\t\tby \t\t\t\t\t","articleImgCdnMap":{"https://alistapart.com/wp-content/uploads/2021/02/ala-ds-efficiency-1-e1612891151253.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn26@2020_5/2021/04/10/03-45-55-888_44fcf71fcfe090e9.webp","https://alistapart.com/wp-content/uploads/2021/02/ala-ds-onboarding-e1612891563971.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn54@2020_3/2021/04/10/03-46-15-932_7f04ce982586ac3d.webp"},"publishedOrCreatedDate":1618026345124},{"createdTime":"2021-04-10 11:45:54","updatedTime":"2021-04-10 11:45:54","title":"\n\t\t\t\t\tNavigating the Awkward: A Framework for Design Conversations\t\t\t\t","link":"https://alistapart.com/article/navigating-the-awkward/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>We’ve all been there. A client or coworker shows us this amazing thing they (and maybe their entire team) have worked on for hours or weeks. They are so proud of it. It’s new or maybe it just looks new. They may or may not ask you what you think—but you’re there to experience it. And your brain quietly screams.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As an experienced designer, you often have an intuitive reaction and can quickly spot bad designs; they may be visually incongruent, poorly structured, confusing, lack social awareness, or look like they are trying too hard.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>If your initial response is so negative that it slips through into your expression or voice or body language, it can completely sabotage any possibility of buy-in. And, far more seriously, it can ruin the relationship of trust and collaboration you’re building with that person.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Reflecting on my own successes and failures—and the experiences of others—I’ve put together a conversational framework for navigating these all-too-frequent design interactions, whether you’re an in-house designer, a consultant, or an agency employee.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Be a relationship steward</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>“Getting things done” is often accomplished at the expense of relationships and sustainable design solutions. As in, the “We need to manage this situation” approach (emphasis on the “manage”) quite often looks more immediately effective on paper than the “We need to be productive while stewarding this project for this partner” mindset.&#160;&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The thing is, a design stewardship mindset to working with clients/partners is a better bet; thinking beyond buy-in or proving your point or getting your own way pays off in both an immediate situation, and long-term, for both sides.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I’ve had plenty of those “design conversations gone wrong” over the years, and have noticed a common set of whys and hows behind the scenes. To help me consciously factor them in and stay focused, I’ve developed this simple conversational framework:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Element 1:</strong> Move from selling to helping.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Element 2:</strong> Question your triggers and explore the problem.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Element 3:</strong> Map the problem to the client’s values.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Element 4:</strong> Formulate questions for the client based on values.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Element 5:</strong> Listen and be prepared to challenge your assumptions.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Element 6:</strong> Reflect back on the problem and share recommendations with the client.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>We’re going to explore all that below, but here’s a <a href=\"https://docs.google.com/document/d/1txBFHwqyhtrevXZYCaUk4P5UNFqpc2au9sTUGTdjkWA/edit?usp=sharing\">quick reference version of conversational frameworks</a> you can look at as we go.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Healthy self-talk</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>When confronted with a bad design, there are some common reactions a designer might have—what we often catch ourselves saying in our head (hopefully!) or directly to our clients. (I need to preface by saying I borrowed some of these from a viral “Hi, I’m a ...you might know me from my greatest hits...” on Twitter.)</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>You are not your users!</li><li>Blindly following another organization’s best practices is not going to guarantee successful conversion for your business.</li><li>Have they ever heard there’s such a thing as Calls to Action?</li><li>Really, you couldn’t have bothered to tell the user ahead of time how many steps this process involves?</li><li>No, a chatbot won’t magically fix your horrible content!</li><li>Is this clipart?!!</li><li>Don’t use your org chart for navigation...not even on your intranet.</li><li>You can’t mix apples and oranges.</li><li>Views do not equal engagement metrics!</li><li>Stop celebrating outputs instead of outcomes!</li><li>Diversity is more than just white women.</li><li>You’re talking about implementation details, but I still don’t even know what problem we’re trying to solve.</li><li>Not another FAQ!</li><li>Does accessibility mean anything to these folks?</li><li>We don’t need 15 unique designs for this button. There is a style guide for that!</li><li>Good luck with your SEO efforts; keyword stuffing won’t get you ranking!</li><li>Can we start designing experiences instead of pages and features?</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>I am sure you can relate. While there’s nothing inherently wrong about these statements—and there are times when it is worth being upfront and saying them as-is—we also know they might be ineffective, or worse yet, perceived as confrontational.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Someone worked hard on this. They put a lot of thought into it. They love it. They want this to be the solution.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>So, how can we avoid defensiveness? How do we engage the other person in a meaningful conversation that comes from a place of empathy instead of arrogant expertise?&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In describing “<a href=\"https://www.ideou.com/blogs/inspiration/how-shifting-your-mindset-can-ignite-transformation\">How Shifting Your Mindset Can Ignite Transformation</a>,” Keith Yamashita points out that “each of us comes into the world curious, open, wanting to bond and wanting to have great connections with other people,” yet “our training, societal norms, school, and early jobs beat all of that out of us.” Self-awareness and inner reflection are essential to helping us reconnect with other humans. <a href=\"https://www.ideo.com/blog/5-ways-mindfulness-can-make-you-a-better-designer\">Practicing mindfulness</a> is a great way to develop and enhance these skills.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>It’s not me, it’s you (Element 1)</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>First step to getting your message across is shifting your position from “How do I share <em>my</em> perspective” to “How can I help my (clients/partners/coworkers) improve their current product?”&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Make room for the needs of others and create some distance from your ego and. In particular, try to refrain from saying what you find so intuitive, as well as delay providing your opinion.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Blair Enns, who writes about the <a href=\"https://www.winwithoutpitching.com/the-vulnerable-expert/\">importance of being a vulnerable expert</a>, says it beautifully (emphasis is mine):</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>You can be slick or the client can be slick. It’s better if it’s the client.</li><li>You can fumble and be awkward in the conversation or the client can fumble and be awkward. It’s better you are the awkward one.</li><li>You can have all the answers to the client’s questions or the client can have all the answers to your questions. <strong>It’s better to ask the questions.</strong> (Nobody has all the answers.)</li><li>Those who are not trained in selling often think of the cliches and think they must be seen to be in control, to have the answers, to have the polish. The opposite however is better. <strong>You can still be the expert by showing vulnerability.</strong> You don’t need to manufacture answers you do not have. It’s okay to say “let me think about that.”</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Allowing others to be in the spotlight may take some practice and requires you to <a href=\"https://www.ideou.com/blogs/inspiration/when-are-you-at-your-best-as-a-leader\">be self-aware</a>. When you find yourself triggered and itching to comment or to disagree with something, try the following exercise:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol><li><strong>Pause.</strong></li><li><strong>Acknowledge</strong> that you are frustrated and want to jump in.</li><li><strong>Invite</strong> yourself to be curious about the trigger instead of judging yourself or others.&#160;</li></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>The more you practice this kind of self-awareness, the more you’ll notice your triggers and change how you respond to them. This quick mental exercise gives you the space to make an intentional choice. For similar practical strategies, take a look at “<a href=\"https://www.ideou.com/blogs/inspiration/how-to-turn-empathy-into-your-secret-strength\">How to Turn Empathy into Your Secret Strength</a>.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Winning the moment isn’t a win (Element 2)</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>One potential trigger may be rooted in your mindset: are you more focused on trying to get “buy-in,” or on building positive, lasting relationships to support ongoing collaboration and stewardship?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>To do this, you need to first ask yourself some questions to get to the bottom of what your impulse is trying to communicate. You then need to <a href=\"https://overthefence.com.de/manifesto/?lang=en\">do some slow thinking</a> and identify a question that will engage your partner in a conversation.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Here’s a hypothetical situation to explore what this might look like.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You’re shown a very clunky, centralized system designed so users can register for recreational activities around the city. The client wants your team to create a chatbot to support it.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Your internal reaction: </strong>“Instead of pages and features, can we start designing experiences?”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3><strong>Analyzing your reaction:</strong></h3>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4><strong><em>Why?</em></strong></h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>When we focus on pages and features like chatbot solutions, we typically aren’t seeing the whole picture.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4><strong><em>Why?</em></strong></h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Organizations can get distracted by a shiny opportunity or single perceived problem in a product, but these can frequently overshadow where real impact can be made.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4><strong><em>Why?</em></strong></h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>The <a href=\"https://www.interaction-design.org/literature/article/the-pareto-principle-and-your-user-experience-work\">80/20 Pareto principle</a> has a strong pull for many organizations.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4><strong><em>Why?</em></strong></h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Organizations want solutions that take minimal perceived time and effort.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4><strong><em>Why?</em></strong></h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Organizations want to save money/go with the cheaper option.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong><em>So what?</em></strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As a result, organizations risk prioritizing what seems to be the easy thing at the expense of other, more user-friendly and profitable solutions.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>This example is simplistic, but notice that by asking a few sets of questions, we were able to move from a reactive statement to a reason why something may not be working—a reason that’s a lot less emotional and more factual. You could use a modified <a href=\"https://www.mindtools.com/pages/article/newTMC_5W.htm\">5 Whys approach</a> like this, or some other questioning method that suits the situation.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>If you dissect our example more closely, you’ll see that unlike the initial reaction, which speaks more to design elements like pages and features, we are now talking about more broadly relatable topics across business lines, such as cost savings or risk assessment. Structuring your conversation around topics most familiar to the other person and reflecting their core values can help us be more successful in improving their product.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Ask with values in mind, close with opportunities (Element 3)</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>I recently attended an excellent event on “Speaking Truth to Power,” presented by the Canada School of Public Service. The keynote speaker, <a href=\"https://twitter.com/takisarantakis?lang=en\">Taki Sarantakis</a>, shared his strategies for how to be an effective expert and advisor, such as:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Be credible and build trust</li><li>Have humility and empathy</li><li>Make sure that the person you are advising understands that the advice they do not want to hear is for their benefit.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>He also broke down a few concepts that could be a barrier to implementing this advice. If we see ourselves as “speaking truth to power” we are likely making a values judgement. We believe and project to others that <strong>we have all truth and no power</strong>, while the person on the other end <strong>has all the power, and no truth</strong>. It’s an arrogant position that weakens our ability to make any productive progress. Framing our interactions as a battle will likely result in a lose-lose situation.&#160;&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Sarantakis then presents an example conversation that is rooted in credibility and humility, and comes from a place of care. He underscores that any advice you choose to share has to absolutely come from a place of concern for the person making a final decision, and not from a desire to show off and say so on record. It roughly looks like this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Here is what you need to know...</li><li>You know X, but you may not know Y and Z.</li><li>I know this is something you may not want to hear, but I need to say it because<strong> it is important that you know this</strong>.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>As part of the panel discussion that followed the keynote, <a href=\"https://twitter.com/relishing?lang=en\">Kym Shumsky</a>, who has lots of experience advising senior leaders, reinforced Sarantakis points by stating that valuing truth, knowledge, and accuracy over relationship-building can be detrimental. Thinking back on my personal experiences, I fully agree.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>So how do we build trust, credibility, and share from a place of care? Steve Bryant, Head of Content at <a href=\"https://articlegroup.com/\">Article Group</a>, has some thought-provoking words on this in his article “<a href=\"https://medium.com/article-group/make-relationships-not-things-4c20df2fb249\">Make relationships, not things</a>”:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>Relationships are based on trust. Trust takes time and honesty. You can’t just create a pile of content and be done with it. You can’t “thing” your way to people trusting you.</em></p><p><em>Which is to say: the question isn’t what content to create.</em></p><p><em>The question isn’t how to create that content.</em></p><p><em>The question is why do you care about the people you’re creating the content for? What makes them special? What kind of relationship do you want to have?</em></p><p><em>How do you want them to feel?</em></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:heading -->\n<h2>Translating core values into specific needs (Element 4)</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Going back to the exercises we just explored and what we think could be the source of the problem, it’s time to start moving backward from the core values to specific design characteristics that need to be addressed.&#160;&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You have to always start the conversation as a set of questions. Beginning with questions allows you to set aside the expert hat, <a href=\"https://hbr.org/2018/09/curiosity\">be curious</a>, and let the client share their experiences. It shows them you care and are there to <a href=\"https://www.ideo.com/blog/4-exercises-that-prove-listening-matters\">listen generously</a>.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Build rapport, be present, and be there to listen (Element 5)</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Erika Hall offers timeless advice about the need to build rapport and understand our partners in her article “<a href=\"https://medium.com/mule-design/everyday-empathy-6a475e03fd81\">Everyday Empathy</a>”:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>And as social science shows, trying to bridge the gap with facts will never change anyone’s mind. The key is to value — truly value — and reflect the perspective of the people you want to influence. [...] Attention is a gift beyond measure.</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>A great bit of advice on “being present” rather than “presenting” on a topic is offered by Blair Enns (author of <em>The Win Without Pitching Manifesto</em>) in the episode “<a href=\"https://www.winwithoutpitching.com/replacing-presentations/\">Replacing Presentations with Conversations</a>.” Being present also means being vulnerable and open to discovering something new that might change your initial reaction.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>And then be prepared to truly listen, not convince. Sarah Richards points out how important it is to <a href=\"https://gathercontent.com/blog/secret-effective-content-strategy-listening\">understand the different mental models that partners bring to the table</a> and work together to form new ones to accomplish common goals:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>How many times have you said you are going to talk to someone who is blocking you? Now count how many times have you said you are going to listen to someone who is blocking you? When we have someone in our organisation who disagrees with us, we go to see if we can convince someone that our way of thinking, our way of doing things, is the best way of doing it.</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>Here is what a conversation relating to “Can we start designing experiences instead of pages and features?”<strong> </strong>might look like, if we follow this approach:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>You: </strong><em>What do you hope to accomplish with a chatbot?</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Partner:</strong> We want people to get answers to their questions as quickly as possible, so they can register and pay for local recreation activities of their choice faster. We live in a beautiful city and it’s a pity when residents and visitors can’t take advantage of everything it has to offer.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>You:</strong> <em>What have you heard from the people who experienced barriers to quickly registering and paying?</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Partner:</strong> They complain that they can’t easily find activities in community centers closest to them or that there is no way for them to see all current and upcoming classes around the city at a glance, or that additional information about different activities is not provided within the system and they often have to look up events or class instructors separately to find more information on other websites. They also are not able to browse all activities by type of recreation, like “nature” activities, which might include hiking, city tours, birdwatching, garden events, and festivals. They often do not know what terminology to use to search for events and activities, so they say it is difficult to find things they already do not know about.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>You:</strong> <em>How do you think this makes them feel?</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Partner:</strong> They say this frustrates them, as information on other websites might differ from the information in our system and they end up wasting their time guessing which one is correct and up-to-date. They then end up having to call the community center or organization providing an event for more information, to figure out if it is a good fit, before registering and paying; which significantly delays the process.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I think you see where this is going.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Here are a few more follow-up questions:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Have you tried registering for an activity using the system? How did you feel/what did you experience?&#160;</li><li>What would you like people using your system to feel/experience?</li><li>You’ve mentioned a number of barriers that people experience. How well do you think a chatbot will be able to remove these barriers now?</li><li>What are some of the risks you foresee in trying to solve these problems?</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>At this point, if you hear something that makes you pause and question your assumptions, ask further questions and consider going back to the drawing board. Maybe you need to ask yourself: <a href=\"https://airbnb.design/anotherlens/#answer1\">What are my lenses?</a></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Respond with care and invite collaboration (Element 6)</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>If what you’ve heard confirms your assumptions, you could offer a few concise, summative statements and a recommendation. Whatever you say needs to integrate the vocabulary used by the client (mirroring), to show them that you were listening and critically reflecting on the situation.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Let’s see how that might look:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>“Based on what you’ve shared, it seems that you want to make it quick and easy for anyone in the city to discover, decide on, and pay for a local recreation activity. The experience of the people using the system is very important to you, as you want them to enjoy the city they live in, as well as support the vibrancy of the city economically by registering and paying for local activities.</p><p>If we want to help people enjoy and experience the city through events and activities, we need to make it simple and frictionless for them. The barriers they experience cannot be solved with a chatbot solution because the information people are looking for is often missing and not integrated into the current system in a meaningful way. So the chatbot would not give them the answers they need, creating further frustration.&#160;</p><p>Adding a chatbot also creates an extra layer of complexity. It does not solve the underlying cause of frustration stemming from lack of relevant and integrated information. Instead, it leaves the current experience broken and creates yet another place people need to go to for possible answers.</p><p>It would also be a huge risk and time investment to design a chatbot, as your current content is not structured in a way that would allow us to have useful information extracted.</p><p>Given your time and resource constraints, I would suggest we explore some other solutions together.”&#160;</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:heading -->\n<h2>Framing and reinforcing the conversation</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>To recap, here are the six essential elements of the conversational framework:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Element 1:</strong> Mentally move from how you can share and sell your perspective to how you can help your partner.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Element 2:</strong> Ask yourself probing questions to better understand your reaction to the “bad design” trigger and what is at the core of the problem.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Element 3:</strong> Map the core of the problem to value(s) you can use to begin the conversation with a partner.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Element 4:</strong> Use value(s) identified to formulate and ask questions.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Element 5:</strong> Get ready to truly listen to your partner and be prepared to challenge your assumptions.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Element 6:</strong> Review your responses to probing questions and identify recommendations you can share back with the partner.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>This conversational framework starts with us as individuals, forces us to critically deconstruct our own reactions, then asks us to reframe what we find from a perspective of what matters and is known to our clients. It reminds us that we should learn something in the process by having intentional yet open conversations.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Future of design leadership is stewardship</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>The work we do in the web industry touches people—so we need to be people. We need to be human, <a href=\"https://adamsilver.io/articles/building-trust-as-a-designer/\">build trust</a>, and sustain relationships with our clients and partners. If we aren’t doing a good job there, can we really claim it’s not impinging on our designs and end users?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Our growth as web professionals can’t be limited to technical expertise; design leadership is stewardship. It’s rooted in listen, then respond, in learning how to pause, create space, and get to the root of the problem in a productive and respectful way. We need to learn how to intercept our reactions, so that we can shift how we approach triggering situations, stay still and listen, and open up conversations rife with <a href=\"https://www.boye-co.com/blog/2018/12/4/stewards-over-gatekeepers-three-principles-for-partnerships\">possibilities, not progress suppressors</a>. Guide clients toward better design choices by meeting them in the moment and partnering with them.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In design work, being a steward does not mean that you should push to get your way. Neither does it mean you should indulge clients and create broken or unethical products. Rather, it proposes an attuned way of approaching potentially contentious conversations to arrive at a solid, ethical design. It is about framing the conversation positively and ushering it as a steward, rather than stalling discussion by being the gatekeeper.&#160;</p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 10 Dec 2020 15:00:00 +0000","feedId":25,"bgimg":"","linkMd5":"43ef11fa37707dfe9d4cb672c161d50b","bgimgJsdelivr":"","metaImg":"","author":"\n\t\t\t\tby \t\t\t\t\t","publishedOrCreatedDate":1618026354867},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tMaking Room for Variation\t\t\t\t","link":"https://alistapart.com/article/making-room-for-variation/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>Making a brand feel unified, cohesive, and harmonious while also leaving\nroom for experimentation is a tough balancing act. It’s one of the most\nchallenging aspects of a design system. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Graphic designer and Pentagram partner Paula Scher faced this\nchallenge with the visual identity for the Public Theater in New York. As she\nexplained in a talk at Beyond Tellerrand: </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure class=\"quote\">\n<blockquote>\n<p>I began to realize that if you made everything the same, it\nwas boring after the first year. If you changed it individually for each play,\nthe theater lost recognizability. The thing to do, which I totally got for the\nfirst time after working there at this point for 17 years, is what they needed\nto have were seasons. </p>\n<p>You could take the typography and the color system for the summer festival, the Shakespeare in the Park Festival, and you could begin to translate it into posters by flopping the colors, but using some of the same motifs, and you could create entire seasons out of the graphics. That would become its own standards manual where I have about six different people making these all year (<a href=\"http://bkaprt.com/eds/04-01/\">http://bkaprt.com/eds/04-01/</a>).</p>\n</blockquote>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Scher’s strategy was to retain the Public Theater’s visual language every year, but to vary some of its elements (<strong>Fig 4.1–2</strong>). Colors would be swapped. Text would skew in different directions. New visual motifs would be introduced. The result is that each season coheres in its own way, but so does the identity of the Public Theater as a whole. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172171} -->\n<figure class=\"wp-block-image\"><img src=\"https://alistapart.com/wp-content/uploads/2019/12/4.1-Public-Theater-2014.png?w=960\" alt=\"Sixteen Public Theater posters in black, white, and yellow, with slanted wood type letterforms and high-contrast images of people.\" class=\"wp-image-7172171\"/><figcaption><strong>Fig 4.1</strong>: The posters for the 2014/15 season featured the wood type style the Public Theater is known for, but the typography was skewed. The color palette was restrained to yellow, black, and white, which led to a dynamic look when coupled with the skewed type (http://bkaprt.com/eds/04-02/).</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:image {\"id\":7172172} -->\n<figure class=\"wp-block-image\"><img src=\"https://alistapart.com/wp-content/uploads/2019/12/4.2-Public-Theater-2018.png?w=960\" alt=\"Twelve Public Theater posters using black, white, and pastel colors with wood type letterforms and softer images of people.\" class=\"wp-image-7172172\"/><figcaption><strong>Fig 4.2</strong>: For the 2018 season, the wood type letterforms were extended on a field of gradated color. The grayscale cut-out photos we saw in the 2014/15 season persisted, but this time in lower contrast to fit better with the softer color tones (http://bkaprt.com/eds/04-03/).</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Even the most robust or thoroughly planned systems will need to account for variation at some point. As soon as you release a design system, people will ask you how to deviate from it, and you’ll want to be armed with persuasive answers. In this chapter, I’m going to talk about what variation means for a design system, how to know when you need it, and how to manage it in a scalable way. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>What Is Variation?</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>We’ve spent most of this book talking about the importance of\nunity, cohesion, and harmony in a design system. So why are we talking about\nvariation? Isn’t that at odds with all of the goals we’ve set until now? </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Variation is a deviation from established patterns, and it can\nexist at every level of the system. At the component level, for instance, a\nteam may discover that they need a component to behave in a slightly different\nway; maybe this particular component needs to appear without a photo, for\nexample. At a design-language level, you may have a team that has a different\naudience, so they want to adjust their brand identity to serve that audience\nbetter. You can even have variation at the level of design principles: if a\nteam is working on a product that is functionally different from your core\nproduct, they may need to adjust their principles to suit that context. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>There are three kinds of deviations that come up in a design\nsystem:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li><strong>Unintentional divergence</strong> typically happens when designers can’t find the information they’re looking for. They may not know that a certain solution exists within a system, so they create their own style. Clear, easy-to-find documentation and usage guidelines can help your team avoid unintentional variation.</li><li><strong>Intentional but unnecessary divergence</strong> usually results from designers not wanting to feel constrained by the system, or believing they have a better solution. Making sure your team knows how to push back on and contribute to the system can help mitigate this kind of variation. </li><li><strong>Intentional, meaningful divergence</strong> is the goal of an expressive design system. In this case, the divergence is meaningful because it solves a very specific user problem that no existing pattern solves.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>We want to enable intentional, meaningful variation. To do this, we need to understand the needs and contexts for variation.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Contexts for Variation </h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Every variation we add makes our design system more complicated. Therefore, we need to take care to find the right moments for variation. Three big contextual changes are served by variation: brand, audience, and environment. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Brand</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>If you’re creating a system for multiple brands, each with its own\nbrand language, then your system needs to support variations to reflect those\nbrands. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The key here is to find the common core elements and then set\nsome criteria for how you should deviate. When we were creating the design\nsystem for our websites at Vox Media, we constantly debated which elements\nshould feel more expressive. Should a footer be standardized, or should we\nallow for tons of customization? We went back to our core goals: our users were\nultimately visiting our websites to consume editorial content. So the\nvariations should be in service of the content, writing style, and tone of\nvoice for each brand. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The newsletter modules across Vox Media brands were an example of unnecessary variation. They were consistent in functionality and layout, but had variations in type, color, and visual treatments like borders (<strong>Fig 4.3</strong>). There was quite a bit of custom design within a very small area: Curbed’s newsletter component had a skewed background, for example, while Eater’s had a background image. Because these modules were so consistent in their user goals, we decided to unify their design and create less variation (<strong>Fig 4.4</strong>).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure class=\"wp-block-image\">\n<img src=\"https://alistapart.com/wp-content/uploads/2019/12/4.3a-Curbed-Old-Newsletter.png?w=491\" alt=\"\" class=\"wp-image-7172173\" style=\"float: left; max-width: 33%\">\n<img src=\"https://alistapart.com/wp-content/uploads/2019/12/4.3b-Vox-Old-Newsletter-.png?w=470\" alt=\"\" class=\"wp-image-7172174\" style=\"float: left; max-width:33%\">\n<img src=\"https://alistapart.com/wp-content/uploads/2019/12/4.3c-Eater-Old-Newsletter.png?w=479\" alt=\"\" class=\"wp-image-7172175\" style=\"float: left; max-width:33%\">\n<figcaption style=\"clear:left\"><b>Fig 4.3</b>: Older versions of Vox Media’s newsletter modules contained lots of unnecessary visual variation.</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:image {\"id\":7172176} -->\n<figure class=\"wp-block-image\"><img src=\"https://alistapart.com/wp-content/uploads/2019/12/4.4-Curbed-New-Newsletter.png?w=960\" alt=\"Three examples of newsletter modules, showing the same colors, fonts, and spacing.\" class=\"wp-image-7172176\"/><figcaption>Fig 4.4: The new, unified newsletter modules.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>The unified design cleaned up some technical debt. In the\nprevious design, each newsletter module had CSS overrides to achieve distinct\nstyling. Some modules even had overrides on the primary button color so it\nwould work better with the background color. Little CSS overrides like this add\nup over time. Whenever we released a new change, we’d have to manually update\nthe spots containing CSS overrides. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The streamlined design also placed a more appropriate emphasis on\nthe newsletter module. While important, this module isn’t the star of the page.\nIt doesn’t need loud backgrounds or fancy shapes to command attention,\nespecially since it’s placed around article content. Variation in this module\nwasn’t necessary for expressing the brands.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>On the other hand, consider the variation in Vox Media’s global header components. When we were redesigning the <cite>Verge</cite>, its editorial teams were vocal about wanting more latitude to art-direct the page, guide attention toward big features, and showcase custom illustrations. We addressed this by creating a masthead component (<strong>Fig 4.5</strong>) that sits on top of the global header on homepages. It contains a logo, tagline, date, and customizable background image. Though at the time this was a one-off component, we felt that the variation was valuable because it would strengthen the <cite>Verge</cite>’s brand voice. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure class=\"wp-block-image\"><img src=\"https://alistapart.com/wp-content/uploads/2019/12/4.5a-Verge-Masthead-Pink.jpeg?w=960\" alt=\"Example of the Verge’s masthead component with magenta and blue abstractions.\" class=\"wp-image-7172177\">\n<img src=\"https://alistapart.com/wp-content/uploads/2019/12/4.5b-Verge-Masthead-Orange-City.jpeg?w=960\" alt=\"Example of the Verge’s masthead component with a city skyline in orange tones.\" class=\"wp-image-7172178\">\n<img src=\"https://alistapart.com/wp-content/uploads/2019/12/4.5c-Verge-Masthead-BlackWhite.png?w=960\" alt=\"Example of the Verge’s masthead component in pixelated black and white.\" class=\"wp-image-7172179\">\n<figcaption><b>Fig 4.5:</b> Examples of the <cite>Verge</cite>'s masthead component</figcaption></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>The <cite>Verge</cite> team commissions or makes original art that changes throughout the day. The most exciting part is that they can use the masthead and a one-up hero when they drop a big feature and use these flexible components to art-direct the page (<strong>Fig 4.6</strong>). Soon after launch, the <cite>Verge</cite> masthead even got a Twitter fan account (@VergeTaglines) that tweets every time the image changes. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure class=\"wp-block-image\">\n<img src=\"https://alistapart.com/wp-content/uploads/2019/12/4.6b-Verge-Homepage-Feature-Yellow.png?w=955\" alt=\"Comparison of the Verge’s homepage, changing based on the masthead design and hero photography.\" class=\"wp-image-7172181\" style=\"float:left; max-width:50%;\">\n<img src=\"https://alistapart.com/wp-content/uploads/2019/12/4.6a-Verge-Homepage-Feature-Black.png?w=913\" alt=\"Comparison of the Verge’s homepage, changing based on the masthead design and hero photography.\" class=\"wp-image-7172180\" style=\"float:left; max-width:50%;\">\n<figcaption style=\"clear:left\"><b>Fig 4.6:</b> The <cite>Verge</cite> uses two generic components, the masthead and one-up hero, to art-direct its homepages.</figcaption></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Though this component was built specifically for the <cite>Verge</cite>, it soon gained broader application with other brands that share Vox’s publishing platform, Chorus. The McElroy Family website, for example, needed to convey its sense of humor and Appalachian roots; the masthead component shines with an original illustration featuring an adorable squirrel (<strong>Fig 4.7</strong>). </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172182} -->\n<figure class=\"wp-block-image\"><img src=\"https://alistapart.com/wp-content/uploads/2019/12/4.7-McElroy-Masthead.png?w=960\" alt=\"The masthead component for the McElroy Family, showing a blue navigation bar and a pastel illustration of a forest.\" class=\"wp-image-7172182\"/><figcaption><strong>Fig 4.7:</strong> The McElroy Family site uses the same masthead component as the <em>Verge</em> to display a custom illustration.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:image {\"id\":7172183} -->\n<figure class=\"wp-block-image\"><img src=\"https://alistapart.com/wp-content/uploads/2019/12/4.8-Chicago-Sun-Times-Masthead.png?w=960\" alt=\"The masthead component for the Chicago Sun-Times, showing a white background, stark black text, and a red Subscribe button.\" class=\"wp-image-7172183\"/><figcaption><strong>Fig 4.8:</strong> The same masthead component on the <em>Chicago Sun-Times</em> site.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>The <cite>Chicago Sun-Times</cite>—another Chorus platform site—is very different in content, tone, and audience from The McElroy Family, but the masthead component is just as valuable in conveying the tone of the organization’s high-quality investigative journalism and breaking news coverage (<strong>Fig 4.8</strong>). </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Why did the masthead variation work well while the newsletter variation didn’t? The variations on the newsletter design were purely visual. When we created them, we didn’t have a strategy for how variation should work; instead, we were looking for any opportunity to make the brands feel distinct. The masthead variation, by contrast, tied directly into the brand strategy. Even though it began as a one-off for the <cite>Verge</cite>, it was flexible and purposeful enough to migrate to other brands. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Audience</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>The next contextual variation comes from audience. If your\nproducts serve different audiences who all need different things, then your\nsystem may need to adapt to fit those needs. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>A good example of this is Airbnb’s listing pages. In addition to\ntheir standard listings, they also have Airbnb Plus—one-of-a-kind, high quality\nrentals at higher price points. Audiences booking a Plus listing are probably\nlooking for exceptional quality and attention to detail. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Both Airbnb’s standard listing page and Plus listing page are immediately recognizable as belonging to the same family because they use many consistent elements (<strong>Fig 4.9</strong>). They both use Airbnb’s custom font, Cereal. They both highlight photography. They both use many of the same components, like the date picker. The iconography is the same.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure class=\"wp-block-image\">\n<img src=\"https://alistapart.com/wp-content/uploads/2019/12/4.10-Airbnb-Standard-Listing.png?w=960\" alt=\"Screenshot of AirBnB's standard listing\" class=\"wp-image-7172185\" style=\"max-height: 50vh\">\n<img src=\"https://alistapart.com/wp-content/uploads/2019/12/4.9-Airbnb-Plus-Listing.png?w=960\" alt=\"Screenshot of AirBnB's Plus listing\" class=\"wp-image-7172184\" style=\"max-height: 50vh\">\n<figcaption><b>Fig 4.9:</b> The same brand elements in Airbnb’s standard listings (above) are used in their Plus listings (below), but with variations that make the listing styles distinct.</figcaption></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>However, some of the\ndesign choices convey a different attitude. Airbnb Plus uses larger\ntypography, airier vertical space, and a lighter weight of Cereal. It has a\nmore understated color palette, with a deeper color on the call to action.\nThese choices make Airbnb Plus feel like a more premium experience. You can see\nthey’ve adjusted the density, weight, and scale levers to achieve a more\nelegant and sophisticated aesthetic. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The standard listing page, on the other hand, is more functional,\nwith the booking module front and center. The Plus design pulls the density and\nweight levers in a lighter, airier direction. The standard listing page has\nless size contrast between elements, making it feel more functional. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Because they use the same core building blocks—the same typography, iconography, and components—both experiences feel like Airbnb. However, the variations in spacing, typographic weights, and color help distinguish the standard listing from the premium listing.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Environment</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>I’ve mainly been talking about adding variation to a system to\nallow for a range of content tones, but you may also need your system to scale\nbased on environmental contexts. “Environment” in this context asks: Where will\nyour products be used? Will that have an impact on the experience? Environments\nare the various constraints and pressures that surround and inform an\nexperience. That can include lighting, ambient noise, passive or active\nengagement, expected focus level, or devices. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Shopify’s Polaris design system initially grew out of Shopify’s Store\nManagement product. When the Shopify Retail team kicked off a project to design\nthe next generation <em>point-of-sale </em>(POS) system, they realized that the\npatterns in Polaris didn’t exactly fit their needs. The POS system needed to\nwork well in a retail space, often under bright lighting. The app needed to be\nused at arm’s length, twenty-four to thirty-six inches away from the merchant.\nAnd unlike the core admin, where the primary interaction is between the\nmerchant and the UI, merchants using the POS system needed to prioritize their\ninteractions with their customers instead of the UI. The Retail team wanted\nmerchants to achieve an “eyes-closed” level of mastery over the UI so they\ncould maintain eye contact with their customers. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The Retail team decided that the existing color palette, which\nonly worked on a light background, would not be clear enough under the bright\nlights of a retail shop. The type scale was also too small to be used at arm’s\nlength. And in order for merchants to use the POS system without breaking eye\ncontact with customers, the buttons and other UI elements would need to be much\nlarger. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The Retail team recognized that the current design system didn’t support a variety of environmental scenarios. But after talking with the Polaris team, they realized that other teams would benefit from the solutions they created. The Warehouse team, for example, was also developing an app that needed to be used at arm’s length under bright lights. This work inspired the Polaris team to create a dark mode for the system (<strong>Fig 4.10</strong>). </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172188} -->\n<figure class=\"wp-block-image\"><img src=\"https://alistapart.com/wp-content/uploads/2019/12/making-room-for-variation-fig10.png?w=960\" alt=\"Comparison of light and dark modes for navigation menus in the Polaris design system.\" class=\"wp-image-7172188\"/><figcaption><strong>Fig 4.10:</strong> Polaris light mode (left) and dark mode (right).</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>This feedback loop between product team and design system team is\na great example of how to build the right variation into your system. Build\nyour system around helping your users navigate your product more clearly and serving\ncontent needs and you’ll unlock scalable expression. </p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 12 Dec 2019 14:30:03 +0000","feedId":25,"bgimg":"https://alistapart.com/wp-content/uploads/2019/12/4.1-Public-Theater-2014.png?w=960","linkMd5":"2ae84ec7b3f6685beb40fc100dd83010","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn62@2020_1/2021/04/10/03-45-56-063_cc678f7b1577aea3.webp","destWidth":960,"destHeight":484,"sourceBytes":155282,"destBytes":155282,"author":"\n\t\t\t\tby \t\t\t\t\t","articleImgCdnMap":{"https://alistapart.com/wp-content/uploads/2019/12/4.1-Public-Theater-2014.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn62@2020_1/2021/04/10/03-45-56-063_cc678f7b1577aea3.webp","https://alistapart.com/wp-content/uploads/2019/12/4.2-Public-Theater-2018.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn94@2020_1/2021/04/10/03-46-15-651_f747f63fa2c23714.webp","https://alistapart.com/wp-content/uploads/2019/12/4.3a-Curbed-Old-Newsletter.png?w=491":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn22@2020_3/2021/04/10/03-46-15-996_a107631f9630982a.webp","https://alistapart.com/wp-content/uploads/2019/12/4.3b-Vox-Old-Newsletter-.png?w=470":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn12@2020_2/2021/04/10/03-46-15-600_2129df083b98c76e.webp","https://alistapart.com/wp-content/uploads/2019/12/4.3c-Eater-Old-Newsletter.png?w=479":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn79@2020_2/2021/04/10/03-46-15-809_355e8993a6848c4b.webp","https://alistapart.com/wp-content/uploads/2019/12/4.4-Curbed-New-Newsletter.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn82@2020_6/2021/04/10/03-46-15-947_0af4a1f2f1b44be5.webp","https://alistapart.com/wp-content/uploads/2019/12/4.5a-Verge-Masthead-Pink.jpeg?w=960":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn33@2020_3/2021/04/10/03-46-15-679_9f8b6d688d533470.webp","https://alistapart.com/wp-content/uploads/2019/12/4.5b-Verge-Masthead-Orange-City.jpeg?w=960":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn42@2020_5/2021/04/10/03-46-15-916_9de0a4431c781822.webp","https://alistapart.com/wp-content/uploads/2019/12/4.5c-Verge-Masthead-BlackWhite.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn85@2020_3/2021/04/10/03-46-15-803_73904221391b7685.webp","https://alistapart.com/wp-content/uploads/2019/12/4.6b-Verge-Homepage-Feature-Yellow.png?w=955":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn67@2020_5/2021/04/10/03-46-15-554_d61d8fe1ae00fbfb.webp","https://alistapart.com/wp-content/uploads/2019/12/4.6a-Verge-Homepage-Feature-Black.png?w=913":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn30@2020_6/2021/04/10/03-46-15-858_bafc7db2be7ea36c.webp","https://alistapart.com/wp-content/uploads/2019/12/4.7-McElroy-Masthead.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn87@2020_4/2021/04/10/03-46-15-812_cf456b6e9f22d2df.webp","https://alistapart.com/wp-content/uploads/2019/12/4.8-Chicago-Sun-Times-Masthead.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn75@2020_4/2021/04/10/03-46-15-770_89c7bcb4ad5d4f0c.webp","https://alistapart.com/wp-content/uploads/2019/12/4.10-Airbnb-Standard-Listing.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn66@2020_6/2021/04/10/03-46-16-248_d10c16a80eacd103.webp","https://alistapart.com/wp-content/uploads/2019/12/4.9-Airbnb-Plus-Listing.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn34@2020_4/2021/04/10/03-46-15-970_28c45135421c5af5.webp","https://alistapart.com/wp-content/uploads/2019/12/making-room-for-variation-fig10.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn14@2020_4/2021/04/10/03-46-15-685_4ff70f9abf0ff4fc.webp"},"publishedOrCreatedDate":1618026345124},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tThe Future of Web Software Is HTML-over-WebSockets\t\t\t\t","link":"https://alistapart.com/article/the-future-of-web-software-is-html-over-websockets/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>The future of web-based software architectures is already taking form, and this time it’s server-rendered (again). Papa’s got a brand new bag: HTML-over-WebSockets and broadcast everything all the time.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The dual approach of marrying a Single Page App with an API service has left many dev teams mired in endless JSON wrangling and state discrepancy bugs across two layers. This costs dev time, slows release cycles, and saps the bandwidth for innovation.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But a new WebSockets-driven approach is catching web developers’ attention. One that reaffirms the promises of classic server-rendered frameworks: fast prototyping, server-side state management, solid rendering performance, rapid feature development, and straightforward SEO. One that enables multi-user collaboration and reactive, responsive designs <em>without building two separate apps</em>. The end result is a single-repo application that feels to users just as responsive as a client-side all-JavaScript affair, but with straightforward templating and far fewer loading spinners, and no state misalignments, since state only lives in one place. All of this sets us up for a considerably easier (and faster!) development path.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Reclaiming all of that time spent addressing architecture difficulties grants you a pool of surplus hours that you can use to do awesome. Spend your dev budget, and your company’s salary budget, happily building full-stack features yourself, and innovating on things that benefit your company and customers.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>And in my opinion, there’s no better app framework for reclaiming tedious development time than Ruby on Rails. Take another look at the underappreciated Stimulus. Beef up the View in your MVC with ViewComponents. Add in the <a href=\"https://cableready.stimulusreflex.com/\">CableReady</a> and <a href=\"https://docs.stimulusreflex.com/\">StimulusReflex</a> libraries for that Reactive Rails (as it has been dubbed) new car smell, and you’re off to the races. But we’ll get back to Rails in a bit...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>This all started with web frameworks...</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Web frameworks burst onto the scene around 2005 amidst a sea of mostly figure-it-out-for-yourself scripting language libraries glued together and thrown onto hand-maintained Apache servers. This new architecture promised developers a more holistic approach that wrapped up all the fiddly stuff in no-touch conventions, freeing developers to focus on programming ergonomics, code readability, and fast-to-market features. All a developer had to do was learn the framework’s core language, get up to speed on the framework itself and its conventions, and then start churning out sophisticated web apps while their friends were still writing XML configuration files for all those <em>other</em> approaches.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Despite the early criticisms that always plague new approaches, these server-rendered frameworks became tools of choice, especially for fast-moving startups—strapped for resources—that needed an attractive, feature-rich app up <em>yesterday</em>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>But then the <em>JavaScript everything</em> notion took hold...</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>As the web development world pushed deeper into the 2010s, the tides began to turn, and server-rendered frameworks took something of a backseat to the Single Page Application, wholly built in JavaScript and run entirely on the client’s computer. At many companies, the “server” became relegated to hosting an API data service only, with most of the business logic and all of the HTML rendering happening on the client, courtesy of the big ’ol package of JavaScript that visitors were forced to download when they first hit the site.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>This is where things started to get ugly.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Fast-forward to 2020 and the <a href=\"https://www.nngroup.com/articles/the-need-for-speed/\">web isn’t getting any faster</a>, as we were promised it would with SPAs. Shoving megabytes of JavaScript down an iPhone 4’s throat doesn’t make for a great user experience. And if you thought building a professional web app took serious resources, what about building a web app <em>and</em> an API service <em>and</em> a communication layer between them? Do we really believe that every one of our users is going to have a device capable of digesting 100 kB of JSON and rendering a complicated HTML table <em>faster</em> than a server-side app could on even a mid-grade server?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Developing and hosting these JavaScript-forward apps didn’t get any cheaper either. In many cases we’re now doing twice the work, and maybe even paying twice the developers, to achieve the same results we had before with server-side app development.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In 2005, app frameworks blew everyone’s minds with “build a blog app in 15 minutes” videos. Fifteen years <em>later</em>, doing the same thing with an SPA approach can require two codebases, a JSON serialization layer, and dozens of spinners all over the place so we can still claim a 50ms First Contentful Paint. Meanwhile, the user watches some blank gray boxes, hoping for HTML to finally render from all the JSON their browser is requesting and digesting.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>How did we get here? This is not my beautiful house! Were we smart in giving up all of that server-rendered <em>developer happiness</em> and doubling down on staff and the time to implement in order to chase the promise of providing our users some fancier user interfaces?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Well. Yes. Sort of.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>We’re not building web software for <em>us</em>. We’re building it for <em>them</em>. The users of our software have expectations of how it’s going to work for <em>them</em>. We have to meet them where they are. Our users are no longer excited about full-page refreshes and ugly Rube Goldberg-ian multi-form workflows. The SPA approach was the next logical leap from piles of unorganized spaghetti JavaScript living on the server. The problem, though: it was a 5% improvement, not a 500% improvement.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Is 5% better worth twice the work? What about the developer cost?</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Bedazzling the web app certainly makes things <em>fancier</em> from the user’s perspective. Done well, it can make the app feel slicker and more interactive, and it opens up a wealth of new non-native interaction elements. Canonizing those elements as <em>components</em> was the next natural evolution. Gone are the days of thinking through how an entire HTML document could be mutated to give the <em>illusion</em> of the user interacting with an atomic widget on the page—now, that can be implemented directly, and we can think about our UX in terms of component breakdowns. But, alas, the costs begin to bite us almost immediately.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Go ahead, write that slick little rating stars component. Add some cool animations, make the mouseover and click area feel good, give some endorphin-generating feedback when a selection is made. But now what? In a real app, we need to <em>persist</em> that change, right? The database has to be changed to reflect this new state, and the app in front of the user’s eyes needs to reflect that new reality too.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In the old days, we’d give the user a couple star GIFs, each a link that hit the same server endpoint with a different param value. Server-side, we’d save that change to the database, then send back a whole new HTML page for their browser to re-render; maybe we’d even get fancy and use AJAX to do it <em>behind the scenes</em>, obviating the need for the full HTML and render. Let’s say the former costs <em>x</em> in developer time and salary (and we won’t even talk about lost opportunity cost for features rolled out too late for the market). In that case, the fancy AJAX-based approach costs <em>x</em> + <em>n (you know, some “extra JavaScript sprinkles”)</em>, but the cost of lots and lots of <em>n</em> grows as our app becomes more and more of a JavaScript spaghetti sprinkles mess.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Over in the SPA world, we’re now writing JavaScript in the client-side app and using JSX or Handlebars templates to render the component, then code to persist that change to the front-end data store, then a PUT request to the API, where we’re also writing an API endpoint to handle the request, a JSON serializer (probably with its own pseudo-template) to package up our successful response, and then front-end code to ensure we re-render the component (and some branching logic to maybe rollback and re-render the client-side state change if the backend failed on us). This costs a lot more than even <em>x + n </em>in developer time and salary. And if you’ve split your team into “front-end” and “back-end” people, you might as well go ahead and double <em>that</em> cost (both time and money) for many non-trivial components where you need two different people to finish the implementation. Sure, the SPA mitigates some of the ever-growing spaghetti problem, but at what cost for a business racing to be relevant in the market or get something important out to the people who need it?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>One of the other arguments we hear in support of the SPA is the reduction in cost of cyber infrastructure. As if pushing that hosting burden onto the client (without their consent, for the most part, but that’s another topic) is somehow saving us on our cloud bills. But that’s ridiculous. For any non-trivial application, you’re still paying for a server to host the API and maybe another for the database, not to mention load balancers, DNS, etc. And here’s the thing: <em>none of that cost even comes close to what a software company pays its developers!</em> Seriously, think about it. I’ve yet to work at any business where our technical infrastructure was anything more than a fraction of our salary overhead. And good developers expect raises. Cloud servers generally just get <em>cheaper</em> over time.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>If you want to be efficient with your money—especially as a cash-strapped startup—you don’t need to cheap out on cloud servers; you need to get <em>more features faster out of your existing high-performance team</em>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In the old, old days, before the web frameworks, you’d pay a developer for six weeks to finally unveil…the log-in page. Cue the sad trombone. Then frameworks made that log-in page an hour of work, total, and people were launching web startups overnight. The trumpets sound! Now, with our SPA approach, we’re back to a bunch of extra work. <em>It’s costing us more money because we’re writing two apps at once</em>. There’s that trombone again...</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>We’re paying a lot of money for that 5% user experience improvement.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But what if we could take the best client-side JavaScript ideas and libraries from that 5% improvement and reconnect them with the developer ergonomics and salary savings of a single codebase? What if components and organized JavaScript could all live in one rock-solid app framework optimized for server-side rendering? What if there <em>is</em> a path to a 500% jump?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Sound impossible? It’s not. I’ve seen it, like C-beams glittering in the dark near the Tannhäuser Gate. I’ve built that 500% app, in my free time, with my kids running around behind me barking like dogs. Push broadcasts to logged-in users. Instant updates to the client-side DOM in milliseconds. JavaScript-driven 3D animations that interact with real-time chat windows. All in a single codebase, running on the same server hardware I’d use for a “classic” server-rendered app (and maybe I can even scale that hardware down since I’m rendering HTML fragments more often than full-page documents). No separate front-end app. Clean, componentized JavaScript and server-side code, married like peanut butter and jelly. It’s real, I tell you!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Socket to me! (Get it? Get it? Ah, nevermind...)</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Finalized in 2011, support for WebSockets in modern browsers ramped up throughout the 2010s and is now fully supported in all modern browsers. With the help of a small bit of client-side JavaScript, you get a <a href=\"https://en.wikipedia.org/wiki/Duplex_(telecommunications)#FULL-DUPLEX\">full-duplex</a> socket connection between browser and server. Data can pass both ways, and can be pushed from either side at any time, no user-initiated request needed.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Like the game industry’s ever-expanding moves into cloud-based gaming, the future of web apps is not going to be about pushing even heavier obligations onto the user/client, but rather the opposite: let the client act as a thin terminal that renders the state of things for the human. WebSockets provide the communication layer, seamless and fast; a direct shot from the server to the human.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But this wasn’t terribly easy for many developers to grok at first. I sure didn’t. And the benefits weren’t exactly clear either. After years (decades, even) of wrapping our heads around the HTTP request cycle, to which all server-handled features must conform, adopting this WebSocket tech layer required a lot of head scratching. As with many clever new technologies or protocols, we needed a higher-level abstraction that provided something really effective for getting a new feature in front of a user, fast.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Enter HTML-over-WebSockets...</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Want a hyper-responsive datalist typeahead that is perfectly synced with the database? On every keystroke, send a query down the WebSocket and get back <em>precisely</em> the changed set of <strong>option</strong> tags, nothing more, nothing less.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>How about client-side validations? Easy. On every input change, round up the form values and send ’em down the WebSocket. Let your server framework validate and send back changes to the HTML of the form, including any errors that need to be rendered. No need for JSON or complicated error objects.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>User presence indicators? Dead simple. Just check who has an active socket connection.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>What about multi-user chat? Or document collaboration? In classic frameworks and SPAs, these are the features we put off because of their difficulty and the code acrobatics needed to keep everyone’s states aligned. With HTML-over-the-wire, we’re just pushing tiny bits of HTML based on one user’s changes to <em>every other</em> <em>user</em> currently subscribed to the channel. They’ll see <em>exactly</em> the same thing as if they hit refresh and asked the server for the entire HTML page anew. And you can get those bits to every user in under 30ms.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>We’re not throwing away the promise of components either. Where this WebSockets-based approach can be seen as a thick server/thin client, so too can our components. It’s fractal, baby! Make that component <em>do</em> delightful things for the user with smart JavaScript, and then just ask the server for updated HTML, and mutate the DOM. No need for a client-side data store to manage the component’s state since it’ll render itself to look <em>exactly like what the server knows it should look like now</em>. The HTML comes from the server, so no need for JSX or Handlebars or &#60;insert other JavaScript templating library here&#62;. The server is always in control: rendering the initial component’s appearance <em>and</em> updating it in response to any state change, all through the socket.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>And there’s nothing saying you have to use those socket channels to send <em>only</em> HTML. Send a tiny bit of text, and have the client do something smart. Send a chat message from one user to every other user, and have their individual clients render that message in whatever app theme they’re currently using. Imagine the possibilities!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>But it’s complex/expensive/requires a bunch of new infrastructure, right?</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Nope. Prominent open-source web servers support it natively, generally without needing any kind of extra configuration or setup. Many server-side frameworks will automatically ship the JS code to the client for native support in communicating over the socket. In Rails, for example, setting up your app to use WebSockets is as easy as configuring the built-in ActionCable and then deploying as usual on the same hardware you would have used otherwise. Anecdotally, the typical single Rails server process seems to be perfectly happy supporting nearly 4,000 active connections. And you can easily swap in the excellent <a href=\"https://docs.anycable.io\">AnyCable</a> to bump that up to around 10,000+ connections per node by not relying on the built-in Ruby WebSocket server. Again, this is on the usual hardware you’d be running your web server on in the first place. You don’t need to set up any extra hardware or increase your cloud infrastructure.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>This new approach is quickly appearing as extensions, libraries, or alternative configurations in a variety of languages and web frameworks, from Django’s <a href=\"https://sockpuppet.argpar.se\">Sockpuppet</a> to Phoenix’s <a href=\"https://dockyard.com/blog/2018/12/12/phoenix-liveview-interactive-real-time-apps-no-need-to-write-javascript\">LiveView</a> and beyond. Seriously, go dig around for WebSockets-based libraries for your favorite app framework and then step into a new way of thinking about your app architectures. Build something amazing and marvel at the glorious HTML bits zipping along on the socket, like jet fighters passing in the night. It’s more than a new technical approach; it’s a new mindset, and maybe even a new wellspring of key app features that will drive your startup success.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But I’d be remiss if I didn’t highlight for the reader <em>my </em>contender for Best Framework in a Leading Role. Sure, any app framework can adopt this approach, but for my money, there’s a strong case to be made that the vanguard could be Ruby on Rails.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>So we come back around to Rails, 15 years on from its launch...</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Set up a Rails 6 app with the latest versions of <a href=\"https://github.com/turbolinks/turbolinks\">Turbolinks</a>, <a href=\"https://stimulus.hotwire.dev\">Stimulus</a>, <a href=\"https://docs.stimulusreflex.com\">StimulusReflex</a>, <a href=\"https://cableready.stimulusreflex.com\">CableReady</a>, and GitHub’s <a href=\"https://github.com/github/view_component\">ViewComponent</a> gem, and you can be working with Reactive Rails in a way that simultaneously feels like building a classic Rails app <em>and </em>like building a modern, componentized SPA, in a single codebase, with all the benefits of server-side rendering, HTML fragment caching, easy SEO, rock-solid security, and the like. You’ll suddenly find your toolbelt bursting with straightforward tools to solve previously daunting challenges.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Oh, and with Turbolinks, you also get wrappers allowing for hybrid native/HTML UIs in the same codebase. Use a quick deploy solution like Heroku or Hatchbox, and one developer can build a responsive, reactive, multi-platform app in their spare time. Just see <a href=\"https://dev.to/julianrubisch/twitter-clone-with-stimulusreflex-gone-hybrid-native-app-17fm\">this Twitter clone</a> if you don’t believe me.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>OK, that all sounds exciting, but why Rails specifically? Isn’t it old and boring? You already said any framework can benefit from this new WebSocket, DOM-morphing approach, right?&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Sure. But where Rails has always shined is in its ability to make rapid prototyping, well…<em>rapid</em>, and in its deep ecosystem of well-polished gems. Rails also hasn’t stopped pushing the envelope forward, with the latest version 6.1.3 of the framework boasting a ton of cool features.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>If you’ve got a small, resource-strapped team, Rails (and Ruby outside of the framework) still serves as a potent force multiplier that lets you punch way above your weight, which probably explains the <a href=\"https://charliereese.ca/article/top-50-y-combinator-tech-startups\">$92 billion in revenue it’s helped drive over the years</a>. With this new approach, there’s a <em>ton</em> more weight behind that punch. While your competitors are fiddling with their JSON serializers and struggling to optimize away all the loading spinners, you’re rolling out a new multi-user collaborative feature every week…or every <em>day</em>.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You win. Your fellow developers win. Your business wins. And, most importantly, your <em>users</em> win.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>That’s what Rails promised from the day it was released to the community. That’s why Rails spawned so many imitators in other languages, and why it saw such explosive growth in the startup world for years. And that same old rapid prototyping spirit, married to this new HTML-over-the-wire approach, positions Rails for a powerful resurgence.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Ruby luminary and <a href=\"https://www.amazon.com/Obie-Fernandez/e/B001IGV0LS\">author</a> of <em>The Ruby Way</em>, Obie Fernandez, <a href=\"https://medium.com/@obie/react-is-dead-long-live-reactive-rails-long-live-stimulusreflex-and-viewcomponent-cd061e2b0fe2\">seems to think so</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Heck, even <a href=\"https://www.youtube.com/watch?v=utxCm3uLhIE\">Russ Hanneman thinks this approach with StimulusReflex is the new hotness</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>And the good folks over at Basecamp (creators of Rails in the first place), dropped their own take on the concept, <a href=\"https://hotwire.dev\">Hotwire</a>, just in time for the 2020 holidays, so your options for tackling this new and exciting technique continue to expand.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Don’t call it a comeback, because Rails has been here for years. With this new architectural approach, brimming with HTML-over-WebSockets and full-duplex JavaScript interactions, Rails becomes something new, something beautiful, something that demands attention (again).&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Reactive Rails, with StimulusReflex and friends, is a must-look for anyone exhausted from toiling with JSON endpoints or JSX, and I’m super excited to see the new crop of apps that it enables.</p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 25 Feb 2021 15:00:00 +0000","feedId":25,"bgimg":"","linkMd5":"a722bf15647dfe923d3c28b2e229098c","bgimgJsdelivr":"","metaImg":"","author":"\n\t\t\t\tby \t\t\t\t\t","publishedOrCreatedDate":1618026345180},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tBuilding the Woke Web: Web Accessibility, Inclusion &#038; Social Justice\t\t\t\t","link":"https://alistapart.com/article/building-the-woke-web/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>What would your life be like without the internet? Not if it didn’t exist at all, but if you were locked out of it? Would your days be different? Unrecognizable, even? Keeping your answers to that in mind, do you think access to the internet is a human right? Do we need to be able to access it to fully participate in modern society? To answer “yes” to these questions would have been unthinkable 20 years ago.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Living without internet</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Globally, over 40% of people still <a href=\"https://thenextweb.com/growth-quarters/2020/01/30/digital-trends-2020-every-single-stat-you-need-to-know-about-the-internet/\">do not have access to the internet</a>. That lack of access and the issues it creates have helped motivate digital equity initiatives like <a href=\"https://www.techgoeshome.org/\">Tech Goes Home</a> and the <a href=\"https://www.goodthingsfoundation.org/\">Good Things Foundation</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Having no access to the internet creates problems in many parts of modern life. In the UK, bank branches are closing, forcing many to do their banking online. Many utilities now require internet access to request or amend services, or get better deals. Civil services, such as registering to vote, are increasingly online. As this continues, people who have no access to broadband or who have limited access to mobile data fall behind—this often includes homeless people, elderly people, and those on low incomes who are already operating at a disadvantage.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In the UK, only <a href=\"https://gds.blog.gov.uk/2014/01/13/a-checklist-for-digital-inclusion-if-we-do-these-things-were-doing-digital-inclusion/\">37% of people living in social housing</a> are online. Approximately 1 in 5 adults with a disability in the UK have <a href=\"https://www.ons.gov.uk/businessindustryandtrade/itandinternetindustry/bulletins/internetusers/2019#recent-internet-use-by-disabled-adults-reaches-10-million-adults\">not used the internet recently</a>, and they make up half of the people who have not accessed the internet in the last three months. Globally, the UN target for affordable mobile data is <a href=\"https://a4ai.org/un-broadband-commission-adopts-a4ai-1-for-2-affordability-target/\">2% of monthly income for 1GB data</a>, and yet many <a href=\"https://a4ai.org/extra/mobile_broadband_pricing_gnicm-2019Q2\">countries are still nowhere near</a> reaching this goal. Not having access to the internet is expensive, locking you out of essential services and a surfeit of helpful information. Giving people full access to the splendors and knowledge of the online world should be imperative for everyone who works on it.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Digital exclusion is when someone is unable or unwilling to access information and services online. In the UK, <a href=\"https://www.ons.gov.uk/peoplepopulationandcommunity/householdcharacteristics/homeinternetandsocialmediausage/articles/exploringtheuksdigitaldivide/2019-03-04#the-scale-of-digital-exclusion-in-the-uk\">10% of the adult population was digitally excluded</a> in 2018. The number of people in the UK lacking basic digital skills is decreasing, but in 2018, 8% of adults in the UK (4.3 million people) were estimated to have zero basic digital skills, which means they are unable to do things like buy items online, verify information, or send an email. <a href=\"https://www.ons.gov.uk/peoplepopulationandcommunity/householdcharacteristics/homeinternetandsocialmediausage/articles/exploringtheuksdigitaldivide/2019-03-04#how-does-internet-usage-and-digital-exclusion-vary-for-men-and-women\">Women are more likely</a> to have no basic digital skills.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Being unable to send an email, submit an application online, or use a government site is a huge barrier to civic and societal engagement. Shopping in person, rather than online, can mean you are <a href=\"https://www.ons.gov.uk/peoplepopulationandcommunity/householdcharacteristics/homeinternetandsocialmediausage/articles/exploringtheuksdigitaldivide/2019-03-04#why-does-digital-exclusion-matter\">consistently overcharged for your purchase</a> by as much as 13%. <a href=\"https://www.ons.gov.uk/peoplepopulationandcommunity/householdcharacteristics/homeinternetandsocialmediausage/articles/exploringtheuksdigitaldivide/2019-03-04#why-does-digital-exclusion-matter\">Not knowing how to use computers can mean you earn less in the first place. Not being able to use the internet can mean that you spend more time doing tasks such as registering to vote, paying council tax in the UK, or researching your next holiday</a>.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Being able to access the internet has social and psychological ramifications too. <a href=\"https://www.campaigntoendloneliness.org/threat-to-health/\">Loneliness is well documented</a> as a risk factor for a number of health issues, as well as early death. <a href=\"https://www.ons.gov.uk/peoplepopulationandcommunity/householdcharacteristics/homeinternetandsocialmediausage/articles/exploringtheuksdigitaldivide/2019-03-04\">Being online can help</a> you feel less alone. Half of all people with disabilities surveyed <a href=\"https://www.sense.org.uk/support-us/campaigns/loneliness/\">report feeling lonely</a> in the UK, and a quarter of them are lonely every day. <a href=\"https://www.theguardian.com/media/2018/apr/04/missing-link-why-disabled-people-cant-afford-delete-facebook-social-media\">People with disabilities are more likely</a> to be a captive audience to apps and websites using their data inappropriately or engaging in other unethical practices. <a href=\"https://www.theguardian.com/media/2018/apr/04/missing-link-why-disabled-people-cant-afford-delete-facebook-social-media\">This may be because they rely on a particular site</a> to interact with other people with disabilities, because they lack the tools to visit other sites, or lack other suitable websites or apps to use.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Richer households are more likely to have full basic digital skills. The UK Office for National Statistics found that <a href=\"https://www.ons.gov.uk/peoplepopulationandcommunity/householdcharacteristics/homeinternetandsocialmediausage/articles/exploringtheuksdigitaldivide/2019-03-04#what-other-patterns-are-there-in-internet-usage\">people without basic digital skills</a> are three times as likely to be in low-income bands. In 2018, <a href=\"https://www.lloydsbank.com/assets/media/pdfs/banking_with_us/whats-happening/LB-Consumer-Digital-Index-2018-Report.pdf\">12% of 11-to-18-year-olds had no broadband access</a> on a tablet or computer, which 68% of them said made it difficult to do homework. Further, <a href=\"https://www.npi.org.uk/publications/income-and-poverty/disability-and-poverty/\">households in which one or more of their members have a disability</a> make up half of those living in poverty in the UK.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Provide non-online options for vital services</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>If you work in government, food supply, healthcare, or utilities, there is no excuse for not providing offline options. In doing so you are excluding some of the most marginalized people. The internet is amazing, but it is not the only way to share information.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>A non-exhaustive list of other barriers</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Having access to the internet in the first place is one issue, and feeling welcome, or even safe is quite another. Even when your broadband connection is as good as can be hoped for, there are many other ways you can be discouraged or stopped from using the internet.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Trolling and threats</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Online harassment is one of many barriers stopping people from accessing the internet. Diane Abbott, the first black woman Member of Parliament (MPs) in the UK, <a href=\"https://www.theguardian.com/politics/2017/sep/05/diane-abbott-more-abused-than-any-other-mps-during-election\">received almost half (45.14%) of all abusive tweets sent to female MPs</a> in the run-up to the 2017 General Election that decided how voters would be represented in Parliament and which party would govern. Black and Asian women MPs got 35% more abusive tweets than white women MPs. The abuse directed at Dianne Abott amounted to 10 times as much as was received by any other female MP, according to an <a href=\"https://medium.com/@AmnestyInsights/unsocial-media-tracking-twitter-abuse-against-women-mps-fc28aeca498a\">Amnesty International study</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Mermaids is a charity that supports transgender children and their parents in the UK. Their CEO Susie Green—herself the parent of a transgender child—<a href=\"https://www.pinknews.co.uk/2018/03/14/head-of-transgender-childrens-charity-mermaids-targeted-with-vile-abuse-and-threats/\">has been targeted with abuse and threats</a>. The rise in abusive and threatening comments led to Mermaids’ Twitter account having to <a href=\"https://www.theguardian.com/society/2017/aug/27/police-investigate-online-abuse-charity-transgender-children-mermaids\">block up to 20 accounts a day</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Trolling isn’t an easy problem to fix. Allowing users to block certain words and hide certain replies on Twitter is a start, but listening to people from marginalized backgrounds and their complaints and ideas would be another critical place to begin.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>We need to think long and hard about what good moderation looks like and what guidelines work in online spaces to ensure those accessing them don’t have to wade through a tide of bigotry.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Sidelining and hiding certain groups</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Information and support online are vital for at-risk LGBT people, whether to help them escape dangerous situations, access support, or find community. Yet in schools, words relating to LGBT issues are <a href=\"https://www.microsoft.com/en-us/research/blog/helping-the-lgbt-community-access-the-internet/\">often blocked</a>. On YouTube, v<a href=\"https://www.theverge.com/2018/6/4/17424472/youtube-lgbt-demonetization-ads-algorithm\">ideos relating to LGBT issues are demonetized, age-restricted, or even removed</a>. This isn’t because the content is sexually explicit or not safe for work. It’s just discrimination. TikTok recently admitted it actively discriminates against certain kinds of users—namely the <a href=\"https://slate.com/technology/2019/12/tiktok-disabled-users-videos-suppressed.html\">fat, queer, disabled</a>, <a href=\"https://www.theguardian.com/technology/2020/mar/17/tiktok-tried-to-filter-out-videos-from-ugly-poor-or-disabled-users\">low-income, and “ugly”</a>—in certain feeds, under the guise of paternalistic protection from bullying.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Exclusionary design</h3>\n<!-- /wp:heading -->\n\n<!-- wp:html -->\n<figure class=\"quote\"><blockquote><p><em>People with disabilities are the original life hackers because our motivation is so high. If we don’t hack we often go without.</em></p></blockquote><figcaption>Liz Jackson, “<a href=\"https://www.youtube.com/watch?v=qiP_W1x0cV4\">Designing for Inclusivity</a>”</figcaption></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Many people with disabilities rely on screen readers and screen reader compatible sites to use the internet. Screen readers can be prohibitively expensive; while there are free options, one of the most popular screen readers at the time of writing <a href=\"https://abilitynet.org.uk/factsheets/introduction-screen-readers\">costs nearly $1200</a> for a professional license. Even with <a href=\"https://www.nvaccess.org/about-nvda/\">incredible innovation coming from within the disabled community</a>, there’s more that everyone else can do. In their February 2020 evaluation, WebAIM found that <a href=\"https://webaim.org/projects/million/#wcag\">98.1% of the top million websites</a> had detectable WCAG (Web Content Accessibility Guidelines) 2 errors.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The most common WCAG 2 failures—such as missing alt text for images, having empty links, and missing form labels—would be relatively simple to fix. Because they’re shared among most websites, concentrating on fixing them would have a huge overall benefit for the internet. But as long as web accessibility standards are applied without rigor, aspects of a vast number of sites remain inaccessible even once users have a screen reader or other assistive technology.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Hostile conditions</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Inclusion is just as pertinent as accessibility, and tackling only one side of the equation will leave some people just as locked out. Accessibility without inclusion is not real accessibility. The <a href=\"https://medium.com/@mosaicofminds/the-curb-cut-effect-how-making-public-spaces-accessible-to-people-with-disabilities-helps-everyone-d69f24c58785\"><em>curb cut effect</em></a>, wherein improving access for people with disabilities improves access for all, isn’t the only reason to increase web accessibility. We have a moral responsibility as tech workers to use any privilege we may have to facilitate, respond to, and support the efforts of marginalized people who are working to carve out accessible spaces for themselves.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Hostile conditions, created or reinforced by engineering and design choices, make being on the internet harder for people who are <a href=\"https://www.independent.co.uk/voices/coming-out-lgbt-gay-queer-disabled-disability-twice-sexuality-open-family-friends-a8212431.html\">queer, of color, or disabled</a>. They make it more difficult to access life-saving spaces, social spaces, and civic spaces—both on and offline. Thorough accessibility and real inclusion are the solutions to these problems. To survive, marginalized people must work both against and through the abuse and accessibility issues they face on online platforms, whereas everyone else gets to use the internet as they wish. This replicates the injustices of offline in the online world.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>An incomplete list of solutions</h2>\n<!-- /wp:heading -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Center the voices and experiences of the marginalized</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>There isn’t one easy solution but to start finding the solutions that are possible we need to center <a href=\"https://whoseknowledge.org/\">the voices and experiences of the marginalized</a>. Marginalized people with insights to share aren’t hard to find when you start listening. They are your next users, your future developers, your fledgling marketing team. Excluding them reduces your options, your appeal, and your breadth of ideas.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Hire teams that are diverse on every axis</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Hiring inclusively creates teams full of people who aren’t like you or each other. And those kinds of teams build better products, bring better ideas to the table, and better reflect the user base of the majority of products. It is important to remember that diversity isn’t just about race or hiring women; there are neurodiverse people, people with physical disabilities, people of other genders, people from various backgrounds, and many other marginalizations than could be listed here.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Proactively promote inclusion and harness your team’s diversity</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Help disabled and otherwise marginalized people both develop and enforce policies and practices that protect them and allow them to thrive. If there are no disabled people, or otherwise marginalized or underrepresented people on your team, take a hard look at your hiring practices, your work culture, even the layout of your office. If you can’t find these problems, hire experts. Pay specialist consultants and recruiters to root out the problems. This is an investment that makes moral, logical, and business sense. The inclusive team you build will be able to spot potential issues in a way that a squad of people who pattern match to narrow ideas of what a tech worker should look and behave like never would. Create a culture where the marginalized members of your team feel supported, feel heard, and are buoyed through their work with a sense of safety in their workplace.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Avoid legal issues preemptively</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><a href=\"https://www.buzzfeednews.com/article/skbaer/blind-woman-sues-beyonce-website-accessibility\">Beyonce</a> and <a href=\"https://www.fastcompany.com/90414147/dominos-pizza-dealt-scotus-blow-that-could-affect-ada\">Domino’s Pizza</a> were both sued under the <a href=\"https://www.ada.gov/\">Americans with Disabilities Act</a>, which contains provisions to force the companies involved to change their websites. Beyonce’s case is still in progress, but Domino’s both lost their suit and had their appeal tossed out. Both cases were about visually impaired people being unable to access their sites and complete purchases. Accessibility is often seen as a costly detour from the “real work” of building projects, but that has never and will never be true. You want users, and users of all stripes want to use your products.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The banks HSBC, Metro Bank, and Halifax made it hard for visually impaired users to access all of their services online. When HSBC was told they had made it difficult for a user with visual impairments to access bank statements, <a href=\"https://www.bbc.co.uk/news/business-43968736\">they replied, “don’t worry, we’ll send you a video.”</a> The <a href=\"https://www.legislation.gov.uk/ukpga/2010/15/contents\">Equality Act 2010</a> in the UK means that these users can sue.<a href=\"https://www.bbc.co.uk/news/business-43968736\"> </a>In addition to serving the far more important goal of providing people with disabilities equal access, embracing inclusive design from the outset would have saved these companies time while enhancing their trust among the public rather than putting it at risk. Fixing the content is usually much <a href=\"https://arstechnica.com/tech-policy/2019/10/accessibility-the-future-and-why-dominos-matters/\">cheaper for the organization than fighting the matter in court</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Advocate for accessibility and inclusivity in any way you can, be it big or small</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Caption your videos, Instagram content, Facebook photos, Twitter photos, conference and meetup talks, etc<strong>.</strong> Make information needed to access your product or service available in multiple formats. Speak up against problems in your workplace; if an internal hiring tool is hard for you to use, it is hard for others. If one of your websites has errors from WCAG 2’s list, advocate for taking time to fix it. If the gender options available on forms are “man,” “woman,” and “other,” speak up yourself, tell your manager, question whether you need to collect gender information at all. Don’t stay silent.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Test your website with tools, devices, and real end users</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Run tools like <a href=\"https://www.deque.com/axe/\">axe</a>, <a href=\"https://chrome.google.com/webstore/detail/chromelens/idikgljglpfilbhaboonnpnnincjhjkd?hl=en\">ChromeLens</a>, and <a href=\"https://developers.google.com/web/tools/lighthouse\">Lighthouse</a> during your build processes. Do manual testing with the actual devices that are used by your end-users, and test with real users with access requirements. If you’re a team of one or a few, ensure that you run these tools from MVP to finished product—the errors that are the easiest to catch and fix will mostly be caught by automated tools, and they are a great start for learning more about accessibility. Websites such as <a href=\"https://a11yproject.com/resources/\">The A11y Project compile resources</a>, and there are <a href=\"https://inclusive-components.design/\">other websites</a>, Slack groups, Twitter accounts, and newsletters that are also incredibly helpful for answering any questions. The automated tools will give you the keywords to search for.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Working towards an accessible, inclusive internet</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Web accessibility is not an optional extra. What inclusion looks like in practice will depend on your products, your users, and what you intend to achieve, but for it to be real and meaningful in any context, it cannot be an afterthought. Engineering that makes inclusion an afterthought is engineering that operates without morality and in doing so actively enacts harm. The fact that this kind of engineering is commonplace on the internet doesn’t make it OK. It just highlights that the way we have built the web is fundamentally broken. We can do better.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>“Wokeness,” at least as conceived by those divorced from the black experience and <a href=\"https://en.wikipedia.org/wiki/African-American_Vernacular_English\">AAVE</a>, isn’t a great concept. The way it is used in popular culture makes it sound as if being a good person is a switch you flip on and off; you’re woke or ’sleep. But wokeness is not the end state, it’s the beginning of a journey. All the tenets of intersectional feminism, web accessibility, and diversity and inclusion are inextricably tied up in making the web a better place, for all and by all. Access to the internet is essential. Staying woke, and acting on that wokeness, is what will lead us to a better internet for everyone.</p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 11 Jun 2020 14:30:00 +0000","feedId":25,"bgimg":"","linkMd5":"c59aec337abb31b89d3797af9ff5cdbc","bgimgJsdelivr":"","metaImg":"","author":"\n\t\t\t\tby \t\t\t\t\t","publishedOrCreatedDate":1618026345181},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tWebwaste\t\t\t\t","link":"https://alistapart.com/article/webwaste/","description":"\n\t\t\t\t\t<!-- wp:heading -->\n<h2>The Web is obese</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>In 1994, there were 3,000 websites. In 2019, there were estimated to be 1.7 billion, almost one website for every three people on the planet. Not only has the number of websites exploded, the weight of each page has also skyrocketed. Between 2003 and 2019, the average webpage weight grew from about 100&#160;KB to about 4&#160;MB. The results?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>“In our analysis of 5.2 million pages,” Brian Dean reported for Backlinko in October 2019, “the average time it takes to fully load a webpage is 10.3 seconds on desktop and 27.3 seconds on mobile.” In 2013, Radware calculated that the average load time for a webpage on mobile was 4.3 seconds.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Study after study shows that people absolutely hate slow webpages. In 2018, Google research found that 53% of mobile site visitors left a page that took longer than three seconds to load. A 2015 study by Radware found that “a site that loads in 3 seconds experiences 22% fewer page views, a 50% higher bounce rate, and a 22% fewer conversions than a site that loads in 1 second, while a site that loads in 5 seconds experiences 35% fewer page views, a 105% higher bounce rate, and 38% fewer conversions.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The causes of webpage bloat? Images and videos are mainly to blame. By 2022, it’s estimated that online videos will make up more than 82% of all consumer Internet traffic—15 times more than in 2017. However, from the code to the content, everything about Web design has become super-bloated and super-polluting. Consider that if a typical webpage that weighs 4&#160;MB is downloaded 600,000 times, one tree will need to be planted in order to deal with the resulting pollution.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>They say a picture paints a thousand words. Well, 1,000 words of text takes up roughly two A4 (210 mm wide and 297 mm long) pages and weighs about 6&#160;KB. You’d place about four images that are 9 cm x 16 cm on two A4 pages. Let’s say these images are well optimized and weigh 40&#160;KB each. (A poorly optimized image could weigh several megabytes.) Even with such high optimization, two A4 pages of images will weigh around 160&#160;KB. That’s 27 times more than the two A4 pages of text. A 30-second video, on the other hand, could easily weigh 3&#160;MB. Videos create massively more pollution than text. Text is the ultimate compression technique. It is by far the most environmentally friendly way to communicate. If you want to save the planet, use more text. Think about digital weight.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>From an energy point of view, it’s not simply about page weight. Some pages may have very heavy processing demands once they are downloaded. Other pages, particularly those that are ad-driven, will download with lots of third-party websites hanging off them, either feeding them content, or else demanding to be fed data, often personal data on the site’s visitor. It’s like a type of Trojan Horse. You think you’re accessing one website or app, but then all these other third parties start accessing you. According to Trent Walton, the top 50 most visited websites had an average of 22 third-party websites hanging off them. The New York Times had 64, while Washington Post had 63. All these third-party websites create pollution and invade privacy.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>There is a tremendous amount of out-of-date content on websites. I have worked with hundreds of websites where we had to delete up to 90% of the pages in order to start seeing improvements. Poorly written, out-of-date code is also a major problem. By cleaning up its JavaScript code, Wikipedia estimated that they saved 4.3 terabytes a day of data bandwidth for their visitors. By saving those terabytes, we saved having to plant almost 700 trees to deal with the yearly pollution that would have been caused.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>If you want to help save the planet, reduce digital weight. Clean up your website. Before you add an image, make sure that it does something useful and it’s the most optimized image possible. Every time you add code, make sure it does something useful and it’s the leanest code possible. Always be on the lookout for waste images, waste code, waste content. Get into the habit of removing something every time you add something.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Publishing is an addiction. Giving a website to an organization is like giving a pub to an alcoholic. You remember the saying, “There’s a book inside everyone”? Well, the Web let the book out. It’s happy days for a while as we all publish, publish, publish. Then…</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>“Hi, I’m Gerry. I have a 5,000-page website.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>“Hi, Gerry.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>“I used to have a 500-page website, but I had no self-control. It was one more page, one more page… What harm could one more page do?”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Redesign is rehab for websites. Every two to three years some manager either gets bored with the design or some other manager meets a customer who tells them about how horrible it is to find anything on the website. The design team rounds up a new bunch of fake images and fake content for the top-level pages, while carefully avoiding going near the heaving mess at the lower levels. After the launch, everyone is happy for a while (except the customers, of course) because in many organizations what is important is to be seen to be doing things and producing and launching things, rather than to do something useful.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>If you must do something, do something useful. That often means not doing, removing, minimizing, cleaning up.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Beware the tiny tasks. We’ve used the Top Tasks method to identify what matters and what doesn’t matter to people, whether they’re buying a car, choosing a university, looking after their health, buying some sort of technology product, or whatever. In any environment we’ve carried it out in—and we’ve done it more than 500 times—there are no more than 100 things that could potentially matter.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In a health environment, these might include symptoms, treatment, prevention, costs, waiting times, etc. When buying a car they might include price, engine type, warranties, service costs, etc. We’ve carried out Top Tasks surveys in some 40 countries and 30 languages, with upwards of 400,000 people voting. In every single survey the same patterns emerge. Let’s say there are 100 potential tasks. People are asked to vote on the tasks that are most important to them. When the results come in, we will find that five of the tasks will get the first 25% of the vote. 50 tasks will get the final 25% of the vote. The top five tasks get as much of the vote as the bottom 50. It’s the same pattern in Norway, New Zealand, Israel, USA, Canada, UK, Brazil, wherever.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The bottom 50 are what I call the tiny tasks. When a tiny task goes to sleep at night it dreams of being a top task. These tiny tasks—the true waste generators—are highly ambitious and enthusiastic. They will do everything they can to draw attention to themselves, and one of the best ways of doing that is to produce lots of content, design, code.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Once we get the Top Tasks results, we sometimes analyze how much organizational effort is going into each task. Invariably, there is an inverse relationship between the importance of the task to the customer and the effort that the organization is making in relation to these tasks. The more important it is to the customer, the less is being done; the less important it is to the customer, the more is being done.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Beware of focusing too much energy, time and resources on the tiny tasks. Reducing the tiny tasks is the number one way you can reduce the number of pages and features. Save the planet. Delete the tiny tasks.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>A plague of useless images</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>I was giving a talk at an international government digital conference once, and I asked people to send me examples of where digital government was working well. One suggestion was for a website in a language I don’t speak. When I visited it, I saw one of those typical big images that you see on so many websites. I thought to myself: I’m going to try and understand this website based on its images.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The big image was of a well-dressed, middle-aged woman walking down the street while talking on her phone. I put on my Sherlock Holmes hat. Hmm… Something to do with telecommunications, perhaps? Why would they choose a woman instead of a man, or a group of women and men? She’s married, I deduced by looking at the ring on her finger. What is that telling me? And what about her age? Why isn’t she younger or older? And why is she alone? Questions, questions, but I’m no Sherlock Holmes. I couldn’t figure out anything useful from this image.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I scrolled down the page. Ah, three more images. The first one is a cartoon-like image of a family on vacation. Hmm… The next one is of two men and one woman in a room. One of them has reached their hand out and placed it on something, but I can’t see what that something is, because the other two have placed their hands on top of that hand. It’s a type of pledge or something, a secret society, perhaps? Two of them are smiling and the third is trying to smile. What could that mean? And then the final picture is of a middle-aged man staring into the camera, neither smiling nor unsmiling, with a somewhat kind, thoughtful look. What is happening?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I must admit that after examining all the visual evidence I had absolutely no clue what this government website was about. So, I translated it. It was about the employment conditions and legal status of government employees. Now, why didn’t I deduce that from the images?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The Web is smothering us in useless images that create lots of pollution. These clichéd, stock images communicate absolutely nothing of value, interest or use. They are one of the worst forms of digital pollution and waste, as they cause page bloat, making it slower for pages to download, while pumping out wholly unnecessary pollution. They take up space on the page, forcing more useful content out of sight, making people scroll for no good reason.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Interpublic is a very large global advertising agency. As with all advertising agencies they stress how “creative” they are, which means they love huge, meaningless, happy-clappy polluting images. When I tested their homepage, it emitted almost 8 grams of CO2 as it downloaded, putting Interpublic in the worst 10% of website polluters, according to the Website Carbon Calculator. (For comparison, the Google homepage emits 0.23 grams.) One single image on its homepage weighed 3.2&#160;MB. This image could easily have been 10 times smaller, while losing nothing in visual appeal. The Interpublic website is like a filthy, rusty 25-year-old diesel truck, belching fumes as it trundles down the Web.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Instead of optimizing images so that they’ll download faster, the opposite is often happening. High-resolution images are a major cost to the environment. If, for example, you move from a 4K resolution image to an 8K one, the file size doesn’t double, it trebles. For example, I saved an image at 4K and it was 6.9&#160;MB. At 8K it was 18&#160;MB.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Digital “progress” and “innovation” often means an increasing stress on the environment. Everything is more. Everything is higher. Everything is faster. And everything is exponentially more demanding of the environment. Digital is greedy for energy and the more it grows the greedier it gets. We need digital innovation that reduces environmental stress, that reduces the digital footprint. We need digital designers who think about the weight of every design decision they make.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>We must start by trying to use the option that damages the environment least, and that is text. Don’t assume that images are automatically more powerful than text. Sometimes, text does the job better.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>In a test with an insurance company, it was found that a promotion for a retirement product was deemed less accurate when an image of a face was used than when text only was used.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:list -->\n<ul><li>An initiative by the UK government to get people to sign up to become potential organ donors tested eight approaches. The approaches that used images were least effective. Text-only worked best.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>“Hello?”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>“Hello. Is that the Department of Useless Images?”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>“Yes.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>“We have this contact form and we need a useless image for it.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>“How about a family cavorting in a field of spring flowers with butterflies dancing in the background?”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>“Perfect.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>There are indeed many situations where images are genuinely useful, particularly when it comes to helping people better understand how a product works or looks. Airbnb, for example, found that its growth only began to accelerate after it invested in getting quality images of the rental properties on offer.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>If you need to use images, optimize them and consider using real ones of real people doing real things.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>They say a picture paints a thousand words but sometimes it’s a thousand words of crap.</p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 09 Jul 2020 14:30:00 +0000","feedId":25,"bgimg":"","linkMd5":"ee9dae0b0398d5cdd0d24f8baef105f1","bgimgJsdelivr":"","metaImg":"","author":"\n\t\t\t\tby \t\t\t\t\t","publishedOrCreatedDate":1618026345293},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tFigure It Out\t\t\t\t","link":"https://alistapart.com/article/figure-it-out/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>Color is, without a doubt, the visual element most often misunderstood and misused.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As mentioned earlier, when designing visual representations, color is often the first visual encoding that people use. It’s also quite limited to about a dozen, distinguishable colors. It’s a potent visual element, but one fraught with accessibility and perceptual problems. A general rule of thumb:<em> Save color for things you want to draw people’s attention to</em>. Start with grayscale representations. Add in color only later, where it might be really, really useful. That’s it. We can move along.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Except…</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>We need to dispel some popular beliefs about colors, beliefs that are often held up as truth, when, in fact, this is not the case. What’s presented in this short chapter is more foundational knowledge than tips for immediate application. But also, this understanding of color is—we found in retrospect—a powerful lens for understanding the concepts shared throughout this book. We see in our exploration of color this pattern: while many of the absolutes we cling to are social constructs (varying across cultures and over time), behind these changing constructs we also find some universal human constants.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>How Many Colors Are in the Rainbow?</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Let’s begin by unpacking the statement above, suggesting that we only see about a dozen colors. Actually, the human eye can perceive many more colors, perhaps a million or so. Of this million, it’s estimated that each of us—individually—can distinguish somewhere between 130 to 300 colors.<sup>[1]</sup> But within a cultural group, we can only share about a dozen such colors. These limitations have little to do with personal visual acuity, but rather with language: a group’s ability to see and perceive a specific color is determined by language. Do we—as a society—share the same named color value associations?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>We can talk about something being “<em>red</em>” and feel confident in what we all see. From both a developmental perspective and an anthropological perspective, red is the first color (after white and black) that most cultures are aware of. But if I describe something as <em>magenta</em>, do we have a shared agreement as to what that named concept refers to? Perhaps you see hot pink where I see a vibrant, purply-reddish color? Another example of this language-color dependency: the Russian language has a specific word for the color that we (English speakers) perceive as light blue.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>To put this shared vocabulary into perspective, let’s start with something that is constant and beyond our language: the visible spectrum of light that is a rainbow.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>When Colors Are Constant</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Around the world, the meteorological phenomenon we describe as a rainbow is a constant thing. Light refracts across water droplets to create a spectrum visible to humans. What we see as colors are the wavelengths of light visible to the human eye (see <strong>Figure 8.1</strong>). On either end of this visible spectrum are ultraviolet and infrared waves, which while invisible to human eyes, we know they <em>are</em> visible—that is, seen—by cameras and some nonhuman creatures (cats can see certain infrared frequencies, for example). Beyond this visible spectrum, we have things like gamma rays, X-rays, and radio waves, which all make up the entire spectrum of white light from the sun.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172366,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/05/08.01.jpg?w=569\" alt=\"A diagram showing the spectrum of light\" class=\"wp-image-7172366\"/><figcaption><strong>Figure 8.1</strong> The visible light spectrum is a small part of the broader electromagnetic spectrum. Starting from this perspective helps us recognize the subjectivity of what is “seen” and how this might vary with different creatures and devices.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>But let’s stay focused on the portion of this light spectrum that is visible to humans, the part that allows us to see. Within this spectrum, the rainbow possesses millions of color combinations, as there are no clearly defined boundaries between the colors.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Why then, should diverse cultures over thousands of years arrive at the same set of color language definitions? Are colors an absolute thing? Not exactly.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>The Subjectivity of Color Identification</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Consider “ROYGBIV,” which is the acronym we all learned to name the colors of the rainbow. How did we conclude, at least in Western cultures, that a rainbow has seven colors? Why not five, or six, or eleven? We have Sir Isaac Newton to thank for this.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>These seven colors—red, orange, yellow, green, blue, indigo, and violet—were not the result of any serious scientific inquiry. Rather, Newton was fond of the number seven. Just as there are seven musical notes in a scale, Newton believed that colors should follow a similar pattern. He might have connected this with seven days in the week or the seven known planets (at the time) in our universe. In other words, ROYGBIV was an arbitrary choice based on mystical superstition.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Understanding how we arrived at these seven colors sheds light on the subjective nature of color identification. This may also explain a bit about the challenge that so many people have with indigo—that odd color that sits somewhere between blue and violet—as a separate color!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But here is where we have to be careful, as we are stepping into a decades old debate: Do the number of basic color terms and the location of color category boundaries vary across languages? Or might there be a universal pattern to the color naming systems of all cultures?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>This Wikipedia entry sums up the debate rather nicely:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote {\"className\":\"quote\"} -->\n<blockquote class=\"wp-block-quote quote\"><p>There are two formal sides to the color debate, the universalist and the relativist. The universalist side claims that the biology of all human beings is all the same, so the development of color terminology has absolute universal constraints. The relativist side claims that the variability of color terms cross-linguistically (from language to language) points to more culture-specific phenomena. Because color exhibits both biological and linguistic aspects, it has become a deeply studied domain that addresses the relationship between language and thought.<sup> [2]</sup></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:heading -->\n<h2>An Argument for Relative Linguistics</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>We can characterize what Newton did as imposing an arbitrary number of colors upon the color spectrum. And we might conclude the same thing has happened throughout history as different people groups formed words to describe the world around them.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Indeed, various studies of diverse cultures reveal that “although the physiological basis of color vision is essentially the same for all humans with normal trichromatic color vision, there is considerable diversity in the way that different languages segment the continuum of visible colors.”<sup>[3]</sup> In other words, the rainbow has no natural boundaries; how we slice it up into colors is a subjective thing that varies across different cultures and time. (See <strong>Figure 8.2</strong> for an illustration of this concept.) From one research paper, we learned that “some languages have been reported to use as few as two terms to describe all visible colors (Rosch Heider, 1972). Others have been reported to use between three and eleven (Berlin &#38; Kay, 1969), while some (e.g., Russian; Davies and Corbett, 1997) may have twelve.”<sup>[4]</sup></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Specific examples in support of this argument:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>&#160;In Russian culture, there is no generic concept of blue. Rather, Russian makes an obligatory distinction between lighter blues (<em>goluboy</em>) and darker blues (<em>siniy</em>).</li><li>The Japanese language (before the modern period) had just one word,<em> Ao</em>, for both blue and green. It wouldn’t be until the year 1,000 that the word <em>midori</em> would be introduced to distinguish a greenish shade of blue</li><li>The Himba tribe from Namibia recognizes five basic colors.</li><li>The Berinmo of Papua New Guinea has also reached a different conclusion as to the number of colors they recognize. While they draw no distinction between blue and green, they do “draw a distinction within what English speakers would consider yellow, with the word <em>nol</em> on one side and <em>wor</em> on the other.”</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>From this, we might conclude that the colors of the rainbow do seem to be arbitrary and dependent upon language. (Connect this with earlier points we made about thoughts and cognition as layers upon layers of prior associations.)</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172367,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/05/08.02.jpg?w=960\" alt=\"A webcomic from XKCD, reading 'This chart shows the dominant color names over the three fully-saturated faces of the RGB cube (colors where one of the RGB values is zero)\" class=\"wp-image-7172367\"/><figcaption><strong>Figure 8.2</strong> This comic from Randall Munroe of xkcd nicely illustrates the subjectivity of the shared color language for English speakers.[5]</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>But surely, you may be thinking, color identification isn’t entirely subjective? Here’s where the research gets interesting: despite these regional differences, a fascinating and consistent pattern begins to emerge.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>An Argument for the Universal</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>In the late 1960s, after studying color terms across many different languages, researchers Berlin and Kay introduced the idea that there were eleven possible basic color categories: white, black, red, green, yellow, blue, brown, purple, pink, orange, and gray. They argued a universalist theory: that color cognition is <em>an innate, physiological process rather than a cultural one.</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>While their research has been challenged on different grounds, what has since followed is some agreement that for all noted language differences, there is a fixed order in which color names arise. The ways in which color language evolves across cultures suggest maybe there is a universal pattern governing the direction of patterns in the evolution of colors. All cultures start with the ability to distinguish dark things from light things. This is followed by the recognition of red. After that, it might be the addition of yellow or green. And blue always seems to come last. Not every language follows the exact same path, but they adhere to this same general pattern.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>While the broader debate is not necessarily concluded, the general consensus seems to be that “in color, relativism appears to overlay a universalist foundation.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Why All the Fuss over Color?</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>While this is certainly fascinating, how is this useful? We include this as a mirror to challenge assumptions. If we turn a critical eye to the commonly accepted color wheel, this was likely influenced by Newton’s original color wheel sketch. But is this the “right” way to think about colors? <em>Primary colors combine to make secondary colors, which in turn allow us to describe tertiary colors.</em> We learn this from an early age and accept this way of thinking about color as absolute. But this is just one frame. This is just <em>a way</em> of thinking about visible light. And this singular perspective has limitations, especially when used in medical, scientific, and engineering visualizations. Research papers such as “Rainbow Color Map (Still) Considered Harmful”<sup>[6]</sup> question the value of the rainbow color spectrum in data visualization applications. The point is simple: there are other ways we might think about color. We can look at alternatives such as perceptually ordered color spectrums, an <em>isoluminant</em> color map, or simply use representations of color that aren’t derived from a wheel. Tools such as ColorBrewer 2.0<sup>[7]</sup> or the NASA Ames Color Tool<sup>[8]</sup> are incredibly useful for choosing a palette more suitable for visualizing data.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Since this book is concerned with how human creatures understand information, and because we so often use color to clarify, we felt it worth calling out that color and color recognition are not necessarily universal things, but are dependent on cognition, language, and biology. Understanding this allows us to challenge common assumptions about what is “true” about color and perception.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Which leads us to…</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Color, Cultures, and Universal Associations</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Red means stop. Green means go. These concepts are universal, right? Not so fast. Across cultures, colors do not necessarily convey the same concept. And where we may have the same ability to identify a color, the associated meaning is just that—a learned association. Concluding that red means passion, vitality, or energy, because blood and fire are red things is <em>not</em> a universal idea. Neither is associating green with growth, just because nature involves so much green. (In some Chinese cultures, green can be associated with death.) At this point, please throw away those blog posts and posters about colors to choose for different cultures. While we’re keen to seek out human universals, color has proven to be something that does not have consistent meaning across cultures, or even within a culture group. Rather, the concepts we associate with particular colors are highly contextual and local, not just to a particular culture, but sometimes to smaller social groups. The meanings we point to—blue as a safe, corporate color, for example—are highly generalized assumptions, highly contextual, and mostly learned associations.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>The Color Purple</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Let’s take purple, as an example. For many centuries, purple dye was expensive and rare. Procuring purple dye was labor intensive and required collecting a secretion from sea snails. Historian David Jacoby remarked that “twelve thousand snails of Murex brandaris yield no more than 1.4 g of pure dye, enough to colour only the trim of a single garment.”<sup>[9]</sup> As a result of this laborious process, the high cost of producing purple clothing made this color a status symbol among kings, queens, and other rulers. If you could afford to wear purple, you were quite wealthy. The conceptual association then is one of scarcity (in this case of a particular dye), signaling something to be valued above other things. While we may still see the lingering effects of this history (the Purple Heart is among the highest honors awarded for U.S. military service), the constraint of purple as a scarce color is no longer true. As such, this color is able to take on new meanings.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>“Pink Is for Girls, Blue Is for Boys”</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>To put this into perspective, let’s investigate the idea that “pink is for girls, blue is for boys.” From clothing choices to marketing toys to how we decorate bedrooms, most of us grow up believing there’s some inherent gender association built into the colors pink and blue. But, were we to travel back in time—just over 100 years—we’d find no such distinction. Or we might find the opposite association.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>According to University of Maryland historian Jo B. Paoletti, author of <em>Pink and Blue: Telling the Girls from the Boys in America</em>, pink and blue weren't always gender-specific colors. For centuries, young children mostly wore a functional white dress, and then in the early 20th century, things began to change. Consider this quote, pulled from the June 1918 issue of Earnshaw's Infants’ Department, a trade publication:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote {\"className\":\"quote\"} -->\n<blockquote class=\"wp-block-quote quote\"><p>The generally accepted rule is pink for the boys, and blue for the girls. The reason is that pink, being a more decided and stronger color, is more suitable for the boy, while blue, which is more delicate and dainty, is prettier for the girl.</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>A Smithsonian review of Paoletti’s book,<sup>[10]</sup> goes on to add:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>Other sources said blue was flattering for blonds, pink for brunettes; or blue was for blue-eyed babies, pink for brown-eyed babies, according to Paoletti.</p><p>In 1927, <em>Time</em> magazine printed a chart showing sex-appropriate colors for girls and boys according to leading U.S. stores. In Boston, Filene's told parents to dress boys in pink. So did Best &#38; Co. in New York City, Halle's in Cleveland, and Marshall Field in Chicago.</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>By the 1940s, this association had flipped. Manufacturers had settled on pink for girls and blue for boys (see <strong>Figure 8.3</strong> as an example of this association). Baby Boomers were raised with wearing the two colors. The point of this narrative? Color associations are learned things and can change over time. Even something as seemingly strong as the pink/blue binary was a manufactured association. To be clear, this doesn’t mean a color association is any less powerful in the moment, at a particular point in history, but these color associations do not represent any universal truths.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/05/08.03a.jpg?w=960\" alt=\"A box of 'It's a boy!' baby announcement candy cigars in blue\" class=\"wp-image-7172368\"><br><img src=\"https://alistapart.com/wp-content/uploads/2020/05/08.03b.jpg?w=547\" alt=\"A box of 'It's a girl!' baby announcement candy cigars in pink\" class=\"wp-image-7172369\"><figcaption><b>Figure 8.3</b> - The “blue is for boys and pink is for girls” concept was a manufactured one, originating in the first half of the 20th century.</figcaption></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Accordingly, it’s good to be wary of generalizations such as “blue is a safe, corporate color.” In the case of corporate associations, one generation’s “safe” may—depending on the media and actions—signal stuffy, inauthentic, or distrustful to the next generation. It all depends on the learned associations embraced—for a time—by a particular culture.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Not All Colors Are Created Equal</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>We tend to treat our color palettes like interchangeable parts. Just pick a color. Or pick some colors we all find pleasing. Consider how many of us use the default color palettes built into software tools like Excel or PowerPoint. We usually choose a pleasing color palette, with the sentiment being “as long as you can distinguish one color from another, it’s okay, right?”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Not exactly. Not all colors are created equal. In terms of visual perception, some colors jump out at you while others recede into the background (see <strong>Figure 8.4</strong>). This is because of variances in hue and saturation.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172370,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/05/08.04.jpg?w=572\" alt=\"A series of four charts, each with an increasing number of colors\" class=\"wp-image-7172370\"/><figcaption><b>Figure 8.4</b> The range of colors perceived by humans is uneven.<br> (Equiluminant colors from the NASA Ames Color Tool)</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>A very bright color is going to draw more visual attention than a more desaturated color. This makes sense if we consider how things farther away from us tend to be hazier and desaturated. If something in the distance is noticed, it’s likely because it’s moving or contrasts with the surroundings.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>This same disparity applies to color hues. We tend to look at color charts like this one and assume that the extreme ends of red, green, and blue are on equal footing.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172372,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/05/ill08.01a.jpg?w=551\" alt=\"Two gradients, one going from black to red, one going from black to gray\" class=\"wp-image-7172372\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:image {\"id\":7172373,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/05/ill08.01b.jpg?w=551\" alt=\"Two gradients, one going from black to green, one going from black to gray\" class=\"wp-image-7172373\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:image {\"id\":7172374,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/05/ill08.01c.jpg?w=551\" alt=\"Two gradients, one going from black to blue, one going from black to gray\" class=\"wp-image-7172374\"/></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>However, because of the wavelengths of these colors and how our eyes perceive color, we see green as brighter than red, which itself is brighter than blue.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>How Is This Knowledge Useful?</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>While it’s nice to think that precise color values are interchangeable (setting aside any cultural associations), your perception doesn’t work that way. In the same way that certain frequencies on the radio come in clearer than others, certain colors do the same. You need to account for, or at least consider, the unevenness of color perception.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In the example in <strong>Figure 8.5</strong>, you see the same eight-segment pie chart. The example on the right uses all high-saturation colors while the example on the left mixes high- and low- saturation colors.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172371,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/05/08.05.jpg?w=960\" alt=\"Two equal pie charts with differing levels of saturation in the colors\" class=\"wp-image-7172371\"/><figcaption><strong>Figure 8.5</strong> Two pie charts showing identical information. The chart on the left uses colors of mixed saturation, meaning some colors will naturally stand out more than others, making this an uneven representation.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Functionally, these both communicate the same thing. But consider how you <em>perceive</em> each. With the example on the right, use of high saturation is consistent; no color should be more prominent than another. But when you mix high and low saturation, as with the example on the left, the higher saturation colors tend to “pop” more—drawing you to these segments. While this chart is more aesthetically pleasing (as it uses half as many colors), it’s also a bit misleading—notice how your eye is drawn to the orange segment in the upper right. The lesson? Assuming the goal is objectivity and truthfulness, you’d want to avoid mixing saturations and hues that are unevenly perceived. If the goal were the opposite, to draw attention away from or toward a particular bit of data, you could manipulate perception by adjusting saturation and hue (not that this is being recommended!). This ability to direct attention by using bolder colors is something that everyone should be aware of and intentional about.</p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 21 May 2020 14:30:00 +0000","feedId":25,"bgimg":"https://alistapart.com/wp-content/uploads/2020/05/08.01.jpg?w=569","linkMd5":"d92438280eb0bc40f5041fdebcc6030c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn18@2020_3/2021/04/10/03-45-55-881_1ac4a242889ca4e8.webp","destWidth":569,"destHeight":327,"sourceBytes":25880,"destBytes":25880,"author":"\n\t\t\t\tby , \t\t\t\t\t","articleImgCdnMap":{"https://alistapart.com/wp-content/uploads/2020/05/08.01.jpg?w=569":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn18@2020_3/2021/04/10/03-45-55-881_1ac4a242889ca4e8.webp","https://alistapart.com/wp-content/uploads/2020/05/08.02.jpg?w=960":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn57@2020_2/2021/04/10/03-46-17-127_ed936ef9d20a4fde.webp","https://alistapart.com/wp-content/uploads/2020/05/08.03a.jpg?w=960":"https://cdn.jsdelivr.net/gh/myreaderx/cdn46@2020_1/2021/04/10/03-46-15-615_d4b7b812f2c0c048.webp","https://alistapart.com/wp-content/uploads/2020/05/08.03b.jpg?w=547":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn49@2020_6/2021/04/10/03-46-15-943_69657b0fab6ca3c5.webp","https://alistapart.com/wp-content/uploads/2020/05/08.04.jpg?w=572":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn26@2020_3/2021/04/10/03-46-15-849_d45316a5796abca9.webp","https://alistapart.com/wp-content/uploads/2020/05/ill08.01a.jpg?w=551":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn70@2020_3/2021/04/10/03-46-15-501_38dca75a77481bbe.webp","https://alistapart.com/wp-content/uploads/2020/05/ill08.01b.jpg?w=551":"https://cdn.jsdelivr.net/gh/myreaderx/cdn90@2020_5/2021/04/10/03-46-15-612_8a38f06be0ae8a09.webp","https://alistapart.com/wp-content/uploads/2020/05/ill08.01c.jpg?w=551":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn39@2020_4/2021/04/10/03-46-15-836_917f566275140208.webp","https://alistapart.com/wp-content/uploads/2020/05/08.05.jpg?w=960":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn38@2020_2/2021/04/10/03-46-16-369_e746c13a5777dbe2.webp"},"publishedOrCreatedDate":1618026345161},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tStandards for Writing Accessibly\t\t\t\t","link":"https://alistapart.com/article/standards-for-writing-accessibly/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>Writing to meet WCAG2 standards can be a challenge, but it’s worthwhile. Albert Einstein, the archetypical genius and physicist, once said, “Any fool can make things bigger, more complex, and more violent. It takes a touch of genius—and a lot of courage—to move in the opposite direction.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Hopefully, this entire book will help you better write for accessibility. So far, you’ve learned:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Why clarity is important</li><li>How to structure messages for error states and stress cases</li><li>How to test the effectiveness of the words you write</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>All that should help your writing be better for screen readers, give additional context to users who may need it, and be easier to parse.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But there are a few specific points that you may not otherwise think about, even after reading these pages. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Writing for Screen Readers</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>People with little or no sight interact with apps and websites in a much different way than sighted people do. Screen readers parse the elements on the screen (to the best of their abilities) and read it back to the user. And along the way, there are many ways this could go wrong. As the interface writer, your role is perhaps most important in giving screen reader users the best context.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Here are a few things to keep in mind about screen readers:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>The average reading time for sighted readers is two to five words per second. Screen-reader users can comprehend text being read at an average of 35 syllables per second, which is significantly faster. Don’t be afraid to sacrifice brevity for clarity, especially when extra context is needed or useful.</li><li>People want to be able to skim long blocks of text, regardless of sight or audio, so it’s extremely important to structure your longform writing with headers, short paragraphs, and other content design best practices. </li></ul>\n<!-- /wp:list -->\n\n<!-- wp:heading -->\n<h2>Write Chronologically, Not Spatially </h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Writing chronologically is about describing the order of things, rather than where they appear spatially in the interface. There are so many good reasons to do this (devices and browsers will render interfaces differently), but screen readers show you the most valuable reason. You’ll often be faced with writing tooltips or onboarding elements that say something like, “Click the OK button below to continue.” Or “See the instructions above to save your document.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Screen readers will do their job and read those instructions aloud to someone who can’t see the spatial relationships between words and objects. While many times, they can cope with that, they shouldn’t have to. Consider screen reader users in your language. Embrace the universal experience shared by humans and rely on their intrinsic understanding of the <em>top is first, bottom is last</em> paradigm. Write chronologically, as in Figure 5.5.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172224,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/01/fig1.jpg?w=916\" alt=\"\" class=\"wp-image-7172224\" alt=\"A screenshot of a form with a password field. The password hints show up below the password field.\" /><figcaption>FIGURE 5.5 Password hint microcopy below the password field won’t help someone using a screen reader who hasn’t made it there yet.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Rather than saying:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Click the OK button below to continue.</li><li>(A button that scrolls you to the top of a page): Go to top.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Instead, say:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Next, select OK to continue.</li><li>Go to beginning.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:heading -->\n<h2>Write Left to Right, Top to Bottom</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>While you don’t want to convey spatial meaning in your writing, you still want to keep that spatial order in mind.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Have you ever purchased a service or a product, only to find out later that there were conditions you didn’t know about before you paid for it? Maybe you didn’t realize batteries weren’t included in that gadget, or that signing up for that social network, you were implicitly agreeing to provide data to third-party advertisers.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>People who use screen readers face this all the time.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Most screen readers will parse information from left to write, from top to bottom.<sup>1</sup> Think about a few things when reviewing the order and placement of your words. Is there information critical to performing an action, or making a decision, that appears after (to the right or below) an action item, like in Figure 5.5? If so, consider moving it up in the interface. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Instead, if there’s information critical to an action (rules around setting a password, for example, or accepting terms of service before proceeding), place it <em>before </em>the text field or action button. Even if it’s hidden in a tooltip or info button, it should be presented before a user arrives at a decision point.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Don’t Use Colors and Icons Alone </h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>If you are a sighted American user of digital products, there’s a pretty good chance that if you see a message in red, you’ll interpret it as a warning message or think something’s wrong. And if you see a message in green, you’ll likely associate that with success. But while colors aid in conveying meaning to this type of user, they don’t necessarily mean the same thing to those from other cultures.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>For example, although red might indicate excitement, or danger in the U.S. (broadly speaking), in other cultures it means something entirely different:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>In China, it represents good luck.</li><li>In some former-Soviet, eastern European countries it’s the color strongly associated with Communism.</li><li>In India, it represents purity. </li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Yellow, which we in the U.S. often use to mean “caution” (because we’re borrowing a mental model from traffic lights), might convey another meaning for people in other cultures:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>In Latin America, yellow is associated with death.</li><li>In Eastern and Asian cultures, it’s a royal color—sacred and often imperial. </li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>And what about users with color-blindness or low to no vision? And what about screen readers? Intrinsic meaning from the interface color means nothing for them. Be sure to add words that bear context so that if you heard the message being read aloud, you would understand what was being said, as in Figure 5.6.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172225,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/01/fig2.jpg?w=960\" alt=\"\" class=\"wp-image-7172225\" alt=\"Two error tooltips: one that says 'Save your work!' and one that says 'Save your work before going to the next step'\" /><figcaption>FIGURE 5.6 While a simple in-app message warning a user to save their work before proceeding is more effective, visually, if it is red and has a warning icon, as seen on the left, you should provide more context when possible. The example on the right explicitly says that a user won’t be able to proceed to the next step before saving their work.\n</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:heading -->\n<h2>Describe the Action, Not the Behavior</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Touch-first interfaces have been steadily growing and replacing keyboard/mouse interfaces for years, so no longer are users “clicking” a link or a button. But they’re not necessarily “tapping” it either, especially if they’re using a voice interface or an adaptive device.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Instead of microcopy that includes behavioral actions like:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Click</li><li>Tap</li><li>Press</li><li>See</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Try device-agnostic words that describe the action, irrespective of the interface, like:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Choose</li><li>Select</li><li>View</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>There are plenty of exceptions to this rule. If your interface requires a certain action to execute a particular function, and you need to teach the user how their gesture affects the interface (“Pinch to zoom out,” for example), then of course you need to describe the behavior. But generally, the copy you’re writing will be simpler and more consistent if you stick with the action in the context of the interface itself.</p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 23 Jan 2020 15:20:00 +0000","feedId":25,"bgimg":"https://alistapart.com/wp-content/uploads/2020/01/fig1.jpg?w=916","linkMd5":"8139d3fa446049b8fd08f0c966a4ffaf","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn33@2020_3/2021/04/10/03-45-55-785_f48476a020081ec5.webp","destWidth":916,"destHeight":1024,"sourceBytes":39926,"destBytes":39926,"author":"\n\t\t\t\tby , \t\t\t\t\t","articleImgCdnMap":{"https://alistapart.com/wp-content/uploads/2020/01/fig1.jpg?w=916":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn33@2020_3/2021/04/10/03-45-55-785_f48476a020081ec5.webp","https://alistapart.com/wp-content/uploads/2020/01/fig2.jpg?w=960":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn21@2020_6/2021/04/10/03-46-15-462_924538bfd4c31f7e.webp"},"publishedOrCreatedDate":1618026345161},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tKeeping Your Design Mind New and Fresh\t\t\t\t","link":"https://alistapart.com/article/keeping-a-fresh-design-mind/","description":"\n\t\t\t\t\t<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>“Only a fool knows everything.”</em></p><cite>— <em>African Proverb</em></cite></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>Since March 2020, most of us have been working from home, and the days blend into each other and look the same. This is not the first time I have experienced this type of feeling.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>My commute — New York to New Jersey — is what folks in my area call the reverse commute.While going to the office, my days began to look the same: riding the subway to a bus to a shuttle to get to my job. Have you ever arrived at a destination and not even realized how you got there? This is how I began to experience the world everyday. I stopped paying attention to my surroundings.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Because I worked a lot, the only time I would take off was for the holidays. During this time, I was a consultant and was coming to the end of an existing contract. For six years straight, I did this, until I decided to take six weeks off work to travel to Europe and visit places I had not seen before.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>A family friend let me stay with her in Munich, Germany; I did not speak German, and so began my adventure. I was in a new place, where I did not know anyone, and I got lost every single day. My eyes were opened to the fact that every day is an opportunity. It just took me going on a trip and traveling halfway around the world to realize it. There are new things to experience each and every day.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>When I returned to the U.S. and went back to work, I made a conscious decision to make each day different. Sometimes I would walk a new route. Some days I would take another train. Each change meant I saw something new: new clothing, new buildings, and new faces. It really impacted the way I viewed myself in the world.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But what do you do when you cannot travel? Seeing a situation with new eyes takes practice, and you can still create the opportunity to see something by not taking your surroundings for granted.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>How do we do this? For me, I adopted a new philosophy of being WOQE: watching, observing, questioning, and exploring.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172776,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2021/03/woqe.jpg?resize=1024,1024\" alt=\"Two people sit on a bench, one in a suit with arms crossed and the other wearing a backpack while looking through a camera. The letters WOQE surround them.\" class=\"wp-image-7172776\" /></figure>\n<!-- /wp:image -->\n\n<!-- wp:heading -->\n<h2>Watching</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Let go of assumptions to open up your mind. This takes looking at yourself and understanding your beliefs.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>When I am looking to design something, I always have to tell myself that I am not the user. I don’t know where they come from, and I don’t know their reason for making the decisions they do. I begin the work to understand where they are coming from. It all starts with why.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Observing</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>View the situation from different angles. Architects think about the details of a building and look at different viewpoints and perspectives (i.e., outside the building, different sides of the building, etc.)</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>How can you apply this approach to your designs? Here’s an example. I sketched something once as part of an augmented reality experience. Using my mobile device, I was able to walk around the sketch and see it from all sides, including the top and bottom. As a UX Designer, I have had to view items from both a user’s perspective and the business’ perspective. If I am giving a talk at a conference, I look at the talk from an audience perspective and my own.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Questioning</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Use the “5 Why Technique” to get to the root of the problem. This involves asking “why” 5 times.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You know how kids keep asking “why” when you answer a question from them? This approach is how you can get to the root of problems. For example, a friend of mine who is blind expressed interest in playing a popular augmented reality game. This intrigued me and I used a whiteboard as I worked through the 5 Whys with my friend. Here is the process we took:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>“Why can’t someone who is blind play Pokémon Go?” I asked.</em></p><p><em>“Because the game is visual and requires someone to see what is on the screen.”</em></p><p><em>“Why is the game only a visual perspective?”</em></p><p><em>“Because this is the way it was designed.”</em></p><p><em>“Why was it designed this way?”</em></p><p><em>“Because frequently designers are creating for themselves and may not think about who they might be excluding.”</em></p><p><em>“Why are designers excluding people?”</em></p><p><em>“Because they were never taught to include them.”</em></p><p><em>“Why were they never taught?”</em></p><p><em>“Design programs often do not include an inclusive and accessible curriculum.”</em></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>This may not be a scientific way of approaching a problem, but it is a starting point. My friend could not play this augmented reality game because designers were not taught to make this game for someone who is blind. After this exercise, I was able to work with a group of students who worked with my friend to create an augmented reality concept and ultimately a game using audio and haptic feedback.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>It all started with why.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Exploring</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Collaborate with others to learn from others and teach others what you know. Let your friends and colleagues know what you are working on, and perhaps talk it through with them.<br><br>When I was a freelance designer, I worked on my own and found it challenging when I would get stuck on a design. I searched online and found a group of designers who would come and share their work with each other for feedback. Through this group, I was able to get some insightful comments on my designs and explain some of my decisions. I began to collaborate with the folks in the group and found it very helpful. When talking to clients, this made me feel more confident explaining my designs because I had already been through the process with my online group.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>With all of our days blending into each other in this pandemic, we as designers have an unprecedented opportunity to really shake things up. Furthermore, we are problem solvers. As you move forward with your design practice, consider being WOQE to design with a fresh mind.</p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 11 Mar 2021 15:00:00 +0000","feedId":25,"bgimg":"https://alistapart.com/wp-content/uploads/2021/03/woqe.jpg?resize=1024,1024","linkMd5":"e017b3baafd3778b2540099c35c08849","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn30@2020_6/2021/04/10/03-46-01-653_27f44b04c2364b86.webp","destWidth":1024,"destHeight":1024,"sourceBytes":94832,"destBytes":94832,"author":"\n\t\t\t\tby \t\t\t\t\t","articleImgCdnMap":{"https://alistapart.com/wp-content/uploads/2021/03/woqe.jpg?resize=1024,1024":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn30@2020_6/2021/04/10/03-46-01-653_27f44b04c2364b86.webp"},"publishedOrCreatedDate":1618026345001},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tCross-Cultural Design\t\t\t\t","link":"https://alistapart.com/article/cross-cultural-design/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>When I first traveled\nto Japan as an exchange student in 2001, I lived in northern Kyoto, a block\nfrom the Kitayama subway station. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>My first time using the train to get to my university was almost a disaster, even though it was only two subway stops away. I thought I had everything I needed to successfully make the trip. I double- and triple-checked that I had the correct change in one pocket and a computer printout of where I was supposed to go in the other. I was able to make it down into the station, but then I just stood at a ticket machine, dumbfounded, looking at all the flashing lights, buttons, and maps above my head (<strong>Fig 5.1</strong>). Everything was so impenetrable. I was overwhelmed by the architecture, the sounds, the signs, and the language. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172286,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/02/5.1-Kyoto-Subway-ticket-machines_v02.jpg?w=960\" alt=\"Photo of two subway ticket machines with complex maps above them\" class=\"wp-image-7172286\"/><figcaption>Fig 5.1: Kyoto subway ticket machines—with many line maps and bilingual station names—can seem complicated, especially to newcomers.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>My eyes craved\nsomething familiar—and there it was. The ticket machine had a small button that\nsaid <em>English</em>! I\npushed it but became even more lost: the instructions were poorly translated,\nand anyway, they explained a system that I couldn’t use in the first place. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Guess what saved me?\nTwo little old Japanese ladies. As they bought tickets, I casually looked over\ntheir shoulders to see how they were using the machines. First, they looked up at\nthe map to find their desired destination. Then, they noted the fare written next\nto the station. Finally, they put some money into the machine, pushed the\nbutton that lit up with their correct fare, and out popped the tickets! Wow! I\ntried it myself after they left. And after a few tense moments, I got my ticket\nand headed through the gates to the train platform.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I pride myself on\nbeing a <em>third-culture</em> <em>kid</em>, meaning I was raised in a culture\nother than the country named on my passport. But even with a cultural upbringing in both Nigeria\nand the US, it was one of the first times I ever had to guess my way through a\ntask with no previous reference points. And I did it! </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Unfortunately, the same guesswork happens online a million times a day. People visit sites that offer them no cultural mental models or visual framework to fall back on, and they end up stumbling through links and pages. Effective visual systems can help eliminate that guesswork and uncertainty by creating layered sets of cues in the design and interface. Let’s look at a few core parts of these design systems and tease out how we can make them more culturally responsive and multifaceted. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Typography</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>If you work on the\nweb, you deal with typography all the time. This isn’t a book about typography—others\nhave written far more eloquently and technically on the subject. What I <em>would\n</em>like to do, however, is examine some of the ways culture and identity\ninfluence our perception of type and what typographic choices designers can\nmake to help create rich cross-cultural experiences.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Stereotypography</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>I came across the word\n<em>stereotypography</em> a few years ago. Being African, I’m well aware of the way my continent is\nportrayed in Western media—a dirt-poor, rural monoculture with little in the\nway of technology, education, or urbanization. In the West, one of the most recognizable\ngraphic markers for things African, tribal, or uncivilized (and no, they are\nnot the same thing) is the typeface Neuland. Rob Giampietro calls it “the New\nBlack Face,” a clever play on words. In an essay, he asks an important\nquestion: </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>How did [Neuland and Lithos] come to signify Africans and African-Americans, regardless of how a designer uses them, and regardless of the purpose for which their creators originally intended them? (<a href=\"http://bkaprt.com/ccd/05-01/\">http://bkaprt.com/ccd/05-01/</a>)</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>From its release in 1923 and continued use through the 1940s in African-American-focused advertising, Neuland has carried heavy connotations and stereotypes of cheapness, ugliness, tribalism, and roughness. You see this even today. Neuland is used in posters for movies like <em>Tarzan</em>, <em>Jurassic Park</em>, and <em>Jumanji—</em>movies that are about jungles, wildness, and scary beasts lurking in the bush, all Western symbolism for the continent of Africa. Even MyFonts’ download page for Neuland (<strong>Fig 5.2</strong>) includes tags for “Africa,” “jungle fever,” and “primitive”—tags unconnected to anything else in the product besides that racist history.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172287,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/02/5.2-myfonts-neuland.jpg?w=960\" alt=\"\" class=\"wp-image-7172287\"/><figcaption>Fig 5.2: On MyFonts, the Neuland typeface is tagged with “Africa”, “jungle fever”, and “primitive”, perpetuating an old and irrelevant typographic stereotype (<a href=\"http://bkaprt.com/ccd/05-02/\">http://bkaprt.com/ccd/05-02/</a>).</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Don’t make, use, or\nsell fonts this way. Here are some tips on how to avoid stereotypography when\ndefining your digital experiences:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li><strong>Be immediately suspicious of any typeface that “looks like” a culture or country.</strong> For example, so-called “wonton” or “chop-suey” fonts, whose visual style is thought to express “Asianness” or to suggest Chinese calligraphy, have long appeared on food cartons, signs, campaign websites, and even Abercrombie &#38; Fitch T-shirts with racist caricatures of Asians (<a href=\"http://bkaprt.com/ccd/05-03/\">http://bkaprt.com/ccd/05-03/</a>). Monotype’s website, where you can buy a version called Mandarin Regular (US$35), cringingly describes the typeface’s story as “an interpretation of artistically drawn Asian brush calligraphy” (<strong>Fig 5.3</strong>). Whether or not you immediately know its history, run away from any typeface that purports to represent an entire culture. </li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":7172288,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/02/5.3-fonts-dot-com-mandarin-page.png?w=960\" alt=\"A font called &#34;Mandarin&#34; with a stereotypical Asian aesthetic\" class=\"wp-image-7172288\"/><figcaption>Fig 5.3: Fonts.com sells a typeface called Mandarin Regular with the following description: “The stylized Asian atmosphere is not created only by the forms of the figures but also by the very name of the typeface. A mandarin was a high official of the ancient Chinese empire” (http://bkaprt.com/ccd/05-04/).</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:list -->\n<ul><li><strong>Support type designers who are from the culture you are designing for.</strong> This might seem like it’s a difficult task, but the internet is a big place. I have found that, for clients who are sensitive to cultural issues, the inclusion of type designers’ names and backgrounds can be a powerful differentiator, even making its way into their branding packages as a point of pride.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>The world wide webfont</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Another common design tool\nyou should consider is webfonts—fonts specifically designed for use on websites\nand apps. One of the main selling points of webfonts is that instead of\nputting text in images, clients can use live text on their sites, which is\nbetter for SEO and accessibility. They\nare simple to implement these days, a matter of adding a line of code or\nchecking a box on a templating engine. The easiest way to get them on your site\nis by using a service like Google Fonts, Fontstand, or Adobe Fonts. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Or is it? That assumes\nthose services are actually available to your users. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Google Fonts (and every other service using Google’s Developer API) is blocked in mainland China, which means that any of those nice free fonts you chose would simply not load (<a href=\"http://bkaprt.com/ccd/05-05/\">http://bkaprt.com/ccd/05-05/</a>). You can work around this, but it also helps to have a fallback font—that’s what they’re for. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>When you’re building your design system, why not take a few extra steps to define some webfonts that are visible in places with content blocks? Justfont is one of the first services focused on offering a wide range of Chinese webfonts (<a href=\"http://bkaprt.com/ccd/05-06/\">http://bkaprt.com/ccd/05-06/</a>). They have both free and paid tiers of service, similar to Western font services. After setting up an account, you can grab whatever CSS and <code>font-family</code> information you need. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Multiple script\nsystems </h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>When your design work\nrequires more than one script—for instance, a Korean typeface and a Latin\ntypeface—your choices get much more difficult. Designs that incorporate more\nthan one are called multiple script systems (<em>multiscript systems</em> for short). Combining them is an\ninteresting design challenge, one that requires extra typographic sensitivity. Luckily,\nyour multiscript choices will rarely appear on the same page together; you will\nusually be choosing fonts that work across the brand, not that work well next\nto one another visually. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Let’s take a look at an example of effective multiscript use. SurveyMonkey, an online survey and questionnaire tool, has their site localized into a variety of different languages (<strong>Fig 5.4</strong>). Take note of the headers, the structure of the text in the menu and buttons, and how both fonts feel like part of the same brand. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure class=\"wp-block-image size-large\">\n<img src=\"https://alistapart.com/wp-content/uploads/2020/02/5.4-SurveyMonkey-Korean-take-a-tour-page.png?w=960\" alt=\"A SurveyMonkey page in Korean with a simple aesthetic\" class=\"wp-image-7172290\" style=\"max-width: 49%; float: left;\">\n<img src=\"https://alistapart.com/wp-content/uploads/2020/02/5.4-SurveyMonkey-English-take-a-tour-page.png?w=960\" alt=\"A SurveyMonkey page in English with a simple and similar aesthetic\" class=\"wp-image-7172289\" style=\"max-width: 49%;\">\n<figcaption>Fig 5.4: Compare the typographic choices in the Korean (<a href=\"http://bkaprt.com/ccd/05-07/\">http://bkaprt.com/ccd/05-07/</a>) and US English (<a href=\"http://bkaprt.com/ccd/05-08/\">http://bkaprt.com/ccd/05-08/</a>) versions of SurveyMonkey’s Take a Tour page. Do the header type and spacing retain the spirit of the brand while still accounting for typographic needs?</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Some tips as you attempt to choose multiscript fonts for your\nproject:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li><strong>Inspect the overall weight and contrast level of the scripts.</strong> Take the time to examine how weight and contrast are used in the scripts you’re using. Find weights and sizes that give you a similar feel and give the page the right balance, regardless of the script. </li><li><strong>Keep an eye on awkward script features.</strong> Character x-heights, descenders, ascenders, and spacing can throw off the overall brand effect. For instance, Japanese characters are always positioned within a grid with all characters designed to fit in squares of equal height and width. Standard Japanese typefaces also contain Latin characters, called <em>romaji</em>. Those Latin characters will, by default, be kerned according to that same grid pattern, often leaving their spacing awkward and ill-formed. Take the extra time to find a typeface that doesn’t have features that are awkward to work with.</li><li><strong>Don’t automatically choose scripts based on superficial similarity.</strong> Initial impressions don’t always mean a typeface is the right one for your project. In an interview in the book <em>Bi-Scriptual</em>, Jeongmin Kwon, a typeface designer based in France, offers an example (<a href=\"http://bkaprt.com/ccd/05-09/\">http://bkaprt.com/ccd/05-09/</a>). Nanum Myeongjo, a contemporary Hangul typeface, might at first glance look really similar to a seventeenth-century Latin old-style typeface—for instance, they both have angled serifs. However, Nanum Myeongjo was designed in 2008 with refined, modern strokes, whereas old-style typefaces were originally created centuries ago and echo handwritten letterforms (<a href=\"http://bkaprt.com/ccd/05-10/\">http://bkaprt.com/ccd/05-10/</a>). Looking at the Google Fonts page for Nanum Myeongjo, though, none of that is clear (<strong>Fig 5.5</strong>). The page automatically generates a Latin <em>Nn</em> glyph in the top left of the page, instead of a more representative Hangul character sample. If I based my multiscript font choices on my initial reactions to that page, my pairings wouldn’t accurately capture the history and design of each typeface.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"id\":7172291,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/02/5.5-Nanum-Myeongjo-Google-Font.png?w=960\" alt=\"A font with a large sample character in Latin text rather than a more representative Hangul character\" class=\"wp-image-7172291\"/><figcaption>Fig 5.5: The Google Fonts page for Nanum Myeongjo shows a Latin character sample in the top left, rather than a more representative character sample.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Visual density</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>CSS can help you control\nvisual density—how much text, image, and other content there is relative to the\nnegative space on your page. As you read on, keep cultural variables in mind: different\ncultures value different levels of visual density.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Let’s compare what are\ncommonly called <em>CJK</em>\n(Chinese, Japanese, Korean) alphabets and <em>Latin</em> (English, French, Italian, etc.) alphabets. CJK alphabets\nhave more complex characters, with shapes that are generally squarer than Latin\nletterforms. The glyphs also tend to be more detailed than Latin ones, resulting\nin a higher visual density. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Your instinct might be\nto create custom type sizes and line heights for each of your localized pages.\nThat is a perfectly acceptable option, and if you are a typophile, it may drive\nyou crazy <em>not</em> to\ndo it. But I’m here to tell you that­ when adding CJK languages to a design\nsystem, you can update it to account for their visual density without ripping\nout a lot of your original CSS: </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol><li>Choose a font size that is slightly larger for CJK characters, because of their density. </li><li>Choose a line height that gives you ample vertical space between each line of text (referred to as <code>line-height</code> in CSS). </li><li>Look at your Latin text in the same sizes and see if it still works. </li><li>Tweak them together to find a size that works well with both scripts. </li></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>The 2017 site for Typojanchi, the Korean Typography Biennale, follows this methodology (<strong>Fig 5.6</strong>). Both the English and Korean texts have a <code>font-size</code> of <code>1.25em</code>, and a <code>line-height</code> of <code>1.5</code>. The result? The English text takes up more space vertically, and the block of Korean text is visually denser, but both are readable and sit comfortably within the overall page design. It is useful to compare translated websites like this to see how CSS styling can be standardized across Latin and CJK pages.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/02/5.6-Typojanchi-English-page.png?w=836\" alt=\"A basic layout with English text\" class=\"wp-image-7172296\" style=\"max-width: 49%; float: left;\"><img src=\"https://alistapart.com/wp-content/uploads/2020/02/5.6-Typojanchi-Korean-page.png?w=836\" alt=\"A basic layout with Korean text\" class=\"wp-image-7172297\" style=\"max-width: 49%;\"><figcaption>Fig 5.6: The 2017 site for Typojanchi, the Korean Typography Biennale, shows differing visual density in action. It is useful to compare translated websites like this to see how CSS styling can be standardized across Latin and CJK pages (http://bkaprt.com/ccd/05-11/).</figcaption></figure>\n<!-- /wp:html -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Text expansion factors</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Expansion factors calculate\nhow long strings of text will be in different languages. They use either a\ndecimal (1.8) or a percentage (180%) to calculate the length of a text string\nin English versus a different language. Of course, letter-spacing depends on\nthe actual word or phrase, but think of them as a very rough way to anticipate space\nfor text when it gets translated. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Using expansion factors is best when planning for microcopy, calls to action, and menus, rather than long-form content like articles or blog posts that can freely expand down the page. The Salesforce Lightning Design System offers a detailed expansion-factor table to help designers roughly calculate space requirements for other languages in a UI (<strong>Fig 5.7</strong>). </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172292,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/02/5.7-expansion-factor-table.png?w=736\" alt=\"A chart showing how a different piece of content lays out in different languages\" class=\"wp-image-7172292\"/><figcaption>Fig 5.7: This expansion-factor table from Salesforce lets designers and developers estimate the amount of text that will exist in different languages. Though dependent on the actual words, such calculations can give you a benchmark to design with content in mind (<a href=\"http://bkaprt.com/ccd/05-12/\">http://bkaprt.com/ccd/05-12/</a>).</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>But wait! Like\neverything in cross-cultural design, nothing is ever that simple. Japanese, for\nexample, has three scripts: <em>Kanji</em>, for characters of Chinese origin,\n<em>hiragana</em>, for words and sounds that are not represented in <em>kanji</em>,&#160;and&#160;<em>katakana</em>,\nfor words borrowed from other\nlanguages.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The follow button is a core part of the Twitter experience. It has six characters in English (“Follow”) and four in Japanese (<a>フォロー</a>), but the Japanese version is twenty percent longer because it is in katakana, and those characters take up more space than kanji (<strong>Fig 5.8</strong>). Expansion tables can struggle to accommodate the complex diversity of human scripts and languages, so don’t look to them as a one-stop or infallible solution. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/02/5.8-Twitter-Follow-Button-in-Japanese.png?w=960\" alt=\"The Twitter UI in Japanese\" class=\"wp-image-7172294\"><img src=\"https://alistapart.com/wp-content/uploads/2020/02/5.8-Twitter-Follow-Button-in-English.png?w=960\" alt=\"The Twitter UI in English\" class=\"wp-image-7172293\"><figcaption>Fig 5.8: On Twitter, expansion is clearly visible: the English “Follow” button text comes in at about 47 pixels wide, while the Japanese text comes in at 60 pixels wide. </figcaption></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Here are a few things\nyou can do keep expansion factors in mind as you design:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li><strong>Generate dummy text in different languages for your design comps.</strong> Of course, you should make sure your text doesn’t contain any unintentional swearwords or improper language, but tools like Foreign Ipsum are<strong> </strong>a good place to start getting your head around expansion factors (<a href=\"http://bkaprt.com/ccd/05-13/\">http://bkaprt.com/ccd/05-13/</a>).</li><li><strong>Leave extra space around buttons, menu items, and other microcopy. </strong>As well as being general good practice in responsive design, this allows you to account for how text in your target languages expands.</li><li><strong>Make sure your components are expandable.</strong> Stay away from assigning a fixed width to your UI elements unless it’s unavoidable.</li><li><strong>Let longer text strings wrap to a second line.</strong> Just ensure that text is aligned correctly and is easy to scan.</li></ul>\n<!-- /wp:list -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 27 Feb 2020 15:30:00 +0000","feedId":25,"bgimg":"https://alistapart.com/wp-content/uploads/2020/02/5.1-Kyoto-Subway-ticket-machines_v02.jpg?w=960","linkMd5":"ed4566369d36fde5133953ab436121a8","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn65@2020_3/2021/04/10/03-46-12-042_1c4e46888f57ce72.webp","destWidth":960,"destHeight":549,"sourceBytes":205098,"destBytes":205098,"author":"\n\t\t\t\tby \t\t\t\t\t","articleImgCdnMap":{"https://alistapart.com/wp-content/uploads/2020/02/5.1-Kyoto-Subway-ticket-machines_v02.jpg?w=960":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn65@2020_3/2021/04/10/03-46-12-042_1c4e46888f57ce72.webp","https://alistapart.com/wp-content/uploads/2020/02/5.2-myfonts-neuland.jpg?w=960":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn91@2020_6/2021/04/10/03-46-15-573_feee4576d41ad290.webp","https://alistapart.com/wp-content/uploads/2020/02/5.3-fonts-dot-com-mandarin-page.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn41@2020_2/2021/04/10/03-46-15-543_a177d33c8ad9601d.webp","https://alistapart.com/wp-content/uploads/2020/02/5.4-SurveyMonkey-Korean-take-a-tour-page.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn26@2020_3/2021/04/10/03-46-16-975_38070e6657f0c20e.webp","https://alistapart.com/wp-content/uploads/2020/02/5.4-SurveyMonkey-English-take-a-tour-page.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn27@2020_1/2021/04/10/03-46-15-627_47a8b8545fb10a54.webp","https://alistapart.com/wp-content/uploads/2020/02/5.5-Nanum-Myeongjo-Google-Font.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn30@2020_1/2021/04/10/03-46-15-734_cf44c127582e4c7b.webp","https://alistapart.com/wp-content/uploads/2020/02/5.6-Typojanchi-English-page.png?w=836":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn98@2020_6/2021/04/10/03-46-15-642_aad21daf85379610.webp","https://alistapart.com/wp-content/uploads/2020/02/5.6-Typojanchi-Korean-page.png?w=836":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn83@2020_4/2021/04/10/03-46-15-718_4dc171e35c9cdb8d.webp","https://alistapart.com/wp-content/uploads/2020/02/5.7-expansion-factor-table.png?w=736":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn77@2020_4/2021/04/10/03-46-15-484_bab48fb92d8a573b.webp","https://alistapart.com/wp-content/uploads/2020/02/5.8-Twitter-Follow-Button-in-Japanese.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn19@2020_5/2021/04/10/03-46-15-687_46111a67e755ff26.webp","https://alistapart.com/wp-content/uploads/2020/02/5.8-Twitter-Follow-Button-in-English.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn38@2020_5/2021/04/10/03-46-15-737_efab797c392117bc.webp"},"publishedOrCreatedDate":1618026345161},{"createdTime":"2021-04-10 11:45:54","updatedTime":"2021-04-10 11:45:54","title":"\n\t\t\t\t\tHuman-Readable JavaScript: A Tale of Two Experts\t\t\t\t","link":"https://alistapart.com/article/human-readable-javascript/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>Everyone wants to be an expert. But what does that even mean? Over the years I’ve seen two types of people who are referred to as “experts.” Expert 1 is someone who knows every tool in the language and makes sure to use every bit of it, whether it helps or not. Expert 2 also knows every piece of syntax, but they’re pickier about what they employ to solve problems, considering a number of factors, both code-related and not.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Can you take a guess at which expert we want working on our team? If you said Expert 2, you’d be right. They’re a developer focused on delivering readable code—lines of JavaScript others can understand and maintain. Someone who can make the complex simple. But “readable” is rarely definitive—in fact, it’s largely based on the eyes of the beholder. So where does that leave us? What should experts aim for when writing readable code? Are there clear right and wrong choices? The answer is, it depends.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>The obvious choice</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>In order to improve developer experience, TC39 has been adding lots of new features to ECMAScript in recent years, including many proven patterns borrowed from other languages. One such addition, added in ES2019, is <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\"><code>Array.prototype.flat()</code></a> It takes an argument of depth or <code>Infinity</code>, and flattens an array. If no argument is given, the depth defaults to 1.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Prior to this addition, we needed the following syntax to flatten an array to a single level.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre><code class=\"language-javascript\">let arr = [1, 2, [3, 4]];\n\n[].concat.apply([], arr);\n// [1, 2, 3, 4]</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>When we added <code>flat()</code>, that same functionality could be expressed using a single, descriptive function.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre><code class=\"language-javascript\">arr.flat();\n// [1, 2, 3, 4]</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Is the second line of code more readable? The answer is emphatically yes. In fact, both experts would agree.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Not every developer is going to be aware that <code>flat()</code> exists. But they don’t need to because <code>flat()</code> is a descriptive verb that conveys the meaning of what is happening. It’s a lot more intuitive than <code>concat.apply()</code>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>This is the rare case where there is a definitive answer to the question of whether new syntax is better than old. Both experts, each of whom is familiar with the two syntax options, will choose the second. They’ll choose the shorter, clearer, more easily maintained line of code.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But choices and trade-offs aren’t always so decisive.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>The gut check</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>The wonder of JavaScript is that it’s incredibly versatile. There is a reason it’s all over the web. Whether you think that’s a good or <a href=\"https://alistapart.com/article/responsible-javascript-part-1/\">bad</a> thing is another story.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But with that versatility comes the paradox of choice. You can write the same code in many different ways. How do you determine which way is “right”? You can’t even begin to make a decision unless you understand the available options and their limitations.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Let’s use functional programming with <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>map()</code></a> as the example. I’ll walk through various iterations that all yield the same result.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>This is the tersest version of our <code>map()</code> examples. It uses the fewest characters, all fit into one line. This is our baseline.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre><code class=\"language-javascript\">const arr = [1, 2, 3];\nlet multipliedByTwo = arr.map(el =&#62; el * 2);\n// multipliedByTwo is [2, 4, 6]</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>This next example adds only two characters: parentheses. Is anything lost? How about gained? Does it make a difference that a function with more than one parameter will always need to use the parentheses? I’d argue that it does. There is little to no detriment&#160; in adding them here, and it improves consistency when you inevitably write a function with multiple parameters. In fact, when I wrote this, <a href=\"https://prettier.io\">Prettier</a> enforced that constraint; it didn’t want me to create an arrow function without the parentheses.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre><code class=\"language-javascript\">let multipliedByTwo = arr.map((el) =&#62; el * 2);</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Let’s take it a step further. We’ve added curly braces and a return. Now this is starting to look more like a traditional function definition. Right now, it may seem like overkill to have a keyword as long as the function logic. Yet, if the function is more than one line, this extra syntax is again required. Do we presume that we will not have any other functions that go beyond a single line? That seems dubious.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre><code class=\"language-javascript\">let multipliedByTwo = arr.map((el) =&#62; {\n  return el * 2;\n});</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Next we’ve removed the arrow function altogether. We’re using the same syntax as before, but we’ve swapped out for the <code>function</code> keyword. This is interesting because there is no scenario in which this syntax won’t work; no number of parameters or lines will cause problems, so consistency is on our side. It’s more verbose than our initial definition, but is that a bad thing? How does this hit a new coder, or someone who is well versed in something other than JavaScript? Is someone who knows JavaScript well going to be frustrated by this syntax in comparison?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre><code class=\"language-javascript\">let multipliedByTwo = arr.map(function(el) {\n  return el * 2;\n});</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Finally we get to the last option: passing just the function. And <code>timesTwo</code> can be written using any syntax we like. Again, there is no scenario in which passing the function name causes a problem. But step back for a moment and think about whether or not this could be confusing. If you’re new to this codebase, is it clear that <code>timesTwo</code> is a function and not an object? Sure, <code>map()</code> is there to give you a hint, but it’s not unreasonable to miss that detail. How about the location of where <code>timesTwo</code> is declared and initialized? Is it easy to find? Is it clear what it’s doing and how it’s affecting this result? All of these are important considerations.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre><code class=\"language-javascript\">const timesTwo = (el) =&#62; el * 2;\nlet multipliedByTwo = arr.map(timesTwo);</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>As you can see, there is no obvious answer here. But making the right choice for your codebase means understanding all the options and their limitations. And knowing that consistency requires parentheses and curly braces and <code>return</code> keywords.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>There are a number of questions you have to ask yourself when writing code. Questions of <a href=\"https://alistapart.com/article/responsible-javascript-part-2/#section9\">performance</a> are typically the most common. But when you’re looking at code that is functionally identical, your determination should be based on humans—how humans consume code.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Maybe newer isn’t always better</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>So far we’ve found a clear-cut example of where both experts would reach for the newest syntax, even if it’s not universally known. We’ve also looked at an example that poses a lot of questions but not as many answers.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Now it’s time to dive into code that I’ve written before...and removed. This is code that made me the first expert, using a little-known piece of syntax to solve a problem to the detriment of my colleagues and the maintainability of our codebase.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">Destructuring assignment</a> lets you unpack values from objects (or arrays). It typically looks something like this.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre><code class=\"language-javascript\">const {node} = exampleObject;</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>It initializes a variable and assigns it a value all in one line. But it doesn’t have to.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre><code class=\"language-javascript\">let node\n;({node} = exampleObject)</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>The last line of code assigns a variable to a value using destructuring, but the variable declaration takes place one line before it. It’s not an uncommon thing to want to do, but many people don’t realize you can do it.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But look at that code closely. It forces an awkward semicolon for code that doesn’t use semicolons to terminate lines. It wraps the command in parentheses and adds the curly braces; it’s entirely unclear what this is doing. It’s not easy to read, and, as an expert, it shouldn’t be in code that I write.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre><code class=\"language-javascript\">let node\nnode = exampleObject.node</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>This code solves the problem. It works, it’s clear what it does, and my colleagues will understand it without having to look it up. With the destructuring syntax, just because I <em>can</em> doesn’t mean I <em>should</em>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Code isn’t everything</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>As we’ve seen, the Expert 2 solution is rarely obvious based on code alone; yet there are still clear distinctions between which code each expert would write. That’s because code is for machines to read and humans to interpret. So there are non-code factors to consider!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The syntax choices you make for a team of JavaScript developers is different than those you should make for a team of polyglots who aren’t steeped in the minutiae.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Let’s take spread vs. <code>concat()</code> as an example.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Spread was added to ECMAScript a few years ago, and it’s enjoyed wide adoption. It’s sort of a utility syntax in that it can do a lot of different things. One of them is concatenating a number of arrays.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre><code class=\"language-javascript\">const arr1 = [1, 2, 3];\nconst arr2 = [9, 11, 13];\nconst nums = [...arr1, ...arr2];</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>As powerful as spread is, it isn’t a very intuitive symbol. So unless you already know what it does, it’s not super helpful. While both experts <em>may</em> safely assume a team of JavaScript specialists are familiar with this syntax, Expert 2 will probably question whether that’s true of a team of polyglot programmers. Instead, Expert 2 may select the <code>concat()</code> method instead, as it’s a descriptive verb that you can probably understand from the context of the code.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>This code snippet gives us the same nums result as the spread example above.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<pre><code class=\"language-javascript\">const arr1 = [1, 2, 3];\nconst arr2 = [9, 11, 13];\nconst nums = arr1.concat(arr2);</code></pre>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>And that’s but one example of how human factors influence code choices. A codebase that’s touched by a lot of different teams, for example, may have to hold more stringent standards that don’t necessarily keep up with the latest and greatest syntax. Then you move beyond the main source code and consider other factors in your tooling chain that make life easier, or harder, for the humans who work on that code. There is code that can be structured in a way that’s <a href=\"https://www.freecodecamp.org/news/how-to-write-testable-code/\">hostile to testing</a>. There is code that backs you into a corner for <a href=\"https://www.codeproject.com/Articles/701862/How-Not-to-Back-Yourself-into-a-Corner\">future scaling or feature addition</a>. There is code that’s <a href=\"https://laurieontech.com/posts/performance-diagnosis/\">less performant</a>, doesn’t <a href=\"https://alistapart.com/article/fromswitchestotargets/\">handle different browsers</a>, or <a href=\"https://a11y.coffee/\">isn’t accessible</a>. All of these factor into the recommendations Expert 2 makes.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Expert 2 also considers the impact of naming. But let’s be honest, even <em>they</em> can’t get that right most of the time.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Conclusion</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Experts don’t prove themselves by using every piece of the spec; they prove themselves by knowing the spec well enough to deploy syntax judiciously and make well-reasoned decisions. This is how experts become multipliers—how they make new experts.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>So what does this mean for those of us who consider ourselves experts or aspiring experts? It means that writing code involves asking yourself a lot of questions. It means considering your developer audience in a real way. The best code you can write is code that accomplishes something complex, but is inherently understood by those who examine your codebase.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>And no, it’s not easy. And there often isn’t a clear-cut answer. But it’s something you should consider with every function you write.</p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 25 Mar 2021 14:00:00 +0000","feedId":25,"bgimg":"","linkMd5":"6964d2fef80efee6b89d501b0b749499","bgimgJsdelivr":"","metaImg":"","author":"\n\t\t\t\tby \t\t\t\t\t","publishedOrCreatedDate":1618026354768},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tRequest with Intent: Caching Strategies in the Age of PWAs\t\t\t\t","link":"https://alistapart.com/article/request-with-intent-caching-strategies-in-the-age-of-pwas/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>Once upon a time, we relied on browsers to handle caching for us; as developers in those days, we had very little control. But then came <a href=\"https://alistapart.com/article/yes-that-web-project-should-be-a-pwa/\">Progressive Web Apps</a> (PWAs), <a href=\"https://developer.mozilla.org/docs/Web/API/Service_Worker_API\">Service Workers</a>, and the <a href=\"https://developer.mozilla.org/docs/Web/API/Cache\">Cache API</a>—and suddenly we have expansive power over what gets put in the cache and how it gets put there. We can now cache everything we want to… and therein lies a potential problem.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Media files—especially images—make up <a href=\"https://httparchive.org/reports/page-weight\">the bulk of average page weight</a> these days, and <a href=\"https://httparchive.org/reports/page-weight#bytesImg\">it’s getting worse</a>. In order to improve performance, it’s tempting to cache as much of this content as possible, but should we? In most cases, no. Even with all this newfangled technology at our fingertips, great performance still hinges on a simple rule: <a href=\"https://alistapart.com/article/the-best-request-is-no-request-revisited\">request only what you need and make each request as small as possible</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>To provide the best possible experience for our users without abusing their network connection or their hard drive, it’s time to put a spin on some classic best practices, experiment with media caching strategies, and play around with a few Cache API tricks that Service Workers have hidden up their sleeves.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Best intentions</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>All those lessons we learned optimizing web pages for dial-up became super-useful again when mobile took off, and they continue to be applicable in the work we do for a global audience today. Unreliable or high latency network connections are still the norm in many parts of the world, reminding us that it’s never safe to assume a technical baseline lifts evenly or in sync with its corresponding cutting edge. And that’s the thing about performance best practices: history has borne out that approaches that are good for performance now will continue being good for performance in the future.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Before the advent of Service Workers, we could provide <a href=\"https://developer.yahoo.com/performance/rules.html#expires\">some instructions to browsers</a> with respect to how long they should cache a particular resource, but that was about it. Documents and assets downloaded to a user’s machine would be dropped into a directory on their hard drive. When the browser assembled a request for a particular document or asset, it would peek in the cache first to see if it already had what it needed to possibly avoid hitting the network.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>We have considerably more control over network requests and the cache these days, but that doesn’t excuse us from being thoughtful about the resources on our web pages.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Request only what you need</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>As I mentioned, the web today is lousy with media. Images and videos have become a dominant means of communication. They may convert well when it comes to sales and marketing, but they are hardly performant when it comes to download and rendering speed. With this in mind, each and every image (and video, etc.) should have to fight for its place on the page.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>A few years back, a recipe of mine was included in a newspaper story on cooking with spirits (alcohol, not ghosts). I don’t subscribe to the print version of that paper, so when the article came out I went to the site to take a look at how it turned out. During a recent redesign, the site had decided to load all articles into a nearly full-screen modal viewbox layered on top of their homepage. This meant requesting the article required requests for all of the assets associated with the article page <em>plus</em> all the contents and assets for the homepage. Oh, and the homepage had video ads—plural. And, yes, they auto-played.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I popped open DevTools and discovered the page had blown past 15 MB in page weight. Tim Kadlec had recently launched <a href=\"https://whatdoesmysitecost.com/\">What Does My Site Cost?</a>, so I decided to check out the damage. Turns out that the actual cost to view that page for the average US-based user was more than the cost of the print version of that day’s newspaper. That’s just messed up.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Sure, I could blame the folks who built the site for doing their readers such a disservice, but the reality is that none of us go to work with the goal of worsening our users’ experiences. This could happen to any of us. We could spend days scrutinizing the performance of a page only to have some committee decide to set that carefully crafted page atop a Times Square of auto-playing video ads. Imagine how much worse things would be if we were stacking two abysmally-performing pages on top of each other!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Media can be great for drawing attention when competition is high (e.g., on the homepage of a newspaper), but when you want readers to focus on a single task (e.g., reading the actual article), its value can drop from important to “nice to have.” Yes, studies have shown that images excel at drawing eyeballs, but once a visitor is on the article page, <a href=\"https://theoutline.com/post/2485/not-every-article-needs-a-picture\">no one cares</a>; we’re just making it take longer to download and more expensive to access. The situation only gets worse as we shove more media into the page.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>We must do everything in our power to reduce the weight of our pages, so avoid requests for things that don’t add value. For starters, if you’re writing an article about a data breach, resist the urge to include <a href=\"https://www.istockphoto.com/jp/en/photo/hacker-attacking-internet-gm540848970-96658127\">that ridiculous stock photo</a> of some random dude in a hoodie typing on a computer in a very dark room.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Request the smallest file you can</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Now that we’ve taken stock of what we <em>do</em> need to include, we must ask ourselves a critical question: How can we deliver it in the fastest way possible? This can be as simple as <a href=\"https://vimeo.com/290141511\">choosing the most appropriate image format</a> for the content presented (and optimizing the heck out of it) or as complex as recreating assets entirely (for example, if switching from raster to vector imagery would be more efficient).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4>Offer alternate formats</h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>When it comes to image formats, we don’t have to choose between performance and reach anymore. We can provide multiple options and let <em>the browser</em> decide which one to use, based on what it can handle.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You can accomplish this by offering multiple <code>sources</code> within a <code>picture</code> or <code>video</code> element. Start by creating multiple formats of the media asset. For example, with WebP and JPG, it’s likely that the WebP will have a smaller file size than the JPG (but check to make sure). With those alternate sources, you can drop them into a <code>picture</code> like this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-markup\">&#60;picture&#62;\n  &#60;source srcset=\"my.webp\" type=\"image/webp\"&#62;\n  &#60;img src=\"my.jpg\" alt=\"Descriptive text about the picture.\"&#62;\n&#60;/picture&#62;</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Browsers that recognize the <code>picture</code> element will check the <code>source</code> element before making a decision about which image to request. If the browser supports the MIME type “image/webp,” it will kick off a request for the WebP format image. If not (or if the browser doesn’t recognize <code>picture</code>), it will request the JPG.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The nice thing about this approach is that you’re serving the smallest image possible to the user without having to resort to any sort of JavaScript hackery.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>You can take the same approach with video files:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-markup\">&#60;video controls&#62;\n  &#60;source src=\"my.webm\" type=\"video/webm\"&#62;\n  &#60;source src=\"my.mp4\" type=\"video/mp4\"&#62;\n  &#60;p&#62;Your browser doesn’t support native video playback,\n    but you can &#60;a href=\"my.mp4\" download&#62;download&#60;/a&#62;\n    this video instead.&#60;/p&#62;\n&#60;/video&#62;</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Browsers that support WebM will request the first <code>source</code>, whereas browsers that don’t—but do understand MP4 videos—will request the second one. Browsers that don’t support the <code>video</code> element will fall back to the paragraph about downloading the file.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The order of your <code>source</code> elements matters. <a href=\"https://html.spec.whatwg.org/multipage/media.html#concept-media-load-algorithm\">Browsers will choose the first <em>usable</em> <code>source</code></a>, so if you specify an optimized alternative format <em>after</em> a more widely compatible one, the alternative format may never get picked up.&#160;&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Depending on your situation, you might consider bypassing this markup-based approach and handle things on the server instead. For example, if a JPG is being requested and the browser supports WebP (which is indicated in the <code>Accept</code> header), there’s nothing stopping you from replying with a WebP version of the resource. In fact, some CDN services—<a href=\"https://cloudinary.com\">Cloudinary</a>, for instance—come with this sort of functionality right out of the box.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4>Offer different sizes</h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Formats aside, you may want to deliver alternate image sizes optimized for the current size of the browser’s viewport. After all, there’s no point loading an image that’s 3–4 times larger than the screen rendering it; that’s just wasting bandwidth. This is where <a href=\"https://alistapart.com/article/responsive-images-in-practice/\">responsive images</a> come in.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Here’s an example:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-markup\">&#60;img src=\"medium.jpg\"\n  srcset=\"small.jpg 256w,\n    medium.jpg 512w,\n    large.jpg 1024w\"\n  sizes=\"(min-width: 30em) 30em, 100vw\"\n  alt=\"Descriptive text about the picture.\"&#62;</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>There’s a lot going on in this super-charged <code>img</code> element, so I’ll break it down:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>This <code>img</code> offers three size options for a given JPG: 256 px wide (<code>small.jpg</code>), 512 px wide (<code>medium.jpg</code>), and 1024 px wide (<code>large.jpg</code>). These are provided in the <code>srcset</code> attribute with corresponding <a href=\"https://cloudfour.com/thinks/responsive-images-101-part-4-srcset-width-descriptors/\">width descriptors</a>.</li><li>The <code>src</code> defines a default image source, which acts as a fallback for browsers that don’t support <code>srcset</code>. Your choice for the default image will likely depend on the context and general usage patterns. Often I’d recommend the smallest image be the default, but if the majority of your traffic is on older desktop browsers, you might want to go with the medium-sized image.</li><li>The <code>sizes</code> attribute is a <a href=\"https://www.w3.org/TR/CSS2/cascade.html#preshint\">presentational hint</a> that informs the browser how the image will be rendered in different scenarios (its <a href=\"https://24ways.org/2018/jank-free-image-loads/\">extrinsic size</a>) once CSS has been applied. This particular example says that the image will be the full width of the viewport (<code>100vw</code>) until the viewport reaches 30 em in width (<code>min-width: 30em</code>), at which point the image will be 30 em wide. You can make the <code>sizes</code> value as complicated or as simple as you want; omitting it causes browsers to use the default value of <code>100vw</code>.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>You can even combine this approach with <a href=\"https://alistapart.com/article/responsive-images-in-practice/#snippet13\">alternate formats and crops within a single <code>picture</code></a>. 🤯</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>All of this is to say that you have a number of tools at your disposal for delivering fast-loading media, so use them!</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Defer requests (when possible)</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Years ago, Internet Explorer 11 introduced a new attribute that enabled developers to de-prioritize specific <code>img</code> elements to speed up page rendering: <code>lazyload</code>. That attribute never went anywhere, standards-wise, but it was a solid attempt to defer image loading until images are in view (or close to it) without having to involve JavaScript.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>There have been countless JavaScript-based implementations of lazy loading images since then, but recently Google also took a stab at a more declarative approach, using a different attribute: <a href=\"https://web.dev/native-lazy-loading\"><code>loading</code></a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The <code>loading</code> attribute supports three values (“auto,” “lazy,” and “eager”) to define how a resource should be brought in. For our purposes, the “lazy” value is the most interesting because it defers loading the resource until it reaches a <a href=\"https://web.dev/native-lazy-loading#load-in-distance-threshold\">calculated distance</a> from the viewport.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Adding that into the mix…</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-markup\">&#60;img src=\"medium.jpg\"\n  srcset=\"small.jpg 256w,\n    medium.jpg 512w,\n    large.jpg 1024w\"\n  sizes=\"(min-width: 30em) 30em, 100vw\"\n  loading=\"lazy\"\n  alt=\"Descriptive text about the picture.\"&#62;</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>This attribute offers a bit of a performance boost in Chromium-based browsers. Hopefully it will become a standard and get picked up by other browsers in the future, but in the meantime there’s no harm in including it because browsers that don’t understand the attribute will simply ignore it.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>This approach complements a media prioritization strategy really well, but before I get to that, I want to take a closer look at Service Workers.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Manipulate requests in a Service Worker</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Service Workers are a special type of <a href=\"https://developer.mozilla.org/docs/Web/API/Web_Workers_API/Using_web_workers\">Web Worker</a> with the ability to intercept, modify, and respond to all network requests via the <a href=\"https://developer.mozilla.org/docs/Web/API/Fetch_API\">Fetch API</a>. They also have access to the <a href=\"https://developer.mozilla.org/docs/Web/API/Cache\">Cache API</a>, as well as other asynchronous client-side data stores like <a href=\"https://developer.mozilla.org/docs/Web/API/IndexedDB_API\">IndexedDB</a> for resource storage.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>When a Service Worker is installed, you can hook into that event and prime the cache with resources you want to use later. Many folks use this opportunity to squirrel away copies of global assets, including styles, scripts, logos, and the like, but you can also use it to cache images for use when network requests fail.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Keep a fallback image in your back pocket</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Assuming you want to use a fallback in more than one networking recipe, you can set up a named function that will respond with that resource:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-javascript\">function respondWithFallbackImage() {\n  return caches.match( \"/i/fallbacks/offline.svg\" );\n}</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Then, within a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent\"><code>fetch</code> event handler</a>, you can use that function to provide that fallback image when requests for images fail at the network:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-javascript\">self.addEventListener( \"fetch\", event =&#62; {\n  const request = event.request;\n  if ( request.headers.get(\"Accept\").includes(\"image\") ) {\n    event.respondWith(\n      return fetch( request, { mode: 'no-cors' } )\n        .then( response =&#62; {\n          return response;\n        })\n        .catch(\n          respondWithFallbackImage\n        );\n    );\n  }\n});</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>When the network is available, users get the expected behavior:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172145} -->\n<figure class=\"wp-block-image\"><img src=\"https://alistapart.com/wp-content/uploads/2019/11/fig1.png?w=960\" alt=\"Screenshot of a component showing a series of user profile images of users who have liked something\" class=\"wp-image-7172145\"/><figcaption>Social media avatars are rendered as expected when the network is available.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>But when the network is interrupted, images will be swapped automatically for a fallback, and the user experience is still acceptable:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172144} -->\n<figure class=\"wp-block-image\"><img src=\"https://alistapart.com/wp-content/uploads/2019/11/fig2-1.png?w=960\" alt=\"Screenshot showing a series of identical generic user images in place of the individual ones which have not loaded\" class=\"wp-image-7172144\"/><figcaption>A generic fallback avatar is rendered when the network is unavailable.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>On the surface, this approach may not seem all that helpful in terms of performance since you’ve essentially added an additional image download into the mix. With this system in place, however, some pretty amazing opportunities open up to you.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Respect a user’s choice to save data</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Some users reduce their data consumption by entering a “lite” mode or turning on a “data saver” feature. When this happens, browsers will often send a <a href=\"https://developer.mozilla.org/docs/Web/HTTP/Headers/Save-Data\"><code>Save-Data</code> header</a> with their network requests. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Within your Service Worker, you can look for this header and adjust your responses accordingly. First, you look for the header:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-javascript\">let save_data = false;\nif ( 'connection' in navigator ) {\n  save_data = navigator.connection.saveData;\n}</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Then, within your <code>fetch</code> handler for images, you might choose to preemptively respond with the fallback image instead of going to the network at all:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-javascript\">self.addEventListener( \"fetch\", event =&#62; {\n  const request = event.request;\n  if ( request.headers.get(\"Accept\").includes(\"image\") ) {\n    event.respondWith(\n      if ( save_data ) {\n        return respondWithFallbackImage();\n      }\n      // code you saw previously\n    );\n  }\n});</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>You could even take this a step further and tune <code>respondWithFallbackImage()</code> to provide alternate images based on what the original request was for. To do that you’d define several fallbacks globally in the Service Worker:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-javascript\">const fallback_avatar = \"/i/fallbacks/avatar.svg\",\n      fallback_image = \"/i/fallbacks/image.svg\";</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Both of those files should then be cached during the Service Worker install event:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-javascript\">return cache.addAll( [\n  fallback_avatar,\n  fallback_image\n]);</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Finally, within <code>respondWithFallbackImage()</code> you could serve up the appropriate image based on the URL being fetched. In my site, the avatars are pulled from <a href=\"https://webmention.io\">Webmention.io</a>, so I test for that.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-javascript\">function respondWithFallbackImage( url ) {\n  const image = avatars.test( /webmention\\.io/ ) ? fallback_avatar\n                                                 : fallback_image;\n  return caches.match( image );\n}</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>With that change, I’ll need to update the <code>fetch</code> handler to pass in <code>request.url</code> as an argument to <code>respondWithFallbackImage()</code>. Once that’s done, when the network gets interrupted I end up seeing something like this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172143} -->\n<figure class=\"wp-block-image\"><img src=\"https://alistapart.com/wp-content/uploads/2019/11/fig3.png?w=960\" alt=\"Screenshot showing a blog comment with a generic user profile image and image placeholder where the network could not load the actual images\" class=\"wp-image-7172143\"/><figcaption>A webmention that contains both an avatar and an embedded image will render with two different fallbacks when the Save-Data header is present.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Next, we need to establish some general guidelines for handling media assets—based on the situation, of course.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>The caching strategy: prioritize certain media</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>In my experience, media—especially images—on the web tend to fall into three categories of necessity. At one end of the spectrum are elements that don’t add meaningful value. At the other end of the spectrum are critical assets that <em>do</em> add value, such as charts and graphs that are essential to understanding the surrounding content. Somewhere in the middle are what I would call “nice-to-have” media. They <em>do</em> add value to the core experience of a page but are not critical to understanding the content.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>If you consider your media with this division in mind, you can establish some general guidelines for handling each, based on the situation. In other words, a caching strategy. </p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure>\n  <table>\n    <caption>Media loading strategy, broken down by how critical an asset is to understanding an interface</caption>\n    <thead>\n      <tr>\n        <th scope=\"col\">Media category</th>\n        <th scope=\"col\">Fast connection</th>\n        <th scope=\"col\"><code>Save-Data</code></th>\n        <th scope=\"col\">Slow connection</th>\n        <th scope=\"col\">No network</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td data-title=\"Media category\"><b>Critical</b></td>\n        <td colspan=\"3\" data-title=\"Fast connection, Save-Data, Slow Connection\">Load media</td>\n        <td data-title=\"No network\">Replace with placeholder</td>\n      </tr>\n      <tr>\n        <td data-title=\"Media category\"><b>Nice-to-have</b></td>\n        <td data-title=\"Fast connection\">Load media</td>\n        <td colspan=\"3\" data-title=\"Save-Data, Slow connection, No network\">Replace with placeholder</td>\n      </tr>\n      <tr>\n        <td data-title=\"Media category\"><b>Non-critical</b></td>\n        <td colspan=\"4\" data-title=\"Fast connection, Save-Data, Slow connection, No network\">Remove from content entirely</td>\n      </tr>\n    </tbody>\n  </table>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>When it comes to disambiguating the critical from the nice-to-have, it’s helpful to have those resources organized into separate directories (or similar). That way we can add some logic into the Service Worker that can help it decide which is which. For example, on my own personal site, critical images are either self-hosted or come from the website for <a href=\"https://adaptivewebdesign.info\">my book</a>. Knowing that, I can write regular expressions that match those domains:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-javascript\">const high_priority = [\n    /aaron\\-gustafson\\.com/,\n    /adaptivewebdesign\\.info/\n  ];</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>With that <code>high_priority</code> variable defined, I can create a function that will let me know if a given image request (for example) is a high priority request or not:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-javascript\">function isHighPriority( url ) {\n  // how many high priority links are we dealing with?\n  let i = high_priority.length;\n  // loop through each\n  while ( i-- ) {\n    // does the request URL match this regular expression?\n    if ( high_priority[i].test( url ) ) {\n      // yes, it’s a high priority request\n      return true;\n    }\n  }\n  // no matches, not high priority\n  return false;\n}</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Adding support for prioritizing media requests only requires adding a new conditional into the <code>fetch</code> event handler, like we did with <code>Save-Data</code>. Your specific recipe for network and cache handling will likely differ, but here was <a href=\"https://github.com/aarongustafson/aaron-gustafson.com/blob/master/_javascript/serviceworker/fetch.js#L162-L219\">how I chose to mix in this logic within image requests</a>:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-javascript\">// Check the cache first\n  // Return the cached image if we have one\n  // If the image is not in the cache, continue\n\n// Is this image high priority?\nif ( isHighPriority( url ) ) {\n\n  // Fetch the image\n    // If the fetch succeeds, save a copy in the cache\n    // If not, respond with an \"offline\" placeholder\n\n// Not high priority\n} else {\n\n  // Should I save data?\n  if ( save_data ) {\n\n    // Respond with a \"saving data\" placeholder\n\n  // Not saving data\n  } else {\n\n    // Fetch the image\n      // If the fetch succeeds, save a copy in the cache\n      // If not, respond with an \"offline\" placeholder\n  }\n}</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>We can apply this prioritized approach to many kinds of assets. We could even use it to control which pages are served cache-first vs. network-first.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Keep the cache tidy</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>The&#160; ability to control which resources are cached to disk is a huge opportunity, but it also carries with it an equally huge responsibility not to abuse it.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Every caching strategy is likely to differ, at least a little bit. If we’re publishing a book online, for instance, it might make sense to cache all of the chapters, images, etc. for offline viewing. There’s a fixed amount of content and—assuming there aren’t a ton of heavy images and videos—users will benefit from not having to download each chapter separately.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>On a news site, however, caching every article and photo will quickly fill up our users’ hard drives. If a site offers an indeterminate number of pages and assets, it’s <em>critical</em> to have a caching strategy that puts hard limits on how many resources we’re caching to disk.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>One way to do this is to create several different blocks associated with caching different forms of content. The more ephemeral content caches can have strict limits around how many items can be stored. Sure, we’ll still be bound to the storage limits of the device, but do we really want our website to take up 2 GB of someone’s hard drive?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Here’s an example, again from my own site:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-javascript\">const sw_caches = {\n  static: {\n    name: `${version}static`\n  },\n  images: {\n    name: `${version}images`,\n    limit: 75\n  },\n  pages: {\n    name: `${version}pages`,\n    limit: 5\n  },\n  other: {\n    name: `${version}other`,\n    limit: 50\n  }\n}</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Here I’ve defined several caches, each with a <code>name</code> used for addressing it in the Cache API and a <code>version</code> prefix. The <code>version</code> is defined elsewhere in the Service Worker, and allows me to purge all caches at once if necessary.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>With the exception of the <code>static</code> cache, which is used for static assets, every cache has a <code>limit</code> to the number of items that may be stored. I only cache the most recent 5 pages someone has visited, for instance. Images are limited to the most recent 75, and so on. This is an approach that <a href=\"https://adactio.com/\">Jeremy Keith</a> outlines in his fantastic book <a href=\"https://abookapart.com/products/going-offline\"><em>Going Offline</em></a> (which you should really read if you haven’t already—<a href=\"https://alistapart.com/article/going-offline/\">here’s a sample</a>).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>With these cache definitions in place, I can clean up my caches periodically and prune the oldest items. Here’s Jeremy’s recommended code for this approach:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-javascript\">function trimCache(cacheName, maxItems) {\n  // Open the cache\n  caches.open(cacheName)\n  .then( cache =&#62; {\n    // Get the keys and count them\n    cache.keys()\n    .then(keys =&#62; {\n      // Do we have more than we should?\n      if (keys.length &#62; maxItems) {\n        // Delete the oldest item and run trim again\n        cache.delete(keys[0])\n        .then( () =&#62; {\n          trimCache(cacheName, maxItems)\n        });\n      }\n    });\n  });\n}</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>We can trigger this code to run whenever a new page loads. By running it in the Service Worker, it runs in a separate thread and won’t drag down the site’s responsiveness. We trigger it by posting a message (using <code>postMessage()</code>) to the Service Worker from the main JavaScript thread:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-javascript\">// First check to see if you have an active service worker\nif ( navigator.serviceWorker.controller ) {\n  // Then add an event listener\n  window.addEventListener( \"load\", function(){\n    // Tell the service worker to clean up\n    navigator.serviceWorker.controller.postMessage( \"clean up\" );\n  });\n}</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>The final step in wiring it all up is setting up the Service Worker to receive the message:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure><pre><code class=\"language-javascript\">addEventListener(\"message\", messageEvent =&#62; {\n  if (messageEvent.data == \"clean up\") {\n    // loop though the caches\n    for ( let key in sw_caches ) {\n      // if the cache has a limit\n      if ( sw_caches[key].limit !== undefined ) {\n        // trim it to that limit\n        trimCache( sw_caches[key].name, sw_caches[key].limit );\n      }\n    }\n  }\n});</code></pre></figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Here, the Service Worker listens for inbound messages and responds to the “clean up” request by running <code>trimCache()</code> on each of the cache buckets with a defined <code>limit</code>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>This approach is by no means elegant, but it works. It would be far better to make decisions about purging cached responses based on how frequently each item is accessed and/or how much room it takes up on disk. (Removing cached items based purely on when they were cached isn’t nearly as useful.) Sadly, we don’t have that level of detail when it comes to inspecting the caches…yet. I’m actually working to address this limitation in the Cache API right now.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Your users always come first</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>The technologies underlying Progressive Web Apps are continuing to mature, but even if you aren’t interested in turning your site into a PWA, there’s so much you can do today to improve your users’ experiences when it comes to media. And, as with every other form of inclusive design, it starts with centering on your users who are most at risk of having an awful experience.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Draw distinctions between critical, nice-to-have, and superfluous media. Remove the cruft, then optimize the bejeezus out of each remaining asset. Serve your media in multiple formats and sizes, prioritizing the smallest versions first to make the most of high latency and slow connections. If your users say they want to save data, respect that and have a fallback plan in place. Cache wisely and with the utmost respect for your users’ disk space. And, finally, audit your caching strategies regularly—especially when it comes to large media files.Follow these guidelines, and every one of your users—from folks rocking a <a href=\"https://www.jio.com/en-in/jiophone2\">JioPhone</a> on a rural mobile network in India to people on a high-end gaming laptop wired to a 10 Gbps fiber line in Silicon Valley—will thank you.</p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 21 Nov 2019 14:30:06 +0000","feedId":25,"bgimg":"https://alistapart.com/wp-content/uploads/2019/11/fig1.png?w=960","linkMd5":"09359a7364ba3909ac3eedc3084befed","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn38@2020_2/2021/04/10/03-45-56-010_2258d31e4c265f74.webp","destWidth":960,"destHeight":396,"sourceBytes":44518,"destBytes":44518,"author":"\n\t\t\t\tby \t\t\t\t\t","articleImgCdnMap":{"https://alistapart.com/wp-content/uploads/2019/11/fig1.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn38@2020_2/2021/04/10/03-45-56-010_2258d31e4c265f74.webp","https://alistapart.com/wp-content/uploads/2019/11/fig2-1.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn35@2020_1/2021/04/10/03-46-15-811_b57846548d8d0d47.webp","https://alistapart.com/wp-content/uploads/2019/11/fig3.png?w=960":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn5@2020_5/2021/04/10/03-46-15-720_c675605076192d80.webp"},"publishedOrCreatedDate":1618026345113},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tNow THAT&#8217;S What I Call Service Worker!\t\t\t\t","link":"https://alistapart.com/article/now-thats-what-i-call-service-worker/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API\">Service Worker</a> API is the <a href=\"https://en.wikipedia.org/wiki/Dremel\">Dremel</a> of the web platform. It offers incredibly broad utility while also yielding resiliency and better performance. If you’ve not used Service Worker yet—and you couldn’t be blamed if so, as <a href=\"https://almanac.httparchive.org/en/2020/pwa#service-workers\">it hasn’t seen wide adoption as of 2020</a>—it goes something like this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol><li>On the initial visit to a website, the browser <a href=\"https://developers.google.com/web/fundamentals/primers/service-workers#register_a_service_worker\">registers</a> what amounts to a client-side proxy powered by <a href=\"https://www.weeklytimber.com/sw.js\">a comparably paltry amount of JavaScript</a> that—like a Web Worker—runs on its own thread.</li><li>After the Service Worker’s registration, you can intercept requests and decide how to respond to them in the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent\">Service Worker’s <code>fetch()</code> event</a>.</li></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>What you decide to do with requests you intercept is a) your call and b) depends on your website. You can <a href=\"https://alistapart.com/article/request-with-intent-caching-strategies-in-the-age-of-pwas/#section8\">rewrite requests</a>, <a href=\"https://web.dev/offline-cookbook/#on-install-as-dependency\">precache static assets</a> during install, <a href=\"https://www.madebymike.com.au/writing/service-workers/#a-better-offline-page-deeper-down-the-rabbit-hole\">provide offline functionality</a>, and—as will be our eventual focus—<a href=\"https://philipwalton.com/articles/smaller-html-payloads-with-service-workers/\">deliver smaller HTML payloads and better performance</a> for repeat visitors.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Getting out of the woods</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Weekly Timber is a client of mine that provides logging services in central Wisconsin. For them, a fast website is vital. Their business is located in <a href=\"https://en.wikipedia.org/wiki/Waushara_County,_Wisconsin\">Waushara County</a>, and like many rural stretches in the United States, <a href=\"https://maps.psc.wi.gov/apps/WisconsinBroadbandMap/\">network quality and reliability isn’t great</a>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":7172790,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2021/03/fig-1.png?resize=1024,533\" alt=\"A screenshot of a wireless coverage map for Waushara County, Wisconsin with a color overlay. Most of the overlay is colored tan, which represents areas of the county which have downlink speeds between 3 and 9.99 megabits per second. There are sparse light blue and dark blue areas which indicate faster service, but are far from being the majority of the county.\" class=\"wp-image-7172790\" /><figcaption><em><strong>Figure 1. </strong>A wireless coverage map of Waushara County, Wisconsin. The tan areas of the map indicate downlink speeds between 3 and 9.99 Mbps. Red areas are even slower, while the pale and dark blue areas are faster.</em></figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Wisconsin has farmland for <em>days</em>, but it also has plenty of forests. When you need a company that cuts logs, Google is probably your first stop. How fast a given logging company’s website is might be enough to get you looking elsewhere if you’re left waiting too long on a crappy network connection.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I initially didn’t believe a Service Worker was necessary for Weekly Timber’s website. After all, if things were plenty fast to start with, why complicate things? On the other hand, knowing that my client services not just Waushara County, but much of central Wisconsin, even a barebones Service Worker could be the kind of progressive enhancement that adds resilience in the places it might be needed most.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The first Service Worker I wrote for my client’s website—which I’ll refer to henceforth as the “standard” Service Worker—used three <a href=\"https://web.dev/offline-cookbook/\">well-documented caching strategies</a>:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol><li>Precache CSS and JavaScript assets for all pages when the Service Worker is installed when the window’s load event fires.</li><li>Serve static assets out of <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CacheStorage\"><code>CacheStorage</code></a> if available. If a static asset isn’t in <code>CacheStorage</code>, retrieve it from the network, then cache it for future visits.</li><li>For HTML assets, hit the network first and place the HTML response into <code>CacheStorage</code>. If the network is unavailable the next time the visitor arrives, serve the cached markup from <code>CacheStorage</code>.</li></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>These are neither new nor special strategies, but they provide two benefits:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Offline capability, which is handy when network conditions are spotty.</li><li>A performance boost for loading static assets.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>That performance boost translated to a 42% and 48% decrease in the median time to <a href=\"https://web.dev/fcp/\">First Contentful Paint (FCP)</a> and <a href=\"https://web.dev/lcp/\">Largest Contentful Paint (LCP)</a>, respectively. Better yet, these insights are based on <a href=\"https://en.wikipedia.org/wiki/Real_user_monitoring\">Real User Monitoring (RUM)</a>. That means these gains aren’t just theoretical, but a real improvement for real people.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":7172791,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2021/03/fig-2.png?resize=1024,301\" alt=\"A screenshot of request/response timings in Chrome's developer tools. It depicts a service worker on a page serving a static asset from CacheStorage in roughly 23 milliseconds.\" class=\"wp-image-7172791\" /><figcaption><em><strong>Figure 2.</strong> A breakdown of request/response timings depicted in Chrome’s developer tools. The request is for a static asset from <code>CacheStorage</code>. Because the Service Worker doesn’t need to access the network, it takes about 23 milliseconds to “download” the asset from <code>CacheStorage</code>.</em></figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>This performance boost is from bypassing the network entirely for static assets already in <code>CacheStorage</code>—particularly render-blocking stylesheets. A similar benefit is realized when we rely on the HTTP cache, only the FCP and LCP improvements I just described are in comparison to pages with a primed HTTP cache without an installed Service Worker.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>If you’re wondering why <a href=\"https://blog.yoav.ws/tale-of-four-caches/\"><code>CacheStorage</code> and the HTTP cache aren’t equal</a>, it’s because the HTTP cache—at least in <a href=\"https://jakearchibald.com/2016/caching-best-practices/#pattern-2-mutable-content-always-server-revalidated\">some cases</a>—may still involve a trip to the server to verify asset freshness. <a href=\"https://hacks.mozilla.org/2017/01/using-immutable-caching-to-speed-up-the-web/\">Cache-Control’s <code>immutable</code> flag gets around this</a>, but <a href=\"https://caniuse.com/mdn-http_headers_cache-control_immutable\"><code>immutable</code> doesn’t have great support</a> yet. A long max-age value works, too, but the combination of Service Worker API and <code>CacheStorage</code> gives you a lot more flexibility.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Details aside, the takeaway is that the simplest and most well-established Service Worker caching practices can improve performance. Potentially more than what well-configured <code>Cache-Control</code> headers can provide. Even so, Service Worker is an incredible technology with far more possibilities. It’s possible to go farther, and I’ll show you how.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>A better, faster Service Worker</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>The web <em>loves</em> itself some “innovation,” which is a word we equally love to throw around. To me, true innovation isn’t when we create new frameworks or patterns solely for the benefit of developers, but whether those inventions benefit people who end up using whatever it is we slap up on the web. <a href=\"https://www.w3.org/TR/html-design-principles/#priority-of-constituencies\">The priority of constituencies</a> is a thing we ought to respect. Users above all else, always.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The Service Worker API’s innovation space is considerable. How you work within that space can have a big effect on how the web is experienced. Things like <a href=\"https://developers.google.com/web/updates/2017/02/navigation-preload\">navigation preload</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream#examples\"><code>ReadableStream</code></a> have taken Service Worker from great to killer. We can do the following with these new capabilities, respectively:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Reduce Service Worker latency by parallelizing Service Worker startup time and <a href=\"https://fetch.spec.whatwg.org/#navigation-request\">navigation requests</a>.</li><li>Stream content in from <code>CacheStorage</code> and the network.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Moreover, we’re going to combine these capabilities and pull out one more trick: precache header and footer partials, then combine them with content partials from the network. This not only reduces how much data we download from the network, but it also improves perceptual performance for repeat visits. That’s innovation that helps everyone.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Grizzled, I turn to you and say <em>“let’s do this.”</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Laying the groundwork</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>If the idea of combining precached header and footer partials with network content on the fly seems like a Single Page Application (SPA), you’re not far off. Like an SPA, you’ll need to apply the “app shell” model to your website. Only instead of a client-side router plowing content into one piece of minimal markup, you have to think of your website as three separate parts:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>The header.</li><li>The content.</li><li>The footer.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>For my client’s website, that looks like this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":7172792,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2021/03/fig-3.png?resize=490,1024\" alt=\"A screenshot of the Weekly Timber website color coded to delineate each partial that makes up the page. The header is color coded as blue, the footer as red, and the main content in between as yellow.\" class=\"wp-image-7172792\" /><figcaption><em><strong>Figure 3.</strong> A color coding of the Weekly Timber website’s different partials. The Footer and Header partials are stored in <code>CacheStorage</code>, while the Content partial is retrieved from the network unless the user is offline.</em></figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>The thing to remember here is that the individual partials don’t have to be valid markup in the sense that all tags need to be closed within each partial. The only thing that counts in the final sense is that the combination of these partials must be valid markup.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>To start, you’ll need to precache separate header and footer partials when the Service Worker is installed. For my client’s website, these partials are served from the <code>/partial-header</code> and <code>/partial-footer</code> pathnames:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>self.addEventListener(\"install\", event =&#62; {\n  const cacheName = \"fancy_cache_name_here\";\n  const precachedAssets = &#091;\n    \"/partial-header\",  // The header partial\n    \"/partial-footer\",  // The footer partial\n    // Other assets worth precaching\n  ];\n\n  event.waitUntil(caches.open(cacheName).then(cache =&#62; {\n    return cache.addAll(precachedAssets);\n  }).then(() =&#62; {\n    return self.skipWaiting();\n  }));\n});</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Every page must be fetchable as a content partial minus the header and footer, as well as a full page with the header and footer. This is key because the initial visit to a page won’t be controlled by a Service Worker. Once the Service Worker takes over, then you serve content partials and assemble them into complete responses with the header and footer partials from <code>CacheStorage</code>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>If your site is static, this means generating a whole other mess of markup partials that you can rewrite requests to in the Service Worker’s <code>fetch()</code> event. If your website has a back end—as is the case with my client—you can use an HTTP request header to instruct the server to deliver full pages or content partials.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The hard part is putting all the pieces together—but we’ll do just that.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Putting it all together</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Writing even a basic Service Worker can be challenging, but things get real complicated real fast when assembling multiple responses into one. One reason for this is that in order to avoid the Service Worker startup penalty, we’ll need to set up navigation preload.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4>Implementing navigation preload</h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Navigation preload addresses the problem of Service Worker startup time, which delays navigation requests to the network. The last thing you want to do with a Service Worker is hold up the show.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Navigation preload must be explicitly enabled. Once enabled, the Service Worker won’t hold up navigation requests during startup. Navigation preload is enabled in the Service Worker’s <code>activate</code> event:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>self.addEventListener(\"activate\", event =&#62; {\n  const cacheName = \"fancy_cache_name_here\";\n  const preloadAvailable = \"navigationPreload\" in self.registration;\n\n  event.waitUntil(caches.keys().then(keys =&#62; {\n    return Promise.all(&#091;\n      keys.filter(key =&#62; {\n        return key !== cacheName;\n      }).map(key =&#62; {\n        return caches.delete(key);\n      }),\n      self.clients.claim(),\n      preloadAvailable ? self.registration.navigationPreload.enable() : true\n    ]);\n  }));\n});</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p><a href=\"https://caniuse.com/mdn-api_navigationpreloadmanager\">Because navigation preload isn’t supported everywhere</a>, we have to do the usual feature check, which we store in the above example in the <code>preloadAvailable</code> variable.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Additionally, we need to use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all\"><code>Promise.all()</code></a> to resolve multiple asynchronous operations before the Service Worker activates. This includes pruning those old caches, as well as waiting for both <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Clients/claim\"><code>clients.claim()</code></a> (which tells the Service Worker to assert control immediately rather than waiting until the next navigation) and navigation preload to be enabled.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>A ternary operator is used to enable navigation preload in supporting browsers and avoid throwing errors in browsers that don’t. If <code>preloadAvailable</code> is <code>true</code>, we enable navigation preload. If it isn’t, we pass a Boolean that won’t affect how <code>Promise.all()</code> resolves.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>With navigation preload enabled, we need to write code in our Service Worker’s <code>fetch()</code> event handler to make use of the preloaded response:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>self.addEventListener(\"fetch\", event =&#62; {\n  const { request } = event;\n\n  // Static asset handling code omitted for brevity\n  // ...\n\n  // Check if this is a request for a document\n  if (request.mode === \"navigate\") {\n    const networkContent = Promise.resolve(event.preloadResponse).then(response =&#62; {\n      if (response) {\n        addResponseToCache(request, response.clone());\n\n        return response;\n      }\n\n      return fetch(request.url, {\n        headers: {\n          \"X-Content-Mode\": \"partial\"\n        }\n      }).then(response =&#62; {\n        addResponseToCache(request, response.clone());\n\n        return response;\n      });\n    }).catch(() =&#62; {\n      return caches.match(request.url);\n    });\n\n    // More to come...\n  }\n});</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>Though this isn’t the entirety of the Service Worker’s <code>fetch()</code> event code, there’s a lot that needs explaining:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol><li>The preloaded response is available in <code>event.preloadResponse</code>. However, <a href=\"https://developers.google.com/web/updates/2017/02/navigation-preload\">as Jake Archibald notes</a>, the value of <code>event.preloadResponse</code> will be <code>undefined</code> in browsers that don’t support navigation preload. Therefore, we must pass <code>event.preloadResponse</code> to <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve\"><code>Promise.resolve()</code></a> to avoid compatibility issues.</li><li>We adapt in the resulting <code>then</code> callback. If event.<code>preloadResponse</code> is supported, we use the preloaded response and add it to <code>CacheStorage</code> via an <code>addResponseToCache()</code> helper function. If not, we send a <code>fetch()</code> request to the network to get the content partial using a custom <code>X-Content-Mode</code> header with a value of <code>partial</code>.</li><li>Should the network be unavailable, we fall back to the most recently accessed content partial in <code>CacheStorage</code>.</li><li>The response—regardless of where it was procured from—is then returned to a variable named <code>networkContent</code> that we use later.</li></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>How the content partial is retrieved is tricky. With navigation preload enabled, a special <code>Service-Worker-Navigation-Preload</code> header with a value of <code>true</code> is added to navigation requests. We then work with that header on the back end to ensure the response is a content partial rather than the full page markup.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>However, because navigation preload isn’t available in all browsers, we send a different header in those scenarios. In Weekly Timber’s case, we fall back to a custom <code>X-Content-Mode</code> header. In my client’s PHP back end, I’ve created some handy constants:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>&#60;?php\n\n// Is this a navigation preload request?\ndefine(\"NAVIGATION_PRELOAD\", isset($_SERVER&#091;\"HTTP_SERVICE_WORKER_NAVIGATION_PRELOAD\"]) &#38;&#38; stristr($_SERVER&#091;\"HTTP_SERVICE_WORKER_NAVIGATION_PRELOAD\"], \"true\") !== false);\n\n// Is this an explicit request for a content partial?\ndefine(\"PARTIAL_MODE\", isset($_SERVER&#091;\"HTTP_X_CONTENT_MODE\"]) &#38;&#38; stristr($_SERVER&#091;\"HTTP_X_CONTENT_MODE\"], \"partial\") !== false);\n\n// If either is true, this is a request for a content partial\ndefine(\"USE_PARTIAL\", NAVIGATION_PRELOAD === true || PARTIAL_MODE === true);\n\n?&#62;</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>From there, the <code>USE_PARTIAL</code> constant is used to adapt the response:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>&#60;?php\n\nif (USE_PARTIAL === false) {\n  require_once(\"partial-header.php\");\n}\n\nrequire_once(\"includes/home.php\");\n\nif (USE_PARTIAL === false) {\n  require_once(\"partial-footer.php\");\n}\n\n?&#62;</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>The thing to be hip to here is that you should specify <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Vary\">a <code>Vary</code> header</a> for HTML responses to take the <code>Service-Worker-Navigation-Preload</code> (and in this case, the <code>X-Content-Mode</code> header) into account for HTTP caching purposes—assuming you’re caching HTML at all, which may not be the case for you.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>With our handling of navigation preloads complete, we can then move onto the work of streaming content partials from the network and stitching them together with the header and footer partials from <code>CacheStorage</code> into a single response that the Service Worker will provide.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":4} -->\n<h4>Streaming partial content and stitching together responses</h4>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>While the header and footer partials will be available almost instantaneously because they’ve been in <code>CacheStorage</code> since the Service Worker’s installation, it’s the content partial we retrieve from the network that will be the bottleneck. It’s therefore vital that we <a href=\"https://developers.google.com/web/updates/2016/06/sw-readablestreams\">stream responses</a> so we can start pushing markup to the browser as quickly as possible. <code>ReadableStream</code> can do this for us.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>This <code>ReadableStream</code> business is a mind-bender. Anyone who tells you it’s “easy” is whispering sweet nothings to you. It’s <em>hard</em>. After I wrote my own function to merge streamed responses and messed up a critical step—which ended up not improving page performance, mind you—I modified <a href=\"https://gist.github.com/jakearchibald/d0b7e65496a8ec362f10739c3e28da6e\">Jake Archibald’s <code>mergeResponses()</code> function</a> to suit my needs:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>async function mergeResponses (responsePromises) {\n  const readers = responsePromises.map(responsePromise =&#62; {\n    return Promise.resolve(responsePromise).then(response =&#62; {\n      return response.body.getReader();\n    });\n  });\n\n  let doneResolve,\n      doneReject;\n\n  const done = new Promise((resolve, reject) =&#62; {\n    doneResolve = resolve;\n    doneReject = reject;\n  });\n\n  const readable = new ReadableStream({\n    async pull (controller) {\n      const reader = await readers&#091;0];\n\n      try {\n        const { done, value } = await reader.read();\n\n        if (done) {\n          readers.shift();\n\n          if (!readers&#091;0]) {\n            controller.close();\n            doneResolve();\n\n            return;\n          }\n\n          return this.pull(controller);\n        }\n\n        controller.enqueue(value);\n      } catch (err) {\n        doneReject(err);\n        throw err;\n      }\n    },\n    cancel () {\n      doneResolve();\n    }\n  });\n\n  const headers = new Headers();\n  headers.append(\"Content-Type\", \"text/html\");\n\n  return {\n    done,\n    response: new Response(readable, {\n      headers\n    })\n  };\n}</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>As usual, there’s a lot going on:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol><li><code>mergeResponses()</code> accepts an argument named <code>responsePromises</code>, which is an array of <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Response\"><code>Response</code></a> objects returned from either a navigation preload, <code>fetch()</code>, or <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CacheStorage/match\"><code>caches.match()</code></a>. Assuming the network is available, this will always contain three responses: two from <code>caches.match()</code> and (hopefully) one from the network.</li><li>Before we can stream the responses in the <code>responsePromises</code> array, we must map <code>responsePromises</code> to an array containing one reader for each response. Each reader is used later in a <code>ReadableStream()</code> constructor to stream each response’s contents.</li><li>A promise named <code>done</code> is created. In it, we assign the promise’s <code>resolve()</code> and <code>reject()</code> functions to the external variables <code>doneResolve</code> and <code>doneReject</code>, respectively. These will be used in the <code>ReadableStream()</code> to signal whether the stream is finished or has hit a snag.</li><li>The new <code>ReadableStream()</code> instance is created with a name of <code>readable</code>. As responses stream in from <code>CacheStorage</code> and the network, their contents will be appended to <code>readable</code>.</li><li>The stream’s <code>pull()</code> method streams the contents of the first response in the array. If the stream isn’t canceled somehow, the reader for each response is discarded by calling the readers array’s <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\"><code>shift()</code> method</a> when the response is fully streamed. This repeats until there are no more readers to process.</li><li>When all is done, the merged stream of responses is returned as a single response, and we return it with a <code>Content-Type</code> header value of <code>text/html</code>.</li></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>This is <a href=\"https://gist.github.com/jakearchibald/32b2155708a665e9c8e06642b7c09d86\">much simpler</a> if you use <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/TransformStream\"><code>TransformStream</code></a>, but depending on when you read this, that may not be an option for every browser. For now, we’ll have to stick with this approach.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Now let’s revisit the Service Worker’s <code>fetch()</code> event from earlier, and apply the <code>mergeResponses()</code> function:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:code -->\n<pre class=\"wp-block-code\"><code>self.addEventListener(\"fetch\", event =&#62; {\n  const { request } = event;\n\n  // Static asset handling code omitted for brevity\n  // ...\n\n  // Check if this is a request for a document\n  if (request.mode === \"navigate\") {\n    // Navigation preload/fetch() fallback code omitted.\n    // ...\n\n    const { done, response } = await mergeResponses(&#091;\n      caches.match(\"/partial-header\"),\n      networkContent,\n      caches.match(\"/partial-footer\")\n    ]);\n\n    event.waitUntil(done);\n    event.respondWith(response);\n  }\n});</code></pre>\n<!-- /wp:code -->\n\n<!-- wp:paragraph -->\n<p>At the end of the <code>fetch()</code> event handler, we pass the header and footer partials from <code>CacheStorage</code> to the <code>mergeResponses()</code> function, and pass the result to the <code>fetch()</code> event’s <a href=\"https://developer.mozilla.org/en-us/docs/Web/API/FetchEvent/respondWith\"><code>respondWith()</code> method</a>, which serves the merged response on behalf of the Service Worker.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Are the results worth the hassle?</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>This is a lot of stuff to do, and it’s complicated! You might mess something up, or maybe your website’s architecture isn’t well-suited to this exact approach. So it’s important to ask: are the performance benefits worth the work? In my view? Yes! The synthetic performance gains aren’t bad at all:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":7172793,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2021/03/fig-4.png?resize=1024,565\" alt=\"A bar graph comparing First Contentful Paint and Largest Contentful Paint performance for the Weekly Timber website for scenarios in which there is no service worker, a &#34;standard&#34; service worker, and a streaming service worker that stitches together content partials from CacheStorage and the network. The first two scenarios are basically the same, while the streaming service worker delivers measurably better performance for both FCP and LCP—especially for FCP!\" class=\"wp-image-7172793\" /><figcaption><em><strong>Figure 4.</strong> A bar chart of median FCP and LCP synthetic performance data across various Service Worker types for the Weekly Timber website.</em></figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Synthetic tests don’t measure performance for anything except the specific device and internet connection they’re performed on. Even so, these tests were conducted on a staging version of my client’s website with a low-end <a href=\"https://www.gsmarena.com/nokia_2-8513.php\">Nokia 2 Android phone</a> on a throttled “Fast 3G” connection in Chrome’s developer tools. Each category was tested ten times on the homepage. The takeaways here are:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>No Service Worker at all is slightly faster than the “standard” Service Worker with simpler caching patterns than the streaming variant. Like, ever so slightly faster. This may be due to the delay introduced by Service Worker startup, however, the RUM data I’ll go over shows a different case.</li><li>Both LCP and FCP are tightly coupled in scenarios where there’s no Service Worker or when the “standard” Service Worker is used. This is because the content of the page is pretty simple and the CSS is fairly small. The Largest Contentful Paint is usually the opening paragraph on a page.</li><li>However, the streaming Service Worker decouples FCP and LCP because the header content partial streams in right away from <code>CacheStorage</code>.</li><li>Both FCP and LCP are lower in the streaming Service Worker than in other cases.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":7172794,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2021/03/fig-5.png?resize=1024,577\" alt=\"A bar chart comparing the RUM median FCP and LCP performance of no service worker, a &#34;standard&#34; service worker, and a streaming service worker. Both the &#34;standard&#34; and streaming service worker offer better FCP and LCP performance over no service worker, but the streaming service worker excels at FCP performance, while only being slightly slower at LCP than the &#34;standard&#34; service worker.\" class=\"wp-image-7172794\" /><figcaption><em><strong>Figure 5.</strong> A bar chart of median FCP and LCP RUM performance data across various Service Worker types for the Weekly Timber website.</em></figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>The benefits of the streaming Service Worker for real users is pronounced. For FCP, we receive an 79% improvement over no Service Worker at all, and a 63% improvement over the “standard” Service Worker. The benefits for LCP are more subtle. Compared to no Service Worker at all, we realize a 41% improvement in LCP—which is incredible! However, compared to the “standard” Service Worker, LCP is a touch slower.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Because <a href=\"https://timkadlec.com/remembers/2018-06-07-prioritizing-the-long-tail-of-performance/\">the long tail of performance</a> is important, let’s look at the 95th percentile of FCP and LCP performance:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"align\":\"center\",\"id\":7172795,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2021/03/fig-6.png?resize=1024,569\" alt=\"A bar chart comparing the RUM median FCP and LCP performance of no service worker, a &#34;standard&#34; service worker, and a streaming service worker. Both the &#34;standard&#34; and streaming service workers are faster than no service worker at all, but the streaming service worker beats out the &#34;standard&#34; service worker for both FCP and LCP.\" class=\"wp-image-7172795\" /><figcaption><em><strong>Figure 6.</strong> A bar chart of 95th percentile FCP and LCP RUM performance data across various Service Worker types for the Weekly Timber website.</em></figcaption></figure></div>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>The 95th percentile of RUM data is a great place to assess the slowest experiences. In this case, we see that the streaming Service Worker confers a 40% and 51% improvement in FCP and LCP, respectively, over no Service Worker at all. Compared to the “standard” Service Worker, we see a reduction in FCP and LCP by 19% and 43%, respectively. If these results seem a bit squirrely compared to synthetic metrics, remember: that’s RUM data for you! You never know who’s going to visit your website on which device on what network.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>While both FCP and LCP are boosted by the myriad benefits of streaming, navigation preload (in Chrome’s case), and sending less markup by stitching together partials from both <code>CacheStorage</code> and the network, FCP is the clear winner. Perceptually speaking, the benefit is pronounced, as this video would suggest:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:video {\"autoplay\":false,\"id\":7172796,\"loop\":false,\"muted\":true,\"playsInline\":true,\"src\":\"https:\\/\\/alistapart.com\\/wp-content\\/uploads\\/2021\\/03\\/fig-7.mp4\",\"align\":\"center\"} -->\n<figure class=\"wp-block-video aligncenter\"><video controls muted src=\"https://alistapart.com/wp-content/uploads/2021/03/fig-7.mp4\" playsinline></video><figcaption><em><strong>Figure 7.</strong> Three WebPageTest videos of a repeat view of the Weekly Timber homepage. On the left is the page not controlled by a Service Worker, with a primed HTTP cache. On the right is the same page controlled by a streaming Service Worker, with CacheStorage primed.</em></figcaption></figure>\n<!-- /wp:video -->\n\n<!-- wp:paragraph -->\n<p>Now ask yourself this: If this is the kind of improvement we can expect on such a small and simple website, what might we expect on a website with larger header and footer markup payloads?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Caveats and conclusions</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Are there trade-offs with this on the development side? <em>Oh</em> yeah.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><a href=\"https://philipwalton.com/articles/smaller-html-payloads-with-service-workers/#5)-set-the-correct-title\">As Philip Walton has noted</a>, a cached header partial means the document title must be updated in JavaScript on each navigation by changing the value of <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/title\"><code>document.title</code></a>. It also means you’ll need to update the navigation state in JavaScript to reflect the current page if that’s something you do on your website. Note that this shouldn’t cause indexing issues, as Googlebot crawls pages with an unprimed cache.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>There may also be some challenges on sites with authentication. For example, if your site’s header displays the current authenticated user on log in, you may have to update the header partial markup provided by <code>CacheStorage</code> in JavaScript on each navigation to reflect who is authenticated. You may be able to do this by storing basic user data in <code>localStorage</code> and updating the UI from there.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>There are certainly other challenges, but it’ll be up to you to weigh the user-facing benefits versus the development costs. In my opinion, this approach has broad applicability in applications such as blogs, marketing websites, news websites, ecommerce, and other typical use cases.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>All in all, though, it’s akin to the performance improvements and efficiency gains that you’d get from an SPA. Only the difference is that you’re not replacing time-tested navigation mechanisms and grappling with all the messiness that entails, but <em>enhancing </em>them. That’s the part I think is really important to consider in a world where client-side routing is all the rage.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>“What about <a href=\"https://developers.google.com/web/tools/workbox\">Workbox</a>?,” you might ask—and you’d be right to. Workbox simplifies a lot when it comes to using the Service Worker API, and you’re not wrong to reach for it. Personally, I prefer to work as close to the metal as I can so I can gain a better understanding of what lies beneath abstractions like Workbox. Even so, Service Worker is hard. Use Workbox if it suits you. As far as frameworks go, its abstraction cost is very low.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Regardless of this approach, I think there’s incredible utility and power in using the Service Worker API to reduce the amount of markup you send. It benefits my client and all the people that use their website. Because of Service Worker and the innovation around its use, my client’s website is faster in the far-flung parts of Wisconsin. That’s something I feel good about.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>Special thanks to </em><a href=\"https://jakearchibald.com/\"><em>Jake Archibald</em></a><em> for his valuable editorial advice, which, to put it mildly, considerably improved the quality of this article.</em></p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 18 Mar 2021 14:00:00 +0000","feedId":25,"bgimg":"https://alistapart.com/wp-content/uploads/2021/03/fig-1.png?resize=1024,533","linkMd5":"e61c2fe4779d090581d4cfa3742cbda4","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn49@2020_3/2021/04/10/03-45-55-971_d9a9eda86b25ec5a.webp","destWidth":1024,"destHeight":533,"sourceBytes":138326,"destBytes":138326,"author":"\n\t\t\t\tby \t\t\t\t\t","articleImgCdnMap":{"https://alistapart.com/wp-content/uploads/2021/03/fig-1.png?resize=1024,533":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn49@2020_3/2021/04/10/03-45-55-971_d9a9eda86b25ec5a.webp","https://alistapart.com/wp-content/uploads/2021/03/fig-2.png?resize=1024,301":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn3@2020_3/2021/04/10/03-46-15-656_9d78c7637197fee8.webp","https://alistapart.com/wp-content/uploads/2021/03/fig-3.png?resize=490,1024":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn23@2020_2/2021/04/10/03-46-15-544_78168c185dd1fd23.webp","https://alistapart.com/wp-content/uploads/2021/03/fig-4.png?resize=1024,565":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn62@2020_3/2021/04/10/03-46-16-182_cdf855b750f032bc.webp","https://alistapart.com/wp-content/uploads/2021/03/fig-5.png?resize=1024,577":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn18@2020_2/2021/04/10/03-46-15-581_ebcada4948ed5526.webp","https://alistapart.com/wp-content/uploads/2021/03/fig-6.png?resize=1024,569":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn100@2020_5/2021/04/10/03-46-15-680_73df45b1155f7ad9.webp"},"publishedOrCreatedDate":1618026345119},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tMr. Roboto: Connecting with Technology\t\t\t\t","link":"https://alistapart.com/article/engaged-excerpt/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>People don’t always need another human being to experience a sense of connection. The deep emotional bonds many people have with their pets proves this. (So might the popularity of the Pet Rock in the 1970s but that’s just speculation.) Even Link in <em>The Legend of Zelda</em> had an inanimate companion: his trusty sword (see Figure 9.1).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172418,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.1.jpg?fit=960%2C600\" alt=\"A screen from The Legend of Zelda where Link receives his sword from an old man saying 'It's Dangerous To Go Alone! Take This.'\" class=\"wp-image-7172418\" /><figcaption><strong>Fig 9.1</strong> Even the company of a wooden sword is better than venturing into Hyrule alone.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>It’s also possible for people to feel that sense of connection in the context of behavior change without having direct relationships with others. By building your product in a way that mimics some of the characteristics of a person-to-person relationship, you can make it possible for your users to feel connected to it. It is possible to coax your users to fall at least a little bit in love with your products; if you don’t believe me, try to get an iPhone user to switch operating systems.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>It’s not just about really liking a product (although you definitely want users to really like your product). With the right design elements, your users might embark on a meaningful bond with your technology, where they feel engaged in an ongoing, two-way relationship with an entity that understands something important about them, yet is recognizably non<s>-</s>human. This is a true emotional attachment that supplies at least some of the benefits of a human-to-human relationship. This type of connection can help your users engage more deeply and for a longer period of time with your product. And that should ultimately help them get closer to their behavior change goals.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Amp Up the Anthropomorphization</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>People can forge relationships with non<s>-</s>humans easily because of a process called <em>anthropomorphization</em>. To anthropomorphize something means to impose human characteristics on it. It’s what happens when you see a face in the array of shapes on the right side in Figure 9.2, or when you carry on an extended conversation with your cat.<sup>[1]</sup></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172419,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.2.jpg?fit=960%2C576\" alt=\"An assortment of the same four shapes side by side. The grouping on the right looks like a face based on the shape positions.\" class=\"wp-image-7172419\" /><figcaption><strong>Fig 9.2</strong> The brain is built to seek and recognize human characteristics whenever a pattern suggests they might be there. That means people interpret the array of shapes on the right as face-like, but not the one on the left.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>People will find the human qualities in shapes that slightly resemble a face, but you can help speed that process along by deliberately imbuing your product with physical or personality features that resemble people. Voice assistants like Siri, Cortana, and Alexa, for example, are easily perceived as human-like by users thanks to their ability to carry on a conversation much like a (somewhat single-minded) person.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Granted, almost nobody would mistake Alexa for a real person, but her human characteristics are pretty convincing. Some research suggests that children who grow up around these voice assistants may be less polite when asking for help, because they hear adults make demands of their devices without saying please or thank you. If you’re asking Siri for the weather report and there are little ones in earshot, consider adding the <em>other</em> magic words to your request.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>So, if you want people to anthropomorphize your product, give it some human characteristics. Think names, avatars, a voice, or even something like a catchphrase. These details will put your users’ natural anthropomorphization tendencies into hyperdrive.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Everything Is Personal</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>One thing humans do well is personalization. You don’t treat your parent the same way you treat your spouse the same way you treat your boss. Each interaction is different based on the identity of the person you’re interacting with and the history you have with them. Technology can offer that same kind of individualized experience as another way to mimic people, with lots of other benefits.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Personalization is the Swiss Army Knife of the behavior change design toolkit. It can help you craft appropriate goals and milestones, deliver the right feedback at the right time, and offer users meaningful choices in context. It can also help forge an emotional connection between users and technology when it’s applied in a way that helps users feel seen and understood.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Some apps have lovely interfaces that let users select colors or background images or button placements for a “personalized” experience. While these types of features are nice, they don’t scratch the itch of belonging that true personalization does. When personalization works, it’s because it reflects something essential about the user back to them. That doesn’t mean it has to be incredibly deep, but it does need to be somewhat more meaningful than whether the user has a pink or green background on their home screen.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Personalized Preferences</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>During onboarding or early in your users’ product experience, allow them to personalize preferences that will shape their experiences in meaningful ways (<em>not</em> just color schemes and dashboard configurations). For example, Fitbit asks people their preferred names, and then greets them periodically using their selection. Similarly, LoseIt asks users during setup if they enjoy using data and technology as part of their weight loss process (Figure 9.3). Users who say yes are given an opportunity to integrate trackers and other devices with the app; users who say no are funneled to a manual entry experience. The user experience changes to honor something individual about the user.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172421,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.3-1.jpg?fit=960%2C889\" alt=\"Screenshots of the LoseIt app showing it asking whether a user enjoys looking at data and using technology then acknowledging their choice.\" class=\"wp-image-7172421\" /><figcaption><strong>Fig 9.3</strong> LoseIt gives users an opportunity to share their technology preferences during onboarding and then uses that choice to shape their future experience.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>If you can, recall back to ancient times when Facebook introduced an algorithmic sort of posts in the newsfeed. Facebook users tend to be upset anytime there’s a dramatic change to the interface, but their frustration with this one has persisted, for one core reason: Facebook to this day reverts to its own sorting algorithm as a default, even if a user has selected to organize content by date instead. This repeated insistence on their preference over users’ makes it less likely that users will feel “seen” by Facebook.<sup>[2]</sup></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Personalized Recommendations</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>If you’ve ever shopped online, you’ve probably received personalized recommendations. Amazon is the quintessential example of a recommendation engine. Other commonly encountered personalized recommendations include Facebook’s “People You May Know” and Netflix’s “Top Picks for [Your Name Here].” These tools use algorithms that suggest new items based on data about what people have done in the past.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Recommendation engines can follow two basic models of personalization. The first one is based on products or items. Each item is tagged with certain attributes. For example, if you were building a workout recommendation engine, you might tag the item of “bicep curls” with “arm exercise,” “upper arm,” and “uses weights.” An algorithm might then select “triceps pulldowns” as a similar item to recommend, since it matches on those attributes. This type of recommendation algorithm says, “If you liked this item, you will like this similar item.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The second personalization model is based on people. People who have attributes in common are identified by a similarity index. These similarity indices can include tens or hundreds of variables to precisely match people to others who are like them in key ways. Then the algorithm makes recommendations based on items that lookalike users have chosen. This recommendation algorithm says, “People like you liked these items.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In reality, many of the more sophisticated recommendation engines (like Amazon’s) blend the two types of algorithms in a hybrid approach. And they’re effective. McKinsey estimates that 35% of what Amazon sells and 75% of what Netflix users watch are recommended by these engines.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Don’t Overwhelm</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Sometimes what appear to be personalized recommendations can come from a much simpler sort of algorithm that doesn’t take an individual user’s preferences into account at all. These algorithms might just surface the suggestions that are most popular among <em>all</em> users, which isn’t always a terrible strategy. Some things are popular for a reason. Or recommendations could be made in a set order that doesn’t depend on user characteristics at all. This appears to be the case with the Fabulous behavior change app that offers users a series of challenges like “drink water,” “eat a healthy breakfast,” and “get morning exercise,” regardless of whether these behaviors are already part of their routine or not.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>When recommendation algorithms work well, they can help people on the receiving end feel like their preferences and needs are understood. When I browse the playlists Spotify creates for me, I see several aspects of myself reflected. There’s a playlist with my favorite 90s alt-rock, one with current artists I like, and a third with some of my favorite 80s music (Figure 9.4). Amazon has a similar ability to successfully extrapolate what a person might like from their browsing and purchasing history. I was always amazed that even though I didn’t buy any of my kitchen utensils from Amazon, they somehow figured out that I have the red KitchenAid line.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172422,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.4.jpg?fit=960%2C524\" alt=\"Spotify's Daily Mixes showcasing three distinct sets of musical styles based on the user's listening habits.\" class=\"wp-image-7172422\" /><figcaption><strong>Fig 9.4</strong> Spotify picks up on the details of users’ musical selections to construct playlists that reflect multiple aspects of their tastes.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>A risk to this approach is that recommendations might become redundant as the database of items grows. Retail products are an easy example; for many items, once people have bought one, they likely don’t need another, but algorithms aren’t always smart enough to stop recommending similar purchases (see Figure 9.5). The same sort of repetition can happen with behavior change programs. There are only so many different ways to set reminders, for example, so at some point it’s a good idea to stop bombarding a user with suggestions on the topic.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172423,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.5.jpg\" alt=\"A tweet from Andy Richter saying 'I ordered a toilet seat from Amazon and now based on the ads I see they must think I have an insatiable toilet seat addiction'\" class=\"wp-image-7172423\" /><figcaption><strong>Fig 9.5</strong> When a user only needs a finite number of something, or has already satisfied a need, it’s easy for recommendations to become redundant.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:heading -->\n<h2>Don’t Be Afraid to Learn</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Data-driven personalization comes with another set of risks. The more you know about users, the more they expect you to provide relevant and accurate suggestions. Even the smartest technology will get things wrong sometimes. Give your users opportunities to point out if your product is off-base, and adjust accordingly. Not only will this improve your accuracy over time, but it will also reinforce your users’ feelings of being cared for.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Alfred was a recommendation app developed by Clever Sense to help people find new restaurants based on their own preferences, as well as input from their social networks. One of Alfred’s mechanisms for gathering data was to ask users to confirm which restaurants they liked from a list of possibilities (see Figure 9.6). Explicitly including training in the experience helped Alfred make better and better recommendations while also giving users the opportunity to chalk errors up to a need for more training.<sup>[3]</sup></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172425,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.6-1.jpg?fit=731%2C1024\" alt=\"The Alfred app takes a guess at places the user might enjoy for dinner and asks if any of them are right.\" class=\"wp-image-7172425\" /><figcaption><strong>Fig 9.6</strong> Alfred included a learning mode where users would indicate places they already enjoyed eating. That data helped improve Alfred’s subsequent recommendations.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>Having a mechanism for users to exclude some of their data from an algorithm can also be helpful. Amazon allows users to indicate which items in their purchase history should be ignored when making recommendations—a feature that comes in handy if you buy gifts for loved ones whose tastes are very different from yours.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>On the flip side, deliberately throwing users a curve ball is a great way to learn more about their tastes and preferences. Over time, algorithms are likely to become more consistent as they get better at pattern matching. Adding the occasional mold-breaking suggestion can prevent boredom and better account for users’ quirks. Just because someone loves meditative yoga doesn’t mean they don’t also like going mountain biking once in a while, but most recommendation engines won’t learn that because they’ll be too busy recommending yoga videos and mindfulness exercises. Every now and then add something into the mix that users won’t expect. They’ll either reject it or give it a whirl; either way, your recommendation engine gets smarter.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Personalized Coaching</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>At some point, recommendations in the context of behavior change may become something more robust: an actual personalized plan of action. When recommendations grow out of the “you might also like” phase into “here’s a series of steps that should work for you,” they become a little more complicated. Once a group of personalized recommendations have some sort of cohesiveness to systematically guide a person toward a goal, it becomes <em>coaching</em>.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>More deeply personalized coaching leads to more effective behavior change. One study by Dr. Vic Strecher, whom you met in Chapter 3, showed that the more a smoking cessation coaching plan was personalized, the more likely people were to successfully quit smoking. A follow-up study by Dr. Strecher’s team used fMRI technology to discover that when people read personalized information, it activates areas of their brain associated with the self (see Figure 9.7). That is, people perceive personalized information as self-relevant on a neurological level.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172426,\"sizeSlug\":\"large\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.7.jpg?fit=960%2C485\" alt=\"A front and side scan from an MRI showing activation (in yellow) in the prefrontal cortex.\" class=\"wp-image-7172426\" /><figcaption><strong>Fig 9.7</strong> This is an fMRI image showing activation in a person’s medial prefrontal cortex (mPFC), an area of the brain associated with the self. The brain activity was recorded after showing people personalized health information.</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>This is important because people are more likely to remember and act on relevant information. If you want people to <em>do</em> something, personalize the experience that shows them how.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>From a practical perspective, personalized coaching also helps overcome a common barrier: People do not want to spend a lot of time reading content. If your program can provide only the most relevant items while leaving the generic stuff on the cutting room floor, you’ll offer more concise content that people may actually read.</p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 25 Jun 2020 14:00:00 +0000","feedId":25,"bgimg":"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.1.jpg?fit=960%2C600","linkMd5":"8ebf2effbee6917e62f8caca9583a623","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn57@2020_2/2021/04/10/03-45-55-977_5c951826bcd54004.webp","destWidth":960,"destHeight":600,"sourceBytes":31062,"destBytes":31062,"author":"\n\t\t\t\tby \t\t\t\t\t","articleImgCdnMap":{"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.1.jpg?fit=960%2C600":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn57@2020_2/2021/04/10/03-45-55-977_5c951826bcd54004.webp","https://alistapart.com/wp-content/uploads/2020/06/engaged-9.2.jpg?fit=960%2C576":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn15@2020_4/2021/04/10/03-46-15-553_8f2da14c19a9d68c.webp","https://alistapart.com/wp-content/uploads/2020/06/engaged-9.3-1.jpg?fit=960%2C889":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn96@2020_6/2021/04/10/03-46-15-805_eb48e0469f843793.webp","https://alistapart.com/wp-content/uploads/2020/06/engaged-9.4.jpg?fit=960%2C524":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn2@2020_6/2021/04/10/03-46-15-613_eed9870ab74d9d84.webp","https://alistapart.com/wp-content/uploads/2020/06/engaged-9.5.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn9@2020_4/2021/04/10/03-46-15-598_2fbd809ee06f7df6.webp","https://alistapart.com/wp-content/uploads/2020/06/engaged-9.6-1.jpg?fit=731%2C1024":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn61@2020_1/2021/04/10/03-46-15-341_95acc98bdba43625.webp","https://alistapart.com/wp-content/uploads/2020/06/engaged-9.7.jpg?fit=960%2C485":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn45@2020_4/2021/04/10/03-46-15-936_7bd194b1ad1f368c.webp"},"publishedOrCreatedDate":1618026345001},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tConnecting the Dots\t\t\t\t","link":"https://alistapart.com/article/creative-culture-excerpt/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>Two plans: one for design, one for culture.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>What I’ve found is that the DNA between both dynamics must be inextricable from one another. Creating&#160;<em>with&#160;</em>compassion in an environment fueled&#160;<em>by&#160;</em>compassion means we never lose sight of what it’s all about: people. Beyond functioning in this manner because “it’s the right thing to do,” quality of work, loyalty internally (team) and externally (users), and product innovation are&#160;all benefits to reap.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Earlier we talked through the concept of “simplicity” and its&#160;application to creation and environment. Now, let’s revisit a few other examples of healthy benchmarks from a creative culture as we’ve discussed in this book:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Slowing down / pausing with intent</li><li>Everyone has a seat at the table</li><li>The New Day One</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>In taking a focused look at these facets, their correlation to <acronym title=\"human-centered design\">HCD</acronym> is readily apparent:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Culture:&#160;</strong>Slowing down / pausing with intent<br><strong>Design:&#160;</strong>Discovery / observation</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The Swedish concept of&#160;<em>fika&#160;</em>transcends a mere “coffee break.”&#160;It’s about slowing down, the act of pausing during a typical day and making time to have a dialogue with someone (though a&#160;good cup of coffee is a vital part). I ensure this time is not only a known quantity within my team’s creative culture, but that it’s&#160;protected and actively utilized.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Instead of getting a product manager’s Powerpoint wireframe in your inbox with a request to “make it look nice” or a client’s&#160;request to crank out a design for their approval by EOD, we&#160;<em>must&#160;</em>slow down to understand the people who will be interacting with our design (and the design’s potential impact on others, the environment and community in which it will be used, and so on). Rushing to get something done to tick an account manager’s client-appeasement box at the expense of the human experience&#160;is to sacrifice empathy, quality, and any prospect of innovation.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Culture:&#160;</strong>Everyone has a seat at the table<br><strong>Design:&#160;</strong>Inclusion</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As the very definition of cultural transparency, Nick Sarillo’s pizza parlors tack their full financial statements to a wall, daily, for all employees to see. Everyone’s hourly wage is listed on a nearby whiteboard, with the means to make more money articulated in tandem (training in more areas of business = increased hourly wage). Many managers have worked their&#160;way up in this manner, and offer training to other employees&#160;who wish to advance by taking on more responsibility. This is about collaboration yielding success to both the employee and the business, the sharing of information, and access for all; key dynamics of an inclusive culture.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Inclusion in the design process enables us, as creators, to&#160;recognize our own personal biases. By identifying the exclusion in&#160;our work, we humbly set aside our assumptions; connecting with people from diverse communities, building empathy, will expand our product’s reach (access). Via engaging humans throughout our design process, listening to them, and usability testing iteratively, objective solutions that yield innovation follow suit.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Culture:&#160;</strong>The New Day One<br><strong>Design:&#160;</strong>Ethnography</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The New Day One concept evolves an employee’s first day&#160;from formulaic and sterile into directly personal and custom. Via the “Inspiration” portion of the day and venturing away from the&#160;office, we gain insight into a new team member as an individual&#160;that transcends what folio work can yield. What physical aspects of their selected location have impacted who they are? How did it inspire their way of creating, or approaching problems? Understanding the impact of spatial dynamics on an individual is vital toward an individualistic, yet ultimately holistic, view.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Ethnographic research provides an environmental context to&#160;human interaction that a video-conference interview could never yield. Through direct observation, ethnography is the qualitative study of human beings in their native environment. Is the&#160;individual sitting in a high-traffic area in an office, causing frequent distraction from their work? Are they a field worker primarily utilizing a mobile device in direct sunlight, yielding paramountcolor contrast needs? By making research truly&#160;<em>human</em>, we gain an understanding of how those we observe see the world and how they ultimately engage with it.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>For the Greater Good</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Greater Good Studio (GGS) is a social impact-focused human-&#160;centered design firm co-founded by Sara Cantor Aye and George&#160;Aye. Their business is located within the Logan Share, a co- working space they also founded in Chicago’s Logan Square neighborhood.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>I reached out to the Studio to ask if I could stop by their space and observe a “morning in the life” view of their process: culture and design, organically, as both unfolded. Without hesitation, Sara (a former Northwestern University instructor) extended me&#160;an offer to join the team for observation. After signing a non-&#160;disclosure agreement, we agreed on a date for my visit.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>When I arrived on a Monday morning, George (formerly of&#160;IDEO) greeted me with a cup of coffee and walked me up the stairs&#160;into the naturally well-lit Logan Share space. I noticed the open seating in the co-working section was already nearly full, as he gave&#160;me a tour of the “configuration by human need and intent”-based&#160;layout and active-project areas. On long single sheets of cardboard suspended by custom-built fasteners, entire lifecycles of project- centric human-centered design artifacts were on display. Once a project is deployed, George explained, the cardboard is detached and saved for forthcoming iteration, with fresh sheets re-fastened to form the partitions of a new project space thereafter.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The six core steps of the Studio’s HCD process manifest themselves in the following way:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list {\"ordered\":true} -->\n<ol><li><strong>Framing</strong><br>Defining questions to answer and people to engage</li><li><strong>Research</strong><br>Learning from people about their needs and values</li><li><strong>Synthesis</strong><br>Finding patterns of behavior and areas of opportunity</li><li><strong>Concepting</strong><br>Creating a high volume of new ideas</li><li><strong>Prototyping</strong><br>Making tangible mock-ups and gathering feedback</li><li><strong>Piloting</strong><br>Testing solutions in real time with real people</li></ol>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>As a team, GGS functions via a working method called ROWE (Results Only Work Environment), a concept leveraged from Cali&#160;Ressler and Jody Thompson’s book&#160;<em>Why Work Sucks and How to Fix It: The Results-Only Revolution.&#160;</em>Taken from an article on the Studio’s blog, they describe the practice within GGS like this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>“The basic principle behind ROWE is that staff doesn’t need to be supervised, when given the tools, clear expectations, and deadlines&#160;people will not only do their work, but do it better than if they were&#160;trying to fit into a mold. Within GGS, this practice is exercised by very diligent calendar management, clear deadlines, expectations on deliverables, and Cookie Rewards (little treats we give each other if we have to move something on the calendar).”</em></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>Once a month the entire team pauses for a five-hour, non-client&#160;project block of time called “internal day.” This time is reserved for studio-centric things: team members sharing learnings from conferences they’ve attended, how to improve internal practices, past project debriefs, etc. It’s the act of pausing with intent, in full&#160;effect.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Sara arrived a few minutes into my tour of the space, and the GGS team’s “BD charrette” was the first employee gathering&#160;(remote and in-person) of the morning. “BD” stands for “business&#160;development,” and in a cozy seating area, everyone had a seat at&#160;the table in all senses of the phrase. Sara and George ran through the status of a current request for proposal, then each team member had the opportunity to voice their opinion about whether the RFP should be pursued based on how it aligned with GGS’s&#160;(and their employees’) personal, values. Everyone was heard; every&#160;voice was respected.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The dialogue eventually shifted to another potential new client,&#160;this time with GGS at the presentation stage. Again, everyone at the table gave their feedback on Sara and George’s presentation plan of attack and, again, every team member’s voice carried equal value and weight. The studio-wide inclusion in the business&#160;owners’ decision making was genuine, effortless, and natural.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Forty-five minutes later, the group made a physical transition&#160;to a few nearby couches; less than a three-foot walk, as I eyed it. I inquired about the very minor spatial change for this next leg of the meeting and was told, “There’s a difference in purpose, so we transition to a different space.” Each member of the team then&#160;took their turn describing their weekend in three words:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>“Sunshine, beach, baking.”</em></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>I got my turn as well. Changing the energy on those couches, from new business to being focused on the individual, made for a palpable climate change. In a few words everyone had a sense of what their teammates got up to over the weekend, eliciting smiles and planting the seeds for future dialogues throughout the pauses- with-intent over the rest of the day.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Next: “validations.” In this final portion of the meeting (pre-&#160;project status), anyone who wanted to articulate their appreciation for a team member over the previous week did so. One person&#160;recognized their co-worker for their selfless collaboration, taking&#160;time from their own project work to help theirs get client-ready on time. Similar-but-unique “thanks” emerged from varied people; no one was required to speak up, but everyone did.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>After project updates I sat with Sara for a one-on-one to chat over coffee. I asked her about the synergies between their HCD process and how she interacts with her team in the office:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>“I think where it’s actually become more intentional and obvious has&#160;been with our staff who are not trained designers. Operations folks, or our community manager, etc. I’ve had to say, ‘I want you to be a designer about this’ (whatever ‘this’ is). ‘We are your users, you’re trying to get us to do our timesheets, or clean up the kitchen, etc. Observe. Talk to people. Figure out our motivations. Summarize everything you’ve learned, and then have ideas.’</em></p><p><em>As a designer, I am constantly designing at every level. I’m designing&#160;deliverables in many cases for clients, or coaching our teams to design deliverables. I’m also designing process by which we work by writing proposals, scoping, etc. And at the highest level, I’m designing our company. I’m designing our culture based on our customs and traditions and policies (the hard and the soft) every day. My users are not hypothetical, they’re actual people.”</em></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:heading -->\n<h2>When All is Not Good</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Sara went on to cite how her previous work experience shaped the leader she is today:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>“I think a lot of my design choices are based in (unhealthy dynamics) with prior employers. Where decisions were not made transparently, everything financial was completely opaque. Lots of lack of trust with other employees. It’s been so critical that I’ve had bad experiences so I can now clearly say: let’s not do that.”</em></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>The tactics, mindsets, organizational shifts, and operational flexibility discussed in this book are predicated upon a simple truth: a company presently supports and operates as a creative culture, or it’s genuinely willing to evolve to become one. Along the way, I’ve been primarily speaking to those who are in a position to help implement change; even at a small scale. But what about when you’re not in a position to be heard, or the position to help facilitate change?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Reality isn’t always unicorns and rainbows. Bad experiences can impact us all. For example, the fabric of a company’s creative culture can become irreparably frayed thanks to management changes, acquisition, or it can lack sustainability. Whether these circumstances reveal themselves over years or overnight, your passion and evolution should never be their casualty.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Sometimes, creating within an environment that’s the best fit for your growth and passions means finding a new opportunity.</p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 02 Jul 2020 14:00:00 +0000","feedId":25,"bgimg":"","linkMd5":"dcf0cd091d435810215b42b5accde83b","bgimgJsdelivr":"","metaImg":"","author":"\n\t\t\t\tby \t\t\t\t\t","publishedOrCreatedDate":1618026345211},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tJobs To Be Done\t\t\t\t","link":"https://alistapart.com/article/jobs-to-be-done/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>In this chapter, you’ll learn about these plays:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>How to create a jobs-driven roadmap</li><li>Using job stories to solve specific design problems</li><li>How to architect the structure of a solution</li><li>Testing assumptions directed by JTBD</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>A software company I once worked for held what were called “hackweeks” once a quarter. This was a time for developers to work on “whatever they wanted,” as it was framed. Give engineers time to play around with technology, and they’re bound to find the next innovation, or so the theory went.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Hackweek was a big deal for us. Dozens of people organized it, and every developer in the company stopped work to contribute to the effort. It was costly, but we were committed to hackweek. After all, new software offerings come from new development, right?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Here’s how it went: small teams formed to cobble together starter projects representing the use of some new technology. At the end of the week, a panel judged the dozens of concepts that emerged, and the winning “solutions” were rewarded.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But in our case, hackweek was like shooting a shotgun in the wrong direction while blindfolded and hoping to hit the target. The result was inevitably a collection of concepts looking for a problem to solve. It was innovation theater at its best.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>To be fair, not all hackathons are bad. Some organizations coordinate hackathons with strategic imperatives or with customer needs. And sure, it’s also good to flex creative muscles and practice collaboration across teams. But given their cost and imprecision, hackathons are often largely ineffective in producing usable concepts.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The problem is not a lack of ideas—companies are usually swimming in them. Like ours, many organizations have a Darwinistic outlook on innovation: generate more and more ideas, and the best will surely rise to the top. Said another way, when looking for a needle in a haystack, the best approach is rarely to add more hay.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The problem is knowing which ideas to pursue. The goal of innovation activities shouldn’t be to collect as many ideas as possible, but instead to get to the right ideas—the ones that matter most to the people you serve.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But more than that, the real challenge is in overcoming the natural forces in organizations that keep good ideas down. Chief among these is uncertainty, a leading deterrent to innovation. New ideas are a gamble for risk-averse managers, even if well-expressed in a high-fidelity prototype.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>JTBD provides a way to increase your chances of success by first identifying the right problem to solve. Then JTBD gives you decision-making criteria for moving forward: bet on solutions that address unmet needs to create profitable differentiation.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Focus first on getting the main job done for the individual and fulfilling their needs in relation to the job. From this perspective, hackathons and other idea-generating efforts can be framed by JTBD as both inputs and outputs in terms of how concepts are evaluated.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>After understanding the job landscape and defining the value you’re going after, you can continue using JTBD thinking to align teams around the design of your solution. Create a roadmap based on your JTBD landscape to set a common direction. Then use job stories to get everyone on the same page and tie local design efforts to the big picture and to architect the solution structure. JTBD can also guide the experiments you conduct to test your team’s assumptions.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Create a Development Roadmap</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>At its highest level, a roadmap is a sequence of development events—the relative chronological order in which features and capabilities will be built. Roadmaps serve as a central point of reference for teams to align their efforts. They show the path forward without defining individual tasks.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In the age of Agile and Lean efforts, roadmaps have gotten a bad reputation. People are quick to point out—and rightfully so—that long-term plans inevitably fail: priorities change, unforeseen challenges arise, and timelines slip. The solution, they might argue, is to have no long-term plans and to work on short initiatives with the flexibility to change as needed.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But while providing decision-making power to local development teams makes sense, overall alignment is still needed. An alternative way of viewing roadmaps is to see them not as a definitive project plan, but as a vision of how you’ll create an offering that customers will value. Roadmaps are not unchanging predictions of future activity, but a way to provide transparency for the sequence of steps your team will take to design solutions.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The information in a roadmap helps the entire organization get aligned, not just developers. It’s a strategic communication tool reflecting intention and direction. More importantly, road mapping isn’t just about the artifact: it’s about getting a common understanding of where you’re headed. In this sense, the roadmap occupies the space between the vision and detailed project planning.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>JTBD can help create roadmaps that focus on the value that the organization intends to create and deliver for customers. The trick is to get the right problem to solve. Use the insights from your JTBD investigation to formulate roadmaps that are grounded in real customer need.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Mapping the Road Ahead</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>For a concrete approach to road mapping, I recommend the book <em>Product Roadmaps Relaunched </em>by C. Todd Lombardo, Bruce McCarthy, Evan Ryan, and Michael Conners.<sup>[1]</sup> In it, the authors clearly articulate the steps to creating meaningful product roadmaps.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>JTBD plays a key role in aligning to customer needs, as the authors write: “We recommend starting with the chunks of value you intend to deliver that will build up over time to accomplish your visions. Often this is a set of high-level customer needs, problems, or jobs to be done.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Their approach breaks down the four key elements of a good product roadmap:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li><strong>Product vision:</strong> The vision outlines how your customers will benefit from your offering. How will the job performer benefit from the solution? What will getting the job done look like after the solution is in place?</li><li><strong>Business objectives:</strong> A roadmap must be aligned with the organization’s strategy and objectives. The goals of the business are important for measuring progress.</li><li><strong>Timefames:</strong> Rather than committing to specific dates, good roadmaps sequence work and set broad timelines for completion.</li><li><strong>Themes:</strong> These are the key problems that customers face when completing a job, or clusters of needs that align to the overall solution to be created. JTBD helps frame the themes of your roadmap in particular.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Figure 5.1 shows an example from their book of a basic roadmap overview for a fictional company, The Wombatter Hose, illustrating these main components. Note the disclaimer, as well, indicating that the roadmap is subject to change.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure class=\"wp-block-image size-large\">\n<img src=\"https://alistapart.com/wp-content/uploads/2020/05/fig-5.1-wombatter-hose.jpg?fit=672%2C1024\" alt=\"\" class=\"wp-image-7172352\"/>\n<figcaption>Figure 5.1: An example of the main components of a roadmap from the book <cite>Product Roadmaps Relaunched</cite>.<sup>2</sup>\n</figcaption>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>Putting it all together, the process for creating a JTBD-driven roadmap can be broken down into four phases.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Step 1: Define the solution direction.</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Define the various elements of your overall product strategy to get agreement on how you’ll be using them. In addition to your solution vision, also define the following together with the team:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li><strong>Mission:</strong> What are your business intentions? The mission is about what your organization wants to ultimately achieve.</li><li><strong>Values:</strong> What are your beliefs and ideals? What is the philosophy of your organization and solution? Values define the philosophy of the team and what it believes.</li><li><strong>Business objectives:</strong> What are the specific goals your offerings will accomplish for the organization? Frame these in terms of outcomes, not outputs.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p><strong>Step 2: Determine customer needs to pursue.</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Next, decide on the customer needs to pursue. Here, the authors of <em>Product Roadmaps Relaunched</em> stress the importance of grounding the roadmap in actual customer need. JTBD is central to this step. They write:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>“Identifying customer needs is the most important aspect of your roadmapping process. Roadmaps should be about expressing those customer needs. Therefore, most items on your roadmap will derive from a job the customer needs to accomplish or a problem the customer must solve.”</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>As outlined in Chapter 2, “Core Concepts of JTBD,” needs are hierarchical—from high-level aspirations to main jobs and sub-jobs to micro-jobs. Figure out the top-level jobs to explore and then drill down into the specific themes to target.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The “value themes,” as they are called, might come right from the job map. Locate the areas of highest underserved needs and use those stages as the categories of your roadmap themes. Or you can cluster needs to form themes that don’t necessarily follow the chronology of the job map. The important point is to ground the division of the roadmap in real-world observations of the customer’s job to be done and align the timeline to it.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Step 3: Set a timeline.</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Next, create a sequence of value themes that your team will work toward. Timelines can be absolute, relative, or a mix of both. Absolute timelines with specific dates carry the risk of changing, which, in turn, can cause confusion or missed expectations.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Relative timelines give more flexibility but still provide insight into what’s coming and why. There are various terms to use, but the timeline is often broken into three phases for near-term, mid-term, and long-term. Examples include “now, later, future” or “going, next, later” or something similar. Find what works best for you.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Step 4: Align development effort to the roadmap.</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Finally, conceptualize specific solutions to design and create. Use job stories to tie the overall project intent to customer needs, outlined in the next section. Then conceptualize solutions around getting the entire job done or the parts of it determined to be most strategically relevant to your business.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>After a roadmap is created, you may then need detailed project plans to track progress. A simple Kanban board can serve that purpose in many cases. Or, for more complex software development efforts, tracking software may be needed. In Agile efforts, epic planning and then sprint planning come after you have an overall roadmap.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Tying the overall plan to customer needs gives the design and development teams the feeling that they are building something that matters to customers. Staying focused on customer needs helps avoid building things your customers don’t want. The nature of a job stays the same, even as features may shift. Grounding the roadmap in JTBD ensures that both its longevity and ability to absorb will change.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Learn More About This Play</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Lombardo, C. Todd, Bruce McCarthy, Evan Ryan, and Michael Conners.<sup>[3]</sup> <em>Product Roadmaps Relaunched. </em>Sebastopol, CA:O’Reilly, 2018.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>This book distills a wealth of practical information into a compact guide on roadmapping. The authors go to great lengths to provide numerous examples and stories from real-world cases. They use a realistic, modern approach for creating a roadmap that is driven, in part, by JTBD.</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:heading -->\n<h2>Align Teams to Job Stories</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Agile development enables teams and organizations to work in a flexible way. The approach started in software development, but has spread to other domains, including government and the military. The principles of Agile development can apply to just about any field.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>A key part of Agile is to break down efforts into individual units of work. <em>User stories</em> are short descriptions of features and functionality written from the perspective of the end user. Teams can focus on only a small part of the whole and make progress in a controlled way.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>User stories are commonly written in a three-part format. The first element indicates a user’s role in the system. The second points to a capability that enables the person to get a task done. The last part often describes a benefit or reason for using the capability.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Although specific styles can vary, a typical user story resembles something like the following:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>As a &#60;role> I can &#60;capability>, so that &#60;benefit></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>Examples of use stories in this format include:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>As a system admin, I can specify files or folders to back up based on file size, date created, and date modified.</li><li>As a user, I can indicate folders not to back up so that my drive isn't filled up with things I don't need to be saved.</li><li>As a user, I want to update the name of a document so that I can categorize it.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>For any given system, there may be hundreds of user stories. Some can be quite granular, such as describing a single button and why a user would click it. Stories are then organized into a backlog or repository of functionality to be built. Teams break off logical groups of user stories in sprints or two- to four-week cycles of work.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Job Stories</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Although user stories are good for breaking down work, they typically fail to connect the solution being built with user needs. They lack an indication of <em>why</em> someone would behave in a certain way and what they need to get a job done. In fact, often user stories are derived from the capability being built, not from observing actual behavior.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>Job stories</em> are an alternative to user stories. They follow the tradition of breaking down efforts into smaller pieces, but through the JTBD lens. The technique was first pioneered by the product development team at Intercom, a leading marketing communications solution. They wanted to avoid leading designers with a preconceived solution, as well as tying development to the company vision and strategy.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Paul Adams, an Intercom product manager, wrote about job stories for the first time, saying: “We frame every design problem in a Job, focusing on the triggering event or situation, the motivation and goal, and the intended outcome.”<sup>[4]</sup></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As a result, their job story format also has three parts. But instead of focusing on a generic role, like a “user” or an “admin,” job stories begin with a highlight on the situation and context, not the individual:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>When [situation], I want to [motivation], so I can [expected outcome].</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>Examples of job stories include:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>When an important new customer signs up, I want to be notified so that I can start a conversation with that person.</li><li>When I visit someone’s profile page, I want to see how many posts they have in each topic so that I have an understanding of where they have the most knowledge.</li><li>When I have used the application multiple times, I get nudged to contribute so that I am encouraged to participate.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>JTBD author and leader Alan Klement has done the most work refining the job story format.<sup>[5]</sup> He believes that adding more information about the circumstances shows causality better. Focusing on the context shifts attention from a persona to the situation. Klement advises that you avoid writing vague situations, but instead be as specific as possible.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>For instance, consider these three possible situations for the first element of job stories:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>When I’m hungry…</li><li>When I’m lost…</li><li>When I want to check my email…</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Instead, Klement recommends describing the circumstances in rich detail:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>When I’m hungry, running late to get somewhere, not sure when I’m going to eat again, and worried that I’ll soon be tired and irritable from hunger…</li><li>When I’m lost in a city that I’ve never been to, don’t know the local language, and am worried that I’ll be wasting my time in places I don’t want to be in…</li><li>When I want to check my email, but don’t want anyone around me to know I’m checking my email because they’ll think I’m being rude…</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Each of these example situations provides more context for designing an appropriate solution.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Working with Job Stories</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Job stories are modular, giving designers and developers the flexibility to solve problems in alternative ways. Job stories are grounded in real-world insight, and they are more powerful than user stories in guiding solutions. But creating job stories is more free-form than other JTBD techniques. Still, there are patterns that you can follow. Using the elements from Chapter 2, I suggest the following structure for job stories:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>When I [circumstance + job stage/step], I want to [micro-job], so I can [need].</em></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>Examples:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>When I am one of the top posters while updating my social media feeds daily, I want it to show on my profile so that I can increase recognition as an expert on the subject.</li><li>When I run out of materials needed while completing an art project, I want to find alternative materials so that I can maximize the number of uses of my current supplies.</li><li>When preparing for my commute and running late, I want to know the current weather along my journey so that I can minimize the chance of arriving wet.</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Consider the last example. The first element combines information about the circumstances (<em>running late</em>) of getting the main job done (<em>commute to work</em>) within a stage of the process (<em>prepare for commute</em>).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The second element points to an even smaller step or micro-job (<em>check forecast</em>). It should be formulated without reference to specific technology, but should be specific enough for designers and developers to create a specific capability.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Finally, the last element can be taken right from your list of needs. In this case, the job performer (<em>commuter</em>) wants to avoid showing up to the office wet (<em>minimize the chance of arriving at work wet</em>). You can leverage the elements your JTBD landscape already uncovered in research directly in the formulation of the job story statements.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In researching this book, I’ve come across various alternative approaches to formulating job stories. Andrea Hill, a prominent advocate of JTBD on social media, suggests a slightly different approach. She sees the middle element pointing directly to a feature or solution of some kind, thus explicitly crossing from the problem space into the solution space. Her basic format is as follows:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>When I [circumstance], I want to [solution capability], so I can [need].</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>A job story for the previous example of commuting to work might then look like this:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p><em>When I’m preparing to commute to work, I want to have weather forecast notifications pushed to my phone, so I can minimize the chance of arriving wet.</em></p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>Steph Troeph, research and JTBD instructor in the UK, approaches job stories in yet another way. She thinks of them with this formula:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>When I [circumstance], I want to [job], so that [benefit a solution offers].</em></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Regardless of your interpretation, the key is to find a consistent structure and stick with it. The form you end up with needs to be appropriate to your team and your situation.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Jobs Stories in Action</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Ultimately, job stories tie a local design and development effort to a broader JTBD framework. Because the format of job stories includes contextual details, they are portable. In other words, a job story should make sense without having to know the larger JTBD landscape or job map. As a result, job stories have a more “plug-and-play” versatility that is often required for Agile designs and development teams.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>For instance, Agile planners can manage a backlog of job stories much in the same way that they would manage user stories. If a given sprint gets slowed down or changes direction, stories not addressed can be carried over to the next sprint. Having a smaller, self-contained description of the smaller job to be done has advantages during the design and development phases.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But to be clear: I have found that job stories typically <em>do not</em> replace user stories for development completely. Instead, job stories guide and frame the conceptualization of a solution rather than track implementation. They serve best as a design tool to create or determine concept direction and design. Developers and engineers will likely still need user stories to measure the burndown rate and overall progress.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Your job map provides an overall orientation to your JTBD landscape and allows you to zero in on a specific area for design and development. A roadmap gives you a high-level sequence of development with the rationale for planning activities. Job stories are more specific and guide the local design and development of features and capabilities.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Follow these steps to create job stories based on your JTBD research:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Step 1: Understand job stages and circumstances.</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Base the relevant jobs and circumstances on previous interviews and observations. For each area of development in your solution, consider the steps in the main job. Then drill down and list the smaller and smaller steps as micro-jobs, using the rules of formulating JTBD. Also identify the circumstances that apply to that part of the main job in particular.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Depending on the depth of your prior research and how well you and your team understand the job, you may not need to do more research to create and validate job stories. It’s never a bad idea to speak with people again and drill down on specific problems and objectives they have. During additional interviews, ask “how?” until you get more granular in understanding of subgoals and objectives.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Step 2: Formulate job stories.</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As a team, write job stories that are specific to your design and development effort. Decide on a consistent format for the job stories and stick to it.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Strive to come up with unique, mutually exclusive stories that target specific jobs and circumstances. Avoid redundancy. For instance, in the previous example, you probably don’t need separate stories for commuting by train versus commuting by car. Develop the job stories that matter the most and focus on a limited set. You may end up with anywhere from three to eight job stories per project or sprint.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><strong>Step 3: Solve for the job stories.</strong></p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Make job stories visible and transparent to the entire team to solve for the job stories. For instance, post a relevant list of job stories in a brainstorming session for everyone to see. Or list job stories at the beginning of a design critique so that the team has context for making comments. Use JTBD to guide design and development decisions.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>It’s also possible to then use the job stories to review the appropriateness of your solutions. First, the design team can use the job stories relevant to a project as heuristics. They should constantly ask if their designs are meeting the user’s goals set out in the job stories.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Then you can test solutions with users against the job stories. Show users your solutions (e.g., as a mock-up or prototype) and ask them how well each addresses the job stories. This can be done in an interview-style fashion or with a survey. The job stories ultimately become a measure for success of the designs before anything is built.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Job stories let you take a step back and look at the context of the job while designing a product or service. In this respect, job stories fill an important gap between the observations of customers and solution development, connecting insights into customer needs to individual features and development efforts.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Related Approaches: Needs Statements</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Design thinking is a broad framework for creative problem solving. It is rooted in human-centered methods that seek to develop deep empathy for people and then to devise solutions that meet their needs. In design thinking, it is important to define the problem to solve before generating options for solutions.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>One technique to encapsulate insights from research is to generate <em>need statements</em>, greatly resembling job stories in form. But these statements differ from “needs,” as defined in Chapter 2, in that need statements in design thinking are not specifically limited to the outcomes of a getting a main job done, and they can be aspirational in nature.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Need statements in design thinking also tend to be much more focused on a persona or an individual rather than the circumstances. For instance, writing for the Norman Nielsen Group, Sarah Gibbons refers to need statements representing a point-of-view for the user of a system:<sup>[6]</sup> “A user need statement is an actionable problem statement used to summarize who a particular user is, the user’s need, and why the need is important to that user.”</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Like job stories, need statements have three components: a user, a need, and a goal. The <em>user</em> corresponds to a goal-based persona based on research (as outlined in Chapter 4, “Defining Value”). A <em>need</em> is expressed independent of a feature or technology. The <em>goal</em> is the result of meeting the need. Gibbons provides an example:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>Alieda, a multitasking, tech-savvy mother of two, needs to quickly and confidently compare options without leaving her comfort zone in order to spend more time doing the things that really matter.</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>Note that the insight at the end of this statement, “doing the things that really matter,” is very broad and hard to measure. Job stories, on the other hand, favor a more specific context and outcome. For instance, rewriting the above example through the lens of job stories might yield something like the following:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>When I’m multitasking and in a rush, I need a familiar way to quickly and confidently compare options so that I can minimize the time spent on finding a solution.</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>Like need statements in design thinking, job stories also avoid the mention of features or technology. Yet, they are much more specific to a given job and its context. While both a need statement from design thinking and a job story can feed into the creative generation of solutions, job stories will provide more direct guidance without prescribing a solution.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But the definition of a <em>need</em> in design thinking can vary greatly. For instance, IBM’s Enterprise Design Thinking approach also includes guidelines for generating statements.<sup>[7]</sup> Not surprisingly, there are three parts: a user, a need, and a benefit. Here’s an example from the IBM site:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>A developer needs a way to make sense of minimal design so that they can prototype faster.</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>This example is much more specific than Gibbon’s approach, yet still avoids mentioning a specific solution. There are no aspirational elements, such as “pursuing lifelong dreams,” sometimes found elsewhere in design thinking. IBM’s approach to need statements is closer to the job story approach, but is also light on describing the circumstances of use.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In some sense, the differences between job stories—even with the variations in format—and need statements points to a key distinction between JTBD and design thinking. The former focuses much more on the circumstances than the person’s state of mind or psychology. Where design thinking seeks to gain empathy for the individual as a starting point, JTBD seeks to understand the circumstances of accomplishing an objective before factoring in emotional and personal aspects.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Learn More About This Play</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Klement, Alan. “Replacing the User Story with the Job Story.” <em>JTBD.info</em> (2013); “5 Tips for Writing a Job Story,” <em>JTBD.info</em> (2013); “Designing Features Using Job Stories,” <em>Inside Intercom</em> (2015).</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>Klement has done the most extensive work to develop the job story technique. These three articles outline the basis for creating them. The technique has evolved slightly, but Klement points clearly to how he’s updated his approach. Klement and others have posted widely about their use for development efforts, but start with these resources.</p></blockquote>\n<!-- /wp:quote -->\n\n<!-- wp:paragraph -->\n<p>van de Keuken, Maxim. “Using Job Stories and Jobs-to-be-Done in Software Requirements Engineering.” Thesis, Utrecht University, 2017.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:quote -->\n<blockquote class=\"wp-block-quote\"><p>This thesis project offers a detailed investigation of how job stories are applied to date. After illustrating the history of job stories, Van de Keuken presents the results of his original research variations in application of job stories as seen in practice. This work contributes greatly to making job stories a more formal part of software requirements engineering.</p></blockquote>\n<!-- /wp:quote -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 07 May 2020 14:30:00 +0000","feedId":25,"bgimg":"https://alistapart.com/wp-content/uploads/2020/05/fig-5.1-wombatter-hose.jpg?fit=672%2C1024","linkMd5":"b0254eb151f4baf7b9eba67fab8213b4","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn54@2020_3/2021/04/10/03-45-55-892_4a274bbb5ebfa65d.webp","destWidth":672,"destHeight":1024,"sourceBytes":77188,"destBytes":77188,"author":"\n\t\t\t\tby \t\t\t\t\t","articleImgCdnMap":{"https://alistapart.com/wp-content/uploads/2020/05/fig-5.1-wombatter-hose.jpg?fit=672%2C1024":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn54@2020_3/2021/04/10/03-45-55-892_4a274bbb5ebfa65d.webp"},"publishedOrCreatedDate":1618026345097},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tUsability Testing for Voice Content\t\t\t\t","link":"https://alistapart.com/article/usability-testing-for-voice-content/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>It’s an important time to be in voice design. Many of us are turning to voice assistants in these times, whether for comfort, recreation, or staying informed. As the interest in interfaces driven by voice continues to reach new heights around the world, so too will users’ expectations and the best practices that guide their design.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Voice interfaces (also known as voice user interfaces or VUIs) have been reinventing how we approach, evaluate, and interact with user interfaces. The impact of conscious efforts to reduce close contact between people will continue to increase users’ <a href=\"https://alistapart.com/article/do-androids-dream-in-free-verse/\">expectations for the availability of a voice component</a> on all devices, whether that entails a microphone icon indicating voice-enabled search or a full-fledged voice assistant waiting patiently in the wings for an invocation.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But voice interfaces present inherent challenges and surprises. In this relatively new realm of design, the intrinsic twists and turns in spoken language can make things difficult for even the most carefully considered voice interfaces. After all, spoken language is littered with <em>fillers</em> (in the <a href=\"https://en.wikipedia.org/wiki/Filler_(linguistics)\">linguistic sense of utterances like <em>hmm</em> and <em>um</em></a>), hesitations and pauses, and other interruptions and speech disfluencies that present puzzling problems for designers and implementers alike.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Once you’ve built a voice interface that introduces information or permits transactions in a rich way for spoken language users, the easy part is done. Nonetheless, voice interfaces also surface unique challenges when it comes to usability testing and robust evaluation of your end result. But there are advantages, too, especially when it comes to accessibility and cross-channel content strategy. The fact that voice-driven content lies on the opposite extreme of the spectrum from the traditional website confers it an additional benefit: it’s an effective way to analyze and stress-test just how channel-agnostic your content truly is.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>The quandary of voice usability</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Several years ago, I led a talented team at <a href=\"https://www.acquia.com/resources/acquia-labs\">Acquia Labs</a> to design and build a voice interface for <a href=\"https://digitalservices.georgia.gov/\">Digital Services Georgia</a> called <a href=\"https://www.acquia.com/blog/ask-georgiagov-alexa-skill-citizens-georgia-acquia-labs/12/10/2017/3312516\">Ask GeorgiaGov</a>, which allowed citizens of the state of Georgia to access content about key civic tasks, like registering to vote, renewing a driver’s license, and filing complaints against businesses. Based on copy drawn directly from the frequently asked questions section of the <a href=\"https://georgia.gov/\">Georgia.gov website</a>, it was the first Amazon Alexa interface integrated with the <a href=\"https://www.drupal.com\">Drupal</a> content management system ever built for public consumption. Built by my former colleague <a href=\"https://www.drupal.org/u/hampercm\">Chris Hamper</a>, it also offered a host of impressive features, like allowing users to request the phone number of individual government agencies for each query on a topic.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Designing and building web experiences for the public sector is a uniquely challenging endeavor due to requirements surrounding accessibility and frequent budgetary challenges. Out of necessity, governments need to be exacting and methodical not only in how they engage their citizens and spend money on projects but also how they incorporate new technologies into the mix. For most government entities, voice is a completely different world, with many potential pitfalls.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>At the outset of the project, the <a href=\"https://digitalservices.georgia.gov/our-team\">Digital Services Georgia team</a>, led by <a href=\"https://twitter.com/nikofthehill/\">Nikhil Deshpande</a>, expressed their most important need: a single content model across all their content irrespective of delivery channel, as they only had resources to maintain a single rendition of each content item. Despite this editorial challenge, Georgia saw Alexa as an exciting opportunity to open new doors to accessible solutions for citizens with disabilities. And finally, because there were relatively few examples of voice usability testing at the time, we knew we would have to learn on the fly and experiment to find the right solution.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Eventually, we discovered that all the traditional approaches to usability testing that we’d executed for other projects were ill-suited to the unique problems of <em>voice usability</em>. And this was only the beginning of our problems.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>How voice interfaces improve accessibility outcomes</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Any discussion of voice usability must consider some of the most experienced voice interface users: people who use assistive devices. After all, accessibility has long been a bastion of web experiences, but it has only recently become <a href=\"https://hbr.org/2019/05/using-voice-interfaces-to-make-products-more-inclusive\">a focus of those implementing voice interfaces</a>. In a world where refreshable Braille displays and screen readers prize the rendering of web-based content into synthesized speech above all, the voice interface seems like an anomaly. But in fact, the <a href=\"https://upsidelab.io/blog/alexa-for-accessibility/\">exciting potential of Amazon Alexa</a> for disabled citizens represented one of the primary motivations for Georgia’s interest in making their content available through a voice assistant.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><a href=\"https://uxdesign.cc/tips-for-accessibility-in-conversational-interfaces-8e11c58b31f6\">Questions surrounding accessibility with voice</a> have surfaced in recent years due to the perceived user experience benefits that voice interfaces can offer over more established assistive devices. Because screen readers make no exceptions when they recite the contents of a page, they can occasionally present superfluous information and force the user to wait longer than they’re willing. In addition, with an effective content schema, it can often be the case that voice interfaces facilitate pointed interactions with content at a more granular level than the page itself.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Though it can be difficult to convince even the most forward-looking clients of accessibility’s value, Georgia has been not only a trailblazer but also a committed proponent of content accessibility beyond the web. The state was among the first jurisdictions to offer a text-to-speech (TTS) phone hotline that read web pages aloud. After all, state governments must serve <em>all</em> citizens equally—no ifs, ands, or buts. And while these are still early days, I can see voice assistants becoming new conduits, and perhaps more efficient channels, by which disabled users can access the content they need.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Managing content destined for discrete channels</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Whereas voice can improve accessibility of content, it’s seldom the case that web and voice are the only channels through which we must expose information. For this reason, one piece of advice I often give to content strategists and architects at organizations interested in pursuing voice-driven content is to <a href=\"https://alistapart.com/article/conversations-with-robots/\">never think of voice content in isolation</a>. Siloing it is the same misguided approach that has led to mobile applications and other discrete experiences delivering orphaned or outdated content to a user expecting that all content on the website should be up-to-date and accessible through other channels as well.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>After all, we’ve trained ourselves for many years to think of content in the web-only context rather than across channels. Our closely held assumptions about links, file downloads, images, and other web-based marginalia and miscellany are all aspects of web content that translate poorly to the conversational context—and particularly the voice context. Increasingly, we all need to concern ourselves with an <a href=\"https://preston.so/writing/building-usable-conversations-the-story-of-ask-georgiagov\"><em>omnichannel content strategy</em></a> that straddles all those channels in existence today and others that will doubtlessly surface over the horizon.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>With the advantages of structured content in Drupal 7, Georgia.gov already had a content model amenable to interlocution in the form of <em>frequently asked questions</em> (FAQs). While <a href=\"https://alistapart.com/article/the-faq-as-advice-column/\">question-and-answer formats are convenient for voice assistants</a> because queries for content tend to come in the form of questions, the returned responses likewise need to be as voice-optimized as possible.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>For Georgia.gov, the need to preserve a single rendition of all content across all channels led us to perform a <a href=\"https://preston.so/writing/building-usable-conversations-the-story-of-ask-georgiagov\"><em>conversational content audit</em></a>, in which we read aloud all of the FAQ pages, putting ourselves in the shoes of a voice user, and identified key differences between how a user would interpret the written form and how they would parse the spoken form of that same content. After some discussion with the editorial team at Georgia, we opted to limit calls to action (e.g., “Read more”), links lacking clear context in surrounding text, and other situations confusing to voice users who cannot visualize the content they are listening to.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Here’s a table containing examples of how we converted certain text on FAQ pages to counterparts more appropriate for voice. Reading each sentence aloud, one by one, helped us identify cases where users might scratch their heads and say “Huh?” in a voice context.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure>\n<table>\n<thead>\n<tr>\n<th scope=\"col\">Before</th>\n<th scope=\"col\">After</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td data-title=\"Before\">Learn how to <u>change your name on your Social Security card</u>.</td>\n<td data-title=\"After\">The Social Security Administration can help you <u>change your name on your Social Security card</u>.</td>\n</tr>\n<tr>\n<td data-title=\"Before\">You can receive payments through either a debit card or direct deposit. <u>Learn more about payments.</u></td>\n<td data-title=\"After\">You can <u>receive payments</u> through either a debit card or direct deposit.</td>\n</tr>\n<tr>\n<td data-title=\"Before\"><u>Read more about this.</u></td>\n<td data-title=\"After\">In Georgia, the <u>Family Support Registry</u> typically pulls payments directly from your paycheck. However, you can send your own payments online through your bank account, your credit card, or Western Union. You may also send your payments by mail to the address provided in your court order.</td>\n</tr>\n</tbody>\n</table>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>In areas like content strategy and content governance, content audits have long been key to understanding the full picture of your content, but it doesn’t end there. Successful content audits can run the gamut from automated checks for orphaned content or overly wordy articles to more qualitative analyses of how content adheres to a specific brand voice or certain design standards. For a content strategy truly prepared for <a href=\"https://preston.so/writing/the-channel-explosion-off-screens-and-out-the-window\">channels both here and still to come</a>, a holistic understanding of how users will interact with your content in a variety of situations is a baseline requirement today.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Other conversational interfaces have it easier</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Spoken language is inherently hard. Even the most gifted orators can have trouble with it. It’s littered with mistakes, starts and stops, interruptions, hesitations, and a vertiginous range of other uniquely human transgressions. The written word, because it’s committed instantly to a mostly permanent record, is tame, staid, and carefully considered in comparison.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>When we talk about conversational interfaces, we need to draw a clear distinction between the range of user experiences that traffic in <em>written language</em> rather than <em>spoken language</em>. As we know from <a href=\"https://alistapart.com/article/conversational-design/#section3\">the relative solidity of written language and literature</a> versus the comparative transience of spoken language and oral traditions, in many ways the two couldn’t be more different from one another. The implications for designers are significant because spoken language, from the user’s perspective, lacks a graphical equivalent to which those scratching their head can readily refer. We’re dealing with the spoken word and <a href=\"https://preston.so/writing/affordance-and-wayfinding-in-voice-interface-design\"><em>aural</em> affordances</a>, not pixels, written help text, or visual affordances.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Why written conversational interfaces are easier to evaluate</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>One of the privileges that chatbots and textbots enjoy over voice interfaces is the fact that by design, they can’t hide the previous steps users have taken. Any conversational interface user working in the written medium has access to their previous history of interactions, which can stretch back days, weeks, or months: the so-called <em>backscroll</em>. A flight passenger communicating with an airline through Facebook Messenger, for example, knows that they can merely scroll up in the chat history to confirm that they’ve already provided the company with their e-ticket number or frequent flyer account information.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>This has outsize implications for information architecture and <a href=\"https://preston.so/writing/affordance-and-wayfinding-in-voice-interface-design\">conversational <em>wayfinding</em></a>. Since chatbot users can consult their own written record, it’s much harder for things to go completely awry when they make a move they didn’t intend. Recollection is much more difficult when you have to remember what you said a few minutes ago off the top of your head rather than scrolling up to the information you provided a few hours or weeks ago. An effective chatbot interface may, for example, enable a user to jump back to a much earlier, specific place in a conversation’s history.An effective chatbot interface may, for example, enable a user to jump back to a much earlier, specific place in a conversation’s history. Voice interfaces that live perpetually in the moment have no such luxury.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Eye tracking only works for visual components</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>In many cases, those who work with chatbots and messaging bots (especially those leveraging text messages or other messaging services like Facebook Messenger, Slack, or WhatsApp) have the unique privilege of benefiting from a <em>visual</em> component. Some conversational interfaces now insert other elements into the conversational flow between a machine and a person, such as <a href=\"https://tripetto.com/blog/why-conversational-forms-still-matter/\">embedded conversational forms</a> (like <a href=\"https://space10-community.github.io/conversational-form/landingpage/\">SPACE10’s Conversational Form</a>) that allow users to enter rich input or select from a range of possible responses.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The success of eye tracking in more traditional usability testing scenarios highlights its appropriateness for visual interfaces such as websites, mobile applications, and others. However, from the standpoint of evaluating voice interfaces that are entirely aural, eye tracking serves only the limited (but still interesting from a research perspective) purpose of assessing where the test subject is looking while speaking with an invisible interlocutor—not whether they are able to use the interface successfully. Indeed, eye tracking is only a viable option for voice interfaces that have some visual component, like the Amazon Echo Show.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>Think-aloud and concurrent probing interrupt the conversational flow</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>A well-worn approach for usability testing is <em>think-aloud</em>, which allows for users working with interfaces to present their frequently qualitative impressions of interfaces verbally while interacting with the user experience in question. Paired with eye tracking, think-aloud adds considerable dimension to a usability test for visual interfaces such as websites and web applications, as well as other visually or physically oriented devices.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Another is <em>concurrent probing</em> (CP). Probing involves the use of questions to gather insights about the interface from users, and <a href=\"https://www.usability.gov/how-to-and-tools/methods/running-usability-tests.html\">Usability.gov describes two types</a>: <em>concurrent</em>, in which the researcher asks questions during interactions, and <em>retrospective</em>, in which questions only come once the interaction is complete.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Conversational interfaces that utilize written language rather than spoken language can still be well-suited to think-aloud and concurrent probing approaches, especially for the components in the interface that require manual input, like conversational forms and other traditional UI elements interspersed throughout the conversation itself.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But for voice interfaces, think-aloud and concurrent probing are highly questionable approaches and can catalyze a variety of unintended consequences, including accidental invocations of trigger words (such as Alexa mishearing “selected” as “Alexa”) and introduction of bad data (such as speech transcription registering both the voice interface and test subject). After all, in a hypothetical think-aloud or CP test of a voice interface, the user would be responsible for conversing with the chatbot while simultaneously offering up their impressions to the evaluator overseeing the test.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Voice usability tests with retrospective probing</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p><em>Retrospective probing</em> (RP), a lesser-known approach for usability testing, is seldom seen in web usability testing due to its chief weakness: the fact that we have awful memories and rarely remember what occurred mere moments earlier with anything that approaches total accuracy. (This might explain why the backscroll has joined the pantheon of rigid recordkeeping currently occupied by cuneiform, the printing press, and other means of concretizing information.)</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>For users of voice assistants lacking scrollable chat histories, retrospective probing introduces the potential for subjects to include false recollections in their assessments or to misinterpret the conclusion of their conversations. That said, retrospective probing permits the participant to take some time to form their impressions of an interface rather than dole out incremental tidbits in a stream of consciousness, as would more likely occur in concurrent probing.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>What makes voice usability tests unique</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Voice usability tests have several unique characteristics that distinguish them from web usability tests or other conversational usability tests, but some of the same principles unify both visual interfaces and their aural counterparts. As always, “test early, test often” is a mantra that applies here, as the earlier you can begin testing, the more robust your results will be. Having an individual to administer a test and another to transcribe results or watch for signs of trouble is also an effective best practice in settings beyond just voice usability.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Interference from poor soundproofing or external disruptions can derail a voice usability test even before it begins. Many large organizations will have soundproof rooms or recording studios available for voice usability researchers. For the vast majority of others, a mostly silent room will suffice, though absolute silence is optimal. In addition, many subjects, even those well-versed in web usability tests, may be unaccustomed to voice usability tests in which long periods of silence are the norm to establish a baseline for data.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading {\"level\":3} -->\n<h3>How we used retrospective probing to test Ask GeorgiaGov</h3>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>For Ask GeorgiaGov, we used the retrospective probing approach almost exclusively to gather a range of insights about how our users were interacting with voice-driven content. We endeavored to evaluate interactions with the interface early and diachronically. In the process, we asked each of our subjects to complete two distinct tasks that would require them to traverse the entirety of the interface by asking questions (conducting a search), drilling down into further questions, and requesting the phone number for a related agency. Though this would be a significant ask of any user working with a visual interface, the unidirectional focus of voice interface flows, by contrast, reduced the likelihood of lengthy accidental detours.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Here are a couple of example scenarios:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:html -->\n<figure class=\"quote\">\n<blockquote>\n<p>You have a business license in Georgia, but you’re not sure if you have to register on an annual basis. Talk with Alexa to find out the information you need. At the end, ask for a phone number for more information.</p>\n<p>You’ve just moved to Georgia and you know you need to transfer your driver’s license, but you’re not sure what to do. Talk with Alexa to find out the information you need. At the end, ask for a phone number for more information.</p>\n</blockquote>\n</figure>\n<!-- /wp:html -->\n\n<!-- wp:paragraph -->\n<p>We also peppered users with questions after the test concluded to learn about their impressions through retrospective probing:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>“On a scale of 1–5, based on the scenario, was the information you received helpful? Why or why not?”</li><li>“On a scale of 1–5, based on the scenario, was the content presented clear and easy to follow? Why or why not?”</li><li>“What’s the answer to the question that you were tasked with asking?”</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:paragraph -->\n<p>Because state governments also routinely deal with citizen questions having to do with potentially traumatic issues such as divorce and sexual harassment, we also offered the choice for participants to opt out of certain categories of tasks.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>While this testing procedure yielded compelling results that indicated our voice interface was performing at the level it needed to despite its experimental nature, we also ran into considerable challenges during the usability testing process. Restoring Amazon Alexa to its initial state and troubleshooting issues on the fly proved difficult during the initial stages of the implementation, when bugs were still common.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>In the end, we found that many of the same lessons that apply to more storied examples of usability testing were also relevant to Ask GeorgiaGov: the importance of testing early and testing often, the need for faithful yet efficient transcription, and the surprising staying power of bugs when integrating disparate technologies. Despite Ask GeorgiaGov’s many similarities to other interface implementations in terms of technical debt and the role of usability testing, we were overjoyed to hear from real Georgians whose engagement with their state government could not be more different from before.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Conclusion</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Many of us may be building interfaces for voice content to experiment with newfangled channels, or to build for disabled people and people newer to the web. Now, they are necessities for many others, especially as social distancing practices continue to take hold worldwide. Nonetheless, it’s crucial to keep in mind that voice should be only one component of a channel-agnostic strategy equipped for content ripped away from its usual contexts. Building usable voice-driven content experiences can teach us a great deal about how we should envisage our milieu of content and its future in the first place.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Gone are the days when we could write a page in HTML and call it a day; content now needs to be rendered through synthesized speech, augmented reality overlays, digital signage, and other environments where users will never even touch a personal computer. By focusing on structured content first and foremost with an eye toward moving past our web-based biases in developing our content for voice and others, we can better ensure the effectiveness of our content on any device and in any form factor.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Eight months after we finished building Ask GeorgiaGov in 2017, we conducted a retrospective to inspect the logs amassed over the past year. The results were striking. Vehicle registration, driver’s licenses, and the state sales tax comprised the most commonly searched topics. 79.2% of all interactions were successful, an achievement for one of the first content-driven Alexa skills in production, and 71.2% of all interactions led to the issuance of a phone number that users could call for further information.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But deep in the logs we implemented for the Georgia team’s convenience, we found a number of perplexing 404 Not Found errors related to a search term that kept being recorded over and over again as “Lawson’s.” After some digging and consulting the native Georgians in the room, we discovered that one of our dear users with a particularly strong drawl was repeatedly pronouncing “license” in her native dialect to no avail.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As this anecdote highlights, just as no user experience can be truly perfect for everyone, voice content is an environment where imperfections can highlight considerations we missed in developing cross-channel content. And just as we have much to learn when it comes to the new shapes content can take as it jumps off the screen and out the window, it seems our voice interfaces still have a ways to go before they take over the world too.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><em>Special thanks to </em><a href=\"https://twitter.com/nikofthehill/\"><em>Nikhil Deshpande</em></a><em> for his feedback during the writing process.</em></p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 09 Apr 2020 14:00:00 +0000","feedId":25,"bgimg":"","linkMd5":"cc677963b1e9d2978c7d07f1006f6eda","bgimgJsdelivr":"","metaImg":"","author":"\n\t\t\t\tby \t\t\t\t\t","publishedOrCreatedDate":1618026345267},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tHow to Get a Dysfunctional Team Back on Track\t\t\t\t","link":"https://alistapart.com/article/dysfunctional-teams-back-on-track/","description":"<!-- wp:paragraph --> \n<p>Maybe you’ve been part of a team that you’ve seen slowly slide into a rut. You didn’t notice it happen, but you’re now not shipping anything, no one’s talking to each other, and the management’s Eye of Sauron has cast its gaze upon you.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Maybe you’ve just joined a team that’s in the doldrums.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Maybe the people who used to oil the wheels that kept everyone together have moved on and you’re having to face facts—you all hate each other.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>However you’ve ended up in this situation, the fact is that you’re now here and it’s up to someone to do something about it. And that person might be you.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading --> \n<h2><strong>You’re not alone</strong></h2> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>The first thing to understand is that you’re not the only person to ever encounter problems. Things like this happen all the time at work, but there are simple steps you can take and habits you can form to ease the situation and even dig yourself (and your team) out of the hole. I’ll share some techniques that have helped me, and maybe they can work for you, too.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>So let me tell you a story about a hot mess I found myself in and how we turned it around. Names and details have been changed to protect the innocent.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading --> \n<h2><strong>It always starts out great</strong></h2> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>An engineer called Jen was working with me on a new feature on our product that lets people create new meal recipes themselves. I was the Project Manager. We were working in six-week cycles.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>She had to rely on an API that was managed by Tom (who was in another team) to allow her to get and set the new recipe information on a central database. Before we kicked off, everyone knew the overall objective and everyone was all smiles and ready to go.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>The system architecture was a legacy mishmash of different parts of local databases and API endpoints. And, no prizes for guessing what’s coming next, the API documentation was like Swiss cheese.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Two weeks into a six-week cycle, Jen hit Tom up with a list of her dream API calls that she wanted to use to build her feature. She asked him to confirm or deny they would work—or even if they existed at all—because once she started digging into the docs, it wasn’t clear to her if the API could support her plans.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>However, Tom had form for sticking his head in the sand and not responding to requests he didn’t like. Tom went to ground and didn’t respond. Tom’s manager, Frankie, was stretched too thin, and hence wasn’t paying attention to this until I was persistently asking about it, in increasingly fraught tones.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>In the meantime, Jen tried to do as much as she could. Every day she built a bit more based on her as-yet unapproved design, hoping it would all work out.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>With two weeks left to go, Tom eventually responded with a short answer—which boiled down to “The API doesn’t support these calls and I don’t see why I should build something that does. Why don’t you get the data from the other part of the system? And by the way, if I’m forced to do this, it will take at least six weeks.”</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>And as we know, six weeks into two weeks doesn’t go. Problem.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>How did we sort it?</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading --> \n<h2><strong>Step 1 —&nbsp;Accept</strong></h2> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>When things go south, what do you do?</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Accept it.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Acknowledge whatever has happened to get you into this predicament. Take some notes about it to use in team appraisals and retrospectives. Take a long hard look at yourself, too.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Write a concise, impersonal summary of where you are. Try not to write it from your point of view. Imagine that you’re in your boss’ seat and just give them the facts as they are. Don’t dress things up to make them sound better. Don’t over-exaggerate the bad. Leave the emotions to the side.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>When you can see your situation clearly, you’ll make better decisions.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Now, pointing out the importance of taking some time to cool down and gather your thoughts seems obvious, but it’s based on the study of some of the most basic circuitry in our brains. Daniel Goleman’s 1995 book, <em>Emotional Intelligence: Why It Can Matter More Than IQ</em>, introduces the concept of <em>emotional hijacking</em>; the idea that the part of our brain that deals with emotion—the limbic system—can biologically interrupt rational thinking when it is overstimulated. For instance, experiments show that <a href=\"https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.220.4820&amp;rep=rep1&amp;type=pdf\">the angrier men get, the poorer are the decisions they make</a> at the casino. And another study found that people in a negative emotional state are <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4050437/\">more likely to deviate from logical norms</a>. To put it another way, if you’re pissed off, you can’t think straight.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>So when you are facing up to the facts, avoid the temptation to keep it off-the-record and only discuss it on the telephone or in person with your colleagues. There’s nothing to be scared of by writing it down. If it turns out that you’re wrong about something, you can always admit it and update your notes. If you don’t write it down, then there’s always scope for misunderstanding or misremembering in future.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>In our case, we summarized how we’d ended up at that juncture; the salient points were:</p> \n<!-- /wp:paragraph --> \n<!-- wp:list --> \n<ul>\n <li>I hadn’t checked to ensure we had scoped it properly before committing to the work. It wasn’t a surprise that the API coverage was patchy, but I turned a blind eye because we were excited about the new feature.</li>\n <li>Jen should have looked for the hard problem first rather than do a couple of weeks’ worth of nice, easy work around the edges. That’s why we lost two weeks off the top.</li>\n <li>Tom and Frankie’s communication was poor. The reasons for that don’t form part of this discussion, but something wasn’t right in that team.</li>\n</ul> \n<!-- /wp:list --> \n<!-- wp:paragraph --> \n<p>And that’s step one.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading --> \n<h2><strong>Step 2 — Rejoice</strong></h2> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Few people like to make mistakes, but everyone <em>will</em> make one at some point in their life. Big ones, small ones, important ones, silly ones—we all do it. Don’t beat yourself up.</p> \n<!-- /wp:paragraph --> \n<!-- wp:image {\"id\":7172758,\"sizeSlug\":\"full\",\"linkDestination\":\"none\"} --> \n<figure class=\"wp-block-image size-full\">\n <img src=\"https://alistapart.com/wp-content/uploads/2021/03/people-who-make-mistakes.jpg\" alt=\"A Venn diagram with one circle showing the set of people who make mistakes. In a smaller circle completely inside the first is the set of people who think they don't make mistakes.\" class=\"wp-image-7172758\" />\n</figure> \n<!-- /wp:image --> \n<!-- wp:paragraph --> \n<p>At the start of my career, I worked on a team whose manager had a very high opinion of himself. He was good, but what I learned from him was that he spread that confidence around the team. If something was looking shaky, he insisted that if we could “smell smoke,” that he had to be the first to know so he could do something about it. If we made a mistake, there was no hiding from it. We learned how to face up to it and accept responsibility, but what was more important was learning from him the feeling we were the best people to fix it.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>There was no holding of grudges. What was done, was done. It was all about putting it behind us.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>He would tell us that we were only in this team because he had handpicked us because we were the best and he only wanted the best around him. Now, that might all have been manipulative nonsense, but it worked.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>The only thing you can control is what you do now, so try not to fret about what happened in the past or get anxious about what might happen in the future.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>With that in mind, once you’ve written the summary of your sticky situation, set it aside!</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>I’ll let you in on a secret. No one else is interested in how you got here. They might be asking you about it (probably because they are scared that someone will ask them), but they’re always going to be more interested in how you’re going to sort the problem out.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>So don’t waste time pointing fingers. Don’t prepare slide decks to throw someone under the bus. Tag that advice with a more general “don’t be an asshole” rule.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>If you’re getting consistent heat about the past, it’s because you’re not doing a good enough job filling the bandwidth with a solid, robust, and realistic plan for getting out of the mess.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>So focus on the future.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Sometimes it’s not easy to do that, but remember that none of this is permanent. Trust in the fact that if you pull it together, you’ll be in a much more powerful position to decide what to do next.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Maybe the team will hold together with a new culture or, if it is irretrievably broken, once you’re out of the hole then you can do something about it and switch teams or even switch jobs. But be the person who sorted it out, or at the very least, be part of the gang who sorted it out. That will be obvious to outsiders and makes for a much better interview question response.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>In our story with Jen, we had a short ten-minute call with everyone involved on the line. We read out the summary and asked if anyone had anything to add.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Tom spoke up and said that he never gets time to update the API documentation because he always has to work on emergencies. We added that to our summary:</p> \n<!-- /wp:paragraph --> \n<!-- wp:list --> \n<ul>\n <li>Tom has an ongoing time management problem. He doesn’t have enough time allocated to maintain and improve the API documentation.</li>\n</ul> \n<!-- /wp:list --> \n<!-- wp:paragraph --> \n<p>After that was added, everyone agreed that the summary was accurate.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>I explained that the worst thing that could now happen was that we had to report back to the wider business that we’d messed up and couldn’t hit our deadline.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>If we did that, we’d lose face. There would be real financial consequences. It would show up on our appraisals. It wouldn’t be good. It wouldn’t be the end of the world, but it wasn’t something that we wanted. Everyone probably knew all that already, but there’s a power in saying it out loud. Suddenly, it doesn’t seem so scary.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Jen spoke up to say that she was new here and really didn’t want to start out like this. There was some murmuring in general support. I wrapped up that part of the discussion.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>I purposefully didn’t enter into a discussion about the solution yet. We had all come together to admit the circumstances we were in. We’d done that. It was enough for now.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading --> \n<h2><strong>Step 3 — Move on</strong></h2> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Stepping back for a second, as the person who is going to lead the team out of the wilderness, you may want to start getting in everyone’s face. You’ll be tempted to rely on your unlimited reserves of personal charm or enthusiasm to vibe everyone up. Resist the urge! Don’t do it!</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Your job is to give people the space to let them do their best work.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>I learned this the hard way. I’m lucky enough that I can bounce back quickly, but when someone is under pressure, funnily enough, a super-positive person who wants to throw the curtains open and talk about what a wonderful day it is might not be the most motivational person to be around. I’ve unwittingly walked into some short-tempered conversations that way.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Don’t micromanage. In fact, scrap all of your management tricks. Your job is to listen to what people are telling you—even if they’re telling you things by not talking.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Reframe the current problem. Break it up into manageable chunks.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>The first task to add to your list of things to do is simply to “Decide what we’re going to do about [the thing].”</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>It’s likely that there’s a nasty old JIRA ticket that everyone has been avoiding or has been bounced back and forth between different team members. Set that aside. There’s too much emotional content invested in that ticket now.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Create a new task that’s entirely centered on making a decision. Now, break it down into subtasks for each member of the team, like “Submit a proposal for what to do next.” Put your own suggestions in the mix but do your best to dissociate yourself from them.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Once you start getting some suggestions back and can tick those tasks off the list, you start to generate positive momentum. Nurture that.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>If a plan emerges, champion it. Be wary of naysayers. Challenge them respectfully with “How do you think we should…?” questions. If they have a better idea, champion that instead; if they don’t respond at all, then gently suggest “Maybe we should go with this if no one else has a better idea.”</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Avoid words like “need,” “just,” “one,” or “small.” Basically, anything that imposes a view of other people’s work. It seems trivial, but try to see it from the other side.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Saying, “I just need you to change that one small thing” hits the morale-killing jackpot. It unthinkingly diminishes someone else’s efforts. An engineer or a designer could reasonably react by thinking “What do you know about how to do this?!” Your job is to help everyone drop their guard and feel safe enough to contribute.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Instead, try “We’re all looking at you here because you’re good at this and this is a nasty problem. Maybe you know a way to make this part work?”</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>More often than not, <a href=\"https://www.sciencedaily.com/releases/2020/06/200603144334.htm\">people want to help</a>.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>So I asked Jen, Tom, and Frankie to submit their proposals for a way through the mess.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>It wasn’t straightforward. Just because we’d all agreed how we got here didn’t just magically make all the problems disappear. Tom was still digging his heels in about not wanting to write more code, and kept pushing back on Jen.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>There was a certain amount of back and forth. Although, with some constant reminders that we should maybe focus on what will move us forward, we eventually settled on a plan.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Like most compromises, it wasn’t pretty or simple. Jen was going to have to rely on using the local database for a certain amount of the lower-priority features. Tom was going to have to create some additional API functions and would end up with some unnecessary traffic that might create too much load on the API.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>And even with the compromise, Tom wouldn’t be finished in time. He’d need another couple of weeks.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>But it was a plan!</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p><em>N.B. Estimating is a whole other subject that I won’t cover here. Check out the </em><a href=\"https://basecamp.com/shapeup\"><em>Shape Up</em></a><em> process for some great advice on that.</em></p> \n<!-- /wp:paragraph --> \n<!-- wp:heading --> \n<h2><strong>Step 4 — Spread the word</strong></h2> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Once you’ve got a plan, commit to it and tell everyone affected what’s going on.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>When communicating with people who are depending on you, take the last line of your email, which usually contains the summary or the “ask,” and put it at the top. When your recipient reads the message, the opener is the meat. Good news or bad news, that’s what they’re interested in. They’ll read on if they want more.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>If it’s bad news, set someone up for it with a simple “I’m sorry to say I’ve got bad news” before you break it to them. No matter who they are, kindly <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5578619/\">framing the conversation will help them digest it</a>.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>When discussing it with the team, put the plan somewhere everyone can see it. Transparency is key.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Don’t pull any moves—like publishing deadline dates to the team that are two weeks earlier than the date you’ve told the business. Teams aren’t stupid. They’ll know that’s what you do.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Publish the new deadlines in a place where everyone on the team can see them, and say we’re aiming for this date but we’re telling the business that we’ll definitely be done by that date.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>In our case, I posted an update to the rest of the business as part of our normal weekly reporting cycle to announce we’d hit a bump that was going to affect our end date.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>Here’s an extract:</p> \n<!-- /wp:paragraph --> \n<!-- wp:quote --> \n<blockquote class=\"wp-block-quote\">\n <p><em>Hi everyone,</em></p>\n <p><em>Here’s the update for the week. I’m afraid there’s a bit of bad news to start but there is some good news too.</em></p>\n <p><em>First:</em></p>\n <p><em>We uncovered a misunderstanding between Jen and Tom this week. The outcome is that Tom has more API work to do than he anticipated. This affects the delivery date and means we’re now planning to finish 10 working days later on November 22.<br><br>**Expected completion date ** CHANGED ****<br>Original estimate: November 8<br>Current estimate: November 22<br /></br></br></br></br></em></p>\n <p><em>Second:&nbsp;</em></p>\n <p><em>We successfully released version 1.3 of the app into the App Store 🎉.</em></p>\n</blockquote> \n<!-- /wp:quote --> \n<!-- wp:paragraph --> \n<p>And so on...</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>That post was available for everyone within the team to see. Everyone knew what was to be done and what the target was.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>I had to field some questions from above, but I was ready with my summary of what went wrong and what we’d all agreed to do as a course of action. All I had to do was refer to it. Then I could focus on sharing the plan.</p> \n<!-- /wp:paragraph --> \n<!-- wp:heading --> \n<h2><strong>And all manner of things shall be well</strong></h2> \n<!-- /wp:heading --> \n<!-- wp:paragraph --> \n<p>Now, I’d like to say that we then had tea and scones every day for the next month and it was all rather spiffing. But that would be a lie.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>There was some more wailing and gnashing of teeth, but we all got through it and—even though we tried to finish early but failed—we did manage to finish by the November 22 date.</p> \n<!-- /wp:paragraph --> \n<!-- wp:paragraph --> \n<p>And then, after a bit of a tidy up, we all moved on to the next project, a bit older and a bit wiser. I hope that helps you if you’re in a similar scenario. <a href=\"https://twitter.com/liamjnugent\" data-type=\"URL\" data-id=\"https://twitter.com/liamjnugent\" target=\"_blank\" rel=\"noreferrer noopener\">Send me a tweet</a> or email me at <a href=\"mailto:liam.nugent@hey.com\" data-type=\"mailto\" data-id=\"mailto:liam.nugent@hey.com\" target=\"_blank\" rel=\"noreferrer noopener\">liam.nugent@hey.com</a> with any questions or comments. I’d love to hear about your techniques and advice.</p> \n<!-- /wp:paragraph -->","descriptionType":"text/html","publishedDate":"Thu, 04 Mar 2021 15:00:00 +0000","feedId":25,"bgimg":"https://alistapart.com/wp-content/uploads/2021/03/people-who-make-mistakes.jpg","linkMd5":"7c2b9f03e00f0bf27ec8dde9b5d696c3","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn21@2020_3/2021/04/10/03-45-56-047_011dba8cea3ff93e.webp","destWidth":972,"destHeight":612,"sourceBytes":55618,"destBytes":44048,"author":"\n\t\t\t\tby \t\t\t\t\t","articleImgCdnMap":{"https://alistapart.com/wp-content/uploads/2021/03/people-who-make-mistakes.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn21@2020_3/2021/04/10/03-45-56-047_011dba8cea3ff93e.webp"},"publishedOrCreatedDate":1618026345060},{"createdTime":"2021-04-10 11:45:45","updatedTime":"2021-04-10 11:45:45","title":"\n\t\t\t\t\tDesigning Inclusive Content Models\t\t\t\t","link":"https://alistapart.com/article/designing-inclusive-content-models/","description":"\n\t\t\t\t\t<!-- wp:paragraph -->\n<p>In the 1920s, Robert Moses designed a system of parkways surrounding New York City. His designs, which included overpasses too low for public buses, have become an often-cited example of exclusionary design and are argued by biographer Robert A. Caro to represent a purposeful barrier between the city’s Black and Puerto Rican residents and nearby beaches.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p><a href=\"https://www.bloomberg.com/news/articles/2017-07-09/robert-moses-and-his-racist-parkway-explained\">Regardless of the details of Moses’s parkway project</a>, it’s a particularly memorable reminder of the political power of design and the ways that choices can exclude various groups based on abilities and resources. The growing interest in <a href=\"https://alistapart.com/article/building-the-woke-web/\">inclusive design</a> highlights questions of who can participate, and in relation to the web, this has often meant a focus on accessibility and user experience, as well as on questions related to team diversity and governance.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But principles of inclusive design should also play a role early in the design and development process, during content modeling. Modeling defines what content objects consist of and, by extension, who will be able to create them. So if web professionals are interested in inclusion, we need to go beyond asking who can access content and also think about how the design of content can install barriers that make it difficult for some people to participate in creation.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Currently, content models are primarily seen as mirrors that reflect inherent structures in the world. But if the world is biased or exclusionary, this means our content models will be too. Instead, we need to approach content modeling as an opportunity to filter out harmful structures and create systems in which more people can participate in making the web. Content models designed for inclusivity welcome a variety of voices and can ultimately increase products’ diversity and reach.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Content models as mirrors</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Content models are tools for describing the objects that will make up a project, their attributes, and the possible relations between them. A content model for an art museum, for example, would typically describe, among other things, artists (including attributes such as name, nationality, and perhaps styles or schools), and artists could then be associated with artworks, exhibitions, etc. (The content model would also likely include objects like blog posts, but in this article we’re interested in how we model and represent objects that are “out there” in the real world, rather than content objects like articles and quizzes that live natively on websites and in apps.)</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The common wisdom when designing content models is to go out and research the project’s subject domain by talking with subject matter experts and project stakeholders. As Mike Atherton and Carrie Hane describe the process in <em>Designing Connected Content</em>, talking with the people who know the most about a subject domain (like art in the museum example above) helps to reveal an “inherent” structure, and discovering or revealing that structure ensures that your content is complete and comprehensible.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Additional research might go on to investigate how a project’s end users understand a domain, but Atherton and Hane describe this stage as mostly about terminology and level of detail. End users might use a different word than experts do or care less about the nuanced distinctions between Fauvism and neo-Expressionism, but ultimately, everybody is talking about the same thing. A good content model is just a mirror that reflects the structure you find.&#160;&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Cracks in the mirrors</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>The mirror approach works well in many cases, but there are times when the structures that subject matter experts perceive as inherent are actually the products of biased systems that quietly exclude. Like machine learning algorithms trained on <a href=\"https://www.insidehighered.com/admissions/article/2020/12/14/u-texas-will-stop-using-controversial-algorithm-evaluate-phd\">past school admissions</a> or <a href=\"https://hbr.org/2019/05/all-the-ways-hiring-algorithms-can-introduce-bias\">hiring decisions</a>, existing structures tend to work for some people and harm others. Rather than recreating these structures, content modelers should consider ways to improve them.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>A basic example is LinkedIn’s choice to require users to specify a company when creating a new work experience. Modeling experience in this way is obvious to HR managers, recruiters, and most people who participate in conventional career paths, but it assumes that valuable experience is only obtained through companies, and could potentially discourage people from entering other types of experiences that would allow them to represent alternative career paths and shape their own stories.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172736,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2021/02/fig1.png\" alt=\"\" class=\"wp-image-7172736\"/><figcaption><b>Figure 1.</b> LinkedIn’s current model for experience includes Company as a required attribute.\n</figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>These kinds of mismatches between required content attributes and people’s experiences either create explicit barriers (“I can’t participate because I don’t know how to fill in this field”) or increase the labor required to participate (“It’s not obvious what I should put here, so I’ll have to spend time thinking of a workaround”).&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Setting as optional fields that might not apply to everyone is one inclusive solution, as is increasing the available options for responses requiring a selection. However, while gender-inclusive choices provide <a href=\"https://alistapart.com/article/trans-inclusive-design/\">an inclusive way to handle form inputs</a>, it’s also worth considering when business objectives would be met just as well by providing open text inputs that allow users to describe themselves in their own terms.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Instead of LinkedIn’s highly prescribed content, for example, Twitter bios’ lack of structure lets people describe themselves in more inclusive ways. Some people use the space to list formal credentials, while others provide alternate forms of identification (e.g., mother, cyclist, or coffee enthusiast) or jokes. Because the content is unstructured, there are fewer expectations about its use, taking pressure off those who don’t have formal credentials and giving more flexibility to those who do.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Browsing the Twitter bios of designers, for example, reveals a range of identification strategies, from listing credentials and affiliations to providing broad descriptions.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:image {\"id\":7172737,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2021/02/fig2.png?resize=1024,183\" alt=\"\" class=\"wp-image-7172737\"/><figcaption><strong>Figure 2.</strong> Veerle Pieters’s Twitter bio uses credentials, affiliations, and personal interests.&#160;<br></figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:image {\"id\":7172738,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2021/02/fig3.png?resize=1024,151\" alt=\"\" class=\"wp-image-7172738\"/><figcaption><strong>Figure 3.</strong> Jason Santa Maria’s Twitter bio uses a broad description.&#160;<br></figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:image {\"id\":7172739,\"sizeSlug\":\"large\",\"linkDestination\":\"none\"} -->\n<figure class=\"wp-block-image size-large\"><img src=\"https://alistapart.com/wp-content/uploads/2021/02/fig4.png?resize=1024,150\" alt=\"\" class=\"wp-image-7172739\"/><figcaption><strong>Figure 4.</strong> Erik Spiekermann’s Twitter bio uses a single word.<br></figcaption></figure>\n<!-- /wp:image -->\n\n<!-- wp:paragraph -->\n<p>In addition to considering where structured content might exclude, content modelers should also consider how length guidelines can implicitly create barriers for content creators. In the following section, we look at a project in which we chose to reduce the length of contributor bios as a way to ensure that our content model didn’t leave anyone out.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:heading -->\n<h2>Live in America</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>Live in America is a performing arts festival scheduled to take place in October 2021 in Bentonville, Arkansas. The goal of the project is to survey the diversity of live performance from across the United States, its territories, and Mexico, and bring together groups of artists that represent distinct local traditions. Groups of performers will come from Alabama, Las Vegas, Detroit, and the border city of El Paso<strong>–</strong>Juárez. Indigineous performers from Albuquerque are scheduled to put on a queer powwow. Performers from Puerto Rico will organize a cabaret.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>An important part of the festival’s mission is that many of the performers involved aren’t integrated into the world of large art institutions, with their substantial fiscal resources and social connections. Indeed, the project’s purpose is to locate and showcase examples of live performance that fly under curators’ radars and that, as a result of their lack of exposure, reveal what makes different communities truly unique.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As we began to think about content modeling for the festival’s website, these goals had two immediate consequences:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>First, the idea of exploring the subject domain of live performance doesn’t exactly work for this project because the experts we might have approached would have told us about a version of the performing arts world that festival organizers were specifically trying to avoid. Experts’ mental models of performers, for example, might include attributes like residencies, fellowships and grants, curricula vitae and awards, artist statements and long, detailed bios. All of these attributes might be perceived as inherent or natural within one, homogenous community—but outside that community they’re not only a sign of misalignment, they represent barriers to participation.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Second, the purposeful diversity of festival participants meant that locating a shared mental model wasn’t the goal. Festival organizers want to preserve the diversity of the communities involved, not bring them all together or show how they’re the same. It’s important that people in Las Vegas think about performance differently than people in Alabama and that they structure their projects and working relationships in distinct ways.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Content modeling for Live in America involved defining what a community is, what a project is, and how these are related. But one of the most interesting challenges we faced was how to model a person—what attributes would stand in for the people that would make the event possible.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>It was important that we model participants in a way that preserved and highlighted diversity and also in a way that included everyone—that let everyone take part in their own way and that didn’t overburden some people or ask them to experience undue anxiety or perform extra work to make themselves fit within a model of performance that didn’t match their own.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Designing an inclusive content model for Live in America meant thinking hard about what a bio would look like. Some participants come from the institutionalized art world, where bios are long and detailed and often engage in intricate and esoteric forms of credentialing. Other participants create art but don’t have the same resources. Others are just people who were chosen to speak for and about their communities: writers, chefs, teachers, and musicians.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The point of the project is to highlight both performance that has not been recognized and the people who have not been recognized for making it. Asking for a written form that has historically been built around institutional recognition would only highlight the hierarchies that festival organizers want to leave behind.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>The first time we brought up the idea of limiting bios to five words, our immediate response was, “Can we get away with that?” Would some artists balk at not being allowed the space to list their awards? It’s a ridiculously simple idea, but it also gets at the heart of content modeling: what are the things and how do we describe them? What are the formats and limitations that we put on the content that would be submitted to us? What are we asking of the people who will write the content? How can we configure the rules so that everyone can participate?</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Five-word bios place everyone on the same ground. They ask everyone to create something new but also manageable. They’re comparable. They set well-known artists next to small-town poets, and let them play together. They let in diverse languages, but keep out the historical structures that set people apart. They’re also fun:</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:list -->\n<ul><li>Byron F. Aspaas of Albuquerque is “Diné. Táchii'nii nishłį́ Tódichii'nii bashishchiin.”</li><li>Danny R.W. Baskin of Northwest Arkansas is “Baroque AF but eating well.”</li><li>Brandi Dobney of New Orleans is “Small boobs, big dreams.”</li><li>Imani Mixon of Detroit is “best dresser, dream catcher, storyteller.”</li><li>Erika P. Rodríguez of Puerto Rico is “Anti-Colonialist Photographer. Caribeña. ♡ Ice Cream.”</li><li>David Dorado Romo of El Paso<strong>–</strong>Juárez is “Fonterizo historian wordsmith saxophonist glossolalian.”</li><li>Mikayla Whitmore of Las Vegas is “hold the mayo, thank you.”</li><li>Mary Zeno of Alabama is “a down home folk poet.”</li></ul>\n<!-- /wp:list -->\n\n<!-- wp:heading -->\n<h2>Modeling for inclusion</h2>\n<!-- /wp:heading -->\n\n<!-- wp:paragraph -->\n<p>We tend to think of inclusive design in terms of removing barriers to access, but content modeling also has an important role to play in ensuring that the web is a place where there are fewer barriers to creating content, especially for people with diverse and underrepresented backgrounds. This might involve rethinking the use of structured content or asking how length guidelines might create burdens for some people. But regardless of the tactics, designing inclusive content models begins by acknowledging the political work that these models perform and asking whom they include or exclude from participation.&#160;</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>All modeling is, after all, the creation of a world. Modelers establish what things exist and how they relate to each other. They make some things impossible and others so difficult that they might as well be. They let some people in and keep others out. Like overpasses that prevent public buses from reaching the beach, exclusionary models can quietly shape the landscape of the web, exacerbating the existing lack of diversity and making it harder for those who are already underrepresented to gain entry.</p>\n<!-- /wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>As discussions of inclusive design continue to gain momentum, content modeling should play a role precisely because of the world-building that is core to the process. If we’re building worlds, we should build worlds that let in as many people as possible. To do this, our discussions of content modeling need to include an expanded range of metaphors that go beyond just mirroring what we find in the world. We should also, when needed, filter out structures that are harmful or exclusionary. We should create spaces that ask the same of everyone and that use the generativity of everyone’s responses to create web products that emerge out of more diverse voices.</p>\n<!-- /wp:paragraph -->\t\t\t\t","descriptionType":"text/html","publishedDate":"Thu, 18 Feb 2021 15:00:00 +0000","feedId":25,"bgimg":"https://alistapart.com/wp-content/uploads/2021/02/fig1.png","linkMd5":"7a760d9c8f420dc96488e38750c1e136","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn45@2020_4/2021/04/10/03-45-55-921_5bb9e614c5053a0a.webp","destWidth":716,"destHeight":362,"sourceBytes":19505,"destBytes":8382,"author":"\n\t\t\t\tby , \t\t\t\t\t","articleImgCdnMap":{"https://alistapart.com/wp-content/uploads/2021/02/fig1.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn45@2020_4/2021/04/10/03-45-55-921_5bb9e614c5053a0a.webp","https://alistapart.com/wp-content/uploads/2021/02/fig2.png?resize=1024,183":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn43@2020_4/2021/04/10/03-46-15-709_085c4d42b61fcc38.webp","https://alistapart.com/wp-content/uploads/2021/02/fig3.png?resize=1024,151":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn31@2020_3/2021/04/10/03-46-15-721_499081e1958037b5.webp","https://alistapart.com/wp-content/uploads/2021/02/fig4.png?resize=1024,150":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn8@2020_6/2021/04/10/03-46-15-568_58dfa5b2e1c947f7.webp"},"publishedOrCreatedDate":1618026345124}],"record":{"createdTime":"2021-04-10 11:45:55","updatedTime":"2021-04-10 11:45:55","feedId":25,"fetchDate":"Sat, 10 Apr 2021 03:45:54 +0000","fetchMs":153,"handleMs":13765,"totalMs":38600,"newArticles":0,"totalArticles":20,"status":1,"type":0,"ip":"952792046e6823e4ba8e606b73924de4","hostName":"us-017*","requestId":"a7f77cbf60e64849a00afa439e7cbd5d_25","contentType":"text/xml; charset=UTF-8","totalBytes":4413484,"bgimgsTotal":13,"bgimgsGithubTotal":13,"articlesImgsTotal":64,"articlesImgsGithubTotal":64,"successGithubMap":{"myreaderx14":2,"myreaderx8":1,"myreaderx15":3,"myreaderx7":2,"myreaderx6":2,"myreaderx16":2,"myreaderx4":3,"myreaderx10":2,"myreaderx32":2,"myreaderx3":2,"myreaderx11":3,"myreaderx33":2,"myreaderx2":3,"myreaderx12":2,"myreaderx13":3,"myreaderx1":2,"myreaderx30":3,"myreaderx31":3,"myreaderx18":2,"myreaderx19":2,"myreaderx":2,"myreaderx25":2,"myreaderx27":3,"myreaderx21":2,"myreaderx22":2,"myreaderx23":2,"myreaderx24":2,"myreaderx5oss":1,"myreaderx29":2},"failGithubMap":{}},"feed":{"createdTime":"2020-05-30 17:21:38","updatedTime":"2020-09-01 09:23:20","id":25,"name":"\n\t\t\tA List Apart: The Full Feed\t\t","url":"https://alistapart.com/main/feed/","subscriber":null,"website":null,"icon":"https://alistapart.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn97@2020_1/2020/09/01/01-23-13-553_78da472e31f477d3.ico","description":"Articles for people who make web sites.","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":924002,"tmpBodyImgCdnBytes":3489482,"tmpBgImgCdnBytes":0,"extra4":{"start":1618026339214,"total":0,"statList":[{"spend":1908,"msg":"获取xml内容"},{"spend":13765,"msg":"解释文章"},{"spend":1,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":2548,"msg":"正文链接上传到cdn"}]},"extra5":64,"extra6":64,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{"https://alistapart.com/article/a-designers-life-with-color-vision-deficiency/_#colorperception":"https://alistapart.com/article/a-designers-life-with-color-vision-deficiency/#colorperception","https://alistapart.com/article/dysfunctional-teams-back-on-track/_mailto:liam.nugent@hey.com":"mailto:liam.nugent@hey.com"},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-032.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-037.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-007.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-028.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-015.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-024.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe70.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-038.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-020.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-54.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-003.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-016.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-018.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-58.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe66.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-036.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe62.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-019.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-023.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-040.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/01/fig1.jpg?w=916","sourceStatusCode":200,"destWidth":916,"destHeight":1024,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn33@2020_3/2021/04/10/03-45-55-785_f48476a020081ec5.webp","sourceBytes":39926,"destBytes":39926,"feedId":25,"totalSpendMs":399,"convertSpendMs":0,"createdTime":"2021-04-10 11:45:55","host":"us-007*","referer":"https://alistapart.com/article/standards-for-writing-accessibly/","linkMd5ListStr":"8139d3fa446049b8fd08f0c966a4ffaf,8139d3fa446049b8fd08f0c966a4ffaf","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"39 KB","compressRate":"100%","sourceSize":"39 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/05/fig-5.1-wombatter-hose.jpg?fit=672%2C1024","sourceStatusCode":200,"destWidth":672,"destHeight":1024,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn54@2020_3/2021/04/10/03-45-55-892_4a274bbb5ebfa65d.webp","sourceBytes":77188,"destBytes":77188,"feedId":25,"totalSpendMs":407,"convertSpendMs":0,"createdTime":"2021-04-10 11:45:55","host":"us-011*","referer":"https://alistapart.com/article/jobs-to-be-done/","linkMd5ListStr":"b0254eb151f4baf7b9eba67fab8213b4,b0254eb151f4baf7b9eba67fab8213b4","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"75.4 KB","compressRate":"100%","sourceSize":"75.4 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2021/02/ala-ds-efficiency-1-e1612891151253.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":540,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn26@2020_5/2021/04/10/03-45-55-888_44fcf71fcfe090e9.webp","sourceBytes":34212,"destBytes":34212,"feedId":25,"totalSpendMs":537,"convertSpendMs":0,"createdTime":"2021-04-10 11:45:55","host":"us-032*","referer":"https://alistapart.com/article/selling-design-systems/","linkMd5ListStr":"b03d88c8229a83446b494fe46a109b66,b03d88c8229a83446b494fe46a109b66","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"33.4 KB","compressRate":"100%","sourceSize":"33.4 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2021/02/fig1.png","sourceStatusCode":200,"destWidth":716,"destHeight":362,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn45@2020_4/2021/04/10/03-45-55-921_5bb9e614c5053a0a.webp","sourceBytes":19505,"destBytes":8382,"targetWebpQuality":75,"feedId":25,"totalSpendMs":406,"convertSpendMs":11,"createdTime":"2021-04-10 11:45:55","host":"us-036*","referer":"https://alistapart.com/article/designing-inclusive-content-models/","linkMd5ListStr":"7a760d9c8f420dc96488e38750c1e136,7a760d9c8f420dc96488e38750c1e136","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"8.2 KB","compressRate":"43%","sourceSize":"19 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2021/03/fig-1.png?resize=1024,533","sourceStatusCode":200,"destWidth":1024,"destHeight":533,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn49@2020_3/2021/04/10/03-45-55-971_d9a9eda86b25ec5a.webp","sourceBytes":138326,"destBytes":138326,"feedId":25,"totalSpendMs":471,"convertSpendMs":0,"createdTime":"2021-04-10 11:45:55","host":"us-024*","referer":"https://alistapart.com/article/now-thats-what-i-call-service-worker/","linkMd5ListStr":"e61c2fe4779d090581d4cfa3742cbda4,e61c2fe4779d090581d4cfa3742cbda4","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"135.1 KB","compressRate":"100%","sourceSize":"135.1 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2021/03/people-who-make-mistakes.jpg","sourceStatusCode":200,"destWidth":972,"destHeight":612,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn21@2020_3/2021/04/10/03-45-56-047_011dba8cea3ff93e.webp","sourceBytes":55618,"destBytes":44048,"targetWebpQuality":75,"feedId":25,"totalSpendMs":679,"convertSpendMs":106,"createdTime":"2021-04-10 11:45:55","host":"us-54*","referer":"https://alistapart.com/article/dysfunctional-teams-back-on-track/","linkMd5ListStr":"7c2b9f03e00f0bf27ec8dde9b5d696c3,7c2b9f03e00f0bf27ec8dde9b5d696c3","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"43 KB","compressRate":"79.2%","sourceSize":"54.3 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.1.jpg?fit=960%2C600","sourceStatusCode":200,"destWidth":960,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn57@2020_2/2021/04/10/03-45-55-977_5c951826bcd54004.webp","sourceBytes":31062,"destBytes":31062,"feedId":25,"totalSpendMs":619,"convertSpendMs":0,"createdTime":"2021-04-10 11:45:55","host":"europe-24*","referer":"https://alistapart.com/article/engaged-excerpt/","linkMd5ListStr":"8ebf2effbee6917e62f8caca9583a623,8ebf2effbee6917e62f8caca9583a623","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"30.3 KB","compressRate":"100%","sourceSize":"30.3 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/05/08.01.jpg?w=569","sourceStatusCode":200,"destWidth":569,"destHeight":327,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn18@2020_3/2021/04/10/03-45-55-881_1ac4a242889ca4e8.webp","sourceBytes":25880,"destBytes":25880,"feedId":25,"totalSpendMs":729,"convertSpendMs":0,"createdTime":"2021-04-10 11:45:55","host":"europe66*","referer":"https://alistapart.com/article/figure-it-out/","linkMd5ListStr":"d92438280eb0bc40f5041fdebcc6030c,d92438280eb0bc40f5041fdebcc6030c","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"25.3 KB","compressRate":"100%","sourceSize":"25.3 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/11/fig1.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":396,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn38@2020_2/2021/04/10/03-45-56-010_2258d31e4c265f74.webp","sourceBytes":44518,"destBytes":44518,"feedId":25,"totalSpendMs":671,"convertSpendMs":0,"createdTime":"2021-04-10 11:45:55","host":"europe70*","referer":"https://alistapart.com/article/request-with-intent-caching-strategies-in-the-age-of-pwas/","linkMd5ListStr":"09359a7364ba3909ac3eedc3084befed,09359a7364ba3909ac3eedc3084befed","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"43.5 KB","compressRate":"100%","sourceSize":"43.5 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/06/light-spectrum-cone-wavelength-response-600x423-4.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":423,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn41@2020_2/2021/04/10/03-45-56-030_3ec7a1493cb3393c.webp","sourceBytes":70419,"destBytes":25248,"targetWebpQuality":75,"feedId":25,"totalSpendMs":745,"convertSpendMs":24,"createdTime":"2021-04-10 11:45:55","host":"europe-58*","referer":"https://alistapart.com/article/a-designers-life-with-color-vision-deficiency/","linkMd5ListStr":"71a63f2e71642b2d4aa2daa53190879b,71a63f2e71642b2d4aa2daa53190879b","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"24.7 KB","compressRate":"35.9%","sourceSize":"68.8 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/4.1-Public-Theater-2014.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":484,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn62@2020_1/2021/04/10/03-45-56-063_cc678f7b1577aea3.webp","sourceBytes":155282,"destBytes":155282,"feedId":25,"totalSpendMs":713,"convertSpendMs":0,"createdTime":"2021-04-10 11:45:55","host":"europe62*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010,2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"151.6 KB","compressRate":"100%","sourceSize":"151.6 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2021/03/woqe.jpg?resize=1024,1024","sourceStatusCode":200,"destWidth":1024,"destHeight":1024,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn30@2020_6/2021/04/10/03-46-01-653_27f44b04c2364b86.webp","sourceBytes":94832,"destBytes":94832,"feedId":25,"totalSpendMs":4865,"convertSpendMs":0,"createdTime":"2021-04-10 11:45:57","host":"us-020*","referer":"https://alistapart.com/article/keeping-a-fresh-design-mind/","linkMd5ListStr":"e017b3baafd3778b2540099c35c08849,e017b3baafd3778b2540099c35c08849","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"92.6 KB","compressRate":"100%","sourceSize":"92.6 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/02/5.1-Kyoto-Subway-ticket-machines_v02.jpg?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":549,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn65@2020_3/2021/04/10/03-46-12-042_1c4e46888f57ce72.webp","sourceBytes":205098,"destBytes":205098,"feedId":25,"totalSpendMs":6564,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:07","host":"us-040*","referer":"https://alistapart.com/article/cross-cultural-design/","linkMd5ListStr":"ed4566369d36fde5133953ab436121a8,ed4566369d36fde5133953ab436121a8","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"200.3 KB","compressRate":"100%","sourceSize":"200.3 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.6-1.jpg?fit=731%2C1024","sourceStatusCode":200,"destWidth":731,"destHeight":1023,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn61@2020_1/2021/04/10/03-46-15-341_95acc98bdba43625.webp","sourceBytes":66410,"destBytes":66410,"feedId":25,"totalSpendMs":485,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-007*","referer":"https://alistapart.com/article/engaged-excerpt/","linkMd5ListStr":"8ebf2effbee6917e62f8caca9583a623","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"64.9 KB","compressRate":"100%","sourceSize":"64.9 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/05/ill08.01a.jpg?w=551","sourceStatusCode":200,"destWidth":551,"destHeight":44,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn70@2020_3/2021/04/10/03-46-15-501_38dca75a77481bbe.webp","sourceBytes":992,"destBytes":992,"feedId":25,"totalSpendMs":344,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-035*","referer":"https://alistapart.com/article/figure-it-out/","linkMd5ListStr":"d92438280eb0bc40f5041fdebcc6030c","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"992 B","compressRate":"100%","sourceSize":"992 B"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/02/5.7-expansion-factor-table.png?w=736","sourceStatusCode":200,"destWidth":736,"destHeight":321,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn77@2020_4/2021/04/10/03-46-15-484_bab48fb92d8a573b.webp","sourceBytes":17206,"destBytes":17206,"feedId":25,"totalSpendMs":365,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-020*","referer":"https://alistapart.com/article/cross-cultural-design/","linkMd5ListStr":"ed4566369d36fde5133953ab436121a8","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"16.8 KB","compressRate":"100%","sourceSize":"16.8 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/01/fig2.jpg?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":398,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn21@2020_6/2021/04/10/03-46-15-462_924538bfd4c31f7e.webp","sourceBytes":10020,"destBytes":10020,"feedId":25,"totalSpendMs":430,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-015*","referer":"https://alistapart.com/article/standards-for-writing-accessibly/","linkMd5ListStr":"8139d3fa446049b8fd08f0c966a4ffaf","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"9.8 KB","compressRate":"100%","sourceSize":"9.8 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.2.jpg?fit=960%2C576","sourceStatusCode":200,"destWidth":960,"destHeight":576,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn15@2020_4/2021/04/10/03-46-15-553_8f2da14c19a9d68c.webp","sourceBytes":13998,"destBytes":13998,"feedId":25,"totalSpendMs":347,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-032*","referer":"https://alistapart.com/article/engaged-excerpt/","linkMd5ListStr":"8ebf2effbee6917e62f8caca9583a623","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"13.7 KB","compressRate":"100%","sourceSize":"13.7 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2021/03/fig-5.png?resize=1024,577","sourceStatusCode":200,"destWidth":1024,"destHeight":577,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn18@2020_2/2021/04/10/03-46-15-581_ebcada4948ed5526.webp","sourceBytes":26678,"destBytes":26678,"feedId":25,"totalSpendMs":326,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-031*","referer":"https://alistapart.com/article/now-thats-what-i-call-service-worker/","linkMd5ListStr":"e61c2fe4779d090581d4cfa3742cbda4","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"26.1 KB","compressRate":"100%","sourceSize":"26.1 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/02/5.3-fonts-dot-com-mandarin-page.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn41@2020_2/2021/04/10/03-46-15-543_a177d33c8ad9601d.webp","sourceBytes":72298,"destBytes":72298,"feedId":25,"totalSpendMs":404,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-021*","referer":"https://alistapart.com/article/cross-cultural-design/","linkMd5ListStr":"ed4566369d36fde5133953ab436121a8","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"70.6 KB","compressRate":"100%","sourceSize":"70.6 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2021/03/fig-3.png?resize=490,1024","sourceStatusCode":200,"destWidth":490,"destHeight":1024,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn23@2020_2/2021/04/10/03-46-15-544_78168c185dd1fd23.webp","sourceBytes":148550,"destBytes":148550,"feedId":25,"totalSpendMs":401,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-016*","referer":"https://alistapart.com/article/now-thats-what-i-call-service-worker/","linkMd5ListStr":"e61c2fe4779d090581d4cfa3742cbda4","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"145.1 KB","compressRate":"100%","sourceSize":"145.1 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/02/5.2-myfonts-neuland.jpg?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":623,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn91@2020_6/2021/04/10/03-46-15-573_feee4576d41ad290.webp","sourceBytes":51954,"destBytes":51954,"feedId":25,"totalSpendMs":338,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-54*","referer":"https://alistapart.com/article/cross-cultural-design/","linkMd5ListStr":"ed4566369d36fde5133953ab436121a8","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"50.7 KB","compressRate":"100%","sourceSize":"50.7 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2021/02/fig4.png?resize=1024,150","sourceStatusCode":200,"destWidth":1024,"destHeight":150,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn8@2020_6/2021/04/10/03-46-15-568_58dfa5b2e1c947f7.webp","sourceBytes":10944,"destBytes":10944,"feedId":25,"totalSpendMs":334,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-036*","referer":"https://alistapart.com/article/designing-inclusive-content-models/","linkMd5ListStr":"7a760d9c8f420dc96488e38750c1e136","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"10.7 KB","compressRate":"100%","sourceSize":"10.7 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/4.3b-Vox-Old-Newsletter-.png?w=470","sourceStatusCode":200,"destWidth":470,"destHeight":372,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn12@2020_2/2021/04/10/03-46-15-600_2129df083b98c76e.webp","sourceBytes":32826,"destBytes":32826,"feedId":25,"totalSpendMs":373,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-034*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"32.1 KB","compressRate":"100%","sourceSize":"32.1 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/05/ill08.01b.jpg?w=551","sourceStatusCode":200,"destWidth":551,"destHeight":44,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn90@2020_5/2021/04/10/03-46-15-612_8a38f06be0ae8a09.webp","sourceBytes":1112,"destBytes":1112,"feedId":25,"totalSpendMs":354,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-55*","referer":"https://alistapart.com/article/figure-it-out/","linkMd5ListStr":"d92438280eb0bc40f5041fdebcc6030c","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"1.1 KB","compressRate":"100%","sourceSize":"1.1 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2021/03/fig-2.png?resize=1024,301","sourceStatusCode":200,"destWidth":1024,"destHeight":301,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn3@2020_3/2021/04/10/03-46-15-656_9d78c7637197fee8.webp","sourceBytes":18422,"destBytes":18422,"feedId":25,"totalSpendMs":352,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-038*","referer":"https://alistapart.com/article/now-thats-what-i-call-service-worker/","linkMd5ListStr":"e61c2fe4779d090581d4cfa3742cbda4","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"18 KB","compressRate":"100%","sourceSize":"18 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/02/5.4-SurveyMonkey-English-take-a-tour-page.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":966,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn27@2020_1/2021/04/10/03-46-15-627_47a8b8545fb10a54.webp","sourceBytes":114608,"destBytes":114608,"feedId":25,"totalSpendMs":409,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-028*","referer":"https://alistapart.com/article/cross-cultural-design/","linkMd5ListStr":"ed4566369d36fde5133953ab436121a8","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"111.9 KB","compressRate":"100%","sourceSize":"111.9 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.4.jpg?fit=960%2C524","sourceStatusCode":200,"destWidth":959,"destHeight":524,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn2@2020_6/2021/04/10/03-46-15-613_eed9870ab74d9d84.webp","sourceBytes":48720,"destBytes":48720,"feedId":25,"totalSpendMs":372,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-039*","referer":"https://alistapart.com/article/engaged-excerpt/","linkMd5ListStr":"8ebf2effbee6917e62f8caca9583a623","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"47.6 KB","compressRate":"100%","sourceSize":"47.6 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/making-room-for-variation-fig10.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":658,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn14@2020_4/2021/04/10/03-46-15-685_4ff70f9abf0ff4fc.webp","sourceBytes":33856,"destBytes":33856,"feedId":25,"totalSpendMs":400,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-033*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"33.1 KB","compressRate":"100%","sourceSize":"33.1 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/4.6b-Verge-Homepage-Feature-Yellow.png?w=955","sourceStatusCode":200,"destWidth":955,"destHeight":785,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn67@2020_5/2021/04/10/03-46-15-554_d61d8fe1ae00fbfb.webp","sourceBytes":196804,"destBytes":196804,"feedId":25,"totalSpendMs":538,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-034*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"192.2 KB","compressRate":"100%","sourceSize":"192.2 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.5.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":372,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn9@2020_4/2021/04/10/03-46-15-598_2fbd809ee06f7df6.webp","sourceBytes":44569,"destBytes":34250,"targetWebpQuality":75,"feedId":25,"totalSpendMs":464,"convertSpendMs":19,"createdTime":"2021-04-10 11:46:15","host":"us-035*","referer":"https://alistapart.com/article/engaged-excerpt/","linkMd5ListStr":"8ebf2effbee6917e62f8caca9583a623","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"33.4 KB","compressRate":"76.8%","sourceSize":"43.5 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2021/02/fig2.png?resize=1024,183","sourceStatusCode":200,"destWidth":1024,"destHeight":183,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn43@2020_4/2021/04/10/03-46-15-709_085c4d42b61fcc38.webp","sourceBytes":31074,"destBytes":31074,"feedId":25,"totalSpendMs":561,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-019*","referer":"https://alistapart.com/article/designing-inclusive-content-models/","linkMd5ListStr":"7a760d9c8f420dc96488e38750c1e136","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"30.3 KB","compressRate":"100%","sourceSize":"30.3 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/4.5a-Verge-Masthead-Pink.jpeg?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":240,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn33@2020_3/2021/04/10/03-46-15-679_9f8b6d688d533470.webp","sourceBytes":70712,"destBytes":70712,"feedId":25,"totalSpendMs":438,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-025*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"69.1 KB","compressRate":"100%","sourceSize":"69.1 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/02/5.6-Typojanchi-English-page.png?w=836","sourceStatusCode":200,"destWidth":836,"destHeight":1025,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn98@2020_6/2021/04/10/03-46-15-642_aad21daf85379610.webp","sourceBytes":154910,"destBytes":154910,"feedId":25,"totalSpendMs":454,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-51*","referer":"https://alistapart.com/article/cross-cultural-design/","linkMd5ListStr":"ed4566369d36fde5133953ab436121a8","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"151.3 KB","compressRate":"100%","sourceSize":"151.3 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/05/08.03a.jpg?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":881,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn46@2020_1/2021/04/10/03-46-15-615_d4b7b812f2c0c048.webp","sourceBytes":166392,"destBytes":166392,"feedId":25,"totalSpendMs":571,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-018*","referer":"https://alistapart.com/article/figure-it-out/","linkMd5ListStr":"d92438280eb0bc40f5041fdebcc6030c","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"162.5 KB","compressRate":"100%","sourceSize":"162.5 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2021/03/fig-6.png?resize=1024,569","sourceStatusCode":200,"destWidth":1024,"destHeight":569,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn100@2020_5/2021/04/10/03-46-15-680_73df45b1155f7ad9.webp","sourceBytes":29774,"destBytes":29774,"feedId":25,"totalSpendMs":511,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-040*","referer":"https://alistapart.com/article/now-thats-what-i-call-service-worker/","linkMd5ListStr":"e61c2fe4779d090581d4cfa3742cbda4","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"29.1 KB","compressRate":"100%","sourceSize":"29.1 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/02/5.5-Nanum-Myeongjo-Google-Font.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":672,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn30@2020_1/2021/04/10/03-46-15-734_cf44c127582e4c7b.webp","sourceBytes":90070,"destBytes":90070,"feedId":25,"totalSpendMs":490,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-027*","referer":"https://alistapart.com/article/cross-cultural-design/","linkMd5ListStr":"ed4566369d36fde5133953ab436121a8","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"88 KB","compressRate":"100%","sourceSize":"88 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/02/5.8-Twitter-Follow-Button-in-Japanese.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":307,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn19@2020_5/2021/04/10/03-46-15-687_46111a67e755ff26.webp","sourceBytes":41270,"destBytes":41270,"feedId":25,"totalSpendMs":469,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-030*","referer":"https://alistapart.com/article/cross-cultural-design/","linkMd5ListStr":"ed4566369d36fde5133953ab436121a8","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"40.3 KB","compressRate":"100%","sourceSize":"40.3 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2021/02/fig3.png?resize=1024,151","sourceStatusCode":200,"destWidth":1024,"destHeight":151,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn31@2020_3/2021/04/10/03-46-15-721_499081e1958037b5.webp","sourceBytes":17014,"destBytes":17014,"feedId":25,"totalSpendMs":498,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-026*","referer":"https://alistapart.com/article/designing-inclusive-content-models/","linkMd5ListStr":"7a760d9c8f420dc96488e38750c1e136","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"16.6 KB","compressRate":"100%","sourceSize":"16.6 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/4.6a-Verge-Homepage-Feature-Black.png?w=913","sourceStatusCode":200,"destWidth":913,"destHeight":791,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn30@2020_6/2021/04/10/03-46-15-858_bafc7db2be7ea36c.webp","sourceBytes":259848,"destBytes":259848,"feedId":25,"totalSpendMs":369,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-015*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"253.8 KB","compressRate":"100%","sourceSize":"253.8 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/4.5b-Verge-Masthead-Orange-City.jpeg?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":240,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn42@2020_5/2021/04/10/03-46-15-916_9de0a4431c781822.webp","sourceBytes":19946,"destBytes":19946,"feedId":25,"totalSpendMs":305,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-54*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"19.5 KB","compressRate":"100%","sourceSize":"19.5 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2021/02/ala-ds-onboarding-e1612891563971.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":540,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn54@2020_3/2021/04/10/03-46-15-932_7f04ce982586ac3d.webp","sourceBytes":31644,"destBytes":31644,"feedId":25,"totalSpendMs":356,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-007*","referer":"https://alistapart.com/article/selling-design-systems/","linkMd5ListStr":"b03d88c8229a83446b494fe46a109b66","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"30.9 KB","compressRate":"100%","sourceSize":"30.9 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/05/08.03b.jpg?w=547","sourceStatusCode":200,"destWidth":547,"destHeight":440,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn49@2020_6/2021/04/10/03-46-15-943_69657b0fab6ca3c5.webp","sourceBytes":73332,"destBytes":73332,"feedId":25,"totalSpendMs":361,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-020*","referer":"https://alistapart.com/article/figure-it-out/","linkMd5ListStr":"d92438280eb0bc40f5041fdebcc6030c","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"71.6 KB","compressRate":"100%","sourceSize":"71.6 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/05/ill08.01c.jpg?w=551","sourceStatusCode":200,"destWidth":551,"destHeight":44,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn39@2020_4/2021/04/10/03-46-15-836_917f566275140208.webp","sourceBytes":850,"destBytes":850,"feedId":25,"totalSpendMs":632,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-022*","referer":"https://alistapart.com/article/figure-it-out/","linkMd5ListStr":"d92438280eb0bc40f5041fdebcc6030c","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"850 B","compressRate":"100%","sourceSize":"850 B"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/4.3c-Eater-Old-Newsletter.png?w=479","sourceStatusCode":200,"destWidth":479,"destHeight":358,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn79@2020_2/2021/04/10/03-46-15-809_355e8993a6848c4b.webp","sourceBytes":42722,"destBytes":42722,"feedId":25,"totalSpendMs":584,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"europe-60*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"41.7 KB","compressRate":"100%","sourceSize":"41.7 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.3-1.jpg?fit=960%2C889","sourceStatusCode":200,"destWidth":960,"destHeight":889,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn96@2020_6/2021/04/10/03-46-15-805_eb48e0469f843793.webp","sourceBytes":30548,"destBytes":30548,"feedId":25,"totalSpendMs":731,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-52*","referer":"https://alistapart.com/article/engaged-excerpt/","linkMd5ListStr":"8ebf2effbee6917e62f8caca9583a623","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"29.8 KB","compressRate":"100%","sourceSize":"29.8 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/4.5c-Verge-Masthead-BlackWhite.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":240,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn85@2020_3/2021/04/10/03-46-15-803_73904221391b7685.webp","sourceBytes":47136,"destBytes":47136,"feedId":25,"totalSpendMs":629,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"europe-57*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"46 KB","compressRate":"100%","sourceSize":"46 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/4.7-McElroy-Masthead.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":283,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn87@2020_4/2021/04/10/03-46-15-812_cf456b6e9f22d2df.webp","sourceBytes":85798,"destBytes":85798,"feedId":25,"totalSpendMs":653,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"europe-56*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"83.8 KB","compressRate":"100%","sourceSize":"83.8 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/02/5.8-Twitter-Follow-Button-in-English.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":304,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn38@2020_5/2021/04/10/03-46-15-737_efab797c392117bc.webp","sourceBytes":34872,"destBytes":34872,"feedId":25,"totalSpendMs":824,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-023*","referer":"https://alistapart.com/article/cross-cultural-design/","linkMd5ListStr":"ed4566369d36fde5133953ab436121a8","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"34.1 KB","compressRate":"100%","sourceSize":"34.1 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/11/fig2-1.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":394,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn35@2020_1/2021/04/10/03-46-15-811_b57846548d8d0d47.webp","sourceBytes":35354,"destBytes":35354,"feedId":25,"totalSpendMs":916,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-024*","referer":"https://alistapart.com/article/request-with-intent-caching-strategies-in-the-age-of-pwas/","linkMd5ListStr":"09359a7364ba3909ac3eedc3084befed","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"34.5 KB","compressRate":"100%","sourceSize":"34.5 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/05/08.04.jpg?w=572","sourceStatusCode":200,"destWidth":572,"destHeight":213,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn26@2020_3/2021/04/10/03-46-15-849_d45316a5796abca9.webp","sourceBytes":27766,"destBytes":27766,"feedId":25,"totalSpendMs":685,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-028*","referer":"https://alistapart.com/article/figure-it-out/","linkMd5ListStr":"d92438280eb0bc40f5041fdebcc6030c","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"27.1 KB","compressRate":"100%","sourceSize":"27.1 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/4.2-Public-Theater-2018.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":617,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn94@2020_1/2021/04/10/03-46-15-651_f747f63fa2c23714.webp","sourceBytes":181262,"destBytes":181262,"feedId":25,"totalSpendMs":950,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-53*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"177 KB","compressRate":"100%","sourceSize":"177 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/11/fig3.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":1012,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn5@2020_5/2021/04/10/03-46-15-720_c675605076192d80.webp","sourceBytes":53120,"destBytes":53120,"feedId":25,"totalSpendMs":956,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-037*","referer":"https://alistapart.com/article/request-with-intent-caching-strategies-in-the-age-of-pwas/","linkMd5ListStr":"09359a7364ba3909ac3eedc3084befed","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"51.9 KB","compressRate":"100%","sourceSize":"51.9 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/4.3a-Curbed-Old-Newsletter.png?w=491","sourceStatusCode":200,"destWidth":491,"destHeight":309,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn22@2020_3/2021/04/10/03-46-15-996_a107631f9630982a.webp","sourceBytes":22124,"destBytes":22124,"feedId":25,"totalSpendMs":718,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-040*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"21.6 KB","compressRate":"100%","sourceSize":"21.6 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/06/engaged-9.7.jpg?fit=960%2C485","sourceStatusCode":200,"destWidth":960,"destHeight":485,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn45@2020_4/2021/04/10/03-46-15-936_7bd194b1ad1f368c.webp","sourceBytes":34852,"destBytes":34852,"feedId":25,"totalSpendMs":706,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-032*","referer":"https://alistapart.com/article/engaged-excerpt/","linkMd5ListStr":"8ebf2effbee6917e62f8caca9583a623","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"34 KB","compressRate":"100%","sourceSize":"34 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/02/5.6-Typojanchi-Korean-page.png?w=836","sourceStatusCode":200,"destWidth":836,"destHeight":1025,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn83@2020_4/2021/04/10/03-46-15-718_4dc171e35c9cdb8d.webp","sourceBytes":110960,"destBytes":110960,"feedId":25,"totalSpendMs":1119,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"europe-58*","referer":"https://alistapart.com/article/cross-cultural-design/","linkMd5ListStr":"ed4566369d36fde5133953ab436121a8","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"108.4 KB","compressRate":"100%","sourceSize":"108.4 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/4.9-Airbnb-Plus-Listing.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":814,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn34@2020_4/2021/04/10/03-46-15-970_28c45135421c5af5.webp","sourceBytes":218474,"destBytes":218474,"feedId":25,"totalSpendMs":879,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-003*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"213.4 KB","compressRate":"100%","sourceSize":"213.4 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/4.4-Curbed-New-Newsletter.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":435,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn82@2020_6/2021/04/10/03-46-15-947_0af4a1f2f1b44be5.webp","sourceBytes":41030,"destBytes":41030,"feedId":25,"totalSpendMs":1054,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"europe-59*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"40.1 KB","compressRate":"100%","sourceSize":"40.1 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/05/08.05.jpg?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":429,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn38@2020_2/2021/04/10/03-46-16-369_e746c13a5777dbe2.webp","sourceBytes":17522,"destBytes":17522,"feedId":25,"totalSpendMs":836,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"europe66*","referer":"https://alistapart.com/article/figure-it-out/","linkMd5ListStr":"d92438280eb0bc40f5041fdebcc6030c","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"17.1 KB","compressRate":"100%","sourceSize":"17.1 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/4.8-Chicago-Sun-Times-Masthead.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":164,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn75@2020_4/2021/04/10/03-46-15-770_89c7bcb4ad5d4f0c.webp","sourceBytes":20796,"destBytes":20796,"feedId":25,"totalSpendMs":1099,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"europe62*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"20.3 KB","compressRate":"100%","sourceSize":"20.3 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2019/12/4.10-Airbnb-Standard-Listing.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":814,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn66@2020_6/2021/04/10/03-46-16-248_d10c16a80eacd103.webp","sourceBytes":338522,"destBytes":338522,"feedId":25,"totalSpendMs":1265,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"europe61*","referer":"https://alistapart.com/article/making-room-for-variation/","linkMd5ListStr":"2ae84ec7b3f6685beb40fc100dd83010","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"330.6 KB","compressRate":"100%","sourceSize":"330.6 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2021/03/fig-4.png?resize=1024,565","sourceStatusCode":200,"destWidth":1024,"destHeight":565,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn62@2020_3/2021/04/10/03-46-16-182_cdf855b750f032bc.webp","sourceBytes":27226,"destBytes":27226,"feedId":25,"totalSpendMs":943,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:16","host":"europe-58*","referer":"https://alistapart.com/article/now-thats-what-i-call-service-worker/","linkMd5ListStr":"e61c2fe4779d090581d4cfa3742cbda4","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"26.6 KB","compressRate":"100%","sourceSize":"26.6 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/02/5.4-SurveyMonkey-Korean-take-a-tour-page.png?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":971,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn26@2020_3/2021/04/10/03-46-16-975_38070e6657f0c20e.webp","sourceBytes":126886,"destBytes":126886,"feedId":25,"totalSpendMs":1794,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:15","host":"us-029*","referer":"https://alistapart.com/article/cross-cultural-design/","linkMd5ListStr":"ed4566369d36fde5133953ab436121a8","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"123.9 KB","compressRate":"100%","sourceSize":"123.9 KB"},{"code":1,"isDone":false,"source":"https://alistapart.com/wp-content/uploads/2020/05/08.02.jpg?w=960","sourceStatusCode":200,"destWidth":960,"destHeight":960,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn57@2020_2/2021/04/10/03-46-17-127_ed936ef9d20a4fde.webp","sourceBytes":106028,"destBytes":106028,"feedId":25,"totalSpendMs":1690,"convertSpendMs":0,"createdTime":"2021-04-10 11:46:16","host":"europe70*","referer":"https://alistapart.com/article/figure-it-out/","linkMd5ListStr":"d92438280eb0bc40f5041fdebcc6030c","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"103.5 KB","compressRate":"100%","sourceSize":"103.5 KB"}],"successGithubMap":{"myreaderx14":2,"myreaderx8":1,"myreaderx15":3,"myreaderx7":2,"myreaderx6":2,"myreaderx16":2,"myreaderx4":3,"myreaderx10":2,"myreaderx32":2,"myreaderx3":2,"myreaderx11":3,"myreaderx33":2,"myreaderx2":3,"myreaderx12":2,"myreaderx13":3,"myreaderx1":2,"myreaderx30":3,"myreaderx31":3,"myreaderx18":2,"myreaderx19":2,"myreaderx":2,"myreaderx25":2,"myreaderx27":3,"myreaderx21":2,"myreaderx22":2,"myreaderx23":2,"myreaderx24":2,"myreaderx5oss":1,"myreaderx29":2},"failGithubMap":{}}