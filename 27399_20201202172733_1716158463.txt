{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-12-03 01:25:28","updatedTime":"2020-12-03 01:25:28","title":"A C++ backend for Vega-Lite","link":"https://medium.com/p/bd2524b247c2","description":"<p><em>In this post, we present the first public release of XVega, a C++ library for producing Vega-Lite charts.</em></p><p>Data science workflows differ from traditional software development in that engineers make use of available tools to <em>explore</em> and <em>reason</em> about a problem. In such exploratory work, engineers load data, crunch numbers, produce simple visualizations and <em>iterate…</em> Progress happens in quick incremental iterations, which is possible when tooling does not get in the way.</p><p>This kind of interactive computing is generally associated with the Python or R programming languages. However, with the advent of the <a href=\"https://github.com/root-project/cling/\"><strong>Cling</strong></a> C++ interpreter from <a href=\"https://home.cern/\">CERN</a>, and the subsequent development of the <a href=\"https://github.com/jupyter-xeus/xeus-cling\"><strong>xeus-cling</strong></a> Jupyter kernel, new possibilities have opened up in this space.</p><p>The Jupyter stack — that started in the scientific Python community has evolved into a language-agnostic framework that can now be leveraged by C++ developers. It bridges the gap between the countless scientific computing libraries and tools available in C++ and the Jupyter ecosystem.</p><p>The scientific C++ stack now has numerous projects under its belt — such as <a href=\"https://github.com/xtensor-stack/xtensor\">xtensor</a>, <a href=\"https://github.com/xtensor-stack/xframe\">xframe</a>, etc. However, there is little support for visualization — especially for interactive plots. While there exist <a href=\"https://github.com/lava/matplotlib-cpp\">matplotlib-cpp</a> and <a href=\"https://github.com/alandefreitas/matplotplusplus\">matplotplusplus</a> (with their plotting API resembling the original <a href=\"https://github.com/matplotlib/matplotlib\">matplotlib</a> library) — they suffer from the same cons as the original library does (such as the imperative API and the confusion between dual object-oriented and state-based interface).</p><p>Owing to all these shortcomings, along with the observation that JupyterLab comes with existing support for Vega and Vega-Lite Charts (through the <a href=\"https://jupyterlab.readthedocs.io/en/stable/user/file_formats.html#vega-vega-lite\">application/vnd.vegalite.v3+json</a> MIME type), one can leverage this support to bridge the gap rather than reinvent the wheel. Apart from standalone use — one could also integrate such a system into other projects such as <a href=\"https://github.com/jupyter-xeus/xeus-sqlite\">xeus-SQLite</a>.</p><p>The main idea is to programmatically fill in a JSON that conforms to the Vega-Lite specification and respects the notion of grammar of graphics. It is analogous to what <a href=\"https://github.com/altair-viz/altair\">Altair</a> did for Python. We will expose different APIs responsible for filling in certain parts of the JSON.</p><p>The fundamentals with XVega are still the same, i.e. the three essential elements of a <em>Chart</em> are <em>Data, Marks and Encodings</em> as usual and importing the library is as simple as writing two statements:</p><pre>#include &#34;xvega/xvega.hpp&#34;</pre><pre>using namespace xv;</pre><p>The experience is similar to what Altair offers and, hence, the central piece to the library is the <strong><em>Chart()</em></strong> object — which knows how to emit the JSON dictionary representing the data and visualization encodings.</p><p>For those unfamiliar with the Vega ecosystem, a quick recap for the above terms is given below:</p><ul><li><strong><em>Marks </em></strong>— What graphic should represent the data?</li><li><strong><em>Encodings </em></strong>— Mapping between Data and Visual Elements of the Chart (such as x-axis, etc.).</li><li><strong><em>Encoding Types</em></strong>: <strong><em>Quantitative</em></strong> (real-valued), <strong><em>Nominal</em></strong> (unordered categorical), <strong><em>Ordinal</em></strong> (ordered categorical), <strong><em>Temporal</em></strong> (time-series).</li></ul><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*GCkpVPeF-s7-64hNzyOcjg.png\" /><figcaption>Basic usage of XVega showcasing the essential elements — Data, Marks and Encodings.</figcaption></figure><p>The core strength of using such a system is the separation of specification and execution. The declarative API makes it easy to specify <em>“</em><strong><em>what</em></strong><em>”</em> should be done rather than focus on incidental details of the <em>“</em><strong><em>how</em></strong><em>”</em>. It means that rather than having a special <em>“</em><strong><em>hist()</em></strong><em>”</em> function for plotting a histogram, passing <em>“</em><strong><em>bin=True</em></strong><em>”</em> does the job.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*t3w0G2XCiNBw3VajHbGiCw.png\" /><figcaption>Simply stating <strong>bin=True</strong> bins the x-axis giving us the Histogram directly — without using a dedicated function.</figcaption></figure><p>We can of-course customize the binning parameters with a <em>“</em><strong><em>Bin()</em></strong><em>” </em>object instead. And while we are doing that, let’s add a colour encoding as well to get a sense of the 3rd dimension.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*UkIPGquufhYT7-S62MTECg.png\" /><figcaption>More control can be achieved using a custom <strong>Bin()</strong> object — used to set the binning parameters.</figcaption></figure><p>Another plus of using Vega-Lite as a backend is the possibility of using transformations within the specification rather than doing it before.<br>(E.g., one can do linear regression as a part of this declarative API).</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*2jpd8rcTdgnLq8fBwL0XXA.png\" /><figcaption>Usage of layering and transformations in XVega.</figcaption></figure><p>Lastly, support for <strong><em>Interactions</em></strong> and <strong><em>Selections</em></strong> is a no-brainer. It’s as simple as defining what to use and adding it to the <strong><em>Chart()</em></strong> object.</p><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*AQTFHOwHXS3uJUC6WKR6WA.gif\" /><figcaption>Zooming and Panning along with Tooltips using Interval Selection in XVega</figcaption></figure><p>Developing such a system for C++ comes with its own challenges and to provide a seamless experience like <em>Altair</em>, several things are needed to be taken care of:</p><ul><li><strong>Multiple types for a single entity:</strong> the Vega-Lite specification allows variables of different kinds (such as a boolean type and an integer type may be equally valid for a particular property). <strong><em>Variants</em></strong> and <strong><em>Visitors</em></strong> in C++ allow us to achieve this.</li><li><strong>Out of order keyword arguments: </strong>Method chaining is the classical approach to tackle out-of-order keyword arguments in C++ and is what is used in <strong><em>XVega</em></strong> indeed.</li><li><strong>Optional fields: </strong>A lot of values in the Vega-Lite specification are optional, and this is made possible by the optionally contained values in C++ (i.e. using <em>std::optional</em>).</li></ul><h4><strong>Installation</strong></h4><p>You can install XVega with conda or <a href=\"https://github.com/mamba-org/mamba\">mamba</a>:</p><pre>mamba install -c conda-forge xvega</pre><p>or</p><pre>conda install -c conda-forge xvega</pre><h4>What is coming?</h4><p>XVega is still at an early stage and under active development. We are currently working on integrating it with the <a href=\"https://github.com/jupyter-xeus/xeus-sqlite\">xeus-sqlite</a> and other SQL Jupyter kernels to enable the visualization from SQL queries. We are also working on improving the compilation time of XVega with Cling.</p><h4>Acknowledgements</h4><p>This work on XVega was funded by <a href=\"https://twitter.com/QuantStack\">QuantStack</a>. Thanks to <a href=\"https://twitter.com/SylvainCorlay\">Sylvain Corlay</a> and <a href=\"https://twitter.com/JohanMabille\">Johan Mabille</a> for their continuous support.</p><blockquote>It is an exciting time for the interactive C++ ecosystem, as so much innovation is happening in the Cling and Jupyter projects. There is a lot more to come for sure. If you are interested in helping us build that future, come talk to us at <a href=\"https://gitter.im/QuantStack/Lobby\">Gitter</a> and <a href=\"https://github.com/QuantStack/\">GitHub</a>.</blockquote><h4>About the Author</h4><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/301/1*smY4K4tEKudPztWWxpBNvw.png\" /></figure><p>My name is <a href=\"https://twitter.com/mad_tandon\">Madhur Tandon</a>, and I currently work with <a href=\"https://quantstack.net/\">QuantStack</a> as a Scientific Software Engineer. Before joining QuantStack, I have worked with <a href=\"https://github.com/iodide-project/pyodide\">Mozilla</a>, <a href=\"https://www.deepnote.com/\">Deepnote</a>, <a href=\"https://github.com/BIDS-Apps/rsHRF\">INCF</a> (International Neuroinformatics Coordinating Facility), <a href=\"https://www.tcs.com/tcs-research\">TCS Research</a> and <a href=\"https://elucidata.io/\">Elucidata</a>. I have also been a speaker at JupyterCon 2020 and PyData Delhi 2017 and 2018. I graduated from <a href=\"https://iiitd.ac.in/\">IIIT-Delhi</a> this year with a Bachelor’s degree in Computer Science with Honors. Besides core Data Science and Machine Learning, I am interested in tools that enable and enhance data scientists’ workflow and experience.</p><img src=\"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=bd2524b247c2\" width=\"1\" height=\"1\" alt=\"\"><hr><p><a href=\"https://blog.jupyter.org/a-c-backend-for-vega-lite-bd2524b247c2\">A C++ backend for Vega-Lite</a> was originally published in <a href=\"https://blog.jupyter.org\">Jupyter Blog</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>","descriptionType":"html","publishedDate":"Wed, 02 Dec 2020 15:27:32 +0000","feedId":27399,"bgimg":"https://cdn-images-1.medium.com/max/1024/1*GCkpVPeF-s7-64hNzyOcjg.png","linkMd5":"e1028da76796b39558ca9f97e698f7cc","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn41@2020_2/2020/12/02/17-25-29-222_05cf23abe0bb84ec.webp","destWidth":1024,"destHeight":927,"sourceBytes":232148,"destBytes":54700,"author":"Madhur Tandon","articleImgCdnMap":{"https://cdn-images-1.medium.com/max/1024/1*GCkpVPeF-s7-64hNzyOcjg.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn41@2020_2/2020/12/02/17-25-29-222_05cf23abe0bb84ec.webp","https://cdn-images-1.medium.com/max/1024/1*t3w0G2XCiNBw3VajHbGiCw.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn50@2020_6/2020/12/02/17-25-30-401_b91becea7b681831.webp","https://cdn-images-1.medium.com/max/1024/1*UkIPGquufhYT7-S62MTECg.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn63@2020_4/2020/12/02/17-25-30-463_d096792f9729fc54.webp","https://cdn-images-1.medium.com/max/1024/1*2jpd8rcTdgnLq8fBwL0XXA.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn53@2020_3/2020/12/02/17-25-30-425_0574c492b76abd34.webp","https://cdn-images-1.medium.com/max/1024/1*AQTFHOwHXS3uJUC6WKR6WA.gif":null,"https://cdn-images-1.medium.com/max/301/1*smY4K4tEKudPztWWxpBNvw.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn57@2020_3/2020/12/02/17-25-30-417_1b87778696cd8d0a.webp","https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=bd2524b247c2":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn45@2020_6/2020/12/02/17-25-30-529_f778877daf8ab442.webp"},"publishedOrCreatedDate":1606929928997}],"record":{"createdTime":"2020-12-03 01:25:28","updatedTime":"2020-12-03 01:25:28","feedId":27399,"fetchDate":"Wed, 02 Dec 2020 17:25:28 +0000","fetchMs":1649,"handleMs":18,"totalMs":125901,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"cbec3e0ec715f2ea822d1746028ef921","hostName":"europe-25*","requestId":"5e5f64187d6a4b7ab2fc03bf089ab1f4_27399","contentType":"text/xml; charset=UTF-8","totalBytes":204166,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":7,"articlesImgsGithubTotal":6,"successGithubMap":{"myreaderx27":1,"myreaderx4":1,"myreaderx11":1,"myreaderx12":1,"myreaderx24":1,"myreaderx1":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:41:13","updatedTime":"2020-09-07 04:42:40","id":27399,"name":"Jupyter Blog - Medium","url":"http://blog.jupyter.org/rss/","subscriber":119,"website":null,"icon":"https://cdn-images-1.medium.com/proxy/1*TGH72Nnw24QL3iV9IOm4VA.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx65/cdn65@2020_1/2020/09/06/20-42-36-189_7b1d3de1dd751a79.png","description":"The Jupyter Blog - Medium","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-12-03 01:27:33","updatedTime":"2020-12-03 01:27:33","id":null,"feedId":27399,"linkMd5":"e1028da76796b39558ca9f97e698f7cc"}],"tmpCommonImgCdnBytes":54700,"tmpBodyImgCdnBytes":149466,"tmpBgImgCdnBytes":0,"extra4":{"start":1606929927196,"total":0,"statList":[{"spend":1784,"msg":"获取xml内容"},{"spend":18,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":122918,"msg":"正文链接上传到cdn"}]},"extra5":7,"extra6":6,"extra7ImgCdnFailResultVector":[null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-018.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-017.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-014.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/1024/1*GCkpVPeF-s7-64hNzyOcjg.png","sourceStatusCode":200,"destWidth":1024,"destHeight":927,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn41@2020_2/2020/12/02/17-25-29-222_05cf23abe0bb84ec.webp","sourceBytes":232148,"destBytes":54700,"targetWebpQuality":75,"feedId":27399,"totalSpendMs":1005,"convertSpendMs":46,"createdTime":"2020-12-03 01:25:29","host":"us-026*","referer":"https://medium.com/p/bd2524b247c2","linkMd5ListStr":"e1028da76796b39558ca9f97e698f7cc,e1028da76796b39558ca9f97e698f7cc","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"226.7 KB","destSize":"53.4 KB","compressRate":"23.6%"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/1024/1*t3w0G2XCiNBw3VajHbGiCw.png","sourceStatusCode":200,"destWidth":1024,"destHeight":751,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn50@2020_6/2020/12/02/17-25-30-401_b91becea7b681831.webp","sourceBytes":109575,"destBytes":30234,"targetWebpQuality":75,"feedId":27399,"totalSpendMs":933,"convertSpendMs":37,"createdTime":"2020-12-03 01:25:30","host":"us-002*","referer":"https://medium.com/p/bd2524b247c2","linkMd5ListStr":"e1028da76796b39558ca9f97e698f7cc","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"107 KB","destSize":"29.5 KB","compressRate":"27.6%"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/301/1*smY4K4tEKudPztWWxpBNvw.png","sourceStatusCode":200,"destWidth":301,"destHeight":301,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn57@2020_3/2020/12/02/17-25-30-417_1b87778696cd8d0a.webp","sourceBytes":116804,"destBytes":14186,"targetWebpQuality":75,"feedId":27399,"totalSpendMs":988,"convertSpendMs":46,"createdTime":"2020-12-03 01:25:30","host":"us-52*","referer":"https://medium.com/p/bd2524b247c2","linkMd5ListStr":"e1028da76796b39558ca9f97e698f7cc","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"114.1 KB","destSize":"13.9 KB","compressRate":"12.1%"},{"code":1,"isDone":false,"source":"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=bd2524b247c2","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn45@2020_6/2020/12/02/17-25-30-529_f778877daf8ab442.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":27399,"totalSpendMs":1038,"convertSpendMs":6,"createdTime":"2020-12-03 01:25:30","host":"us-014*","referer":"https://medium.com/p/bd2524b247c2","linkMd5ListStr":"e1028da76796b39558ca9f97e698f7cc","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/1024/1*UkIPGquufhYT7-S62MTECg.png","sourceStatusCode":200,"destWidth":1024,"destHeight":829,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn63@2020_4/2020/12/02/17-25-30-463_d096792f9729fc54.webp","sourceBytes":157852,"destBytes":45660,"targetWebpQuality":75,"feedId":27399,"totalSpendMs":1098,"convertSpendMs":77,"createdTime":"2020-12-03 01:25:30","host":"us-018*","referer":"https://medium.com/p/bd2524b247c2","linkMd5ListStr":"e1028da76796b39558ca9f97e698f7cc","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"154.2 KB","destSize":"44.6 KB","compressRate":"28.9%"},{"code":1,"isDone":false,"source":"https://cdn-images-1.medium.com/max/1024/1*2jpd8rcTdgnLq8fBwL0XXA.png","sourceStatusCode":200,"destWidth":1024,"destHeight":873,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn53@2020_3/2020/12/02/17-25-30-425_0574c492b76abd34.webp","sourceBytes":238346,"destBytes":59314,"targetWebpQuality":75,"feedId":27399,"totalSpendMs":1351,"convertSpendMs":45,"createdTime":"2020-12-03 01:25:30","host":"europe64*","referer":"https://medium.com/p/bd2524b247c2","linkMd5ListStr":"e1028da76796b39558ca9f97e698f7cc","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"232.8 KB","destSize":"57.9 KB","compressRate":"24.9%"}],"successGithubMap":{"myreaderx27":1,"myreaderx4":1,"myreaderx11":1,"myreaderx12":1,"myreaderx24":1,"myreaderx1":1},"failGithubMap":{}}