{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-11-16 19:43:57","updatedTime":"2020-11-16 19:43:57","title":"PyTorch (2) 自動微分","link":"https://aidiary.hatenablog.com/entry/20180129/1517233796","description":"<p>PyTorchの自動微分を試してみた。</p>\n\n<pre class=\"code lang-python\" data-lang=\"python\" data-unlink><span class=\"synPreProc\">import</span> numpy <span class=\"synStatement\">as</span> np\n<span class=\"synPreProc\">import</span> torch\n<span class=\"synPreProc\">import</span> torch.nn <span class=\"synStatement\">as</span> nn\n</pre>\n\n\n<p>まずは必要なライブラリをインポート。</p>\n\n<pre class=\"code lang-python\" data-lang=\"python\" data-unlink><span class=\"synComment\"># テンソルを作成</span>\n<span class=\"synComment\"># requires_grad=Falseだと微分の対象にならず勾配はNoneが返る</span>\nx = torch.tensor(<span class=\"synConstant\">1.0</span>, requires_grad=<span class=\"synIdentifier\">True</span>)\nw = torch.tensor(<span class=\"synConstant\">2.0</span>, requires_grad=<span class=\"synIdentifier\">True</span>)\nb = torch.tensor(<span class=\"synConstant\">3.0</span>, requires_grad=<span class=\"synIdentifier\">True</span>)\n\n<span class=\"synComment\"># 計算グラフを構築</span>\n<span class=\"synComment\"># y = 2 * x + 3</span>\ny = w * x + b\n\n<span class=\"synComment\"># 勾配を計算</span>\ny.backward()\n\n<span class=\"synComment\"># 勾配を表示</span>\n<span class=\"synIdentifier\">print</span>(x.grad)  <span class=\"synComment\"># dy/dx = w = 2</span>\n<span class=\"synIdentifier\">print</span>(w.grad)  <span class=\"synComment\"># dy/dw = x = 1</span>\n<span class=\"synIdentifier\">print</span>(b.grad)  <span class=\"synComment\"># dy/db = 1</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>tensor(2.)\ntensor(1.)\ntensor(1.)</pre>\n\n\n<ul>\n<li><code>requires_grad=False</code>だと微分の対象にならず勾配はNoneが返る</li>\n<li><code>requires_grad=Fase</code> はFine-tuningで層のパラメータを固定したいときに便利</li>\n<li>計算グラフを構築して<code>backward()</code>を実行するとグラフを構築する各変数の<code>grad</code>に勾配が入る</li>\n</ul>\n\n\n<p><a href=\"http://aidiary.hatenablog.com/entry/20150518/1431954329\">Theanoの使い方 (2) 自動微分</a>（2015/5/18）をTheanoではなくPyTorchでやってみる</p>\n\n<h3>例1</h3>\n\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&chl=%20y%20%3D%20x%5E2\" alt=\" y = x^2\"/></p>\n\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%202x\" alt=\" \\displaystyle \\frac{dy}{dx} = 2x\"/></p>\n\n<pre class=\"code lang-python\" data-lang=\"python\" data-unlink>x = torch.tensor(<span class=\"synConstant\">2.0</span>, requires_grad=<span class=\"synIdentifier\">True</span>)\ny = x ** <span class=\"synConstant\">2</span>\ny.backward()\n<span class=\"synIdentifier\">print</span>(x.grad)\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>tensor(4.)</pre>\n\n\n<ul>\n<li>yは変数xの式で成り立っていて、yの<code>backward()</code>を呼び出すとそれぞれの変数の<code>grad</code>プロパティに勾配が入る。</li>\n</ul>\n\n\n<h3>例2</h3>\n\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&chl=%20y%20%3D%20e%5Ex\" alt=\" y = e^x\"/></p>\n\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%20e%5Ex\" alt=\" \\displaystyle \\frac{dy}{dx} = e^x\"/></p>\n\n<pre class=\"code lang-python\" data-lang=\"python\" data-unlink>x = torch.tensor(<span class=\"synConstant\">2.0</span>, requires_grad=<span class=\"synIdentifier\">True</span>)\ny = torch.exp(x)\ny.backward()\n<span class=\"synIdentifier\">print</span>(x.grad)\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>tensor(7.3891)</pre>\n\n\n<ul>\n<li>計算グラフを構築するときは <code>numpy</code> の関数 <code>numpy.exp()</code> を使ってはダメ</li>\n<li>テンソル計算を行う専用の関数を使う <code>torch.exp()</code></li>\n<li>これらの関数は微分可能なので計算グラフ上で誤差逆伝搬が可能</li>\n</ul>\n\n\n<h3>例3</h3>\n\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&chl=%20y%20%3D%20%5Csin%28x%29\" alt=\" y = \\sin(x)\"/></p>\n\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%20%5Ccos%28x%29\" alt=\" \\displaystyle \\frac{dy}{dx} = \\cos(x)\"/></p>\n\n<pre class=\"code lang-python\" data-lang=\"python\" data-unlink>x = torch.tensor(np.pi, requires_grad=<span class=\"synIdentifier\">True</span>)\ny = torch.sin(x)\ny.backward()\n<span class=\"synIdentifier\">print</span>(x.grad)\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>tensor(-1.)</pre>\n\n\n<h3>例4</h3>\n\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&chl=%20y%20%3D%20%28x%20-%204%29%28x%5E2%20%2B%206%29\" alt=\" y = (x - 4)(x^2 + 6)\"/></p>\n\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%203%20x%5E2%20-%208%20x%20%2B%206\" alt=\" \\displaystyle \\frac{dy}{dx} = 3 x^2 - 8 x + 6\"/></p>\n\n<pre class=\"code lang-python\" data-lang=\"python\" data-unlink>x = torch.tensor(<span class=\"synConstant\">0.0</span>, requires_grad=<span class=\"synIdentifier\">True</span>)\ny = (x - <span class=\"synConstant\">4</span>) * (x ** <span class=\"synConstant\">2</span> + <span class=\"synConstant\">6</span>)\ny.backward()\n<span class=\"synIdentifier\">print</span>(x.grad)\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>tensor(6.)</pre>\n\n\n<h3>例5</h3>\n\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&chl=%20y%20%3D%20%28%5Csqrt%7Bx%7D%20%2B%201%29%5E3\" alt=\" y = (\\sqrt{x} + 1)^3\"/></p>\n\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%20%5Cfrac%7B3%20%28%5Csqrt%7Bx%7D%20%2B%201%29%5E2%7D%7B2%20%5Csqrt%7Bx%7D%7D\" alt=\" \\displaystyle \\frac{dy}{dx} = \\frac{3 (\\sqrt{x} + 1)^2}{2 \\sqrt{x}}\"/></p>\n\n<pre class=\"code lang-python\" data-lang=\"python\" data-unlink>x = torch.tensor(<span class=\"synConstant\">2.0</span>, requires_grad=<span class=\"synIdentifier\">True</span>)\ny = (torch.sqrt(x) + <span class=\"synConstant\">1</span>) ** <span class=\"synConstant\">3</span>\ny.backward()\n<span class=\"synIdentifier\">print</span>(x.grad)\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>tensor(6.1820)</pre>\n\n\n<h3>例6</h3>\n\n<p>最後は偏微分の例。</p>\n\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&chl=%20z%20%3D%20%28x%20%2B%202%20y%29%5E2\" alt=\" z = (x + 2 y)^2\"/></p>\n\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7B%5Cpartial%20z%7D%7B%5Cpartial%20x%7D%20%3D%202%20%28x%20%2B%202y%29\" alt=\" \\displaystyle \\frac{\\partial z}{\\partial x} = 2 (x + 2y)\"/></p>\n\n<p><img src=\"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7B%5Cpartial%20z%7D%7B%5Cpartial%20y%7D%20%3D%204%20%28x%20%2B%202y%29\" alt=\" \\displaystyle \\frac{\\partial z}{\\partial y} = 4 (x + 2y)\"/></p>\n\n<pre class=\"code lang-python\" data-lang=\"python\" data-unlink>x = torch.tensor(<span class=\"synConstant\">1.0</span>, requires_grad=<span class=\"synIdentifier\">True</span>)\ny = torch.tensor(<span class=\"synConstant\">2.0</span>, requires_grad=<span class=\"synIdentifier\">True</span>)\nz = (x + <span class=\"synConstant\">2</span> * y) ** <span class=\"synConstant\">2</span>\nz.backward()\n<span class=\"synIdentifier\">print</span>(x.grad)  <span class=\"synComment\"># dz/dx</span>\n<span class=\"synIdentifier\">print</span>(y.grad)  <span class=\"synComment\"># dz/dy</span>\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>tensor(10.)\ntensor(20.)</pre>\n\n\n<h2>lossを微分する</h2>\n\n<p>ニューラルネットの場合は、<strong>lossをパラメータ（重みやバイアス）で偏微分</strong>した値を使って勾配降下法でパラメータを更新するのが一般的。</p>\n\n<pre class=\"code lang-python\" data-lang=\"python\" data-unlink><span class=\"synComment\"># バッチサンプル数=5、入力特徴量の次元数=3</span>\nx = torch.randn(<span class=\"synConstant\">5</span>, <span class=\"synConstant\">3</span>)\n<span class=\"synComment\"># バッチサンプル数=5、出力特徴量の次元数=2</span>\ny = torch.randn(<span class=\"synConstant\">5</span>, <span class=\"synConstant\">2</span>)\n\n<span class=\"synComment\"># Linear層を作成</span>\n<span class=\"synComment\"># 3ユニット =&gt; 2ユニット</span>\nlinear = nn.Linear(<span class=\"synConstant\">3</span>, <span class=\"synConstant\">2</span>)\n\n<span class=\"synComment\"># Linear層のパラメータ</span>\n<span class=\"synIdentifier\">print</span>(<span class=\"synConstant\">'w:'</span>, linear.weight)\n<span class=\"synIdentifier\">print</span>(<span class=\"synConstant\">'b:'</span>, linear.bias)\n\n<span class=\"synComment\"># lossとoptimizer</span>\ncriterion = nn.MSELoss()\noptimizer = torch.optim.SGD(linear.parameters(), lr=<span class=\"synConstant\">0.01</span>)\n\n<span class=\"synComment\"># forward</span>\npred = linear(x)\n\n<span class=\"synComment\"># loss = L</span>\nloss = criterion(pred, y)\n<span class=\"synIdentifier\">print</span>(<span class=\"synConstant\">'loss:'</span>, loss)\n\n<span class=\"synComment\"># backpropagation</span>\nloss.backward()\n\n<span class=\"synComment\"># 勾配を表示</span>\n<span class=\"synIdentifier\">print</span>(<span class=\"synConstant\">'dL/dw:'</span>, linear.weight.grad)\n<span class=\"synIdentifier\">print</span>(<span class=\"synConstant\">'dL/db:'</span>, linear.bias.grad)\n\n<span class=\"synComment\"># 勾配を用いてパラメータを更新</span>\n<span class=\"synIdentifier\">print</span>(<span class=\"synConstant\">'*** by hand'</span>)\n<span class=\"synIdentifier\">print</span>(linear.weight.sub(<span class=\"synConstant\">0.01</span> * linear.weight.grad))\n<span class=\"synIdentifier\">print</span>(linear.bias.sub(<span class=\"synConstant\">0.01</span> * linear.bias.grad))\n\n<span class=\"synComment\"># 勾配降下法</span>\noptimizer.step()\n\n<span class=\"synComment\"># 1ステップ更新後のパラメータを表示</span>\n<span class=\"synComment\"># 上の式と結果が一致することがわかる</span>\n<span class=\"synIdentifier\">print</span>(<span class=\"synConstant\">'*** by optimizer.step()'</span>)\n<span class=\"synIdentifier\">print</span>(linear.weight)\n<span class=\"synIdentifier\">print</span>(linear.bias)\n</pre>\n\n\n\n\n<pre class=\"code\" data-lang=\"\" data-unlink>w: Parameter containing:\ntensor([[ 0.4176,  0.2302,  0.3942],\n        [-0.3258,  0.0489, -0.3333]], requires_grad=True)\nb: Parameter containing:\ntensor([0.4269, 0.2872], requires_grad=True)\nloss: tensor(1.3395, grad_fn=&lt;MseLossBackward&gt;)\ndL/dw: tensor([[ 0.4404,  0.4512,  0.9893],\n        [-0.6777, -0.2535, -0.5191]])\ndL/db: tensor([0.6095, 0.6305])\n*** by hand\ntensor([[ 0.4132,  0.2257,  0.3843],\n        [-0.3191,  0.0514, -0.3281]], grad_fn=&lt;ThSubBackward&gt;)\ntensor([0.4208, 0.2809], grad_fn=&lt;ThSubBackward&gt;)\n*** by optimizer.step()\nParameter containing:\ntensor([[ 0.4132,  0.2257,  0.3843],\n        [-0.3191,  0.0514, -0.3281]], requires_grad=True)\nParameter containing:\ntensor([0.4208, 0.2809], requires_grad=True)</pre>\n\n\n<h2>参考</h2>\n\n<ul>\n<li><a href=\"https://github.com/yunjey/pytorch-tutorial/blob/master/tutorials/01-basics/pytorch_basics/main.py\">PyTorch Tutorial</a></li>\n<li><a href=\"http://pytorch.org/tutorials/beginner/blitz/autograd_tutorial.html\">Autograd: automatic differentiation</a></li>\n<li><a href=\"https://pytorch.org/docs/stable/index.html\">Autograd mechanics</a></li>\n</ul>\n\n","descriptionType":"html","publishedDate":"Mon, 29 Jan 2018 13:49:56 +0000","feedId":33891,"bgimg":"https://cdn.blog.st-hatena.com/images/theme/og-image-1500.png","linkMd5":"447abb4da1281a7a0b41b71e409eea3a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn72@2020_2/2020/11/16/11-43-57-707_826ddd244d633277.webp","destWidth":1500,"destHeight":1051,"sourceBytes":70050,"destBytes":47840,"author":"aidiary","enclosureType":"image/png","enclosureUrl":"https://cdn.blog.st-hatena.com/images/theme/og-image-1500.png","articleImgCdnMap":{"https://chart.apis.google.com/chart?cht=tx&chl=%20y%20%3D%20x%5E2":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn84@2020_4/2020/11/16/11-43-58-168_f4c46863f2e6ce41.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%202x":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn20@2020_5/2020/11/16/11-43-57-741_33b25f9cd827cdcf.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20y%20%3D%20e%5Ex":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn87@2020_1/2020/11/16/11-43-58-015_fd212d4633eeb3ad.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%20e%5Ex":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn100@2020_1/2020/11/16/11-43-57-695_b52c36ce3987be23.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20y%20%3D%20%5Csin%28x%29":"https://cdn.jsdelivr.net/gh/myreaderx/cdn24@2020_2/2020/11/16/11-43-57-718_a70bab92631ed134.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%20%5Ccos%28x%29":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn96@2020_6/2020/11/16/11-43-57-747_4cb6fc9d4fe91442.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20y%20%3D%20%28x%20-%204%29%28x%5E2%20%2B%206%29":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn16@2020_1/2020/11/16/11-43-57-757_13c450e96996f2c6.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%203%20x%5E2%20-%208%20x%20%2B%206":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn8@2020_5/2020/11/16/11-44-17-640_fc8a06e13d48ab7e.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20y%20%3D%20%28%5Csqrt%7Bx%7D%20%2B%201%29%5E3":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn4@2020_5/2020/11/16/11-44-07-797_b215bd1bbce0875e.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%20%5Cfrac%7B3%20%28%5Csqrt%7Bx%7D%20%2B%201%29%5E2%7D%7B2%20%5Csqrt%7Bx%7D%7D":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn76@2020_2/2020/11/16/11-43-57-741_0aa2dde5168a2864.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20z%20%3D%20%28x%20%2B%202%20y%29%5E2":null,"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7B%5Cpartial%20z%7D%7B%5Cpartial%20x%7D%20%3D%202%20%28x%20%2B%202y%29":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn91@2020_4/2020/11/16/11-43-57-711_49f24890d4d26c05.webp","https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7B%5Cpartial%20z%7D%7B%5Cpartial%20y%7D%20%3D%204%20%28x%20%2B%202y%29":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn12@2020_1/2020/11/16/11-44-07-592_fde2cf56d4b5cb77.webp"},"publishedOrCreatedDate":1605527037550}],"record":{"createdTime":"2020-11-16 19:43:57","updatedTime":"2020-11-16 19:43:57","feedId":33891,"fetchDate":"Mon, 16 Nov 2020 11:43:57 +0000","fetchMs":2823,"handleMs":5621,"totalMs":29641,"newArticles":0,"totalArticles":30,"status":1,"type":0,"ip":"40ace73c106547fe13d820d5a8d040ba","hostName":"us-014*","requestId":"b43028c1639c45a0805e81268e6f88df_33891","contentType":"application/atom+xml; charset=utf-8","totalBytes":11350,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":13,"articlesImgsGithubTotal":12,"successGithubMap":{"myreaderx8":1,"myreaderx15":1,"myreaderx27":1,"myreaderx4":1,"myreaderx10":1,"myreaderx22":1,"myreaderx33":1,"myreaderx13":1,"myreaderx24":1,"myreaderx29":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{"myreaderx23":1}},"feed":{"createdTime":"2020-09-07 02:59:55","updatedTime":"2020-09-07 02:59:55","id":33891,"name":"人工知能に関する断創録","url":"http://d.hatena.ne.jp/aidiary/rss","subscriber":95,"website":null,"icon":"https://aidiary.hatenablog.com/favicon.ico","icon_jsdelivr":null,"description":"このブログでは人工知能のさまざまな分野について調査したことをまとめています（更新停止: 2019年12月31日）","weekly":null,"link":"https://aidiary.hatenablog.com"},"noPictureArticleList":[{"createdTime":"2020-11-16 19:44:18","updatedTime":"2020-11-16 19:44:18","id":null,"feedId":33891,"linkMd5":"447abb4da1281a7a0b41b71e409eea3a"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":11350,"tmpBgImgCdnBytes":0,"extra4":{"start":1605527028768,"total":0,"statList":[{"spend":3161,"msg":"获取xml内容"},{"spend":5621,"msg":"解释文章"},{"spend":1084,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":20859,"msg":"正文链接上传到cdn"}]},"extra5":13,"extra6":13,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20z%20%3D%20%28x%20%2B%202%20y%29%5E2","sourceStatusCode":200,"destWidth":98,"destHeight":23,"sourceBytes":1727,"destBytes":932,"targetWebpQuality":75,"feedId":33891,"totalSpendMs":176,"convertSpendMs":3,"createdTime":"2020-11-16 19:43:57","host":"us-012*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn79/contents/2020/11/16/11-43-57-658_f5b1fc898f1bd873.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 16 Nov 2020 11:43:57 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["EA7E:0EA7:27B172A:40EB0B9:5FB265FD"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1605528578"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn79/contents/2020/11/16/11-43-57-658_f5b1fc898f1bd873.webp","historyStatusCode":[],"spendMs":91},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.7 KB","destSize":"932 B","compressRate":"54%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20z%20%3D%20%28x%20%2B%202%20y%29%5E2","sourceStatusCode":200,"destWidth":98,"destHeight":23,"sourceBytes":1727,"destBytes":932,"targetWebpQuality":75,"feedId":33891,"totalSpendMs":60,"convertSpendMs":2,"createdTime":"2020-11-16 19:43:57","host":"us-012*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn79/contents/2020/11/16/11-43-57-775_f5b1fc898f1bd873.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 16 Nov 2020 11:43:57 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["EA7E:0EA7:27B1730:40EB0C1:5FB265FD"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1605528578"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn79/contents/2020/11/16/11-43-57-775_f5b1fc898f1bd873.webp","historyStatusCode":[],"spendMs":41},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.7 KB","destSize":"932 B","compressRate":"54%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%203%20x%5E2%20-%208%20x%20%2B%206","sourceStatusCode":502,"sourceBytes":0,"destBytes":0,"feedId":33891,"totalSpendMs":19822,"convertSpendMs":0,"createdTime":"2020-11-16 19:43:57","host":"europe67*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[502],"sourceSize":"0","destSize":"0"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-55.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-004.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe67.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[502]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%20e%5Ex","sourceStatusCode":200,"destWidth":57,"destHeight":37,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn100@2020_1/2020/11/16/11-43-57-695_b52c36ce3987be23.webp","sourceBytes":1609,"destBytes":774,"targetWebpQuality":75,"feedId":33891,"totalSpendMs":933,"convertSpendMs":8,"createdTime":"2020-11-16 19:43:57","host":"us-017*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.6 KB","destSize":"774 B","compressRate":"48.1%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%202x","sourceStatusCode":200,"destWidth":60,"destHeight":37,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn20@2020_5/2020/11/16/11-43-57-741_33b25f9cd827cdcf.webp","sourceBytes":1804,"destBytes":816,"targetWebpQuality":75,"feedId":33891,"totalSpendMs":942,"convertSpendMs":6,"createdTime":"2020-11-16 19:43:57","host":"us-021*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.8 KB","destSize":"816 B","compressRate":"45.2%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%20%5Cfrac%7B3%20%28%5Csqrt%7Bx%7D%20%2B%201%29%5E2%7D%7B2%20%5Csqrt%7Bx%7D%7D","sourceStatusCode":200,"destWidth":107,"destHeight":46,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn76@2020_2/2020/11/16/11-43-57-741_0aa2dde5168a2864.webp","sourceBytes":3097,"destBytes":1420,"targetWebpQuality":75,"feedId":33891,"totalSpendMs":949,"convertSpendMs":4,"createdTime":"2020-11-16 19:43:57","host":"us-025*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3 KB","destSize":"1.4 KB","compressRate":"45.9%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20y%20%3D%20%28x%20-%204%29%28x%5E2%20%2B%206%29","sourceStatusCode":200,"destWidth":136,"destHeight":19,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn16@2020_1/2020/11/16/11-43-57-757_13c450e96996f2c6.webp","sourceBytes":2217,"destBytes":1112,"targetWebpQuality":75,"feedId":33891,"totalSpendMs":992,"convertSpendMs":4,"createdTime":"2020-11-16 19:43:57","host":"us-033*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.2 KB","destSize":"1.1 KB","compressRate":"50.2%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%20%5Ccos%28x%29","sourceStatusCode":200,"destWidth":90,"destHeight":37,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn96@2020_6/2020/11/16/11-43-57-747_4cb6fc9d4fe91442.webp","sourceBytes":2482,"destBytes":1058,"targetWebpQuality":75,"feedId":33891,"totalSpendMs":994,"convertSpendMs":3,"createdTime":"2020-11-16 19:43:57","host":"us-029*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.4 KB","destSize":"1 KB","compressRate":"42.6%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7B%5Cpartial%20z%7D%7B%5Cpartial%20x%7D%20%3D%202%20%28x%20%2B%202y%29","sourceStatusCode":200,"destWidth":111,"destHeight":34,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn91@2020_4/2020/11/16/11-43-57-711_49f24890d4d26c05.webp","sourceBytes":2668,"destBytes":1212,"targetWebpQuality":75,"feedId":33891,"totalSpendMs":1006,"convertSpendMs":13,"createdTime":"2020-11-16 19:43:57","host":"us-51*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.6 KB","destSize":"1.2 KB","compressRate":"45.4%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20y%20%3D%20%5Csin%28x%29","sourceStatusCode":200,"destWidth":75,"destHeight":19,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn24@2020_2/2020/11/16/11-43-57-718_a70bab92631ed134.webp","sourceBytes":1454,"destBytes":718,"targetWebpQuality":75,"feedId":33891,"totalSpendMs":1042,"convertSpendMs":3,"createdTime":"2020-11-16 19:43:57","host":"us-008*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.4 KB","destSize":"718 B","compressRate":"49.4%"},{"code":1,"isDone":false,"source":"https://cdn.blog.st-hatena.com/images/theme/og-image-1500.png","sourceStatusCode":200,"destWidth":1500,"destHeight":1051,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn72@2020_2/2020/11/16/11-43-57-707_826ddd244d633277.webp","sourceBytes":70050,"destBytes":47840,"targetWebpQuality":75,"feedId":33891,"totalSpendMs":1070,"convertSpendMs":96,"createdTime":"2020-11-16 19:43:57","host":"us-037*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"68.4 KB","destSize":"46.7 KB","compressRate":"68.3%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20y%20%3D%20x%5E2","sourceStatusCode":200,"destWidth":48,"destHeight":18,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn84@2020_4/2020/11/16/11-43-58-168_f4c46863f2e6ce41.webp","sourceBytes":907,"destBytes":454,"targetWebpQuality":75,"feedId":33891,"totalSpendMs":1353,"convertSpendMs":8,"createdTime":"2020-11-16 19:43:57","host":"europe-25*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"907 B","destSize":"454 B","compressRate":"50.1%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20y%20%3D%20e%5Ex","sourceStatusCode":200,"destWidth":48,"destHeight":17,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn87@2020_1/2020/11/16/11-43-58-015_fd212d4633eeb3ad.webp","sourceBytes":819,"destBytes":398,"targetWebpQuality":75,"feedId":33891,"totalSpendMs":1466,"convertSpendMs":3,"createdTime":"2020-11-16 19:43:57","host":"europe63*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"819 B","destSize":"398 B","compressRate":"48.6%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7B%5Cpartial%20z%7D%7B%5Cpartial%20y%7D%20%3D%204%20%28x%20%2B%202y%29","sourceStatusCode":200,"destWidth":111,"destHeight":37,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn12@2020_1/2020/11/16/11-44-07-592_fde2cf56d4b5cb77.webp","sourceBytes":2667,"destBytes":1214,"targetWebpQuality":75,"feedId":33891,"totalSpendMs":10797,"convertSpendMs":5,"createdTime":"2020-11-16 19:43:57","host":"us-55*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.6 KB","destSize":"1.2 KB","compressRate":"45.5%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20y%20%3D%20%28%5Csqrt%7Bx%7D%20%2B%201%29%5E3","sourceStatusCode":200,"destWidth":96,"destHeight":23,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn4@2020_5/2020/11/16/11-44-07-797_b215bd1bbce0875e.webp","sourceBytes":1671,"destBytes":860,"targetWebpQuality":75,"feedId":33891,"totalSpendMs":11059,"convertSpendMs":8,"createdTime":"2020-11-16 19:43:57","host":"us-004*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.6 KB","destSize":"860 B","compressRate":"51.5%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%20%5Cdisplaystyle%20%5Cfrac%7Bdy%7D%7Bdx%7D%20%3D%203%20x%5E2%20-%208%20x%20%2B%206","sourceStatusCode":200,"destWidth":132,"destHeight":37,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn8@2020_5/2020/11/16/11-44-17-640_fc8a06e13d48ab7e.webp","sourceBytes":3050,"destBytes":1314,"targetWebpQuality":75,"feedId":33891,"totalSpendMs":879,"convertSpendMs":4,"createdTime":"2020-11-16 19:44:17","host":"us-029*","referer":"https://aidiary.hatenablog.com/entry/20180129/1517233796","linkMd5ListStr":"447abb4da1281a7a0b41b71e409eea3a","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3 KB","destSize":"1.3 KB","compressRate":"43.1%"}],"successGithubMap":{"myreaderx8":1,"myreaderx15":1,"myreaderx27":1,"myreaderx4":1,"myreaderx10":1,"myreaderx22":1,"myreaderx33":1,"myreaderx13":1,"myreaderx24":1,"myreaderx29":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{"myreaderx23":1}}