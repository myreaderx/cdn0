{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"A primer on GtkListView","link":"http://blog.gtk.org/?p=8362","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Some of the early adopters of GTK4 have pointed out that the new list widgets are not the easiest to learn. In particular,  GtkExpression and GtkBuilderListItemFactory are hard to wrap your head around. That is not too surprising – a full list widget, with columns, and selections and sorting, and tree structure, etc is a complicated beast.</p>\r\n<p>But lets see if we can unpack things one-by-one, and make it all more understandable.</p>\r\n<h3>Overview</h3>\r\n<p>Lets start with a high-level view of the relevant components and their interactions: the model, the list item factory and the list view.</p>\r\n<p>They are the three things that occur when we create a list view:</p>\r\n<pre>view = gtk_list_view_new (model, factory);</pre>\r\n<p>The models we use are GListModels. These always contain GObjects, so you will have to provide your data in the form of objects. This is a first notable difference from GtkTreeview, which is using GtkTreeModels directly containing basic types.</p>\r\n<p>For some simple cases, GTK provides ready-made models, such as GtkStringList. But in general, you will have to make your own model. Thankfully, GListModel is a much simpler interface than GtkTreeModel, so this is not too hard.<br />\r\n<a href=\"https://blog.gtk.org/files/2020/09/listfill-1.png\"><img alt=\"\" class=\"aligncenter wp-image-8408 size-full\" height=\"850\" src=\"https://blog.gtk.org/files/2020/09/listfill-1-e1599274641902.png\" width=\"794\" /></a><br />\r\nThe responsibility of the <em>list item factory </em>is to produce a row widget and connect it to an item in the model, whenever the list view needs it.</p>\r\n<p>The list view will create a few more rows than it needs to fill its visible area, to get a better estimate for the size of the scrollbars, and in order to have some “buffer”for when you decide to scroll the view.</p>\r\n<p>Once you do scroll, we don’t necessarily need to ask the factory to make more rows —we can recycle the rows that are being scrolled out of view on the other end.<br />\r\n<a href=\"https://blog.gtk.org/files/2020/09/listscroll-3.png\"><img alt=\"\" class=\"aligncenter wp-image-8410 size-full\" height=\"1058\" src=\"https://blog.gtk.org/files/2020/09/listscroll-3-e1599274918924.png\" width=\"794\" /></a><br />\r\nThankfully, all of this happens automatically behind the scenes. All you have to do is provide a list item factory.</p>\r\n<h3>Creating items</h3>\r\n<p>GTK offers two different approaches for creating creating items. You can either do it manually, with GtkSignalListItemFactory, or you can instantiate your row widgets from a ui file, using GtkBuilderListItemFactory.</p>\r\n<p>The manual approach is easier to understand, so lets look at that first.</p>\r\n<pre>factory = gtk_signal_list_item_factory_new ();\r\ng_signal_connect (factory, \"setup\", setup_listitem_cb, NULL);\r\ng_signal_connect (factory, \"bind\", bind_listitem_cb, NULL);</pre>\r\n<p>The “setup” signal is emitted when the factory needs to create a new row widget, “bind” is emitted when a row widget needs to be connected to an item from the model.</p>\r\n<p>Both of these signals take a GtkListItem as argument, which is a wrapper object that lets you get at the model item (with gtk_list_item_get_item()) and also lets you deliver the new row widget (with gtk_list_item_set_child()).</p>\r\n<pre>static void\r\nsetup_listitem_cb (GtkListItemFactory *factory,\r\n                   GtkListItem        *list_item)\r\n{\r\n  GtkWidget *label = gtk_label_new (\"\");\r\n  gtk_list_item_set_child (list_item, box);\r\n}</pre>\r\n<p>Typically, your rows will be more complicated than a single label. You can create complex widgets and group them in containers, as needed.</p>\r\n<pre>static void\r\nbind_listitem_cb (GtkListItemFactory *factory,\r\n                  GtkListItem        *list_item)\r\n{\r\n  GtkWidget *label;\r\n  MyObject *obj;\r\n\r\n  label = gtk_list_item_get_child (list_item);\r\n  obj = gtk_list_item_get_item (list_item);\r\n  gtk_label_set_label (GTK_LABEL (label),\r\n                       my_object_get_string (obj));\r\n}</pre>\r\n<p>If your “bind” handler connects to signals on the item or does other things that require cleanup, you can use the “unbind” signal to do that cleanup. The “setup” signal has a similar counterpart called “teardown”.</p>\r\n<h3>The builder way</h3>\r\n<p>Our “setup” handler is basically a recipe for creating a small widget hierarchy. GTK has a more declarative way of doing this: GtkBuilder ui files. That is the way GtkBuilderListItemFactory works: you give it a ui file, and it instantiates that ui file whenever it needs to create a row.</p>\r\n<pre>ui = \"&lt;interface&gt;&lt;template class=\"GtkListItem\"&gt;...\";\r\nbytes = g_bytes_new_static (ui, strlen (ui));\r\ngtk_builder_list_item_factory_new_from_bytes (scope, bytes);</pre>\r\n<p>You might now be wondering: Wait a minute, you are parsing an xml file for each of the thousands of items in my model, isn’t that expensive?</p>\r\n<p>There are two answers to this concern:</p>\r\n<ul>\r\n<li>We are not literally parsing the xml for each item; we parse it once, store the callback sequence, and replay it later.</li>\r\n<li>The  most expensive part of GtkBuilder is actually not the xml parsing, but the creation of objects; recycling rows helps for this.</li>\r\n</ul>\r\n<p>It is relatively easy to see how a ui file can replace the “setup” handler, but what about “bind”? In the example above, the bind callback was getting properties of the item (the MyObject:string property) and using their values to set properties of the widgets (the GtkLabel:label property). In other words, the “bind” handler is doing property bindings. For simplicity, we just created a one-time binding here, but we could have just as well used g_object_bind_property() to create a lasting binding.</p>\r\n<p>GtkBuilder ui files <em>can</em> set up property bindings between objects, but there is one problem: The model item is not ‘present’ in the ui file, it only gets associated with the row widget later on, at “bind” time.</p>\r\n<p>This is where GtkExpression comes in. At its core, GtkExpression is a way to describe bindings between objects that don’t necessarily exist yet.  In our case, what we want to achieve is:</p>\r\n<pre>label-&gt;label = list_item-&gt;item-&gt;string</pre>\r\n<p>Unfortunately, this gets a little more clumsy when it is turned into xml as part of our ui file:</p>\r\n<pre>&lt;interface&gt;\r\n  &lt;template class=\"GtkListItem\"&gt;\r\n    &lt;property name=\"child\"&gt;\r\n      &lt;object class=\"GtkLabel\"&gt;\r\n        &lt;binding name=\"label\"&gt;\r\n          &lt;lookup name=\"string\"&gt;\r\n            &lt;lookup name=\"item\"&gt;GtkListItem&lt;/lookup&gt;\r\n          &lt;/lookup&gt;\r\n        &lt;/binding&gt;\r\n      &lt;/object&gt;\r\n    &lt;/property&gt;\r\n  &lt;/template&gt;\r\n&lt;/interface&gt;</pre>\r\n<p>Remember that the classname (GtkListItem) in a ui template is used as the “this” pointer referring to the object that is being instantiated.</p>\r\n<p>So, &lt;lookup name=”item”&gt;GtkListItem&lt;/lookup&gt; means: the value of the “item” property of the list item that is created. &lt;lookup name=”string”&gt; means: the “string” property of that object. And &lt;binding name=”label”&gt; says to set the “label” property of the widget to the value of that property.</p>\r\n<p>Due to the way expressions work, all of this will be reevaluated when the list item factory sets the “item” property on the list item to a new value, which is exactly what we need to make recycling of row widgets work.</p>\r\n<h3>Expert level confusion</h3>\r\n<p>GtkBuilderListItemFactory and GtkExpression can get <em>really </em>confusing when you nest things—list item factories can be constructed in ui files themselves, and they can get given their own ui files as a property, so you end up with constructions like</p>\r\n<pre>&lt;object class=\"GtkListView\"&gt;\r\n  &lt;property name=\"factory\"&gt;\r\n    &lt;object class=\"GtkBuilderListItemFactory\"&gt;\r\n      &lt;property name=\"bytes\"&gt;&lt;![CDATA[\r\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\r\n&lt;interface&gt;\r\n&lt;template class=\"GtkListItem\"&gt;\r\n  &lt;property name=\"child\"&gt;\r\n  ...\r\n]]&gt;\r\n      &lt;/property&gt;\r\n    &lt;/object&gt;\r\n  &lt;/property&gt;\r\n...</pre>\r\n<p>This can be confusing even to GTK experts.</p>\r\n<p>My advice would be avoid this—you don’t have to create the list item factory in the ui file, and you can specify its ui template as a resource instead of embedding it directly.</p>\r\n<h3>Going deeper</h3>\r\n<p>Everything we’ve described here today applies to grid views as well, with minimal adjustments.</p>\r\n<p>So far, we’ve focused on the view side of things. There’s a lot to say about models too.</p>\r\n<p>And then there is the column view, which deserves a post of its own.</p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Sat, 05 Sep 2020 03:25:28 +0000","feedId":10108,"bgimg":"https://blog.gtk.org/files/2020/09/listfill-1-e1599274641902.png","linkMd5":"a472788f48102c60055a8124bf5cd49c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn6@2020_1/2020/09/05/08-09-39-271_7f9830dd1ca9eefc.webp","destWidth":794,"destHeight":850,"sourceBytes":58890,"destBytes":23646,"author":"mclasen","articleImgCdnMap":{"https://blog.gtk.org/files/2020/09/listfill-1-e1599274641902.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn6@2020_1/2020/09/05/08-09-39-271_7f9830dd1ca9eefc.webp","https://blog.gtk.org/files/2020/09/listscroll-3-e1599274918924.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn86@2020_1/2020/09/05/08-09-50-655_1ad954d1d456daf5.webp"},"publishedOrCreatedDate":1599293378541},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"User-specific XKB configuration - putting it all together","link":"https://who-t.blogspot.com/2020/09/user-specific-xkb-configuration-putting.html","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>This is the continuation from these posts: <a href=\"https://who-t.blogspot.com/2020/02/user-specific-xkb-configuration-part-1.html\">part 1</a>, <a href=\"https://who-t.blogspot.com/2020/07/user-specific-xkb-configuration-part-2.html\">part 2</a>, <a href=\"https://who-t.blogspot.com/2020/08/user-specific-xkb-configuration-part-3.html\">part 3</a></p><p>This is the part where it all comes together, with (BYO) fireworks and confetti, champagne and hoorays. Or rather, this is where I'll describe <b>how</b> to actually set everything up. It's a bit  complicated because while libxkbcommon does the parsing legwork now, we haven't actually changed other APIs and the file formats which are still 1990s-style nerd cool and requires significant experience in CS [1] to understand what goes where. </p><p style=\"background-color: #ffdddd;\">The below relies on software using libxkbcommon and libxkbregistry. At the time of writing, libxkbcommon is used by all mainstream Wayland compositors but not by the X server. libxkbregistry is not yet used because I'm typing this before we had a release for it. But at least now I have a link to point people to. </p><p><strike>libxkbcommon has a <a href=\"https://github.com/xkbcommon/libxkbcommon/blob/master/tools/xkbcli-scaffold-new-layout.py\"><b>xkbcli-scaffold-new-layout</b></a> tool that</strike> The <a href=\"https://gitlab.freedesktop.org/whot/xkblayout\">xkblayout</a> tool creates the template files as shown below. At the time of writing, this tool must be run from the git repo build directory, it is not installed. </p><p>I'll explain here how to add the <b>us(banana)</b> variant <i>and</i> the <b>custom:foo</b> option, and I will optimise for simplicity and brevity. </p><h2>Directory structure</h2><p>First, create the following directory layout: </p><pre style=\"background-color: #ddffdd;\"><br />$ tree $XDG_CONFIG_HOME/xkb<br />/home/user/.config/xkb<br />├── compat<br />├── keycodes<br />├── rules<br />│   ├── evdev<br />│   └── evdev.xml<br />├── symbols<br />│   ├── custom<br />│   └── us<br />└── types<br /></pre>If <i>$XDG_CONFIG_HOME</i> is unset, fall back to <i>$HOME/.config</i>. <p /><h2>Rules files</h2><p>Create the rules file and add an entry to map our <b>custom:foo</b> option to a section in the <b>symbols/custom</b> file. </p><pre style=\"background-color: #ddffdd;\"><br />$ cat $XDG_CONFIG_HOME/xkb/rules/evdev<br />! option = symbols<br />  custom:foo = +custom(foo)<br /><br />// Include the system 'evdev' file<br />! include %S/evdev<br /></pre>Note that no entry is needed for the variant, that is handled by wildcards in the system rules file. If you only want a variant and no options, you technically don't need this rules file. <p /><p>Second, create the xml file used by <a href=\"https://who-t.blogspot.com/2020/07/user-specific-xkb-configuration-part-2.html\">libxkbregistry</a> to display your new entries in the configuration GUIs: </p><pre style=\"background-color: #ddffdd;\"><br />$ cat $XDG_CONFIG_HOME/xkb/rules/evdev.xml<br />&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;<br />&lt;!DOCTYPE xkbConfigRegistry SYSTEM \"xkb.dtd\"&gt;<br />&lt;xkbConfigRegistry version=\"1.1\"&gt;<br />  &lt;layoutList&gt;<br />    &lt;layout&gt;<br />      &lt;configItem&gt;<br />        &lt;name&gt;us&lt;/name&gt;<br />      &lt;/configItem&gt;<br />      &lt;variantList&gt;<br />        &lt;variant&gt;<br />          &lt;configItem&gt;<br />            &lt;name&gt;banana&lt;/name&gt;<br />            &lt;shortDescription&gt;banana&lt;/shortDescription&gt;<br />            &lt;description&gt;US(Banana)&lt;/description&gt;<br />          &lt;/configItem&gt;<br />        &lt;/variant&gt;<br />      &lt;/variantList&gt;<br />    &lt;/layout&gt;<br />  &lt;/layoutList&gt;<br />  &lt;optionList&gt;<br />    &lt;group allowMultipleSelection=\"true\"&gt;<br />      &lt;configItem&gt;<br />        &lt;name&gt;custom&lt;/name&gt;<br />        &lt;description&gt;custom options&lt;/description&gt;<br />      &lt;/configItem&gt;<br />      &lt;option&gt;<br />        &lt;configItem&gt;<br />          &lt;name&gt;custom:foo&lt;/name&gt;<br />          &lt;description&gt;This option does something great&lt;/description&gt;<br />        &lt;/configItem&gt;<br />      &lt;/option&gt;<br />    &lt;/group&gt;<br />  &lt;/optionList&gt;<br />&lt;/xkbConfigRegistry&gt;<br /></pre>Our variant needs to be added as a <b>layoutList/layout/variantList/variant</b>, the option to the <b>optionList/group/option</b>. libxkbregistry will combine this with the system-wide evdev.xml file in <i>/usr/share/X11/xkb/rules/evdev.xml</i>. <p /><h2>Overriding and adding symbols</h2><p>Now to the actual mapping. Add a section to each of the symbols files that matches the variant or option name: </p><pre style=\"background-color: #ddffdd;\"><br />$ cat $XDG_CONFIG_HOME/xkb/symbols/us<br />partial alphanumeric_keys modifier_keys<br />xkb_symbols \"banana\" {<br />    name[Group1]= \"Banana (us)\";<br /><br />    include \"us(basic)\"<br /><br />    key &lt;CAPS&gt; { [ Escape ] };<br />};<br /></pre>with this, the <b>us(banana)</b> layout will be a US keyboard layout but with the CapsLock key mapped to Escape. What about our option? Mostly the same, let's map the tilde key to nothing: <pre style=\"background-color: #ddffdd;\"><br />$ cat $XDG_CONFIG_HOME/xkb/symbols/custom<br />partial alphanumeric_keys modifier_keys<br />xkb_symbols \"foo\" {<br />    key &lt;TLDE&gt; { [ VoidSymbol ] };<br />};<br /></pre>A note here: <i>NoSymbol</i> means \"don't overwrite it\" whereas <i>VoidSymbol</i> is \"map to nothing\". <p /><h2>Notes</h2><p>You may notice that the variant and option sections are almost identical. XKB doesn't care about variants vs options, it only cares about components to combine. So the sections do what we expect of them: variants include enough other components to make them a full keyboard layout, options merely define a few keys so they can be combined with layouts(variants). Due to how the lookups work, you could load the option template as <i>layout</i> <b>custom(foo)</b>. </p><p>For the actual documentation of keyboard configuration, you'll need to google around, there are quite a few posts on how to map keys. All that has changed is where from and how things are loaded but not the actual data formats. </p><p>If you wanted to install this as system-wide custom rules, replace <i>$XDG_CONFIG_HOME</i> with <i>/etc</i>. </p><p>The above is a replacement for xmodmap. It does not require a script to be run manually to apply the config, the existing XKB integration will take care of it. It will work in Wayland (but as said above not in X, at least not for now). </p> <h2>A final word</h2><p>Now, I fully agree that this is cumbersome, clunky and feels outdated. This is easy to fix, all that is needed is for someone to develop a better file format, make sure it's backwards compatible with the full spec of the XKB parser (the above is a fraction of what it can do), that you can generate the old files from the new format to reduce maintenance, and then maintain backwards compatibility with the current format for the next ten or so years. Should be a good Google Decade of Code beginner project. </p><p><small>[1] Cursing and Swearing<br /></small></p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Tue, 01 Sep 2020 01:13:00 +0000","feedId":10108,"bgimg":"","linkMd5":"905682383cad596e4e558580e8cbe36b","bgimgJsdelivr":"","metaImg":"","author":"Peter Hutterer","publishedOrCreatedDate":1599293378536},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"GNOME Games: Final submission","link":"http://adwaitongnome.wordpress.com/?p=222","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>This post serves as a compilation of all the work I did during these past 3 months of Google Summer of Code 2020. </p>\r\n\r\n\r\n\r\n<h2>Work done</h2>\r\n\r\n\r\n\r\n<p><a href=\"https://gitlab.gnome.org/GNOME/gnome-games/-/merge_requests/396\">!369 (merged)</a>: Refactoring old code by making a new Core interface and <code>RetroCore</code> class. These are used to generalizes all interactions that are related to firmware. Where <code>RetroCore</code> is an implementation class of <code>Core</code> interface. <code>FirmwareManager</code> class is for organizing checksums verification through <code>Core</code>/<code>RetroCore</code> when a game requiring a firmware is run by the runner.</p>\r\n\r\n\r\n\r\n<p><a href=\"https://gitlab.gnome.org/GNOME/gnome-games/-/merge_requests/405\">!405 (merged)</a>: Made a <code>Firmware</code> interface and a <code>RetroFirmware</code> class that moves all the functions and information needed by firmware from <code>FirmareManager</code> to itself. By doing this, the <code>Core</code> interface is used to make firmware objects, <code>FirmwareManager</code> manages firmware objects, and the firmware object runs checksum verification and contains all information related to that firmware.</p>\r\n\r\n\r\n\r\n<p><a href=\"https://gitlab.gnome.org/GNOME/gnome-games/-/merge_requests/408\">!408</a>: Some minor changes to how checksum verification takes place to be more efficient. Added methods to <code>FirmwareManager</code> that handle addition and removal of firmware along with methods that listed all supported firmware and methods to check whether the file being added is a supported firmware or not.</p>\r\n\r\n\r\n\r\n<p><a href=\"https://gitlab.gnome.org/GNOME/gnome-games/-/merge_requests/411\">!411 (merged)</a>: Since both SHA-512 and MD5 checksums will be mandatory by a commit in <a href=\"https://gitlab.gnome.org/GNOME/gnome-games/-/merge_requests/408\">!408</a>, present core descriptor files needed to be updated to have both SHA-512 and MD5 checksums.</p>\r\n\r\n\r\n\r\n<p><a href=\"https://gitlab.gnome.org/GNOME/gnome-games/-/merge_requests/415\">!415</a>: Merge request with back-end code from <a href=\"https://gitlab.gnome.org/GNOME/gnome-games/-/merge_requests/408\">!408</a>, generalization of overlay in preferences page and the drag n drop widget. The need for an overlay generalization is to make it easier for each preferences page to add an overlay. This will be useful later when Firmware page is implemented, to show error messages and undo bar when adding or removing firmware. The reason why this merge request has back-end code is for proper functionality of the merge request on it’s own as the drag n drop widget uses the back-end code introduced in <a href=\"https://gitlab.gnome.org/GNOME/gnome-games/-/merge_requests/408\">!408</a>.</p>\r\n\r\n\r\n\r\n<p><a href=\"https://gitlab.gnome.org/GNOME/retro-gtk/-/merge_requests/89\">!89</a>: Merge request with the parser that reads firmware name from the core descriptor.</p>\r\n\r\n\r\n\r\n<h2>TODO</h2>\r\n\r\n\r\n\r\n<p>As the code will not be merged until 3.38 release, I just have to keep refining the back-end code and making the drag n drop experience smoother.</p>\r\n\r\n\r\n\r\n<p>As for firmware page, I have untracked Firmware Page UI, after the translation issue is resolved, and back-end code and the parser lands, a new merge request with the untracked files will be opened, after which <a href=\"https://gitlab.gnome.org/GNOME/gnome-games/issues/145\">#145</a> will be resolved and closed.</p>\r\n\r\n\r\n\r\n<h2>Closing thoughts</h2>\r\n\r\n\r\n\r\n<p>Google Summer of code was experience of a lifetime for me, being a student and getting a chance to work on open source and writing production level code. While working on my GSoC internship I learnt a lot. Working remotely on open source project taught me things like, time management, communication, git, open source workflow etc. </p>\r\n\r\n\r\n\r\n<p>These past 3 months have been quite hectic with working on my GSoC project while taking online classes, doing assignments and submitting reports. GSoC was a valuable experience for me as better time management means more productivity out of the same 24 hours without missing out on things.</p>\r\n\r\n\r\n\r\n<p>With summer ending and and summer vacations beginning, I would like to express gratitude to my mentor <a href=\"https://gitlab.gnome.org/exalm\">Alexander Mikhaylenko</a> (a.k.a @alexm a.k.a @exalm) for helping and guiding me this summer. Thank you.</p>\r\n\r\n\r\n\r\n<p>This GSoC was a big learning experience as it taught me data flow and code design, UI/UX, widget writing, CSS and finally ways to use git to ease workflow.</p>\r\n\r\n\r\n\r\n<p>I’ll try to keep posting, as I’ll still be working on GNOME Games and will probably look for more projects to work on later :^)</p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Sun, 30 Aug 2020 16:44:31 +0000","feedId":10108,"bgimg":"","linkMd5":"277722f834939616ada5eec857e206e4","bgimgJsdelivr":"","metaImg":"","author":"Adwait Rawat","publishedOrCreatedDate":1599293378538},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"GSoC Final Report of GNOME gitg Work","link":"https://medium.com/p/ebcf52450692","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Hi everyone, GSoC is coming to an end, and I’d like to present you with all the changes I’ve made so far on gitg.</p><p>I’ve learnt a lot while working on gitg, it’s really well-structured with a great architecture design. I didn’t have to refactor that much of code while extending it’s functionality, and I was amazed by how well-written and extendible it was.</p><h3>Blog Posts History</h3><p>All of the blogs can be found under my account on medium, here are links to them:-</p><ol><li><a href=\"https://medium.com/@mahmoudkhalil11/my-gsoc-proposal-got-accepted-for-gnome-ea13ec21bc20\">My GSoC Proposal Got Accepted For GNOME</a></li><li><a href=\"https://medium.com/@mahmoudkhalil11/back-on-track-ba8e04b5ae9e\">Back On Track</a></li><li><a href=\"https://medium.com/@mahmoudkhalil11/implementing-branches-comparison-on-gitg-81a2562d8126\">Implementing Branches Comparison on gitg</a></li></ol><h3>What Work Has Been Done?</h3><p>My project issue (you can see it <a href=\"https://gitlab.gnome.org/GNOME/gitg/-/issues/270\">here</a>), didn’t have a design proposal at first, so I had to try different implementations to see what would provide the best user experience.</p><p>So first, I created a prototype for selecting multiple commits in the History Activity and show the diff for them in the DiffView. I’ve created a MR for it, it didn’t and it shouldn’t be merged since I was just experimenting and trying to understand how gitg internal components/classes work. You can see a blog post about it <a href=\"https://medium.com/@mahmoudkhalil11/back-on-track-ba8e04b5ae9e\">here</a>.</p><p>Then I’ve contacted Tobias Bernard(GNOME Designer) to discuss with him different approaches to implement this features, and we agreed that it should be in a separate Activity that can be accessed only from the History Activity to make the user workflow easier.</p><p>So I’ve made a second MR where I implemented all of the Project’s Goals, and it became fully functional. In this MR, I’ve created a new Compare Activity, where it implements two important features: comparing branches, and comparing any two selected commits from any two branches. You can also see a blog post about it <a href=\"https://medium.com/@mahmoudkhalil11/implementing-branches-comparison-on-gitg-81a2562d8126\">here</a></p><h3>What Has Been Merged?</h3><p>Nothing have been merged yet, I’m waiting my mentor’s review and feedback, so that we can re-work and optimize parts that need more work</p><h3>Deliverables, Work Details and Links</h3><h4>Prototype: Compare Two Non-Consecutive Commits</h4><p>Regarding the prototype code, I’ve created a MR for it on gitg.<br />Here’s the MR: <a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/153\">Compare Two Non-Consecutive Commits</a></p><p>Here is the complete work I’ve done on that prototype with links to it’s commits:-</p><ol><li>Adding multiple selection to the History Activity CommitListView (<a href=\"https://gitlab.gnome.org/GNOME/gitg/-/commit/e9835559bdfb76b3226502ce005a9c665464d5eb?merge_request_iid=153\">Commit Link</a>)</li><li>Refactoring History Activity to support the multiple selection functionality (<a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/153/diffs?commit_id=04a4bd4c2c8631a4c50112d04b668c6c50070fed\">Commit Link</a>)</li><li>extending Gitg.Commit class to get diff with another commit object passed to it (<a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/153/diffs?commit_id=0286ec88d73d24b8165f4660746c248784f83edc\">Commit Link</a>)</li><li>creating a new class that manages inserting/clearing commit from the DiffView (<a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/153/diffs?commit_id=ca07a2185001b01c778d406fe6d9af753b5190b7\">Commit Link</a>)</li><li>refactoring DiffView and Diff to use the newly created class (<a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/153/diffs?commit_id=c11411a992901309f78ff6d15f5d1654d5655795\">Commit Link</a>)</li></ol><p>In this MR, I’ve tried extending the GitgCommitListView to support selecting multiple commits, refactored History Activity to support the new selection functionality, and refactored both DiffPlugin and DiffView to support multiple selection and showing the “diff” between them.</p><h4>Final Project: Extending `gitg` with a new Compare Activity That Supports Comparing Branches/Commits</h4><p>Regarding the Final Project, I’ve created a MR for it on gitg.<br />Here’s the MR: <a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/156\">Creates A New Compare Activity That Handles Comparing Between Two Different Branches/Commits</a></p><p>The complete list of work is also written on the MR, this just lists the work done with the corresponding links to commits.</p><p>This MR, as previously mentioned, creates a new Compare Activity in gitg.</p><p>Inside the Compare Activity, three views are implemented:-</p><ol><li>MainView, in which the users will be able to select different branches</li><li>BranchView, in which will be shown the difference of commits between the two selected branches in a GitgCommitListView</li><li>CommitsView, in which will be shown the two branches' commits, where users will be able to select two commits to compare, each from different branch.</li></ol><p>I had to extend the backend as well as create the new Activity on the frontend, so here is the work done on the backend so far:-</p><ol><li>extending libgitg with a new Popover to list the available branches (<a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/156/diffs?commit_id=5dc465d8c4b29c135500e02cbc22067431beb5af\">Commit Link</a>)</li><li>modifying GitgCommitModel to be able to share the same RevisionWalker across different models (<a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/156/diffs?commit_id=5c172cce71a7e227a5cc482d983a1e05aa0f58ee\">Commit Link</a>)</li><li>GitgDiffView updates the diff on Idle, which will enhance the responsiveness of the application in case of huge diff between two commits (<a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/156/diffs?commit_id=e8186875a8f6c699175644bced3729669b90fef5\">Commit Link</a>)</li><li>adding new GitgRefActionCompare which if selected, will set the selected branch as one of the branches to be compared automatically, then make a transition to the Compare Activity (<a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/156/diffs?commit_id=2b3137767b6831e3fcb580cff8a26fafae90e4ac\">Commit Link</a>)</li></ol><p>Here is the work done on the frontend so far:-</p><ol><li>decide what’s the best way to implement it, whether to share the same RevisionWalker, or to create two models for the two branches with different RevisionWalker (I had to try it myself to see if there were any impact on the performance, here’s my work on a side <a href=\"https://gitlab.gnome.org/mahmoudkhalil11/revision-walker\">pet-project</a>. Also I had to ask on Stack Overflow to get a proper feedback and opinion on what would be the best option, here’s the <a href=\"https://stackoverflow.com/questions/63245260/best-way-to-read-a-repository-multiple-times-at-the-same-time-using-libgit2-per\">link</a> of my question)</li><li>create the MainView of the Compare Activity (<a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/156/diffs?commit_id=5caf47165441d19680a39c166d220b337f03d7bd\">Commit Link</a>)</li><li>Show a message to users on the MainView if the selected repository was a bare one (<a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/156/diffs?commit_id=715f8080e7b0305233dc8a72a4c4748adac2c10f\">Commit Link</a>)</li><li>create a BranchView, where comparison between branches is shown, e.g. Gitlab, and Github (<a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/156/diffs?commit_id=9fc4079e081786e9634b62c53527be8686f3742f\">Commit Link</a>)</li><li>create a CommitsView, where comparison between two different commits from different/same branch is shown (<a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/156/diffs?commit_id=4aaf3fd368a8c1f50e51b4433ccd134b70e8247c\">Commit Link</a>)</li><li>reload Compare Activity whenever there is a change in the repository, or new commits added (<a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/156/diffs?commit_id=673316ebc4aa9a7abf87369c55769c77e5671585\">Commit Link</a>)</li></ol><h3>What’s Left To Do?</h3><p>Most of the things that I planned to do, has been already implemented on the Final Project MR, ready to be reviewed by my mentor Alberto Fanjul so that we can rework the necessary parts, if needed.</p><h3>Future Plans</h3><p>I’m planning to improve the DiffView of gitg to improve showing “diffs” since it may introduce some lagging on the UI if the “diff” between two commits was huge. I’ll work with my mentor (Alberto Fanjul) to refactor it and see what we can do to improve it’s performance.</p><p>Also I’m planning on continuing my work on an old MR for the “highlighting changes within lines” feature, here’s it <a href=\"https://gitlab.gnome.org/GNOME/gitg/-/merge_requests/145\">link</a></p><h3>Challenges and Learnings</h3><p>I’ve enjoyed working on gitg a lot, it has been challenging for me to understand the details of certain implementations in the program. Also gitg is a complex project, so it was hard at first to get the grasp of the code, to browse the code efficiently, and to understand why a certain functionality is implemented in that way. However, I really learned and enjoyed reading, and challenging myself into understanding certain aspects of the code on my own, and I feel that this skill has really improved since then.</p><p>Since gitg is a git client application, so of course it’ll improve my “git” skills, also I’ve been learned more about Flatpak Packaging and the Meson Build System.</p><p>Overall it was an eye-opening experience, where I learnt a lot and it was really a great opportunity to see and learn how professional open-source applications are being developed.</p><img height=\"1\" src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=ebcf52450692\" width=\"1\" /></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Mon, 31 Aug 2020 08:48:25 +0000","feedId":10108,"bgimg":"","linkMd5":"5566ea52d0d327852e285e8a75646968","bgimgJsdelivr":"","metaImg":"","author":"Mahmoud Ahmed Khalil","articleImgCdnMap":{"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=ebcf52450692":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn78@2020_5/2020/09/05/08-09-50-271_d63aabd26a7bf278.webp"},"publishedOrCreatedDate":1599293378537},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"First Lenovo laptop with Fedora now available on the web!","link":"https://blogs.gnome.org/uraeus/?p=9632","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>This weekend the <a href=\"https://www.lenovo.com/us/en/laptops/thinkpad/thinkpad-x1/X1-Carbon-Gen-8-/p/22TP2X1X1C8\">X1 Carbon with Fedora Workstation went live in North America on Lenovos webstore</a>. This is a big milestone for us and for Lenovo as its the first time Fedora ships pre-installed on a laptop from a major vendor and its the first time the worlds largest laptop maker ships premium laptops with Linux directly to consumers. Currently only the X1 Carbon is available, but more models is on the way and more geographies will get added too soon. As a sidenote, the X1 Carbon and more has actually been available from Lenovo for a couple of Months now, it is just the web sales that went online now. So if you are a IT department buying Lenovo laptops in bulk, be aware that you can already buy the X1 Carbon and the P1 for instance through the direct to business sales channel. </p>\r\n<p>Also as a reminder for people looking to deploy Fedora laptops or workstations in numbers, be sure to check out <a href=\"https://fleet-commander.org/\">Fleet Commander</a> our tool for helping you manage configurations across such a fleet.</p>\r\n<p>I am very happy with the work that has been done here to get to this point both by Lenovo and from the engineers on my team here at Red Hat. For example Lenovo made sure to get all of their component makers to ramp up their Linux support and we have been working with them to both help get them started writing drivers for Linux or by helping add infrastructure they could plug their hardware into. We also worked hard to get them all set up on the Linux Vendor Firmware Service so that you could be assured to get updated firmware not just for the laptop itself, but also for its components.</p>\r\n<p>We also have a list of improvements that we are working on to ensure you get the full benefit of your new laptops with Fedora and Lenovo, including working on things like improved power management features being able to have power consumption profiles that includes a high performance mode for some laptops that will allow it to run even faster when on AC power and on the other end a low power mode to maximize battery life. As part of that we are also working on adding lap detection support, so that we can ensure that you don’t risk your laptop running to hot in your lap and burning you or that radio antennas are running to strong when that close to your body.</p>\r\n<p>So I hope you decide to take the leap and get one of the great developer laptops we are doing together with Lenovo. This is a unique collaboration between the worlds largest laptop maker and the worlds largest Linux company. What we are doing here isn’t just a minimal hardware enablement effort, but a concerted effort to evolve Linux as a laptop operating system and doing it in a proper open source way. So this is the culmination of our work over the last few years, creating the LVFS, adding Thunderbolt support to Linux, improving fingerprint reader support in Linux, supporting HiDPI screens, supporting hidpi mice, creating the possibility of a secure desktop with Wayland, working with NVidia to ensure that Mesa and Nvidia driver can co-exist through glvnd, creating Flatpak to ensure we can bring the advantages of containers to the desktop space and at the same way do it in a vendor neutral way. So when you buy a Lenovo laptop with Fedora Workstation, you are not just getting a great system, but you are also supporting our efforts to take Linux to the next level, something which I think we are truly the only linux vendor with the scale and engineering ability to do.</p>\r\n<p>Of course we are not stopping here, so let me also use this chance to talk a bit about some of our other efforts.</p>\r\n<p><b>Toolbox</b><br />\r\nContainers are popular for deploying software, but a lot of people are also discovering now that they are an incredible way to develop software, even if that software is not going to be deployed as a Flatpak or Kubernetes container. The term often used for containers when used as a development tool is pet containers and with <a href=\"https://docs.fedoraproject.org/en-US/fedora-silverblue/toolbox/\">Toolbox project</a> we are aiming to create the best tool possible for developers to work with pet containers. Toolbox allows you to have always have a clean environment to work in which you can change to suit each project you work on, however you like, without affecting your host system. So for instance if you need to install a development snapshot of Python you can do that inside your Toolbox container and be confident that various other parts of your desktop will not start crashing due to the change. And when your are done with your project and don’t want that toolbox around anymore you can easily delete it without having to spend time to figure out which packages you installed can now be safely uninstalled from your host system or just not bother and have your host get bloated over time with stuff you are not actually using anymore.</p>\r\n<p>One big advantage we got at Red Hat is that we are a major contributor to container technologies across the stack. We are a major participant in the Open Container Initiative and we are alongside Google the biggest contributor to the <a href=\"https://kubernetes.io/\">Kubernetes project</a>. This includes having created a set of container tools called <a href=\"https://podman.io/\">Podman</a>. So when we started prototyping Toolbox we could base it up on podman and get access to all the power and features that podman provides, but at the same make them easier to use and consumer from your developer laptop or workstation.</p>\r\n<p>Our initial motivation was also driven by the fact that for image based operating systems like Fedora Silverblue and Fedora CoreOS, where the host system is immutable you still need some way to be able to install packages and do development, but we quickly realized that the pet container development model is superior to the old ‘on host’ model even if you are using a traditional package based system like Fedora Workstation. So we started out by prototyping the baseline functionality, writing it as a shell script to quickly test out our initial ideas. Of course as Toolbox picked up in popularity we realized we needed to transition quickly to a proper development language so that we wouldn’t end up with an unmaintainable mess written in shell, and thus Debarshi Ray and Ondřej Míchal has recently completed the rewrite to Go (Note: the choice of Go was to make it easier for the wider container community to contribute since almost all container tools are written in Go). </p>\r\n<p>Leading up towards Fedora Workstation 33 we are trying figure out a few things. One is how we can make giving you access to a RHEL based toolbox through the Red Hat Developer Program in an easy and straightforward manner, and this is another area where pet container development shines. You can set up your pet container to run a different Linux version than your host. So you can use Fedora to get the latest features for your laptop, but target RHEL inside your Toolbox to get an easy and quick deployment path to your company RHEL servers. I would love it if we can extend this even further as we go along, to for instance let you set up a Steam runtime toolbox to do game development targeting Steam.<br />\r\nSetting up a RHEL toolbox is already technically possible, but requires a lot more knowledge and understanding of the underlaying technologies than we wish.<br />\r\nThe second thing we are looking at is how we deal with graphical applications in the context of these pet containers. The main reason we are looking at that is because while you can install for instance Visual Studio code inside the toolbox container and launch it from the command line, we realize that is not a great model for how you interact with GUI applications. At the moment the only IDE that is set up to be run in the host, but is able to interact with containers properly is <a href=\"https://wiki.gnome.org/Apps/Builder\">GNOME Builder</a>, but we realize that there are a lot more IDEs people are using and thus we want to try to come up with ways to make them work better with toolbox containers beyond launching them from the command line from inside the container. There are some extensions available for things like Visual Studio Code starting to try to improve things (those extensions are not created by us, but looking at solving a similar problem), but we want to see how we can help providing a polished experience here. Over time we do believe the pet container model of development is so good that most IDEs will follow in GNOME Builders footsteps and make in-container development a core part of the feature set, but for now we need to figure out a good bridging strategy. </p>\r\n<p><b>Wayland – headless and variable refresh rate.</b><br />\r\nSince switching to Wayland we have continued to work in improving how GNOME work under Wayland to remove any major feature regressions from X11 and to start taking advantage of the opportunities that Wayland gives us. One of the last issues that Jonas Ådahl has been hard at work recently is trying to ensure we have headless support for running GNOME on systems without a screen. We know that there are a lot of sysadmins for instance who want to be able to launch a desktop session on their servers to be used as a tool to test and debug issues. These desktops are then accessed through tools such as VNC or <a href=\"https://download.nice-dcv.com/\">Nice DCV</a>. As part of that work he also made sure we could deal with having multiple monitors connected which had different refresh rates. Before that fix you would get the lowest common denominator between your screens, but now if you for instance got a 60Hz monitor and a 75Hz monitor they will be able to function independent of each other and run at their maximum refresh rate. With the variable refresh rate work now landed upstream Jonas is racing to get the headless support finished and landed in time for Fedora Workstation 33.</p>\r\n<p><b>Linux Vendor Firmware Service</b><br />\r\nRichard Hughes is continuing his work on moving the LVFS forward having spent time this cycle working with the Linux Foundation to ensure the service can scale even better. He is also continuously onboarding new vendors and helping existing vendors use LVFS for even more things. We are now getting reports that LVFS has become so popular that we are now getting reports of major hardware companies who up to know hasn’t been to interested in the LVFS are getting told by their customers to start using it or they will switch supplier. So expect the rapid growth of vendors joining the LVFS to keep increasing. It is also worth nothing that many of vendors who are already set up on LVFS are steadily working on increasing the amount of systems they support on it and pushing their suppliers to do the same. Also for enterprise use of LVFS firmware Marc Richter also wrote an <a href=\"https://access.redhat.com/articles/5215571\">article on access.redhat.com about how to use LVFS with Red Hat Satelitte</a>. Satellite for those who don’t know it is Red Hats tool for managing and keeping servers up to date and secure. So for large companies having their machines, especially servers, accessing LVFS directly is not a wanted behaviour, so now they can use Satelitte to provide a local repository of the LVFS firmware.</p>\r\n<p><b>PipeWire</b><br />\r\nOne of the changes we been working on that I am personally extremely excited about is <a />PipeWire. For those of you who don’t know it, PipeWire is one of our major swamp draining efforts which aims to bring together audio, pro-audio and video under linux and provide a modern infrastructure for us to move forward. It does so however while being ABI compatible with both Jack and PulseAudio, meaning that applications will not need to be ported to work with PipeWire. We have been using it for a while for video already to handle screen capture under Wayland and for allowing Flatpak containers access to webcams in a secure way, but <a href=\"https://twitter.com/wtaymans\">Wim Taymans</a> has been working tirelessly on moving that project forward over the last 6 Months, focused a lot of fixing corner cases in the Jack support and also ramping up the PulseAudio support. We had hoped to start wide testing in Fedora Workstation 32 of the audio parts of PipeWire, but we decided that since such a key advantage that PipeWire brings is not just to replace Jack or PulseAudio, but also to ensure the two usecases co-exist and interact properly, we didn’t want to start asking people to test until we got the PulseAudio support close to being production ready. Wim has been making progress by leaps and bounds recently and while I can’t 100% promise it yet we do expect to roll out the audio bits of PipeWire for more widescale testing in Fedora Workstation 33 with the goal of making it the default for Fedora Workstation 34 or more likely Fedora Workstation 35.<br />\r\nWim is doing an internal demo this week, so I will try to put out a blog post talking about that later in the week.</p>\r\n<p><b>Flatpak – incremental updates</b><br />\r\nOne of the features we added to Flatpaks was the ability to distribute them as Open Container Initiative compliant containers. The reason for this was that as companies, Red Hat included, built infrastructure for hosting and distributing containers we could also use that for Flatpaks. This is obviously a great advantage for a variety of reasons, but it had one large downside compared to the traditional way of distributing Flatpaks (as Ostree images) which is that each update comes as a single large update as opposed to the atomic update model that OStree provides.<br />\r\nWhich is why if you would compare the same application when shipping from Flathub, which uses Ostree, versus from the Fedora container registry, you would quickly notice that you get a lot smaller updates from Flathub. For kubernetes containers this hasn’t been considered a huge problem as their main usecase is copying the containers around in a high-speed network inside your cloud provider, but for desktop users this is annoying. So <a href=\"https://twitter.com/gnomealex\">Alex Larsson</a> and <a href=\"https://blog.fishsoup.net/\">Owen Taylor</a> has been working on coming up with a way to do to incremental updates for OCI/Docker/Kubernetes containers too, which not only means we can get very close to the Flathub update size in the Fedora Container Catalog, but it also means that since we implemented this in a way that works for all OCI/Kubernetes containers you will be able to get them too with incremental update functionality. Especially as such containers are making their way into edge computing where update sizes do matter, just like they do on the desktop.</p>\r\n<p><b>Hangul input under Wayland</b><br />\r\nRed Hat, like Lenovo, targets most of the world with our products and projects. This means that we want them to work great even for people who doesn’t use English or another European language. To achieve this we have a team dedicated to ensuring that not just Linux, but all Red Hat products work well for international users as part of my group at Red Hat. That team, lead by <a href=\"https://twitter.com/juhp\">Jens Petersen</a>, is distributed around the globe with engineers in Japan, China, India, Singapore and Germany. This team contributes to a lot of different things like font maintenance, input method development, i18n infrastructure and more.<br />\r\nOne thing this team recently discovered was that the support for Korean input under Wayland. So Peng Wu, Takao Fujiwara and Carlos Garnacho worked together to come up with a series of patches for ibus and GNOME Shell to ensure that Fedora Workstation on Wayland works perfectly for Korean input. I wanted to highlight this effort because while I don’t usually mention efforts which such a regional impact in my blog posts it is a critical part of keeping Linux viable and usable across the globe. And ensuring that you can use your computer in your own language is something we feel is important and want to enable and also an area where I believe Red Hat is investing more than any other vendor out there.</p>\r\n<p><b>GLX on EGL</b><br />\r\nWe meet with NVidia on a regular basis to discuss topics of shared interest and one thing we been looking at for a while now is the best way to support Nvidia binary driver under XWayland. As part of that <a href=\"https://twitter.com/nwnk\">Adam Jackson</a> has been working on a research project to see how feasible it would be to create a way to run GLX applications on top of EGL. As one might imagine EGL doesn’t have a 1to1 match with GLX APIs, but based on what we seen so far is that it should be close enough to get things going (Adam already got glxgears running :). The goal here would be to have an initial version that works ok, and then in collaboration with NVidia we can evolve it to be a great solution for even the most demanding OpenGL/GLX applications. Currently the code causes an extra memcopy compared to running on GLX native, but this is something we think can be resolved in collaboration with NVidia. Of course this is still an early stage effort and Adam and NVidia are currently looking at it so there is of course a chance still we will hit a snag and have to go back to the drawing board. For those interested you can take a look at this <a href=\"https://gitlab.freedesktop.org/mesa/mesa/-/merge_requests/6429\">Mesa merge request</a> to see the current state.</p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Mon, 31 Aug 2020 16:27:17 +0000","feedId":10108,"bgimg":"","linkMd5":"0f61af4a3dd960927d19d3fce8434e6c","bgimgJsdelivr":"","metaImg":"","author":"uraeus","publishedOrCreatedDate":1599293378536},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"PipeWire Late Summer Update 2020","link":"https://blogs.gnome.org/uraeus/?p=9686","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p /><div class=\"wp-caption alignnone\" id=\"attachment_9709\" style=\"width: 310px;\"><a href=\"https://blogs.gnome.org/uraeus/files/2020/09/wimtaymans.png\"><img alt=\"Wim Taymans\" class=\"size-medium wp-image-9709\" height=\"170\" src=\"https://blogs.gnome.org/uraeus/files/2020/09/wimtaymans-300x170.png\" width=\"300\" /></a><p class=\"wp-caption-text\" id=\"caption-attachment-9709\">Wim Taymans talking about current state of PipeWire</p></div><br />\r\n<a href=\"https://twitter.com/wtaymans\">Wim Taymans</a> did an internal demonstration yesterday for the desktop team at Red Hat of the current state of <a href=\"http://www.pipewire.org\">PipeWire</a>. For those still unaware PipeWire is our effort to bring together audio, video and pro-audio under Linux, creating a smooth and modern experience.  Before PipeWire there was PulseAudio for consumer audio, Jack for Pro-audio and just unending pain and frustration for video. PipeWire is being done with the aim of being ABI compatible with ALSA, PulseAudio and JACK, meaning that PulseAudio and Jack apps should just keep working on top of Pipewire without the need for rewrites (and with the same low latency for JACK apps). <p />\r\n<p>As Wim reported yesterday things are coming together with both the PulseAudio, Jack and ALSA backends being usable if not 100% feature complete yet. Wim has been running his system with Pipewire as the only sound server for a while now and things are now in a state where we feel ready to ask the wider community to test and help provide feedback and test cases. </p>\r\n<div class=\"wp-caption alignnone\" id=\"attachment_9718\" style=\"width: 410px;\"><a href=\"https://blogs.gnome.org/uraeus/files/2020/09/carlaandpipewirehydrogen.png\"><img alt=\"Carla on PipeWire\" class=\"size-medium wp-image-9718\" height=\"209\" src=\"https://blogs.gnome.org/uraeus/files/2020/09/carlaandpipewirehydrogen-300x209.png\" width=\"300\" /></a><p class=\"wp-caption-text\" id=\"caption-attachment-9718\" />\r\n<p>Carla running on PipeWire</p>\r\n<p /></div>\r\n<p><a href=\"https://kx.studio/Applications:Carla\">Carla</a> as shown above is a popular Jack applications and it provides among other things this patchbay view of your audio devices and applications. I recommend you all to click in and take a close look at the screenshot above. That is the Jack application Carla running and as you see PulseAudio applications like GNOME Settings and Google Chrome are also showing up now thanks to the unified architecture of PipeWire, alongside Jack apps like Hydrogen. All of this without any changes to Carla or any of the other applications shown.</p>\r\n<p>At the moment Wim is primarily testing using <a href=\"https://wiki.gnome.org/Apps/Cheese\">Cheese</a>, GNOME Control center, Chrome, Firefox, <a href=\"https://ardour.org/\">Ardour</a>, Carla, vlc, mplayer, totem, mpv, <a href=\"https://kx.studio/Applications:Catia\">Catia</a>, pavucontrol, paman, <a href=\"https://qsynth.sourceforge.io/\">qsynth</a>, <a href=\"https://www.zrythm.org/en/index.html\">zrythm</a>, <a href=\"https://tytel.org/helm/\">helm</a>, <a href=\"https://flathub.org/apps/details/com.spotify.Client\">Spotify</a> and <a href=\"https://calf-studio-gear.org/\">Calf Studio Gear</a>. So these are the applications you should be getting the most mileage from when testing, but most others should work too.</p>\r\n<p>Anyway, let me quickly go over some of the highlight from Wim’s presentation.</p>\r\n<p><b>Session Manager</b></p>\r\n<p>\r\nPipeWire now has a functioning session manager that allows for things like</p>\r\n<ul>\r\n<li>Metadata, system for tagging objects with properties, visible to all clients (if permitted)</li>\r\n<li>Load and save of volumes, automatic routing</li>\r\n<li>Default source and sink with metadata, saved and loaded as well</li>\r\n<li>Moving streams with metadata</li>\r\n</ul>\r\n<p>Currently this is a simple sample session manager that Wim created himself, but we also have a more advanced session manager called <a href=\"https://www.collabora.com/news-and-blog/blog/2020/05/07/wireplumber-the-pipewire-session-manager/\">Wireplumber</a> being developed by Collabora, which they developed for use in automotive Linux usecases, but which we will probably be moving to over time also for the desktop.</p>\r\n<p><b>Human readable handling of Audio Devices</b></p>\r\n<p>Wim took the code and configuration data in Pulse Audio for <a href=\"https://gitlab.freedesktop.org/wtaymans/alsa-card-profile\">ALSA Card Profiles and created a standalone library</a> that can be shared between PipeWire and PulseAudio. This library handles ALSA sound card profiles, devices, mixers and UCM (use case manager used to configure the newer audio chips (like the <a href=\"https://www.lenovo.com/us/en/laptops/thinkpad/thinkpad-x1/X1-Carbon-Gen-8-/p/22TP2X1X1C8\">Lenovo X1 Carbon</a>) and lets PipeWire provide the correct information to provide to things like GNOME Control Center or pavucontrol. Using the same code as has been used in PulseAudio for this has the added benefit that when you switch from PulseAudio to PipeWire your devices don’t change names. So everything should look and feel just like PulseAudio from an application perspective. In fact just below is a screenshot of pavucontrol, the Pulse Audio mixer application running on top of Pipewire without a problem.</p>\r\n<div class=\"wp-caption alignnone\" id=\"attachment_9737\" style=\"width: 310px;\"><a href=\"https://blogs.gnome.org/uraeus/files/2020/09/pavucontrol.png\"><img alt=\"PulSe Audio Mixer\" class=\"size-medium wp-image-9737\" height=\"259\" src=\"https://blogs.gnome.org/uraeus/files/2020/09/pavucontrol-300x259.png\" width=\"300\" /></a><p class=\"wp-caption-text\" id=\"caption-attachment-9737\">Pavucontrol, the Pulse Audio mixer on Pipewire</p></div>\r\n<p><b>Creating audio sink devices with Jack</b><br />\r\nPipewire now allows you to create new audio sink devices with Jack. So the example command below creates a Pipewire sink node out of calfjackhost and sets it up so that we can output for instance the audio from Firefox into it. At the moment you can do that by running your Jack apps like this:<br />\r\n<code><br />\r\nPIPEWIRE_PROPS=\"media.class=Audio/Sink\" calfjackhost<br />\r\n</code><br />\r\nBut eventually we hope to move this functionality into the GNOME Control Center or similar so that you can do this setup graphically. The screenshot below shows us using CalfJackHost as an audio sink, outputing the audio from Firefox (a PulseAudio application) and CalfJackHost generating an analyzer graph of the audio.<br />\r\n</p><div class=\"wp-caption alignnone\" id=\"attachment_9743\" style=\"width: 310px;\"><a href=\"https://blogs.gnome.org/uraeus/files/2020/09/calfpipewiressink.png\"><img alt=\"Calfjackhost on pipewire\" class=\"size-medium wp-image-9743\" height=\"188\" src=\"https://blogs.gnome.org/uraeus/files/2020/09/calfpipewiressink-300x188.png\" width=\"300\" /></a><p class=\"wp-caption-text\" id=\"caption-attachment-9743\">The CalfJackhost being used as an audio sink for Firefox</p></div><p />\r\n<p><b>Creating devices with GStreamer</b><br />\r\nWe can also use <a href=\"https://gstreamer.freedesktop.org/\">GStreamer</a> to create PipeWire devices now. The command belows take the popular Big Buck Bunny animation created by the great folks over at Blender and lets you set it up as a video source in PipeWire. So for instance if you always wanted to play back a video inside Cheese for instance, to apply the Cheese effects to it, you can do that this way without Cheese needing to change to handle video playback. As one can imagine this opens up the ability to string together a lot of applications in interesting ways to achieve things that there might not be an application for yet. Of course application developers can also take more direct advantage of this to easily add features to their applications, for instance I am really looking forward to something like <a href=\"https://obsproject.com/\">OBS Studio</a> taking full advantage of PipeWire.<br />\r\n<code><br />\r\ngst-launch-1.0 uridecodebin uri=file:///home/wim/data/BigBuckBunny_320x180.mp4 ! pipewiresink mode=provide stream-properties=\"props,media.class=Video/Source,node.description=BBB\"<br />\r\n</code><br />\r\n</p><div class=\"wp-caption alignnone\" id=\"attachment_9751\" style=\"width: 310px;\"><a href=\"https://blogs.gnome.org/uraeus/files/2020/09/cheeseandpipewire.png\"><img alt=\"Cheese paying a video through pipewire\" class=\"size-medium wp-image-9751\" height=\"190\" src=\"https://blogs.gnome.org/uraeus/files/2020/09/cheeseandpipewire-300x190.png\" width=\"300\" /></a><p class=\"wp-caption-text\" id=\"caption-attachment-9751\">Cheese playing a video provided by GStreamer through PipeWire.</p></div><p />\r\n<p><b>How to get started testing PipeWire</b><br />\r\nOk, so after seeing all of this you might be thinking, how can I test all of this stuff out and find out how my favorite applications work with PipeWire? Well first thing you should do is make sure you are running <a href=\"https://getfedora.org/en/workstation/download/\">Fedora Workstation</a> 32 or later as that is where we are developing all of this. Once you done that you need to make sure you got all the needed pieces installed:<br />\r\n<code><br />\r\nsudo dnf install pipewire-libpulse pipewire-libjack pipewire-alsa<br />\r\n</code><br />\r\nOnce that dnf command finishes you run the following to get PulseAudio replaced by PipeWire. </p>\r\n<p><code><br />\r\ncd /usr/lib64/                                                                  </code></p><code>\r\n<p>sudo ln -sf  pipewire-0.3/pulse/libpulse-mainloop-glib.so.0 /usr/lib64/libpulse-mainloop-glib.so.0.999.0<br />\r\nsudo ln -sf  pipewire-0.3/pulse/libpulse-simple.so.0 /usr/lib64/libpulse-simple.so.0.999.0<br />\r\nsudo ln -sf  pipewire-0.3/pulse/libpulse.so.0 /usr/lib64/libpulse.so.0.999.0    </p>\r\n<p>sudo ln -sf  pipewire-0.3/jack/libjack.so.0 /usr/lib64/libjack.so.0.999.0<br />\r\nsudo ln -sf  pipewire-0.3/jack/libjacknet.so.0 /usr/lib64/libjacknet.so.0.999.0<br />\r\nsudo ln -sf  pipewire-0.3/jack/libjackserver.so.0 /usr/lib64/libjackserver.so.0.999.0</p>\r\n</code><p><code>sudo ldconfig<br />\r\n</code><br />\r\n(you can also find those commands <a href=\"https://gitlab.freedesktop.org/pipewire/pipewire/-/snippets/1165\">here</a></p>\r\n<p>Once you run these commands you should be able to run<br />\r\n<code><br />\r\npactl info<br />\r\n</code><br />\r\nand see this as the first line returned:<br />\r\nServer String: pipewire-0</p>\r\n<p>I do recommend rebooting, to be 100% sure you are on a PipeWire system with everything outputting through PipeWire. Once that is done you are ready to start testing!</p>\r\n<p>Our goal is to use the remainder of the Fedora Workstation 32 lifecycle and the Fedora Workstation 33 lifecycle to stabilize and finish the last major features of PipeWire and then start relying on it in Fedora Workstation 34. So I hope this article will encourage more people to get involved and join us on gitlab and on the PipeWire IRC channel at #pipewire on Freenode.</p>\r\n<p>As we are trying to stabilize PipeWire we are working on it on a bug by bug basis atm, so if you end up testing out the current state of PipeWire then be sure to report issues back to us through the <a href=\"https://gitlab.freedesktop.org/pipewire/pipewire/-/issues\">PipeWire issue tracker</a>, but do try to ensure you have a good test case/reproducer as we are still so early in the development process that we can’t dig into ‘obscure/unreproducible’ bugs.</p>\r\n<p>Also if you want/need to go back to PulseAudio you can run the commands <a href=\"https://gitlab.freedesktop.org/pipewire/pipewire/-/snippets/1164\">here</a></p>\r\n<p>Also if you just want to test a single application and not switch your whole system over you should be able to do that by using the following commands:<br />\r\n<code><br />\r\npw-pulse<br />\r\n</code><br />\r\nor<br />\r\n<code><br />\r\npw-jack<br />\r\n</code></p>\r\n<p><b>Next Steps</b><br />\r\nSo what are our exact development plans at this point? Well here is a list in somewhat priority order:</p>\r\n<ol>\r\n<li>Stabilize – Our top priority now is to make PipeWire so stable that the power users that we hope to attract us our first batch of users are comfortable running PipeWire as their only audio server. This is critical to build up a userbase that can help us identify and prioritize remaining issues and ensure that when we do switch Fedora Workstation over to using PipeWire as the default and only supported audio server it will be a great experience for users.</li>\r\n<li>Jackdbus – We want to implement support for the jackdbus API soon as we know its an important feature for the <a href=\"https://labs.fedoraproject.org/en/jam/\">Fedora Jam</a> folks. So we hope to get to this in the not to distant future</li>\r\n<li>Flatpak portal for JACK/audio applications – The future of application packaging is Flatpaks and being able to sandbox Jack applications properly inside a Flatpak is something we want to enable.</li>\r\n<li>Bluetooth – Bluetooth has been supported in PipeWire from the start, but as Wims focus has moved elsewhere it has gone a little stale. So we are looking at cycling back to it and cleaning it up to get it production ready. This includes proper support for things like LDAC and AAC passthrough, which is currently not handled in PulseAudio. Wim hopes to push an updated PipeWire in Fedora out next week which should at least get Bluetooth into a basic working state, but the big fix will come later.</li>\r\n<li>Pulse effects – Wim has looked at this, but there are some bugs that blocks data from moving through the pipeline.</li>\r\n<li>Latency compensation – We want complete latency compensation implemented. This is not actually in Jack currently, so it would be a net new feature.</li>\r\n<li>Network audio – PulseAudio style network audio is not implemented yet.</li>\r\n</ol></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Fri, 04 Sep 2020 16:47:52 +0000","feedId":10108,"bgimg":"","linkMd5":"86224592dd6a07de1d86c1ea19d116bf","bgimgJsdelivr":"","metaImg":"","author":"uraeus","articleImgCdnMap":{"https://blogs.gnome.org/uraeus/files/2020/09/wimtaymans-300x170.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn74@2020_2/2020/09/05/08-09-50-699_cea3f3af605b92f5.webp","https://blogs.gnome.org/uraeus/files/2020/09/carlaandpipewirehydrogen-300x209.png":null,"https://blogs.gnome.org/uraeus/files/2020/09/pavucontrol-300x259.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn21@2020_5/2020/09/05/08-09-50-507_6dd57fecbf3fa6ce.webp","https://blogs.gnome.org/uraeus/files/2020/09/calfpipewiressink-300x188.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn29@2020_2/2020/09/05/08-09-50-577_14808b5d1a4136a7.webp","https://blogs.gnome.org/uraeus/files/2020/09/cheeseandpipewire-300x190.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn69@2020_2/2020/09/05/08-09-51-432_10e99e593ad00acf.webp"},"publishedOrCreatedDate":1599293378535},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"What’s new with Glade","link":"https://blogs.gnome.org/xjuan/?p=5662","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>It’s been a long time since my last post. After doing the last major UI rework which included a new workflow and the use of a headerbar instead of a menu bar I had little free time to work on the project.</p>\r\n<p>Early this year while on quarantine and in between jobs I started working on things I been wanting to but did not had the time</p>\r\n<h2>Fix Glade Survey</h2>\r\n<p>On January the GNOME infrastructure was migrated to a new server which broke a small web service running at https://people.gnome.org/~jpu/ used to collect Glade’s survey data.</p>\r\n<p>They also added surveys.gnome.org to conduct any GNOME related surveys making my custom service redundant.</p>\r\n<p>So in order to properly fix the survey I made Glade act like a browser and post the data directly to surveys.gnome.org, no need to open a browser!</p>\r\n<p><a href=\"https://blogs.gnome.org/xjuan/files/2020/08/survey.png\"><img alt=\"\" class=\"alignnone wp-image-5668 size-full\" height=\"744\" src=\"https://blogs.gnome.org/xjuan/files/2020/08/survey.png\" width=\"854\" /></a>This means Glade has to download the survey form, parse it to extract a session token and send it as a cookie for it to work!</p>\r\n<h2>JavaScript support</h2>\r\n<p>A few years ago while working at Endless Mobile I started adding support for JavaScript widgets since we had several widgets implemented in GJS.</p>\r\n<p>Unfortunately back then a really obscure bug made GJS crash so I never added support for JS in Glade. To my surprise this time around GJS did not crash, at least not on Wayland which led me to find a workaround on X11 and move on</p>\r\n<p>So in order for glade to support your JavaScript widgets you will have to:</p>\r\n<ul>\r\n<li>specify gladegjs support code as your plugin library.</li>\r\n<li>set glade_gjs_init as you init function.</li>\r\n<li>make sure your catalog name is the same as your JavaScript import library since<br />\r\nglade_gjs_init() will use this name to import your widgets into the<br />\r\ninterpreter.</li>\r\n</ul>\r\n<p>gjsplugin.xml</p>\r\n<pre>&lt;glade-catalog name=\"gjsplugin\" library=\"gladegjs\"\r\n               domain=\"glade\" depends=\"gtk+\"&gt;\r\n  &lt;init-function&gt;glade_gjs_init&lt;/init-function&gt;\r\n\r\n  &lt;glade-widget-classes&gt;\r\n    &lt;glade-widget-class title=\"MyJSGrid\" name=\"MyJSGrid\"\r\n                        generic-name=\"mygrid\"/&gt;\r\n  &lt;/glade-widget-classes&gt;\r\n\r\n  &lt;glade-widget-group name=\"gjs\" title=\"Gjs\"&gt;\r\n    &lt;glade-widget-class-ref name=\"MyJSGrid\"/&gt;\r\n  &lt;/glade-widget-group&gt;\r\n&lt;/glade-catalog&gt;</pre>\r\n<p>gjsplugin.js</p>\r\n<pre>const GObject = imports.gi.GObject;\r\nconst Gtk = imports.gi.Gtk;\r\n\r\nvar MyJSGrid = GObject.registerClass({\r\n  GTypeName: 'MyJSGrid',\r\n  Properties: {\r\n    'string-property': GObject.ParamSpec.string('string-property',\r\n      'String Prop',\r\n      'Longer description',\r\n      GObject.ParamFlags.READWRITE | GObject.ParamFlags.CONSTRUCT,\r\n      'Foobar'),\r\n    'int-property': GObject.ParamSpec.int('int-property',\r\n      'Integer Prop',\r\n      'Longer description',\r\n      GObject.ParamFlags.READWRITE | GObject.ParamFlags.CONSTRUCT,\r\n      0, 10, 5)\r\n    },\r\n  Signals: {'mysignal': {param_types: [GObject.TYPE_INT]}},\r\n}, class MyJSGrid extends Gtk.Grid {\r\n  _init(props) {\r\n    super._init(props);\r\n    this.label = new Gtk.Label ({ visible: true });\r\n    this.add (this.label);\r\n    this.connect('notify::string-property',\r\n                 this._update.bind(this));\r\n    this.connect('notify::int-property',\r\n                 this._update.bind(this));\r\n    this._update();\r\n  }\r\n  _update (obj, pspec) {\r\n    this.label.set_text ('JS Properties\\nInteger = ' + \r\n                         this.int_property + '\\nString = \\'' +\r\n                         this.string_property + '\\'');\r\n  }\r\n});</pre>\r\n<p>Save these files in a directory added as extra catalog path in the preferences dialog, restart and you should have the new JS classes ready to use.</p>\r\n<h2><a href=\"https://blogs.gnome.org/xjuan/files/2020/08/gjs_support.gif\"><img alt=\"\" class=\"alignnone size-full wp-image-5684\" height=\"407\" src=\"https://blogs.gnome.org/xjuan/files/2020/08/gjs_support.gif\" width=\"678\" /></a></h2>\r\n<h2>Composite templates improvements</h2>\r\n<p>So far the only way to add custom widgets to glade is by writing a catalog which can be tedious so probably not a feature used by most people.</p>\r\n<p>So to make things easier I made Glade load any template file saved in any extra catalog path automatically.</p>\r\n<p>This means all you have to do to is:</p>\r\n<ol>\r\n<li>Create your composite template as usual</li>\r\n<li>Save it on a directory</li>\r\n<li>Add the directory to the “Extra Catalog &amp; Templates paths” in preferences</li>\r\n<li>And use your new composite type!</li>\r\n</ol>\r\n<p><a href=\"https://blogs.gnome.org/xjuan/files/2020/08/glade_templates.gif\"><img alt=\"\" class=\"alignnone size-full wp-image-5687\" height=\"407\" src=\"https://blogs.gnome.org/xjuan/files/2020/08/glade_templates.gif\" width=\"678\" /></a></p>\r\n<p>This features will be included in the next stable release, and are already available in nightly flatpak (<a href=\"https://wiki.gnome.org/Apps/Nightly\">wiki instructions</a>)</p>\r\n<h2>Better deprecations checks</h2>\r\n<p>Glade started before GObject introspection so it keeps version and deprecation information in its catalog files which makes it hard to keep it in sync with Gtk. There was also no way to specify in which Gtk version a property or signal was deprecated.</p>\r\n<p>Unfortunately even tough all this metadata is extracted and stored in Gir files it is not available in typelib which makes using libgirepository not an option for Glade instead I decided to make a small script that will take all this information from Gir files and update Glade’s catalog directly making maintaining versioning information way easier!</p>\r\n<p>This means that Glade should catch almost all deprecations and version mismatches even if you are not targeting the latest Gtk version.</p>\r\n<p>Enjoy!</p>\r\n<p>Juan Pablo</p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Fri, 04 Sep 2020 00:21:11 +0000","feedId":10108,"bgimg":"https://blogs.gnome.org/xjuan/files/2020/08/survey.png","linkMd5":"dcfe3383b8246e04773bad0a1d4d66ee","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn14@2020_6/2020/09/05/08-09-39-272_e9763179b22d59fb.webp","destWidth":854,"destHeight":744,"sourceBytes":203981,"destBytes":35868,"author":"xjuan","articleImgCdnMap":{"https://blogs.gnome.org/xjuan/files/2020/08/survey.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn14@2020_6/2020/09/05/08-09-39-272_e9763179b22d59fb.webp","https://blogs.gnome.org/xjuan/files/2020/08/gjs_support.gif":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn42@2020_1/2020/09/05/08-09-53-858_f3e7858997ca6aae.webp","https://blogs.gnome.org/xjuan/files/2020/08/glade_templates.gif":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn54@2020_5/2020/09/05/08-10-00-620_1ab57aca89ad7fdb.webp"},"publishedOrCreatedDate":1599293378535},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"GSoC final report!","link":"https://www.clarissaborges.com/2020/08/30/gsoc-final-report","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><h2 id=\"my-project\">My project</h2>\r\n<p>My project consisted of building a UI library for the GNOME web ecosystem. GNOME has many websites (<a href=\"https://www.clarissaborges.com/2020/08/30/gnome.org\">gnome.org</a>, <a href=\"https://www.clarissaborges.com/2020/08/30/extensions.gnome.org/\">extensions.gnome.org</a>, <a href=\"https://www.clarissaborges.com/2020/08/30/discourse.gnome.org/\">discourse.gnome.org</a>, <a href=\"https://www.clarissaborges.com/2020/08/30/planet.gnome.org/\">planet.gnome.org</a>, <a href=\"https://www.clarissaborges.com/2020/08/30/developer.gnome.org/\">developer.gnome.org</a>, <a href=\"https://www.clarissaborges.com/2020/08/30/surveys.gnome.org/\">surveys.gnome.org</a> and many others, but, currently, they don’t have a consistent design between each other. The GNOME UI library then comes with those main following goals:</p>\r\n\r\n<ul>\r\n  <li>Keep a consistent look between the GNOME websites;</li>\r\n  <li>Ease the development and increase the maintainability of the websites, once the developers responsible for them won’t have to spend a lot of time designing;</li>\r\n  <li>Refresh the GNOME websites look.</li>\r\n</ul>\r\n\r\n<p>I started the project with an assessment of the current state of GNOME. I worked on an inventory of the main GNOME websites, where I had to find and research, for each website:</p>\r\n\r\n<ul>\r\n  <li>Who is responsible for it;</li>\r\n  <li>In which platform it runs;</li>\r\n  <li>Theme information (does it use a theme? Is it extended from some framework like bootstrap?);</li>\r\n  <li>Who is the website target audience;</li>\r\n  <li>What are the website goals;</li>\r\n  <li>Which visual elements draw more of the attention.</li>\r\n</ul>\r\n\r\n<p>I wrote the inventory on issues so it is documented to be used as a reference later on the project. <a href=\"https://gitlab.gnome.org/Teams/Engagement/websites/general-website-resources/-/issues?scope=all&amp;utf8=%E2%9C%93&amp;state=closed&amp;label_name[]=Inventory\">Inventories</a>:</p>\r\n\r\n<ul>\r\n  <li><a href=\"https://gitlab.gnome.org/Teams/Engagement/websites/general-website-resources/-/issues/1\">Main GNOME Website</a></li>\r\n  <li><a href=\"https://gitlab.gnome.org/Teams/Engagement/websites/general-website-resources/-/issues/2\">GNOME Extensions</a></li>\r\n  <li><a href=\"https://gitlab.gnome.org/Teams/Engagement/websites/general-website-resources/-/issues/3\">Events Portal</a></li>\r\n  <li><a href=\"https://gitlab.gnome.org/Teams/Engagement/websites/general-website-resources/-/issues/4\">Planet</a></li>\r\n  <li><a href=\"https://gitlab.gnome.org/Teams/Engagement/websites/general-website-resources/-/issues/5\">Discourse</a></li>\r\n  <li><a href=\"https://gitlab.gnome.org/Teams/Engagement/websites/general-website-resources/-/issues/6\">Developer Center</a></li>\r\n  <li><a href=\"https://gitlab.gnome.org/Teams/Engagement/websites/general-website-resources/-/issues/7\">Surveys</a></li>\r\n  <li><a href=\"https://gitlab.gnome.org/Teams/Engagement/websites/general-website-resources/-/issues/8\">Wiki</a></li>\r\n</ul>\r\n\r\n<p>After the inventory, I started working on an evaluation of the website components and elements: how do they look like now, how should they look like, fonts, spaces, and, meanwhile, I created some mockups for them on <a href=\"https://www.figma.com/files/project/10093619/WWW\">Figma</a> to help me build the project. The Figma project is not an official source, I used it as a tool for helping me with the designs.</p>\r\n\r\n<p>Just like the inventory, the evaluations are placed on <a href=\"https://gitlab.gnome.org/Teams/Engagement/websites/general-website-resources/-/issues?scope=all&amp;utf8=%E2%9C%93&amp;state=all&amp;label_name[]=Evaluation\">issues</a> as well. Between the evaluation issues, there is one especially describing the research I worked on to <a href=\"https://gitlab.gnome.org/Teams/Engagement/websites/general-website-resources/-/issues/15\">decide on which library the project would extend from</a>. In conclusion, I chose the <a href=\"https://tailwindcss.com/\">Tailwind</a> utility-first CSS framework. In parallel with the evaluation and design, I created with my mentor, Claudio Wunder, the project configuration for the library.</p>\r\n\r\n<p>I coded preflight setups: typography and colors and basic components/ elements: inputs, buttons, and cards. Tailwind helps a lot with spacing, accessibility classes, flex, grid, and other basics :D To place the project documentation, I configured a Jekyll project and my mentor helped me to configure a GitLab CI to have the project documentation placed at <a href=\"https://teams.pages.gitlab.gnome.org/Engagement/websites/general-website-resources/\">Gitlab Pages</a>, which holds every component, configuration, element, etc that is already merged to master. The work I did is on the <a href=\"https://gitlab.gnome.org/Teams/Engagement/websites/general-website-resources\">GNOME General Website Resources repository</a> (on issues, MRs and code as well, me and my mentor were the only authors in the project).</p>\r\n\r\n<p>Last but not least, during the project the GSoC and Outreachy interns had the opportunity to give a small talk on GUADEC - the main GNOME conference - and it was an enthusiastic way of sharing about our projects and contributions!</p>\r\n\r\n<h2 id=\"what-were-the-challenges\">What were the challenges</h2>\r\n<ul>\r\n  <li><strong>Project requirements</strong>: Besides having some knowledge about usability, that diverges a lot from knowing how to design stuff and what I should look at on the current design to improve on the UI library. I struggled very much with the inventory and the evaluation parts, and my lack of knowledge about this messed up with my confidence in the project.</li>\r\n  <li><strong>Project set up</strong>: It was very hard to find references about how to proceed to create a UI library extended from Tailwind. It took me a few days (maybe more than a week) experimenting stuff and project configurations to find the best approach, and yet, I couldn’t find it myself. Thankfully, Claudio helped me with that and the project was now moving forward.</li>\r\n</ul>\r\n\r\n<h2 id=\"work-in-progress-and-future-steps\">Work in progress and future steps</h2>\r\n<p>The whole GNOME UI library project is still is far from over. I’m happy to continue the project and count on other contributors interested in helping the project to happen! For now, those are some of the missing parts of the project:</p>\r\n<ul>\r\n  <li>Finishing the basic library elements and components, like\r\n    <ul>\r\n      <li>Tables</li>\r\n      <li>Lists</li>\r\n      <li>Alerts</li>\r\n    </ul>\r\n  </li>\r\n  <li>Publishing it into a CDN to be used on the websites</li>\r\n  <li>Create Platform-Specific Frameworks</li>\r\n</ul>\r\n\r\n<h2 id=\"conclusion\">Conclusion</h2>\r\n<p>I’m very happy to be given the opportunity of working with GNOME once again. Even having a lot of work to be done before using the project in real life, I feel fulfilled with the work I’ve done, and I want very much to continue in the project as much and as often as I can.</p>\r\n\r\n<p>I want to thank my mentors, Claudio Wunder, Caroline Henriksen and Britt Yazel, for being so patient to me and for their help whenever I needed. I hope we can still work together on this project and other opportunities!</p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Sun, 30 Aug 2020 23:00:00 +0000","feedId":10108,"bgimg":"","linkMd5":"ececf9dca3de2c6d9655173da273578b","bgimgJsdelivr":"","metaImg":"","author":"Clarissa Borges","publishedOrCreatedDate":1599293378538},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"Shelved Wallpapers 2","link":"http://jimmac.musichall.cz/blog/2020-09-01-shelved-wallpapers-2/","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Yet <a href=\"http://jimmac.musichall.cz/../2018-02-12-shelved-wallpapers\">again</a> the iterations to produce the <a href=\"https://gitlab.gnome.org/GNOME/gnome-backgrounds\">default and complimentary wallpapers</a> for 3.38 generated some variants that didn’t make the cut, but I’d like to share with fellow gnomies.</p>\r\n\r\n<p /><p class=\"image nogap\">\r\n<a href=\"http://jimmac.musichall.cz/stuff/stripes/\" /></p><a href=\"http://jimmac.musichall.cz/stuff/stripes/\">\r\n\r\n<div class=\"image full\">\r\n      <img alt=\"\" src=\"http://jimmac.musichall.cz/feed.xml/index/thumb.jpg\" />\r\n    </div>\r\n\r\n</a><p><a href=\"http://jimmac.musichall.cz/stuff/stripes/\" /></p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Tue, 01 Sep 2020 11:37:00 +0000","feedId":10108,"bgimg":"http://jimmac.musichall.cz/feed.xml/index/thumb.jpg","linkMd5":"f0989f90411c73cacaed05c415398f4f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","sourceBytes":0,"destBytes":0,"author":"Article Author","articleImgCdnMap":{"http://jimmac.musichall.cz/feed.xml/index/thumb.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg"},"publishedOrCreatedDate":1599293378536},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"GStreamer 1.18 supports the Universal Windows Platform","link":"http://blog.nirbheek.in/2020/08/gstreamer-118-supports-universal.html","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><div>tl;dr: The upcoming GStreamer 1.18 release will ship with UWP support out of the box, and there will be official gstreamer binary releases for it. Try out the <a href=\"https://gstreamer.freedesktop.org/data/pkg/windows/1.17.90/uwp/\" target=\"_blank\">1.17.90 pre-release</a> and let us know how it goes! There's also an <a href=\"https://gitlab.freedesktop.org/seungha.yang/gst-uwp-example\" target=\"_blank\">example gstreamer app for UWP</a> that showcases OpenGL support (via ANGLE), audio/video capture, hardware codecs, and WebRTC.</div><div><br /></div><div><h3 style=\"text-align: left;\">Short History Lesson</h3></div><div> </div><div>Last year at the <a href=\"https://gstreamer.freedesktop.org/conference/2019/\" target=\"_blank\">GStreamer Conference in Lyon</a>, I <a href=\"https://gstconf.ubicast.tv/videos/gstreamer-windows-uwp-and-firefox-on-the-hololens-2/\" target=\"_blank\">gave a talk</a> (<a href=\"https://gstreamer.freedesktop.org/data/events/gstreamer-conference/2019/Nirbheek%20Chauhan%20-%20GStreamer,%20Windows%20UWP,%20and%20Firefox%20on%20the%20HoloLens%202.pdf\" target=\"_blank\">slides</a>) about how â€œFirefox Realityâ€� for the Microsoft <a href=\"https://en.wikipedia.org/wiki/HoloLens_2\" target=\"_blank\">HoloLens 2</a> mixed-reality headset is actually <a href=\"https://servo.org/\" target=\"_blank\">Servo</a>, and it uses GStreamer for all media handling: WebAudio, HTML5 Video, and WebRTC.</div><div><br /></div><div>I also spoke about  the work we at <a href=\"https://www.centricular.com/\" target=\"_blank\">Centricular</a> did to port GStreamer to the HoloLens 2. The HoloLens 2 uses the new development target for Windows Store apps: the <a href=\"https://en.wikipedia.org/wiki/Universal_Windows_Platform\" target=\"_blank\">Universal Windows Platform</a>. The majority of win32 APIs have been deprecated, and apps have to use the new <a href=\"https://en.wikipedia.org/wiki/Windows_Runtime\" target=\"_blank\">Windows Runtime</a>, which is a language-agnostic API written from the ground up.<br /></div><div><br /></div><div>So the majority of work went into making sure that Win32 code didn't use deprecated APIs (we used a bunch of them!), and making sure that we could build using the UWP toolchain. Most of that involved two components:<br /></div><div><ul style=\"text-align: left;\"><li><a href=\"https://gitlab.gnome.org/GNOME/glib\" target=\"_blank\">GLib</a>, a cross-platform low-level library / abstraction layer used by GNOME (almost all our win32 code is in here)  </li><li><a href=\"https://gitlab.freedesktop.org/gstreamer/cerbero/\" target=\"_blank\">Cerbero</a>, the build aggregator used by GStreamer to build binaries for all platforms supported: Android, iOS, Linux, macOS, Windows (MSVC, MinGW, UWP)</li></ul><div>The target was to port the core of GStreamer, and those plugins with external dependencies that were needed to do playback in <code>&lt;audio&gt;</code> and <code>&lt;video&gt;</code> tags. This meant that the only external plugin dependency we needed was FFmpeg, for the gst-libav plugin. All this went well, and <a href=\"https://www.microsoft.com/en-us/p/firefox-reality/9npq78m7nb0r\" target=\"_blank\">Firefox Reality successfully shipped</a> with that work.</div><div><br /></div><div><h3 style=\"text-align: left;\">Upstreaming and WebRTC</h3></div><div> </div><div>Building upon that work, for the past few months we've been working on adding support for <a href=\"http://blog.nirbheek.in/feeds/posts/default/-/blog.nirbheek.in/2018/02/gstreamer-webrtc.html\" target=\"_blank\">the WebRTC plugin</a>, and also upstreaming as much of the work as possible. This involved a bunch of pieces:</div><div><ol style=\"text-align: left;\"><li>Use only OpenSSL and not GnuTLS in Cerbero because OpenSSL supports targeting UWP. This also had the advantage of moving us from two SSL stacks to one. </li><li>Port a <a href=\"https://github.com/cisco/libsrtp/pull/495\" target=\"_blank\">bunch</a> of <a href=\"https://github.com/cisco/openh264/pull/3301\" target=\"_blank\">external</a> optional <a href=\"https://gitlab.xiph.org/xiph/opus/-/merge_requests/13\" target=\"_blank\">dependencies</a> to Meson so that they could be built with Meson, which is the easiest way for a cross-platform project to support UWP. If  your Meson project builds on Windows, it will  build on UWP  with minimal or no build changes.</li><li>Rebase the GLib patches that I didn't find the time to upstream last year on top of 2.62, split into smaller pieces that will be easier to upstream, update for new Windows SDK changes, remove some of the hacks, and so on.</li><li>Rework and rewrite the Cerbero patches I wrote last year that were in no shape to be upstreamed.</li><li>Ensure that our OpenGL support continues to work using <a href=\"https://www.nuget.org/packages/ANGLE.WindowsStore.Servo/\" target=\"_blank\">Servo's ANGLE UWP port</a><br /></li><li>Write a new plugin for audio capture called wasapi2, great work by <a href=\"https://medium.com/@seungha.yang\" target=\"_blank\">Seungha Yang</a>.</li><li>Write a new plugin for video capture called mfvideosrc as part of the media foundation plugin which is new in GStreamer 1.18, also by Seungha.<br /></li><li>Write <a href=\"https://gitlab.freedesktop.org/seungha.yang/gst-uwp-example\" target=\"_blank\">a new example UWP app</a> to test all this work, <i>also</i> done by Seungha! ğŸ˜„</li><li>Run the app through the Windows App Certification Kit<br /></li></ol><div>And <a href=\"https://gitlab.freedesktop.org/groups/gstreamer/-/merge_requests?scope=all&amp;utf8=%E2%9C%93&amp;state=merged&amp;label_name[]=UWP\" rel=\"nofollow\" target=\"_blank\">several miscellaneous tasks and bugfixes</a> that we've lost count of.<br /></div><div><br /></div><div>Our highest priority this time around was making sure that everything can be upstreamed to GStreamer, and it was quite a success! Everything needed for WebRTC support on UWP has been merged, and you can use GStreamer in your UWP app by downloading the official GStreamer binaries starting with the 1.18 release.</div><div><br /></div><div>On top of everything in the above list, thanks to Seungha, GStreamer on UWP now also supports:</div><div><ol style=\"text-align: left;\"><li><a href=\"https://medium.com/@seungha.yang/bringing-microsoft-media-foundation-to-gstreamer-27b1316351ee\" target=\"_blank\">Hardware-accelerated encoding via Mediafoundation</a></li><li><a href=\"https://medium.com/@seungha.yang/windows-dxva2-via-direct3d-11-support-in-gstreamer-1-17-1837ecc1691a\" target=\"_blank\">Hardware-accelerated decoding via D3D11/DXVA2</a> </li></ol><p><br /></p></div><div><h3>Try it out!<br /></h3></div><div> </div><div>The <a href=\"https://gitlab.freedesktop.org/seungha.yang/gst-uwp-example\" target=\"_blank\">example gstreamer app</a> I mentioned above showcases all this. Go check it out, and don't forget to read <a href=\"https://gitlab.freedesktop.org/seungha.yang/gst-uwp-example#example-app-for-using-gstreamer-on-uwp\" target=\"_blank\">the README file</a>!</div><div> </div><div style=\"text-align: left;\"><h3>Next Steps</h3></div><div><div> </div><div>The most important next step is  to upstream as many of the <a href=\"https://gitlab.freedesktop.org/gstreamer/cerbero/-/blob/7ce7caaa6f8e315573110f5ab796c19884d44303/recipes/glib.recipe#L138\" rel=\"nofollow\" target=\"_blank\">GLib patches we worked on as possible</a>, and then spend time porting a bunch of GLib APIs that we currently stub out when building for UWP.<br /></div><div><br /></div><div>Other than that,  <a href=\"https://gitlab.freedesktop.org/gstreamer/cerbero/-/issues/286\" target=\"_blank\">enabling gst-libav</a> is also an interesting task since it will allow apps to use FFmpeg software codecs in their gstreamer UWP app. People should  use the hardware accelerated d3d11 decoders and mediafoundation encoders for optimal power consumption and performance, but sometimes it's not possible because codec support is very device-dependent. </div><div><br /></div><div><div style=\"text-align: left;\"><h3>Parting Thoughts<br /></h3></div></div></div><div> </div><div>I'd like to thank Mozilla for sponsoring the bulk of this work. We at Centricular greatly value partners that understand the importance of working with upstream projects, and it has been excellent working with the Servo team members, particularly <a href=\"https://twitter.com/lastontheboat\" target=\"_blank\">Josh Matthews</a>, <a href=\"https://twitter.com/asajeffrey\" target=\"_blank\">Alan Jeffrey</a>, and <a href=\"https://twitter.com/ManishEarth/\" target=\"_blank\">Manish Goregaokar</a>.<br /></div><div><br /></div><div>In the second week of August, <a href=\"https://blog.mozilla.org/blog/2020/08/11/changing-world-changing-mozilla/\" target=\"_blank\">Mozilla restructured</a> and the Servo team was one of the teams that was dissolved. I wish them all the best in their future endeavors, and I can't wait to see what they work on next. <a href=\"https://talentdirectory.mozilla.org/\" target=\"_blank\">They're all brilliant people</a>.</div><div><br /></div><div>Thanks to the forward-looking and community-focused approach of the Servo team, I am confident that <a href=\"https://github.com/servo/servo/discussions/27575\" target=\"_blank\">the project will figure things out</a> to forge its own way forward, and for the same reason, I expect that GStreamer's UWP support will continue to grow.<br /></div></div></div></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Mon, 31 Aug 2020 17:08:00 +0000","feedId":10108,"bgimg":"","linkMd5":"9d30989ba33e188fe0f1d31fa344db6e","bgimgJsdelivr":"","metaImg":"","author":"Nirbheek","publishedOrCreatedDate":1599293378536},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"Streaming your desktop","link":"http://siliconislandblog.wordpress.com/?p=857","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Changes are risky, taking on a new role on a new company with people you never worked before, growing a whole org from scratch is hard work that comes with a lot of uncertainties. When I decided that I wanted to try something new and join Amazon to work on the new Kindle site in Madrid I knew that it was a leap of faith. I’ve met amazing people and I’ve learned a lot about why Amazon is so successful as a consumer focused company, this is the first time I’ve joined a company to work on closed source software full time and that change has taken a bigger toll that I anticipated, so for a while I’ve been looking for a change. Dealing with this on top of raising a 2 year old while moving cities plus the COVID19 lockdown hasn’t made things any easier for me and my family either.</p>\r\n\r\n\r\n\r\n<figure class=\"wp-block-image size-large is-resized\"><img alt=\"\" height=\"204\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Amazon_Web_Services_Logo.svg/500px-Amazon_Web_Services_Logo.svg.png\" width=\"341\" /></figure>\r\n\r\n\r\n\r\n<p><br />Luckily I didn’t have to look much further, when I mentioned to <a href=\"https://blogs.gnome.org/nacho/author/nacho/\">Nacho Casal</a> from gedit/GtkSourceView fame that I was looking into something different he mentioned that the <a href=\"https://aws.amazon.com/es/hpc/dcv/\">NICE DCV team within AWS HPC</a> org was looking for an engineering manager. Suffice to say, I did the interviews, they went well and since mid August I’ve been part of this amazing team. I am peer with Paolo Borelli and I report to Paolo Maggi both from GNOME/gedit/GtkSourceView fame. And to add the cherry on top my skip level manager is Ian Cole from Inktank’s fame and also an ex-RedHatter. The team has made me feel at home.</p>\r\n\r\n\r\n\r\n<p>DCV is a propietary remote desktop solution optimized for high resolution and low latency usecases, it is an amazing piece of technology and it is the most competitive remote desktop protocol for the Linux desktop. It builds upon many GNOME tecnologies like GTK for our Linux/Windows/macOS clients, GStreamer and recently the team has been making inroads into adopting Rust. Stack wise this is a very exciting job for me as it touchs pretty much all the areas I care about and they do their best to <a href=\"https://github.com/aws/dcv-color-primitives\">open source stuff when they can</a>.<br /><br />The scope of my team is going to cover mostly the customer facing deliverables such as the clients, packaging and other release process duties. However I will be coordinating upstream contributions as well which is pretty exciting, I am looking forward to work on Wayland integration and other GTK niceties as priority allows. The team understands the importance on investing in the sustainability of the FOSS projects we rely on and I want to make sure that is the case.</p>\r\n\r\n\r\n\r\n<p>Happy hacking!</p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Sat, 05 Sep 2020 00:05:48 +0000","feedId":10108,"bgimg":"https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Amazon_Web_Services_Logo.svg/500px-Amazon_Web_Services_Logo.svg.png","linkMd5":"c17f9f9ecfcf81784ba34be262cd0658","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn9@2020_1/2020/09/05/08-09-38-915_85db82c6b09f2871.webp","destWidth":500,"destHeight":299,"sourceBytes":22310,"destBytes":18432,"author":"Alberto Ruiz","articleImgCdnMap":{"https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Amazon_Web_Services_Logo.svg/500px-Amazon_Web_Services_Logo.svg.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn9@2020_1/2020/09/05/08-09-38-915_85db82c6b09f2871.webp"},"publishedOrCreatedDate":1599293378535},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"GTK 3.99.1","link":"http://blog.gtk.org/?p=8308","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>It has been a month since we released GTK 3.99, high time for another snapshot. Here it is: <a href=\"https://download.gnome.org/sources/gtk/3.99/gtk-3.99.1.tar.xz\">https://download.gnome.org/sources/gtk/3.99/gtk-3.99.1.tar.xz </a></p>\r\n<p>This snapshot is focused on polish and completion.</p>\r\n<h3>Loose ends</h3>\r\n<p>We’ve tied up a number of loose ends in our APIs.</p>\r\n<p>The most user-visible change was probably the simplification of the button class hierarchy. Instead of deriving GtkCheckButton from GtkToggleButton, they are now two independent widgets, and they both can be grouped to be mutually exclusive (aka as “radio group”). In this new setup, GtkRadioButton is not really needed anymore, and therefore gone.</p>\r\n<p>The API of our new list widgets (GtkListView and GtkGridView) has seen some small tweaks as well. We are now explicitly requiring the models to be of type GtkSelectionModel, to make it clear that the widgets handle selections.  And we’ve gotten rid of the extra “with_factory” constructors, and just take a nullable factory argument in new(), leaving us with</p>\r\n<pre>GtkWidget * gtk_list_view_new (GtkSelectionModel  *model,\r\n                               GtkListItemFactory *factory);</pre>\r\n<p>As more of an  API cleanup, we’ve dropped all the defines for CSS style classes – which style classes our widgets support is defined in their documentation, and these extra defines were not really well-defined or useful.</p>\r\n<p>Our theme is now rounding the corners of the frame that is drawn by GtkFrame widgets. This required us to make frames clip their children – not really an API change, but a behavior change that is worth mentioning.</p>\r\n<h3>More demos</h3>\r\n<p>A lot of effort has gone into gtk4-demo over the past month.</p>\r\n<p>We have modernized the source code highlighting. We are now using the highlight commandline utility. Among other things, this allows us to have syntax highlighting for xml and css, as well as dark theme support.</p>\r\n<figure class=\"wp-caption aligncenter\" id=\"attachment_8324\" style=\"width: 837px;\"><a href=\"https://blog.gtk.org/files/2020/09/dark-highlight.png\"><img alt=\"Highlighting XML in a dark theme\" class=\"wp-image-8324 size-full\" height=\"679\" src=\"https://blog.gtk.org/files/2020/09/dark-highlight.png\" width=\"837\" /></a><figcaption class=\"wp-caption-text\" id=\"caption-attachment-8324\">Highlighting</figcaption></figure>\r\n<p>The list of demos has better filtering and a better appearance. The new look is one of a few predefined <a href=\"https://gnome.pages.gitlab.gnome.org/-/gtk/-/jobs/884610/artifacts/_reference/gtk/ListContainers.html#list-styles\">list styles</a> that Adwaita supports now: rich list, navigation sidebar and data table.</p>\r\n<p> </p>\r\n<figure class=\"wp-caption aligncenter\" id=\"attachment_8357\" style=\"width: 362px;\"><a href=\"https://blog.gtk.org/files/2020/09/rich-list.png\"><img alt=\"Rich List list style\" class=\"wp-image-8357 size-full\" height=\"125\" src=\"https://blog.gtk.org/files/2020/09/rich-list.png\" width=\"362\" /></a><figcaption class=\"wp-caption-text\" id=\"caption-attachment-8357\">Rich List</figcaption></figure>\r\n<figure class=\"wp-caption aligncenter\" id=\"attachment_8356\" style=\"width: 360px;\"><a href=\"https://blog.gtk.org/files/2020/09/navigation-sidebar.png\"><img alt=\"Navigation Sidebar list style\" class=\"wp-image-8356 size-full\" height=\"293\" src=\"https://blog.gtk.org/files/2020/09/navigation-sidebar.png\" width=\"360\" /></a><figcaption class=\"wp-caption-text\" id=\"caption-attachment-8356\">Navigation Sidebar</figcaption></figure>\r\n<figure class=\"wp-caption aligncenter\" id=\"attachment_8351\" style=\"width: 361px;\"><a href=\"https://blog.gtk.org/files/2020/09/data-table.png\"><img alt=\"Data Table list style\" class=\"wp-image-8351 size-full\" height=\"173\" src=\"https://blog.gtk.org/files/2020/09/data-table.png\" width=\"361\" /></a><figcaption class=\"wp-caption-text\" id=\"caption-attachment-8351\">Data Table</figcaption></figure>\r\n<p>We have dropped a few outdated demos from gtk4-demo, and polished many of the existing ones. Here is how our Drag-and-Drop demo looks now:</p>\r\n<figure class=\"wp-caption aligncenter\" id=\"attachment_8312\" style=\"width: 828px;\"><a href=\"https://blog.gtk.org/files/2020/09/peg.png\"><img alt=\"Drag-and-Drop demo\" class=\"wp-image-8312 size-full\" height=\"679\" src=\"https://blog.gtk.org/files/2020/09/peg.png\" width=\"828\" /></a><figcaption class=\"wp-caption-text\" id=\"caption-attachment-8312\">Drag-and-Drop demo</figcaption></figure>\r\n<p>A number of new demos have been added as well. Here is the new demo for layout managers and transformations:</p>\r\n<div class=\"wp-video\" style=\"width: 631px;\"><!--[if lt IE 9]><script>document.createElement('video');</script><![endif]-->\r\n<video class=\"wp-video-shortcode\" controls=\"\" height=\"679\" id=\"video-8308-1\" preload=\"metadata\" width=\"631\"><source src=\"https://blog.gtk.org/files/2020/09/flat-circle.webm?_=1\" type=\"video/webm\" /><a href=\"https://blog.gtk.org/files/2020/09/flat-circle.webm\">https://blog.gtk.org/files/2020/09/flat-circle.webm</a></video></div>\r\n<h3>Performance, and other bugs</h3>\r\n<p>Many bugs have been squashed; thanks to our eager testers and bug reporters.</p>\r\n<p>A long-standing issue that we finally tracked down recently caused our GL renderer to get clipping wrong in the presence of non-trivial projective transformations. This has now been corrected (and the result can be seen in the transformation demo above).</p>\r\n<p>As part of the highlighting improvements that have been mentioned before, gtk_text_view_buffer_insert_markup() has been made <em>much</em> faster. This improvement only happened because the highlight utility can produce Pango markup. Kudos to whoever implemented that!</p>\r\n<p>Another performance problem that we’ve addressed is the loading time of the font chooser dialog on systems with many fonts. We are now populating the font list incrementally. Apart from this change, the investigation has led to performance improvements in fontconfig and Pango that will benefit any user of those libraries.</p>\r\n<h3>Can I port already?</h3>\r\n<p>The answer is: yes!</p>\r\n<p>Now is a great time to take a look at GTK4, start porting your app, and give us feedback on our APIs, new and old. We are also eager to see what ideas you have for using GTK4 in unexpected ways – the few demos we’ve shown above can maybe give you some inspiration.</p>\r\n<h3>Whats next?</h3>\r\n<p>We are looking to land the at-spi backend for our new accessibility interfaces soon; it should be included in the next GTK snapshot.</p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Thu, 03 Sep 2020 21:06:22 +0000","feedId":10108,"bgimg":"https://blog.gtk.org/files/2020/09/dark-highlight.png","linkMd5":"7a80ad1f1193e6378fb8ede82328bb4b","destWidth":837,"destHeight":679,"sourceBytes":153509,"destBytes":54320,"author":"mclasen","enclosureType":"video/webm","enclosureUrl":"https://blog.gtk.org/files/2020/09/flat-circle.webm","articleImgCdnMap":{"https://blog.gtk.org/files/2020/09/dark-highlight.png":null,"https://blog.gtk.org/files/2020/09/rich-list.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn46@2020_6/2020/09/05/08-09-51-351_3d3002f1c741821b.webp","https://blog.gtk.org/files/2020/09/navigation-sidebar.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn25@2020_6/2020/09/05/08-09-51-579_e541f2788704c780.webp","https://blog.gtk.org/files/2020/09/data-table.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn82@2020_2/2020/09/05/08-09-50-799_5d37b69a31e75990.webp","https://blog.gtk.org/files/2020/09/peg.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn66@2020_6/2020/09/05/08-09-51-766_3953998751b2a2c4.webp"},"publishedOrCreatedDate":1599293378536},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"Friends of GNOME Update August 2020","link":"https://blogs.gnome.org/engagement/?p=7933","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><h1 id=\"welcome-to-the-august-2020-friends-of-gnome-newsletter-\">Welcome to the August 2020 Friends of GNOME Newsletter!</h1>\r\n<p>We’re going to be doing some rebranding soon, including looking for a new name. Our goal is to cover news and activities from the GNOME Foundation, as well as linking out to interesting GNOME news. Feel free to contact us with any name ideas you may have!</p>\r\n<figure class=\"wp-caption aligncenter\" id=\"attachment_7936\" style=\"width: 300px;\"><img alt=\"A beach, with blue water, brown sand, and a yellow beach umbrella.\" class=\"size-medium wp-image-7936\" height=\"200\" src=\"https://blogs.gnome.org/engagement/files/2020/08/3677041027_fdfc190406_b-300x200.jpg\" width=\"300\" /><figcaption class=\"wp-caption-text\" id=\"caption-attachment-7936\">“Llegó el verano – Summer is here” by GViciano is licensed under CC BY-SA 2.0</figcaption></figure>\r\n<h2 id=\"gnome-on-the-road\">GNOME on the Road</h2>\r\n<p>We had an amazing <a href=\"https://events.gnome.org/e/guadec2020\">GUADEC</a> last month. We had talks, workshops, and Birds of a Feather sessions. Topics ranged from role of technology in education to team work best practices around building free software to GNOME specific technical discussions. The <a href=\"https://www.youtube.com/playlist?list=PLkmRdYgttscE1mTtyTvj0hx34gVAKpC4H\">videos are now online</a>.</p>\r\n<p>GNOME is people and the community really came through at GUADEC, spending lots of social time together, taking advantage of the <a href=\"https://meet.gnome.org\">platform we used for GUADEC 2020</a>.</p>\r\n<p>We’re actively working on the <a href=\"https://linuxappsummit.org/\">Linux App Summit</a> and GNOME.Asia. The [CFP for the Linux App Summit is currently open][5].</p>\r\n<p>[5}: <a href=\"https://www.gnome.org/news/2020/08/linux-app-summit-2020-call-for-talks-now-open/\">https://www.gnome.org/news/2020/08/linux-app-summit-2020-call-for-talks-now-open/</a></p>\r\n<h2 id=\"new-infrastructure-for-gnome\">New Infrastructure for GNOME</h2>\r\n<p>We installed instances of <a href=\"https://meet.gnome.org\">Big Blue Button</a> (video chat software) and <a href=\"https://events.gnome.org/\">Indico</a> (event software) for GUADEC. These have been made available for general use to GNOME Foundation members and for Foundation activities.</p>\r\n<h2 id=\"community-engagement-challenge-winners-announced\">Community Engagement Challenge Winners Announced</h2>\r\n<p>The <a href=\"https://gnome.org/challenge\">Community Engagement Challenge</a> is about coming up with new ways to get people involved in free software and GNOME. The Challenge is set up in phases – at the end of each phase winners are selected for the next stage and supplied with funding to work on their project. We recently <a href=\"https://www.gnome.org/challenge/phase-one-winners/\">announced phase one winners</a>!</p>\r\n<p>These twenty projects are all excellent and quite different from one another. Some are based in organizations, where others are being created fresh by one person. We look forward to seeing how they develop over phase two!</p>\r\n<h2 id=\"gnome-is-looking-for-fundable-projects\">GNOME is Looking For Fundable Projects</h2>\r\n<p>We’ve looking at trying something new! A number of projects within GNOME are stuck at a point where funding could make a big difference. We’re looking to identify those and the people working on them in order to help them take the next steps they need to take. If you know of such a project, please <a href=\"https://gitlab.gnome.org/Teams/Engagement/Fundraising/-/wikis/Fundable-Projects\">add it to the Fundable Projects page</a>.</p>\r\n<p>In general, we’re in the early stages of starting a <a href=\"https://discourse.gnome.org/t/fundraising-working-group/4027/7\">Fundraising Working Group</a>. If you’re interested in getting involved, we’d love to hear from you!</p>\r\n<h2 id=\"thank-you-\">Thank You!</h2>\r\n<p>Thank you so much for supporting the GNOME Foundation! We appreciate everything you do for us!</p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Mon, 31 Aug 2020 22:34:19 +0000","feedId":10108,"bgimg":"","linkMd5":"18cf8f9a5de5ef07a8d70e70329e1a14","bgimgJsdelivr":"","metaImg":"","author":"mdeblanc","articleImgCdnMap":{"https://blogs.gnome.org/engagement/files/2020/08/3677041027_fdfc190406_b-300x200.jpg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn50@2020_3/2020/09/05/08-09-51-318_05433903c15f1184.webp"},"publishedOrCreatedDate":1599293378536},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"Testing applications using Flatpak","link":"https://ondrej.holych.net/?p=63","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>There are many ways to test merge requests or development branches for GNOME applications. Developers usually clone the repository and build the code manually, or with the help of some tools. Newcomers are advised to use <a href=\"https://wiki.gnome.org/Newcomers/BuildProject\">Builder</a>, or <a href=\"https://wiki.gnome.org/Newcomers/BuildSystemComponent\">BuildStream</a>. However, if one doesn’t want to build the code and just test something, it might be handly to use Flatpak bundle instead. Note that this post assumes some basic Flatpak knowledge and that Flatpak is already installed on your system.</p>\r\n\r\n\r\n\r\n<p>Files (Nautilus) and many other GNOME applications build Flatpak bundle as a part of their GitLab CI and CI artifacts can be used for testing. For example, to test some merge request, one has to wait until the CI is finished at first. Consequently, “View exposed artifact” needs to be expanded. Then, “Get Flatpak bundle here” can be used to download the artifact for Files (the title differs across projects).</p>\r\n\r\n\r\n\r\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-64\" height=\"202\" src=\"https://ondrej.holych.net/wp-content/uploads/sites/3/2020/09/Screenshot-from-2020-09-01-08-35-19.png\" width=\"980\" /></figure>\r\n\r\n\r\n\r\n<p>After that the downloaded <code>repo.tar</code> archive needs to be extracted:</p>\r\n\r\n\r\n\r\n<pre class=\"wp-block-code\"><code>$ tar --extract --file repo.tar</code></pre>\r\n\r\n\r\n\r\n<p>Consequently the <code>org.gnome.NautilusDevel</code> application can be installed from the local repository (for other applications the different identifier has to be used obviously). This step also requires that the <code>gnome-nightly</code> remote is already added:</p>\r\n\r\n\r\n\r\n<pre class=\"wp-block-code\"><code>$ flatpak remote-add --if-not-exists gnome-nightly https://nightly.gnome.org/gnome-nightly.flatpakrepo\r\n$ flatpak install --reinstall --user ./repo org.gnome.NautilusDevel</code></pre>\r\n\r\n\r\n\r\n<p>Then it should be possible to start the application from applications overview, but it can be started manually as well:</p>\r\n\r\n\r\n\r\n<pre class=\"wp-block-code\" id=\"block-c6da4fe1-afd8-47b5-b5c8-663c0a5235b1\"><code>$ flatpak run org.gnome.NautilusDevel</code></pre>\r\n\r\n\r\n\r\n<p>Note that sometimes it is necessary to delete application data when for example testing some changes, which are not backward compatible:</p>\r\n\r\n\r\n\r\n<pre class=\"wp-block-code\"><code>$ rm -r ~/.var/app/org.gnome.NautilusDevel</code></pre>\r\n\r\n\r\n\r\n<p>See <a href=\"https://flatpak.org/\">Flatpak website</a> to learn more about Flatpak.</p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Wed, 02 Sep 2020 07:30:50 +0000","feedId":10108,"bgimg":"https://ondrej.holych.net/wp-content/uploads/sites/3/2020/09/Screenshot-from-2020-09-01-08-35-19.png","linkMd5":"55183efb8d3cca6485d1ca02a8cad9a6","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn94@2020_2/2020/09/05/08-09-39-578_d0a1b34378edf3c4.webp","destWidth":980,"destHeight":202,"sourceBytes":17663,"destBytes":7586,"author":"Ondřej Holý","articleImgCdnMap":{"https://ondrej.holych.net/wp-content/uploads/sites/3/2020/09/Screenshot-from-2020-09-01-08-35-19.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn94@2020_2/2020/09/05/08-09-39-578_d0a1b34378edf3c4.webp"},"publishedOrCreatedDate":1599293378536},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"GSoC Final Report","link":"http://chinmay-gurjar.github.io/posts/final-report/","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>I’ve been working on Music for the past three months, adding support for remote sources. The work included adding support for dLeyna and DMAP source for Music.</p>\r\n<p><strong>Why is this project needed:</strong><br />\r\nMusic currently list and plays songs only from the local filesystem (that are indexed by Tracker), there is no way to browse and play songs from remote sources such as DLNA and DAAP.<br />\r\nMost of the users have their media on media servers and not on file-system, right now if there are no songs on the computer an empty search view is created notifying you that no songs are present on the computer.</p>\r\n<p><strong>Some frameworks important to the project</strong><br />\r\nGrilo is a framework focused on making media discovery and browsing easy for application developers, and Music uses grilo-plugins for media discovery. Grilo plugins support tons of sources such as Tracker, Jamendo, UPnP, etc.<br />\r\nGrilo-plugins also supports dLeyna(for DLNA) and DMAP(for DAAP) sources, so I’ll be using grilo-plugins for media discovery from DLNA and DAAP servers.</p>\r\n<p>dLeyna-server is a high-level media content API that allows client applications to discover, browse, and search UPnP and DLNA media servers and is implemented over the GUPnP library. This takes care of all the communication between the server and the grilo-plugins. When we make any request to the server, grilo-plugins relay the request using dLeyna-server, and dLeyna-server uses GUPnP to actually make requests to the media server.</p>\r\n<p>Libdmapsharing is a library that allows programs to access, share, and control the playback of media content using DMAP.</p>\r\n<p><strong>My project includes the following tasks:</strong></p>\r\n<ol>\r\n<li>Adding support for dLeyna sources</li>\r\n<li>Adding support for DAAP sources</li>\r\n<li>Customizing search view to support various sources</li>\r\n</ol>\r\n<h3 id=\"dleyna-support\">dLeyna Support</h3>\r\n<p>Related Issue: <a href=\"https://gitlab.gnome.org/GNOME/gnome-music/-/issues/396\" rel=\"noopener noreffer\" target=\"_blank\">#396</a></p>\r\n<p>Related Merge Request: <a href=\"https://gitlab.gnome.org/GNOME/gnome-music/-/merge_requests/713\" rel=\"noopener noreffer\" target=\"_blank\">!713</a></p>\r\n<p>dLeyna source is based on UPnP protocol that allows us to use media server with no configuration i.e. a zero-conf server, it is also the most commonly used media server, as it is easy to set up.<br />\r\nThis feature will not require any additional configuration, to see media hosted on the home network, just shoot up the Music application and the media from the dLeyna source will be added to the respective views.</p>\r\n<h3 id=\"daap-support\">DAAP Support</h3>\r\n<p>Related Merge Request: <a href=\"https://gitlab.gnome.org/GNOME/gnome-music/-/merge_requests/740\" rel=\"noopener noreffer\" target=\"_blank\">!740</a></p>\r\n<p><strong>Problem:</strong><br />\r\nThe DAAP(or DMAP) protocol is built and used by Apple devices, so they haven’t released the specifications publically, but it has been reverse-engineered to the extent that media can be discovered and played on the other platforms(other than macOS).\r\nIt really restricts us with the level of support, the media we get often do not contain enough data.<br />\r\nRight now a minimal support is provided in Music, this just list songs from DAAP server and can play them, but this doesn’t have all the media metadata such as artist, date, genre, etc.(it only displays the information given by the server)</p>\r\n<p>This feature also doesn’t need any configuration, just connect to your home network that already has a DAAP server, and Music will list all the songs hosted and you will be able to play them.</p>\r\n<h5 id=\"what-works\">What Works</h5>\r\n<ol>\r\n<li>Music can fetch media from dLeyna sources and play them.</li>\r\n<li>Search works for dLeyna sources.</li>\r\n<li>Music can fetch media from DAAP sources and play them, but it doesn’t have all the information that should be associated with a media.</li>\r\n</ol>\r\n<h5 id=\"future-plans\">Future Plans</h5>\r\n<ol>\r\n<li>Search Redesign and customization to take in and filter the media from different sources.</li>\r\n<li>Addressing some of the issues with dLeyna sources.</li>\r\n</ol>\r\n<h3 id=\"gnome-community\">GNOME Community</h3>\r\n<p>This is the first time I’ve ever worked on a proper open source project, GNOME as a community has taught me a lot on how to work on a project, and I’ve to hand it to Jean Felder and Marinus Schraal, who have always been there to help me. I’ve also had encounters with Victor Toso and Jens Georg and these guys were really helpful, especially Jens listening to me patiently and helping me with very simple things.</p>\r\n<h4 id=\"guadec\">GUADEC</h4>\r\n<p>GUADEC is the GNOME community’s conference, which brings together users, developers, and community members for a week-long package of events. Each talk very informative and I learned a lot from these talks.</p>\r\n<p>GUADEC had an event for GSoC and Outreachy interns where we got to present our projects (HOW COOL IS THAT!!).</p>\r\n<h3 id=\"conclusion\">Conclusion</h3>\r\n<p>GSoC may have come to an end, but this doesn’t mark an end to my journey with GNOME, I would still be around contributing to Music and other projects.<br />\r\nAt last, I would like to thank Jean and Marinus with all my heart for their support and guidance.</p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Sun, 30 Aug 2020 13:56:50 +0000","feedId":10108,"bgimg":"","linkMd5":"485f45890b68ee1cec87bb714d565bbc","bgimgJsdelivr":"","metaImg":"","author":"Chinmay","publishedOrCreatedDate":1599293378538},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"No user-specific XKB configuration in X","link":"https://who-t.blogspot.com/2020/09/no-user-specific-xkb-configuration-in-x.html","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>This is the continuation from these posts: <a href=\"https://who-t.blogspot.com/2020/02/user-specific-xkb-configuration-part-1.html\">part 1</a>, <a href=\"https://who-t.blogspot.com/2020/07/user-specific-xkb-configuration-part-2.html\">part 2</a>, <a href=\"https://who-t.blogspot.com/2020/08/user-specific-xkb-configuration-part-3.html\">part 3</a> and <a href=\"https://who-t.blogspot.com/2020/09/user-specific-xkb-configuration-putting.html\">part 4</a>. </p><p>In the posts linked above, I describe how it's possible to have custom keyboard layouts in $HOME or /etc/xkb that will get picked up by libxkbcommon. This only works for the Wayland stack, the X stack doesn't use libxkbcommon. In this post I'll explain <b>why</b> it's unlikely this will ever happen in X. </p><p>As described in the previous posts, users configure with rules, models, layouts, variants and options (RMLVO). What XKB uses internally though are keycodes, compat, geometry, symbols types (KcCGST) [1]. </p><p>There are, effectively, two KcCGST keymap compilers: libxkbcommon and xkbcomp. libxkbcommon can go from RMLVO to a full keymap, xkbcomp relies on other tools (e.g. setxkbmap) which in turn use a utility library called libxkbfile to can parse rules files. The X server has a copy of the libxkbfile code. It doesn't use libxkbfile itself but it relies on the header files provided by it for some structs. </p> <p>Wayland's keyboard configuration works like this: </p><ul><li>the compositor decides on the RMLVO keybard layout, through an out-of-band channel (e.g. gsettings, weston.ini, etc.)</li><li>the compositor invokes libxkbcommon to generate a KcCGST keymap and passes that full keymap to the client</li><li>the client compiles that keymap with libxkbcommon and feeds any key events into libxkbcommon's state tracker to get the right keysyms</li></ul>The advantage we have here is that only the full keymap is passed between entities. Changing <i>how</i> that keymap is generated does not affect the client. This, coincidentally [2], is also how Xwayland gets the keymap passed to it and why Xwayland works with user-specific layouts. <p /><p>X works differently. Notably, KcCGST can come in two forms, the partial form specifying names only and the full keymap. The partial form looks like this: </p><pre style=\"background-color: #dddddd;\"><br />$ setxkbmap -print -layout fr -variant azerty -option ctrl:nocaps<br />xkb_keymap {<br /> xkb_keycodes  { include \"evdev+aliases(azerty)\" };<br /> xkb_types     { include \"complete\" };<br /> xkb_compat    { include \"complete\" };<br /> xkb_symbols   { include \"pc+fr(azerty)+inet(evdev)+ctrl(nocaps)\" };<br /> xkb_geometry  { include \"pc(pc105)\" };<br />};<br /></pre>This defines the component <b>names</b> but not the actual keymap, punting that to the next part in the stack. This will turn out to be the achilles heel. Keymap handling in the server has two distinct aproaches: <ul><li>During keyboard device init, the input driver passes RMLVO to the server, based on defaults or xorg.conf options</li><li>The server has its own rules file parser and creates the KcCGST component names (as above)</li><li>The server forks off xkbcomp and passes the component names to stdin</li><li>xkbcomp generates a keymap based on the components and writes it out as XKM file format</li><li>the server reads in the XKM format and updates its internal structs</li></ul>This has been the approach for decades. To give you an indication of how fast-moving this part of the server is: XKM caching was the latest feature added... in 2009. <p /><p>Driver initialisation is nice, but barely used these days. You set your keyboard layout in e.g. GNOME or KDE and that will apply it in the running session. Or run setxkbmap, for those with a higher affinity to neckbeards. setxkbmap works like this: </p><ul><li>setkxkbmap parses the rules file to convert RMLVO to KcCGST component names</li><li>setkxkbmap calls XkbGetKeyboardByName and hands those component names to the server</li><li>The server forks off xkbcomp and passes the component names to stdin</li><li>xkbcomp generates a keymap based on the components and writes it out as XKM file format</li><li>the server reads in the XKM format and updates its internal structs</li></ul>Notably, the RMLVO to KcCGST conversion is done on the client side, not the server side. And the only way to send a keymap to the server is that XkbGetKeyboardByName request - which only takes KcCGST, you can't even pass it a full keymap. This is also a long-standing potential issue with XKB: if your client tools uses different XKB data files than the server, you don't get the keymap you expected. <p /><p>Other parts of the stack do basically the same as setxkbmap which is just a thin wrapper around libxkbfile anyway.</p><p>Now, you can use xkbcomp on the client side to generate a keymap, but you can't hand it as-is to the server. xkbcomp can do this (using libxkbfile) by updating the XKB state one-by-one (XkbSetMap, XkbSetCompatMap, XkbSetNames, etc.). But at this point you're at the stage where you ask the server to knowingly compile a wrong keymap before updating the parts of it. </p><p>So, realistically, the only way to get user-specific XKB layouts into the X server would require updating libxkbfile to provide the same behavior as libxkbcommon, update the server to actually use libxkbfile instead of its own copy, and updating xkbcomp to support the changes in <a href=\"https://who-t.blogspot.com/2020/07/user-specific-xkb-configuration-part-2.html\">part 2</a>, <a href=\"https://who-t.blogspot.com/2020/08/user-specific-xkb-configuration-part-3.html\">part 3</a>. All while ensuring no regressions in code that's decades old, barely maintained, has no tests, and, let's be honest, not particularly pretty to look at. User-specific XKB layouts are somewhat a niche case to begin with, so I don't expect anyone to ever volunteer and do this work [3], much less find the resources to review and merge that code. The X server is unlikely to see another real release and this is definitely not something you want to sneak in in a minor update. </p><p>The other option would be to extend XKB-the-protocol with a request to take a full keymap so the server. Given the inertia involved and that the server won't see more full releases, this is not going to happen. </p><p>So as a summary: if you want custom keymaps on your machine, switch to Wayland (and/or fix any remaining issues preventing you from doing so) instead of hoping this will ever work on X. xmodmap will remain your only solution for X. </p><p><small>[1] Geometry is so pointless that libxkbcommon doesn't even implement this. It is a complex format to allow rendering a picture of your keyboard but it'd be a per-model thing and with evdev everyone is using the same model, so ...<br />[2] totally not coincidental btw<br />[3] libxkbcommon has been around for a decade now and no-one has volunteered to do this in the years since, so...<br /></small></p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Fri, 04 Sep 2020 00:39:00 +0000","feedId":10108,"bgimg":"","linkMd5":"7ce745438e7b13db893c59fdefb25cf4","bgimgJsdelivr":"","metaImg":"","author":"Peter Hutterer","publishedOrCreatedDate":1599293378535},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"Where to next!, GSoC 2020 final Report","link":"http://nourmat.wordpress.com/?p=359","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>It has been 4 months since my acceptance in the GSoC program, it is really true, time flies when you’re having fun. Google Summer of Code was one of the good experiences Iâ€™ve had. I basically didn’t have any knowledge about the open source world, but it helped me get started into knowing more about it and start contributing to those awesome communities like GNOME and EteSync. I am really glade with the experience I’ve gained and the people I knew along the journey.</p>\r\n\r\n\r\n\r\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-126\" src=\"https://nourmat.files.wordpress.com/2020/05/banner-gsoc2016_2.png?w=775\" /></figure>\r\n\r\n\r\n\r\n<h3>What was the project about?</h3>\r\n\r\n\r\n\r\n<p>My project during Google summer of code 2020 with GNOME organization and EteSync was to implement an EteSync module for Evolution data server and Evolution, to enable EteSync users to add their account into Evoltuion and be able to manage their data from there.</p>\r\n\r\n\r\n\r\n<p><strong><a href=\"https://www.etesync.com/\">EteSync</a></strong>, it is a secure, end to-end encrypted and FLOSS sync solution for your contacts, calendars and tasks. So it help keep your data safe and only you can see it so anyone who has access to the servers can not actually get or see your data.</p>\r\n\r\n\r\n\r\n<p><strong><a href=\"https://wiki.gnome.org/Apps/Evolution\">Evolution</a></strong> is a personal information management application that provides integrated mail, calendaring and address book functionality, you can also add tasks and it has memo taking features. So you can add multiple different accounts to Evolution and handle all of them from one place.</p>\r\n\r\n\r\n\r\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-373\" src=\"https://nourmat.files.wordpress.com/2020/08/etesync-evolution-gnome.png?w=1024\" /></figure>\r\n\r\n\r\n\r\n<h3>See the module in action</h3>\r\n\r\n\r\n\r\n<p>You can easily follow the guide in <a href=\"https://nourmat.wordpress.com/2020/08/30/how-does-it-work-a-full-guide-for-etesync-module-in-gnome-evolution-app/\">here</a> to see how to install the module and use it or just watch it in action :p.</p>\r\n\r\n\r\n\r\n<p>Want the <strong>code? </strong>you can get the code from this <a href=\"https://gitlab.gnome.org/nourmat/evolution-etesync\">repo.</a> </p>\r\n\r\n\r\n\r\n<h3>Module Features</h3>\r\n\r\n\r\n\r\n<p>The module can do all what you expect it to do as a user.</p>\r\n\r\n\r\n\r\n<ol><li>Add an account to Evolution.</li><li>Initialize new accounts (set encryption password for new users).</li><li>Fetch you data (Address-books, Calendars and Task lists).</li><li>Create, delete and modify data to existing journals (Contacts, Events and Tasks).</li><li>Handle journals in your account.<ul><li>Create</li><li>Delete</li><li>Modify (Rename and Change journal color)</li></ul></li></ol>\r\n\r\n\r\n\r\n<h3>about the module</h3>\r\n\r\n\r\n\r\n<p>The module is ready, it was created in its own repo, and the repo was approved by the maintainers and is now in the process of moving under the GNOME/Evolution umbrella.</p>\r\n\r\n\r\n\r\n<p>The module uses <a href=\"https://github.com/etesync/etesync-rs\">EteSync C API</a>. The module structure  itself is somehow self explanatory. The module main code is in the src folder. </p>\r\n\r\n\r\n\r\n<ul><li>Src Contains:<ol><li>addressbook<ul><li>Contains the address-book back-end files, these files have the main function for implementing the fetching and reading functionalities for the EteSync addressbooks.</li></ul></li><li>calendar<ul><li>Contains the Calendar back-end files, these files have the main function for implementing the fetching and reading functionalities for the EteSync calendars.</li></ul></li><li>common<ul><li>It has the common files used around the whole code, it also contain <em>e-etesync-connection.c</em> file which is a common object for handling the connection with the EteSync server, things like handling entries create, delete and modify functions same for journals create, delete and modify and other important functions for authentication and such.</li></ul></li><li>credentials<ul><li>This folder is more towards the user experience with Evolution, as it contains the code for creating the credentials dialog and “initializing new users” dialog. </li><li>It also handles storing the user credentials in the keyring a safe place for all your important data so it can be used for authentication when needed.</li></ul></li><li>evolution<ul><li>Has also folder for configuring with Evolution, the most important one is the <em>e-etesync-config-lookup.c</em> which is used when first adding an account to Evolution, checks if account exists in server and adds the required collection source file when the user chooses to.</li></ul></li><li>registry<ul><li>Contains the back-end functionalities for handling the collection account, like fetching the existing journals, creating and deleting journals.</li></ul></li></ol></li></ul>\r\n\r\n\r\n\r\n<h3>Challenges</h3>\r\n\r\n\r\n\r\n<p>This part is important as I still remember the struggles I had at first. I remember I was a bit worried about finishing the project. But actually in an open source world, you’ll find all the help you need from the communities. Thanks to my mentors (Milan and Tom) and the communities of both GNOME and EteSync. I had all the support and the help I need to be able to achieve what I did. It doesn’t matter if you know exactly <strong>how</strong> to do it, what matters is you knowing <strong>what</strong> you want to do and have the passion for it and you’ll just follow that and learn along the way until you get to your target.</p>\r\n\r\n\r\n\r\n<p>Thing were difficult a little at first, during building stage of Evolution and Evolution data server it took me 2 weeks, my mistake here was that I was nervous to ask for help in the Evolution IRC. Maybe I thought “how can I ask a stupid question” but actually that wasn’t one. I could’ve asked and build it in much lesser time as the community is very very friendly but I learnt that in time :P.</p>\r\n\r\n\r\n\r\n<p>Also getting used to the code required time, that’s why it is required that you contribute first before sending a proposal to GSoC as it makes the job easier when you start the actual coding period.</p>\r\n\r\n\r\n\r\n<p>Other than these struggles mentioned above, others were related to the project itself and that’s where you gain the experience. </p>\r\n\r\n\r\n\r\n<h3>what can be done next?</h3>\r\n\r\n\r\n\r\n<p>The project can be upgraded to use <a href=\"https://blog.etesync.com/coming-soon-etesync-2-0/\">EteSync 2.0 protocol</a> once it’s released. This will come with new improvements and a better user experience for EteSync users.</p>\r\n\r\n\r\n\r\n<h3>Attribution</h3>\r\n\r\n\r\n\r\n<p>I would like to thank Milan Crha and Tom Hacohen for their assistance and cooperation during this project, couldn’t have done it with out their help. Also GNOME and EteSync for this opportunity to work with awesome communities :D.</p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Mon, 31 Aug 2020 13:40:11 +0000","feedId":10108,"bgimg":"https://nourmat.files.wordpress.com/2020/05/banner-gsoc2016_2.png?w=775","linkMd5":"aa6a8783c2fa369a03bb759cc3b212a6","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn1@2020_2/2020/09/05/08-09-38-886_775d714c8127ee62.webp","destWidth":775,"destHeight":231,"sourceBytes":73065,"destBytes":31976,"author":"Nour E-Din","articleImgCdnMap":{"https://nourmat.files.wordpress.com/2020/05/banner-gsoc2016_2.png?w=775":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn1@2020_2/2020/09/05/08-09-38-886_775d714c8127ee62.webp","https://nourmat.files.wordpress.com/2020/08/etesync-evolution-gnome.png?w=1024":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn61@2020_1/2020/09/05/08-09-50-185_4132d5fcb3d8bc67.webp"},"publishedOrCreatedDate":1599293378536},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"Project Summary","link":"http://batterybenchgsoc2020.wordpress.com/?p=52","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><p />\r\n\r\n\r\n\r\n<p>Welcome to last project post!</p>\r\n\r\n\r\n\r\n<p>Following GSoC Work Product Submission Guide (<a href=\"https://developers.google.com/open-source/gsoc/help/work-product\">https://developers.google.com/open-source/gsoc/help/work-product</a>) I wrote the following post to summarize the work done on GSoC ’20 on gnome-battery-bench project. </p>\r\n\r\n\r\n\r\n<p><strong>How to compile and test the project?</strong></p>\r\n\r\n\r\n\r\n<p>First blog post should be helpful to get ready (<a href=\"https://batterybenchgsoc2020.wordpress.com/2020/06/02/18/\">https://batterybenchgsoc2020.wordpress.com/2020/06/02/18/</a>). To execute test, follow the guide inside README.</p>\r\n\r\n\r\n\r\n<p>Notice there are two repositories:</p>\r\n\r\n\r\n\r\n<ul><li>Main project respository (where changes are merged): <a href=\"https://gitlab.gnome.org/GNOME/gnome-battery-bench/\" rel=\"nofollow\">https://gitlab.gnome.org/GNOME/gnome-battery-bench/</a></li></ul>\r\n\r\n\r\n\r\n<ul><li>My repository (for changes before merge to main repository): <a href=\"https://gitlab.gnome.org/josee.loren/gnome-battery-bench\" rel=\"nofollow\">https://gitlab.gnome.org/josee.loren/gnome-battery-bench</a></li></ul>\r\n\r\n\r\n\r\n<p>Nothing is merged because it should be reviewed by my mentor (@gicmo) and GNOME community.</p>\r\n\r\n\r\n\r\n<p><strong>Project proposal</strong></p>\r\n\r\n\r\n\r\n<p>For project proposal I solved “Do not start testing if AC power is available” issue (<a href=\"https://gitlab.gnome.org/GNOME/gnome-battery-bench/-/issues/6\">https://gitlab.gnome.org/GNOME/gnome-battery-bench/-/issues/6</a>). The pull request (PR) for this issue (<a href=\"https://gitlab.gnome.org/GNOME/gnome-battery-bench/-/merge_requests/4\">https://gitlab.gnome.org/GNOME/gnome-battery-bench/-/merge_requests/4</a>) pretends to check if AC power is online or not, to start testing.</p>\r\n\r\n\r\n\r\n<p><strong>Adding features</strong></p>\r\n\r\n\r\n\r\n<p>There a few issues/feature request on project Gitlab. At summer beginning I implemented “Optional timestamps log output” (<a href=\"https://gitlab.gnome.org/GNOME/gnome-battery-bench/-/issues/3\">https://gitlab.gnome.org/GNOME/gnome-battery-bench/-/issues/3</a>).  PR for this feature (<a href=\"https://gitlab.gnome.org/GNOME/gnome-battery-bench/-/merge_requests/6\">https://gitlab.gnome.org/GNOME/gnome-battery-bench/-/merge_requests/6</a>) adds a timestamp option to gbb command, so date and hour is available on program output.</p>\r\n\r\n\r\n\r\n<p><strong>Main summer milestone: test recording working on Wayland</strong></p>\r\n\r\n\r\n\r\n<p>I highly recommend read blog post about libevdev to understand how it works: <a href=\"https://batterybenchgsoc2020.wordpress.com/2020/07/05/project-main-change-port-to-wayland/\">https://batterybenchgsoc2020.wordpress.com/2020/07/05/project-main-change-port-to-wayland/</a></p>\r\n\r\n\r\n\r\n<p>We implemented mouse and keyboard devices recognition and recording -it is easy to see on code changes. However, we had issues in order to get mouse position. We misunderstood EV_ABS, that is position on a device, no on the screen and we started to work with EV_REL, that returns relative position movements. But we need to have same position on recording and playing, so our idea is move the mouse to (0,0), that it wasn’t achieve on summer project, and play tests on Wayland, because it is not working from command line execution.</p>\r\n\r\n\r\n\r\n<p><strong>Future work and know issues</strong></p>\r\n\r\n\r\n\r\n<p>On Wayland port, issues that should be solved are:</p>\r\n\r\n\r\n\r\n<ul><li>Move mouse to (0,0) to reply same input as recorded test, using emulated touchscreen, for example.</li><li>Test output and see why tests are not playing on Wayland (on command line execution).</li><li>Test keyboard implementation.</li></ul>\r\n\r\n\r\n\r\n<p>Other issues to solve:</p>\r\n\r\n\r\n\r\n<ul><li>All avaliable in issue tracker on GitLab.</li><li>Create battery usage history and add (<a href=\"https://gitlab.gnome.org/GNOME/gnome-battery-bench/-/issues/11\">https://gitlab.gnome.org/GNOME/gnome-battery-bench/-/issues/11</a>) to gnome-power-statistics. Even compare computers and software power usage.</li></ul>\r\n\r\n\r\n\r\n<p><strong>Acknowledgements</strong></p>\r\n\r\n\r\n\r\n<p>Firstly, thank you to my mentor, Christian Kellner (@gicmo) for his comprehension and help during summer. Thank you to @garnacho and @jadahl, and all #gnome-shell channel for helping on this project. And, finally, thank you to GNOME admins to help us and organizing GUADEC, specially to Felipe Borges.</p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Mon, 31 Aug 2020 11:21:31 +0000","feedId":10108,"bgimg":"","linkMd5":"d3677b78b8189cf926f56cb3bd491332","bgimgJsdelivr":"","metaImg":"","author":"Jose Francisco Lorenzo Hernández","publishedOrCreatedDate":1599293378537},{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","title":"Drag n Drop","link":"http://adwaitongnome.wordpress.com/?p=165","description":"<div xmlns=\"http://www.w3.org/1999/xhtml\"><h2><strong>Work till now</strong></h2>\r\n\r\n\r\n\r\n<p>After the translation debacle in my previous <a href=\"https://adwaitongnome.wordpress.com/2020/08/26/my-struggle-with-translation/\">post</a>, I started working on the back-end that will be used by later UI (I’ll be talking about one place where this back-end is used in this post) in a manner such that, when translations start functioning, they can easily be implemented by addition of a few lines of code. This back-end work involves methods that will be used to add or remove firmware, checking whether the firmware being added is acceptable/supported etc.</p>\r\n\r\n\r\n\r\n<h2>Update</h2>\r\n\r\n\r\n\r\n<p>The goal of adding drag n drop support would allow addition of firmware through, well, drag n drop. Which would be an added bonus to the firmware UI that will be implemented after translations are taken care of after 3.38 release. </p>\r\n\r\n\r\n\r\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-233\" src=\"https://adwaitongnome.files.wordpress.com/2020/08/ezgif-1-915c6499bd21.gif?w=800\" /></figure>\r\n\r\n\r\n\r\n<p>My work here is to write a widget that can be easily added almost anywhere allowing that area to accept drops and install firmware. Not only that, but also give visual feedback of whether the dropped firmware has been successfully added or not.</p>\r\n\r\n\r\n\r\n<p>The ideal way to do this would be by writing a widget that’s an overlay. Because the widget is an overlay, it would have the area presented to the widget it’s being attached to and would be able to give visual feedback through the shared real estate for better UX.</p>\r\n\r\n\r\n\r\n<p>For any widget to accept drag, </p>\r\n\r\n\r\n\r\n<p><code>Gtk.drag_dest_set (widget, dest_default, targets, actions);</code></p>\r\n\r\n\r\n\r\n<p>line must be used. Here widget, is the widget surface that’s going to experience drag. The documentation for each parameter here can be read <a href=\"https://valadoc.org/gtk+-3.0/Gtk.drag_dest_set.html\">here</a>. </p>\r\n\r\n\r\n\r\n<p>The argument being passed as <code>dest_default</code> must be chosen carefully in my opinion. That is because, if the <code>dest_default</code> is <code>Gtk.DestDefault.MOTION</code>, whenever something is being dragged on the surface of the widget, this argument will forcefully emit <code>drag_motion</code> signal. But if <code>drag_motion</code> is connected to some other callback, that callback will be called twice due to it being connected to the default signal which would be emitted during a drag motion, and again by the destination default flag. Same with <code>Gtk.DestDefault.DROP</code>. In my widget, the <code>dest_default</code> flag was making the experience very clunky, so I simply passed a 0. </p>\r\n\r\n\r\n\r\n<p>After setting the whole widget surface to accept drag, <code>drag_motion</code> was connected to a callback. This callback checks the target of the drag context. If the target is a list of uris, then the drag data is requested with a <code>checking</code> flag. Otherwise the <code>drag_status</code> is set to <code>0</code>.</p>\r\n\r\n\r\n\r\n<p>Then in the callback for <code>drag_data_received</code> (which is called when drag data is requested) when the <code>checking</code> flag is active, the files being dragged on the widget surface are checked for their compatibility. To do this, a function was written in the name space of <code>FirmwareManager</code> class, which takes a <code>File</code> as parameter, and runs for a match for checksums of accepted firmware that are not installed yet, or if they are installed, whether these installed firmware files are corrupt or not. If all these checks are clear the function returns true and the file being dragged is an acceptable file, then the overlay is activated and the <code>drag_status</code> is set to <code>Gdk.DragAction.COPY</code>. Otherwise the function returns false, and the <code>drag_status</code> remains <code>0</code>.</p>\r\n\r\n\r\n\r\n<p>If the data is not dropped and simply leaves the widget surface, <code>drag_leave</code> signal is triggered. This activates a callback that deactivates the overlay if active and the surface reverts back to normal.</p>\r\n\r\n\r\n\r\n<p>If the data is dropped instead, then <code>drag_drop</code> signal is triggered, which again requests for drag data, but this time with a <code>dropped</code> flag. This way, when <code>drag_data_received</code> signal is emitted, the callback rather than checking the file again, simply tries to install the file that was dropped. After the dropped file installed, <code>drag_finished</code> is called. <code>drag_finished</code> is important as it tells the system that the drag n drop action has ended. </p>\r\n\r\n\r\n\r\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-232\" src=\"https://adwaitongnome.files.wordpress.com/2020/08/image-2.png?w=1024\" /></figure>\r\n\r\n\r\n\r\n<p>When drag action ends, the overlay shows the results of the drag process. If it was a success it shows a 1.5 sec success overlay after which all flags otherwise it shows an error message. After the overlay ends messages and flags are reset to prepare for the next drag.</p>\r\n\r\n\r\n\r\n<figure class=\"wp-block-image size-large\"><img alt=\"\" class=\"wp-image-230\" src=\"https://adwaitongnome.files.wordpress.com/2020/08/image-1.png?w=1024\" /></figure>\r\n\r\n\r\n\r\n<p>With drag n drop implemented, the last things that needs to be done is the firmware page in the preferences UI in the user interface. But that needs to wait till the 3.38 release is over, after which translations will be implemented and work on firmware preferences page could be continues.</p></div>\r\n    ","descriptionType":"xhtml","publishedDate":"Sat, 29 Aug 2020 22:17:13 +0000","feedId":10108,"bgimg":"https://adwaitongnome.files.wordpress.com/2020/08/ezgif-1-915c6499bd21.gif?w=800","linkMd5":"6861003539588be321919f48264474f5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn86@2020_3/2020/09/05/08-09-48-315_6aba6dd03b0777be.webp","destWidth":800,"destHeight":450,"sourceBytes":6541494,"destBytes":4108866,"author":"Adwait Rawat","articleImgCdnMap":{"https://adwaitongnome.files.wordpress.com/2020/08/ezgif-1-915c6499bd21.gif?w=800":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn86@2020_3/2020/09/05/08-09-48-315_6aba6dd03b0777be.webp","https://adwaitongnome.files.wordpress.com/2020/08/image-2.png?w=1024":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn38@2020_6/2020/09/05/08-09-50-321_482b02561683e0cf.webp","https://adwaitongnome.files.wordpress.com/2020/08/image-1.png?w=1024":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn32@2020_1/2020/09/05/08-09-50-274_eea1322d2a73a443.webp"},"publishedOrCreatedDate":1599293378542}],"record":{"createdTime":"2020-09-05 16:09:38","updatedTime":"2020-09-05 16:09:38","feedId":10108,"fetchDate":"Sat, 05 Sep 2020 08:09:38 +0000","fetchMs":399,"handleMs":1481,"totalMs":25638,"newArticles":0,"totalArticles":40,"status":1,"type":0,"ip":"ad451f163558643b64c25fa9e19a17a0","hostName":"us-006*","requestId":"62700eea9ac54375832778fa9d595de2_10108","contentType":"text/xml; charset=UTF-8","totalBytes":6174940,"bgimgsTotal":8,"bgimgsGithubTotal":7,"articlesImgsTotal":25,"articlesImgsGithubTotal":23,"successGithubMap":{"myreaderx8":1,"myreaderx25":1,"myreaderx15":1,"myreaderx7":1,"myreaderx27":1,"myreaderx6":1,"myreaderx16":1,"myreaderx21":1,"myreaderx10":1,"myreaderx4":1,"myreaderx3":1,"myreaderx11":1,"myreaderx33":1,"myreaderx12":1,"myreaderx13":1,"myreaderx1":1,"myreaderx24":1,"myreaderx31":1,"myreaderx18":1,"myreaderx29":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}},"feed":{"createdTime":"2020-08-25 04:35:39","updatedTime":"2020-09-01 09:22:18","id":10108,"name":"Planet GNOME","url":"http://planet.gnome.org/atom.xml","subscriber":null,"website":null,"icon":"https://planet.gnome.org/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn2@2020_2/2020/09/05/08-09-37-765_4b4d905494acf0e6.ico","description":"","weekly":null,"link":"https://planet.gnome.org"},"noPictureArticleList":[{"createdTime":"2020-09-05 16:10:02","updatedTime":"2020-09-05 16:10:02","id":null,"feedId":10108,"linkMd5":"86224592dd6a07de1d86c1ea19d116bf"},{"createdTime":"2020-09-05 16:10:02","updatedTime":"2020-09-05 16:10:02","id":null,"feedId":10108,"linkMd5":"7a80ad1f1193e6378fb8ede82328bb4b"}],"tmpCommonImgCdnBytes":4226374,"tmpBodyImgCdnBytes":1948566,"tmpBgImgCdnBytes":0,"extra4":{"start":1599293376594,"total":0,"statList":[{"spend":479,"msg":"获取xml内容"},{"spend":1481,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":12038,"msg":"正文链接上传到cdn"}]},"extra5":25,"extra6":25,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://jimmac.musichall.cz/feed.xml/index/thumb.jpg","sourceStatusCode":404,"sourceBytes":0,"destBytes":0,"feedId":10108,"totalSpendMs":787,"convertSpendMs":0,"createdTime":"2020-09-05 16:09:38","host":"us-020*","referer":"http://jimmac.musichall.cz/blog/2020-09-01-shelved-wallpapers-2/","linkMd5ListStr":"f0989f90411c73cacaed05c415398f4f,f0989f90411c73cacaed05c415398f4f","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://jimmac.musichall.cz/feed.xml/index/thumb.jpg","sourceStatusCode":404,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","sourceBytes":0,"destBytes":0,"feedId":10108,"totalSpendMs":479,"convertSpendMs":0,"createdTime":"2020-09-05 16:09:39","host":"europe-57*","referer":"http://jimmac.musichall.cz/blog/2020-09-01-shelved-wallpapers-2/","linkMd5ListStr":"f0989f90411c73cacaed05c415398f4f,f0989f90411c73cacaed05c415398f4f","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://blog.gtk.org/files/2020/09/dark-highlight.png","sourceStatusCode":200,"destWidth":837,"destHeight":679,"sourceBytes":153509,"destBytes":54320,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":1923,"convertSpendMs":31,"createdTime":"2020-09-05 16:09:38","host":"europe70*","referer":"http://blog.gtk.org/?p=8308","linkMd5ListStr":"7a80ad1f1193e6378fb8ede82328bb4b,7a80ad1f1193e6378fb8ede82328bb4b","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn97/contents/2020/09/05/08-09-40-251_e9acb347583ba0bf.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 08:09:40 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["DA68:59C4:6CAEEFF:8357371:5F53479D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn97/contents/2020/09/05/08-09-40-251_e9acb347583ba0bf.webp","historyStatusCode":[],"spendMs":355},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"149.9 KB","destSize":"53 KB","compressRate":"35.4%"},{"code":1,"isDone":false,"source":"https://blog.gtk.org/files/2020/09/dark-highlight.png","sourceStatusCode":200,"destWidth":837,"destHeight":679,"sourceBytes":153509,"destBytes":54320,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":690,"convertSpendMs":35,"createdTime":"2020-09-05 16:09:40","host":"us-012*","referer":"http://blog.gtk.org/?p=8308","linkMd5ListStr":"7a80ad1f1193e6378fb8ede82328bb4b,7a80ad1f1193e6378fb8ede82328bb4b","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn97/contents/2020/09/05/08-09-41-202_e9acb347583ba0bf.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 08:09:41 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E6DA:07CE:1040878:1A7A2BA:5F5347C4"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295560"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn97/contents/2020/09/05/08-09-41-202_e9acb347583ba0bf.webp","historyStatusCode":[],"spendMs":136},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"149.9 KB","destSize":"53 KB","compressRate":"35.4%"},{"code":1,"isDone":false,"source":"https://blogs.gnome.org/uraeus/files/2020/09/carlaandpipewirehydrogen-300x209.png","sourceStatusCode":200,"destWidth":300,"destHeight":209,"sourceBytes":25539,"destBytes":4768,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":542,"convertSpendMs":10,"createdTime":"2020-09-05 16:09:50","host":"us-022*","referer":"https://blogs.gnome.org/uraeus/?p=9686","linkMd5ListStr":"86224592dd6a07de1d86c1ea19d116bf","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn58/contents/2020/09/05/08-09-50-528_8a769df842d4784e.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 08:09:50 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A7BE:121C:1EA901:5229D0:5F5347CE"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn58/contents/2020/09/05/08-09-50-528_8a769df842d4784e.webp","historyStatusCode":[],"spendMs":121},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.9 KB","destSize":"4.7 KB","compressRate":"18.7%"},{"code":1,"isDone":false,"source":"https://blogs.gnome.org/uraeus/files/2020/09/carlaandpipewirehydrogen-300x209.png","sourceStatusCode":200,"destWidth":300,"destHeight":209,"sourceBytes":25539,"destBytes":4768,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":306,"convertSpendMs":15,"createdTime":"2020-09-05 16:09:50","host":"us-022*","referer":"https://blogs.gnome.org/uraeus/?p=9686","linkMd5ListStr":"86224592dd6a07de1d86c1ea19d116bf","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn58/contents/2020/09/05/08-09-50-984_8a769df842d4784e.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 08:09:51 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A7BE:121C:1EA90A:5229D4:5F5347CE"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599295562"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn58/contents/2020/09/05/08-09-50-984_8a769df842d4784e.webp","historyStatusCode":[],"spendMs":53},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.9 KB","destSize":"4.7 KB","compressRate":"18.7%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-018.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-038.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Amazon_Web_Services_Logo.svg/500px-Amazon_Web_Services_Logo.svg.png","sourceStatusCode":200,"destWidth":500,"destHeight":299,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn9@2020_1/2020/09/05/08-09-38-915_85db82c6b09f2871.webp","sourceBytes":22310,"destBytes":18432,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":1159,"convertSpendMs":38,"createdTime":"2020-09-05 16:09:38","host":"us-024*","referer":"http://siliconislandblog.wordpress.com/?p=857","linkMd5ListStr":"c17f9f9ecfcf81784ba34be262cd0658,c17f9f9ecfcf81784ba34be262cd0658","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.8 KB","destSize":"18 KB","compressRate":"82.6%"},{"code":1,"isDone":false,"source":"http://jimmac.musichall.cz/feed.xml/index/thumb.jpg","sourceStatusCode":404,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","sourceBytes":0,"destBytes":0,"feedId":10108,"totalSpendMs":479,"convertSpendMs":0,"createdTime":"2020-09-05 16:09:39","host":"europe-57*","referer":"http://jimmac.musichall.cz/blog/2020-09-01-shelved-wallpapers-2/","linkMd5ListStr":"f0989f90411c73cacaed05c415398f4f,f0989f90411c73cacaed05c415398f4f","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://nourmat.files.wordpress.com/2020/05/banner-gsoc2016_2.png?w=775","sourceStatusCode":200,"destWidth":775,"destHeight":231,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn1@2020_2/2020/09/05/08-09-38-886_775d714c8127ee62.webp","sourceBytes":73065,"destBytes":31976,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":1289,"convertSpendMs":37,"createdTime":"2020-09-05 16:09:38","host":"europe-58*","referer":"http://nourmat.wordpress.com/?p=359","linkMd5ListStr":"aa6a8783c2fa369a03bb759cc3b212a6,aa6a8783c2fa369a03bb759cc3b212a6","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"71.4 KB","destSize":"31.2 KB","compressRate":"43.8%"},{"code":1,"isDone":false,"source":"https://blogs.gnome.org/xjuan/files/2020/08/survey.png","sourceStatusCode":200,"destWidth":854,"destHeight":744,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn14@2020_6/2020/09/05/08-09-39-272_e9763179b22d59fb.webp","sourceBytes":203981,"destBytes":35868,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":1572,"convertSpendMs":69,"createdTime":"2020-09-05 16:09:38","host":"us-012*","referer":"https://blogs.gnome.org/xjuan/?p=5662","linkMd5ListStr":"dcfe3383b8246e04773bad0a1d4d66ee,dcfe3383b8246e04773bad0a1d4d66ee","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"199.2 KB","destSize":"35 KB","compressRate":"17.6%"},{"code":1,"isDone":false,"source":"https://blog.gtk.org/files/2020/09/listfill-1-e1599274641902.png","sourceStatusCode":200,"destWidth":794,"destHeight":850,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn6@2020_1/2020/09/05/08-09-39-271_7f9830dd1ca9eefc.webp","sourceBytes":58890,"destBytes":23646,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":1602,"convertSpendMs":41,"createdTime":"2020-09-05 16:09:38","host":"us-036*","referer":"http://blog.gtk.org/?p=8362","linkMd5ListStr":"a472788f48102c60055a8124bf5cd49c,a472788f48102c60055a8124bf5cd49c","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"57.5 KB","destSize":"23.1 KB","compressRate":"40.2%"},{"code":1,"isDone":false,"source":"https://ondrej.holych.net/wp-content/uploads/sites/3/2020/09/Screenshot-from-2020-09-01-08-35-19.png","sourceStatusCode":200,"destWidth":980,"destHeight":202,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn94@2020_2/2020/09/05/08-09-39-578_d0a1b34378edf3c4.webp","sourceBytes":17663,"destBytes":7586,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":1922,"convertSpendMs":10,"createdTime":"2020-09-05 16:09:38","host":"us-008*","referer":"https://ondrej.holych.net/?p=63","linkMd5ListStr":"55183efb8d3cca6485d1ca02a8cad9a6,55183efb8d3cca6485d1ca02a8cad9a6","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.2 KB","destSize":"7.4 KB","compressRate":"42.9%"},{"code":1,"isDone":false,"source":"https://adwaitongnome.files.wordpress.com/2020/08/ezgif-1-915c6499bd21.gif?w=800","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn86@2020_3/2020/09/05/08-09-48-315_6aba6dd03b0777be.webp","sourceBytes":6541494,"destBytes":4108866,"targetWebpQuality":60,"feedId":10108,"totalSpendMs":11514,"convertSpendMs":9540,"createdTime":"2020-09-05 16:09:38","host":"us-032*","referer":"http://adwaitongnome.wordpress.com/?p=165","linkMd5ListStr":"6861003539588be321919f48264474f5,6861003539588be321919f48264474f5","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.2 MB","destSize":"3.9 MB","compressRate":"62.8%"},{"code":1,"isDone":false,"source":"https://nourmat.files.wordpress.com/2020/08/etesync-evolution-gnome.png?w=1024","sourceStatusCode":200,"destWidth":1024,"destHeight":483,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn61@2020_1/2020/09/05/08-09-50-185_4132d5fcb3d8bc67.webp","sourceBytes":114909,"destBytes":23794,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":923,"convertSpendMs":20,"createdTime":"2020-09-05 16:09:50","host":"us-010*","referer":"http://nourmat.wordpress.com/?p=359","linkMd5ListStr":"aa6a8783c2fa369a03bb759cc3b212a6","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"112.2 KB","destSize":"23.2 KB","compressRate":"20.7%"},{"code":1,"isDone":false,"source":"https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=ebcf52450692","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn78@2020_5/2020/09/05/08-09-50-271_d63aabd26a7bf278.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":947,"convertSpendMs":2,"createdTime":"2020-09-05 16:09:50","host":"us-026*","referer":"https://medium.com/p/ebcf52450692","linkMd5ListStr":"5566ea52d0d327852e285e8a75646968","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"},{"code":1,"isDone":false,"source":"https://blogs.gnome.org/uraeus/files/2020/09/calfpipewiressink-300x188.png","sourceStatusCode":200,"destWidth":300,"destHeight":188,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn29@2020_2/2020/09/05/08-09-50-577_14808b5d1a4136a7.webp","sourceBytes":57777,"destBytes":8644,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":1255,"convertSpendMs":18,"createdTime":"2020-09-05 16:09:50","host":"us-029*","referer":"https://blogs.gnome.org/uraeus/?p=9686","linkMd5ListStr":"86224592dd6a07de1d86c1ea19d116bf","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.4 KB","destSize":"8.4 KB","compressRate":"15%"},{"code":1,"isDone":false,"source":"https://adwaitongnome.files.wordpress.com/2020/08/image-2.png?w=1024","sourceStatusCode":200,"destWidth":1024,"destHeight":772,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn38@2020_6/2020/09/05/08-09-50-321_482b02561683e0cf.webp","sourceBytes":779897,"destBytes":164446,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":1280,"convertSpendMs":127,"createdTime":"2020-09-05 16:09:50","host":"us-018*","referer":"http://adwaitongnome.wordpress.com/?p=165","linkMd5ListStr":"6861003539588be321919f48264474f5","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"761.6 KB","destSize":"160.6 KB","compressRate":"21.1%"},{"code":1,"isDone":false,"source":"https://adwaitongnome.files.wordpress.com/2020/08/image-1.png?w=1024","sourceStatusCode":200,"destWidth":1024,"destHeight":772,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn32@2020_1/2020/09/05/08-09-50-274_eea1322d2a73a443.webp","sourceBytes":793136,"destBytes":168886,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":1310,"convertSpendMs":91,"createdTime":"2020-09-05 16:09:50","host":"us-030*","referer":"http://adwaitongnome.wordpress.com/?p=165","linkMd5ListStr":"6861003539588be321919f48264474f5","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"774.5 KB","destSize":"164.9 KB","compressRate":"21.3%"},{"code":1,"isDone":false,"source":"https://blogs.gnome.org/uraeus/files/2020/09/pavucontrol-300x259.png","sourceStatusCode":200,"destWidth":300,"destHeight":259,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn21@2020_5/2020/09/05/08-09-50-507_6dd57fecbf3fa6ce.webp","sourceBytes":34866,"destBytes":14682,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":1336,"convertSpendMs":13,"createdTime":"2020-09-05 16:09:50","host":"us-001*","referer":"https://blogs.gnome.org/uraeus/?p=9686","linkMd5ListStr":"86224592dd6a07de1d86c1ea19d116bf","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34 KB","destSize":"14.3 KB","compressRate":"42.1%"},{"code":1,"isDone":false,"source":"https://blogs.gnome.org/uraeus/files/2020/09/wimtaymans-300x170.png","sourceStatusCode":200,"destWidth":300,"destHeight":170,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn74@2020_2/2020/09/05/08-09-50-699_cea3f3af605b92f5.webp","sourceBytes":84313,"destBytes":6434,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":1364,"convertSpendMs":7,"createdTime":"2020-09-05 16:09:50","host":"us-038*","referer":"https://blogs.gnome.org/uraeus/?p=9686","linkMd5ListStr":"86224592dd6a07de1d86c1ea19d116bf","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"82.3 KB","destSize":"6.3 KB","compressRate":"7.6%"},{"code":1,"isDone":false,"source":"https://blog.gtk.org/files/2020/09/listscroll-3-e1599274918924.png","sourceStatusCode":200,"destWidth":794,"destHeight":1058,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn86@2020_1/2020/09/05/08-09-50-655_1ad954d1d456daf5.webp","sourceBytes":90711,"destBytes":36886,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":1445,"convertSpendMs":127,"createdTime":"2020-09-05 16:09:50","host":"us-001*","referer":"http://blog.gtk.org/?p=8362","linkMd5ListStr":"a472788f48102c60055a8124bf5cd49c","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"88.6 KB","destSize":"36 KB","compressRate":"40.7%"},{"code":1,"isDone":false,"source":"https://blog.gtk.org/files/2020/09/data-table.png","sourceStatusCode":200,"destWidth":361,"destHeight":173,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn82@2020_2/2020/09/05/08-09-50-799_5d37b69a31e75990.webp","sourceBytes":21717,"destBytes":9774,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":1474,"convertSpendMs":7,"createdTime":"2020-09-05 16:09:50","host":"us-014*","referer":"http://blog.gtk.org/?p=8308","linkMd5ListStr":"7a80ad1f1193e6378fb8ede82328bb4b","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.2 KB","destSize":"9.5 KB","compressRate":"45%"},{"code":1,"isDone":false,"source":"https://blog.gtk.org/files/2020/09/rich-list.png","sourceStatusCode":200,"destWidth":362,"destHeight":125,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn46@2020_6/2020/09/05/08-09-51-351_3d3002f1c741821b.webp","sourceBytes":8129,"destBytes":2736,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":2024,"convertSpendMs":6,"createdTime":"2020-09-05 16:09:50","host":"europe68*","referer":"http://blog.gtk.org/?p=8308","linkMd5ListStr":"7a80ad1f1193e6378fb8ede82328bb4b","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.9 KB","destSize":"2.7 KB","compressRate":"33.7%"},{"code":1,"isDone":false,"source":"https://blogs.gnome.org/engagement/files/2020/08/3677041027_fdfc190406_b-300x200.jpg","sourceStatusCode":200,"destWidth":300,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn50@2020_3/2020/09/05/08-09-51-318_05433903c15f1184.webp","sourceBytes":18538,"destBytes":20238,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":2115,"convertSpendMs":6,"createdTime":"2020-09-05 16:09:50","host":"europe-56*","referer":"https://blogs.gnome.org/engagement/?p=7933","linkMd5ListStr":"18cf8f9a5de5ef07a8d70e70329e1a14","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.1 KB","destSize":"19.8 KB","compressRate":"109.2%"},{"code":1,"isDone":false,"source":"https://blogs.gnome.org/uraeus/files/2020/09/cheeseandpipewire-300x190.png","sourceStatusCode":200,"destWidth":300,"destHeight":190,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn69@2020_2/2020/09/05/08-09-51-432_10e99e593ad00acf.webp","sourceBytes":46176,"destBytes":6038,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":2103,"convertSpendMs":6,"createdTime":"2020-09-05 16:09:50","host":"europe-60*","referer":"https://blogs.gnome.org/uraeus/?p=9686","linkMd5ListStr":"86224592dd6a07de1d86c1ea19d116bf","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.1 KB","destSize":"5.9 KB","compressRate":"13.1%"},{"code":1,"isDone":false,"source":"https://blog.gtk.org/files/2020/09/navigation-sidebar.png","sourceStatusCode":200,"destWidth":360,"destHeight":293,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn25@2020_6/2020/09/05/08-09-51-579_e541f2788704c780.webp","sourceBytes":28865,"destBytes":19714,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":2348,"convertSpendMs":11,"createdTime":"2020-09-05 16:09:50","host":"europe64*","referer":"http://blog.gtk.org/?p=8308","linkMd5ListStr":"7a80ad1f1193e6378fb8ede82328bb4b","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.2 KB","destSize":"19.3 KB","compressRate":"68.3%"},{"code":1,"isDone":false,"source":"https://blog.gtk.org/files/2020/09/peg.png","sourceStatusCode":200,"destWidth":828,"destHeight":679,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn66@2020_6/2020/09/05/08-09-51-766_3953998751b2a2c4.webp","sourceBytes":74346,"destBytes":23004,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":2632,"convertSpendMs":32,"createdTime":"2020-09-05 16:09:50","host":"europe-22*","referer":"http://blog.gtk.org/?p=8308","linkMd5ListStr":"7a80ad1f1193e6378fb8ede82328bb4b","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"72.6 KB","destSize":"22.5 KB","compressRate":"30.9%"},{"code":1,"isDone":false,"source":"https://blogs.gnome.org/xjuan/files/2020/08/gjs_support.gif","sourceStatusCode":200,"destWidth":678,"destHeight":407,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn42@2020_1/2020/09/05/08-09-53-858_f3e7858997ca6aae.webp","sourceBytes":520610,"destBytes":312366,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":4867,"convertSpendMs":3080,"createdTime":"2020-09-05 16:09:50","host":"us-005*","referer":"https://blogs.gnome.org/xjuan/?p=5662","linkMd5ListStr":"dcfe3383b8246e04773bad0a1d4d66ee","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"508.4 KB","destSize":"305 KB","compressRate":"60%"},{"code":1,"isDone":false,"source":"https://blogs.gnome.org/xjuan/files/2020/08/glade_templates.gif","sourceStatusCode":200,"destWidth":678,"destHeight":407,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn54@2020_5/2020/09/05/08-10-00-620_1ab57aca89ad7fdb.webp","sourceBytes":2097627,"destBytes":1130852,"targetWebpQuality":75,"feedId":10108,"totalSpendMs":12024,"convertSpendMs":9939,"createdTime":"2020-09-05 16:09:50","host":"us-034*","referer":"https://blogs.gnome.org/xjuan/?p=5662","linkMd5ListStr":"dcfe3383b8246e04773bad0a1d4d66ee","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2 MB","destSize":"1.1 MB","compressRate":"53.9%"}],"successGithubMap":{"myreaderx8":1,"myreaderx25":1,"myreaderx15":1,"myreaderx7":1,"myreaderx27":1,"myreaderx6":1,"myreaderx16":1,"myreaderx21":1,"myreaderx10":1,"myreaderx4":1,"myreaderx3":1,"myreaderx11":1,"myreaderx33":1,"myreaderx12":1,"myreaderx13":1,"myreaderx1":1,"myreaderx24":1,"myreaderx31":1,"myreaderx18":1,"myreaderx29":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}}