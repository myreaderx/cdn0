{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-10 04:53:53","updatedTime":"2020-10-10 04:53:53","title":"Preview of Module Build and Publish with Visual Studio Code and the PowerShell Extension","link":"http://rkeithhill.wordpress.com/?p=570","description":"<p>We are noodling around with how to best provide support for publishing modules to the <a href=\"http://www.powershellgallery.com/\">PowerShell Gallery</a> from a PowerShell workspace within Visual Studio Code.  In today’s release of the PowerShell extension for VSCode (version 0.5.0), we have included an example of how this might work in a future release which I’ll discuss at length in this blog post.</p>\n<p>If you haven’t already got Visual Studio Code and the PowerShell extension, see my blog post on <a href=\"https://rkeithhill.wordpress.com/2015/12/26/getting-started-with-visual-studio-code-for-use-with-powershell/\">Getting Started with Visual Studio Code</a>.  If you already have Visual Studio Code and the PowerShell extension, make sure you have updated both to their latest versions – currently 0.10.10 for VS Code and 0.5.0 for the PowerShell extension.</p>\n<p>The “examples” directory that comes with the PowerShell extension has been updated to add a sample module implementation consisting of the following files:</p>\n<p><a href=\"https://rkeithhill.files.wordpress.com/2016/03/image.png\"><img style=\"background-image:none;padding-top:0;padding-left:0;display:inline;padding-right:0;border-width:0;\" title=\"image\" src=\"https://rkeithhill.files.wordpress.com/2016/03/image_thumb.png?w=254&#038;h=469\" alt=\"image\" width=\"254\" height=\"469\" border=\"0\" /></a></p>\n<p>The module files consist primarily of <span style=\"font-family:Consolas;\">SampleModule.psd1, SampleModule.psm1, ReleaseNotes.md</span> and the about topic file <span style=\"font-family:Consolas;\">en-US\\about_SampleModule.help.txt</span>.</p>\n<p>There are two files that do the work of building a Release directory and copying over the module files and directories to be published, then running Pester tests and finally publishing the module.  Note: the publish step in the examples directory runs Publish-Module with –WhatIf so no publishing actually takes place.</p>\n<p>The <span style=\"font-family:Consolas;\">Build.ps1</span> file is a PSake script that contains the tasks: Init, Clean, Build, Test, PrePublish, Publish and PostPublish.  There are also a few utility tasks: ShowKey and StoreKey. I&#8217;ll cover keys later. The tasks have been written in a generic way so that you typically only need to customize a few properties e.g.:</p>\n<pre class=\"brush: powershell; title: ; notranslate\">\nProperties {\n    # The name of your module should match the basename of the PSD1 file.\n    $ModuleName = (Get-Item $PSScriptRoot\\*.psd1)[0].BaseName\n\n    # Path to the release notes file.  Set to $null if the release notes\n    # reside in the manifest file.\n    $ReleaseNotesPath = &#34;$PSScriptRoot\\ReleaseNotes.md&#34;\n\n    # The directory used to publish the module from.  If you are using Git, the\n    # $PublishDir should be ignored if it is under the workspace directory.\n    $PublishDir = &#34;$PSScriptRoot\\Release\\$ModuleName&#34;\n\n    # The following items will not be copied to the $PublishDir.\n    # Add items that should not be published with the module.\n    $Exclude = @(\n        'Release',\n        'Tests',\n        '.git*',\n        '.vscode',\n        # The next three files are unique to this examples dir.\n        'DebugTest.ps1',\n        'Stop*.ps1',\n        'Readme.md',\n        (Split-Path $PSCommandPath -Leaf)\n    )\n\n    # Name of the repository you wish to publish to. Default repo is the PSGallery.\n    $PublishRepository = $null\n\n    # Your NuGet API key for the PSGallery.  Leave it as $null and the first time\n    # you publish you will be prompted to enter your API key.  The build will\n    # store the key encrypted in a file, so that on subsequent publishes you\n    # will no longer be prompted for the API key.\n    $NuGetApiKey = $null\n    $EncryptedApiKeyPath = &#34;$env:LOCALAPPDATA\\vscode-powershell\\NuGetApiKey.clixml&#34;\n}\n</pre>\n<p>You can get by with leaving most of these properties at their default values.  There are also two empty tasks – PrePublish and PostPublish – in which you can place PowerShell script to, for example, sign your module files before publishing or copy artifacts to other locations after publishing.</p>\n<p>The second file that makes this work is the <span style=\"font-family:Consolas;\">.vscode\\tasks.json</span> file which contains definitions for the Clean, Build, Publish and Test tasks.  Here’s a sample of that file e.g.:</p>\n<pre class=\"brush: jscript; title: ; notranslate\">\n{\n    &#34;taskName&#34;: &#34;Build&#34;,\n    &#34;suppressTaskName&#34;: true,\n    &#34;isBuildCommand&#34;: true,\n    &#34;showOutput&#34;: &#34;always&#34;,\n    &#34;args&#34;: [\n        &#34;Write-Host 'Invoking PSake...'; Invoke-PSake build.ps1 -taskList Build;&#34;,\n        &#34;Invoke-Command { Write-Host 'Completed Build task in task runner.' }&#34;\n    ]\n},\n{\n    &#34;taskName&#34;: &#34;Publish&#34;,\n    &#34;suppressTaskName&#34;: true,\n    &#34;showOutput&#34;: &#34;always&#34;,\n    &#34;args&#34;: [\n        &#34;Write-Host 'Invoking PSake...'; Invoke-PSake build.ps1 -taskList Publish;&#34;,\n        &#34;Invoke-Command { Write-Host 'Completed Publish task in task runner.' }&#34;\n    ]\n},\n</pre>\n<p>Notice the “isBuildCommand” setting for the Build task above is set to true.  This task is declaring to VSCode that it is the “Build” command for this VSCode workspace which means you can press <strong>Ctrl+Shift+B</strong> to “build” the Release directory.</p>\n<p>NOTE: Building and publishing require the installation of PSake.  The good folks working on PSake should be publishing it to the PowerShell Gallery soon thanks to PowerShell MVP Dave Wyatt’s help in setting up the module for publishing.  You should be able to install the module with the command:</p>\n<pre>PS C:\\&#62; Install-Module PSake -Scope CurrentUser\n</pre>\n<p>If the module can’t be found, download it from <a href=\"https://github.com/psake/psake/releases\">here</a> and install it manually.</p>\n<p>There is also a task for running Pester tests.  Its “isTestCommand” setting is set to true so you can press <strong>Ctrl+Shift+T</strong> to run your Pester tests at any time.</p>\n<p>So let’s look at a run through of opening the Examples folder and running the Build task in this animated gif.</p>\n<p><a href=\"https://rkeithhill.files.wordpress.com/2016/03/vscodetaskbuild.gif\"><img style=\"display:inline;\" title=\"VSCodeTaskBuild\" src=\"https://rkeithhill.files.wordpress.com/2016/03/vscodetaskbuild_thumb.gif?w=714&#038;h=659\" alt=\"VSCodeTaskBuild\" width=\"714\" height=\"659\" /></a></p>\n<p>The build task created the “Release” folder and copied just the files we want in our module to that folder. That’s the folder we will tell the Publish-Module command to use.  This is more reliable than trying to publish with a module name and relying on Publish-Module to find the one you intended by searching the $env:PSModulePath.  You can customize which files or directories are excluded from the Release directory by modifying the <span style=\"font-family:Consolas;\">$Exclude</span> hashtable property in the <span style=\"font-family:Consolas;\">Build.ps1</span> file.</p>\n<p>Every time you run the Build task, the first step is to execute the Clean task which “cleans” out the Release\\SampleModule directory so you have just the files in there you expect.  This also means you should not author any new files in this directory since the contents will be deleted on the next Build (or Publish).</p>\n<p>If you are using Git, the examples folder comes with a .gitignore that is configured to not check-in the Release directory as well as a temporary file that gets created in the Test directory.</p>\n<p>Now lets see how the publish process works.  As I mentioned above, you can play with this all you want since the Publish-Module command is specified with the “-WhatIf” parameter.  However, to demonstrate how this “would” work we do prompt for a NuGet API Key. For this example, you can type in any garbage string you want.  What you will note though, is that the second time you run the Publish task, you will NOT be prompted for that key.  That is because the Build.ps1 script will encrypt your NuGet API key and store it in your user profile directory &#8211; at this location: $env:LOCALAPPDATA\\vscode-powershell\\NuGetApiKey.clixml.</p>\n<p>Let’s run the publish task and see what this looks like:</p>\n<p><a href=\"https://rkeithhill.files.wordpress.com/2016/03/vscodetaskpublish.gif\"><img style=\"display:inline;\" title=\"VSCodeTaskPublish\" src=\"https://rkeithhill.files.wordpress.com/2016/03/vscodetaskpublish_thumb.gif?w=714&#038;h=659\" alt=\"VSCodeTaskPublish\" width=\"714\" height=\"659\" /></a></p>\n<p>Notice that after the Build step, all of your Pester tests are executed just to make sure that everything is working correctly before the publish step is attempted.  One of the Pester tests will likely be a canned test – it submits your PSD1 manifest file to the Test-ModuleManifest command.</p>\n<p>Hopefully this looks pretty cool to you.  I encourage you to look at the Build.ps1 script and if you spot any issues or have any feedback in general, let us know on <a href=\"https://github.com/PowerShell/vscode-powershell/issues/107\">GitHub</a>.</p>\n<p>There is a lot left to figure out.  Right now, we’ve crafted the tasks.json file, put in place the Build.ps1 file, the .gitignore file, provisioned a PSD1 module manifest file, started an about topic, etc.  What we would like to do is provide a mechanism by which you can tell the PowerShell extension to generate a “New PowerShell Gallery Module Project” or “New PowerShell Module Project” or “New Module Manifest File”.  This scaffolding capability will be a major addition to the PowerShell extension IMO.  But we also want to make sure that we don’t make too much of the build &#38; publish process “black-box” i.e. built-into the extension where it can’t easily be modified.  We are hoping that by using the VSCode task runner and PSake for build scripts, we keep the part you are mostly likely going to want to customize open to such customization.</p>\n","descriptionType":"html","publishedDate":"Fri, 11 Mar 2016 05:03:52 +0000","feedId":43217,"bgimg":"https://rkeithhill.files.wordpress.com/2016/03/image_thumb.png?w=254&h=469","linkMd5":"63b8b8c7f0d55693fa921f6a027fb17f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn56@2020_4/2020/10/09/20-53-54-042_da3b8d4b838d85e3.webp","destWidth":254,"destHeight":469,"sourceBytes":14984,"destBytes":16164,"author":"rkeithhill","articleImgCdnMap":{"https://rkeithhill.files.wordpress.com/2016/03/image_thumb.png?w=254&h=469":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn56@2020_4/2020/10/09/20-53-54-042_da3b8d4b838d85e3.webp","https://rkeithhill.files.wordpress.com/2016/03/vscodetaskbuild_thumb.gif?w=714&h=659":null,"https://rkeithhill.files.wordpress.com/2016/03/vscodetaskpublish_thumb.gif?w=714&h=659":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn60@2020_2/2020/10/09/20-54-01-450_5064ef98912d30e5.webp"},"publishedOrCreatedDate":1602276833855}],"record":{"createdTime":"2020-10-10 04:53:53","updatedTime":"2020-10-10 04:53:53","feedId":43217,"fetchDate":"Fri, 09 Oct 2020 20:53:53 +0000","fetchMs":1058,"handleMs":13,"totalMs":48701,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"2d58495c7a54fabcb8d2970f6d817794","hostName":"europe66*","requestId":"a44b32392fa343cab42830a9a3083999_43217","contentType":"application/rss+xml; charset=UTF-8","totalBytes":618742,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":3,"articlesImgsGithubTotal":2,"successGithubMap":{"myreaderx11":1,"myreaderx30":1},"failGithubMap":{"myreaderx23":1}},"feed":{"createdTime":"2020-09-07 03:30:18","updatedTime":"2020-09-07 05:47:37","id":43217,"name":"Keith Hill's Blog","url":"http://keithhill.spaces.live.com/feed.rss","subscriber":74,"website":null,"icon":"https://s0.wp.com/i/buttonw-com.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn90@2020_4/2020/09/06/21-47-36-722_89ee7de48d6e4f9c.png","description":"Just another WordPress.com site","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-10-10 04:54:41","updatedTime":"2020-10-10 04:54:41","id":null,"feedId":43217,"linkMd5":"63b8b8c7f0d55693fa921f6a027fb17f"}],"tmpCommonImgCdnBytes":16164,"tmpBodyImgCdnBytes":602578,"tmpBgImgCdnBytes":0,"extra4":{"start":1602276832782,"total":0,"statList":[{"spend":1060,"msg":"获取xml内容"},{"spend":13,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":46295,"msg":"正文链接上传到cdn"}]},"extra5":3,"extra6":3,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://rkeithhill.files.wordpress.com/2016/03/vscodetaskbuild_thumb.gif?w=714&h=659","sourceStatusCode":200,"destWidth":714,"destHeight":659,"sourceBytes":815437,"destBytes":595572,"targetWebpQuality":75,"feedId":43217,"totalSpendMs":24430,"convertSpendMs":24188,"createdTime":"2020-10-10 04:53:55","host":"us-039*","referer":"http://rkeithhill.wordpress.com/?p=570","linkMd5ListStr":"63b8b8c7f0d55693fa921f6a027fb17f","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn61/contents/2020/10/09/20-54-19-623_c49f7f2d079696c8.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Oct 2020 20:54:19 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D974:6C6A:2685AD:42C41A:5F80CDFA"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602278731"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn61/contents/2020/10/09/20-54-19-623_c49f7f2d079696c8.webp","historyStatusCode":[],"spendMs":100},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"796.3 KB","destSize":"581.6 KB","compressRate":"73%"},{"code":1,"isDone":false,"source":"https://rkeithhill.files.wordpress.com/2016/03/vscodetaskbuild_thumb.gif?w=714&h=659","sourceStatusCode":200,"destWidth":714,"destHeight":659,"sourceBytes":815437,"destBytes":595572,"targetWebpQuality":75,"feedId":43217,"totalSpendMs":21600,"convertSpendMs":21388,"createdTime":"2020-10-10 04:54:19","host":"us-039*","referer":"http://rkeithhill.wordpress.com/?p=570","linkMd5ListStr":"63b8b8c7f0d55693fa921f6a027fb17f","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn61/contents/2020/10/09/20-54-41-319_c49f7f2d079696c8.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Oct 2020 20:54:41 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A666:7E77:296EF:76F93:5F80CE0E"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602278731"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn61/contents/2020/10/09/20-54-41-319_c49f7f2d079696c8.webp","historyStatusCode":[],"spendMs":98},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"796.3 KB","destSize":"581.6 KB","compressRate":"73%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-039.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-040.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://rkeithhill.files.wordpress.com/2016/03/image_thumb.png?w=254&h=469","sourceStatusCode":200,"destWidth":254,"destHeight":469,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn56@2020_4/2020/10/09/20-53-54-042_da3b8d4b838d85e3.webp","sourceBytes":14984,"destBytes":16164,"targetWebpQuality":75,"feedId":43217,"totalSpendMs":1279,"convertSpendMs":6,"createdTime":"2020-10-10 04:53:53","host":"europe-25*","referer":"http://rkeithhill.wordpress.com/?p=570","linkMd5ListStr":"63b8b8c7f0d55693fa921f6a027fb17f,63b8b8c7f0d55693fa921f6a027fb17f","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.6 KB","destSize":"15.8 KB","compressRate":"107.9%"},{"code":1,"isDone":false,"source":"https://rkeithhill.files.wordpress.com/2016/03/vscodetaskpublish_thumb.gif?w=714&h=659","sourceStatusCode":200,"destWidth":714,"destHeight":659,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn60@2020_2/2020/10/09/20-54-01-450_5064ef98912d30e5.webp","sourceBytes":672630,"destBytes":602578,"targetWebpQuality":75,"feedId":43217,"totalSpendMs":7355,"convertSpendMs":6027,"createdTime":"2020-10-10 04:53:55","host":"us-040*","referer":"http://rkeithhill.wordpress.com/?p=570","linkMd5ListStr":"63b8b8c7f0d55693fa921f6a027fb17f","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"656.9 KB","destSize":"588.5 KB","compressRate":"89.6%"}],"successGithubMap":{"myreaderx11":1,"myreaderx30":1},"failGithubMap":{"myreaderx23":1}}