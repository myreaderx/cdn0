{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-11-18 14:54:27","updatedTime":"2020-11-18 14:54:27","title":"安卓自定义View进阶-Matrix Camera","link":"http://www.gcssloop.com/customview/matrix-3d-camera","description":"<p>本篇依旧属于Matrix，主要讲解Camera，Android下有很多相机应用，其中的美颜相机更是不少，不过今天这个Camera可不是我们平时拍照的那个相机，而是graphic包下的Camera，专业给View拍照的相机，不过既然是相机，作用都是类似的，主要是将3D的内容拍扁变成2D的内容。</p>\n\n<p>众所周知，我们的手机屏幕是一个2D的平面，所以也没办法直接显示3D的信息，因此我们看到的所有3D效果都是3D在2D平面的投影而已，而本文中的Camera主要作用就是这个，将3D信息转换为2D平面上的投影，实际上这个类更像是一个操作Matrix的工具类，使用Camera和Matrix可以在不使用OpenGL的情况下制作出简单的3D效果。</p>\n\n<blockquote>\n  <h2 id=\"️-警告测试本文章示例之前请关闭硬件加速\">⚠️ 警告：测试本文章示例之前请关闭硬件加速。</h2>\n</blockquote>\n\n<h2 id=\"camera常用方法表\">Camera常用方法表</h2>\n\n<table>\n  <thead>\n    <tr>\n      <th>方法类别</th>\n      <th>相关API</th>\n      <th>简介</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>基本方法</td>\n      <td>save、restore</td>\n      <td>保存、 回滚</td>\n    </tr>\n    <tr>\n      <td>常用方法</td>\n      <td>getMatrix、applyToCanvas</td>\n      <td>获取Matrix、应用到画布</td>\n    </tr>\n    <tr>\n      <td>平移</td>\n      <td>translate</td>\n      <td>位移</td>\n    </tr>\n    <tr>\n      <td>旋转</td>\n      <td>rotat (API 12)、rotateX、rotateY、rotateZ</td>\n      <td>各种旋转</td>\n    </tr>\n    <tr>\n      <td>相机位置</td>\n      <td>setLocation (API 12)、getLocationX (API 16)、getLocationY (API 16)、getLocationZ  (API 16)</td>\n      <td>设置与获取相机位置</td>\n    </tr>\n  </tbody>\n</table>\n\n<blockquote>\n  <p>Camera的方法并不是特别多，很多内容与之前的讲解的Canvas和Matrix类似，不过又稍有不同，之前的画布操作和Matrix主要是作用于2D空间，而Camera则主要作用于3D空间。</p>\n</blockquote>\n\n<h2 id=\"基础概念\">基础概念</h2>\n\n<p>在具体讲解方法之前，先补充几个基础概念，以便于后面理解。</p>\n\n<h3 id=\"3d坐标系\">3D坐标系</h3>\n\n<p>我们Camera使用的3维坐标系是<strong>左手坐标系，即左手手臂指向x轴正方向，四指弯曲指向y轴正方向，此时展开大拇指指向的方向是z轴正方向</strong>。</p>\n\n<p><img src=\"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071654.jpg?gcssloop\" alt=\"\" /></p>\n\n<blockquote>\n  <p>至于为什么要用左手坐标系呢？<del>大概是因为赶工的时候右手不方便比划吧，大雾。</del>实际上不同平台上使用的坐标系也有不同，有的是左手，有的是右手，貌似并没有统一的标准，只需要记住 Android 平台上面使用的是左手坐标系即可。</p>\n</blockquote>\n\n<p><strong>2D 和 3D 坐标是通过Matrix关联起来的，所以你可以认为两者是同一个坐标系，但又有差别，重点就是y轴方向不同。</strong></p>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">坐标系</th>\n      <th style=\"text-align: center\">2D坐标系</th>\n      <th style=\"text-align: center\">3D坐标系</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">原点默认位置</td>\n      <td style=\"text-align: center\">左上角</td>\n      <td style=\"text-align: center\">左上角</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">X 轴默认方向</td>\n      <td style=\"text-align: center\">右</td>\n      <td style=\"text-align: center\">右</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">Y 轴默认方向</td>\n      <td style=\"text-align: center\">下</td>\n      <td style=\"text-align: center\">上</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">Z 轴默认方向</td>\n      <td style=\"text-align: center\">无</td>\n      <td style=\"text-align: center\">垂直屏幕向内</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>3D坐标系在屏幕中各个坐标轴默认方向展示:</p>\n\n<blockquote>\n  <p>注意y轴默认方向是向上，而2D则是向下，另外本图不代表3D坐标系实际位置。</p>\n</blockquote>\n\n<p><img src=\"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071659.jpg?gcssloop\" alt=\"\" /></p>\n\n<h3 id=\"三维投影\">三维投影</h3>\n\n<blockquote>\n  <p><strong>三维投影</strong>是将三维空间中的点映射到二维平面上的方法。由于目前绝大多数图形数据的显示方式仍是二维的，因此三维投影的应用相当广泛，尤其是在计算机图形学，工程学和工程制图中。</p>\n</blockquote>\n\n<p>三维投影一般有两种，<strong>正交投影</strong> 和 <strong>透视投影</strong>。</p>\n\n<blockquote>\n  <p>正交投影就是我们数学上学过的 “正视图、正视图、侧视图、俯视图” 这些东西。</p>\n\n  <p>透视投影则更像拍照片，符合<strong>近大远小</strong>的关系，有立体感，<strong>我们此处使用的就是透视投影。</strong></p>\n</blockquote>\n\n<h3 id=\"摄像机\">摄像机</h3>\n\n<p>如果你学过Unity，那么你对摄像机这一个概念应该会有比较透彻的理解。在一个虚拟的3D的立体空间中，由于我们无法直接用眼睛去观察这一个空间，所以要借助摄像机采集信息，制成2D影像供我们观察。简单来说，<strong>摄像机就是我们观察虚拟3D空间的眼睛</strong>。</p>\n\n<p><strong>Android 上面观察View的摄像机默认位置在屏幕左上角，而且是距屏幕有一段距离的，假设灰色部分是手机屏幕，白色是上面的一个View，摄像机位置看起来大致就是下面这样子的(为了更好的展示摄像机的位置，做了一个空间转换效果的动图)。</strong></p>\n\n<p><img src=\"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071700.gif?gcssloop\" alt=\"\" /></p>\n\n<blockquote>\n  <p>摄像机的位置默认是 (0, 0, -576)。其中 -576＝ -8 x 72，虽然官方文档说距离屏幕的距离是 -8, 但经过测试实际距离是 -576 像素，当距离为 -10 的时候，实际距离为 -720 像素。我使用了3款手机测试，屏幕大小和像素密度均不同，但结果都是一样的。</p>\n\n  <p>这个魔数可以在 Android 底层的图像引擎 Skia 中找到。在 Skia 中，Camera 的位置单位是英寸，英寸和像素的换算单位在 Skia 中被固定为 72 像素，而 Android 中把这个换算单位照搬了过来。</p>\n</blockquote>\n\n<h2 id=\"基本方法\">基本方法</h2>\n\n<p>基本方法就有两个<code class=\"highlighter-rouge\">save</code> 和<code class=\"highlighter-rouge\">restore</code>，主要作用为<code class=\"highlighter-rouge\">保存当前状态和恢复到上一次保存的状态</code>，通常成对使用，常用格式如下:</p>\n\n<div class=\"language-java highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">save</span><span class=\"o\">();</span>\t\t<span class=\"c1\">// 保存状态</span>\n<span class=\"o\">...</span> \t\t\t<span class=\"c1\">// 具体操作</span>\n<span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">retore</span><span class=\"o\">();</span>\t<span class=\"c1\">// 回滚状态</span>\n</code></pre>\n</div>\n\n<h2 id=\"常用方法\">常用方法</h2>\n\n<p>这两个方法是Camera中最基础也是最常用的方法。</p>\n\n<h3 id=\"getmatrix\">getMatrix</h3>\n\n<div class=\"language-java highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"kt\">void</span> <span class=\"nf\">getMatrix</span> <span class=\"o\">(</span><span class=\"n\">Matrix</span> <span class=\"n\">matrix</span><span class=\"o\">)</span>\n</code></pre>\n</div>\n\n<p>计算当前状态下矩阵对应的状态，并将计算后的矩阵赋值给参数matrix。</p>\n\n<h3 id=\"applytocanvas\">applyToCanvas</h3>\n\n<div class=\"language-java highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"kt\">void</span> <span class=\"nf\">applyToCanvas</span> <span class=\"o\">(</span><span class=\"n\">Canvas</span> <span class=\"n\">canvas</span><span class=\"o\">)</span>\n</code></pre>\n</div>\n\n<p>计算当前状态下单矩阵对应的状态，并将计算后的矩阵应用到指定的canvas上。</p>\n\n<h2 id=\"平移\">平移</h2>\n\n<blockquote>\n  <p><strong>声明：以下示例中 Matrix 的平移均使用 postTranslate 来演示，实际情况中使用set、pre 或 post 需要视情况而定。</strong></p>\n</blockquote>\n\n<div class=\"language-java highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"kt\">void</span> <span class=\"nf\">translate</span> <span class=\"o\">(</span><span class=\"kt\">float</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">z</span><span class=\"o\">)</span>\n</code></pre>\n</div>\n\n<p>和2D平移类似，只不过是多出来了一个维度，从只能在2D平面上平移到在3D空间内平移，不过，此处仍有几个要点需要重点对待。</p>\n\n<h3 id=\"沿x轴平移\">沿x轴平移</h3>\n\n<div class=\"language-java highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">);</span>\n\n<span class=\"n\">matrix</span><span class=\"o\">.</span><span class=\"na\">postTranslate</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">);</span>\n</code></pre>\n</div>\n\n<p>两者x轴同向，所以 Camera 和 Matrix 在沿x轴平移上是一致的。</p>\n\n<p><strong>结论:</strong></p>\n\n<p>一致是指平移方向和平移距离一致，在默认情况下，上面两种均可以让坐标系向右移动x个单位。</p>\n\n<h3 id=\"沿y轴平移\">沿y轴平移</h3>\n\n<p>这个就有点意思了，两个坐标系相互关联，但是两者的y轴方向是相反的，很容易把人搞迷糊。你可以这么玩:</p>\n\n<div class=\"language-java highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">Camera</span> <span class=\"n\">camera</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Camera</span><span class=\"o\">();</span>\n<span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">100</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">);</span>    <span class=\"c1\">// camera - 沿y轴正方向平移100像素</span>\n\n<span class=\"n\">Matrix</span> <span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Matrix</span><span class=\"o\">();</span>\n<span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">getMatrix</span><span class=\"o\">(</span><span class=\"n\">matrix</span><span class=\"o\">);</span>\n<span class=\"n\">matrix</span><span class=\"o\">.</span><span class=\"na\">postTranslate</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"mi\">100</span><span class=\"o\">);</span>    <span class=\"c1\">// matrix - 沿y轴正方向平移100像素</span>\n\n<span class=\"n\">Log</span><span class=\"o\">.</span><span class=\"na\">i</span><span class=\"o\">(</span><span class=\"n\">TAG</span><span class=\"o\">,</span> <span class=\"s\">\"Matrix: \"</span><span class=\"o\">+</span><span class=\"n\">matrix</span><span class=\"o\">.</span><span class=\"na\">toShortString</span><span class=\"o\">());</span>\n</code></pre>\n</div>\n\n<p>在上面这种写法，虽然用了5行代码，但是效果却和 <code class=\"highlighter-rouge\">Matrix matrix = new Matrix();</code> 一样，结果都是单位矩阵。而且看起来貌似没有啥问题，毕竟两次平移都是正向100。(<del>如果遇见不懂技术的领导嫌你写代码量少，你可以这样多写几遍，反正一般人是看不出问题的。</del>)</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>Matrix: [1.0, 0.0, 0.0][0.0, 1.0, 0.0][0.0, 0.0, 1.0]\n</code></pre>\n</div>\n\n<p><strong>结论:</strong></p>\n\n<p>由于两者y轴相反，所以 <code class=\"highlighter-rouge\">camera.translate(0, -y, 0);</code> 与 <code class=\"highlighter-rouge\">matrix.postTranslate(0, y);</code>平移方向和距离一致，在默认情况下，这两种方法均可以让坐标系向下移动y个单位。</p>\n\n<h3 id=\"沿z轴平移\">沿z轴平移</h3>\n\n<p>这个不仅有趣，还容易蒙逼，上面两种情况再怎么闹腾也只是在2D平面上，而z轴的出现则让其有了空间感。</p>\n\n<p><strong>当View和摄像机在同一条直线上时:</strong> 此时沿z轴平移相当于缩放的效果，缩放中心为摄像机所在(x, y)坐标，当View接近摄像机时，看起来会变大，远离摄像机时，看起来会变小，<strong>近大远小</strong>。</p>\n\n<p><strong>当View和摄像机不在同一条直线上时:</strong> 当View远离摄像机的时候，View在缩小的同时也在不断接近摄像机在屏幕投影位置(通常情况下为Z轴，在平面上表现为接近坐标原点)。相反，当View接近摄像机的时候，View在放大的同时会远离摄像机在屏幕投影位置。</p>\n\n<p>我知道，这样说你们肯定是蒙逼的，话说为啥远离摄像机的时候会接近摄像机在屏幕投影位置(´･_･`)，肯定觉得我在逗你们玩，完全是前后矛盾，逻辑都不通，不过这个在这里的确是不矛盾的，因为远离是在3D空间里的情况，而接近只是在2D空间的投影，看下图。</p>\n\n<blockquote>\n  <p>假设大矩形是手机屏幕，白色小矩形是View，摄像机位于屏幕左上角，请注意上面View与摄像机的距离以及下方View的大小以及距离左上角(摄像机在屏幕投影位置)的距离。</p>\n</blockquote>\n\n<p><img src=\"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071701.gif?gcssloop\" alt=\"\" /></p>\n\n<p>至于为什么会这样，因为我们人眼视觉就是这样的，当我们看向远方的时候，视线最终都会消失在视平线上，如果你站在两条平行线中间，看起来它们会在远方(视平线上)相交，虽然在3D空间上两者距离不变，但在2D投影上却是越来越接近，如下图(图片来自网络):</p>\n\n<p><img src=\"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071703.jpg?gcssloop\" alt=\"\" /></p>\n\n<p><strong>结论:</strong></p>\n\n<p>关于3D效果的平移说起来比较麻烦，但你可以自己实际的体验一下，毕竟我们是生活在3D空间的，拿一张纸片来模拟View，用眼睛当做摄像机，在眼前来回移动纸片，多试几次大致就明白是怎么回事了。</p>\n\n<table>\n  <thead>\n    <tr>\n      <th style=\"text-align: center\">平移</th>\n      <th>重点内容</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style=\"text-align: center\">x轴</td>\n      <td>2D 和 3D 相同。</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">y轴</td>\n      <td>2D 和 3D 相反。</td>\n    </tr>\n    <tr>\n      <td style=\"text-align: center\">z轴</td>\n      <td>近大远小、视线相交。</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2 id=\"旋转\">旋转</h2>\n\n<p>旋转是Camera制作3D效果的核心，不过它制作出来的并不能算是真正的3D，而是伪3D，因为View是没有厚度的。</p>\n\n<div class=\"language-java highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"c1\">// (API 12) 可以控制View同时绕x，y，z轴旋转，可以由下面几种方法复合而来。</span>\n<span class=\"kt\">void</span> <span class=\"nf\">rotate</span> <span class=\"o\">(</span><span class=\"kt\">float</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">z</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 控制View绕单个坐标轴旋转</span>\n<span class=\"kt\">void</span> <span class=\"nf\">rotateX</span> <span class=\"o\">(</span><span class=\"kt\">float</span> <span class=\"n\">deg</span><span class=\"o\">);</span>\n<span class=\"kt\">void</span> <span class=\"nf\">rotateY</span> <span class=\"o\">(</span><span class=\"kt\">float</span> <span class=\"n\">deg</span><span class=\"o\">);</span>\n<span class=\"kt\">void</span> <span class=\"nf\">rotateZ</span> <span class=\"o\">(</span><span class=\"kt\">float</span> <span class=\"n\">deg</span><span class=\"o\">);</span>\n</code></pre>\n</div>\n\n<p>这个东西瞎扯理论也不好理解，直接上图:</p>\n\n<p align=\"center\">\n<img src=\"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2jw1f7sg375gbgg308c0eak4l.gif?gcssloop\" width=\"250\" style=\"display:inline;\" />\n<img src=\"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2jw1f7sgtl0nryg308c0eatm8.gif?gcssloop\" width=\"250\" style=\"display:inline;\" />\n<img src=\"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2jw1f7sgtxp6awg308c0eah5h.gif?gcssloop\" width=\"250\" style=\"display:inline;\" />\n</p>\n\n<p><strong>以上三张图分别为，绕x轴，y轴，z轴旋转的情况，至于为什么没有显示z轴，是因为z轴是垂直于手机屏幕的，在屏幕上的投影就是一个点。</strong></p>\n\n<p>关于旋转，有以下几点需要注意:</p>\n\n<h3 id=\"旋转中心\">旋转中心</h3>\n\n<p>旋转中心默认是坐标原点，对于图片来说就是左上角位置。</p>\n\n<p>我们都知道，在2D中，不论是旋转，错切还是缩放都是能够指定操作中心点位置的，但是在3D中却没有默认的方法，如果我们想要让图片围绕中心点旋转怎么办? 这就要使用到我们在<a href=\"http://www.gcssloop.com/customview/Matrix_Basic\">Matrix原理</a>提到过的方法:</p>\n\n<div class=\"language-java highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">Matrix</span> <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Matrix</span><span class=\"o\">();</span>\t\t<span class=\"c1\">// 临时Matrix变量</span>\n<span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">getMatrix</span><span class=\"o\">(</span><span class=\"n\">temp</span><span class=\"o\">);</span>\t\t\t<span class=\"c1\">// 获取Matrix</span>\n<span class=\"n\">temp</span><span class=\"o\">.</span><span class=\"na\">preTranslate</span><span class=\"o\">(-</span><span class=\"n\">centerX</span><span class=\"o\">,</span> <span class=\"o\">-</span><span class=\"n\">centerY</span><span class=\"o\">);</span>\t<span class=\"c1\">// 使用pre将旋转中心移动到和Camera位置相同。</span>\n<span class=\"n\">temp</span><span class=\"o\">.</span><span class=\"na\">postTranslate</span><span class=\"o\">(</span><span class=\"n\">centerX</span><span class=\"o\">,</span> <span class=\"n\">centerY</span><span class=\"o\">);</span>\t<span class=\"c1\">// 使用post将图片(View)移动到原来的位置</span>\n</code></pre>\n</div>\n\n<h3 id=\"官方示例-rotate3danimation\">官方示例-Rotate3dAnimation</h3>\n\n<p>说到3D旋转，最经典的应该就是ApiDemo里面的 <a href=\"https://android.googlesource.com/platform/development/+/master/samples/ApiDemos/src/com/example/android/apis/animation/Rotate3dAnimation.java\">Rotate3dAnimation</a> 了，见过不少博文都是根据Rotate3dAnimation修改的效果，这是一个非常经典的例子，鉴于代码也不长，就贴在这里和大家一起品鉴一下。</p>\n\n<div class=\"language-java highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Rotate3dAnimation</span> <span class=\"kd\">extends</span> <span class=\"n\">Animation</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">mFromDegrees</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">mToDegrees</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">mCenterX</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">mCenterY</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">mDepthZ</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"kt\">boolean</span> <span class=\"n\">mReverse</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Camera</span> <span class=\"n\">mCamera</span><span class=\"o\">;</span>\n    <span class=\"cm\">/**\n     * 创建一个绕y轴旋转的3D动画效果，旋转过程中具有深度调节，可以指定旋转中心。\n     * \n     * @param fromDegrees\t起始时角度\n     * @param toDegrees \t结束时角度\n     * @param centerX \t\t旋转中心x坐标\n     * @param centerY \t\t旋转中心y坐标\n     * @param depthZ\t\t最远到达的z轴坐标\n     * @param reverse \t\ttrue 表示由从0到depthZ，false相反\n     */</span>\n    <span class=\"kd\">public</span> <span class=\"nf\">Rotate3dAnimation</span><span class=\"o\">(</span><span class=\"kt\">float</span> <span class=\"n\">fromDegrees</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">toDegrees</span><span class=\"o\">,</span>\n            <span class=\"kt\">float</span> <span class=\"n\">centerX</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">centerY</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">depthZ</span><span class=\"o\">,</span> <span class=\"kt\">boolean</span> <span class=\"n\">reverse</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">mFromDegrees</span> <span class=\"o\">=</span> <span class=\"n\">fromDegrees</span><span class=\"o\">;</span>\n        <span class=\"n\">mToDegrees</span> <span class=\"o\">=</span> <span class=\"n\">toDegrees</span><span class=\"o\">;</span>\n        <span class=\"n\">mCenterX</span> <span class=\"o\">=</span> <span class=\"n\">centerX</span><span class=\"o\">;</span>\n        <span class=\"n\">mCenterY</span> <span class=\"o\">=</span> <span class=\"n\">centerY</span><span class=\"o\">;</span>\n        <span class=\"n\">mDepthZ</span> <span class=\"o\">=</span> <span class=\"n\">depthZ</span><span class=\"o\">;</span>\n        <span class=\"n\">mReverse</span> <span class=\"o\">=</span> <span class=\"n\">reverse</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">initialize</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">width</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">height</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">parentWidth</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">parentHeight</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kd\">super</span><span class=\"o\">.</span><span class=\"na\">initialize</span><span class=\"o\">(</span><span class=\"n\">width</span><span class=\"o\">,</span> <span class=\"n\">height</span><span class=\"o\">,</span> <span class=\"n\">parentWidth</span><span class=\"o\">,</span> <span class=\"n\">parentHeight</span><span class=\"o\">);</span>\n        <span class=\"n\">mCamera</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Camera</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">applyTransformation</span><span class=\"o\">(</span><span class=\"kt\">float</span> <span class=\"n\">interpolatedTime</span><span class=\"o\">,</span> <span class=\"n\">Transformation</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">fromDegrees</span> <span class=\"o\">=</span> <span class=\"n\">mFromDegrees</span><span class=\"o\">;</span>\n        <span class=\"kt\">float</span> <span class=\"n\">degrees</span> <span class=\"o\">=</span> <span class=\"n\">fromDegrees</span> <span class=\"o\">+</span> <span class=\"o\">((</span><span class=\"n\">mToDegrees</span> <span class=\"o\">-</span> <span class=\"n\">fromDegrees</span><span class=\"o\">)</span> <span class=\"o\">*</span> <span class=\"n\">interpolatedTime</span><span class=\"o\">);</span>\n        <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">centerX</span> <span class=\"o\">=</span> <span class=\"n\">mCenterX</span><span class=\"o\">;</span>\n        <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">centerY</span> <span class=\"o\">=</span> <span class=\"n\">mCenterY</span><span class=\"o\">;</span>\n        <span class=\"kd\">final</span> <span class=\"n\">Camera</span> <span class=\"n\">camera</span> <span class=\"o\">=</span> <span class=\"n\">mCamera</span><span class=\"o\">;</span>\n        <span class=\"kd\">final</span> <span class=\"n\">Matrix</span> <span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"na\">getMatrix</span><span class=\"o\">();</span>\n        <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">save</span><span class=\"o\">();</span>\n      \n      \t<span class=\"c1\">// 调节深度</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">mReverse</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(</span><span class=\"mf\">0.0f</span><span class=\"o\">,</span> <span class=\"mf\">0.0f</span><span class=\"o\">,</span> <span class=\"n\">mDepthZ</span> <span class=\"o\">*</span> <span class=\"n\">interpolatedTime</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n            <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(</span><span class=\"mf\">0.0f</span><span class=\"o\">,</span> <span class=\"mf\">0.0f</span><span class=\"o\">,</span> <span class=\"n\">mDepthZ</span> <span class=\"o\">*</span> <span class=\"o\">(</span><span class=\"mf\">1.0f</span> <span class=\"o\">-</span> <span class=\"n\">interpolatedTime</span><span class=\"o\">));</span>\n        <span class=\"o\">}</span>\n      \n      \t<span class=\"c1\">// 绕y轴旋转</span>\n        <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">rotateY</span><span class=\"o\">(</span><span class=\"n\">degrees</span><span class=\"o\">);</span>\n      \n        <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">getMatrix</span><span class=\"o\">(</span><span class=\"n\">matrix</span><span class=\"o\">);</span>\n        <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">restore</span><span class=\"o\">();</span>\n      \t\n      \t<span class=\"c1\">// 调节中心点</span>\n        <span class=\"n\">matrix</span><span class=\"o\">.</span><span class=\"na\">preTranslate</span><span class=\"o\">(-</span><span class=\"n\">centerX</span><span class=\"o\">,</span> <span class=\"o\">-</span><span class=\"n\">centerY</span><span class=\"o\">);</span>\n        <span class=\"n\">matrix</span><span class=\"o\">.</span><span class=\"na\">postTranslate</span><span class=\"o\">(</span><span class=\"n\">centerX</span><span class=\"o\">,</span> <span class=\"n\">centerY</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>\n</div>\n\n<p>可以看到，短短的几十行代码就完成了，而核心代码(有注释部分)仅仅几行而已，简洁易懂。不过呢，这一份代码依旧是一份未完成的代码(不然怎么叫ApiDemo呢?)，并且很多人不知道怎么修改。</p>\n\n<p>不知诸位在使用的时候可否发现了一个问题，同一份代码在不同手机上显示效果也是不同的，在像素密度较低的手机上，旋转效果比较正常，但是在像素密度较高的手机上显示效果则会很夸张，具体会怎样的，下面就来看一下具体效果。</p>\n\n<p><img src=\"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071704.gif?gcssloop\" alt=\"\" /></p>\n\n<p>可以看到，图片不仅因为形变失真，而且在中间一段因为形变过大导致图片无法显示，当然了，单个手机失真，你可以用<code class=\"highlighter-rouge\">depthZ</code>忽悠过去，当 <code class=\"highlighter-rouge\">depthZ</code> 设置的数值比较大大时候，图像在翻转同时会远离摄像头，距离比较远，失真就不会显得很严重，但这仍掩盖不了在不同手机上显示效果不同。</p>\n\n<p><strong>如何解决这一问题呢？</strong></p>\n\n<p>想要解决其实也不难，只要修改两个数值就可以了，这两个数值就是在Matrix中一直被众多开发者忽略的 <code class=\"highlighter-rouge\">MPERSP_0</code> 和 <code class=\"highlighter-rouge\">MPERSP_1</code></p>\n\n<p><img src=\"http://latex.codecogs.com/png.latex?$$\n\\left [ \n\\begin{matrix} \nMSCALE\\_X &amp; MSKEW\\_X &amp; MTRANS\\_X \\\n\\\nMSKEW\\_Y &amp; MSCALE\\_Y &amp; MTRANS\\_Y \\\n\\\nMPERSP\\_0 &amp; MPERSP\\_1 &amp; MPERSP\\_2 \n\\end{1} \n\\right ] \n$$\" alt=\"\" /></p>\n\n<p>下面是修改后的代码(重点部分都已经标注出来了):</p>\n\n<div class=\"language-java highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">Rotate3dAnimation</span> <span class=\"kd\">extends</span> <span class=\"n\">Animation</span> <span class=\"o\">{</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">mFromDegrees</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">mToDegrees</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">mCenterX</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">mCenterY</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">mDepthZ</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">final</span> <span class=\"kt\">boolean</span> <span class=\"n\">mReverse</span><span class=\"o\">;</span>\n    <span class=\"kd\">private</span> <span class=\"n\">Camera</span> <span class=\"n\">mCamera</span><span class=\"o\">;</span>\n    <span class=\"kt\">float</span> <span class=\"n\">scale</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">;</span>    <span class=\"c1\">// &lt;------- 像素密度</span>\n\n    <span class=\"cm\">/**\n     * 创建一个绕y轴旋转的3D动画效果，旋转过程中具有深度调节，可以指定旋转中心。\n     * @param context     &lt;------- 添加上下文,为获取像素密度准备\n     * @param fromDegrees 起始时角度\n     * @param toDegrees   结束时角度\n     * @param centerX     旋转中心x坐标\n     * @param centerY     旋转中心y坐标\n     * @param depthZ      最远到达的z轴坐标\n     * @param reverse     true 表示由从0到depthZ，false相反\n     */</span>\n    <span class=\"kd\">public</span> <span class=\"nf\">Rotate3dAnimation</span><span class=\"o\">(</span><span class=\"n\">Context</span> <span class=\"n\">context</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">fromDegrees</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">toDegrees</span><span class=\"o\">,</span>\n                             <span class=\"kt\">float</span> <span class=\"n\">centerX</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">centerY</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">depthZ</span><span class=\"o\">,</span> <span class=\"kt\">boolean</span> <span class=\"n\">reverse</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"n\">mFromDegrees</span> <span class=\"o\">=</span> <span class=\"n\">fromDegrees</span><span class=\"o\">;</span>\n        <span class=\"n\">mToDegrees</span> <span class=\"o\">=</span> <span class=\"n\">toDegrees</span><span class=\"o\">;</span>\n        <span class=\"n\">mCenterX</span> <span class=\"o\">=</span> <span class=\"n\">centerX</span><span class=\"o\">;</span>\n        <span class=\"n\">mCenterY</span> <span class=\"o\">=</span> <span class=\"n\">centerY</span><span class=\"o\">;</span>\n        <span class=\"n\">mDepthZ</span> <span class=\"o\">=</span> <span class=\"n\">depthZ</span><span class=\"o\">;</span>\n        <span class=\"n\">mReverse</span> <span class=\"o\">=</span> <span class=\"n\">reverse</span><span class=\"o\">;</span>\n\n        <span class=\"c1\">// 获取手机像素密度 （即dp与px的比例）</span>\n        <span class=\"n\">scale</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"na\">getResources</span><span class=\"o\">().</span><span class=\"na\">getDisplayMetrics</span><span class=\"o\">().</span><span class=\"na\">density</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">initialize</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">width</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">height</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">parentWidth</span><span class=\"o\">,</span> <span class=\"kt\">int</span> <span class=\"n\">parentHeight</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kd\">super</span><span class=\"o\">.</span><span class=\"na\">initialize</span><span class=\"o\">(</span><span class=\"n\">width</span><span class=\"o\">,</span> <span class=\"n\">height</span><span class=\"o\">,</span> <span class=\"n\">parentWidth</span><span class=\"o\">,</span> <span class=\"n\">parentHeight</span><span class=\"o\">);</span>\n        <span class=\"n\">mCamera</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Camera</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">applyTransformation</span><span class=\"o\">(</span><span class=\"kt\">float</span> <span class=\"n\">interpolatedTime</span><span class=\"o\">,</span> <span class=\"n\">Transformation</span> <span class=\"n\">t</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">fromDegrees</span> <span class=\"o\">=</span> <span class=\"n\">mFromDegrees</span><span class=\"o\">;</span>\n        <span class=\"kt\">float</span> <span class=\"n\">degrees</span> <span class=\"o\">=</span> <span class=\"n\">fromDegrees</span> <span class=\"o\">+</span> <span class=\"o\">((</span><span class=\"n\">mToDegrees</span> <span class=\"o\">-</span> <span class=\"n\">fromDegrees</span><span class=\"o\">)</span> <span class=\"o\">*</span> <span class=\"n\">interpolatedTime</span><span class=\"o\">);</span>\n        <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">centerX</span> <span class=\"o\">=</span> <span class=\"n\">mCenterX</span><span class=\"o\">;</span>\n        <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">centerY</span> <span class=\"o\">=</span> <span class=\"n\">mCenterY</span><span class=\"o\">;</span>\n        <span class=\"kd\">final</span> <span class=\"n\">Camera</span> <span class=\"n\">camera</span> <span class=\"o\">=</span> <span class=\"n\">mCamera</span><span class=\"o\">;</span>\n        <span class=\"kd\">final</span> <span class=\"n\">Matrix</span> <span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"na\">getMatrix</span><span class=\"o\">();</span>\n        <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">save</span><span class=\"o\">();</span>\n\n        <span class=\"c1\">// 调节深度</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">mReverse</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(</span><span class=\"mf\">0.0f</span><span class=\"o\">,</span> <span class=\"mf\">0.0f</span><span class=\"o\">,</span> <span class=\"n\">mDepthZ</span> <span class=\"o\">*</span> <span class=\"n\">interpolatedTime</span><span class=\"o\">);</span>\n        <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n            <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(</span><span class=\"mf\">0.0f</span><span class=\"o\">,</span> <span class=\"mf\">0.0f</span><span class=\"o\">,</span> <span class=\"n\">mDepthZ</span> <span class=\"o\">*</span> <span class=\"o\">(</span><span class=\"mf\">1.0f</span> <span class=\"o\">-</span> <span class=\"n\">interpolatedTime</span><span class=\"o\">));</span>\n        <span class=\"o\">}</span>\n\n        <span class=\"c1\">// 绕y轴旋转</span>\n        <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">rotateY</span><span class=\"o\">(</span><span class=\"n\">degrees</span><span class=\"o\">);</span>\n\n        <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">getMatrix</span><span class=\"o\">(</span><span class=\"n\">matrix</span><span class=\"o\">);</span>\n        <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">restore</span><span class=\"o\">();</span>\n\n        <span class=\"c1\">// 修正失真，主要修改 MPERSP_0 和 MPERSP_1</span>\n        <span class=\"kt\">float</span><span class=\"o\">[]</span> <span class=\"n\">mValues</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">float</span><span class=\"o\">[</span><span class=\"mi\">9</span><span class=\"o\">];</span>\n        <span class=\"n\">matrix</span><span class=\"o\">.</span><span class=\"na\">getValues</span><span class=\"o\">(</span><span class=\"n\">mValues</span><span class=\"o\">);</span>\t\t\t    <span class=\"c1\">//获取数值</span>\n        <span class=\"n\">mValues</span><span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">mValues</span><span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"o\">]/</span><span class=\"n\">scale</span><span class=\"o\">;</span>\t\t\t<span class=\"c1\">//数值修正</span>\n      \t<span class=\"n\">mValues</span><span class=\"o\">[</span><span class=\"mi\">7</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">mValues</span><span class=\"o\">[</span><span class=\"mi\">7</span><span class=\"o\">]/</span><span class=\"n\">scale</span><span class=\"o\">;</span>\t\t\t<span class=\"c1\">//数值修正</span>\n        <span class=\"n\">matrix</span><span class=\"o\">.</span><span class=\"na\">setValues</span><span class=\"o\">(</span><span class=\"n\">mValues</span><span class=\"o\">);</span>\t\t\t    <span class=\"c1\">//重新赋值</span>\n\n        <span class=\"c1\">// 调节中心点</span>\n        <span class=\"n\">matrix</span><span class=\"o\">.</span><span class=\"na\">preTranslate</span><span class=\"o\">(-</span><span class=\"n\">centerX</span><span class=\"o\">,</span> <span class=\"o\">-</span><span class=\"n\">centerY</span><span class=\"o\">);</span>\n        <span class=\"n\">matrix</span><span class=\"o\">.</span><span class=\"na\">postTranslate</span><span class=\"o\">(</span><span class=\"n\">centerX</span><span class=\"o\">,</span> <span class=\"n\">centerY</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>\n</div>\n\n<p>修改后效果：</p>\n\n<p><img src=\"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071706.gif?gcssloop\" alt=\"\" /></p>\n\n<p>上下对比差别还是很大的，顺便附上测试代码吧，layout文件就不写了，随便放一个ImageView就行了。</p>\n\n<div class=\"language-java highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">setContentView</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">layout</span><span class=\"o\">.</span><span class=\"na\">activity_test_camera_rotate2</span><span class=\"o\">);</span>\n<span class=\"n\">ImageView</span> <span class=\"n\">view</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"n\">ImageView</span><span class=\"o\">)</span> <span class=\"n\">findViewById</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">id</span><span class=\"o\">.</span><span class=\"na\">img</span><span class=\"o\">);</span>\n<span class=\"k\">assert</span> <span class=\"n\">view</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n<span class=\"n\">view</span><span class=\"o\">.</span><span class=\"na\">setOnClickListener</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">View</span><span class=\"o\">.</span><span class=\"na\">OnClickListener</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">onClick</span><span class=\"o\">(</span><span class=\"n\">View</span> <span class=\"n\">v</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"c1\">// 计算中心点（这里是使用view的中心作为旋转的中心点）</span>\n        <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">centerX</span> <span class=\"o\">=</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"na\">getWidth</span><span class=\"o\">()</span> <span class=\"o\">/</span> <span class=\"mf\">2.0f</span><span class=\"o\">;</span>\n        <span class=\"kd\">final</span> <span class=\"kt\">float</span> <span class=\"n\">centerY</span> <span class=\"o\">=</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"na\">getHeight</span><span class=\"o\">()</span> <span class=\"o\">/</span> <span class=\"mf\">2.0f</span><span class=\"o\">;</span>\n\n        <span class=\"c1\">//括号内参数分别为（上下文，开始角度，结束角度，x轴中心点，y轴中心点，深度，是否扭曲）</span>\n        <span class=\"kd\">final</span> <span class=\"n\">Rotate3dAnimation</span> <span class=\"n\">rotation</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Rotate3dAnimation</span><span class=\"o\">(</span><span class=\"n\">MainActivity</span><span class=\"o\">.</span><span class=\"na\">this</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">180</span><span class=\"o\">,</span> <span class=\"n\">centerX</span><span class=\"o\">,</span> <span class=\"n\">centerY</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"o\">,</span> <span class=\"kc\">true</span><span class=\"o\">,</span> <span class=\"mi\">2</span><span class=\"o\">);</span>\n\n        <span class=\"n\">rotation</span><span class=\"o\">.</span><span class=\"na\">setDuration</span><span class=\"o\">(</span><span class=\"mi\">3000</span><span class=\"o\">);</span>                         <span class=\"c1\">//设置动画时长</span>\n        <span class=\"n\">rotation</span><span class=\"o\">.</span><span class=\"na\">setFillAfter</span><span class=\"o\">(</span><span class=\"kc\">true</span><span class=\"o\">);</span>                        <span class=\"c1\">//保持旋转后效果</span>\n        <span class=\"n\">rotation</span><span class=\"o\">.</span><span class=\"na\">setInterpolator</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">LinearInterpolator</span><span class=\"o\">());</span>\t<span class=\"c1\">//设置插值器</span>\n        <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"na\">startAnimation</span><span class=\"o\">(</span><span class=\"n\">rotation</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">});</span>\n</code></pre>\n</div>\n\n<h2 id=\"相机位置\">相机位置</h2>\n\n<p>我们可以使用translate和rotate来控制拍摄对象，也可以移动相机自身的位置，不过这些方法并不常用(看添加时间就知道啦)。</p>\n\n<div class=\"language-java highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"kt\">void</span> <span class=\"nf\">setLocation</span> <span class=\"o\">(</span><span class=\"kt\">float</span> <span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">z</span><span class=\"o\">);</span> <span class=\"c1\">// (API 12) 设置相机位置，默认位置是(0, 0, -8)</span>\n\n<span class=\"kt\">float</span> <span class=\"nf\">getLocationX</span> <span class=\"o\">();</span>\t<span class=\"c1\">// (API 16) 获取相机位置的x坐标，下同</span>\n<span class=\"kt\">float</span> <span class=\"nf\">getLocationY</span> <span class=\"o\">();</span>\n<span class=\"kt\">float</span> <span class=\"nf\">getLocationZ</span> <span class=\"o\">();</span>\n</code></pre>\n</div>\n\n<p>我们知道近大远小，而物体之间的距离是相对的，让物体远离相机和让相机远离物体结果是一样的，实际上设置相机位置基本可以使用<code class=\"highlighter-rouge\">translate</code>替代。</p>\n\n<p>虽然设置相机位置用处并不大，但还是要提几点注意事项:</p>\n\n<h3 id=\"相机和view的z轴距离不能为0\">相机和View的z轴距离不能为0</h3>\n\n<p>这个比较容易理解，当你把一个物体和相机放在同一个位置的时候，相机是拍摄不到这个物体的，正如你拿一张卡片放在手机侧面，摄像头是拍摄不到的。</p>\n\n<h3 id=\"虚拟相机前后均可以拍摄\">虚拟相机前后均可以拍摄</h3>\n\n<p>当View不断接近摄像机并越过摄像机位置时，仍能看到View，并且View大小会随着距离摄像机的位置越来越远而逐渐变小，你可以理解为它有前置摄像头和后置摄像头。</p>\n\n<h3 id=\"摄像机右移等于view左移\">摄像机右移等于View左移</h3>\n\n<p>View的状态只取决于View和摄像机之间的相对位置，不过由于单位不同，摄像机平移一个单位等于View平移72个像素。下面两段代码是等价的:</p>\n\n<div class=\"language-java highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">Camera</span> <span class=\"n\">camera</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Camera</span><span class=\"o\">();</span>\n<span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">setLocation</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">,</span><span class=\"mi\">0</span><span class=\"o\">,-</span><span class=\"mi\">8</span><span class=\"o\">);</span>\t\t<span class=\"c1\">// 摄像机默认位置是(0, 0, -8)</span>\n<span class=\"n\">Matrix</span> <span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Matrix</span><span class=\"o\">();</span>\n<span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"na\">getMatrix</span><span class=\"o\">(</span><span class=\"n\">matrix</span><span class=\"o\">);</span>\n<span class=\"n\">Log</span><span class=\"o\">.</span><span class=\"na\">e</span><span class=\"o\">(</span><span class=\"n\">TAG</span><span class=\"o\">,</span> <span class=\"s\">\"location: \"</span><span class=\"o\">+</span><span class=\"n\">matrix</span><span class=\"o\">.</span><span class=\"na\">toShortString</span><span class=\"o\">()</span> <span class=\"o\">);</span>\n\n<span class=\"n\">Camera</span> <span class=\"n\">camera2</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Camera</span><span class=\"o\">();</span>\n<span class=\"n\">camera2</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(-</span><span class=\"mi\">72</span><span class=\"o\">,</span><span class=\"mi\">0</span><span class=\"o\">,</span><span class=\"mi\">0</span><span class=\"o\">);</span>\n<span class=\"n\">Matrix</span> <span class=\"n\">matrix2</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Matrix</span><span class=\"o\">();</span>\n<span class=\"n\">camera2</span><span class=\"o\">.</span><span class=\"na\">getMatrix</span><span class=\"o\">(</span><span class=\"n\">matrix2</span><span class=\"o\">);</span>\n<span class=\"n\">Log</span><span class=\"o\">.</span><span class=\"na\">e</span><span class=\"o\">(</span><span class=\"n\">TAG</span><span class=\"o\">,</span> <span class=\"s\">\"translate: \"</span><span class=\"o\">+</span><span class=\"n\">matrix2</span><span class=\"o\">.</span><span class=\"na\">toShortString</span><span class=\"o\">()</span> <span class=\"o\">);</span>\n</code></pre>\n</div>\n\n<p>结果:</p>\n\n<div class=\"highlighter-rouge\"><pre class=\"highlight\"><code>location: [1.0, 0.0, -72.0][0.0, 1.0, 0.0][0.0, 0.0, 1.0]\ntranslate: [1.0, 0.0, -72.0][0.0, 1.0, 0.0][0.0, 0.0, 1.0\n</code></pre>\n</div>\n\n<h3 id=\"要点\">要点</h3>\n\n<ul>\n  <li>View显示状态取决于View和摄像机之间的相对位置</li>\n  <li>View和相机的Z轴距离不能为0</li>\n</ul>\n\n<p><strong>小技巧:关于摄像机和View的位置，你可以打开手机后置摄像头，拿一张卡片来回的转动平移或者移动手机位置，观察卡片在屏幕上的变化，</strong></p>\n\n<h2 id=\"总结\">总结</h2>\n\n<p>本篇主要讲解了关于Camera和Matrix的一些基础知识，Camera运用得当的话是能够制造出很多炫酷的效果的，我这里算是抛砖引玉，推荐一些比较炫酷的控件。</p>\n\n<h4 id=\"flipshare\"><a href=\"https://github.com/JeasonWong/FlipShare\">FlipShare</a></h4>\n\n<h4 id=\"从零开始打造一个android-3d立体旋转容器\"><a href=\"http://blog.csdn.net/mr_immortalz/article/details/51918560\">从零开始打造一个Android 3D立体旋转容器</a></h4>\n\n<p align=\"center\">\n<a href=\"https://github.com/JeasonWong/FlipShare\" target=\"_blank\">\n<img src=\"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2gw1f7sm7ak62pg308c0et4qp.gif?gcssloop\" width=\"240\" style=\"display:inline;\" /></a>\n<a href=\"http://blog.csdn.net/mr_immortalz/article/details/51918560\" target=\"_blank\"><img src=\"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2jw1f7sm4xoh4ig308c0enx3p.gif?gcssloop\" width=\"240\" style=\"display:inline;\" /></a>\n</p>\n\n<h2 id=\"参考资料\">参考资料</h2>\n\n<p><a href=\"https://developer.android.com/reference/android/graphics/Camera.html\">Camera</a><br />\n<a href=\"https://github.com/JeasonWong/FlipShare\">FlipShare</a><br />\n<a href=\"http://blog.csdn.net/mr_immortalz/article/details/51918560\">从零开始打造一个Android 3D立体旋转容器</a><br /></p>\n\n<h2 id=\"about-me\">About Me</h2>\n\n<h3 id=\"作者微博-gcssloop\">作者微博: <a href=\"http://weibo.com/GcsSloop\" target=\"_blank\">@GcsSloop</a></h3>\n\n<p><a href=\"http://www.gcssloop.com/info/about\" target=\"_blank\"><img src=\"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/gcs_banner.jpg?gcssloop\" width=\"300\" style=\"display:inline;\" /></a></p>\n\n","descriptionType":"text/html","publishedDate":"Tue, 13 Sep 2016 16:00:00 +0000","feedId":32069,"bgimg":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071654.jpg?gcssloop","linkMd5":"f96bf3182cb3a685c96c8e363293f449","destWidth":300,"destHeight":198,"sourceBytes":13813,"destBytes":5668,"author":"","articleImgCdnMap":{"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071654.jpg?gcssloop":null,"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071659.jpg?gcssloop":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn56@2020_2/2020/11/18/06-55-30-142_a7a383b02d3da296.webp","http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071700.gif?gcssloop":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn47@2020_6/2020/11/18/06-54-32-164_3d55553dd1ded8a0.webp","http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071701.gif?gcssloop":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn43@2020_4/2020/11/18/06-54-37-179_d57b06fec3afcb27.webp","http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071703.jpg?gcssloop":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn60@2020_3/2020/11/18/06-54-30-745_d694528b3679efe8.webp","http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2jw1f7sg375gbgg308c0eak4l.gif?gcssloop":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn52@2020_6/2020/11/18/06-54-33-274_5601aeea02910463.webp","http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2jw1f7sgtl0nryg308c0eatm8.gif?gcssloop":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn40@2020_5/2020/11/18/06-54-32-625_c240742d9690d337.webp","http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2jw1f7sgtxp6awg308c0eah5h.gif?gcssloop":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn31@2020_6/2020/11/18/06-54-31-687_75e9b6472d15dcda.webp","http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071704.gif?gcssloop":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn63@2020_4/2020/11/18/06-54-32-979_36a674e74514ddfb.webp","http://latex.codecogs.com/png.latex?$$\n\\left [ \n\\begin{matrix} \nMSCALE\\_X & MSKEW\\_X & MTRANS\\_X \\\n\\\nMSKEW\\_Y & MSCALE\\_Y & MTRANS\\_Y \\\n\\\nMPERSP\\_0 & MPERSP\\_1 & MPERSP\\_2 \n\\end{1} \n\\right ] \n$$":null,"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071706.gif?gcssloop":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn72@2020_2/2020/11/18/06-54-36-349_2c2ff23ae3ee34b1.webp","http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2gw1f7sm7ak62pg308c0et4qp.gif?gcssloop":null,"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2jw1f7sm4xoh4ig308c0enx3p.gif?gcssloop":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn24@2020_3/2020/11/18/06-54-36-269_3df9f291bc90c7ab.webp","http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/gcs_banner.jpg?gcssloop":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn36@2020_5/2020/11/18/06-54-30-236_775db0567ddc3bb8.webp"},"publishedOrCreatedDate":1605682467437}],"record":{"createdTime":"2020-11-18 14:54:27","updatedTime":"2020-11-18 14:54:27","feedId":32069,"fetchDate":"Wed, 18 Nov 2020 06:54:27 +0000","fetchMs":1988,"handleMs":6623,"totalMs":73020,"newArticles":0,"totalArticles":51,"status":1,"type":0,"ip":"846f97cb3e9a7d10a538e1e63dbfda62","hostName":"europe62*","requestId":"7169872a7962433cbe8848165cd4ca6d_32069","contentType":"text/xml; charset=utf-8","totalBytes":2141572,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":14,"articlesImgsGithubTotal":11,"successGithubMap":{"myreaderx15":1,"myreaderx6":1,"myreaderx16":1,"myreaderx32":1,"myreaderx4":1,"myreaderx33":1,"myreaderx12":1,"myreaderx13":1,"myreaderx24":1,"myreaderx30":1,"myreaderx31":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}},"feed":{"createdTime":"2020-09-07 02:54:30","updatedTime":"2020-09-07 05:03:31","id":32069,"name":"GcsSloop","url":"http://www.gcssloop.com/feed.xml","subscriber":100,"website":null,"icon":"http://www.gcssloop.com/favicon.ico","icon_jsdelivr":null,"description":"嗨，我是 GcsSloop，一名来自2.5次元的魔法师，Android自定义View系列文章作者，非著名程序员。","weekly":null,"link":"http://www.gcssloop.com"},"noPictureArticleList":[{"createdTime":"2020-11-18 14:55:30","updatedTime":"2020-11-18 14:55:30","id":null,"feedId":32069,"linkMd5":"f96bf3182cb3a685c96c8e363293f449"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":2141572,"tmpBgImgCdnBytes":0,"extra4":{"start":1605682457903,"total":0,"statList":[{"spend":2911,"msg":"获取xml内容"},{"spend":6623,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":61606,"msg":"正文链接上传到cdn"}]},"extra5":14,"extra6":14,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071654.jpg?gcssloop","sourceStatusCode":200,"destWidth":300,"destHeight":198,"sourceBytes":13813,"destBytes":5668,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":940,"convertSpendMs":4,"createdTime":"2020-11-18 14:54:27","host":"us-035*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449,f96bf3182cb3a685c96c8e363293f449","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn18/contents/2020/11/18/06-54-28-253_026c2cbd479fa8af.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Wed, 18 Nov 2020 06:54:28 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["80A8:44AA:129DF99:1FA1B76:5FB4C524"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1605684631"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn18/contents/2020/11/18/06-54-28-253_026c2cbd479fa8af.webp","historyStatusCode":[],"spendMs":261},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.5 KB","destSize":"5.5 KB","compressRate":"41%"},{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071654.jpg?gcssloop","sourceStatusCode":200,"destWidth":300,"destHeight":198,"sourceBytes":13813,"destBytes":5668,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":683,"convertSpendMs":5,"createdTime":"2020-11-18 14:54:28","host":"us-035*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449,f96bf3182cb3a685c96c8e363293f449","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn18/contents/2020/11/18/06-54-29-186_026c2cbd479fa8af.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Wed, 18 Nov 2020 06:54:29 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["80E8:4E91:4DA159:D24F39:5FB4C525"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1605684631"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn18/contents/2020/11/18/06-54-29-186_026c2cbd479fa8af.webp","historyStatusCode":[],"spendMs":91},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.5 KB","destSize":"5.5 KB","compressRate":"41%"},{"code":1,"isDone":false,"source":"http://latex.codecogs.com/png.latex?$$\n\\left [ \n\\begin{matrix} \nMSCALE\\_X & MSKEW\\_X & MTRANS\\_X \\\n\\\nMSKEW\\_Y & MSCALE\\_Y & MTRANS\\_Y \\\n\\\nMPERSP\\_0 & MPERSP\\_1 & MPERSP\\_2 \n\\end{1} \n\\right ] \n$$","sourceStatusCode":400,"sourceBytes":0,"destBytes":0,"feedId":32069,"totalSpendMs":180,"convertSpendMs":0,"createdTime":"2020-11-18 14:54:29","host":"us-012*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[400],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://latex.codecogs.com/png.latex?$$\n\\left [ \n\\begin{matrix} \nMSCALE\\_X & MSKEW\\_X & MTRANS\\_X \\\n\\\nMSKEW\\_Y & MSCALE\\_Y & MTRANS\\_Y \\\n\\\nMPERSP\\_0 & MPERSP\\_1 & MPERSP\\_2 \n\\end{1} \n\\right ] \n$$","sourceStatusCode":400,"sourceBytes":0,"destBytes":0,"feedId":32069,"totalSpendMs":181,"convertSpendMs":0,"createdTime":"2020-11-18 14:54:29","host":"us-022*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[400],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2gw1f7sm7ak62pg308c0et4qp.gif?gcssloop","sourceStatusCode":200,"destWidth":300,"destHeight":533,"sourceBytes":734359,"destBytes":423510,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":5725,"convertSpendMs":1402,"createdTime":"2020-11-18 14:54:29","host":"us-020*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn68/contents/2020/11/18/06-54-35-035_1c0e1e20316ad42e.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Wed, 18 Nov 2020 06:54:35 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["BC84:513D:3CAD605:64E9747:5FB4C52B"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1605684637"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn68/contents/2020/11/18/06-54-35-035_1c0e1e20316ad42e.webp","historyStatusCode":[],"spendMs":127},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"717.1 KB","destSize":"413.6 KB","compressRate":"57.7%"},{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2gw1f7sm7ak62pg308c0et4qp.gif?gcssloop","sourceStatusCode":200,"destWidth":300,"destHeight":533,"sourceBytes":734359,"destBytes":423510,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":8608,"convertSpendMs":5184,"createdTime":"2020-11-18 14:54:35","host":"us-016*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn68/contents/2020/11/18/06-54-43-838_1c0e1e20316ad42e.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Wed, 18 Nov 2020 06:54:43 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D82C:3CAE:2D1CB7:7C204B:5FB4C528"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1605684637"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn68/contents/2020/11/18/06-54-43-838_1c0e1e20316ad42e.webp","historyStatusCode":[],"spendMs":81},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"717.1 KB","destSize":"413.6 KB","compressRate":"57.7%"},null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-032.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-028.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-022.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[400]},"http://us-024.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-020.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-54.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-004.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe67.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-016.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-040.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-012.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[400]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/gcs_banner.jpg?gcssloop","sourceStatusCode":200,"destWidth":500,"destHeight":167,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn36@2020_5/2020/11/18/06-54-30-236_775db0567ddc3bb8.webp","sourceBytes":16786,"destBytes":9238,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":1825,"convertSpendMs":6,"createdTime":"2020-11-18 14:54:29","host":"europe63*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.4 KB","destSize":"9 KB","compressRate":"55%"},{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071703.jpg?gcssloop","sourceStatusCode":200,"destWidth":300,"destHeight":300,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn60@2020_3/2020/11/18/06-54-30-745_d694528b3679efe8.webp","sourceBytes":54107,"destBytes":21944,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":2130,"convertSpendMs":10,"createdTime":"2020-11-18 14:54:29","host":"us-54*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"52.8 KB","destSize":"21.4 KB","compressRate":"40.6%"},{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071700.gif?gcssloop","sourceStatusCode":200,"destWidth":300,"destHeight":188,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn47@2020_6/2020/11/18/06-54-32-164_3d55553dd1ded8a0.webp","sourceBytes":103963,"destBytes":15976,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3565,"convertSpendMs":202,"createdTime":"2020-11-18 14:54:29","host":"us-016*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"101.5 KB","destSize":"15.6 KB","compressRate":"15.4%"},{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2jw1f7sgtxp6awg308c0eah5h.gif?gcssloop","sourceStatusCode":200,"destWidth":300,"destHeight":514,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn31@2020_6/2020/11/18/06-54-31-687_75e9b6472d15dcda.webp","sourceBytes":726362,"destBytes":231020,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3961,"convertSpendMs":359,"createdTime":"2020-11-18 14:54:29","host":"europe-25*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"709.3 KB","destSize":"225.6 KB","compressRate":"31.8%"},{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2jw1f7sgtl0nryg308c0eatm8.gif?gcssloop","sourceStatusCode":200,"destWidth":300,"destHeight":514,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn40@2020_5/2020/11/18/06-54-32-625_c240742d9690d337.webp","sourceBytes":508786,"destBytes":164328,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4248,"convertSpendMs":338,"createdTime":"2020-11-18 14:54:29","host":"us-040*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"496.9 KB","destSize":"160.5 KB","compressRate":"32.3%"},{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071704.gif?gcssloop","sourceStatusCode":200,"destWidth":300,"destHeight":514,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn63@2020_4/2020/11/18/06-54-32-979_36a674e74514ddfb.webp","sourceBytes":1067109,"destBytes":260512,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4672,"convertSpendMs":459,"createdTime":"2020-11-18 14:54:29","host":"us-032*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1 MB","destSize":"254.4 KB","compressRate":"24.4%"},{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2jw1f7sg375gbgg308c0eak4l.gif?gcssloop","sourceStatusCode":200,"destWidth":300,"destHeight":514,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn52@2020_6/2020/11/18/06-54-33-274_5601aeea02910463.webp","sourceBytes":497249,"destBytes":175628,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4921,"convertSpendMs":391,"createdTime":"2020-11-18 14:54:29","host":"us-004*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"485.6 KB","destSize":"171.5 KB","compressRate":"35.3%"},{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071706.gif?gcssloop","sourceStatusCode":200,"destWidth":300,"destHeight":514,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn72@2020_2/2020/11/18/06-54-36-349_2c2ff23ae3ee34b1.webp","sourceBytes":1042580,"destBytes":273224,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":8042,"convertSpendMs":1069,"createdTime":"2020-11-18 14:54:29","host":"us-008*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1,018.1 KB","destSize":"266.8 KB","compressRate":"26.2%"},{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-005Xtdi2jw1f7sm4xoh4ig308c0enx3p.gif?gcssloop","sourceStatusCode":200,"destWidth":300,"destHeight":527,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn24@2020_3/2020/11/18/06-54-36-269_3df9f291bc90c7ab.webp","sourceBytes":635714,"destBytes":601010,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":8253,"convertSpendMs":2431,"createdTime":"2020-11-18 14:54:29","host":"us-024*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"620.8 KB","destSize":"586.9 KB","compressRate":"94.5%"},{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071701.gif?gcssloop","sourceStatusCode":200,"destWidth":480,"destHeight":461,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn43@2020_4/2020/11/18/06-54-37-179_d57b06fec3afcb27.webp","sourceBytes":1025226,"destBytes":385736,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":8885,"convertSpendMs":3322,"createdTime":"2020-11-18 14:54:29","host":"us-028*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1,001.2 KB","destSize":"376.7 KB","compressRate":"37.6%"},{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-071659.jpg?gcssloop","sourceStatusCode":200,"destWidth":300,"destHeight":514,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn56@2020_2/2020/11/18/06-55-30-142_a7a383b02d3da296.webp","sourceBytes":10446,"destBytes":2956,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":1334,"convertSpendMs":11,"createdTime":"2020-11-18 14:55:29","host":"us-016*","referer":"http://www.gcssloop.com/customview/matrix-3d-camera","linkMd5ListStr":"f96bf3182cb3a685c96c8e363293f449","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.2 KB","destSize":"2.9 KB","compressRate":"28.3%"}],"successGithubMap":{"myreaderx15":1,"myreaderx6":1,"myreaderx16":1,"myreaderx32":1,"myreaderx4":1,"myreaderx33":1,"myreaderx12":1,"myreaderx13":1,"myreaderx24":1,"myreaderx30":1,"myreaderx31":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}}