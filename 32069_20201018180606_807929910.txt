{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-19 02:05:39","updatedTime":"2020-10-19 02:05:39","title":"雕虫晓技(四) 搭建私有Maven仓库(带容灾备份)","link":"http://www.gcssloop.com/gebug/maven-private","description":"<h3 id=\"关于作者\">关于作者</h3> \n<p>GcsSloop，一名 2.5 次元魔法师。<br /> <a href=\"http://weibo.com/GcsSloop/home\">微博</a> | <a href=\"https://github.com/GcsSloop\">GitHub</a> | <a href=\"http://www.gcssloop.com/\">博客</a></p> \n<p><img src=\"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-073231.jpg?gcssloop\" alt=\"\" /></p> \n<h3 id=\"0-前言\">0. 前言</h3> \n<p>随着 Android 开发的发展，Android 开发也相对越来越简单，很多基础库只用简单的添加一行依赖就可以使用了，不用自己去手动添加，升级也只需要修改一下版本号，简单便捷。那么它是如何实现的呢？事实上，我们所依赖的这些文件，是存放在一些公开仓库中的，当我们添加这些依赖时，Gredle 会自动去仓库中查找是否存在，如果存在，就下载下来放到本地参与编译。</p> \n<p>我们最常用的一些公开库大部分是放在 jcenter 仓库中的，我们在创建项目的时候会默认添加 jcenter 仓库，在项目的 build.gradle 文件中可以看到，如下：</p> \n<div class=\"language-groovy highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"n\">allprojects</span> <span class=\"o\">{</span>\n    <span class=\"n\">repositories</span> <span class=\"o\">{</span>\n        <span class=\"n\">jcenter</span><span class=\"o\">()</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre> \n</div> \n<p>但是，当我们自己开发的一些基础组件，也想要这样方面的添加到项目中时，就有点麻烦了，我们可以使用 <a href=\"https://bintray.com/\">bintray</a> 把这些组件上传到 jcenter 上面，但是上传过程非常麻烦，有一定的审核周期，并且一旦通过几乎无法撤销。</p> \n<p>除了 jcenter 这个官方使用的仓库，<a href=\"https://jitpack.io/\">jitpack</a> 也是不错的选择，它借助于 GitHub 进行上传，上传和配置过程都有极大的简化，并且没有审核周期，很多公开项目都转用 jitpack 了。</p> \n<p>但是，<strong>公开仓库仅适合托管一些公开的内容，假若这些库涉及到部分商业机密，或者存在某些私密技术方案，不希望被竞争公司了解，那么托管在公开仓库上无疑是非常不合适的。</strong></p> \n<p><strong>为了解决这些需求，自然就会有私有仓库的诞生，相信有不少公司都有自己的私有仓库。</strong> <strong>如何搭建一个私有仓库网络上有大量的教程，也并不困难，但是重点是如何保证私有仓库的安全稳定却是一个大问题。</strong> 如果仓库出现问题，则可能会导致所有的项目都无法 build 通过，会浪费大量的开发时间。</p> \n<p>因此，在搭建一个私有仓库时，就必须要考虑到风险问题。下面我们就从头开始搭建一个仓库，并将教大家如何规避一些常见的风险。</p> \n<h3 id=\"1-仓库搭建\">1. 仓库搭建</h3> \n<p>我们 Android 使用的是 maven 仓库，关于私有的 maven 仓库，有很多集成好的仓库环境，甚至你可以不借助任何环境自己手动维护一个仓库。当然，手动维护仓库需要耗费非常多的时间和精力，对于普通的开发人员来说，是得不偿失的，毕竟时间就是金钱，因此我们使用集成好的仓库环境，例如本文中会用到 Sonatype 的 Nexus。</p> \n<h4 id=\"11-java环境\">1.1 Java环境</h4> \n<p>要运行 Nexus，需要 Java 环境，根据教程进行 <a href=\"https://www.java.com/zh_CN/download/help/download_options.xml\">Oracle Java 安装和配置</a> 即可，配置好环境就可以进行下一步了。</p> \n<h4 id=\"12-下载\">1.2 下载</h4> \n<p>到 Sonytype 官网 https://www.sonatype.com/download-oss-sonatype 下载自己所需的平台和版本。</p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/01-download.png\" alt=\"01-download\" /></p> \n<p>直接下载对应平台的版本即可。</p> \n<p>下载后解压到合适的目录，无需安装，可以看到两个文件夹(所有平台的都一样)，如下:</p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/02-Sonytype目录.png\" alt=\"02-Sonytype目录\" /></p> \n<table> \n <thead> \n  <tr> \n   <th>目录</th> \n   <th>备注</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>nexus-x.x.x-xx</td> \n   <td>这个文件夹是存放应用程序的。</td> \n  </tr> \n  <tr> \n   <td>sonatype-work</td> \n   <td>这个文件夹是存放仓库和设置等相关内容的，<strong>如果备份数据，只用备份这个文件夹即可</strong>。</td> \n  </tr> \n </tbody> \n</table> \n<p>初次配置，我们只用关注如下几个文件即可：</p> \n<table> \n <thead> \n  <tr> \n   <th>文件</th> \n   <th>备注</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>./nexus-3.8.0-02/bin/nexus</td> \n   <td>运行程序</td> \n  </tr> \n  <tr> \n   <td>./nexus-3.8.0-02/bin/nexus.rc</td> \n   <td>用户配置</td> \n  </tr> \n  <tr> \n   <td>./nexus-3.8.0-02/etc/nexus-default.properties</td> \n   <td>端口配置</td> \n  </tr> \n </tbody> \n</table> \n<p>初期需要了解的文件就这三个，在 Linux 系统上使用 root 用户直接运行可能会警告，因此可以配置一下nexus.rc文件。至于端口号，默认是 8081，如果对这个没特殊要求，默认即可。</p> \n<p><strong>至于 ./nexus-3.8.0-02/bin/nexus 是主要的运行程序，建议将 bin 目录配置到环境变量中，这样就可以在任意位置启动和停止该程序了，否则只有在 bin 目录下才能调整。</strong></p> \n<p>Window 版本是 <strong>./nexus-3.8.0-02/bin/nexus.exe</strong> 不过用法是一样的。</p> \n<h4 id=\"13-运行\">1.3 运行</h4> \n<p>在命令行工具中输入启动命令：</p> \n<div class=\"language-shell highlighter-rouge\">\n <pre class=\"highlight\"><code>nexus start\n</code></pre> \n</div> \n<p>如果一切顺利，在等待几十秒到一两分钟之后就可以查看我们的仓库了，如果出错了，可以使用 run 命令来查看具体的出错原因：</p> \n<div class=\"language-shell highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c\"># run 命令相当于 debug 模式，会输出所有的日志信息</span>\nnexus run\n</code></pre> \n</div> \n<p>当然，Nexus 还有很多其他命令(例如:停止、重启、查看状态等)：</p> \n<div class=\"language-shell highlighter-rouge\">\n <pre class=\"highlight\"><code>nexus <span class=\"o\">{</span>start|stop|run|run-redirect|status|restart|force-reload<span class=\"o\">}</span>\n</code></pre> \n</div> \n<h4 id=\"14-查看\">1.4 查看</h4> \n<p>在输入 <code class=\"highlighter-rouge\">nexus start</code> 命令后，稍微等待一两分钟，就可以查看仓库了，如果在本机有图形化界面，直接在浏览器中输入 <code class=\"highlighter-rouge\">http://localhost:8081</code> 即可查看，如果修改了端口号，后面写对应的端口号即可。如果是运行在服务器上，则在其他电脑上输入<code class=\"highlighter-rouge\">http://{服务器ip}:{port}</code> IP 和对应的端口号。如果运行成功，则会看到类似如下界面：</p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/03-nexus.png\" alt=\"03-nexus\" /></p> \n<p><strong>备注：</strong></p> \n<ul> \n <li>在 Linux 和 Mac 上通过 <code class=\"highlighter-rouge\">ifconfig</code> 查看本机 IP。</li> \n <li>在 Windows 上通过 <code class=\"highlighter-rouge\">ipconfig</code> 查看本机 IP。</li> \n <li>127.0.0.1(localhost) 是本机回环地址，在其他机器上访问时不要使用这个地址。</li> \n</ul> \n<h3 id=\"2-仓库配置\">2. 仓库配置</h3> \n<p>经过上面的步骤，我们就有了一个空仓库，但是这个仓库还还需要进行一些基础的配置。</p> \n<h4 id=\"21-账号配置\">2.1 账号配置</h4> \n<h5 id=\"211-点击界面右上角的-sign-in-进行登录\">2.1.1 点击界面右上角的 <strong>Sign In</strong> 进行登录。</h5> \n<p><strong>初次登陆时使用默认账号：admin，密码：admin123。</strong></p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/04-signin.png\" alt=\"04-signin\" /></p> \n<h5 id=\"212-登陆后创建一个新用户\">2.1.2 登陆后创建一个新用户</h5> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/05-create-user.png\" alt=\"05-create-user\" /></p> \n<h5 id=\"213-填写用户信息\">2.1.3 填写用户信息</h5> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/06-create-user-info.png\" alt=\"06-create-user-info\" /></p> \n<p>填写具体的用户信息，其中比较重要的部分已经用红字标记出来了。</p> \n<p><strong>注意：</strong></p> \n<ul> \n <li>注意用户权限，默认应该是有两个权限，管理员权限和所有用户(包括未登录用户)权限。</li> \n <li>Roles 左侧为目前的权限组，右侧为当前用户拥有的权限组，可以通过 [&gt;] 和 [&lt;] 按钮来调整用户权限。</li> \n <li><strong>在创建完新的用户后记得删除最初的管理员账号或者修改管理员账号的密码。</strong></li> \n <li><strong>用户所拥有的权限，是根据其拥有的权限组决定的，只要拥有 nx-admin 权限组，就拥有所有的管理权限，要注意该权限的分配。</strong></li> \n</ul> \n<h4 id=\"22-创建仓库\">2.2 创建仓库</h4> \n<p>仓库也是在设置中进行创建的，如下：</p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/07-create-repository.png\" alt=\"07-create-repository\" /></p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/08-create-repository2.png\" alt=\"08-create-repository2\" /></p> \n<p><strong>我们用 maven 仓库即可，可以看到，仓库主要有三种类型：</strong></p> \n<ul> \n <li><strong>hosted：</strong> 本地仓库，我们一般使用这种类型的仓库。</li> \n <li><strong>proxy：</strong> 代理仓库，用于代理其他远程仓库。</li> \n <li><strong>group：</strong> 仓库组，用来合并多个 hosted / proxy 仓库。</li> \n</ul> \n<p>在一般情况下，我们创建 hosted 类型的 maven 仓库。</p> \n<p><strong>填写仓库信息</strong></p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/09-create-repository3.png\" alt=\"09-create-repository3\" /></p> \n<p>如果没有特殊需求，直接填写一个名称然后点击创建即可。</p> \n<p><strong>注意：</strong></p> \n<ul> \n <li><strong>Version policy(版本模式)</strong> 有三种模式 Release(发布)、Snapshot(快照)、Mixed(混合)。</li> \n <li><strong>Layout policy(布局模式)</strong> 有两种模式 Strict(严格模式)、Permissive(宽松模式)。</li> \n <li><strong>Deployment policy(部署模式)</strong> 有三种模式 Allow redploy(允许重新部署)、Disable redploy(不允许重新部署)、Read-only(只读)。</li> \n</ul> \n<p>一般情况下按照默认配置即可，需要注意的是，部署策略一般情况下请使用默认配置 <strong>Disable redploy(不允许重新部署)</strong>，例如，v1.0.0 版本的组建上传后，修改后再次以 v1.0.0 版本进行上传会上传失败，这样可以保证版本上传后不会被误覆盖掉，如果确定之前 v1.0.0 版本是错误上传的，需要重新上传，可以手动删除后再次上传，这样是最稳妥的。</p> \n<p>在创建完成后就可以在仓库列表中查看到新创建的仓库了。</p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/10-new-repository.png\" alt=\"10-new-repository\" /></p> \n<h4 id=\"23-用户权限配置\">2.3 用户权限配置</h4> \n<p>用户权限配置相对来说稍微复杂一点，如果开发人员较少，又都是老手，不会存在小白删库的情况下，可以给所有人都分配一个管理账号或者共用一个管理员账号即可。</p> \n<p>如果开发人员众多，又比较复杂，则需要仔细的控制每一个用户的权限，<strong>一般来说，给普通用户分配公共仓库的查看、上传、读取的权限，不要给编辑和删除的权限。</strong> 下面就带大家了解一下权限的详细设置方式：</p> \n<p>Nexus 默认就有一个游客账号(anonymous)，在默认状态下拥有浏览所有仓库的权限，即在不登陆的情况下，可以查看所有仓库。</p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/11-User-Anonymous.png\" alt=\"11-User-Anonymous\" /></p> \n<p>该账号的权限分配十分重要，它意味这赋予所有未登录用户的权限，如果将管理员权限分配给了该账号，就意味着所有未登录用户都可以使用管理员权限，如果没有特殊情况，不要随意修改该账号的默认权限。</p> \n<p>如果你不希望未登录用户查看，可以选择取消启用未登录账号，如下：</p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/12-Disable-Anonymous.png\" alt=\"12-Disable-Anonymous\" /></p> \n<p>然而，<strong>如果我们希望游客可以查看和使用一部分仓库，另外部分仓库又不希望被未登录用户看到，那么就需要详细进行设置了。</strong></p> \n<p>既然要修改权限，就要了解 Nexus 的权限管理方式，首先与权限有关的有如下几种：</p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/13-Sceurity.png\" alt=\"13-Sceurity\" /></p> \n<p>它们的关系如下：</p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/14-Nexus权限结构.jpg\" alt=\"14-Nexus权限结构\" /></p> \n<blockquote> \n <p><strong>注意：</strong></p> \n <ol> \n  <li>用户是通过持有不同的角色(权限组)来确定自己的权限管理范围的。</li> \n  <li>角色(权限组)可以由基础权限和其他基础权限组来构成。</li> \n </ol> \n</blockquote> \n<p>上面是 Nexus 支持的权限构成方式，在一般情况下我喜欢按照下面这种方式组织自己的权限。</p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/15-角色分组.jpg\" alt=\"15-角色分组\" /></p> \n<p>我把用户分为四类(超级管理员、仓库管理员、普通用户、游客)，并创建了四种类型的角色(权限组)，分别与之对应，这样在添加新用户的时候只需要赋予他对应的角色(权限组)即可。</p> \n<h5 id=\"231-游客权限配置\">2.3.1 游客权限配置</h5> \n<p><strong>创建角色(权限组)</strong></p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/16-create-role.png\" alt=\"16-create-role\" /></p> \n<p><strong>创建游客角色</strong></p> \n<p>其他的角色(权限组)也按照该方式进行创建即可，假设我们想把 gcssloop-central 这个仓库作为公开仓库，将这个仓库的查看和读取权限给予游客角色。</p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/17-role-anyone.png\" alt=\"17-role-anyone\" /></p> \n<p><strong>赋予游客用户权限</strong></p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/18-anyone.png\" alt=\"18-anyone\" /></p> \n<p>基础的设置方式就如上所示，只是不同的用户角色，拥有不同的权限而已。</p> \n<h5 id=\"231-普通用户权限配置\">2.3.1 普通用户权限配置</h5> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/18-1-normal-user.png\" alt=\"18-1-normal-user\" /></p> \n<h5 id=\"231-管理员权限配置\">2.3.1 管理员权限配置</h5> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/18-2-manager.png\" alt=\"18-2-manager\" /></p> \n<p>上面是一些常见的权限分配，比较粗略，如果有需要的话，可划分的更加细致，在创建完角色(Role)后，把对应的角色分配给对应的用户，该用户便可以获得对应的权限，超级管理员的角色(nx-admin)是默认就有的(拥有所有仓库的管理权限，以及修改设置的权限等)，它无需自己配置权限内容，只用分配给超级管理员用户使用即可。</p> \n<h3 id=\"3-仓库备份\">3. 仓库备份</h3> \n<p>为了保证数据的安全，一定要对仓库数据进行备份，这样在出现意外情况的时候可以快速的恢复仓库状态，将影响降到最低。</p> \n<h4 id=\"31-单仓库备份方案\">3.1 单仓库备份方案</h4> \n<p>仓库备份其实很简单，<strong>Nexus 的所有信息都存储在 sonatype-work 文件夹中，单一仓库需要定时的备份该文件夹，一天至少备份一次以上，在服务器上运行的可以自己弄一些定时脚本来帮助自动化备份。</strong></p> \n<p>恢复备份需要先关闭 nexux，让备份目录覆盖当前工作目录，之后重新启动 nexus 即可。</p> \n<h4 id=\"32-多仓库同步方案\">3.2 多仓库同步方案</h4> \n<p>可以在多个的电脑(服务器)上搭建多个相同版本的仓库，以其中一个为主仓库，定时同步 sonatype-work 文件夹到其他备份仓库。</p> \n<h4 id=\"33-多仓库同时上传\">3.3 多仓库同时上传</h4> \n<p>在拥有多个仓库的情况下，可以在上传脚本中配置多个仓库的上传方案，这样在发布的时候，分别发布到不同的仓库中，脚本的详细信息见下文。</p> \n<h4 id=\"34-多仓库部署方案\">3.4 多仓库部署方案</h4> \n<p><strong>我自己使用的是多仓库方案，同时部署多个仓库，这样在其中一个仓库出现问题的时候迅速切换到其他仓库，可以在不影响开发的情况下对该仓库进行修复。</strong></p> \n<p><strong>个人建议，直接把三个平台(Windows、Linux、OSX)的对应的同一版本都下载保存下来，这样方便以后部署，防止因为版本不同导致出现问题。</strong></p> \n<p>我自己在内网服务器(Winsows Server)上部署了一套系统，公网服务器(Linux)上部署了一套系统，又在自己的个人电脑(OXS)上部署了一套系统，也算是在所有平台上都部署过了，部署过程大致上是相同的，具体可以见上文。</p> \n<p>如果是多仓库部署的话，首先要部署并设置好一个仓库，之后部署时直接将设置完成仓库的 sonatype-work 文件夹复制后后续的部署平台上，这样就可以避免重复的设置，所有仓库的设置就可以保证是一致的。</p> \n<p>我自己使用的是多个仓库，并绑定了域名解析，这样在一个仓库出现问题的时候，只用将域名暂时解析到正常的仓库即可。</p> \n<h3 id=\"4-上传脚本\">4. 上传脚本</h3> \n<p>一个基础的上传脚本可以这样写，该上传脚本定义了三种基本行为：</p> \n<ol> \n <li>生成 doc 文档(该文档会上传到仓库上)</li> \n <li>上传到本机仓库，上传到公网仓库(如果你有更多仓库，同样可以仿照下面的方式配置上传信息)</li> \n <li>本地打包源码(本地的项目源码备份)，本地备份建议配合git使用。</li> \n</ol> \n<div class=\"language-groovy highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// pack-upload.gradle</span>\n\n<span class=\"c1\">// 指定编码</span>\n<span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"na\">withType</span><span class=\"o\">(</span><span class=\"n\">JavaCompile</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">options</span><span class=\"o\">.</span><span class=\"na\">encoding</span> <span class=\"o\">=</span> <span class=\"s2\">\"UTF-8\"</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">// 打包源码</span>\n<span class=\"n\">task</span> <span class=\"nf\">sourcesJar</span><span class=\"o\">(</span><span class=\"nl\">type:</span> <span class=\"n\">Jar</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">from</span> <span class=\"n\">android</span><span class=\"o\">.</span><span class=\"na\">sourceSets</span><span class=\"o\">.</span><span class=\"na\">main</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">.</span><span class=\"na\">srcDirs</span>\n    <span class=\"n\">classifier</span> <span class=\"o\">=</span> <span class=\"s1\">'sources'</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">task</span> <span class=\"nf\">javadoc</span><span class=\"o\">(</span><span class=\"nl\">type:</span> <span class=\"n\">Javadoc</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">failOnError</span>  <span class=\"kc\">false</span>\n    <span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">android</span><span class=\"o\">.</span><span class=\"na\">sourceSets</span><span class=\"o\">.</span><span class=\"na\">main</span><span class=\"o\">.</span><span class=\"na\">java</span><span class=\"o\">.</span><span class=\"na\">sourceFiles</span>\n    <span class=\"n\">classpath</span> <span class=\"o\">+=</span> <span class=\"n\">project</span><span class=\"o\">.</span><span class=\"na\">files</span><span class=\"o\">(</span><span class=\"n\">android</span><span class=\"o\">.</span><span class=\"na\">getBootClasspath</span><span class=\"o\">().</span><span class=\"na\">join</span><span class=\"o\">(</span><span class=\"n\">File</span><span class=\"o\">.</span><span class=\"na\">pathSeparator</span><span class=\"o\">))</span>\n    <span class=\"n\">classpath</span> <span class=\"o\">+=</span> <span class=\"n\">configurations</span><span class=\"o\">.</span><span class=\"na\">compile</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">// 制作文档(Javadoc)</span>\n<span class=\"n\">task</span> <span class=\"nf\">javadocJar</span><span class=\"o\">(</span><span class=\"nl\">type:</span> <span class=\"n\">Jar</span><span class=\"o\">,</span> <span class=\"nl\">dependsOn:</span> <span class=\"n\">javadoc</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">classifier</span> <span class=\"o\">=</span> <span class=\"s1\">'javadoc'</span>\n    <span class=\"n\">from</span> <span class=\"n\">javadoc</span><span class=\"o\">.</span><span class=\"na\">destinationDir</span>\n<span class=\"o\">}</span>\n\n<span class=\"n\">artifacts</span> <span class=\"o\">{</span>\n    <span class=\"n\">archives</span> <span class=\"n\">sourcesJar</span>\n    <span class=\"n\">archives</span> <span class=\"n\">javadocJar</span>\n<span class=\"o\">}</span>\n\n\n<span class=\"n\">apply</span> <span class=\"nl\">plugin:</span> <span class=\"s1\">'maven'</span>\n\n<span class=\"c1\">// 对应的仓库地址</span>\n<span class=\"kt\">def</span> <span class=\"n\">URL_PUCBLIC</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://lib.gcssloop.com:8081/repository/gcssloop-central/\"</span>\n<span class=\"kt\">def</span> <span class=\"n\">URL_LOCAL</span> <span class=\"o\">=</span> <span class=\"s2\">\"http://localhost:8081/repository/gcssloop-central/\"</span>\n\n<span class=\"c1\">// 上传到公共仓库</span>\n<span class=\"n\">task</span> <span class=\"nf\">uploadToPublic</span><span class=\"o\">(</span><span class=\"nl\">type:</span> <span class=\"n\">Upload</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"s1\">'upload'</span>\n    <span class=\"n\">configuration</span> <span class=\"o\">=</span> <span class=\"n\">configurations</span><span class=\"o\">.</span><span class=\"na\">archives</span>\n    <span class=\"n\">uploadDescriptor</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n    <span class=\"n\">repositories</span><span class=\"o\">{</span>\n        <span class=\"n\">mavenDeployer</span> <span class=\"o\">{</span>\n            <span class=\"n\">repository</span><span class=\"o\">(</span><span class=\"nl\">url:</span> <span class=\"n\">URL_PUCBLIC</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">authentication</span><span class=\"o\">(</span><span class=\"nl\">userName:</span> <span class=\"n\">USERNAME</span><span class=\"o\">,</span> <span class=\"nl\">password:</span> <span class=\"n\">PASSWORD</span><span class=\"o\">)</span>\n            <span class=\"o\">}</span>\n            <span class=\"n\">pom</span><span class=\"o\">.</span><span class=\"na\">version</span> <span class=\"o\">=</span> <span class=\"n\">VERSION</span>\n            <span class=\"n\">pom</span><span class=\"o\">.</span><span class=\"na\">artifactId</span> <span class=\"o\">=</span> <span class=\"n\">ARTIFACT_ID</span>\n            <span class=\"n\">pom</span><span class=\"o\">.</span><span class=\"na\">groupId</span> <span class=\"o\">=</span> <span class=\"n\">GROUP_ID</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>  \n<span class=\"o\">}</span>\n\n<span class=\"c1\">// 上传到本机仓库</span>\n<span class=\"n\">task</span> <span class=\"nf\">uploadToLocal</span><span class=\"o\">(</span><span class=\"nl\">type:</span> <span class=\"n\">Upload</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"s1\">'upload'</span>\n    <span class=\"n\">configuration</span> <span class=\"o\">=</span> <span class=\"n\">configurations</span><span class=\"o\">.</span><span class=\"na\">archives</span>\n    <span class=\"n\">uploadDescriptor</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n    <span class=\"n\">repositories</span><span class=\"o\">{</span>\n        <span class=\"n\">mavenDeployer</span> <span class=\"o\">{</span>\n            <span class=\"n\">repository</span><span class=\"o\">(</span><span class=\"nl\">url:</span> <span class=\"n\">URL_LOCAL</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n                <span class=\"n\">authentication</span><span class=\"o\">(</span><span class=\"nl\">userName:</span> <span class=\"n\">USERNAME</span><span class=\"o\">,</span> <span class=\"nl\">password:</span> <span class=\"n\">PASSWORD</span><span class=\"o\">)</span>\n            <span class=\"o\">}</span>\n            <span class=\"n\">pom</span><span class=\"o\">.</span><span class=\"na\">version</span> <span class=\"o\">=</span> <span class=\"n\">VERSION</span>\n            <span class=\"n\">pom</span><span class=\"o\">.</span><span class=\"na\">artifactId</span> <span class=\"o\">=</span> <span class=\"n\">ARTIFACT_ID</span>\n            <span class=\"n\">pom</span><span class=\"o\">.</span><span class=\"na\">groupId</span> <span class=\"o\">=</span> <span class=\"n\">GROUP_ID</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">}</span>  \n<span class=\"o\">}</span>\n\n<span class=\"c1\">// 压缩生成归档文件</span>\n<span class=\"n\">task</span> <span class=\"nf\">pack</span><span class=\"o\">(</span><span class=\"nl\">type:</span> <span class=\"n\">Zip</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"s1\">'pack'</span>\n    <span class=\"n\">archiveName</span> <span class=\"o\">=</span> <span class=\"n\">rootProject</span><span class=\"o\">.</span><span class=\"na\">getRootDir</span><span class=\"o\">().</span><span class=\"na\">getName</span><span class=\"o\">()</span> <span class=\"o\">+</span> <span class=\"s2\">\"_v\"</span> <span class=\"o\">+</span> <span class=\"n\">VERSION</span> <span class=\"o\">+</span> <span class=\"s2\">\".zip\"</span><span class=\"o\">;</span>\n    <span class=\"n\">destinationDir</span> <span class=\"o\">=</span> <span class=\"n\">rootProject</span><span class=\"o\">.</span><span class=\"na\">getRootDir</span><span class=\"o\">().</span><span class=\"na\">getParentFile</span><span class=\"o\">();</span>\n    <span class=\"n\">from</span> <span class=\"n\">rootProject</span><span class=\"o\">.</span><span class=\"na\">getRootDir</span><span class=\"o\">().</span><span class=\"na\">getAbsolutePath</span><span class=\"o\">();</span>\n    <span class=\"n\">exclude</span> <span class=\"s1\">'**.zip'</span>\n    <span class=\"n\">exclude</span> <span class=\"s1\">'**.iml'</span>\n    <span class=\"n\">exclude</span> <span class=\"s1\">'**/**.iml'</span>\n    <span class=\"n\">exclude</span> <span class=\"s1\">'build/**'</span>\n    <span class=\"n\">exclude</span> <span class=\"s1\">'.idea/**'</span>\n    <span class=\"n\">exclude</span> <span class=\"s1\">'.gradle/**'</span>\n    <span class=\"n\">exclude</span> <span class=\"s1\">'gradle/**'</span>\n    <span class=\"n\">exclude</span> <span class=\"s1\">'**/build/**'</span>\n<span class=\"o\">}</span>\n</code></pre> \n</div> \n<p><strong>上面脚本文件中所需的仓库地址可以从下面这个地方获得：</strong></p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/18-0-maven-url.png\" alt=\"18-0-maven-url\" /></p> \n<p><strong>你可以把这份文件放置到任何地方，项目中、本地的指定位置、甚至是网络上，这样在使用的时候只需要添加一下引用即可。</strong></p> \n<p>使用的时候如下(我把该文件放置在了自己电脑的桌面上)，在需要上传的 Library 的 build.gradle 中引用该文件并配置：</p> \n<div class=\"language-groovy highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 配置上传信息</span>\n<span class=\"n\">ext</span> <span class=\"o\">{</span>\n    <span class=\"n\">USERNAME</span> <span class=\"o\">=</span> <span class=\"s2\">\"GcsSloop\"</span>\n    <span class=\"n\">PASSWORD</span> <span class=\"o\">=</span> <span class=\"s2\">\"xxxxxxx\"</span>\n    <span class=\"n\">GROUP_ID</span> <span class=\"o\">=</span> <span class=\"s2\">\"com.gcssloop.demo\"</span>\n    <span class=\"n\">ARTIFACT_ID</span> <span class=\"o\">=</span> <span class=\"s2\">\"uploader\"</span>\n    <span class=\"n\">VERSION</span> <span class=\"o\">=</span> <span class=\"s2\">\"1.0.0\"</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">// 引用上传脚本</span>\n<span class=\"n\">apply</span> <span class=\"nl\">from:</span> <span class=\"s2\">\"/Users/gcssloop/Desktop/pack-upload.gradle\"</span>\n</code></pre> \n</div> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/19-config.png\" alt=\"19-config\" /></p> \n<p>在配置完善后同步一下项目，就可以打开 gradle 命令菜单看到多出来了3个命令，双击即可执行对应的命令：</p> \n<ul> \n <li>pack：打包项目</li> \n <li>uploadToLocal：上传到本机仓库</li> \n <li>uploadToPublic：上传到公网仓库</li> \n</ul> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/20-command.png\" alt=\"20-command\" /></p> \n<p>如果一切配置正确的话，等上传成功就可以在对应的仓库中看到上传的文件了。</p> \n<p><img src=\"http://www.gcssloop.com/assets/gebug/04-maven-private/21-upload-over-0156932.png\" alt=\"21-upload-over\" /></p> \n<h4 id=\"注意\">注意：</h4> \n<p><strong>1. 如非必要尽量不要去删除已发布的Library，如果发现Library有bug，请修复后更新版本号重新发布。</strong></p> \n<p><strong>2. 仓库默认不允许重新发布，若有更新，请修改版本号后再进行发布。</strong></p> \n<h3 id=\"5-依赖配置\">5. 依赖配置</h3> \n<h4 id=\"51-添加仓库地址\">5.1 添加仓库地址</h4> \n<p>在需要使用该 Library 的项目的根 build.gradle 中配置仓库地址(例如)：</p> \n<pre><code class=\"language-Groovy\">allprojects {\n    repositories {\n        jcenter()\n        maven {\n            // 配置用户名和密码\n            credentials { username 'GcsSloop' password 'xxxxxx' }\n            // 配置仓库地址（获取方式见上文）\n            url \"http://localhost:8081/repository/gcssloop-central/\"\n        }\n    }\n}\n</code></pre> \n<h4 id=\"52-添加具体library\">5.2 添加具体Library</h4> \n<p>在需要添加该项目的Module的对应 <code class=\"highlighter-rouge\">build.gradle</code> 下添加依赖。</p> \n<div class=\"language-groovy highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// &lt;包名&gt;:&lt;项目名&gt;:&lt;版本号&gt;，例如：</span>\n<span class=\"n\">compile</span> <span class=\"s1\">'com.gcssloop.demo:uploader:1.0.0'</span>\n</code></pre> \n</div> \n<p><strong>私有仓库的依赖使用方式和公共仓库远程依赖书写方式相同。</strong></p> \n<h3 id=\"6-后记\">6. 后记</h3> \n<p>在本系列第一篇文章 <a href=\"http://www.gcssloop.com/gebug/componentr\">组件化</a> 中，我简单的介绍了将业务模块抽取为组件的优点，这里的私有仓库本质上也是为它服务的。</p> \n<p>自己开发一个组件非常简单，但是一定要注意它的源码和文档管理，只有把源码的文档管理做好了，才能方便后续人员接手维护，否则单独抽取一个无法维护的组件是毫无意义的。</p> \n<p>有人可能会注意到，我在上传脚本中添加了一个 pack 方法，这个方法用于打包源码，也可以说是创建当前工程的一个快照，我一般在开发完成一个小版本后就会打包一次，它会自动打包成为这样的格式 <code class=\"highlighter-rouge\">项目名_v1.0.0.zip</code> ，相当于对每一个版本的源码都进行了保存，之后再配合 git 等工具进行源码管理。</p> \n<p><strong>也许有人会有疑问，既然用 git 管理了，何必在自己保存每一个版本的源码呢？</strong> 这主要是因为，git 虽然强大，但毕竟还是要自己手动提交的，有时比较懒，就容易漏掉几个小版本，而使用脚本直接双击就自动保存快照了，相比于git会快捷很多，并且，在需要某个特定版本源码的时候，也无需去git找提交记录了，直接把对应版本的zip文件解压一下就可以了。</p> \n<p>最后，私有仓库也并非是必须的，但如果你想自己开发维护一些私有组件库的话，非常推荐一试。</p>","descriptionType":"text/html","publishedDate":"Wed, 14 Mar 2018 16:00:00 +0000","feedId":32069,"bgimg":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-073231.jpg?gcssloop","linkMd5":"6dc5a6176e7bd7693fbcf9d430062599","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn5@2020_2/2020/10/18/18-05-56-899_48678ac56d2533de.webp","destWidth":900,"destHeight":200,"sourceBytes":53392,"destBytes":22146,"author":"","articleImgCdnMap":{"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-073231.jpg?gcssloop":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn5@2020_2/2020/10/18/18-05-56-899_48678ac56d2533de.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/01-download.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn30@2020_3/2020/10/18/18-06-02-005_1e33f6de9f784799.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/02-Sonytype目录.png":null,"http://www.gcssloop.com/assets/gebug/04-maven-private/03-nexus.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn54@2020_5/2020/10/18/18-06-04-651_b7da49528aa5c466.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/04-signin.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn42@2020_6/2020/10/18/18-06-01-042_8dd7461220eaeb10.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/05-create-user.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn46@2020_1/2020/10/18/18-06-02-031_d9a4d21381ef56ed.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/06-create-user-info.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn17@2020_6/2020/10/18/18-06-01-536_16800b2db8c9a0ea.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/07-create-repository.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn34@2020_1/2020/10/18/18-06-01-829_a137fc0f984353e7.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/08-create-repository2.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn57@2020_6/2020/10/18/18-06-02-251_927539dc9fd053b6.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/09-create-repository3.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn90@2020_2/2020/10/18/18-06-02-335_a0a4fa7226fd66d6.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/10-new-repository.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn38@2020_6/2020/10/18/18-06-04-000_e3bffa9a68c42e86.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/11-User-Anonymous.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn85@2020_6/2020/10/18/18-06-01-672_8856a6e042b9683a.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/12-Disable-Anonymous.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn99@2020_1/2020/10/18/18-06-04-073_d76ec2767eaa0fdb.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/13-Sceurity.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn66@2020_1/2020/10/18/18-06-01-531_67a28d75b5a05895.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/14-Nexus权限结构.jpg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn94@2020_3/2020/10/18/18-06-01-196_51d0c00821caf862.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/15-角色分组.jpg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn70@2020_4/2020/10/18/18-06-01-451_43d9cf099bb714ee.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/16-create-role.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn9@2020_2/2020/10/18/18-06-01-800_60f7d14a5b8c7beb.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/17-role-anyone.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn98@2020_4/2020/10/18/18-06-02-545_c65c0e034788f764.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/18-anyone.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn81@2020_1/2020/10/18/18-06-01-903_42aecd0f7317b1ce.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/18-1-normal-user.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn11@2020_4/2020/10/18/18-06-01-826_966d06fc7c6eb523.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/18-2-manager.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn61@2020_1/2020/10/18/18-06-01-830_c6ccb88caa546abe.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/18-0-maven-url.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn22@2020_1/2020/10/18/18-06-01-721_f4f31a29e805ae31.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/19-config.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn25@2020_1/2020/10/18/18-06-02-036_d7e61025a1e2493b.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/20-command.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn73@2020_5/2020/10/18/18-06-01-620_c32e715e439475fa.webp","http://www.gcssloop.com/assets/gebug/04-maven-private/21-upload-over-0156932.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn50@2020_3/2020/10/18/18-06-02-055_0ae14841680f7c0f.webp"},"publishedOrCreatedDate":1603044339908}],"record":{"createdTime":"2020-10-19 02:05:39","updatedTime":"2020-10-19 02:05:39","feedId":32069,"fetchDate":"Sun, 18 Oct 2020 18:05:39 +0000","fetchMs":2610,"handleMs":8415,"totalMs":38196,"newArticles":0,"totalArticles":51,"status":1,"type":0,"ip":"e3d58f1f26dc8d2296216d69f863005c","hostName":"europe70*","requestId":"28c4d340c2374d6b85f84ef26e7f19a9_32069","contentType":"text/xml; charset=utf-8","totalBytes":1625864,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":25,"articlesImgsGithubTotal":24,"successGithubMap":{"myreaderx8":1,"myreaderx7":1,"myreaderx15":1,"myreaderx16":1,"myreaderx6":1,"myreaderx4":1,"myreaderx10":1,"myreaderx33":1,"myreaderx3":1,"myreaderx11":1,"myreaderx2":1,"myreaderx12":1,"myreaderx13":1,"myreaderx1":1,"myreaderx30":1,"myreaderx31":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1,"myreaderx27":1,"myreaderx21":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{"myreaderx14":1}},"feed":{"createdTime":"2020-09-07 02:54:30","updatedTime":"2020-09-07 05:03:31","id":32069,"name":"GcsSloop","url":"http://www.gcssloop.com/feed.xml","subscriber":100,"website":null,"icon":"http://www.gcssloop.com/favicon.ico","icon_jsdelivr":null,"description":"嗨，我是 GcsSloop，一名来自2.5次元的魔法师，Android自定义View系列文章作者，非著名程序员。","weekly":null,"link":"http://www.gcssloop.com"},"noPictureArticleList":[{"createdTime":"2020-10-19 02:06:05","updatedTime":"2020-10-19 02:06:05","id":null,"feedId":32069,"linkMd5":"6dc5a6176e7bd7693fbcf9d430062599"}],"tmpCommonImgCdnBytes":22146,"tmpBodyImgCdnBytes":1603718,"tmpBgImgCdnBytes":0,"extra4":{"start":1603044327601,"total":0,"statList":[{"spend":3892,"msg":"获取xml内容"},{"spend":8415,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":7721,"msg":"正文链接上传到cdn"}]},"extra5":25,"extra6":25,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/02-Sonytype目录.png","sourceStatusCode":200,"destWidth":1054,"destHeight":552,"sourceBytes":70727,"destBytes":19184,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3482,"convertSpendMs":50,"createdTime":"2020-10-19 02:05:58","host":"us-023*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn78/contents/2020/10/18/18-06-01-518_7ccbb0b951baa390.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 18 Oct 2020 18:06:01 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D188:0ED6:642512:1214126:5F8C8409"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1603047733"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn78/contents/2020/10/18/18-06-01-518_7ccbb0b951baa390.webp","historyStatusCode":[],"spendMs":158},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"69.1 KB","destSize":"18.7 KB","compressRate":"27.1%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/02-Sonytype目录.png","sourceStatusCode":200,"destWidth":1054,"destHeight":552,"sourceBytes":70727,"destBytes":19184,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":2571,"convertSpendMs":90,"createdTime":"2020-10-19 02:06:01","host":"us-023*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn78/contents/2020/10/18/18-06-04-272_7ccbb0b951baa390.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 18 Oct 2020 18:06:04 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B0F8:4511:8256BA:15390C7:5F8C840B"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1603047733"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn78/contents/2020/10/18/18-06-04-272_7ccbb0b951baa390.webp","historyStatusCode":[],"spendMs":64},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"69.1 KB","destSize":"18.7 KB","compressRate":"27.1%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-039.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-24.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-007.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-015.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-011.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-019.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-003.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-023.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/2019-04-29-073231.jpg?gcssloop","sourceStatusCode":200,"destWidth":900,"destHeight":200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn5@2020_2/2020/10/18/18-05-56-899_48678ac56d2533de.webp","sourceBytes":53392,"destBytes":22146,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":2419,"convertSpendMs":10,"createdTime":"2020-10-19 02:05:55","host":"europe-57*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599,6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"52.1 KB","destSize":"21.6 KB","compressRate":"41.5%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/04-signin.png","sourceStatusCode":200,"destWidth":740,"destHeight":490,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn42@2020_6/2020/10/18/18-06-01-042_8dd7461220eaeb10.webp","sourceBytes":31884,"destBytes":10406,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3612,"convertSpendMs":30,"createdTime":"2020-10-19 02:05:58","host":"us-003*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.1 KB","destSize":"10.2 KB","compressRate":"32.6%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/14-Nexus权限结构.jpg","sourceStatusCode":200,"destWidth":720,"destHeight":300,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn94@2020_3/2020/10/18/18-06-01-196_51d0c00821caf862.webp","sourceBytes":27407,"destBytes":12672,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3824,"convertSpendMs":8,"createdTime":"2020-10-19 02:05:58","host":"us-039*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.8 KB","destSize":"12.4 KB","compressRate":"46.2%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/20-command.png","sourceStatusCode":200,"destWidth":1122,"destHeight":740,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn73@2020_5/2020/10/18/18-06-01-620_c32e715e439475fa.webp","sourceBytes":94166,"destBytes":27756,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4256,"convertSpendMs":53,"createdTime":"2020-10-19 02:05:58","host":"us-035*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"92 KB","destSize":"27.1 KB","compressRate":"29.5%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/06-create-user-info.png","sourceStatusCode":200,"destWidth":1232,"destHeight":1466,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn17@2020_6/2020/10/18/18-06-01-536_16800b2db8c9a0ea.webp","sourceBytes":203456,"destBytes":67522,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4269,"convertSpendMs":204,"createdTime":"2020-10-19 02:05:58","host":"us-011*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"198.7 KB","destSize":"65.9 KB","compressRate":"33.2%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/15-角色分组.jpg","sourceStatusCode":200,"destWidth":802,"destHeight":805,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn70@2020_4/2020/10/18/18-06-01-451_43d9cf099bb714ee.webp","sourceBytes":89290,"destBytes":38914,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4550,"convertSpendMs":19,"createdTime":"2020-10-19 02:05:58","host":"europe-57*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"87.2 KB","destSize":"38 KB","compressRate":"43.6%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/16-create-role.png","sourceStatusCode":200,"destWidth":1744,"destHeight":706,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn9@2020_2/2020/10/18/18-06-01-800_60f7d14a5b8c7beb.webp","sourceBytes":192376,"destBytes":49744,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4455,"convertSpendMs":71,"createdTime":"2020-10-19 02:05:58","host":"us-022*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"187.9 KB","destSize":"48.6 KB","compressRate":"25.9%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/18-1-normal-user.png","sourceStatusCode":200,"destWidth":1236,"destHeight":866,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn11@2020_4/2020/10/18/18-06-01-826_966d06fc7c6eb523.webp","sourceBytes":141758,"destBytes":55342,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4518,"convertSpendMs":155,"createdTime":"2020-10-19 02:05:58","host":"us-023*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"138.4 KB","destSize":"54 KB","compressRate":"39%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/07-create-repository.png","sourceStatusCode":200,"destWidth":1682,"destHeight":704,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn34@2020_1/2020/10/18/18-06-01-829_a137fc0f984353e7.webp","sourceBytes":203146,"destBytes":54720,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4523,"convertSpendMs":154,"createdTime":"2020-10-19 02:05:58","host":"us-027*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"198.4 KB","destSize":"53.4 KB","compressRate":"26.9%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/18-2-manager.png","sourceStatusCode":200,"destWidth":1246,"destHeight":876,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn61@2020_1/2020/10/18/18-06-01-830_c6ccb88caa546abe.webp","sourceBytes":113276,"destBytes":46530,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4598,"convertSpendMs":66,"createdTime":"2020-10-19 02:05:58","host":"us-007*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"110.6 KB","destSize":"45.4 KB","compressRate":"41.1%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/13-Sceurity.png","sourceStatusCode":200,"destWidth":1690,"destHeight":706,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn66@2020_1/2020/10/18/18-06-01-531_67a28d75b5a05895.webp","sourceBytes":186163,"destBytes":48852,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4760,"convertSpendMs":52,"createdTime":"2020-10-19 02:05:58","host":"europe69*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"181.8 KB","destSize":"47.7 KB","compressRate":"26.2%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/11-User-Anonymous.png","sourceStatusCode":200,"destWidth":1776,"destHeight":616,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn85@2020_6/2020/10/18/18-06-01-672_8856a6e042b9683a.webp","sourceBytes":187989,"destBytes":52298,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4760,"convertSpendMs":70,"createdTime":"2020-10-19 02:05:58","host":"europe-24*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"183.6 KB","destSize":"51.1 KB","compressRate":"27.8%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/18-anyone.png","sourceStatusCode":200,"destWidth":1722,"destHeight":1620,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn81@2020_1/2020/10/18/18-06-01-903_42aecd0f7317b1ce.webp","sourceBytes":364388,"destBytes":100102,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4668,"convertSpendMs":289,"createdTime":"2020-10-19 02:05:58","host":"us-011*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"355.8 KB","destSize":"97.8 KB","compressRate":"27.5%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/18-0-maven-url.png","sourceStatusCode":200,"destWidth":1714,"destHeight":728,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn22@2020_1/2020/10/18/18-06-01-721_f4f31a29e805ae31.webp","sourceBytes":209413,"destBytes":57656,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4843,"convertSpendMs":112,"createdTime":"2020-10-19 02:05:58","host":"europe-24*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"204.5 KB","destSize":"56.3 KB","compressRate":"27.5%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/01-download.png","sourceStatusCode":200,"destWidth":2398,"destHeight":1370,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn30@2020_3/2020/10/18/18-06-02-005_1e33f6de9f784799.webp","sourceBytes":314154,"destBytes":123522,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4848,"convertSpendMs":140,"createdTime":"2020-10-19 02:05:58","host":"us-039*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"306.8 KB","destSize":"120.6 KB","compressRate":"39.3%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/21-upload-over-0156932.png","sourceStatusCode":200,"destWidth":1716,"destHeight":772,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn50@2020_3/2020/10/18/18-06-02-055_0ae14841680f7c0f.webp","sourceBytes":215708,"destBytes":75458,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4700,"convertSpendMs":222,"createdTime":"2020-10-19 02:05:58","host":"us-53*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"210.7 KB","destSize":"73.7 KB","compressRate":"35%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/05-create-user.png","sourceStatusCode":200,"destWidth":1884,"destHeight":700,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn46@2020_1/2020/10/18/18-06-02-031_d9a4d21381ef56ed.webp","sourceBytes":229858,"destBytes":63220,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":5053,"convertSpendMs":55,"createdTime":"2020-10-19 02:05:58","host":"europe65*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"224.5 KB","destSize":"61.7 KB","compressRate":"27.5%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/08-create-repository2.png","sourceStatusCode":200,"destWidth":1678,"destHeight":1530,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn57@2020_6/2020/10/18/18-06-02-251_927539dc9fd053b6.webp","sourceBytes":445714,"destBytes":117152,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":5091,"convertSpendMs":151,"createdTime":"2020-10-19 02:05:58","host":"us-019*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"435.3 KB","destSize":"114.4 KB","compressRate":"26.3%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/19-config.png","sourceStatusCode":200,"destWidth":1474,"destHeight":1422,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn25@2020_1/2020/10/18/18-06-02-036_d7e61025a1e2493b.webp","sourceBytes":266252,"destBytes":83462,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":5348,"convertSpendMs":156,"createdTime":"2020-10-19 02:05:58","host":"europe61*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"260 KB","destSize":"81.5 KB","compressRate":"31.3%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/17-role-anyone.png","sourceStatusCode":200,"destWidth":1394,"destHeight":1626,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn98@2020_4/2020/10/18/18-06-02-545_c65c0e034788f764.webp","sourceBytes":233559,"destBytes":84688,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":5308,"convertSpendMs":359,"createdTime":"2020-10-19 02:05:58","host":"us-014*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"228.1 KB","destSize":"82.7 KB","compressRate":"36.3%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/09-create-repository3.png","sourceStatusCode":200,"destWidth":1832,"destHeight":1548,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn90@2020_2/2020/10/18/18-06-02-335_a0a4fa7226fd66d6.webp","sourceBytes":439182,"destBytes":142796,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":5857,"convertSpendMs":225,"createdTime":"2020-10-19 02:05:58","host":"europe61*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"428.9 KB","destSize":"139.4 KB","compressRate":"32.5%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/10-new-repository.png","sourceStatusCode":200,"destWidth":1614,"destHeight":660,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn38@2020_6/2020/10/18/18-06-04-000_e3bffa9a68c42e86.webp","sourceBytes":150170,"destBytes":40152,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4617,"convertSpendMs":52,"createdTime":"2020-10-19 02:06:00","host":"us-015*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"146.7 KB","destSize":"39.2 KB","compressRate":"26.7%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/12-Disable-Anonymous.png","sourceStatusCode":200,"destWidth":1702,"destHeight":708,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn99@2020_1/2020/10/18/18-06-04-073_d76ec2767eaa0fdb.webp","sourceBytes":202323,"destBytes":60818,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4817,"convertSpendMs":61,"createdTime":"2020-10-19 02:06:00","host":"us-015*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"197.6 KB","destSize":"59.4 KB","compressRate":"30.1%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/gebug/04-maven-private/03-nexus.png","sourceStatusCode":200,"destWidth":3356,"destHeight":1986,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn54@2020_5/2020/10/18/18-06-04-651_b7da49528aa5c466.webp","sourceBytes":561766,"destBytes":189936,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":5577,"convertSpendMs":349,"createdTime":"2020-10-19 02:06:00","host":"us-031*","referer":"http://www.gcssloop.com/gebug/maven-private","linkMd5ListStr":"6dc5a6176e7bd7693fbcf9d430062599","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"548.6 KB","destSize":"185.5 KB","compressRate":"33.8%"}],"successGithubMap":{"myreaderx8":1,"myreaderx7":1,"myreaderx15":1,"myreaderx16":1,"myreaderx6":1,"myreaderx4":1,"myreaderx10":1,"myreaderx33":1,"myreaderx3":1,"myreaderx11":1,"myreaderx2":1,"myreaderx12":1,"myreaderx13":1,"myreaderx1":1,"myreaderx30":1,"myreaderx31":1,"myreaderx18":1,"myreaderx19":1,"myreaderx":1,"myreaderx27":1,"myreaderx21":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{"myreaderx14":1}}