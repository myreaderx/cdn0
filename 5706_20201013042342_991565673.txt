{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-13 12:23:16","updatedTime":"2020-10-13 12:23:16","title":"巧借CSS var变量实现任意的CSS自定义语法","link":"https://www.zhangxinxu.com/wordpress/?p=9537","description":"<p>by <a href=\"https://www.zhangxinxu.com/\">zhangxinxu</a> from <a href=\"https://www.zhangxinxu.com/wordpress/?p=9537\">https://www.zhangxinxu.com/wordpress/?p=9537</a><br /> 本文欢迎分享与聚合，全文转载就不必了，尊重版权，圈子就这么大，若急用可以联系授权。</p> \n<p><script>window.wxShareImgUrl = 'https://www.zhangxinxu.com/study/image/share/202020-css-var-polyfill.png';</script></p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/css-var-polyfill-cover.png\" width=\"480\" height=\"304\" alt=\"CSS变量的自定义语法技术\" class=\"alignright clip thumb size-medium\" /></p> \n<p>CSS自定义属性支持任意类型的属性值，我们可以借助这一特性自定义CSS语法，或者polyfill全新的CSS语法。</p> \n<p>本文通过3个案例展示这种用法。</p> \n<h3>一、CSS变量自定义全新的CSS语法</h3> \n<p>CSS新世界中的新特性虽然很多，但是仍然有部分需求是无法实现的，例如虽然目前CSS Color Level 4支持超级多的颜色写法（详见<a href=\"https://www.zhangxinxu.com/wordpress/2020/10/css-color-level-4/\">我写的这篇文章</a>），但是唯独不支持颜色关键字的半透明效果。</p> \n<p>所以，我就会思考这样一个问题，有没有可能自创一个CSS函数语法，实现颜色关键字的半透明设置，例如自创一个<code>keyword()</code>函数：</p> \n<pre>color: keyword(red, 50%)\ncolor: keyword(red, 0.5)\ncolor: keyword(red / 50%)\ncolor: keyword(red / 0.5)</pre> \n<p>显然，上面的语法浏览器肯定是无法识别的，图8-7就是Chrome浏览器下语法无效的截图示意。</p> \n<div class=\"figure\"> \n <img src=\"https://image.zhangxinxu.com/image/blog/202010/8-7_keyword-var-fail.png\" loading=\"lazy\" width=\"400\" height=\"183\"> <p><small>图8-7 自定义的<code>keyword()</code>函数无效示意</small></p> </img>\n</div> \n<p>那有没有办法让浏览器认为<code>keyword()</code>函数也是合法的呢？</p> \n<p>还真有，那就是使用CSS自定义属性，让CSS自定义属性做为信使让整个语法合法化，例如：</p> \n<pre>body {\n    --keyword: keyword(red, 50%);  <span style=\"color:green;\">/* 合法 */</span>\n    color: var(--keyword);\n}</pre> \n<p>此时浏览器会认为上面的<code>color</code>属性语法就是合法的，下图就是Chrome浏览器下语法合法的截图示意。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/8-8_keyword-var-ok.png\" loading=\"lazy\" width=\"400\" height=\"103\" alt=\"keyword()函数语法有效示意\" /></p> \n<p>接下来要做的事情就简单了，既然语法合法，那我们就可以使用JavaScript获取到哪些元素使用了<code>keyword()</code>函数，此时再转换成浏览器可识别的颜色函数就可以实现我们想要的效果了。</p> \n<p>具体实现原理如下所示：</p> \n<ol> \n <li>获取⻚⾯所有的包含<code>keyword()</code>的⾃定义属性，就是把代码中的CSS变成JS中的数组数据，类似这样： <pre>body {\n --keyword: keyword(red, 50%);\n color: var(--keyword);\n}</pre> <p>然后变成：</p> <pre>[\n ['--keyword', 'keyword(red, 50%)]\n]</pre> </li> \n <li>遍历并观察所有DOM，如果设置了对应的⾃定义属性，将<code>keyword()</code>语法转换成浏览器识别的<code>rgba()</code>语法。例如：<br /> <img src=\"https://image.zhangxinxu.com/image/blog/202010/2020-10-11_123905.png\" width=\"577\" height=\"134\" alt=\"自定义属性的遍历与处理\" class=\"alignnone size-medium\" /></li> \n</ol> \n<p>基于上述原理，我写了个JavaScript代码片段，大家只需要在页面中引入下面这段HTML代码，就可以畅快自如地使用自定义的<code>keyword()</code>函数了。</p> \n<pre>&lt;script src=\"./keyword-color.js\"&gt;&lt;/script&gt;</pre> \n<p>keyword-color.js可以点击或右键这里进行下载：<a href=\"https://www.zhangxinxu.com/study/202008/keyword-color.js\" rel=\"noopener\" target=\"_blank\">keyword-color.js</a></p> \n<p>下面简单测试下，假设页面中有如下所示的HTML和CSS代码：</p> \n<pre>&lt;body&gt;\n    &lt;p&gt;文字颜色是？&lt;/p&gt;\n&lt;/body&gt;</pre> \n<pre>body {\n    --keyword: keyword(blue, 50%);\n    color: var(--keyword);\n    <span class=\"green\">/* 支持自定义属性嵌套 */</span>\n    --aaa: keyword(blue, 0.1);\n    --bbb: var(--aaa);\n    background-color: var(--bbb);\n\n    font-size: 3rem;\n}</pre> \n<p>结果就有如下图所示的效果，无论是背景色还是文字颜色都表现出了符合预期的半透明效果。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/8-9_keyword-var-effect.png\" loading=\"lazy\" width=\"351\" height=\"188\" alt=\"自定义的keyword()函数语法生效示意\" /></p> \n<p><span class=\"hidden\">//zxx: 如果你看到这段文字，说明你现在访问是体验糟糕的垃圾盗版网站，你可以访问原文获得很好的体验：https://www.zhangxinxu.com/wordpress/?p=9537（作者张鑫旭）</span></p> \n<p>眼见为实，您可以狠狠地点击这里：<a href=\"https://www.zhangxinxu.com/study/202008/keyword-color.html\" rel=\"noopener\" target=\"_blank\">自定义keyword()语法与效果demo</a></p> \n<h3>二、Polyfill案例之offset-path</h3> \n<p>上面的自定义<code>keyword()</code>函数语法的案例其实使用预处理也可以解决的，类似Sass，Less这种，直接写个编译函数，使用Node.js转换成rgba()函数，也是很香的。</p> \n<p>例如：</p> \n<pre>body {\n --keyword: keyword(red, 50%);\n color: var(--keyword);\n}</pre> \n<p>使用Node.js工具直接转换成：</p> \n<pre>body {\n color: rgba(255,0,0,.5);\n}</pre> \n<p>但是，有一类CSS语法的自定义预处理工具是搞不定的，那就是一些还没有支持的CSS新语法的Polyfill实现，这是CSS变量作为中间件自定义其他CSS语法技术的王牌应用。</p> \n<p>这里先举<code>offset-path</code>属性的例子。</p> \n<p>大家应该知道，<code>offset-path</code>⽀持<code>path()</code>函数可以实现元素任意不规则路径的运动效果。</p> \n<pre>.horse-run {\n offset-path: path(\"M10,80 q100,120 120,20 q140,-50 160,0\");\n animation: move 3s linear infinite;\n}\n@keyframes move {\n 100% { offset-distance: 100%;}\n}</pre> \n<p>就会有一个马儿跑起来的效果。</p> \n<p><img loading=\"lazy\" src=\"https://image.zhangxinxu.com/image/blog/201703/horse-run.gif\" width=\"311\" height=\"141\" alt=\"马儿不停跑gif截图\" class=\"alignnone\" /></p> \n<p>关于<code>offset-path</code>属性更多内容可以参见这篇文章：“<a href=\"https://www.zhangxinxu.com/wordpress/2017/03/offset-path-css-animation/\">使用CSS offset-path让元素沿着不规则路径运动</a>”。</p> \n<p>实际上，<code>offset-path</code>的规范还支持很多其他的CSS函数，例如<code>url()</code>函数：</p> \n<pre>offset-path: url(#somePathId)</pre> \n<p>或者基本图形运动函数：</p> \n<pre>offset-path: circle(50% at 25% 25%);\noffset-path: ellipse(50% 40px at top);\noffset-path: inset(50% 50% 50% 50%);\noffset-path: polygon(30% 0%, 70% 0%, 30% 100%, 0% 70%, 0% 30%);</pre> \n<p>可惜目前所有浏览器都不支持，如下图所示：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/2020-10-11_125203.png\" width=\"516\" height=\"213\" alt=\"offset-path其他函数都不支持\" class=\"alignnone size-medium\" /></p> \n<p>没关系，我们可以借助CSS变量进行Polyfill。</p> \n<p>首先所有函数使用CSS自定义属性表示，如下所示：</p> \n<pre>--offset-path: url(#somePathId);\n--offset-path: circle();\n--offset-path: ellipse();\n--offset-path: inset();\n--offset-path: polygon(30% 0%, 70% 0%, 0% 30%);\noffset-path: var(--offset-path);\n</pre> \n<p>然后使用JavaScript识别哪些元素应用了这些CSS自定义属性，然后进行语法分析，转换成浏览器支持的<code>path()</code>函数即可。</p> \n<p>眼见为实，您可以狠狠地点击这里：<a href=\"https://www.zhangxinxu.com/study/202008/offset-path-polyfill.php\" rel=\"noopener\" target=\"_blank\">offset-path polyfill方法测试demo</a></p> \n<p>各个函数polyfill之后的效果如下GIF所示（点击播放 278K）：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/offset-path-polyfill.png\" width=\"354\" height=\"787\" alt=\"路径运动\" class=\"alignnone size-medium\" onclick=\"this.src=this.src.replace('.png', '.gif')\" /></p> \n<h4>如何使用？</h4> \n<p>1. 引入JS，例如：</p> \n<pre>&lt;script src=\"./offset-path.js\"&gt;&lt;/script&gt;</pre> \n<p>offset-path.js可以点击或右键这里进行下载：<a href=\"https://www.zhangxinxu.com/study/202008/offset-path.js\" rel=\"noopener\" target=\"_blank\">keyword-color.js</a></p> \n<p>2. 需要使用<code>offset-path</code>其他函数语法的元素新增一个自定义属性is-offset-path，例如：</p> \n<pre>&lt;img src=\"horse.png\" class=\"horse-run\" <span style=\"color:#cd0000;\">is-offset-path</span> title=\"by zhangxinxu(.com)\"&gt;</pre> \n<p>3. 使用CSS自定义属性设置相关的运动路径函数，例如这里使用外部的SVG元素路径：</p> \n<pre>.horse-run {\n --offset-path: url(#road);\n offset-path: var(--offset-path);\n animation: motion 3s linear infinite;\n}</pre> \n<p>页面中的SVG元素代码如下（其他函数不需要SVG支持）：</p> \n<pre>&lt;svg width=\"280\" height=\"150\" viewBox=\"0 0 280 150\"&gt;\n &lt;path id=\"road\" d=\"M10,80 q100,120 120,20 q140,-50 160,0\"/&gt;\n&lt;/svg&gt;</pre> \n<p>4. 效果完成。此时，offset-path.js会把<code>url(#road)</code>转换成浏览器可以识别的<code>path()</code>函数，于是就有了对应的运动效果。</p> \n<p>源代码截图如下所示：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/2020-10-11_165937.png\" width=\"728\" height=\"279\" alt=\"转换成path()函数示意\" class=\"alignnone size-medium\" /></p> \n<h3>三、attr()函数新语法的支持</h3> \n<p>这个案例上一篇文章专门讲过。</p> \n<p><code>attr()</code>函数新语法可以让HTML属性变成任意的CSS值，例如可以让HTML属性中的任意属性的颜色值转变成CSS中真实的值进行使用，例如：</p> \n<pre><button bgcolor=\"skyblue\" radius=\"4\">按钮</button>\n<button bgcolor=\"#00000040\" radius=\"1rem\">按钮</button>\n<button bgcolor=\"red\" radius=\"50%\">按钮</button></pre> \n<pre>button {\n    background-color: attr(bgcolor color);\n    border-radius: attr(radius px, 4px);\n}</pre> \n<p>理论上会有下图所示的效果。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/2020-10-11_170936.png\" width=\"305\" height=\"66\" alt=\"理论上的按钮效果示意\" class=\"alignnone size-medium\" /></p> \n<p>可以看到<code>attr()</code>函数新语法让HTML和CSS之间的联系更加紧密，这个特性我认为是会带来很多变革与颠覆的，但是没有任何浏览器支持，且估计很长一段时间也不会有浏览器支持。</p> \n<p>不要急，借助CSS变量，我们同样可以浏览器能识别我们书写的CSS <code>attr()</code>函数新语法。</p> \n<p>例如：</p> \n<pre>button {\n    --attr-bg: attr(bgcolor color);\n    background-color: var(--attr-bg);\n    --attr-radius: attr(radius px, 4px);\n    border-radius: var(--attr-radius);\n}</pre> \n<p>前提就是引入一段代码量很少的JS文件即可。</p> \n<p>详细内容请访问这篇文章：“<a href=\"https://www.zhangxinxu.com/wordpress/2020/10/css-attr-polyfill/\">Polyfill吊炸天的CSS attr()新语法</a>”。</p> \n<p>这里不再赘述。</p> \n<h3>四、写在最后的结语</h3> \n<p>本文介绍的这个技术的核心就是通过让原来浏览器不认识的函数或者语法通过CSS变量的形式调用，从而让浏览器可识别。如果浏览器原本就识别这些语法，功能也完全正常，不受影响。</p> \n<p>于是，我们就可以获取到用户对当前元素具体设置的CSS变量值，也就是获取到用户设置的这个不认识的函数或者语法究竟是什么，然后再通过JavaScript把这些新语法转换成浏览器可识别的语法。</p> \n<p>上面3个方法的内核都是一样的。</p> \n<p>大家遇到类似的需求也可以仿照相关的JS逻辑进行修改。</p> \n<p>另外，相关技术是我最近才研究折腾出来的，JS文件可能会有瑕疵，或者bug，欢迎反馈，当然，我也会积极在生成环境使用，看看会不会有什么问题，我也会及时更新。</p> \n<p>如果你有其他更好的实现方法，也欢迎交流，不吝赐教。</p> \n<p>最后，感谢您的阅读，希望本文的内容可以对您的学习有所帮助。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg\" width=\"20\" height=\"20\" align=\"absmiddle\" /></p> \n<p>本文为原创文章，欢迎分享，勿全文转载，如果实在喜欢，可收藏，永不过期，且会及时更新知识点及修正错误，阅读体验也更好。<br /> 本文地址：<a href=\"https://www.zhangxinxu.com/wordpress/?p=9537\">https://www.zhangxinxu.com/wordpress/?p=9537</a></p> \n<p>（本篇完）</p>","descriptionType":"html","publishedDate":"Sun, 11 Oct 2020 09:31:49 +0000","feedId":5706,"bgimg":"https://image.zhangxinxu.com/image/blog/202010/css-var-polyfill-cover.png","linkMd5":"dade60c3c5d6a65a3b6b83aefb89708e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn12@2020_3/2020/10/13/04-23-29-310_f5d85345852d8a27.webp","destWidth":480,"destHeight":304,"sourceBytes":11197,"destBytes":7786,"author":"张 鑫旭","articleImgCdnMap":{"https://image.zhangxinxu.com/image/blog/202010/css-var-polyfill-cover.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn12@2020_3/2020/10/13/04-23-29-310_f5d85345852d8a27.webp","https://image.zhangxinxu.com/image/blog/202010/8-7_keyword-var-fail.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn46@2020_5/2020/10/13/04-23-32-491_bbbffd572264615f.webp","https://image.zhangxinxu.com/image/blog/202010/8-8_keyword-var-ok.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn25@2020_6/2020/10/13/04-23-33-876_2876ed2f79065e94.webp","https://image.zhangxinxu.com/image/blog/202010/2020-10-11_123905.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn47@2020_1/2020/10/13/04-23-38-713_c17b8c22b4b782c5.webp","https://image.zhangxinxu.com/image/blog/202010/8-9_keyword-var-effect.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn22@2020_5/2020/10/13/04-23-31-054_c07daa529898a812.webp","https://image.zhangxinxu.com/image/blog/201703/horse-run.gif":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn20@2020_3/2020/10/13/04-23-41-682_74bdaf251150c485.webp","https://image.zhangxinxu.com/image/blog/202010/2020-10-11_125203.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn32@2020_1/2020/10/13/04-23-31-089_bae42376cad3ebb0.webp","https://image.zhangxinxu.com/image/blog/202010/offset-path-polyfill.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn16@2020_2/2020/10/13/04-23-41-341_3daaff816c2de867.webp","https://image.zhangxinxu.com/image/blog/202010/2020-10-11_165937.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn29@2020_2/2020/10/13/04-23-41-361_5c776cfd8dc55275.webp","https://image.zhangxinxu.com/image/blog/202010/2020-10-11_170936.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn44@2020_5/2020/10/13/04-23-31-366_99d06edee31d4e35.webp","https://image.zhangxinxu.com/image/emtion/emoji/2764.svg":null},"publishedOrCreatedDate":1602562996066}],"record":{"createdTime":"2020-10-13 12:23:16","updatedTime":"2020-10-13 12:23:16","feedId":5706,"fetchDate":"Tue, 13 Oct 2020 04:23:16 +0000","fetchMs":3577,"handleMs":44,"totalMs":30598,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"af32bc2b950854f7e62e0df470d818c9","hostName":"us-021*","requestId":"e61595d1007f4ff499144673f5946fee_5706","contentType":"application/rss+xml; charset=UTF-8","totalBytes":182212,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":11,"articlesImgsGithubTotal":10,"successGithubMap":{"myreaderx7":1,"myreaderx4":1,"myreaderx32":1,"myreaderx22":1,"myreaderx3":1,"myreaderx12":1,"myreaderx2":1,"myreaderx1":1,"myreaderx29":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1}},"feed":{"createdTime":"2020-08-25 04:30:15","updatedTime":"2020-09-01 11:15:46","id":5706,"name":"张鑫旭-鑫空间-鑫生活","url":"http://www.zhangxinxu.com/wordpress/feed/","subscriber":null,"website":null,"icon":"https://www.zhangxinxu.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn89@2020_1/2020/09/01/03-15-46-738_9a339309f46b07b8.ico","description":"提高前端技术，先从使用谷歌搜索做起","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-10-13 12:23:42","updatedTime":"2020-10-13 12:23:42","id":null,"feedId":5706,"linkMd5":"dade60c3c5d6a65a3b6b83aefb89708e"}],"tmpCommonImgCdnBytes":7786,"tmpBodyImgCdnBytes":174426,"tmpBgImgCdnBytes":0,"extra4":{"start":1602562992006,"total":0,"statList":[{"spend":4015,"msg":"获取xml内容"},{"spend":45,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":12305,"msg":"正文链接上传到cdn"}]},"extra5":11,"extra6":11,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"sourceBytes":391,"destBytes":391,"feedId":5706,"totalSpendMs":1161,"convertSpendMs":0,"createdTime":"2020-10-13 12:23:30","host":"us-030*","referer":"https://www.zhangxinxu.com/wordpress/?p=9537","linkMd5ListStr":"dade60c3c5d6a65a3b6b83aefb89708e","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn23/contents/2020/10/13/04-23-31-428_345d3ecc932d1a40.svg","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Tue, 13 Oct 2020 04:23:31 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CF3A:71B8:5405F2:EE83D4:5F852BB2"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602565891"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn23/contents/2020/10/13/04-23-31-428_345d3ecc932d1a40.svg","historyStatusCode":[],"spendMs":50},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"391 B","destSize":"391 B","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"sourceBytes":391,"destBytes":391,"feedId":5706,"totalSpendMs":97,"convertSpendMs":0,"createdTime":"2020-10-13 12:23:31","host":"us-030*","referer":"https://www.zhangxinxu.com/wordpress/?p=9537","linkMd5ListStr":"dade60c3c5d6a65a3b6b83aefb89708e","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn23/contents/2020/10/13/04-23-31-550_345d3ecc932d1a40.svg","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Tue, 13 Oct 2020 04:23:31 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CF3A:71B8:5405F4:EE86E7:5F852BC3"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602565891"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn23/contents/2020/10/13/04-23-31-550_345d3ecc932d1a40.svg","historyStatusCode":[],"spendMs":40},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"391 B","destSize":"391 B","compressRate":"100%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe69.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe62.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-028.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/css-var-polyfill-cover.png","sourceStatusCode":200,"destWidth":480,"destHeight":304,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn12@2020_3/2020/10/13/04-23-29-310_f5d85345852d8a27.webp","sourceBytes":11197,"destBytes":7786,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2544,"convertSpendMs":7,"createdTime":"2020-10-13 12:23:27","host":"europe61*","referer":"https://www.zhangxinxu.com/wordpress/?p=9537","linkMd5ListStr":"dade60c3c5d6a65a3b6b83aefb89708e,dade60c3c5d6a65a3b6b83aefb89708e","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.9 KB","destSize":"7.6 KB","compressRate":"69.5%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/8-9_keyword-var-effect.png","sourceStatusCode":200,"destWidth":702,"destHeight":377,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn22@2020_5/2020/10/13/04-23-31-054_c07daa529898a812.webp","sourceBytes":19383,"destBytes":10908,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1494,"convertSpendMs":9,"createdTime":"2020-10-13 12:23:30","host":"us-031*","referer":"https://www.zhangxinxu.com/wordpress/?p=9537","linkMd5ListStr":"dade60c3c5d6a65a3b6b83aefb89708e","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.9 KB","destSize":"10.7 KB","compressRate":"56.3%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/2020-10-11_125203.png","sourceStatusCode":200,"destWidth":516,"destHeight":213,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn32@2020_1/2020/10/13/04-23-31-089_bae42376cad3ebb0.webp","sourceBytes":21922,"destBytes":23010,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1627,"convertSpendMs":23,"createdTime":"2020-10-13 12:23:30","host":"us-027*","referer":"https://www.zhangxinxu.com/wordpress/?p=9537","linkMd5ListStr":"dade60c3c5d6a65a3b6b83aefb89708e","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.4 KB","destSize":"22.5 KB","compressRate":"105%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/2020-10-11_170936.png","sourceStatusCode":200,"destWidth":305,"destHeight":66,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn44@2020_5/2020/10/13/04-23-31-366_99d06edee31d4e35.webp","sourceBytes":3206,"destBytes":4050,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1818,"convertSpendMs":4,"createdTime":"2020-10-13 12:23:30","host":"europe68*","referer":"https://www.zhangxinxu.com/wordpress/?p=9537","linkMd5ListStr":"dade60c3c5d6a65a3b6b83aefb89708e","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.1 KB","destSize":"4 KB","compressRate":"126.3%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/8-7_keyword-var-fail.png","sourceStatusCode":200,"destWidth":576,"destHeight":263,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn46@2020_5/2020/10/13/04-23-32-491_bbbffd572264615f.webp","sourceBytes":52951,"destBytes":22256,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":3096,"convertSpendMs":11,"createdTime":"2020-10-13 12:23:30","host":"europe69*","referer":"https://www.zhangxinxu.com/wordpress/?p=9537","linkMd5ListStr":"dade60c3c5d6a65a3b6b83aefb89708e","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.7 KB","destSize":"21.7 KB","compressRate":"42%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/8-8_keyword-var-ok.png","sourceStatusCode":200,"destWidth":741,"destHeight":191,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn25@2020_6/2020/10/13/04-23-33-876_2876ed2f79065e94.webp","sourceBytes":32058,"destBytes":11908,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":4630,"convertSpendMs":7,"createdTime":"2020-10-13 12:23:30","host":"europe62*","referer":"https://www.zhangxinxu.com/wordpress/?p=9537","linkMd5ListStr":"dade60c3c5d6a65a3b6b83aefb89708e","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.3 KB","destSize":"11.6 KB","compressRate":"37.1%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/2020-10-11_123905.png","sourceStatusCode":200,"destWidth":577,"destHeight":134,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn47@2020_1/2020/10/13/04-23-38-713_c17b8c22b4b782c5.webp","sourceBytes":8742,"destBytes":11376,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":9256,"convertSpendMs":10,"createdTime":"2020-10-13 12:23:30","host":"europe67*","referer":"https://www.zhangxinxu.com/wordpress/?p=9537","linkMd5ListStr":"dade60c3c5d6a65a3b6b83aefb89708e","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.5 KB","destSize":"11.1 KB","compressRate":"130.1%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/offset-path-polyfill.png","sourceStatusCode":200,"destWidth":354,"destHeight":787,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn16@2020_2/2020/10/13/04-23-41-341_3daaff816c2de867.webp","sourceBytes":12989,"destBytes":18010,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":11912,"convertSpendMs":16,"createdTime":"2020-10-13 12:23:30","host":"us-039*","referer":"https://www.zhangxinxu.com/wordpress/?p=9537","linkMd5ListStr":"dade60c3c5d6a65a3b6b83aefb89708e","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12.7 KB","destSize":"17.6 KB","compressRate":"138.7%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/2020-10-11_165937.png","sourceStatusCode":200,"destWidth":728,"destHeight":279,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn29@2020_2/2020/10/13/04-23-41-361_5c776cfd8dc55275.webp","sourceBytes":33643,"destBytes":25970,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":11980,"convertSpendMs":26,"createdTime":"2020-10-13 12:23:30","host":"us-029*","referer":"https://www.zhangxinxu.com/wordpress/?p=9537","linkMd5ListStr":"dade60c3c5d6a65a3b6b83aefb89708e","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.9 KB","destSize":"25.4 KB","compressRate":"77.2%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/201703/horse-run.gif","sourceStatusCode":200,"destWidth":311,"destHeight":141,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn20@2020_3/2020/10/13/04-23-41-682_74bdaf251150c485.webp","sourceBytes":40024,"destBytes":46938,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":12275,"convertSpendMs":318,"createdTime":"2020-10-13 12:23:30","host":"us-028*","referer":"https://www.zhangxinxu.com/wordpress/?p=9537","linkMd5ListStr":"dade60c3c5d6a65a3b6b83aefb89708e","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39.1 KB","destSize":"45.8 KB","compressRate":"117.3%"}],"successGithubMap":{"myreaderx7":1,"myreaderx4":1,"myreaderx32":1,"myreaderx22":1,"myreaderx3":1,"myreaderx12":1,"myreaderx2":1,"myreaderx1":1,"myreaderx29":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1}}