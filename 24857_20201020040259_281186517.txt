{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-20 12:00:54","updatedTime":"2020-10-20 12:00:54","title":"Analog-to Digital Converter (ADC): Reading Raspberry Pi Analog","link":"/blog/2020/10/20/analog-to-digital-converter-adc-reading-raspberry-pi-analog/","description":"<p>Raspberry Pi is a tiny computer that is capable of accomplishing many great projects, thus it’s still the favourite amongst many tinkers and tech enthusiasts. However, even this wonder machine isn’t perfect. Unlike other minicontrollers or MCUs nowadays, Raspberry Pi does not have a built-in Analog-to-Digital Converter (ADC) Circuit. </p> \n<div class=\"wp-block-image\">\n <figure class=\"aligncenter size-large is-resized\">\n  <img src=\"https://blog.seeedstudio.com/wp-content/uploads/2020/10/Analog-to-Digital-Converter-ADC_-Reading-Raspberry-Pi-Analog-1030x579.png\" alt=\"Analog-to Digital Converter (ADC)_ Reading Raspberry Pi Analog\" class=\"wp-image-37217\" width=\"541\" height=\"304\" srcset=\"https://blog.seeedstudio.com/wp-content/uploads/2020/10/Analog-to-Digital-Converter-ADC_-Reading-Raspberry-Pi-Analog-1030x579.png 1030w, https://blog.seeedstudio.com/wp-content/uploads/2020/10/Analog-to-Digital-Converter-ADC_-Reading-Raspberry-Pi-Analog-300x169.png 300w, https://blog.seeedstudio.com/wp-content/uploads/2020/10/Analog-to-Digital-Converter-ADC_-Reading-Raspberry-Pi-Analog-768x432.png 768w, https://blog.seeedstudio.com/wp-content/uploads/2020/10/Analog-to-Digital-Converter-ADC_-Reading-Raspberry-Pi-Analog-1536x864.png 1536w, https://blog.seeedstudio.com/wp-content/uploads/2020/10/Analog-to-Digital-Converter-ADC_-Reading-Raspberry-Pi-Analog-2048x1152.png 2048w, https://blog.seeedstudio.com/wp-content/uploads/2020/10/Analog-to-Digital-Converter-ADC_-Reading-Raspberry-Pi-Analog-1024x576.png 1024w\" sizes=\"(max-width: 541px) 100vw, 541px\" />\n </figure>\n</div> \n<p>Therefore, in this article, we will be talking about Analog-to-Digital Converters (ADC) and hopefully, this would aid you in your projects!</p> \n<p>What will be covered:</p> \n<ul>\n <li>Overview of Raspberry Pi Analog-to-Digital Converters (ADC)</li>\n <li> Recommendations for Raspberry Pi ADC </li>\n <li> Setting up Raspberry Pi ADC</li>\n <li> Projects with Raspberry ADC</li>\n</ul> \n<hr class=\"wp-block-separator\" /> \n<h2>Overview of Raspberry Pi Analog-to-Digital Converters (ADC)</h2> \n<h3>What are ADCs?</h3> \n<p><em>ADCs work to convert analog (continuous, infinitely variable) signals to digital (discrete-time, discrete-amplitude) signals.</em></p> \n<p>ADCs are an abbreviation for Analog-to-Digital Converters, they basically convert an analog input into a digital input.</p> \n<div class=\"wp-block-image\">\n <figure class=\"aligncenter size-large is-resized\">\n  <img src=\"https://www.rs-online.com/designspark/rel-assets/dsauto/temp/uploaded/header1.png?w=1042\" alt=\"\" width=\"519\" height=\"174\" />\n  <figcaption>\n   Ref: \n   <a href=\"https://www.rs-online.com/designspark/rel-assets/dsauto/temp/uploaded/header1.png?w=1042\">DesignSpark</a>\n  </figcaption>\n </figure>\n</div> \n<p>If you’re interested to find out more about Analog and Digital signals, click <a href=\"https://www.seeedstudio.com/blog/2020/06/16/why-do-you-need-an-analog-to-digital-converter-adc-m/\">here</a>!</p> \n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div> \n<h3>How do ADCs work?</h3> \n<p>To understand the concept behind ADCs, need to first know that ADCs follow a sequence when converting analog signals to digital. </p> \n<p>There are 2 features to note about ADCs:</p> \n<h4>Sampling Rate (Frequency)</h4> \n<ul>\n <li>Tied to the ADC’s speed.</li>\n <li>Depends on the type of converter and the needed accuracy</li>\n <li>Measured by samples per second.</li>\n</ul> \n<div class=\"wp-block-image\">\n <figure class=\"aligncenter size-large is-resized\">\n  <img src=\"https://static4.arrow.com/-/media/arrow/images/miscellaneous/0/0418_aliasing_example.jpg?h=307&amp;w=590&amp;la=en&amp;hash=C789B35B99E475FCD9CD32BF3D79A497AF0D2748\" alt=\"\" width=\"459\" height=\"238\" />\n  <figcaption>\n   Ref: \n   <a href=\"https://static4.arrow.com/-/media/arrow/images/miscellaneous/0/0418_aliasing_example.jpg?h=307&amp;w=590&amp;la=en&amp;hash=C789B35B99E475FCD9CD32BF3D79A497AF0D2748\">Arrow</a>\n  </figcaption>\n </figure>\n</div> \n<p>The equation for sampling rate is:</p> \n<p><em>f<sub>s</sub>&nbsp;= 1/T</em> </p> \n<p>Where,</p> \n<p>f<sub>s</sub>&nbsp;= Sample Rate/Frequency</p> \n<p>T = Period of the sample or the time it takes before sampling again.</p> \n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div> \n<h4>Resolution</h4> \n<ul>\n <li>Determined by its bit length.</li>\n <li>The resolution depends on both the bit length and the reference voltage.</li>\n</ul> \n<div class=\"wp-block-image\">\n <figure class=\"aligncenter size-large is-resized\">\n  <img src=\"https://static4.arrow.com/-/media/arrow/images/miscellaneous/0/0418_resolution_example.jpg?h=279&amp;w=466&amp;la=en&amp;hash=ED63A8162674BEAE8CF586D3534562F665AF2786\" alt=\"\" width=\"387\" height=\"232\" />\n  <figcaption>\n   Ref: \n   <a href=\"https://static4.arrow.com/-/media/arrow/images/miscellaneous/0/0418_resolution_example.jpg?h=279&amp;w=466&amp;la=en&amp;hash=ED63A8162674BEAE8CF586D3534562F665AF2786\">Arrow</a>\n  </figcaption>\n </figure>\n</div> \n<p>The equation for total resolution is:</p> \n<p><em>Step Size = V<sub>Ref</sub>/N</em> </p> \n<p>Where, </p> \n<p>Step Size = The resolution of each level in terms of voltage</p> \n<p>V<sub>Ref</sub>&nbsp;= The voltage reference (range of voltages)</p> \n<p> N = Total level size of ADC.</p> \n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div> \n<h3>Why are ADCs necessary?</h3> \n<p>As mentioned at the start, Raspberry Pi is not capable of reading analog inputs. Thus, ADCs come in handy to convert analog inputs to outputs, which would help the Pi to be analog-friendly.</p> \n<p>Interested to get a Raspberry Pi ADC now? Read on as we show you some options that Seeed offers!</p> \n<hr class=\"wp-block-separator\" /> \n<h2>Recommendations for Raspberry Pi ADC</h2> \n<p>After going through some background of ACD, we will now show you the ADCs that’s compatible with Raspberry Pi! Today, we’ll recommend 2 products. Hope that you’ll be able to find one that suits your project!</p> \n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div> \n<h3><a href=\"https://www.seeedstudio.com/8-Channel-12-Bit-ADC-for-Raspberry-Pi-STM32F030.html\">8-Channel 12-Bit ADC for Raspberry Pi (STM32F030) ($9.90)</a></h3> \n<div class=\"wp-block-image\">\n <figure class=\"aligncenter size-large is-resized\">\n  <img src=\"https://static-cdn.seeedstudio.site/media/catalog/product/cache/9d0ce51a71ce6a79dfa2a98d65a0f0bd/f/r/front_1_1.jpg\" alt=\"\" width=\"440\" height=\"330\" />\n </figure>\n</div> \n<p>This product is an 8-channel ADC based on STM32F030, this is perfect for consumer goods and temperature measurement. It is a cost-effective, low-power ARM Cortex M0 MCU as well!</p> \n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div> \n<p>Features:</p> \n<ul>\n <li>Support Raspberry Pi 3B/3B+/4</li>\n <li>CRC calculation unit</li>\n <li>5-channel direct memory access(DMA) controller</li>\n <li>Serial wire debug (SWD)</li>\n <li>Calendar RTC with alarm and periodic wakeup from Stop/Standby</li>\n <li>Real-time clock (RTC)</li>\n <li>Timers: \n  <ul>\n   <li> Advanced-control timer</li>\n   <li>General-purpose timers &amp; Basic timers</li>\n   <li>Independent and system watchdog timers</li>\n   <li>SysTick timer </li>\n  </ul></li>\n</ul> \n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div> \n<div class=\"wp-block-image\">\n <figure class=\"aligncenter size-large is-resized\">\n  <img src=\"https://files.seeedstudio.com/wiki/8-Channel_12-Bit_ADC_for_Raspberry_Pi-STM32F030/img/280-pin.jpg\" alt=\"\" width=\"473\" height=\"251\" />\n  <figcaption>\n   Overview\n  </figcaption>\n </figure>\n</div> \n<p>Later we will be using this ADC to demonstrate how to set up with Raspberry Pi as well!</p> \n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div> \n<h3><a href=\"https://www.seeedstudio.com/4-Channel-16-Bit-ADC-for-Raspberry-Pi-ADS1115.html\">4-Channel 16-Bit ADC for Raspberry Pi (ADS1115) ($10.95)</a></h3> \n<div class=\"wp-block-image\">\n <figure class=\"aligncenter size-large is-resized\">\n  <img src=\"https://static-cdn.seeedstudio.site/media/catalog/product/cache/9d0ce51a71ce6a79dfa2a98d65a0f0bd/f/r/front_3.jpg\" alt=\"\" width=\"424\" height=\"318\" />\n </figure>\n</div> \n<p>This product is a 4-channel ADC based on Texas Instrument’s ADS1115, this is perfect for portable instrumentation and battery monitoring etc. It is a compact Raspberry Pi Zero form factor with integrated analog Grove connectors as well!</p> \n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div> \n<p>Features:</p> \n<ul>\n <li>Support Raspberry Pi 3B/3B+/4</li>\n <li>Wide supply voltage range</li>\n <li>I<sup>2</sup>C-compatible serial interface</li>\n <li>Input multiplexer (MUX) that provides two differential or four single-ended inputs.</li>\n <li>Programmable data rate: 8SPS to 860SPS</li>\n <li>Programmable comparator </li>\n <li>Internal PGA</li>\n <li>Internal low-drift voltage reference </li>\n <li>Internal oscillator</li>\n <li>LOW current consumption:\n  <ul>\n   <li>Continuous Mode: Only 150μA</li>\n   <li>Single-Shot Mode: Auto Shut-Down </li>\n  </ul></li>\n</ul> \n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div> \n<div class=\"wp-block-image\">\n <figure class=\"aligncenter size-large is-resized\">\n  <img src=\"https://files.seeedstudio.com/wiki/4-Channel_16-Bit_ADC_for_Raspberry_Pi-ADS1115/img/pinout.png\" alt=\"\" width=\"529\" height=\"320\" />\n  <figcaption>\n   Overview\n  </figcaption>\n </figure>\n</div> \n<hr class=\"wp-block-separator\" /> \n<h2>Setting up Raspberry Pi ADC</h2> \n<p>Bought a Raspberry Pi ADC but don’t know how to use it? Don’t fret! We will be showing you how to set up your Raspberry Pi ADC!</p> \n<p>What you’ll need:</p> \n<ul>\n <li><a href=\"https://www.seeedstudio.com/Raspberry-Pi-3-Model-B-p-2625.html\">Raspberry Pi</a> (3B/3B+/4)</li>\n <li><a href=\"https://www.seeedstudio.com/8-Channel-12-Bit-ADC-for-Raspberry-Pi-STM32F030.html\">Channel 12-Bit ADC for Raspberry Pi (STM32F030)</a></li>\n <li>USB Cable</li>\n</ul> \n<p>After you’ve gathered everything you need, you can follow the steps below:</p> \n<h3>Hardware</h3> \n<p>Step 1: Insert the 8-Channel 12-Bit ADC for Raspberry Pi into Raspberry Pi</p> \n<p>Step 2: Connect the Raspberry Pi to PC through USB cable.</p> \n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div> \n<h3>Software</h3> \n<p>Step 1: Download the source file by cloning the grove.py library.</p> \n<pre class=\"wp-block-code\"><code>cd ~\ngit clone https://github.com/Seeed-Studio/grove.py</code></pre> \n<p>Step 2: Install the grove.py library</p> \n<pre class=\"wp-block-code\"><code>cd grove.py\n# Python2\nsudo pip install .\n# Python3\nsudo pip3 install .</code></pre> \n<p>Step 3: Execute the below commands to run the code. </p> \n<pre class=\"wp-block-code\"><code>cd grove.py/grove\npython adc_8chan_12bit.py </code></pre> \n<p>The code below is the adc_8chan_12bit.py code.</p> \n<pre class=\"wp-block-code\"><code>import time\nfrom grove.i2c import Bus\n \nADC_DEFAULT_IIC_ADDR = 0X04\n \nADC_CHAN_NUM = 8\n \nREG_RAW_DATA_START = 0X10\nREG_VOL_START = 0X20\nREG_RTO_START = 0X30\n \nREG_SET_ADDR = 0XC0\n \n \nclass Pi_hat_adc():\n    def __init__(self,bus_num=1,addr=ADC_DEFAULT_IIC_ADDR):\n        self.bus=Bus(bus_num)\n        self.addr=addr\n \n \n    #get all raw adc data,THe max value is 4095,cause it is 12 Bit ADC\n    def get_all_adc_raw_data(self):\n        array = []\n        for i in range(ADC_CHAN_NUM):  \n            data=self.bus.read_i2c_block_data(self.addr,REG_RAW_DATA_START+i,2)\n            val=data[1]&lt;&lt;8|data[0]\n            array.append(val)\n        return array\n \n    def get_nchan_adc_raw_data(self,n):\n        data=self.bus.read_i2c_block_data(self.addr,REG_RAW_DATA_START+n,2)\n        val =data[1]&lt;&lt;8|data[0]\n        return val\n    #get all data with unit mv.\n    def get_all_vol_milli_data(self):\n        array = []\n        for i in range(ADC_CHAN_NUM):  \n            data=self.bus.read_i2c_block_data(self.addr,REG_VOL_START+i,2)\n            val=data[1]&lt;&lt;8|data[0]\n            array.append(val)\n        return array\n \n    def get_nchan_vol_milli_data(self,n):\n        data=self.bus.read_i2c_block_data(self.addr,REG_VOL_START+n,2)\n        val =data[1]&lt;&lt;8|data[0]\n        return val\n \n    #get all data ratio,unit is 0.1%\n    def get_all_ratio_0_1_data(self):\n        array = []\n        for i in range(ADC_CHAN_NUM):  \n            data=self.bus.read_i2c_block_data(self.addr,REG_RTO_START+i,2)\n            val=data[1]&lt;&lt;8|data[0]\n            array.append(val)\n        return array\n \n    def get_nchan_ratio_0_1_data(self,n):\n        data=self.bus.read_i2c_block_data(self.addr,REG_RTO_START+n,2)\n        val =data[1]&lt;&lt;8|data[0]\n        return val\n \n \n \nADC = Pi_hat_adc()\ndef main():\n    raw_data=ADC.get_all_adc_raw_data()\n    vol_data=ADC.get_all_vol_milli_data()\n    ratio_data=ADC.get_all_ratio_0_1_data()\n    print(\"raw data for each channel:(1-8chan)(12 bit-max=4096):\")\n    print(raw_data)\n    print(\"voltage for each channel:(unit:mv,max=3300mv):\")\n    print(vol_data)\n    print (\"ratio for each channel(unit 0.1%,max=100.0%):\")\n    print(ratio_data)\n \n    print(\" \")\n    print(\"NOTICE!!!:\")\n    print(\"The default setting of ADC PIN is floating_input.\")\n    print(\" \")\n \nif __name__ == '__main__':\n    main()</code></pre> \n<p>Now, if there’s no error, it should look like this!</p> \n<pre class=\"wp-block-code\"><code>pi@raspberrypi:~/grove.py/grove $ python adc_8chan_12bit.py \nraw data for each channel:(1-8chan)(12 bit-max=4096):\n[2177, 2098, 2064, 2038, 2127, 2066, 2172, 2145]\nvoltage for each channel:(unit:mv,max=3300mv):\n[1599, 1741, 1668, 1658, 1644, 1787, 1694, 1677]\nratio for each channel(unit 0.1%,max=100.0%):\n[521, 544, 514, 504, 500, 559, 524, 505]\n \nNOTICE!!!:\nThe default setting of ADC PIN is floating_input.</code></pre> \n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div> \n<p>Still uncertain about using a Raspberry Pi ADC? Here’s an example to help you:</p> \n<p>What you’ll need (including the items stated just now):</p> \n<ul>\n <li><a href=\"https://wiki.seeedstudio.com/Grove-Sound_Sensor/\">Grove – Sound Sensor</a> </li>\n</ul> \n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div> \n<h3>How to connect your hardware:</h3> \n<p>Step 1: Plug the 8-Channel 12-Bit ADC for Raspberry Pi into Raspberry Pi.</p> \n<p>Step 2: Connect the Grove – Sound Sensor to A0 port of the ADC module. </p> \n<p>Step 3: Connect the Raspberry Pi to PC through USB cable.</p> \n<p>It should look as such:</p> \n<div class=\"wp-block-image\">\n <figure class=\"aligncenter size-large is-resized\">\n  <img src=\"https://files.seeedstudio.com/wiki/8-Channel_12-Bit_ADC_for_Raspberry_Pi-STM32F030/img/connection2.jpg\" alt=\"\" width=\"461\" height=\"346\" />\n </figure>\n</div> \n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div> \n<h3>Software</h3> \n<p>Tap the following command ++python grove_sound_sensor.py 0++ in the command line interface.</p> \n<pre class=\"wp-block-code\"><code>pi@raspberrypi:~/grove.py/grove $ python grove_sound_sensor.py 0\nDetecting sound...\nSound value: 433\nSound value: 342\nSound value: 443\nSound value: 300\nSound value: 632\nSound value: 258\nSound value: 591\nSound value: 267\nSound value: 871\n^CTraceback (most recent call last):\n  File \"grove_sound_sensor.py\", line 67, in &lt;module&gt;\n    main()\n  File \"grove_sound_sensor.py\", line 64, in main\n    time.sleep(.3)\nKeyboardInterrupt</code></pre> \n<p>You can Ctrl + C whenever you wish to quit this program as well. And that is how you set up your Raspberry Pi ADC! </p> \n<p>Here are some useful links that would provide more details:</p> \n<ul>\n <li> <a href=\"https://files.seeedstudio.com/wiki/8-Channel_12-Bit_ADC_for_Raspberry_Pi-STM32F030/res/STM32.pdf\">Datasheet STM32F030</a> </li>\n <li> <a href=\"https://files.seeedstudio.com/wiki/8-Channel_12-Bit_ADC_for_Raspberry_Pi-STM32F030/res/8-Channel%2012-Bit%20ADC%20for%20Raspberry%20Pi%20(STM32F030).zip\">8-Channel 12-Bit ADC for Raspberry Pi (STM32F030) Eagle Files</a> </li>\n <li> <a href=\"https://github.com/Seeed-Studio/grove.py\">8-Channel 12-Bit ADC for Raspberry Pi (STM32F030) Software Library</a> </li>\n</ul> \n<hr class=\"wp-block-separator\" /> \n<h2>Projects with Raspberry Pi ADC</h2> \n<p>After learning how to set up your Raspberry Pi ADC, you’re now ready to explore the sea of projects out there! </p> \n<h3><a href=\"https://circuitdigest.com/microcontroller-projects/raspberry-pi-adc-tutorial\">Raspberry Pi ADC Tutorial</a></h3> \n<figure class=\"wp-block-embed-youtube aligncenter wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n <div class=\"wp-block-embed__wrapper\"> \n  <iframe title=\"Interfacing ADC0804 with Raspberry Pi\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/llgjkU4m7KA?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe> \n </div>\n <figcaption>\n  Ref: Circuit Digest\n </figcaption>\n</figure> \n<p>This tutorial would be useful if you’re still a beginner in Raspberry Pi, it teaches you the basics of Raspberry Pi and the circuits!</p> \n<p>What you’ll need:</p> \n<ul>\n <li><a href=\"https://www.seeedstudio.com/Raspberry-Pi-4-Computer-Model-B-2GB-V1-2-p-4299.html\">Raspberry Pi </a>(any model)</li>\n <li><a href=\"https://www.seeedstudio.com/8-Channel-12-Bit-ADC-for-Raspberry-Pi-STM32F030.html\">Channel 12-Bit ADC for Raspberry Pi (STM32F030)</a> (or any Raspberry Pi ADC)</li>\n <li>Connecting pins</li>\n <li>220Ω or 1KΩresistor (17 pieces)</li>\n <li>10K pot</li>\n <li>0.1µF capacitor (2 pieces)</li>\n <li>Bread Board</li>\n</ul> \n<p>Want to learn more about this project? Click<a href=\"https://circuitdigest.com/microcontroller-projects/raspberry-pi-adc-tutorial\"> here</a>!</p> \n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div> \n<h3>Interfacing Flex Sensor with Raspberry Pi ADC</h3> \n<figure class=\"wp-block-embed-youtube aligncenter wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\">\n <div class=\"wp-block-embed__wrapper\"> \n  <iframe title=\"Interfacing Flex Sensor with Raspberry Pi\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/epPcV6n-_bs?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe> \n </div>\n <figcaption>\n  Ref: Circuit Digest\n </figcaption>\n</figure> \n<p>Interested to attach an analog sensor to your Raspberry Pi ADC with your Raspberry Pi? This project shows you how to do so! </p> \n<p>What you’ll need:</p> \n<ul>\n <li><a href=\"https://www.seeedstudio.com/Raspberry-Pi-4-Computer-Model-B-2GB-V1-2-p-4299.html\">Raspberry Pi</a> (any model) </li>\n <li><a href=\"https://www.seeedstudio.com/8-Channel-12-Bit-ADC-for-Raspberry-Pi-STM32F030.html\">Channel 12-Bit ADC for Raspberry Pi (STM32F030)</a> (or any Raspberry Pi ADC) </li>\n <li>16*2 LCD display</li>\n <li>Flex Sensor</li>\n <li>Resistors and capacitors</li>\n <li>Breadboard or perf board.</li>\n</ul> \n<p>Sounds intriguing? Click <a href=\"https://circuitdigest.com/microcontroller-projects/raspberry-pi-flex-sensor\">here</a> to find out more!</p> \n<div style=\"height:20px\" aria-hidden=\"true\" class=\"wp-block-spacer\"></div> \n<h3>How to Setup a Raspberry Pi Pressure Pad (FSR)</h3> \n<div class=\"wp-block-image\">\n <figure class=\"aligncenter size-large is-resized\">\n  <img src=\"https://pi.lbbcdn.com/wp-content/uploads/2018/09/Raspberry-Pi-Pressure-Pad-v2.jpg\" alt=\"\" width=\"504\" height=\"377\" />\n  <figcaption>\n   Ref: PiMyLifeUp\n  </figcaption>\n </figure>\n</div> \n<p>Ever want to make your own pressure pad sensor? Look no further! This project shows you how to detect pressure!</p> \n<p>What you’ll need:</p> \n<ul>\n <li>Pressure Pad</li>\n <li><a href=\"https://www.seeedstudio.com/Raspberry-Pi-4-Computer-Model-B-2GB-V1-2-p-4299.html\">Raspberry Pi</a> (any model) </li>\n <li><a href=\"https://www.seeedstudio.com/8-Channel-12-Bit-ADC-for-Raspberry-Pi-STM32F030.html\">Channel 12-Bit ADC for Raspberry Pi (STM32F030)</a> (or any Raspberry Pi ADC) </li>\n <li>Breadboard</li>\n <li>Resistor</li>\n <li>Capacitor</li>\n</ul> \n<p>Right up your alley? Click <a href=\"https://pimylifeup.com/raspberry-pi-pressure-pad/\">here </a>to learn more!</p> \n<hr class=\"wp-block-separator\" /> \n<h2>Summary</h2> \n<p>And that’s all on Raspberry Pi ADC! Did you learn something new? We covered the basics of ADC, how to set up your Raspberry ADC as well as some fun projects for you to try out! Hope that we’re able to help you find a suitable ADC for your project! </p> \n<h2>Suggested Readings</h2> \n<p>Check out the related readings below for more fundamental knowledge!</p> \n<ul>\n <li><a href=\"https://blog.seeedstudio.com/blog/2020/09/22/what-happens-in-an-electric-circuit-voltage-vs-current/\">What happens in an electric circuit: Voltage vs Current</a>: For voltage, current and everything on electricity.</li>\n <li><a href=\"https://blog.seeedstudio.com/blog/2020/09/22/resistors-pull-up-and-pull-down-resistors/\">Resistors: Pull-up and pull-down resistors</a>: For resistance and what you need to know about resistors.</li>\n <li><a href=\"https://blog.seeedstudio.com/blog/2020/09/25/electronics-circuit-voltage-dividers/\">Electronics Circuit: Voltage Dividers</a>: For circuits and calculations.</li>\n <li><a href=\"https://blog.seeedstudio.com/blog/2020/09/30/introduction-to-measuring-instrument-what-is-a-multimeter/\">Introduction to Measuring Instrument: What is a Multimeter?</a>: For multimeter and recommendations on getting one for your projects.</li>\n</ul> \n<p>The post <a rel=\"nofollow\" href=\"/blog/2020/10/20/analog-to-digital-converter-adc-reading-raspberry-pi-analog/\">Analog-to Digital Converter (ADC): Reading Raspberry Pi Analog</a> appeared first on <a rel=\"nofollow\" href=\"/blog\">Latest open tech from seeed studio</a>.</p>","descriptionType":"html","publishedDate":"Tue, 20 Oct 2020 00:07:35 +0000","feedId":24857,"bgimg":"https://blog.seeedstudio.com/wp-content/uploads/2020/10/Analog-to-Digital-Converter-ADC_-Reading-Raspberry-Pi-Analog-1030x579.png","linkMd5":"f8c60e32a8e1cbe033a375b804388ab5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn18@2020_1/2020/10/20/04-00-56-294_93e8acd971497857.webp","destWidth":1030,"destHeight":579,"sourceBytes":856876,"destBytes":80848,"author":"Gigi","articleImgCdnMap":{"https://blog.seeedstudio.com/wp-content/uploads/2020/10/Analog-to-Digital-Converter-ADC_-Reading-Raspberry-Pi-Analog-1030x579.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn18@2020_1/2020/10/20/04-00-56-294_93e8acd971497857.webp","https://www.rs-online.com/designspark/rel-assets/dsauto/temp/uploaded/header1.png?w=1042":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn45@2020_1/2020/10/20/04-00-58-286_ae75a5ae6cb12634.webp","https://static4.arrow.com/-/media/arrow/images/miscellaneous/0/0418_aliasing_example.jpg?h=307&w=590&la=en&hash=C789B35B99E475FCD9CD32BF3D79A497AF0D2748":null,"https://static4.arrow.com/-/media/arrow/images/miscellaneous/0/0418_resolution_example.jpg?h=279&w=466&la=en&hash=ED63A8162674BEAE8CF586D3534562F665AF2786":null,"https://static-cdn.seeedstudio.site/media/catalog/product/cache/9d0ce51a71ce6a79dfa2a98d65a0f0bd/f/r/front_1_1.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn25@2020_1/2020/10/20/04-00-57-807_bea55e0515ca7a3e.webp","https://files.seeedstudio.com/wiki/8-Channel_12-Bit_ADC_for_Raspberry_Pi-STM32F030/img/280-pin.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn53@2020_4/2020/10/20/04-00-57-860_932498189e8c0498.webp","https://static-cdn.seeedstudio.site/media/catalog/product/cache/9d0ce51a71ce6a79dfa2a98d65a0f0bd/f/r/front_3.jpg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn33@2020_5/2020/10/20/04-00-57-959_09128620f9a8ef0f.webp","https://files.seeedstudio.com/wiki/4-Channel_16-Bit_ADC_for_Raspberry_Pi-ADS1115/img/pinout.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn37@2020_5/2020/10/20/04-00-59-435_690d4afe2ac508a9.webp","https://files.seeedstudio.com/wiki/8-Channel_12-Bit_ADC_for_Raspberry_Pi-STM32F030/img/connection2.jpg":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn30@2020_1/2020/10/20/04-00-57-808_7b76e28ed182a9e5.webp","https://pi.lbbcdn.com/wp-content/uploads/2018/09/Raspberry-Pi-Pressure-Pad-v2.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn49@2020_6/2020/10/20/04-00-57-903_c8c79dc2871028a8.webp"},"publishedOrCreatedDate":1603166454779}],"record":{"createdTime":"2020-10-20 12:00:54","updatedTime":"2020-10-20 12:00:54","feedId":24857,"fetchDate":"Tue, 20 Oct 2020 04:00:54 +0000","fetchMs":641,"handleMs":30,"totalMs":125292,"newArticles":0,"totalArticles":12,"status":1,"type":0,"ip":"6c4fdaffa870bf29ab6ae46cdf2a9527","hostName":"us-029*","requestId":"cd94200aa75546fea4756493561bae9e_24857","contentType":"application/rss+xml; charset=UTF-8","totalBytes":392504,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":10,"articlesImgsGithubTotal":8,"successGithubMap":{"myreaderx21":1,"myreaderx3":1,"myreaderx12":1,"myreaderx24":1,"myreaderx13":1,"myreaderx29":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:34:18","updatedTime":"2020-09-07 04:31:00","id":24857,"name":"Latest open tech from seeed studio","url":"http://www.seeedstudio.com/blog/feed/","subscriber":132,"website":null,"icon":"https://blog.seeedstudio.com/wp-content/uploads/2018/08/cropped-Seeed-logo-32x32.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn62@2020_1/2020/09/06/20-30-56-479_a214958400407b34.png","description":"for emerging  IoT, AI and Autonomous applications on the edge","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-10-20 12:02:59","updatedTime":"2020-10-20 12:02:59","id":null,"feedId":24857,"linkMd5":"f8c60e32a8e1cbe033a375b804388ab5"}],"tmpCommonImgCdnBytes":80848,"tmpBodyImgCdnBytes":311656,"tmpBgImgCdnBytes":0,"extra4":{"start":1603166453832,"total":0,"statList":[{"spend":917,"msg":"获取xml内容"},{"spend":30,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":121443,"msg":"正文链接上传到cdn"}]},"extra5":10,"extra6":8,"extra7ImgCdnFailResultVector":[null,null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-032.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-54.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-007.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://us-036.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://us-019.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-58.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-023.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe70.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-011.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://blog.seeedstudio.com/wp-content/uploads/2020/10/Analog-to-Digital-Converter-ADC_-Reading-Raspberry-Pi-Analog-1030x579.png","sourceStatusCode":200,"destWidth":1030,"destHeight":579,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn18@2020_1/2020/10/20/04-00-56-294_93e8acd971497857.webp","sourceBytes":856876,"destBytes":80848,"targetWebpQuality":75,"feedId":24857,"totalSpendMs":2719,"convertSpendMs":66,"createdTime":"2020-10-20 12:00:54","host":"europe66*","referer":"/blog/2020/10/20/analog-to-digital-converter-adc-reading-raspberry-pi-analog/","linkMd5ListStr":"f8c60e32a8e1cbe033a375b804388ab5,f8c60e32a8e1cbe033a375b804388ab5","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"79 KB","compressRate":"9.4%","sourceSize":"836.8 KB"},{"code":1,"isDone":false,"source":"https://files.seeedstudio.com/wiki/8-Channel_12-Bit_ADC_for_Raspberry_Pi-STM32F030/img/connection2.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":768,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn30@2020_1/2020/10/20/04-00-57-808_7b76e28ed182a9e5.webp","sourceBytes":256107,"destBytes":37952,"targetWebpQuality":75,"feedId":24857,"totalSpendMs":947,"convertSpendMs":30,"createdTime":"2020-10-20 12:00:57","host":"us-019*","referer":"/blog/2020/10/20/analog-to-digital-converter-adc-reading-raspberry-pi-analog/","linkMd5ListStr":"f8c60e32a8e1cbe033a375b804388ab5","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"37.1 KB","compressRate":"14.8%","sourceSize":"250.1 KB"},{"code":1,"isDone":false,"source":"https://files.seeedstudio.com/wiki/8-Channel_12-Bit_ADC_for_Raspberry_Pi-STM32F030/img/280-pin.jpg","sourceStatusCode":200,"destWidth":771,"destHeight":410,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn53@2020_4/2020/10/20/04-00-57-860_932498189e8c0498.webp","sourceBytes":156289,"destBytes":32282,"targetWebpQuality":75,"feedId":24857,"totalSpendMs":982,"convertSpendMs":13,"createdTime":"2020-10-20 12:00:57","host":"us-011*","referer":"/blog/2020/10/20/analog-to-digital-converter-adc-reading-raspberry-pi-analog/","linkMd5ListStr":"f8c60e32a8e1cbe033a375b804388ab5","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"31.5 KB","compressRate":"20.7%","sourceSize":"152.6 KB"},{"code":1,"isDone":false,"source":"https://static-cdn.seeedstudio.site/media/catalog/product/cache/9d0ce51a71ce6a79dfa2a98d65a0f0bd/f/r/front_1_1.jpg","sourceStatusCode":200,"destWidth":1400,"destHeight":1050,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn25@2020_1/2020/10/20/04-00-57-807_bea55e0515ca7a3e.webp","sourceBytes":106746,"destBytes":75950,"targetWebpQuality":75,"feedId":24857,"totalSpendMs":1002,"convertSpendMs":58,"createdTime":"2020-10-20 12:00:57","host":"us-032*","referer":"/blog/2020/10/20/analog-to-digital-converter-adc-reading-raspberry-pi-analog/","linkMd5ListStr":"f8c60e32a8e1cbe033a375b804388ab5","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"74.2 KB","compressRate":"71.2%","sourceSize":"104.2 KB"},{"code":1,"isDone":false,"source":"https://static-cdn.seeedstudio.site/media/catalog/product/cache/9d0ce51a71ce6a79dfa2a98d65a0f0bd/f/r/front_3.jpg","sourceStatusCode":200,"destWidth":1400,"destHeight":1050,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn33@2020_5/2020/10/20/04-00-57-959_09128620f9a8ef0f.webp","sourceBytes":76951,"destBytes":60314,"targetWebpQuality":75,"feedId":24857,"totalSpendMs":1060,"convertSpendMs":106,"createdTime":"2020-10-20 12:00:57","host":"us-007*","referer":"/blog/2020/10/20/analog-to-digital-converter-adc-reading-raspberry-pi-analog/","linkMd5ListStr":"f8c60e32a8e1cbe033a375b804388ab5","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"58.9 KB","compressRate":"78.4%","sourceSize":"75.1 KB"},{"code":1,"isDone":false,"source":"https://pi.lbbcdn.com/wp-content/uploads/2018/09/Raspberry-Pi-Pressure-Pad-v2.jpg","sourceStatusCode":200,"destWidth":743,"destHeight":557,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn49@2020_6/2020/10/20/04-00-57-903_c8c79dc2871028a8.webp","sourceBytes":62018,"destBytes":62018,"feedId":24857,"totalSpendMs":1237,"convertSpendMs":0,"createdTime":"2020-10-20 12:00:57","host":"us-023*","referer":"/blog/2020/10/20/analog-to-digital-converter-adc-reading-raspberry-pi-analog/","linkMd5ListStr":"f8c60e32a8e1cbe033a375b804388ab5","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"60.6 KB","compressRate":"100%","sourceSize":"60.6 KB"},{"code":1,"isDone":false,"source":"https://www.rs-online.com/designspark/rel-assets/dsauto/temp/uploaded/header1.png?w=1042","sourceStatusCode":200,"destWidth":388,"destHeight":130,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn45@2020_1/2020/10/20/04-00-58-286_ae75a5ae6cb12634.webp","sourceBytes":12419,"destBytes":6340,"targetWebpQuality":75,"feedId":24857,"totalSpendMs":1444,"convertSpendMs":4,"createdTime":"2020-10-20 12:00:57","host":"us-036*","referer":"/blog/2020/10/20/analog-to-digital-converter-adc-reading-raspberry-pi-analog/","linkMd5ListStr":"f8c60e32a8e1cbe033a375b804388ab5","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"6.2 KB","compressRate":"51.1%","sourceSize":"12.1 KB"},{"code":1,"isDone":false,"source":"https://files.seeedstudio.com/wiki/4-Channel_16-Bit_ADC_for_Raspberry_Pi-ADS1115/img/pinout.png","sourceStatusCode":200,"destWidth":780,"destHeight":473,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn37@2020_5/2020/10/20/04-00-59-435_690d4afe2ac508a9.webp","sourceBytes":1478731,"destBytes":36800,"targetWebpQuality":75,"feedId":24857,"totalSpendMs":2708,"convertSpendMs":30,"createdTime":"2020-10-20 12:00:57","host":"europe70*","referer":"/blog/2020/10/20/analog-to-digital-converter-adc-reading-raspberry-pi-analog/","linkMd5ListStr":"f8c60e32a8e1cbe033a375b804388ab5","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"destSize":"35.9 KB","compressRate":"2.5%","sourceSize":"1.4 MB"}],"successGithubMap":{"myreaderx21":1,"myreaderx3":1,"myreaderx12":1,"myreaderx24":1,"myreaderx13":1,"myreaderx29":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{}}