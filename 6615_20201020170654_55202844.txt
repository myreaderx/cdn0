{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-21 01:06:42","updatedTime":"2020-10-21 01:06:42","title":"æ‰‹å†™Redux-Sagaæº�ç �","link":"https://segmentfault.com/a/1190000037525337","description":"<p><a href=\"https://segmentfault.com/a/1190000037437347\">ä¸Šä¸€ç¯‡æ–‡ç«&nbsp;æˆ‘ä»¬åˆ†æž�äº†<code>Redux-Thunk</code>çš„æº�ç&nbsp;�</a>ï¼Œå�¯ä»¥çœ‹åˆ°ä»–çš„ä»£ç&nbsp;�é�žå¸¸ç®€å�•ï¼Œå�ªæ˜¯è®©<code>dispatch</code>å�¯ä»¥å¤„ç�†å‡½æ•°ç±»åž‹çš„<code>action</code>ï¼Œå…¶ä½œè€…ä¹Ÿæ‰¿è®¤å¯¹äºŽå¤�æ�‚åœºæ™¯ï¼Œ<code>Redux-Thunk</code>å¹¶ä¸�é€‚ç”¨ï¼Œè¿˜æŽ¨è��äº†<code>Redux-Saga</code>æ�¥å¤„ç�†å¤�æ�‚å‰¯ä½œç”¨ã€‚æœ¬æ–‡è¦�è®²çš„å°±æ˜¯<code>Redux-Saga</code>ï¼Œè¿™ä¸ªä¹Ÿæ˜¯æˆ‘åœ¨å®žé™…å·¥ä½œä¸­ä½¿ç”¨æœ€å¤šçš„<code>Redux</code>å¼‚æ­¥è§£å†³æ–¹æ¡ˆã€‚<code>Redux-Saga</code>æ¯”<code>Redux-Thunk</code>å¤�æ�‚å¾—å¤šï¼Œè€Œä¸”ä»–æ•´ä¸ªå¼‚æ­¥æµ�ç¨‹éƒ½ä½¿ç”¨<code>Generator</code>æ�¥å¤„ç�†ï¼Œ<code>Generator</code>ä¹Ÿæ˜¯æˆ‘ä»¬è¿™ç¯‡æ–‡ç«&nbsp;çš„å‰�ç½®çŸ¥è¯†ï¼Œ<a href=\"https://segmentfault.com/a/1190000023652879\">å¦‚æžœä½&nbsp;å¯¹<code>Generator</code>è¿˜ä¸�ç†Ÿæ‚‰ï¼Œå�¯ä»¥çœ‹çœ‹è¿™ç¯‡æ–‡ç«&nbsp;</a>ã€‚</p>\n<p>æœ¬æ–‡ä»�ç„¶æ˜¯è€�å¥—è·¯ï¼Œå…ˆæ�¥ä¸€ä¸ª<code>Redux-Saga</code>çš„ç®€å�•ä¾‹å­�ï¼Œç„¶å�Žæˆ‘ä»¬è‡ªå·±å†™ä¸€ä¸ª<code>Redux-Saga</code>æ�¥æ›¿ä»£ä»–ï¼Œä¹Ÿå°±æ˜¯æº�ç&nbsp;�åˆ†æž�ã€‚</p>\n<p><strong>æœ¬æ–‡å�¯è¿�è¡Œçš„ä»£ç&nbsp;�å·²ç»�ä¸Šä¼&nbsp;åˆ°GitHubï¼Œå�¯ä»¥æ‹¿ä¸‹æ�¥çŽ©çŽ©ï¼š<a href=\"https://github.com/dennis-jiang/Front-End-Knowledges/tree/master/Examples/React/redux-saga\" rel=\"nofollow noreferrer\">https://github.com/dennis-jiang/Front-End-Knowledges/tree/master/Examples/React/redux-saga</a></strong></p>\n<h2>ç®€å�•ä¾‹å­�</h2>\n<p>ç½‘ç»œè¯·æ±‚æ˜¯æˆ‘ä»¬ç»�å¸¸éœ€è¦�å¤„ç�†çš„å¼‚æ­¥æ“�ä½œï¼Œå�‡è®¾æˆ‘ä»¬çŽ°åœ¨çš„ä¸€ä¸ªç®€å�•éœ€æ±‚å°±æ˜¯ç‚¹å‡»ä¸€ä¸ªæŒ‰é’®åŽ»è¯·æ±‚ç”¨æˆ·çš„ä¿¡æ�¯ï¼Œå¤§æ¦‚é•¿è¿™æ&nbsp;·ï¼š</p>\n<p><img src=\"https://segmentfault.com/img/remote/1460000037525340\" alt=\"Sep-11-2020 16-31-55\" title=\"Sep-11-2020 16-31-55\" /></p>\n<p>è¿™ä¸ªéœ€æ±‚ä½¿ç”¨<code>Redux</code>å®žçŽ°èµ·æ�¥ä¹Ÿå¾ˆç®€å�•ï¼Œç‚¹å‡»æŒ‰é’®çš„æ—¶å€™<code>dispatch</code>å‡ºä¸€ä¸ª<code>action</code>ã€‚è¿™ä¸ª<code>action</code>ä¼šè§¦å�‘ä¸€ä¸ªè¯·æ±‚ï¼Œè¯·æ±‚è¿”å›žçš„æ•°æ�®æ‹¿æ�¥æ˜¾ç¤ºåœ¨é¡µé�¢ä¸Šå°±è¡Œï¼š</p>\n<pre><code class=\"javascript\">import React from 'react';\nimport { connect } from 'react-redux';\n\nfunction App(props) {\n  const { dispatch, userInfo } = props;\n\n  const getUserInfo = () =&gt; {\n    dispatch({ type: 'FETCH_USER_INFO' })\n  }\n\n  return (\n    &lt;div className=\"App\"&gt;\n      &lt;button onClick={getUserInfo}&gt;Get User Info&lt;/button&gt;\n      &lt;br&gt;&lt;/br&gt;\n      {userInfo &amp;&amp; JSON.stringify(userInfo)}\n    &lt;/div&gt;\n  );\n}\n\nconst matStateToProps = (state) =&gt; ({\n  userInfo: state.userInfo\n})\n\nexport default connect(matStateToProps)(App);</code></pre>\n<p><a href=\"https://juejin.im/post/6847902222756347911\" rel=\"nofollow noreferrer\">ä¸Šé�¢è¿™ç§�å†™æ³•éƒ½æ˜¯æˆ‘ä»¬ä¹‹å‰�è®²<code>Redux</code>å°±ä»‹ç»�è¿‡çš„</a>ï¼Œ<code>Redux-Saga</code>ä»‹å…¥çš„åœ°æ–¹æ˜¯<code>dispatch({ type: 'FETCH_USER_INFO' })</code>ä¹‹å�Žã€‚æŒ‰ç…§<code>Redux</code>ä¸€èˆ¬çš„æµ�ç¨‹ï¼Œ<code>FETCH_USER_INFO</code>è¢«å�‘å‡ºå�Žåº”è¯¥è¿›å…¥<code>reducer</code>å¤„ç�†ï¼Œä½†æ˜¯<code>reducer</code>éƒ½æ˜¯å�Œæ­¥ä»£ç&nbsp;�ï¼Œå¹¶ä¸�é€‚å�ˆå�‘èµ·ç½‘ç»œè¯·æ±‚ï¼Œæ‰€ä»¥æˆ‘ä»¬å�¯ä»¥ä½¿ç”¨<code>Redux-Saga</code>æ�¥æ�•èŽ·<code>FETCH_USER_INFO</code>å¹¶å¤„ç�†ã€‚</p>\n<p><code>Redux-Saga</code>æ˜¯ä¸€ä¸ª<code>Redux</code>ä¸­é—´ä»¶ï¼Œæ‰€ä»¥æˆ‘ä»¬åœ¨<code>createStore</code>çš„æ—¶å€™å°†å®ƒå¼•å…¥å°±è¡Œï¼š</p>\n<pre><code class=\"javascript\">// store.js\n\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from './reducer';\nimport rootSaga from './saga';\n\nconst sagaMiddleware = createSagaMiddleware()\n\nlet store = createStore(reducer, applyMiddleware(sagaMiddleware));\n\n// æ³¨æ„�è¿™é‡Œï¼ŒsagaMiddlewareä½œä¸ºä¸­é—´ä»¶æ”¾å…¥Reduxå�Ž\n// è¿˜éœ€è¦�æ‰‹åŠ¨å�¯åŠ¨ä»–æ�¥è¿�è¡ŒrootSaga\nsagaMiddleware.run(rootSaga);\n\nexport default store;</code></pre>\n<p>æ³¨æ„�ä¸Šé�¢ä»£ç&nbsp;�é‡Œçš„è¿™ä¸€è¡Œï¼š</p>\n<pre><code class=\"javascript\">sagaMiddleware.run(rootSaga);</code></pre>\n<p><code>sagaMiddleware.run</code>æ˜¯ç”¨æ�¥æ‰‹åŠ¨å�¯åŠ¨<code>rootSaga</code>çš„ï¼Œæˆ‘ä»¬æ�¥çœ‹çœ‹<code>rootSaga</code>æ˜¯æ€Žä¹ˆå†™çš„ï¼š</p>\n<pre><code class=\"javascript\">import { call, put, takeLatest } from 'redux-saga/effects';\nimport { fetchUserInfoAPI } from './api';\n\nfunction* fetchUserInfo() {\n  try {\n    const user = yield call(fetchUserInfoAPI);\n    yield put({ type: \"FETCH_USER_SUCCEEDED\", payload: user });\n  } catch (e) {\n    yield put({ type: \"FETCH_USER_FAILED\", payload: e.message });\n  }\n}\n\nfunction* rootSaga() {\n  yield takeEvery(\"FETCH_USER_INFO\", fetchUserInfo);\n}\n\nexport default rootSaga;</code></pre>\n<p>ä¸Šé�¢çš„ä»£ç&nbsp;�æˆ‘ä»¬ä»Ž<code>export</code>å¼€å§‹çœ‹å�§ï¼Œ<code>export</code>çš„ä¸œè¥¿æ˜¯<code>rootSaga</code>è¿™ä¸ª<code>Generator</code>å‡½æ•°ï¼Œè¿™é‡Œé�¢å°±ä¸€è¡Œ:</p>\n<pre><code class=\"javascript\">yield takeEvery(\"FETCH_USER_INFO\", fetchUserInfo);</code></pre>\n<p>è¿™ä¸€è¡Œä»£ç&nbsp;�ç”¨åˆ°äº†<code>Redux-Saga</code>çš„ä¸€ä¸ª<code>effect</code>ï¼Œä¹Ÿå°±æ˜¯<code>takeEvery</code>ï¼Œä»–çš„ä½œç”¨æ˜¯ç›‘å�¬<strong>æ¯�ä¸ª</strong><code>FETCH_USER_INFO</code>,å½“<code>FETCH_USER_INFO</code>å‡ºçŽ°çš„æ—¶å€™ï¼Œå°±è°ƒç”¨<code>fetchUserInfo</code>å‡½æ•°ï¼Œæ³¨æ„�è¿™é‡Œæ˜¯<strong>æ¯�ä¸ª</strong><code>FETCH_USER_INFO</code>ã€‚ä¹Ÿå°±æ˜¯è¯´å¦‚æžœå�Œæ—¶å�‘å‡ºå¤šä¸ª<code>FETCH_USER_INFO</code>ï¼Œæˆ‘ä»¬æ¯�ä¸ªéƒ½ä¼šå“�åº”å¹¶å�‘èµ·è¯·æ±‚ã€‚ç±»ä¼¼çš„è¿˜æœ‰<code>takeLatest</code>ï¼Œ<code>takeLatest</code>ä»Žå��å­—éƒ½å�¯ä»¥çœ‹å‡ºæ�¥ï¼Œæ˜¯å“�åº”æœ€å�Žä¸€ä¸ªè¯·æ±‚ï¼Œå…·ä½“ä½¿ç”¨å“ªä¸€ä¸ªï¼Œè¦�çœ‹å…·ä½“çš„éœ€æ±‚ã€‚</p>\n<p>ç„¶å�Žçœ‹çœ‹<code>fetchUserInfo</code>å‡½æ•°ï¼Œè¿™ä¸ªå‡½æ•°ä¹Ÿä¸�å¤�æ�‚ï¼Œå°±æ˜¯è°ƒç”¨ä¸€ä¸ª<code>API</code>å‡½æ•°<code>fetchUserInfoAPI</code>åŽ»èŽ·å�–æ•°æ�®ï¼Œæ³¨æ„�æˆ‘ä»¬è¿™é‡Œå‡½æ•°è°ƒç”¨å¹¶ä¸�æ˜¯ç›´æŽ¥çš„<code>fetchUserInfoAPI()</code>ï¼Œè€Œæ˜¯ä½¿ç”¨äº†<code>Redux-Saga</code>çš„<code>call</code>è¿™ä¸ª<code>effect</code>ï¼Œè¿™æ&nbsp;·å�šå�¯ä»¥è®©æˆ‘ä»¬å†™å�•å…ƒæµ‹è¯•å�˜å¾—æ›´ç®€å�•ï¼Œä¸ºä»€ä¹ˆä¼šè¿™æ&nbsp;·ï¼Œæˆ‘ä»¬å�Žé�¢è®²æº�ç&nbsp;�çš„æ—¶å€™å†�æ�¥ä»”ç»†çœ‹çœ‹ã€‚èŽ·å�–æ•°æ�®å�Žï¼Œæˆ‘ä»¬è°ƒç”¨äº†<code>put</code>åŽ»å�‘å‡º<code>FETCH_USER_SUCCEEDED</code>è¿™ä¸ª<code>action</code>ï¼Œè¿™é‡Œçš„<code>put</code>ç±»ä¼¼äºŽ<code>Redux</code>é‡Œé�¢çš„<code>dispatch</code>ï¼Œä¹Ÿæ˜¯ç”¨æ�¥å�‘å‡º<code>action</code>çš„ã€‚è¿™æ&nbsp;·æˆ‘ä»¬çš„<code>reducer</code>å°±å�¯ä»¥æ‹¿åˆ°<code>FETCH_USER_SUCCEEDED</code>è¿›è¡Œå¤„ç�†äº†ï¼Œè·Ÿä»¥å‰�çš„<code>reducer</code>å¹¶æ²¡æœ‰å¤ªå¤§åŒºåˆ«ã€‚</p>\n<pre><code class=\"javascript\">// reducer.js\n\nconst initState = {\n  userInfo: null,\n  error: ''\n};\n\nfunction reducer(state = initState, action) {\n  switch (action.type) {\n    case 'FETCH_USER_SUCCEEDED':\n      return { ...state, userInfo: action.payload };\n    case 'FETCH_USER_FAILED':\n      return { ...state, error: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;</code></pre>\n<p>é€šè¿‡è¿™ä¸ªä¾‹å­�çš„ä»£ç&nbsp;�ç»“æž„æˆ‘ä»¬å�¯ä»¥çœ‹å‡ºï¼š</p>\n<blockquote>\n <ol>\n  <li><code>action</code>è¢«åˆ†ä¸ºäº†ä¸¤ç§�ï¼Œä¸€ç§�æ˜¯è§¦å�‘å¼‚æ­¥å¤„ç�†çš„ï¼Œä¸€ç§�æ˜¯æ™®é€šçš„å�Œæ­¥<code>action</code>ã€‚</li>\n  <li>å¼‚æ­¥<code>action</code>ä½¿ç”¨<code>Redux-Saga</code>æ�¥ç›‘å�¬ï¼Œç›‘å�¬çš„æ—¶å€™å�¯ä»¥ä½¿ç”¨<code>takeLatest</code>æˆ–è€…<code>takeEvery</code>æ�¥å¤„ç�†å¹¶å�‘çš„è¯·æ±‚ã€‚</li>\n  <li>å…·ä½“çš„<code>saga</code>å®žçŽ°å�¯ä»¥ä½¿ç”¨<code>Redux-Saga</code>æ��ä¾›çš„æ–¹æ³•ï¼Œæ¯”å¦‚<code>call</code>ï¼Œ<code>put</code>ä¹‹ç±»çš„ï¼Œå�¯ä»¥è®©å�•å…ƒæµ‹è¯•æ›´å¥½å†™ã€‚</li>\n  <li><p>ä¸€ä¸ª<code>action</code>å�¯ä»¥è¢«<code>Redux-Saga</code>å’Œ<code>Reducer</code>å�Œæ—¶å“�åº”ï¼Œæ¯”å¦‚ä¸Šé�¢çš„<code>FETCH_USER_INFO</code>å�‘å‡ºå�Žæˆ‘è¿˜æƒ³è®©é¡µé�¢è½¬ä¸ªåœˆï¼Œå�¯ä»¥ç›´æŽ¥åœ¨<code>reducer</code>é‡Œé�¢åŠ&nbsp;ä¸€ä¸ªå°±è¡Œ:</p><pre><code class=\"javascript\">...\ncase 'FETCH_USER_INFO':\n      return { ...state, isLoading: true };\n...</code></pre></li>\n </ol>\n</blockquote>\n<h2>æ‰‹å†™æº�ç&nbsp;�</h2>\n<p>é€šè¿‡ä¸Šé�¢è¿™ä¸ªä¾‹å­�ï¼Œæˆ‘ä»¬å�¯ä»¥çœ‹å‡ºï¼Œ<code>Redux-Saga</code>çš„è¿�è¡Œæ˜¯é€šè¿‡è¿™ä¸€è¡Œä»£ç&nbsp;�æ�¥å®žçŽ°çš„ï¼š</p>\n<pre><code class=\"javascript\">sagaMiddleware.run(rootSaga);</code></pre>\n<p>æ•´ä¸ª<code>Redux-Saga</code>çš„è¿�è¡Œå’ŒåŽŸæœ¬çš„<code>Redux</code>å¹¶ä¸�å†²çª�ï¼Œ<code>Redux</code>ç”šè‡³éƒ½ä¸�çŸ¥é�“ä»–çš„å­˜åœ¨ï¼Œä»–ä»¬ä¹‹é—´è€¦å�ˆå¾ˆå°�ï¼Œå�ªåœ¨éœ€è¦�çš„æ—¶å€™é€šè¿‡<code>put</code>å�‘å‡º<code>action</code>æ�¥è¿›è¡Œé€šè®¯ã€‚æ‰€ä»¥æˆ‘çŒœæµ‹ï¼Œä»–åº”è¯¥æ˜¯è‡ªå·±å®žçŽ°äº†ä¸€å¥—å®Œå…¨ç‹¬ç«‹çš„å¼‚æ­¥ä»»åŠ¡å¤„ç�†æœºåˆ¶ï¼Œä¸‹é�¢æˆ‘ä»¬ä»Žèƒ½æ„ŸçŸ¥åˆ°çš„<code>API</code>å…¥æ‰‹ï¼Œä¸€æ­¥ä¸€æ­¥æ�¥æŽ¢å¯»ä¸‹ä»–æº�ç&nbsp;�çš„å¥¥ç§˜å�§ã€‚æœ¬æ–‡å…¨éƒ¨ä»£ç&nbsp;�å�‚ç…§å®˜æ–¹æº�ç&nbsp;�å†™æˆ�ï¼Œå‡½æ•°å��å­—å’Œå�˜é‡�å��å­—å°½é‡�ä¿�æŒ�ä¸€è‡´ï¼Œå†™åˆ°å…·ä½“çš„æ–¹æ³•çš„æ—¶å€™æˆ‘ä¹Ÿä¼šè´´å‡ºå¯¹åº”çš„ä»£ç&nbsp;�åœ°å�€ï¼Œä¸»è¦�ä»£ç&nbsp;�éƒ½åœ¨è¿™é‡Œ:<a href=\"https://github.com/redux-saga/redux-saga/tree/master/packages/core/src\" rel=\"nofollow noreferrer\">https://github.com/redux-saga/redux-saga/tree/master/packages/core/src</a></p>\n<p>å…ˆæ�¥çœ‹çœ‹æˆ‘ä»¬ç”¨åˆ°äº†å“ªäº›<code>API</code>ï¼Œè¿™äº›APIå°±æ˜¯æˆ‘ä»¬ä»Šå¤©æ‰‹å†™çš„ç›®æ&nbsp;‡:</p>\n<blockquote>\n <ol>\n  <li><strong>createSagaMiddleware</strong>ï¼šè¿™ä¸ªæ–¹æ³•ä¼šè¿”å›žä¸€ä¸ªä¸­é—´ä»¶å®žä¾‹<code>sagaMiddleware</code></li>\n  <li><strong>sagaMiddleware.run</strong>: è¿™ä¸ªæ–¹æ³•æ˜¯çœŸæ­£è¿�è¡Œæˆ‘ä»¬å†™çš„<code>saga</code>çš„å…¥å�£</li>\n  <li><strong>takeEvery</strong>ï¼šè¿™ä¸ªæ–¹æ³•æ˜¯ç”¨æ�¥æŽ§åˆ¶å¹¶å�‘æµ�ç¨‹çš„</li>\n  <li><strong>call</strong>ï¼šç”¨æ�¥è°ƒç”¨å…¶ä»–æ–¹æ³•</li>\n  <li><strong>put</strong>ï¼šå�‘å‡º<code>action</code>ï¼Œç”¨æ�¥å’Œ<code>Redux</code>é€šè®¯</li>\n </ol>\n</blockquote>\n<h3>ä»Žä¸­é—´ä»¶å…¥æ‰‹</h3>\n<p><a href=\"https://juejin.im/post/6845166891682512909#heading-7\" rel=\"nofollow noreferrer\">ä¹‹å‰�æˆ‘ä»¬è®²<code>Redux</code>æº�ç&nbsp;�çš„æ—¶å€™è¯¦ç»†åˆ†æž�äº†<code>Redux</code>ä¸­é—´ä»¶çš„åŽŸç�†å’ŒèŒƒå¼�</a>ï¼Œä¸€ä¸ªä¸­é—´ä»¶å¤§æ¦‚å°±é•¿è¿™ä¸ªæ&nbsp;·å­�:</p>\n<pre><code class=\"javascript\">function logger(store) {\n  return function(next) {\n    return function(action) {\n      console.group(action.type);\n      console.info('dispatching', action);\n      let result = next(action);\n      console.log('next state', store.getState());\n      console.groupEnd();\n      return result\n    }\n  }\n}</code></pre>\n<p>è¿™å…¶å®žå°±ç›¸å½“äºŽä¸€ä¸ª<code>Redux</code>ä¸­é—´ä»¶çš„èŒƒå¼�äº†ï¼š</p>\n<blockquote>\n <ol>\n  <li>ä¸€ä¸ªä¸­é—´ä»¶æŽ¥æ”¶<code>store</code>ä½œä¸ºå�‚æ•°ï¼Œä¼šè¿”å›žä¸€ä¸ªå‡½æ•°</li>\n  <li>è¿”å›žçš„è¿™ä¸ªå‡½æ•°æŽ¥æ”¶è€�çš„<code>dispatch</code>å‡½æ•°ä½œä¸ºå�‚æ•°(ä¹Ÿå°±æ˜¯ä¸Šé�¢çš„<code>next</code>)ï¼Œä¼šè¿”å›žä¸€ä¸ªæ–°çš„å‡½æ•°</li>\n  <li>è¿”å›žçš„æ–°å‡½æ•°å°±æ˜¯æ–°çš„<code>dispatch</code>å‡½æ•°ï¼Œè¿™ä¸ªå‡½æ•°é‡Œé�¢å�¯ä»¥æ‹¿åˆ°å¤–é�¢ä¸¤å±‚ä¼&nbsp;è¿›æ�¥çš„<code>store</code>å’Œè€�<code>dispatch</code>å‡½æ•°</li>\n </ol>\n</blockquote>\n<p>ä¾�ç…§è¿™ä¸ªèŒƒå¼�ä»¥å�Šå‰�é�¢å¯¹<code>createSagaMiddleware</code>çš„ä½¿ç”¨ï¼Œæˆ‘ä»¬å�¯ä»¥å…ˆå†™å‡ºè¿™ä¸ªå‡½æ•°çš„éª¨æž¶ï¼š</p>\n<pre><code class=\"javascript\">// sagaMiddlewareFactoryå…¶å®žå°±æ˜¯æˆ‘ä»¬å¤–é�¢ä½¿ç”¨çš„createSagaMiddleware\nfunction sagaMiddlewareFactory() {\n  // è¿”å›žçš„æ˜¯ä¸€ä¸ªReduxä¸­é—´ä»¶\n  // éœ€è¦�ç¬¦å�ˆä»–çš„èŒƒå¼�\n  const sagaMiddleware = function (store) {\n    return function (next) {\n      return function (action) {\n        // å†…å®¹å…ˆå†™ä¸ªç©ºçš„\n        let result = next(action);\n        return result;\n      }\n    }\n  }\n  \n  // sagaMiddlewareä¸Šè¿˜æœ‰ä¸ªrunæ–¹æ³•\n  // æ˜¯ç”¨æ�¥å�¯åŠ¨sagaçš„\n  // æˆ‘ä»¬å…ˆç•™ç©ºå�§\n  sagaMiddleware.run = () =&gt; { }\n\n  return sagaMiddleware;\n}\n\nexport default sagaMiddlewareFactory;</code></pre>\n<h3>æ¢³ç�†æž¶æž„</h3>\n<p>çŽ°åœ¨æˆ‘ä»¬æœ‰äº†ä¸€ä¸ªç©ºçš„éª¨æž¶ï¼ŒæŽ¥ä¸‹æ�¥è¯¥å¹²å•¥å‘¢?å‰�é�¢æˆ‘ä»¬è¯´è¿‡äº†ï¼Œ<code>Redux-Saga</code>å¾ˆå�¯èƒ½æ˜¯è‡ªå·±å®žçŽ°äº†ä¸€å¥—å®Œå…¨ç‹¬ç«‹çš„å¼‚æ­¥äº‹ä»¶å¤„ç�†æœºåˆ¶ã€‚è¿™ç§�å¼‚æ­¥äº‹ä»¶å¤„ç�†æœºåˆ¶éœ€è¦�ä¸€ä¸ªå¤„ç�†ä¸­å¿ƒæ�¥å­˜å‚¨äº‹ä»¶å’Œå¤„ç�†å‡½æ•°ï¼Œè¿˜éœ€è¦�ä¸€ä¸ªæ–¹æ³•æ�¥è§¦å�‘é˜Ÿåˆ—ä¸­çš„äº‹ä»¶çš„æ‰§è¡Œï¼Œå†�å›žçœ‹å‰�é�¢çš„ä½¿ç”¨çš„APIï¼Œæˆ‘ä»¬å�‘çŽ°äº†ä¸¤ä¸ªç±»ä¼¼åŠŸèƒ½çš„APIï¼š</p>\n<blockquote>\n <ol>\n  <li><strong>takeEvery(action, callback)</strong>ï¼šä»–æŽ¥æ”¶çš„å�‚æ•°å°±æ˜¯<code>action</code>å’Œ<code>callback</code>ï¼Œè€Œä¸”æˆ‘ä»¬åœ¨æ&nbsp;¹<code>saga</code>é‡Œé�¢å�¯èƒ½ä¼šå¤šæ¬¡è°ƒç”¨å®ƒæ�¥æ³¨å†Œä¸�å�Œ<code>action</code>çš„å¤„ç�†å‡½æ•°ï¼Œè¿™å…¶å®žå°±ç›¸å½“äºŽå¾€å¤„ç�†ä¸­å¿ƒé‡Œé�¢å¡žå…¥äº‹ä»¶äº†ã€‚</li>\n  <li><strong>put(action)</strong>ï¼š<code>put</code>çš„å�‚æ•°æ˜¯<code>action</code>ï¼Œä»–å”¯ä¸€çš„ä½œç”¨å°±æ˜¯è§¦å�‘å¯¹åº”äº‹ä»¶çš„å›žè°ƒè¿�è¡Œã€‚</li>\n </ol>\n</blockquote>\n<p>å�¯ä»¥çœ‹åˆ°<code>Redux-Saga</code>è¿™ç§�æœºåˆ¶ä¹Ÿæ˜¯ç”¨<code>takeEvery</code>å…ˆæ³¨å†Œå›žè°ƒï¼Œç„¶å�Žä½¿ç”¨<code>put</code>å�‘å‡ºæ¶ˆæ�¯æ�¥è§¦å�‘å›žè°ƒæ‰§è¡Œï¼Œè¿™å…¶å®žè·Ÿæˆ‘ä»¬å…¶ä»–æ–‡ç«&nbsp;å¤šæ¬¡æ��åˆ°çš„å�‘å¸ƒè®¢é˜…æ¨¡å¼�å¾ˆåƒ�ã€‚</p>\n<h3>æ‰‹å†™channel</h3>\n<p><code>channel</code>æ˜¯<code>Redux-Saga</code>ä¿�å­˜å›žè°ƒå’Œè§¦å�‘å›žè°ƒçš„åœ°æ–¹ï¼Œç±»ä¼¼äºŽå�‘å¸ƒè®¢é˜…æ¨¡å¼�ï¼Œæˆ‘ä»¬å…ˆæ�¥å†™ä¸ªï¼š</p>\n<pre><code class=\"javascript\">export function multicastChannel() {\n  const currentTakers = [];     // ä¸€ä¸ªå�˜é‡�å­˜å‚¨æˆ‘ä»¬æ‰€æœ‰æ³¨å†Œçš„äº‹ä»¶å’Œå›žè°ƒ\n\n  // ä¿�å­˜äº‹ä»¶å’Œå›žè°ƒçš„å‡½æ•°\n  // Redux-Sagaé‡Œé�¢takeæŽ¥æ”¶å›žè°ƒcbå’ŒåŒ¹é…�æ–¹æ³•matcherä¸¤ä¸ªå�‚æ•°\n  // äº‹å®žä¸Štakeåˆ°çš„äº‹ä»¶å��ç§°ä¹Ÿè¢«å°�è£…åˆ°äº†matcheré‡Œé�¢\n  function take(cb, matcher) {\n    cb['MATCH'] = matcher;\n    currentTakers.push(cb);\n  }\n\n  function put(input) {\n    const takers = currentTakers;\n\n    for (let i = 0, len = takers.length; i &lt; len; i++) {\n      const taker = takers[i]\n\n      // è¿™é‡Œçš„'MATCH'æ˜¯ä¸Šé�¢takeå¡žè¿›æ�¥çš„åŒ¹é…�æ–¹æ³•\n      // å¦‚æžœåŒ¹é…�ä¸Šäº†å°±å°†å›žè°ƒæ‹¿å‡ºæ�¥æ‰§è¡Œ\n      if (taker['MATCH'](input)) {\n        taker(input);\n      }\n    }\n  }\n  \n  return {\n    take,\n    put\n  }\n}</code></pre>\n<p>ä¸Šè¿°ä»£ç&nbsp;�ä¸­æœ‰ä¸€ä¸ªå¥‡æ€ªçš„ç‚¹ï¼Œå°±æ˜¯å°†<code>matcher</code>ä½œä¸ºå±žæ€§æ”¾åˆ°äº†å›žè°ƒå‡½æ•°ä¸Šï¼Œè¿™ä¹ˆå�šçš„åŽŸå›&nbsp;æˆ‘æƒ³æ˜¯ä¸ºäº†è®©å¤–éƒ¨å�¯ä»¥è‡ªå®šä¹‰åŒ¹é…�æ–¹æ³•ï¼Œè€Œä¸�æ˜¯ç®€å�•çš„äº‹ä»¶å��ç§°åŒ¹é…�ï¼Œäº‹å®žä¸Š<code>Redux-Saga</code>æœ¬èº«å°±æ”¯æŒ�å¥½å‡&nbsp;ç§�åŒ¹é…�æ¨¡å¼�ï¼ŒåŒ…æ‹¬<code>å­—ç¬¦ä¸²ï¼ŒSymbol,æ•°ç»„</code>ç­‰ç­‰ã€‚</p>\n<p>å†…ç½®æ”¯æŒ�çš„åŒ¹é…�æ–¹æ³•å�¯ä»¥çœ‹è¿™é‡Œï¼š<a href=\"https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/matcher.js\" rel=\"nofollow noreferrer\">https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/matcher.js</a>ã€‚</p>\n<p><code>channel</code>å¯¹åº”çš„æº�ç&nbsp;�å�¯ä»¥çœ‹è¿™é‡Œï¼š<a href=\"https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/channel.js#L153\" rel=\"nofollow noreferrer\">https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/channel.js#L153</a></p>\n<p>æœ‰äº†<code>channel</code>ä¹‹å�Žï¼Œæˆ‘ä»¬çš„ä¸­é—´ä»¶é‡Œé�¢å…¶å®žå�ªè¦�å†�å¹²ä¸€ä»¶äº‹æƒ…å°±è¡Œäº†ï¼Œå°±æ˜¯è°ƒç”¨<code>channel.put</code>å°†æŽ¥æ”¶çš„<code>action</code>å†�å�‘ç»™<code>channel</code>åŽ»æ‰§è¡Œå›žè°ƒå°±è¡Œï¼Œæ‰€ä»¥æˆ‘ä»¬åŠ&nbsp;ä¸€è¡Œä»£ç&nbsp;�:</p>\n<pre><code class=\"javascript\">// ... çœ�ç•¥å‰�é�¢ä»£ç&nbsp;�\n\nconst result = next(action);\n\nchannel.put(action);     // å°†æ”¶åˆ°çš„actionä¹Ÿå�‘ç»™Redux-Saga\n\nreturn result;\n\n// ... çœ�ç•¥å�Žé�¢ä»£ç&nbsp;�</code></pre>\n<h3>sagaMiddleware.run</h3>\n<p>å‰�é�¢çš„<code>put</code>æ˜¯å�‘å‡ºäº‹ä»¶ï¼Œæ‰§è¡Œå›žè°ƒï¼Œå�¯æ˜¯æˆ‘ä»¬çš„å›žè°ƒè¿˜æ²¡æ³¨å†Œå‘¢ï¼Œé‚£æ³¨å†Œå›žè°ƒåº”è¯¥åœ¨ä»€ä¹ˆåœ°æ–¹å‘¢ï¼Ÿçœ‹èµ·æ�¥å�ªæœ‰ä¸€ä¸ªåœ°æ–¹äº†ï¼Œé‚£å°±æ˜¯<code>sagaMiddleware.run</code>ã€‚ç®€å�•æ�¥è¯´ï¼Œ<code>sagaMiddleware.run</code>æŽ¥æ”¶ä¸€ä¸ª<code>Generator</code>ä½œä¸ºå�‚æ•°ï¼Œç„¶å�Žæ‰§è¡Œè¿™ä¸ª<code>Generator</code>ï¼Œå½“é�‡åˆ°<code>take</code>çš„æ—¶å€™å°±å°†å®ƒæ³¨å†Œåˆ°<code>channel</code>ä¸Šé�¢åŽ»ã€‚è¿™é‡Œæˆ‘ä»¬å…ˆå®žçŽ°<code>take</code>ï¼Œ<code>takeEvery</code>æ˜¯åœ¨è¿™ä¸ªåŸºç¡€ä¸Šå®žçŽ°çš„ã€‚<code>Redux-Saga</code>ä¸­è¿™å�—ä»£ç&nbsp;�æ˜¯å�•ç‹¬æŠ½å�–äº†ä¸€ä¸ªæ–‡ä»¶ï¼Œæˆ‘ä»¬ä»¿ç…§è¿™ç§�å�šæ³•å�§ã€‚</p>\n<p>é¦–å…ˆéœ€è¦�åœ¨ä¸­é—´ä»¶é‡Œé�¢å°†<code>Redux</code>çš„<code>getState</code>å’Œ<code>dispatch</code>ç­‰å�‚æ•°ä¼&nbsp;é€’è¿›åŽ»ï¼Œ<code>Redux-Saga</code>ä½¿ç”¨çš„æ˜¯<code>bind</code>å‡½æ•°ï¼Œæ‰€ä»¥ä¸­é—´ä»¶æ–¹æ³•æ”¹é€&nbsp;å¦‚ä¸‹:</p>\n<pre><code class=\"javascript\">function sagaMiddleware({ getState, dispatch }) {\n  // å°†getState, dispatché€šè¿‡bindä¼&nbsp;ç»™runSaga\n  boundRunSaga = runSaga.bind(null, {\n    channel,\n    dispatch,\n    getState,\n  })\n\n  return function (next) {\n    return function (action) {\n      const result = next(action);\n\n      channel.put(action);\n\n      return result;\n    }\n  }\n}</code></pre>\n<p>ç„¶å�Ž<code>sagaMiddleware.run</code>å°±ç›´æŽ¥å°†<code>boundRunSaga</code>æ‹¿æ�¥è¿�è¡Œå°±è¡Œäº†ï¼š</p>\n<pre><code class=\"javascript\">sagaMiddleware.run = (...args) =&gt; {\n  boundRunSaga(...args)\n}</code></pre>\n<p>æ³¨æ„�è¿™é‡Œçš„<code>...args</code>ï¼Œè¿™ä¸ªå…¶å®žå°±æ˜¯æˆ‘ä»¬ä¼&nbsp;è¿›åŽ»çš„<code>rootSaga</code>ã€‚åˆ°è¿™é‡Œå…¶å®žä¸­é—´ä»¶éƒ¨åˆ†å°±å·²ç»�å®Œæˆ�äº†ï¼Œå�Žé�¢çš„ä»£ç&nbsp;�å°±æ˜¯å…·ä½“çš„æ‰§è¡Œè¿‡ç¨‹äº†ã€‚</p>\n<p>ä¸­é—´ä»¶å¯¹åº”çš„æº�ç&nbsp;�å�¯ä»¥çœ‹è¿™é‡Œï¼š<a href=\"https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/middleware.js\" rel=\"nofollow noreferrer\">https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/middleware.js</a></p>\n<h3>runSaga</h3>\n<p><code>runSaga</code>å…¶å®žæ‰�æ˜¯çœŸæ­£çš„<code>sagaMiddleware.run</code>ï¼Œé€šè¿‡å‰�é�¢çš„åˆ†æž�ï¼Œæˆ‘ä»¬å·²ç»�çŸ¥é�“ä»–çš„ä½œç”¨æ˜¯æŽ¥æ”¶<code>Generator</code>å¹¶æ‰§è¡Œï¼Œå¦‚æžœé�‡åˆ°<code>take</code>å°±å°†å®ƒæ³¨å†Œåˆ°<code>channel</code>ä¸ŠåŽ»ï¼Œå¦‚æžœé�‡åˆ°<code>put</code>å°±å°†å¯¹åº”çš„å›žè°ƒæ‹¿å‡ºæ�¥æ‰§è¡Œï¼Œä½†æ˜¯<code>Redux-Saga</code>å�ˆå°†è¿™ä¸ªè¿‡ç¨‹åˆ†ä¸ºäº†å¥½å‡&nbsp;å±‚ï¼Œæˆ‘ä»¬ä¸€å±‚ä¸€å±‚æ�¥çœ‹å�§ã€‚<code>runSaga</code>çš„å�‚æ•°å…ˆæ˜¯é€šè¿‡<code>bind</code>ä¼&nbsp;å…¥äº†ä¸€äº›ä¸Šä¸‹æ–‡ç›¸å…³çš„å�˜é‡�ï¼Œæ¯”å¦‚<code>getState, dispatch</code>ï¼Œç„¶å�Žå�ˆåœ¨è¿�è¡Œçš„æ—¶å€™ä¼&nbsp;å…¥äº†<code>rootSaga</code>ï¼Œæ‰€ä»¥ä»–åº”è¯¥æ˜¯é•¿è¿™ä¸ªæ&nbsp;·å­�çš„ï¼š</p>\n<pre><code class=\"javascript\">import proc from './proc';\n\nexport function runSaga(\n  { channel, dispatch, getState },\n  saga,\n  ...args\n) {\n  // sagaæ˜¯ä¸€ä¸ªGeneratorï¼Œè¿�è¡Œå�Žå¾—åˆ°ä¸€ä¸ªè¿­ä»£å™¨\n  const iterator = saga(...args);\n\n  const env = {\n    channel,\n    dispatch,\n    getState,\n  };\n\n  proc(env, iterator);\n}</code></pre>\n<p>å�¯ä»¥çœ‹åˆ°<code>runSaga</code>ä»…ä»…æ˜¯å°†<code>Generator</code>è¿�è¡Œä¸‹ï¼Œå¾—åˆ°è¿­ä»£å™¨å¯¹è±¡å�Žå�ˆè°ƒç”¨äº†<code>proc</code>æ�¥å¤„ç�†ã€‚</p>\n<p><code>runSaga</code>å¯¹åº”çš„æº�ç&nbsp;�çœ‹è¿™é‡Œï¼š<a href=\"https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/runSaga.js\" rel=\"nofollow noreferrer\">https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/runSaga.js</a></p>\n<h3>proc</h3>\n<p><code>proc</code>å°±æ˜¯å…·ä½“æ‰§è¡Œè¿™ä¸ªè¿­ä»£å™¨çš„è¿‡ç¨‹ï¼Œ<code>Generator</code>çš„æ‰§è¡Œæ–¹å¼�æˆ‘ä»¬ä¹‹å‰�<a href=\"https://juejin.im/post/6844904133577670664\" rel=\"nofollow noreferrer\">åœ¨å�¦ä¸€ç¯‡æ–‡ç«&nbsp;è¯¦ç»†è®²è¿‡</a>ï¼Œç®€å�•æ�¥è¯´å°±æ˜¯å�¯ä»¥å�¦å¤–å†™ä¸€ä¸ªæ–¹æ³•<code>next</code>æ�¥æ‰§è¡Œ<code>Generator</code>ï¼Œ<code>next</code>é‡Œé�¢æ£€æµ‹åˆ°å¦‚æžœ<code>Generator</code>æ²¡æœ‰æ‰§è¡Œå®Œï¼Œå°±ç»§ç»­æ‰§è¡Œ<code>next</code>ï¼Œç„¶å�Žå¤–å±‚è°ƒç”¨ä¸€ä¸‹<code>next</code>å�¯åŠ¨è¿™ä¸ªæµ�ç¨‹å°±è¡Œã€‚</p>\n<pre><code class=\"javascript\">export default function proc(env, iterator) {\n  // è°ƒç”¨nextå�¯åŠ¨è¿­ä»£å™¨æ‰§è¡Œ\n  next();\n\n  // nextå‡½æ•°ä¹Ÿä¸�å¤�æ�‚\n  // å°±æ˜¯æ‰§è¡Œiterator\n  function next(arg, isErr) {\n    let result;\n    if (isErr) {\n      result = iterator.throw(arg);\n    } else {\n      result = iterator.next(arg);\n    }\n\n    // å¦‚æžœä»–æ²¡ç»“æ�Ÿï¼Œå°±ç»§ç»­next\n    // digestEffectæ˜¯å¤„ç�†å½“å‰�æ­¥éª¤è¿”å›žå€¼çš„å‡½æ•°\n    // ç»§ç»­æ‰§è¡Œçš„nextä¹Ÿç”±ä»–æ�¥è°ƒç”¨\n    if (!result.done) {\n      digestEffect(result.value, next)\n    }\n  }\n}</code></pre>\n<h4>digestEffect</h4>\n<p>ä¸Šé�¢å¦‚æžœè¿­ä»£å™¨æ²¡æœ‰æ‰§è¡Œå®Œï¼Œæˆ‘ä»¬ä¼šå°†å®ƒçš„å€¼ä¼&nbsp;ç»™<code>digestEffect</code>å¤„ç�†ï¼Œé‚£ä¹ˆè¿™é‡Œçš„<code>result.value</code>çš„å€¼æ˜¯ä»€ä¹ˆçš„å‘¢ï¼Ÿå›žæƒ³ä¸‹æˆ‘ä»¬å‰�é�¢<code>rootSaga</code>é‡Œé�¢çš„ç”¨æ³•</p>\n<pre><code class=\"javascript\">yield takeEvery(\"FETCH_USER_INFO\", fetchUserInfo);</code></pre>\n<p><code>result.value</code>çš„å€¼åº”è¯¥æ˜¯<code>yield</code>å�Žé�¢çš„å€¼ï¼Œä¹Ÿå°±æ˜¯<code>takeEvery(\"FETCH_USER_INFO\", fetchUserInfo)</code>çš„è¿”å›žå€¼ï¼Œ<code>takeEvery</code>æ˜¯å†�æ¬¡åŒ…è£…è¿‡çš„<code>effect</code>ï¼Œä»–åŒ…è£…äº†<code>takeï¼Œfork</code>è¿™äº›ç®€å�•çš„<code>effect</code>ã€‚å…¶å®žå¯¹äºŽåƒ�<code>take</code>è¿™ç§�ç®€å�•çš„<code>effect</code>æ�¥è¯´ï¼Œæ¯”å¦‚:</p>\n<pre><code class=\"javascript\">take(\"FETCH_USER_INFO\", fetchUserInfo);</code></pre>\n<p>è¿™è¡Œä»£ç&nbsp;�çš„è¿”å›žå€¼ç›´æŽ¥å°±æ˜¯ä¸€ä¸ªå¯¹è±¡ï¼Œç±»ä¼¼äºŽè¿™æ&nbsp;·ï¼š</p>\n<pre><code class=\"javascript\">{\n  IO: true,\n  type: 'TAKE',\n  payload: {},\n}</code></pre>\n<p>æ‰€ä»¥æˆ‘ä»¬è¿™é‡Œ<code>digestEffect</code>æ‹¿åˆ°çš„<code>result.value</code>ä¹Ÿæ˜¯è¿™æ&nbsp;·çš„ä¸€ä¸ªå¯¹è±¡ï¼Œè¿™ä¸ªå¯¹è±¡å°±ä»£è¡¨äº†æˆ‘ä»¬çš„ä¸€ä¸ª<code>effect</code>ï¼Œæ‰€ä»¥æˆ‘ä»¬çš„<code>digestEffect</code>å°±é•¿è¿™æ&nbsp;·ï¼š</p>\n<pre><code class=\"javascript\">function digestEffect(effect, cb) {    // è¿™ä¸ªcbå…¶å®žå°±æ˜¯å‰�é�¢ä¼&nbsp;è¿›æ�¥çš„next\n    // è¿™ä¸ªå�˜é‡�æ˜¯ç”¨æ�¥è§£å†³ç«žäº‰é—®é¢˜çš„\n    let effectSettled;\n    function currCb(res, isErr) {\n      // å¦‚æžœå·²ç»�è¿�è¡Œè¿‡äº†ï¼Œç›´æŽ¥return\n      if (effectSettled) {\n        return\n      }\n\n      effectSettled = true;\n\n      cb(res, isErr);\n    }\n\n    runEffect(effect, currCb);\n  }</code></pre>\n<h4>runEffect</h4>\n<p>å�¯ä»¥çœ‹åˆ°<code>digestEffect</code>å�ˆè°ƒç”¨äº†ä¸€ä¸ªå‡½æ•°<code>runEffect</code>ï¼Œè¿™ä¸ªå‡½æ•°ä¼šå¤„ç�†å…·ä½“çš„<code>effect</code>:</p>\n<pre><code class=\"javascript\">// runEffectå°±å�ªæ˜¯èŽ·å�–å¯¹åº”typeçš„å¤„ç�†å‡½æ•°ï¼Œç„¶å�Žæ‹¿æ�¥å¤„ç�†å½“å‰�effect\nfunction runEffect(effect, currCb) {\n  if (effect &amp;&amp; effect.IO) {\n    const effectRunner = effectRunnerMap[effect.type]\n    effectRunner(env, effect.payload, currCb);\n  } else {\n    currCb();\n  }\n}</code></pre>\n<p>è¿™ç‚¹ä»£ç&nbsp;�å�¯ä»¥çœ‹å‡ºï¼Œ<code>runEffect</code>ä¹Ÿå�ªæ˜¯å¯¹<code>effect</code>è¿›è¡Œäº†æ£€æµ‹ï¼Œé€šè¿‡ä»–çš„ç±»åž‹èŽ·å�–å¯¹åº”çš„å¤„ç�†å‡½æ•°ï¼Œç„¶å�Žè¿›è¡Œå¤„ç�†ï¼Œæˆ‘è¿™é‡Œä»£ç&nbsp;�ç®€åŒ–äº†ï¼Œå�ªæ”¯æŒ�<code>IO</code>è¿™ç§�<code>effect</code>ï¼Œå®˜æ–¹æº�ç&nbsp;�ä¸­è¿˜æ”¯æŒ�<code>promise</code>å’Œ<code>iterator</code>ï¼Œå…·ä½“çš„å�¯ä»¥çœ‹çœ‹ä»–çš„æº�ç&nbsp;�ï¼š<a href=\"https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/proc.js\" rel=\"nofollow noreferrer\">https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/proc.js</a></p>\n<h3>effectRunner</h3>\n<p><code>effectRunner</code>æ˜¯é€šè¿‡<code>effect.type</code>åŒ¹é…�å‡ºæ�¥çš„å…·ä½“çš„<code>effect</code>çš„å¤„ç�†å‡½æ•°ï¼Œæˆ‘ä»¬å…ˆæ�¥çœ‹ä¸¤ä¸ªï¼š<code>take</code>å’Œ<code>fork</code>ã€‚</p>\n<h4>runTakeEffect</h4>\n<p><code>take</code>çš„å¤„ç�†å…¶å®žå¾ˆç®€å�•ï¼Œå°±æ˜¯å°†å®ƒæ³¨å†Œåˆ°æˆ‘ä»¬çš„<code>channel</code>é‡Œé�¢å°±è¡Œï¼Œæ‰€ä»¥æˆ‘ä»¬å»ºä¸€ä¸ª<code>effectRunnerMap.js</code>æ–‡ä»¶ï¼Œåœ¨é‡Œé�¢æ·»åŠ&nbsp;<code>take</code>çš„å¤„ç�†å‡½æ•°<code>runTakeEffect</code>:</p>\n<pre><code class=\"javascript\">// effectRunnerMap.js\n\nfunction runTakeEffect(env, { channel = env.channel, pattern }, cb) {\n  const matcher = input =&gt; input.type === pattern;\n\n  // æ³¨æ„�channel.takeçš„ç¬¬äºŒä¸ªå�‚æ•°æ˜¯matcher\n  // æˆ‘ä»¬ç›´æŽ¥å†™ä¸€ä¸ªç®€å�•çš„matcherï¼Œå°±æ˜¯è¾“å…¥ç±»åž‹å¿…é¡»è·Ÿpatternä¸€æ&nbsp;·æ‰�è¡Œ\n  // è¿™é‡Œçš„patternå°±æ˜¯æˆ‘ä»¬ç»�å¸¸ç”¨çš„actionå��å­—ï¼Œæ¯”å¦‚FETCH_USER_INFO\n  // Redux-Sagaä¸�ä»…ä»…æ”¯æŒ�è¿™ç§�å­—ç¬¦ä¸²ï¼Œè¿˜æ”¯æŒ�å¤šç§�å½¢å¼�ï¼Œä¹Ÿå�¯ä»¥è‡ªå®šä¹‰matcheræ�¥è§£æž�\n  channel.take(cb, matcher);\n}\n\nconst effectRunnerMap = {\n  'TAKE': runTakeEffect,\n};\n\nexport default effectRunnerMap;</code></pre>\n<p>æ³¨æ„�ä¸Šé�¢ä»£ç&nbsp;�<code>channel.take(cb, matcher);</code>é‡Œé�¢çš„<code>cb</code>ï¼Œè¿™ä¸ª<code>cb</code>å…¶å®žå°±æ˜¯æˆ‘ä»¬è¿­ä»£å™¨çš„<code>next</code>ï¼Œä¹Ÿå°±æ˜¯è¯´<code>take</code>çš„å›žè°ƒæ˜¯è¿­ä»£å™¨ç»§ç»­æ‰§è¡Œï¼Œä¹Ÿå°±æ˜¯ç»§ç»­æ‰§è¡Œä¸‹é�¢çš„ä»£ç&nbsp;�ã€‚ä¹Ÿå°±æ˜¯è¯´ï¼Œå½“ä½&nbsp;è¿™æ&nbsp;·å†™æ—¶ï¼š</p>\n<pre><code class=\"javascript\">yield take(\"SOME_ACTION\");\nyield fork(saga);</code></pre>\n<p>å½“è¿�è¡Œåˆ°<code>yield take(\"SOME_ACTION\");</code>è¿™è¡Œä»£ç&nbsp;�æ—¶ï¼Œæ•´ä¸ªè¿­ä»£å™¨éƒ½é˜»å¡žäº†ï¼Œä¸�ä¼šå†�å¾€ä¸‹è¿�è¡Œã€‚é™¤é�žä½&nbsp;è§¦å�‘äº†<code>SOME_ACTION</code>ï¼Œè¿™æ—¶å€™ä¼šæŠŠ<code>SOME_ACTION</code>çš„å›žè°ƒæ‹¿å‡ºæ�¥æ‰§è¡Œï¼Œè¿™ä¸ªå›žè°ƒå°±æ˜¯è¿­ä»£å™¨çš„<code>next</code>ï¼Œæ‰€ä»¥å°±å�¯ä»¥ç»§ç»­æ‰§è¡Œä¸‹é�¢è¿™è¡Œä»£ç&nbsp;�äº†<code>yield fork(saga)</code>ã€‚</p>\n<h4>runForkEffect</h4>\n<p>æˆ‘ä»¬å‰�é�¢çš„ç¤ºä¾‹ä»£ç&nbsp;�å…¶å®žæ²¡æœ‰ç›´æŽ¥ç”¨åˆ°<code>fork</code>è¿™ä¸ªAPIï¼Œä½†æ˜¯ç”¨åˆ°äº†<code>takeEvery</code>ï¼Œ<code>takeEvery</code>å…¶å®žæ˜¯ç»„å�ˆ<code>take</code>å’Œ<code>fork</code>æ�¥å®žçŽ°çš„ï¼Œæ‰€ä»¥æˆ‘ä»¬å…ˆæ�¥çœ‹çœ‹<code>fork</code>ã€‚<code>fork</code>çš„ä½¿ç”¨è·Ÿ<code>call</code>å¾ˆåƒ�ï¼Œä¹Ÿæ˜¯å�¯ä»¥ç›´æŽ¥è°ƒç”¨ä¼&nbsp;è¿›æ�¥çš„æ–¹æ³•ï¼Œå�ªæ˜¯<code>call</code>ä¼šç­‰å¾…ç»“æžœå›žæ�¥æ‰�è¿›è¡Œä¸‹ä¸€æ­¥ï¼Œ<code>fork</code>ä¸�ä¼šé˜»å¡žè¿™ä¸ªè¿‡ç¨‹ï¼Œè€Œæ˜¯å½“å‰�ç»“æžœæ²¡å›žæ�¥ä¹Ÿä¼šç›´æŽ¥è¿�è¡Œä¸‹ä¸€æ­¥ï¼š</p>\n<pre><code class=\"javascript\">fork(fn, ...args);</code></pre>\n<p>æ‰€ä»¥å½“æˆ‘ä»¬æ‹¿åˆ°<code>fork</code>çš„æ—¶å€™ï¼Œå¤„ç�†èµ·æ�¥ä¹Ÿå¾ˆç®€å�•ï¼Œç›´æŽ¥è°ƒç”¨<code>proc</code>å¤„ç�†<code>fn</code>å°±è¡Œäº†ï¼Œ<code>fn</code>åº”è¯¥æ˜¯ä¸€ä¸ª<code>Generator</code>å‡½æ•°ã€‚</p>\n<pre><code class=\"javascript\">function runForkEffect(env, { fn }, cb) {\n  const taskIterator = fn();    // è¿�è¡Œfnå¾—åˆ°ä¸€ä¸ªè¿­ä»£å™¨\n\n  proc(env, taskIterator);      // ç›´æŽ¥å°†taskIteratorç»™procå¤„ç�†\n\n  cb();      // ç›´æŽ¥è°ƒç”¨cbï¼Œä¸�éœ€è¦�ç­‰å¾…procçš„ç»“æžœ\n}</code></pre>\n<h4>runPutEffect</h4>\n<p>æˆ‘ä»¬å‰�é�¢çš„ä¾‹å­�è¿˜ç”¨åˆ°äº†<code>put</code>è¿™ä¸ª<code>effect</code>ï¼Œä»–å°±æ›´ç®€å�•äº†ï¼Œå�ªæ˜¯å�‘å‡ºä¸€ä¸ª<code>action</code>ï¼Œäº‹å®žä¸Šä»–ä¹Ÿæ˜¯è°ƒç”¨çš„<code>Redux</code>çš„<code>dispatch</code>æ�¥å�‘å‡º<code>action</code>ï¼š</p>\n<pre><code class=\"javascript\">function runPutEffect(env, { action }, cb) {\n  const result = env.dispatch(action);     // ç›´æŽ¥dispatch(action)\n\n  cb(result);\n}</code></pre>\n<p>æ³¨æ„�æˆ‘ä»¬è¿™é‡Œçš„ä»£ç&nbsp;�å�ªéœ€è¦�<code>dispatch(action)</code>å°±è¡Œäº†ï¼Œä¸�éœ€è¦�å†�æ‰‹åŠ¨è°ƒ<code>channel.put</code>äº†ï¼Œå›&nbsp;ä¸ºæˆ‘ä»¬å‰�é�¢çš„ä¸­é—´ä»¶é‡Œé�¢å·²ç»�æ”¹é€&nbsp;äº†<code>dispatch</code>æ–¹æ³•äº†ï¼Œæ¯�æ¬¡<code>dispatch</code>çš„æ—¶å€™éƒ½ä¼šè‡ªåŠ¨è°ƒç”¨<code>channel.put</code>ã€‚</p>\n<h4>runCallEffect</h4>\n<p>å‰�é�¢æˆ‘ä»¬å�‘èµ·<code>API</code>è¯·æ±‚è¿˜ç”¨åˆ°äº†<code>call</code>ï¼Œä¸€èˆ¬æˆ‘ä»¬ä½¿ç”¨<code>axios</code>è¿™ç§�åº“è¿”å›žçš„éƒ½æ˜¯ä¸€ä¸ª<code>promise</code>ï¼Œæ‰€ä»¥æˆ‘ä»¬è¿™é‡Œå†™ä¸€ç§�æ”¯æŒ�<code>promise</code>çš„æƒ…å†µï¼Œå½“ç„¶æ™®é€šå�Œæ­¥å‡½æ•°è‚¯å®šä¹Ÿæ˜¯æ”¯æŒ�çš„ï¼š</p>\n<pre><code class=\"javascript\">function runCallEffect(env, { fn, args }, cb) {\n  const result = fn.apply(null, args);\n\n  if (isPromise(result)) {\n    return result\n      .then(data =&gt; cb(data))\n      .catch(error =&gt; cb(error, true));\n  }\n\n  cb(result);\n}</code></pre>\n<p>è¿™äº›<code>effect</code>å…·ä½“å¤„ç�†çš„æ–¹æ³•å¯¹åº”çš„æº�ç&nbsp;�éƒ½åœ¨è¿™ä¸ªæ–‡ä»¶é‡Œé�¢ï¼š<a href=\"https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/effectRunnerMap.js\" rel=\"nofollow noreferrer\">https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/effectRunnerMap.js</a></p>\n<h3>effects</h3>\n<p>ä¸Šé�¢æˆ‘ä»¬è®²äº†å‡&nbsp;ä¸ª<code>effect</code>å…·ä½“å¤„ç�†çš„æ–¹æ³•ï¼Œä½†æ˜¯è¿™äº›éƒ½ä¸�æ˜¯å¯¹å¤–æš´éœ²çš„<code>effect API</code>ã€‚çœŸæ­£å¯¹å¤–æš´éœ²çš„<code>effect API</code>è¿˜éœ€è¦�å�•ç‹¬å†™ï¼Œä»–ä»¬å…¶å®žéƒ½å¾ˆç®€å�•ï¼Œéƒ½æ˜¯è¿”å›žä¸€ä¸ªå¸¦æœ‰<code>type</code>çš„ç®€å�•å¯¹è±¡å°±è¡Œï¼š</p>\n<pre><code class=\"javascript\">const makeEffect = (type, payload) =&gt; ({\n  IO: true,\n  type,\n  payload\n})\n\nexport function take(pattern) {\n  return makeEffect('TAKE', { pattern })\n}\n\nexport function fork(fn) {\n  return makeEffect('FORK', { fn })\n}\n\nexport function call(fn, ...args) {\n  return makeEffect('CALL', { fn, args })\n}\n\nexport function put(action) {\n  return makeEffect('PUT', { action })\n}</code></pre>\n<p>å�¯ä»¥çœ‹åˆ°å½“æˆ‘ä»¬ä½¿ç”¨<code>effect</code>æ—¶ï¼Œä»–çš„è¿”å›žå€¼å°±ä»…ä»…æ˜¯ä¸€ä¸ªæ��è¿°å½“å‰�ä»»åŠ¡çš„å¯¹è±¡ï¼Œè¿™å°±è®©æˆ‘ä»¬çš„å�•å…ƒæµ‹è¯•å¥½å†™å¾ˆå¤šã€‚å›&nbsp;ä¸ºæˆ‘ä»¬çš„ä»£ç&nbsp;�åœ¨ä¸�å�Œçš„çŽ¯å¢ƒä¸‹è¿�è¡Œå�¯èƒ½ä¼šäº§ç”Ÿä¸�å�Œçš„ç»“æžœï¼Œç‰¹åˆ«æ˜¯è¿™äº›å¼‚æ­¥è¯·æ±‚ï¼Œæˆ‘ä»¬å†™å�•å…ƒæµ‹è¯•æ—¶æ�¥é€&nbsp;è¿™äº›æ•°æ�®ä¹Ÿä¼šå¾ˆéº»çƒ¦ã€‚ä½†æ˜¯å¦‚æžœä½&nbsp;ä½¿ç”¨<code>Redux-Saga</code>çš„<code>effect</code>ï¼Œæ¯�æ¬¡ä½&nbsp;ä»£ç&nbsp;�è¿�è¡Œçš„æ—¶å€™å¾—åˆ°çš„éƒ½æ˜¯ä¸€ä¸ªä»»åŠ¡æ��è¿°å¯¹è±¡ï¼Œè¿™ä¸ªå¯¹è±¡æ˜¯ç¨³å®šçš„ï¼Œä¸�å�—è¿�è¡Œç»“æžœå½±å“�ï¼Œä¹Ÿå°±ä¸�éœ€è¦�é’ˆå¯¹è¿™ä¸ªé€&nbsp;æµ‹è¯•æ•°æ�®äº†ï¼Œå¤§å¤§å‡�å°‘äº†å·¥ä½œé‡�ã€‚</p>\n<p><code>effects</code>å¯¹åº”çš„æº�ç&nbsp;�æ–‡ä»¶çœ‹è¿™é‡Œï¼š<a href=\"https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/io.js\" rel=\"nofollow noreferrer\">https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/io.js</a></p>\n<h3>takeEvery</h3>\n<p>æˆ‘ä»¬å‰�é�¢è¿˜ç”¨åˆ°äº†<code>takeEvery</code>æ�¥å¤„ç�†å�Œæ—¶å�‘èµ·çš„å¤šä¸ªè¯·æ±‚ï¼Œè¿™ä¸ª<code>API</code>æ˜¯ä¸€ä¸ªé«˜çº§APIï¼Œæ˜¯å°�è£…å‰�é�¢çš„<code>take</code>å’Œ<code>fork</code>æ�¥å®žçŽ°çš„ï¼Œ<a href=\"https://github.com/redux-saga/redux-saga/blob/master/packages/core/src/internal/sagaHelpers/takeEvery.js\" rel=\"nofollow noreferrer\">å®˜æ–¹æº�ç&nbsp;�å�ˆæž„é€&nbsp;äº†ä¸€ä¸ªæ–°çš„è¿­ä»£å™¨æ�¥ç»„å�ˆä»–ä»¬</a>ï¼Œä¸�æ˜¯å¾ˆç›´è§‚ã€‚<a href=\"https://redux-saga.js.org/docs/advanced/Concurrency.html\" rel=\"nofollow noreferrer\">å®˜æ–¹æ–‡æ¡£ä¸­çš„è¿™ç§�å†™æ³•å��è€Œå¾ˆå¥½ç�†è§£</a>ï¼Œæˆ‘è¿™é‡Œé‡‡ç”¨æ–‡æ¡£ä¸­çš„è¿™ç§�å†™æ³•:</p>\n<pre><code class=\"javascript\">export function takeEvery(pattern, saga) {\n  function* takeEveryHelper() {\n    while (true) {\n      yield take(pattern);\n      yield fork(saga);\n    }\n  }\n\n  return fork(takeEveryHelper);\n}</code></pre>\n<p>ä¸Šé�¢è¿™æ®µä»£ç&nbsp;�å°±å¾ˆå¥½ç�†è§£äº†ï¼Œæˆ‘ä»¬ä¸€ä¸ªæ­»å¾ªçŽ¯ä¸�å�œçš„ç›‘å�¬<code>pattern</code>ï¼Œå�³ç›®æ&nbsp;‡äº‹ä»¶ï¼Œå½“ç›®æ&nbsp;‡äº‹ä»¶è¿‡æ�¥çš„æ—¶å€™ï¼Œå°±æ‰§è¡Œå¯¹åº”çš„<code>saga</code>ï¼Œç„¶å�Žå�ˆè¿›å…¥ä¸‹ä¸€æ¬¡å¾ªçŽ¯ç»§ç»­ç›‘å�¬<code>pattern</code>ã€‚</p>\n<h2>æ€»ç»“</h2>\n<p>åˆ°è¿™é‡Œæˆ‘ä»¬ä¾‹å­�ä¸­ç”¨åˆ°çš„<code>API</code>å·²ç»�å…¨éƒ¨è‡ªå·±å®žçŽ°äº†ï¼Œæˆ‘ä»¬å�¯ä»¥ç”¨è‡ªå·±çš„è¿™ä¸ª<code>Redux-Saga</code>æ�¥æ›¿æ�¢å®˜æ–¹çš„äº†ï¼Œå�ªæ˜¯æˆ‘ä»¬å�ªå®žçŽ°äº†ä»–çš„ä¸€éƒ¨åˆ†åŠŸèƒ½ï¼Œè¿˜æœ‰å¾ˆå¤šåŠŸèƒ½æ²¡æœ‰å®žçŽ°ï¼Œä¸�è¿‡è¿™å·²ç»�ä¸�å¦¨ç¢�æˆ‘ä»¬ç�†è§£ä»–çš„åŸºæœ¬åŽŸç�†äº†ã€‚å†�æ�¥å›žé¡¾ä¸‹ä»–çš„ä¸»è¦�è¦�ç‚¹ï¼š</p>\n<ol>\n <li><code>Redux-Saga</code>å…¶å®žä¹Ÿæ˜¯ä¸€ä¸ªå�‘å¸ƒè®¢é˜…æ¨¡å¼�ï¼Œç®¡ç�†äº‹ä»¶çš„åœ°æ–¹æ˜¯<code>channel</code>ï¼Œä¸¤ä¸ªé‡�ç‚¹<code>API</code>ï¼š<code>take</code>å’Œ<code>put</code>ã€‚</li>\n <li><code>take</code>æ˜¯æ³¨å†Œä¸€ä¸ªäº‹ä»¶åˆ°<code>channel</code>ä¸Šï¼Œå½“äº‹ä»¶è¿‡æ�¥æ—¶è§¦å�‘å›žè°ƒï¼Œéœ€è¦�æ³¨æ„�çš„æ˜¯ï¼Œè¿™é‡Œçš„å›žè°ƒä»…ä»…æ˜¯è¿­ä»£å™¨çš„<code>next</code>ï¼Œå¹¶ä¸�æ˜¯å…·ä½“å“�åº”äº‹ä»¶çš„å‡½æ•°ã€‚ä¹Ÿå°±æ˜¯è¯´<code>take</code>çš„æ„�æ€�å°±æ˜¯ï¼šæˆ‘åœ¨ç­‰æŸ�æŸ�äº‹ä»¶ï¼Œè¿™ä¸ªäº‹ä»¶æ�¥ä¹‹å‰�ä¸�è®¸å¾€ä¸‹èµ°ï¼Œæ�¥äº†å�Žå°±å�¯ä»¥å¾€ä¸‹èµ°äº†ã€‚</li>\n <li><code>put</code>æ˜¯å�‘å‡ºäº‹ä»¶ï¼Œä»–æ˜¯ä½¿ç”¨<code>Redux dispatch</code>å�‘å‡ºäº‹ä»¶çš„ï¼Œä¹Ÿå°±æ˜¯è¯´<code>put</code>çš„äº‹ä»¶ä¼šè¢«<code>Redux</code>å’Œ<code>Redux-Saga</code>å�Œæ—¶å“�åº”ã€‚</li>\n <li><code>Redux-Saga</code>å¢žå¼ºäº†<code>Redux</code>çš„<code>dispatch</code>å‡½æ•°ï¼Œåœ¨<code>dispatch</code>çš„å�Œæ—¶ä¼šè§¦å�‘<code>channel.put</code>ï¼Œä¹Ÿå°±æ˜¯è®©<code>Redux-Saga</code>ä¹Ÿå“�åº”å›žè°ƒã€‚</li>\n <li>æˆ‘ä»¬è°ƒç”¨çš„<code>effects</code>å’ŒçœŸæ­£å®žçŽ°åŠŸèƒ½çš„å‡½æ•°æ˜¯åˆ†å¼€çš„ï¼Œè¡¨å±‚è°ƒç”¨çš„<code>effects</code>å�ªä¼šè¿”å›žä¸€ä¸ªç®€å�•çš„å¯¹è±¡ï¼Œè¿™ä¸ªå¯¹è±¡æ��è¿°äº†å½“å‰�ä»»åŠ¡ï¼Œä»–æ˜¯ç¨³å®šçš„ï¼Œæ‰€ä»¥åŸºäºŽ<code>effects</code>çš„å�•å…ƒæµ‹è¯•å¾ˆå¥½å†™ã€‚</li>\n <li>å½“æ‹¿åˆ°<code>effects</code>è¿”å›žçš„å¯¹è±¡å�Žï¼Œæˆ‘ä»¬å†�æ&nbsp;¹æ�®ä»–çš„<code>type</code>åŽ»æ‰¾å¯¹åº”çš„å¤„ç�†å‡½æ•°æ�¥è¿›è¡Œå¤„ç�†ã€‚</li>\n <li>æ•´ä¸ª<code>Redux-Saga</code>éƒ½æ˜¯åŸºäºŽ<code>Generator</code>çš„ï¼Œæ¯�å¾€ä¸‹èµ°ä¸€æ­¥éƒ½éœ€è¦�æ‰‹åŠ¨è°ƒç”¨<code>next</code>ï¼Œè¿™æ&nbsp;·å½“ä»–æ‰§è¡Œåˆ°ä¸­é€”çš„æ—¶å€™æˆ‘ä»¬å�¯ä»¥æ&nbsp;¹æ�®æƒ…å†µä¸�å†�ç»§ç»­è°ƒç”¨<code>next</code>ï¼Œè¿™å…¶å®žå°±ç›¸å½“äºŽå°†å½“å‰�ä»»åŠ¡<code>cancel</code>äº†ã€‚</li>\n</ol>\n<p><strong>æœ¬æ–‡å�¯è¿�è¡Œçš„ä»£ç&nbsp;�å·²ç»�ä¸Šä¼&nbsp;åˆ°GitHubï¼Œå�¯ä»¥æ‹¿ä¸‹æ�¥çŽ©çŽ©ï¼š<a href=\"https://github.com/dennis-jiang/Front-End-Knowledges/tree/master/Examples/React/redux-saga\" rel=\"nofollow noreferrer\">https://github.com/dennis-jiang/Front-End-Knowledges/tree/master/Examples/React/redux-saga</a></strong></p>\n<h2>å�‚è€ƒèµ„æ–™</h2>\n<p><code>Redux-Saga</code>å®˜æ–¹æ–‡æ¡£ï¼š<a href=\"https://redux-saga.js.org/\" rel=\"nofollow noreferrer\">https://redux-saga.js.org/</a></p>\n<p><code>Redux-Saga</code>æº�ç&nbsp;�åœ°å�€ï¼š <a href=\"https://github.com/redux-saga/redux-saga/tree/master/packages/core/src\" rel=\"nofollow noreferrer\">https://github.com/redux-saga/redux-saga/tree/master/packages/core/src</a></p>\n<p><strong>æ–‡ç«&nbsp;çš„æœ€å�Žï¼Œæ„Ÿè°¢ä½&nbsp;èŠ±è´¹å®�è´µçš„æ—¶é—´é˜…è¯»æœ¬æ–‡ï¼Œå¦‚æžœæœ¬æ–‡ç»™äº†ä½&nbsp;ä¸€ç‚¹ç‚¹å¸®åŠ©æˆ–è€…å�¯å�‘ï¼Œè¯·ä¸�è¦�å��å•¬ä½&nbsp;çš„èµžå’ŒGitHubå°�æ˜Ÿæ˜Ÿï¼Œä½&nbsp;çš„æ”¯æŒ�æ˜¯ä½œè€…æŒ�ç»­åˆ›ä½œçš„åŠ¨åŠ›ã€‚</strong></p>\n<p><strong>ä½œè€…å�šæ–‡GitHubé¡¹ç›®åœ°å�€ï¼š <a href=\"https://github.com/dennis-jiang/Front-End-Knowledges\" rel=\"nofollow noreferrer\">https://github.com/dennis-jiang/Front-End-Knowledges</a></strong></p>\n<p><strong>æˆ‘ä¹Ÿæ�žäº†ä¸ªå…¬ä¼—å�·[è¿›å‡»çš„å¤§å‰�ç«¯]ï¼Œä¸�æ‰“å¹¿å‘Šï¼Œä¸�å†™æ°´æ–‡ï¼Œå�ªå�‘é«˜è´¨é‡�åŽŸåˆ›ï¼Œæ¬¢è¿Žå…³æ³¨~</strong></p>","descriptionType":"html","publishedDate":"Mon, 19 Oct 2020 07:06:34 +0000","feedId":6615,"bgimg":"https://segmentfault.com/img/remote/1460000037525340","linkMd5":"281b02e6308a491eecb64b9134da0ab2","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn81@2020_3/2020/10/20/17-06-53-592_4fa1b11a7cdcf86a.webp","destWidth":332,"destHeight":134,"sourceBytes":35976,"destBytes":35976,"author":"è’‹é¹�é£ž","articleImgCdnMap":{"https://segmentfault.com/img/remote/1460000037525340":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn81@2020_3/2020/10/20/17-06-53-592_4fa1b11a7cdcf86a.webp"},"publishedOrCreatedDate":1603213602895}],"record":{"createdTime":"2020-10-21 01:06:42","updatedTime":"2020-10-21 01:06:42","feedId":6615,"fetchDate":"Tue, 20 Oct 2020 17:06:42 +0000","fetchMs":3520,"handleMs":8648,"totalMs":25165,"newArticles":0,"totalArticles":50,"status":1,"type":0,"ip":"818b2f91db1355e1383e1c549cf591f8","hostName":"europe61*","requestId":"bcac59aa10e6430f9c2ab66c223c7ccf_6615","contentType":"application/atom+xml; charset=UTF-8","totalBytes":35976,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":1,"articlesImgsGithubTotal":1,"successGithubMap":{"myreaderx30":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:33:08","updatedTime":"2020-10-20 19:10:36","id":6615,"name":"SegmentFault æœ€æ–°çš„æ–‡ç« ","url":"http://segmentfault.com/feeds/blogs","subscriber":null,"website":null,"icon":"https://segmentfault.com/favicon.ico","icon_jsdelivr":null,"description":"","weekly":null,"link":"https://segmentfault.com"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":35976,"tmpBodyImgCdnBytes":0,"tmpBgImgCdnBytes":0,"extra4":{"start":1603213589295,"total":0,"statList":[{"spend":4952,"msg":"获取xml内容"},{"spend":8648,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":0,"msg":"正文链接上传到cdn"}]},"extra5":1,"extra6":1,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000037525340","sourceStatusCode":200,"destWidth":332,"destHeight":134,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn81@2020_3/2020/10/20/17-06-53-592_4fa1b11a7cdcf86a.webp","sourceBytes":35976,"destBytes":35976,"feedId":6615,"totalSpendMs":8562,"convertSpendMs":0,"createdTime":"2020-10-21 01:06:45","host":"us-039*","referer":"https://segmentfault.com/a/1190000037525337","linkMd5ListStr":"281b02e6308a491eecb64b9134da0ab2,281b02e6308a491eecb64b9134da0ab2","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"compressRate":"100%","sourceSize":"35.1 KB","destSize":"35.1 KB"}],"successGithubMap":{"myreaderx30":1},"failGithubMap":{}}