{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-05 14:45:38","updatedTime":"2020-09-05 14:45:38","title":"我用React和Vue构建了同款应用，来看看哪里不一样（2020版）","link":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RyymS324UsdKSbHpPjGZ0M71qlzM4BXpavZ1gOwNb6TrIz6fVXfj77g?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n\n                    \n                    \n                    <section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\" data-mpa-powered-by=\"yiban.io\"><section style=\"text-align: left;\">\n\t\t<img data-ratio=\"0.6817708333333333\" data-type=\"jpeg\" data-w=\"1920\" style=\"width: 100%; border-radius: 4px; margin-bottom: 25px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RlYic9IpYB4PUgreTR3ibuWDWL3BZFHib92SPj7Upo3rHgensJLCrSjwHw/640?wx_fmt=jpeg\">\n\t</section><section style=\"font-size: 14px;color: rgb(145, 145, 145);text-align: left;line-height: 1em;margin-top: 13px;padding-left: 14px;\">\n\t\t作者丨 Sunil Sandhu\t</section><section style=\"font-size: 14px;color: rgb(145, 145, 145);text-align: left;line-height: 1em;margin-top: 13px;padding-left: 14px;\">\n\t\t译者丨王强\t</section><section style=\"font-size: 14px;color: rgb(145, 145, 145);text-align: left;line-height: 1em;margin-top: 13px;padding-left: 14px;\">\n\t\t策划丨小智\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">几年前，我决定试着分别在 React 和 Vue 中构建一个相当标准的 To Do（待办事项）应用。这两个应用都是使用默认的 CLI 构建的（React 的 create-react-app 和 Vue 的 vue-cli）。我想尽量保持中立，通过这样的例子来告诉大家这两种技术执行特定任务时是怎样做的。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">当 React Hooks 发布时，我为这篇文章更新了“2019 版”，用函数式 Hooks 取代了类组件。随着 Vue 3 及其组合（Composition）API 的发布，现在是时候更新这篇文章的“2020 版”了。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">2019 版：<a style=\"color: #5baceb;word-break: break-all;\" href=\"https://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247492681&amp;idx=1&amp;sn=d351f0cc0841c77bc1f8ab3882af6539&amp;chksm=f952510ace25d81c263329d429501b31320168613af5709712775c54e13919028fe4e5f64071&amp;scene=21#wechat_redirect\" data-linktype=\"2\">我用 React 和 Vue 构建了同款应用，来看看哪里不一样</a></p><section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\"><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>先来大致看一下两款应用的外观：</span></section></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img data-ratio=\"0.4901041666666667\" data-type=\"png\" data-w=\"1920\" style=\"font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif; font-size: 16px; color: rgb(74, 74, 74); white-space: pre-line; width: 578px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RuBuIJC5Nr83acIeAgU7fdLKib3MmHE9OEjPBuJWoobOvcggdyehAe1Q/640?wx_fmt=png\"></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">两款应用的 CSS 代码完全相同，但代码所处的位置有所不同。记住这一点，接下来让我们看一下它们的文件结构：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img data-ratio=\"1.2322274881516588\" data-type=\"png\" data-w=\"844\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76R95SYjfeaWXTS6mibPORPNCQocGibVKic4Hlgaiby9T1nfnv9mU8s7ejLHg/640?wx_fmt=png\"></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">你会发现它们的结构也几乎相同。唯一的区别是 React 应用有两个 CSS 文件，而 Vue 应用没有任何 CSS 文件。这是因为在 create-react-app 中，默认每个 React 组件都会附带一个单独文件来保存其样式，而 Vue CLI 用单一的文件来为默认组件包含 HTML、CSS 和 JavaScript。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">最后它们俩都达成了同样的目标，也没什么可多说的，因为在 React 或 Vue 中你都不能改变文件结构。选择哪个确实取决于个人喜好。开发社区关于 CSS 的结构化方式这个话题有大量的讨论，尤其是 React 这块，因为有许多 CSS-in-JS 解决方案，诸如样式化组件和 emotion 等。顺便说一句，CSS-in-JS 就是字面上的意思。虽然这些都很有用，但这里我们只用两边的 CLI 给出的结构。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">在进一步深入之前，我们先来看一下典型的 Vue 和 React 组件长什么样：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><strong style=\"text-align: left;\">典型的 React 文件</strong>：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img data-ratio=\"0.5241379310344828\" data-type=\"png\" data-w=\"1450\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RNNSBJZq6W8cib6vXicntN2DHEic30lSeCne83JEfrDlHOE2wlYQFD3u7Q/640?wx_fmt=png\"></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><strong style=\"text-align: left;\">典型的 Vue 文件</strong>：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img data-ratio=\"0.7496423462088698\" data-type=\"png\" data-w=\"1398\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76R31oibdYJhp72cGCnI0ZGYa8AAvsH0mVHjeQAqBMjk1qMCLshHGvoZmQ/640?wx_fmt=png\"></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">看过之后我们来深入了解细节吧！</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>我们如何突变数据？</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">首先，“突变数据”到底是什么意思呢？听起来是不是有点高深？其实它基本上就是指更改我们已存储的数据。如果我们想将一个人名的值从 John 更改为 Mark，我们就是在“突变“这份数据。这就是 React 和 Vue 之间的关键区别所在。Vue 本质上创建了一个数据对象，可以在其中自由更新数据，而 React 通过所谓的状态 Hook 来处理数据突变。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">从下面的图片中可以看到两者的设置，然后我们会具体说明：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><strong style=\"text-align: left;\">React 状态</strong>：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img data-ratio=\"0.38155136268343814\" data-type=\"png\" data-w=\"954\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RG0Vib2oJ3EteISNvXvbhfy6o2siakzPicrRKRfH35HSdQIvmUpE4H3I9w/640?wx_fmt=png\"></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><strong style=\"text-align: left;\">Vue 状态</strong>：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img data-ratio=\"0.5677083333333334\" data-type=\"png\" data-w=\"768\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76REjt8iaWhWib49Tzib2uBZibgG8SKaVLAxicUxpkqydAFGiaiaVEnA9ib7ibY6pg/640?wx_fmt=png\"></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">于是你看到我们将相同的数据传递给了两者，但各自的结构有所不同。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">在 React 中，至少从 2019 年开始，我们一般会通过一系列 Hooks 处理状态。你可能以前没接触过这种概念，一开始它看起来可能有点奇怪。它的工作机制基本上是这个样子：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">假设我们要创建一个待办事项列表，我们可能需要创建一个名为 list 的变量，它可能需要接收一个由字符串或对象组成的数组（比如说给每个 todo 字符串一个 ID 或其他一些东西）。我们需要写的代码是<code>const [list, setList] = useState([])</code>。这里我们用的就是 React 里面的 Hook，称为 useState。它本质上是让我们能够在组件中保留局部状态。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">另外，你可能已经注意到我们在 useState() 内部传入了一个空数组 []。放在其中的是我们希望 list 最初设置的内容，这里我们希望是一个空数组。但从上图可以看到，我们在数组内传入了一些数据，这些数据最后成了 list 的初始化数据。想知道 setList 是做什么的？稍后会进一步说明！</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">在 Vue 中，通常会将组件的所有突变数据放置在一个 setup() 函数内，该函数返回一个对象，其中包含要公开的数据和函数（就是那些你要在应用中使用的东西）。你会注意到，应用中的每个状态数据（也就是我们希望能够突变的数据）都包装在一个 ref() 函数内部。这个 ref() 函数是我们从 Vue 导入的，可让我们的应用在这些数据更改 / 更新时完成更新。简而言之，如果你想在 Vue 中创建突变数据，请为 ref() 函数分配一个变量，并在其中放入默认数据。</p><section style=\"text-align: center;font-size: 20px;\"><span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>如何在应用中引用突变数据？</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">假设我们有一些数据名为 name，被分配了 Sunil 值。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">在 React 中，由于我们使用 useState() 创建了较小的状态，因此很可能已经用<code>const [name, setName] = useState('Sunil')</code>创建了一些东西。在应用中，我们将简单地调用 name 来引用同一段数据。这里的主要区别在于我们不能简单地写上<code>name = 'John'</code>，因为 React 有一些限制来预防这种简单且无所顾忌的突变。在 React 中，我们要写成<code>setName('John')</code>。这里用到了 setName。在<code>const [name, setName] = useState('Sunil')</code>中，它创建两个变量，一个变量变为<code>const name = 'Sunil'</code>，而第二个 const setName 被分配了一个函数，该函数使 name 可以用新值重新创建。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">在 Vue 中，它位于 setup() 函数内部，并且被称为<code>const name = ref('Sunil')</code>。在应用中，我们将调用 name.value 来引用它。如果要使用在 ref() 函数内部创建的值，我们将在变量上寻找.value 而不是简单地调用该变量。换句话说，如果我们想要一个持有状态的变量值，我们将寻找 name.value 而不是 name。如果要更新 name 的值，可以通过更新 name.value 来完成。例如，假设我想将我的名字从 Sunil 更改为 John, 可以写<code>name.value = \"John\"</code>来做到这一点。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">实际上，React 和 Vue 在这里做的是同样的事情，也就是创建可以更新的数据。Vue 本质上会在每次更新一条包装在 ref() 函数内的数据时默认结合它自己的 name 和 setName 版本。React 要求你使用内部值调用 setName() 来更新状态，而如果你曾尝试更新数据对象内部的值，Vue 就会假设你要这么做。那么为什么 React 会费劲地将值与函数分开，还要使用 useState() 呢？这是因为当状态改变时，React 希望重新运行某些生命周期 Hooks。在我们的例子中，当你调用 setName() 时，React 会知道有些状态已更改，所以可以运行它们的生命周期 Hooks。如果你直接改变状态，React 将不得不做更多的工作来跟踪更改以及要运行的生命周期 Hooks 等。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">现在我们已经搞明白了数据突变，接下来看看在两个 To Do 应用中添加新项目的方法。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>我们如何创建新的待办事项？</span>\n\t</section>\n\t\t<p style=\"text-align: center;margin-bottom: 20px;\"><span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>React：</span></p><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> createNewToDoItem = () =&gt; {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> newId = generateId();<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> newToDo = { id: newId, text: toDo };<br mpa-from-tpl=\"t\">    setList([...<span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">list</span>, newToDo]);<br mpa-from-tpl=\"t\">    setToDo(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"\"</span>);<br mpa-from-tpl=\"t\">};</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><strong style=\"text-align: left;\">在 React 里是怎么做的？</strong><br></p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;margin-bottom: 15px;\">在 React 中，我们的输入字段有一个名为 <strong style=\"text-align: left;\">value</strong> 的属性。每次通过 <strong style=\"text-align: left;\">onChange 事件侦听器</strong> 更改它的值时，都会自动更新此值。JSX（基本上是 HTML 的变体）如下所示：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 224px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">input</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">type</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"text\"</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 79px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">placeholder</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 102px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"I need to...\"</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">value</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{toDo}</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 57px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">onChange</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{handleInput}</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">onKeyPress</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 116px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{handleKeyPress}</span><br mpa-from-tpl=\"t\">/&gt;</span></code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;margin-bottom: 15px;\">每次更改值时，它都会更新状态。handleInput 函数如下所示：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\">const handleInput = <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(e)</span> =&gt;</span> {<br mpa-from-tpl=\"t\">    setToDo(e.target.value);<br mpa-from-tpl=\"t\">};</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">现在，每当用户按下页面上的 <strong style=\"text-align: left;\">+</strong> 按钮添加新项目时，都会触发 <strong style=\"text-align: left;\">createNewToDoItem</strong> 函数。我们再来看一下这个函数，搞清楚具体发生了什么：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> createNewToDoItem = () =&gt; {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> newId = generateId();<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> newToDo = { id: newId, text: toDo };<br mpa-from-tpl=\"t\">    setList([...<span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">list</span>, newToDo]);<br mpa-from-tpl=\"t\">    setToDo(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"\"</span>);<br mpa-from-tpl=\"t\">};</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">本质上，newId 函数是在创建一个新 ID，该 ID 将提供给我们的新 toDo 项目。newToDo 变量是一个对象，有一个 id 键，其值由 newID 确定。它还有一个 text 键，其值由 toDo 确定。这个 toDo 就是输入值更改时要更新的那个 toDo。<br></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">setList 函数到此为止，然后我们传入一个包含整个 list 以及新创建的 newToDo 的数组。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">你可能觉得…list 看起来很奇怪：开头的三个点称为 spread 运算符，负责将 list 中的所有值作为单独的项目传递，而不是简单地把所有项目打包在一起作为数组传递。感觉有些糊涂吗？那我强烈建议你仔细阅读 spread 运算符的相关介绍，因为它很有用！</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">最后我们运行 setToDo() 并传入一个空字符串。这样我们的输入值为空，可以输入新的 toDo 了。</p>\n\t\t<p style=\"text-align: center;margin-bottom: 20px;\"><span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>Vue：</span></p><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 209px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">function</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 123px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">createNewToDoItem</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>{<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> newId = generateId();<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">list</span>.value.push({ id: newId, text: todo.value });<br mpa-from-tpl=\"t\">    todo.value = <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"\"</span>;<br mpa-from-tpl=\"t\">}</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><strong style=\"text-align: left;\">在 Vue 里是怎么做的？</strong></p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;margin-bottom: 15px;\">在 Vue 中，我们的 <strong style=\"text-align: left;\">input</strong> 字段有一个称为 <strong style=\"text-align: left;\">v-model</strong> 的句柄。这使我们能够执行称为 <strong style=\"text-align: left;\">双向绑定</strong> 的操作。下面来看一下 input 字段，搞清楚到底发生了什么：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\">&lt;<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">input</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">type</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"text\"</span><br mpa-from-tpl=\"t\">    placeholder=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"I need to...\"</span><br mpa-from-tpl=\"t\">    v-model=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"todo\"</span><br mpa-from-tpl=\"t\">    v-<span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">on</span>:keyup.enter=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 138px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"createNewToDoItem\"</span><br mpa-from-tpl=\"t\">/&gt;</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;margin-bottom: 15px;\">V-Model 将这个字段的输入与我们在 setup() 函数上创建的一个变量相关联，然后公开为一个返回对象内的键。到目前为止我们还没有介绍对象返回的内容，所以先说一下，这是我们从 <strong style=\"text-align: left;\">ToDo.vue</strong> 内部的 setup() 函数返回的内容：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">list</span>,<br mpa-from-tpl=\"t\">    todo,<br mpa-from-tpl=\"t\">    showError,<br mpa-from-tpl=\"t\">    generateId,<br mpa-from-tpl=\"t\">    createNewToDoItem,<br mpa-from-tpl=\"t\">    onDeleteItem,<br mpa-from-tpl=\"t\">    displayError<br mpa-from-tpl=\"t\">};</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">这里，list、todo 和 showError 是我们的有状态值，而其他所有内容都是我们希望能在应用其他位置调用的函数。在页面加载时，我们必须将 todo 设置为一个空字符串，例如：const todo = ref(\"\")。如果其中已经有一些数据，例如 const todo = ref(\"add some text here\")：我们的输入字段将在内部已有 add some text here 的情况下加载。不管怎样，回到空字符串的状态，无论我们在输入字段中键入什么文本都必须绑定到 todo.value。这实际上就是双向绑定——输入字段可以更新 ref() 值，反过来后者也可以更新输入字段。<br></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">回顾一下前面的 <strong>createNewToDoItem () </strong>代码块，可以看到，我们将 todo.value 的内容推送到 list 数组中，然后将前者更新为一个空字符串。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">我们还使用了与 React 示例中相同的 newId() 函数。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>如何从列表中删除项目？</span>\n\t</section>\n\t\t<p style=\"text-align: center;margin-bottom: 20px;\"><span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>React：</span></p><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\">const deleteItem = <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(id)</span> =&gt;</span> {<br mpa-from-tpl=\"t\">    setList(list.filter(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(item)</span> =&gt;</span> item.id !== id));<br mpa-from-tpl=\"t\">};</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><strong style=\"text-align: left;\">在 React 里是怎么做的？</strong></p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">因为 deleteItem() 函数位于 <strong style=\"text-align: left;\">ToDo.js</strong> 内，我可以很容易地在 <strong style=\"text-align: left;\">ToDoItem.js</strong> 里引用它，首先将 <strong>deleteItem ()</strong> 函数作为一个 prop，如下所示：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 448px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">ToDoItem</span> <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">key</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{item.id}</span> <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">item</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{item}</span> <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">deleteItem</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 87px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{deleteItem}</span> /&gt;</span></code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">这里首先将该函数传递下去，使其能被子级访问。然后在 <strong style=\"text-align: left;\">ToDoItem</strong> 组件内执行以下操作：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 361px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">button</span> <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">className</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 123px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"ToDoItem-Delete\"</span> <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 50px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">onClick</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 21px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{()</span> =&gt;</span> deleteItem(item.id)}&gt;<br mpa-from-tpl=\"t\">    -<br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">button</span>&gt;</span></code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;text-align: left;\">我要引用位于父组件内的函数，只需引用 <strong style=\"text-align: left;\">props.deleteItem</strong>。你可能发现在代码示例中，我们只写了 deleteItem，而不是 props.deleteItem。这是因为我们使用了一种称为 <strong style=\"text-align: left;\">解构</strong> 的技术，该技术允许我们获取 <strong style=\"text-align: left;\">props</strong> 对象的一部分并将其分配给变量。因此在我们的 <strong style=\"text-align: left;\">ToDoItem.js</strong> 文件中有以下内容：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> ToDoItem = <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">props</span>) =&gt;</span> {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> { item, deleteItem } = props;<br mpa-from-tpl=\"t\">}</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">这为我们创建了两个变量，其中一个称为 item，它被赋予与 props.item 相同的值，而 deleteItem 则根据 props.deleteItem 赋值。我们也可以简单地使用 props.item 和 props.deleteItem 来避免解构的操作，但我认为这里值得单独介绍一下！<br></p>\n\t\t<section style=\"text-align: center;margin-bottom: 20px;\"><span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>Vue：</span></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 188px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">function</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">onDeleteItem</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(id)</span> </span>{<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">list</span>.value = <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 28px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">list</span>.value.filter(item =&gt; item.id !== id);<br mpa-from-tpl=\"t\">}</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><strong style=\"text-align: left;\">在 Vue 里是怎么做的？</strong><br></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Vue 需要的方法稍微有一些不同。这里我们必须做三件事：</p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">首先，在我们要调用函数元素上：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><button style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 123px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"ToDoItem-Delete\"</span> @click=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 151px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"deleteItem(item.id)\"</span>&gt;<br mpa-from-tpl=\"t\">    -<br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">button</span>&gt;</span></button></code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;text-align: left;\">然后我们必须在子组件（在本例中为 <strong style=\"text-align: left;\">ToDoItem.vue</strong>）中创建一个 emit 函数作为方法，如下所示：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 173px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">function</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">deleteItem</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(id)</span> </span>{<br mpa-from-tpl=\"t\">    emit(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"delete\"</span>, id);<br mpa-from-tpl=\"t\">}</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">与此同时你会发现，当我们在 <strong style=\"text-align: left;\">ToDo.vue</strong> 中添加 <strong style=\"text-align: left;\">ToDoItem.vue</strong> 时，我们实际上引用了一个 <strong style=\"text-align: left;\">函数</strong>：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><todoitem v- style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">for=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 102px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"item in list\"</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">:item=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"item\"</span></span> @delete=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 102px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"onDeleteItem\"</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">:key=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"item.id\"</span></span> /&gt;</todoitem></code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">这就是所谓的自定义事件侦听器 event-listener。它会侦听使用字符串“delete”触发 emit 的所有情况。如果听到此消息，它将触发一个名为 <strong style=\"text-align: left;\">onDeleteItem</strong> 的函数。此函数位于 <strong style=\"text-align: left;\">ToDo.vue</strong> 内部，而不是在 <strong style=\"text-align: left;\">ToDoItem.vue</strong> 中。如前所述，此函数仅过滤来自 list.value 数组内的 id。<br></p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">在这里还需注意的是，在 Vue 示例中，我可以简单地将 $emit 部分写在 @click 侦听器中，如下所示：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><buttonclass style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 122px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"ToDoItem-Delete\"@click=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"emit(\"</span><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">delete</span><span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 87px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\", item.id)\"</span>&gt;<br mpa-from-tpl=\"t\">    -<br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">button</span>&gt;</span></buttonclass></code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">这样就能把步骤从 3 步减少到 2 步，选哪个完全取决于个人喜好。简而言之，React 中的子组件可以通过 <strong style=\"text-align: left;\">props</strong> 来访问父函数（前提是你要向下传递 props，这是相当标准的做法，其他 React 工作中也非常常见）；而在 Vue 中，你需要从子级发射事件，这些事件通常会在父组件内部回收。<br></p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>怎样传递事件侦听器？</span>\n\t</section><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>React：</span>\n\t</section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">针对简单事件（例如单击事件）的事件侦听器很好做。下面是为创建新的 ToDo 项目的按钮创建 click 事件的示例：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 404px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">button</span> <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">className</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"ToDo-Add\"</span><span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">onClick</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 137px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{createNewToDoItem}</span>&gt;</span><br mpa-from-tpl=\"t\">    +<br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">button</span>&gt;</span></code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;text-align: left;\">这里非常简单，和在一般的 JS 里处理内联 onClick 差不多。如 Vue 部分所述，设置一个事件侦听器来侦听按下 Enter 键的动作有点复杂。这需要由 input 标签处理 onKeyPress 事件，如下：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 217px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">input</span><br mpa-from-tpl=\"t\">   <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">type</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"text\"</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 79px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">placeholder</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 102px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"I need to...\"</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">value</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{toDo}</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 57px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">onChange</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{handleInput}</span><br mpa-from-tpl=\"t\">   <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 73px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">onKeyPress</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 115px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{handleKeyPress}</span><br mpa-from-tpl=\"t\">/&gt;</span></code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">只要识别出已按下“enter”键，此函数就触发了 <strong style=\"text-align: left;\">createNewToDoItem</strong> 函数，如下：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\">const handleKeyPress = <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(e)</span> =&gt;</span> {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">if</span> (e.key === <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 50px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"Enter\"</span>) {<br mpa-from-tpl=\"t\">    createNewToDoItem();<br mpa-from-tpl=\"t\">    }<br mpa-from-tpl=\"t\">};</code></pre></section><section style=\"text-align: center;\"><span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>Vue：</span>\n\t<br></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">在 Vue 中写起来非常直观。我们只需使用 @符号，后面是我们想要做的事件监听器的类型。例如要添加一个 click 事件监听器，我们可以编写以下代码：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><button style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"ToDo-Add\"</span> @click=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 137px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"createNewToDoItem\"</span>&gt;<br mpa-from-tpl=\"t\">    +<br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">button</span>&gt;</span></button></code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">注意：@click 实际上是 v-on:click 的简写。Vue 事件侦听器很好用的是你还可以绑定很多东西，例如.once，它可以防止事件侦听器被多次触发。在编写处理按键的特定事件侦听器时还有许多捷径。我发现在 React 中创建一个事件侦听器，做到每当按下 enter 键就创建新的 ToDo 项目，写起来比较麻烦。在 Vue 中，我只需编写：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\">&lt;<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">input</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">type</span>=”text” v-<span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">on</span>:keyup.enter=”createNewToDoItem”/&gt;</code></pre></section><section style=\"text-align: center;font-size: 20px;\"><span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>如何将数据传递给子组件？</span>\n\t<br></section><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>React：</span>\n\t</section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">在 React 中，我们将 props 传递到子组件的创建位置。如：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 448px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">&lt;<span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">ToDoItem</span> <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">key</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{item.id}</span> <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">item</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{item}</span> <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">deleteItem</span>=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 87px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">{deleteItem}</span> /&gt;</span>;</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">这里我们看到两个传递给 <strong style=\"text-align: left;\">ToDoItem</strong> 组件的 props。从这里开始，我们就可以通过 this.props 在子组件中引用它们。因此要访问 item.todo prop 时，我们只需调用 props.item。你可能已经注意到还有一个 key prop（因此从技术上讲，我们实际上正在传递三个 props）。这主要用于 React 的内部，因为它简化了同一组件的多个版本之间更新和跟踪更改的工作（我们这里每个 <strong style=\"text-align: left;\">todo</strong> 是 ToDoItem 组件的一个副本）。确保你的组件具有唯一键也很重要，否则 React 会在控制台中发出警告。<br></p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>Vue：</span>\n\t</section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">在 Vue 中，我们将 props 传递到子组件的创建位置。如：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><todoitem v- style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">for=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 102px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"item in list\"</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">:item=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"item\"</span></span> @delete=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 102px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"onDeleteItem\"</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">:key=<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"item.id\"</span></span> /&gt;</todoitem></code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;margin-bottom: 15px;\">完成此操作后，我们将它们传递到子组件的 props 数组中，如下所示：<code>props: [ \"todo\" ]</code>。然后它们就可以在子组件中用名称引用——这里的名称就是 todo。如果你不知道在哪里放 prop 键，下面是我们的子组件中整个 export default 对象的样子：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">export</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">default</span> {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">name</span>: <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"ToDoItem\"</span>,<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">props</span>: [<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"item\"</span>],<br mpa-from-tpl=\"t\">    setup(props, { emit }) {<br mpa-from-tpl=\"t\">        <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 173px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 57px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">function</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">deleteItem</span>(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">id</span>) </span>{<br mpa-from-tpl=\"t\">        emit(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 57px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"delete\"</span>, id);<br mpa-from-tpl=\"t\">        }<br mpa-from-tpl=\"t\">        <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> {<br mpa-from-tpl=\"t\">        deleteItem,<br mpa-from-tpl=\"t\">        };<br mpa-from-tpl=\"t\">    },<br mpa-from-tpl=\"t\">};</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">你可能注意到 Vue 中遍历数据时，我们实际上遍历的是 list 而非 list.value。遍历后者这里是行不通的。<br></p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>如何将数据发射回父组件？</span>\n\t</section><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>React：</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">我们首先将函数向下传递给子组件，在调用子组件的位置将其作为 prop 引用。然后我们向子组件的函数添加调用，比如说 <strong style=\"text-align: left;\">onClick</strong> 就引用 <strong style=\"text-align: left;\">props.whateverTheFunctionIsCalled</strong>——或者 <strong style=\"text-align: left;\">whateverTheFunctionIsCalled</strong>（如果用解构）。然后将触发位于父组件中的函数。我们可以在“如何从列表中删除项目”部分中查看全过程。</p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>Vue：</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">在子组件中，我们只需要编写一个将值返回给父函数的函数即可。在父组件中我们编写一个函数，该函数侦听何时发射出该值，然后可以触发一个函数调用。可以在“如何从列表中删除项目”部分中查看全过程。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>终于完成了！</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">我们已经研究了如何添加、删除和更改数据，以 props 形式将数据从父级传递到子级，以及以事件侦听器的形式将数据从子级发送到父级。当然，React 和 Vue 之间还有其他许多小差异和癖好，但我希望本文的内容有助于大家理解这两个框架是如何处理事物的。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">如果你有兴趣 fork 本文中使用的样式，并想制作自己的类似作品，请自便！</p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>两个应用的 Github 链接</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Vue ToDo：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://github.com/sunil-sandhu/vue-todo-2020</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">React ToDo：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://github.com/sunil-sandhu/react-todo-2020</span></p><section style=\"text-align: left;margin-top: 30px;margin-left: 8px;color: rgb(60, 112, 198);\"><span style=\"display: inline-block;width: 15px;height: 15px;margin-right: 10px;background-image: url(\" https: center no-repeat initial></span>\n\t\t延伸阅读\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://sunilsandhu.com/posts/i-created-the-exact-same-app-in-react-and-vue-2020-edition</span></p><section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\"><h5 style=\"text-align: center;height: 51px;line-height: 52px;font-size: 18px;color: rgb(60, 112, 198);background-image: url(\" https: center no-repeat initial><span style=\"display: inline-block;height: 51px;width: 37%;float: left;background-image: url(\" https: center no-repeat initial></span>今日荐文<span style=\"display: inline-block;height: 51px;width: 37%;float: right;background-image: url(\" https: center no-repeat initial></span></h5></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247499997&amp;idx=1&amp;sn=04dbf2b7ed41f3d925d1b8f8beeb3a01&amp;chksm=f952759ece25fc88816c9568723a453188c65ead84a87ea3373da71a91ef9926433e4b9f3be6&amp;scene=21#wechat_redirect\" textvalue=\"《抛弃 x86 的苹果，意味着什么？》\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">《抛弃 x86 的苹果，意味着什么？》</a></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247499009&amp;idx=1&amp;sn=1c4cdb1771db5dcc85376df5aa5150f2&amp;chksm=f9524842ce25c154e33f19db13601591dee4f01fa0da559188d40de1206384d9408de4b7ef4f&amp;scene=21#wechat_redirect\" textvalue=\"《耗时三年，向 React 迁移的利与弊》\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">《耗时三年，向 React 迁移的利与弊》</a></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\"><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247499909&amp;idx=1&amp;sn=c278f177ef630cf5af7cc572240496ee&amp;chksm=f95275c6ce25fcd0325e073b196684a331c9ae84cce3ade2af6f9aeb62702a1edaa2b73199a8&amp;scene=21#wechat_redirect\" textvalue=\"《Vue.js 教程：构建一个特斯拉汽车余电计算器》\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">《Vue.js 教程：构建一个特斯拉汽车余电计算器》</a><span style=\"color: rgb(136, 136, 136);font-size: 14px;\"></span><br></p><section style=\"text-align: left;margin-top: 30px;margin-left: 8px;color: rgb(60, 112, 198);\"><span style=\"display: inline-block;width: 15px;height: 15px;margin-right: 10px;background-image: url(\" https: center no-repeat initial></span>\n\t\t活动推荐\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">腾讯“2020 全球数字生态大会”来啦！！！产业互联网时代不想掉队？快快上车吧 1 场未来经济主峰会、1 座永不落幕的云上展厅、37 个特色专场论坛、400+ 产业领军人物，全方位探索数字经济时代趋势，重磅嘉宾包括诺奖得主 Jean Tirole，清华经管学院院长白重恩，腾讯高级执行副总裁、云与智慧产业事业群总裁汤道生等，众咖齐聚，就等你啦！扫码或点击阅读原文报名吧～</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img data-ratio=\"0.5555555555555556\" data-type=\"png\" data-w=\"900\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RvguVlYxXCfiblvibUXFfGpvic9hMKj7iaX2m0G6RAn3icKBU9Ux4ibSHEOxQ/640?wx_fmt=png\"></p></section>\n                </div>\n\n    \n        <br>\n        <div id=\"js_toobar3\" class=\"rich_media_tool\">\n            <a target=\"_blank\" href=\"https://sourl.cn/hfpFPS\" id=\"js_view_source\" class=\"media_tool_meta meta_primary\">阅读原文</a>\n        </div>\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247500233&amp;idx=1&amp;sn=6f28ae99cd479477239e5a5253940112&amp;chksm=f952748ace25fd9c879589445b638f8478c898d3b40e9044c314bb3a8e8cd0a58d70ed42895b&amp;scene=0#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/19192/KWg21tpgPm\"></div></div>","descriptionType":"html","publishedDate":"Tue, 01 Sep 2020 07:20:00 +0000","feedId":2775,"bgimg":"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RyymS324UsdKSbHpPjGZ0M71qlzM4BXpavZ1gOwNb6TrIz6fVXfj77g?imageView2/1/w/600","linkMd5":"1907c22646243ed6a1fca009edac0470","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn100@2020_3/2020/09/05/06-45-40-013_b20fb9737d706cc8.webp","destWidth":600,"destHeight":544,"sourceBytes":64715,"destBytes":59150,"author":"","articleImgCdnMap":{"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RyymS324UsdKSbHpPjGZ0M71qlzM4BXpavZ1gOwNb6TrIz6fVXfj77g?imageView2/1/w/600":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn100@2020_3/2020/09/05/06-45-40-013_b20fb9737d706cc8.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RlYic9IpYB4PUgreTR3ibuWDWL3BZFHib92SPj7Upo3rHgensJLCrSjwHw/640?wx_fmt=jpeg":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RuBuIJC5Nr83acIeAgU7fdLKib3MmHE9OEjPBuJWoobOvcggdyehAe1Q/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn39@2020_2/2020/09/05/06-46-59-955_1bda2febd3562d22.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76R95SYjfeaWXTS6mibPORPNCQocGibVKic4Hlgaiby9T1nfnv9mU8s7ejLHg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn47@2020_4/2020/09/05/06-45-43-738_3eaad6d6a4b9873b.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RNNSBJZq6W8cib6vXicntN2DHEic30lSeCne83JEfrDlHOE2wlYQFD3u7Q/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn43@2020_4/2020/09/05/06-45-58-800_fe4ba256e8ac2e1a.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76R31oibdYJhp72cGCnI0ZGYa8AAvsH0mVHjeQAqBMjk1qMCLshHGvoZmQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn23@2020_4/2020/09/05/06-45-49-030_cfc42853cc2f9ed5.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RG0Vib2oJ3EteISNvXvbhfy6o2siakzPicrRKRfH35HSdQIvmUpE4H3I9w/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn12@2020_4/2020/09/05/06-45-46-606_4315b66060372fc4.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76REjt8iaWhWib49Tzib2uBZibgG8SKaVLAxicUxpkqydAFGiaiaVEnA9ib7ibY6pg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn35@2020_5/2020/09/05/06-45-51-254_e0a45a90569733ca.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RvguVlYxXCfiblvibUXFfGpvic9hMKj7iaX2m0G6RAn3icKBU9Ux4ibSHEOxQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn72@2020_6/2020/09/05/06-46-40-073_b2c358ce1715ab3d.webp","http://www.jintiankansha.me/rss_static/19192/KWg21tpgPm":null},"publishedOrCreatedDate":1599288338574},{"createdTime":"2020-09-05 14:45:38","updatedTime":"2020-09-05 14:45:38","title":"让项目5分钟上线成为可能！美团金服前端工程化实践丨直播预告","link":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E8%AE%A9%E9%A1%B9%E7%9B%AE5%E5%88%86%E9%92%9F%E4%B8%8A%E7%BA%BF%E6%88%90%E4%B8%BA%E5%8F%AF%E8%83%BD%EF%BC%81%E7%BE%8E%E5%9B%A2%E9%87%91%E6%9C%8D%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%A8%E7%9B%B4%E6%92%AD%E9%A2%84%E5%91%8A","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76ROgGmibVs1Jo3eicVK8jploPkS6fxAWYWP8pXJ0egcmrB4g38u017KNtQ?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n\n                    \n                    \n                    <section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\" data-mpa-powered-by=\"yiban.io\"><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">有人说，移动互联网的下半场，效率就是生命，对于金融服务领域更是如此。金融领域的强监管属性对前端开发人员提出了更高的要求，在政策响应上要足够快，配套工具要更加健壮、完善。那么，如何才能多快好省地复用集团的基础设施或者开源方案？如何才能进一步降低团队内外的沟通成本，提升研发效率？美团金服大前端团队正在尝试从云（Serverless）+ 端（Electron）两个方向来规范和标准化前端研发流程，让每一个前端项目的开发流程都能“纵享丝滑”。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">9 月 2 日晚 20:00 点，美团点评前端技术专家田泱现身 InfoQ《大咖说》直播间，为你详解美团金服前端工程化的演进，和基于 Serverless+Electron 建设可视化研发流程的实践与思考，敬请期待！</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>观看直播方式</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">扫描下方二维码进入直播群。不仅可以收看直播，还可以获得本次直播的 PPT，并且可以与其他志趣相投的小伙伴共同论道。群里福利抽奖、专家答疑、资料下载等诸多福利等着你。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: center;\"><img data-ratio=\"1\" data-type=\"jpeg\" data-w=\"430\" style=\"width: 61%; height: auto !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76R8GIJGzVN4wu1ibD7my5cfZ4KuXRLjvoYYT7o8Pq8NpGGbAVaJDWBOUw/640?wx_fmt=jpeg\"></p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>主题介绍</span>\n\t</section><section style=\"text-align: left;margin-top: 30px;margin-left: 8px;color: rgb(60, 112, 198);\"><span style=\"display: inline-block;width: 15px;height: 15px;margin-right: 10px;background-image: url(\" https: center no-repeat initial></span>\n\t\t云 + 端一体化：美团金服前端工程化探索\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">前端从不缺好用的轮子， 问题是如何发现轮子并更好地使用？云 + 端一体化就在眼前，如何借此进一步降低团队内外的沟通成本，大大提升研发效率？</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">美团金服大前端团队正在尝试从云（Serverless）+ 端（Electron）两个方向来规范和标准化前端研发流程，让每一个前端项目的开发流程都能“纵享丝滑”。本次分享会围绕整个交付周期，通过分析美团金服前端工程化的演进方式，来回答如何多快好省地复用集团的基础设施或者开源方案，提高研发效率。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>直播大纲</span>\n\t</section><ol class=\"list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">前端工程化建设的工作边界与范围是什么？随着时间地推移，如何同时满足生产关系的升级变化和团队成员的技术成长诉求；</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">美团金服前端工程化演进分析。我们在交付前、交付中、交付后，都会遇到的问题：不想造轮子，那如何多快好省地使用轮子？</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">云 + 端是什么？基于 Serverless+Electron 建设可视化的研发流程，帮助后端和 QA 走上全栈之路；</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">前端工程化的本质是不变的。围绕效率，我们在工程化这条路上的思考。</p></li></ol><section style=\"text-align: left;margin-top: 30px;margin-left: 8px;color: rgb(60, 112, 198);\"><span style=\"display: inline-block;width: 15px;height: 15px;margin-right: 10px;background-image: url(\" https: center no-repeat initial></span>\n\t\t讲师介绍\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">田泱，美团点评前端技术专家，2015 年加入美团。从 0 到 1 参与了美团线下收单千万级订单的前端建设工作。现负责美团金融服务平台前端基础服务研发团队，致力于前端工程化建设，探索 Serverless 在业务中落地的场景。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img data-ratio=\"1.7777777777777777\" data-type=\"png\" data-w=\"1242\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RbUWAr4PgEddfL4ogO4co0gs7s5Sb9GQedAAcO8jWUGhnCxsIYYMdBg/640?wx_fmt=png\"></p></section>\n                </div>\n\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247500233&amp;idx=2&amp;sn=8c52adb1c548fefda1a94fcd92b190ec&amp;chksm=f952748ace25fd9cb54bd1a4a78e24ae46b294baba8385da8d6a979ca646d38a75ff7e8fc990&amp;scene=0#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/19192/ePrZmnXplz\"></div></div>","descriptionType":"html","publishedDate":"Tue, 01 Sep 2020 07:20:00 +0000","feedId":2775,"bgimg":"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76ROgGmibVs1Jo3eicVK8jploPkS6fxAWYWP8pXJ0egcmrB4g38u017KNtQ?imageView2/1/w/600","linkMd5":"100b0d1962ce585f91370af59007de88","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn95@2020_2/2020/09/05/06-45-40-958_5a907f74ad7fce25.webp","destWidth":600,"destHeight":334,"sourceBytes":11723,"destBytes":7906,"author":"","articleImgCdnMap":{"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76ROgGmibVs1Jo3eicVK8jploPkS6fxAWYWP8pXJ0egcmrB4g38u017KNtQ?imageView2/1/w/600":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn95@2020_2/2020/09/05/06-45-40-958_5a907f74ad7fce25.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76R8GIJGzVN4wu1ibD7my5cfZ4KuXRLjvoYYT7o8Pq8NpGGbAVaJDWBOUw/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn58@2020_5/2020/09/05/06-46-21-316_3ff2c684eb981781.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RbUWAr4PgEddfL4ogO4co0gs7s5Sb9GQedAAcO8jWUGhnCxsIYYMdBg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn88@2020_6/2020/09/05/06-46-55-582_a9e64cddc333c475.webp","http://www.jintiankansha.me/rss_static/19192/ePrZmnXplz":null},"publishedOrCreatedDate":1599288338571},{"createdTime":"2020-09-05 14:45:38","updatedTime":"2020-09-05 14:45:38","title":"微众正式开源Fes.js：快速、简单、健壮的管理台前端应用","link":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%BE%AE%E4%BC%97%E6%AD%A3%E5%BC%8F%E5%BC%80%E6%BA%90Fes.js%EF%BC%9A%E5%BF%AB%E9%80%9F%E3%80%81%E7%AE%80%E5%8D%95%E3%80%81%E5%81%A5%E5%A3%AE%E7%9A%84%E7%AE%A1%E7%90%86%E5%8F%B0%E5%89%8D%E7%AB%AF%E5%BA%94%E7%94%A8","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9Uqiaic9WRPtdYRc2EicfrVRDNMv2ma8wksicyVhziape6rH0hWoxdRpeuzzcSsw?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n\n                    \n                    \n                    <section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\" data-mpa-powered-by=\"yiban.io\"><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Web 开发中几乎所有平台都需要一个后台管理， 通常包括权限、增删改查、报表、图表等业务逻辑相对简单的内容，但是大量的增删改查、接口调试也非常耗费时间。在大中台概念下，对管理台前端有了更高的要求，要求保持统一的 UI 风格和一致的交互体验。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">微众银行基础科技产品部前端开发团队从 2015 年开始对 Vue 技术进行探索，2016 年完成技术栈从 Angular 升级为基于 Vue 的全新架构，在开发管理台的前端应用中积累了宝贵的经验。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">基于此，微众银行孵化出了 Fes.js 适用于后台管理系统的前端解决方案，在内部实践了 3 年，于今年 8 月对外开源。对比同类项目 ，Fes.js 拥有完善的工程化能力，提供初始项目、开发调试、编译打包，格式检查的命令行工具。设计上化繁为简，使用约定的方式生成路由、全局组件，布局、菜单、权限管理、数据字典配置化，提供状态管理、数据字典管理、接口管理等模块，让后台管理应用开发只需要聚焦到页面，用组件去搭建页面。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">项目地址：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://github.com/WeBankFinTech/fes.js</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://gitee.com/WeBank/fes.js</span></p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>Fes.js 框架</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Fes.js 是“快速、简单、健壮”的前端应用解决方案，包含 Fes-Cli、Fes-Core、Fes-UI 三部分。能够管理从开发到部署的全链路完成流程，提供模板项目、cli 命令行工具、丰富的 PC 端组件和一系列 API，提效中后台开发能力，让开发更专注的聚焦于业务逻辑。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img data-ratio=\"0.5362318840579711\" data-type=\"png\" data-w=\"828\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaiceWIpQjylsfwbhVgWvq0pw2uswwxucUpdo7fzxCw2SYVPUZ7WXygapw/640?wx_fmt=png\"></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">目前的功能有：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">1、命令行工具 Fes-CLI ，一行命令创建工程、开启开发调试、打包发布；</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">2、运行时框架 Fes-Core，固定页面布局，提供权限管理、储存管理、路由管 理、接口管理、状态管理、数据字典管理、环境管理等 API，以插件的方式提供扩展接口；</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img data-ratio=\"0.6704196519959058\" data-type=\"png\" data-w=\"977\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicHekGufWQNmFvUPtOYx6N4u3SP5056lqLy6w1zYgSKhdmwt3nJZmRuA/640?wx_fmt=png\"></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">3、组件库 Fes-UI ，包含 30+ 的 PC 端组件库，可以快速搭建出增删改查等页面。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img data-ratio=\"0.6182170542635659\" data-type=\"png\" data-w=\"1032\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicYj0VPKxEZb0tIeUYu6spsNzOicN8e68lZhtFbiaNg8MiaZ65O2ibTwnia3Q/640?wx_fmt=png\"></p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>使用场景</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">1、管理系统前端的高效开发</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">快速搭建项目环境，封装后台管理应用的常用模块；固定应用布局，让开发者只需要关心用组件搭建页面；</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">2、满足高质量和高稳定性运行</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Fes.js 稳定的底层架构结合上层质量保障体系，配合整套经过线上验证的技术栈，可以保障应用上线稳定运行；</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">3、支持国际化版本</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Fes-Core 和 Fes-UI 支持了国际化能力，可以轻松实现管理台应用的国际化支持。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>演化过程</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">在使用 Vue 开发管理台过程中，实现业务需求积累了一些相对通用的组件，经过重构让组件更通用后 ui-webank 组件库诞生。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">使用组件库开发管理台应用，效率得到了提升，但是其中依然有很多内容，例如布局、菜单、权限、接口请求能力是类似的，为何不把管理台应用中其他通用的能力抽象出来，实现一个框架封装这些能力呢？于是，Fes.js 诞生了。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">Fes.js 核心设计原则是“让开发者少写”，愿景是 “Fast 、Easy、Strong”。从功能上 Fes.js 分为 Fes-CLI、Fes-Core 和 Fes-UI 三部分，在开源前经历过一次大的架构变更 v1.0 版本 Fes-ClI 和 Fes-Core 同属于一个包，这样带来一些问题：</p><ul class=\"list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">Fes-CLI 和 Fes-Core 在同一个 npm 包，每次 Fes-Core 更新顺带更新 Fes-CLI 的版本，也就是用户需要重新全局安装一次 fes 命令；</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">Fes-Core 强依赖 Fes-UI，在代码中使用了 Fes-UI 的 Message 组件，Fes-Core 的 package.json 写死 Fes-UI 的版本。导致每次升级 Fes-UI 版本需要同时升级 Fes-Core 版本，用户需要重新安装 fes 命令。</p></li></ul><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">在 v2.0 版本中完全解耦三个模块，由项目决定 Fes-Core 和 Fes-UI 的版本。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>加入 Fes.js 社区</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">我们已迈出了第一步，虽然目前不能更全面的实现某些功能，随着时间的推移，这部分功能一定会越发完善，希望这些可以帮助开发者们更好的进行开发。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">在此诚邀关注前端开发的你，参与到 Fes.js 项目中来，我们欢迎任何形式的贡献，有任何建议或意见可在 GitHub/ gitee / 微信群中提 issue，期待你的到来。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img data-ratio=\"0.5912280701754385\" data-type=\"png\" data-w=\"570\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicOOPvv19JNN7ZF7Wb3cwVGEFQVcFoAe8nukxULUdmByPqYKmqia4wiaww/640?wx_fmt=png\"></p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block> 传送门 </span></section><ul class=\"list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">GitHub 项目地址</p></li></ul><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://github.com/WeBankFinTech/fes.js</span></p><ul class=\"list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">gitee 项目地址</p></li></ul><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://gitee.com/WeBank/fes.js</span></p><ul class=\"list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">项目文档</p></li></ul><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://webank.gitee.io/fes.js/guide/option.html</span></p><ul class=\"list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">社区联络微信群</p></li></ul><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img data-ratio=\"1.0068649885583525\" data-type=\"png\" data-w=\"437\" style=\"width: 37%; height: auto !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicmxiaXa6OFQ1MicMBdey4yQPuGqHvZ9DGc7t7qFe3NMCjylYMyb2VMwWQ/640?wx_fmt=png\"></p><ul class=\"list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">社群二维码过期可联络</p></li></ul><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">项目负责人 Harry：harrywan@webank.com</p></section>\n                </div>\n\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247500266&amp;idx=2&amp;sn=1e40b2a34f974423af356a469e24a270&amp;chksm=f95274a9ce25fdbf044b7a5b96a158b96c3ca3ca6065912d11c17492176daa4333872036c263&amp;scene=0#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/19192/I1mLNXxHwf\"></div></div>","descriptionType":"html","publishedDate":"Wed, 02 Sep 2020 07:30:00 +0000","feedId":2775,"bgimg":"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9Uqiaic9WRPtdYRc2EicfrVRDNMv2ma8wksicyVhziape6rH0hWoxdRpeuzzcSsw?imageView2/1/w/600","linkMd5":"495ff0fb7b1e393023a1cda7200d9217","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn6@2020_1/2020/09/05/06-45-40-962_50a8f43c99194bfb.webp","destWidth":481,"destHeight":480,"sourceBytes":62022,"destBytes":63580,"author":"","articleImgCdnMap":{"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9Uqiaic9WRPtdYRc2EicfrVRDNMv2ma8wksicyVhziape6rH0hWoxdRpeuzzcSsw?imageView2/1/w/600":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn6@2020_1/2020/09/05/06-45-40-962_50a8f43c99194bfb.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaiceWIpQjylsfwbhVgWvq0pw2uswwxucUpdo7fzxCw2SYVPUZ7WXygapw/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn28@2020_2/2020/09/05/06-46-02-037_9f8cf867f82f2e79.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicHekGufWQNmFvUPtOYx6N4u3SP5056lqLy6w1zYgSKhdmwt3nJZmRuA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn76@2020_4/2020/09/05/06-45-45-052_5e2455f28fce4f5c.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicYj0VPKxEZb0tIeUYu6spsNzOicN8e68lZhtFbiaNg8MiaZ65O2ibTwnia3Q/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn83@2020_2/2020/09/05/06-46-48-540_3b44903f09013a5a.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicOOPvv19JNN7ZF7Wb3cwVGEFQVcFoAe8nukxULUdmByPqYKmqia4wiaww/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn68@2020_2/2020/09/05/06-45-43-369_4d968b97256dcc1f.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicmxiaXa6OFQ1MicMBdey4yQPuGqHvZ9DGc7t7qFe3NMCjylYMyb2VMwWQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn31@2020_6/2020/09/05/06-46-45-052_939545211607d512.webp","http://www.jintiankansha.me/rss_static/19192/I1mLNXxHwf":null},"publishedOrCreatedDate":1599288338569},{"createdTime":"2020-09-05 14:45:38","updatedTime":"2020-09-05 14:45:38","title":"十年后将要消失的五种编程语言","link":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%8D%81%E5%B9%B4%E5%90%8E%E5%B0%86%E8%A6%81%E6%B6%88%E5%A4%B1%E7%9A%84%E4%BA%94%E7%A7%8D%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicXgOw94YF2EPsUMV3ayJexddDbIQNTtoHOjhbYRI2ZDzroibgNovtygw?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n\n                    \n                    \n                    <section style=\"color: rgb(63, 63, 63);font-size: 14px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;text-align: center;\" data-mpa-powered-by=\"yiban.io\"><section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\"><section style=\"text-align: left;\">\n\t\t<img data-ratio=\"0.6666666666666666\" data-type=\"jpeg\" data-w=\"1920\" style=\"width: 100%; border-radius: 4px; margin-bottom: 25px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicbmhmT4VQLj8BhGcyxI7ehJuFUbewjGBGficA1oEl2hrlVxOHB6PGibsA/640?wx_fmt=jpeg\"></section></section><section style=\"color: rgb(145, 145, 145);text-align: left;line-height: 1em;margin-top: 13px;padding-left: 14px;\">作者 | Program Ace\t</section><section style=\"color: rgb(145, 145, 145);text-align: left;line-height: 1em;margin-top: 13px;padding-left: 14px;\">\n\t\t译者 | 王坤祥\t</section><section style=\"color: rgb(145, 145, 145);text-align: left;line-height: 1em;margin-top: 13px;padding-left: 14px;\">\n\t\t策划 | 小智\t</section><section style=\"font-size: 15px;text-align: justify;line-height: 27px;color: rgb(89, 89, 89);background-color: rgb(239, 239, 239);padding: 19px;margin-top: 40px;margin-right: 8px;margin-left: 8px;\">\n\t\t本文作者从自己的观点出发，介绍了未来 20 年内可能消失的 5 个编程语言，并给出了具体的原因。最后对想要学习编程的初学者给出了学习建议。\t</section><p style=\"font-size: 16px;text-align: justify;white-space: pre-line;line-height: 27px;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);\">随着时间的流逝，程序员们发现了更新、更简单的工作方式，新的编程语言如雨后春笋般出现，但只有少数编程语言能成为社区的新宠。这种进步的一个副作用是一些古老的编程语言必然会跟历史一样被人们遗忘。如果一个编程语言无法随着时间的推移提升其价值，那么它的用户群终将会流失，并逐渐淡出人们的视线，或者成为更新一代编程语言的基础。</p><p style=\"font-size: 16px;text-align: justify;white-space: pre-line;line-height: 27px;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);\">最近，古老的 COBOL 编程语言上了热搜。在 1960 年代和 1970 年代，它曾经是许多美国银行和政府机构的首选的编程语言，但最终被更加简单有效的编程语言所取代。但是，使用 COBOL 构建的系统仍然存在，当一些政府机构发现他们需要通过更新代码来全面改革失业系统时，才发现业内没有几个开发人员可以熟练使用该编程语言。</p><p style=\"font-size: 16px;text-align: justify;white-space: pre-line;line-height: 27px;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);\">沧海桑田，COBOL 早已物是人非。我们当前的许多编程语言也注定会有相似的下场。本文中，我们将分析未来 20 内最终会消失的 5 种编程语言。我知道这可能会伤害到那些正在使用这几个编程语言的程序员的内心，所以在开始介绍之前首先声明下这只是我个人的看法和预测。</p><section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\"><section style=\"text-align: center;font-size: 20px;\"><span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block> 1. Ruby </span></section></section><p style=\"font-size: 16px;text-align: justify;white-space: pre-line;line-height: 27px;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);\">Ruby 在 1999 年发布后立即受到程序员们的热捧，它能够快速构建应用程序的特性给程序员留下了非常深刻的印象。紧随其后，备受欢迎的 Ruby on Rails 框架于 2004 年发布，由于 Ruby 和 Rails 这两个名称在当时几乎成为了同义词，因此 Ruby 很快地被推到了程序员最喜欢的编程语言排行榜首位。它经历了一个坚实的十年，稳居编程语言排行榜前列，一度成为众人瞩目的焦点，但是最近的十年它并不好过，所以 Ruby 纳进了我的淘汰清单列表。<br></p><p style=\"font-size: 16px;text-align: justify;white-space: pre-line;line-height: 27px;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);\">为什么 Ruby 会逐渐消退呢？导致其排名下降的因素之一是其执行速度。由它构建的应用程序运行速度往往比其他流行的编程语言，比如 JavaScript、Go 和 Python 构建的应用（在某些框架下）运行速度慢。同时期下，后三者已经发展到可以满足当时的需求，而 Ruby 在很多方面一直在原地踏步，没有什么进步。例如，让 Ruby on Rails 名噪一时的 MVC 架构在现在被很多编程人员看来是笨重和过时的。</p><section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\"><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>2. Visual Basic</span></section></section><p style=\"font-size: 16px;text-align: justify;white-space: pre-line;line-height: 27px;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);\">考虑到 Visual Basic 是公认的程序员最不喜欢的编程语言之一的事实，将它包含在淘汰列表中是无可厚非的。它于 1991 年由微软发布，作为构建 Windows 的主要工具，确实实现了此目的，但多年来经常出现问题。程序员使用 VB 进行开发的热情差距很大，随着 2000 年 C＃的发布，这种差距逐渐进一步扩大。由于 C＃更加简洁，提供了更广泛的功能，并且更适合于云服务和移动开发（在当前市场中扮演着重要角色），因此很多开发人员都放弃使用 VB 转而投向 C＃怀抱。最重要的是，似乎它的创建者也都无情地放弃了它，因为微软曾表示他们没有进一步发展它的计划。</p><section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\"><section style=\"text-align: center;font-size: 20px;\"><span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>3. Haskell</span></section></section><p style=\"font-size: 16px;text-align: justify;white-space: pre-line;line-height: 27px;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);\">Haskell 是另一个古董级别的编程语言，它于几十年前创建，在世纪之交前一直被使用。不幸的是，对于 Haskell 来说，属于它的时代很快就要结束了。研究人员和学者大多将 Haskell 用于构建程序，以对其工作进行复杂的排列和外推计算，普遍认为它很难学习。学习路径困难必然导致非常有限的活跃用户，而 Haskell 的上一个最新的稳定版本是在 2010 年发布，这对于促进它本身的发展无济于事。</p><section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\"><section style=\"text-align: center;font-size: 20px;\"><span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block> 4. Perl </span></section></section><p style=\"font-size: 16px;text-align: justify;white-space: pre-line;line-height: 27px;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);\">与 Visual Basic 命运一样，Perl 不被大部分使用它的开发人员所喜欢。在 Perl 于 1987 年开始流行时，它被誉为是适合任何一个人的编程语言，无论你是编程的初学者还是专业人士都可以使用，同时还被宣传可以用于各种各样的场景。但是，1991 年 Python 的出现，彻底粉碎了 Perl 主导编程世界的幻想。</p><p style=\"font-size: 16px;text-align: justify;white-space: pre-line;line-height: 27px;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);\">尽管 Python 的语法相比 Perl 稍显繁琐，更加严格，但 Python 让用户使用脚本实现目标的过程变得更加简单直接，这改变了当时的游戏规则。Python 在 2000 年代开始让 Perl 黯然失色，并一度成为编程入门的首选语言。在过去的 15 年中，Perl 的使用量一直在稳步下降，我们看不到任何它将停止下滑的迹象。</p><section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\"><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>5. Objective-C</span></section></section><p style=\"font-size: 16px;text-align: justify;white-space: pre-line;line-height: 27px;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);\">Objective-C 与 Apple 的关系类似于运动相机与 GoPro 的密切联系——两者都是他们所属公司专用的工具。尽管 Objective-C 已经在 macOS、iOS 和 OS X 开发中使用了二十多年（1996 年至今）的时间，但如今已经很少有程序员在使用该语言，因为 Swift 横空出世了。</p><p style=\"font-size: 16px;text-align: justify;white-space: pre-line;line-height: 27px;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);\">Swift 由 Apple 构建并于 2014 年发布，旨在成为 macOS、iOS 及其他几个 Apple 相关平台的新编码标准。Obj-C 在很大程度上是基于复杂的 C 语言创建的，而 Swift 有效地删除了这些复杂的元素，同时增加了一些新的功能特性，例如自动内存管理，对 Cocoa Touch 的支持以及类型安全的集成。</p><p style=\"font-size: 16px;text-align: justify;white-space: pre-line;line-height: 27px;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);\">Swift 设法实现和维护了较高的语言稳定性和用户采用率，因为 Apple 公司仍在坚持重写 Obj-C 库，以使旧语言的使用者可以很容易地进行过渡。尽管仍然有很多关于这两种选择哪个更好的讨论，但当前的趋势表明，Objective-C 终将被淘汰。</p><section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\"><section style=\"text-align: center;font-size: 20px;\"><span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>  总结  </span></section></section><p style=\"font-size: 16px;text-align: justify;white-space: pre-line;line-height: 27px;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);\">尽管上述提到的语言似乎都处于下降趋势，但不能保证它们最终一定会消失。如果他们的创造者和社区投入足够的精力来更新和维护它们，添加新功能以及有用的特性，这些编程可能会卷土重来，恢复生命力。但事实是广大程序员更有可能继续涌向更新更好的选择。</p><p style=\"font-size: 16px;text-align: justify;white-space: pre-line;line-height: 27px;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);\">如果你正在考虑开始学习哪种语言，那么有许多因素需要考虑。如果你只是将编程当做一种兴趣爱好，你可以聆听一下自己内心并选择最能激发你兴趣的那个来学习，即便所选的编程语言不再被广泛使用甚至面临淘汰。另一方面，如果你正在从事编程相关的工作，那么不应该只选择最流行的编程语言，也不应该赌一把选择未来可能会成为最流行的编程语言。而应该通过仔细对比各个编程语言的功能特性，市场需求以及可见的未来增长潜力等因素后做出选择，这才是明智之举。</p><section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\"><section style=\"text-align: left;margin-top: 30px;margin-left: 8px;color: rgb(60, 112, 198);\"><span style=\"display: inline-block;width: 15px;height: 15px;margin-right: 10px;background-image: url(\" https: center no-repeat initial></span>\n\t\t延伸阅读</section></section><p style=\"font-size: 16px;text-align: justify;white-space: pre-line;line-height: 27px;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);\"><span style=\"font-size: 14px;color: rgb(136, 136, 136);\">https://dzone.com/articles/5-coding-languages-that-will-disappear-in-10-years</span></p><section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\"><section style=\"text-align: left;margin-top: 30px;margin-left: 8px;color: rgb(60, 112, 198);\"><span style=\"display: inline-block;width: 15px;height: 15px;margin-right: 10px;background-image: url(\" https: center no-repeat initial></span>\n\t\t活动推荐\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">如何利用 NVIDIA Transfer Learning Toolkit，在 Python 的环境下快速训练并部署一个口罩监测模型？扫描下方二维码或点击阅读原文了解详情！</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\"><img data-ratio=\"0.5549389567147613\" data-type=\"jpeg\" data-w=\"901\" style=\"text-align: center; width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9Uqiaicby7EibqHsVHY5akpCgol2a8eiak6SibeFhVXTj4Y88ZibwW1uVlPQHPsmA/640?wx_fmt=jpeg\"></p></section></section>\n                </div>\n\n    \n        <br>\n        <div id=\"js_toobar3\" class=\"rich_media_tool\">\n            <a target=\"_blank\" href=\"https://info.nvidia.com/423770-reg.html\" id=\"js_view_source\" class=\"media_tool_meta meta_primary\">阅读原文</a>\n        </div>\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247500266&amp;idx=1&amp;sn=79c6d35ed6048d86b8c651a8704054a0&amp;chksm=f95274a9ce25fdbfdf2c9f94780ae33868782bcc790f19be47f41081db61ee3992951e347088&amp;scene=0#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/19192/eTQ0zsbiya\"></div></div>","descriptionType":"html","publishedDate":"Wed, 02 Sep 2020 07:30:00 +0000","feedId":2775,"bgimg":"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicXgOw94YF2EPsUMV3ayJexddDbIQNTtoHOjhbYRI2ZDzroibgNovtygw?imageView2/1/w/600","linkMd5":"f575b2cbe652bb62b3d7d64ab1dbd574","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn4@2020_2/2020/09/05/06-45-40-340_8bee0703916a1edc.webp","destWidth":600,"destHeight":546,"sourceBytes":56484,"destBytes":48556,"author":"","articleImgCdnMap":{"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicXgOw94YF2EPsUMV3ayJexddDbIQNTtoHOjhbYRI2ZDzroibgNovtygw?imageView2/1/w/600":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn4@2020_2/2020/09/05/06-45-40-340_8bee0703916a1edc.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicbmhmT4VQLj8BhGcyxI7ehJuFUbewjGBGficA1oEl2hrlVxOHB6PGibsA/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn64@2020_5/2020/09/05/06-45-53-998_620b2a622427fbb0.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9Uqiaicby7EibqHsVHY5akpCgol2a8eiak6SibeFhVXTj4Y88ZibwW1uVlPQHPsmA/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn56@2020_3/2020/09/05/06-45-55-319_49f4edaa150925de.webp","http://www.jintiankansha.me/rss_static/19192/eTQ0zsbiya":null},"publishedOrCreatedDate":1599288338569}],"record":{"createdTime":"2020-09-05 14:45:38","updatedTime":"2020-09-05 14:45:38","feedId":2775,"fetchDate":"Sat, 05 Sep 2020 06:45:38 +0000","fetchMs":753,"handleMs":48,"totalMs":83136,"newArticles":0,"totalArticles":5,"status":1,"type":0,"ip":"5c3c7994bde81976c76d401e970f7417","hostName":"us-022*","requestId":"bb1afc6a53d444cf9aeefa4729ba6b1d_2775","contentType":"application/rss+xml","totalBytes":812636,"bgimgsTotal":4,"bgimgsGithubTotal":4,"articlesImgsTotal":25,"articlesImgsGithubTotal":20,"successGithubMap":{"myreaderx8":1,"myreaderx25":1,"myreaderx14":1,"myreaderx15":1,"myreaderx6":1,"myreaderx21":1,"myreaderx4":1,"myreaderx32":1,"myreaderx10":1,"myreaderx33":1,"myreaderx11":1,"myreaderx12":1,"myreaderx23":1,"myreaderx13":1,"myreaderx30":1,"myreaderx5oss":1,"myreaderx31":1,"myreaderx18":1,"myreaderx29":1,"myreaderx19":1},"failGithubMap":{"myreaderx2":1}},"feed":{"createdTime":"2020-08-24 21:31:44","updatedTime":"2020-09-01 10:14:55","id":2775,"name":"前端之巅","url":"http://feedmaker.kindle4rss.com/feeds/frontshow.weixin.xml","subscriber":null,"website":null,"icon":"http://www.sogou.com/images/logo/new/favicon.ico?v=4","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn48@2020_6/2020/09/01/02-14-41-796_d24121c9beed1de6.ico","description":"InfoQ大前端技术社群：囊括前端、移动、Node全栈一线技术，紧跟业界发展步伐。","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-09-05 14:47:00","updatedTime":"2020-09-05 14:47:00","id":null,"feedId":2775,"linkMd5":"1907c22646243ed6a1fca009edac0470"},{"createdTime":"2020-09-05 14:47:00","updatedTime":"2020-09-05 14:47:00","id":null,"feedId":2775,"linkMd5":"100b0d1962ce585f91370af59007de88"},{"createdTime":"2020-09-05 14:47:00","updatedTime":"2020-09-05 14:47:00","id":null,"feedId":2775,"linkMd5":"495ff0fb7b1e393023a1cda7200d9217"},{"createdTime":"2020-09-05 14:47:00","updatedTime":"2020-09-05 14:47:00","id":null,"feedId":2775,"linkMd5":"f575b2cbe652bb62b3d7d64ab1dbd574"}],"tmpCommonImgCdnBytes":179192,"tmpBodyImgCdnBytes":633444,"tmpBgImgCdnBytes":0,"extra4":{"start":1599288337687,"total":0,"statList":[{"spend":840,"msg":"获取xml内容"},{"spend":48,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":78917,"msg":"正文链接上传到cdn"}]},"extra5":25,"extra6":25,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/19192/ePrZmnXplz","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":532,"convertSpendMs":0,"createdTime":"2020-09-05 14:45:41","host":"us-006*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E8%AE%A9%E9%A1%B9%E7%9B%AE5%E5%88%86%E9%92%9F%E4%B8%8A%E7%BA%BF%E6%88%90%E4%B8%BA%E5%8F%AF%E8%83%BD%EF%BC%81%E7%BE%8E%E5%9B%A2%E9%87%91%E6%9C%8D%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%A8%E7%9B%B4%E6%92%AD%E9%A2%84%E5%91%8A","linkMd5ListStr":"100b0d1962ce585f91370af59007de88","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/19192/KWg21tpgPm","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":726,"convertSpendMs":0,"createdTime":"2020-09-05 14:45:42","host":"europe-23*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","linkMd5ListStr":"1907c22646243ed6a1fca009edac0470","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/19192/I1mLNXxHwf","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":1066,"convertSpendMs":0,"createdTime":"2020-09-05 14:45:41","host":"us-031*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%BE%AE%E4%BC%97%E6%AD%A3%E5%BC%8F%E5%BC%80%E6%BA%90Fes.js%EF%BC%9A%E5%BF%AB%E9%80%9F%E3%80%81%E7%AE%80%E5%8D%95%E3%80%81%E5%81%A5%E5%A3%AE%E7%9A%84%E7%AE%A1%E7%90%86%E5%8F%B0%E5%89%8D%E7%AB%AF%E5%BA%94%E7%94%A8","linkMd5ListStr":"495ff0fb7b1e393023a1cda7200d9217","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RlYic9IpYB4PUgreTR3ibuWDWL3BZFHib92SPj7Upo3rHgensJLCrSjwHw/640?wx_fmt=jpeg","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":1071,"convertSpendMs":0,"createdTime":"2020-09-05 14:45:41","host":"us-53*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","linkMd5ListStr":"1907c22646243ed6a1fca009edac0470","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","extra23historyStatusCode":[403,403],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76REjt8iaWhWib49Tzib2uBZibgG8SKaVLAxicUxpkqydAFGiaiaVEnA9ib7ibY6pg/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":1133,"convertSpendMs":0,"createdTime":"2020-09-05 14:45:42","host":"europe-57*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","linkMd5ListStr":"1907c22646243ed6a1fca009edac0470","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","extra23historyStatusCode":[403,403],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/19192/KWg21tpgPm","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":700,"convertSpendMs":0,"createdTime":"2020-09-05 14:45:42","host":"europe67*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","linkMd5ListStr":"1907c22646243ed6a1fca009edac0470","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9Uqiaicby7EibqHsVHY5akpCgol2a8eiak6SibeFhVXTj4Y88ZibwW1uVlPQHPsmA/640?wx_fmt=jpeg","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":2026,"convertSpendMs":0,"createdTime":"2020-09-05 14:45:41","host":"us-038*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%8D%81%E5%B9%B4%E5%90%8E%E5%B0%86%E8%A6%81%E6%B6%88%E5%A4%B1%E7%9A%84%E4%BA%94%E7%A7%8D%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80","linkMd5ListStr":"f575b2cbe652bb62b3d7d64ab1dbd574","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%8D%81%E5%B9%B4%E5%90%8E%E5%B0%86%E8%A6%81%E6%B6%88%E5%A4%B1%E7%9A%84%E4%BA%94%E7%A7%8D%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80","extra23historyStatusCode":[403,403],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/19192/eTQ0zsbiya","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":2327,"convertSpendMs":0,"createdTime":"2020-09-05 14:45:41","host":"us-53*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%8D%81%E5%B9%B4%E5%90%8E%E5%B0%86%E8%A6%81%E6%B6%88%E5%A4%B1%E7%9A%84%E4%BA%94%E7%A7%8D%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80","linkMd5ListStr":"f575b2cbe652bb62b3d7d64ab1dbd574","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/19192/I1mLNXxHwf","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":1869,"convertSpendMs":0,"createdTime":"2020-09-05 14:45:43","host":"us-021*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%BE%AE%E4%BC%97%E6%AD%A3%E5%BC%8F%E5%BC%80%E6%BA%90Fes.js%EF%BC%9A%E5%BF%AB%E9%80%9F%E3%80%81%E7%AE%80%E5%8D%95%E3%80%81%E5%81%A5%E5%A3%AE%E7%9A%84%E7%AE%A1%E7%90%86%E5%8F%B0%E5%89%8D%E7%AB%AF%E5%BA%94%E7%94%A8","linkMd5ListStr":"495ff0fb7b1e393023a1cda7200d9217","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/19192/eTQ0zsbiya","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":1593,"convertSpendMs":0,"createdTime":"2020-09-05 14:45:44","host":"us-014*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%8D%81%E5%B9%B4%E5%90%8E%E5%B0%86%E8%A6%81%E6%B6%88%E5%A4%B1%E7%9A%84%E4%BA%94%E7%A7%8D%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80","linkMd5ListStr":"f575b2cbe652bb62b3d7d64ab1dbd574","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9Uqiaicby7EibqHsVHY5akpCgol2a8eiak6SibeFhVXTj4Y88ZibwW1uVlPQHPsmA/640?wx_fmt=jpeg","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":1894,"convertSpendMs":0,"createdTime":"2020-09-05 14:45:44","host":"europe-25*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%8D%81%E5%B9%B4%E5%90%8E%E5%B0%86%E8%A6%81%E6%B6%88%E5%A4%B1%E7%9A%84%E4%BA%94%E7%A7%8D%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80","linkMd5ListStr":"f575b2cbe652bb62b3d7d64ab1dbd574","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%8D%81%E5%B9%B4%E5%90%8E%E5%B0%86%E8%A6%81%E6%B6%88%E5%A4%B1%E7%9A%84%E4%BA%94%E7%A7%8D%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80","extra23historyStatusCode":[403,403],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RlYic9IpYB4PUgreTR3ibuWDWL3BZFHib92SPj7Upo3rHgensJLCrSjwHw/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":1080,"destHeight":736,"sourceBytes":167175,"destBytes":122180,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":3742,"convertSpendMs":36,"createdTime":"2020-09-05 14:45:43","host":"us-008*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","linkMd5ListStr":"1907c22646243ed6a1fca009edac0470","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx2/cdn15/contents/2020/09/05/06-45-46-706_f7a9af8fd5bc2877.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 57287968.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 06:45:46 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D65C:27BC:8D71A7:13ABA3E:5F53341A"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["5000"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599288351"],"x-ratelimit-used":["5006"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx2/cdn15/contents/2020/09/05/06-45-46-706_f7a9af8fd5bc2877.webp","historyStatusCode":[],"spendMs":98},"base64UserPassword":null,"token":"e82a3******************************188be"},"githubUser":"myreaderx2","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"163.3 KB","destSize":"119.3 KB","compressRate":"73.1%"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/19192/ePrZmnXplz","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":7743,"convertSpendMs":0,"createdTime":"2020-09-05 14:45:42","host":"europe63*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E8%AE%A9%E9%A1%B9%E7%9B%AE5%E5%88%86%E9%92%9F%E4%B8%8A%E7%BA%BF%E6%88%90%E4%B8%BA%E5%8F%AF%E8%83%BD%EF%BC%81%E7%BE%8E%E5%9B%A2%E9%87%91%E6%9C%8D%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%A8%E7%9B%B4%E6%92%AD%E9%A2%84%E5%91%8A","linkMd5ListStr":"100b0d1962ce585f91370af59007de88","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RlYic9IpYB4PUgreTR3ibuWDWL3BZFHib92SPj7Upo3rHgensJLCrSjwHw/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":1080,"destHeight":736,"sourceBytes":167175,"destBytes":122180,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":4180,"convertSpendMs":34,"createdTime":"2020-09-05 14:45:46","host":"europe65*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","linkMd5ListStr":"1907c22646243ed6a1fca009edac0470","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx2/cdn15/contents/2020/09/05/06-45-50-567_f7a9af8fd5bc2877.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 57287968.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 06:45:51 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A004:B3A1:1218A588:15E38BDF:5F533414"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["5000"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599288351"],"x-ratelimit-used":["5006"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx2/cdn15/contents/2020/09/05/06-45-50-567_f7a9af8fd5bc2877.webp","historyStatusCode":[],"spendMs":466},"base64UserPassword":null,"token":"e82a3******************************188be"},"githubUser":"myreaderx2","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"163.3 KB","destSize":"119.3 KB","compressRate":"73.1%"},null,null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-018.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://us-53.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[403,405]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-021.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[405,200]},"http://us-007.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe63.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://us-035.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-006.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[405,200]},"http://us-038.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://europe-25.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://europe-23.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://europe69.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-031.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[405,null]},"http://europe-57.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe67.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-023.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-014.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,405]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RyymS324UsdKSbHpPjGZ0M71qlzM4BXpavZ1gOwNb6TrIz6fVXfj77g?imageView2/1/w/600","sourceStatusCode":200,"destWidth":600,"destHeight":544,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn100@2020_3/2020/09/05/06-45-40-013_b20fb9737d706cc8.webp","sourceBytes":64715,"destBytes":59150,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":2302,"convertSpendMs":43,"createdTime":"2020-09-05 14:45:38","host":"us-027*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","linkMd5ListStr":"1907c22646243ed6a1fca009edac0470,1907c22646243ed6a1fca009edac0470","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"63.2 KB","destSize":"57.8 KB","compressRate":"91.4%"},{"code":1,"isDone":false,"source":"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicXgOw94YF2EPsUMV3ayJexddDbIQNTtoHOjhbYRI2ZDzroibgNovtygw?imageView2/1/w/600","sourceStatusCode":200,"destWidth":600,"destHeight":546,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn4@2020_2/2020/09/05/06-45-40-340_8bee0703916a1edc.webp","sourceBytes":56484,"destBytes":48556,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":2685,"convertSpendMs":25,"createdTime":"2020-09-05 14:45:38","host":"us-001*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%8D%81%E5%B9%B4%E5%90%8E%E5%B0%86%E8%A6%81%E6%B6%88%E5%A4%B1%E7%9A%84%E4%BA%94%E7%A7%8D%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80","linkMd5ListStr":"f575b2cbe652bb62b3d7d64ab1dbd574,f575b2cbe652bb62b3d7d64ab1dbd574","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.2 KB","destSize":"47.4 KB","compressRate":"86%"},{"code":1,"isDone":false,"source":"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76ROgGmibVs1Jo3eicVK8jploPkS6fxAWYWP8pXJ0egcmrB4g38u017KNtQ?imageView2/1/w/600","sourceStatusCode":200,"destWidth":600,"destHeight":334,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn95@2020_2/2020/09/05/06-45-40-958_5a907f74ad7fce25.webp","sourceBytes":11723,"destBytes":7906,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":3152,"convertSpendMs":8,"createdTime":"2020-09-05 14:45:38","host":"us-039*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E8%AE%A9%E9%A1%B9%E7%9B%AE5%E5%88%86%E9%92%9F%E4%B8%8A%E7%BA%BF%E6%88%90%E4%B8%BA%E5%8F%AF%E8%83%BD%EF%BC%81%E7%BE%8E%E5%9B%A2%E9%87%91%E6%9C%8D%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%A8%E7%9B%B4%E6%92%AD%E9%A2%84%E5%91%8A","linkMd5ListStr":"100b0d1962ce585f91370af59007de88,100b0d1962ce585f91370af59007de88","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"11.4 KB","destSize":"7.7 KB","compressRate":"67.4%"},{"code":1,"isDone":false,"source":"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9Uqiaic9WRPtdYRc2EicfrVRDNMv2ma8wksicyVhziape6rH0hWoxdRpeuzzcSsw?imageView2/1/w/600","sourceStatusCode":200,"destWidth":481,"destHeight":480,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn6@2020_1/2020/09/05/06-45-40-962_50a8f43c99194bfb.webp","sourceBytes":62022,"destBytes":63580,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":3277,"convertSpendMs":15,"createdTime":"2020-09-05 14:45:38","host":"us-002*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%BE%AE%E4%BC%97%E6%AD%A3%E5%BC%8F%E5%BC%80%E6%BA%90Fes.js%EF%BC%9A%E5%BF%AB%E9%80%9F%E3%80%81%E7%AE%80%E5%8D%95%E3%80%81%E5%81%A5%E5%A3%AE%E7%9A%84%E7%AE%A1%E7%90%86%E5%8F%B0%E5%89%8D%E7%AB%AF%E5%BA%94%E7%94%A8","linkMd5ListStr":"495ff0fb7b1e393023a1cda7200d9217,495ff0fb7b1e393023a1cda7200d9217","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"60.6 KB","destSize":"62.1 KB","compressRate":"102.5%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicOOPvv19JNN7ZF7Wb3cwVGEFQVcFoAe8nukxULUdmByPqYKmqia4wiaww/640?wx_fmt=png","sourceStatusCode":200,"destWidth":570,"destHeight":337,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn68@2020_2/2020/09/05/06-45-43-369_4d968b97256dcc1f.webp","sourceBytes":10569,"destBytes":14046,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":2253,"convertSpendMs":8,"createdTime":"2020-09-05 14:45:41","host":"us-014*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%BE%AE%E4%BC%97%E6%AD%A3%E5%BC%8F%E5%BC%80%E6%BA%90Fes.js%EF%BC%9A%E5%BF%AB%E9%80%9F%E3%80%81%E7%AE%80%E5%8D%95%E3%80%81%E5%81%A5%E5%A3%AE%E7%9A%84%E7%AE%A1%E7%90%86%E5%8F%B0%E5%89%8D%E7%AB%AF%E5%BA%94%E7%94%A8","linkMd5ListStr":"495ff0fb7b1e393023a1cda7200d9217","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.3 KB","destSize":"13.7 KB","compressRate":"132.9%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76R95SYjfeaWXTS6mibPORPNCQocGibVKic4Hlgaiby9T1nfnv9mU8s7ejLHg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":844,"destHeight":1040,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn47@2020_4/2020/09/05/06-45-43-738_3eaad6d6a4b9873b.webp","sourceBytes":160323,"destBytes":53180,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":2836,"convertSpendMs":36,"createdTime":"2020-09-05 14:45:41","host":"us-010*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","linkMd5ListStr":"1907c22646243ed6a1fca009edac0470","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"156.6 KB","destSize":"51.9 KB","compressRate":"33.2%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicHekGufWQNmFvUPtOYx6N4u3SP5056lqLy6w1zYgSKhdmwt3nJZmRuA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":977,"destHeight":655,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn76@2020_4/2020/09/05/06-45-45-052_5e2455f28fce4f5c.webp","sourceBytes":163406,"destBytes":25532,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":4087,"convertSpendMs":26,"createdTime":"2020-09-05 14:45:42","host":"europe65*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%BE%AE%E4%BC%97%E6%AD%A3%E5%BC%8F%E5%BC%80%E6%BA%90Fes.js%EF%BC%9A%E5%BF%AB%E9%80%9F%E3%80%81%E7%AE%80%E5%8D%95%E3%80%81%E5%81%A5%E5%A3%AE%E7%9A%84%E7%AE%A1%E7%90%86%E5%8F%B0%E5%89%8D%E7%AB%AF%E5%BA%94%E7%94%A8","linkMd5ListStr":"495ff0fb7b1e393023a1cda7200d9217","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"159.6 KB","destSize":"24.9 KB","compressRate":"15.6%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RG0Vib2oJ3EteISNvXvbhfy6o2siakzPicrRKRfH35HSdQIvmUpE4H3I9w/640?wx_fmt=png","sourceStatusCode":200,"destWidth":954,"destHeight":364,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn12@2020_4/2020/09/05/06-45-46-606_4315b66060372fc4.webp","sourceBytes":56132,"destBytes":21072,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":5651,"convertSpendMs":17,"createdTime":"2020-09-05 14:45:42","host":"europe65*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","linkMd5ListStr":"1907c22646243ed6a1fca009edac0470","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"54.8 KB","destSize":"20.6 KB","compressRate":"37.5%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76R31oibdYJhp72cGCnI0ZGYa8AAvsH0mVHjeQAqBMjk1qMCLshHGvoZmQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":810,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn23@2020_4/2020/09/05/06-45-49-030_cfc42853cc2f9ed5.webp","sourceBytes":122159,"destBytes":32454,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":7943,"convertSpendMs":83,"createdTime":"2020-09-05 14:45:41","host":"us-018*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","linkMd5ListStr":"1907c22646243ed6a1fca009edac0470","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"119.3 KB","destSize":"31.7 KB","compressRate":"26.6%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76REjt8iaWhWib49Tzib2uBZibgG8SKaVLAxicUxpkqydAFGiaiaVEnA9ib7ibY6pg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":768,"destHeight":436,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn35@2020_5/2020/09/05/06-45-51-254_e0a45a90569733ca.webp","sourceBytes":42144,"destBytes":16766,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":8821,"convertSpendMs":17,"createdTime":"2020-09-05 14:45:43","host":"us-021*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","linkMd5ListStr":"1907c22646243ed6a1fca009edac0470","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"41.2 KB","destSize":"16.4 KB","compressRate":"39.8%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicbmhmT4VQLj8BhGcyxI7ehJuFUbewjGBGficA1oEl2hrlVxOHB6PGibsA/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":1080,"destHeight":720,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn64@2020_5/2020/09/05/06-45-53-998_620b2a622427fbb0.webp","sourceBytes":122900,"destBytes":89712,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":13063,"convertSpendMs":44,"createdTime":"2020-09-05 14:45:41","host":"us-027*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%8D%81%E5%B9%B4%E5%90%8E%E5%B0%86%E8%A6%81%E6%B6%88%E5%A4%B1%E7%9A%84%E4%BA%94%E7%A7%8D%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80","linkMd5ListStr":"f575b2cbe652bb62b3d7d64ab1dbd574","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"120 KB","destSize":"87.6 KB","compressRate":"73%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9Uqiaicby7EibqHsVHY5akpCgol2a8eiak6SibeFhVXTj4Y88ZibwW1uVlPQHPsmA/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":901,"destHeight":500,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn56@2020_3/2020/09/05/06-45-55-319_49f4edaa150925de.webp","sourceBytes":57590,"destBytes":34180,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":10191,"convertSpendMs":19,"createdTime":"2020-09-05 14:45:46","host":"us-007*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%8D%81%E5%B9%B4%E5%90%8E%E5%B0%86%E8%A6%81%E6%B6%88%E5%A4%B1%E7%9A%84%E4%BA%94%E7%A7%8D%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80","linkMd5ListStr":"f575b2cbe652bb62b3d7d64ab1dbd574","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.2 KB","destSize":"33.4 KB","compressRate":"59.4%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RNNSBJZq6W8cib6vXicntN2DHEic30lSeCne83JEfrDlHOE2wlYQFD3u7Q/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":566,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn43@2020_4/2020/09/05/06-45-58-800_fe4ba256e8ac2e1a.webp","sourceBytes":110622,"destBytes":28132,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":17692,"convertSpendMs":33,"createdTime":"2020-09-05 14:45:41","host":"us-023*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","linkMd5ListStr":"1907c22646243ed6a1fca009edac0470","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"108 KB","destSize":"27.5 KB","compressRate":"25.4%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaiceWIpQjylsfwbhVgWvq0pw2uswwxucUpdo7fzxCw2SYVPUZ7WXygapw/640?wx_fmt=png","sourceStatusCode":200,"destWidth":828,"destHeight":444,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn28@2020_2/2020/09/05/06-46-02-037_9f8cf867f82f2e79.webp","sourceBytes":74900,"destBytes":22036,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":21068,"convertSpendMs":49,"createdTime":"2020-09-05 14:45:41","host":"us-006*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%BE%AE%E4%BC%97%E6%AD%A3%E5%BC%8F%E5%BC%80%E6%BA%90Fes.js%EF%BC%9A%E5%BF%AB%E9%80%9F%E3%80%81%E7%AE%80%E5%8D%95%E3%80%81%E5%81%A5%E5%A3%AE%E7%9A%84%E7%AE%A1%E7%90%86%E5%8F%B0%E5%89%8D%E7%AB%AF%E5%BA%94%E7%94%A8","linkMd5ListStr":"495ff0fb7b1e393023a1cda7200d9217","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"73.1 KB","destSize":"21.5 KB","compressRate":"29.4%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76R8GIJGzVN4wu1ibD7my5cfZ4KuXRLjvoYYT7o8Pq8NpGGbAVaJDWBOUw/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":430,"destHeight":430,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn58@2020_5/2020/09/05/06-46-21-316_3ff2c684eb981781.webp","sourceBytes":24862,"destBytes":13902,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":10240,"convertSpendMs":13,"createdTime":"2020-09-05 14:46:11","host":"us-039*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E8%AE%A9%E9%A1%B9%E7%9B%AE5%E5%88%86%E9%92%9F%E4%B8%8A%E7%BA%BF%E6%88%90%E4%B8%BA%E5%8F%AF%E8%83%BD%EF%BC%81%E7%BE%8E%E5%9B%A2%E9%87%91%E6%9C%8D%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%A8%E7%9B%B4%E6%92%AD%E9%A2%84%E5%91%8A","linkMd5ListStr":"100b0d1962ce585f91370af59007de88","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.3 KB","destSize":"13.6 KB","compressRate":"55.9%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RvguVlYxXCfiblvibUXFfGpvic9hMKj7iaX2m0G6RAn3icKBU9Ux4ibSHEOxQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":900,"destHeight":500,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn72@2020_6/2020/09/05/06-46-40-073_b2c358ce1715ab3d.webp","sourceBytes":395741,"destBytes":40660,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":28959,"convertSpendMs":31,"createdTime":"2020-09-05 14:46:11","host":"us-002*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","linkMd5ListStr":"1907c22646243ed6a1fca009edac0470","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"386.5 KB","destSize":"39.7 KB","compressRate":"10.3%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicmxiaXa6OFQ1MicMBdey4yQPuGqHvZ9DGc7t7qFe3NMCjylYMyb2VMwWQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":437,"destHeight":440,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn31@2020_6/2020/09/05/06-46-45-052_939545211607d512.webp","sourceBytes":93267,"destBytes":24700,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":2308,"convertSpendMs":19,"createdTime":"2020-09-05 14:46:43","host":"us-027*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%BE%AE%E4%BC%97%E6%AD%A3%E5%BC%8F%E5%BC%80%E6%BA%90Fes.js%EF%BC%9A%E5%BF%AB%E9%80%9F%E3%80%81%E7%AE%80%E5%8D%95%E3%80%81%E5%81%A5%E5%A3%AE%E7%9A%84%E7%AE%A1%E7%90%86%E5%8F%B0%E5%89%8D%E7%AB%AF%E5%BA%94%E7%94%A8","linkMd5ListStr":"495ff0fb7b1e393023a1cda7200d9217","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"91.1 KB","destSize":"24.1 KB","compressRate":"26.5%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkVK6wVDFo1OkdWq6bx9UqiaicYj0VPKxEZb0tIeUYu6spsNzOicN8e68lZhtFbiaNg8MiaZ65O2ibTwnia3Q/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1032,"destHeight":638,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn83@2020_2/2020/09/05/06-46-48-540_3b44903f09013a5a.webp","sourceBytes":114682,"destBytes":26500,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":7260,"convertSpendMs":30,"createdTime":"2020-09-05 14:46:42","host":"us-023*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%BE%AE%E4%BC%97%E6%AD%A3%E5%BC%8F%E5%BC%80%E6%BA%90Fes.js%EF%BC%9A%E5%BF%AB%E9%80%9F%E3%80%81%E7%AE%80%E5%8D%95%E3%80%81%E5%81%A5%E5%A3%AE%E7%9A%84%E7%AE%A1%E7%90%86%E5%8F%B0%E5%89%8D%E7%AB%AF%E5%BA%94%E7%94%A8","linkMd5ListStr":"495ff0fb7b1e393023a1cda7200d9217","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"112 KB","destSize":"25.9 KB","compressRate":"23.1%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RbUWAr4PgEddfL4ogO4co0gs7s5Sb9GQedAAcO8jWUGhnCxsIYYMdBg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":1920,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn88@2020_6/2020/09/05/06-46-55-582_a9e64cddc333c475.webp","sourceBytes":1157998,"destBytes":175452,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":14455,"convertSpendMs":92,"createdTime":"2020-09-05 14:46:42","host":"us-008*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E8%AE%A9%E9%A1%B9%E7%9B%AE5%E5%88%86%E9%92%9F%E4%B8%8A%E7%BA%BF%E6%88%90%E4%B8%BA%E5%8F%AF%E8%83%BD%EF%BC%81%E7%BE%8E%E5%9B%A2%E9%87%91%E6%9C%8D%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%E5%AE%9E%E8%B7%B5%E4%B8%A8%E7%9B%B4%E6%92%AD%E9%A2%84%E5%91%8A","linkMd5ListStr":"100b0d1962ce585f91370af59007de88","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.1 MB","destSize":"171.3 KB","compressRate":"15.2%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkUUp6fydMfzZ2wBl7VWk76RuBuIJC5Nr83acIeAgU7fdLKib3MmHE9OEjPBuJWoobOvcggdyehAe1Q/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":529,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn39@2020_2/2020/09/05/06-46-59-955_1bda2febd3562d22.webp","sourceBytes":125905,"destBytes":15120,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":18631,"convertSpendMs":24,"createdTime":"2020-09-05 14:46:42","host":"us-039*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E6%88%91%E7%94%A8React%E5%92%8CVue%E6%9E%84%E5%BB%BA%E4%BA%86%E5%90%8C%E6%AC%BE%E5%BA%94%E7%94%A8%EF%BC%8C%E6%9D%A5%E7%9C%8B%E7%9C%8B%E5%93%AA%E9%87%8C%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%882020%E7%89%88%EF%BC%89","linkMd5ListStr":"1907c22646243ed6a1fca009edac0470","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"123 KB","destSize":"14.8 KB","compressRate":"12%"}],"successGithubMap":{"myreaderx8":1,"myreaderx25":1,"myreaderx14":1,"myreaderx15":1,"myreaderx6":1,"myreaderx21":1,"myreaderx4":1,"myreaderx32":1,"myreaderx10":1,"myreaderx33":1,"myreaderx11":1,"myreaderx12":1,"myreaderx23":1,"myreaderx13":1,"myreaderx30":1,"myreaderx5oss":1,"myreaderx31":1,"myreaderx18":1,"myreaderx29":1,"myreaderx19":1},"failGithubMap":{"myreaderx2":1}}