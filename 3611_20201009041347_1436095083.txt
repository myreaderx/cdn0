{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-09 12:13:19","updatedTime":"2020-10-09 12:13:19","title":"Archai can design your neural network with state-of-the-art neural architecture search (NAS)","link":"https://www.microsoft.com/en-us/research/?p=694401","description":"\n<figure class=\"wp-block-image size-large\"><img src=\"https://www.microsoft.com/en-us/research/uploads/prod/2020/10/1400x788_Archai_NoLogo-2.gif\" alt=\"\"/></figure>\n\n\n\n<p>The goal of <a href=\"https://arxiv.org/abs/1808.05377\">neural architecture search (NAS)</a> is to have computers automatically search for the best-performing neural networks. Recent advances in NAS methods have made it possible to build problem-specific networks that are faster, more compact, and less power hungry than their handcrafted counterparts. Unfortunately, many NAS methods rely on an array of tricks that aren’t always documented in a way that’s easy to discover. While these tricks result in neural networks with greater accuracy, they often cloud the performance of the search algorithm themselves. Since different NAS methods use different enhancements and some none at all, NAS techniques have become difficult for researchers to compare. The use of a variety of enhancements has also made NAS methods <a href=\"https://arxiv.org/abs/1902.07638\">difficult to reproduce</a>. Once-promising methods may disappoint when an attempt is made to transfer them to other datasets. Additionally, engineers trying to use NAS often find it challenging to understand the implications of advertised advances because of a deluge of research claims, an inability to fairly compare methods side by side, fragmented code bases in research repos, hyperparameters that aren’t carefully managed, and a lack of plug-and-play for individual techniques.</p>\n\n\n\n<div class=\"annotations\" data-bi-area=\"margin-callout\">\n\t<ul class=\"annotations__list annotations__list--right\">\n\t\t<li class=\"annotations__list-item\">\n\t\t\t\t\t\t<span class=\"annotations__type\">SOURCE CODE</span>\n\t\t\t<a href=\"https://github.com/microsoft/archai\" data-bi-type=\"annotated-link\" data-bi-area=\"margin-callout\" data-bi-name=\"GitHub: Archai\">\n\t\t\t\tGitHub: Archai\t\t\t</a>\n\t\t\t<span class=\"svg-icon icon-external-link\"></span>\n\t\t\t\t\t</li>\n\t</ul>\n</div>\n\n\n\n<p>We’ve sought to address many of these concerns with a goal of making state-of-the-art NAS research more widely usable. We’ve asked, can we find the right abstractions to unify many of these methods? A unified NAS framework would help enable the adoption of NAS algorithms in industry and support reproducibility, as well as fair evaluation, in research. Such a framework would also accelerate algorithmic innovation by allowing the research community to pursue even higher ambitions in its application of NAS, as well as to conduct searches in novel spaces that might yield architectures we haven’t yet imagined. With this goal in mind, we’ve developed <a href=\"https://www.microsoft.com/en-us/research/project/archai-platform-for-neural-architecture-search/\">Archai</a>, an-open source project now available on GitHub. <em>Archai</em>, short for <em>Architecture A</em>I, means “first principles,” which captures the spirit of the work we’re doing.</p>\n\n\n\n<p>Archai enables execution of standard NAS algorithms with a single command line. Currently, <a href=\"https://arxiv.org/abs/1806.09055\">Differentiable Architecture Search (DARTS)</a>, <a href=\"https://www.microsoft.com/en-us/research/publication/efficient-forward-architecture-search/\">Petridish</a>, <a href=\"https://papers.nips.cc/paper/8374-data-differentiable-architecture-approximation\">Differentiable ArchiTecture Approximation (DATA)</a>, and <a href=\"https://papers.nips.cc/paper/8472-xnas-neural-architecture-search-with-expert-advice\">eXperts Neural Architecture Search (XNAS)</a> are implemented. Archai makes it easy to add new algorithms, experiment with many well-known datasets, and add new datasets through unified interfaces. Additionally, Archai enables the isolation of hyperparameters via a configuration system that makes assumptions and settings explicit. The behaviors of architecture search systems are sensitive to these hyperparameters. With unified hyperparameter configuration controls, different algorithms can be tested on the same playing field.</p>\n\n\n\n\t\t\t<div class=\"msr-promo--alignwide\">\n\t\t\t\t<div class=\"msr-promo\" data-bi-area=\"promo\" data-bi-id=\"686220\"\n\t\t\t\tdata-bi-type=\"webinar\">\n\t\t\t\t\n\n\t\t<p class=\"msr-promo__label\">\n\t\t<span>Spotlight: Microsoft Research webinars</span>\n\t</p>\n\t\n\t<div class=\"msr-promo__inner-wrap\">\n\n\t\t<div class=\"msr-promo__block\">\n\n\t\t\t\t\t\t<div class=\"msr-promo__media\">\n\t\t\t\t<a href=\"https://note.microsoft.com/MSR-Webinar-Database-Systems-Registration-Live.html\" data-bi-name=\"Webinar: Harmonizing the declarative and imperative in database systems\" target=\"_blank\">\n\t\t\t\t\t<img src=\"https://www.microsoft.com/en-us/research/uploads/prod/2020/09/MSR_Karthik_Webinar_Site_PreWeb_1400x788.png\" alt=\"a picture of karthik on the right, next to the title of his webinar Harmonizing the Declarative and Imperative in Database Systems\" />\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div class=\"msr-promo__content \">\n\n\t\t\t\t\t\t\t\t\t<h2 class=\"msr-promo__heading\">Webinar: Harmonizing the declarative and imperative in database systems</h2>\n\t\t\t\t\n\t\t\t\t\t\t\t\t<p class=\"msr-promo__message\">8 am PT, Oct. 8 &#8211; Karthik Ramachandra, principal engineering manager, discusses the challenges using both declarative SQL and imperative functions/procedures in database applications. </p>\n\t\t\t\t\n\t\t\t\t\t\t\t\t<div class=\"wp-block-buttons\">\n\t\t\t\t\t<div class=\"wp-block-button is-style-fill-chevron\">\n\t\t\t\t\t\t<a href=\"https://note.microsoft.com/MSR-Webinar-Database-Systems-Registration-Live.html\" class=\"wp-block-button__link\" data-bi-name=\"Webinar: Harmonizing the declarative and imperative in database systems\" target=\"_blank\">\n\t\t\t\t\t\t\tRegister now\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\t\t\t</div><!--/.msr-promo__content-->\n\t\t</div><!--/.msr-promo__block-->\n\t</div><!--/.msr-promo__inner-wrap-->\n\n\t\t\t</div><!--/.msr-promo-->\n\t\t\t</div><!--/.msr-promo--alignwide-->\n\t\t\n\n\n<p>At the core of Archai are several interfaces that provide abstractions for common components of NAS algorithms. This reduces the code duplication, making new algorithm development faster and easier. Archai also uses a common model description language based on YAML that is extensible and “compilable” to a PyTorch model. Because all the algorithms share exactly the same components, including the ones for training and evaluation, they can be written more compactly. Having common components also sets the stage for fairer comparison and easier reproducibility.</p>\n\n\n\n<h3>Key features of Archai</h3>\n\n\n\n<ul><li><strong>Declarative approach and reproducibility:</strong> Many research works employ a variety of enhancements that, while seemingly small, could make a world of difference to neural network performance. For example, some works use only 600 epochs for final architecture training, while others use 1,500. Some may exploit <a href=\"https://research.google/pubs/pub47890/\">AutoAugment</a> for data augmentation during training, while others may only use <a href=\"https://arxiv.org/pdf/1708.04552.pdf\">Cutout</a>. We pored over various research codebases to extract bags of tricks. With Archai, these tricks can now be switched on or off by simple configuration that applies to all algorithms. Extracting these tricks has also allowed us to make Archai a general-purpose framework to train manually designed neural networks efficiently. <a href=\"https://arxiv.org/abs/1912.12522v3\">Recent work</a> has shown that judiciously using these training tricks is usually more important than small differences in architectures themselves.</li><li><strong>Search-space abstractions: </strong>A significant amount of current NAS research focuses on rather small search spaces made popular by a few early efforts. In Archai, we offer abstractions that can significantly expand the search spaces in a more generalized fashion and are available to all algorithms. It’s our hope that the research community will find it useful to push the envelope with these expanded search spaces that haven’t been fully explored yet.</li><li><strong>Mixing and matching of different techniques: </strong>There are several exciting questions we can explore through mixing and matching different techniques. What if we want to apply the growth method proposed by Petridish to DARTS? Can we apply L1 regularization over architecture weights to other algorithms with just a flip of a configuration switch? What if a researcher wanted to run the online-learning motivated update rules as proposed in XNAS or <a href=\"https://arxiv.org/abs/2004.07802\">Geometric NAS</a> in new search spaces or use them inside a new algorithm? Archai offers modularized components of different NAS algorithms so they can be easily mixed and matched.</li><li><strong>Generalized Pareto frontier search</strong>: A crucial use case in which NAS becomes a necessity is deploying neural networks on compute-constrained platforms such as smartphones or embedded devices. In these scenarios, one can expect budget constraints for power consumption, latency, memory usage, available flops, and other factors. A model must work within this budget even if it means sacrificing some accuracy. It’s difficult to manually design optimal networks with a wide range of specified constraints. Given the difficulty, current NAS algorithms will almost always outperform manual designs. Archai can generate a gallery of architectures with specified compute characteristics. Our NAS method, Petridish, was designed with this primary intention. Petridish is available through Archai, now with higher-performing, distributed implementation. We plan to generalize the Pareto front generation for all algorithms so that almost any algorithm can leverage this technique to produce a similar gallery of models. &#160;</li></ul>\n\n\n\n<p>Archai offers several other desirable features, including logging, publication-ready experiment reports, mixed-precision training, distributed training, faster and more general implementation of algorithms such as bilevel optimization, training and evaluation code incorporating several best practices, support for NVIDIA Data Loading Library (DALI) and Apex, “mini-mode” for development on a laptop, support for <a href=\"https://github.com/microsoft/tensorwatch\">TensorWatch</a>, as well as <a href=\"https://www.tensorflow.org/tensorboard\">TensorBoard</a>, architecture visualization, <a href=\"https://arxiv.org/abs/1902.09635\">NASBench-101</a>/<a href=\"https://arxiv.org/abs/2001.00326\">201</a> (with <a href=\"https://arxiv.org/abs/2008.09777\">NASBench-301</a> coming soon), and cross-platform code that works for Linux and OS X, as well as Windows.</p>\n\n\n\n<p>For full list of features, please visit our <a href=\"https://github.com/microsoft/archai/blob/master/docs/features.md\">GitHub page</a>.</p>\n\n\n\n<h3>Join the Archai community</h3>\n\n\n\n<p>We hope that researchers and engineers will find Archai useful and contribute to these efforts to accelerate NAS adoption, as well as future research. We formally invite the broader community to join us in this journey with contributions, pull requests, and algorithm implementations. Check out our <a href=\"https://github.com/microsoft/archai\">Archai GitHub repository</a> for more information and join the <a href=\"https://www.facebook.com/groups/1133660130366735\">Archai group</a> to stay up to date.</p>\n\n\n\n<p><em>Acknowledgments: We thank </em><a href=\"https://www.microsoft.com/en-us/research/people/jcl/\"><em>Partner Research Manager John Langford</em></a><em>, </em><a href=\"https://www.microsoft.com/en-us/research/people/horvitz/\"><em>Technical Fellow and Chief Scientific Officer Eric Horvitz</em></a><em>, </em><a href=\"https://www.microsoft.com/en-us/research/people/rcaruana/\"><em>Senior Principal Researcher Rich Caruana</em></a><em>, and </em><a href=\"https://www.microsoft.com/en-us/research/people/alekha/\"><em>Principal Research Manager Alekh Agarwal</em></a><em> for providing valuable guidance and rich discussions.</em></p>\n\n\n\n<div class=\"wp-block-group\"><div class=\"wp-block-group__inner-container\"></div></div>\n\n\n\n<div class=\"wp-block-group\"><div class=\"wp-block-group__inner-container\"></div></div>\n\n\n\n<p></p>\n<p>The post <a rel=\"nofollow\" href=\"https://www.microsoft.com/en-us/research/blog/archai-can-design-your-neural-network-with-state-of-the-art-neural-architecture-search-nas/\">Archai can design your neural network with state-of-the-art neural architecture search (NAS)</a> appeared first on <a rel=\"nofollow\" href=\"https://www.microsoft.com/en-us/research\">Microsoft Research</a>.</p>\n","descriptionType":"html","publishedDate":"Thu, 01 Oct 2020 16:39:47 +0000","feedId":3611,"bgimg":"https://www.microsoft.com/en-us/research/uploads/prod/2020/10/1400x788_Archai_NoLogo-2.gif","linkMd5":"1a138fdadc933f744c22255dd27a1793","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn65@2020_4/2020/10/09/04-13-42-915_33d91f612923b6a8.webp","destWidth":1400,"destHeight":788,"sourceBytes":17292670,"destBytes":6790400,"author":"Alexis Hagen","articleImgCdnMap":{"https://www.microsoft.com/en-us/research/uploads/prod/2020/10/1400x788_Archai_NoLogo-2.gif":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn65@2020_4/2020/10/09/04-13-42-915_33d91f612923b6a8.webp","https://www.microsoft.com/en-us/research/uploads/prod/2020/09/MSR_Karthik_Webinar_Site_PreWeb_1400x788.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn1@2020_4/2020/10/09/04-13-46-440_0d4b779605bd8f84.webp"},"publishedOrCreatedDate":1602216799082}],"record":{"createdTime":"2020-10-09 12:13:19","updatedTime":"2020-10-09 12:13:19","feedId":3611,"fetchDate":"Fri, 09 Oct 2020 04:13:19 +0000","fetchMs":228,"handleMs":19,"totalMs":28524,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"60cc8024e6448a76a05235c57d14d095","hostName":"us-002*","requestId":"74ad362afcca4a7ab06e5691cee49871_3611","contentType":"application/rss+xml; charset=UTF-8","totalBytes":6857962,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":2,"articlesImgsGithubTotal":2,"successGithubMap":{"myreaderx33":1,"myreaderx2":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:29:28","updatedTime":"2020-09-01 10:32:05","id":3611,"name":"Microsoft Research","url":"https://www.microsoft.com/en-us/research/feed/","subscriber":null,"website":null,"icon":"https://www.microsoft.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn38@2020_5/2020/09/01/02-32-02-775_ddd9473b17dec87a.ico","description":"","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":6790400,"tmpBodyImgCdnBytes":67562,"tmpBgImgCdnBytes":0,"extra4":{"start":1602216798826,"total":0,"statList":[{"spend":237,"msg":"获取xml内容"},{"spend":19,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":1095,"msg":"正文链接上传到cdn"}]},"extra5":2,"extra6":2,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-028.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://www.microsoft.com/en-us/research/uploads/prod/2020/10/1400x788_Archai_NoLogo-2.gif","sourceStatusCode":200,"destWidth":1400,"destHeight":788,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn65@2020_4/2020/10/09/04-13-42-915_33d91f612923b6a8.webp","sourceBytes":17292670,"destBytes":6790400,"targetWebpQuality":4,"feedId":3611,"totalSpendMs":26998,"convertSpendMs":21264,"createdTime":"2020-10-09 12:13:19","host":"europe68*","referer":"https://www.microsoft.com/en-us/research/?p=694401","linkMd5ListStr":"1a138fdadc933f744c22255dd27a1793,1a138fdadc933f744c22255dd27a1793","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.5 MB","destSize":"6.5 MB","compressRate":"39.3%"},{"code":1,"isDone":false,"source":"https://www.microsoft.com/en-us/research/uploads/prod/2020/09/MSR_Karthik_Webinar_Site_PreWeb_1400x788.png","sourceStatusCode":200,"destWidth":1400,"destHeight":788,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn1@2020_4/2020/10/09/04-13-46-440_0d4b779605bd8f84.webp","sourceBytes":356890,"destBytes":67562,"targetWebpQuality":75,"feedId":3611,"totalSpendMs":1076,"convertSpendMs":71,"createdTime":"2020-10-09 12:13:46","host":"us-028*","referer":"https://www.microsoft.com/en-us/research/?p=694401","linkMd5ListStr":"1a138fdadc933f744c22255dd27a1793","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"348.5 KB","destSize":"66 KB","compressRate":"18.9%"}],"successGithubMap":{"myreaderx33":1,"myreaderx2":1},"failGithubMap":{}}