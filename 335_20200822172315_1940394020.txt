{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-08-23 01:22:50","updatedTime":"2020-08-23 01:22:50","title":"To grid or not to grid","link":"https://css-tricks.com/?p=319408","description":"\n<p>Sarah Higley does accessibility work and <a href=\"https://sarahmhigley.com/writing/grids-part1/\">finds that</a> <em>&#8220;tables and grids are over-represented in accessibility bugs.&#8221;</em> </p>\n\n\n\n<p>The drum has been banged a million times: don&#8217;t use a <em>&#60;table&#62;</em> for layout. But what goes around comes around. What&#8217;s the the #1 item in a list of &#8220;some of the ways tables and grids can go wrong&#8221;?</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-large\"><p>Using a grid when a table is needed, or vice versa</p></blockquote>\n\n\n\n<p>The day has come. CSS grid has dug its way into usage so deeply that developers are using it by default instead of using a classic <code>&#60;table&#62;</code>. And we don&#8217;t even have flying cars yet!</p>\n\n\n\n<span id=\"more-319408\"></span>\n\n\n\n<p>Sarah shows clear examples of both techniques and how the same information can be presented in different ways both visually and semantically. For example, a list of upcoming concerts can be displayed as a <code>&#60;table&#62;</code>, and that might be fine if you can imagine the purpose of the table being used for sorting or comparing, but it can also be presented as a grid, which has other advantages, like headers that are easier to skim.</p>\n<p><a href=\"https://sarahmhigley.com/writing/grids-part1/\" title=\"Direct link to featured article\">Direct Link to Article</a> &#8212; <a href=\"https://css-tricks.com/to-grid-or-not-to-grid/\">Permalink</a></p><hr />\n<p>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/to-grid-or-not-to-grid/\">To grid or not to grid</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>\n<p>You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</p>\n","descriptionType":"html","publishedDate":"Thu, 20 Aug 2020 21:54:49 +0000","feedId":335,"bgimg":"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/table-grid-1.png?fit=1200%2C600&ssl=1","linkMd5":"6fa37415141988d382f244fe597b48f1","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn55@2020_2/2020/08/22/17-22-54-566_680f1f4837a7bebd.webp","metaImg":"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/table-grid-1.png?fit=1200%2C600&ssl=1","destWidth":1200,"destHeight":600,"sourceBytes":46448,"destBytes":46448,"author":"Chris Coyier","publishedOrCreatedDate":1598116970423},{"createdTime":"2020-08-23 01:22:50","updatedTime":"2020-08-23 01:22:50","title":"A Community-Driven Site with Eleventy: Building the Site","link":"https://css-tricks.com/?p=318724","description":"\n<p>In the <a href=\"https://css-tricks.com/building-a-community-driven-site-with-eleventy-preparing-for-contributions\">last article</a>, we learned what goes into planning for a community-driven site. We saw just how many considerations are needed to start accepting user submissions, using what I learned from my experience building <a href=\"https://stylestage.dev\">Style Stage</a> as an example.</p>\n\n\n\n<p>Now that we’ve covered planning, let’s get to some code! Together, we’re going to develop an Eleventy setup that you can use as a starting point for your own community (or personal) site.</p>\n\n\n\n<span id=\"more-318724\"></span>\n\n\n\n<div class=\"wp-block-group\"><div class=\"wp-block-group__inner-container\">\n<div class=\"wp-block-group article-series\"><div class=\"wp-block-group__inner-container\">\n<h4>Article Series:</h4>\n\n\n\n<ol><li><a href=\"https://css-tricks.com/building-a-community-driven-site-with-eleventy-preparing-for-contributions\">Preparing for Contributions</a></li><li>Building the Site <strong>(You are here!)</strong></li></ol>\n</div></div>\n</div></div>\n\n\n\n<p>This article will cover:</p>\n\n\n\n<ul><li>How to initialize Eleventy and create useful develop and build scripts</li><li>Recommended setup customizations</li><li>How to define custom data and combine multiple data sources</li><li>Creating layouts with Nunjucks and Eleventy layout chaining</li><li>Deploying to Netlify</li></ul>\n\n\n\n<h3>The vision</h3>\n\n\n\n<p>Let&#8217;s assume we want to let folks submit their dogs and cats and pit them against one another in cuteness contests.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/YD_O3yWQ.png?ssl=1\" alt=\"Screenshot of the site, showing a Meow vs. Bow Wow heading above a Weekly Battle subheading, followed by a photo of a tabby cat named Fluffy and one of a happy dog named Lexi.\" class=\"wp-image-318729\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/YD_O3yWQ.png?w=2010&#38;ssl=1 2010w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/YD_O3yWQ.png?resize=300%2C236&#38;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/YD_O3yWQ.png?resize=1024%2C805&#38;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/YD_O3yWQ.png?resize=768%2C604&#38;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/YD_O3yWQ.png?resize=1536%2C1207&#38;ssl=1 1536w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/YD_O3yWQ.png?resize=1000%2C786&#38;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption><a target=\"_blank\" href=\"https://meow-vs-bowwow.netlify.app/\" rel=\"noreferrer noopener\">Live demo</a></figcaption></figure>\n\n\n\n<p>We’re not going to get into user voting in this article. That would be so cool (and totally possible with serverless functions) but our focus is on the pet submissions themselves. In other words, users can submit profile details for their cats and dogs. We’ll use those submissions to create a weekly battle that puts a random cat up against a random dog on the home page to duke it out over which is the most <em>purrrfect</em> (or woof-tastic, if you prefer).</p>\n\n\n\n<h3>Let’s spin up Eleventy</h3>\n\n\n\n<p>We’ll start by initializing a new project by running <code>npm init</code> on any directory you’d like, then installing Eleventy into it with:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npm install @11ty/eleventy</code></pre>\n\n\n\n<p>While it’s totally optional, I like to open up the <code>package-json</code>&#160;file that’s added to the directory and replace the <code>scripts</code> section with this:</p>\n\n\n\n<pre rel=\"package.json\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">\"scripts\": {\n  \"develop\": \"eleventy --serve\",\n  \"build\": \"eleventy\"\n},</code></pre>\n\n\n\n<p>This allows us to start developing Eleventy in a development environment (<code>npm run develop</code>) that includes Browsersync hot-reloading for local development. It also adds a command that compiles and builds our work (<code>npm run build</code>) for deployment on a production server.</p>\n\n\n\n<p class=\"explanation\">If you’re thinking, “npm <em>what</em>?” what we’re doing is calling on<a href=\"https://nodejs.org/en/download/\"> Node</a> (which is something Eleventy requires). The commands noted here are intended to be run in your preferred terminal, which may be an additional program or built-in to your code editor, like it is in VS Code.</p>\n\n\n\n<p>We’ll need one more npm package, <a href=\"https://github.com/mrmlnc/fast-glob\">fast-glob</a>, that will come in handy a little later for combining data. We may as well install it now:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npm install --save-dev fast-glob.</code></pre>\n\n\n\n<h3>Let’s configure our directory</h3>\n\n\n\n<p>Eleventy allows customizing the input directory (where we work) and output directory (where our built work goes) to provide a little extra organization.</p>\n\n\n\n<p>To configure this, we&#8217;ll create the <code>eleventy.js</code> file at the root of the project directory. Then we&#8217;ll tell Eleventy where we want our input and output directories to go. In this case, we’re going to use a <code>src</code> directory for the input and a <code>public</code> directory for the output.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">module.exports = function (eleventyConfig) {\n  return \n    dir: {\n      input: \"src\",\n      output: \"public\"\n    },\n  };\n};</code></pre>\n\n\n\n<p>Next, we’ll create a directory called <code>pets</code> where we’ll store the pets data we get from user submissions. We can even break that directory down a little further to reduce merge conflicts and clearly distinguish cat data from dog data with <code>cat</code> and <code>dog</code> subdirectories:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">pets/\n  cats/\n  dogs/</code></pre>\n\n\n\n<p>What’s the data going to look like? Users will send in a JSON file that follows this schema, where each property is a data point about the pet:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">{\n  \"name\": \"\",\n  \"petColor\": \"\",\n  \"favoriteFood\": \"\",\n  \"favoriteToy\": \"\",\n  \"photoURL\": \"\",\n  \"ownerName\": \"\",\n  \"ownerTwitter\": \"\"\n}</code></pre>\n\n\n\n<p>To make the submission process crystal clear for users, we can create a <code>CONTRIBUTING.md</code> file at the root of the project and write out the guidelines for submissions. GitHub takes the content in this file and uses displays it in the repo. This way, we can provide guidance on this schema such as a note that <code>favoriteFood</code>, <code>favoriteToy</code>, and <code>ownerTwitte</code> are optional fields.</p>\n\n\n\n<p class=\"explanation\">A <code>README.md</code> file would be just as fine if you’d prefer to go that route. It’s just nice that there’s a standard file that’s meant specifically for contributions.</p>\n\n\n\n<p>Notice <code>photoURL</code> is one of those properties. We could’ve made this a file but, for the sake of security and hosting costs, we’re going to ask for a URL instead. You may decide that you are willing to take on actual files, and that’s totally cool.</p>\n\n\n\n<h3>Let’s work with data</h3>\n\n\n\n<p>Next, we need to create a combined array of data out of the individual cat files and dog files. This will allow us to loop over them to create site pages and pick random cat and dog submissions for the weekly battles.</p>\n\n\n\n<p>Eleventy allows node <code>module.exports</code> within the <code>_data</code> directory. That means we can create a function that finds all cat files and another that finds all dog files and then creates arrays out of each set. It’s like taking each cat file and merging them together to create one data set in a single JavaScript file, then doing the same with dogs.</p>\n\n\n\n<p>The filename used in <code>_data</code> becomes the variable that holds that dataset, so we’ll add files for cats and dogs in there:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">_data/\n  cats.js\n  dogs.js</code></pre>\n\n\n\n<p>The functions in each file will be nearly identical — we’re merely swapping instances of “cat” for “dog” between the two. Here’s the function for cats:&#160;</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">const fastglob = require(\"fast-glob\");\nconst fs = require(\"fs\");\n \nmodule.exports = async () => {\n  // Create a \"glob\" of all cat json files\n  const catFiles = await fastglob(\"./src/pets/cats/*.json\", {\n    caseSensitiveMatch: false,\n  });\n \n  // Loop through those files and add their content to our `cats` Set\n  let cats = new Set();\n  for (let cat of catFiles) {\n    const catData = JSON.parse(fs.readFileSync(cat));\n    cats.add(catData);\n  }\n \n  // Return the cats Set of objects within an array\n  return [...cats];\n};</code></pre>\n\n\n\n<p>Does this look scary? Never fear! I do not routinely write node either, and it’s not a required step for less complex Eleventy sites. If we had instead chosen to have contributors add to an ever growing single JSON file with <code>_data</code>, then this combination step wouldn’t be necessary in the first place. Again, the main reason for this step is to reduce merge conflicts by allowing for individual contributor files. It’s also the reason we added fast-glob to the mix.</p>\n\n\n\n<h3>Let’s output the data</h3>\n\n\n\n<p>This is a good time to start plugging data into the templates for our UI. In fact, go ahead and drop a few JSON files into the <code>pets/cats</code> and <code>pets/dogs</code> directories that include data for the properties so we have something to work with right out of the gate and test things.</p>\n\n\n\n<p>We can go ahead and add our first Eleventy page by adding a <code>index.njk</code> file in the src directory. This will become the home page, and is a Nunjucks template file format.</p>\n\n\n\n<p class=\"explanation\"><a href=\"https://mozilla.github.io/nunjucks/templating.html\">Nunjucks</a> is one option of many for creating templates with Eleventy. <a href=\"https://www.11ty.dev/docs/languages/\">See the docs</a> for a full list of templating options.</p>\n\n\n\n<p>Let’s start by looping over our data and outputting an unordered list both for cats and dogs:</p>\n\n\n\n<pre rel=\"Nunchucks\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&#60;ul>\n  &#60;!-- Loop through cat data -->\n  {% for cat in cats %}\n  &#60;li>\n    &#60;a href=\"/cats/{{ cat.name | slug }}/\">{{ cat.name }}&#60;/a>\n  &#60;/li>\n  {% endfor %}\n&#60;/ul>\n \n&#60;ul>\n  &#60;!-- Loop through dog data -->\n  {% for dog in dogs %}\n  &#60;li>\n    &#60;a href=\"/dogs/{{ dog.name | slug }}/\">{{ dog.name }}&#60;/a>\n  &#60;/li>\n  {% endfor %}\n&#60;/ul></code></pre>\n\n\n\n<p>As a reminder, the reference to <code>cats</code> and <code>dogs</code> matches the filename in <code>_data</code>. Within the loop we can access the JSON keys using dot notation, as seen for <code>cat.name</code>, which is output as a Nunjucks template variable using double curly braces (e.g. <code>{{ cat.name }}</code>).</p>\n\n\n\n<h3>Let’s create pet profile pages</h3>\n\n\n\n<p>Besides lists of cats and dogs on the home page (<code>index.njk</code>), we also want to create individual profile pages for each pet. The loop indicated a hint at the structure we’ll use for those, which will be <code>[pet type]/[name-slug]</code>.</p>\n\n\n\n<p>The recommended way to create pages from data is via the Eleventy concept of <a href=\"https://www.11ty.dev/docs/pagination/\">pagination</a> which allows chunking out data.</p>\n\n\n\n<p>We’re going to create the files responsible for the pagination at the root of the <code>src</code> directory, but you could nest them in a custom directory, as long as it lives within src and can still be discovered by Eleventy.</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">src/\n  cats.njk\n  dogs.njk</code></pre>\n\n\n\n<p>Then we’ll add our pagination information as front matter, shown for cats:</p>\n\n\n\n<pre rel=\"src/cats.njk\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">---\npagination:\n  data: cats\n  alias: cat\n  size: 1\npermalink: \"/cats/{{ cat.name | slug }}/\"\n---</code></pre>\n\n\n\n<p>The <code>data</code> value is the filename from <code>_data</code>. The <code>alias</code> value is optional, but is used to reference one item from the paginated array. <code>size: 1</code> indicates that we’re creating one page per item of data.</p>\n\n\n\n<p>Finally, in order to successfully create the page output, we need to also indicate the desired permalink structure. That’s where the <code>alias</code> value above comes into play, which accesses the <code>name</code> key from the dataset. Then we are using a built-in filter called <code>slug</code> that transforms a string value into a URL-friendly string (lowercasing and converting spaces to dashes, etc).</p>\n\n\n\n<h3>Let’s review what we have so far</h3>\n\n\n\n<p>Now is the time to fire up Eleventy with <code>npm run develop</code>. That will start the local server and show you a URL in the terminal you can use to view the project. It will show build errors in the terminal if there are any.</p>\n\n\n\n<p>As long as all was successful, Eleventy will create a <code>public</code> directory, which should contain:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">public/\n  cats/\n    cat1-name/index.html\n    cat2-name/index.html\n  dogs/\n    dog1-name/index.html\n    dog2-name/index.html\n  index.html</code></pre>\n\n\n\n<p>And in the browser, the index page should display one linked list of cat names and another one of linked dog names.</p>\n\n\n\n<h3>Let’s add data to pet profile pages</h3>\n\n\n\n<p>Each of the generated pages for cats and dogs is currently blank. We have data we can use to fill them in, so let’s put it to work.</p>\n\n\n\n<p>Eleventy expects an <code>_includes</code> directory that contains layout files (“templates”) or template partials that are included in layouts.</p>\n\n\n\n<p>We’ll create two layouts:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">src/\n  _includes/\n    base.njk\n    pets.njk</code></pre>\n\n\n\n<p>The contents of base.njk will be an HTML boilerplate. The <code>&#60;body&#62;</code> element in it will include a special template tag, <code>{{ content | safe }}</code>, where content passed into the template will render, with safe meaning it can render any HTML that is passed in versus encoding it.</p>\n\n\n\n<p>Then, we can assign the homepage, <code>index.md</code>, to use the <code>base.njk</code> layout by adding the following as front matter. This should be the first thing in <code>index.md</code>, including the dashes:</p>\n\n\n\n<pre rel=\"index.md\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">---\nlayout: base.njk\n---</code></pre>\n\n\n\n<p>If you check the compiled HTML in the <code>public</code> directory, you’ll see the output of the cat and dog loops we created are now within the <code>&#60;body&#62;</code> of the <code>base.njk</code> layout.</p>\n\n\n\n<p>Next, we’ll add the <em>same</em> front matter to <code>pets.njk</code> to define that it will also use the <code>base.njk</code> layout to leverage the Eleventy concept of <a href=\"https://www.11ty.dev/docs/layout-chaining/\">layout chaining</a>. This way, the content we place in <code>pets.njk</code> will be wrapped by the HTML boilerplate in <code>base.njk</code> so we don’t have to write out that HTML each and every time.</p>\n\n\n\n<p>In order to use the single <code>pets.njk</code> template to render both cat and dog profile data, we’ll use one of the newest Eleventy features called <a href=\"https://www.11ty.dev/docs/data-computed/\">computed data</a>. This will allow us to assign values from the cats and dogs data to the same template variables, as opposed to using <code>if</code> statements or two separate templates (one for cats and one for dogs). The benefit is, once again, to avoid redundancy.</p>\n\n\n\n<p>Here’s the update needed in <code>cats.njk</code>, with the same update needed in <code>dogs.njk</code> (substituting <code>cat</code> with <code>dog</code>):</p>\n\n\n\n<pre rel=\"src/cats.njk\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">eleventyComputed:\n  title: \"{{ cat.name }}\"\n  petColor: \"{{ cat.petColor }}\"\n  favoriteFood: \"{{ cat.favoriteFood }}\"\n  favoriteToy: \"{{ cat.favoriteToy }}\"\n  photoURL: \"{{ cat.photoURL }}\"\n  ownerName: \"{{ cat.ownerName }}\"\n  ownerTwitter: \"{{ cat.ownerTwitter }}\"</code></pre>\n\n\n\n<p>Notice that <code>eleventyComputed</code> defines this front matter array key and then uses the alias for accessing values in the <code>cats</code> dataset. Now, for example, we can just use <code>{{ title }}</code> to access a cat’s name <em>and</em> a dog’s name since the template variable is now the same.</p>\n\n\n\n<p>We can start by dropping the following code into <code>pets.njk</code> to successfully load cat or dog profile data, depending on the page being viewed:</p>\n\n\n\n<pre rel=\"Nunchucks\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&#60;img src=\"{{ photoURL }}\" />\n&#60;ul>\n  &#60;li>&#60;strong>Name&#60;/strong>: {{ title }}&#60;/li>\n  &#60;li>&#60;strong>Color&#60;/strong>: {{ petColor }}&#60;/li>\n  &#60;li>&#60;strong>Favorite Food&#60;/strong>: {{ favoriteFood if favoriteFood else 'N/A' }}&#60;/li>\n  &#60;li>&#60;strong>Favorite Toy&#60;/strong>: {{ favoriteToy if favoriteToy else 'N/A' }}&#60;/li>\n{% if ownerTwitter %}\n  &#60;li>&#60;strong>Owner&#60;/strong>: &#60;a href=\"{{ ownerTwitter }}\">{{ ownerName }}&#60;/a>&#60;/li>\n{% else %}\n  &#60;li>&#60;strong>Owner&#60;/strong>: {{ ownerName }}&#60;/li>\n{% endif %}\n&#60;/ul></code></pre>\n\n\n\n<p>The last thing we need to tie this all together is to add <code>layout: pets.njk</code> to the front matter in both <code>cats.njk</code> and <code>dogs.njk</code>.</p>\n\n\n\n<p>With Eleventy running, you can now visit an individual pet page and see their profile:</p>\n\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/eArViDCA.png?resize=337%2C527&#038;ssl=1\" alt=\"Screenshot of a cat profile page that starts with the cat's name for the heading, followed by the cat's photo, and a list of the cat's details.\" class=\"wp-image-318728\" width=\"337\" height=\"527\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/eArViDCA.png?w=674&#38;ssl=1 674w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/eArViDCA.png?resize=192%2C300&#38;ssl=1 192w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/eArViDCA.png?resize=655%2C1024&#38;ssl=1 655w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>Fancy Feast for a fancy cat. &#x1f63b;</figcaption></figure>\n\n\n\n<p class=\"explanation\">We’re not going into styling in this article, but you can head over to the <a href=\"https://github.com/5t3ph/meow-vs-bowwow\">sample project repo</a> to see how CSS is included.</p>\n\n\n\n<h3>Let’s deploy this to production!</h3>\n\n\n\n<p>The site is now in a functional state and can be deployed to a hosting environment!&#160;</p>\n\n\n\n<p>As recommended earlier, <a href=\"https://netlify.com\">Netlify</a> is an ideal choice, particularly for a community-driven site, since it can trigger a deployment each time a submission is merged and provide a preview of the submission before sending it for review.</p>\n\n\n\n<p>If you choose Netlify, you will want to push your site to a GitHub repo which you can select during the process of adding a site to your Netlify account. We’ll tell Netlify to serve from the <code>public</code> directory and <code>run npm run build</code> when new changes are merged into the main branch.</p>\n\n\n\n<p class=\"explanation\">The sample site includes a <code>netlify.toml</code> file which has the build details and is automatically detected by Netlify in the repo, removing the need to define the details in the new site flow.</p>\n\n\n\n<p>Once the initial site is added, visit Settings → Build → Deploy in Netlify. Under Deploy contexts, select “Edit” and update the selection for “Deploy Previews” to “Any pull request against your production branch / branch deploy branches.” Now, for any pull request, a preview URL will be generated with the link being made available directly in the pull request review screen.</p>\n\n\n\n<h3>Let’s start accepting submissions!</h3>\n\n\n\n<p>Before we pass Go and collect $100, it’s a good idea to <a href=\"https://css-tricks.com/building-a-community-driven-site-with-eleventy:-preparing-for-contributions\">revisit the first post</a> and make sure we’re prepared to start taking user submissions. For example, we ought to add <a href=\"https://docs.github.com/en/github/building-a-strong-community/creating-a-default-community-health-file\">community health files</a> to the project if they haven’t already been added. Perhaps the most important thing is to <a href=\"https://css-tricks.com/building-a-community-driven-site-with-eleventy-preparing-for-contributions/#6-finalize-repo-settings-and-include-community-health-files\">make sure a branch protection rule is in place</a> for the main branch. This means that your approval is required prior to a pull request being merged.</p>\n\n\n\n<p>Contributors will need to have a GitHub account. While this may seem like a barrier, it removes some of the anonymity. Depending on the sensitivity of the content, or the target audience, this can actually help <em>vet</em> (get it?) contributors.</p>\n\n\n\n<p>Here’s the submission process:</p>\n\n\n\n<ol><li>Fork the website repository.</li><li>Clone the fork to a local machine <em>or</em> use the GitHub web interface for the remaining steps.</li><li>Create a unique .json file within src/pets/cats or src/pets/dogs that contains required data.</li><li>Commit the changes if they’re made on a clone, or save the file if it was edited in the web interface.</li><li>Open a pull request back to the main repository.</li><li>(Optional) Review the Netlify deploy preview to verify information appears as expected.</li><li>Merge the changes.</li><li>Netlify deploys the new pet to the live site.</li></ol>\n\n\n\n<p>A FAQ section is a great place to inform contributors how to create pull request. You can <a href=\"https://stylestage.dev/guidelines/%23how-do-i-create-a-pull-request-pr\">check out an example</a> on Style Stage.</p>\n\n\n\n<h3>Let’s wrap this up…</h3>\n\n\n\n<p>What we have is fully functional site that accepts user contributions as submissions to the project repo. It even auto-deploys those contributions for us when they’re merged!</p>\n\n\n\n<p>There are many more things we can do with a community-driven site built with Eleventy. For example:</p>\n\n\n\n<ul><li>Markdown files can be used for the content of an email newsletter sent with Buttondown. Eleventy allows mixing Markdown with Nunjucks or Liquid. So, for example, you can add a Nunjucks for loop to output the latest five pets as links that output in Markdown syntax and get picked up by Buttondown.</li><li><a href=\"https://dev.to/5t3ph/automated-social-sharing-images-with-puppeteer-11ty-and-netlify-22ln\">Auto-generated social media preview images</a> can be made for social network link previews.</li><li>A<a href=\"https://css-tricks.com/jamstack-comments/\"> commenting system</a> can be added to the mix.</li><li><a href=\"https://www.netlifycms.org/docs/open-authoring/\">Netlify CMS Open Authoring</a> can be used to let folks make submissions with an interface. Check out Chris’ great <a href=\"https://css-tricks.com/netlify-cms-open-authoring/\">rundown of how it works</a>.</li></ul>\n\n\n\n<p>My <a href=\"https://github.com/5t3ph/meow-vs-bowwow\">Meow vs. BowWow</a> example is available for you to fork on GitHub. You can also <a href=\"https://meow-vs-bowwow.netlify.app/\">view the live preview</a> and, yes, you really can submit your pet to this silly site. &#x1f642;</p>\n\n\n\n<p>Best of luck creating a healthy and thriving community!</p>\n\n\n\n<div class=\"wp-block-group article-series\"><div class=\"wp-block-group__inner-container\">\n<h4>Article Series:</h4>\n\n\n\n<ol><li><a href=\"https://css-tricks.com/building-a-community-driven-site-with-eleventy-preparing-for-contributions\"><a href=\"https://css-tricks.com/building-a-community-driven-site-with-eleventy:-preparing-for-contributions\">Preparing for Contributions</a></a></li><li>Building the Site <strong>(You are here!)</strong></li></ol>\n</div></div>\n<hr />\n<p>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/a-community-driven-site-with-eleventy-building-the-site/\">A Community-Driven Site with Eleventy: Building the Site</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>\n<p>You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</p>\n","descriptionType":"html","publishedDate":"Thu, 20 Aug 2020 13:48:44 +0000","feedId":335,"bgimg":"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/YD_O3yWQ.png?ssl=1","linkMd5":"7ef13d790ef9165e26569aa967e77624","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn35@2020_6/2020/08/22/17-22-50-580_a7be8b1bc74a2820.webp","destWidth":2010,"destHeight":1580,"sourceBytes":93620,"destBytes":93620,"author":"Stephanie Eckles","articleImgCdnMap":{"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/YD_O3yWQ.png?ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn35@2020_6/2020/08/22/17-22-50-580_a7be8b1bc74a2820.webp","https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/eArViDCA.png?resize=337%2C527&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn88@2020_4/2020/08/22/17-22-54-564_671906e1007f160a.webp"},"publishedOrCreatedDate":1598116970071},{"createdTime":"2020-08-23 01:22:50","updatedTime":"2020-08-23 01:22:50","title":"A CSS-only, animated, wrapping underline","link":"https://css-tricks.com/?p=319655","description":"\n<p>Nicky Meuleman, <a href=\"https://www.cassie.codes/posts/creating-my-logo-animation/\">inspired by Cassie Evans</a>, details how they built the anchor link hover on their sites. When a link is hovered, another color underline kinda slides in with a gap between the two. Typical <code>text-decoration</code> doesn&#8217;t help here, so multiple backgrounds are used instead, and fortunately, it works with text that breaks across multiple lines as well. </p>\n\n\n\n<span id=\"more-319655\"></span>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_JjGeGar\" src=\"//codepen.io/anon/embed/JjGeGar?height=450&#38;theme-id=1&#38;slug-hash=JjGeGar&#38;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed JjGeGar\" title=\"CodePen Embed JjGeGar\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n<p><a href=\"https://nickymeuleman.netlify.app/blog/css-animated-wrapping-underline\" title=\"Direct link to featured article\">Direct Link to Article</a> &#8212; <a href=\"https://css-tricks.com/a-css-only-animated-wrapping-underline/\">Permalink</a></p><hr />\n<p>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/a-css-only-animated-wrapping-underline/\">A CSS-only, animated, wrapping underline</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>\n<p>You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</p>\n","descriptionType":"html","publishedDate":"Fri, 21 Aug 2020 21:33:05 +0000","feedId":335,"bgimg":"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/link-underline-wrapping-gap-1.png?fit=1200%2C600&ssl=1","linkMd5":"5c53c091c8d2a64984f877e39ce8a7e7","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn60@2020_2/2020/08/22/17-22-54-560_64b481e47f047715.webp","metaImg":"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/link-underline-wrapping-gap-1.png?fit=1200%2C600&ssl=1","destWidth":1200,"destHeight":600,"sourceBytes":7748,"destBytes":7748,"author":"Chris Coyier","publishedOrCreatedDate":1598116970449},{"createdTime":"2020-08-23 01:22:50","updatedTime":"2020-08-23 01:22:50","title":"Let’s Make a Vue-Powered Monthly Calendar","link":"https://css-tricks.com/?p=318886","description":"\n<p>Have you ever seen a calendar on a webpage and thought, <em>how the heck did they did that</em>? For something like that, it might be natural to reach for a plugin, or even an embedded Google Calendar, but it’s actually a lot more straightforward to make one than you might think. Especially when we use the component-driven power of Vue.</p>\n\n\n\n<span id=\"more-318886\"></span>\n\n\n\n<p>I’ve set up a <a href=\"https://codesandbox.io/s/monthly-calendar-vue-wdv9y?file=/src/App.vue\">demo over at CodeSandbox</a> so you can see what we’re aiming for, but it’s always a good idea to spell out what we’re trying to do:</p>\n\n\n\n<ul><li>Create a month view grid that displays the days of the current month</li><li>Display dates from the previous and next months to so the grid is always full</li><li>Indicate the current date</li><li>Show the name of the currently selected month</li><li>Navigate to the previous and next month</li><li>Allow the user to navigate back to the current month with a single click</li></ul>\n\n\n\n<p>Oh, and we’ll build this as a single page application that fetches calendar dates from <a href=\"https://day.js.org/\">Day.js</a>, a super light utility library.</p>\n\n\n\n<h3>Step 1: Start with the basic markup</h3>\n\n\n\n<p class=\"explanation\">We’re going to jump straight into templates. If you’re new to Vue, Sarah’s <a href=\"https://css-tricks.com/intro-to-vue-1-rendering-directives-events/\">introduction series</a> is a nice place to start. It’s also worth noting that I’ll be linking to the Vue 2 docs throughout this post. <a href=\"https://css-tricks.com/vue-3-0-has-entered-release-candidate-stage/\">Vue 3 is currently in beta</a> and the docs for it are subject to change.</p>\n\n\n\n<p>Let’s start with creating a basic template for our calendar. We can outline our markup as three layers where we have:</p>\n\n\n\n<ul><li><strong>A section for the calendar header.</strong> This will show components with the currently selected month and the elements responsible for paginating between months.</li><li><strong>A section for the calendar grid header.</strong> A table header that holds a list containing the days of the week, starting with Monday.</li><li><strong>The calendar grid.</strong> You know, each day in the current month, represented as a square in the grid.</li></ul>\n\n\n\n<p>Let’s write this up in a file called <code>CalendarMonth.vue</code>. This will be our main component.</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&#60;!-- CalendarMonth.vue -->\n&#60;template>\n  &#60;!-- Parent container for the calendar month -->\n  &#60;div class=\"calendar-month\">\n     \n    &#60;!-- The calendar header -->\n    &#60;div class=\"calendar-month-header\"\n      &#60;!-- Month name -->\n      &#60;CalendarDateIndicator />\n      &#60;!-- Pagination -->\n      &#60;CalendarDateSelector />\n    &#60;/div>\n\n    &#60;!-- Calendar grid header -->\n    &#60;CalendarWeekdays />\n\n    &#60;!-- Calendar grid -->\n    &#60;ol class=\"days-grid\">\n      &#60;CalendarMonthDayItem />\n    &#60;/ol>\n  &#60;/div>\n&#60;/template></code></pre>\n\n\n\n<p>Now that we have some markup to work with, let’s go one step further and create required components.</p>\n\n\n\n<h3>Step 2: Header components</h3>\n\n\n\n<p>In our header we have two components:</p>\n\n\n\n<ul><li><code>CalendarDateIndicator</code> shows the currently selected month.</li><li><code>CalendarDateSelector</code> is responsible for paginating between months.</li></ul>\n\n\n\n<p>Let’s start with <code>CalendarDateIndicator</code>. This component will accept a <code>selectedDate</code> property which is a <a href=\"https://day.js.org/\">Day.js</a> object that will format the current date properly and show it to the user.</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&#60;!-- CalendarDateIndicator.vue -->\n&#60;template>\n  &#60;div class=\"calendar-date-indicator\">{{ selectedMonth }}&#60;/div>\n&#60;/template>\n\n&#60;script>\nexport default {\n  props: {\n    selectedDate: {\n      type: Object,\n      required: true\n    }\n  },\n\n  computed: {\n    selectedMonth() {\n      return this.selectedDate.format(\"MMMM YYYY\");\n    }\n  }\n};\n&#60;/script></code></pre>\n\n\n\n<p>That was easy. Let’s go and create the pagination component that lets us navigate between months. It will contain three elements responsible for selecting the previous, current and next month. We’ll add an <a href=\"https://vuejs.org/v2/guide/events.html\">event listener</a> on those that fires the appropriate method when the element is clicked.</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&#60;!-- CalendarDateSelector.vue -->\n&#60;template>\n  &#60;div class=\"calendar-date-selector\">\n    &#60;span @click=\"selectPrevious\">﹤&#60;/span>\n    &#60;span @click=\"selectCurrent\">Today&#60;/span>\n    &#60;span @click=\"selectNext\">﹥&#60;/span>\n  &#60;/div>\n&#60;/template></code></pre>\n\n\n\n<p>Then, in the script section, we will set up two props that the component will accept:</p>\n\n\n\n<ul><li><code>currentDate</code> allows us to come back to current month when the “Today” button is clicked.</li><li><code>selectedDate</code> tells us what month is currently selected.</li></ul>\n\n\n\n<p>We will also define methods responsible for calculating the new selected date based on the currently selected date using the <a href=\"https://day.js.org/docs/en/manipulate/subtract\"><code>subtract</code></a> and <a href=\"https://day.js.org/docs/en/manipulate/add\"><code>add</code></a> methods from Day.js. Each method will also <a href=\"https://vuejs.org/v2/api/%23vm-emit\"><code>$emit</code></a> an event to the parent component with the newly selected month. This allows us to keep the value of selected date in one place — which will be our <code>CalendarMonth.vue</code> component — and pass it down to all child components (i.e. header, calendar grid).</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// CalendarDateSelector.vue\n&#60;script>\nimport dayjs from \"dayjs\";\n\nexport default {\n  name: \"CalendarDateSelector\",\n\n  props: {\n    currentDate: {\n      type: String,\n      required: true\n    },\n\n    selectedDate: {\n      type: Object,\n      required: true\n    }\n  },\n\n  methods: {\n    selectPrevious() {\n      let newSelectedDate = dayjs(this.selectedDate).subtract(1, \"month\");\n      this.$emit(\"dateSelected\", newSelectedDate);\n    },\n\n    selectCurrent() {\n      let newSelectedDate = dayjs(this.currentDate);\n      this.$emit(\"dateSelected\", newSelectedDate);\n    },\n\n    selectNext() {\n      let newSelectedDate = dayjs(this.selectedDate).add(1, \"month\");\n      this.$emit(\"dateSelected\", newSelectedDate);\n    }\n  }\n};\n&#60;/script></code></pre>\n\n\n\n<p>Now, let’s go back to the <code>CalendarMonth.vue</code> component and use our newly created components.</p>\n\n\n\n<p>To use them we first need to import and <a href=\"https://vuejs.org/v2/api/%23components\">register</a> the components, also we need to create the values that will be passed as props to those components:</p>\n\n\n\n<ul><li><code>today</code> properly formats today’s date and is used as a value for the “Today” pagination button.</li><li><code>selectedDate</code> is the  currently selected date (set to today’s date by default).</li></ul>\n\n\n\n<p>The last thing we need to do before we can render the components is create a method that’s responsible for changing the value of <code>selectedDate</code>. This method will be fired when the event from the pagination component is received.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// CalendarMonth.vue\n&#60;script>\nimport dayjs from \"dayjs\";\nimport CalendarDateIndicator from \"./CalendarDateIndicator\";\nimport CalendarDateSelector from \"./CalendarDateSelector\";\n\nexport default {\n  components: {\n    CalendarDateIndicator,\n    CalendarDateSelector\n  },\n\n  data() {\n    return {\n      selectedDate: dayjs(),\n      today: dayjs().format(\"YYYY-MM-DD\")\n    };\n  },\n\n  methods: {\n    selectDate(newSelectedDate) {\n      this.selectedDate = newSelectedDate;\n    }\n  }\n};\n&#60;/script></code></pre>\n\n\n\n<p>Now we have everything we need to render our calendar header:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&#60;!-- CalendarMonth.vue -->\n&#60;template>\n  &#60;div class=\"calendar-month\">\n    &#60;div class=\"calendar-month-header\">\n      &#60;CalendarDateIndicator\n        :selected-date=\"selectedDate\"\n        class=\"calendar-month-header-selected-month\"\n      />\n      &#60;CalendarDateSelector\n        :current-date=\"today\"\n        :selected-date=\"selectedDate\"\n        @dateSelected=\"selectDate\"\n      />\n    &#60;/div>\n  &#60;/div>\n&#60;/template></code></pre>\n\n\n\n<p>This is a good spot to stop and <a href=\"https://codesandbox.io/s/monthly-calendar-vue-step-1-kfchb?file=/src/components/CalendarMonth.vue\">see what we have so far</a>. Our calendar header is doing everything we want, so let’s move forward and create components for our calendar grid.</p>\n\n\n\n<h3>Step 3: Calendar grid components</h3>\n\n\n\n<p>Here, again, we have two components:</p>\n\n\n\n<ul><li><code>CalendarWeekdays</code> shows the names of the weekdays.</li><li><code>CalendarMonthDayItem</code> represents a single day in the calendar.</li></ul>\n\n\n\n<p>The <code>CalendarWeekdays</code> component contains a list that iterates through the weekday labels (using the <a href=\"https://vuejs.org/v2/guide/list.html%23Mapping-an-Array-to-Elements-with-v-for\"><code>v-for</code></a> directive) and renders that label for each weekday. In the script section, we need to define our weekdays and create a <code>computed</code> property to make it available in the template and cache the result to prevent us from having to re-calculate it in the future.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// CalendarWeekdays.vue\n&#60;template>\n  &#60;ol class=\"day-of-week\">\n    &#60;li\n      v-for=\"weekday in weekdays\"\n      :key=\"weekday\"\n    >\n      {{ weekday }}\n    &#60;/li>\n  &#60;/ol>\n&#60;/template>\n \n&#60;script>\nconst WEEKDAYS = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n\nexport default {\n  name: 'CalendarWeekdays',\n\n  computed: {\n    weekdays() {\n      return WEEKDAYS\n    }\n  }\n}\n&#60;/script></code></pre>\n\n\n\n<p>Next is <code>CalendarMonthDayItem</code>. It’s a list item that receives a <code>day</code> property that is an object, and a boolean prop, <code>isToday</code>, that allows us to style the list item to indicate that it’s the current date. We also have one <code>computed</code> property that formats the received day object to our desired <a href=\"https://day.js.org/docs/en/display/format\">date format</a> (<code>D</code>, or the numeric day of the month).</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// CalendarMonthDayItem.vue\n&#60;template>\n  &#60;li\n    class=\"calendar-day\"\n    :class=\"{\n      'calendar-day--not-current': !isCurrentMonth,\n      'calendar-day--today': isToday\n    }\"\n  >\n    &#60;span>{{ label }}&#60;/span>\n  &#60;/li>\n&#60;/template>\n \n&#60;script>\nimport dayjs from \"dayjs\";\n\nexport default {\n  name: \"CalendarMonthDayItem\",\n\n  props: {\n    day: {\n      type: Object,\n      required: true\n    },\n\n    isCurrentMonth: {\n      type: Boolean,\n      default: false\n    },\n\n    isToday: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  computed: {\n    label() {\n      return dayjs(this.day.date).format(\"D\");\n    }\n  }\n};\n&#60;/script></code></pre>\n\n\n\n<p>OK, now that we have these two components, let’s see how we can add them to our <code>CalendarMonth</code> component.</p>\n\n\n\n<p>We first need to import and <a href=\"https://vuejs.org/v2/api/%23components\">register</a> them. We also need to create a <code>computed</code> property that will return an array of objects representing our days. Each day contains a <code>date</code> property and <code>isCurrentMonth</code> property.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// CalendarMonth.vue\n&#60;script>\nimport dayjs from \"dayjs\";\nimport CalendarMonthDayItem from \"./CalendarMonthDayItem\";\nimport CalendarWeekdays from \"./CalendarWeekdays\";\n \nexport default {\n  name: \"CalendarMonth\",\n\n  components: {\n    // ...\n    CalendarMonthDayItem,\n    CalendarWeekdays\n  },\n\n  computed: {\n    days() {\n      return [\n        { date: \"2020-06-29\", isCurrentMonth: false },\n        { date: \"2020-06-30\", isCurrentMonth: false },\n        { date: \"2020-07-01\", isCurrentMonth: true },\n        { date: \"2020-07-02\", isCurrentMonth: true },\n        // ...\n        { date: \"2020-07-31\", isCurrentMonth: true },\n        { date: \"2020-08-01\", isCurrentMonth: false },\n        { date: \"2020-08-02\", isCurrentMonth: false }\n      ];\n    }\n  }\n};\n&#60;/script></code></pre>\n\n\n\n<p>Then, in the template, we can render our components. Again, we use the <code>v-for</code> directive to render the required number of day elements.</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&#60;!-- CalendarMonth.vue -->\n&#60;template>\n  &#60;div class=\"calendar-month\">\n    &#60;div class=\"calendar-month-header\">\n      // ...\n    &#60;/div>\n\n    &#60;CalendarWeekdays/>\n\n    &#60;ol class=\"days-grid\">\n      &#60;CalendarMonthDayItem\n        v-for=\"day in days\"\n        :key=\"day.date\"\n        :day=\"day\"\n        :is-today=\"day.date === today\"\n      />\n    &#60;/ol>\n  &#60;/div>\n&#60;/template></code></pre>\n\n\n\n<p>OK, things are starting to look good now. <a href=\"https://codesandbox.io/s/monthly-calendar-vue-step-3-8kpjj?file=/src/components/CalendarMonth.vue\">Have a look</a> at where we are. It looks nice but, as you probably noticed, the template only contains static data at the moment. The month is hardcoded as July and the day numbers are hardcoded as well. We will change that by calculating what date should be shown on a specific month. Let’s dive into the code!</p>\n\n\n\n<h3>Step 4: Setting up current month calendar</h3>\n\n\n\n<p>Let’s think how we can calculate the date that should be shown on a specific month. That’s where <a href=\"https://day.js.org/\">Day.js</a> really comes into play. It provides all the data we need to properly place dates on the correct days of the week for a given month using real calendar data. It allows us to get and set anything from the <a href=\"https://day.js.org/docs/en/get-set/date\">start date of a month</a> to all the <a href=\"https://day.js.org/docs/en/display/format\">date formatting options</a> we need to display the data.</p>\n\n\n\n<p>We will:</p>\n\n\n\n<ul><li>Get the current month</li><li>Calculate where the days should be placed (weekdays)</li><li>Calculate the days for displaying dates from the previous and next months</li><li>Put all of the days together in a single array</li></ul>\n\n\n\n<p>We already have <a href=\"https://day.js.org/\">Day.js</a> imported in our <code>CalendarMonth</code> component. We’re also going to lean on a couple of Day.js plugins for help. <a href=\"https://day.js.org/docs/en/plugin/week-day\">WeekDay</a> helps us set the first day of the week. Some prefer Sunday as the first day of the week. Other prefer Monday. Heck, in some cases, it makes sense to start with Friday. We’re going to start with Monday.</p>\n\n\n\n<p>The <a href=\"https://day.js.org/docs/en/plugin/week-of-year\">WeekOfYear</a> plugin returns the numeric value for the current week out of all weeks in the year. There are 52 weeks in a year, so we’d say that the week starting January 1 is the the first week of the year, and so on.</p>\n\n\n\n<p>Here’s what we put into <code>CalendarMonth.vue</code> to put all of that to use:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// CalendarMonth.vue\n&#60;script>\nimport dayjs from \"dayjs\";\nimport weekday from \"dayjs/plugin/weekday\";\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\n// ...\n \ndayjs.extend(weekday);\ndayjs.extend(weekOfYear);\n// ...</code></pre>\n\n\n\n<p>That was pretty straightforward but now the real fun starts as we will now play with the calendar grid. Let’s stop for a second a think what we really need to do to get that right.</p>\n\n\n\n<p>First, we want the date numbers to fall in the correct weekday columns. For example, July 1, 2020, is on a Wednesday. That’s where the date numbering should start.</p>\n\n\n\n<p>If the first of the month falls on Wednesday, then that means we’ll have empty grid items for Monday and Tuesday in the first week. The last day of the month is July 31, which falls on a Friday. That means Saturday and Sunday will be empty in the last week of the grid. We want to fill those with the trailing and leading dates of the previous and next months, respectively, so that the calendar grid is always full.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/hWx08SWA.png?ssl=1\" alt=\"Calendar grid showing the first two and last two days highlighted in red, indicated they are coming from the previous and next months.\" class=\"wp-image-318887\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/hWx08SWA.png?w=1024&#38;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/hWx08SWA.png?resize=300%2C200&#38;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/hWx08SWA.png?resize=768%2C512&#38;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/hWx08SWA.png?resize=1000%2C666&#38;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h4>Adding dates for the current month</h4>\n\n\n\n<p>To add the days of the current month to the grid, we need to know how many days exist in the current month. We can get that using the <a href=\"https://day.js.org/docs/en/display/days-in-month%23__docusaurus\"><code>daysInMonth</code></a> method provided by Day.js. Let’s create a <code>computed</code> property for that.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// CalendarMonth.vue\ncomputed: {\n  // ...\n  numberOfDaysInMonth() {\n      return dayjs(this.selectedDate).daysInMonth();\n  }\n}</code></pre>\n\n\n\n<p>When we know that, we create an empty array with a length that’s equal to number of days in the current month. Then we <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code>map()</code></a> that array and create a day object for each one. The object we create has an arbitrary structure, so you can add other properties if you need them.</p>\n\n\n\n<p>In this example, though, we need a <code>date</code> property that will be used to check if a particular date is the current day. We’ll also return a <code>isCurrentMonth</code> value that checks whether the date is in the current month or outside of it. If it is outside the current month, we will style those so folks know they are outside the range of the current month.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// CalendarMonth.vue\ncomputed: {\n  // ...\n  currentMonthDays() {\n    return [...Array(this.numberOfDaysInMonth)].map((day, index) => {\n      return {\n        date: dayjs(`${this.year}-${this.month}-${index + 1}`).format(\"YYYY-MM-DD\")\n        isCurrentMonth: true\n      };\n    });\n  },\n}</code></pre>\n\n\n\n<h4>Adding dates from the previous month</h4>\n\n\n\n<p>To get dates from the previous month to display in the current month, we need to check what the weekday of the first day is in selected month. That’s where we can use the <a href=\"https://day.js.org/docs/en/plugin/week-day\">WeekDay</a> plugin for Day.js. Let’s create a helper method for that.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// CalendarMonth.vue\nmethods: {\n  // ...\n  getWeekday(date) {\n    return dayjs(date).weekday();\n  },\n}</code></pre>\n\n\n\n<p>Then, based on that, we need to check which day was the last Monday in the previous month. We need that value to know how many days from the previous month should be visible in the current month view. We can get that by subtracting the weekday value from the first day of the current month. For example, if first day of the month is Wednesday, we need to subtract three days to get last Monday of the previous month. Having that value allows us to create an array of day objects starting from the last Monday of the previous month through the end of that month.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// CalendarMonth.vue\ncomputed: {\n  // ...\n  previousMonthDays() {\n    const firstDayOfTheMonthWeekday = this.getWeekday(this.currentMonthDays[0].date);\n    const previousMonth = dayjs(`${this.year}-${this.month}-01`).subtract(1, \"month\");\n    const previousMonthLastMondayDayOfMonth = dayjs(this.currentMonthDays[0].date).subtract(firstDayOfTheMonthWeekday - 1, \"day\").date();\n\n    // Cover first day of the month being sunday \n    (firstDayOfTheMonthWeekday === 0)\n    const visibleNumberOfDaysFromPreviousMonth = firstDayOfTheMonthWeekday ? firstDayOfTheMonthWeekday - 1 : 6;\n    return [...Array(visibleNumberOfDaysFromPreviousMonth)].map((day, index) = {\n      return {\n        date: dayjs(`${previousMonth.year()}-${previousMonth.month() + 1}-${previousMonthLastMondayDayOfMonth + index}`).format(\"YYYY-MM-DD\"),\n        isCurrentMonth: false\n      };\n    });\n  }\n}</code></pre>\n\n\n\n<h4>Adding dates from the next month</h4>\n\n\n\n<p>Now, let’s do the reverse and calculate which days we need from the next month to fill in the grid for the current month. Fortunately, we can use the same helper we just created for the previous month calculation. The difference is that we will calculate how many days from the next month should be visible by subtracting that weekday numeric value from seven.</p>\n\n\n\n<p>So, for example, if the last day of the month is Saturday, we need to subtract one day from seven to construct an array of dates needed from next month (Sunday).</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// CalendarMonth.vue\ncomputed: {\n  // ...\n  nextMonthDays() {\n    const lastDayOfTheMonthWeekday = this.getWeekday(`${this.year}-${this.month}-${this.currentMonthDays.length}`);\n    const nextMonth = dayjs(`${this.year}-${this.month}-01`).add(1, \"month\");\n    const visibleNumberOfDaysFromNextMonth = lastDayOfTheMonthWeekday ? 7 - lastDayOfTheMonthWeekday : lastDayOfTheMonthWeekday;\n\n    return [...Array(visibleNumberOfDaysFromNextMonth)].map((day, index) => {\n      return {\n        date: dayjs(`${nextMonth.year()}-${nextMonth.month() + 1}-${index + 1}`).format(\"YYYY-MM-DD\"),\n        isCurrentMonth: false\n      };\n    });\n  }\n}</code></pre>\n\n\n\n<p>OK, we know how to create all days we need, so let’s use them and merge all days into a single array of all the days we want to show in the current month, including filler dates from the previous and next months.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// CalendarMonth.vue\ncomputed: {\n  // ...\n  days() {\n    return [\n      ...this.previousMonthDays,\n      ...this.currentMonthDays,\n      ...this.nextMonthDays\n    ];\n  },\n}</code></pre>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>&#160;<em>Voilà</em>, there we have it! Check out the <a href=\"https://codesandbox.io/s/monthly-calendar-vue-wdv9y?file=/src/components/CalendarMonth.vue\">final demo</a> to see everything put together.</p>\n\n\n\n<iframe src=\"https://codesandbox.io/embed/monthly-calendar-vue-wdv9y?fontsize=14&#38;hidenavigation=1&#38;theme=dark\" style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\" title=\"Monthly Calendar - Vue\" allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\" sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"></iframe>\n\n\n\n<p></p>\n<hr />\n<p>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/lets-make-a-vue-powered-monthly-calendar/\">Let&#8217;s Make a Vue-Powered Monthly Calendar</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>\n<p>You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</p>\n","descriptionType":"html","publishedDate":"Fri, 21 Aug 2020 14:13:42 +0000","feedId":335,"bgimg":"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/hWx08SWA.png?ssl=1","linkMd5":"dcc0b58e86974399d64052e6f014bf52","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn40@2020_3/2020/08/22/17-22-50-597_3feddb002e044e46.webp","destWidth":1024,"destHeight":682,"sourceBytes":7656,"destBytes":7656,"author":"Mateusz Rybczonek","articleImgCdnMap":{"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/hWx08SWA.png?ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn40@2020_3/2020/08/22/17-22-50-597_3feddb002e044e46.webp"},"publishedOrCreatedDate":1598116970068},{"createdTime":"2020-08-23 01:22:50","updatedTime":"2020-08-23 01:22:50","title":"Optimize Images with a GitHub Action","link":"https://css-tricks.com/?p=319488","description":"\n<p>I was playing with <a href=\"https://github.com/features/actions\">GitHub Actions</a> the other day. Such a nice tool! Short story: you can have it run code for you, like run your build processes, tests, and deployments. But it&#8217;s just configuration files that can run whatever you need. There is <a href=\"https://github.com/marketplace\">a whole marketplace</a> of Actions wanting to do work for you. </p>\n\n\n\n<p>What I wanted to do was run code to do image optimization. That way I never have to think about it. Any image in the repo has been optimized.</p>\n\n\n\n<span id=\"more-319488\"></span>\n\n\n\n<p>There is an action for this already, Calibre&#8217;s <a href=\"https://github.com/calibreapp/image-actions\">image-actions</a>, which we&#8217;ll leverage here. You&#8217;ll also need to ensure Actions is enabled for the repo. I know in my main organization we only flip on Actions on a per-repo basis, which is one of the options.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/github-actions-branch.png?resize=1024%2C731&#038;ssl=1\" alt=\"\" class=\"wp-image-319530\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/github-actions-branch.png?resize=1024%2C731&#38;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/github-actions-branch.png?resize=300%2C214&#38;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/github-actions-branch.png?resize=768%2C548&#38;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/github-actions-branch.png?resize=1536%2C1097&#38;ssl=1 1536w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/github-actions-branch.png?resize=2048%2C1463&#38;ssl=1 2048w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/github-actions-branch.png?resize=1000%2C714&#38;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Then you make a file at <code>./github/workflows/optimize-images.yml</code>. That&#8217;s where you can configure this action. All your actions can have separate files, if you want them to. I made this a separate file because (1) it only works with &#8220;pushes to pull requests,&#8221; so if you have other actions that run on different triggers, they won&#8217;t mix nicely, and (2) That&#8217;s what is in their docs and looks like the suggested usage.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.06.48-AM.png?resize=1024%2C549&#038;ssl=1\" alt=\"\" class=\"wp-image-319491\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.06.48-AM.png?resize=1024%2C549&#38;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.06.48-AM.png?resize=300%2C161&#38;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.06.48-AM.png?resize=768%2C412&#38;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.06.48-AM.png?resize=1536%2C824&#38;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.06.48-AM.png?resize=2048%2C1099&#38;ssl=1 2048w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.06.48-AM.png?resize=1000%2C536&#38;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<pre rel=\"optimize-images.yml\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">name: Optimize images\non: pull_request\njobs:\n  build:\n    name: calibreapp/image-actions\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout Repo\n        uses: actions/checkout@master\n\n      - name: Compress Images\n        uses: calibreapp/image-actions@master\n        with:\n          githubToken: ${{ secrets.GITHUB_TOKEN }}</code></pre>\n\n\n\n<p>Now if you make a pull request, you&#8217;ll see it run:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.15-AM.png?resize=1024%2C827&#038;ssl=1\" alt=\"\" class=\"wp-image-319493\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.15-AM.png?resize=1024%2C827&#38;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.15-AM.png?resize=300%2C242&#38;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.15-AM.png?resize=768%2C620&#38;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.15-AM.png?resize=1536%2C1240&#38;ssl=1 1536w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.15-AM.png?resize=1000%2C807&#38;ssl=1 1000w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.15-AM.png?w=2044&#38;ssl=1 2044w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>That successful run then leaves a comment on the pull request saying what it was able to optimize:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.56.07-AM.png?resize=1024%2C331&#038;ssl=1\" alt=\"\" class=\"wp-image-319495\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.56.07-AM.png?resize=1024%2C331&#38;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.56.07-AM.png?resize=300%2C97&#38;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.56.07-AM.png?resize=768%2C248&#38;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.56.07-AM.png?resize=1000%2C323&#38;ssl=1 1000w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.56.07-AM.png?w=1528&#38;ssl=1 1528w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>It will literally re-commit those files back to the pull request as well, so if you&#8217;re going to stay on the pull request and keep working, you&#8217;ll need to push again before you can push to get the optimized images.</p>\n\n\n\n<p>I can look at that automatic commit and see the difference:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.30-AM.png?ssl=1\" alt=\"\" class=\"wp-image-319494\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.30-AM.png?w=1004&#38;ssl=1 1004w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.30-AM.png?resize=300%2C285&#38;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.30-AM.png?resize=768%2C730&#38;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.30-AM.png?resize=1000%2C950&#38;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>The commit preview in Git Tower.</figcaption></figure>\n\n\n\n<p>How I can merge the PR knowing all is well:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.10.44-AM.png?resize=1024%2C485&#038;ssl=1\" alt=\"\" class=\"wp-image-319496\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.10.44-AM.png?resize=1024%2C485&#38;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.10.44-AM.png?resize=300%2C142&#38;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.10.44-AM.png?resize=768%2C364&#38;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.10.44-AM.png?resize=1000%2C474&#38;ssl=1 1000w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.10.44-AM.png?w=1524&#38;ssl=1 1524w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Pretty cool. Is optimizing your images locally particularly hard? No. Is never having to think about it again better? Yeah. You&#8217;re taking on a smidge of technical debt here, but reducing it elsewhere, which is a very fair trade, at least in my book.</p>\n<hr />\n<p>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/optimize-images-with-a-github-action/\">Optimize Images with a GitHub Action</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>\n<p>You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</p>\n","descriptionType":"html","publishedDate":"Thu, 20 Aug 2020 21:56:06 +0000","feedId":335,"bgimg":"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/github-actions-branch.png?resize=1024%2C731&ssl=1","linkMd5":"d17b7d73d097d68cde59ddddaee0aa60","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn44@2020_5/2020/08/22/17-22-50-741_bf27f18c0e578d89.webp","destWidth":1024,"destHeight":731,"sourceBytes":46818,"destBytes":46818,"author":"Chris Coyier","articleImgCdnMap":{"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/github-actions-branch.png?resize=1024%2C731&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn44@2020_5/2020/08/22/17-22-50-741_bf27f18c0e578d89.webp","https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.06.48-AM.png?resize=1024%2C549&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn24@2020_5/2020/08/22/17-22-54-601_c1e3d671c7380366.webp","https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.15-AM.png?resize=1024%2C827&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn71@2020_4/2020/08/22/17-22-54-714_f8e40c8285731828.webp","https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.56.07-AM.png?resize=1024%2C331&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn63@2020_6/2020/08/22/17-22-54-550_888c5b28d56087f3.webp","https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.30-AM.png?ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn31@2020_6/2020/08/22/17-22-54-573_fc4fd3e02483bf13.webp","https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.10.44-AM.png?resize=1024%2C485&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn91@2020_4/2020/08/22/17-22-54-570_341bb0b74ca8dfba.webp"},"publishedOrCreatedDate":1598116970068},{"createdTime":"2020-08-23 01:22:50","updatedTime":"2020-08-23 01:22:50","title":"Offering Options for mailto: and tel: Links","link":"https://css-tricks.com/?p=319511","description":"\n<p>I generally like <code>mailto:</code> links. But I feel like I can smell a <code>mailto:</code> link without even inspecting or clicking it, like some kind of incredibly useless superpower. I know that if I&#8217;ve got my default mail client set, clicking that link will do what I want it to do, and if I want, I can right-click and the browser will give me a &#8220;Copy email address&#8221; option to grab it cleanly. </p>\n\n\n\n<span id=\"more-319511\"></span>\n\n\n\n<p>That&#8217;s cool and all, but Adam Silver and Amy Hupe recently <a href=\"https://adamsilver.io/articles/the-trouble-with-mailto-email-links-and-what-to-do-instead/?ref=sidebar\">enumerated the problems</a> with how these links behave:</p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-large\"><p>Firstly, mailto links make it hard to copy the address, for example if you want to share the email address with someone else.</p><p>Secondly, some users use more than one mail app, and the link just uses whichever has been setup as the default, without giving them the option to use the other.</p><p>And finally, many users don’t have an email application set up, which means the link can take them to a dead end or down a rabbit hole.</p></blockquote>\n\n\n\n<p>Their UI experimentation ended up using a <code>mailto:</code> link, but putting the entire email address as the link which makes it especially obvious what the link does, while also offering a <strong>Copy</strong> button for a little UX bonus.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailto3.png?resize=1024%2C328&#038;ssl=1\" alt=\"\" class=\"wp-image-319513\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailto3.png?resize=1024%2C328&#38;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailto3.png?resize=300%2C96&#38;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailto3.png?resize=768%2C246&#38;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailto3.png?resize=1000%2C320&#38;ssl=1 1000w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailto3.png?w=1362&#38;ssl=1 1362w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p><a href=\"https://css-tricks.com/the-current-state-of-telephone-links/\"><code>tel:</code> links</a> are weirder in the sense that a good many devices looking at them don&#8217;t have any phone-calling functionality. If they do, it&#8217;s a lot like email links in that multiple apps could do that work (e.g. WhatsApp, FaceTime, or the default phone app). </p>\n\n\n\n<p>The hard part of the UX of all this is offering users choice on what they want these special link types to do. That&#8217;s what <a href=\"https://mailgo.dev/\">mailgo</a> is attempting to solve. It&#8217;s a little JavaScript library that offers UI when you click them.</p>\n\n\n\n<div class=\"wp-block-columns\">\n<div class=\"wp-block-column\">\n<figure class=\"wp-block-image size-large\"><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-mail.png?ssl=1\" alt=\"\" class=\"wp-image-319517\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-mail.png?w=800&#38;ssl=1 800w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-mail.png?resize=300%2C300&#38;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-mail.png?resize=150%2C150&#38;ssl=1 150w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-mail.png?resize=768%2C768&#38;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-mail.png?resize=100%2C100&#38;ssl=1 100w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n</div>\n\n\n\n<div class=\"wp-block-column\">\n<figure class=\"wp-block-image size-large\"><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-tel.png?ssl=1\" alt=\"\" class=\"wp-image-319518\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-tel.png?w=800&#38;ssl=1 800w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-tel.png?resize=300%2C300&#38;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-tel.png?resize=150%2C150&#38;ssl=1 150w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-tel.png?resize=768%2C768&#38;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-tel.png?resize=100%2C100&#38;ssl=1 100w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n</div>\n</div>\n\n\n\n<p>Live demo:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_RmeQEr\" src=\"//codepen.io/anon/embed/RmeQEr?height=450&#38;theme-id=1&#38;slug-hash=RmeQEr&#38;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed RmeQEr\" title=\"CodePen Embed RmeQEr\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>I kinda like it. I wouldn&#8217;t mind at all if that popped up when I clicked a link like this, especially since it has that &#8220;open default&#8221; option if I want that anyway. Seems to check all the boxes for the problems these types of special links can have.</p>\n<hr />\n<p>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/offering-options-for-mailto-and-tel-links/\">Offering Options for mailto: and tel: Links</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>\n<p>You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</p>\n","descriptionType":"html","publishedDate":"Fri, 21 Aug 2020 21:33:28 +0000","feedId":335,"bgimg":"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailto3.png?resize=1024%2C328&ssl=1","linkMd5":"c0fab25677b806d29edbe689ee078b3b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn51@2020_6/2020/08/22/17-22-50-600_0db242020b9d825d.webp","destWidth":1024,"destHeight":328,"sourceBytes":13924,"destBytes":13924,"author":"Chris Coyier","articleImgCdnMap":{"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailto3.png?resize=1024%2C328&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn51@2020_6/2020/08/22/17-22-50-600_0db242020b9d825d.webp","https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-mail.png?ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn79@2020_4/2020/08/22/17-22-54-696_f1953de33aa6c2c9.webp","https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-tel.png?ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn100@2020_1/2020/08/22/17-22-54-554_582500572bc8af9e.webp"},"publishedOrCreatedDate":1598116970070},{"createdTime":"2020-08-23 01:22:50","updatedTime":"2020-08-23 01:22:50","title":"Leading-Trim: The Future of Digital Typesetting","link":"https://css-tricks.com/?p=319599","description":"\n<p><code>leading-trim</code> is a suggested new CSS property that lets us remove the extra spacing in every font so that we can more predictably style text. Ethan Wang has <a href=\"https://medium.com/microsoft-design/leading-trim-the-future-of-digital-typesetting-d082d84b202\">written about it</a> — including how Microsoft has advocated for it — and that it’s now part of the <a href=\"https://www.w3.org/TR/2020/WD-css-inline-3-20200618/\">Inline Layout Module Level 3</a> spec.</p>\n\n\n\n<span id=\"more-319599\"></span>\n\n\n\n<p>You’d use it like this:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"2\"><code markup=\"tt\">h1 { \n leading-trim: both;\n text-edge: cap alphabetic;\n}</code></pre>\n\n\n\n<p>This is telling the browser to look at the font file, dig into the OpenType metrics, and effectively do what Ethan demonstrates in this gif:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/1gXfB7QR3LpWwJEuA12drqw.gif?resize=1024%2C364&#038;ssl=1\" alt=\"\" class=\"wp-image-319602\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/1gXfB7QR3LpWwJEuA12drqw.gif?resize=1024%2C364&#38;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/1gXfB7QR3LpWwJEuA12drqw.gif?resize=300%2C107&#38;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/1gXfB7QR3LpWwJEuA12drqw.gif?resize=768%2C273&#38;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/1gXfB7QR3LpWwJEuA12drqw.gif?resize=1536%2C546&#38;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/1gXfB7QR3LpWwJEuA12drqw.gif?resize=1000%2C355&#38;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Why do we want to do this? Well, it would let us space text inside a button properly without any strange hacks and we’d be able to set predictable spacing values between different typefaces too. I’m pretty excited about this spec and the CSS property because it gives us yet one more tool to control the use of typography on the web — like <a href=\"https://css-tricks.com/how-to-tame-line-height-in-css/\">taming line height</a>.</p>\n<p><a href=\"https://medium.com/microsoft-design/leading-trim-the-future-of-digital-typesetting-d082d84b202\" title=\"Direct link to featured article\">Direct Link to Article</a> &#8212; <a href=\"https://css-tricks.com/leading-trim-the-future-of-digital-typesetting/\">Permalink</a></p><hr />\n<p>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/leading-trim-the-future-of-digital-typesetting/\">Leading-Trim: The Future of Digital Typesetting</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>\n<p>You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</p>\n","descriptionType":"html","publishedDate":"Fri, 21 Aug 2020 14:12:54 +0000","feedId":335,"bgimg":"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/1gXfB7QR3LpWwJEuA12drqw.gif?resize=1024%2C364&ssl=1","linkMd5":"0ffa92764d3037863cf6b9e6ca4de4ff","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn32@2020_6/2020/08/22/17-22-53-288_b3890f3068d5c231.webp","destWidth":1024,"destHeight":364,"sourceBytes":1558066,"destBytes":304100,"author":"Robin Rendle","articleImgCdnMap":{"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/1gXfB7QR3LpWwJEuA12drqw.gif?resize=1024%2C364&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn32@2020_6/2020/08/22/17-22-53-288_b3890f3068d5c231.webp"},"publishedOrCreatedDate":1598116970068},{"createdTime":"2020-08-23 01:22:50","updatedTime":"2020-08-23 01:22:50","title":"Never Build a CSV Importer Again","link":"https://css-tricks.com/?p=319544","description":"<p>(This is a <a href='https://css-tricks.com/advertising'>sponsored post</a>.)</p>\n<p>CSV import as a process is broken. Messy customer data, edge cases, encoding formats, error messages, non-technical users: importing data into applications is a huge pain! Ingesting data has been long neglected as a software product experience, leading to customer frustration and wasted engineering cycles rebuilding what those users already expect to have. It’s a major distraction for product teams focused on building core differentiating features.</p>\n\n\n\n<p>We’re going to look at the problems with turning messy spreadsheets into structured product data, how it’s typically addressed, and how Flatfile Portal solves the technical and user experience challenges inherent in CSV import.</p>\n\n\n\n<span id=\"more-319544\"></span>\n\n\n\n<p>If you’re a software developer and have built a CSV parser before, you know how frustrating it is to dedicate valuable engineering sprints to just one component of the customer onboarding. Building an entire CSV importer means addressing user experience and technical edge cases that result from involving humans in a highly technical ETL process. Trying to bake in more advanced functionality such as data normalization, column-matching, or even refining the interface itself results in developers building an entirely new product before the first one is even finished!</p>\n\n\n\n<p>Investing engineering sprints to maintain an outdated data importer, or worse, building a CSV importer from scratch is now a pain of the past. Today, we’d like to show Flatfile Portal, which allows developer and product teams the ability to revamp their entire data import flows not in weeks or months, but in minutes. Did we mention you’d save thousands of dollars in development costs?</p>\n\n\n\n<div class=\"wp-block-buttons\">\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link\" href=\"https://srv.buysellads.com/ads/long/x/T6SQBG4XTTTTTT3OK6RHOTTTTTTP737BZATTTTTTVT7IYUYTTTTTTBDW5JYFC5JGHRSU5R75K7NC4RDC2HNCPZIQ2AUIORZW2MGUCSSM5QJNPGZEKH7FVSIH5VIFPRD2ZRNNP7DQ5MNIBYZL5JWNCSDH67BUVSPXK2ENBAD32HINAGPDP2QLBRDL2HJNNABX567LBKJECVY4BADG5QBC4S32KQBNLSD6HMELB7D35JELBBZ253UU6RDH5VIFPRD2ZRJNOSIWKMUFVGZ35QBCLYSKKWIFPRD2ZRBCPAI2FMNN4BZ5HMNCLSIZ\">Get Started →</a></div>\n</div>\n\n\n\n<h3>Common Problems with CSV Import Experiences</h3>\n\n\n\n<p>Importing CSV data is often one of the first interactions users have with a software application, especially “empty box” products. Unfortunately, there are too many ways that this data import experience can cause customer frustration, or worse, churn.</p>\n\n\n\n<p>For users, an inefficient importer experience will cause them to question the value of the product itself.</p>\n\n\n\n<p><em>“If the app can’t import my data easily now, what&#8217;s going to happen once my data is finally uploaded?”</em><br></p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-common-spreadsheet-import-errors-examples-photo-min.png?resize=1024%2C728&#038;ssl=1\" alt=\"\" class=\"wp-image-319547\" title=\"\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-common-spreadsheet-import-errors-examples-photo-min.png?resize=1024%2C728&#38;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-common-spreadsheet-import-errors-examples-photo-min.png?resize=300%2C213&#38;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-common-spreadsheet-import-errors-examples-photo-min.png?resize=768%2C546&#38;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-common-spreadsheet-import-errors-examples-photo-min.png?resize=1000%2C711&#38;ssl=1 1000w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-common-spreadsheet-import-errors-examples-photo-min.png?w=1200&#38;ssl=1 1200w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Your customers shouldn’t have to battle with these kinds of CSV import errors (Source: <a href=\"https://www.flatfile.io/?utm_source=partner&#38;utm_medium=article&#38;utm_campaign=CSS-tricks_q3-2020-portal-build-a-data-importer&#38;utm_content=article&#38;utm_term=error-image\">Flatfile</a>)<a href=\"https://flatfile.io/blog/flatfiles-data-importer-saves-digsy-up-to-10-hours-per-new-customer\">Digsy.ai </a>shared their experience with handling data imports for their real-estate CRM product prior to integrating Flatfile Portal. Not only was the team strained on resources from building and maintaining a proprietary data importer, but Digsy’s engineers also spent ten or more hours <strong>per new user</strong> cleaning up and formatting incoming customer data. Occasionally, these users would churn, rendering all that work fruitless.</p>\n\n\n\n<p><strong>Thankfully, there&#8217;s an out-the-box CSV importer that can do all this on its own, and with just a few lines of code.</strong></p>\n\n\n\n<h3>Introducing: The elegant import button for web apps</h3>\n\n\n\n<p>We call it <a href=\"https://www.flatfile.io/?utm_source=partner&#38;utm_medium=article&#38;utm_campaign=CSS-tricks_q3-2020-portal-build-a-data-importer&#38;utm_content=article&#38;utm_term=introduction\">Flatfile Portal</a>, and it was born out of frustration from continuously re-building CSV importers, parsers, and uploaders. Flatfile provides data normalization, CSV auto-column matching, and a modernized UI component with a few lines of JavaScript. Customers implement Flatfile in as little as a day: a massive improvement over 3-4 engineering sprints with continuous maintenance tacked on.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-csv-importer-for-web-apps-animation-photo.gif?ssl=1\" alt=\"\" class=\"wp-image-319548\" title=\"\" data-recalc-dims=\"1\"/></figure>\n\n\n\n<p>An animation of an import completed with Flatfile Portal. (Source: <a href=\"https://www.flatfile.io/?utm_source=partner&#38;utm_medium=article&#38;utm_campaign=CSS-tricks_q3-2020-portal-build-a-data-importer&#38;utm_content=article&#38;utm_term=animation\">Flatfile</a>)</p>\n\n\n\n<p>Let’s look at issues associated with traditional CSV import experiences and how Flatfile Portal addresses them.</p>\n\n\n\n<h3>Issue 1: Unclear Guidance</h3>\n\n\n\n<p>Users tend to struggle with CSV imports, and usually have questions before the CSV is even uploaded. Here are questions users may ask during an import:</p>\n\n\n\n<ul><li>Can I upload XLS, XLSX, or XML files?</li><li>What is UTF-8 encoding?</li><li>What if my file is 9.7 MB?</li><li>Is it a problem if my file has special characters in column headers?</li><li>What happens if my spreadsheet columns don’t match the required fields?</li><li>How do I fix my data? Do I need to save a duplicate CSV and upload that file instead?</li></ul>\n\n\n\n<p>Unless your users spend a lot of time exporting and importing spreadsheets, they’re not going to think about these situations until the moment they import their data.</p>\n\n\n\n<p>It shouldn’t be up to your users to read through intimidating data import documentation or watch a 15-minute tutorial on how to import spreadsheets into your product. Surprisingly, developers aren&#8217;t spared either! Although engineers understand the complexities of importing spreadsheets into an advanced system (like <a href=\"https://docs.microsoft.com/en-us/azure/machine-learning/studio/import-data\">Microsoft Azure</a>), there is still an exhaustive amount of content they need to ingest before their first import even happens.<br></p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-data-into-microsoft-azure-training-example-photo-min.png?resize=1024%2C567&#038;ssl=1\" alt=\"\" class=\"wp-image-319549\" title=\"\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-data-into-microsoft-azure-training-example-photo-min.png?resize=1024%2C567&#38;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-data-into-microsoft-azure-training-example-photo-min.png?resize=300%2C166&#38;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-data-into-microsoft-azure-training-example-photo-min.png?resize=768%2C425&#38;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-data-into-microsoft-azure-training-example-photo-min.png?resize=1000%2C553&#38;ssl=1 1000w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-data-into-microsoft-azure-training-example-photo-min.png?w=1200&#38;ssl=1 1200w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>A highly technical product like Microsoft Azure attempts to reasonably present developers with extensive documentation for importing user data. (Source: <a href=\"https://docs.microsoft.com/en-us/azure/machine-learning/studio/import-data\">Microsoft Azure</a>)Your product experience should make it simple to import CSV data without requiring users to become data scientists. The same goes for the technical understanding required to build a CSV importer to begin with, a goal we’ve dedicated reaching with Flatfile Portal.</p>\n\n\n\n<p>Here’s an example of a simplified CSV import solution for a CRM from Portal, created in less than an hour complete with complex data validation.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-csv-importer-for-crm-applications-photo-min.png?resize=1024%2C705&#038;ssl=1\" alt=\"\" class=\"wp-image-319550\" title=\"\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-csv-importer-for-crm-applications-photo-min.png?resize=1024%2C705&#38;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-csv-importer-for-crm-applications-photo-min.png?resize=300%2C207&#38;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-csv-importer-for-crm-applications-photo-min.png?resize=768%2C529&#38;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-csv-importer-for-crm-applications-photo-min.png?resize=1000%2C689&#38;ssl=1 1000w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-csv-importer-for-crm-applications-photo-min.png?w=1111&#38;ssl=1 1111w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>A demo of how Flatfile Portal helps software engineers quickly build a data importer with a few lines of JavaScript. (Source: <a href=\"https://www.flatfile.io/?utm_source=partner&#38;utm_medium=article&#38;utm_campaign=CSS-tricks_q3-2020-portal-build-a-data-importer&#38;utm_content=article&#38;utm_term=config-image\">Flatfile</a>)Portal is standardized, responsive and customizable to specific branding needs. With Flatfile, users will instantly know to:</p>\n\n\n\n<ul><li>Import their data using a CSV or XLS.</li><li>Match their spreadsheet columns in the next step, (if Portal’s 95% fuzzy-matching doesn’t catch it during an import.)</li><li>Click “Continue” to begin their data upload.</li></ul>\n\n\n\n<p>There’s no need to overwhelm the user with warnings about file encoding, incorrect date formats, or what fields are required. Portal solely focuses on importing CSV data from the user and making it a delightful experience during this first data onboarding touchpoint. Mapping columns and validating data will be completed at a later stage once the importer has matched the spreadsheet header columns using human-in-the-loop machine learning.</p>\n\n\n\n<p>Portal’s JS configuration allows data models to be replicated in minutes instead of weeks. The label matches a CSVs column name, and the key is how you’d like the imported data to be saved in the JSON output. Portal also provides powerful validation options to work with any data model requirement and supports regex, data normalization, and server callbacks for those unique validation use-cases.</p>\n\n\n\n<p>Once the data model has been built into the JavaScript config, all that needs to be done is to trigger the importer from within your product, typically by way of a button through a JavaScript call. If your application can execute JavaScript, you can integrate a truly modernized CSV importer, in minutes, and at a fraction of the cost.</p>\n\n\n\n<p>With Flatfile Portal, you and your users won’t have to worry about things like file sizes or encoding formats causing problems during import. Portal helps you manage imported data via the browser or through a server-side process, enabling you to split and upload large CSV and Excel files without dropping imported data.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-multi-file-spreadsheet-imports-photo-min.png?ssl=1\" alt=\"\" class=\"wp-image-319551\" title=\"\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-multi-file-spreadsheet-imports-photo-min.png?w=672&#38;ssl=1 672w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-multi-file-spreadsheet-imports-photo-min.png?resize=300%2C222&#38;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>A Flatfile demo that shows how you can reliably split and import data from multiple customer files. (Source: <a href=\"https://www.flatfile.io/?utm_source=partner&#38;utm_medium=article&#38;utm_campaign=CSS-tricks_q3-2020-portal-build-a-data-importer&#38;utm_content=article&#38;utm_term=multi-file-image\">Flatfile</a>)Flatfile allows users to import CSV data from multiple files intuitively, without dropping data or doing manual splitting. In this demo, users are allowed to import spreadsheets containing three different sets of data. Not only will this help make their files more manageable, but it’ll make it much easier for your product team to ingest and organize customer data on your backend into a consistent structure.</p>\n\n\n\n<p><strong>Customers shouldn’t have to think here.</strong> CSV importers should be designed — error messages and all — to make data onboarding a quick and painless experience for users.</p>\n\n\n\n<h3>Issue 2: Inefficient CSV Column-Mapping</h3>\n\n\n\n<p>The next source of frustration often appears when poor column-matching functionality is in place.</p>\n\n\n\n<p>As an example, let’s say that a <a href=\"https://mailchimp.com/\">Mailchimp</a> user wants to import as many contact details into the email marketing software as they can. After all, it might be useful to have their business title or phone number on hand for future list segmentation.</p>\n\n\n\n<p>However, initializing the import results in some data being skipped or dropped entirely:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-csv-to-mailchimp-matching-photo-min.png?resize=1024%2C494&#038;ssl=1\" alt=\"\" class=\"wp-image-319553\" title=\"\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-csv-to-mailchimp-matching-photo-min.png?resize=1024%2C494&#38;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-csv-to-mailchimp-matching-photo-min.png?resize=300%2C145&#38;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-csv-to-mailchimp-matching-photo-min.png?resize=768%2C371&#38;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-csv-to-mailchimp-matching-photo-min.png?resize=1000%2C483&#38;ssl=1 1000w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-csv-to-mailchimp-matching-photo-min.png?w=1067&#38;ssl=1 1067w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>This is how Mailchimp’s CSV field-mapping system displays unmapped data. (Source: <a href=\"https://mailchimp.com/\">Mailchimp</a>)The app doesn’t recognize three of the four spreadsheet columns in our file. In order to keep the unmatched column data, the user has to go through each field and manually assign a matching label that Mailchimp accepts.</p>\n\n\n\n<p>This is the case with many products that ingest user data, especially CRMs. Not all data will be used during an import, however, the decision to allow custom field submissions, in this case, should be left to the user; rather than removing their data prematurely.</p>\n\n\n\n<p>We know what you’re thinking: “Why not just provide a pre-built spreadsheet template?” However, this is hardly a solution to the problem and will only create more work and frustration for your users. Especially those that bring in thousands of rows of data, or have 40 column headers (yes, we’ve seen it!)</p>\n\n\n\n<p><strong>The problem here lies within the customer data onboarding experience.</strong> Optimizing CSV import features within a product has been a difficult and expensive project to take on for product and engineering teams. That’s where Flatfile’s machine-learning, auto column-matching solution comes in handy.</p>\n\n\n\n<p>Portal automatically learns which incoming fields are matched to which columns from each of your users. This results in a ‘human in the loop’ machine-learning experience that is truly unique to your product’s data model. Portal will automatically match imported CSV columns to your data model based on user inputs and consistently learns over time.</p>\n\n\n\n<p>The importer also caches column assignments regardless of session, so a user that uploads ten CSV files in a day will get most if not all of their columns matched automatically.</p>\n\n\n\n<p><a href=\"https://flatfile.io/blog/flatfileio-helps-clickup-simplify-users-data-import-onboarding-experience\">ClickUp</a>, powered by Flatfile Portal, has leveraged human-in-the-loop for its productivity web app.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-import-csv-to-clickup-photo-min.png?resize=1024%2C561&#038;ssl=1\" alt=\"\" class=\"wp-image-319554\" title=\"\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-import-csv-to-clickup-photo-min.png?resize=1024%2C561&#38;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-import-csv-to-clickup-photo-min.png?resize=300%2C165&#38;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-import-csv-to-clickup-photo-min.png?resize=768%2C421&#38;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-import-csv-to-clickup-photo-min.png?resize=1000%2C548&#38;ssl=1 1000w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-import-csv-to-clickup-photo-min.png?w=1200&#38;ssl=1 1200w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>The main data import modal for users that want to import tasks and projects into ClickUp. (Source: ClickUp, powered by Flatfile Portal)Portal is designed to help users of all technical expertise. Instructions are clearly provided as to what the user can upload, and the fields required. In addition, Portal’s manual data entry feature allows users to preview what sort of data can be imported into productivity software. This helps users preserve as much data as possible, rather than realize too late that the data importer didn’t recognize their columns and dropped the data out without any notice.</p>\n\n\n\n<p>Configuration flags extend Portal’s functionality even further. For example, the allowCustom flag specifies whether you’d like users to add custom columns during the matching step. Using ClickUp as an example, one could add a column for “Billable”? As a boolean field to track whether a task is billable. Allowing users to place columns on the fly results in a shift of control not seen with legacy CSV importers – shaped by a product’s unique data model requirements.</p>\n\n\n\n<p>Portal’s column matching step:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-auto-column-mapping-clickup-column-headers-photo-min.png?resize=1024%2C561&#038;ssl=1\" alt=\"From Slite.com\" class=\"wp-image-319555\" title=\"\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-auto-column-mapping-clickup-column-headers-photo-min.png?resize=1024%2C561&#38;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-auto-column-mapping-clickup-column-headers-photo-min.png?resize=300%2C165&#38;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-auto-column-mapping-clickup-column-headers-photo-min.png?resize=768%2C421&#38;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-auto-column-mapping-clickup-column-headers-photo-min.png?resize=1000%2C548&#38;ssl=1 1000w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-auto-column-mapping-clickup-column-headers-photo-min.png?w=1200&#38;ssl=1 1200w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Portal asks users to identify column names for accurate mapping. (Source: <a href=\"https://clickup.com/\">ClickUp</a>)This step asks users to indicate where their column names live. This way, the importer can more effectively match them with its own or add labels if they’re missing. Some CSV data may only contain values rather than column headers.</p>\n\n\n\n<p>Next, users get a chance to confirm or reject Portal’s column matching suggestions:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-column-matching-spreadsheet-headers-min.png?resize=1024%2C561&#038;ssl=1\" alt=\"From Slite.com\" class=\"wp-image-319556\" title=\"\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-column-matching-spreadsheet-headers-min.png?resize=1024%2C561&#38;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-column-matching-spreadsheet-headers-min.png?resize=300%2C165&#38;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-column-matching-spreadsheet-headers-min.png?resize=768%2C421&#38;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-column-matching-spreadsheet-headers-min.png?resize=1000%2C548&#38;ssl=1 1000w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-column-matching-spreadsheet-headers-min.png?w=1200&#38;ssl=1 1200w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>From Slite.com</figcaption></figure>\n\n\n\n<p>Portal uses a machine-learning column-matching system to automatically map users’ imported data. (Source: <a href=\"https://clickup.com/\">ClickUp</a>)</p>\n\n\n\n<p>On the left, users will find the columns and values they’ve imported. The white tab to the right provides them with automated column matching within ClickUp’s data model. So, “Task” will become “Task name”, “Assignee” will become “Task assignee(s)”, “Status” remains as is and so on.</p>\n\n\n\n<p>If one of the labels in the CSV doesn’t have any match at all, the importer calls attention to it like this:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-column-matching-spreadsheet-validation-photo-min.png?ssl=1\" alt=\"\" class=\"wp-image-319557\" title=\"\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-column-matching-spreadsheet-validation-photo-min.png?w=883&#38;ssl=1 883w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-column-matching-spreadsheet-validation-photo-min.png?resize=300%2C67&#38;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-column-matching-spreadsheet-validation-photo-min.png?resize=768%2C170&#38;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Flatfile Portal calls attention to labels or CSV values that don’t have an exact match in a product. (Source: <a href=\"https://clickup.com/\">ClickUp</a>)</p>\n\n\n\n<p>In this example, the Priority response of “High” was detected. But “Medium” was not. However, there’s no need for the user to guess what the correct replacement should be. The importer provides relevant options like “Urgent”, “Normal” and “Low” to replace it with. No need to re-import their CSV, or change the cell value prior to importing the data.</p>\n\n\n\n<p>Once all spreadsheet mappings have been resolved, the user can easily “Confirm Mapping” or discard the column altogether if it’s proven unnecessary.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-confirm-spreadsheet-header-column-mapping-photo-min.png?resize=1024%2C501&#038;ssl=1\" alt=\"From Slite.com\" class=\"wp-image-319558\" title=\"\" srcset=\"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-confirm-spreadsheet-header-column-mapping-photo-min.png?resize=1024%2C501&#38;ssl=1 1024w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-confirm-spreadsheet-header-column-mapping-photo-min.png?resize=300%2C147&#38;ssl=1 300w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-confirm-spreadsheet-header-column-mapping-photo-min.png?resize=768%2C376&#38;ssl=1 768w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-confirm-spreadsheet-header-column-mapping-photo-min.png?resize=1000%2C489&#38;ssl=1 1000w, https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-confirm-spreadsheet-header-column-mapping-photo-min.png?w=1200&#38;ssl=1 1200w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>From Slite.com</figcaption></figure>\n\n\n\n<p>Users get a chance to confirm CSV labels and clean up their spreadsheet results before importing their data. (Source: <a href=\"https://clickup.com/\">ClickUp</a>)Finally, users get a chance to review any errors detected with their data:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-review-imported-csv-errors-photo-min.png?resize=1024%2C388&#038;ssl=1\" alt=\"\" class=\"wp-image-319559\" title=\"\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-review-imported-csv-errors-photo-min.png?resize=1024%2C388&#38;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-review-imported-csv-errors-photo-min.png?resize=300%2C114&#38;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-review-imported-csv-errors-photo-min.png?resize=768%2C291&#38;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-review-imported-csv-errors-photo-min.png?resize=1000%2C379&#38;ssl=1 1000w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-review-imported-csv-errors-photo-min.png?w=1200&#38;ssl=1 1200w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>From Slite.com</figcaption></figure>\n\n\n\n<p>Validation errors detected in ClickUp’s data import appear in red. (Source: <a href=\"https://clickup.com/\">ClickUp</a>)In this ClickUp example, “Task Name” is triggered with the “isRequired: true” flag which requires users to submit data for that particular column. Whenever any validation fails in Portal, you have full control over how error messages are displayed to the user &#8211; all inline within the importer.</p>\n\n\n\n<p>The “Only show rows with problems” toggle in the left-hand corner makes error rows easy to spot and address quickly.</p>\n\n\n\n<p>This keeps users from having to:</p>\n\n\n\n<ul><li>Review the original CSV file and fix errors before re-importing again.</li><li>Import the data and do the cleanup afterward in the app.</li></ul>\n\n\n\n<p>How do you set up this system of column-mapping and error detection? Portal does most of the work for engineers.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-turn-messy-spreadsheets-into-product-data-photo-min.png?resize=1024%2C638&#038;ssl=1\" alt=\"\" class=\"wp-image-319560\" title=\"\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-turn-messy-spreadsheets-into-product-data-photo-min.png?resize=1024%2C638&#38;ssl=1 1024w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-turn-messy-spreadsheets-into-product-data-photo-min.png?resize=300%2C187&#38;ssl=1 300w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-turn-messy-spreadsheets-into-product-data-photo-min.png?resize=768%2C479&#38;ssl=1 768w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-turn-messy-spreadsheets-into-product-data-photo-min.png?resize=1000%2C623&#38;ssl=1 1000w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-turn-messy-spreadsheets-into-product-data-photo-min.png?w=1200&#38;ssl=1 1200w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>From Slite.com</figcaption></figure>\n\n\n\n<p>There’s no need to build a custom data importer with Flatfile Portal. (Source: <a href=\"https://www.flatfile.io/?utm_source=partner&#38;utm_medium=article&#38;utm_campaign=CSS-tricks_q3-2020-portal-build-a-data-importer&#38;utm_content=article&#38;utm_term=green-image\">Flatfile</a>)Portal is configured via a JavaScript code snippet. Any labels, keys, or validation rules specified in this code will be reflected on the customer-facing importer. This allows for complex validation on things like phone numbers or normalizing multiple date formats:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-demo-javascript-configuration-importer-photo-min.png?ssl=1\" alt=\"\" class=\"wp-image-319561\" title=\"\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-demo-javascript-configuration-importer-photo-min.png?w=1200&#38;ssl=1 1200w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-demo-javascript-configuration-importer-photo-min.png?resize=300%2C165&#38;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-demo-javascript-configuration-importer-photo-min.png?resize=1024%2C561&#38;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-demo-javascript-configuration-importer-photo-min.png?resize=768%2C421&#38;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-demo-javascript-configuration-importer-photo-min.png?resize=1000%2C548&#38;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>This Portal demo provides the pre-written JavaScript code on the left and a sample of the importer output on the right.Flatfile Portal is truly a turn-key CSV importer built for SaaS applications. The critical part to integrating Portal is configuring the JS snippet to your product’s required data model. In other words, tell Portal what data needs to upload from users, what is the correct value, and whether you’d like them to add their own custom data.</p>\n\n\n\n<p>Here’s a JS snippet you might use to customize Portal for a basic contact list:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img src=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-define-config-schema-json-photo-min.png?ssl=1\" alt=\"\" class=\"wp-image-319562\" title=\"\" srcset=\"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-define-config-schema-json-photo-min.png?w=673&#38;ssl=1 673w, https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-define-config-schema-json-photo-min.png?resize=300%2C173&#38;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>An example from Flatfile on how to configure the JavaScript with your own keys and labels for a basic contact list import. (Source: <a href=\"https://www.flatfile.io/?utm_source=partner&#38;utm_medium=article&#38;utm_campaign=CSS-tricks_q3-2020-portal-build-a-data-importer&#38;utm_content=article&#38;utm_term=fields-image\">Flatfile</a>)You can then use validators to set strict rules for what can appear in the corresponding fields:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-validators-regex-photo-min.png?ssl=1\" alt=\"\" class=\"wp-image-319563\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-validators-regex-photo-min.png?w=670&#38;ssl=1 670w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-validators-regex-photo-min.png?resize=300%2C126&#38;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h3>To recap:</h3>\n\n\n\n<p>It’s not easy building a CSV importer in-house. <a href=\"https://www.flatfile.io/?utm_source=partner&#38;utm_medium=article&#38;utm_campaign=CSS-tricks_q3-2020-portal-build-a-data-importer&#38;utm_content=article&#38;utm_term=recap\">Integrating Flatfile Portal</a> allows you to focus on building differentiating core features unique to your product’s experience, knowing that the CSV import component is taken care of, and optimized.</p>\n\n\n\n<h3>Build a robust data importer with Flatfile Portal</h3>\n\n\n\n<p>One of the reasons we build SaaS products is so customers can effectively manage their businesses without the costly overhead of outsourcing to a third party, or the costly practice of trying to build everything themselves.</p>\n\n\n\n<p>Importing data doesn’t need to be the reason for customer frustration or churn during customer data onboarding. It’s easy to see how users can be frustrated with the inconveniences of common CSV import errors. Take advantage of a tool like Flatfile Portal whose sole product focus is designing faster and more seamless customer data onboarding experiences for your customers, partners, and vendors.</p>\n<p><a href=\"https://srv.buysellads.com/ads/long/x/T6SQBG4XTTTTTT3OK6RHOTTTTTTP737BZATTTTTTVT7IYUYTTTTTTBDW5JYFC5JGHRSU5R75K7NC4RDC2HNCPZIQ2AUIORZW2MGUCSSM5QJNPGZEKH7FVSIH5VIFPRD2ZRNNP7DQ5MNIBYZL5JWNCSDH67BUVSPXK2ENBAD32HINAGPDP2QLBRDL2HJNNABX567LBKJECVY4BADG5QBC4S32KQBNLSD6HMELB7D35JELBBZ253UU6RDH5VIFPRD2ZRJNOSIWKMUFVGZ35QBCLYSKKWIFPRD2ZRBCPAI2FMNN4BZ5HMNCLSIZ\" title=\"Direct link to featured article\">Direct Link to Article</a> &#8212; <a href=\"https://css-tricks.com/never-build-a-csv-importer-again/\">Permalink</a></p><hr />\n<p>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/never-build-a-csv-importer-again/\">Never Build a CSV Importer Again</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>\n<p>You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</p>\n","descriptionType":"html","publishedDate":"Thu, 20 Aug 2020 13:48:37 +0000","feedId":335,"bgimg":"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-common-spreadsheet-import-errors-examples-photo-min.png?resize=1024%2C728&ssl=1","linkMd5":"1f03a81a9cea4bc95784f3ec3f4adb3b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn45@2020_3/2020/08/22/17-22-50-743_0208685620dc1515.webp","destWidth":1024,"destHeight":728,"sourceBytes":67232,"destBytes":67232,"author":"Geoff Graham","articleImgCdnMap":{"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-common-spreadsheet-import-errors-examples-photo-min.png?resize=1024%2C728&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn45@2020_3/2020/08/22/17-22-50-743_0208685620dc1515.webp","https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-csv-importer-for-web-apps-animation-photo.gif?ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn10@2020_1/2020/08/22/17-23-11-869_ab135f8cefa4363a.webp","https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-data-into-microsoft-azure-training-example-photo-min.png?resize=1024%2C567&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn44@2020_3/2020/08/22/17-22-54-706_4354987c96638085.webp","https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-csv-importer-for-crm-applications-photo-min.png?resize=1024%2C705&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn47@2020_1/2020/08/22/17-22-54-725_1d4ceee9479bcad2.webp","https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-multi-file-spreadsheet-imports-photo-min.png?ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn95@2020_2/2020/08/22/17-22-54-548_94e97294528ba369.webp","https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-csv-to-mailchimp-matching-photo-min.png?resize=1024%2C494&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn36@2020_1/2020/08/22/17-22-54-581_46f84cf589b473ec.webp","https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-import-csv-to-clickup-photo-min.png?resize=1024%2C561&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx/cdn83@2020_3/2020/08/22/17-22-54-580_4e7948fd880b4f99.webp","https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-auto-column-mapping-clickup-column-headers-photo-min.png?resize=1024%2C561&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn52@2020_3/2020/08/22/17-22-54-569_82fbe56036aea655.webp","https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-column-matching-spreadsheet-headers-min.png?resize=1024%2C561&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn39@2020_5/2020/08/22/17-22-54-558_27ea6b9667d1455b.webp","https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-column-matching-spreadsheet-validation-photo-min.png?ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn73@2020_5/2020/08/22/17-22-54-704_bc3c5e59a7909d0f.webp","https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-confirm-spreadsheet-header-column-mapping-photo-min.png?resize=1024%2C501&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn28@2020_4/2020/08/22/17-22-54-571_74b7293bc6f559c4.webp","https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-review-imported-csv-errors-photo-min.png?resize=1024%2C388&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn14@2020_6/2020/08/22/17-22-54-633_7f66e0aabf34c1d3.webp","https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-turn-messy-spreadsheets-into-product-data-photo-min.png?resize=1024%2C638&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn2@2020_6/2020/08/22/17-22-54-576_38ceb05f38c1f826.webp","https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-demo-javascript-configuration-importer-photo-min.png?ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn67@2020_4/2020/08/22/17-22-54-581_8c4d73b7554de8e8.webp","https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-define-config-schema-json-photo-min.png?ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn6@2020_5/2020/08/22/17-22-54-701_9aeb47fe6dc62fa0.webp","https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-validators-regex-photo-min.png?ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn19@2020_6/2020/08/22/17-22-54-574_5083165970cdc35d.webp"},"publishedOrCreatedDate":1598116970070}],"record":{"createdTime":"2020-08-23 01:22:50","updatedTime":"2020-08-23 01:22:50","feedId":335,"fetchDate":"Sat, 22 Aug 2020 17:22:50 +0000","fetchMs":20,"handleMs":1451,"totalMs":26056,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"34.201.247.237","hostName":"us-021.herokuapp.com","requestId":"0ce936f5698b4224ae8a0fb7d8489765_335","contentType":"text/xml; charset=UTF-8","totalBytes":5354266,"bgimgsTotal":8,"bgimgsGithubTotal":8,"articlesImgsTotal":29,"articlesImgsGithubTotal":29,"successGithubMap":{"myreaderx14":1,"myreaderx8":1,"myreaderx15":1,"myreaderx7":1,"myreaderx6":1,"myreaderx16":1,"myreaderx32":1,"myreaderx4":1,"myreaderx10":1,"myreaderx33":1,"myreaderx11":1,"myreaderx3":1,"myreaderx12":1,"myreaderx2":1,"myreaderx13":1,"myreaderx30":1,"myreaderx31":2,"myreaderx18":1,"myreaderx19":1,"myreaderx":1,"myreaderx25":2,"myreaderx27":1,"myreaderx21":1,"myreaderx22":1,"myreaderx23":1,"myreaderx24":1,"myreaderx5oss":2,"myreaderx29":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-16 17:44:26","updatedTime":"2020-08-23 00:48:17","id":335,"name":"CSS-Tricks","url":"http://feeds.feedburner.com/CssTricks","subscriber":null,"website":null,"icon":"https://css-tricks.com/apple-touch-icon.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn77@2020_4/2020/08/22/17-22-49-194_5aa1887ff478518a.png","description":"Tips, Tricks, and Techniques on using Cascading Style Sheets.","weekly":null,"link":"https://css-tricks.com"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":533350,"tmpBodyImgCdnBytes":4820916,"tmpBgImgCdnBytes":0,"extra4":{"start":1598116968969,"total":0,"statList":[{"spend":29,"msg":"获取xml内容"},{"spend":1451,"msg":"解释文章"},{"spend":1011,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":20556,"msg":"正文链接上传到cdn"}]},"extra5":29,"extra6":29,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-032.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-018.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe66.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-011.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-036.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe62.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-003.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/hWx08SWA.png?ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":682,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn40@2020_3/2020/08/22/17-22-50-597_3feddb002e044e46.webp","sourceBytes":7656,"destBytes":7656,"feedId":335,"totalSpendMs":848,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:50","host":"us-001.herokuapp.com","referer":"https://css-tricks.com/?p=318886","linkMd5ListStr":"dcc0b58e86974399d64052e6f014bf52,dcc0b58e86974399d64052e6f014bf52","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.5 KB","destSize":"7.5 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailto3.png?resize=1024%2C328&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":328,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn51@2020_6/2020/08/22/17-22-50-600_0db242020b9d825d.webp","sourceBytes":13924,"destBytes":13924,"feedId":335,"totalSpendMs":1021,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:50","host":"us-040.herokuapp.com","referer":"https://css-tricks.com/?p=319511","linkMd5ListStr":"c0fab25677b806d29edbe689ee078b3b,c0fab25677b806d29edbe689ee078b3b","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.6 KB","destSize":"13.6 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/YD_O3yWQ.png?ssl=1","sourceStatusCode":200,"destWidth":2010,"destHeight":1580,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn35@2020_6/2020/08/22/17-22-50-580_a7be8b1bc74a2820.webp","sourceBytes":93620,"destBytes":93620,"feedId":335,"totalSpendMs":1114,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:50","host":"us-008.herokuapp.com","referer":"https://css-tricks.com/?p=318724","linkMd5ListStr":"7ef13d790ef9165e26569aa967e77624,7ef13d790ef9165e26569aa967e77624","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"91.4 KB","destSize":"91.4 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/github-actions-branch.png?resize=1024%2C731&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":731,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn44@2020_5/2020/08/22/17-22-50-741_bf27f18c0e578d89.webp","sourceBytes":46818,"destBytes":46818,"feedId":335,"totalSpendMs":1298,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:50","host":"europe-56.herokuapp.com","referer":"https://css-tricks.com/?p=319488","linkMd5ListStr":"d17b7d73d097d68cde59ddddaee0aa60,d17b7d73d097d68cde59ddddaee0aa60","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.7 KB","destSize":"45.7 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-common-spreadsheet-import-errors-examples-photo-min.png?resize=1024%2C728&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":728,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn45@2020_3/2020/08/22/17-22-50-743_0208685620dc1515.webp","sourceBytes":67232,"destBytes":67232,"feedId":335,"totalSpendMs":1406,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:50","host":"europe-57.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b,1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65.7 KB","destSize":"65.7 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/1gXfB7QR3LpWwJEuA12drqw.gif?resize=1024%2C364&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":364,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn32@2020_6/2020/08/22/17-22-53-288_b3890f3068d5c231.webp","sourceBytes":1558066,"destBytes":304100,"targetWebpQuality":75,"feedId":335,"totalSpendMs":3943,"convertSpendMs":2667,"createdTime":"2020-08-23 01:22:50","host":"us-015.herokuapp.com","referer":"https://css-tricks.com/?p=319599","linkMd5ListStr":"0ffa92764d3037863cf6b9e6ca4de4ff,0ffa92764d3037863cf6b9e6ca4de4ff","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.5 MB","destSize":"297 KB","compressRate":"19.5%"},{"code":1,"isDone":false,"source":"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/link-underline-wrapping-gap-1.png?fit=1200%2C600&ssl=1","sourceStatusCode":200,"destWidth":1200,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn60@2020_2/2020/08/22/17-22-54-560_64b481e47f047715.webp","sourceBytes":7748,"destBytes":7748,"feedId":335,"totalSpendMs":819,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-026.herokuapp.com","referer":"https://css-tricks.com/?p=319655","linkMd5ListStr":"5c53c091c8d2a64984f877e39ce8a7e7","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.6 KB","destSize":"7.6 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-tel.png?ssl=1","sourceStatusCode":200,"destWidth":800,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn100@2020_1/2020/08/22/17-22-54-554_582500572bc8af9e.webp","sourceBytes":12330,"destBytes":12330,"feedId":335,"totalSpendMs":827,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-55.herokuapp.com","referer":"https://css-tricks.com/?p=319511","linkMd5ListStr":"c0fab25677b806d29edbe689ee078b3b","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12 KB","destSize":"12 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.56.07-AM.png?resize=1024%2C331&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":331,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn63@2020_6/2020/08/22/17-22-54-550_888c5b28d56087f3.webp","sourceBytes":15798,"destBytes":15798,"feedId":335,"totalSpendMs":873,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-018.herokuapp.com","referer":"https://css-tricks.com/?p=319488","linkMd5ListStr":"d17b7d73d097d68cde59ddddaee0aa60","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.4 KB","destSize":"15.4 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-validators-regex-photo-min.png?ssl=1","sourceStatusCode":200,"destWidth":670,"destHeight":281,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn19@2020_6/2020/08/22/17-22-54-574_5083165970cdc35d.webp","sourceBytes":8636,"destBytes":8636,"feedId":335,"totalSpendMs":889,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-039.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.4 KB","destSize":"8.4 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/eArViDCA.png?resize=337%2C527&ssl=1","sourceStatusCode":200,"destWidth":337,"destHeight":527,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn88@2020_4/2020/08/22/17-22-54-564_671906e1007f160a.webp","sourceBytes":14680,"destBytes":14680,"feedId":335,"totalSpendMs":900,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-036.herokuapp.com","referer":"https://css-tricks.com/?p=318724","linkMd5ListStr":"7ef13d790ef9165e26569aa967e77624","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.3 KB","destSize":"14.3 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-turn-messy-spreadsheets-into-product-data-photo-min.png?resize=1024%2C638&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":638,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn2@2020_6/2020/08/22/17-22-54-576_38ceb05f38c1f826.webp","sourceBytes":24150,"destBytes":24150,"feedId":335,"totalSpendMs":906,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-006.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.6 KB","destSize":"23.6 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-import-csv-to-clickup-photo-min.png?resize=1024%2C561&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":561,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn83@2020_3/2020/08/22/17-22-54-580_4e7948fd880b4f99.webp","sourceBytes":18880,"destBytes":18880,"feedId":335,"totalSpendMs":910,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-53.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.4 KB","destSize":"18.4 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.06.48-AM.png?resize=1024%2C549&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":549,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn24@2020_5/2020/08/22/17-22-54-601_c1e3d671c7380366.webp","sourceBytes":48794,"destBytes":40260,"targetWebpQuality":75,"feedId":335,"totalSpendMs":938,"convertSpendMs":30,"createdTime":"2020-08-23 01:22:54","host":"us-032.herokuapp.com","referer":"https://css-tricks.com/?p=319488","linkMd5ListStr":"d17b7d73d097d68cde59ddddaee0aa60","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.7 KB","destSize":"39.3 KB","compressRate":"82.5%"},{"code":1,"isDone":false,"source":"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-column-matching-spreadsheet-headers-min.png?resize=1024%2C561&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":561,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn39@2020_5/2020/08/22/17-22-54-558_27ea6b9667d1455b.webp","sourceBytes":22832,"destBytes":22832,"feedId":335,"totalSpendMs":938,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-003.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.3 KB","destSize":"22.3 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-demo-javascript-configuration-importer-photo-min.png?ssl=1","sourceStatusCode":200,"destWidth":1200,"destHeight":658,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn67@2020_4/2020/08/22/17-22-54-581_8c4d73b7554de8e8.webp","sourceBytes":30014,"destBytes":30014,"feedId":335,"totalSpendMs":921,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-011.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.3 KB","destSize":"29.3 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-9.10.44-AM.png?resize=1024%2C485&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":485,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn91@2020_4/2020/08/22/17-22-54-570_341bb0b74ca8dfba.webp","sourceBytes":28444,"destBytes":28444,"feedId":335,"totalSpendMs":928,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-029.herokuapp.com","referer":"https://css-tricks.com/?p=319488","linkMd5ListStr":"d17b7d73d097d68cde59ddddaee0aa60","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"27.8 KB","destSize":"27.8 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/table-grid-1.png?fit=1200%2C600&ssl=1","sourceStatusCode":200,"destWidth":1200,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn55@2020_2/2020/08/22/17-22-54-566_680f1f4837a7bebd.webp","sourceBytes":46448,"destBytes":46448,"feedId":335,"totalSpendMs":971,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-033.herokuapp.com","referer":"https://css-tricks.com/?p=319408","linkMd5ListStr":"6fa37415141988d382f244fe597b48f1","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.4 KB","destSize":"45.4 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-multi-file-spreadsheet-imports-photo-min.png?ssl=1","sourceStatusCode":200,"destWidth":672,"destHeight":498,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn95@2020_2/2020/08/22/17-22-54-548_94e97294528ba369.webp","sourceBytes":35588,"destBytes":35588,"feedId":335,"totalSpendMs":992,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-022.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.8 KB","destSize":"34.8 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-confirm-spreadsheet-header-column-mapping-photo-min.png?resize=1024%2C501&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":501,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn28@2020_4/2020/08/22/17-22-54-571_74b7293bc6f559c4.webp","sourceBytes":18742,"destBytes":18742,"feedId":335,"totalSpendMs":998,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-025.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.3 KB","destSize":"18.3 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.30-AM.png?ssl=1","sourceStatusCode":200,"destWidth":1004,"destHeight":954,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn31@2020_6/2020/08/22/17-22-54-573_fc4fd3e02483bf13.webp","sourceBytes":56348,"destBytes":56348,"feedId":335,"totalSpendMs":1015,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-017.herokuapp.com","referer":"https://css-tricks.com/?p=319488","linkMd5ListStr":"d17b7d73d097d68cde59ddddaee0aa60","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55 KB","destSize":"55 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-auto-column-mapping-clickup-column-headers-photo-min.png?resize=1024%2C561&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":561,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn52@2020_3/2020/08/22/17-22-54-569_82fbe56036aea655.webp","sourceBytes":11912,"destBytes":11912,"feedId":335,"totalSpendMs":1035,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-52.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"11.6 KB","destSize":"11.6 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-csv-to-mailchimp-matching-photo-min.png?resize=1024%2C494&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":494,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn36@2020_1/2020/08/22/17-22-54-581_46f84cf589b473ec.webp","sourceBytes":27142,"destBytes":27142,"feedId":335,"totalSpendMs":1127,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"us-010.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.5 KB","destSize":"26.5 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-column-matching-spreadsheet-validation-photo-min.png?ssl=1","sourceStatusCode":200,"destWidth":883,"destHeight":196,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn73@2020_5/2020/08/22/17-22-54-704_bc3c5e59a7909d0f.webp","sourceBytes":4712,"destBytes":4712,"feedId":335,"totalSpendMs":1002,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"europe67.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.6 KB","destSize":"4.6 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/mailgo-mail.png?ssl=1","sourceStatusCode":200,"destWidth":800,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn79@2020_4/2020/08/22/17-22-54-696_f1953de33aa6c2c9.webp","sourceBytes":11152,"destBytes":11152,"feedId":335,"totalSpendMs":1114,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"europe-60.herokuapp.com","referer":"https://css-tricks.com/?p=319511","linkMd5ListStr":"c0fab25677b806d29edbe689ee078b3b","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.9 KB","destSize":"10.9 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-define-config-schema-json-photo-min.png?ssl=1","sourceStatusCode":200,"destWidth":673,"destHeight":389,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn6@2020_5/2020/08/22/17-22-54-701_9aeb47fe6dc62fa0.webp","sourceBytes":10106,"destBytes":10106,"feedId":335,"totalSpendMs":1123,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"europe69.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.9 KB","destSize":"9.9 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-clickup-review-imported-csv-errors-photo-min.png?resize=1024%2C388&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":388,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn14@2020_6/2020/08/22/17-22-54-633_7f66e0aabf34c1d3.webp","sourceBytes":19682,"destBytes":19682,"feedId":335,"totalSpendMs":1200,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"europe-56.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.2 KB","destSize":"19.2 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i2.wp.com/css-tricks.com/wp-content/uploads/2020/08/Screen-Shot-2020-08-18-at-8.57.15-AM.png?resize=1024%2C827&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":827,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn71@2020_4/2020/08/22/17-22-54-714_f8e40c8285731828.webp","sourceBytes":73300,"destBytes":73300,"feedId":335,"totalSpendMs":1281,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"europe66.herokuapp.com","referer":"https://css-tricks.com/?p=319488","linkMd5ListStr":"d17b7d73d097d68cde59ddddaee0aa60","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"71.6 KB","destSize":"71.6 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-csv-importer-for-crm-applications-photo-min.png?resize=1024%2C705&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":705,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn47@2020_1/2020/08/22/17-22-54-725_1d4ceee9479bcad2.webp","sourceBytes":34102,"destBytes":34102,"feedId":335,"totalSpendMs":1277,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"europe-59.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.3 KB","destSize":"33.3 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i1.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-io-importing-data-into-microsoft-azure-training-example-photo-min.png?resize=1024%2C567&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":567,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn44@2020_3/2020/08/22/17-22-54-706_4354987c96638085.webp","sourceBytes":47916,"destBytes":47916,"feedId":335,"totalSpendMs":1403,"convertSpendMs":0,"createdTime":"2020-08-23 01:22:54","host":"europe66.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.8 KB","destSize":"46.8 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://i0.wp.com/css-tricks.com/wp-content/uploads/2020/08/flatfile-portal-csv-importer-for-web-apps-animation-photo.gif?ssl=1","sourceStatusCode":200,"destWidth":1280,"destHeight":720,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn10@2020_1/2020/08/22/17-23-11-869_ab135f8cefa4363a.webp","sourceBytes":6378029,"destBytes":4254190,"targetWebpQuality":60,"feedId":335,"totalSpendMs":20386,"convertSpendMs":16995,"createdTime":"2020-08-23 01:22:54","host":"europe62.herokuapp.com","referer":"https://css-tricks.com/?p=319544","linkMd5ListStr":"1f03a81a9cea4bc95784f3ec3f4adb3b","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.1 MB","destSize":"4.1 MB","compressRate":"66.7%"}],"successGithubMap":{"myreaderx14":1,"myreaderx8":1,"myreaderx15":1,"myreaderx7":1,"myreaderx6":1,"myreaderx16":1,"myreaderx32":1,"myreaderx4":1,"myreaderx10":1,"myreaderx33":1,"myreaderx11":1,"myreaderx3":1,"myreaderx12":1,"myreaderx2":1,"myreaderx13":1,"myreaderx30":1,"myreaderx31":2,"myreaderx18":1,"myreaderx19":1,"myreaderx":1,"myreaderx25":2,"myreaderx27":1,"myreaderx21":1,"myreaderx22":1,"myreaderx23":1,"myreaderx24":1,"myreaderx5oss":2,"myreaderx29":1},"failGithubMap":{}}