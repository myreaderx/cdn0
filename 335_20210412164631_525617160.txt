{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-04-13 00:45:04","updatedTime":"2021-04-13 00:45:04","title":"How to Leverage the Fullscreen API… and Style It","link":"https://css-tricks.com/?p=337505","description":"\n<p>Let’s look at the Fullscreen API in JavaScript. It allows you to do a pretty powerful thing: full screening exactly one particular element you want it to. Not only that, but CSS can help as well with a special selector.</p>\n\n\n\n<span id=\"more-337505\"></span>\n\n\n\n<p>Every major browser has built-in fullscreen functionality in the form of maximizing the browser window itself. You press <code>F11</code> or <code>⌃⌘F</code> (<code>WinKey &#x2b06;</code> on PC) and the browser will fill your monitor, going as far as removing UI components (like the window management buttons).</p>\n\n\n\n<p>When you go into fullscreen mode, it maximizes the space for a web page to display, but this isn’t always exactly what you want. More often, you either want to fullscreen <strong>some particular element</strong> of the page, for example, a video or a game. This is where Fullscreen API comes in handy.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2388\" height=\"1668\" src=\"https://css-tricks.com/wp-content/uploads/2021/03/s_D3E079C6B708E0FB90BFAC2DF5BE9C94ADD2D6544983B66791A1F972BA420746_1616097760405_2021-03-1716.03.58.gif\" alt=\"\" class=\"wp-image-337506\"/></figure>\n\n\n\n<p>The Fullscreen API helps achieve something that the browser‘s fullscreen modes won’t be able to, like:</p>\n\n\n\n<ul><li>Fullscreen a specific element of the page and not the whole page.</li><li>Match elements in CSS with the <code>:fullscreen</code> pseudo-class, which checks if a particular element’s fullscreen flag is set.</li><li>Full control over <em>when</em> to enter fullscreen.</li></ul>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2380\" height=\"1662\" src=\"https://css-tricks.com/wp-content/uploads/2021/03/2021-03-31-17.22.04.gif\" alt=\"\" class=\"wp-image-337529\"/></figure>\n\n\n\n<h3 id=\"h-let-s-do-it\">Let’s do it</h3>\n\n\n\n<p>First, decide what element needs to be shown in fullscreen mode. After that, the only thing is to check if that element has the <code>requestFullscreen()</code> method, and then call it on the element.</p>\n\n\n\n<p>Let’s start with a simple <code>&#60;div&#62;</code> element to fullscreen:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&#60;div id=\"fullscreen\">&#60;/div></code></pre>\n\n\n\n<p>First, we’ll select it and check if it has the method. If it does, then we call the <code>requestFullscreen</code> method on it. It’s that simple:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">let fullscreen = document.querySelector(\"#fullscreen\");\n\nif (fullscreen.requestFullscreen) {\n  fullscreen.requestFullscreen();\n}</code></pre>\n\n\n\n<p>But, we want to run this code conditionally and not as soon as somebody lands on the page. We’ll make a button that toggles fullscreen mode.</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&#60;div id=\"fullscreen\">\n  &#60;button id=\"button\">Toggle Fullscreen&#60;/button>\n&#60;/div></code></pre>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">let fullscreen = document.querySelector(\"#fullscreen\");\nlet button = document.querySelector(\"#button\");\n\nbutton.addEventListener(\"click\", () => {\n  if (!document.fullscreenElement) {\n    fullscreen?.requestFullscreen();\n  } else {\n    document.exitFullscreen();\n  }\n});</code></pre>\n\n\n\n<p>Notice how we’re using <code>document.fullscreenElement</code>. If there is an element that has been fullscreen before, then it will return it; if not, it will return <code>null</code>.</p>\n\n\n\n<p>It’s also a good idea to check if fullscreen mode was even enabled in the user’s browser at all. For that, we can use <code>document.fullscreenEnabled</code>. It returns a boolean saying whether or not we can use the Fullscreen API in this particular browser. Fullscreen could be disabled by the user, or the browser might not support it.</p>\n\n\n\n<p>The last method that we will cover is <code>document.exitFullscreen()</code>. A user should always have the ability to exit fullscreen mode by pressing <code>ESC</code> on the keyboard. We could do some sort of custom way to exit fullscreen mode using <code>exitFullscreen</code>. It doesn’t matter what element was fullscreen; it will go back to window mode after calling this method.</p>\n\n\n\n<p>As you can see in the code for our button element, we first check if fullscreen has already been activated. Then, based on that information, we either go to fullscreen mode or we go back to window mode.</p>\n\n\n\n<h3 id=\"h-styling-fullscreen\">Styling fullscreen</h3>\n\n\n\n<p>The cool thing about the Fullscreen API is that we can match a fullscreen element in CSS. That’s exactly what the <code>:fullscreen</code> pseudo-selector is designed to do!</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">#fullscreen:fullscreen {\n  background-color: yellow;\n}</code></pre>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2374\" height=\"1654\" src=\"https://css-tricks.com/wp-content/uploads/2021/03/qvazOKC-Imgur.gif\" alt=\"\" class=\"wp-image-337537\"/></figure>\n\n\n\n<p>As you can see, the <code>#fullscreen</code> div is the only element that gets a yellow background color when the element is in fullscreen mode, and only in fullscreen mode. The catch is that we can’t actually select any element like this; <strong>we can</strong> <strong>only</strong> <strong>select</strong> <strong>the root element tha</strong>t<strong>’s</strong> <strong>in fullscreen mode.</strong> None of the child elements will match.</p>\n\n\n\n<p>In other words, something like <code>#button:fullscreen</code> won’t select a button that is contained within the fullscreen element — that is, unless we want the button to be fullscreen instead of the div.</p>\n\n\n\n<p class=\"is-style-explanation\"><a href=\"https://caniuse.com/mdn-css_selectors_fullscreen\">Some browsers</a> require a prefix for this to work. Firefox uses <code>-moz-full-screen</code> and WebKit-based browsers use <code>-webkit-full-screen</code>.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">#fullscreen:-webkit-full-screen {\n  background-color: yellow;\n}\n\n#fullscreen:-moz-full-screen {\n  background-color: yellow;\n}</code></pre>\n\n\n\n<p>Did you know that when we’re in fullscreen mode that there is a pseudo-element that is rendered right below your fullscreen element? By default that pseudo-element is black. If you want to change the styles of that pseudo-element you can do it like this:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">#fullscreen::backdrop {\n  background-color: skyblue;\n}</code></pre>\n\n\n\n<p>Here’s the final example. Keep in mind that fullscreen mode might not work with embedded Pens, so you will need to view it outside this article.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_xxReQvZ\" src=\"//codepen.io/anon/embed/xxReQvZ?height=550&#38;theme-id=1&#38;slug-hash=xxReQvZ&#38;default-tab=result\" height=\"550\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed xxReQvZ\" title=\"CodePen Embed xxReQvZ\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p></p>\n<hr />\n<p>The post <a rel=\"nofollow\" href=\"https://css-tricks.com/how-to-leverage-the-fullscreen-api-and-style-it/\">How to Leverage the Fullscreen API… and Style It</a> appeared first on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>.</p>\n<p>You can support CSS-Tricks by being an <a href=\"https://css-tricks.com/product/mvp-supporter/\">MVP Supporter</a>.</p>\n","descriptionType":"html","publishedDate":"Mon, 12 Apr 2021 14:42:40 +0000","feedId":335,"bgimg":"https://css-tricks.com/wp-content/uploads/2021/03/s_D3E079C6B708E0FB90BFAC2DF5BE9C94ADD2D6544983B66791A1F972BA420746_1616097760405_2021-03-1716.03.58.gif","linkMd5":"821c94dab9f66ac5d8c83cacf49ed98d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn75@2020_3/2021/04/12/16-45-33-260_cfd327895bb1e275.webp","destWidth":2388,"destHeight":1668,"sourceBytes":2206471,"destBytes":922270,"author":"Evgeny Klimenchenko","articleImgCdnMap":{"https://css-tricks.com/wp-content/uploads/2021/03/s_D3E079C6B708E0FB90BFAC2DF5BE9C94ADD2D6544983B66791A1F972BA420746_1616097760405_2021-03-1716.03.58.gif":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn75@2020_3/2021/04/12/16-45-33-260_cfd327895bb1e275.webp","https://css-tricks.com/wp-content/uploads/2021/03/2021-03-31-17.22.04.gif":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn84@2020_1/2021/04/12/16-45-58-233_97caaef8c94012f4.webp","https://css-tricks.com/wp-content/uploads/2021/03/qvazOKC-Imgur.gif":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn79@2020_3/2021/04/12/16-46-28-643_dae10728d152cebe.webp"},"publishedOrCreatedDate":1618245904334}],"record":{"createdTime":"2021-04-13 00:45:04","updatedTime":"2021-04-13 00:45:04","feedId":335,"fetchDate":"Mon, 12 Apr 2021 16:45:04 +0000","fetchMs":38,"handleMs":345,"totalMs":87011,"newArticles":0,"totalArticles":15,"status":1,"type":0,"ip":"e036c5eb4bd8bdf163b2003facd1fb28","hostName":"us-037*","requestId":"f2fa8760493645138b1f09844d46a02c_335","contentType":"text/xml; charset=UTF-8","totalBytes":1736588,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":3,"articlesImgsGithubTotal":3,"successGithubMap":{"myreaderx15":1,"myreaderx22":1,"myreaderx31":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-16 17:44:26","updatedTime":"2020-09-01 09:29:08","id":335,"name":"CSS-Tricks","url":"http://feeds.feedburner.com/CssTricks","subscriber":null,"website":null,"icon":"https://css-tricks.com/apple-touch-icon.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn71@2020_2/2020/09/01/01-29-08-451_5aa1887ff478518a.png","description":"Tips, Tricks, and Techniques on using Cascading Style Sheets.","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":922270,"tmpBodyImgCdnBytes":814318,"tmpBgImgCdnBytes":0,"extra4":{"start":1618245903926,"total":0,"statList":[{"spend":68,"msg":"获取xml内容"},{"spend":345,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":57146,"msg":"正文链接上传到cdn"}]},"extra5":3,"extra6":3,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://css-tricks.com/wp-content/uploads/2021/03/s_D3E079C6B708E0FB90BFAC2DF5BE9C94ADD2D6544983B66791A1F972BA420746_1616097760405_2021-03-1716.03.58.gif","sourceStatusCode":200,"destWidth":2388,"destHeight":1668,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn75@2020_3/2021/04/12/16-45-33-260_cfd327895bb1e275.webp","sourceBytes":2206471,"destBytes":922270,"targetWebpQuality":75,"feedId":335,"totalSpendMs":29321,"convertSpendMs":28549,"createdTime":"2021-04-13 00:45:04","host":"us-024*","referer":"https://css-tricks.com/?p=337505","linkMd5ListStr":"821c94dab9f66ac5d8c83cacf49ed98d,821c94dab9f66ac5d8c83cacf49ed98d","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.1 MB","destSize":"900.7 KB","compressRate":"41.8%"},{"code":1,"isDone":false,"source":"https://css-tricks.com/wp-content/uploads/2021/03/2021-03-31-17.22.04.gif","sourceStatusCode":200,"destWidth":2380,"destHeight":1662,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn84@2020_1/2021/04/12/16-45-58-233_97caaef8c94012f4.webp","sourceBytes":1041632,"destBytes":336928,"targetWebpQuality":75,"feedId":335,"totalSpendMs":24969,"convertSpendMs":24095,"createdTime":"2021-04-13 00:45:33","host":"europe-25*","referer":"https://css-tricks.com/?p=337505","linkMd5ListStr":"821c94dab9f66ac5d8c83cacf49ed98d","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1,017.2 KB","destSize":"329 KB","compressRate":"32.3%"},{"code":1,"isDone":false,"source":"https://css-tricks.com/wp-content/uploads/2021/03/qvazOKC-Imgur.gif","sourceStatusCode":200,"destWidth":2374,"destHeight":1654,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn79@2020_3/2021/04/12/16-46-28-643_dae10728d152cebe.webp","sourceBytes":1563941,"destBytes":477390,"targetWebpQuality":75,"feedId":335,"totalSpendMs":55236,"convertSpendMs":53225,"createdTime":"2021-04-13 00:45:33","host":"us-012*","referer":"https://css-tricks.com/?p=337505","linkMd5ListStr":"821c94dab9f66ac5d8c83cacf49ed98d","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.5 MB","destSize":"466.2 KB","compressRate":"30.5%"}],"successGithubMap":{"myreaderx15":1,"myreaderx22":1,"myreaderx31":1},"failGithubMap":{}}