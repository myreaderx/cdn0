{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"PHP模块一览及简要说明","link":"https://teddysun.com/?p=504","description":"<div> \n <a href=\"https://teddysun.com/504.html\"><img title=\"PHP模块一览及简要说明\" class=\"aligncenter\" style=\"width:auto;height:auto;\" alt=\"PHP\" src=\"https://teddysun.com/wp-content/uploads/2013/11/php.png\" /></a> \n</div> \n<div> \n <span style=\"font-size:14px;\">PHP 编译完成后，可以通过一个简单的函数 phpinfo() 查看关于 PHP 的所有信息。以下介绍的模块一览，皆全部来自于函数 phpinfo() 的输出信息。</span> \n</div> \n<div> \n <h3> <span style=\"color:red;\">SAPI Modules</span><br /> </h3> \n <p> <span style=\"font-size:14px;\"> 什么是 SAPI？</span><br /> <span style=\"font-size:14px;\"> SAPI 即 Server API, Server Application Programming Interface。</span> </p>\n</div> \n<div> \n <h4> 1、Apache 2.0 Handler(apache2handler)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 用于 Apache 2 的模块，当安装的是 PHP 5 的时候，编译出来的文件名是 libphp5.so；当安装的是 PHP 7 的时候，编译出来的文件名是 libphp7.so。</span><br /> <span style=\"font-size:14px;\"> libphp5.so 或 libphp7.so 通常被安装在 Apache 的安装目录下的 modules 目录。</span><br /> <span style=\"font-size:14px;\"> 编译的时候需指定参数 −−with-apxs2=FILE，比如 −−with-apxs2=/usr/local/apache/bin/apxs</span> </p>\n</div> \n<div> \n <h4> 2、CGI / FastCGI<br /> </h4> \n <p> <span style=\"font-size:14px;\"> CGI，意为 Common Gateway Interface。</span><br /> <span style=\"font-size:14px;\"> 通常编译安装在 PHP 安装目录 bin 下，这个可执行文件名是 php-cgi。</span> </p>\n</div> \n<div> \n <h4> 3、CLI<br /> </h4> \n <p> <span style=\"font-size:14px;\"> CLI，意为 Command Line。命令行模式。</span><br /> <span style=\"font-size:14px;\"> 通常编译安装在 PHP 安装目录 bin 下，这个可执行文件名是 php。</span><br /> <span style=\"font-size:14px;\"> 输入 php -h 显示其用法。</span> </p>\n</div> \n<div> \n <h4> 4、Embed<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 默认不编译安装，除非指定编译参数 −−enable-embed</span><br /> <span style=\"font-size:14px;\"> 该模块允许在 C/C++ 语言中调用 PHP 提供的函数。</span> </p>\n</div> \n<div> \n <h4> 5、FastCGI Process Manager<br /> </h4> \n <p> <span style=\"font-size:14px;\"> FastCGI Process Manager，也就是 FPM，PHP FastCGI 进程的管理器。</span> </p>\n</div> \n<div> \n <h4> 6、litespeed<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 用于 LiteSpeed 的模块，默认不编译。</span><br /> <span style=\"font-size:14px;\"> 通过指定编译参数 −−with-litespeed 安装。 Build PHP as litespeed module</span> </p>\n</div> \n<div> \n <h4> 7、phpdbg<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 从 PHP 5.6 开始，引入了 phpdbg，交互式调试器，用于 Debug PHP 程序，可以在不用修改代码，不影响性能的情况下控制 PHP 的运行环境。</span><br /> <span style=\"font-size:14px;\"> 通常编译安装在 PHP 安装目录 bin 下，这个可执行文件名是 phpdbg。</span><br /> <span style=\"font-size:14px;\"> PHP 5.4 和 5.5 也可以单独安装该模块。</span> </p>\n</div> \n<div>  \n <h3> <span style=\"color:red;\">PHP Modules</span><br /> </h3> \n <p> <span style=\"font-size:14px;\"> PHP 源码自带的扩展模块，根据 PHP 版本的不同略有差别，大致为以下这么 71 个模块。</span> </p>\n</div> \n<div> \n <h4> 1、BC Math<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-bcmath 安装。 Enable bc style precision math functions</span> </p>\n</div> \n<div> \n <h4> 2、Bzip2<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−with-bz2=DIR 安装。 Include BZip2 support</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 libbz2-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 bzip2-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 3、Calendar<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-calendar 安装。 Enable support for calendar conversion</span> </p>\n</div> \n<div> \n <h4> 4、COM and .Net<br /> </h4> \n <p> <span style=\"font-size:14px;\"> Windows 专用扩展。COM 是指 Component Object Model，组件对象模型，是多项微软技术与框架的基础，包括OLE、OLE自动化、ActiveX、COM+、DCOM、Windows shell、DirectX、Windows Runtime。</span> </p>\n</div> \n<div> \n <h4> 5、ctype<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−disable-ctype</span> </p>\n</div> \n<div> \n <h4> 6、cURL<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−with-curl=DIR 安装。 Include cURL support</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 libcurl4-gnutls-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 curl-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 7、Date/Time Support(date)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 日期和时间函数，默认编译安装，不可禁止。</span> </p>\n</div> \n<div> \n <h4> 8、DBA<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-dba 安装。 Build DBA with bundled modules</span><br /> <span style=\"font-size:14px;\"> 该参数会默认自带 3 个参数，−−with-cdb，−−enable-inifile，inifile-flatfile，若要禁止，则需通过参数−−without-cdb=DIR，−−disable-inifile，−−disable-flatfile 实现。</span> </p>\n</div> \n<div> \n <h4> 9、DB-LIB (MS SQL, Sybase)(pdo_dblib)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> Windows 专用扩展。用于连接&nbsp; SQL Server 和 Sybase 数据库的 PDO 驱动扩展。</span> </p>\n</div> \n<div> \n <h4> 10、DOM<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，Document Object Model。编译时可通过下列选项禁用：−−disable-dom</span> </p>\n</div> \n<div> \n <h4> 11、enchant<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−with-enchant=DIR 安装。 Include enchant support. GNU Aspell version 1.1.3 or higher required.</span><br /> <span style=\"font-size:14px;\"> 一般需指定其目录，−−with-enchant=/usr</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 libenchant-dev, libpspell-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 enchant-devel, aspell-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 12、EXIF<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-exif 安装。 Enable EXIF (metadata from images) support</span> </p>\n</div> \n<div> \n <h4> 13、fileinfo<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，fileinfo support。编译时可通过下列选项禁用：−−disable-fileinfo</span><br /> <span style=\"font-size:14px;\"> 注意：在内存比较小的机器上编译此扩展时可能会失败，因此内存加 SWAP 的容量小于 480MB 时就不要安装了。</span> </p>\n</div> \n<div> \n <h4> 14、Filter<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，input filter support。编译时可通过下列选项禁用：−−disable-filter</span><br /> <span style=\"font-size:14px;\"> 另如果要给此扩展指定 PCRE 安装目录的话，则还有以下的编译参数。</span><br /> <span style=\"font-size:14px;\"> −−with-pcre-dir&nbsp; FILTER: pcre install prefix</span> </p>\n</div> \n<div> \n <h4> 15、Firebird driver for PDO(pdo_firebird)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> −−with-interbase=DIR Include Firebird support.&nbsp; DIR is the Firebird base install directory</span><br /> <span style=\"font-size:14px;\"> −−with-pdo-firebird=DIR PDO: Firebird support.&nbsp; DIR is the Firebird base install directory</span> </p>\n</div> \n<div> \n <h4> 16、FTP<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-ftp 安装。Enable FTP support</span><br /> <span style=\"font-size:14px;\"> 安装该扩展还有个参数 −−with-openssl-dir=DIR&nbsp; FTP: openssl install prefix，可不指定，则使用系统自带 openssl 库。</span> </p>\n</div> \n<div> \n <h4> 17、GD imaging(gd)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−with-gd=DIR 安装。Include GD support.&nbsp; DIR is the GD library base install directory BUNDLED</span><br /> <span style=\"font-size:14px;\"> 这是一个打包式的依赖，需要依赖如下安装包。</span><br /> <span style=\"font-size:14px;\"> −−with-webp-dir=DIR(PHP 7.0, 7.1 only)</span><br /> <span style=\"font-size:14px;\"> −−with-jpeg-dir=DIR</span><br /> <span style=\"font-size:14px;\"> −−with-png-dir=DIR</span><br /> <span style=\"font-size:14px;\"> −−with-zlib-dir=DIR</span><br /> <span style=\"font-size:14px;\"> −−with-xpm-dir=DIR</span><br /> <span style=\"font-size:14px;\"> −−with-freetype-dir=DIR</span><br /> <span style=\"font-size:14px;\"> −−enable-gd-native-ttf</span><br /> <span style=\"font-size:14px;\"> −−enable-gd-jis-conv</span> </p>\n</div> \n<div> \n <span style=\"font-size:14px;\">PHP5.4、PHP5.5、PHP5.6 则还有个</span>\n <br /> \n <span style=\"font-size:14px;\"> −−with-vpx-dir=DIR</span> \n</div> \n<div> \n <span style=\"font-size:14px;\">Debian/Ubuntu 需安装 libwebp-dev, libjpeg-dev, libpng-dev, libxpm-dev, libfreetype6-dev, libvpx-dev 依赖包。</span>\n <br /> \n <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 libwebp-devel, libjpeg-devel, libpng-devel, libXpm-devel, freetype-devel, libvpx-devel 依赖包。</span> \n</div> \n<div> \n <h4> 18、GetText<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−with-gettext=DIR 安装。Include GNU gettext support</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 gettext 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 gettext, gettext-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 19、GMP<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−with-gmp=DIR 安装。Include GNU MP support</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 libgmp-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 gmp-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 20、Hash<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−disable-hash&nbsp; Disable hash support</span> </p>\n</div> \n<div> \n <h4> 21、iconv<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−without-iconv=DIR&nbsp; Exclude iconv support</span> </p>\n</div> \n<div> \n <h4> 22、IMAP<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定以下编译参数。</span><br /> <span style=\"font-size:14px;\"> −−with-imap=DIR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Include IMAP support. DIR is the c-client install prefix</span><br /> <span style=\"font-size:14px;\"> −−with-kerberos=DIR&nbsp;&nbsp;&nbsp;&nbsp; IMAP: Include Kerberos support. DIR is the Kerberos install prefix</span><br /> <span style=\"font-size:14px;\"> −−with-imap-ssl=DIR&nbsp;&nbsp;&nbsp;&nbsp; IMAP: Include SSL support. DIR is the OpenSSL install prefix</span><br /> <span style=\"font-size:14px;\"> 编译此选项时，PHP 需指定 libc-client.a 所在目录。</span> </p>\n</div> \n<div> \n <h4> 23、InterBase<br /> </h4> \n <p> <span style=\"font-size:14px;\"> −−with-interbase=DIR Include Firebird support.&nbsp; DIR is the Firebird base install directory</span> </p>\n</div> \n<div> \n <h4> 24、Internationalization(intl)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-intl 安装。 Enable internationalization support</span> </p>\n</div> \n<div> \n <h4> 25、json<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−disable-json&nbsp; Disable JavaScript Object Serialization support</span> </p>\n</div> \n<div> \n <h4> 26、LDAP<br /> </h4> \n <p> <span style=\"font-size:14px;\"> −−with-ldap=DIR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Include LDAP support</span><br /> <span style=\"font-size:14px;\"> −−with-ldap-sasl=DIR&nbsp;&nbsp;&nbsp; LDAP: Include Cyrus SASL support</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 libldap-2.4-2, libldap2-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 openldap, openldap-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 27、libxml<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−disable-libxml&nbsp; Disable LIBXML support</span><br /> <span style=\"font-size:14px;\"> −−with-libxml-dir=DIR&nbsp;&nbsp; LIBXML: libxml2 install prefix</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 libxml2, libxml2-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 libxml2, libxml2-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 28、Multibyte String Functions(mbstring)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-mbstring 安装。 Enable multibyte string support</span><br /> <span style=\"font-size:14px;\"> −−disable-mbregex&nbsp; MBSTRING: Disable multibyte regex support</span><br /> <span style=\"font-size:14px;\"> −−disable-mbregex-backtrack&nbsp; MBSTRING: Disable multibyte regex backtrack check</span><br /> <span style=\"font-size:14px;\"> −−with-libmbfl=DIR&nbsp; MBSTRING: Use external libmbfl.&nbsp; DIR is the libmbfl base install directory BUNDLED</span><br /> <span style=\"font-size:14px;\"> −−with-onig=DIR&nbsp; MBSTRING: Use external oniguruma. DIR is the oniguruma install prefix. If DIR is not set, the bundled oniguruma will be used</span><br /> <span style=\"font-size:14px;\"> libmbfl 对 mbstring 是必要的。libmbfl 被捆绑到了 mbstring。</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 libonig2, libonig-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 oniguruma, oniguruma-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 29、mcrypt<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数&nbsp; −−with-mcrypt=DIR 安装。&nbsp; Include mcrypt support</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 libmcrypt-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需编译安装 libmcrypt 和 mcrypt 。如果安装了 EPEL 的话，则需安装 libmcrypt-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 30、MySQL driver for PDO(pdo_mysql)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> −−with-mysql-sock=SOCKPATH&nbsp; MySQLi/PDO_MYSQL: Location of the MySQL unix socket pointer</span><br /> <span style=\"font-size:14px;\"> 指定系统里安装的 MYSQL 的 mysql.sock 路径。</span><br /> <span style=\"font-size:14px;\"> −−with-pdo-mysql=DIR&nbsp; PDO: MySQL support. DIR is the MySQL base directory</span><br /> <span style=\"font-size:14px;\"> 指定系统里安装的 MYSQL 的基本目录。若未指定，则默认安装 mysqlnd(MySQL native driver)</span> </p>\n</div> \n<div> \n <h4> 31、MySQLi<br /> </h4> \n <p> <span style=\"font-size:14px;\"> −−with-mysqli=FILE&nbsp; Include MySQLi support. FILE is the path to mysql_config</span><br /> <span style=\"font-size:14px;\"> 指定系统里安装的 MYSQL 的目录下的 mysql_config 文件路径。</span> </p>\n</div> \n<div> \n <h4> 32、MySQLnd<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-mysqlnd 安装。 Enable mysqlnd explicitly, will be done implicitly when required by other extensions</span><br /> <span style=\"font-size:14px;\"> 另如果要给此扩展指定 libz 目录的话，则还有以下的编译参数。</span><br /> <span style=\"font-size:14px;\"> −−with-zlib-dir=DIR&nbsp; mysqlnd: Set the path to libz install prefix</span> </p>\n</div> \n<div> \n <h4> 33、OCI8<br /> </h4> \n <p> <span style=\"font-size:14px;\"> −−with-oci8=DIR&nbsp; Include Oracle Database OCI8 support. DIR defaults to $ORACLE_HOME</span><br /> <span style=\"font-size:14px;\"> 系统里安装了 Oracle 数据库的话，则指定为 $ORACLE_HOME；否则需安装 Oracle Instant Client，指定为 /path/to/instant/client/lib</span> </p>\n</div> \n<div> \n <h4> 34、ODBC driver for PDO(pdo_odbc)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> −−with-pdo-odbc=flavour,dir</span><br /> <span style=\"font-size:14px;\"> PDO: Support for ‘flavour’ ODBC driver. </span><br /> <span style=\"font-size:14px;\"> include and lib dirs are looked for under ‘dir’. </span><br /> <span style=\"font-size:14px;\"> ‘flavour’ can be one of:&nbsp; ibm-db2, iODBC, unixODBC, generic</span><br /> <span style=\"font-size:14px;\"> If ‘,dir’ part is omitted, default for the flavour</span><br /> <span style=\"font-size:14px;\"> you have selected will be used. e.g.:</span><br /> <span style=\"font-size:14px;\"> −−with-pdo-odbc=unixODBC</span><br /> <span style=\"font-size:14px;\"> will check for unixODBC under /usr/local. You may attempt to use an otherwise unsupported driver using the “generic” flavour.</span><br /> <span style=\"font-size:14px;\"> The syntax for generic ODBC support is:</span><br /> <span style=\"font-size:14px;\"> −−with-pdo-odbc=generic,dir,libname,ldflags,cflags</span><br /> <span style=\"font-size:14px;\"> When built as ‘shared’ the extension filename is always pdo_odbc.so</span> </p>\n</div> \n<div> \n <h4> 35、ODBC<br /> </h4> \n <p> <span style=\"font-size:14px;\"> ODBC 有很多种，一般使用如下编译参数即可。</span><br /> <span style=\"font-size:14px;\"> −−with-unixODBC=DIR&nbsp; Include unixODBC support /usr/local</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 unixodbc, unixodbc-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 unixODBC, unixODBC-devel 依赖包。</span><br /> <span style=\"font-size:14px;\"> 注意：PHP 默认会去 /usr/local/include 下去找头文件 sqlext.h，所以还要做个软链接。</span><br /> <span style=\"font-size:14px;\"> ln -s /usr/include/sqlext.h /usr/local/include/</span> </p>\n</div> \n<div> \n <h4> 36、OpenSSL<br /> </h4> \n <p> <span style=\"font-size:14px;\"> −−with-openssl=DIR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Include OpenSSL support (requires OpenSSL &gt;= 1.0.1)</span><br /> <span style=\"font-size:14px;\"> −−with-kerberos=DIR&nbsp;&nbsp;&nbsp;&nbsp; OPENSSL: Include Kerberos support</span><br /> <span style=\"font-size:14px;\"> −−with-system-ciphers&nbsp;&nbsp; OPENSSL: Use system default cipher list instead of hardcoded value</span><br /> <span style=\"font-size:14px;\"> PHP 7.1 所需的 openssl 版本是 &gt;= 1.0.1</span><br /> <span style=\"font-size:14px;\"> PHP 7.0 所需的 openssl 版本是 &gt;= 0.9.8</span><br /> <span style=\"font-size:14px;\"> PHP 5.6 所需的 openssl 版本是 &gt;= 0.9.6</span><br /> <span style=\"font-size:14px;\"> PHP 5.5 所需的 openssl 版本是 &gt;= 0.9.6</span><br /> <span style=\"font-size:14px;\"> PHP 5.4 所需的 openssl 版本是 &gt;= 0.9.6</span><br /> <span style=\"font-size:14px;\"> PHP 5.3 所需的 openssl 版本是 &gt;= 0.9.6</span> </p>\n</div> \n<div> \n <h4> 37、Oracle (OCI) driver for PDO(pdo_oci)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> −−with-pdo-oci=DIR&nbsp; PDO: Oracle OCI support. DIR defaults to $ORACLE_HOME.</span><br /> <span style=\"font-size:14px;\"> Use −−with-pdo-oci=instantclient,prefix,version for an Oracle Instant Client SDK.</span><br /> <span style=\"font-size:14px;\"> For example on Linux with 11.2 RPMs use:</span><br /> <span style=\"font-size:14px;\"> −−with-pdo-oci=instantclient,/usr,11.2</span> </p>\n</div> \n<div> \n <h4> 38、pcntl<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-pcntl 安装。 Enable pcntl support (CLI/CGI only)</span> </p>\n</div> \n<div> \n <h4> 39、Perl Compatible Regular Expressions(PCRE)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> −−with-pcre-regex=DIR&nbsp;&nbsp; Include Perl Compatible Regular Expressions support. DIR is the PCRE install prefix BUNDLED</span><br /> <span style=\"font-size:14px;\"> −−with-pcre-jit&nbsp; Enable PCRE JIT functionality</span> </p>\n</div> \n<div> \n <h4> 40、PHP Archive(Phar)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−disable-phar&nbsp; Disable phar support</span> </p>\n</div> \n<div> \n <h4> 41、PHP Data Objects(PDO)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−disable-pdo&nbsp; Disable PHP Data Objects support</span> </p>\n</div> \n<div> \n <h4> 42、Posix<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−disable-posix&nbsp; Disable POSIX-like functions</span> </p>\n</div> \n<div> \n <h4> 43、PostgreSQL driver for PDO(pdo_pgsql)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> −−with-pdo-pgsql=DIR&nbsp; PDO: PostgreSQL support.&nbsp; DIR is the PostgreSQL base install directory or the path to pg_config</span> </p>\n</div> \n<div> \n <h4> 44、PostgreSQL<br /> </h4> \n <p> <span style=\"font-size:14px;\"> −−with-pgsql=DIR&nbsp; Include PostgreSQL support.&nbsp; DIR is the PostgreSQL base install directory or the path to pg_config</span> </p>\n</div> \n<div> \n <h4> 45、Pspell<br /> </h4> \n <p> <span style=\"font-size:14px;\"> −−with-pspell=DIR&nbsp; Include PSPELL support. GNU Aspell version 0.50.0 or higher required</span><br /> <span style=\"font-size:14px;\"> 一般需指定其目录，−−with-pspell=/usr</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 libpspell-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 aspell-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 46、Readline<br /> </h4> \n <p> <span style=\"font-size:14px;\"> −−with-readline=DIR&nbsp; Include readline support (CLI/CGI only)</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 libreadline-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 readline-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 47、Recode<br /> </h4> \n <p> <span style=\"font-size:14px;\"> −−with-recode=DIR&nbsp; nclude recode support</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 librecode-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 recode-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 48、Reflection<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用。</span> </p>\n</div> \n<div> \n <h4> 49、Sessions<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−disable-session&nbsp; Disable session support</span><br /> <span style=\"font-size:14px;\"> 另如果要给此扩展指定 mm 支持的话，则还有以下的编译参数。</span><br /> <span style=\"font-size:14px;\"> −−with-mm=DIR&nbsp; SESSION: Include mm support for session storage</span> </p>\n</div> \n<div> \n <h4> 50、Shared Memory Operations(shmop)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-shmop 安装。 Enable shmop support</span> </p>\n</div> \n<div> \n <h4> 51、SimpleXML<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−disable-simplexml&nbsp; Disable SimpleXML support</span><br /> <span style=\"font-size:14px;\"> 另如果要给此扩展指定 libxml2 目录的话，则还有以下的编译参数。</span><br /> <span style=\"font-size:14px;\"> −−with-libxml-dir=DIR&nbsp; SimpleXML: libxml2 install prefix</span> </p>\n</div> \n<div> \n <h4> 52、SNMP<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−with-snmp=DIR 安装。 Include SNMP support</span><br /> <span style=\"font-size:14px;\"> 另如果要给此扩展指定 openssl 目录的话，则还有以下的编译参数。</span><br /> <span style=\"font-size:14px;\"> −−with-openssl-dir=DIR&nbsp; SNMP: openssl install prefix</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 libsnmp-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 net-snmp-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 53、SOAP<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-soap 安装。 Enable SOAP support</span><br /> <span style=\"font-size:14px;\"> 另如果要给此扩展指定 libxml2 目录的话，则还有以下的编译参数。</span><br /> <span style=\"font-size:14px;\"> −−with-libxml-dir=DIR&nbsp; SOAP: libxml2 install prefix</span> </p>\n</div> \n<div> \n <h4> 54、Sockets<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-sockets 安装。 Enable sockets support</span> </p>\n</div> \n<div> \n <h4> 55、SPL<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用。</span> </p>\n</div> \n<div> \n <h4> 56、SQLite3<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−without-sqlite3=DIR&nbsp; Do not include SQLite3 support. DIR is the prefix to SQLite3 installation directory</span> </p>\n</div> \n<div> \n <h4> 57、SQLite 3.x driver for PDO(pdo_sqlite)<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−without-pdo-sqlite=DIR&nbsp; PDO: sqlite 3 support. DIR is the sqlite base install directory BUNDLED</span> </p>\n</div> \n<div> \n <h4> 58、System V Message based IPC<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-sysvmsg 安装。 Enable sysvmsg support</span> </p>\n</div> \n<div> \n <h4> 59、System V Semaphores<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-sysvsem 安装。 Enable System V semaphore support</span> </p>\n</div> \n<div> \n <h4> 60、System V Shared Memory<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-sysvshm 安装。 Enable the System V shared memory support</span> </p>\n</div> \n<div> \n <h4> 61、tidy<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−with-tidy=DIR 安装。 Include TIDY support</span><br /> <span style=\"font-size:14px;\"> 一般需指定其目录，−−with-tidy=/usr</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 libtidy-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 libtidy-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 62、tokenizer<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−disable-tokenizer&nbsp; Disable tokenizer support</span> </p>\n</div> \n<div> \n <h4> 63、WDDX<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-wddx 安装。 Enable WDDX support</span><br /> <span style=\"font-size:14px;\"> 另如果要给此扩展指定 libxml2 目录的话，则还有以下的编译参数。</span><br /> <span style=\"font-size:14px;\"> −−with-libxml-dir=DIR&nbsp; WDDX: libxml2 install prefix</span> </p>\n</div> \n<div> \n <h4> 64、XMLReader<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−disable-xmlreader&nbsp; Disable XMLReader support</span><br /> <span style=\"font-size:14px;\"> 另如果要给此扩展指定 libxml2 目录的话，则还有以下的编译参数。</span><br /> <span style=\"font-size:14px;\"> −−with-libxml-dir=DIR&nbsp; XMLReader: libxml2 install prefix</span> </p>\n</div> \n<div> \n <h4> 65、xmlrpc<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−with-xmlrpc=DIR 安装。 Include XMLRPC-EPI support</span><br /> <span style=\"font-size:14px;\"> 另如果要给此扩展指定 libxml2 和 iconv 目录的话，则还有以下的编译参数。</span><br /> <span style=\"font-size:14px;\"> −−with-libxml-dir=DIR&nbsp; XMLRPC-EPI: libxml2 install prefix</span><br /> <span style=\"font-size:14px;\"> −−with-iconv-dir=DIR&nbsp; XMLRPC-EPI: iconv dir for XMLRPC-EPI</span> </p>\n</div> \n<div> \n <h4> 66、XML<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−disable-xml&nbsp; Disable XML support</span> </p>\n</div> \n<div> \n <h4> 67、XMLWriter<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 此扩展默认为启用，编译时可通过下列选项禁用：−−disable-xmlwriter&nbsp; Disable XMLWriter support</span> </p>\n</div> \n<div> \n <h4> 68、XSL<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−with-xsl=DIR 安装。 Include XSL support.&nbsp; DIR is the libxslt base install directory (libxslt &gt;= 1.1.0 required)</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 libxslt1-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 libxslt-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 69、Zip<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−enable-zip 安装。 Include Zip read/write support</span><br /> <span style=\"font-size:14px;\"> 另如果要给此扩展指定 libz, PCRE 和 libzip 目录的话，则还有以下的编译参数。</span><br /> <span style=\"font-size:14px;\"> −−with-zlib-dir=DIR&nbsp; ZIP: Set the path to libz install prefix</span><br /> <span style=\"font-size:14px;\"> −−with-pcre-dir=DIR&nbsp; ZIP: pcre install prefix</span><br /> <span style=\"font-size:14px;\"> −−with-libzip=DIR&nbsp; ZIP: use libzip</span> </p>\n</div> \n<div> \n <h4> 70、Zlib<br /> </h4> \n <p> <span style=\"font-size:14px;\"> 通过指定编译参数 −−with-zlib=DIR 安装。 Include ZLIB support (requires zlib &gt;= 1.0.9)</span><br /> <span style=\"font-size:14px;\"> Debian/Ubuntu 需安装 zlib1g-dev 依赖包。</span><br /> <span style=\"font-size:14px;\"> Redhat/CentOS 需安装 zlib-devel 依赖包。</span> </p>\n</div> \n<div> \n <h4> 71、Zend OPcache<br /> </h4> \n <p> <span style=\"font-size:14px;\"> PHP 5.5 之后的版本，此扩展默认为启用，编译时可通过下列选项禁用：−−disable-opcache&nbsp; Disable Zend OPcache support</span><br /> <span style=\"font-size:14px;\"> 注意：默认编译安装不代表默认启用，还需配置到 ini 文件里才行。</span> </p>\n</div> \n<div> \n <h3> 另外，PHP 还有诸多的第三方扩展，框架，CMS，包管理工具等。举几个例子。<br /> </h3> \n <p> <span style=\"font-size:14px;\"> 扩展：ZendGuardLoader, ionCube Loader, XCache, Imagemagick, GraphicsMagick, Memcached, Redis, Mongodb, Swoole</span><br /> <span style=\"font-size:14px;\"> 框架：Laravel, Symfony, Nette, Yii, Zend Framework, Silex, Slim, CakePHP, ThinkPHP</span><br /> <span style=\"font-size:14px;\"> CMS：Wordpress, Drupal, Joomla, Typecho, Phpcms, </span><br /> <span style=\"font-size:14px;\"> 包管理工具：Composer</span> </p>\n</div> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/504.html\">PHP模块一览及简要说明</a></p>","descriptionType":"html","publishedDate":"Mon, 01 May 2017 05:06:06 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/11/php.png","linkMd5":"8341f0ea65d94c3e5934b7d0989424fc","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn79@2020_4/2020/08/25/00-30-51-823_98db429a3ce60c2f.webp","destWidth":600,"destHeight":318,"sourceBytes":73085,"destBytes":20966,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/11/php.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn79@2020_4/2020/08/25/00-30-51-823_98db429a3ce60c2f.webp"},"publishedOrCreatedDate":1598315426757},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"一键备份脚本backup.sh","link":"https://teddysun.com/?p=469","description":"<p><a href=\"https://teddysun.com/469.html\"><img src=\"https://teddysun.com/wp-content/uploads/2016/gdrive.png\" title=\"一键备份脚本backup.sh\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">做网站最重要的是什么？数据！数据，是网站之本，备份，是每一个站长都应该重视的事情。但同时，备份也是一件繁琐和重复的事情。所以，这些事情，肯定能做到自动化的。</span><br /> <span style=\"font-size:14px;\">下面来介绍一下这个一键备份脚本 backup.sh。</span></p> \n<p> <span id=\"more-469\"></span> </p> \n<p></p> \n<h2> <span style=\"color:red;\">总结一下 backup.sh 特点：</span><br /> </h2> \n<p><span style=\"font-size:14px;\">1、支持 MySQL/MariaDB/Percona 的数据库全量备份或选择备份；</span><br /> <span style=\"font-size:14px;\">2、支持指定目录或文件的备份；</span><br /> <span style=\"font-size:14px;\">3、支持加密备份文件（需安装 openssl 命令，可选）；</span><br /> <span style=\"font-size:14px;\">4、支持上传至 Google Drive（需先安装 rclone 并配置，可选）；</span><br /> <span style=\"font-size:14px;\">5、支持在删除指定天数本地旧的备份文件的同时，也删除 Google Drive 上的同名文件（可选）。</span></p> \n<p><span style=\"font-size:14px;color:red;\"><strong>2020 年 2 月 8 日更新：</strong></span><br /> <span style=\"font-size:14px;\">1、修改：替换 gdrive 为 rclone 命令；</span><br /> <span style=\"font-size:14px;\">2、修改：默认的备份目录为 /opt/backups；</span><br /> <span style=\"font-size:14px;\">3、新增：3 个参数，RCLONE_NAME ， RCLONE_FOLDER 和 RCLONE_FLG，文章里有具体介绍。</span><br /> <span style=\"font-size:14px;color:red;\"><strong>2016 年 8 月 21 日更新：</strong></span><br /> <span style=\"font-size:14px;\">1、新增：指定 MySQL/MariaDB 的数据库名进行备份，可以同时指定多个；</span><br /> <span style=\"font-size:14px;\">2、新增：删除指定天数本地旧的备份文件。</span><br /> <span style=\"font-size:14px;color:red;\"><strong>2016 年 9 月 8 日更新：</strong></span><br /> <span style=\"font-size:14px;\">1、新增：删除指定天数本地旧的备份文件的同时，可选删除 Google Drive 上的同名文件。</span><br /> <span style=\"font-size:14px;color:red;\"><strong>2016 年 11 月 29 日更新：</strong></span><br /> <span style=\"font-size:14px;\">1、新增：上传备份文件到 FTP 选项；</span><br /> <span style=\"font-size:14px;\">2、新增：删除指定天数本地旧的备份文件的同时，可选删除 Google Drive 及 FTP 上的同名文件。</span></p> \n<p><span style=\"font-size:14px;\">教程模式开启：</span></p> \n<h3> 1、下载该脚本并赋予执行权限<br /> </h3> \n<pre class=\"prettyprint lang-bsh\">wget --no-check-certificate https://github.com/teddysun/across/raw/master/backup.sh\nchmod +x backup.sh</pre> \n<p></p> \n<h3> 2、修改并配置脚本<br /> </h3> \n<p><span style=\"font-size:14px;\">请使用 vim 或 nano 等工具来修改。</span></p> \n<p><span style=\"font-size:14px;color:red;\">关于变量名的一些说明：</span></p> \n<p><span style=\"font-size:14px;\">ENCRYPTFLG （加密FLG，true 为加密，false 为不加密，默认是加密）</span><br /> <span style=\"font-size:14px;\">BACKUPPASS （加密密码，重要，务必要修改）</span><br /> <span style=\"font-size:14px;\">LOCALDIR （备份目录，可自己指定）</span><br /> <span style=\"font-size:14px;\">TEMPDIR （备份目录的临时目录，可自己指定）</span><br /> <span style=\"font-size:14px;\">LOGFILE （脚本运行产生的日志文件路径）</span><br /> <span style=\"font-size:14px;\">MYSQL_ROOT_PASSWORD （MySQL/MariaDB/Percona 的 root 用户密码）</span><br /> <span style=\"font-size:14px;\">MYSQL_DATABASE_NAME （指定 <span style=\"font-size:14px;\">MySQL/MariaDB/Percona</span> 的数据库名，留空则是备份所有数据库）</span><br /> <span style=\"font-size:14px;color:red;\">※ MYSQL_DATABASE_NAME 是一个数组变量，可以指定多个。举例如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">MYSQL_DATABASE_NAME[0]=\"phpmyadmin\"\nMYSQL_DATABASE_NAME[1]=\"test\"</pre> \n<p> <span style=\"font-size:14px;\">BACKUP （需要备份的指定目录或文件列表，留空就是不备份目录或文件）</span><br /> <span style=\"font-size:14px;color:red;\">※ BACKUP 是一个数组变量，可以指定多个。举例如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">BACKUP[0]=\"/data/www/default/test.tgz\"\nBACKUP[1]=\"/data/www/default/test/\"\nBACKUP[2]=\"/data/www/default/test2/\"</pre> \n<p> <span style=\"font-size:14px;\">LOCALAGEDAILIES （指定多少天之后删除本地旧的备份文件，默认为 7 天）</span><br /> <span style=\"font-size:14px;\">DELETE_REMOTE_FILE_FLG （删除 Google Drive 或 FTP 上备份文件的 FLG，true 为删除，false 为不删除）</span><br /> <span style=\"font-size:14px;color:red;\">RCLONE_NAME （设置 rclone config 时设定的 remote 名称，务必要指定）</span><br /> <span style=\"font-size:14px;color:red;\">RCLONE_FOLDER （指定备份时设定的 remote 的目录名称，该目录名在 Google Drive 不存在时则会自行创建。默认为空，也就是根目录）</span><br /> <span style=\"font-size:14px;color:red;\">RCLONE_FLG （上传本地备份文件至 Google Drive 的 FLG，true 为上传，false 为不上传）</span></p> \n<p><span style=\"font-size:14px;\">FTP_FLG （上传文件至 FTP 服务器的 FLG，true 为上传，false 为不上传）</span><br /> <span style=\"font-size:14px;\">FTP_HOST （连接的 FTP 域名或 IP 地址）</span><br /> <span style=\"font-size:14px;\">FTP_USER （连接的 FTP 的用户名）</span><br /> <span style=\"font-size:14px;\">FTP_PASS （连接的 FTP 的用户的密码）</span><br /> <span style=\"font-size:14px;\">FTP_DIR （连接的 FTP 的远程目录，比如： public_html）</span></p> \n<p><span style=\"font-size:14px;color:red;\"><strong>一些注意事项的说明：</strong></span></p> \n<p><span style=\"font-size:14px;\">1）脚本需要用 root 用户来执行；</span><br /> <span style=\"font-size:14px;\">2）脚本需要用到 openssl 来加密，请事先安装好；</span><br /> <span style=\"font-size:14px;\">3）脚本默认备份所有的数据库（全量备份）；</span><br /> <span style=\"font-size:14px;\">4）备份文件的解密命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">openssl enc -aes256 -in [ENCRYPTED BACKUP] -out decrypted_backup.tgz -pass pass:[BACKUPPASS] -d -md sha1</pre> \n<p> <span style=\"font-size:14px;\">5）备份文件解密后，解压命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">tar -zxPf [DECRYPTION BACKUP FILE]</pre> \n<p> <span style=\"font-size:14px;color:red;\">解释一下参数 -P：</span><br /> <span style=\"font-size:14px;\">tar 压缩文件默认都是相对路径的。加个 -P 是为了 tar 能以绝对路径压缩文件。因此，解压的时候也要带个 -P 参数。</span></p> \n<h3> 3、配置 rclone 命令<br /> </h3> \n<p><span style=\"font-size:14px;\">rclone 是一个命令行工具，用于 Google Drive 的上传下载等操作。官网网站：</span><br /> <span style=\"font-size:14px;\"><a href=\"https://rclone.org/\" target=\"_blank\" rel=\"noopener noreferrer\">https://rclone.org/</a></span></p> \n<p><span style=\"font-size:14px;\">你可以用以下的命令来安装 rclone，以 RedHat 系举例，记得要先安装 unzip 命令。</span></p> \n<pre class=\"prettyprint lang-bsh\">yum -y install unzip &amp;&amp; wget -qO- https://rclone.org/install.sh | bash</pre> \n<p> <span style=\"font-size:14px;\">然后，运行以下命令开始配置：</span></p> \n<pre class=\"prettyprint lang-bsh\">rclone config</pre> \n<p> <span style=\"font-size:14px;\">参考<a href=\"https://www.qcmoke.site/tools/rclone.html\" target=\"_blank\" rel=\"noopener noreferrer\">这篇文章</a>，当设置到 Use auto config? 是否使用自动配置，选 n 不自动配置，然后根据提示用浏览器打开 rclone 给出的 URL，点击接受（Accept），然后将浏览器上显示出来的字符串粘贴回命令行里，完成授权，然后退出即可。参考文章里有挂载的操作，记得这里不需要挂载 Google Drive。</span></p> \n<h3> 4、运行脚本开始备份<br /> </h3> \n<pre class=\"prettyprint lang-bsh\">./backup.sh</pre> \n<p> <span style=\"font-size:14px;\">脚本默认会显示备份进度，并在最后统计出所需时间。</span><br /> <span style=\"font-size:14px;\">如果你想将脚本加入到 cron 自动运行的话，就不需要前台显示备份进度，只写日志就可以了。</span><br /> <span style=\"font-size:14px;\">这个时候你需要稍微改一下脚本中的 log 函数。</span></p> \n<pre class=\"prettyprint lang-bsh\">log() {\n    echo \"$(date \"+%Y-%m-%d %H:%M:%S\")\" \"$1\"\n    echo -e \"$(date \"+%Y-%m-%d %H:%M:%S\")\" \"$1\" &gt;&gt; ${LOGFILE}\n}</pre> \n<p><span style=\"font-size:14px;\">改为：</span></p> \n<pre class=\"prettyprint lang-bsh\">log() {\n    echo -e \"$(date \"+%Y-%m-%d %H:%M:%S\")\" \"$1\" &gt;&gt; ${LOGFILE}\n}</pre> \n<p> <span style=\"font-size:14px;\">关于如何使用 cron 自动备份，网上有一堆教程，这里<span style=\"color:red;\">以 CentOS 6 来举例说明。</span></span></p> \n<p><span style=\"font-size:14px;\">修改文件 /etc/crontab，内容如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">SHELL=/bin/bash\nPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin\nMAILTO=root\nHOME=/root\n\n# For details see man 4 crontabs\n\n# Example of job definition:\n# .---------------- minute (0 - 59)\n# |  .------------- hour (0 - 23)\n# |  |  .---------- day of month (1 - 31)\n# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...\n# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat\n# |  |  |  |  |\n# *  *  *  *  * user-name command to be executed\n30  1  *  *  * root bash /root/backup.sh\n</pre> \n<p><span style=\"font-size:14px;\">以上表示，每天凌晨 1 点 30 分，以 root 用户执行一次 backup.sh 脚本。</span><br /> <span style=\"font-size:14px;color:red;\"><strong>注意：</strong></span><br /> <span style=\"font-size:14px;\">一定要修改其中的 PATH 和 HOME 变量的值。</span><br /> <span style=\"font-size:14px;\">尤其是 HOME 变量，rclone 命令能否正确执行，是要依赖于其配置文件的。用 root 用户配置的话，其配置文件夹应该是 /root/.config/rclone ，所以要更改 HOME 的值。</span></p> \n<p><span style=\"font-size:14px;\">最后，欢迎交流和提出意见。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/469.html\">一键备份脚本backup.sh</a></p>","descriptionType":"html","publishedDate":"Fri, 12 Aug 2016 06:02:41 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2016/gdrive.png","linkMd5":"c9b7b5493d399c0b9d473bca1c643a02","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn96@2020_5/2020/08/25/00-30-53-128_1194ba1f1f101105.webp","destWidth":705,"destHeight":344,"sourceBytes":71838,"destBytes":17374,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2016/gdrive.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn96@2020_5/2020/08/25/00-30-53-128_1194ba1f1f101105.webp"},"publishedOrCreatedDate":1598315426754},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Eclipse下搭建Python开发环境","link":"https://teddysun.com/?p=346","description":"<p><a href=\"https://teddysun.com/346.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/python.png\" alt=\"Python\" title=\"Eclipse下搭建Python开发环境\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">自从开始用Shadowsocks以来，研究了一下其源码，发现Python的简洁和强大，打算学习之。首先自然是搭建一下环境，用我所熟悉的Eclipse 再加上 Pydev即可。</span></p> \n<p> <span id=\"more-346\"></span> </p> \n<p><span style=\"font-size:14px;\"><b>一、下载Eclipse</b>，官网地址：<a href=\"http://www.eclipse.org/downloads/\" target=\"_blank\">http://www.eclipse.org/downloads/</a></span><br /> <span style=\"font-size:14px;\"><b>二、下载JDK，安装后配置一下环境变量。</b></span><br /> <span style=\"font-size:14px;\">官网地址：<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\">http://www.oracle.com/technetwork/java/javase/downloads/index.html&nbsp;</a></span><br /> <span style=\"font-size:14px;\"><b>三、下载和安装Python</b>，这里选择2.X系列最新的2.7.6版本。3.X系列的Python语法上和旧版本稍许不一样。官网地址：<a href=\"http://www.python.org/downloads/\" target=\"_blank\">http://www.python.org/downloads/</a></span><br /> <span style=\"font-size:14px;\"><b>四、将Python开发工具Pydev集成到Eclipse</b>，步骤如下：</span><br /> <span style=\"font-size:14px;\">打开Eclipse，Help，Install New Software…选择Add，</span><br /> <span style=\"font-size:14px;\">name填Pydev，location填http://pydev.org/updates。然后点ok，开始搜索，最后出现以下结果，选择第一个PyDev。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2014/Python_install.png\"><img src=\"https://teddysun.com/wp-content/uploads/2014/Python_install.png\" title=\"Python install\" class=\"left\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">一路Next，进入安装路径选择界面，使用默认设置，然后 Finish。最后重启Eclipse即可。</span><br /> <span style=\"font-size:14px;\"><b>五、配置解释器。</b></span><br /> <span style=\"font-size:14px;\">Pydev内可以配置的解释器有3种：IronPython、Jython、Python，这里默认用Python。</span><br /> <span style=\"font-size:14px;\">为了能在Eclipse中调试Python程序，配置解释器步骤如下：</span><br /> <span style=\"font-size:14px;\">在 Eclipse 菜单栏中，选择Window，Preferences，Pydev，Interpreter，Python Interpreter。然后New，Name填Python_interpreter，路径选择之前Python安装文件夹下的python.exe。</span></p> \n<p><a href=\"https://teddysun.com/wp-content/uploads/2014/Python_interpreters.png\"><img src=\"https://teddysun.com/wp-content/uploads/2014/Python_interpreters.png\" title=\"Python interpreters\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"><b>六、Hello，Python</b></span><br /> <span style=\"font-size:14px;\">在 Eclipse 菜单栏中，选择File，New，Pydev Project，Name处填HelloPython，一路Next。工程目录下，右键New，Pydev Module。</span><br /> <span style=\"font-size:14px;\">在编辑器里，输入一行：</span><br /> <span style=\"font-size:14px;\">print “Hello,Python!”</span><br /> <span style=\"font-size:14px;\">运行，这就开始python之旅吧。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/346.html\">Eclipse下搭建Python开发环境</a></p>","descriptionType":"html","publishedDate":"Thu, 06 Mar 2014 07:09:35 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/python.png","linkMd5":"bb98a13cf5a77fd8cffb007bf11f8d98","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn15@2020_2/2020/08/25/00-30-51-804_4bcae60bfba8e964.webp","destWidth":520,"destHeight":226,"sourceBytes":16127,"destBytes":5900,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/python.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn15@2020_2/2020/08/25/00-30-51-804_4bcae60bfba8e964.webp","https://teddysun.com/wp-content/uploads/2014/Python_install.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn35@2020_3/2020/08/25/00-30-57-951_59966361c4c4ab40.webp","https://teddysun.com/wp-content/uploads/2014/Python_interpreters.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn84@2020_6/2020/08/25/00-31-00-441_c592bdf3587eb164.webp"},"publishedOrCreatedDate":1598315426734},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"如何在 CentOS 8 下安装 Docker Engine","link":"https://teddysun.com/?p=587","description":"<p><a href=\"https://teddysun.com/587.html\"><img class=\"aligncenter\" style=\"width: auto; height: auto;\" title=\"如何在 CentOS8 下安装 Docker Engine\" src=\"https://teddysun.com/wp-content/uploads/2018/docker.png\" /></a></p> \n<p><span style=\"font-size: 14px;\">CentOS 8 都已经到版本 8.2.2004 了，Docker 官方还是默认只<a href=\"https://docs.docker.com/engine/install/centos/\" target=\"_blank\" rel=\"noopener noreferrer\">提供</a> CentOS 7 的安装包。这是怎么回事呢？</span><br /> <span style=\"font-size: 14px;\">网上搜了一下，说是因为 Red Hat 自己推出了 <code>buildah</code> 和 <code>podman</code> 准备替代 Docker。</span><br /> <span style=\"font-size: 14px;\">虽说兼容性不错，但是你非要在 CentOS 8 下安装 Docker 能不能办到呢？</span><br /> <span style=\"font-size: 14px;\">办法还是有的，只是需要手动来操作。稍微花点时间，按照本文操作步骤来就可以了。</span><br /> <span id=\"more-587\"></span><br /> <span style=\"font-size: 14px;\">本文将讲解如何在 CentOS 8 下安装 Docker Engine 以及 docker-compose。</span><br /> <span style=\"font-size: 14px;\">在写本文时，Docker 最新版本号是 19.03.12。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker version</pre> \n<pre class=\"prettyprint lang-bsh\">Client: Docker Engine - Community\n Version:           19.03.12\n API version:       1.40\n Go version:        go1.13.10\n Git commit:        48a66213fe\n Built:             Mon Jun 22 15:46:54 2020\n OS/Arch:           linux/amd64\n Experimental:      true\n\nServer: Docker Engine - Community\n Engine:\n  Version:          19.03.12\n  API version:      1.40 (minimum version 1.12)\n  Go version:       go1.13.10\n  Git commit:       48a66213fe\n  Built:            Mon Jun 22 15:45:28 2020\n  OS/Arch:          linux/amd64\n  Experimental:     false\n containerd:\n  Version:          1.2.13\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\n runc:\n  Version:          1.0.0-rc10\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\n docker-init:\n  Version:          0.18.0\n  GitCommit:        fec3683\n</pre> \n<h3><span style=\"color: #ff0000;\">1. 安装 docker-ce.repo</span></h3> \n<p><span style=\"font-size: 14px;\">CentOS 8 下默认已经是 dnf 命令来进行包管理。</span><br /> <span style=\"font-size: 14px;\">第一步就是安装 Docker 官方的 repo，执行命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo</pre> \n<h3><span style=\"color: #ff0000;\">2. 显示可用版本</span></h3> \n<pre class=\"prettyprint lang-bsh\">$ dnf list docker-ce --showduplicates</pre> \n<p><span style=\"font-size: 14px;\">返回一览如下。</span></p> \n<pre class=\"prettyprint lang-bsh\">Available Packages\ndocker-ce.x86_64    17.03.0.ce-1.el7.centos    docker-ce-stable\ndocker-ce.x86_64    17.03.1.ce-1.el7.centos    docker-ce-stable\ndocker-ce.x86_64    17.03.2.ce-1.el7.centos    docker-ce-stable\ndocker-ce.x86_64    17.03.3.ce-1.el7           docker-ce-stable\ndocker-ce.x86_64    17.06.0.ce-1.el7.centos    docker-ce-stable\ndocker-ce.x86_64    17.06.1.ce-1.el7.centos    docker-ce-stable\ndocker-ce.x86_64    17.06.2.ce-1.el7.centos    docker-ce-stable\ndocker-ce.x86_64    17.09.0.ce-1.el7.centos    docker-ce-stable\ndocker-ce.x86_64    17.09.1.ce-1.el7.centos    docker-ce-stable\ndocker-ce.x86_64    17.12.0.ce-1.el7.centos    docker-ce-stable\ndocker-ce.x86_64    17.12.1.ce-1.el7.centos    docker-ce-stable\ndocker-ce.x86_64    18.03.0.ce-1.el7.centos    docker-ce-stable\ndocker-ce.x86_64    18.03.1.ce-1.el7.centos    docker-ce-stable\ndocker-ce.x86_64    18.06.0.ce-3.el7           docker-ce-stable\ndocker-ce.x86_64    18.06.1.ce-3.el7           docker-ce-stable\ndocker-ce.x86_64    18.06.2.ce-3.el7           docker-ce-stable\ndocker-ce.x86_64    18.06.3.ce-3.el7           docker-ce-stable\ndocker-ce.x86_64    3:18.09.0-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:18.09.1-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:18.09.2-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:18.09.3-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:18.09.4-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:18.09.5-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:18.09.6-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:18.09.7-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:18.09.8-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:18.09.9-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:19.03.0-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:19.03.1-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:19.03.2-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:19.03.3-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:19.03.4-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:19.03.5-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:19.03.6-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:19.03.7-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:19.03.8-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:19.03.9-3.el7            docker-ce-stable\ndocker-ce.x86_64    3:19.03.10-3.el7           docker-ce-stable\ndocker-ce.x86_64    3:19.03.11-3.el7           docker-ce-stable\ndocker-ce.x86_64    3:19.03.12-3.el7           docker-ce-stable\n</pre> \n<p><span style=\"font-size: 14px;\">可以看到，截至目前，最新版已经到了 19.03.12</span></p> \n<h3><span style=\"color: #ff0000;\">3. 事先安装依赖</span></h3> \n<p><span style=\"font-size: 14px;\">要想安装 <code>docker-ce</code> 必须事先要安装好依赖 <code>containerd.io</code>，这里就是和 CentOS 7 下自动安装的最大区别。点击<a href=\"https://download.docker.com/linux/centos/7/x86_64/stable/Packages/\" target=\"_blank\" rel=\"noopener noreferrer\">这里</a>，查看最新版的 <code>containerd.io</code>。适当地替换下面命令里的下载链接。</span><br /> <span style=\"font-size: 14px;\">执行如下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ dnf install -y https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.13-3.2.el7.x86_64.rpm</pre> \n<h3><span style=\"color: #ff0000;\">4. 安装 Docker</span></h3> \n<p><span style=\"font-size: 14px;\">执行如下命令，注意其中有个 <code>--nobest</code> 选项：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ dnf install -y --nobest docker-ce</pre> \n<h3><span style=\"color: #ff0000;\">5. 启动 Docker</span></h3> \n<p><span style=\"font-size: 14px;\">上一步正确安装以后，接下来就要启动 Docker，并设置开机自启动。</span><br /> <span style=\"font-size: 14px;\">启动 Docker 命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ systemctl start docker</pre> \n<p><span style=\"font-size: 14px;\">查看 Docker 状态：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ systemctl status docker</pre> \n<p><span style=\"font-size: 14px;\">设置开机自启动 Docker 命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ systemctl enable docker</pre> \n<p><span style=\"font-size: 14px;\">查看 Docker 版本信息：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker version</pre> \n<h3><span style=\"color: #ff0000;\">6. 安装 docker-compose</span></h3> \n<p><span style=\"font-size: 14px;\">利用 <code>pip3</code> 来安装 docker-compose 最为简单。</span><br /> <span style=\"font-size: 14px;\">事先安装好 <code>pip3</code> 是必要的，如果本机没有安装，执行如下命令安装 <code>pip3</code>。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ dnf install -y python3-pip</pre> \n<p><span style=\"font-size: 14px;\">查看 pip3 版本信息：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ pip3 --version</pre> \n<p><span style=\"font-size: 14px;\">返回值：</span></p> \n<pre class=\"prettyprint lang-bsh\">pip 9.0.3 from /usr/lib/python3.6/site-packages (python 3.6)</pre> \n<p><span style=\"font-size: 14px;\">安装 docker-compose 命令</span></p> \n<pre class=\"prettyprint lang-bsh\">$ pip3 install docker-compose</pre> \n<p><span style=\"font-size: 14px;\">查看 docker-compose 版本信息：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker-compose --version</pre> \n<p><span style=\"font-size: 14px;\">返回值：</span></p> \n<pre class=\"prettyprint lang-bsh\">docker-compose version 1.26.2, build unknown</pre> \n<h3><span style=\"color: #ff0000;\">7. 写在最后</span></h3> \n<p><span style=\"font-size: 14px;\">如果系统开启了 firewalld，那么也许需要放行一下 Docker 的网卡才能正常使用网络。</span><br /> <span style=\"font-size: 14px;\">执行命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ firewall-cmd --permanent --zone=trusted  --add-interface=docker0\n$ firewall-cmd --reload\n</pre> \n<p><span style=\"font-size: 14px;\">注意这里的 Docker 的网卡名为 <code>docker0</code>。一般情况下都是这个名称，不过在此之前最好还是通过 <code>ifconfig</code> 命令来确认一下。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/587.html\">如何在 CentOS 8 下安装 Docker Engine</a></p>","descriptionType":"html","publishedDate":"Wed, 29 Jul 2020 09:02:43 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2018/docker.png","linkMd5":"c92873e91eaf01224f7d5a07356245ed","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn43@2020_4/2020/08/25/00-30-53-616_609ae3d1e5be8850.webp","destWidth":773,"destHeight":537,"sourceBytes":37884,"destBytes":21998,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2018/docker.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn43@2020_4/2020/08/25/00-30-53-616_609ae3d1e5be8850.webp"},"publishedOrCreatedDate":1598315426710},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"域名那些事儿4","link":"https://teddysun.com/?p=466","description":"<p><a href=\"https://teddysun.com/466.html\"><img src=\"https://teddysun.com/wp-content/uploads/2016/domain4.png\" title=\"域名那些事儿4\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">2011 年 6 月 20 日，ICANN 正式通过 New gTLD（新顶级域名）计划，并最早在 2014 年启用了不少新顶级后缀域名，这其中以 .xyz 为典型代表。</span></p> \n<p><span style=\"font-size:14px;\">随着时间的推移，越来越多的后缀被加入到根域名的服务器。虽然这大幅增加了可注册的域名的数量，让域名注册人有更多的选择，但这既有优点也有缺点，甚至可能让人感受到威胁。在与数字财产和商标有关的问题上，越多新顶级域名出现，代表会有越多麻烦，最糟的情况是让企业或组织预算吃紧，为了保护性的注册域名，产生了不菲的域名注册费用。</span></p> \n<p> <span id=\"more-466\"></span> </p> \n<p> <span style=\"font-size:14px;\"><strong>2016 年的转折点</strong></span></p> \n<p> <span style=\"font-size:14px;\">2016 年的 5 月和 6 月出现了两个重要的里程碑：第 1000 个新顶级域名在 5 月份上线；6月初，第 20,000,000 个新顶级域名的注册量达成（这其中 .xyz 推出的大幅优惠功不可没）。相较之下，在今年 1 月份时，新顶级域名的总注册量仅有 11,000,000。与此同时，.com 的注册量才略高于一亿两千六百万。当然，到目前为止，.com 还是最受欢迎的通用顶级域名。</span></p> \n<p><span style=\"font-size:14px;\">以下是其他后缀域名的概况：</span></p> \n<p><span style=\"font-size:14px;\">.net = 16,200,000 个</span><br /> <span style=\"font-size:14px;\">.cn = 18,600,000 个</span><br /> <span style=\"font-size:14px;\">.fr = 2,900,000 个</span><br /> <span style=\"font-size:14px;\">.ru = 5,100,000 个</span><br /> <span style=\"font-size:14px;\">.pe = 90,000 个</span></p> \n<p><span style=\"font-size:14px;\">从以上数字来看，第 20,000,000 个新顶级域名的注册完成，代表着整个新顶级域名的总量，大于 .net 或 .cn 任何一个的数量，而这两个域名是最受欢迎的古老的后缀之一。</span></p> \n<p><span style=\"font-size:14px;\">另一项指标为 .xyz，这个最受欢迎的新顶级域名，其注册量（600 万）已大于 .info（560 万）、 .ru 和 .fr。这是第一次通用顶级域名或国家域名的注册量，被新顶级域名超越，是值得骄傲的成就。</span></p> \n<p><span style=\"font-size:14px;\"><strong>持续关注</strong></span></p> \n<p><span style=\"font-size:14px;\">现阶段，包括受欢迎的 .xyz 等大部份的新顶级域名，都不被大众所知。有关新顶级域名的讨论都只限于域名相关的业内人士，偶尔会成为硅谷的笑话或科技媒体打趣的主题。但既然新顶级域名快速且稳定地成长，我们可以相信这些后缀将会变得越来越重要。</span></p> \n<p><span style=\"font-size:14px;\">以往，若要在域名的世界中保护商标、品牌名称、特定产品的名称、以及线上服务，你只需要在传统的域名（如 .com、 .net、 .org、 .info 和 .biz） 之外，注册与业务活动有关的国家域名即可。但现在，你必须更多地考虑那些可能被注册的域名后缀。也许这对域名注册商来说是个好消息，但对任何想要保护其数字财产的人来说，都是令人头痛的事情。</span></p> \n<p><span style=\"font-size:14px;\">虽然，针对新顶级域名的违法侵权等使用情形，ICANN 已有相对应的机制 （UDRP 和 USR），但这些程序相当耗费时间和繁重，并只能在违法、侵权情形发生后才能采取行动。</span></p> \n<p><span style=\"font-size:14px;\">在 2015 年初，据报导，新顶级域名的 UDRP 案件远比传统的顶级域名多出十五倍。从这我们可以推测，新顶级域名的抢注行为十分猖獗。</span></p> \n<p><span style=\"font-size:14px;color:red;\">而这些侵权的行为比较多来自于中国。根据著名的域名交易平台 sedo.com 估计，新注册的域名中，有 54% 来自于中国公民。当然，中国拥有庞大的人口，而其中又有许多人相当支持新科技，但域名抢注行为大多出现在这些新注册的行为上。</span></p> \n<p> <span style=\"font-size:14px;\"><strong>大品牌掌控潮流</strong></span></p> \n<p><span style=\"font-size:14px;\">或许你们已听过这个新闻，Canon 近日已开始将他们的官方域名 canon.com 转向至 global.canon。这对新顶级域名来说，也是个很重要的转折点，尤其是对品牌顶级域名而言。这件消息有趣的是 Canon 决定要推动自己的域名的背后原因。在官方网站张贴的声明中，Canon 是这么说明的：</span></p> \n<p><span style=\"font-size:14px;\">由于 .canon 是只有 Canon Group 才能使用的域名，访问使用 .canon 的网站的用户可以确信自己所接收到的资讯是可靠的。为了确保消费者可以在全球网站以外的地方，安全地获得 Canon 的相关资讯，他们也计划将 .canon 的使用扩及至其他 Canon Group 的网站。</span></p> \n<p><span style=\"font-size:14px;\">原文参考：<a href=\"http://global.canon/en/about/dotcanon/\" target=\"_blank\">http://global.canon/en/about/dotcanon/</a></span></p> \n<p><span style=\"font-size:14px;\">另一个显著的例子是 .leclerc 域名，这是法国零售商 E.LeClerc 的域名，他们在推出新的租车服务时，使用了 location.leclerc。这个域名也很有趣，因为该品牌名称是 E.LeClerc，既然现在只有他们才可以使用 .leclerc 域名，他们理所当然地会将网站的首页网址设为 e.leclerc。</span></p> \n<p><span style=\"font-size:14px;\">其他值得注意的使用品牌域名的组织包括 Barclay’s (home.barclays)、BNP Paribas (mabanque.bnpparibas)、以及欧洲核子研究组织 （home.cern）。虽然申请自己的顶级域名对小型企业来说较不容易负担 （递交一个新顶级域名申请件需缴交 USD 15,000），但品牌域名持续地出现，其他新顶级域名多少也会受到注目。</span></p> \n<p><span style=\"font-size:14px;\">除了品牌域名之外，有些大品牌公司已开始注册新顶级域名，以下是几个比较有名的例子：</span></p> \n<p><span style=\"font-size:14px;\">abc.xyz（由 Google 的母公司 Alphabet 所注册） Google 注册了 .xyz 这个域名的新闻可能是让 .xyz 开始大受欢迎的主因。</span><br /> <span style=\"font-size:14px;\">ebay.car</span><br /> <span style=\"font-size:14px;\">london.film</span><br /> <span style=\"font-size:14px;\">ism.golf</span><br /> <span style=\"font-size:14px;\">elle.men</span><br /> <span style=\"font-size:14px;\">parliament.scot</span><br /> <span style=\"font-size:14px;\">fcbarcelona.soccer</span><br /> <span style=\"font-size:14px;\">audacity.space</span><br /> <span style=\"font-size:14px;\">valenciaopen.tennis</span></p> \n<p><span style=\"font-size:14px;\">许多公司注册了新的域名之后，会将流量转向至原来的主网站，类似捷径的概念。例如，carlsberg.beer, web.foundation, oxfam.go 及 disney.tickets 即是使用了这样的技巧。</span></p> \n<p><span style=\"font-size:14px;\">电子商务网站常使用新顶级域名当作预定义搜寻的链接。以 Amazon 为例，他们注册了 book.horse （或许是作为 hourse ebooks 的参照？），转向至 Amazon 的搜索结果页面，搜寻的主题为与马有关的书。video.support 转向至 Amazon 的搜寻结果，搜寻主题为家庭剧院系统。deal.tires 则会转向至以轮胎为主题的搜寻结果，amazon.video 则是导向至 Amazon 的影片服务。</span></p> \n<p> <span style=\"font-size:14px;\"><strong>第二轮开放计划</strong></span></p> \n<p><span style=\"font-size:14px;\">在第一轮新顶级域名申请件的计划快结束时，就已有人询问关于第二轮的计划。第二轮开放可能会吸引更多想为自家品牌申请域名的人（虽然价格非常的昂贵）。</span></p> \n<p><span style=\"font-size:14px;\">还有，虽然关于第二轮开放申请新顶级域名的谣言已传地沸沸扬扬，但 ICANN 并未指出可能的开放时间。目前唯一确定的资讯是，在 2018 年之前，不会有任何事发生。</span></p> \n<p><span style=\"font-size:14px;\">大品牌想要申请自己的域名，理由通常是品牌保护。一些大品牌已开始表态他们对第二轮的兴趣，比如 Twitter，他们想申请 .twitter 和其他一些单词，以便加入目前火爆的域名注册局的游戏。</span></p> \n<p><span style=\"font-size:14px;\">在过去的几个月，ICANN 致力于研究第一轮开放的资料，以找出缺陷之处，改善第二轮开放的机制。他们主要专注于两个重点，“新后缀在消费者选择及竞争面的影响”以及“权利管理机制”。在 ICANN 目前研究的重点中，包括了是否将日升期规定为六十天、改制 TMCH (Trademark Clearinghouse)、价格制定方针、是否限制特级域名的范围、以及让注册局选择保留字，让他们可以在之后域名开放注册时，一并开放注册保留字。</span></p> \n<p><span style=\"font-size:14px;\">还有滥用方面的问题。基本上，他们研究的是在新域名上线时，所有未标准化的程序。域名市场上的每个角色，无论是注册商、商标持有人、注册局、或经销商都有责任避免第一轮的问题再次发生，尤其是保护数字财产、预防滥用方面的问题。</span></p> \n<p> <span style=\"font-size:14px;\"><span style=\"color:blue;\"><strong>参考链接：</strong></span><a href=\"https://www.gandi.net/news/zh-hans/2016-07-22/8875-0/\" target=\"_blank\">https://www.gandi.net/news/zh-hans/2016-07-22/8875-0/</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/466.html\">域名那些事儿4</a></p>","descriptionType":"html","publishedDate":"Sat, 30 Jul 2016 03:52:23 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2016/domain4.png","linkMd5":"b451e7ea98f7cf1470dabef771b82b19","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn11@2020_6/2020/08/25/00-30-55-711_456cce9d8a8b98c7.webp","destWidth":534,"destHeight":373,"sourceBytes":88722,"destBytes":24748,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2016/domain4.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn11@2020_6/2020/08/25/00-30-55-711_456cce9d8a8b98c7.webp"},"publishedOrCreatedDate":1598315426722},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"VC Redist Installer简介和安装","link":"https://teddysun.com/?p=223","description":"<p><a href=\"https://teddysun.com/223.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/06/VC_Redist_Installer.png\" title=\"VC Redist Installer简介和安装\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<b>VC Redist Installer是什么？</b></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　其实没什么，就是一款打包好的Microsoft Visual C++运行库，包含了VC2005、VC2008、VC2010、VC2012，并且包括了32位和64位版本，安装时会自动检查系统是属于哪个版本。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<b>VC Redist Installer有什么用？</b></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　你有没有发现，有时候你安装完一些软件或游戏，尤其是那种绿色版或者汉化版的，运行时会发现报错，常见的有：缺少或丢失msvcp71.dll、msvcr71.dll、msvcrt.dll、msvcrt.dll等；由于应用程序配置不正确，应用程序未能启动。尝试重新安装该程序以解决此问题。此时就要用到对应版本的Microsoft Visual C++运行库了。这个安装包就是提供所有版本的Microsoft Visual C++运行库用的。</span></p> \n<p> <span id=\"more-223\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<strong>VC Redist Installer包含了哪些软件？</strong></span></p> \n<pre class=\"prettyprint\">Visual C++ 2005 x86\nVisual C++ 2005 x64\nVisual C++ 2008 x86 9.0.30729.7523\nVisual C++ 2008 x64 9.0.30729.7523\nVisual C++ 2010 x86 10.0.40219.447\nVisual C++ 2010 x64 10.0.40219.447\nVisual C++ 2012 x86 11.0.51106\nVisual C++ 2012 x64 11.0.51106\nMicrosoft Visual F Runtime 2.0\nOlder Microsoft Runtimes for older software</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<strong>VC Redist Installer支持哪些平台？</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　从Windows XP到Windows 8，Windows全系列版本。</span></p> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">下载链接：</span><a href=\"http://down.tech.sina.com.cn/page/56579.html\" target=\"_blank\"><span style=\"font-family:Courier New;font-size:14px;\">http://down.tech.sina.com.cn/page/56579.html</span></a></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/223.html\">VC Redist Installer简介和安装</a></p>","descriptionType":"html","publishedDate":"Fri, 07 Jun 2013 14:16:37 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/06/VC_Redist_Installer.png","linkMd5":"dc201566b1ae6ac18c3008f655783260","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn76@2020_3/2020/08/25/00-30-52-793_a89d5d463c526651.webp","destWidth":513,"destHeight":398,"sourceBytes":23858,"destBytes":27650,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/06/VC_Redist_Installer.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn76@2020_3/2020/08/25/00-30-52-793_a89d5d463c526651.webp"},"publishedOrCreatedDate":1598315426743},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"从编译到二进制安装","link":"https://teddysun.com/?p=507","description":"<p><a href=\"https://teddysun.com/507.html\"><img title=\"从编译到二进制安装\" class=\"aligncenter\" style=\"width:auto;height:auto;\" alt=\"sakura\" src=\"https://teddysun.com/wp-content/uploads/2017/binary.jpg\" /></a></p> \n<p><span style=\"font-size:14px;\">很长一段时间以来，安装 <a href=\"https://lamp.sh/\" target=\"_blank\">LAMP</a> 时都是编译安装其数据库（MySQL，MariaDB，Percona Server）的。这是一个非常耗时的过程，而且编译安装的版本，很多插件默认是不会被编译安装的。</span><br /> <span style=\"font-size:14px;\">偶然间在 MariaDB 的下载列表里，看到有适用于 Linux 下的二进制安装包。于是就研究了一下，发现其二进制包分为 2 个版本：GLIBC_2.14 及 GLIBC_2.14+，解压其安装包后，稍微设置一下就可以直接使用了。</span><br /> <span style=\"font-size:14px;\">这大大提高了安装效率，安装速度只取决于从服务器下载二进制包的速度。</span><br /> <span style=\"font-size:14px;\">于是我在脚本里先做判断系统里安装的 GNU_LIBC_VERSION 是多少，2.14 是一道分界线，这也决定着下载链接是怎样的。</span></p> \n<h3> <span style=\"color:red;\">一）</span><br /> </h3> \n<p> <span style=\"font-size:14px;\">MariaDB 5.5, MariaDB 10.0, MariaDB 10.1 一直都是这么安装的，直到 MariaDB 10.2 的出现，让我头疼的一件事出现了。</span><br /> <span style=\"font-size:14px;\">本来以为只要安装好了 MariaDB 10.2，后面编译 PHP 会非常顺利，结果一开始 configure 的时候就出错了。</span></p> \n<pre class=\"prettyprint\">checking for mysql_set_server_option in -lmysqlclient... no\nconfigure: error: wrong mysql library version or lib not found. Check config.log for more information.</pre> \n<p> <span style=\"font-size:14px;\">这个错误提示太熟悉了，缺少了 libmysqlclient.so, libmysqlclient.a，于是我就去 MariaDB 安装目录下的 lib 里一看，发现果然跟 Percona Server 一样改名了。</span><br /> <span style=\"font-size:14px;\">看起来 libmariadbclient.a, libmariadb.so.3 这两个文件最相似。</span><br /> <span style=\"font-size:14px;\">做了 symbolic link 后，将 libmysqlclient.a 指向为 libmariadbclient.a，libmysqlclient.so 指向为 libmariadb.so.3，继续编译 PHP。</span><br /> <span style=\"font-size:14px;\">果然 configure 没问题了，喜滋滋地等待编译完成。当编译到 mysqli 模块时，异常退出。</span></p> \n<pre class=\"prettyprint\">mysqli.c: In function 'zm_info_mysqli':\nmysqli.c:990: error: 'MYSQL_SERVER_VERSION' undeclared (first use in this function)\nmysqli.c:990: error: (Each undeclared identifier is reported only once\nmysqli.c:990: error: for each function it appears in.)</pre> \n<p> <span style=\"font-size:14px;\">What？这难道是 MariaDB 的头文件里未定义 MYSQL_SERVER_VERSION 变量？</span><br /> <span style=\"font-size:14px;\">去 MariaDB 安装目录下的 include/mysql 里 grep 一下所有的 .h 文件，发现 MYSQL_SERVER_VERSION 被定义在 mysql_version.h 里。</span><br /> <span style=\"font-size:14px;\">扒了一下 PHP 源代码里的 ext/mysqli 下的 mysqli.c，一路找到 php_mysqli_structs.h 文件里 include 了 my_global.h，又在 my_global.h 里看到 include 了 my_config.h。</span><br /> <span style=\"font-size:14px;\">最后我在 my_config.h 里确实没有看到 MYSQL_SERVER_VERSION 变量被定义。</span><br /> <span style=\"font-size:14px;\">然后，我手动修改了一下 my_global.h，在原来 #include &lt;my_config.h&gt; 后面加了一行 #include &lt;mysql_version.h&gt;。然后继续编译 PHP。</span><br /> <span style=\"font-size:14px;\">果然，不再出现 MYSQL_SERVER_VERSION 变量的问题，然而，结果还是 boom，错误提示如下：</span></p> \n<pre class=\"prettyprint\">mysqli_nonapi.c: In function 'mysqli_common_connect':\nmysqli_nonapi.c:266: error: 'MYSQL' has no member named 'reconnect'\nmysqli_nonapi.c: In function 'zif_mysqli_error_list':\nmysqli_nonapi.c:448: warning: passing argument 4 of 'add_assoc_string_ex' discards qualifiers from pointer target type</pre> \n<p> <span style=\"font-size:14px;\">然后，我就发现我搞不定这个问题。</span><br /> <span style=\"font-size:14px;\">于是我从 LAMP 脚本里去掉了安装 MariaDB 10.2 这个选项。</span></p> \n<p><span style=\"font-size:14px;color:red;\"><strong>2017 年 7 月 18 日更新</strong></span><br /> <span style=\"font-size:14px;\">MariaDB 10.2.7 恢复了 libmysqlclient.so，与 Percona 一样是 symbolic link，同时也在头文件里加入了 MYSQL_VERSION_ID 定义。然而我测试了一下，还是会出现 configure: error: wrong mysql library version or lib not found. Check config.log for more information.</span><br /> <span style=\"font-size:14px;\">PHP 的编译选项只能从</span></p> \n<pre class=\"prettyprint lang-bsh\">--with-mysqli=/usr/local/mariadb/bin/mysql_config --with-pdo-mysql=/usr/local/mariadb</pre> \n<p>改为</p> \n<pre class=\"prettyprint lang-bsh\">--with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd</pre> \n<p>即 MySQL native driver。</p> \n<h3> <span style=\"color:red;\">二）</span><br /> </h3> \n<p><span style=\"font-size:14px;\">有了二进制安装 MariaDB 的经验，直觉告诉我 MySQL 肯定也有二进制包，去官网一看，果然有的。</span><br /> <span style=\"font-size:14px;\">Oracle 将 MySQL 的二进制安装包命名为 Linux – Generic。对于 GNU_LIBC_VERSION，只要求 GLIBC_2.5 即可安装（正在开发的 MySQL 8.0 则需 GLIBC_2.12）</span><br /> <span style=\"font-size:14px;\">安装过程与 MariaDB 类似，唯一的区别是 MySQL 5.7 开始，不再使用 mysql_install_db 来初始化安装数据库，而是使用 mysqld –initialize-insecure 来安装。</span><br /> <span style=\"font-size:14px;\">与此同时，MySQL 5.7 的默认数据库 mysql 中的 user 表结构也发生了若干变化，去掉了 Password 列，将密码 hash 保存在 authentication_string 列等等。而这又导致了低版本的 phpMyAdmin 如 4.4 无法正确识别数据库里的所有用户。</span></p> \n<p><span style=\"font-size:14px;\">基本上，Percona Server 遵循着和 MySQL 一样的节奏，比如 5.7 开始使用 mysqld –initialize-insecure 来初始化，除了版本号。</span><br /> <span style=\"font-size:14px;\">Percona Server 有着自己独特的版本号。在主版本号之外，还有个 rel 版本号。5.5 和 5.6 使用的 rel 版本号带小数点，比如 5.6.36-82.0。而 5.7 则没有，比如 5.7.18-15。</span><br /> <span style=\"font-size:14px;\">没错，Percona Server 也提供了二进制安装包。但是它也有自己的风格，是不一样的烟火。</span><br /> <span style=\"font-size:14px;\">Percona Server 对二进制包的 openssl 版本作了严格的区分。比如文件名含 ssl100 适用于所有的 Debian/Ubuntu 版本，而 ssl101 只适用于 CentOS 6 和 CentOS 7。</span><br /> <span style=\"font-size:14px;\">Percona Server 的个性远不止于此。</span><br /> <span style=\"font-size:14px;\">你以为解压了这个二进制包就万事大吉了吗？它的安装目录和压缩包名一样长！</span><br /> <span style=\"font-size:14px;\">安装目录下的 bin/mysqld_safe 和 bin/mysql_config 里也包含了和文件名一样的路径名，而且是 hard path，这就意味着如果直接解压到某个安装文件夹下，是无法初始化和启动的。</span><br /> <span style=\"font-size:14px;\">必须要先将这两个文件里的路径替换为实际安装路径才可以。</span><br /> <span style=\"font-size:14px;\">与此同时，安装目录的 lib 目录下，并没有 libmysqlclient.so 和 libmysqlclient.a，而是叫 libperconaserverclient.so 和 libperconaserverclient.a。</span><br /> <span style=\"font-size:14px;\">因此需要创建 symbolic link 后才能被 PHP 识别和编译。</span></p> \n<h3> <span style=\"color:red;\">三）</span><br /> </h3> \n<p><span style=\"font-size:14px;\">通过二进制安装数据库后，再通过 phpMyAdmin 登录，你会发现多了一个 Plugins Tab，点进去会显示很多插件，大体上分为 3 类：AUTHENTICATION, INFORMATION SCHEMA, STORAGE ENGINE。而通过编译安装的数据库就没有这些。</span><br /> <span style=\"font-size:14px;\">这让我想起了一个比喻：微软的 Windows 会直接给你一个蛋糕，你直接吃就好了，没得挑；而 Linux 会给你面粉，鸡蛋，黄油，水，苏打粉等，好了，你去编译一个自定义的蛋糕吧。</span><br /> <span style=\"font-size:14px;\">事实上，为什么不多提供一个选项，让喜欢吃蛋糕的人，既可以选成品，也可以选用原材料来自己做一个？</span><br /> <span style=\"font-size:14px;\">二进制包就是这样的一个成品。如果可以的话，其实我也想选择 Apache, PHP 最新版的二进制包，然而并没有，所以只好自己编译了。各个操作系统发行版自带的版本往往都是其中的某个大版本，然后不断更新也不会变，少了很多选择的乐趣。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/507.html\">从编译到二进制安装</a></p>","descriptionType":"html","publishedDate":"Sat, 27 May 2017 13:03:28 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2017/binary.jpg","linkMd5":"68d7eaa970bf9de09fa3964b14f256d0","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn72@2020_2/2020/08/25/00-30-52-076_ef5214bbf5081704.webp","destWidth":600,"destHeight":375,"sourceBytes":117986,"destBytes":64380,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2017/binary.jpg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn72@2020_2/2020/08/25/00-30-52-076_ef5214bbf5081704.webp"},"publishedOrCreatedDate":1598315426720},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"让Apache禁止IP直接访问的方法","link":"https://teddysun.com/?p=180","description":"<p><a href=\"https://teddysun.com/180.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/apache.jpg\" alt=\"Apache\" title=\"Apache禁止IP访问\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　今天看到这样的一个例子，VPS的IP被人恶意绑定，流量被劫持到别的域名，从而遭到广告联盟的封杀。原理是什么呢？简单解释就是，你的网站可以通过IP直接访问，本来这没什么问题，但是如果被人恶意用别的域名解析到你的IP的话，那么你的网站就能通过别人的域名来访问了。广告联盟肯定也是跟域名绑定的，被人这么一搞，时间一长肯定会被发现域名不符，于是就整个杯具了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　如何发现IP被恶意绑定呢？利用站长工具，同IP网站查询：<span style=\"font-family:Courier New;\"><a href=\"http://tool.chinaz.com/Same/\" target=\"_blank\">http://tool.chinaz.com/Same/</a></span>。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　如何解决这个问题？让人只能通过域名来访问网站，而不能通过IP来直接访问。</span></p> \n<p> <span id=\"more-180\"></span> </p> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<strong>方法一、修改Apache配置文件httpd.conf</strong></span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　如果你的Apache开通了虚拟主机，则需要修改<span style=\"font-family:Courier New;\">conf/extra/httpd-vhosts.conf</span>文件。如何判断Apache是否开通了虚拟主机，在配置文件<span style=\"font-family:Courier New;\">httpd.conf</span>中搜索，若有类似如下的选项的，则开启了虚拟主机。#为注释。</span></p> \n<pre class=\"prettyprint lang-c\"># Virtual hosts\nInclude conf/extra/httpd-vhosts.conf</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　若是开通了虚拟主机，则需要在<span style=\"font-family:Courier New;\">httpd-vhosts.conf</span>中修改配置如下；若没有开通虚拟主机，则可以直接在<span style=\"font-family:Courier New;\">httpd.conf</span>文件最后面，加入以下代码：</span></p> \n<p><span style=\"font-size:14px;font-family:'Courier New';\">NameVirtualHost XXX.XXX.XXX.XXX<br /> &lt;virtualhost XXX.XXX.XXX.XXX:80&gt;<br /> ServerName &nbsp;XXX.XXX.XXX.XXX<br /> &lt;Directory /&gt;<br /> Order Allow,Deny<br /> Deny from all<br /> &lt;/Directory&gt;<br /> &lt;/virtualhost&gt;<br /> &lt;virtualhost XXX.XXX.XXX.XXX:80&gt;<br /> ServerName &nbsp;yourdomain.com<br /> DocumentRoot &nbsp;/var/www/<br /> &lt;/virtualhost&gt;<br /> </span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　其中<span style=\"font-family:Courier New;\">XXX.XXX.XXX.XXX</span>为你的IP地址，第一处<span style=\"font-family:Courier New;\">virtualhost</span>配置为拒绝IP的任何访问请求，返回403错误。第二处的<span style=\"font-family:Courier New;\">virtualhost</span>配置为允许通过<span style=\"font-family:Courier New;\">yourdomain.com</span>这个域名访问，网站主目录为<span style=\"font-family:Courier New;\">/var/www/</span>（假设这是你的网站主目录）</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<strong>方法二、利用Apache的Rewrite和PHP实现400错误</strong></span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　新建一个虚拟主机配置，将来自IP的访问Rewrite到一个自定义的PHP页面。</span> </p> \n<pre class=\"prettyprint lang-c\">\n <virtualhost xxx.xxx.xxx.xxx:80=\"\">\n  ServerName  XXX.XXX.XXX.XXX\nDocumentRoot /var/www/error/\nRewriteEngine On\nRewriteRule  ^.*  /400.php\n </virtualhost></pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　其中<span style=\"font-family:Courier New;\">XXX.XXX.XXX.XXX</span>为你的IP地址，网站主目录为<span style=\"font-family:Courier New;\">/var/www/error/</span></span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　编辑文件<span style=\"font-family:Courier New;\">/var/www/error/400.php</span>，内容如下：</span></p> \n<p><span style=\"font-size:14px;font-family:'Courier New';\">&lt;?php<br /> header(“HTTP/1.1 400 Bad Request”); &nbsp;<br /> ?&gt;<br /> &lt;h1&gt;Bad Request&lt;/h1&gt;<br /> </span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　这样以来，即可实现直接用IP访问返回400错误了。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　修改完成之后，务必要重新加载Apache配置，命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">service httpd reload</pre> \n<p><span style=\"font-family:'Microsoft YaHei';font-size:16px;\">　　参考链接：</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\">　　<a href=\"http://www.cnblogs.com/zhuangge/archive/2011/04/13/2014892.html\" target=\"_blank\">http://www.cnblogs.com/zhuangge/archive/2011/04/13/2014892.html</a></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\">　　<a href=\"http://zhangxugg-163-com.iteye.com/blog/1639001\" target=\"_blank\">http://zhangxugg-163-com.iteye.com/blog/1639001</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/180.html\">让Apache禁止IP直接访问的方法</a></p>","descriptionType":"html","publishedDate":"Fri, 26 Apr 2013 06:36:53 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/04/apache.jpg","linkMd5":"de12ade2979e76b9b0bc9be806a10957","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn39@2020_1/2020/08/25/00-30-53-276_972f55ebabde1afa.webp","destWidth":370,"destHeight":313,"sourceBytes":39337,"destBytes":11132,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/04/apache.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn39@2020_1/2020/08/25/00-30-53-276_972f55ebabde1afa.webp"},"publishedOrCreatedDate":1598315426746},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"域名那些事儿3","link":"https://teddysun.com/?p=464","description":"<p><a href=\"https://teddysun.com/464.html\"><img src=\"https://teddysun.com/wp-content/uploads/2016/domain2.jpg\" title=\"域名那些事儿3\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">最近一段时间，不知不觉我又注册了一些国别域名。</span><br /> <span style=\"font-size:14px;\">相对而言，2 字母的国别域名总是比较容易记忆一些。然后，我又不争气的把其中的一些域名开通了域名邮箱，尽管它们看起来并没有什么卵用。</span><br /> <span style=\"font-size:14px;\">根据我这段时间的观察，发现很多域名注册商在拿到了不少新后缀后，陆陆续续的开始出来捞钱了。比如 GMO 花了 4150.1 万美元（<a href=\"http://www.gmoregistry.com/gmonews/detail.html?n=2016012816\" target=\"_blank\">新闻链接</a>）拿到手的 .shop 后缀已经进入到商标所有者注册阶段了，相信很快就可以秉承着先到先得的原则开放注册。当然，注册价格不菲，毕竟成本不便宜，不是么。</span></p> \n<p> <span id=\"more-464\"></span> </p> \n<p> <span style=\"font-size:14px;\">Google 拿到了 .app, .dev, .eat, .fly, .how, .ing, .mov, .new, .play 等一众不错的后缀。Amazon 也有诸如 .book, .read, .buy, .deal, .got, .like 这样的单词型热门后缀。</span><br /> <span style=\"font-size:14px;\">对于一些热门单词型的英文词汇拿来作为域名后缀，并不感到意外。然而稀奇的是，很多非英文字符也同样拿来作为了新域名后缀，这其中就有中文，日文，韩文，阿拉伯文等。这里就不得不提 IANA 的一个创举——非英文词汇的后缀，一律用 xn-- 加上 ASCII 码的形式转换，这种编码称为 PunyCode。比如 .香港（xn--j6w193g），.ポイント（xn--eckvdtc9d），.中國（xn--fiqz9s）等。这样做的目的既可以兼容现有的域名系统（DNS），又可以满足母语为非英文国家的域名本地化的需求。</span></p> \n<p><span style=\"font-size:14px;\">那么时至今日（2016 年 7 月 18 日），我们来做一个小小的统计，看看到目前为止，总共产生了多少个域名后缀？</span><br /> <span style=\"font-size:14px;\">干程序员的，喜欢用代码来搞定，Shell 代码如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">curl -s https://www.iana.org/domains/root/db | grep \"domain tld\" | grep -v \"xn--\" | awk -F'&gt;.' '{print \".\"$3}' | cut -d'&lt;' -f1 &gt; domain_list.txt</pre> \n<p> <span style=\"font-size:14px;\">这段代码的意思就是，获取页面内容，并排除了非英文字符的域名，然后输出到一个文件里。</span><br /> <span style=\"font-size:14px;color:red;\"><del>该文件可以通过以下链接下载</del></span><span style=\"font-size:14px;\"> IANA 官方自己提供了一个文本格式的域名列表，链接如下：</span></p> \n<p><span style=\"font-size:14px;\"><strong>2016 年 11 月 30 日更新： </strong><a href=\"https://data.iana.org/TLD/tlds-alpha-by-domain.txt\" target=\"_blank\">https://data.iana.org/TLD/tlds-alpha-by-domain.txt</a></span></p> \n<p><span style=\"font-size:14px;\">同时我还在 Github 上发现了一个有趣的 Repository，保存了所有域名后缀的 whois 及变更历史。链接如下：</span><br /> <span style=\"font-size:14px;\"><a href=\"https://github.com/whois/ianawhois\" target=\"_blank\">https://github.com/whois/ianawhois</a></span></p> \n<p><span style=\"font-size:14px;\">在这里，我们可以做一个有趣的结论和推测。</span></p> \n<p><span style=\"font-size:14px;\"><strong>1、</strong>2 字母的国别域名，有 255 个。</span><br /> <span style=\"font-size:14px;\"><strong>2、</strong>这 255 个国别域名，被废弃掉 6 个域名，分别是 <span style=\"color:red;\">bl bq eh mf ss um</span>。</span><br /> <span style=\"font-size:14px;\"><strong>3、</strong>由上可以得知，在这个地球上，有至少 248 个国家或地区被分配了域名。</span><br /> <span style=\"font-size:14px;\"><strong>4、</strong>有的国家存在着 2 个或以上的国别域名，比如俄罗斯就有 ru 和 su（前苏联）；英国有 uk 和 gb；法国则有 fr, pm, re, tf, wf, yt（其他 5 个皆为法属殖民地或海外省）</span><br /> <span style=\"font-size:14px;\"><strong>5、</strong>有钱的公司把持着新域名后缀市场，比如 Google, Amazon, GMO。</span><br /> <span style=\"font-size:14px;\"><strong>6、</strong>很多大公司出于对自身品牌的保护，都注册了他们公司名称或者其著名产品名的域名，比如 Apple, Alibaba, Audi, Google, Microsoft, Oracle, Xerox, Hitachi, Hyundai, Yodobashi 等。</span><br /> <span style=\"font-size:14px;\"><strong>7、</strong>因为新后缀如雨后春笋，所以可以这么说，没有任何一个公司，团体，组织或个人，有能力将所有的域名后缀注册完。</span><br /> <span style=\"font-size:14px;\"><strong>补充解释：</strong>有些后缀是针对公司名的，比如 Google 必然注册不了 google.microsoft 这个域名，同理，Microsoft 也必然注册不了 microsoft.google。</span><br /> <span style=\"font-size:14px;\"><strong>8、</strong>必然会有大量的抢注，但是然并卵的事实存在。</span><br /> <span style=\"font-size:14px;\"><strong>9、</strong>有些甚至超过 10 位字符的域名，必然是不会流通于普通域名注册市场的。比如 .northwesternmutual, .pamperedchef, .redumbrella, .sandvikcoromant等。</span><br /> <span style=\"font-size:14px;\"><strong>10、</strong>未来的域名后缀数量还会继续上涨。</span><br /> <span style=\"font-size:14px;\"><strong>11、</strong>Whois 工具将很难做到 100% 兼容查询所有域名后缀，因为有些域名 whois 服务器是非公开的。</span></p> \n<p><span style=\"font-size:14px;\">更多结论与联想，欢迎一同探讨。</span></p> \n<p><span style=\"font-size:14px;color:blue;\"><strong>阅读更多：</strong></span><br /> <span style=\"font-size:14px;\"><a href=\"https://teddysun.com/429.html\" target=\"_blank\">域名那些事儿</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://teddysun.com/446.html\" target=\"_blank\">域名那些事儿2</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/464.html\">域名那些事儿3</a></p>","descriptionType":"html","publishedDate":"Sun, 17 Jul 2016 22:39:42 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2016/domain2.jpg","linkMd5":"93d5afaa35a51335513ec957cca66a0d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn64@2020_2/2020/08/25/00-30-54-151_2a52a42911149545.webp","destWidth":600,"destHeight":278,"sourceBytes":46284,"destBytes":16200,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2016/domain2.jpg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn64@2020_2/2020/08/25/00-30-54-151_2a52a42911149545.webp"},"publishedOrCreatedDate":1598315426723},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"在 CentOS 7 下构建 Android 编译环境","link":"https://teddysun.com/?p=584","description":"<p><a href=\"https://teddysun.com/584.html\"><img class=\"aligncenter\" style=\"width: auto; height: auto;\" title=\"在 CentOS7 下构建 Android 编译环境\" src=\"https://teddysun.com/wp-content/uploads/2020/android.png\" /></a></p> \n<p><span style=\"font-size: 14px;\">在 Android Studio 之外，还可以通过 Gradle Script 来编译 Android 项目并构建和测试应用。</span><br /> <span style=\"font-size: 14px;\">本文是一个备忘录，以记录我在 x86_64 GNU/Linux 系统 CentOS Linux release 7.8.2003 下折腾 Android 编译环境的一个过程。</span><br /> <span id=\"more-584\"></span><br /> <span style=\"font-size: 14px;\">本文将会安装以下组件：</span></p> \n<pre class=\"prettyprint lang-bsh\">Git\nJDK 1.8\nGo 1.14.7\nAndroid SDK\n  Android NDK\nRust 1.45.0\n  Android Targets:\n    armv7-linux-androideabi\n    aarch64-linux-android\n    i686-linux-android\n    x86_64-linux-android\n</pre> \n<p><span style=\"font-size: 14px;\">以下的所有过程均是在 root 用户下操作。</span></p> \n<h3><span style=\"color: #ff0000;\">1. 安装 Git 和 JDK 1.8</span></h3> \n<p><span style=\"font-size: 14px;\">这两个组件发行版自带，通过以下命令即可安装。与此同时，再安装一些其他必要的组件 wget 和 unzip。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ yum install -y java-1.8.0-openjdk java-1.8.0-openjdk-devel wget unzip git</pre> \n<p><span style=\"font-size: 14px;\">完成后通过以下命令验证 JDK 版本号。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ java -version</pre> \n<p><span style=\"font-size: 14px;\">返回</span></p> \n<pre class=\"prettyprint lang-bsh\">openjdk version \"1.8.0_252\"\nOpenJDK Runtime Environment (build 1.8.0_252-b09)\nOpenJDK 64-Bit Server VM (build 25.252-b09, mixed mode)\n</pre> \n<pre class=\"prettyprint lang-bsh\">$ javac -version</pre> \n<p><span style=\"font-size: 14px;\">返回</span></p> \n<pre class=\"prettyprint lang-bsh\">javac 1.8.0_252</pre> \n<h3><span style=\"color: #ff0000;\">2. 安装 Go</span></h3> \n<p><span style=\"font-size: 14px;\">目前 Go 的最新版是 1.14.7。安装过程如下。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ GO_VERSION=1.14.7\n$ wget -O /tmp/go${GO_VERSION}.tar.gz https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\n$ tar -C /usr/local -xzf /tmp/go${GO_VERSION}.tar.gz\n$ rm -fv /tmp/go${GO_VERSION}.tar.gz\n$ export PATH=/usr/local/go/bin:$PATH\n</pre> \n<p><span style=\"font-size: 14px;\">完成后通过以下命令验证 Go 版本号。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ go version</pre> \n<p><span style=\"font-size: 14px;\">返回</span></p> \n<pre class=\"prettyprint lang-bsh\">go version go1.14.7 linux/amd64</pre> \n<h3><span style=\"color: #ff0000;\">3. 安装 Android SDK 及 Android NDK</span></h3> \n<p><span style=\"font-size: 14px;\">假设 <code>ANDROID_HOME</code> 路径是 <code>/opt/sdk</code>。安装过程如下。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ mkdir -p /opt/sdk &amp;&amp; cd /opt/sdk\n$ wget https://dl.google.com/android/repository/commandlinetools-linux-6609375_latest.zip\n$ unzip -q commandlinetools-linux-6609375_latest.zip\n$ rm -fv commandlinetools-linux-6609375_latest.zip\n$ export PATH=/opt/sdk/tools/bin:$PATH\n$ [ -z \"${ANDROID_HOME}\" ] &amp;&amp; export ANDROID_HOME=/opt/sdk\n$ yes | sdkmanager --sdk_root=${ANDROID_HOME} --licenses\n</pre> \n<p><span style=\"font-size: 14px;\">通过 <code>sdkmanager</code> 来安装一些组件。一条命令一步到位。如下。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sdkmanager --sdk_root=${ANDROID_HOME} \"platform-tools\" \"platforms;android-30\" \"platforms;android-29\" \"ndk-bundle\" \"ndk;21.0.6113669\" \"build-tools;29.0.2\"\n</pre> \n<p><span style=\"font-size: 14px;\">完成后，确认已安装的列表。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sdkmanager --sdk_root=${ANDROID_HOME} --list</pre> \n<p><span style=\"font-size: 14px;\">返回</span></p> \n<pre class=\"prettyprint lang-bsh\">Installed packages:\n  Path                 | Version      | Description                     | Location             \n  -------              | -------      | -------                         | -------              \n  build-tools;29.0.2   | 29.0.2       | Android SDK Build-Tools 29.0.2  | build-tools/29.0.2/  \n  ndk-bundle           | 21.3.6528147 | NDK                             | ndk-bundle/          \n  ndk;21.0.6113669     | 21.0.6113669 | NDK (Side by side) 21.0.6113669 | ndk/21.0.6113669/    \n  patcher;v4           | 1            | SDK Patch Applier v4            | patcher/v4/          \n  platform-tools       | 30.0.3       | Android SDK Platform-Tools      | platform-tools/      \n  platforms;android-29 | 4            | Android SDK Platform 29         | platforms/android-29/\n  platforms;android-30 | 1            | Android SDK Platform 30         | platforms/android-30/\n  tools                | 2.1.0        | Android SDK Tools 2.1           | tools/               \nAvailable Packages:\n  以下省略\n</pre> \n<h3><span style=\"color: #ff0000;\">4. 安装 Rust 及其它</span></h3> \n<p><span style=\"font-size: 14px;\">目前 Rust 的最新版是 1.45.0。安装过程如下。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ export RUSTUP_HOME=/usr/local/rustup CARGO_HOME=/usr/local/cargo\n$ RUST_VERSION=1.45.0\n$ RUSTARCH='x86_64-unknown-linux-gnu'\n$ wget -O /tmp/rustup-init \"https://static.rust-lang.org/rustup/archive/1.21.1/${RUSTARCH}/rustup-init\"\n$ chmod 755 /tmp/rustup-init\n$ /tmp/rustup-init -y --no-modify-path --profile minimal --default-toolchain $RUST_VERSION\n$ rm -fv /tmp/rustup-init\n$ chmod -R a+w ${RUSTUP_HOME} ${CARGO_HOME}\n$ export PATH=/usr/local/cargo/bin:$PATH\n</pre> \n<p><span style=\"font-size: 14px;\">完成后通过以下命令验证 Rust 及组件的版本号。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ rustup --version</pre> \n<p><span style=\"font-size: 14px;\">返回</span></p> \n<pre class=\"prettyprint lang-bsh\">rustup 1.21.1 (7832b2ebe 2019-12-20)</pre> \n<pre class=\"prettyprint lang-bsh\">$ cargo --version</pre> \n<p><span style=\"font-size: 14px;\">返回</span></p> \n<pre class=\"prettyprint lang-bsh\">cargo 1.45.0 (744bd1fbb 2020-06-15)</pre> \n<pre class=\"prettyprint lang-bsh\">$ rustc --version</pre> \n<p><span style=\"font-size: 14px;\">返回</span></p> \n<pre class=\"prettyprint lang-bsh\">rustc 1.45.0 (5c1f21c3b 2020-07-13)</pre> \n<p><span style=\"font-size: 14px;\">Rust 安装以下 Android Targets:</span></p> \n<pre class=\"prettyprint lang-bsh\">armv7-linux-androideabi\naarch64-linux-android\ni686-linux-android\nx86_64-linux-android</pre> \n<p><span style=\"font-size: 14px;\">安装过程如下。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ rustup install stable\n$ rustup default stable\n$ rustup target add armv7-linux-androideabi\n$ rustup target add i686-linux-android\n$ rustup target add aarch64-linux-android\n$ rustup target add x86_64-linux-android\n</pre> \n<h3><span style=\"color: #ff0000;\">5. 持久化环境变量</span></h3> \n<p><span style=\"font-size: 14px;\">上面的安装步骤是通过 export 来定义系统 PATH 的，在退出当前登录后就会丢失设置。</span><br /> <span style=\"font-size: 14px;\">因此需要持久化一些环境变量。</span><br /> <span style=\"font-size: 14px;\">编辑 <code>~/.bash_profile</code> 文件。添加 <code>ANDROID_HOME</code>，<code>RUSTUP_HOME</code>，<code>CARGO_HOME</code> 的定义以及增加 <code>PATH</code> 定义。</span><br /> <span style=\"font-size: 14px;\">最后呈现内容如下。</span></p> \n<pre class=\"prettyprint lang-bsh\"># .bash_profile\n\n# Get the aliases and functions\nif [ -f ~/.bashrc ]; then\n. ~/.bashrc\nfi\n\n# User specific environment and startup programs\n\nexport ANDROID_HOME=/opt/sdk RUSTUP_HOME=/usr/local/rustup CARGO_HOME=/usr/local/cargo\n\nPATH=$PATH:$HOME/bin:$ANDROID_HOME/tools/bin:/usr/local/go/bin:/usr/local/cargo/bin\n\nexport PATH\n</pre> \n<h3><span style=\"color: #ff0000;\">6. 编译 Android 项目</span></h3> \n<p><span style=\"font-size: 14px;\">这里选一个比较简单的项目来练手：<a href=\"https://github.com/shadowsocks/v2ray-plugin-android\" target=\"_blank\" rel=\"noopener noreferrer\">v2ray-plugin-android</a>。</span><br /> <span style=\"font-size: 14px;\">编译过程如下。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ git clone https://github.com/shadowsocks/v2ray-plugin-android.git\n$ cd v2ray-plugin-android\n$ git submodule update --init --recursive\n$ ./gradlew assembleRelease\n</pre> \n<p><span style=\"font-size: 14px;\">完成后，编译好的 apk 文件位于 <code>app/build/outputs/apk/release</code> 路径下。</span><br /> <span style=\"font-size: 14px;\">Android 系统要求所有 apk 必须先使用证书进行数字签名，然后才能安装到设备上或进行更新。</span><br /> <span style=\"font-size: 14px;\">因此这些 apk 文件还不能被直接拿来安装。</span><br /> <span style=\"font-size: 14px;\">至于如何签名，请参考以下链接，过程省略。</span><br /> <a href=\"https://developer.android.com/studio/publish/app-signing\" target=\"_blank\" rel=\"noopener noreferrer\">https://developer.android.com/studio/publish/app-signing</a></p> \n<h3><span style=\"color: #ff0000;\">7. 总结</span></h3> \n<p><span style=\"font-size: 14px;\">当你习惯于用命令行做事的时候，你会发现效率往往会有很大的提升。编译代码亦是如此。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/584.html\">在 CentOS 7 下构建 Android 编译环境</a></p>","descriptionType":"html","publishedDate":"Mon, 06 Jul 2020 05:30:20 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2020/android.png","linkMd5":"b0915d4dce1b310a7c94ad5d06cb6bf5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn11@2020_5/2020/08/25/00-30-53-244_2d4be1b31b7fc328.webp","destWidth":810,"destHeight":540,"sourceBytes":66021,"destBytes":9408,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2020/android.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn11@2020_5/2020/08/25/00-30-53-244_2d4be1b31b7fc328.webp"},"publishedOrCreatedDate":1598315426711},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"为什么要选择美国VPS","link":"https://teddysun.com/?p=220","description":"<p><a href=\"https://teddysun.com/220.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/06/icp.jpg\" title=\"为什么要选择国外VPS\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　国内的各种云如今风生水起，每个巨头互联网公司都在建自家的云，这其中当然包括云主机（其实也就是VPS换个说法），我所知道的就有阿里云、盛大云、新浪SAE、百度BAE、腾讯云（内测）等。我曾经使用过3个月的阿里云，除了其带宽比较吝啬之外，其他各项参数都还不错，再加上优惠券购买，性价比属于中上。可是为什么最终我还是选择使用美国VPS，原因有如下几种：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<strong>1、美国VPS性价比高</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　众所周知，美国是互联网的发源地，IDC的竞争很充分也很激烈。美国的大型机房多如牛毛，再加上各种促销，各种优惠码，综合下来美国的VPS产品性价比属于最高。在距离中国物理距离较近的美国西海岸的旧金山、洛杉矶、圣地亚哥、弗里蒙特、圣何塞、凤凰城等地的机房，是中国人的首选。其他诸如日本、香港和台湾，也有不少机房是很不错的，但是性价比不高。值得一提的是日本的几乎每一家VPS提供商都不支持paypal付款，最多支持信用卡。</span></p> \n<p> <span id=\"more-220\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<strong>2、架构的多样性</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　大多数的VPS都是基于Xen、Openvz、Virtuozzo（OpenVZ 商业版）、KVM、VMware EXSi、Hyper-V等技术，美国VPS花样繁多，一般来说使用Openvz架构的较多。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　Openvz架构的VPS几乎没有不超售的，只要IP足够，想卖多少就卖多少，所以一般情况下OpenVZ会比Xen便宜很多。对于用户来说，使用Openvz的VPS其实就是母服务器上的一个目录而已，如果这个服务器上的文件系统损坏，则几乎没有恢复的可能。因此个人不推荐，当然因为足够便宜，买来练手或者玩玩，挂个探针，架个proxy什么的还是可以的。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　我所知道的国内的云，十之八九都是基于Xen架构的。在资源有限的情况下，基本无法超售，但是不少国内的VPS提供商会采用超大内存和超大硬盘的服务器来超售。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　至于KVM、VMware EXSi、Hyper-V架构，在国内基本上就很少见了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<strong>3、口碑和信誉度</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　美国VPS的几个信誉度和口碑都不错的商家有Linode.com、VPS.NET、Media Temple、<a href=\"https://www.digitalocean.com/?refcode=e5e343560b4d\" target=\"_blank\">DigitalOcean</a>等，他们跑路的可能性微乎其微。因此用户只要安心做站就可以了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<strong>4、国内万恶的备案制度</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　这个必须要吐槽！</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　我为什么要使用跨越整个太平洋的美国的VPS？谁都知道隔了那么远，网速肯定会受到影响。最最主要的原因还是因为，国内的需要备案才能用域名访问网站。这项备案制度起源于政府对互联网言论的管制需要，进而演变成一项专门的生意。国内任何一家IDC都不敢提供没备案就让你上线的服务，就连臭名昭著的电信通也不例外。如果不备案的话，只能通过IP访问，有的甚至就直接不给开80端口。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　要知道，现在个人博客类的网站备案非常困难了，很多都要企业才能备案，甚至还会无厘头要求网站去掉“博客”两个字才允许备案。全国各个省份的通信管理局的要求五花八门，有些不让个人备案，必须要企业才能备案，有些要你必须关站才能备案，而且一审核就是个把月，期间都不能开站，还不一定能审核过，但是如果你肯花钱的话，最多一个星期就会搞定。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　当然以上这些还不足以让人愤慨。最让人难堪的是，备案会要求本人亲自到场，站在指定的幕布下拍照，有的还会要求你举着身份证对着镜头拍照，像个傻逼一样被人摆弄来摆弄去。如果你看过电影或电视，一定会熟悉，只有在公安局里给犯人留底时会那么干。我不就开个个人博客，至于吗？</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';color:red;\"><b>　　写在最后：</b></span><span style=\"font-size:14px;font-family:'Microsoft YaHei';color:#003399;\">混了几个月的<a href=\"http://www.hostloc.com/\" target=\"_blank\">全球主机交流论坛</a>，对美国的几个热门机房有所了解，有时候手痒会买来评测一番。一般价格在5美元每月左右的基于Xen的，地理位置在美国西海岸的VPS，都可以拿来做站了。如果你感觉访问速度慢，那就找找一些免费的CDN吧，别找国内的（原因很简单，要备案才给用）。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/220.html\">为什么要选择美国VPS</a></p>","descriptionType":"html","publishedDate":"Tue, 04 Jun 2013 13:49:23 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/06/icp.jpg","linkMd5":"22683423d86da97423a01d7406122298","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn64@2020_3/2020/08/25/00-30-53-991_38c3c8692f966107.webp","destWidth":520,"destHeight":390,"sourceBytes":47055,"destBytes":15924,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/06/icp.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn64@2020_3/2020/08/25/00-30-53-991_38c3c8692f966107.webp"},"publishedOrCreatedDate":1598315426743},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"利用iptables和webmin屏蔽恶意扫描IP地址","link":"https://teddysun.com/?p=187","description":"<p><a href=\"https://teddysun.com/187.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/hack.jpg\" alt=\"iptables\" title=\"利用iptables和webmin屏蔽恶意扫描IP\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　一段时间以来，在VPS的日志<span style=\"font-family:Courier New;\">/var/log/secure</span>里总会发现一些恶意尝试登录的IP，具体表现就是不断的用root或者其他揣测出的用户名尝试登录但是失败。尽管你已经设置了强密码，但还是觉得就这样被扫描很不爽，怎么办？一句话，<span style=\"color:red;\">屏蔽丫的</span>。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　先读取<span style=\"font-family:Courier New;\">/var/log/secure</span>中的特定字段，筛选出待屏蔽的IP，再利用自带防火墙iptables就能办到。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　shell代码点击该<a href=\"https://code.google.com/p/teddysun/source/browse/trunk/vpn/scaniptables.sh\" target=\"_blank\">链接</a>查看，复制代码保存为文件<span style=\"font-family:Courier New;\">scaniptables.sh</span>（文件名随便自定义，这里举例说明）。</span></p> \n<p> <span id=\"more-187\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　将<span style=\"font-family:Courier New;\">scaniptables.sh</span>上传至/root目录下，执行以下命令赋予权限：</span></p> \n<pre class=\"prettyprint lang-bsh\">chmod +x scaniptables.sh</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　根据《<a href=\"https://teddysun.com/151.html\" target=\"_blank\">使用webmin管理PPTP VPN Server</a>》一文，安装好webmin后即可创建定时自动作业。如下图所示。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">图一</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/05/cron_iptables1.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/cron_iptables1.png\" alt=\"cron_iptables\" title=\"cron_iptables1\" width=\"560\" height=\"315\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">图二</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/05/cron_iptables2.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/cron_iptables2.png\" alt=\"pptp_vpn_server\" title=\"cron_iptables2\" width=\"560\" height=\"315\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';color:red;\">　　注意点：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　1、需用root用户运行，更改iptables规则必须要是root才行；</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　2、设置自动运行的时间表，要根据实际情况调整，比如我就是每个一小时运行一次；</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　3、被屏蔽后的IP可以在/root/blockedip.log中看到，如果你的IP登录到VPS也失败，而恰巧脚本又自动运行了，如何解封你的IP呢？请参照第4点；</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　4、去除iptables规则的方法：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　首先，你要能登录到SSH，方法有很多，比如ADSL重新拨号更换IP，又或者是连上VPN后再登录。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　其次，登录SSH后，执行命令查看iptables规则：</span></p> \n<pre class=\"prettyprint lang-bsh\">service iptables status</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　你会看到诸如以下的iptables规则：</span></p> \n<pre class=\"prettyprint lang-bsh\">Table: filter\nChain INPUT (policy ACCEPT)\nnum  target     prot opt source               destination\n1    LOGINFAIL_LIST  all  --  109.87.208.17        0.0.0.0/0\n2    LOGINFAIL_LIST  all  --  113.140.43.162       0.0.0.0/0\n3    LOGINFAIL_LIST  all  --  115.238.73.16        0.0.0.0/0\n4    LOGINFAIL_LIST  all  --  115.68.22.162        0.0.0.0/0\n5    LOGINFAIL_LIST  all  --  115.95.166.247       0.0.0.0/0</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　如果你想清除num为1，IP为109.87.208.17的iptables规则，只需运行：</span></p> \n<pre class=\"prettyprint lang-bsh\">iptables -D INPUT 1</pre> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　（<span style=\"color:red;\">2013年5月9日补充</span>）使用Ngnix作为web服务器的，可以参照《<a href=\"http://www.lovelucy.info/vps-anti-scanning.html\" target=\"_blank\">VPS 屏蔽扫描网站的 IP</a>》一文，使用脚本定时检测Nginx日志。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/187.html\">利用iptables和webmin屏蔽恶意扫描IP地址</a></p>","descriptionType":"html","publishedDate":"Thu, 02 May 2013 09:07:23 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/hack.jpg","linkMd5":"8d8f55040afe84128701c1b945c604d8","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn84@2020_2/2020/08/25/00-30-54-107_808e2a77e47e35e3.webp","destWidth":470,"destHeight":352,"sourceBytes":38199,"destBytes":35184,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/hack.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn84@2020_2/2020/08/25/00-30-54-107_808e2a77e47e35e3.webp","https://teddysun.com/wp-content/uploads/2013/05/cron_iptables1.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn8@2020_6/2020/08/25/00-30-58-329_615c7b848c9c18ce.webp","https://teddysun.com/wp-content/uploads/2013/05/cron_iptables2.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn83@2020_3/2020/08/25/00-30-58-249_96a327e0e5a33bc1.webp"},"publishedOrCreatedDate":1598315426746},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"使用 Docker Buildx 构建多种系统架构镜像","link":"https://teddysun.com/?p=581","description":"<p><a href=\"https://teddysun.com/581.html\"><img class=\"aligncenter\" style=\"width: auto; height: auto;\" title=\"使用docker buildx构建多种系统架构镜像\" src=\"https://teddysun.com/wp-content/uploads/2018/docker.png\" /></a></p> \n<p><span style=\"font-size: 14px;\">Docker Buildx 是一个 docker CLI 插件，其扩展了 docker 命令，支持 Moby BuildKit 提供的功能。提供了与 docker build 相同的用户体验，并增加了许多新功能。</span><br /> <span style=\"font-size: 14px;\">BuildKit 是下一代的镜像构建组件，主要特点有很多，本文主要使用其可以编译多种系统架构的特性。</span><br /> <span style=\"font-size: 14px;\">网址：<a href=\"https://github.com/moby/buildkit\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/moby/buildkit</a></span><br /> <span style=\"font-size: 14px;\">需要注意的是，该功能仅适用于 Docker v19.03+ 版本。</span><br /> <span id=\"more-581\"></span><br /> <span style=\"font-size: 14px;\">本文将讲解如何使用 Buildx 构建多种系统架构的镜像。</span><br /> <span style=\"font-size: 14px;\">在开始之前，已经默认你在 Linux 系统（各大发行版）下安装好了 64 位的 Docker。</span><br /> <span style=\"font-size: 14px;\">在写本文时，Docker 最新版本号是 19.03.11。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker version</pre> \n<pre class=\"prettyprint lang-bsh\">Client: Docker Engine - Community\n Version:           19.03.11\n API version:       1.40\n Go version:        go1.13.10\n Git commit:        42e35e61f3\n Built:             Mon Jun  1 09:13:48 2020\n OS/Arch:           linux/amd64\n Experimental:      true\n\nServer: Docker Engine - Community\n Engine:\n  Version:          19.03.11\n  API version:      1.40 (minimum version 1.12)\n  Go version:       go1.13.10\n  Git commit:       42e35e61f3\n  Built:            Mon Jun  1 09:12:26 2020\n  OS/Arch:          linux/amd64\n  Experimental:     false\n containerd:\n  Version:          1.2.13\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\n runc:\n  Version:          1.0.0-rc10\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\n docker-init:\n  Version:          0.18.0\n  GitCommit:        fec3683\n</pre> \n<h3><span style=\"color: #ff0000;\">1. 启用 Buildx</span></h3> \n<p><span style=\"font-size: 14px;\">buildx 命令属于实验特性，因此首先需要开启该特性。</span><br /> <span style=\"font-size: 14px;\">编辑 ~/.docker/config.json 文件，新增如下内容（以下的演示适用于事先不存在 .docker 目录的情况下）</span></p> \n<pre class=\"prettyprint lang-bsh\">$ mkdir ~/.docker\n$ cat &gt; ~/.docker/config.json &lt;&lt;EOF\n{\n\"experimental\": \"enabled\"\n}\nEOF</pre> \n<p><span style=\"font-size: 14px;\">Linux/macOS 下或者通过设置环境变量的方式（不推荐）：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ export DOCKER_CLI_EXPERIMENTAL=enabled</pre> \n<h3><span style=\"color: #ff0000;\">2. 新建 builder 实例</span></h3> \n<p><span style=\"font-size: 14px;\">在 Docker 19.03+ 版本中可以使用 <code>docker buildx build</code> 命令使用 BuildKit 构建镜像。该命令支持 <code>--platform</code> 参数可以同时构建支持多种系统架构的 Docker 镜像，大大简化了构建步骤。</span></p> \n<p><span style=\"font-size: 14px;\">Docker 在 Linux 系统架构下是不支持 arm 架构镜像，因此我们可以运行一个新的容器让其支持该特性，Docker 桌面版则无需进行此项设置。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker run --rm --privileged docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64</pre> \n<p><span style=\"font-size: 14px;\">注：docker/binfmt 可以参考网址：<a href=\"https://hub.docker.com/r/docker/binfmt/tags\" target=\"_blank\" rel=\"noopener noreferrer\">https://hub.docker.com/r/docker/binfmt/tags</a> 获取最新镜像</span></p> \n<p><span style=\"font-size: 14px;\">由于 Docker 默认的 builder 实例不支持同时指定多个 <code>--platform</code> ，我们必须首先创建一个新的 builder 实例。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker buildx create --name mybuilder --driver docker-container</pre> \n<p><span style=\"font-size: 14px;\">返回新的 builder 实例名，为「mybuilder」</span></p> \n<pre class=\"prettyprint lang-bsh\">mybuilder</pre> \n<p><span style=\"font-size: 14px;\">使用新创建好的 builder 实例</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker buildx use mybuilder</pre> \n<p><span style=\"font-size: 14px;\">查看已有的 builder 实例</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker buildx ls\nNAME/NODE    DRIVER/ENDPOINT             STATUS   PLATFORMS\nmybuilder *  docker-container\n  mybuilder0 unix:///var/run/docker.sock inactive \ndefault      docker\n  default    default                     running  linux/amd64, linux/386\n</pre> \n<h3><span style=\"color: #ff0000;\">3. 新建 Dockerfile 文件</span></h3> \n<p><span style=\"font-size: 14px;\">要想构建多种系统架构的镜像，还需要一个支持的 Dockerfile 文件。</span><br /> <span style=\"font-size: 14px;\">以下是一个示例的 Dockerfile 文件。</span><br /> <span style=\"font-size: 14px;\">参考链接：<a href=\"https://github.com/teddysun/across/blob/master/docker/kms/Dockerfile.architecture\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/teddysun/across/blob/master/docker/kms/Dockerfile.architecture</a></span></p> \n<p><span style=\"font-size: 14px;\">该 Dockerfile 文件内容如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">FROM --platform=$TARGETPLATFORM alpine:latest AS builder\nWORKDIR /root\nRUN apk add --no-cache git make build-base &amp;&amp; \\\n    git clone --branch master --single-branch https://github.com/Wind4/vlmcsd.git &amp;&amp; \\\n    cd vlmcsd/ &amp;&amp; \\\n    make\n\nFROM --platform=$TARGETPLATFORM alpine:latest\nLABEL maintainer=\"Teddysun &lt;i@teddysun.com&gt;\"\n\nCOPY --from=builder /root/vlmcsd/bin/vlmcsd /usr/bin/vlmcsd\nEXPOSE 1688\nCMD [ \"vlmcsd\", \"-D\", \"-e\" ]\n</pre> \n<p><span style=\"font-size: 14px;\"><code>$TARGETPLATFORM</code> 是内置变量，由 <code>--platform</code> 参数来指定其值。</span><br /> <span style=\"font-size: 14px;\">由于是基于 <a href=\"https://hub.docker.com/_/alpine\" target=\"_blank\" rel=\"noopener noreferrer\">alpine 的镜像</a>来制作的，而 <a href=\"https://hub.docker.com/_/alpine?tab=tags\" target=\"_blank\" rel=\"noopener noreferrer\">alpine</a> 是支持以下 7 种系统架构的，因此我们制作的镜像也就跟着支持这 7 种系统架构。</span></p> \n<pre class=\"prettyprint lang-bsh\">linux/amd64, linux/arm/v6, linux/arm/v7, linux/arm64/v8, linux/386, linux/ppc64le, linux/s390x</pre> \n<p><span style=\"font-size: 14px;\">更友好一点的架构名称如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">amd64, arm32v6, arm32v7, arm64v8, i386, ppc64le, s390x</pre> \n<p><span style=\"font-size: 14px;\">这里穿插一句吐槽。</span><br /> <span style=\"font-size: 14px;\">简单统计了一下，ARM 的系统架构有如下各种简称：</span></p> \n<pre class=\"prettyprint lang-bsh\">arm64, armv8l, arm64v8, aarch64\narm, arm32, arm32v7, armv7, armv7l, armhf\narm32v6, armv6, armv6l, arm32v5, armv5,  armv5l, armel, aarch32</pre> \n<p><span style=\"font-size: 14px;\">看完了是不是很想打人？</span><br /> <span style=\"font-size: 14px;\">而对比 Intel 和 AMD 的就简单多了：</span></p> \n<pre class=\"prettyprint lang-bsh\">x86, 386, i386, i686\nx86_64, x64, amd64</pre> \n<h3><span style=\"color: #ff0000;\">4. 构建镜像</span></h3> \n<p><span style=\"font-size: 14px;\">先来本地构建一个。</span></p> \n<p><span style=\"font-size: 14px;\">git clone 刚才的示例 Dockerfile 文件，并进入其目录下</span></p> \n<pre class=\"prettyprint lang-bsh\">$ cd ~ &amp;&amp; git clone https://github.com/teddysun/across.git &amp;&amp; cd across/docker/kms/</pre> \n<p><span style=\"font-size: 14px;\">在本地构建支持 7 种 platform 的镜像</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker buildx build --platform linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x,linux/386 -t teddysun/kms -o type=local,dest=~/.docker -f ./Dockerfile.architecture .</pre> \n<p><span style=\"font-size: 14px;\">docker buildx build 的具体参数含义，参考下面的官方文档</span><br /> <span style=\"font-size: 14px;\"><a href=\"https://docs.docker.com/engine/reference/commandline/buildx_build/\">https://docs.docker.com/engine/reference/commandline/buildx_build/</a></span></p> \n<p><span style=\"font-size: 14px;\">做完上面的那一步，实际上是把构建好的镜像放在了本地路径下。</span><br /> <span style=\"font-size: 14px;\">此时我们再来查看一下已有的 builder 实例。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker buildx ls\nNAME/NODE    DRIVER/ENDPOINT             STATUS  PLATFORMS\nmybuilder *  docker-container                    \n  mybuilder0 unix:///var/run/docker.sock running linux/amd64, linux/arm64, linux/riscv64, linux/ppc64le, linux/s390x, linux/386, linux/arm/v7, linux/arm/v6\ndefault      docker                              \n  default    default                     running linux/amd64, linux/386\n</pre> \n<p><span style=\"font-size: 14px;\">你会发现 mybuilder 下存在 8 种支持的架构（riscv64 目前还用不上，但是已经支持）。</span></p> \n<p><span style=\"font-size: 14px;\">此时查看一下 docker image 的运行情况，会发现存在一个名为 <code>buildx_buildkit_mybuilder0</code> 的容器在运行。</span><br /> <span style=\"font-size: 14px;\">这是刚才在本地构建时，自动创建的，切记不要将其停止，也不要删除。</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker ps -as\nCONTAINER ID        IMAGE                           COMMAND           CREATED             STATUS              PORTS             NAMES                        SIZE\nbe753fa16090        moby/buildkit:buildx-stable-1   \"buildkitd\"       15 minutes ago      Up 15 minutes                         buildx_buildkit_mybuilder0   0B (virtual 78.6MB)\n</pre> \n<p><span style=\"font-size: 14px;\">再来构建一个多系统架构镜像，并将构建好的镜像推送到 Docker 仓库（也就是 <a href=\"https://hub.docker.com/\">hub.docker.com</a>）。</span></p> \n<p><span style=\"font-size: 14px;\">在此操作之前，你需要事先注册一个账号（演示过程省略），并登录。</span><br /> <span style=\"font-size: 14px;\">登录命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker login</pre> \n<p><span style=\"font-size: 14px;\">输入你的用户名和密码即可登录。</span></p> \n<p><span style=\"font-size: 14px;\">注意，以下演示的命令中 tag 的前面是我的用户名 <code>teddysun</code>，如果你想制作自己的镜像，请自行替换为你自己的用户名。</span><br /> <span style=\"font-size: 14px;\">使用 <code>--push</code> 参数构建好的镜像推送到 Docker 仓库。</span><br /> <span style=\"font-size: 14px;\">此时仍然是在刚才的 ~/across/docker/kms 目录下，文件 <code>Dockerfile.architecture</code> 是为多系统架构构建准备的。</span><br /> <span style=\"font-size: 14px;\">命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker buildx build --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x -t teddysun/kms --push -f ./Dockerfile.architecture .\n</pre> \n<p><span style=\"font-size: 14px;\">命令执行成功后，你就会在 Docker Hub 看到你上传的镜像啦。示例图如下：</span></p> \n<p><img class=\"left\" style=\"width: auto; height: auto;\" src=\"https://teddysun.com/wp-content/uploads/2020/kms_docker_hub.png\" /></p> \n<h3><span style=\"color: #ff0000;\">5. 写在最后</span></h3> \n<p><span style=\"font-size: 14px;\">在制作多系统架构的 Docker 镜像时，建议使用 CPU 比较强或者多核心的 VPS 来构建，否则会非常耗时。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/581.html\">使用 Docker Buildx 构建多种系统架构镜像</a></p>","descriptionType":"html","publishedDate":"Fri, 12 Jun 2020 08:35:51 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2018/docker.png","linkMd5":"4fa9c259c3d559984364b9a62b7258fb","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn43@2020_4/2020/08/25/00-30-53-616_609ae3d1e5be8850.webp","destWidth":773,"destHeight":537,"sourceBytes":37884,"destBytes":21998,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2018/docker.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn43@2020_4/2020/08/25/00-30-53-616_609ae3d1e5be8850.webp","https://teddysun.com/wp-content/uploads/2020/kms_docker_hub.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn59@2020_2/2020/08/25/00-30-58-831_ede8a59325538dcd.webp"},"publishedOrCreatedDate":1598315426715},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"wordpress修改固定链接后301重定向","link":"https://teddysun.com/?p=182","description":"<p><a href=\"https://teddysun.com/182.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/wordpress-logo.png\" alt=\"wordpress\" title=\"wordpress修改固定链接\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　一开始建站的时候，对于wordpress的固定链接随意设置，等到明白过来的时候，发现已经更新了很多文章了。如果这时候再修改固定链接的话，搜索引擎已经收录了不少文章，那些链接就成了死链，影响网站收录和印象。这时候就要做一下网站链接的301重定向了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　301重定向（<span style=\"font-family:Courier New;\">301 redirect</span>）是指网址的永久性转移（<span style=\"font-family:Courier New;\">Permanently Moved</span>），当网站在搜索引擎索引库中的网址发生改变时，搜索引擎并不能及时改变索引库中的网址。网站管理员通过对网址的301重定向转移，可以避免损失来自搜索引擎的用户。更重要的是，通过301重定向转换，URL的权重、Google PR值都能够不受影响地传递。因此301重定向也是网页更改地址后对搜索引擎非常友好的一种方法。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　要实现网站的301重定向，有很多方法，新手推荐使用<a href=\"http://wordpress.org/extend/plugins/redirection/\" target=\"_blank\"><span style=\"font-family:Courier New;\">redirection</span></a>插件，简单友好，自带中文设置界面。不过这里介绍的是通过修改.htaccess文件进行301重定向，从而实现WordPress固定链接形式的更改。</span></p> \n<p> <span id=\"more-182\"></span> </p> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"font-size:16px;\"><strong>1、什么是.htaccess</strong></span></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　根据<a href=\"http://zh.wikipedia.org/wiki/.htaccess\" target=\"_blank\">维基</a></span><a href=\"http://zh.wikipedia.org/wiki/.htaccess\" target=\"_blank\"><span style=\"font-family:'Microsoft YaHei';font-size:14px;line-height:21px;\"></span><span style=\"font-family:'Microsoft YaHei';font-size:14px;line-height:21px;\"></span></a><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><a href=\"http://zh.wikipedia.org/wiki/.htaccess\" target=\"_blank\">百科</a>，htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"font-size:16px;\"><strong>2、.htaccess中用到的正则表达式</strong></span></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　和通配符类似，正则表达式也是用来进行文本匹配的工具，只不过比起通配符，它能更精确地描述你的需求。</span></p> \n<blockquote>\n <p> ^ –&gt; 匹配字符串的开始<br /> $ –&gt; 匹配字符串的结束<br /> ^$ –&gt; 可以用于确定字符串，即可以用于确定起点或终点。例如：^$ —— 空字符串<br /> \\s –&gt; 匹配任意的空白符<br /> \\w –&gt; 匹配字母或数字或下划线或汉字<br /> \\b –&gt; 是正则表达式规定的一个特殊代码代表着单词的开头或结尾，也就是单词的分界处<br /> \\d –&gt; 匹配一位数字<br /> \\W （大写） –&gt; 匹配任意不是字母，数字，下划线，汉字的字符<br /> \\S （大写） –&gt; 匹配任意不是空白符的字符<br /> \\D （大写） –&gt; 匹配任意非数字的字符<br /> \\B （大写） –&gt; 匹配不是单词开头或结束的位置<br /> “ . ” –&gt; 匹配除了换行符以外的任意字符<br /> “ * ” –&gt; 它代表的不是字符，也不是位置，而是数量——它指定 * 前边的内容可以连续重复使用任意次以使整个表达式得到匹配。“ * ”连在一起就意味着任意数量的不包含换行的字符<br /> “ + ” –&gt; 是和“ * ”类似的元字符,不同的是 * 匹配重复任意次(可能是0次)，而 + 则匹配重复1次或更多次。<br /> “ ? ” –&gt; 重复零次或一次<br /> “ – ” –&gt; 不是元字符，只匹配它本身，即连字符(减号) </p>\n</blockquote> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><span style=\"color:#003399;\">参照更多：</span>《<a href=\"http://lesca.me/archives/htaccess-rewrite.html\" target=\"_blank\">.htaccess技巧: URL重写(Rewrite)与重定向(Redirect)</a>》</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"font-size:16px;\"><strong>3、举例说明</strong></span></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　这里举我自己的例子，一开始我的链接是/archives/%post_id%.html，我想简化成/%post_id%.html，也就是说，需要将中间的/archives去掉。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"font-family:'Courier New';color:red;\"><em>RedirectMatch 301 ^/archives/(.+)$ /$1</em></span></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　说明：^可以理解为语句正式开始，/archives是原来的链接，(.+)表示重复一次或者多次的任意字符，$可以理解为老链接和新链接之间的分割符。再空一格，表示新链接的开始。$1表示/archives之后的全部变量原封不动继承。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"font-size:16px;\"><strong>4、注意事项</strong></span></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　wordpress会自动修改.htaccess文件中# BEGIN WordPress和# END WordPress之间的内容，即使你并没有修改过固定连接。只要点击了“固定连接”，.htaccess文件中# BEGIN WordPress和# END WordPress之间的内容就会被更改，自动还原。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　因此，如果你要添加自己的语句而不被替换的话，将自定义的匹配规则写在.htaccess中的# BEGIN WordPress和# END WordPress之外即可。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';color:#003399;\">　　参考链接：</span><br /> <span style=\"font-size:14px;font-family:Courier New;\">　　<a href=\"http://www.mrbie.com/wordpress-htaccess-301-redirection.html\" target=\"_blank\">http://www.mrbie.com/wordpress-htaccess-301-redirection.html</a></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\">　　<a href=\"http://www.caier.org/301-redirect.html\" target=\"_blank\">http://www.caier.org/301-redirect.html</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/182.html\">wordpress修改固定链接后301重定向</a></p>","descriptionType":"html","publishedDate":"Sat, 27 Apr 2013 02:21:15 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/04/wordpress-logo.png","linkMd5":"ac3a4a1bbbd53f5e30986fc832141f6d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn21@2020_2/2020/08/25/00-30-51-818_667e258f114275c9.webp","destWidth":500,"destHeight":357,"sourceBytes":14064,"destBytes":13584,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/04/wordpress-logo.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn21@2020_2/2020/08/25/00-30-51-818_667e258f114275c9.webp"},"publishedOrCreatedDate":1598315426762},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"phpMyAdmin从4.1.x升级到4.2.x注意事项","link":"https://teddysun.com/?p=359","description":"<p><a href=\"https://teddysun.com/359.html\"><img src=\"https://teddysun.com/wp-content/uploads/2014/phpMyAdmin.png\" title=\"phpMyAdmin从4.1.x升级到4.2.x注意事项\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">从phpMyAdmin4.2.0开始，phpMyAdmin 高级功能的默认数据库 phpmyadmin 中又新增了一张表 pma__savedsearches。所以利用升级脚本 update.sh 将 phpMyAdmin 从 4.1.x 升级到 4.2.x 后，登录 phpMyAdmin 会出现以下提示：</span><br /> <span style=\"font-size:14px;color:red;\">phpMyAdmin 高级功能尚未完全设置，部分功能未激活。</span><br /> <span style=\"font-size:14px;\">点击查看提示信息，就会发现 $cfg[‘Servers’][$i][‘savedsearches’] 出现<span style=\"color:red;\">错误</span>提示。</span></p> \n<p> <span id=\"more-359\"></span> </p> \n<p><a href=\"https://teddysun.com/wp-content/uploads/2014/phpmyadmin_1.png\"><img src=\"http://teddysun.u.qiniudn.com/wp-content/uploads/2014/phpmyadmin_1.png\" title=\"phpmyadmin\" class=\"left\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"><span style=\"color:red;\">备注：</span>如果是全新安装<a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP一键安装脚本</a>，则不受影响。</span></p> \n<p><span style=\"font-size:14px;\"><strong>解决办法：</strong></span><br /> <span style=\"font-size:14px;\">1、删除 phpMyAdmin 安装目录 /data/www/default/phpmyadmin 下旧的配置文件 config.inc.php，再下载最新的文件。</span><br /> <span style=\"font-size:14px;\">命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">rm -f /data/www/default/phpmyadmin/config.inc.php\nwget --no-check-certificate https://raw.githubusercontent.com/teddysun/lamp/master/conf/config.inc.php -O /data/www/default/phpmyadmin/config.inc.php\nchown apache:apache /data/www/default/phpmyadmin/config.inc.php</pre> \n<p> <span style=\"font-size:14px;\">2、导入最新的 sql 文件，将数据库 phpmyadmin 中新增的一张表 pma__savedsearches 创建出来。在安装最新版 phpMyAdmin 时，update.sh 脚本已经把最新的 create_tables.sql 复制到网站服务器上传文件夹 upload/ 中。在 phpMyAdmin 的导入标签中，执行该 sql 文件即可。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2014/phpmyadmin_2.png\"><img src=\"http://teddysun.u.qiniudn.com/wp-content/uploads/2014/phpmyadmin_2.png\" title=\"phpmyadmin\" class=\"left\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">3、退出 phpMyAdmin，重新登录后，错误提示已经不存在了。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2014/phpmyadmin_3.png\"><img src=\"http://teddysun.u.qiniudn.com/wp-content/uploads/2014/phpmyadmin_3.png\" title=\"phpmyadmin\" class=\"left\" style=\"width:auto;height:auto;\" /></a></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/359.html\">phpMyAdmin从4.1.x升级到4.2.x注意事项</a></p>","descriptionType":"html","publishedDate":"Mon, 12 May 2014 01:55:02 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2014/phpMyAdmin.png","linkMd5":"9fba75e95fcb402ce8d726a8da54caaf","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn100@2020_2/2020/08/25/00-30-53-371_e330ed41ac53a429.webp","destWidth":599,"destHeight":424,"sourceBytes":133751,"destBytes":62332,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2014/phpMyAdmin.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn100@2020_2/2020/08/25/00-30-53-371_e330ed41ac53a429.webp","http://teddysun.u.qiniudn.com/wp-content/uploads/2014/phpmyadmin_1.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","http://teddysun.u.qiniudn.com/wp-content/uploads/2014/phpmyadmin_2.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","http://teddysun.u.qiniudn.com/wp-content/uploads/2014/phpmyadmin_3.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg"},"publishedOrCreatedDate":1598315426730},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"玩VPS五大风险需注意","link":"https://teddysun.com/?p=238","description":"<p><a href=\"https://teddysun.com/238.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/07/vps.jpg\" alt=\"vps\" title=\"玩VPS五大风险需注意\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　在4月初的时候，初次接触<a href=\"https://teddysun.com/156.html\" target=\"_blank\">SwiftVM</a>这家VPS提供商，其低价策略赢得了不少市场，但是最后还是没扛住。其VPS业务始于2013年2月15日，终于2013年7月16日。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　我个人是不太喜欢基于Openvz的VPS，可SwiftVM销售的全部VPS都是基于Openvz的，终于在一次128MB半年付6刀的活动中我出手了，买下来之后搭了个PPTP就没再管。没想到过了几天帐号就被Suspension，理由是hacking。经过我前后发了5封邮件，足有上千字的英文（长这么大第一次写这么长的英文）据理力争后，又给我恢复了，但PPTP就再也没连接成功过。128MB内存的VPS，最后只挂了探针。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　本打算让其自生自灭，到期后不再续费。结果收到邮件告知，他们扛不住损失，卖给了SupremeBytes，原来的客户继续由新东家保证运营。于是我打算在这里说一下玩VPS的风险。</span></p> \n<p> <span id=\"more-238\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　出来卖的，都是要赚钱的；出来玩的，都是要花钱的。放之四海而皆准啊有木有。卖VPS如果老是赔本还卖什么卖，不如回去卖红薯好了。商家在前期为了打知名度，搞宣传营销低价甩卖也是正常的，但老是这么甩卖下去，最后肯定要歇火。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　所以个人在选购VPS的时候，碰到不熟悉的商家在搞活动促销，拿不定主意的情况下最好在全球主机论坛里搜索一下，看看口碑如何。相信一家好的服务商，负面消息不会很多。多看几条帖子和回复，能帮你打消购买的瘾。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　玩VPS的风险大致上有以下几种，抛砖引玉：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<b>1、VPS提供商跑路</b></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　这种在论坛里比较常见，多数情况下为one man，也就是说，个人买了几台服务器虚拟出了小鸡卖，结果没控制好，赔本了。最后扛不住，跑路了。然后换个马甲，继续招摇。这也是VPS买家最深恶痛绝的情况，没有之一。有良心的最后还留点时间给别人导出数据，无良的连通知也不通知一声就任其自生自灭了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<b>2、硬盘物理损坏，数据丢失</b></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　相信做过站的人，大多数都有过数据丢失的经历，或多或少而已。就算有每天备份脚本，异地备份什么的，但也是会损失一部分数据的。VPS提供商的服务器对否带有硬Raid10就变得很重要了，如果不是全部的硬盘损坏，那么数据基本无虞。所以，我们在选购VPS的时候，不单单要看价格，还要看母服务器的配置。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<b>3、黑客攻击，沦为肉鸡</b></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　谁也不是一开始就玩VPS玩得很熟，循序渐进有个过程，被黑客攻击那真是太平常不过了。弱密码+默认22端口+启用root用户，简直就是黑客最爱。在我没部署SSH私钥登录服务器之前，系统日志里每天有大量的尝试破解root密码的记录。我一开始还煞费苦心搞了脚本，每隔一小时自动扫描系统日志，发现登录失败的IP就自动屏蔽之。其实这个方法还是太过于被动了。目前最好的方法还是利用私钥和公钥，可杜绝90%以上的恶意攻击。点击查看《<a href=\"https://teddysun.com/237.html\" target=\"_blank\">SSH无密码登录及putty设置</a>》。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<b>4、误操作</b></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　这一点有点主观。我是这么认为的，没有谁一开始就对shell熟悉，也都是在不断的操作后慢慢熟悉各种命令的。论坛以及群里，往往会遇见这样的情况：新人不懂操作，发出问题现象求教，然后就有人恶作剧式地说执行rm -rf /*即可。其实这是删除根目录的命令，而且是不带确认的。如果要有人真这么干了，那后果就只能重装系统了。如果是因为误操作而导致数据丢失，那只能说，慢慢来吧。经验教训很重要，犯过一次错，不要再犯第二次就好了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<b>5、线路抽风</b></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　由于众所周知的原因，海外到国内速度快的，就那么几条光缆。再加上大墙会时不时的发威，所以线路抽风是很常见的。碰到这种情况，除了联系你的VPS提供商之外，别无他法。然后就只有等待线路恢复，或者切换到其他线路。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';color:blue;\">　　综合以上种种，其实想选一个自己十分中意的VPS提供商还是蛮有难度的，除了敢当小白鼠外，其他人给出的意见只能当是参考。当然，价格贵的自然是服务好的，比如Linode、vps.net等。但现实往往是，量力而买。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/238.html\">玩VPS五大风险需注意</a></p>","descriptionType":"html","publishedDate":"Mon, 15 Jul 2013 13:06:43 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/07/vps.jpg","linkMd5":"ae7297f8f0feae0fca3b731d8582b788","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn59@2020_2/2020/08/25/00-30-52-956_961cf20355c72e2d.webp","destWidth":540,"destHeight":318,"sourceBytes":36559,"destBytes":14684,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/07/vps.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn59@2020_2/2020/08/25/00-30-52-956_961cf20355c72e2d.webp"},"publishedOrCreatedDate":1598315426742},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"SSH无密码登录及putty设置","link":"https://teddysun.com/?p=237","description":"<p><a href=\"https://teddysun.com/237.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg\" alt=\"Linux\" title=\"SSH无密码登录及putty设置\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　一般Linux的VPS比Windows的便宜，所以手上的几个VPS清一色Linux发行版CentOS系统。拿到root权限的账号，系统随机生成的密码比较复杂，一般我们为了方便记忆都会改成自己能记得住的，然而这是不安全的。但凡用到密码的地方都只是看似安全。所以，在开通了Linux系统的VPS后，我们有必要对SSH登录做一些基本的安全设置。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　这其中利用公钥和私钥就能实现SSH无密码登录。按照如下步骤操作：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>1、生成公钥和私钥</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　Linux系统中绝大部分的发行版都是用OpenSSH，所以生成公钥私钥的时候最好用ssh-keygen命令，如果用putty自带的PUTTYGEN.EXE生成会不兼容OpenSSH，从而会导致登录时出现server refused our key错误。</span></p> \n<p> <span id=\"more-237\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　用root登录后运行命令如下。</span></p> \n<pre class=\"prettyprint lang-bsh\">ssh-keygen -t rsa\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/root/.ssh/id_rsa):    ##直接回车默认路径\nCreated directory '/root/.ssh'.\nEnter passphrase (empty for no passphrase):                 ##输入密码短语（留空则直接回车）\nEnter same passphrase again:                                ##重复密码短语\nYour identification has been saved in /root/.ssh/id_rsa.\nYour public key has been saved in /root/.ssh/id_rsa.pub.\nThe key fingerprint is:\n04:e1:93:92:95:ba:55:21:58:05:7d:57:58:92:32:d3 root@vpn\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|     oB*o. ..=o  |\n|    .+.+o = E.   |\n|    o.+... =     |\n|    ...o         |\n|     o  S        |\n|    .            |\n|                 |\n|                 |\n|                 |\n+-----------------+</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在/root/.ssh/目录下生成了2个文件，id_rsa为私钥，id_rsa.pub为公钥。私钥自己下载到本地电脑妥善保存，公钥则可以任意公开。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>2、导入公钥</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">运行命令如下。</span></p> \n<pre class=\"prettyprint lang-bsh\">cat /root/.ssh/id_rsa.pub &gt;&gt;  /root/.ssh/authorized_keys</pre> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>3、更改SSH配置文件</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">修改SSH的配置文件/etc/ssh/sshd_config，找到下面3行：</span></p> \n<pre class=\"prettyprint lang-bsh\">#RSAAuthentication yes\n#PubkeyAuthentication yes\n#AuthorizedKeysFile\t.ssh/authorized_keys</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">将前面的#去掉后保存。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">重启SSH服务，运行命令：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">service sshd restart</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>4、制作用于putty的私钥</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">将VPS上的/root/.ssh/id_rsa下载到本地，利用PUTTYGEN.EXE转换为putty用的ppk文件。</span><br /> <img src=\"https://teddysun.com/wp-content/uploads/2013/07/keygen_1.png\" alt=\"keygen1\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">点击File，Load private key，导入/root/.ssh/id_rsa文件。成功后的图片如下所示：</span><br /> <img src=\"https://teddysun.com/wp-content/uploads/2013/07/keygen_2.png\" alt=\"keygen2\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">点击Save private key按钮，生成一个后缀为ppk的文件，比如起名为teddysun.ppk，这个文件就是已经制作好的用于putty无密码登录的私钥了，妥善保存。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>5、配置putty</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">最简便的一个方法是创建一个桌面快捷方式，双击即可无密码登录到VPS。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">找到putty.exe文件，然后右键创建桌面快捷方式，再到桌面上编辑这个快捷方式，在目标一栏中，修改参数如下。</span></p> \n<pre class=\"prettyprint lang-bsh\">\"C:\\Program Files\\PUTTY\\PUTTY.EXE\" -i \"D:\\key\\teddysun.ppk\" root@xxx.xxx.xxx.xxx</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">修改为存放私钥的完整路径，将xxx.xxx.xxx.xxx替换为你的VPS的IP地址即可。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">现在，你可以双击建好的putty快捷方式，看看是否已经可以无密码登录了。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>6、关闭SSH密码登陆</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在上述第5步验证OK后，出于安全需要就可以关闭SSH的密码登录。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">修改SSH的配置文件/etc/ssh/sshd_config，找到下面1行：</span></p> \n<pre class=\"prettyprint lang-bsh\">PasswordAuthentication yes</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">修改为：</span></p> \n<pre class=\"prettyprint lang-bsh\">PasswordAuthentication no</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">重启SSH服务，运行命令：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">service sshd restart</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">搞定，收工。至此，就只能用私钥登录到VPS了，安全性大大增强了。最后，顺便说一句，别跟我说私钥弄丢了怎么办（我都说了要妥善保存的了）。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/237.html\">SSH无密码登录及putty设置</a></p>","descriptionType":"html","publishedDate":"Thu, 11 Jul 2013 16:01:50 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg","linkMd5":"b3637f8cdfb2ae768409659d880a308d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn34@2020_3/2020/08/25/00-30-52-039_da8898b7cb91c054.webp","destWidth":741,"destHeight":316,"sourceBytes":21400,"destBytes":15404,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn34@2020_3/2020/08/25/00-30-52-039_da8898b7cb91c054.webp","https://teddysun.com/wp-content/uploads/2013/07/keygen_1.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn80@2020_3/2020/08/25/00-31-00-126_22e6d429b598cdb1.webp","https://teddysun.com/wp-content/uploads/2013/07/keygen_2.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn44@2020_2/2020/08/25/00-30-59-871_b2104e4f5a1dfec5.webp"},"publishedOrCreatedDate":1598315426742},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"网站改版兼主题汉化","link":"https://teddysun.com/?p=113","description":"<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　用wordpress默认的主题Twentytwelve有段时间了。自己动手把部分CSS重写了，将body的字体以微软雅黑优先渲染后整个页面也好看了不少。但是，每个用wordpress的个人站长不折腾一下主题<span style=\"font-size:14px;line-height:21px;\">貌似</span>人生就不完整一样，于是我也找到了一款简洁淡雅的主题<a href=\"http://www.mono-lab.net/\" target=\"_blank\">neutral</a>并进行了改造工作。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 　　安装完之后都做了以下事情：</span> </p> \n<ul> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">1、自带的语言包不是很完善，选项界面不少还是英文版。于是就自己动手汉化，这里用到了一款软件<a href=\"http://www.poedit.net/\" target=\"_blank\">poedit</a>，在汉化好po文件后自动生成mo文件；</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 2、将页面的字体大小CSS样式改了，普遍的把10px改到12px，将导航栏的文字大小改到14px；</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 3、主题foot.php修改，保留了版权标识；</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 4、主题内各个部分的关于时间的格式化，全部修改为Y年m月j日；</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 5、主题目录下修改默认的gavatar头像；</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 6、去除在head部分显示Wordpress的版本信息；</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 7、自定义WordPress登录页面；</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 8、修改header.php中的Title文字显示；</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> （后续待补充……）</span> </li> \n</ul> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 　　目前的后台效果截图如下：</span></p> \n<p><a href=\"https://teddysun.com/wp-content/uploads/2013/03/theme_option.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/03/theme_option.png\" alt=\"主题选项\" title=\"网站改版兼主题汉化等\" width=\"560\" height=\"315\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a> </p> \n<p> </p> \n<p> </p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/113.html\">网站改版兼主题汉化</a></p>","descriptionType":"html","publishedDate":"Tue, 12 Mar 2013 13:39:22 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/03/theme_option.png","linkMd5":"504be2b9c4e9057b0a520d94cb87f796","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn16@2020_1/2020/08/25/00-30-52-915_28c6634e6840bd87.webp","destWidth":712,"destHeight":642,"sourceBytes":89874,"destBytes":27846,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/03/theme_option.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn16@2020_1/2020/08/25/00-30-52-915_28c6634e6840bd87.webp"},"publishedOrCreatedDate":1598315426749},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"LAMP新增Letsencrypt支持","link":"https://teddysun.com/?p=517","description":"<p><a href=\"https://teddysun.com/517.html\"><img src=\"https://teddysun.com/wp-content/uploads/2017/lamp.jpg\" title=\"LAMP新增Let's Encrypt支持\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a> <span style=\"font-size:14px;\">https（全称：Hyper Text Transfer Protocol over Secure Socket Layer），是以安全为目标的 http 通道，简单讲是 http 的安全版。即 http 下加入 SSL 层，https 的安全基础是 SSL，因此加密的详细内容就需要 SSL。</span><br /> <span style=\"font-size:14px;\"><a href=\"https://lamp.sh/\" target=\"_blank\">LAMP</a> 新增对 Let’s Encrypt 的支持，自动签发免费的证书，并添加自动任务到 crond，定期运行自动更新证书。</span><br /> <span style=\"font-size:14px;\">安装完 <a href=\"https://lamp.sh/\" target=\"_blank\">LAMP</a> 后，lamp 命令就可以使用了，用法如下。</span></p> \n<p> <span id=\"more-517\"></span> </p> \n<pre class=\"prettyprint lang-bsh\">Usage: lamp [ add | del | list ]\nadd     Create new Apache Virtual Host\ndel     Delete Apache Virtual Host\nlist    List all of Apache Virtual Host</pre> \n<p><span style=\"font-size:14px;\">下面为使用 lamp 命令增加 SSL 证书支持的详细使用教程。</span></p> \n<h3> <span style=\"color:red;\">新增虚拟主机</span><br /> </h3> \n<p><span style=\"font-size:14px;\"><span style=\"color:red;\">注意：</span>在新增虚拟主机之前，请务必确保域名已经解析到该服务器（VPS）的 IP 上，否则 Let’s Encrypt 验证无法通过。</span><br /> <span style=\"font-size:14px;\">使用命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">lamp add</pre> \n<p> <span style=\"font-size:14px;\">交互显示如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">Please enter server names(example: www.lamp.sh lamp.sh): 此处输入网站域名\nPlease enter website root directory(default:/data/www/网站域名): 此处输入网站根目录路径，默认回车即可\nPlease enter Administrator Email address: 此处输入管理员邮箱地址\nAdministrator Email address: 此处显示上一步输入的邮箱地址\nDo you want to create a database and mysql user with same name? [y/n]: 此处输入 y 或 n，表示创建或不创建数据库（输入 y）\nVirtual host [网站域名] has been created\nWebsite root directory is: /data/www/网站域名\nDatabase [数据库名] and mysql user [数据库用户名] has been created // 数据库及同名用户创建成功\nReloading the apache config file...\nSyntax OK\nReload success\nDo you want to add a SSL certificate? [y/n]: 此处输入 y 或 n，表示添加或不添加证书（输入 y）\n1: Use your own SSL Certificate and Key\n2: Use Let's Encrypt to create SSL Certificate and Key\nPlease enter 1 or 2: 此处输入 1 或 2，表示使用自己的证书，或使用 Let's Encrypt 签发免费证书（输入 2）\nYou have already chosen Let's Encrypt\nIt will be processed automatically\nInstalling certbot command...\n此处开始下载安装 certbot 命令\nStarting create Let's Encrypt SSL Certificate...\n此处开始安装 certbot 运行所需的依赖库等\nCreating virtual environment...\nInstalling Python packages...\nInstallation succeeded.\nSaving debug log to /var/log/letsencrypt/letsencrypt.log\nPlugins selected: Authenticator webroot, Installer None\nObtaining a new certificate\nPerforming the following challenges:\nhttp-01 challenge for 网站域名\nUsing the webroot path /data/www/网站域名 for all unmatched domains.\nWaiting for verification...\nCleaning up challenges\nIMPORTANT NOTES:\n - Congratulations! Your certificate and chain have been saved at:\n   /etc/letsencrypt/live/网站域名/fullchain.pem\n   Your key file has been saved at:\n   /etc/letsencrypt/live/网站域名/privkey.pem\n   Your cert will expire on 2018-02-02. To obtain a new or tweaked\n   version of this certificate in the future, simply run certbot\n   again. To non-interactively renew *all* of your certificates, run\n   \"certbot renew\"\n - Your account credentials have been saved in your Certbot\n   configuration directory at /etc/letsencrypt. You should make a\n   secure backup of this folder now. This configuration directory will\n   also contain certificates and private keys obtained by Certbot so\n   making regular backups of this folder is ideal.\n - If you like Certbot, please consider supporting our work by:\n\n   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\n   Donating to EFF:                    https://eff.org/donate-le\n\nLet's encrypt crontab renew rule is not exist, create it!\nCreate Let's Encrypt SSL Certificate successfully\nReloading the apache config file...\nSyntax OK\nReload success\nAll done</pre> \n<p> <span style=\"font-size:14px;\">结束后，查看 crond 任务，命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">crontab -l</pre> \n<p> <span style=\"font-size:14px;\">确认返回值里包含以下语句：</span></p> \n<pre class=\"prettyprint lang-bsh\">0 3 */7 * * /bin/certbot renew --disable-hook-validation --renew-hook \"/etc/init.d/httpd restart\"</pre> \n<p> <span style=\"font-size:14px;\">Let’s Encrypt 签发的证书和私钥路径：</span></p> \n<pre class=\"prettyprint lang-bsh\">/etc/letsencrypt/live/网站域名/fullchain.pem\n/etc/letsencrypt/live/网站域名/privkey.pem</pre> \n<p><span style=\"font-size:14px;\">创建完虚拟主机后，网站的根目录为：</span><span style=\"font-size:14px;color:red;\">/data/www/网站域名</span><br /> <span style=\"font-size:14px;\">日志文件的目录为：</span><span style=\"font-size:14px;color:red;\">/data/wwwlog/网站域名</span></p> \n<p> <span style=\"font-size:14px;\">最后，别忘了将你的程序放到网站根目录下，即可使用。</span><br /> <span style=\"font-size:14px;\">祝使用愉快！</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/517.html\">LAMP新增Letsencrypt支持</a></p>","descriptionType":"html","publishedDate":"Sat, 04 Nov 2017 10:43:43 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2017/lamp.jpg","linkMd5":"7c8d32814b30ac4cec32e0d97e26ba16","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn63@2020_2/2020/08/25/00-30-54-867_548c8c79744b5acd.webp","destWidth":800,"destHeight":450,"sourceBytes":109714,"destBytes":23000,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2017/lamp.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn63@2020_2/2020/08/25/00-30-54-867_548c8c79744b5acd.webp"},"publishedOrCreatedDate":1598315426742},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Linux系统中nslookup和dig安装使用","link":"https://teddysun.com/?p=191","description":"<p><a href=\"https://teddysun.com/191.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg\" alt=\"Linux\" title=\"Linux系统中nslookup和dig安装使用\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">大多数<span style=\"font-family:Courier New;\">VPS</span>的<span style=\"font-family:Courier New;\">Linux</span>发行版基本上都是最小化安装的，于是就有很多工具没有被安装，比如我想用到的<span style=\"font-family:Courier New;\">nslookup</span>和<span style=\"font-family:Courier New;\">dig</span>命令。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><span style=\"font-family:Courier New;\">nslookup</span>是常用来查询本机域名解析情况的工具；<span style=\"font-family:Courier New;\">dig(domain information groper)</span>是一个在类Unix命令行模式下查询DNS包括NS记录，A记录，MX记录等相关信息的工具。</span></p> \n<p><span style=\"font-size:14px;\"><span style=\"font-family:Courier New;\">Fedora / Centos</span><span style=\"font-family:Microsoft YaHei;\">系统</span>:</span></p> \n<pre class=\"prettyprint lang-bsh\">yum -y install bind-utils</pre> \n<p><span style=\"font-size:14px;\"><span style=\"font-family:Courier New;\">Debian / Ubuntu</span><span style=\"font-family:Microsoft YaHei;\">系统：</span></span></p> \n<pre class=\"prettyprint lang-bsh\">apt-get -y install dnsutils</pre> \n<p><span id=\"more-191\"></span></p> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>简单介绍使用nslookup检查DNS信息的方法。</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">1、终端中输入命令：<span style=\"font-family:Courier New;\">nslookup</span></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">2、设置nslookup使用的DNS服务器，输入server DNS_server_ip并回车；</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">3、检查某个DNS域名的MX记录，先输入set q=mx，回车后输入想要检查的DNS域名，例如teddysun.com；</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">4、显示其他记录，先输入set q=any，回车后输入想要查询的记录的名称，如下图。</span></p> \n<p><a href=\"https://teddysun.com/wp-content/uploads/2013/05/nslookup.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/nslookup.png\" alt=\"nslookup\" title=\"Linux系统中nslookup和dig安装使用\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>简单介绍使用dig命令查询DNS的方法。</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">1、这是一个带有注释的查询，命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">dig teddysun.com</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">输出的结果如下：</span><br /> <span style=\"font-family:Courier New;\">; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.17.rc1.el6_4.4 &lt;&lt;&gt;&gt; teddysun.com</span><br /> <span style=\"font-family:Courier New;\">;; global options: +cmd</span><br /> <span style=\"font-family:Courier New;\">;; Got answer:</span><br /> <span style=\"font-family:Courier New;\">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 30733</span><br /> <span style=\"font-family:Courier New;\">;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0</span></p> \n<p><span style=\"font-family:Courier New;\">;; QUESTION SECTION:</span><br /> <span style=\"font-family:Courier New;\">;teddysun.com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;A</span><br /> <span style=\"font-family:'Microsoft YaHei';color:#337FE5;\">#在这个查询段中，Dig显示出我们查询的输出，默认的查询是查询A记录</span><br /> <span style=\"font-family:Courier New;\">;; ANSWER SECTION:</span><br /> <span style=\"font-family:Courier New;\">teddysun.com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 10 &nbsp; &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;A &nbsp; &nbsp; &nbsp; 198.211.0.20</span><br /> <span style=\"font-family:'Microsoft YaHei';color:#337FE5;\">#得到查询结果，teddysun.com的IP地址是198.211.0.20</span><br /> <span style=\"font-family:Courier New;\">;; Query time: 215 msec</span><br /> <span style=\"font-family:Courier New;\">;; SERVER: 8.8.8.8#53(8.8.8.8)</span><br /> <span style=\"font-family:Courier New;\">;; WHEN: Tue May &nbsp;7 15:41:01 2013</span><br /> <span style=\"font-family:Courier New;\">;; MSG SIZE &nbsp;rcvd: 46</span><br /> <span style=\"font-family:'Microsoft YaHei';color:#337FE5;\">#最后一段默认输出包含了查询的统计数据，可以用+[no]stats保留</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">2、精简查询，命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">dig teddysun.com +short</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">输出结果：</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\">198.211.0.20</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">3、跟踪dig的查询路径，命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">dig teddysun.com +trace</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">输出结果：</span><br /> <span style=\"font-family:Courier New;\">; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.17.rc1.el6_4.4 &lt;&lt;&gt;&gt; teddysun.com +trace</span><br /> <span style=\"font-family:Courier New;\">;; global options: +cmd</span><br /> <span style=\"font-family:Courier New;\">. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5718 &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;f.root-servers.net.</span><br /> <span style=\"font-family:Courier New;\">. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5718 &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;g.root-servers.net.</span><br /> <span style=\"font-family:Courier New;\">. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5718 &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;b.root-servers.net.</span><br /> <span style=\"font-family:Courier New;\">. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5718 &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;d.root-servers.net.</span><br /> <span style=\"font-family:Courier New;\">. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5718 &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;j.root-servers.net.</span><br /> <span style=\"font-family:Courier New;\">. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5718 &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;e.root-servers.net.</span><br /> <span style=\"font-family:Courier New;\">. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5718 &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;c.root-servers.net.</span><br /> <span style=\"font-family:Courier New;\">. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5718 &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;l.root-servers.net.</span><br /> <span style=\"font-family:Courier New;\">. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5718 &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;k.root-servers.net.</span><br /> <span style=\"font-family:Courier New;\">. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5718 &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;a.root-servers.net.</span><br /> <span style=\"font-family:Courier New;\">. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5718 &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;i.root-servers.net.</span><br /> <span style=\"font-family:Courier New;\">. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5718 &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;m.root-servers.net.</span><br /> <span style=\"font-family:Courier New;\">. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 5718 &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;h.root-servers.net.</span><br /> <span style=\"font-family:Courier New;\">;; Received 228 bytes from 8.8.8.8#53(8.8.8.8) in 381 ms</span></p> \n<p><span style=\"font-family:Courier New;\">com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;172800 &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;h.gtld-servers.net.</span><br /> <span style=\"font-family:Courier New;\">com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;172800 &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;d.gtld-servers.net.</span><br /> <span style=\"font-family:Courier New;\">com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;172800 &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;g.gtld-servers.net.</span><br /> <span style=\"font-family:Courier New;\">com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;172800 &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;f.gtld-servers.net.</span><br /> <span style=\"font-family:Courier New;\">com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;172800 &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;b.gtld-servers.net.</span><br /> <span style=\"font-family:Courier New;\">com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;172800 &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;c.gtld-servers.net.</span><br /> <span style=\"font-family:Courier New;\">com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;172800 &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;k.gtld-servers.net.</span><br /> <span style=\"font-family:Courier New;\">com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;172800 &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;j.gtld-servers.net.</span><br /> <span style=\"font-family:Courier New;\">com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;172800 &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;a.gtld-servers.net.</span><br /> <span style=\"font-family:Courier New;\">com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;172800 &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;l.gtld-servers.net.</span><br /> <span style=\"font-family:Courier New;\">com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;172800 &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;i.gtld-servers.net.</span><br /> <span style=\"font-family:Courier New;\">com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;172800 &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;e.gtld-servers.net.</span><br /> <span style=\"font-family:Courier New;\">com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;172800 &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;m.gtld-servers.net.</span><br /> <span style=\"font-family:Courier New;\">;; Received 502 bytes from 192.58.128.30#53(192.58.128.30) in 5619 ms</span></p> \n<p><span style=\"font-family:Courier New;\">teddysun.com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 172800 &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;f1g1ns1.dnspod.net.</span><br /> <span style=\"font-family:Courier New;\">teddysun.com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 172800 &nbsp;IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;f1g1ns2.dnspod.net.</span><br /> <span style=\"font-family:Courier New;\">;; Received 324 bytes from 192.33.14.30#53(192.33.14.30) in 301 ms</span></p> \n<p><span style=\"font-family:Courier New;\">teddysun.com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 10 &nbsp; &nbsp; &nbsp;IN &nbsp; &nbsp; &nbsp;A &nbsp; &nbsp; &nbsp; 198.211.0.20</span><br /> <span style=\"font-family:Courier New;\">teddysun.com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 600 &nbsp; &nbsp; IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;f1g1ns1.dnspod.net.</span><br /> <span style=\"font-family:Courier New;\">teddysun.com. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 600 &nbsp; &nbsp; IN &nbsp; &nbsp; &nbsp;NS &nbsp; &nbsp; &nbsp;f1g1ns2.dnspod.net.</span><br /> <span style=\"font-family:Courier New;\">;; Received 110 bytes from 122.225.217.191#53(122.225.217.191) in 196 ms</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">你可以在dig输出的头部分看到根DNS，然后找到负责解析<span style=\"font-family:Courier New;\">teddysun.com</span>的<span style=\"font-family:Courier New;\">DNS name servers</span>，最后找到<span style=\"font-family:Courier New;\">teddysun.com</span>的域名IP。</span></p> \n<p> <span style=\"font-family:'Microsoft YaHei';font-size:16px;color:blue;\">参考链接：</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\"><a href=\"http://book.51cto.com/art/200709/55424.htm\" target=\"_blank\">http://book.51cto.com/art/200709/55424.htm</a></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\"><a href=\"http://blog.itechol.com/space-33-do-blog-id-908.html\" target=\"_blank\">http://blog.itechol.com/space-33-do-blog-id-908.html</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/191.html\">Linux系统中nslookup和dig安装使用</a></p>","descriptionType":"html","publishedDate":"Tue, 07 May 2013 08:33:27 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg","linkMd5":"ca8b9f6768e1215775b849376874f989","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn34@2020_3/2020/08/25/00-30-52-039_da8898b7cb91c054.webp","destWidth":741,"destHeight":316,"sourceBytes":21400,"destBytes":15404,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn34@2020_3/2020/08/25/00-30-52-039_da8898b7cb91c054.webp","https://teddysun.com/wp-content/uploads/2013/05/nslookup.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn75@2020_2/2020/08/25/00-30-58-147_bfc461dcf4784572.webp"},"publishedOrCreatedDate":1598315426746},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"免费的才是最贵的","link":"https://teddysun.com/?p=190","description":"<p><a href=\"https://teddysun.com/190.html\"><img class=\"aligncenter\" style=\"width: auto; height: auto;\" title=\"免费的才是最贵的\" src=\"https://teddysun.com/wp-content/uploads/2013/05/free.jpg\" alt=\"free\" /></a></p> \n<p><span style=\"font-size: 14px; font-family: 'Microsoft YaHei';\">　　不管什么时候，在各个搜索引擎的热度排行榜上“免费”二字都是最热门的前缀，比如免费网络游戏，免费邮箱，免费VPS，免费主机等等。其实在互联网上，免费的才是最贵的，你相信吗？对待一个看上去是免费的资源，我们应该用昂贵的目光去审视。</span></p> \n<p><span style=\"font-size: 14px; font-family: 'Microsoft YaHei';\">　　很多人不理解，免费的东西如果是真的有价值，那么我就赚到了，如果没有价值，那反正没花钱，我也亏不了，这样看来，怎么计算我也不吃亏呀。的确，有这样心理的人不在少数，我也曾经抱着这样的想法，贪过不少小便宜，可是事后才发现，真的捡到便宜了吗，不见得，很多都是捡了芝麻丢了西瓜，最后得不偿失。</span></p> \n<p><span id=\"more-190\"></span></p> \n<p><span style=\"font-size: 14px; font-family: 'Microsoft YaHei';\">　　就拿免费主机来说吧，很多站长都有过使用免费空间的经历，为了省一点点收费空间的开支，选择了把自己的网站挂在免费主机上，结果呢，不是速度慢就是不稳定，还总是在关键时候掉链子，遇到那种服务很差的空间，一不小心把辛苦经营的数据毁于一旦你就只能把牙打碎了往自己肚里吞。就算数据可以有备份，可是你辛苦积累起来的流量和人气呢？这种就是典型的得不偿失，还不如花钱使用速度稳定有保障的空间，保证了起步阶段的积累，为将来长远的盈利打好基础。</span></p> \n<p><span style=\"font-size: 14px; font-family: 'Microsoft YaHei';\">　　还有就是很多国外的免费资源，一旦在国内被公布，就会导致国人一窝蜂涌上去申请。老外也不是傻子，久而久之就导致出现这样一个奇特的现象：不允许国人注册或者限制中国的IP，但还是有人开VPN去申请。我曾见过这样一个极品例子，Linode有一段时间搞活动，可以免费试用4小时。就有人在论坛发帖询问有没有一个批量注册脚本，可以自动注册Linode帐号试用其VPS。区区4小时而已，居然都会有人想到要去搞个脚本玩批量注册这种下三滥手段。当然最后的结局是怎样就不得而知，到底有没有出现过这种脚本我也无从知晓，就算有，Linode官方也是会有技术手段侦测出来的吧。</span></p> \n<p><span style=\"font-size: 14px; font-family: 'Microsoft YaHei';\">　　官方出免费试用的活动的初衷应该是让客户体验其服务质量，从而能吸引原先不了解的人付费使用。我觉得Linode价格贵到我接受不了，那我就换一家性价比不错的。没有必要强求低价高质，从商业的本质来说，没有收入就没有服务决定了免费模式不会长久。</span></p> \n<p><span style=\"font-size: 14px; font-family: 'Microsoft YaHei';\">　　前一段时间，我注册了<a href=\"http://aws.amazon.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon</a>的EC2（通过验证的过程非常繁琐，不但要国际信用卡还需手机号码，不过这些举措降低了滥用的可能性），网上盛传其最大亮点可以免费使用一年。对于新用户，可以拥有Amazon EC2的Micro Instances一年的使用期限及相应的空间和流量配额，超出的部分才要算钱。一个Micro Instances有613MB内存和10G硬盘，30GB月流量，其中15G上行流量，15G下行流量。的确很诱惑，但我斟酌良久最后还是放弃申请了。</span></p> \n<p><span style=\"font-size: 14px; font-family: 'Microsoft YaHei';\">　　互联网上没有谁会永远当活雷锋。你免费获得了多少，你相应地就会失去多少。失去金钱是小事，失去生活重心才是大事。在付费的商业模式下，企业依旧存在着收集客户信息的可能，但这些只能更好地帮它分析用户购买的行为，并非其主要收入的来源。在免费的模式下，你只是用户，不是顾客。企业根本无需顾忌契约关系带来的风险。生存的压力让它们有着强烈的动力去搜刮用户的一切并将之变现。</span></p> \n<p><span style=\"font-size: 14px; font-family: 'Microsoft YaHei'; color: red;\"><strong>　　是付费获取稳定，还是免费获取动荡，每个人都有自己的选择。</strong></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/190.html\">免费的才是最贵的</a></p>","descriptionType":"html","publishedDate":"Mon, 06 May 2013 07:28:20 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/free.jpg","linkMd5":"eb2e986fa86a41d4d15e8c5724df3696","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn67@2020_1/2020/08/25/00-30-55-148_564e2b6390a43ada.webp","destWidth":450,"destHeight":499,"sourceBytes":53617,"destBytes":21978,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/free.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn67@2020_1/2020/08/25/00-30-55-148_564e2b6390a43ada.webp"},"publishedOrCreatedDate":1598315426745},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"VPS用途探讨","link":"https://teddysun.com/?p=233","description":"<p><a href=\"https://teddysun.com/233.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/07/vps.jpg\" alt=\"VPS\" title=\"VPS用途探讨\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　玩VPS有瘾，初学者慎入。有时候，迷恋VPS就像迷恋网购一样，一看到配置不错价格不贵线路不抽的VPS就会忍不住出手，往往买回来之后，搭个环境挂个探针就不管不顾了。在资源浪费的同时，我好好想了一下关于VPS如何有效利用这个话题。</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　所谓VPS简而言之就是一台低配服务器，基本上服务器能干的事，VPS也能干（反驳：服务器能虚拟VPS，而VPS就不能）。那么一台VPS，大概能干点什么呢？</span></p> \n<p> <span id=\"more-233\"></span> </p> \n<p><span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　1、<strong>建站。</strong>这是最常见的用途之一。至于是搭建PHP、ASP还是JSP环境，当然是视你的网站程序而定了。网上流传各种一键安装环境脚本，基本不用费什么劲就能搭建好。比如<a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP一键安装脚本</a>。</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　2、<strong>搭梯子。</strong>由于众所周知的原因，很多国外网站在国内是无法访问的，因此我们需要一架梯子（VPN或SSH）来中转，当然已经有人将卖VPN作为一门生意来做了。一众商家都是采用VPS来销售VPN帐号的。</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　3、<strong>挂机。</strong>这个没有技术含量，就是耗费时间和精力。一般在Windows系统里比较容易一点，比如著名的Vagex挂机，利用浏览器自动访问Youtube视频来获取积分，兑换美元。一般Linux系统的VPS都不包含面板，也没有桌面，基本都是最小化安装的系统。当然，如果VPS的内存够大，则可以自主安装KDE或GNOME，然后用VNC远程连接。</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　挂机同时还包括挂QQ或者旺旺帐号之类的，当然，这一般用于在Windows系统下。有些狂热分子喜欢挂QQ升级太阳，因此就有淘宝上的卖家做这门生意。一般他们都是用VPS全天候挂机，用工具一次性挂上万帐号都是可能的。</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　4、<strong>离线下载。</strong>一般服务器的网络速度和带宽就是嗖嗖的，入网带宽至少都有100MB，有的还会是G口，所以下载个什么资源那速度真是没话说（下载的资源最好不要是带有版权的，否则机房查到就会罚款）。流量用不完的时候，就可以整天下载，塞满硬盘为止，然后再用迅雷慢慢拖回本地来。</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　5、<strong>缓存。</strong>并不是所有的VPS都适合国人的，有的线路速度快，有的线路速度慢。如果手上有多个VPS的话，可以考虑将其中的一些拿来做CDN加速，或者做反向代理。有助于提高网站访问速度和防DDOS。</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　6、<strong>代理。</strong>比如著名的一款Twitter API PHP代理程序<a href=\"https://github.com/yegle/twip/\" target=\"_blank\">twip</a>。或者是安装匿名代理，像SSH，L2TP/PPTP，OpenVPN，Nginx反向代理，Squid的HTTP代理，xinet或iptables端口转发等，基本都可以称之为代理，五花八门，可谓种类繁多。</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　7、<strong>架设DNS。</strong>由于众所周知的问题，国内DNS服务器解析国外网站会遭到DNS污染和投毒，使之解析到完全虚构的IP上，造成「开了VPN也没法访问Twitter或Facebook」等问题。用了运营商的DNS服务器后，你就可以免费享受右下角弹窗及「XXX上网导航」页面了。所以，搭建个DNS缓存服务器是个好方法。可利用的软件有dnsmasq、bind等。</span></p> \n<p><span style=\"font-family:'Microsoft YaHei';font-size:14px;color:red;\">　　总结：只要能发挥想象力，VPS大有用途。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/233.html\">VPS用途探讨</a></p>","descriptionType":"html","publishedDate":"Wed, 03 Jul 2013 15:00:38 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/07/vps.jpg","linkMd5":"a67dc54cab0cfa05737229a26e38411e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn59@2020_2/2020/08/25/00-30-52-956_961cf20355c72e2d.webp","destWidth":540,"destHeight":318,"sourceBytes":36559,"destBytes":14684,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/07/vps.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn59@2020_2/2020/08/25/00-30-52-956_961cf20355c72e2d.webp"},"publishedOrCreatedDate":1598315426759},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"又一家VPS：Vultr.com","link":"https://teddysun.com/?p=353","description":"<p><a href=\"https://teddysun.com/353.html\"><img src=\"https://teddysun.com/wp-content/uploads/2014/vultr.png\" alt=\"vultr\" title=\"又一家VPS：Vultr.com\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">Vultr.com最近几个月还是比较火的，在各个主机论坛和测评博客里都有这家。虽然宣传的有12处数据中心，但实际上并不是所有的数据中心都有货。比如今天就是 Frankfurt, DE 和 London, UK 没货。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2014/vultr1.png\"><img src=\"https://teddysun.com/wp-content/uploads/2014/vultr1.png\" alt=\"Vultr\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">这家有个好处就是，可以自定义ISO文件来安装系统（这里的潜台词是，又可以折腾 Windows 2003 了），安装过程全程通过 VNC 可以看到（坑爹的 CentOS 默认模板总是安装失败，让我足足折腾了 3 次，最后不得已换成自定义 ISO 才安装成功）。当然，其计费方式也基本上和 DigitalOcean 一致，按照小时计费，比较灵活。</span></p> \n<p> <span id=\"more-353\"></span> </p> \n<p><a href=\"https://teddysun.com/wp-content/uploads/2014/vultr2.png\"><img src=\"https://teddysun.com/wp-content/uploads/2014/vultr2.png\" alt=\"Vultr\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">这里以一款日本东京的最低套餐来简单测评一下（为什么选日本东京？因为离中国物理距离近，至少白天速度还是很快的）。</span><br /> <span style=\"font-size:14px;\">配置如下：</span><br /> <span style=\"font-size:14px;\">Guaranteed RAM：768MB</span><br /> <span style=\"font-size:14px;\">Swap：1503MB（自定义安装CentOS后自动生成的）</span><br /> <span style=\"font-size:14px;\">Disk Storage：15GB SSD</span><br /> <span style=\"font-size:14px;\">Monthly Transfer：100GB（此处略坑，日本东京的流量只有普通的十分之一）</span><br /> <span style=\"font-size:14px;\">CPU Cores：1</span><br /> <span style=\"font-size:14px;\">IPv4 addresses：1</span><br /> <span style=\"font-size:14px;\">Server Connection Speed：1Gbps</span><br /> <span style=\"font-size:14px;\">Location：Tokyo, Japan</span><br /> <span style=\"font-size:14px;\">Price:$5/month</span></p> \n<p><span style=\"font-size:14px;\"><strong><span style=\"color:red;\">评论：</span></strong>这个配置的性价比不错，至少要比 DigitalOcean 的同等价位配置要高。而且DigitalOcean 默认是没有 Swap，还要手动来创建。Linode 是最低 2G 内存，$20/月起步，折算一下，还是 Vultr.com 性价比高。</span></p> \n<p><span style=\"font-size:14px;\"><strong>1、CPU信息</strong> </span></p> \n<pre class=\"prettyprint lang-bsh\">[root@v1 ~]# cat /proc/cpuinfo\nprocessor       : 0\nvendor_id       : GenuineIntel\ncpu family      : 6\nmodel           : 60\nmodel name      : Vultr Virtual CPU 2\nstepping        : 1\ncpu MHz         : 3392.144\ncache size      : 4096 KB\nphysical id     : 0\nsiblings        : 1\ncore id         : 0\ncpu cores       : 1\napicid          : 0\ninitial apicid  : 0\nfpu             : yes\nfpu_exception   : yes\ncpuid level     : 13\nwp              : yes\nflags           : fpu de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx rdtscp lm constant_tsc up rep_good unfair_spinlock pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx hypervisor lahf_lm xsaveopt fsgsbase bmi1 hle avx2 smep bmi2 erms invpcid rtm\nbogomips        : 6784.28\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 40 bits physical, 48 bits virtual\npower management:</pre> \n<p><br /> <span style=\"font-size:14px;\"><strong>2、内存信息</strong> </span></p> \n<pre class=\"prettyprint lang-bsh\">[root@v1 ~]# cat /proc/meminfo\nMemTotal:         760304 kB\nMemFree:          242420 kB\nBuffers:           19348 kB\nCached:           201852 kB\nSwapCached:            0 kB\nActive:           295372 kB\nInactive:         165204 kB\nActive(anon):     124584 kB\nInactive(anon):   124532 kB\nActive(file):     170788 kB\nInactive(file):    40672 kB\nUnevictable:           0 kB\nMlocked:               0 kB\nSwapTotal:       1540088 kB\nSwapFree:        1540088 kB\nDirty:                28 kB\nWriteback:             0 kB\nAnonPages:        239444 kB\nMapped:            28984 kB\nShmem:              9740 kB\nSlab:              35352 kB\nSReclaimable:      14692 kB\nSUnreclaim:        20660 kB\nKernelStack:         864 kB\nPageTables:         7536 kB\nNFS_Unstable:          0 kB\nBounce:                0 kB\nWritebackTmp:          0 kB\nCommitLimit:     1920240 kB\nCommitted_AS:     907380 kB\nVmallocTotal:   34359738367 kB\nVmallocUsed:        7448 kB\nVmallocChunk:   34359726920 kB\nHardwareCorrupted:     0 kB\nAnonHugePages:    153600 kB\nHugePages_Total:       0\nHugePages_Free:        0\nHugePages_Rsvd:        0\nHugePages_Surp:        0\nHugepagesize:       2048 kB\nDirectMap4k:        8184 kB\nDirectMap2M:      778240 kB</pre> \n<p> </p> \n<pre class=\"prettyprint lang-bsh\">[root@v1 ~]# free -m\n             total       used       free     shared    buffers     cached\nMem:           742        518        224          0         19        189\n-/+ buffers/cache:        309        433\nSwap:         1503          0       1503</pre> \n<p> <span style=\"font-size:14px;\"><strong>3、硬盘信息</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">[root@v1 ~]# df -hal\nFilesystem            Size  Used Avail Use% Mounted on\n/dev/mapper/vg_v1-lv_root\n                       13G  3.0G  9.3G  25% /\nproc                     0     0     0    - /proc\nsysfs                    0     0     0    - /sys\ndevpts                   0     0     0    - /dev/pts\ntmpfs                 372M     0  372M   0% /dev/shm\n/dev/vda1             485M   54M  407M  12% /boot\nnone                     0     0     0    - /proc/sys/fs/binfmt_misc</pre> \n<p> <span style=\"font-size:14px;\"><strong>4、I/O性能</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">[root@v1 ~]# dd if=/dev/zero of=test bs=64k count=16k conv=fdatasync\n16384+0 records in\n16384+0 records out\n1073741824 bytes (1.1 GB) copied, 2.40416 s, 447 MB/s</pre> \n<p> <span style=\"font-size:14px;\"><strong>5、网络性能</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">[root@v1 ~]# wget freevps.us/downloads/bench.sh\n[root@v1 ~]# chmod +x bench.sh\n[root@v1 ~]# ./bench.sh\nCPU model :  Vultr Virtual CPU 2\nNumber of cores : 1\nCPU frequency :  3392.144 MHz\nTotal amount of ram : 742 MB\nTotal amount of swap : 1503 MB\nSystem uptime :   13:46,\nDownload speed from CacheFly: 98.8MB/s\nDownload speed from Coloat, Atlanta GA: 6.63MB/s\nDownload speed from Softlayer, Dallas, TX: 10.5MB/s\nDownload speed from Linode, Tokyo, JP: 52.9MB/s\nDownload speed from i3d.net, Rotterdam, NL: 3.97MB/s\nDownload speed from Leaseweb, Haarlem, NL: 10.1MB/s\nDownload speed from Softlayer, Singapore: 15.7MB/s\nDownload speed from Softlayer, Seattle, WA: 12.8MB/s\nDownload speed from Softlayer, San Jose, CA: 14.1MB/s\nDownload speed from Softlayer, Washington, DC: 8.95MB/s\nI/O speed :  461 MB/s</pre> \n<p> <span style=\"font-size:14px;\"><strong>6、UnixBench性能测试</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">[root@v1 ~]# wget https://teddysun.com/wp-content/uploads/unixbench.sh\n[root@v1 ~]# chmod +x unixbench.sh\n[root@v1 ~]# ./unixbench.sh\n========================================================================\n   BYTE UNIX Benchmarks (Version 5.1.3)\n\n   System: v1.teddyvpn.com: GNU/Linux\n   OS: GNU/Linux -- 2.6.32-431.11.2.el6.x86_64 -- #1 SMP Tue Mar 25 19:59:55 UTC 2014\n   Machine: x86_64 (x86_64)\n   Language: en_US.utf8 (charmap=\"UTF-8\", collate=\"UTF-8\")\n   CPU 0: Vultr Virtual CPU 2 (6784.3 bogomips)\n          Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET\n   14:12:33 up 17:50,  1 user,  load average: 0.03, 0.01, 0.00; runlevel 3\n\n------------------------------------------------------------------------\nBenchmark Run: Fri Apr 25 2014 14:12:33 - 14:40:44\n1 CPU in system; running 1 parallel copy of tests\n\nDhrystone 2 using register variables       44737029.7 lps   (10.0 s, 7 samples)\nDouble-Precision Whetstone                     4340.8 MWIPS (10.9 s, 7 samples)\nExecl Throughput                               7923.3 lps   (30.0 s, 2 samples)\nFile Copy 1024 bufsize 2000 maxblocks       1338595.8 KBps  (30.0 s, 2 samples)\nFile Copy 256 bufsize 500 maxblocks          350938.9 KBps  (30.0 s, 2 samples)\nFile Copy 4096 bufsize 8000 maxblocks       3479564.3 KBps  (30.0 s, 2 samples)\nPipe Throughput                             2625825.3 lps   (10.0 s, 7 samples)\nPipe-based Context Switching                 520782.1 lps   (10.0 s, 7 samples)\nProcess Creation                              27131.5 lps   (30.0 s, 2 samples)\nShell Scripts (1 concurrent)                   8877.8 lpm   (60.0 s, 2 samples)\nShell Scripts (8 concurrent)                   1198.0 lpm   (60.0 s, 2 samples)\nSystem Call Overhead                        3684441.9 lps   (10.0 s, 7 samples)\n\nSystem Benchmarks Index Values               BASELINE       RESULT    INDEX\nDhrystone 2 using register variables         116700.0   44737029.7   3833.5\nDouble-Precision Whetstone                       55.0       4340.8    789.2\nExecl Throughput                                 43.0       7923.3   1842.6\nFile Copy 1024 bufsize 2000 maxblocks          3960.0    1338595.8   3380.3\nFile Copy 256 bufsize 500 maxblocks            1655.0     350938.9   2120.5\nFile Copy 4096 bufsize 8000 maxblocks          5800.0    3479564.3   5999.2\nPipe Throughput                               12440.0    2625825.3   2110.8\nPipe-based Context Switching                   4000.0     520782.1   1302.0\nProcess Creation                                126.0      27131.5   2153.3\nShell Scripts (1 concurrent)                     42.4       8877.8   2093.8\nShell Scripts (8 concurrent)                      6.0       1198.0   1996.6\nSystem Call Overhead                          15000.0    3684441.9   2456.3\n                                                                   ========\nSystem Benchmarks Index Score                                        2223.0</pre> \n<p> <span style=\"font-size:14px;\"><strong>7、chinaz的ping数据</strong></span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2014/vultr_ping.png\"><img src=\"https://teddysun.com/wp-content/uploads/2014/vultr_ping.png\" alt=\"Vultr Ping\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"><strong>8、探针截图</strong></span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2014/vultr_probe.png\"><img src=\"https://teddysun.com/wp-content/uploads/2014/vultr_probe.png\" alt=\"Vultr probe\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;color:#337FE5;\"><strong>写在最后：</strong></span><br /> <span style=\"font-size:14px;\">Vultr.com 是 DigitalOcean 的有力竞争者，随着云技术以及硬件的发展，以后的 VPS 性价比只会越来越高。从测试数据来看，Vultr.com无论是从跑分，还是实际编译 LAMP 环境（全程只花了 21 分钟），性能都是优秀的。</span><br /> <span style=\"font-size:14px;\">这次选择的日本东京数据中心，无论是连接国内还是国外，速度也都是不错的。实际测试下来，服务器确实是G口。100G/月的流量，对于流量大户来说确实有点捉襟见肘。所以，还是略有遗憾。不过对于我来说，这流量是绰绰有余了。</span><br /> <span style=\"font-size:14px;\">对了，目前这家还在搞活动，客户第一次充值，是充多少送多少，上限为$100。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/353.html\">又一家VPS：Vultr.com</a></p>","descriptionType":"html","publishedDate":"Fri, 25 Apr 2014 07:06:09 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2014/vultr.png","linkMd5":"c207934e2e1ec2f7eca32eabb6071876","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn99@2020_1/2020/08/25/00-30-54-255_743a76dfb83057ed.webp","destWidth":640,"destHeight":406,"sourceBytes":206422,"destBytes":26780,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2014/vultr.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn99@2020_1/2020/08/25/00-30-54-255_743a76dfb83057ed.webp","https://teddysun.com/wp-content/uploads/2014/vultr1.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn14@2020_3/2020/08/25/00-30-57-089_c29e18a2ed0ba182.webp","https://teddysun.com/wp-content/uploads/2014/vultr2.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn10@2020_3/2020/08/25/00-30-57-169_55071c28934807c2.webp","https://teddysun.com/wp-content/uploads/2014/vultr_ping.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn7@2020_3/2020/08/25/00-31-00-621_6cffaa3ea9d3c217.webp","https://teddysun.com/wp-content/uploads/2014/vultr_probe.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn100@2020_1/2020/08/25/00-31-00-310_b5ab79ea3aa1720d.webp"},"publishedOrCreatedDate":1598315426730},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"怀念Google Reader","link":"https://teddysun.com/?p=232","description":"<p><a href=\"https://teddysun.com/232.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/google.png\" alt=\"google reader\" title=\"怀念Google Reader\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　Google Reader于北京时间2013年7月2日下午3点左右陆续关闭，但据说目前还有少部分人能用其API同步，正式情况不得而知。对此我只想说四个痔：死得其所。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　告示显示，截至7月15日之前用户还可以利用<a href=\"https://www.google.com/takeout/\" target=\"_blank\">Google Takeout</a>工具导出的Zip文件包含分为8个文件。subscriptions.xml是RSS订阅列表；followers.json是用户关注的Google Reader用户；following.json是用户的关注者；liked.json是用户喜欢的条目；notes.json是用户的笔记；shared.json是用户分享的条目；shared-by-followers.json是关注者分享的条目；starred.json是用户加星的条目。</span></p> \n<p> <span id=\"more-232\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　目前我已经用Feedly替代，但使用体验远不如Google Reader，究其原因，应该是其基础设施远不如Google强大导致。但用gReader pro居然可以无碍同步，大概是用API访问的人没有那么多吧。没有任何一个网页能像Google Reader一样让我停留如此长的时间，一次偶然的机会用上了就再也放不下，时至今日，尽管被阉割过一次功能，我仍然觉得这是最好的RSS阅读器，没有之一。</span><br /> <img src=\"https://teddysun.com/wp-content/uploads/2013/07/google_reader_notice.jpg\" alt=\"google reader notice\" title=\"google reader notice\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　Google Reader能辅助我阅读墙外大量知识，这极大的丰富了我的视野和知识面，曾经连Twitter的时间线都能订阅，无比强大。国内的诸多阅读器，因为理所当然的原因，很多feed无法同步，所以在我眼里等同于废物。这也是我为什么会忍受feedly的龟速同步也要用，原因无它。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　怀念Google Reader，我会记住这是一款伟大的产品。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/232.html\">怀念Google Reader</a></p>","descriptionType":"html","publishedDate":"Tue, 02 Jul 2013 15:33:10 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/google.png","linkMd5":"c991b03dd39b2eddf2ed3026b653c973","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn8@2020_5/2020/08/25/00-30-52-830_5d9178f33877a975.webp","destWidth":520,"destHeight":392,"sourceBytes":93340,"destBytes":14860,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/google.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn8@2020_5/2020/08/25/00-30-52-830_5d9178f33877a975.webp","https://teddysun.com/wp-content/uploads/2013/07/google_reader_notice.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn68@2020_5/2020/08/25/00-30-59-134_65eac3a2b55c7d82.webp"},"publishedOrCreatedDate":1598315426743},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"删除Windows7通知区域图标","link":"https://teddysun.com/?p=111","description":"<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　使用Windows7时间久了，在桌面右下角的通知区域就会多出许多图标来，点击倒三角符号–自定义，就会出现如图所示的界面。</span> <br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/03/tongzhi.jpg\"><img src=\"https://teddysun.com/wp-content/uploads/2013/03/tongzhi.jpg\" alt=\"通知区域\" title=\"通知区域\" class=\"aligncenter size-full wp-image-54\" /></a> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　很多软件在这里留下了痕迹，如果你有洁癖或者不想被人知道你使用过哪些软件（快播之类），就要用到以下教程了。</span> <br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　一、修改计算机日期时间来实现。（推荐）</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　1、鼠标左键点击计算机屏幕右下角的日期时间——点击更改日期和时间设置——点击更改日期和时间——将日期调整到至少前6个月或更久——点击确定。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　2、注销或者重启计算机，再鼠标左键点击计算机屏幕右下角的日期时间——点击更改日期和时间设置——Internet 时间——点击更改设置——点击立即更新。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　当然步骤2你完全也可以自己手动将时间更改回来。</span> </p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　二、修改注册表来实现。（不推荐）</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　1、按“Win+R”组合键，输入“regedit”打开注册表编辑器，然后打开如下键值：</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　HKEY_CLASSES_ROOT\\Local Settings\\Software\\Microsoft\\Windows\\CurrentVersion\\TrayNotify</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　在右边你可以看到两个键值：IconStreams和PastIconsStream，将它们的值删除。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　2、然后调出任务管理器将进程“explorer.exe”终止，再在任务管理器中点击“文件——新建任务”，</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　输入“explorer”，回车，以此重新启动该系统进程。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/111.html\">删除Windows7通知区域图标</a></p>","descriptionType":"html","publishedDate":"Mon, 11 Mar 2013 13:12:40 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/03/tongzhi.jpg","linkMd5":"5286ac14335c4d43de6f4e5539fffd10","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn88@2020_2/2020/08/25/00-30-54-499_757a5c28caf5c18b.webp","destWidth":1000,"destHeight":600,"sourceBytes":112013,"destBytes":36782,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/03/tongzhi.jpg":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn88@2020_2/2020/08/25/00-30-54-499_757a5c28caf5c18b.webp"},"publishedOrCreatedDate":1598315426750},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"CentOS 6.10安装Python2.7.18","link":"https://teddysun.com/?p=473","description":"<p><a href=\"https://teddysun.com/473.html\"><img class=\"aligncenter\" style=\"width: auto; height: auto;\" title=\"CentOS 6.10安装Python2.7.15\" src=\"https://teddysun.com/wp-content/uploads/2013/05/python.png\" alt=\"Python\" /></a></p> \n<p><span style=\"font-size: 14px;\"><strong>查看当前系统中的 Python 版本</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">python --version</pre> \n<p><span style=\"font-size: 14px;\">返回 Python 2.6.6 为正常。</span></p> \n<p><span style=\"font-size: 14px;\"><strong>检查 CentOS 版本</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">cat /etc/redhat-release</pre> \n<p><span style=\"font-size: 14px;\">返回 CentOS release 6.10 (Final) 为正常。</span></p> \n<p><span style=\"font-size: 14px;\"><strong>安装所有的开发工具包</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">yum groupinstall -y \"Development tools\"</pre> \n<p><span id=\"more-473\"></span></p> \n<p><span style=\"font-size: 14px;\"><strong>安装其它的必需包</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">yum install -y zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel</pre> \n<p><span style=\"font-size: 14px;\"><strong>下载、编译和安装 Python 2.7.18</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">wget https://www.python.org/ftp/python/2.7.18/Python-2.7.18.tgz\ntar zxf Python-2.7.18.tgz\ncd Python-2.7.18\n./configure --enable-optimizations\nmake &amp;&amp; make install</pre> \n<p><span style=\"font-size: 14px;\">默认 Python 2.7.18 会安装在 /usr/local/bin 目录下。</span></p> \n<pre class=\"prettyprint lang-bsh\">ll -tr /usr/local/bin/python*\n\n/usr/local/bin/python2.7\n/usr/local/bin/python2.7-config\n/usr/local/bin/python -&gt; python2\n/usr/local/bin/python2 -&gt; python2.7\n/usr/local/bin/python2-config -&gt; python2.7-config\n/usr/local/bin/python-config -&gt; python2-config\n</pre> \n<p><span style=\"font-size: 14px;\">而系统自带的 Python 是在 /usr/bin 目录下。</span></p> \n<pre class=\"prettyprint lang-bsh\">ll -tr /usr/bin/python*\n\n/usr/bin/python2.6-config\n/usr/bin/python2.6\n/usr/bin/python\n/usr/bin/python2 -&gt; python\n/usr/bin/python-config -&gt; python2.6-config\n</pre> \n<p><span style=\"font-size: 14px;\"><strong>更新系统默认 Python 版本</strong></span></p> \n<p><span style=\"font-size: 14px;\">先把系统默认的旧版 Python 重命名。</span></p> \n<pre class=\"prettyprint lang-bsh\">mv /usr/bin/python /usr/bin/python.old\n</pre> \n<p><span style=\"font-size: 14px;\">再删除系统默认的 python-config 软链接。</span></p> \n<pre class=\"prettyprint lang-bsh\">rm -f /usr/bin/python-config\n</pre> \n<p><span style=\"font-size: 14px;\">最后创建新版本的 Python 软链接。</span></p> \n<pre class=\"prettyprint lang-bsh\">ln -s /usr/local/bin/python /usr/bin/python\nln -s /usr/local/bin/python-config /usr/bin/python-config\nln -s /usr/local/include/python2.7/ /usr/include/python2.7\n</pre> \n<p><span style=\"font-size: 14px;\">以上步骤做完以后，目录 /usr/bin 下的 Python 应该是</span></p> \n<pre class=\"prettyprint lang-bsh\">ll -tr /usr/bin/python*\n\n/usr/bin/python2.6-config\n/usr/bin/python2.6\n/usr/bin/python.old\n/usr/bin/python2 -&gt; python\n/usr/bin/python -&gt; /usr/local/bin/python\n/usr/bin/python-config -&gt; /usr/local/bin/python-config</pre> \n<p><span style=\"font-size: 14px;\"><strong>查看新的 Python 版本</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">python --version</pre> \n<p><span style=\"font-size: 14px;\">返回 Python 2.7.18 为正常。</span></p> \n<p><span style=\"font-size: 14px;\"><strong>以下步骤还是有必要的</strong></span></p> \n<p><span style=\"font-size: 14px;\">为新版 Python 安装 setuptools</span></p> \n<pre class=\"prettyprint lang-bsh\">wget https://bootstrap.pypa.io/ez_setup.py -O - | python</pre> \n<p><span style=\"font-size: 14px;\">setuptools 正确安装完成后，easy_install 命令就会被安装在 /usr/local/bin 目录下了。</span></p> \n<p><span style=\"font-size: 14px;\">为新版 Python 安装 pip</span></p> \n<pre class=\"prettyprint lang-bsh\">easy_install pip</pre> \n<p><span style=\"font-size: 14px;\">正确安装完成后，pip 命令就会被安装在 /usr/local/bin 目录下了。</span></p> \n<p><span style=\"font-size: 14px;\">为新版 Python 安装 distribute 包（可选）</span></p> \n<pre class=\"prettyprint lang-bsh\">pip install distribute</pre> \n<p><span style=\"font-size: 14px;\">至此，新版 Python 即算安装完毕了。</span></p> \n<p><span style=\"font-size: 14px;\"><span style=\"color: red;\"><strong>注意：</strong></span>这可能会导致以前安装过的 Python 程序运行不了或者无法重启之类的（比如著名的 Shadowsocks Python 版）。原因是旧版的 pkg_resources 位于 /usr/lib/python2.6/site-packages 下。而新版的则是在 /usr/local/lib/python2.7/site-packages 下。</span><br /> <span style=\"font-size: 14px;\">所以，也许你需要重新安装一下程序。</span></p> \n<p><span style=\"font-size: 14px;\"><span style=\"color: red;\"><strong>再次注意：</strong></span>升级 Python 可能会导致 yum 命令不可用。解决方法如下：</span><br /> <span style=\"font-size: 14px;\">编辑 /usr/bin/yum 文件，将开头第一行的</span></p> \n<pre class=\"prettyprint lang-bsh\">#!/usr/bin/python</pre> \n<p><span style=\"font-size: 14px;\">改为</span></p> \n<pre class=\"prettyprint lang-bsh\">#!/usr/bin/python2.6</pre> \n<p><span style=\"font-size: 14px;\">但是，这种改法，万一哪天你 yum update 了一下，yum 被升级了后，又变回老样子了。</span><br /> <span style=\"font-size: 14px;\">所以，经过我的不懈琢磨和努力，发现了一个办法（网上的解决方案都是抄来抄去，没有一点卵用）。</span><br /> <span style=\"font-size: 14px;\">记住旧版本 Python 2.6.6 的重要路径如下所示，在运行 yum 命令的时候，会提示你哪个 module 不存在，不存在的我们就去旧版本的路径下找，一定能找到的。找到后，复制到新版本 Python 的路径 /usr/local/lib/python2.7/site-packages/ 下即可。</span></p> \n<pre class=\"prettyprint lang-bsh\">/usr/lib/python2.6/site-packages/\n/usr/lib64/python2.6/site-packages/</pre> \n<p><span style=\"font-size: 14px;\">我的复制过程是这样的：</span></p> \n<pre class=\"prettyprint lang-bsh\">cp -r /usr/lib/python2.6/site-packages/yum /usr/local/lib/python2.7/site-packages/\ncp -r /usr/lib/python2.6/site-packages/rpmUtils /usr/local/lib/python2.7/site-packages/\ncp -r /usr/lib/python2.6/site-packages/iniparse /usr/local/lib/python2.7/site-packages/\ncp -r /usr/lib/python2.6/site-packages/urlgrabber /usr/local/lib/python2.7/site-packages/\ncp -r /usr/lib64/python2.6/site-packages/rpm /usr/local/lib/python2.7/site-packages/\ncp -r /usr/lib64/python2.6/site-packages/curl /usr/local/lib/python2.7/site-packages/\ncp -p /usr/lib64/python2.6/site-packages/pycurl.so /usr/local/lib/python2.7/site-packages/\ncp -p /usr/lib64/python2.6/site-packages/_sqlitecache.so /usr/local/lib/python2.7/site-packages/\ncp -p /usr/lib64/python2.6/site-packages/sqlitecachec.py /usr/local/lib/python2.7/site-packages/\ncp -p /usr/lib64/python2.6/site-packages/sqlitecachec.pyc /usr/local/lib/python2.7/site-packages/\ncp -p /usr/lib64/python2.6/site-packages/sqlitecachec.pyo /usr/local/lib/python2.7/site-packages/</pre> \n<p>&nbsp;</p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/473.html\">CentOS 6.10安装Python2.7.18</a></p>","descriptionType":"html","publishedDate":"Sat, 10 Sep 2016 07:22:57 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/python.png","linkMd5":"cc2ebae819df3567059a2b598ea02e2c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn15@2020_2/2020/08/25/00-30-51-804_4bcae60bfba8e964.webp","destWidth":520,"destHeight":226,"sourceBytes":16127,"destBytes":5900,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/python.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn15@2020_2/2020/08/25/00-30-51-804_4bcae60bfba8e964.webp"},"publishedOrCreatedDate":1598315426729},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"备份Google Reader数据","link":"https://teddysun.com/?p=231","description":"<p><a href=\"https://teddysun.com/231.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/06/google_reader_close.jpg\" alt=\"google reader\" title=\"备份Google Reader数据\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　7月1日就是<a href=\"https://teddysun.com/208.html\" target=\"_blank\">Google Reader的死期</a>了，事到如今看来Google是没有打算回心转意了。不管不顾那几千万Google Reader的死忠用户也就罢了，可数据是用户说了算的。所以，导出数据是当务之急。已经有人为你写好了Python脚本，你需要做的就是运行它，然后导出数据即可。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　因为不喜欢Google的Takeout，所以<a href=\"http://readerisdead.com/\" target=\"_blank\">Mihai Parparita</a>开发出了这个脚本。运行这个脚本需要安装Python2.7（参考：<a href=\"https://teddysun.com/215.html\" target=\"_blank\">CentOS 6.4安装Python2.7.5</a>），支持Windows、Mac、Linux系统。该脚本存档后的Google Reader数据包括：你的订阅、你的笔记、你加星的条目、你喜欢的条目、你follow的好友、follow你的好友、你follow好友所分享的条目等。</span></p> \n<p> <span id=\"more-231\"></span> </p> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">1、下载脚本.zip或.tar格式，链接：</span></p> \n<pre class=\"prettyprint lang-bsh\">1）https://github.com/mihaip/readerisdead/zipball/master\n2）https://github.com/mihaip/readerisdead/tarball/master\n3）Linux下利用git命令下载：\ncd /opt\ngit clone https://github.com/mihaip/readerisdead.git</pre> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">2、运行脚本</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">如果是在Windows下运行，首先要安装<a href=\"http://www.python.org/download/\" target=\"_blank\">Python2.7</a>，然后运行后缀名为.bat的文件。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">该脚本分为3个模块：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">1）reader_archive</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">cd readerisdead/bin\n./reader_archive --output_directory=~/Downloads/reader_archive</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">运行后会打开Google账户登录界面，输入帐号密码授权。导出数据会耗费比较长的时间，视你的网络状况及feed数量而定。备份300,000条数据，一般需要至少10分钟以上，产生大约1GB的数据。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">2）feed_archive</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">cd readerisdead/bin\n./feed_archive \\\n    --opml_file=~/Downloads/feeds.opml \\\n    --output_directory=~/Downloads/feed_archive</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">该命令是从Google Reader feed archive中获得全部的公开的feed，以OPML标准文件存储。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">3）reader_browser</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">备注：该功能仍在开发中。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">利用reader_archive导出数据后，可以用reader_browser命令浏览这些导出后的数据。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">cd readerisdead/bin\n./reader_browser ~/Downloads/reader_archive</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">然后会调用你的浏览器打开一个本地网址：<span style=\"font-family:Courier New;\">http://localhost:8071/</span>去浏览。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';color:red;\"><b>更新（2013年7月1日）：</b></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在Linux下使用shell运行命令时会遇到错误，要求开启Javascipt才行继续授权。因此建议在Windows下安装好Python后运行该脚本。今天是最后一天使用Google Reader了，明天该服务就会彻底shutdown了。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/231.html\">备份Google Reader数据</a></p>","descriptionType":"html","publishedDate":"Sun, 30 Jun 2013 03:43:29 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/06/google_reader_close.jpg","linkMd5":"b742eb374161cdec1ca327337410bbd7","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn27@2020_6/2020/08/25/00-30-52-981_94883d543c6f2fc0.webp","destWidth":540,"destHeight":374,"sourceBytes":30828,"destBytes":18838,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/06/google_reader_close.jpg":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn27@2020_6/2020/08/25/00-30-52-981_94883d543c6f2fc0.webp"},"publishedOrCreatedDate":1598315426742},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"摩天楼:Bug不少的灾难片","link":"https://teddysun.com/?p=198","description":"<p><a href=\"https://teddysun.com/198.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/Tower.jpg\" alt=\"摩天楼\" title=\"摩天楼:Bug不少的灾难片\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　到了周末人也变得懒了，只想看些轻松的愉悦一下自己，却没想看了这样的一部号称高达130亿韩币投资的灾难片巨制——《摩天楼（The Tower）》。起初我是被演员表里的孙艺珍给吸引眼球了。几年前对其一部文艺片《我脑海里的橡皮擦》印象深刻，对于孙艺珍的美，感到惊艳至极，至今仍觉无人能望其项背。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　废话不多说。在你还没看过这片子之前，可以忽略以下的文字，直接跳到文末点击下载链接，以免被剧透。当然，如果你看完了，并且觉得其中好像有一些地方不对劲，那么跟随我来逐一指出该片有哪些Bug，该惊呼的时候惊呼，该煽情的时候煽情，该温情的时候温情……</span></p> \n<p> <span id=\"more-198\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　1、引起这座摩天楼起火的原因是直升飞机失事撞击导致机油泄漏继而引发火灾。影片一开始也交待了，60层以上的消防喷淋装置因为天气原因管道冻结从而不出水，但60层以下的完全没有问题。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"color:#003399;\">问题一</span>，影片中第28层和第37层的火是怎么引起的？让我来猜一猜，由电梯井的火势引起的么。可为什么60层以下的消防喷淋装置不起作用？</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　2、会长明知道气流上升频繁，楼顶可能会有狂风，还要打电话给首尔厅长，强行让直升机挂载造雪机，遇到强气流引发直升机失控，砸向reverview楼。这是一场人祸引起的大灾变。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"color:#003399;\">问题二</span>，这个会长明明当时也跟那对老年情侣在同一楼层的，他是什么时候去控制室的？最后他又莫明奇妙到了一楼的指挥中心。请问，他是否会瞬间转移大法？</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　3、放眼望去整个大楼全是大火，而真正的起火点是第63层直升飞机失事处。消防员历尽艰难扑灭了起火点后，同时又关闭了防火墙，画面中可以看到，火势已经非常小了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"color:#003399;\">问题三</span>，连接reverview楼和cityview楼的云梯通道，全玻璃设计是否合理？如果合理，为什么那么轻易破碎？</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　4、我们看到其中有一位孕妇，挺个大肚子跟男女主角一起跳起降机，并且一而再再而三地经历了云梯通道玻璃碎裂，电梯坠落，大水冲击，爆破蓄水池后浮出汉江。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"color:#003399;\">问题四</span>，如果这位孕妇还是人类的话，我想她最后应该不会活着。大概是导演或者编剧安排的吧，是吗？</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　5、起火的是reverview楼，而男主角的女儿荷娜在被消防员李善宇救到cityview楼后，大家居然都跑到cityview楼的楼顶去了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"color:#003399;\">问题五</span>，明明cityview楼是安全的，同时也并没有起火，为什么一帮人还聚在楼顶等直升机救援？直接搭电梯下去不就行了么。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　6、reverview楼起火导致钢筋软化，楼体失衡，眼看就要倒塌引发连锁反应，指挥中心的那帮人才想起来水箱里还有800吨水。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"color:#003399;\">问题六</span>，如果水箱中的水清空可以减轻重量，同时缓解楼体倾斜的幅度，顺便还灭了火，请问为什么不早点去放呢？</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　7、结尾处的剧情有生搬硬套之嫌疑，女主角随电梯坠入大楼的最底层，如果剧情到了这里戛然而止，说不定还悲情一些。消防队长和男主角逃出生天，连口气都没喘匀又要去救援。当消防队长接过那个遥控爆破装置时，我就猜到这个倒霉的家伙肯定要死了。果不其然，遥控爆破装置掉了，必须手动爆炸，队长死了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"color:#003399;\">问题七</span>，消防队长为什么死了？好吧，这个问题，自问自答一下。因为大片的气势有了，镜头有了，官僚的腐败有了，爱情有了，亲情有了，不过观众还没哭，导演说让男主角死，编剧说不行啊，这样漂亮的女主角会伤心的，那好吧让消防员队长死，反正他也不常回家，于是就有了掉摇控炸蓄水池的那一幕，然后背景音乐，慢镜头，让观众哭去吧。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　点评一下：<span style=\"color:red;\">向好莱坞致敬却水平有限，大制作只是徒有其表。</span>没有好剧情支撑，充其量也只能算是技术不错。我猜那130亿韩币的投资应该大部分都花在了影片特效上了吧，不然请个好点的编剧，结局也应该不至于那么狗血。当然，如果你愿意继续找，还会有其他Bug的。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　补充一句，女主角孙艺珍真心漂亮，就算她灰头土脸的一身还是漂亮。这么漂亮的女主角可不能死。我想编剧应该是跟我想的一样的吧。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　还有，男主角金相庆从某个角度看很像李彦宏有没有？</span><br /> <img src=\"https://teddysun.com/wp-content/uploads/2013/05/Tower.png\" alt=\"金相庆\" title=\"Sang-kyung Kim\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　下载链接，点<a href=\"https://teddysun.com/?p=198/ftp://dygod1:dygod1@d079.dygod.org:9047/[%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82-www.dy2018.net].%E6%91%A9%E5%A4%A9%E6%A5%BC.BD.1280x720.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.rmvb\" target=\"_blank\">这里</a>（用迅雷，你懂的）。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/198.html\">摩天楼:Bug不少的灾难片</a></p>","descriptionType":"html","publishedDate":"Sun, 12 May 2013 13:13:40 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/Tower.jpg","linkMd5":"3091f7a9184400aed5fd7196e3ed21d0","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn55@2020_6/2020/08/25/00-30-55-472_75aea0ca340c8b6f.webp","destWidth":520,"destHeight":741,"sourceBytes":179450,"destBytes":67896,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/Tower.jpg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn55@2020_6/2020/08/25/00-30-55-472_75aea0ca340c8b6f.webp","https://teddysun.com/wp-content/uploads/2013/05/Tower.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn52@2020_6/2020/08/25/00-30-58-445_74a3b261d1205799.webp"},"publishedOrCreatedDate":1598315426744},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"相册频道正式上线","link":"https://teddysun.com/?p=110","description":"<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　建站总是离不开图文并茂的文章，wordpress自带的多媒体功能稍显弱势，很多功能都不能很好的支持，比如以相册的方式呈现。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　大流量的VPS只更新文字信息有点浪费，不如玩玩个人相册吧。因此本站的</span><a target=\"_blank\" href=\"https://teddysun.com/pic\"><span style=\"font-size:14px;font-family:Microsoft YaHei;\">相册频道</span></a><span style=\"font-size:14px;font-family:Microsoft YaHei;\">正式上线，欢迎访问。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　</span><a target=\"_blank\" href=\"http://www.meiu.cn/\"><span style=\"font-size:14px;font-family:Microsoft YaHei;\">美优相册管理系统</span></a><span style=\"font-size:14px;font-family:Microsoft YaHei;\">，可以满足个人使用的大部分需求。目前这个系统是单用户使用的，也就是说安装后，只能是管理员用户登录后台操作。</span></p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　优点如下：</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　1、操作简便，图片的EXIF信息完整保留；</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　2、拥有属于自己的外链，批量上传，图片水印，一键复制；</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　3、专属相册，权限控制，展示淋漓尽致的生活；</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　4、强大的分类管理；</span></p> \n<p> <span id=\"more-110\"></span> </p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　运行环境：</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　LAMP（Linux + Apache + MySQL + PHP）或LNMP（Linux + Nginx + MySQL + PHP）带gd扩展即可。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　PHP所需版本4.3以上，MySQL所需版本4.1以上。</span> <br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　截图：</span> </p> \n<p align=\"center\"> <span style=\"font-size:14px;font-family:Microsoft YaHei;\"><img src=\"https://teddysun.com/wp-content/uploads/2013/03/picture.png\" title=\"相册频道\" alt=\"相册频道\" /> </span> </p> \n<p> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">　　欢迎使用我编写的<a target=\"_blank\" href=\"https://teddysun.com/45.html\">LAMP脚本</a>安装到VPS上，只需很少的输入即可一键搭建好环境，自带大部分扩展（当然包括gd），满足大部分需求。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/110.html\">相册频道正式上线</a></p>","descriptionType":"html","publishedDate":"Sun, 10 Mar 2013 10:07:21 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/03/picture.png","linkMd5":"716fab4aaaa652634c6f566e2e1d76fa","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn58@2020_1/2020/08/25/00-30-52-213_3689015e122ad5ab.webp","destWidth":800,"destHeight":509,"sourceBytes":295988,"destBytes":29842,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/03/picture.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn58@2020_1/2020/08/25/00-30-52-213_3689015e122ad5ab.webp"},"publishedOrCreatedDate":1598315426750},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Linux系统中常用操作命令","link":"https://teddysun.com/?p=351","description":"<p><a href=\"https://teddysun.com/351.html\"><img src=\"https://teddysun.com/wp-content/uploads/2014/Linux.jpg\" alt=\"Linux\" title=\"Linux系统中常用操作命令\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"><strong>常用指令</strong></span></p> \n<p><span style=\"font-size:14px;\">ls　　 &nbsp; &nbsp; &nbsp; &nbsp;显示文件或目录</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;-l &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;列出文件详细信息l(list)</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;-a &nbsp; &nbsp; &nbsp; &nbsp; 列出当前目录下所有文件及目录，包括隐藏的a(all)</span><br /> <span style=\"font-size:14px;\">mkdir &nbsp; &nbsp; &nbsp; &nbsp; 创建目录</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;-p &nbsp; &nbsp; &nbsp; &nbsp; 创建目录，若无父目录，则创建p(parent)</span><br /> <span style=\"font-size:14px;\">cd &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 切换目录</span><br /> <span style=\"font-size:14px;\">touch &nbsp; &nbsp; &nbsp; &nbsp;创建空文件</span><br /> <span style=\"font-size:14px;\">echo &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;创建带有内容的文件。</span><br /> <span style=\"font-size:14px;\">cat &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;查看文件内容</span><br /> <span style=\"font-size:14px;\">cp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 拷贝</span></p> \n<p><span id=\"more-351\"></span></p> \n<p><span style=\"font-size:14px;\">mv &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;移动或重命名</span><br /> <span style=\"font-size:14px;\">rm &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;删除文件</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;-r &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 递归删除，可删除子目录及文件</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;-f &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;强制删除</span><br /> <span style=\"font-size:14px;\">find &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 在文件系统中搜索某文件</span><br /> <span style=\"font-size:14px;\">wc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;统计文本中行数、字数、字符数</span><br /> <span style=\"font-size:14px;\">grep &nbsp; &nbsp; &nbsp; &nbsp; 在文本文件中查找某个字符串</span><br /> <span style=\"font-size:14px;\">rmdir &nbsp; &nbsp; &nbsp; &nbsp;删除空目录</span><br /> <span style=\"font-size:14px;\">tree &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;树形结构显示目录，需要安装tree包</span><br /> <span style=\"font-size:14px;\">pwd &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;显示当前目录</span><br /> <span style=\"font-size:14px;\">ln &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;创建链接文件</span><br /> <span style=\"font-size:14px;\">more、less &nbsp; &nbsp;分页显示文本文件内容</span><br /> <span style=\"font-size:14px;\">head、tail &nbsp; &nbsp; 显示文件头、尾内容</span><br /> <span style=\"font-size:14px;\">ctrl+alt+F1 &nbsp; 命令行全屏模式</span></p> \n<p><span style=\"font-size:14px;\"><strong>系统管理命令</strong></span></p> \n<p><span style=\"font-size:14px;\">stat &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;显示指定文件的详细信息，比ls更详细</span><br /> <span style=\"font-size:14px;\">who &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 显示在线登陆用户</span><br /> <span style=\"font-size:14px;\">whoami &nbsp; &nbsp; &nbsp;显示当前操作用户</span><br /> <span style=\"font-size:14px;\">hostname &nbsp; 显示主机名</span><br /> <span style=\"font-size:14px;\">uname &nbsp; &nbsp; &nbsp; &nbsp;显示系统简要信息</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;-a &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;显示系统完整信息</span><br /> <span style=\"font-size:14px;\">top &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 动态显示当前耗费资源最多进程信息</span><br /> <span style=\"font-size:14px;\">ps &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 显示瞬间进程状态 ps aux</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;-ef &nbsp; &nbsp; &nbsp; &nbsp; 显示系统常驻进程</span><br /> <span style=\"font-size:14px;\">du &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;查看目录大小 du -h /home带有单位显示目录信息</span><br /> <span style=\"font-size:14px;\">df &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 查看磁盘大小 df -h 带有单位显示磁盘信息</span><br /> <span style=\"font-size:14px;\">ifconfig &nbsp; &nbsp; &nbsp; 查看网络情况</span><br /> <span style=\"font-size:14px;\">ping &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 测试网络连通</span><br /> <span style=\"font-size:14px;\">netstat &nbsp; &nbsp; &nbsp; 显示网络状态信息</span><br /> <span style=\"font-size:14px;\">man &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 显示命令手册</span><br /> <span style=\"font-size:14px;\">clear &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 清屏</span><br /> <span style=\"font-size:14px;\">alias &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;对命令重命名 如：alias showmeit=”ps aux” ，另外解除使用unaliax showmeit</span><br /> <span style=\"font-size:14px;\">kill &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;杀死进程，可以先用 ps 或 top 命令查看进程的id，然后再用kill命令杀死进程。</span></p> \n<p><span style=\"font-size:14px;\"><strong>打包压缩相关命令</strong></span></p> \n<p><span style=\"font-size:14px;\">gzip：</span><br /> <span style=\"font-size:14px;\">bzip2：</span><br /> <span style=\"font-size:14px;\">tar: &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;打包压缩</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;-c &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 归档文件</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;-x &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 解压缩文件</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;-z &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; gzip压缩文件</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;-j &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bzip2压缩文件</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;-v &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;显示压缩或解压缩过程 v(view)</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;-f &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 使用档名</span><br /> <span style=\"font-size:14px;\">例：</span><br /> <span style=\"font-size:14px;\">tar -cvf /home/abc.tar /home/abc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;只打包，不压缩</span><br /> <span style=\"font-size:14px;\">tar -zcvf /home/abc.tar.gz /home/abc &nbsp; &nbsp; &nbsp; &nbsp;打包，并用gzip压缩</span><br /> <span style=\"font-size:14px;\">tar -jcvf /home/abc.tar.bz2 /home/abc &nbsp; &nbsp; &nbsp; 打包，并用bzip2压缩</span></p> \n<p><span style=\"font-size:14px;\">如果想解压缩，就直接替换上面的命令 &nbsp;tar -cvf &nbsp;/ tar -zcvf &nbsp;/ tar -jcvf 中的“c” 换成“x” 就可以了。</span></p> \n<p> <span style=\"font-size:14px;\"><strong>关机/重启机器</strong></span></p> \n<p><span style=\"font-size:14px;\">shutdown</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;-r &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;关机重启</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;-h &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 关机不重启</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;now &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;立刻关机</span><br /> <span style=\"font-size:14px;\">halt &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;关机</span><br /> <span style=\"font-size:14px;\">reboot &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 重启</span></p> \n<p><span style=\"font-size:14px;\"><strong>Linux管道</strong></span></p> \n<p><span style=\"font-size:14px;\">将一个命令的标准输出作为另一个命令的标准输入。也就是把几个命令组合起来使用，后一个命令处理前一个命令的输出结果。</span><br /> <span style=\"font-size:14px;\">例：grep -r “close” /home/* | more &nbsp; &nbsp; &nbsp; 在home目录下所有文件中查找，包括close的文件，并分页输出。</span><br /> <span style=\"font-size:14px;\">&nbsp;</span><br /> <span style=\"font-size:14px;\"><strong>Linux软件包管理</strong></span></p> \n<p><span style=\"font-size:14px;\">dpkg (Debian Package)管理工具，软件包名以.deb后缀。这种方法适合系统不能联网的情况下。</span><br /> <span style=\"font-size:14px;\">比如安装tree命令的安装包，先将tree.deb传到Linux系统中。再使用如下命令安装。</span><br /> <span style=\"font-size:14px;\">sudo dpkg -i tree_1.5.3-1_i386.deb &nbsp; &nbsp; &nbsp; &nbsp; 安装软件</span><br /> <span style=\"font-size:14px;\">sudo dpkg -r tree &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 卸载软件</span></p> \n<p><span style=\"font-size:14px;\">注：将tree.deb传到Linux系统中，有多种方式。VMwareTool，使用挂载方式；使用winSCP工具等；</span><br /> <span style=\"font-size:14px;\">APT（Advanced Packaging Tool）高级软件工具。这种方法适合系统能够连接互联网的情况。</span></p> \n<p><span style=\"font-size:14px;\">依然以tree为例</span><br /> <span style=\"font-size:14px;\">sudo apt-get install tree &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;安装tree</span><br /> <span style=\"font-size:14px;\">sudo apt-get remove tree &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;卸载tree</span><br /> <span style=\"font-size:14px;\">sudo apt-get update &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;更新软件</span><br /> <span style=\"font-size:14px;\">sudo apt-get upgrade &nbsp; &nbsp; &nbsp; &nbsp;</span></p> \n<p><span style=\"font-size:14px;\">将.rpm文件转为.deb文件</span></p> \n<p><span style=\"font-size:14px;\">.rpm为RedHat使用的软件格式。在Ubuntu下不能直接使用，所以需要转换一下。</span><br /> <span style=\"font-size:14px;\">sudo alien filename.rpm</span></p> \n<p><span style=\"font-size:14px;\"><strong>vim使用</strong></span></p> \n<p><span style=\"font-size:14px;\">vim三种模式：命令模式、插入模式、编辑模式。使用ESC或i或：来切换模式。</span><br /> <span style=\"font-size:14px;\">命令模式下：</span><br /> <span style=\"font-size:14px;\">:q &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;退出</span><br /> <span style=\"font-size:14px;\">:q! &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 强制退出</span><br /> <span style=\"font-size:14px;\">:wq &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 保存并退出</span><br /> <span style=\"font-size:14px;\">:set number &nbsp; &nbsp; &nbsp;显示行号</span><br /> <span style=\"font-size:14px;\">:set nonumber &nbsp;隐藏行号</span><br /> <span style=\"font-size:14px;\">/apache &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;在文档中查找字符apache，按n跳到下一个，shift+n上一个</span><br /> <span style=\"font-size:14px;\">yyp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;复制光标所在行，并粘贴</span><br /> <span style=\"font-size:14px;\">h(左移一个字符←)、j(下一行↓)、k(上一行↑)、l(右移一个字符→)</span></p> \n<p><span style=\"font-size:14px;\"><strong>用户及用户组管理</strong></span></p> \n<p><span style=\"font-size:14px;\">/etc/passwd &nbsp; &nbsp; &nbsp;存储用户账号</span><br /> <span style=\"font-size:14px;\">/etc/group &nbsp; &nbsp; &nbsp; &nbsp;存储组账号</span><br /> <span style=\"font-size:14px;\">/etc/shadow &nbsp; &nbsp; &nbsp;存储用户账号的密码</span><br /> <span style=\"font-size:14px;\">/etc/gshadow &nbsp; &nbsp;存储用户组账号的密码</span><br /> <span style=\"font-size:14px;\">useradd user &nbsp; &nbsp; &nbsp;添加用户</span><br /> <span style=\"font-size:14px;\">userdel user &nbsp; &nbsp; &nbsp; 删除用户</span><br /> <span style=\"font-size:14px;\">groupadd user &nbsp; 添加组用户</span><br /> <span style=\"font-size:14px;\">groupdel user &nbsp; &nbsp;删除组用户</span><br /> <span style=\"font-size:14px;\">passwd root &nbsp; &nbsp; &nbsp;给用户root设置密码</span><br /> <span style=\"font-size:14px;\">su root &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 临时提权到root用户</span><br /> <span style=\"font-size:14px;\">su – root &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 切换到root用户</span><br /> <span style=\"font-size:14px;\">/etc/profile &nbsp; &nbsp; &nbsp; &nbsp;系统环境变量</span><br /> <span style=\"font-size:14px;\">bash_profile &nbsp; &nbsp; &nbsp;用户环境变量</span><br /> <span style=\"font-size:14px;\">.bashrc &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 用户环境变量</span><br /> <span style=\"font-size:14px;\">su user &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 切换用户，加载配置文件.bashrc</span><br /> <span style=\"font-size:14px;\">su – user &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;切换用户，加载配置文件/etc/profile ，加载bash_profile</span></p> \n<p><span style=\"font-size:14px;\"><strong>更改文件的用户及用户组</strong></span></p> \n<p><span style=\"font-size:14px;\">sudo chown [-R递归] owner[:group] {File|Directory}</span><br /> <span style=\"font-size:14px;\">要想切换文件所属的用户及组。可以使用命令。</span><br /> <span style=\"font-size:14px;\">sudo chown root:root rarlinux-x64-5.1.b3.tar.gz</span></p> \n<p><span style=\"font-size:14px;\"><strong>文件权限管理</strong></span></p> \n<p><span style=\"font-size:14px;\">三种基本权限</span><br /> <span style=\"font-size:14px;\">R &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;读 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;数值表示为4</span><br /> <span style=\"font-size:14px;\">W &nbsp; &nbsp; &nbsp; &nbsp; 写 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;数值表示为2</span><br /> <span style=\"font-size:14px;\">X &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;可执行 &nbsp; 数值表示为1</span></p> \n<p><span style=\"font-size:14px;\"><strong>更改权限</strong></span><br /> <span style=\"font-size:14px;\">sudo chmod [u所属用户 &nbsp;g所属组 &nbsp;o其他用户 &nbsp;a所有用户] &nbsp;[+增加权限 &nbsp;-减少权限] &nbsp;[r &nbsp;w &nbsp;x] &nbsp; 目录名&nbsp;</span><br /> <span style=\"font-size:14px;\">例如：有一个文件filename，权限为“-rw-r—-x” ,将权限值改为”-rwxrw-r-x”，用数值表示为765</span><br /> <span style=\"font-size:14px;\">sudo chmod u+x g+w o+r &nbsp;filename</span></p> \n<p><span style=\"font-size:14px;\">上面的例子可以用数值表示</span><br /> <span style=\"font-size:14px;\">sudo chmod 765 filename</span></p> \n<p><span style=\"font-size:14px;\"><span style=\"color:#337FE5;\"><strong>参考链接：</strong></span><span style=\"font-family:Courier New;\"><a href=\"http://www.cnblogs.com/laov/p/3541414.html\" target=\"_blank\">http://www.cnblogs.com/laov/p/3541414.html</a></span></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/351.html\">Linux系统中常用操作命令</a></p>","descriptionType":"html","publishedDate":"Fri, 25 Apr 2014 05:16:09 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2014/Linux.jpg","linkMd5":"52a645ffa3dd23058d26130aa749617f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn44@2020_3/2020/08/25/00-30-52-630_d5baed85199ae75d.webp","destWidth":640,"destHeight":360,"sourceBytes":108076,"destBytes":4972,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2014/Linux.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn44@2020_3/2020/08/25/00-30-52-630_d5baed85199ae75d.webp"},"publishedOrCreatedDate":1598315426761},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"互联网需要删除键","link":"https://teddysun.com/?p=196","description":"<p><a href=\"https://teddysun.com/196.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/delete.jpg\" alt=\"删除\" title=\"互联网需要删除键\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　谷歌前董事长施密特在近日在</span><a href=\"http://news.cnet.com/8301-1023_3-57583022-93/googles-schmidt-the-internet-needs-a-delete-button/\" target=\"_blank\"><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">CENT</span></a><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">表示：“互联网需要删除键，人们年轻时犯下的错误可能会对他们造成永久性的影响，因为信息将一直存在，他们可能因此找不到工作或者无法正常生活。有时候，擦除纪录反而是正确的做法。”</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　少年网事多轻狂。想想我们当年刚开始接触网络的时候吧，反正我申请的第一个电子邮箱是高中时照着教科书上推荐的网站，填的信息都是真实的（天真啊），不过好在这家网站邮箱服务已经关闭了，我也早忘了登录密码。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　在错把倾诉欲当作才华的岁月，我的那些洋洋洒洒的文字分散在互联网的边边角角里。其中有太多的个人信息被胡乱地塞在一些网站的数据库里，也不知道这些信息被出售或者盗窃或者就那么一直放在那儿，等着某人有天去搜索，去发现。然后忽然之间，我的手机里收到垃圾短信，邮箱里出现垃圾邮件，微博私信出现广告……</span></p> \n<p> <span id=\"more-196\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　在接触和使用互联网之后，尤其是在微博出现以后，任何人都会或多或少的留下个人信息。它臃肿、繁杂、浮躁，信息多到使人焦虑。与此同时，它所提供的有效信息低到几乎没有。因为任何人其实都只能在上面看到无数真真假假的八卦、传闻、议论，而收获不了多少有效、有益的内容。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　这些个人信息有多少是包含隐私信息的呢？细数一下，如果你是个人站长，域名的whois信息，网站的关于页面，常用ID等；如果你是微博达人，经常发带有地理位置的微博，会暴露自己住址及常去地方等隐私信息；如果你是社交爱好者，诸如人人网，豆瓣，朋友网，都会搜到你的常用ID或真实姓名。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　种种迹象表明，我们正处在一个信息无序爆炸的时代，既是信息的消费者又是生产者。我们大多数人的个人信息基本都会永久保存在某个网站的服务器上，没错，是永久。名义上的删除并非真正的删除，信息一旦提交便会真正永久保存，无法彻底更改。我相信绝大多数带有你个人信息的大型网站都不会物理删除你的信用卡帐号，身份证号，手机号等，只会逻辑删除而已（所谓逻辑删除，就是在数据库中将待删除的信息赋予一个已删除的标志位，比如flag=1）。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"color:red;\">时光不会倒退，现实没有删除</span>，至于互联网是否需要真正的删除键，也许每个人都会给出不同的答案。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>引述一些观点如下（部分有删节）：</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><a href=\"http://www.douban.com/people/1743599/\" target=\"_blank\">@埃莉</a> </span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　所谓太阳底下无新鲜事，因为网络工具的诞生而使得信息流动更加快捷也更有威慑力，但实际上其本质就是数据挖掘——二战时期就有人通过公开的德国报纸上面的结婚通告和讣告等等，整理出一份堪称绝密的军官名单和内部关系表。&nbsp;</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　你认为无关紧要的信息，一旦集腋成裘就可引起质变。这同线上线下恐怕没什么关系，对有心人（包含旁观者和下定决心要查你的人）来说，你一直是透明的，区别只是网络上的人不用顾虑交浅言深，可以直白的说出来而已。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　在搜索引擎有快照的时代，曾经存在过的信息永不湮灭。真正安全的生存方式，不是抽离数据，而是成为冗余的一部分，藏树于林。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　享受关注和知名度，就无法避免你的缺点和隐私暴露在众人眼中，这不是网络时代才有的问题。如果非常渴望隐私，就选择小圈子，杜绝频繁在公共论坛发表言论的习惯：你说的话越多，你的立场倾向、情感判断、价值观乃至措辞习惯越清晰，他人眼中能够剖析出的教育背景个人喜好和生活环境越接近真实，某种意义上，这是比你住几号楼更重要的个人信息。&nbsp;</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　换言之，大部分人没有什么“致命隐私”（除了柏芝和阿娇），只是在社交网络和论坛上积年累月的发言和自己都不以为意的信息透露，堆积起来暴露了自己。&nbsp;</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　删信息不能解决问题，除非你能从根源上抹掉你存在于网络的痕迹，不然就别费这劲——<span style=\"color:red;\">年轻时候很傻很天真不算个事儿</span>，陈摄影师都能重新做人呢。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><a href=\"http://www.douban.com/people/Azeril/\" target=\"_blank\">@Azeril</a></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　很多时候那些看似寻常的习惯都会积重难返最终让我们面对尴尬或者困境。而对于网络的使用，没有谁一开始就是懂得的，没有谁一开始可以把握住那个度。一直以来都很反对在相对公开的网络平台或者私人化但为数不少的社交网络中随意地贴太多关于自己信息的内容，无论是紧要的照片或者通讯方式，还是一些琐碎的但长久的情绪言语。长久看都会让自己无法收拾。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　不过善加利用，<span style=\"color:red;\">为人正直也不怕什么</span>。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><a href=\"http://www.douban.com/people/45604851/\" target=\"_blank\">@馬鹿じゃん</a></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　任何人享受互联网的便利的时候，都会受到它的副作用的。对有的人来说也许就是小小的头疼，对有的人来说，也许是致命的过敏。全看受作用的这个人好么？！把自己的隐私泄露到让别人查出你得底儿这件事，完全是你自己不注意保护隐私造成的。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><a href=\"http://www.douban.com/people/blackmonica/\" target=\"_blank\">@阿司匹林</a></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　之前不是很清楚为什么自己一直不喜欢在网上发表太多意见，透露太多信息，所有的社交网站全都是很早就注册但是一直僵尸，最多就看看，不说话。现在想想，其实我一直有科技恐惧症，我一直就觉得任何东西只要跟网络搭上了就能被看到，包括带着手机你的行踪都能被掌握，走在街上逃不了大大小小的摄像头。从不在网上发自己照片，如果跟别人拍合照被发了我控制不了。我会觉得我的电脑摄像头可能被人遥控打开了监视我，不用电脑的时候总要把盖子合上。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　当然，以上这些想法并不是建立在真的觉得自己会被监视的假设上，我一普通人，根本没啥可看的。但是只要有这种可能性，我就会一直警惕。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><a href=\"http://www.douban.com/people/53110942/\" target=\"_blank\">@知足吧</a></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　当网络带给一个人的虚拟存在感太强，也许就会情不自禁的想分享自己的一切，自己去过的足迹，每天的照片秀，自己一天吃了什么干了什么看了什么等等。有时候低调也未必不是好事，只不过也许会让别人对自己的存在感减少点而已。能不能重新定义自己就看能不能舍弃些虚拟环境带来的存在感了。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　引述观点参考链接：<span style=\"font-family:Courier New;\"><a href=\"http://www.douban.com/note/272303612/\" target=\"_blank\">http://www.douban.com/note/272303612/</a></span></span></p> \n<div> \n</div> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/196.html\">互联网需要删除键</a></p>","descriptionType":"html","publishedDate":"Fri, 10 May 2013 02:26:48 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/delete.jpg","linkMd5":"23c73f355a15f58a25dee4544890ffb4","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn47@2020_4/2020/08/25/00-30-55-229_e116b5a6d662cfa1.webp","destWidth":512,"destHeight":244,"sourceBytes":96315,"destBytes":12196,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/delete.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn47@2020_4/2020/08/25/00-30-55-229_e116b5a6d662cfa1.webp"},"publishedOrCreatedDate":1598315426749},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"CentOS服务器Web环境搭建","link":"https://teddysun.com/?p=193","description":"<p><a href=\"https://teddysun.com/193.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/centos.png\" alt=\"centos\" title=\"CentOS服务器Web环境搭建\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>一、安装操作系统CentOS6.4-x86_64（64位）</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">1）下载镜像ISO文件</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">下载链接：</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://mirrors.163.com/centos/6.4/isos/x86_64/CentOS-6.4-x86_64-bin-DVD1.iso\" target=\"_blank\">http://mirrors.163.com/centos/6.4/isos/x86_64/CentOS-6.4-x86_64-bin-DVD1.iso</a></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://mirrors.163.com/centos/6.4/isos/x86_64/CentOS-6.4-x86_64-bin-DVD2.iso\" target=\"_blank\">http://mirrors.163.com/centos/6.4/isos/x86_64/CentOS-6.4-x86_64-bin-DVD2.iso</a></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">将上述两个ISO文件下载完成后，即可以进入安装操作。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><span style=\"color:#E53333;\"><strong>*</strong></span><strong>安装64位操作系统可以有效利用4GB以上的大内存。</strong></span><br /> &nbsp;<br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">2）CentOS6.4-x86_64系统镜像有两个ISO文件，安装系统只用到第一个，第二个镜像是系统自带的软件包。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">用光驱引导加载第一个iso文件，之后的安装操作过程请参考以下链接完成：</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://www.dedecms.com/knowledge/servers/linux-bsd/2012/0819/8405.html\" target=\"_blank\">http://www.dedecms.com/knowledge/servers/linux-bsd/2012/0819/8405.html</a></span></p> \n<p> <span id=\"more-193\"></span> </p> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>二、设置IP地址、网关、DNS（一般云服务器或者VPS中这一步操作可忽略）</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">linux的网卡IP地址是存放在文件中的，这个配置文件在</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">/etc/sysconfig/network-scripts下，名称分别为ifcfg-eth0,ifcfg-eth1等。如果你只有一块网卡，就只有ifcfg-eth0一个文件，如果你有两块或者两块以上的网卡，就会有ifcfg-eth1、ifcfg-eth2等文件的出现。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">1）先查看电脑有几块网卡：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">终端命令下面输入：</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">cd /etc/sysconfig/network-scripts </span><span style=\"color:#006600;font-size:14px;font-family:'Microsoft YaHei';\">#进入/etc/sysconfig/network-scripts文件夹中</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">ls -al</span> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><span style=\"color:#006600;\">#查看</span><span style=\"font-family:'Courier New';color:#006600;\">/etc/sysconfig/network-scripts</span><span style=\"color:#006600;\">文件夹中所有的文件，发现只有一个ifcfg-eth0，说明电脑只有一块网卡</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">cd </span><span style=\"font-size:14px;font-family:'Microsoft YaHei';color:#006600;\">#返回</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">cp /etc/sysconfig/network-scripts/ifcfg-eth0</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\">/etc/sysconfig/network-scripts/ifcfg-eth0.bak</span> <span style=\"font-size:14px;font-family:'Microsoft YaHei';color:#006600;\">#备份ifcfg-eth0文件</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">vi /etc/sysconfig/network-scripts/ifcfg-eth0</span> <span style=\"color:#006600;font-size:14px;font-family:'Microsoft YaHei';\">#进入网卡ifcfg-eth0配置文件</span><br /> &nbsp;<br /> <span style=\"font-family:'Courier New';font-size:14px;\">DEVICE=”eth0″ <span style=\"font-family:'Microsoft YaHei';color:#006600;\">#指出设备名称</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">BOOTPROTO=none <span style=\"font-family:'Microsoft YaHei';color:#006600;\">#设置为none禁止DHCP, static启用静态IP地址， dhcp开启DHCP</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">NM_CONTROLLED=”yes” <span style=\"font-family:'Microsoft YaHei';color:#006600;\">#network mamager的参数，实时生效，不需要重启</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">ONBOOT=yes <span style=\"color:#006600;font-family:'Microsoft YaHei';\">#设置为yes，开机自动启用网络连接</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">TYPE=”Ethernet” &nbsp;<span style=\"font-family:'Microsoft YaHei';color:#006600;\">#网络类型为：Ethernet</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">UUID=”6fd7cbb5-c2bb-43a7-a803-173f55900e78″ &nbsp;<span style=\"color:#006600;\">#UUID</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">HWADDR=00:0C:29:13:88:AA <span style=\"color:#006600;font-family:'Microsoft YaHei';\">#网卡的Mac地址</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">IPADDR=192.168.0.36 <span style=\"font-family:'Microsoft YaHei';color:#006600;\">#请在这里设为你想设成的IP地址</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">PREFIX=24</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">GATEWAY=192.168.0.2 <span style=\"font-family:'Microsoft YaHei';color:#006600;\">#请在这里设为你想设成的网关地址</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">DNS1=192.168.0.6 <span style=\"color:#006600;font-family:'Microsoft YaHei';\">#请在这里设为你想设成的DNS地址</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">DEFROUTE=yes</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">IPV4_FAILURE_FATAL=yes</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">IPV6INIT=no <span style=\"font-family:'Microsoft YaHei';color:#006600;\">#禁止IPV6</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">NAME=”System eth0″ <span style=\"font-family:'Microsoft YaHei';color:#006600;\">#定义设备名称</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">&nbsp;</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">然后输入：</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">:wq! &nbsp; &nbsp;<span style=\"font-family:'Microsoft YaHei';color:#006600;\">#保存退出（Vim的保存退出命令）</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">&nbsp;</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">service network restart &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"font-family:'Microsoft YaHei';color:#006600;\">#重启网络服务命令</span></span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">或者</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">/etc/init.d/network restart &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"font-family:'Microsoft YaHei';color:#006600;\">#重启网络服务命令</span></span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">如果还不行，就重启一下服务器：shutdown -r now 或者reboot</span><br /> &nbsp;<br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>三、配置防火墙规则，开启80、3306端口</strong></span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">终端命令下面输入：</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">vi /etc/sysconfig/iptables <span style=\"color:#006600;font-family:'Microsoft YaHei';\">#打开Vim编辑</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">-A INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT <span style=\"color:#006600;font-family:'Microsoft YaHei';\">#允许80端口</span></span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">-A INPUT -m state –state NEW -m tcp -p tcp –dport 3306 -j ACCEPT <span style=\"color:#006600;font-family:'Microsoft YaHei';\">#允许3306端口</span></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">然后输入：</span><br /> <span style=\"font-family:Courier New;font-size:14px;\">:wq!</span><span style=\"font-size:14px;font-family:'Microsoft YaHei';color:#006600;\"> #保存退出（Vim的保存退出命令）</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">特别提示：很多人把这两条规则添加到防火墙配置的最后一行，导致防火墙启动失败，正确的应该是添加到默认的22端口这条规则的下面。</span><br /> <span style=\"font-family:Courier New;\">/etc/init.d/iptables restart</span><span style=\"font-size:14px;font-family:'Microsoft YaHei';color:#006600;\"> #最后重启防火墙使配置生效</span><br /> &nbsp;<br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';color:red;\">插曲1：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 我们知道，在局域网内的Linux需要在终端连接到外部网的时候，往往需要通过代理连接。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 我们假设局域网内的代理服务器（Windows下代理服务器软件CCProxy）为 192.168.0.18，http端口为808，ftp端口为808，那么在终端设置代理设置如下：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 在文件.bash_profile(位于root目录下)文件中添加下列4行代码后保存：</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">#</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">http_proxy=192.168.0.18:808</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">ftp_proxy=192.168.0.18:808</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">export http_proxy</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">export ftp_proxy</span><br /> <span style=\"font-family:'Courier New';font-size:14px;\">#</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">然后在终端里执行下面命令：</span><br /> <span style=\"font-size:14px;font-family:Courier New;\"> source .bash_profile</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 然后在终端查看一下是否设置成功</span><br /> <span style=\"font-size:14px;font-family:Courier New;\"> echo $http_proxy $ftp_proxy &nbsp;<span style=\"color:#006600;font-family:'Microsoft YaHei';\">#输出代理函数的命令</span></span><br /> <span style=\"font-size:14px;font-family:Courier New;\"> 192.168.0.18:809 192.168.0.18:809</span><br /> &nbsp;<br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';color:red;\">插曲2：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 国内使用CentOS的话，我们一般要用到国内的源，这样速度更快些。如何使用？</span><br /> <span style=\"font-size:14px;\"><span style=\"font-family:Microsoft YaHei;\"> 首先备份</span><span style=\"font-family:Courier New;\">/etc/yum.repos.d/CentOS-Base.repo</span></span><br /> <span style=\"font-size:14px;font-family:Courier New;\"> mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 然后下载对应版本repo文件, 放入/etc/yum.repos.d/(操作前请做好相应备份)</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 运行yum makecache生成缓存</span><br /> &nbsp;<br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">下载地址请参考链接<span style=\"font-family:Courier New;\"><a href=\"http://mirrors.163.com/.help/centos.html\" target=\"_blank\">http://mirrors.163.com/.help/centos.html</a></span></span><br /> &nbsp;<br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';color:red;\">插曲3：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 如果我们安装CentOS6.4时是最小化安装的，那么wget命令默认是没有安装的。怎么办呢？这时候可以用yum方式来安装wget</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 打开终端，输入下面命令：</span><br /> <span style=\"font-size:14px;font-family:Courier New;\"> yum install -y wget</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 如果安装的是桌面版，则可忽略这一步。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><b> 四、安装<a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP(Linux+Apache+MySQL+PHP)一键安装包</a></b></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 1、使用putty或类似的SSH工具登陆。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 2、安装LAMP(Linux+Apache+MySQL+PHP)</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 1) 禁用SeLinux</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 终端里运行以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">cd /root #进入根目录\nwget http://teddysun.googlecode.com/files/lamp2.0.tar.gz #下载文件\ntar -zxvf lamp2.0.tar.gz #解压缩文件\ncd /root/lamp2.0#进入目录\nchmod +x *.sh #赋予文件夹下所有文件执行权限\n./disable.sh #执行禁用SeLinux脚本</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">2)运行一键安装包的脚本文件。</span></p> \n<pre class=\"prettyprint lang-bsh\">cd /root/lamp2.0 #进入目录\n./lamp.sh | tee lamp.log #执行LAMP安装脚本</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">回车后出现如下界面：</span><br /> <span style=\"font-size:14px;font-family:Courier New;\">Please input the root password of MySQL:</span><span style=\"font-family:'Microsoft YaHei';\">（提示输入Mysql的root用户密码）</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 如果不输入直接回车，则设为默认密码：root</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 输入完成后，显示MySQL password:你输入的密码</span></p> \n<p><span style=\"font-size:14px;font-family:Courier New;\"> Please input the mysql data location:</span><br /> <span style=\"font-size:14px;font-family:Courier New;\"> leave blank for /usr/local/mysql/data</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> （提示输入Mysql的data存放路径，如果不输入直接回车则存放在默认路径/usr/local/mysql/data）</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 直接回车或输入路径后显示mysql data location:默认路径或你输入的路径</span></p> \n<p><span style=\"font-size:14px;font-family:Courier New;\"> Press any key to start…or Press Ctrl+c to cancel</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> （提示你输入任何键继续，或者按Ctrl+c取消安装）</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 如果你在之前的步骤输入了正确的选择，到了这一步你随便按下一个键，脚本就会自动完成剩下的事情了。整个安装过程根据机器配置不同，大约耗时40-60分钟。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 本脚本将会安装:</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><b> Apache 2.4.4、MySQL 5.6.11、PHP 5.4.14、phpMyAdmin 3.5.8.1</b></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/193.html\">CentOS服务器Web环境搭建</a></p>","descriptionType":"html","publishedDate":"Wed, 08 May 2013 07:19:51 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/centos.png","linkMd5":"b9e60d9e373bc100dff64a9f3fd0c74c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn38@2020_4/2020/08/25/00-30-51-988_b6b67f6420dd5b6d.webp","destWidth":512,"destHeight":513,"sourceBytes":32395,"destBytes":14110,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/centos.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn38@2020_4/2020/08/25/00-30-51-988_b6b67f6420dd5b6d.webp"},"publishedOrCreatedDate":1598315426745},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"关于免费SSL证书的那些事儿","link":"https://teddysun.com/?p=527","description":"<p><a href=\"https://teddysun.com/527.html\"><img src=\"https://teddysun.com/wp-content/uploads/2018/https.jpg\" title=\"关于免费SSL的那些事儿\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">根据 Let’s Encrypt CA 的统计，截至 2017 年 11 月，Firefox 加载的网页中启用 HTTPS 的比例占 67%，比去年底的 45% 有巨大提升。浏览器开发商如 Mozilla, Google 准备采取下一步措施：将所有 HTTP 网站标记为不安全。</span><br /> <span style=\"font-size:14px;\">随着 HTTPS 的普及，给网站加个 SSL 证书已经是大势所趋而且很有必要了。</span><br /> <span style=\"font-size:14px;\">目前已经存在不少免费好用的 SSL 证书，因此，本文就来盘点一下关于免费 SSL 证书的那些事儿。</span></p> \n<p> <span id=\"more-527\"></span> </p> \n<p></p> \n<h3> <span style=\"font-size:14px;color:red;\">一、Let’s Encrypt</span><br /> </h3> \n<p><span style=\"font-size:14px;\">官方网站：<a href=\"https://letsencrypt.org/\" target=\"_blank\">https://letsencrypt.org/</a></span><br /> <span style=\"font-size:14px;\">点评：毫无疑问，Letsencrypt.org 是目前使用范围最为广泛的免费 SSL 证书，而且<a href=\"https://letsencrypt.org/2017/12/07/looking-forward-to-2018.html\" target=\"_blank\">官方博客宣布</a>，自 2018 年开始提供通配符 SSL 证书，也就是 wildcard certificates。这对于广大个人站长来说，无疑是个不错的利好消息。唯一的缺憾就是，Letsencrypt.org 发行的证书有效期只有 3 个月，虽然可以通过定时任务来自动续期。</span><br /> <span style=\"font-size:14px;\">如何申请？可以通过安装 <a href=\"https://lamp.sh/\" target=\"_blank\">LAMP</a> 后，使用 lamp add 命令来自动创建 SSL 证书。也可以通过以下在线申请网站，手动申请证书。</span><br /> <span style=\"font-size:14px;\">在线申请网址1（中文）：<a href=\"https://freessl.cn/\" target=\"_blank\">https://freessl.cn/</a></span><br /> <span style=\"font-size:14px;\">在线申请网址2（英文）：<a href=\"https://www.sslforfree.com/\" target=\"_blank\">https://www.sslforfree.com/</a></span><br /> <span style=\"font-size:14px;\">在线申请网址3（英文）：<a href=\"https://gethttpsforfree.com/\" target=\"_blank\">https://gethttpsforfree.com/</a></span></p> \n<p><span style=\"font-size:14px;color:red;\">2018 年 03 月 15 日更新：</span><br /> <span style=\"font-size:14px;\">Let’s Encrypt 已经正式支持发行免费的通配符证书（Wildcard SSL），需使用 certbot 或 acme.sh 手动发行。</span></p> \n<h3> <span style=\"font-size:14px;color:red;\">二、TrustAsia</span><br /> </h3> \n<p><span style=\"font-size:14px;\">官方网站：<a href=\"https://www.trustasia.com/\" target=\"_blank\">https://www.trustasia.com/</a></span><br /> <span style=\"font-size:14px;\">点评：TrustAsia 是国内一家新兴的 SSL 证书提供商，赛门铁克(Symantec)亚太区的白金合作伙伴。随着 Symantec 的 CA 业务被 DigiCert 收购完成，其证书链也从 Symantec 变为 DigiCert。现在也开始提供免费 1 年期的 DV SSL 证书。</span><br /> <span style=\"font-size:14px;\">在线申请网址：<a href=\"https://freessl.cn/\" target=\"_blank\">https://freessl.cn/</a></span></p> \n<h3> <span style=\"font-size:14px;color:red;\">三、Buypass.com</span><br /> </h3> \n<p><span style=\"font-size:14px;\">官方网站：<a href=\"https://www.buypass.com/\" target=\"_blank\">https://www.buypass.com/</a></span><br /> <span style=\"font-size:14px;\">点评：Buypass.com 是一家来自挪威的拥有自己的根证书的 CA。目前免费提供有效期 180 天的 DV SSL 证书。可以通过定时任务来自动续期。</span><br /> <span style=\"font-size:14px;\">如何申请？可以通过安装 <a href=\"https://lamp.sh/\" target=\"_blank\">LAMP</a> 后，使用 lamp add 命令来自动创建 SSL 证书。</span><br /> <span style=\"font-size:14px;\">或者使用 certbot 或 acme.sh 手动发行。</span></p> \n<h3> <span style=\"font-size:14px;color:red;\">四、Comodo</span><br /> </h3> \n<p><span style=\"font-size:14px;\">官方网站：<a href=\"https://www.comodo.com/\" target=\"_blank\">https://www.comodo.com/</a></span><br /> <span style=\"font-size:14px;\">点评：在 Let’s Encrypt 没有问世之前，Comodo 的市场占有率是第一位。随着 Let’s Encrypt 的盛行，Comodo 在 DV SSL 市场占有率逐渐下降，但依然是 SSL 的龙头企业。目前 Comodo 也提供免费 90 天的免费 DV SSL 证书。</span><br /> <span style=\"font-size:14px;\">在线申请网址1：<a href=\"https://secure.instantssl.com/products/SSLIdASignup1a\" target=\"_blank\">https://secure.instantssl.com/products/SSLIdASignup1a</a></span><br /> <span style=\"font-size:14px;\">在线申请网址2：<a href=\"https://www.100tb.com/\" target=\"_blank\">https://www.100tb.com/</a></span><br /> <span style=\"font-size:14px;\">备注：100TB 免费提供 1 年期的 Comodo 证书，前提是需要注册为会员后才能在后台申请。100TB 的规定是，发行的证书只能在他们家的产品上使用，否则会有被吊销的风险。申请时，请自备 CSR(Certificate Signing Request)，这里有 CSR 在线生成工具。参考网址：<a href=\"https://www.csr.sh/\" target=\"_blank\">https://www.csr.sh/</a></span></p> \n<h3> <span style=\"font-size:14px;color:red;\">五、Cloudflare</span><br /> </h3> \n<p><span style=\"font-size:14px;\">官方网站：<a href=\"https://www.cloudflare.com/\" target=\"_blank\">https://www.cloudflare.com/</a></span><br /> <span style=\"font-size:14px;\">点评：Cloudflare 很早就开始提供免费 SSL 证书，前提是你的域名要放在 Cloudflare 解析，注册为 Free Plan 就可以。</span><br /> <span style=\"font-size:14px;\">备注：只要域名加入 Cloudflare Free Plan，解析 A 记录的时候，点击 Traffic to this hostname will go through Cloudflare，就可以了。一般情况下，这个免费的 Universal SSL 里会包含一大堆别人的域名（该证书也是 Comodo 发行的）。当然，如果你比较介意这个的话，可以付费购买其 Dedicated SSL Certificate ($5/month) 或 Dedicated SSL Certificate with Custom Hostnames ($10/month)。</span></p> \n<h3> <span style=\"font-size:14px;color:red;\">六、AlphaSSL</span><br /> </h3> \n<p><span style=\"font-size:14px;\">官方网站：<a href=\"https://www.alphassl.com/\" target=\"_blank\">https://www.alphassl.com/</a></span><br /> <span style=\"font-size:14px;\">点评：其实 AlphaSSL 并不免费提供 SSL 证书，而且价格不菲。但是 AlphaSSL 跟 SingleHop 有合作关系，免费给 SingleHop 的客户发行证书，甚至包括通配符 SSL 证书。有人根据这个规则，开发了个自动发行证书的工具。详见：<a href=\"https://github.com/Vittfarne/ASSL\" target=\"_blank\">https://github.com/Vittfarne/ASSL</a></span><br /> <span style=\"font-size:14px;\">也就是说，只要你有了 SingleHop 的服务，就可以使用你的帐号密码以及该工具去当个活雷锋了。但是，不可避免地，这样的活雷锋是当不了多久的。一般其下场会因为滥用被 SingleHop 给关闭账户。</span><br /> <span style=\"font-size:14px;\">值得注意的是，如果你申请了这个 SSL 证书，就要有 SSL 证书随时可能被吊销的觉悟。</span><br /> <span style=\"font-size:14px;\">详情始末的参考网址：<a href=\"https://www.lowendtalk.com/discussion/comment/2306096/#Comment_2306096\" target=\"_blank\">https://www.lowendtalk.com/discussion/comment/2306096/#Comment_2306096</a></span><br /> <span style=\"font-size:14px;\">在线申请网址：<a href=\"https://en.assl.space/\" target=\"_blank\">https://en.assl.space/</a></span></p> \n<h3> <span style=\"font-size:14px;color:blue;\">尾声：</span><br /> </h3> \n<p><span style=\"font-size:14px;\">自从 Let’s encrypt 开始提供免费DV SSL后，SSL 证书市场就已经开始洗牌了。</span><br /> <span style=\"font-size:14px;\">值得一提的是 StarCom 原本是一家以色列的证书商，提供免费和收费的 SSL 证书，后被国内公司 360 收购。曾在 CA 市场也有一席之地，StartCom 的问题在于被发现允许对证书的签发日期进行倒填，从而达到规避 SHA1 证书在 2016 年 1 月 1 日之后被浏览器警告的目的。最终于 2017 年 11 月 16 日，StartCom 宣布终止业务，自 2018 年 1 月 1 日起停止颁发新证书，并于 2020 年停止 OCSP 和 CRL 服务。</span><br /> <span style=\"font-size:14px;\">沃通（Wosign）也属于类似情况，被 Mozilla 认为 WoSign 最严重的问题是伪造（或者说人为设置）了证书签发日期，相继被 Mozilla 和 Chrome 不信任，最终导致出局。</span></p> \n<p><span style=\"font-size:14px;\">最后，随着 https 的广泛被适用，我们也乐于看到越来越多的 CA 开始提供免费的 DV SSL 证书。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/527.html\">关于免费SSL证书的那些事儿</a></p>","descriptionType":"html","publishedDate":"Sat, 06 Jan 2018 04:04:51 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2018/https.jpg","linkMd5":"e6c54a19d9cac5a7ec96a09ef8ca1ec5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn4@2020_4/2020/08/25/00-30-54-136_4758deb6f28cab8d.webp","destWidth":800,"destHeight":400,"sourceBytes":14997,"destBytes":10086,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2018/https.jpg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn4@2020_4/2020/08/25/00-30-54-136_4758deb6f28cab8d.webp"},"publishedOrCreatedDate":1598315426755},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Windows系统下安装dig命令","link":"https://teddysun.com/?p=406","description":"<p><a href=\"https://teddysun.com/406.html\"><img src=\"https://teddysun.com/wp-content/uploads/2015/dig.jpg\" alt=\"Linux\" title=\"Windows系统下安装dig命令\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">dig 是一个 Linux 下用来 DNS 查询信息的工具，全称是Domain Information Groper，与 nslookup 类似，但比 nslookup 功能更强大。Windows 下只有 nslookup，如果也想用到 dig 命令，就只能自己动手安装了。</span><br /> <span style=\"font-size:14px;\">dig 作为 bind 的一部分，官方网站如下：</span><br /> <span style=\"font-size:14px;\"><a href=\"http://www.bind9.net/download\" target=\"_blank\">http://www.bind9.net/download</a></span><br /> <span style=\"font-size:14px;\">下面来具体说说步骤，如何安装。</span></p> \n<p> <span id=\"more-406\"></span> </p> \n<p> <span style=\"font-size:14px;\">选择一个镜像站点，点击进入，比如：</span><br /> <span style=\"font-size:14px;\"><a href=\"https://teddysun.com/?p=406/ftp://ftp.iij.ad.jp/pub/network/isc/bind9/\" target=\"_blank\">ftp://ftp.iij.ad.jp/pub/network/isc/bind9/</a></span><br /> <span style=\"font-size:14px;\">选择最新版 9.11.3，如下图（演示的图是老版本的，懒得换了，将就着看吧）：</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2015/bind_1.png\" title=\"bind_1\" class=\"left\" style=\"width:auto;height:auto;\" /> <br /> <span style=\"font-size:14px;\">如果是 64 位，下载地址如下：</span><br /> <span style=\"font-size:14px;\"><a href=\"https://teddysun.com/?p=406/ftp://ftp.iij.ad.jp/pub/network/isc/bind9/9.11.3/BIND9.11.3.x64.zip\" target=\"_blank\">ftp://ftp.iij.ad.jp/pub/network/isc/bind9/9.11.3/BIND9.11.3.x64.zip</a></span><br /> <span style=\"font-size:14px;\">如果是 32 位，下载地址如下：</span><br /> <span style=\"font-size:14px;\"><a href=\"https://teddysun.com/?p=406/ftp://ftp.iij.ad.jp/pub/network/isc/bind9/9.11.3/BIND9.11.3.x86.zip\" target=\"_blank\">ftp://ftp.iij.ad.jp/pub/network/isc/bind9/9.11.3/BIND9.11.3.x86.zip</a></span></p> \n<p><span style=\"font-size:14px;\">这里以在 Windows 7 64 位下安装为例，解压 BIND9.11.3.x64.zip，双击 <strong>vcredist_x64.exe</strong> （如果是 32 位，则文件名为 vcredist_x86.exe）安装 Microsoft Visual C++ 2012 Redistribution。</span><br /> <span style=\"font-size:14px;\">然后再将所有的 dll 文件复制至 C:\\Windows\\System32\\ 目录下。如下图所示：</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2015/bind_2.png\" title=\"bind_2\" class=\"left\" style=\"width:auto;height:auto;\" /> </p> \n<p><span style=\"font-size:14px;\">然后再将 <strong>dig.exe</strong> 也复制至 C:\\Windows\\System32\\ 目录下。</span></p> \n<p><span style=\"font-size:14px;\">至此，安装完成。</span><br /> <span style=\"font-size:14px;\">打开 cmd ，验证一下。如下图所示：</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2015/bind_3.png\" title=\"bind_3\" class=\"left\" style=\"width:auto;height:auto;\" /> </p> \n<p><span style=\"font-size:14px;\">如果你想使用 Google Public DNS 来进行 dig 查询的话，那么需要在 C:\\Windows\\System32\\drivers\\etc\\ 目录下添加一个名为 resolv.conf 的文件。</span><br /> <span style=\"font-size:14px;\">内容如下：</span><br /> <span style=\"font-size:14px;color:red;\">nameserver 8.8.8.8</span><br /> <span style=\"font-size:14px;color:red;\">nameserver 8.8.4.4</span></p> \n<p><span style=\"font-size:14px;\">查询结果如下图所示（演示的图是老版本的，懒得换了，将就着看吧）：</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2015/bind_4.png\" title=\"bind_4\" class=\"left\" style=\"width:auto;height:auto;\" /> </p> \n<p><span style=\"font-size:14px;color:blue;\"><strong>参考链接：</strong></span><br /> <span style=\"font-size:14px;\"><a href=\"http://www.bind9.net/download\" target=\"_blank\">http://www.bind9.net/download</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/406.html\">Windows系统下安装dig命令</a></p>","descriptionType":"html","publishedDate":"Wed, 01 Apr 2015 06:38:25 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2015/dig.jpg","linkMd5":"f4b20f4460498673a790abfd082c7735","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn87@2020_4/2020/08/25/00-30-51-683_f4046348154b5142.webp","destWidth":640,"destHeight":372,"sourceBytes":35226,"destBytes":18834,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2015/dig.jpg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn87@2020_4/2020/08/25/00-30-51-683_f4046348154b5142.webp","https://teddysun.com/wp-content/uploads/2015/bind_1.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn56@2020_4/2020/08/25/00-30-57-909_67b331d43e897830.webp","https://teddysun.com/wp-content/uploads/2015/bind_2.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn19@2020_4/2020/08/25/00-31-00-419_d87cb0ddd3fc39fc.webp","https://teddysun.com/wp-content/uploads/2015/bind_3.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn60@2020_6/2020/08/25/00-31-00-256_4ead5926461595c4.webp","https://teddysun.com/wp-content/uploads/2015/bind_4.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn32@2020_5/2020/08/25/00-30-59-497_5c8f172034802577.webp"},"publishedOrCreatedDate":1598315426756},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"如何在Debian下安装Webmin","link":"https://teddysun.com/?p=403","description":"<p><a href=\"https://teddysun.com/403.html\"><img src=\"https://teddysun.com/wp-content/uploads/2015/webmin.jpg\" title=\"如何在Debian下安装Webmin\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"><span style=\"font-family:Courier New;\">Webmin</span> 是广受欢迎的免费面板，由于习惯了此面板，所以换到 <span style=\"font-family:Courier New;\">Debian 7&nbsp;</span>系统后，还是打算安装一下。在过程中出了不少错误，最终还是顺利安装完成。</span><br /> <span style=\"font-size:14px;\">下面记录一下出错信息及解决办法。</span><br /> <span style=\"font-size:14px;\">按照官方网站是安装教程，下载 <span style=\"font-family:Courier New;\">deb</span> 包然后使用 <span style=\"font-family:Courier New;\">dpkg</span> 命令安装，会有几个依赖包无法安装，从而导致出错。</span></p> \n<p> <span id=\"more-403\"></span> </p> \n<p><span style=\"font-size:14px;\"><strong>方案一（会出错，无法安装）</strong></span><br /> <span style=\"font-size:14px;\">下载最新版 <span style=\"font-family:Courier New;\">deb</span> 包：</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://www.webmin.com/download/deb/webmin-current.deb\" target=\"_blank\">http://www.webmin.com/download/deb/webmin-current.deb</a></span><br /> <span style=\"font-size:14px;\">安装：</span></p> \n<pre class=\"prettyprint lang-bsh\">dpkg --install webmin-current.deb</pre> \n<p><span style=\"font-size:14px;\">出错信息如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">root@v5:~# dpkg --install webmin-current.deb\nSelecting previously unselected package webmin.\n(Reading database ... 22186 files and directories currently installed.)\nUnpacking webmin (from webmin-current.deb) ...\ndpkg: dependency problems prevent configuration of webmin:\n webmin depends on libnet-ssleay-perl; however:\n  Package libnet-ssleay-perl is not installed.\n webmin depends on libauthen-pam-perl; however:\n  Package libauthen-pam-perl is not installed.\n webmin depends on libio-pty-perl; however:\n  Package libio-pty-perl is not installed.\n webmin depends on apt-show-versions; however:\n  Package apt-show-versions is not installed.\n\ndpkg: error processing webmin (--install):\n dependency problems - leaving unconfigured\nErrors were encountered while processing:\n webmin</pre> \n<p><span style=\"font-size:14px;\">官网给出的方案是，手动运行以下命令，但依然会出错。如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">root@v5:~# apt-get install perl libnet-ssleay-perl openssl libauthen-pam-perl libpam-runtime libio-pty-perl apt-show-versions python\nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nlibpam-runtime is already the newest version.\nperl is already the newest version.\npython is already the newest version.\nopenssl is already the newest version.\nopenssl set to manually installed.\nYou might want to run 'apt-get -f install' to correct these:\nThe following packages have unmet dependencies:\n apt-show-versions : Depends: libapt-pkg-perl (&gt;= 0.1.21) but it is not going to be installed\nE: Unmet dependencies. Try 'apt-get -f install' with no packages (or specify a solution).</pre> \n<p> <span style=\"font-size:14px;\">不死心，运行 <span style=\"font-family:Courier New;\">apt-get -f install apt-show-versions</span> 强制安装，依旧出错。</span></p> \n<p><span style=\"font-size:14px;color:red;\"><strong>方案二（OK）</strong></span><br /> <span style=\"font-size:14px;\">编辑<span style=\"font-family:Courier New;\"> /etc/apt/sources.list</span> 文件，在最末尾添加以下内容：</span></p> \n<pre class=\"prettyprint lang-bsh\">vi /etc/apt/sources.list\ndeb http://download.webmin.com/download/repository sarge contrib\ndeb http://webmin.mirror.somersettechsolutions.co.uk/repository sarge contrib</pre> \n<p><span style=\"font-size:14px;\">安装 <span style=\"font-family:Courier New;\">GPG key</span></span></p> \n<pre class=\"prettyprint lang-bsh\">cd /root\nwget http://www.webmin.com/jcameron-key.asc\napt-key add jcameron-key.asc</pre> \n<p><span style=\"font-size:14px;\">再执行</span></p> \n<pre class=\"prettyprint lang-bsh\">apt-get update\napt-get install webmin</pre> \n<p><span style=\"font-size:14px;\">所有的依赖会自动解决。</span><br /> <span style=\"font-size:14px;\">搞定收工。</span></p> \n<p><span style=\"font-size:14px;\"><strong><span style=\"color:red;\">注：</span></strong>此法同样适用于 <span style=\"font-family:Courier New;\">Ubuntu</span> 下。</span></p> \n<p><span style=\"font-size:14px;color:blue;\"><strong>参考资料：</strong></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://www.webmin.com/deb.html\" target=\"_blank\">http://www.webmin.com/deb.html</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/403.html\">如何在Debian下安装Webmin</a></p>","descriptionType":"html","publishedDate":"Wed, 11 Mar 2015 10:06:54 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2015/webmin.jpg","linkMd5":"cee079b76b5252f95de60a862fda1943","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn40@2020_2/2020/08/25/00-30-54-798_ace66d06ca04c9f8.webp","destWidth":599,"destHeight":445,"sourceBytes":114128,"destBytes":14648,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2015/webmin.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn40@2020_2/2020/08/25/00-30-54-798_ace66d06ca04c9f8.webp"},"publishedOrCreatedDate":1598315426727},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"又一家VPS：Bandwagonhost","link":"https://teddysun.com/?p=249","description":"<p><a href=\"https://teddysun.com/249.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/08/bandwagonhost.png\" alt=\"Bandwagonhost\" title=\"又一家VPS：Bandwagonhost\" class=\"aligncenter\" style=\"width:580;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　最近又手痒痒，入手了新的一家VPS，没错就是<a href=\"https://bandwagonhost.com/index.php\" target=\"_blank\">Bandwagonhost</a>，是IT7网络公司（始于2004年）的低端VPS品牌。经过个人的长达一个半月的试用下来，整体性价比非常优越（当然是在使用了优惠码之后）。</span><br /> <span style=\"font-size:14px;\">　　共有3处数据中心可供选择，作为国人用户，当然无可争议的选择了美国西海岸的<span style=\"color:red;\">亚利桑那州</span>，美国西南部4个州之一。母服务器号称G口带宽，VPS只能安装Linux系列的操作系统，支持tun/tap（这个你懂的），采用Openvz虚拟技术，WHCMS+KiwiVM面板。据官网，99%在线时间保证，30天内可退款，随时可以取消（我没试过）。</span></p> \n<p> <span id=\"more-249\"></span> </p> \n<p><span style=\"font-size:14px;\">这3处数据中心如下：</span><br /> <span style=\"font-size:14px;\">US West Coast – Arizona (USAZ_LC) （美国西海岸，亚利桑那）</span><br /> <span style=\"font-size:14px;\">US East Coast – New York (USNY_LC) （美国东海岸，纽约）</span><br /> <span style=\"font-size:14px;\">EU – Germany (EUDE_LC) （欧洲，德国）</span></p> \n<p><span style=\"font-size:14px;\">下面是目前所用的512MB内存套餐的简要测评。</span><br /> <span style=\"font-size:14px;\">配置：</span></p> \n<pre class=\"prettyprint\">512MB RAM\n512MB vSwap\n2 vCPU Core\n6GB SAS Raid 10 Diskspace（说是5G，实际上分配了6G硬盘空间）\n500GB Bandwidth\n1 Gigabit Port\n1 IPv4 address\nOpenVZ/KiwiVM</pre> \n<p><span style=\"font-size:14px;\">使用优惠码：<span style=\"color:red;\">LEB</span>，月付1.99美元 年付9.99美元。购买地址：<a href=\"http://bandwagonhost.com/cart.php?a=add&amp;pid=5\" target=\"_blank\">http://bandwagonhost.com/cart.php?a=add&amp;pid=5</a> （评测界良心，不带aff，点击可直接下单购买）</span></p> \n<p><span style=\"font-size:14px;\"><b>1、ping测试，截图如下：</b></span><br /> <img src=\"https://teddysun.com/wp-content/uploads/2013/08/band_ping.jpg\" alt=\"Bandwagonhost Ping\" title=\"又一家VPS：Bandwagonhost\" class=\"left\" style=\"width:auto;height:auto;\" /> </p> \n<p><span style=\"font-size:14px;\"><b>2、CPU信息</b></span></p> \n<pre class=\"prettyprint\">[root@vpn ~]# cat /proc/cpuinfo\nprocessor       : 0\nvendor_id       : GenuineIntel\ncpu family      : 6\nmodel           : 26\nmodel name      : Intel(R) Xeon(R) CPU           L5520  @ 2.27GHz\nstepping        : 5\ncpu MHz         : 1134.000\ncache size      : 8192 KB\nphysical id     : 0\nsiblings        : 8\ncore id         : 0\ncpu cores       : 4\napicid          : 0\ninitial apicid  : 0\nfpu             : yes\nfpu_exception   : yes\ncpuid level     : 11\nwp              : yes\nflags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2                                                                          ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good xtopology nonstop_tsc aperfmperf pni dtes64 m                                                                         onitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 popcnt lahf_lm ida dts tpr_shadow vnmi flexpriority ept vpi                                                                         d\nbogomips        : 4533.95\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 40 bits physical, 48 bits virtual\npower management:\n\nprocessor       : 1\nvendor_id       : GenuineIntel\ncpu family      : 6\nmodel           : 26\nmodel name      : Intel(R) Xeon(R) CPU           L5520  @ 2.27GHz\nstepping        : 5\ncpu MHz         : 1134.000\ncache size      : 8192 KB\nphysical id     : 0\nsiblings        : 8\ncore id         : 1\ncpu cores       : 4\napicid          : 2\ninitial apicid  : 2\nfpu             : yes\nfpu_exception   : yes\ncpuid level     : 11\nwp              : yes\nflags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2                                                                          ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good xtopology nonstop_tsc aperfmperf pni dtes64 m                                                                         onitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm dca sse4_1 sse4_2 popcnt lahf_lm ida dts tpr_shadow vnmi flexpriority ept vpi                                                                         d\nbogomips        : 4533.95\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 40 bits physical, 48 bits virtual\npower management:</pre> \n<p> <span style=\"font-size:14px;\">分配了2个核心，Intel(R) Xeon(R) CPU L5520 &nbsp;@ 2.27GHz，频率:1134.000，基本上可以说是相当不错了。</span></p> \n<p><span style=\"font-size:14px;\"><b>3、内存信息</b></span></p> \n<pre class=\"prettyprint\">[root@vpn ~]# cat /proc/meminfo\nMemTotal:         524288 kB\nMemFree:          123308 kB\nCached:           321948 kB\nActive:           189520 kB\nInactive:         191216 kB\nActive(anon):      28444 kB\nInactive(anon):    30344 kB\nActive(file):     161076 kB\nInactive(file):   160872 kB\nUnevictable:           0 kB\nMlocked:               0 kB\nSwapTotal:        524288 kB\nSwapFree:         433748 kB\nDirty:                12 kB\nWriteback:             0 kB\nAnonPages:         58788 kB\nShmem:              2628 kB\nSlab:              20232 kB\nSReclaimable:      15344 kB\nSUnreclaim:         4888 kB</pre> \n<p> <span style=\"font-size:14px;\"><b>4、硬盘信息</b></span></p> \n<pre class=\"prettyprint\">[root@vpn ~]# df -hal\nFilesystem            Size  Used Avail Use% Mounted on\n/dev/simfs            6.0G  2.2G  3.9G  36% /\nproc                     0     0     0   -  /proc\nsysfs                    0     0     0   -  /sys\nnfsd                     0     0     0   -  /proc/fs/nfsd\nsunrpc                   0     0     0   -  /var/lib/nfs/rpc_pipefs\nnone                  256M  4.0K  256M   1% /dev\nnone                     0     0     0   -  /dev/pts\nnone                  256M     0  256M   0% /dev/shm\nnone                     0     0     0   -  /proc/sys/fs/binfmt_misc</pre> \n<p> <span style=\"font-size:14px;\"><b>5、下载测试</b></span></p> \n<pre class=\"prettyprint\">[root@vpn ~]# wget http://cachefly.cachefly.net/100mb.test\n--2013-08-08 23:45:34--  http://cachefly.cachefly.net/100mb.test\nResolving cachefly.cachefly.net... 205.234.175.175\nConnecting to cachefly.cachefly.net|205.234.175.175|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 104857600 (100M) [application/octet-stream]\nSaving to: `100mb.test'\n\n100%[====================================&gt;] 104,857,600 34.9M/s   in 2.9s\n\n2013-08-08 23:45:40 (34.9 MB/s) - `100mb.test' saved [104857600/104857600]</pre> \n<p> <span style=\"font-size:14px;\"><b>6、路由追踪</b></span></p> \n<pre class=\"prettyprint\">C:\\Users\\teddysun&gt;tracert 162.211.225.33\n\n通过最多 30 个跃点跟踪\n到 162.211.225.33.16clouds.com [162.211.225.33] 的路由:\n\n  1    &lt;1 毫秒   &lt;1 毫秒   &lt;1 毫秒 192.168.1.1\n  2     9 ms    10 ms     9 ms  117.81.138.1\n  3    10 ms    11 ms    12 ms  218.94.225.41\n  4    21 ms    19 ms    20 ms  218.4.13.41\n  5    21 ms    19 ms    19 ms  202.97.82.37\n  6    18 ms    18 ms    18 ms  202.97.33.90\n  7    20 ms    19 ms    20 ms  202.97.33.138\n  8   150 ms   152 ms   153 ms  202.97.52.178\n  9   146 ms   146 ms   148 ms  202.97.49.166\n 10   146 ms   146 ms   146 ms  10gigabitethernet10-7.core1.lax1.he.net [64.71.151.221]\n 11   164 ms   156 ms   165 ms  10gigabitethernet1-3.core1.lax2.he.net [72.52.92.122]\n 12   157 ms   156 ms   165 ms  10gigabitethernet2-3.core1.phx2.he.net [184.105.222.85]\n 13   180 ms   169 ms   170 ms  it7-1-11.core1.phx2.he.net [65.19.129.154]\n 14   176 ms   175 ms   176 ms  v33.sioru.com [198.35.46.6]\n 15   174 ms   174 ms   174 ms  162.211.225.33.16clouds.com [162.211.225.33]\n\n跟踪完成。</pre> \n<p> <span style=\"font-size:14px;\">从追踪节点上来看，走的是he.net，而且据字面猜测，骨干网应该是10G带宽。这个线路到国内相当不错的说。</span></p> \n<p><span style=\"font-size:14px;\"><b>7、硬盘DD检测</b></span></p> \n<pre class=\"prettyprint lang-bsh\">[root@vpn ~]# dd if=/dev/zero of=test bs=64k count=16k oflag=dsync\n16384+0 records in\n16384+0 records out\n1073741824 bytes (1.1 GB) copied, 4.30731 s, 249 MB/s</pre> \n<p><span style=\"font-size:14px;\">SAS RAID-10真不是吹出来的，这速度也只能用屌爆了形容了。</span></p> \n<p><span style=\"font-size:14px;\"><b>8、总结</b></span><br /> <span style=\"font-size:14px;\">这次购买的是Bandwagon Basic VPS 5G，之前是购买了官网上挂的Bandwagon Basic VPS 10G套餐，月付$2.49（使用优惠码LEB后），月流量只有200G。奇怪的是这次购买的特价款居然是500G月流量，跟之前的相比，仅仅是硬盘空间缩水一半而已。</span><br /> <span style=\"font-size:14px;\">不管怎样，手快有手慢无。这款套餐，用来建站和搭梯子都是不错的选择。性价比堪称极品。使用了一个半月，稳定如磐石。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/249.html\">又一家VPS：Bandwagonhost</a></p>","descriptionType":"html","publishedDate":"Thu, 08 Aug 2013 15:57:45 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/08/bandwagonhost.png","linkMd5":"4fdc64f2f0e6fcce305c018dfa4001c5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn80@2020_3/2020/08/25/00-30-54-687_3369c2e7942afef5.webp","destWidth":1008,"destHeight":694,"sourceBytes":362422,"destBytes":77556,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/08/bandwagonhost.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn80@2020_3/2020/08/25/00-30-54-687_3369c2e7942afef5.webp","https://teddysun.com/wp-content/uploads/2013/08/band_ping.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn64@2020_3/2020/08/25/00-30-58-195_b91c80ac34d1f62c.webp"},"publishedOrCreatedDate":1598315426741},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"一键安装最新内核并开启 BBR 脚本","link":"https://teddysun.com/?p=489","description":"<p><a href=\"https://teddysun.com/489.html\"><img class=\"aligncenter\" style=\"width: auto; height: auto;\" title=\"一键安装最新内核并开启 BBR 脚本\" src=\"https://teddysun.com/wp-content/uploads/2016/bbr.jpg\" /></a></p> \n<p><span style=\"font-size: 14px;\">最近，Google 开源了其 TCP BBR 拥塞控制算法，并提交到了 Linux 内核，从 4.9 开始，Linux 内核已经用上了该算法。根据以往的传统，Google 总是先在自家的生产环境上线运用后，才会将代码开源，此次也不例外。</span><br /> <span style=\"font-size: 14px;\">根据实地测试，在部署了最新版内核并开启了 TCP BBR 的机器上，网速甚至可以提升好几个数量级。</span><br /> <span style=\"font-size: 14px;\">于是我根据目前三大发行版的最新内核，开发了一键安装最新内核并开启 TCP BBR 脚本。</span></p> \n<h2><span style=\"color: red;\">本脚本适用环境</span></h2> \n<p><span style=\"font-size: 14px;\">系统支持：CentOS 6+，Debian 8+，Ubuntu 16+</span><br /> <span style=\"font-size: 14px;\">虚拟技术：OpenVZ 以外的，比如 KVM、Xen、VMware</span><br /> <span style=\"font-size: 14px;\">内存要求：≥128M</span><br /> <span style=\"font-size: 14px; color: red;\">日期　　：2020 年 6 月 23 日</span></p> \n<p><span id=\"more-489\"></span></p> \n<h3><span style=\"color: red;\">关于本脚本</span></h3> \n<p><span style=\"font-size: 14px;\">1、本脚本已在 <a href=\"https://qiu.sh/vultr\" target=\"_blank\" rel=\"noopener noreferrer\"><strong>Vultr</strong></a> 上的 VPS 全部测试通过。</span><br /> <span style=\"font-size: 14px;\">2、当脚本检测到 VPS 的虚拟方式为 OpenVZ 时，会提示错误，并自动退出安装。</span><br /> <span style=\"font-size: 14px;\">3、脚本运行完重启发现开不了机的，打开 VPS 后台控制面板的 VNC, 开机卡在 grub 引导, 手动选择内核即可。</span><br /> <span style=\"font-size: 14px;\">4、由于是使用最新版系统内核，最好请勿在生产环境安装，以免产生不可预测之后果。</span></p> \n<h3><span style=\"color: red;\">使用方法</span></h3> \n<p><span style=\"font-size: 14px;\">使用root用户登录，运行以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">wget --no-check-certificate -O /opt/bbr.sh https://github.com/teddysun/across/raw/master/bbr.sh\nchmod 755 /opt/bbr.sh\n/opt/bbr.sh</pre> \n<p><span style=\"font-size: 14px;\">安装完成后，脚本会提示需要重启 VPS，输入 y 并回车后重启。</span><br /> <span style=\"font-size: 14px;\">重启完成后，进入 VPS，验证一下是否成功安装最新内核并开启 TCP BBR，输入以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">uname -r</pre> \n<p><span style=\"font-size: 14px;\">查看内核版本，显示为最新版就表示 OK 了</span></p> \n<pre class=\"prettyprint lang-bsh\">sysctl net.ipv4.tcp_available_congestion_control</pre> \n<p><span style=\"font-size: 14px;\">返回值一般为：</span><br /> <span style=\"font-size: 14px;\">net.ipv4.tcp_available_congestion_control = bbr cubic reno</span><br /> <span style=\"font-size: 14px;\">或者为：</span><br /> <span style=\"font-size: 14px;\">net.ipv4.tcp_available_congestion_control = reno cubic bbr</span></p> \n<pre class=\"prettyprint lang-bsh\">sysctl net.ipv4.tcp_congestion_control</pre> \n<p><span style=\"font-size: 14px;\">返回值一般为：</span><br /> <span style=\"font-size: 14px;\">net.ipv4.tcp_congestion_control = bbr</span></p> \n<pre class=\"prettyprint lang-bsh\">sysctl net.core.default_qdisc</pre> \n<p><span style=\"font-size: 14px;\">返回值一般为：</span><br /> <span style=\"font-size: 14px;\">net.core.default_qdisc = fq</span></p> \n<pre class=\"prettyprint lang-bsh\">lsmod | grep bbr</pre> \n<p><span style=\"font-size: 14px;\">返回值有 tcp_bbr 模块即说明 bbr 已启动。<span style=\"color: red;\">注意：并不是所有的 VPS 都会有此返回值，若没有也属正常。</span></span></p> \n<h3><span style=\"color: red;\">CentOS 下最新版内核 headers 安装方法</span></h3> \n<p><span style=\"font-size: 14px;\">本来打算在脚本里直接安装 kernel-ml-headers，但会出现和原版内核 headers 冲突的问题。因此在这里添加一个脚本执行完后，手动安装最新版内核 headers 之教程。</span><br /> <span style=\"font-size: 14px;\">执行以下命令</span></p> \n<pre class=\"prettyprint lang-bsh\">yum --enablerepo=elrepo-kernel -y install kernel-ml-headers</pre> \n<p><span style=\"font-size: 14px;\">根据 CentOS 版本的不同，此时一般会出现类似于以下的错误提示：</span></p> \n<pre class=\"prettyprint lang-bsh\">Error: kernel-ml-headers conflicts with kernel-headers-2.6.32-696.20.1.el6.x86_64\nError: kernel-ml-headers conflicts with kernel-headers-3.10.0-693.17.1.el7.x86_64</pre> \n<p><span style=\"font-size: 14px;\">因此需要先卸载原版内核 headers ，然后再安装最新版内核 headers。执行命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">yum remove kernel-headers</pre> \n<p><span style=\"font-size: 14px;\">确认无误后，输入 y，回车开始卸载。注意，有时候这么操作还会卸载一些对内核 headers 依赖的安装包，比如 gcc、gcc-c++ 之类的。不过不要紧，我们可以在安装完最新版内核 headers 后再重新安装回来即可。</span><br /> <span style=\"font-size: 14px;\">卸载完成后，再次执行上面给出的安装命令。</span></p> \n<pre class=\"prettyprint lang-bsh\">yum --enablerepo=elrepo-kernel -y install kernel-ml-headers</pre> \n<p><span style=\"font-size: 14px;\">成功安装后，再把那些之前对内核 headers 依赖的安装包，比如 gcc、gcc-c++ 之类的再安装一次即可。</span></p> \n<p><span style=\"font-size: 14px;\">为什么要安装最新版内核 headers 呢？</span><br /> <span style=\"font-size: 14px;\">这是因为 shadowsocks-libev 版有个 tcp fast open 功能，如果不安装的话，这个功能是无法开启的。</span></p> \n<h3><span style=\"color: red;\">内核升级方法</span></h3> \n<p><span style=\"font-size: 14px;\"><strong>如果是 CentOS 系统，执行如下命令即可升级内核：</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">yum -y install kernel-ml kernel-ml-devel</pre> \n<p><span style=\"font-size: 14px;\">如果你还手动安装了新版内核 headers ，那么还需要以下命令来升级 headers ：</span></p> \n<pre class=\"prettyprint lang-bsh\">yum -y install kernel-ml-headers</pre> \n<p><span style=\"font-size: 14px;\">CentOS 6 的话，执行命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">sed -i 's/^default=.*/default=0/g' /boot/grub/grub.conf</pre> \n<p><span style=\"font-size: 14px;\">CentOS 7 的话，执行命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">grub2-set-default 0</pre> \n<p><span style=\"font-size: 14px;\"><strong>如果是 Debian/Ubuntu 系统，则需要手动下载最新版内核来安装升级。</strong></span><br /> <span style=\"font-size: 14px;\">去<a href=\"http://kernel.ubuntu.com/~kernel-ppa/mainline/\" target=\"_blank\" rel=\"noopener noreferrer\">这里</a>下载最新版的内核 deb 安装包。</span><br /> <span style=\"font-size: 14px;\">如果系统是 64 位，则下载 amd64 的 linux-image 中含有 generic 这个 deb 包；</span><br /> <span style=\"font-size: 14px;\">如果系统是 32 位，则下载 i386 的 linux-image 中含有 generic 这个 deb 包；</span><br /> <span style=\"font-size: 14px;\">安装的命令如下（以最新版的 64 位 4.12.4 举例而已，请替换为下载好的 deb 包）：</span></p> \n<pre class=\"prettyprint lang-bsh\">dpkg -i linux-image-4.12.4-041204-generic_4.12.4-041204.201707271932_amd64.deb</pre> \n<p><span style=\"font-size: 14px;\">安装完成后，再执行命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">/usr/sbin/update-grub</pre> \n<p><span style=\"font-size: 14px;\">最后，重启 VPS 即可。</span></p> \n<h3><span style=\"color: red;\">特别说明</span></h3> \n<p><span style=\"font-size: 14px;\">如果你使用的是 Google Cloud Platform （GCP）更换内核，有时会遇到重启后，整个磁盘变为只读的情况。只需执行以下命令即可恢复：</span></p> \n<pre class=\"prettyprint lang-bsh\">mount -o remount rw /</pre> \n<p>&nbsp;</p> \n<h3><span style=\"color: red;\">更新日志：</span></h3> \n<p><span style=\"font-size: 14px; color: red;\">2020 年 6 月 23 日：</span><br /> <span style=\"font-size: 14px;\">1、重构了代码，去除一些不必要的处理；</span><br /> <span style=\"font-size: 14px;\">2、精简在 Debian 和 Ubuntu 下的可选版本，从 5.6 起始到当前最新版结束。</span></p> \n<p><span style=\"font-size: 14px; color: red;\">2018 年 12 月 14 日：</span><br /> <span style=\"font-size: 14px;\">1、修正：在 CentOS 6 系统下 kernel-ml 及 kernel-ml-devel 无法安装的问题。原因是 elrepo 官方最近取消了 kernel-ml 及 kernel-ml-devel 的 rpm 资源。脚本已改为下载 rpm 来安装的方式。版本 4.18.20 将会是 CentOS 6 下最新的内核，目测以后也不会再有升级了，请尽快迁移到 CentOS 7 系统。</span></p> \n<p><span style=\"font-size: 14px; color: red;\">2018 年 06 月 09 日：</span><br /> <span style=\"font-size: 14px;\">1、修正：在 CentOS 系统下将 elrepo-kernel 默认启用，以解决在安装新内核后执行 yum update 再次安装旧内核的问题。</span></p> \n<p><span style=\"font-size: 14px; color: red;\">2018 年 05 月 12 日：</span><br /> <span style=\"font-size: 14px;\">1、修正：在 Ubuntu 或 Debian 系统中某些情况下获取不到某个编译失败的安装包导致退出安装的问题。并且现在可以手动选择安装从 4.14 到最新版本的内核。</span></p> \n<p><span style=\"font-size: 14px; color: red;\">2018 年 02 月 24 日：</span><br /> <span style=\"font-size: 14px;\">1、新增：手动安装最新版内核 headers 的教程。</span></p> \n<p><span style=\"font-size: 14px; color: red;\">2017 年 10 月 28 日：</span><br /> <span style=\"font-size: 14px;\">1、更新：自动判断内核版本。如果内核版本已经大于或等于 4.9 且没有开启 BBR，脚本会直接设置好 BBR；</span><br /> <span style=\"font-size: 14px;\">2、新增：脚本执行时会在当前目录下创建日志（install_bbr.log），方便查看及排错。</span></p> \n<p><span style=\"font-size: 14px; color: red;\">2017 年 02 月 22 日：</span><br /> <span style=\"font-size: 14px;\">1、更新：自动获取最新版 4.10 内核。</span></p> \n<p><span style=\"font-size: 14px; color: red;\">2017 年 01 月 20 日：</span><br /> <span style=\"font-size: 14px;\">1、新增：自动获取并下载安装最新版内核的功能。</span></p> \n<p><span style=\"font-size: 14px; color: red;\">2017 年 01 月 13 日：</span><br /> <span style=\"font-size: 14px;\">1、更新：内核到 4.9.3。</span></p> \n<p><span style=\"font-size: 14px; color: red;\">2017 年 01 月 09 日：</span><br /> <span style=\"font-size: 14px;\">1、更新：内核到 4.9.1。</span></p> \n<h3><span style=\"color: blue;\">参考链接：</span></h3> \n<p><span style=\"font-size: 14px;\"><a href=\"https://github.com/google/bbr/blob/master/Documentation/bbr-quick-start.md\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/google/bbr/blob/master/Documentation/bbr-quick-start.md</a></span><br /> <span style=\"font-size: 14px;\"><a href=\"http://elrepo.org/tiki/tiki-index.php\" target=\"_blank\" rel=\"noopener noreferrer\">http://elrepo.org/tiki/tiki-index.php</a></span><br /> <span style=\"font-size: 14px;\"><a href=\"http://kernel.ubuntu.com/~kernel-ppa/mainline/\" target=\"_blank\" rel=\"noopener noreferrer\">http://kernel.ubuntu.com/~kernel-ppa/mainline/</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/489.html\">一键安装最新内核并开启 BBR 脚本</a></p>","descriptionType":"html","publishedDate":"Sat, 24 Dec 2016 12:13:42 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2016/bbr.jpg","linkMd5":"49805e2ae40da6512fe2d52cac035c85","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn64@2020_6/2020/08/25/00-30-51-654_9c2851ccaa2368cd.webp","destWidth":600,"destHeight":450,"sourceBytes":36399,"destBytes":8816,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2016/bbr.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn64@2020_6/2020/08/25/00-30-51-654_9c2851ccaa2368cd.webp"},"publishedOrCreatedDate":1598315426722},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"关于VPS的三言两语","link":"https://teddysun.com/?p=126","description":"<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　以前对于建站有个误解，就是特别喜欢那种一键怎样怎样的解决方案，主机商卖给你一个空间然后你上传个程序就能搞定的事多么美好。现在也没觉得这种方案没什么不好，但就像红烧肉虽然好吃但每次都吃红烧肉就显得腻味一样，建站也是如此。尤其是对于想锻炼一下动手能力的人来说，搞个VPS来建站并且想怎么折腾就怎么折腾显得比较极客。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　但对于VPS来说又分为好几种：OpenVZ，Citrix XenServer（简称xen，分Xen pv和Xen hvm），KVM，VMware vSphere等，市面上常见的是前三种，相对而言其中以OpenVZ的最便宜，xen次之，KVM最贵。这里不讨论技术，只说说使用感受。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　国内目前最流行的要数阿里云，盛大云，新浪SAE，百度BAE等，前两者的云主机我都有试用过，觉得国内的带宽还是给的很吝啬的，往往512MB内存的配置就是1Mbps的带宽还说不限流量，很明显的坑。再加上万恶的备案制度和比较高昂的价格，对个人草根站长的吸引力不大（舍得烧钱的除外）。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　国外的VPS尤其是美国的IDC市场非常成熟，竞争也很激烈，所以偶尔在国内能遇到ping值平均在150ms以下的VPS都让人很振奋的，因为他们的线路肯定对中国做过优化。所以在购买之前，对其测试ip进行一下ping值测试也是很有必要的。至于亚马逊的AWS和微软的Windows Azure都是大牛，都有免费体验的云，不过我没用过，这里不做评价。</span></p> \n<p><span id=\"more-126\"></span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　我订阅了一些专门介绍国外VPS的一些网站：主机测评（<a href=\"http://www.zhujiceping.com\" target=\"_blank\">http://www.zhujiceping.com</a>），VPS侦探 （<a href=\"http://www.vpser.net\" target=\"_blank\">http://www.vpser.net</a>），赵容部落（<a href=\"http://www.zrblog.net\" target=\"_blank\">http://www.zrblog.net</a>），小夜博客（<a href=\"http://www.vpsmm.com\" target=\"_blank\">http://www.vpsmm.com</a>）。基本上我所使用的产品都来自于这几个博客的介绍。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　我个人觉得不错的，以及自己用过的VPS在这里简单提一下。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　1、Linode（<a href=\"http://www.linode.com\" target=\"_blank\">http://www.linode.com</a>），公认的VPS顶级供应商，高富帅玩家首选（为什么这么说，因为Linode最便宜的一款512MB配置月付$19.95且没有优惠码，只有推介链接）。稳定性自不必多说，提供基于xen的VPS，其拥有6处机房London、Newark、Atlanta、Dallas、Fremont、Tokyo，需要注意的是他们家是Linux only的VPS供应商。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　2、名前VPS（<a href=\"http://www.onamae-server.com\" target=\"_blank\">http://www.onamae-server.com</a>），日本GMO集团旗下的名前vps（onamae）也是在所有日本VPS的IDC中，性价比也是很好的。提供基于KVM的VPS。因为物理距离的关系，中国到日本的网速还是相当不错的。（鉴于近来日元和人民币之间的汇率持续走低，购买这家的VPS性价比也是不错的，最低配置1GB内存的那款月付940円，折合62元，支持信用卡付款。不足之处是日文界面对于大多数中国人来说还是比较陌生的）</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　3、StyleXnetworks（<a href=\"http://www.stylexnetworks.com\" target=\"_blank\">http://www.stylexnetworks.com</a>），基于XEN/ONAPP平台，位于洛杉矶的MultaCOM数据中心，到国内的速度还是可以的。使用优惠码的话性价比还是不错的，是我目前在用的（期间被关闭了一次后来邮件解释说是系统升级，一个月下来宕机时间在6小时左右，ping值不是很稳定，考虑搬家ing）。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　4、LOCVPS（<a href=\"http://www.locvps.com\" target=\"_blank\">http://www.locvps.com</a>），一家个人IDC，人称邝总，经营着VPS和虚拟主机业务。业界口碑不错，提供位于洛杉矶的基于xen的VPS，性价比优秀。也是我目前在用的（用Dnspod的D监控，一个月下来只宕机过3分钟，所以继续续费使用）。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/126.html\">关于VPS的三言两语</a></p>","descriptionType":"html","publishedDate":"Sat, 16 Mar 2013 12:34:16 +0000","feedId":9594,"bgimg":"","linkMd5":"df0f4c8855d1fbcf8f313fcc11a23d86","bgimgJsdelivr":"","metaImg":"","author":"秋水逸冰","publishedOrCreatedDate":1598315426749},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"PHP在线压缩脚本","link":"https://teddysun.com/?p=246","description":"<p><a href=\"https://teddysun.com/246.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/07/placid.jpg\" alt=\"风景\" title=\"PHP在线压缩脚本\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　虚拟主机商家很多是支持在线解压的，但鲜见支持在线压缩的。想必用过FTP上传过文件的人都知道一个一个地上传下载是多么痛苦，主机IDC在国外的尤甚。因此，在远程主机上打包好所有的文件再下载效率就会高很多。</span><br /> <span style=\"font-size:14px;\">　　不管是用虚拟主机还是VPS，只要是PHP环境，就可以使用该脚本一键打包压缩文件。本脚本收集自网络，我重写了css和使用提示，美化了页面，并实际测试，压缩文件的速度和效率都还不错。</span></p> \n<p> <span id=\"more-246\"></span> </p> \n<p> <span style=\"font-size:14px;\"><b>1、下载PHP在线压缩脚本（大小为4KB）</b></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://teddysun.com/wp-content/uploads/zip.zip\" target=\"_blank\">https://teddysun.com/wp-content/uploads/zip.zip</a></span></p> \n<p><span style=\"font-size:14px;\"><b>2、使用方法</b></span><br /> <span style=\"font-size:14px;\">下载到本地电脑后，解压，得到zip.php，将此文件用FTP上传至需要压缩的文件的相同目录下（一般为网站根目录public_html）。</span><br /> <span style=\"font-size:14px;\">在浏览器中打开该页面（如上传至根目录下，则网址一般为http://你的域名/zip.php），输入验证密码（验证密码在页面有提示），选定要压缩的文件或目录（包含子目录），点击“开始压缩”按钮，即可开始压缩。</span><br /> <span style=\"font-size:14px;\">压缩完成后，自动生成文件包的下载链接地址，点击即可下载回本地。</span></p> \n<p><span style=\"font-size:14px;\"><b>验证界面截图：</b>（点击看大图）</span></p> \n<p><a href=\"https://teddysun.com/wp-content/uploads/2013/07/zip1.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/07/zip1.png\" alt=\"在线解压\" title=\"PHP在线压缩截图1\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"><b>文件和目录界面截图：</b>（点击看大图）</span></p> \n<p><a href=\"https://teddysun.com/wp-content/uploads/2013/07/zip2.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/07/zip2.png\" alt=\"在线解压\" title=\"PHP在线压缩截图2\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"><b>3、注意事项</b></span><br /> <span style=\"font-size:14px;\">有的主机商禁止了一些PHP函数，如opendir，readdir等，会导致无法使用，遇见这种情况，除了联系你的主机商没别的办法。</span><br /> <span style=\"font-size:14px;\">在使用该脚本时，网站根目录要有写入文件权限，否则会在压缩时报错。</span><br /> <span style=\"font-size:14px;color:red;\">使用完后，建议及时删除该PHP脚本，以免被恶意利用。</span></p> \n<p><span style=\"font-size:14px;\"><span style=\"color:blue;\"><b>备注：</b></span>关于Linux权限，从左至右，第一位数字代表文件所有者的权限，第二位数字代表同组用户的权限，第三位数字代表其他用户的权限。而具体的权限是由数字来表示的，读取的权限等于4，用r表示；写入的权限等于2，用w表示；执行的权限等于1，用x表示；</span><br /> <span style=\"font-size:14px;\">通过4、2、1的组合，得到以下几种权限：0（没有权限）；4（读取权限）；5（4+1 | 读取+执行）；6（4+2 | 读取+写入）；7（4+2+1 | 读取+写入+执行）</span><br /> <span style=\"font-size:14px;\">以755为例：</span><br /> <span style=\"font-size:14px;\">第一位7等于4+2+1，rwx，所有者具有读取、写入、执行权限；</span><br /> <span style=\"font-size:14px;\">第二位5等于4+1+0，r-x，同组用户具有读取、执行权限但没有写入权限；</span><br /> <span style=\"font-size:14px;\">第三位5，同上，也是r-x，其他用户具有读取、执行权限但没有写入权限。</span></p> \n<p><span style=\"font-size:14px;\">常用的linux文件权限有以下几种：</span></p> \n<pre class=\"prettyprint\">444 r--r--r--\n600 rw-------\n644 rw-r--r--\n666 rw-rw-rw-\n700 rwx------\n744 rwxr--r--\n755 rwxr-xr-x\n777 rwxrwxrwx</pre> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/246.html\">PHP在线压缩脚本</a></p>","descriptionType":"html","publishedDate":"Wed, 31 Jul 2013 06:24:30 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/07/placid.jpg","linkMd5":"d55ecae091ca61c15f87ef046bd73cf5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn68@2020_2/2020/08/25/00-30-51-933_9ec8d8139b08de67.webp","destWidth":540,"destHeight":338,"sourceBytes":35248,"destBytes":18136,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/07/placid.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn68@2020_2/2020/08/25/00-30-51-933_9ec8d8139b08de67.webp","https://teddysun.com/wp-content/uploads/2013/07/zip1.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn60@2020_4/2020/08/25/00-30-58-049_0adbfa7cea08be7b.webp","https://teddysun.com/wp-content/uploads/2013/07/zip2.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn92@2020_4/2020/08/25/00-30-57-207_40f8f8968e54bda1.webp"},"publishedOrCreatedDate":1598315426743},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Linux性能测试UnixBench一键脚本","link":"https://teddysun.com/?p=245","description":"<p><a href=\"https://teddysun.com/wp-content/uploads/2013/07/unixbench_large.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/07/unixbench.png\" alt=\"unixbench\" title=\"Linux性能测试UnixBench一键脚本\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"> UnixBench是一个类unix系（Unix，BSD，Linux）统下的性能测试工具，一个开源工具，被广泛用与测试linux系统主机的性能。Unixbench的主要测试项目有：系统调用、读写、进程、图形化测试、2D、3D、管道、运算、C库等系统基准性能提供测试数据。</span></p> \n<p><span style=\"font-size:14px;\"> 最新版本UnixBench5.1.3，包含system和graphic测试，如果你需要测试graphic，则需要修改Makefile,不要注释掉”GRAPHIC_TESTS = defined”，同时需要系统提供x11perf命令gl_glibs库。</span><br /> <span style=\"font-size:14px;color:blue;\"> 下面的脚本使用了最新版UnixBench5.1.3来测试，注释了关于graphic的测试项（大多数VPS都是没有显卡或者是集显，所以图像性能无需测试），运行10-30分钟后（根据CPU内核数量，运算时间不等）得出分数，越高越好。</span></p> \n<p> <span id=\"more-245\"></span> </p> \n<p> <span style=\"font-size:14px;\"><b>测试方法：</b></span></p> \n<pre class=\"prettyprint lang-bsh\">wget --no-check-certificate https://github.com/teddysun/across/raw/master/unixbench.sh\nchmod +x unixbench.sh\n./unixbench.sh</pre> \n<p> <span style=\"font-size:14px;\"><b>测试项目：</b></span><br /> <span style=\"font-size:14px;\">Dhrystone 2 using register variables</span><br /> <span style=\"font-size:14px;\">此项用于测试 string handling，因为没有浮点操作，所以深受软件和硬件设计（hardware and software design）、编译和链接（compiler and linker options）、代码优化（code optimazaton）、对内存的cache（cache memory）、等待状态（wait states）、整数数据类型（integer data types）的影响。</span></p> \n<p><span style=\"font-size:14px;\">Double-Precision Whetstone</span><br /> <span style=\"font-size:14px;\">这一项测试浮点数操作的速度和效率。这一测试包括几个模块，每个模块都包括一组用于科学计算的操作。覆盖面很广的一系列 c 函数：sin，cos，sqrt，exp，log 被用于整数和浮点数的数学运算、数组访问、条件分支（conditional branch）和程序调用。此测试同时测试了整数和浮点数算术运算。</span></p> \n<p><span style=\"font-size:14px;\">Execl Throughput</span><br /> <span style=\"font-size:14px;\">此测试考察每秒钟可以执行的 execl 系统调用的次数。 execl 系统调用是 exec 函数族的一员。它和其他一些与之相似的命令一样是 execve（） 函数的前端。</span></p> \n<p><span style=\"font-size:14px;\">File copy</span><br /> <span style=\"font-size:14px;\">测试从一个文件向另外一个文件传输数据的速率。每次测试使用不同大小的缓冲区。这一针对文件 read、write、copy 操作的测试统计规定时间（默认是 10s）内的文件 read、write、copy 操作次数。</span></p> \n<p><span style=\"font-size:14px;\">Pipe Throughput</span><br /> <span style=\"font-size:14px;\">管道（pipe）是进程间交流的最简单方式，这里的 Pipe throughtput 指的是一秒钟内一个进程可以向一个管道写 512 字节数据然后再读回的次数。需要注意的是，pipe throughtput 在实际编程中没有对应的真实存在。</span></p> \n<p><span style=\"font-size:14px;\">Pipe-based Context Switching</span><br /> <span style=\"font-size:14px;\">这个测试两个进程（每秒钟）通过一个管道交换一个不断增长的整数的次数。这一点很向现实编程中的一些应用，这个测试程序首先创建一个子进程，再和这个子进程进行双向的管道传输。</span></p> \n<p><span style=\"font-size:14px;\">Process Creation</span><br /> <span style=\"font-size:14px;\">测试每秒钟一个进程可以创建子进程然后收回子进程的次数（子进程一定立即退出）。process creation 的关注点是新进程进程控制块（process control block）的创建和内存分配，即一针见血地关注内存带宽。一般说来，这个测试被用于对操作系统进程创建这一系统调用的不同实现的比较。</span></p> \n<p><span style=\"font-size:14px;\">System Call Overhead</span><br /> <span style=\"font-size:14px;\">测试进入和离开操作系统内核的代价，即一次系统调用的代价。它利用一个反复地调用 getpid 函数的小程序达到此目的。</span></p> \n<p><span style=\"font-size:14px;\">Shell Scripts</span><br /> <span style=\"font-size:14px;\">测试一秒钟内一个进程可以并发地开始一个 shell 脚本的 n 个拷贝的次数，n 一般取值 1，2，4，8。（我在测试时取 1， 8）。这个脚本对一个数据文件进行一系列的变形操作（transformation）。</span></p> \n<p><span style=\"font-size:14px;color:red;\">下面是我的一个512MB，2核，OpenVZ的VPS的跑分结果：</span></p> \n<pre class=\"prettyprint\">   BYTE UNIX Benchmarks (Version 5.1.3)\n\n   System: vpn: GNU/Linux\n   OS: GNU/Linux -- 2.6.32-042stab076.8 -- #1 SMP Tue May 14 20:38:14 MSK 2013\n   Machine: i686 (i386)\n   Language: en_US.utf8 (charmap=\"UTF-8\", collate=\"UTF-8\")\n   CPU 0: Intel(R) Xeon(R) CPU L5520 @ 2.27GHz (4533.6 bogomips)\n          Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization\n   CPU 1: Intel(R) Xeon(R) CPU L5520 @ 2.27GHz (4533.6 bogomips)\n          Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization\n   09:41:17 up 31 days,  9:21,  1 user,  load average: 0.23, 0.05, 0.02; runlevel 3\n\n------------------------------------------------------------------------\nBenchmark Run: Mon Jul 29 2013 09:41:17 - 10:09:29\n2 CPUs in system; running 1 parallel copy of tests\n\nDhrystone 2 using register variables       17172222.3 lps   (10.0 s, 7 samples)\nDouble-Precision Whetstone                     2600.2 MWIPS (10.0 s, 7 samples)\nExecl Throughput                               4152.8 lps   (30.0 s, 2 samples)\nFile Copy 1024 bufsize 2000 maxblocks        622759.5 KBps  (30.0 s, 2 samples)\nFile Copy 256 bufsize 500 maxblocks          172634.3 KBps  (30.0 s, 2 samples)\nFile Copy 4096 bufsize 8000 maxblocks       1218236.9 KBps  (30.0 s, 2 samples)\nPipe Throughput                             1416230.5 lps   (10.0 s, 7 samples)\nPipe-based Context Switching                 206509.4 lps   (10.0 s, 7 samples)\nProcess Creation                               8568.6 lps   (30.0 s, 2 samples)\nShell Scripts (1 concurrent)                   3145.9 lpm   (60.0 s, 2 samples)\nShell Scripts (8 concurrent)                    528.3 lpm   (60.0 s, 2 samples)\nSystem Call Overhead                        1528474.7 lps   (10.0 s, 7 samples)\n\nSystem Benchmarks Index Values               BASELINE       RESULT    INDEX\nDhrystone 2 using register variables         116700.0   17172222.3   1471.5\nDouble-Precision Whetstone                       55.0       2600.2    472.8\nExecl Throughput                                 43.0       4152.8    965.8\nFile Copy 1024 bufsize 2000 maxblocks          3960.0     622759.5   1572.6\nFile Copy 256 bufsize 500 maxblocks            1655.0     172634.3   1043.1\nFile Copy 4096 bufsize 8000 maxblocks          5800.0    1218236.9   2100.4\nPipe Throughput                               12440.0    1416230.5   1138.4\nPipe-based Context Switching                   4000.0     206509.4    516.3\nProcess Creation                                126.0       8568.6    680.0\nShell Scripts (1 concurrent)                     42.4       3145.9    742.0\nShell Scripts (8 concurrent)                      6.0        528.3    880.5\nSystem Call Overhead                          15000.0    1528474.7   1019.0\n                                                                   ========\nSystem Benchmarks Index Score                                         960.4\n\n------------------------------------------------------------------------\nBenchmark Run: Mon Jul 29 2013 10:09:29 - 10:39:56\n2 CPUs in system; running 2 parallel copies of tests\n\nDhrystone 2 using register variables       16851634.7 lps   (10.0 s, 7 samples)\nDouble-Precision Whetstone                     5182.9 MWIPS (10.0 s, 7 samples)\nExecl Throughput                               4101.9 lps   (30.0 s, 2 samples)\nFile Copy 1024 bufsize 2000 maxblocks        635244.9 KBps  (30.0 s, 2 samples)\nFile Copy 256 bufsize 500 maxblocks          174430.2 KBps  (30.0 s, 2 samples)\nFile Copy 4096 bufsize 8000 maxblocks       1219982.0 KBps  (30.0 s, 2 samples)\nPipe Throughput                             1387297.9 lps   (10.0 s, 7 samples)\nPipe-based Context Switching                 196296.1 lps   (10.0 s, 7 samples)\nProcess Creation                              10889.9 lps   (30.0 s, 2 samples)\nShell Scripts (1 concurrent)                   4073.7 lpm   (60.0 s, 2 samples)\nShell Scripts (8 concurrent)                    550.5 lpm   (60.2 s, 2 samples)\nSystem Call Overhead                        1538517.4 lps   (10.0 s, 7 samples)\n\nSystem Benchmarks Index Values               BASELINE       RESULT    INDEX\nDhrystone 2 using register variables         116700.0   16851634.7   1444.0\nDouble-Precision Whetstone                       55.0       5182.9    942.3\nExecl Throughput                                 43.0       4101.9    953.9\nFile Copy 1024 bufsize 2000 maxblocks          3960.0     635244.9   1604.2\nFile Copy 256 bufsize 500 maxblocks            1655.0     174430.2   1054.0\nFile Copy 4096 bufsize 8000 maxblocks          5800.0    1219982.0   2103.4\nPipe Throughput                               12440.0    1387297.9   1115.2\nPipe-based Context Switching                   4000.0     196296.1    490.7\nProcess Creation                                126.0      10889.9    864.3\nShell Scripts (1 concurrent)                     42.4       4073.7    960.8\nShell Scripts (8 concurrent)                      6.0        550.5    917.5\nSystem Call Overhead                          15000.0    1538517.4   1025.7\n                                                                   ========\nSystem Benchmarks Index Score                                        1058.3</pre> \n<p> <span style=\"font-size:14px;color:blue;\"><b>参考链接：</b></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://blog.sina.com.cn/s/blog_7695e9f40100yimf.html\" target=\"_blank\">http://blog.sina.com.cn/s/blog_7695e9f40100yimf.html</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/245.html\">Linux性能测试UnixBench一键脚本</a></p>","descriptionType":"html","publishedDate":"Mon, 29 Jul 2013 02:52:30 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/07/unixbench.png","linkMd5":"bc093a96ab878a2548b5f113f9f3eef2","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn91@2020_3/2020/08/25/00-30-52-996_1589511b235aac67.webp","destWidth":540,"destHeight":501,"sourceBytes":47642,"destBytes":26414,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/07/unixbench.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn91@2020_3/2020/08/25/00-30-52-996_1589511b235aac67.webp"},"publishedOrCreatedDate":1598315426741},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"解决wordpress链接含有more-link的方法","link":"https://teddysun.com/?p=81","description":"<p style=\"text-indent:2em;\"> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在wordpress文章中可以使用more标签来实现摘要的功能。但是在点击“继续阅读”(在这里我将“继续阅读”重新汉化成“阅读全文”，个人喜好)后，发现链接后面跟了一个“#more-数字”。不利于SEO和搜索引擎收录，因此需要去除之。</span> </p> \n<p style=\"text-indent:2em;\"> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">打开主题的functions.php，添加代码如下：</span> </p> \n<pre class=\"prettyprint lang-php\">function remove_more_jump_link($link) {\n\treturn preg_replace('/#more-\\d+/i','',$link);\n}\nadd_filter(\"the_content_more_link\", \"remove_more_jump_link\");</pre> \n<p style=\"text-indent:2em;\"> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">这段代码的功能就是添加一条过滤规则，将$link中的“#more-数字”替换为空。这样就实现了去除more-link的功能了。 </span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/81.html\">解决wordpress链接含有more-link的方法</a></p>","descriptionType":"html","publishedDate":"Wed, 27 Feb 2013 01:49:51 +0000","feedId":9594,"bgimg":"","linkMd5":"e732c9d9bac0ea6d6eff6f22199456b7","bgimgJsdelivr":"","metaImg":"","author":"秋水逸冰","publishedOrCreatedDate":1598315426750},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"解决wordpress时区不对的方法","link":"https://teddysun.com/?p=74","description":"<p style=\"text-indent:2em;\"> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">在汉化Google Drive for WordPress插件时发现，一键备份产生的文件名末尾是以时间戳结束，如1361761851这样的一串数字，时间久了备份文件变多，不利于记忆和区分。</span> </p> \n<p style=\"text-indent:2em;\"> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">因此，重新修改了代码，将时间戳转换成日期格式，比如现在是2013年2月26日10时30分18秒，转换之后的格式就是20130226_103018，修改后的插件已重新打包上传。《<a href=\"https://teddysun.com/53.html\" target=\"_blank\">Google Drive for WordPress插件汉化</a>》一文中的下载链接已更新，欢迎下载使用。</span> </p> \n<p> <span id=\"more-74\"></span> </p> \n<p style=\"text-indent:2em;\"> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">可是我在测试时发现，生成的文件名最后的时间不对。原来Wordpress默认的是UTC时区，跟中国差了8小时时差。于是找到了一些解决方法如下：</span> </p> \n<p style=\"text-indent:2em;\"> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">1、如果是VPS建站，你拥有控制权的话，可以修改php.ini文件。</span> </p> \n<pre class=\"prettyprint lang-php\">date.timezone = \"Asia/Shanghai\"</pre> \n<p style=\"text-indent:2em;\"> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">2、在/wp-includes/functions.php中加入：</span> </p> \n<pre class=\"prettyprint lang-php\">date_default_timezone_set('Asia/Shanghai');</pre> \n<p style=\"text-indent:2em;\"> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">3、在 wp-config.php中加入：</span> </p> \n<pre class=\"prettyprint lang-php\">date_default_timezone_set('Asia/Shanghai');</pre> \n<p style=\"text-indent:2em;\"> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">本文采用了第三种方法，将来Wordpress升级亦不受影响。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/74.html\">解决wordpress时区不对的方法</a></p>","descriptionType":"html","publishedDate":"Tue, 26 Feb 2013 02:51:08 +0000","feedId":9594,"bgimg":"","linkMd5":"a734cb2a0b88ca5aa68b09b81619e310","bgimgJsdelivr":"","metaImg":"","author":"秋水逸冰","publishedOrCreatedDate":1598315426750},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"phpMyAdmin导入文件错误的解决办法","link":"https://teddysun.com/?p=364","description":"<p><a href=\"https://teddysun.com/364.html\"><img src=\"https://teddysun.com/wp-content/uploads/2014/phpMyAdmin.png\" title=\"phpMyAdmin 导入文件错误的解决办法\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">phpMyAdmin 这货的升级速度确实是快，今天已然升级到 4.2.3 了，打算升级一下 phpMyAdmin 并简单测试一下，在导入文件的时候发生以下错误：</span><br /> <span style=\"font-size:14px;color:red;\">Uploaded file cannot be moved, because the server has open_basedir enabled without access to the directory (for temporary files).</span><br /> <span style=\"font-size:14px;\">而在之前的版本 4.2.2 的时候，导入文件是没有问题的。相同的环境，因为版本升级而导致的问题，那肯定是代码有变动了。于是开始比较两个版本之间有什么不同。</span></p> \n<p> <span id=\"more-364\"></span> </p> \n<p><span style=\"font-size:14px;\">既然是导入文件出的问题，那就来比较一下 phpMyAdmin 根目录下的 import.php 文件。</span><br /> <span style=\"font-size:14px;\">版本 4.2.2 的 import.php 中第 376 行：</span></p> \n<pre class=\"prettyprint lang-php\">$tmp_subdir = sys_get_temp_dir();</pre> \n<p><span style=\"font-size:14px;\">版本 4.2.3 的 import.php 中第 376 行：</span></p> \n<pre class=\"prettyprint lang-php\">$tmp_subdir = ini_get('upload_tmp_dir');</pre> \n<p> <span style=\"font-size:14px;\">从代码中可以看出，导入文件的临时目录的获取方式变更了。前者使用了 PHP 的函数 sys_get_temp_dir 返回用于临时文件的目录；后者使用了 PHP 的函数 ini_get 来获取 php.ini 配置文件里 upload_tmp_dir 的值。如果在 php.ini 中 upload_tmp_dir 的值没有定义的话，那就会出现以上的错误。</span><br /> <span style=\"font-size:14px;\">在<a href=\"https://teddysun.com/lamp\"> LAMP一键安装脚本</a>中，默认的 php.ini 中没有设置 upload_tmp_dir 的值（此处在官方的 php.ini-production 中也未定义），所以解决办法就是：</span><br /> <span style=\"font-size:14px;\">在 php.ini 中将 upload_tmp_dir 设为 /tmp 即可。</span><br /> <span style=\"font-size:14px;\">如果安装环境是 <a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP一键安装脚本</a> 的话，则修改文件位于 /usr/local/php/etc/php.ini，其他的环境则根据实际情况找到 php.ini 来修改。</span><br /> <span style=\"font-size:14px;\">修改前：</span></p> \n<pre class=\"prettyprint lang-bsh\">;upload_tmp_dir =</pre> \n<p><span style=\"font-size:14px;\">修改后：</span></p> \n<pre class=\"prettyprint lang-bsh\">upload_tmp_dir = /tmp</pre> \n<p> <span style=\"font-size:14px;\">在 Apache 的配置文件 httpd-vhosts.conf 中定义的 php_admin_value open_basedir 已包含了 /tmp 目录。而关于 /tmp 目录的权限一般已默认是 777 ，具备了可写权限。</span><br /> <span style=\"font-size:14px;\">按照上述步骤修改完 php.ini 后，需重启 Apache 。</span></p> \n<pre class=\"prettyprint lang-bsh\">service httpd restart</pre> \n<p><span style=\"font-size:14px;\">重启完毕，再次登录 phpMyAdmin 并导入文件就一切正常了。</span></p> \n<p> <span style=\"font-size:14px;\"><strong>最后吐槽 phpMyAdmin：</strong></span><br /> <span style=\"font-size:14px;\">phpMyAdmin 导入文件的代码（import.php）中,导入文件的临时目录的获取方式几度变更，在版本4.0.8 中则是这样的：</span></p> \n<pre class=\"prettyprint lang-php\">$tmp_subdir = (PMA_IS_WINDOWS ? '.\\\\tmp\\\\' : 'tmp/');</pre> \n<p><span style=\"font-size:14px;\">在设置了 open_basedir 的情况下，最终（最新版 4.2.3）的解决方案是跟 php.ini 里的设置绑定了。那如果用户不能设置（比如虚拟主机用户） php.ini 中的 upload_tmp_dir 那不就意味着无法使用导入文件功能了么。</span><br /> <span style=\"font-size:14px;\">个人觉得，可以加个判断条件，如果从 &nbsp;php.ini 中读到的 upload_tmp_dir 的值为空，则改用 sys_get_temp_dir 函数获取用于临时文件的目录，然后再来判断获得的目录是否具备可写权限。这里给出的参考代码如下：</span></p> \n<pre class=\"prettyprint lang-php\">$tmp_subdir = ini_get('upload_tmp_dir'); \n\nif (empty($tmp_subdir)) {\n    $tmp_subdir = sys_get_temp_dir();\n}</pre> \n<p> <br /> <span style=\"font-size:14px;color:red;\">2014年06月21日更新：</span><br /> <span style=\"font-size:14px;\">phpMyAdmin 更新到 4.2.4 后，import.php 如我所料地改成了以上我给出的建议代码。</span></p> \n<p><span style=\"font-size:14px;color:#003399;\"><strong>参考链接：</strong></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://docs.phpmyadmin.net/en/latest/faq.html#i-cannot-insert-a-text-file-in-a-table-and-i-get-an-error-about-safe-mode-being-in-effect\" target=\"_blank\">http://docs.phpmyadmin.net/en/latest/faq.html#i-cannot-insert-a-text-file-in-a-table-and-i-get-an-error-about-safe-mode-being-in-effect</a></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://sourceforge.net/p/phpmyadmin/bugs/4405/\" target=\"_blank\">http://sourceforge.net/p/phpmyadmin/bugs/4405/</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/364.html\">phpMyAdmin导入文件错误的解决办法</a></p>","descriptionType":"html","publishedDate":"Mon, 09 Jun 2014 04:47:55 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2014/phpMyAdmin.png","linkMd5":"cc1989cae97327eb1db61964575e0244","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn100@2020_2/2020/08/25/00-30-53-371_e330ed41ac53a429.webp","destWidth":599,"destHeight":424,"sourceBytes":133751,"destBytes":62332,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2014/phpMyAdmin.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn100@2020_2/2020/08/25/00-30-53-371_e330ed41ac53a429.webp"},"publishedOrCreatedDate":1598315426729},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"CentOS 6下源码安装SVN服务","link":"https://teddysun.com/?p=243","description":"<p><a href=\"https://teddysun.com/243.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/07/subversion.png\" alt=\"SVN\" title=\"CentOS6.4下源码安装SVN服务\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　最近在折腾SVN的安装和配置。尽管Google Code已经有完美的4GB空间的SVN服务，Git也有完善的Git工具，但有时候需要搭建一个私人的版本库。</span><br /> <span style=\"font-size:14px;\">　　SVN其实就是Subversion，分为服务器端和客户端。本次折腾是记录在服务器端的安装过程。</span></p> \n<p> <span id=\"more-243\"></span> </p> \n<p> <span style=\"font-size:14px;\">系统环境说明如下：</span></p> \n<pre class=\"prettyprint\">操作系统：        Centos6.4 x86\nSVN:             subversion-1.8.0\nApache:          httpd-2.4.6</pre> \n<p><span style=\"line-height:1.5;font-size:14px;\">如开启防火墙,则需添加如下列的规则以放行svn的3690端口</span></p> \n<pre class=\"prettyprint lang-bsh\">iptables -A INPUT -p tcp --dport 3690 -j ACCEPT\niptables save</pre> \n<p> <span style=\"font-size:14px;\">检查是否安装了低版本的SVN</span></p> \n<pre class=\"prettyprint lang-bsh\">rpm -qa | grep subversion</pre> \n<p><span style=\"font-size:14px;\">一般返回的默认版本：</span></p> \n<pre class=\"prettyprint lang-bsh\">subversion-1.6.11-9.el6_4.i686</pre> \n<p> <span style=\"font-size:14px;\">卸载旧版本SVN</span></p> \n<pre class=\"prettyprint lang-bsh\">yum remove subversion</pre> \n<p> <span style=\"font-size:16px;\"><b>下载、编译、安装的步骤</b></span></p> \n<p><span style=\"font-size:14px;\"><b>1、编译安装httpd-2.4.6</b></span></p> \n<p><span style=\"font-size:14px;\">下载并解压依赖包apr-1.4.8、apr-util-1.5.2</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://mirrors.tuna.tsinghua.edu.cn/apache//apr/apr-1.4.8.tar.gz\nwget http://mirrors.tuna.tsinghua.edu.cn/apache//apr/apr-util-1.5.2.tar.gz\ntar -zxf apr-1.4.8.tar.gz\ntar -zxf apr-util-1.5.2.tar.gz</pre> \n<p> <span style=\"font-size:14px;\">下载并解压httpd-2.4.6</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://mirrors.tuna.tsinghua.edu.cn/apache//httpd/httpd-2.4.6.tar.gz\ntar -zxf httpd-2.4.6.tar.gz</pre> \n<p> <span style=\"font-size:14px;\">移动apr-1.4.8、apr-util-1.5.2到httpd-2.4.6的srclib目录下</span></p> \n<pre class=\"prettyprint lang-bsh\">mv apr-1.4.8 httpd-2.4.6/srclib/apr\nmv apr-util-1.5.2 httpd-2.4.6/srclib/apr-util</pre> \n<p> <span style=\"font-size:14px;\">编译httpd-2.4.6</span></p> \n<pre class=\"prettyprint lang-bsh\">cd httpd-2.4.6\n./configure --prefix=/usr/local/apache --enable-so --enable-dav --enable-deflate=shared --enable-ssl=shared --enable-expires=shared  --enable-headers=shared --enable-rewrite=shared --enable-static-support  --with-included-apr --enable-modules=all --enable-mods-shared=all --with-mpm=prefork\nmake &amp;&amp; make install</pre> \n<p> <span style=\"font-size:14px;\"><b>2、编译安装subversion-1.8.0</b></span></p> \n<p><span style=\"line-height:1.5;font-size:14px;\">编译安装sqlite3.7.17</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://www.sqlite.org/2013/sqlite-autoconf-3071700.tar.gz\ntar -zxf sqlite-autoconf-3071700.tar.gz\ncd sqlite-autoconf-3071700\n./configure\nmake &amp;&amp; make install</pre> \n<p> <span style=\"font-size:14px;\">下载svn源码包并安装</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://mirrors.tuna.tsinghua.edu.cn/apache/subversion/subversion-1.8.0.tar.gz\ntar -zxf subversion-1.8.0.tar.gz\ncd subversion-1.8.0\n./configure --with-apr=/usr/local/apache --with-apr-util=/usr/local/apache --with-sqlite=/usr/local\nmake &amp;&amp; make install \n</pre> \n<p> <span style=\"font-size:14px;\">检查安装是否成功</span></p> \n<pre class=\"prettyprint lang-bsh\">svnserve --version</pre> \n<p> <span style=\"font-size:14px;\">返回值：</span></p> \n<pre class=\"prettyprint\">svnserve, version 1.8.0 (r1490375)\n   compiled Jul 23 2013, 21:32:09 on i686-pc-linux-gnu\nCopyright (C) 2013 The Apache Software Foundation.\nThis software consists of contributions made by many people;\nsee the NOTICE file for more information.\nSubversion is open source software, see http://subversion.apache.org/\n\nThe following repository back-end (FS) modules are available:\n* fs_fs : Module for working with a plain file (FSFS) repository.\nCyrus SASL authentication is available.</pre> \n<p><span style=\"font-size:14px;\">代码库创建</span></p> \n<pre class=\"prettyprint lang-bsh\">mkdir -p /opt/svn/repositories\nsvnadmin create /opt/svn/repositories</pre> \n<p> <span style=\"font-size:14px;\">执行上面的命令后，自动建立repositories库，查看/opt/svn/repositories 文件夹发现包含了conf,db,format,hooks,locks, README.txt等文件，说明一个SVN库建立完成。</span></p> \n<p><span style=\"font-size:14px;\">配置代码库</span><br /> <span style=\"font-size:14px;\">进入上面生成的文件夹conf下，进行配置&nbsp;</span></p> \n<pre class=\"prettyprint lang-bsh\">cd /opt/svn/repositories/conf</pre> \n<p> <span style=\"font-size:14px;\">用户密码passwd配置</span></p> \n<pre class=\"prettyprint lang-bsh\">vi passwd</pre> \n<p><span style=\"font-size:14px;\">passwd文件的内容如下：</span></p> \n<pre class=\"prettyprint\">### This file is an example password file for svnserve.\n### Its format is similar to that of svnserve.conf. As shown in the\n### example below it contains one section labelled [users].\n### The name and password for each user follow, one account per line.\n\n[users]\n# harry = harryssecret\n# sally = sallyssecret\ntest = 123456789</pre> \n<p> <span style=\"font-size:14px;\">权限控制authz配置</span></p> \n<pre class=\"prettyprint lang-bsh\">vi authz</pre> \n<p><span style=\"font-size:14px;\">目的是设置哪些用户可以访问哪些目录，authz文件的内容如下：</span></p> \n<pre class=\"prettyprint lang-js\">### This file is an example authorization file for svnserve.\n### Its format is identical to that of mod_authz_svn authorization\n### files.\n### As shown below each section defines authorizations for the path and\n### (optional) repository specified by the section name.\n### The authorizations follow. An authorization line can refer to:\n###  - a single user,\n###  - a group of users defined in a special [groups] section,\n###  - an alias defined in a special [aliases] section,\n###  - all authenticated users, using the '$authenticated' token,\n###  - only anonymous users, using the '$anonymous' token,\n###  - anyone, using the '*' wildcard.\n###\n### A match can be inverted by prefixing the rule with '~'. Rules can\n### grant read ('r') access, read-write ('rw') access, or no access\n### ('').\n\n[aliases]\n# joe = /C=XZ/ST=Dessert/L=Snake City/O=Snake Oil, Ltd./OU=Research Institute/CN=Joe Average\n\n[groups]\n# harry_and_sally = harry,sally\n# harry_sally_and_joe = harry,sally,&amp;joe\n\n# [/foo/bar]\n# harry = rw\n# &amp;joe = r\n# * =\n\n# [repository:/baz/fuz]\n# @harry_and_sally = rw\n# * = r\n\n[/]\ntest = rw\n</pre> \n<p> <span style=\"font-size:14px;\">设置[/]代表根目录下所有的资源&nbsp;</span></p> \n<p><span style=\"font-size:14px;\">服务svnserve.conf配置</span></p> \n<pre class=\"prettyprint lang-bsh\">vi svnserve.conf</pre> \n<p><span style=\"font-size:14px;\">svnserve.conf文件的内容如下：</span></p> \n<pre class=\"prettyprint\">[general]\n#匿名访问的权限，可以是read,write,none,默认为read\nanon-access=none\n#使授权用户有写权限 \nauth-access=write\n#密码数据库的路径 \npassword-db=passwd\n#访问控制文件 \nauthz-db=authz\n#认证命名空间，subversion会在认证提示里显示，并且作为凭证缓存的关键字 \nrealm=/opt/svn/repositories</pre> \n<p> <span style=\"font-size:14px;\">启动svn服务</span></p> \n<pre class=\"prettyprint lang-bsh\">svnserve -d -r /opt/svn/repositories</pre> \n<p> <span style=\"font-size:14px;\">查看SVN进程</span></p> \n<pre class=\"prettyprint lang-bsh\">ps -ef|grep svn|grep -v grep\n</pre> \n<p> <span style=\"font-size:14px;\">返回</span> </p> \n<p> </p> \n<pre class=\"prettyprint\">root     20850     1  0 Jul24 ?        00:00:00 svnserve -d -r /opt/svn/repositories</pre> \n<p> </p> \n<p><span style=\"font-size:14px;\">查看SVN监听的端口</span></p> \n<pre class=\"prettyprint lang-bsh\">netstat -ln |grep 3690</pre> \n<p> <span style=\"font-size:14px;\">停止启动SVN</span></p> \n<pre class=\"prettyprint lang-bsh\">killall svnserve    #停止 \nsvnserve -d -r /opt/svn/repositories  #启动\n</pre> \n<p> <span style=\"font-size:14px;\">目前最流行的svn客户端非TortoiseSVN莫属</span><br /> <span style=\"font-size:14px;\">下载安装</span></p> \n<pre class=\"prettyprint lang-html\">http://sourceforge.net/projects/tortoisesvn/files/latest/download?source=dlp</pre> \n<p> <span style=\"font-size:14px;\">客户端连接地址：svn://公网或内网的IP地址</span><br /> <span style=\"font-size:14px;\">用户名/密码： test/123456789</span></p> \n<p><span style=\"font-size:14px;\">参考链接：</span><br /> <span style=\"font-family:Courier New;\"><a href=\"http://subversion.apache.org/\" target=\"_blank\">http://subversion.apache.org/</a></span><br /> <span style=\"font-family:Courier New;\"><a href=\"http://www.sqlite.org/download.html\" target=\"_blank\">http://www.sqlite.org/download.html</a></span><br /> <span style=\"font-family:Courier New;\"><a href=\"http://showerlee.blog.51cto.com/2047005/1240955\" target=\"_blank\">http://showerlee.blog.51cto.com/2047005/1240955</a></span><br /> <span style=\"font-family:Courier New;\"><a href=\"http://cwind.blog.51cto.com/62582/1133189\" target=\"_blank\">http://cwind.blog.51cto.com/62582/1133189</a></span><br /> <span style=\"font-family:Courier New;\"><a href=\"http://www.cnblogs.com/zhoulf/archive/2013/02/02/2889949.html\" target=\"_blank\">http://www.cnblogs.com/zhoulf/archive/2013/02/02/2889949.html</a></span></p> \n<div> \n</div> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/243.html\">CentOS 6下源码安装SVN服务</a></p>","descriptionType":"html","publishedDate":"Fri, 26 Jul 2013 04:07:21 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/07/subversion.png","linkMd5":"a0142477ee9a6142a0f4b60fb2693fcf","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn84@2020_1/2020/08/25/00-30-54-212_c1bf5e8ca6ecf1f0.webp","destWidth":540,"destHeight":405,"sourceBytes":153319,"destBytes":13432,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/07/subversion.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn84@2020_1/2020/08/25/00-30-54-212_c1bf5e8ca6ecf1f0.webp"},"publishedOrCreatedDate":1598315426742},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"FTP 上传一键脚本ftp_upload.sh","link":"https://teddysun.com/?p=484","description":"<p><a href=\"https://teddysun.com/484.html\"><img src=\"https://teddysun.com/wp-content/uploads/2016/ftp.jpg\" title=\"FTP上传一键脚本ftp_upload.sh\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">写这个脚本的动机来自于黑五购买了一款什么都不限的虚拟主机，主机商死活不给 SSH Access 帐号，那就意味着不能通过 wget，axel 之类的下载工具下载文件。好在虚拟主机都是开通 FTP 的，可以通过 FTP 上传文件，而我又懒得一行一行敲命令，于是就写了这么一个懒人脚本。</span></p> \n<p><span style=\"font-size:14px;\">下面来介绍一下这个 FTP 上传一键脚本 ftp_upload.sh。</span></p> \n<p> <span id=\"more-484\"></span> </p> \n<p></p> \n<h2> <span style=\"color:red;\">总结一下 ftp_upload.sh 特点：</span><br /> </h2> \n<p><span style=\"font-size:14px;\">1、支持文件批量上传至 FTP 指定目录；</span><br /> <span style=\"font-size:14px;\">2、没有了。</span></p> \n<h3> 1、下载该脚本并赋予执行权限<br /> </h3> \n<p><span style=\"font-size:14px;\">下载脚本到本地待上传文件的目录下，比如：/data/www/default </span></p> \n<pre class=\"prettyprint lang-bsh\">cd /data/www/default\nwget --no-check-certificate https://github.com/teddysun/across/raw/master/ftp_upload.sh\nchmod +x ftp_upload.sh</pre> \n<p></p> \n<h3> 2、修改并配置脚本<br /> </h3> \n<p><span style=\"font-size:14px;\">请使用 vim 或 nano 等工具来修改。</span></p> \n<p><span style=\"font-size:14px;color:red;\"><strong>关于变量名的一些说明：</strong></span></p> \n<p><span style=\"font-size:14px;\">LOCALDIR （脚本当前所在目录）</span><br /> <span style=\"font-size:14px;\">LOGFILE （脚本运行产生的日志文件路径）</span><br /> <span style=\"font-size:14px;\">FTP_HOST （连接的 FTP 域名或 IP 地址）</span><br /> <span style=\"font-size:14px;\">FTP_USER （连接的 FTP 的用户名）</span><br /> <span style=\"font-size:14px;\">FTP_PASS （连接的 FTP 的用户的密码）</span><br /> <span style=\"font-size:14px;\">FTP_DIR （连接的 FTP 的远程目录，比如： public_html）</span></p> \n<p><span style=\"font-size:14px;color:red;\"><strong>一些注意事项的说明：</strong></span></p> \n<p><span style=\"font-size:14px;\">1）脚本需要用到 ftp 命令，请事先安装好；</span><br /> <span style=\"font-size:14px;\">2）脚本运行产生的日志文件路径不要乱改；</span><br /> <span style=\"font-size:14px;\">3）脚本需运行在待上传文件的目录下；</span><br /> <span style=\"font-size:14px;\">4）脚本后面跟含有通配符的参数时，一定要加双引号。</span></p> \n<h3> 3、脚本运行示例<br /> </h3> \n<p><span style=\"font-size:14px;\">脚本会显示待上传文件列表，并在最后统计出所需时间。</span></p> \n<p><span style=\"font-size:14px;\">1）上传当前目录下的文件 filename.tgz </span></p> \n<pre class=\"prettyprint lang-bsh\">./ftp_upload.sh filename.tgz</pre> \n<p> <span style=\"font-size:14px;\">2）上传当前目录下的多个文件 filename1.tgz，filename2.tgz，filename3.tgz</span></p> \n<pre class=\"prettyprint lang-bsh\">./ftp_upload.sh filename1.tgz filename2.tgz filename3.tgz</pre> \n<p> <span style=\"font-size:14px;\">3）上传当前目录下的通配符文件 *.tgz（注意此时后面跟的参数要加双引号）</span></p> \n<pre class=\"prettyprint lang-bsh\">./ftp_upload.sh \"*.tgz\"</pre> \n<p> <span style=\"font-size:14px;\">4）上传当前目录下的多个通配符文件 *.tgz，*.gz（注意此时后面跟的参数要加双引号）</span></p> \n<pre class=\"prettyprint lang-bsh\">./ftp_upload.sh \"*.tgz\" \"*.gz\"</pre> \n<p> <span style=\"font-size:14px;\">最后，欢迎交流和提出意见。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/484.html\">FTP 上传一键脚本ftp_upload.sh</a></p>","descriptionType":"html","publishedDate":"Tue, 29 Nov 2016 13:39:50 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2016/ftp.jpg","linkMd5":"1f173f8bad7b548a55dcf67db6e9d9f7","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn92@2020_1/2020/08/25/00-30-54-785_811025191783f246.webp","destWidth":620,"destHeight":413,"sourceBytes":117587,"destBytes":22590,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2016/ftp.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn92@2020_1/2020/08/25/00-30-54-785_811025191783f246.webp"},"publishedOrCreatedDate":1598315426754},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"PHP编译安装常见错误总结","link":"https://teddysun.com/?p=363","description":"<p><a href=\"https://teddysun.com/363.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/11/php.png\" alt=\"PHP\" title=\"PHP编译安装常见错误总结\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a> <span style=\"font-size:14px;\"></span></p> \n<p>在 CentOS 下编译 PHP5 的时候，为了安装某一扩展（ext），新增了编译参数，会出各种错误。基本上都可以通过 yum 安装相应的库或者改变编译参数来解决问题，在此记录如下。</p> \n<p> <span id=\"more-363\"></span> </p> \n<p><span style=\"font-size:14px;\"><strong>1、PHP 出现 segmentation fault 错误</strong></span><br /> <span style=\"font-size:14px;\">现象：安装完成后出现的这个问题让我一顿网上狂搜，但都无济于事。在运行任何有关 PHP 的命令时都会返回 segmentation fault 的错误，比如：php -v 或 php -m 等。经过不断试错和排查 php.ini，最终发现是在安装完 Zend Guard Loader 之后出现的。</span><br /> <span style=\"font-size:14px;\">原因： Zend Guard Loader 的配置错误。</span><br /> <span style=\"font-size:14px;\">解决办法：将 extension = ZendGuardLoader.so 改为 zend_extension = ZendGuardLoader.so即可。</span><br /> <span style=\"font-size:14px;\">最后，我将所有可选安装的配置都单独放到 /usr/local/php/php.d 下了，而不是一股脑放到 php.ini 中，这样便于出问题时排查。</span></p> \n<p><span style=\"font-size:14px;\"><strong>2、ICU 相关错误</strong></span><br /> <span style=\"font-size:14px;\">现象：Unable to detect ICU prefix or /usr//bin/icu-config failed. Please verify ICU install prefix and make sure icu-config works</span><br /> <span style=\"font-size:14px;\">解决办法：yum install -y icu libicu libicu-devel</span><br /> <span style=\"font-size:14px;\">关于 ICU 的编译参数：./configure –with-icu-dir=/usr</span></p> \n<p><span style=\"font-size:14px;\"><strong>3、bzip2 相关错误</strong></span><br /> <span style=\"font-size:14px;\">现象：checking for BZip2 support… yes checking for BZip2 in default path… not found configure: error: Please reinstall the BZip2 distribution</span><br /> <span style=\"font-size:14px;\">解决办法：yum install -y bzip2 bzip2-devel</span><br /> <span style=\"font-size:14px;\">关于 bzip2 的编译参数：./configure –with-bz2</span></p> \n<p><span style=\"font-size:14px;\"><strong>4、gmp 相关错误</strong></span><br /> <span style=\"font-size:14px;\">现象：checking for bind_textdomain_codeset in -lc… yes checking for GNU MP support… yes configure: error: Unable to locate gmp.h</span><br /> <span style=\"font-size:14px;\">解决办法：yum install -y gmp-devel</span><br /> <span style=\"font-size:14px;\">关于 gmp 的编译参数：./configure –with-gmp</span></p> \n<p><span style=\"font-size:14px;\"><strong>5、readline 相关错误</strong></span><br /> <span style=\"font-size:14px;\">现象：configure: error: Please reinstall libedit – I cannot find readline.h</span><br /> <span style=\"font-size:14px;\">解决办法：安装 Editline Library (libedit)，官网：http://thrysoee.dk/editline/</span><br /> <span style=\"font-size:14px;\">下载最新版 libedit 编译安装即可。</span><br /> <span style=\"font-size:14px;\">关于 readline 的编译参数：./configure –with-readline</span></p> \n<p><span style=\"font-size:14px;\"><strong>6、xsl 相关错误</strong></span><br /> <span style=\"font-size:14px;\">现象：configure: error: xslt-config not found. Please reinstall the libxslt &gt;= 1.1.0 distribution</span><br /> <span style=\"font-size:14px;\">解决办法：yum install -y libxslt libxslt-devel libxml2 libxml2-devel</span><br /> <span style=\"font-size:14px;\">关于 xsl 的编译参数：./configure –with-xsl</span></p> \n<p><span style=\"font-size:14px;\"><strong>7、pcre 相关错误</strong></span><br /> <span style=\"font-size:14px;\">现象：checking for PCRE headers location… configure: error: Could not find pcre.h in /usr</span><br /> <span style=\"font-size:14px;\">解决办法：yum install -y pcre-devel</span><br /> <span style=\"font-size:14px;\">关于 pcre 的编译参数：./configure –with-pcre-dir</span><br /> <span style=\"font-size:14px;\">备注：在 CentOS 5.x 中，pcre 的最新版本为 6.6，版本过低会导致在编译 Apache 2.4.x 的时候出现错误。因此，建议编译安装 pcre 的最新版 8.35，替换低版本的 pcre。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/363.html\">PHP编译安装常见错误总结</a></p>","descriptionType":"html","publishedDate":"Fri, 06 Jun 2014 02:44:08 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/11/php.png","linkMd5":"7462a3fa5bac88f48021edca46fc503f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn79@2020_4/2020/08/25/00-30-51-823_98db429a3ce60c2f.webp","destWidth":600,"destHeight":318,"sourceBytes":73085,"destBytes":20966,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/11/php.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn79@2020_4/2020/08/25/00-30-51-823_98db429a3ce60c2f.webp"},"publishedOrCreatedDate":1598315426730},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"限制 IP 访问 WordPress 登录画面","link":"https://teddysun.com/?p=482","description":"<p><a href=\"https://teddysun.com/482.html\"><img src=\"https://teddysun.com/wp-content/uploads/2016/wp-security.png\" alt=\"wordpress security\" title=\"限制IP访问WordPress登录画面\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a><br /> <span style=\"font-size:14px;\">WordPress 是目前最流行的 CMS，正因为如此，针对它的登录爆破就时刻从未停止过。</span><br /> <span style=\"font-size:14px;\">如果你安装了一款名叫「<a href=\"https://wordpress.org/plugins/simple-login-log/\" target=\"_blank\">Simple Login Log</a>」的插件，你就会知道，每天的暴力破解次数是多么丧心病狂。该插件会记录每一次登录后台的操作，不管是成功或失败都会留下记录。</span><br /> <span style=\"font-size:14px;\">正因如此，还是未雨绸缪做一些防范比较好。本次介绍在使用 Apache 的 VPS 上，如何限制 IP 访问 WordPress 后台登录画面。</span></p> \n<p> <span id=\"more-482\"></span> </p> \n<p></p> \n<h2> Apache httpd 的设定方法<br /> </h2> \n<p> <span style=\"font-size:14px;\">使用 Apache 可以限制 IP 访问某个特定的文件或文件夹。具体教程可以参考：<a href=\"https://httpd.apache.org/docs/2.4/en/mod/core.html#files\" target=\"_blank\">Files Directive</a></span><br /> <span style=\"font-size:14px;\">下面简单介绍如何限制 WordPress 后台登录画面的文件「wp-login.php」。</span><br /> <span style=\"font-size:14px;\">举例来说，只允许 IP 地址「192.168.2.1」访问，按照如下设定，写入 Apache 的配置文件「httpd.conf」或者网站根目录下的「.htaccess」都可以。</span></p> \n<pre class=\"prettyprint\">&lt;Files \"wp-login.php\"&gt;\n    Order Deny,Allow\n    Deny from all\n    Allow from 192.168.2.1\n&lt;/Files&gt;</pre> \n<p><span style=\"font-size:14px;\">只允许某 IP 地址段「192.168.2.*」访问，则为：</span></p> \n<pre class=\"prettyprint\">&lt;Files \"wp-login.php\"&gt;\n    Order Deny,Allow\n    Deny from all\n    Allow from 192.168.2\n&lt;/Files&gt;</pre> \n<p><span style=\"font-size:14px;\">允许多个 IP 地址「192.168.2.1」「192.168.2.2」访问，则为：</span></p> \n<pre class=\"prettyprint\">&lt;Files \"wp-login.php\"&gt;\n    Order Deny,Allow\n    Deny from all\n    Allow from 192.168.2.1 192.168.2.2\n&lt;/Files&gt;</pre> \n<p></p> \n<h2> 没有固定 IP 的对应方法<br /> </h2> \n<p> <span style=\"font-size:14px;\">如果你已经有了 VPS，当然这个问题就不是问题了。</span><br /> <span style=\"font-size:14px;\">VPS 都是使用固定 IP 的，你只需使用本站的几个一键脚本，就能分分钟搭建好，然后挂上 socks5 代理，不就是固定 IP 了么。</span></p> \n<p><span style=\"font-size:14px;\"><a href=\"https://teddysun.com/342.html\" target=\"_blank\">Shadowsocks Python 版一键安装脚本（CentOS，Debian，Ubuntu）</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://teddysun.com/392.html\" target=\"_blank\">Shadowsocks Go 版一键安装脚本（CentOS，Debian，Ubuntu）</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://shadowsocks.be/9.html\" target=\"_blank\">ShadowsocksR 版一键安装脚本（CentOS，Debian，Ubuntu）</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://teddysun.com/357.html\" target=\"_blank\">CentOS 下 Shadowsocks-libev 一键安装脚本</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://teddysun.com/358.html\" target=\"_blank\">Debian 下 Shadowsocks-libev 一键安装脚本</a></span></p> \n<p><span style=\"font-size:14px;\">当然，如果不想使用以上方法，那么还有一个选择，就是安装「<a href=\"https://wordpress.org/plugins/siteguard/\" target=\"_blank\">SiteGuard WP Plugin</a>」插件。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/482.html\">限制 IP 访问 WordPress 登录画面</a></p>","descriptionType":"html","publishedDate":"Wed, 23 Nov 2016 04:58:55 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2016/wp-security.png","linkMd5":"1ddb7ddb9ee88eacb5f3a9c95127ea03","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn76@2020_5/2020/08/25/00-30-54-266_b1d644ede6769ce5.webp","destWidth":650,"destHeight":341,"sourceBytes":56361,"destBytes":17134,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2016/wp-security.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn76@2020_5/2020/08/25/00-30-54-266_b1d644ede6769ce5.webp"},"publishedOrCreatedDate":1598315426728},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"又一家VPS：SupremeBytes","link":"https://teddysun.com/?p=240","description":"<p><a href=\"https://teddysun.com/wp-content/uploads/2013/07/supremebytes_large.jpg\"><img src=\"https://teddysun.com/wp-content/uploads/2013/07/supremebytes.jpg\" alt=\"supremebytes\" title=\"又一家VPS：SupremeBytes\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　第一次知道 <a href=\"http://www.supremebytes.com/\" target=\"_blank\">SupremeBytes </a>这家 VPS 商家的名字，当然是从收到一封 SwiftVM 被收购的邮件开始的。之所以想在这里推荐一下，也是因为一件小事开始的。</span><br /> <span style=\"font-size:14px;\">　　收到 SupremeBytes 群发的收购 SwiftVM 的邮件后，我就写了一篇文章，开头记述了我从用 SwiftVM 遇到的那些不痛快的事。这本来没什么，因为 VPS 用多了总会遇到不痛快的事。在收购完成后的大概第三天，我收到了一封来自 Zach Nielsen 的邮件，详细描述了我在《<a href=\"https://teddysun.com/238.html\" target=\"_blank\">玩VPS五大风险需注意</a>》一文中描述的PPTP不能用的原因，并说他们已经修复了这个问题。让我感动的是，他发来的邮件中包含了两张图片附件，一张是我的文章里的原文（当然是经过翻译的，也许是用了Google翻译，尽管不是很准确，但能明白我文章的意思），一张是执行 cat /etc/rc.d/rc.local | grep tun 命令后的结果，显示的是已经载入 tun 模块。</span></p> \n<p> <span id=\"more-240\"></span> </p> \n<p><span style=\"font-size:14px;\">　　图片附件如下：</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2013/07/image001.png\" alt=\"image001\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2013/07/image002.png\" alt=\"image002\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\">　　我想，他大概是用了 SwiftVM 作为关键字在 Google 上搜到了我的这篇文章，经过翻译后，理解了我文章中的抱怨。于是他站在一个顾客的角度，把这个问题解决了并告诉了我。意思很明显，作为一个 SwiftVM 的新东家，他们是称职的。</span><br /> <span style=\"font-size:14px;\">　　于是我开始关注这家自2010年在在哥伦布成立的VPS商家。在其官网的<a href=\"http://www.supremebytes.com/company.php?contact=true\" target=\"_blank\">联系我们</a>页面，我看到了 Zach Nielsen 的名字，首席技术官，有着多年经验的网络工程师。紧接着我看到了他的 </span><a href=\"https://twitter.com/znielsen\" target=\"_blank\"><span style=\"font-size:14px;\">Twitter 页面</span></a><span style=\"font-size:14px;\">，顺便还看了下他的老板 </span><a href=\"https://twitter.com/DennyBurk\" target=\"_blank\"><span style=\"font-size:14px;\">Damien Burke</span></a><span style=\"font-size:14px;\"> 的页面。好吧，由此可见，人有时候无聊了，就会找点什么事情做做。（<span style=\"color:red;\">2013年7月27日更新：此处找到的Twitter页面并不是真的，前者是重名，后者也非本人。<span style=\"font-size:14px;line-height:21px;\">官方Twitter是<a href=\"https://www.twitter.com/supremebytes\" target=\"_blank\">@<span style=\"font-size:14px;line-height:21px;\">SupremeBytes</span></a></span><a href=\"https://www.twitter.com/supremebytes\" target=\"_blank\"></a></span>）</span><br /> <span style=\"font-size:14px;\">　　下面是目前所用的128MB内存套餐的简要测评（也就是之前的SwiftVM，不代表现在的SupremeBytes）。</span></p> \n<p><span style=\"font-size:14px;\"><b>1、ping测试</b>，截图如下（基本和之前一样，对电信线路友好，联通线路稍弱）：<br /> <img src=\"https://teddysun.com/wp-content/uploads/2013/07/v2_ping.png\" alt=\"ping\" title=\"ping测试\" class=\"left\" style=\"width:auto;height:auto;\" /></span></p> \n<p><b>2、CPU信息</b> </p> \n<pre class=\"prettyprint\">[root@vpn2 ~]# cat /proc/cpuinfo\nprocessor       : 0\nvendor_id       : GenuineIntel\ncpu family      : 6\nmodel           : 58\nmodel name      : Intel(R) Xeon(R) CPU E3-1270 V2 @ 3.50GHz\nstepping        : 9\ncpu MHz         : 2700.000\ncache size      : 8192 KB\nphysical id     : 0\nsiblings        : 8\ncore id         : 0\ncpu cores       : 4\napicid          : 0\ninitial apicid  : 0\nfpu             : yes\nfpu_exception   : yes\ncpuid level     : 13\nwp              : yes\nflags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm ida arat epb xsaveopt pln pts dts tpr_shadow vnmi flexpriority ept vpid fsgsbase smep erms\nbogomips        : 6999.49\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 36 bits physical, 48 bits virtual\npower management:</pre> \n<p> <b>3、内存信息</b> </p> \n<pre class=\"prettyprint\">[root@vpn2 ~]# cat /proc/meminfo\nMemTotal:         131072 kB\nMemFree:           18940 kB\nCached:            57176 kB\nActive:            79940 kB\nInactive:          18912 kB\nActive(anon):      23668 kB\nInactive(anon):    18008 kB\nActive(file):      56272 kB\nInactive(file):      904 kB\nUnevictable:           0 kB\nMlocked:               0 kB\nSwapTotal:             0 kB\nSwapFree:              0 kB\nDirty:                 8 kB\nWriteback:             0 kB\nAnonPages:         41676 kB\nShmem:              8256 kB\nSlab:              13268 kB\nSReclaimable:       8184 kB\nSUnreclaim:         5084 kB</pre> \n<p> <b>4、硬盘信息</b> </p> \n<pre class=\"prettyprint\">[root@vpn2 ~]# df -hal\nFilesystem            Size  Used Avail Use% Mounted on\n/dev/simfs            5.0G  2.3G  2.8G  46% /\nproc                     0     0     0   -  /proc\nsysfs                    0     0     0   -  /sys\nnone                   64M  4.0K   64M   1% /dev\nnone                     0     0     0   -  /dev/pts\nnone                   64M     0   64M   0% /dev/shm\nnone                     0     0     0   -  /proc/sys/fs/binfmt_misc</pre> \n<p> <b>5、下载测试</b> </p> \n<pre class=\"prettyprint\">[root@vpn2 ~]# wget http://cachefly.cachefly.net/100mb.test\n--2013-07-20 14:38:30--  http://cachefly.cachefly.net/100mb.test\nResolving cachefly.cachefly.net... 205.234.175.175\nConnecting to cachefly.cachefly.net|205.234.175.175|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 104857600 (100M) [application/octet-stream]\nSaving to: `100mb.test'\n\n100%[======================================&gt;] 104,857,600 11.2M/s   in 9.0s\n\n2013-07-20 14:38:39 (11.1 MB/s) - `100mb.test' saved [104857600/104857600]</pre> \n<p> 从信息上来看，如果没做限制的话，应该是100MB端口。</p> \n<p><b>6、路由追踪</b> </p> \n<pre class=\"prettyprint\">C:\\Users\\teddysun&gt;tracert 204.68.96.115\n\n通过最多 30 个跃点跟踪到 204.68.96.115 的路由\n\n  1    &lt;1 毫秒   &lt;1 毫秒   &lt;1 毫秒 192.168.1.1\n  2    10 ms    10 ms     9 ms  180.108.184.1\n  3    12 ms    16 ms    15 ms  218.4.211.117\n  4    19 ms    23 ms    19 ms  221.224.229.245\n  5    19 ms    20 ms    19 ms  202.97.27.2\n  6    20 ms    20 ms    20 ms  202.97.55.37\n  7    21 ms    21 ms    19 ms  202.97.33.94\n  8    18 ms    19 ms    18 ms  202.97.35.14\n  9   167 ms   168 ms   167 ms  202.97.58.190\n 10   156 ms   158 ms   171 ms  202.97.90.42\n 11   156 ms   155 ms   167 ms  xe-4-3-1.edge1.SanJose3.Level3.net [4.71.114.101]\n 12   180 ms   174 ms   168 ms  vlan90.csw4.SanJose1.Level3.net [4.69.152.254]\n 13   155 ms   156 ms   153 ms  ae-91-91.ebr1.SanJose1.Level3.net [4.69.153.13]\n 14   167 ms   167 ms   165 ms  ae-2-2.ebr3.LosAngeles1.Level3.net [4.69.132.10]\n 15   164 ms   162 ms   162 ms  ae-83-83.csw3.LosAngeles1.Level3.net [4.69.137.42]\n 16   164 ms   165 ms   165 ms  ae-3-80.edge3.LosAngeles1.Level3.net [4.69.144.137]\n 17   159 ms   157 ms   159 ms  AMERICAN-IN.edge3.LosAngeles1.Level3.net [4.53.122.14]\n 18   166 ms   167 ms   166 ms  br06-te1-3.lwdc.americanis.net [207.158.63.238]\n 19   162 ms   162 ms   162 ms  ar07-gi10-44.lwdc.americanis.net [207.158.62.250]\n 20   162 ms   161 ms   161 ms  lwdc.ar06.gi10-31.host3.24949.americanis.net [67.207.219.12]\n 21   159 ms   172 ms   161 ms  lwdc.ar07.gi10-31.host1.24949.americanis.net [216.240.191.2]\n 22   172 ms   171 ms   172 ms  204.68.96.115\n跟踪完成。</pre> \n<p>从追踪节点上来看，走的是Level3，这个线路到国内只能说还行吧。</p> \n<p><b>7、总结</b><br /> 实践证明，128MB的内存是无法编译安装LAMP脚本的。只能通过 yum 来安装 LAMP 环境。这个年付12美元的套餐，用来做个私人的梯子还是相当不错的。<br /> </p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/240.html\">又一家VPS：SupremeBytes</a></p>","descriptionType":"html","publishedDate":"Sat, 20 Jul 2013 07:01:07 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/07/supremebytes.jpg","linkMd5":"13873f199369e9f80680aba8811ac37b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn76@2020_5/2020/08/25/00-30-53-178_bd2fdf1bc80829cc.webp","destWidth":540,"destHeight":340,"sourceBytes":53895,"destBytes":20096,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/07/supremebytes.jpg":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn76@2020_5/2020/08/25/00-30-53-178_bd2fdf1bc80829cc.webp","https://teddysun.com/wp-content/uploads/2013/07/image001.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn17@2020_3/2020/08/25/00-31-01-466_b4c267592edbb4a3.webp","https://teddysun.com/wp-content/uploads/2013/07/image002.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn75@2020_4/2020/08/25/00-31-00-345_19b386375fcee963.webp","https://teddysun.com/wp-content/uploads/2013/07/v2_ping.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn100@2020_4/2020/08/25/00-30-57-227_d668ddb831bf7851.webp"},"publishedOrCreatedDate":1598315426742},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Zend Guard Loader简介及下载链接一览","link":"https://teddysun.com/?p=417","description":"<p><a href=\"https://teddysun.com/417.html\"><img src=\"https://teddysun.com/wp-content/uploads/2015/zendguard.png\" title=\"Zend Guard Loader简介及下载链接一览\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">Zend Guard 是 Zend 官方出品的一款 PHP 源码加密产品解决方案，能有效地防止程序未经许可的使用和逆向工程。</span><br /> <span style=\"font-size:14px;\">Zend Guard Loader 则是针对使用 Zend Guard 加密后的 PHP 代码的运行环境。如果环境中没有安装 Zend Guard Loader，则无法运行经 Zend Guard 加密后的 PHP 代码。</span><br /> <span style=\"font-size:14px;\">目前最新版 Zend Guard 7.0 已经开始支持 <span style=\"color:red;\">PHP5.5</span> 和 <span style=\"color:red;\">PHP5.6</span> 了，相对应的 Zend Guard Loader 也升级了。</span><br /> <span style=\"font-size:14px;\">简单整理了下 Zend Guard 和 Zend Guard Loader 所有版本的官网链接，以方便下载（官网下载需注册用户，比较麻烦）。</span></p> \n<p> <span id=\"more-417\"></span> </p> \n<p> <span style=\"font-size:14px;\"><strong>Zend Guard 7.0</strong></span><br /> <span style=\"font-size:14px;color:#E53333;\">Linux</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/7.0.0/ZendGuard-7.0.0-linux.gtk.x86.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/7.0.0/ZendGuard-7.0.0-linux.gtk.x86.tar.gz</a></span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/7.0.0/ZendGuard-7.0.0-linux.gtk.x86_64.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/7.0.0/ZendGuard-7.0.0-linux.gtk.x86_64.tar.gz</a></span><br /> <span style=\"font-size:14px;color:#E53333;\">Mac OS</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/7.0.0/ZendGuard-7.0.0-macosx.cocoa.x86_64.dmg\" target=\"_blank\">http://downloads.zend.com/guard/7.0.0/ZendGuard-7.0.0-macosx.cocoa.x86_64.dmg</a></span><br /> <span style=\"font-size:14px;color:#E53333;\">Windows</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/7.0.0/ZendGuard-7.0.0-win32.win32.x86.msi\" target=\"_blank\">http://downloads.zend.com/guard/7.0.0/ZendGuard-7.0.0-win32.win32.x86.msi</a></span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/7.0.0/ZendGuard-7.0.0-win32.win32.x86_64.msi\" target=\"_blank\">http://downloads.zend.com/guard/7.0.0/ZendGuard-7.0.0-win32.win32.x86_64.msi</a></span></p> \n<p><span style=\"font-size:14px;\"><strong>Zend Guard 6.0</strong></span><br /> <span style=\"font-size:14px;color:#E53333;\">Linux</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/6.0.0/ZendGuard-6_0_0-linux.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/6.0.0/ZendGuard-6_0_0-linux.tar.gz</a></span><br /> <span style=\"font-size:14px;color:#E53333;\">Mac OS</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/6.0.0/ZendGuard-6_0_0.dmg\" target=\"_blank\">http://downloads.zend.com/guard/6.0.0/ZendGuard-6_0_0.dmg</a></span><br /> <span style=\"font-size:14px;color:#E53333;\">Windows</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/6.0.0/ZendGuard-6_0_0.exe\" target=\"_blank\">http://downloads.zend.com/guard/6.0.0/ZendGuard-6_0_0.exe</a></span></p> \n<p><span style=\"font-size:14px;\"><strong>Zend Guard 5.5</strong></span><br /> <span style=\"font-size:14px;color:#E53333;\">Linux</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/5.5.0/ZendGuard-5_5_0.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/5.5.0/ZendGuard-5_5_0.tar.gz</a></span><br /> <span style=\"font-size:14px;color:#E53333;\">Mac OS</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/5.5.0/ZendGuard-5_5_0-Mac_OS_X.zip\" target=\"_blank\">http://downloads.zend.com/guard/5.5.0/ZendGuard-5_5_0-Mac_OS_X.zip</a></span><br /> <span style=\"font-size:14px;color:#E53333;\">Windows</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/5.5.0/ZendGuard-5_5_0.exe\" target=\"_blank\">http://downloads.zend.com/guard/5.5.0/ZendGuard-5_5_0.exe</a></span></p> \n<p> <span style=\"font-size:14px;\"><strong>Zend Guard Loader for PHP5.5 &amp; PHP5.6</strong></span><br /> <span style=\"font-size:14px;color:#E53333;\">Linux</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/7.0.0/zend-loader-php5.5-linux-i386.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/7.0.0/zend-loader-php5.5-linux-i386.tar.gz</a></span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/7.0.0/zend-loader-php5.5-linux-x86_64.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/7.0.0/zend-loader-php5.5-linux-x86_64.tar.gz</a></span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/7.0.0/zend-loader-php5.6-linux-i386.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/7.0.0/zend-loader-php5.6-linux-i386.tar.gz</a></span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/7.0.0/zend-loader-php5.6-linux-x86_64.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/7.0.0/zend-loader-php5.6-linux-x86_64.tar.gz</a></span><br /> <span style=\"font-size:14px;color:#E53333;\">Mac OS</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/7.0.0/zend-loader-php5.5-darwin10.7-x86_64.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/7.0.0/zend-loader-php5.5-darwin10.7-x86_64.tar.gz</a></span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/7.0.0/zend-loader-php5.6-darwin10.7-x86_64.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/7.0.0/zend-loader-php5.6-darwin10.7-x86_64.tar.gz</a></span><br /> <span style=\"font-size:14px;color:#E53333;\">Windows</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/7.0.0/zend-loader-php5.5-windows-x86.zip\" target=\"_blank\">http://downloads.zend.com/guard/7.0.0/zend-loader-php5.5-windows-x86.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/7.0.0/zend-loader-php5.6-windows-x86.zip\" target=\"_blank\">http://downloads.zend.com/guard/7.0.0/zend-loader-php5.6-windows-x86.zip</a></span></p> \n<p><span style=\"font-size:14px;\"><strong>Zend Guard Loader for PHP5.4</strong></span><br /> <span style=\"font-size:14px;color:#E53333;\">Linux</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/6.0.0/ZendGuardLoader-70429-PHP-5.4-linux-glibc23-i386.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/6.0.0/ZendGuardLoader-70429-PHP-5.4-linux-glibc23-i386.tar.gz</a></span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/6.0.0/ZendGuardLoader-70429-PHP-5.4-linux-glibc23-x86_64.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/6.0.0/ZendGuardLoader-70429-PHP-5.4-linux-glibc23-x86_64.tar.gz</a></span><br /> <span style=\"font-size:14px;color:#E53333;\">Mac OS</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/6.0.0/ZendGuardLoader-70429-PHP-5.4-darwin10.7-x86_64.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/6.0.0/ZendGuardLoader-70429-PHP-5.4-darwin10.7-x86_64.tar.gz</a></span><br /> <span style=\"font-size:14px;color:#E53333;\">Windows</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/6.0.0/ZendGuardLoader-70429-PHP-5.4-Windows-x86.zip\" target=\"_blank\">http://downloads.zend.com/guard/6.0.0/ZendGuardLoader-70429-PHP-5.4-Windows-x86.zip</a></span></p> \n<p><span style=\"font-size:14px;\"><strong>Zend Guard Loader for PHP5.3</strong></span><br /> <span style=\"font-size:14px;color:#E53333;\">Linux</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/5.5.0/ZendGuardLoader-php-5.3-linux-glibc23-i386.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/5.5.0/ZendGuardLoader-php-5.3-linux-glibc23-i386.tar.gz</a></span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/5.5.0/ZendGuardLoader-php-5.3-linux-glibc23-x86_64.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/5.5.0/ZendGuardLoader-php-5.3-linux-glibc23-x86_64.tar.gz</a></span><br /> <span style=\"font-size:14px;color:#E53333;\">Mac OS</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/5.5.0/ZendGuardLoader-php-5.3-darwin-i386.tar.gz\" target=\"_blank\">http://downloads.zend.com/guard/5.5.0/ZendGuardLoader-php-5.3-darwin-i386.tar.gz</a></span><br /> <span style=\"font-size:14px;color:#E53333;\">Windows</span><br /> <span style=\"font-size:14px;\"><a href=\"http://downloads.zend.com/guard/5.5.0/ZendGuardLoader-php-5.3-Windows.zip\" target=\"_blank\">http://downloads.zend.com/guard/5.5.0/ZendGuardLoader-php-5.3-Windows.zip</a></span></p> \n<p><span style=\"font-size:14px;color:blue;\"><strong>百度盘备份下载链接</strong></span><br /> <span style=\"font-size:14px;\"><a href=\"http://pan.baidu.com/s/1hqmx1XU\" target=\"_blank\">http://pan.baidu.com/s/1hqmx1XU</a></span></p> \n<p><span style=\"font-size:14px;\">本文并没有所谓的破解版本，只是简化了官网下载流程而已。如果你是搜索关键字「破解」来到此页面的话，我要说声抱歉了，请支持正版。</span><br /> <span style=\"font-size:14px;\">顺便说一句，<a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP一键安装脚本</a>的脚本 ZendGuardLoader.sh 已经更新，全面支持从 PHP5.3 到 PHP5.6 的 Zend Guard Loader 安装。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/417.html\">Zend Guard Loader简介及下载链接一览</a></p>","descriptionType":"html","publishedDate":"Mon, 01 Jun 2015 06:17:16 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2015/zendguard.png","linkMd5":"c03fa83b38d3b063cbac7fd990bacb58","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn4@2020_3/2020/08/25/00-30-52-521_6447f7f8a6519d4a.webp","destWidth":640,"destHeight":315,"sourceBytes":177928,"destBytes":15102,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2015/zendguard.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn4@2020_3/2020/08/25/00-30-52-521_6447f7f8a6519d4a.webp"},"publishedOrCreatedDate":1598315426725},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"又一家VPS：Host1Plus","link":"https://teddysun.com/?p=416","description":"<p><a href=\"https://teddysun.com/416.html\"><img src=\"https://teddysun.com/wp-content/uploads/2015/host1plus.png\" title=\"又一家VPS：Host1Plus\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"><a href=\"https://teddysun.com/t/host1plus\" target=\"_blank\">Host1Plus</a>，成立于 2008 年，是一家英国的著名 IDC，旗下拥有的业务有虚拟主机，VPS，独立服务器，SEO 主机，域名注册，SSL 等。在巴西、德国、立陶宛、新加坡、南非、荷兰、英国、美国都有其服务器。最早提供免费虚拟主机的 Host1Free 也是这家的。</span><br /> <span style=\"font-size:14px;\">其 VPS 业务的服务器位于美国洛杉矶、美国芝加哥、德国法兰克福、巴西圣保罗、南非约翰内斯堡。本次评测为美国洛杉矶的 VPS ，是 <a href=\"https://affiliates.host1plus.com/ref/teddysun.html\" target=\"_blank\">Host1Plus</a> 友情支持的一款 <strong>Gold</strong> 套餐。</span></p> \n<p> <span id=\"more-416\"></span> </p> \n<p> <a href=\"https://teddysun.com/wp-content/uploads/2015/host1plus_vps.png\"><img src=\"https://teddysun.com/wp-content/uploads/2015/host1plus_vps_small.png\" title=\"host1plus server\" class=\"left\" style=\"width:auto;height:auto;\" /></a> </p> \n<p><span style=\"font-size:14px;\">首先看一下 <strong>Gold</strong> 套餐的配置：</span><br /> <span style=\"font-size:14px;color:blue;font-family:'Courier New';\"><strong>2GB RAM</strong></span><br /> <span style=\"font-size:14px;color:blue;font-family:'Courier New';\"><strong>1GB Swap</strong></span><br /> <span style=\"font-size:14px;color:blue;font-family:'Courier New';\"><strong>2x vCPU</strong></span><br /> <span style=\"font-size:14px;color:blue;font-family:'Courier New';\"><strong>40GB HDD+SSD space</strong></span><br /> <span style=\"font-size:14px;color:blue;font-family:'Courier New';\"><strong>2000GB transfer</strong></span><br /> <span style=\"font-size:14px;color:blue;font-family:'Courier New';\"><strong>50Mbps uplink</strong></span><br /> <span style=\"font-size:14px;color:blue;font-family:'Courier New';\"><strong>1x IPv4</strong></span><br /> <span style=\"font-size:14px;color:blue;font-family:'Courier New';\"><strong>OpenVZ</strong></span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2015/host1plus_server.png\" title=\"host1plus server\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\"><strong>1、CPU 和内存</strong></span><br /> <span style=\"font-size:14px;\">CPU model : &nbsp;Intel(R) Xeon(R) CPU E5-2640 v2 @ 2.00GHz</span><br /> <span style=\"font-size:14px;\">Number of cores : 2</span><br /> <span style=\"font-size:14px;\">CPU frequency : &nbsp;2000.070 MHz</span><br /> <span style=\"font-size:14px;\">Total amount of RAM : 2048 MB</span><br /> <span style=\"font-size:14px;\">Total amount of Swap : 1024 MB</span></p> \n<p><span style=\"font-size:14px;\"><strong>2、硬盘</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">[root@la ~]# df -ah\nFilesystem         Size  Used Avail Use% Mounted on\n/dev/ploop28697p1   40G  2.6G   35G   7% /\nproc                  0     0     0    - /proc\nsysfs                 0     0     0    - /sys\nnone               1.0G  4.0K  1.0G   1% /dev\nnone                  0     0     0    - /dev/pts\nnone               1.0G     0  1.0G   0% /dev/shm\nnone                  0     0     0    - /proc/sys/fs/binfmt_misc</pre> \n<p> <span style=\"font-size:14px;\"><strong>3、I/O</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">[root@la ~]# dd if=/dev/zero of=test bs=64k count=16k conv=fdatasync \n16384+0 records in\n16384+0 records out\n1073741824 bytes (1.1 GB) copied, 14.6265 s, 73.4 MB/s\n\n[root@la ~]# dd if=/dev/zero of=test bs=64k count=16k conv=fdatasync \n16384+0 records in\n16384+0 records out\n1073741824 bytes (1.1 GB) copied, 7.98519 s, 134 MB/s\n\n[root@la ~]# dd if=/dev/zero of=test bs=64k count=16k conv=fdatasync \n16384+0 records in\n16384+0 records out\n1073741824 bytes (1.1 GB) copied, 1.53575 s, 699 MB/s\n\n[root@la ~]# dd if=/dev/zero of=test bs=64k count=16k conv=fdatasync \n16384+0 records in\n16384+0 records out\n1073741824 bytes (1.1 GB) copied, 1.68398 s, 638 MB/s</pre> \n<p> <span style=\"font-size:14px;\"><strong><span style=\"color:red;\">点评：</span></strong>可以看到用 SSD 作为缓存的效果还是不错的。</span></p> \n<p><span style=\"font-size:14px;\"><strong>4、Network</strong></span></p> \n<p><span style=\"font-size:14px;\">下载速度：</span></p> \n<pre class=\"prettyprint lang-bsh\">[root@la ~]# wget http://cachefly.cachefly.net/100mb.test\n--2015-05-26 11:08:40--  http://cachefly.cachefly.net/100mb.test\nResolving cachefly.cachefly.net... 205.234.175.175\nConnecting to cachefly.cachefly.net|205.234.175.175|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 104857600 (100M) [application/octet-stream]\nSaving to: `100mb.test'\n\n100%[======================================&gt;] 104,857,600 6.02M/s   in 17s\n\n2015-05-26 11:08:56 (6.00 MB/s) - `100mb.test' saved [104857600/104857600]</pre> \n<p> <span style=\"font-size:14px;\">上传速度：</span></p> \n<pre class=\"prettyprint lang-bsh\">[root@v1 ~]# wget http://191.101.**.**/100mb.test\n--2015-05-26 11:22:25--  http://191.101.**.**/100mb.test\nConnecting to 191.101.**.**:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 104857600 (100M)\nSaving to: `100mb.test'\n\n100%[======================================&gt;] 104,857,600 5.57M/s   in 17s\n\n2015-05-26 11:22:43 (5.78 MB/s) - `100mb.test' saved [104857600/104857600]</pre> \n<p><span style=\"font-size:14px;\"><strong><span style=\"color:red;\">点评：</span></strong>测试上传速度时，我用的是洛杉矶的另一个 VPS 来下载的，可以看出网络确实是 <span style=\"font-family:Courier New;\">50Mbps</span> 的，上传和下载都一样。</span></p> \n<p><span style=\"font-size:14px;\"><strong>5、综合测试</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">[root@la ~]# wget http://freevps.us/downloads/bench.sh -O - -o /dev/null | bash\nCPU model :  Intel(R) Xeon(R) CPU E5-2640 v2 @ 2.00GHz\nNumber of cores : 2\nCPU frequency :  2000.070 MHz\nTotal amount of ram : 2048 MB\nTotal amount of swap : 1024 MB\nSystem uptime :   5 days, 14:31,       \nDownload speed from CacheFly: 5.98MB/s \nDownload speed from Coloat, Atlanta GA: 3.70MB/s \nDownload speed from Softlayer, Dallas, TX: 5.24MB/s \nDownload speed from Linode, Tokyo, JP: 5.74MB/s \nDownload speed from i3d.net, Rotterdam, NL: 3.51MB/s\nDownload speed from Leaseweb, Haarlem, NL: 5.97MB/s \nDownload speed from Softlayer, Singapore: 5.20MB/s \nDownload speed from Softlayer, Seattle, WA: 5.96MB/s \nDownload speed from Softlayer, San Jose, CA: 5.76MB/s \nDownload speed from Softlayer, Washington, DC: 4.86MB/s \nI/O speed :  662 MB/s</pre> \n<p><span style=\"font-size:14px;\"><strong>6、UnixBench</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">[root@la ~]# wget https://teddysun.com/wp-content/uploads/unixbench.sh\n[root@la ~]# chmod +x unixbench.sh\n[root@la ~]# ./unixbench.sh\n\n========================================================================\n   BYTE UNIX Benchmarks (Version 5.1.3)\n\n   System: teddysun.com: GNU/Linux\n   OS: GNU/Linux -- 2.6.32-042stab108.1 -- #1 SMP Thu Apr 23 19:17:11 MSK 2015\n   Machine: x86_64 (x86_64)\n   Language: en_US.utf8 (charmap=\"UTF-8\", collate=\"UTF-8\")\n   CPU 0: Intel(R) Xeon(R) CPU E5-2640 v2 @ 2.00GHz (4000.1 bogomips)\n          Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization\n   CPU 1: Intel(R) Xeon(R) CPU E5-2640 v2 @ 2.00GHz (4000.1 bogomips)\n          Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization\n   21:21:39 up 36 min,  1 user,  load average: 0.15, 0.03, 0.01; runlevel 3\n\n------------------------------------------------------------------------\nBenchmark Run: Wed May 20 2015 21:21:39 - 21:49:33\n2 CPUs in system; running 1 parallel copy of tests\n\nDhrystone 2 using register variables       22472043.9 lps   (10.0 s, 7 samples)\nDouble-Precision Whetstone                     2422.0 MWIPS (9.9 s, 7 samples)\nExecl Throughput                               2187.5 lps   (29.6 s, 2 samples)\nFile Copy 1024 bufsize 2000 maxblocks        382687.0 KBps  (30.0 s, 2 samples)\nFile Copy 256 bufsize 500 maxblocks          111918.4 KBps  (30.0 s, 2 samples)\nFile Copy 4096 bufsize 8000 maxblocks       1016263.9 KBps  (30.0 s, 2 samples)\nPipe Throughput                              873521.9 lps   (10.0 s, 7 samples)\nPipe-based Context Switching                 142805.9 lps   (10.0 s, 7 samples)\nProcess Creation                               6923.2 lps   (30.0 s, 2 samples)\nShell Scripts (1 concurrent)                   3546.6 lpm   (60.0 s, 2 samples)\nShell Scripts (8 concurrent)                    822.2 lpm   (59.8 s, 2 samples)\nSystem Call Overhead                        1338852.2 lps   (10.0 s, 7 samples)\n\nSystem Benchmarks Index Values               BASELINE       RESULT    INDEX\nDhrystone 2 using register variables         116700.0   22472043.9   1925.6\nDouble-Precision Whetstone                       55.0       2422.0    440.4\nExecl Throughput                                 43.0       2187.5    508.7\nFile Copy 1024 bufsize 2000 maxblocks          3960.0     382687.0    966.4\nFile Copy 256 bufsize 500 maxblocks            1655.0     111918.4    676.2\nFile Copy 4096 bufsize 8000 maxblocks          5800.0    1016263.9   1752.2\nPipe Throughput                               12440.0     873521.9    702.2\nPipe-based Context Switching                   4000.0     142805.9    357.0\nProcess Creation                                126.0       6923.2    549.5\nShell Scripts (1 concurrent)                     42.4       3546.6    836.5\nShell Scripts (8 concurrent)                      6.0        822.2   1370.3\nSystem Call Overhead                          15000.0    1338852.2    892.6\n                                                                   ========\nSystem Benchmarks Index Score                                         800.9\n\n------------------------------------------------------------------------\nBenchmark Run: Wed May 20 2015 21:49:33 - 22:17:29\n2 CPUs in system; running 2 parallel copies of tests\n\nDhrystone 2 using register variables       44781176.3 lps   (10.0 s, 7 samples)\nDouble-Precision Whetstone                     4836.1 MWIPS (9.9 s, 7 samples)\nExecl Throughput                               5545.7 lps   (29.7 s, 2 samples)\nFile Copy 1024 bufsize 2000 maxblocks        518848.0 KBps  (30.0 s, 2 samples)\nFile Copy 256 bufsize 500 maxblocks          138019.5 KBps  (30.0 s, 2 samples)\nFile Copy 4096 bufsize 8000 maxblocks       1560788.0 KBps  (30.0 s, 2 samples)\nPipe Throughput                             1713998.2 lps   (10.0 s, 7 samples)\nPipe-based Context Switching                 313428.3 lps   (10.0 s, 7 samples)\nProcess Creation                              12601.5 lps   (30.0 s, 2 samples)\nShell Scripts (1 concurrent)                   6381.3 lpm   (60.0 s, 2 samples)\nShell Scripts (8 concurrent)                    898.1 lpm   (60.0 s, 2 samples)\nSystem Call Overhead                        2163686.4 lps   (10.0 s, 7 samples)\n\nSystem Benchmarks Index Values               BASELINE       RESULT    INDEX\nDhrystone 2 using register variables         116700.0   44781176.3   3837.3\nDouble-Precision Whetstone                       55.0       4836.1    879.3\nExecl Throughput                                 43.0       5545.7   1289.7\nFile Copy 1024 bufsize 2000 maxblocks          3960.0     518848.0   1310.2\nFile Copy 256 bufsize 500 maxblocks            1655.0     138019.5    834.0\nFile Copy 4096 bufsize 8000 maxblocks          5800.0    1560788.0   2691.0\nPipe Throughput                               12440.0    1713998.2   1377.8\nPipe-based Context Switching                   4000.0     313428.3    783.6\nProcess Creation                                126.0      12601.5   1000.1\nShell Scripts (1 concurrent)                     42.4       6381.3   1505.0\nShell Scripts (8 concurrent)                      6.0        898.1   1496.8\nSystem Call Overhead                          15000.0    2163686.4   1442.5\n                                                                   ========\nSystem Benchmarks Index Score                                        1373.0</pre> \n<p><span style=\"font-size:14px;\"><strong>7、Ping</strong></span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2015/host1plus_ping.png\" title=\"host1plus ping\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\"><strong><span style=\"color:red;\">点评：</span></strong><span style=\"font-family:Courier New;\">traceroute</span> 后发现，中国电信是走 <strong><span style=\"font-family:Courier New;\">pccw</span></strong>，中国联通是走 <strong><span style=\"font-family:Courier New;\">ntt</span></strong>，所以总体上是对电信比较友好。</span></p> \n<p><span style=\"font-size:14px;\"><strong>8、支付方式</strong></span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2015/host1plus_payment.png\" title=\"host1plus payment\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\"><strong><span style=\"color:red;\">点评：</span></strong>支持支付宝付款，方便没有信用卡的人。</span></p> \n<p><span style=\"font-size:14px;color:red;\"><strong>小结：</strong></span><br /> <span style=\"font-size:14px;\">老牌主机商，经验丰富，购买 VPS 时可自由定制。</span><br /> <span style=\"font-size:14px;\">还有冷门国家的 VPS 可选，比如巴西和南非。</span><br /> <span style=\"font-size:14px;\">洛杉矶对于国内网络比较友好，适合做站。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/416.html\">又一家VPS：Host1Plus</a></p>","descriptionType":"html","publishedDate":"Tue, 26 May 2015 05:42:24 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2015/host1plus.png","linkMd5":"b58a887125f8273ee4b734af61b113b5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn23@2020_2/2020/08/25/00-30-53-491_a72d02d3afb2f4c2.webp","destWidth":646,"destHeight":220,"sourceBytes":14389,"destBytes":19266,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2015/host1plus.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn23@2020_2/2020/08/25/00-30-53-491_a72d02d3afb2f4c2.webp","https://teddysun.com/wp-content/uploads/2015/host1plus_vps_small.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn55@2020_3/2020/08/25/00-30-57-292_dbf3e75b4d06672b.webp","https://teddysun.com/wp-content/uploads/2015/host1plus_server.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn81@2020_2/2020/08/25/00-31-11-054_8c129a195536f830.webp","https://teddysun.com/wp-content/uploads/2015/host1plus_ping.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn87@2020_2/2020/08/25/00-31-00-319_1226b2998162c087.webp","https://teddysun.com/wp-content/uploads/2015/host1plus_payment.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn52@2020_6/2020/08/25/00-30-59-811_597e0e064ac910b4.webp"},"publishedOrCreatedDate":1598315426725},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"介绍几款 Docker 镜像","link":"https://teddysun.com/?p=536","description":"<p><a href=\"https://teddysun.com/536.html\"><img src=\"https://teddysun.com/wp-content/uploads/2018/docker.png\" title=\"介绍几款 Docker 镜像\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"><a href=\"https://www.docker.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Docker</a> 是一个开放源代码软件项目，让应用程序布署在软件容器下的工作可以自动化进行，借此在 Linux 操作系统上，提供一个额外的软件抽象层，以及操作系统层虚拟化的自动管理机制。</span><br /> <span style=\"font-size:14px;\">Docker 利用 Linux 核心中的资源分脱机制，例如 cgroups，以及 Linux 核心名字空间（name space），来创建独立的软件容器（containers）。这可以在单一 Linux 实体下运作，避免启动一个虚拟机造成的额外负担。</span><br /> <span style=\"font-size:14px;\">简单概括起来就是，Docker 是个容器，什么都能往里塞，你也可以理解为是一个轻量化的虚拟机。</span><br /> <span style=\"font-size:14px;\">使用 Docker 的好处就是对当前系统的环境没有破坏性，基本上一款镜像可以跑在任意包含了 Docker 的机器上，可以说是十分方便了。</span><br /> <span style=\"font-size:14px;\">本文主要介绍一下我在学习 Docker 的过程中制作的几款镜像，以及使用方法。</span> </p> \n<p> <span id=\"more-536\"></span> </p> \n<h3> <span style=\"color:red;\">安装并启动 Docker</span><br /> </h3> \n<p><span style=\"font-size:14px;\">操作系统内核大于等于 3.10 的都可以安装最新版 Docker，可以直接运行官方的安装脚本一键安装。</span><br /> <span style=\"font-size:14px;\">执行脚本方法如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">wget -qO- get.docker.com | bash </pre> \n<p><br /> <span style=\"font-size:14px;\">安装完成后，运行下面的命令，验证是否安装成功。</span></p> \n<pre class=\"prettyprint lang-bsh\">docker version </pre> \n<p><br /> <span style=\"font-size:14px;\">启动 Docker</span></p> \n<pre class=\"prettyprint lang-bsh\">systemctl start docker </pre> \n<p><br /> <span style=\"font-size:14px;\">查看 Docker 启动状态</span></p> \n<pre class=\"prettyprint lang-bsh\">systemctl status docker</pre> \n<p><br /> <span style=\"font-size:14px;\">允许 Docker 开机自启</span></p> \n<pre class=\"prettyprint lang-bsh\">systemctl enable docker </pre> \n<p></p> \n<h3> <span style=\"color:red;\">Shadowsocks-libev Docker Image</span><br /> </h3> \n<p><span style=\"font-size:14px;\">基于官方 alpine:latest 镜像制作，编译安装最新版 shadowsocks-libev，simple-obfs 以及 v2ray-plugin 插件。</span><br /> <span style=\"font-size:14px;\">该容器在启动时依赖于读取宿主机里的配置文件，因此在启动该镜像时配合不同的 config 文件，就能开启任意个 Docker，也就是所谓的多端口。</span><br /> <span style=\"font-size:14px;\">把配置文件放在宿主机里，是基于这样的考量：随时在宿主机里修改配置的端口，密码，加密方式等信息，然后只需重启容器，无需再次创建新的容器。</span></p> \n<p><span style=\"font-size:14px;color:red;\">支持的 Tags 及 Dockerfile</span></p> \n<p><span style=\"font-size:14px;\">3.3.3, latest, alpine <a href=\"https://github.com/teddysun/shadowsocks_install/blob/master/docker/shadowsocks-libev/Dockerfile\" target=\"_blank\" rel=\"noopener noreferrer\">(Dockerfile)</a></span></p> \n<p><span style=\"font-size:14px;color:red;\">拉取镜像</span><br /> <span style=\"font-size:14px;\"> </span></p> \n<pre class=\"prettyprint lang-bsh\">docker pull teddysun/shadowsocks-libev</pre> \n<p><br /> <span style=\"font-size:14px;color:red;\">创建 config 文件</span></p> \n<p><span style=\"font-size:14px;\">比如在目录 /etc/shadowsocks-libev 下创建 config.json，完整路径也就是 /etc/shadowsocks-libev/config.json</span><br /> <span style=\"font-size:14px;\">范例内容如下：</span></p> \n<pre class=\"prettyprint lang-xml\">{\n    \"server\":\"0.0.0.0\",\n    \"server_port\":9000,\n    \"password\":\"password0\",\n    \"timeout\":300,\n    \"method\":\"aes-256-gcm\",\n    \"fast_open\":true,\n    \"nameserver\":\"8.8.8.8\",\n    \"mode\":\"tcp_and_udp\"\n}</pre> \n<p><br /> <span style=\"font-size:14px;\">如果你想同时开启 simple-obfs，那么配置文件范例如下：</span></p> \n<pre class=\"prettyprint lang-xml\">{\n    \"server\":\"0.0.0.0\",\n    \"server_port\":9000,\n    \"password\":\"password0\",\n    \"timeout\":300,\n    \"method\":\"aes-256-gcm\",\n    \"fast_open\":true,\n    \"nameserver\":\"8.8.8.8\",\n    \"mode\":\"tcp_and_udp\",\n    \"plugin\":\"obfs-server\",\n    \"plugin_opts\":\"obfs=tls\"\n} </pre> \n<p><br /> <span style=\"font-size:14px;\">如果你想同时开启 v2ray-plugin，那么配置文件范例如下：</span></p> \n<pre class=\"prettyprint lang-xml\">{\n    \"server\":\"0.0.0.0\",\n    \"server_port\":9000,\n    \"password\":\"password0\",\n    \"timeout\":300,\n    \"method\":\"aes-256-gcm\",\n    \"fast_open\":true,\n    \"nameserver\":\"8.8.8.8\",\n    \"mode\":\"tcp_and_udp\",\n    \"plugin\":\"v2ray-plugin\",\n    \"plugin_opts\":\"server\"\n} </pre> \n<p><br /> <span style=\"font-size:14px;\">配置文件里面所有选项的含义，可以参考<a href=\"https://github.com/shadowsocks/shadowsocks-libev/blob/master/doc/shadowsocks-libev.asciidoc\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>。</span><br /> <span style=\"font-size:14px;\">关于 v2ray-plugin 的更多配置可以参考<a href=\"https://github.com/shadowsocks/v2ray-plugin#usage\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>。</span></p> \n<p><span style=\"font-size:14px;color:red;\">启动容器</span><br /> <span style=\"font-size:14px;\">在上面这个范例里，定义的端口是 9000，那么在启动容器时就需要将 9000 端口映射到宿主机的对外端口上。</span><br /> <span style=\"font-size:14px;\">启动命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">docker run -d -p 9000:9000 -p 9000:9000/udp --name ss-libev --restart=always -v /etc/shadowsocks-libev:/etc/shadowsocks-libev teddysun/shadowsocks-libev </pre> \n<p><br /> <span style=\"font-size:14px;\">docker run：开始运行一个容器。</span><br /> <span style=\"font-size:14px;\">-d 参数：容器以后台运行并输出容器 ID。</span><br /> <span style=\"font-size:14px;\">-p 参数：容器的 9000 端口映射到本机的 9000 端口。默认是映射 TCP，当需要映射 UDP 时，那就再追加一次 UDP 的映射。冒号后面是容器端口，冒号前面是宿主机端口，可以写成一致，也可以不一致。</span><br /> <span style=\"font-size:14px;\">–name 参数：给容器分配一个识别符，方便将来的启动，停止，删除等操作。</span><br /> <span style=\"font-size:14px;\">-v 参数：挂载卷(volume)，冒号后面是容器的路径，冒号前面是宿主机的路径，可以写成一致，也可以不一致。</span><br /> <span style=\"font-size:14px;\">teddysun/shadowsocks-libev：这是拉取回来的镜像路径。</span></p> \n<p><span style=\"font-size:14px;color:red;\">查看容器运行情况</span><br /> <span style=\"font-size:14px;\">利用如下命令可以查看所有已创建的 Docker 容器并显示容器的大小等信息：</span></p> \n<pre class=\"prettyprint lang-bsh\">docker ps -as </pre> \n<p><br /> <span style=\"font-size:14px;color:red;\">停止容器</span><br /> <span style=\"font-size:14px;\">利用如下命令可以停止正在运行中的容器：</span></p> \n<pre class=\"prettyprint lang-bsh\">docker stop $name</pre> \n<p><br /> <span style=\"font-size:14px;\">此处的 $name 就是在启动容器那一步定义的容器的识别符，比如范例演示的 ss-libev</span></p> \n<p><span style=\"font-size:14px;color:red;\">删除容器</span><br /> <span style=\"font-size:14px;\">容器停止后，可以利用如下命令删除容器：</span></p> \n<pre class=\"prettyprint lang-bsh\">docker rm $name</pre> \n<p><br /> <span style=\"font-size:14px;\">此处的 $name 就是在启动容器那一步定义的容器的识别符，比如范例的 ss-libev</span></p> \n<p><span style=\"font-size:14px;color:red;\">启动容器</span><br /> <span style=\"font-size:14px;\">利用如下命令可以启动已经停止的容器：</span></p> \n<pre class=\"prettyprint lang-bsh\">docker start $name</pre> \n<p><br /> <span style=\"font-size:14px;\">此处的 $name 就是在启动容器那一步定义的容器的识别符，比如范例的 ss-libev</span></p> \n<h3> <span style=\"color:red;\">ShadowsocksR Docker Image</span><br /> </h3> \n<p><span style=\"font-size:14px;\">基于 python:3.7-alpine 镜像制作，安装的是 Github 上目前<a href=\"https://github.com/shadowsocksrr/shadowsocksr\" target=\"_blank\" rel=\"noopener noreferrer\">最新的版本</a>。</span><br /> <span style=\"font-size:14px;\">该容器在启动时依赖于读取宿主机里的配置文件，因此在启动该镜像时配合不同的 config 文件，就能开启任意个 Docker ，也就是所谓的多端口。</span><br /> <span style=\"font-size:14px;\">把配置文件放在宿主机里，是基于这样的考量：随时在宿主机里修改配置的端口，密码，加密方式等信息，然后只需重启容器，无需再次创建新的容器。</span></p> \n<p><span style=\"font-size:14px;color:red;\">支持的 Tags 及 Dockerfile</span></p> \n<p><span style=\"font-size:14px;\">3.2.2, alpine, latest <a href=\"https://github.com/teddysun/shadowsocks_install/blob/master/docker/shadowsocks-r/Dockerfile\" target=\"_blank\" rel=\"noopener noreferrer\">(Dockerfile)</a></span></p> \n<p><span style=\"font-size:14px;color:red;\">拉取镜像</span><br /> <span style=\"font-size:14px;\"> </span></p> \n<pre class=\"prettyprint lang-bsh\">docker pull teddysun/shadowsocks-r</pre> \n<p><br /> <span style=\"font-size:14px;color:red;\">创建 config 文件</span></p> \n<p><span style=\"font-size:14px;\">比如在目录 /etc/shadowsocks-r 下创建 config.json，完整路径也就是 /etc/shadowsocks-r/config.json</span><br /> <span style=\"font-size:14px;\">范例内容如下：</span></p> \n<pre class=\"prettyprint lang-xml\">{\n    \"server\":\"0.0.0.0\",\n    \"server_ipv6\":\"::\",\n    \"server_port\":9000,\n    \"local_address\":\"127.0.0.1\",\n    \"local_port\":1080,\n    \"password\":\"password0\",\n    \"timeout\":120,\n    \"method\":\"aes-256-cfb\",\n    \"protocol\":\"origin\",\n    \"protocol_param\":\"\",\n    \"obfs\":\"plain\",\n    \"obfs_param\":\"\",\n    \"redirect\":\"\",\n    \"dns_ipv6\":false,\n    \"fast_open\":true,\n    \"workers\":1\n} </pre> \n<p><br /> <span style=\"font-size:14px;\">ShadowsocksR 协议插件文档的含义，可以参考<a href=\"https://github.com/shadowsocksr-rm/shadowsocks-rss/blob/master/ssr.md\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>。</span></p> \n<p><span style=\"font-size:14px;color:red;\">启动容器</span></p> \n<p><span style=\"font-size:14px;\">在上面这个范例里，定义的端口是 9000，那么在启动容器时就需要将 9000 端口映射到宿主机的对外端口上。</span><br /> <span style=\"font-size:14px;\">启动命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">docker run -d -p 9000:9000 -p 9000:9000/udp --name ssr --restart=always -v /etc/shadowsocks-r:/etc/shadowsocks-r teddysun/shadowsocks-r </pre> \n<p></p> \n<h3> <span style=\"color:red;\">L2TP/IPsec VPN Server Docker Image</span><br /> </h3> \n<p><span style=\"font-size:14px;\">本镜像支持 L2TP/IPsec PSK 和 IPSec Xauth PSK 两种连接方式。</span><br /> <span style=\"font-size:14px;\">基于 alpine:latest 镜像制作，使用了 alpine 自带的 libreswan-3.29 和 xl2tpd-1.3.15；</span><br /> <span style=\"font-size:14px;\">注意1：Android 版本小于或等于 7 时，建议选择 IPSec Xauth PSK (Cisco IPsec) 模式连接。如下图所示：</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2018/ipsec.jpg\" class=\"left\" style=\"width:640;height:585;\" /></p> \n<p><span style=\"font-size:14px;\">注意2：同一个 NAT 下多用户连接，请选择 IPSec Xauth PSK (Cisco IPsec) 模式连接。</span></p> \n<p><span style=\"font-size:14px;\">该镜像在启动之前，需事先定义环境变量文件 /etc/l2tp.env，其内容具体参考以下的说明。</span><br /> <span style=\"font-size:14px;\">同时，该镜像具备自主管理用户的特点，一个简单命令即可增删改查用户账号。</span></p> \n<p><span style=\"font-size:14px;color:red;\">支持的 Tags 及 Dockerfile</span></p> \n<p><span style=\"font-size:14px;\">latest, alpine <a href=\"https://github.com/teddysun/across/blob/master/docker/l2tp/Dockerfile\" target=\"_blank\" rel=\"noopener noreferrer\">(Dockerfile)</a></span></p> \n<p><span style=\"font-size:14px;color:red;\">拉取镜像</span><br /> <span style=\"font-size:14px;\"> </span></p> \n<pre class=\"prettyprint lang-bsh\">docker pull teddysun/l2tp</pre> \n<p><br /> <span style=\"font-size:14px;color:red;\">创建启动环境参数文件</span></p> \n<p><span style=\"font-size:14px;\">比如是 /etc/l2tp.env，该文件内的各个变量定义如下：</span></p> \n<pre class=\"prettyprint lang-xml\">VPN_IPSEC_PSK=teddysun.com\nVPN_USER=vpnuser\nVPN_PASSWORD=vpnpassword\nVPN_PUBLIC_IP=\nVPN_L2TP_NET=\nVPN_L2TP_LOCAL=\nVPN_L2TP_REMOTE=\nVPN_XAUTH_NET=\nVPN_XAUTH_REMOTE=\nVPN_DNS1=\nVPN_DNS2=\nVPN_SHA2_TRUNCBUG=\n</pre> \n<p><br /> <span style=\"font-size:14px;\">VPN_IPSEC_PSK：预共享密钥</span><br /> <span style=\"font-size:14px;\">VPN_USER：默认的登录用户名</span><br /> <span style=\"font-size:14px;\">VPN_PASSWORD：默认的登录用户密码</span><br /> <span style=\"font-size:14px;\">VPN_PUBLIC_IP：指定公网 IP 地址，当你的 VPS 有多个公网 IP 时，可能需要手动指定一下</span><br /> <span style=\"font-size:14px;\">VPN_L2TP_NET：内网 L2TP 网段范围，默认为 192.168.18.0/24，一般此处留空即可</span><br /> <span style=\"font-size:14px;\">VPN_L2TP_LOCAL：内网 L2TP 网关 IP，默认为 192.168.18.1，一般此处留空即可</span><br /> <span style=\"font-size:14px;\">VPN_L2TP_REMOTE：内网 L2TP 网段分配给连接的 IP 段，默认为 192.168.18.10-192.168.18.250，一般此处留空即可</span><br /> <span style=\"font-size:14px;\">VPN_XAUTH_NET：内网 XAUTH 网段范围，默认为 192.168.20.0/24，一般此处留空即可</span><br /> <span style=\"font-size:14px;\">VPN_XAUTH_REMOTE：内网 XAUTH 网段分配给连接的 IP 段，默认为 192.168.20.10-192.168.20.250，一般此处留空即可</span><br /> <span style=\"font-size:14px;\">VPN_DNS1：默认 DNS 服务器，8.8.8.8，一般此处留空即可</span><br /> <span style=\"font-size:14px;\">VPN_DNS2：默认 DNS 服务器，8.8.4.4，一般此处留空即可</span><br /> <span style=\"font-size:14px;\"><b>Android 6 和 7 用户：</b>如果你遇到连接问题，请尝试在 /etc/ipsec.conf 中设置 sha2-truncbug=yes（默认为 no），你可以在 /etc/l2tp.env 文件中添加 VPN_SHA2_TRUNCBUG=yes，然后重新创建 Docker 容器。</span><br /> <br /> <span style=\"font-size:14px;color:red;\">启动容器</span></p> \n<p><span style=\"font-size:14px;\">在这个范例里，需要将 500 和 4500 端口的 UDP 映射到宿主机的对外端口上。</span></p> \n<p><span style=\"font-size:14px;\">启动命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">docker run -d --privileged -p 500:500/udp -p 4500:4500/udp --name l2tp --restart=always --env-file /etc/l2tp.env -v /lib/modules:/lib/modules teddysun/l2tp</pre> \n<p><br /> <span style=\"font-size:14px;color:red;\">查看启动日志</span></p> \n<pre class=\"prettyprint lang-bsh\">docker logs l2tp</pre> \n<p> <span style=\"font-size:14px;\">此处的 l2tp，是指在启动时定义的容器识别符，–name 参数后的名字。</span><br /> <span style=\"font-size:14px;\">输出的日志参考如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">L2TP/IPsec VPN Server with the Username and Password is below: \nServer IP: Your Server public IP\nIPSec PSK: IPSec PSK (pre-shared key)\nUsername : VPN username\nPassword : VPN password \nRedirecting to: /etc/init.d/ipsec start\nStarting pluto IKE daemon for IPsec: Initializing NSS database \nxl2tpd[1]: Not looking for kernel SAref support.\nxl2tpd[1]: Using l2tp kernel support.\nxl2tpd[1]: xl2tpd version xl2tpd-1.3.15 started on 1d20eaecd9f2 PID:1\nxl2tpd[1]: Written by Mark Spencer, Copyright (C) 1998, Adtran, Inc.\nxl2tpd[1]: Forked by Scott Balmos and David Stipp, (C) 2001\nxl2tpd[1]: Inherited by Jeff McAdams, (C) 2002\nxl2tpd[1]: Forked again by Xelerance (www.xelerance.com) (C) 2006-2016\nxl2tpd[1]: Listening on IP address 0.0.0.0, port 1701 </pre> \n<p><br /> <span style=\"font-size:14px;\">当然，你也可以查看一下 ipsec status 命令的输出，命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">docker exec -it l2tp ipsec status</pre> \n<p> <span style=\"font-size:14px;\">此处的 l2tp，是指在启动时定义的容器识别符，–name 参数后的名字。</span></p> \n<p><span style=\"font-size:14px;color:red;\">管理 VPN 用户</span></p> \n<p><span style=\"font-size:14px;\">列出全部用户及其密码</span></p> \n<pre class=\"prettyprint lang-bsh\">docker exec -it l2tp l2tpctl -l</pre> \n<p><br /> <span style=\"font-size:14px;\">新增一个用户</span></p> \n<pre class=\"prettyprint lang-bsh\">docker exec -it l2tp l2tpctl -a</pre> \n<p><br /> <span style=\"font-size:14px;\">删除一个用户</span></p> \n<pre class=\"prettyprint lang-bsh\">docker exec -it l2tp l2tpctl -d</pre> \n<p><br /> <span style=\"font-size:14px;\">修改一个用户的密码</span></p> \n<pre class=\"prettyprint lang-bsh\">docker exec -it l2tp l2tpctl -m</pre> \n<p><br /> <span style=\"font-size:14px;\">打印容器里 libreswan 和 xl2tpd 的版本信息</span></p> \n<pre class=\"prettyprint lang-bsh\">docker exec -it l2tp l2tpctl -v </pre> \n<p><br /> <span style=\"font-size:14px;\">打印控制脚本 l2tpctl 的帮助信息</span></p> \n<pre class=\"prettyprint lang-bsh\">docker exec -it l2tp l2tpctl -h </pre> \n<p><br /> <span style=\"font-size:14px;\">需要注意的是，容器一旦被删除重建，或者停止后重新启动，都会导致 VPN 用户信息的丢失，需要通过以上的命令再次创建。</span></p> \n<p><span style=\"font-size:14px;color:red;\">Windows 10 下连接 L2TP VPN</span></p> \n<p><span style=\"font-size:14px;\">首先，参考下图的设置，将 VPN 的连接信息稍微修改一下。</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2018/l2tp_conn1.png\" class=\"left\" /></p> \n<p><span style=\"font-size:14px;\">修改 VPN 属性，如图所示。</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2018/l2tp_conn2.png\" class=\"left\" /></p> \n<p><span style=\"font-size:14px;\">一般我们都是连接到家用路由器上的，也就是说，我们的网络一般都是处于 NAT 状态下，因此还需要改一下注册表，根据<a href=\"https://support.microsoft.com/en-us/help/926179/how-to-configure-an-l2tp-ipsec-server-behind-a-nat-t-device-in-windows\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>，修改注册表的信息，修改完成后，重启 Windows 即可。</span></p> \n<p><span style=\"font-size:14px;color:blue;\">参考链接</span></p> \n<p><span style=\"font-size:14px;\"><a href=\"https://hub.docker.com/r/teddysun/shadowsocks-libev/\" target=\"_blank\" rel=\"noopener noreferrer\">https://hub.docker.com/r/teddysun/shadowsocks-libev/</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://hub.docker.com/r/teddysun/shadowsocks-r/\" target=\"_blank\" rel=\"noopener noreferrer\">https://hub.docker.com/r/teddysun/shadowsocks-r/</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://hub.docker.com/r/teddysun/l2tp/\" target=\"_blank\" rel=\"noopener noreferrer\">https://hub.docker.com/r/teddysun/l2tp/</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/536.html\">介绍几款 Docker 镜像</a></p>","descriptionType":"html","publishedDate":"Sun, 05 Aug 2018 11:07:02 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2018/docker.png","linkMd5":"5b7e40a642a0e26b50fdc4f3e9a6f3aa","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn43@2020_4/2020/08/25/00-30-53-616_609ae3d1e5be8850.webp","destWidth":773,"destHeight":537,"sourceBytes":37884,"destBytes":21998,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2018/docker.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn43@2020_4/2020/08/25/00-30-53-616_609ae3d1e5be8850.webp","https://teddysun.com/wp-content/uploads/2018/ipsec.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn28@2020_2/2020/08/25/00-30-59-458_5766d3a9eb93c45b.webp","https://teddysun.com/wp-content/uploads/2018/l2tp_conn1.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn8@2020_4/2020/08/25/00-30-57-063_98ca68bcf9c827af.webp","https://teddysun.com/wp-content/uploads/2018/l2tp_conn2.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn10@2020_4/2020/08/25/00-30-56-904_eb24a7c38d412220.webp"},"publishedOrCreatedDate":1598315426754},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Windows和Linux下Whois命令的安装和使用","link":"https://teddysun.com/?p=415","description":"<p><a href=\"https://teddysun.com/415.html\"><img src=\"https://teddysun.com/wp-content/uploads/2015/whois.png\" title=\"Windows和Linux下Whois命令的安装和使用\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">Whois，通常来说，就是一个用于查询域名是否已经被注册，以及注册域名的详细信息（如域名所有人、域名注册商、域名注册日期和过期日期等）的工具。当然，现在已经有各种网页版查看 whois 信息的工具，但是很多时候网页查询有附加条件，比如输入验证码或者不支持的后缀等，比较低效。因此我还是喜欢在命令行下使用 whois 命令来直接获得域名的 whois 信息。</span><br /> <span style=\"font-size:14px;\">本文将分别介绍在 Windows 下以及在 Linux 下使用 whois 命令行。Windows 以 Windows 7 x64 为例，Linux 以 CentOS 6.6 x64 为例。</span></p> \n<p> <span id=\"more-415\"></span> </p> \n<p> <span style=\"font-size:16px;\"><strong>一、Windows 下的 whois 命令行</strong></span></p> \n<p><span style=\"font-size:14px;\"><strong>1、Windows 下 whois 命令行的安装</strong></span><br /> <span style=\"font-size:14px;\">默认 Windows 下是没有 whois 这个命令的（废话），因此需要安装 whoiscl 这个小工具。</span><br /> <span style=\"font-size:14px;\">官方网站：<span style=\"font-family:Courier New;\"><a href=\"http://nirsoft.net/utils/whoiscl.html\" target=\"_blank\">http://nirsoft.net/utils/whoiscl.html</a></span></span><br /> <span style=\"font-size:14px;\">这个工具默认支持顶级通用域名以及国别域名，但目前还有很多奇葩的新域名后缀则不支持，不过没关系，这个可以通过修改配置文件来支持的。</span></p> \n<p><span style=\"font-size:14px;\">下载链接：<span style=\"font-family:Courier New;\"><a href=\"http://nirsoft.net/utils/whoiscl.zip\" target=\"_blank\">http://nirsoft.net/utils/whoiscl.zip</a></span></span></p> \n<p><span style=\"font-size:14px;\">下载解压后，会看到 WhoisCL.exe 这个文件，改名为 whois.exe 并复制到 C:\\Windows\\System32\\ 目录下即可。</span><br /> <span style=\"font-size:14px;\">然后打开 cmd，输入 whois 回车后，就能看到基本用法和版本号。如下图所示：</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2015/whois_1.png\" title=\"whois_1\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\"><strong>2、Windows 下 whois 命令行的配置文件</strong></span><br /> <span style=\"font-size:14px;\">好吧，其实并没有所谓的配置文件，其实就是追加的 whois servers 列表而已。使用 whois 命令的时候，不同的后缀会向不同的 whois 服务器查询，后缀的支持或者不支持，全在于 whois servers 里有没有此 whois 服务器而已。</span><br /> <span style=\"font-size:14px;\">我们知道，这个工具默认支持顶级通用域名以及国别域名，如果要查询其他后缀的域名，在需要在 whois.exe 同目录下（也就是 C:\\Windows\\System32\\ 目录）新建一个名为 whois-servers.txt 的文件。</span><br /> <span style=\"font-size:14px;\">按照一个后缀对应一个 whois server 的格式一行添加一个（中间要有个空格）。比如：</span></p> \n<pre class=\"prettyprint lang-html\">android domain-registry-whois.l.google.com\ngoogle domain-registry-whois.l.google.com\nxyz whois.nic.xyz\ntokyo whois.nic.tokyo</pre> \n<p> <span style=\"font-size:14px;\">然后，再查询那些原本不支持的域名后缀，就可以了，比如这里查询 xyz.xyz 如下图所示：</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2015/whois_2.png\" title=\"whois_2\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\"><strong>3、Windows 下 whois 命令行使用代理查询</strong></span><br /> <span style=\"font-size:14px;\">由于众所周知的原因，即便是在 whois-servers.txt 文件中添加了 whois server ，但某些后缀还是查询不到 whois 信息的。比如 .chrome 后缀。</span><br /> <span style=\"font-size:14px;\">好在 whoiscl 这个工具支持代理，socks4 和 socks5 都支持。那么，这时候你想到了什么呢？没错，就是 Shadowsocks 。</span><br /> <span style=\"font-size:14px;\">比如我现在想查询 nic.chrome，命令如下：</span><br /> <span style=\"font-size:14px;color:blue;font-family:'Courier New';\">whois -socks5 127.0.0.1:1080 nic.chrome</span><br /> <span style=\"font-size:14px;\">查询结果如下图所示：</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2015/whois_3.png\" title=\"whois_3\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:16px;\"><strong>二、Linux 下的 whois 命令行</strong></span></p> \n<p><span style=\"font-size:14px;\"><strong>1、Linux 下 whois 命令行的安装</strong></span><br /> <span style=\"font-size:14px;\">CentOS 下安装命令如下：</span><br /> <span style=\"font-size:14px;color:blue;font-family:'Courier New';\">yum install -y jwhois</span></p> \n<p><span style=\"font-size:14px;\">Debian/Ubuntu 下安装命令如下：</span><br /> <span style=\"font-size:14px;color:blue;font-family:'Courier New';\">apt-get install -y whois</span></p> \n<p><span style=\"font-size:14px;\"><strong>2、Linux 下 whois 命令行的配置文件</strong></span><br /> <span style=\"font-size:14px;\">这里以 CentOS 6.6 x64 为例，默认的配置文件是 /etc/jwhois.conf ，默认支持顶级通用域名以及国别域名，如果要查询其他后缀的域名，则要修改此配置文件。</span><br /> <span style=\"font-size:14px;\">我们以作者 <a href=\"https://github.com/jonasob/jwhois\" target=\"_blank\">Github 页面</a>的最新配置来替换掉该配置文件。命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">cp /etc/jwhois.conf /etc/jwhois-bk.conf\nwget --no-check-certificate https://raw.githubusercontent.com/jonasob/jwhois/master/example/jwhois.conf -O /etc/jwhois.conf</pre> \n<p> <span style=\"font-size:14px;\">替换完成后，我们来查询一下试试看。比如查询 com.google，如下图所示：</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2015/whois_4.png\" title=\"whois_4\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\">当然，这个最新版的配置文件所支持的域名后缀也是不全的。比如 .tokyo 后缀目前就不支持。你可以手动去改一下这个配置文件 /etc/jwhois.conf，按照既有的格式添加一条记录。</span></p> \n<p><span style=\"font-size:14px;\"><strong>3、还有哪些域名后缀？</strong></span><br /> <span style=\"font-size:14px;\">2014 年开始，各种域名后缀如雨后春笋，whois 工具并不总是能及时更新，因此我们需要查询一下到底有哪些域名后缀？</span><br /> <span style=\"font-size:14px;\">IANA 官网的 Root Zone Database，还在不断更新中……</span><br /> <span style=\"font-size:14px;\">围观链接：<span style=\"font-family:Courier New;\"><a href=\"https://www.iana.org/domains/root/db\" target=\"_blank\">https://www.iana.org/domains/root/db</a></span></span></p> \n<p><span style=\"font-size:14px;color:red;\"><strong>写在后面：</strong></span><br /> <span style=\"font-size:14px;\">whois 和 dig 一样，是非常有用的小工具，也是我经常用到的。</span><br /> <span style=\"font-size:14px;\">随着域名后缀越来越多，可供选择的也越来越多。你可以使用这个工具，来查询注册自己喜欢的域名后缀。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/415.html\">Windows和Linux下Whois命令的安装和使用</a></p>","descriptionType":"html","publishedDate":"Mon, 25 May 2015 07:22:31 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2015/whois.png","linkMd5":"e50c42f9e50b94a1e0ba3a16272d7517","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn64@2020_4/2020/08/25/00-30-51-897_35c927f681d03e34.webp","destWidth":600,"destHeight":400,"sourceBytes":36220,"destBytes":12280,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2015/whois.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn64@2020_4/2020/08/25/00-30-51-897_35c927f681d03e34.webp","https://teddysun.com/wp-content/uploads/2015/whois_1.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn40@2020_3/2020/08/25/00-30-57-567_214505d2714b6ca5.webp","https://teddysun.com/wp-content/uploads/2015/whois_2.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn96@2020_4/2020/08/25/00-30-57-517_3dd3428e6e727a95.webp","https://teddysun.com/wp-content/uploads/2015/whois_3.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn16@2020_6/2020/08/25/00-30-57-263_22cb2a441bff2bb0.webp","https://teddysun.com/wp-content/uploads/2015/whois_4.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn84@2020_4/2020/08/25/00-30-57-274_cb3388cfb853c032.webp"},"publishedOrCreatedDate":1598315426726},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"又一家VPS：DigitalOcean","link":"https://teddysun.com/?p=139","description":"<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　都在说<a href=\"http://goo.gl/lrT5QI\" target=\"_blank\">DigitalOcean</a>性价比最高，最低一款配置的价钱仅$5每月，配置是512MB内存，20GB的<span style=\"color:red;\"><strong>SSD</strong></span>硬盘（此处是亮点），1TB流量。这样的配置简直接近完美。但是我们要知道一个定理，那就是他们是商家，意味着是要赚钱的。看起来不错的样子，实际情况是如何的呢？</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_1.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_1.png\" alt=\"DigitalOcean\" title=\"DigitalOcean price\" width=\"560\" height=\"315\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p> <span id=\"more-139\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　他们家目前有美国纽约和荷兰阿姆斯特丹节点(node)，本次测试的VPS创建在纽约节点。创建VPS（droplet）一般是在60秒内自动完成，可选系统包括流行的Linux发行版Fedora、Ubuntu、CentOS、Debian。在折腾的过程中还发现一个好处就是可以自助更换节点，比如我一开始创建了一个纽约的VPS，ping值过大网络速度不敢恭维，于是Destroy了，重新创建了一个阿姆斯特丹的，发现那更悲催。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_5.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_5.png\" alt=\"DigitalOcean\" title=\"DigitalOcean Destroy\" width=\"560\" height=\"315\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　身在杯具的中国，网速当然是我要评测的重点，没有之一。根据下图可以看到，全线飘红，基本上都是在<span style=\"color:red;\"><strong>200ms以上</strong></span>。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_2.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_2.png\" alt=\"DigitalOcean\" title=\"DigitalOcean network\" width=\"560\" height=\"315\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　他们家是先付款后创建，根据你创建的套餐不同按小时扣费。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_3.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_3.png\" alt=\"DigitalOcean\" title=\"DigitalOcean creat\" width=\"560\" height=\"315\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　原本打算跑几个脚本来仔细测试一下，但看来是有点力不从心了。因为悲催的网络，putty连接无响应和中断，winscp也无法一直顺利连接。于是评测基本上也就告一段落了。最后，不死心的我给他们发了一个ticket，希望他们能增加新的节点，他们回复得很快。说正在加里福利亚部署，以改善亚洲客户的性能。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_4.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_4.png\" alt=\"DigitalOcean\" title=\"DigitalOcean ticket\" width=\"560\" height=\"315\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"color:#003399;\">总结：总体性价比不错，但目前不太适合国人购买。因为线路悲催才是最大的悲催。</span></span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';color:red;\">　　更新（2013年4月24日）：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';color:red;\">　　他们家的新节点San Francisco已经上线了，地理位置位于美国西海岸的旧金山，到中国的速度嗖嗖的。好吧，5美刀并没有打水漂，因为我在获知新节点上线后，已经开通了，初步试用下来感觉还不错。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/139.html\">又一家VPS：DigitalOcean</a></p>","descriptionType":"html","publishedDate":"Sat, 23 Mar 2013 08:04:17 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_1.png","linkMd5":"84e3eba0ae84d629d9a777a2a0d465bf","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn48@2020_6/2020/08/25/00-30-53-087_278e994b8cd1ad98.webp","destWidth":1083,"destHeight":653,"sourceBytes":68714,"destBytes":60970,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_1.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn48@2020_6/2020/08/25/00-30-53-087_278e994b8cd1ad98.webp","https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_5.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn89@2020_6/2020/08/25/00-31-01-196_bc1b3efcee699c12.webp","https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_2.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn25@2020_5/2020/08/25/00-30-57-357_dd8a57a336e17e37.webp","https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_3.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn92@2020_2/2020/08/25/00-30-57-157_928ce06feb8af294.webp","https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_4.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn70@2020_5/2020/08/25/00-31-01-302_a9419d1b0626213d.webp"},"publishedOrCreatedDate":1598315426748},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"使用SQL Server 2005 Express Edition","link":"https://teddysun.com/?p=138","description":"<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　最近在改版一个客户的网站，是ASP.NET+SQL Server 2005的环境。为了在本地测试，我搭建了一个虚拟机，安装好Windows Server 2003 R2 with SP2后，一系列的步骤按部就班，打补丁，安装IIS6.0、ASP.NET2.0等。将所有代码打包下载到虚拟机中，配置好IIS站点，开始恢复数据库。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　因为是虚拟机，所以硬盘配额给的不多，如果再安装SQL Server 2005 Enterprise Edition的话空间是吃不消的。于是打算安装Express Edition版。网上找了一下，Express Edition版的服务器端和客户端，2个文件加起来一共才85M大小，实际的安装也只需很少的时间。下面的过程是介绍如何安装及恢复数据库。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　Microsoft SQL Server 2005 Express Edition是免费、易用的轻量版 SQL Server 2005，具有快速且易于掌握的特点，可用于快速开发和部署动态数据驱动的应用程序。SQL Server Express 提供强大而可靠的数据管理工具，它功能丰富，能够保护数据并提高性能。它适用于嵌入式应用程序客户端、轻型 Web 应用程序以及本地数据存储区。SQL Server Express 具有易于部署以及可以快速设计原型的特点，您可以无偿获取并可以随应用程序免费再分发。如果需要更多的高级数据库功能，可将 SQL Server Express 无缝升级到更复杂的 SQL Server 版本。</span></p> \n<p> <span id=\"more-138\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　Microsoft SQL Server 2005 Express Edition 官方简体中文版下载地址：<a href=\"http://download.microsoft.com/download/C/E/6/CE626F95-EBD3-4AB8-AA35-C1BFAF98B7D5/SQLEXPR32_CHS.EXE\" target=\"_blank\">http://download.microsoft.com/download/C/E/6/CE626F95-EBD3-4AB8-AA35-C1BFAF98B7D5/SQLEXPR32_CHS.EXE</a></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　还有一个图形化客户端管理工具：Microsoft SQL Server Management Studio Express的下载地址：<a href=\"http://download.microsoft.com/download/5/4/F/54F476B4-2348-4D4A-B705-0C8C9AB2A14A/SQLServer2005_SSMSEE.msi\" target=\"_blank\">http://download.microsoft.com/download/5/4/F/54F476B4-2348-4D4A-B705-0C8C9AB2A14A/SQLServer2005_SSMSEE.msi</a></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　依次下载安装完毕后。用Microsoft SQL Server Management Studio Express登录到本机实例（默认是SQLEXPRESS），恢复导入的bak文件即可。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"color:red;\"><strong>后记：</strong></span>在本地学习SQL的话安装SQL Server 2005 Express Edition就已经绰绰有余了。当初刚接触学习数据库就是用的SQL Server 2005。我相信有很多人会跟我一样，在选择软件版本的时候，尤其是使用微软的产品，必选最高级的版本。大概是一种这样的心态吧，反正是用盗版，不如就盗版卖最贵的那款。而对于很多软件，也往往根本用不到那么多的功能。微软的软件一般都功能过剩（这样安装包就会超大），用得久了，也无所谓了吧。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/138.html\">使用SQL Server 2005 Express Edition</a></p>","descriptionType":"html","publishedDate":"Fri, 22 Mar 2013 13:23:25 +0000","feedId":9594,"bgimg":"","linkMd5":"5210fb6e3e96c1c6b48bdc0c54b0872c","bgimgJsdelivr":"","metaImg":"","author":"秋水逸冰","publishedOrCreatedDate":1598315426748},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"国内外一线网盘大盘点","link":"https://teddysun.com/?p=258","description":"<p><a href=\"https://teddysun.com/258.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/08/wangpan.jpg\" alt=\"网盘\" title=\"国内外一线网盘大盘点\" class=\"aligncenter\" style=\"height:auto;width:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　昨天的网盘容量大战，让网民看着很欢乐有木有。百度和360对着干，其实是便宜了广大草根用户。从早年的1G邮箱开始，就有人开发软件分割附件存储到邮箱作为网盘。由此可见，网盘的用户需求巨大。时至今日，硬盘容量发展起来了，可带宽速度实在是不敢恭维。</span><br /> <span style=\"font-size:14px;\">　　云概念火起来后，那些提供网盘服务的统统改名叫云了。早年我是邮箱控，各种邮箱后缀想着法子注册了个遍。如今，网盘也一样，注册又不花钱是不是。下面是我用过的国内外网盘大盘点，不评测，只提供链接，有需要的自己点击网址去注册。</span></p> \n<p> <span id=\"more-258\"></span> </p> \n<p> <span style=\"font-size:14px;\">1、百度盘</span><br /> <span style=\"font-size:14px;\"><a href=\"http://pan.baidu.com\" target=\"_blank\">http://pan.baidu.com</a></span><br /> <span style=\"font-size:14px;\">百度云1T活动页面</span><br /> <span style=\"font-size:14px;\"><a href=\"http://yun.baidu.com/1t\" target=\"_blank\">http://yun.baidu.com/1t</a></span></p> \n<p><span style=\"font-size:14px;\">2、360云盘</span><br /> <span style=\"font-size:14px;\"><a href=\"http://yunpan.360.cn\" target=\"_blank\">http://yunpan.360.cn</a></span><br /> <span style=\"font-size:14px;\">360云盘1T活动页面</span><br /> <span style=\"font-size:14px;\"><a href=\"http://huodong.yunpan.360.cn/na360g\" target=\"_blank\">http://huodong.yunpan.360.cn/na360g</a></span></p> \n<p><span style=\"font-size:14px;\">3、金山快盘</span><br /> <span style=\"font-size:14px;\"><a href=\"http://www.kuaipan.cn\" target=\"_blank\">http://www.kuaipan.cn</a></span></p> \n<p><span style=\"font-size:14px;\">4、华为网盘</span><br /> <span style=\"font-size:14px;\"><a href=\"http://www.dbank.com\" target=\"_blank\">http://www.dbank.com</a></span></p> \n<p><span style=\"font-size:14px;\">5、酷盘</span><br /> <span style=\"font-size:14px;\"><a href=\"http://www.kanbox.com\" target=\"_blank\">http://www.kanbox.com</a></span></p> \n<p><span style=\"font-size:14px;\">6、115网盘</span><br /> <span style=\"font-size:14px;\"><a href=\"http://www.115.com\" target=\"_blank\">http://www.115.com</a></span></p> \n<p><span style=\"font-size:14px;\">7、腾讯微云</span><br /> <span style=\"font-size:14px;\"><a href=\"http://www.weiyun.com\" target=\"_blank\">http://www.weiyun.com</a></span><br /> <span style=\"font-size:14px;\">腾讯微云10T活动页面（2013/08/28）</span><br /> <span style=\"font-size:14px;\"><a href=\"http://www.weiyun.com/act/10t.html\" target=\"_blank\">http://www.weiyun.com/act/10t.html</a></span></p> \n<p><span style=\"font-size:14px;\">8、新浪微盘</span><br /> <span style=\"font-size:14px;\"><a href=\"http://vdisk.weibo.com\" target=\"_blank\">http://vdisk.weibo.com</a></span></p> \n<p><span style=\"font-size:14px;\">9、云诺</span><br /> <span style=\"font-size:14px;\"><a href=\"https://www.yunio.com\" target=\"_blank\">https://www.yunio.com</a></span></p> \n<p><span style=\"font-size:14px;\">10、京东云盘</span><br /> <span style=\"font-size:14px;\"><a href=\"http://jbox.jcloud.com\" target=\"_blank\">http://jbox.jcloud.com</a></span></p> \n<p><span style=\"font-size:14px;\">下面是国外的一线网盘提供商</span></p> \n<p><span style=\"font-size:14px;\">1、Dropbox</span><br /> <span style=\"font-size:14px;\"><a href=\"https://www.dropbox.com\" target=\"_blank\">https://www.dropbox.com</a></span></p> \n<p><span style=\"font-size:14px;\">2、Google Drive</span><br /> <span style=\"font-size:14px;\"><a href=\"https://drive.google.com\" target=\"_blank\">https://drive.google.com</a></span></p> \n<p><span style=\"font-size:14px;\">3、Microsoft SkyDrive</span><br /> <span style=\"font-size:14px;\"><a href=\"https://skydrive.live.com\" target=\"_blank\">https://skydrive.live.com</a></span></p> \n<p><span style=\"font-size:14px;\">4、Box.com</span><br /> <span style=\"font-size:14px;\"><a href=\"https://www.box.com\" target=\"_blank\">https://www.box.com</a></span></p> \n<p><span style=\"font-size:14px;\">5、Copy.com</span><br /> <span style=\"font-size:14px;\"><a href=\"https://www.copy.com\" target=\"_blank\">https://www.copy.com</a></span></p> \n<p><span style=\"font-size:14px;\">6、Mega</span><br /> <span style=\"font-size:14px;\"><a href=\"https://mega.co.nz\" target=\"_blank\">https://mega.co.nz</a></span></p> \n<p><span style=\"font-size:14px;\">7、Yandex Disk</span><br /> <span style=\"font-size:14px;\"><a href=\"http://disk.yandex.com\" target=\"_blank\">http://disk.yandex.com</a></span></p> \n<p><span style=\"font-size:14px;\">8、Shared</span><br /> <span style=\"font-size:14px;\"><a href=\"https://shared.com\" target=\"_blank\">https://shared.com</a></span></p> \n<p><span style=\"font-size:14px;\">9、Amazon Cloud Drive&nbsp;</span><br /> <span style=\"font-size:14px;\"><a href=\"http://www.amazon.com/clouddrive\" target=\"_blank\">http://www.amazon.com/clouddrive</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/258.html\">国内外一线网盘大盘点</a></p>","descriptionType":"html","publishedDate":"Fri, 23 Aug 2013 03:49:05 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/08/wangpan.jpg","linkMd5":"7050e3db2a9f9db7d2f268eaf2d8a4c9","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn42@2020_6/2020/08/25/00-30-51-848_e004db29b9154d22.webp","destWidth":590,"destHeight":320,"sourceBytes":68908,"destBytes":8534,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/08/wangpan.jpg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn42@2020_6/2020/08/25/00-30-51-848_e004db29b9154d22.webp"},"publishedOrCreatedDate":1598315426740},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"又一家VPS：Locvps","link":"https://teddysun.com/?p=257","description":"<p><a href=\"https://teddysun.com/257.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/08/locvps.jpg\" alt=\"Locvps\" title=\"又一家VPS：Locvps\" class=\"aligncenter\" style=\"height:auto;width:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　看到邝总的拉斯维加斯母鸡上线了，第一时间入手了一台512MB内存的。本人的这个小站就放在他家的MC机房的服务器上。在经过半年来的使用体验后感觉不错，属于国人良心IDC。我也可喜的看到，Locvps一直在进步，目前甚至还启用了400电话做售后，规模也在不断扩大。目前我所测试的一款是基于Xen架构的512MB的VPS月付￥39.3，整体性价比非常优越（当然是在使用了优惠码40off之后）。</span><br /> <span style=\"font-size:14px;\"> 　　目前共有6处数据中心可供选择，基于销售主体都是国人用户，当然无可争议的选择了美国西海岸附近的数据中心。一律采用Xen虚拟技术，国产IDC System控制面板。</span></p> \n<p> <span id=\"more-257\"></span> </p> \n<p> <span style=\"font-size:14px;\"> 这6处数据中心如下：</span><br /> <span style=\"font-size:14px;\"> 拉斯维加斯、洛杉矶MC、洛杉矶PR、圣何塞、丹佛、香港</span></p> \n<p><span style=\"font-size:14px;\">下面是目前评测的512MB内存套餐的简要测评。</span><br /> <span style=\"font-size:14px;\"> 配置：</span></p> \n<pre class=\"prettyprint\">512MB RAM\n1024MB vSwap\n2 vCPU Core\n30GB Raid 10 Diskspace + BBU\n500GB Bandwidth\n100MB Port\n1 IPv4 address\nXenServer\nIDC System</pre> \n<p> <span style=\"font-size:14px;\">注意：VPS开通后，默认挂载10G硬盘（第一磁盘），剩下的容量（第二磁盘）就需要通过手动挂载才能扩充剩余的容量。具体挂载教程参照</span><a href=\"http://www.kwx.gd/CentOSApp/Xen-Centos6-Mounted-HardDrive.html\" target=\"_blank\"><span style=\"font-size:14px;\">这里</span></a><span style=\"font-size:14px;\">。</span></p> \n<p><span style=\"font-size:14px;\"><b>1、ping测试，截图如下：</b></span><br /> <img src=\"https://teddysun.com/wp-content/uploads/2013/08/locvps_lv_ping.png\" alt=\"Locvps LV Ping\" title=\"又一家VPS：Locvps\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\"><b>2、CPU信息</b></span></p> \n<pre class=\"prettyprint\">[root@MyCloudServer ~]# cat /proc/cpuinfo\nprocessor       : 0\nvendor_id       : GenuineIntel\ncpu family      : 6\nmodel           : 58\nmodel name      : Intel(R) Xeon(R) CPU E3-1270 V2 @ 3.50GHz\nstepping        : 9\ncpu MHz         : 3500.126\ncache size      : 8192 KB\nfdiv_bug        : no\nhlt_bug         : no\nf00f_bug        : no\ncoma_bug        : no\nfpu             : yes\nfpu_exception   : yes\ncpuid level     : 13\nwp              : yes\nflags           : fpu de tsc msr pae cx8 sep cmov pat clflush mmx fxsr sse sse2 ss ht nx aperfmperf unfair_spinlock pni pclmulqdq ssse3 sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes f16c rdrand hypervisor ida arat epb pln pts dts fsgsbase erms\nbogomips        : 7000.25\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 36 bits physical, 48 bits virtual\npower management:\n\nprocessor       : 1\nvendor_id       : GenuineIntel\ncpu family      : 6\nmodel           : 58\nmodel name      : Intel(R) Xeon(R) CPU E3-1270 V2 @ 3.50GHz\nstepping        : 9\ncpu MHz         : 3500.126\ncache size      : 8192 KB\nfdiv_bug        : no\nhlt_bug         : no\nf00f_bug        : no\ncoma_bug        : no\nfpu             : yes\nfpu_exception   : yes\ncpuid level     : 13\nwp              : yes\nflags           : fpu de tsc msr pae cx8 sep cmov pat clflush mmx fxsr sse sse2 ss ht nx aperfmperf unfair_spinlock pni pclmulqdq ssse3 sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes f16c rdrand hypervisor ida arat epb pln pts dts fsgsbase erms\nbogomips        : 7000.25\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 36 bits physical, 48 bits virtual\npower management:</pre> \n<p> <span style=\"font-size:14px;\"><b>3、内存信息</b></span></p> \n<pre class=\"prettyprint\">[root@MyCloudServer ~]# cat /proc/meminfo\nMemTotal:         509476 kB\nMemFree:           49796 kB\nBuffers:           36112 kB\nCached:           259100 kB\nSwapCached:         1564 kB\nActive:           148844 kB\nInactive:         271172 kB\nActive(anon):      31488 kB\nInactive(anon):    93396 kB\nActive(file):     117356 kB\nInactive(file):   177776 kB\nUnevictable:           0 kB\nMlocked:               0 kB\nHighTotal:             0 kB\nHighFree:              0 kB\nLowTotal:         509476 kB\nLowFree:           49796 kB\nSwapTotal:       1048568 kB\nSwapFree:        1042516 kB\nDirty:                 4 kB\nWriteback:             0 kB\nAnonPages:        123596 kB\nMapped:            16416 kB\nShmem:                80 kB\nSlab:              30292 kB\nSReclaimable:      24560 kB\nSUnreclaim:         5732 kB\nKernelStack:        1064 kB\nPageTables:         3220 kB\nNFS_Unstable:          0 kB\nBounce:                0 kB\nWritebackTmp:          0 kB\nCommitLimit:     1303304 kB\nCommitted_AS:     798276 kB\nVmallocTotal:     333816 kB\nVmallocUsed:        1448 kB\nVmallocChunk:     328908 kB\nHugePages_Total:       0\nHugePages_Free:        0\nHugePages_Rsvd:        0\nHugePages_Surp:        0\nHugepagesize:       2048 kB\nDirectMap4k:      524288 kB\nDirectMap2M:           0 kB</pre> \n<p><span style=\"font-size:14px;\"><b>4、硬盘信息</b></span></p> \n<pre class=\"prettyprint lang-bsh\">[root@MyCloudServer ~]# df -hal\nFilesystem            Size  Used Avail Use% Mounted on\n/dev/mapper/vg_501153278-lv_root\n                       29G  2.5G   25G  10% /\nproc                     0     0     0   -  /proc\nsysfs                    0     0     0   -  /sys\ndevpts                   0     0     0   -  /dev/pts\ntmpfs                 249M     0  249M   0% /dev/shm\n/dev/xvda1            485M  103M  357M  23% /boot\nnone                     0     0     0   -  /proc/sys/fs/binfmt_misc\nnone                     0     0     0   -  /proc/xen</pre> \n<p><span style=\"font-size:14px;\"><b>5、下载测试</b></span></p> \n<pre class=\"prettyprint lang-bsh\">[root@MyCloudServer ~]# wget http://cachefly.cachefly.net/100mb.test\n--2013-08-22 15:12:53--  http://cachefly.cachefly.net/100mb.test\nResolving cachefly.cachefly.net... 205.234.175.175\nConnecting to cachefly.cachefly.net|205.234.175.175|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 104857600 (100M) [application/octet-stream]\nSaving to: “100mb.test”\n\n100%[======================================&gt;] 104,857,600 16.4M/s   in 6.4s\n\n2013-08-22 15:13:00 (15.6 MB/s) - “100mb.test” saved [104857600/104857600]</pre> \n<p> <span style=\"font-size:14px;\"><b>6、路由追踪</b></span></p> \n<pre class=\"prettyprint\">C:\\Users\\teddysun&gt;tracert 204.77.6.53\nTracing route to 204.77.6.53 over a maximum of 30 hops\n\n  1    &lt;1 ms     1 ms     1 ms  192.168.1.1\n  2     2 ms     3 ms     1 ms  58.211.96.145\n  3     5 ms     7 ms     7 ms  218.4.211.117\n  4    13 ms    12 ms    11 ms  218.4.13.49\n  5    14 ms    15 ms    11 ms  202.97.55.33\n  6    13 ms    11 ms    12 ms  202.97.50.242\n  7    11 ms     9 ms    10 ms  202.97.35.14\n  8   167 ms   167 ms   167 ms  202.97.58.182\n  9   235 ms   224 ms   269 ms  202.97.49.74\n 10   160 ms   149 ms   149 ms  10gigabitethernet10-6.core1.lax1.he.net [64.71.131.133]\n 11   174 ms   174 ms   175 ms  10gigabitethernet1-3.core1.lax2.he.net [72.52.92.122]\n 12   175 ms   175 ms   174 ms  10gigabitethernet3-1.core1.las1.he.net [184.105.222.162]\n 13   174 ms   173 ms   173 ms  vegasnap-llc.10gigabitethernet5-1.core1.lax2.he.net [64.62.249.9]\n 14   173 ms   173 ms   173 ms  204.77.6.53\n\nTrace complete.</pre> \n<p> <span style=\"font-size:14px;\">从追踪节点上来看，走的是he.net，而且据字面猜测，骨干网应该是10G带宽。</span></p> \n<p><span style=\"font-size:14px;\"><b>7、硬盘DD检测</b></span></p> \n<pre class=\"prettyprint\">[root@MyCloudServer ~]# dd if=/dev/zero of=test bs=64k count=16k oflag=dsync\n16384+0 records in\n16384+0 records out\n1073741824 bytes (1.1 GB) copied, 11.2906 s, 95.1 MB/s\n</pre> \n<p> <span style=\"font-size:14px;\"><b>8、UnixBench测试</b></span></p> \n<pre class=\"prettyprint\">   BYTE UNIX Benchmarks (Version 5.1.3)\n\n   System: MyCloudServer: GNU/Linux\n   OS: GNU/Linux -- 2.6.32-358.6.1.el6.i686 -- #1 SMP Tue Apr 23 18:13:20 UTC 2013\n   Machine: i686 (i386)\n   Language: en_US.utf8 (charmap=\"UTF-8\", collate=\"UTF-8\")\n   CPU 0: Intel(R) Xeon(R) CPU E3-1270 V2 @ 3.50GHz (7000.2 bogomips)\n          Hyper-Threading, MMX, Physical Address Ext, SYSENTER/SYSEXIT\n   CPU 1: Intel(R) Xeon(R) CPU E3-1270 V2 @ 3.50GHz (7000.2 bogomips)\n          Hyper-Threading, MMX, Physical Address Ext, SYSENTER/SYSEXIT\n   14:42:17 up 58 min,  1 user,  load average: 0.08, 0.13, 0.33; runlevel 3\n\n------------------------------------------------------------------------\nBenchmark Run: Thu Aug 22 2013 14:42:17 - 15:10:22\n2 CPUs in system; running 1 parallel copy of tests\n\nDhrystone 2 using register variables       31413123.8 lps   (10.0 s, 7 samples)\nDouble-Precision Whetstone                     3778.9 MWIPS (10.0 s, 7 samples)\nExecl Throughput                               1019.4 lps   (30.0 s, 2 samples)\nFile Copy 1024 bufsize 2000 maxblocks        553117.1 KBps  (30.0 s, 2 samples)\nFile Copy 256 bufsize 500 maxblocks          142805.5 KBps  (30.0 s, 2 samples)\nFile Copy 4096 bufsize 8000 maxblocks       1705922.3 KBps  (30.0 s, 2 samples)\nPipe Throughput                              836495.6 lps   (10.0 s, 7 samples)\nPipe-based Context Switching                  84580.5 lps   (10.0 s, 7 samples)\nProcess Creation                               1763.4 lps   (30.0 s, 2 samples)\nShell Scripts (1 concurrent)                   4287.7 lpm   (60.0 s, 2 samples)\nShell Scripts (8 concurrent)                    992.0 lpm   (60.0 s, 2 samples)\nSystem Call Overhead                         924489.4 lps   (10.0 s, 7 samples)\n\nSystem Benchmarks Index Values               BASELINE       RESULT    INDEX\nDhrystone 2 using register variables         116700.0   31413123.8   2691.8\nDouble-Precision Whetstone                       55.0       3778.9    687.1\nExecl Throughput                                 43.0       1019.4    237.1\nFile Copy 1024 bufsize 2000 maxblocks          3960.0     553117.1   1396.8\nFile Copy 256 bufsize 500 maxblocks            1655.0     142805.5    862.9\nFile Copy 4096 bufsize 8000 maxblocks          5800.0    1705922.3   2941.2\nPipe Throughput                               12440.0     836495.6    672.4\nPipe-based Context Switching                   4000.0      84580.5    211.5\nProcess Creation                                126.0       1763.4    140.0\nShell Scripts (1 concurrent)                     42.4       4287.7   1011.2\nShell Scripts (8 concurrent)                      6.0        992.0   1653.3\nSystem Call Overhead                          15000.0     924489.4    616.3\n                                                                   ========\nSystem Benchmarks Index Score                                         750.4\n\n------------------------------------------------------------------------\nBenchmark Run: Thu Aug 22 2013 15:10:22 - 15:38:30\n2 CPUs in system; running 2 parallel copies of tests\n\nDhrystone 2 using register variables       63295957.5 lps   (10.0 s, 7 samples)\nDouble-Precision Whetstone                     7608.1 MWIPS (10.0 s, 7 samples)\nExecl Throughput                               5029.6 lps   (30.0 s, 2 samples)\nFile Copy 1024 bufsize 2000 maxblocks        839219.8 KBps  (30.0 s, 2 samples)\nFile Copy 256 bufsize 500 maxblocks          222527.7 KBps  (30.0 s, 2 samples)\nFile Copy 4096 bufsize 8000 maxblocks       2777989.7 KBps  (30.0 s, 2 samples)\nPipe Throughput                             1702799.3 lps   (10.0 s, 7 samples)\nPipe-based Context Switching                 168450.6 lps   (10.0 s, 7 samples)\nProcess Creation                               8008.3 lps   (30.0 s, 2 samples)\nShell Scripts (1 concurrent)                   7625.5 lpm   (60.0 s, 2 samples)\nShell Scripts (8 concurrent)                   1031.2 lpm   (60.0 s, 2 samples)\nSystem Call Overhead                        1782651.9 lps   (10.0 s, 7 samples)\n\nSystem Benchmarks Index Values               BASELINE       RESULT    INDEX\nDhrystone 2 using register variables         116700.0   63295957.5   5423.8\nDouble-Precision Whetstone                       55.0       7608.1   1383.3\nExecl Throughput                                 43.0       5029.6   1169.7\nFile Copy 1024 bufsize 2000 maxblocks          3960.0     839219.8   2119.2\nFile Copy 256 bufsize 500 maxblocks            1655.0     222527.7   1344.6\nFile Copy 4096 bufsize 8000 maxblocks          5800.0    2777989.7   4789.6\nPipe Throughput                               12440.0    1702799.3   1368.8\nPipe-based Context Switching                   4000.0     168450.6    421.1\nProcess Creation                                126.0       8008.3    635.6\nShell Scripts (1 concurrent)                     42.4       7625.5   1798.5\nShell Scripts (8 concurrent)                      6.0       1031.2   1718.6\nSystem Call Overhead                          15000.0    1782651.9   1188.4\n                                                                   ========\nSystem Benchmarks Index Score                                        1527.4</pre> \n<p> <span style=\"font-size:14px;\">备注：得分越高越好。可以看出，这款明显比我的那款Bandwagonhost的512MB，2核，OpenVZ的VPS的</span><a href=\"https://teddysun.com/245.html\" target=\"_blank\"><span style=\"font-size:14px;\">跑分结果</span></a><span style=\"font-size:14px;\">要好。</span></p> \n<p><span style=\"font-size:14px;\"><b>9、其他</b></span><br /> <span style=\"font-size:14px;\"> 开通VPS用默认的root密码登录后，最好立即采用私钥方式登录并关闭SSH密码登陆。具体参照《</span><a href=\"https://teddysun.com/237.html\" target=\"_blank\"><span style=\"font-size:14px;\">SSH无密码登录及putty设置</span></a><span style=\"font-size:14px;\">》</span><br /> <span style=\"font-size:14px;\"> 这一款用来建站或者干点什么都好，但我还没想好用来干什么。跑完我的<a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP一键安装脚本</a>，花费时间在35分钟左右，属于正常。</span><br /> <span style=\"font-size:14px;\"> 本人玩VPS上瘾，属于再买剁手型，目前手中已有大大小小好几个VPS，基本都是挂个探针或者开个PPTP玩玩而已。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/257.html\">又一家VPS：Locvps</a></p>","descriptionType":"html","publishedDate":"Thu, 22 Aug 2013 07:48:28 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/08/locvps.jpg","linkMd5":"b5514bda99c9090c5c60533f3483a908","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn15@2020_5/2020/08/25/00-30-54-953_ff0f900672138316.webp","destWidth":990,"destHeight":497,"sourceBytes":62293,"destBytes":37876,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/08/locvps.jpg":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn15@2020_5/2020/08/25/00-30-54-953_ff0f900672138316.webp","https://teddysun.com/wp-content/uploads/2013/08/locvps_lv_ping.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn85@2020_6/2020/08/25/00-31-01-233_7fca5c616c4c6729.webp"},"publishedOrCreatedDate":1598315426761},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"如果你的手机丢了","link":"https://teddysun.com/?p=136","description":"<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　如果你手机丢了，你觉得会损失了什么？也许你觉得手机本身的价值没什么，通讯录，短信，照片，视频神马的才是重要的。是，这些都很重要，因为涉及到个人隐私。但更要命的什么？没错，是<span style=\"color:red;\">帐号和钱</span>。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　你会欲哭无泪的，同时你也会非常着急，会在心里问候小偷的亲人等等。但最好反应过来后第一件事就是注销该手机号，否则你真的会欲哭无泪的。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　以腾讯的相关服务为例说明。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<strong>1、短信秒改QQ密码</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　如果QQ号码绑定过手机号，只需登录<a href=\"http://aq.qq.com/\" target=\"_blank\">http://aq.qq.com/</a>，点击密码管理，找回密码，即可花费你的一毛钱话费发送一条短信轻松修改QQ密码。虽然你还可以通过申诉这一招将QQ号找回来，但你挚爱的QQ号码已然被别人糟践过了。想想那些被盗号的悲惨遭遇吧。</span></p> \n<p> <span id=\"more-136\"></span> </p> \n<p><a href=\"https://teddysun.com/wp-content/uploads/2013/03/qq_1.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/03/qq_1.png\" alt=\"QQ找回密码\" title=\"QQ找回密码\" width=\"560\" height=\"315\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<strong>2、财付通余额</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　如果你有QQ（废话）并且还开通了财付通，巧的是里面还有余额，更巧的是你还绑定了手机号（假如你没绑，腾讯会让你绑定的），那意味着你的余额危险了。财付通的登录密码和QQ的一样，那么就剩一个支付密码了。通过手机验证码可以轻而易举的找回。下一步就是用你的财付通余额尽情的消费或者转账或者提现，除非你损失的余额数目达到3000或者5000，反正每个地方不一样，否则这时候你会觉得报案有用吗？</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/03/qq_2.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/03/qq_2.png\" alt=\"QQ找回密码\" title=\"QQ找回密码\" width=\"560\" height=\"315\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<strong>3、财付通的快捷支付</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　嗯，快捷支付真好，点一下，手机收一下验证码就能完成支付了。真快捷！没错，还要输入支付密码呢，可是上一步不是已经找回支付密码了么。腾讯还在搞活动呢，亲。绑定的银行卡越多，优惠越多哦（每绑一张银行卡送现金券5元呢），如果你绑定了好几张银行卡，你会死的很壮烈。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<strong>4、QQ邮箱，微信</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　废话不多说，用QQ的基本上QQ邮箱也开通了，如果你没设置独立密码，那么压根不用费劲就能打开你的QQ邮箱，神马邮件看得一清二楚。就算你设置了独立密码，也没用。手机在手，所向无敌。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　微信号也有跟手机号绑定的吧，甚至就用手机号作为微信号的人。你觉得你曾经约过的妹子不会被别人知道吗？这年头，隐私算哪根葱啊。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<strong>再来看看支付宝的找回密码流程</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　看到了吗，还是手机校验码有木有？是不是一步一步下来就能改了你的支付宝帐号密码以及支付密码了呢？自己动动脑子。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　还有，别忘了，支付宝也有快捷支付的哦。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　而且支付宝的快捷支付更狠，<span style=\"color:red;\">整个支付过程中连个验证码的短信都没有</span>，直接输入支付密码就能就你的银行账户里拿钱了。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/03/zhifubao_1.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/03/zhifubao_1.png\" alt=\"QQ找回密码\" title=\"QQ找回密码\" width=\"560\" height=\"315\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　还能举出很多例子来。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　如今网上各种账号一般都有跟手机绑定，现在你知道我为什么换了几个城市还不换手机号码了吧。我宁愿每个月多交点钱维持那个号码是可用的，也不愿逐一去网站解绑，因为时间久远，我也不知道自己到底绑了哪些网站了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　还有，有没有觉得手机的权限很高，简直非常高！</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　很多时候，网站相信手机号码，不相信人。每天都会有人丢手机，有人为的也有自己粗心大意，但是在手机丢了之后，有多少人会立即把手机号码挂失呢？又有多少人会马上对自己的网络账号与手机相关的账号进行处理呢？</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　就算你有这个意识，但当你找到电脑进行各种处理时，你会比有备而来的小偷速度快，准，狠吗？</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　骚年们，手机真的真的很要紧，出门挤公交地铁时，一定要看好你的手机！</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　本文的写作参考了<a href=\"http://www.wooyun.org/bugs/wooyun-2013-020147\" target=\"_blank\">这里</a>。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/136.html\">如果你的手机丢了</a></p>","descriptionType":"html","publishedDate":"Wed, 20 Mar 2013 08:46:44 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/03/qq_1.png","linkMd5":"0d9b43089f9ae1c925219206b3e5c5f9","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn56@2020_6/2020/08/25/00-30-53-849_e4d1c1f2ce7b131e.webp","destWidth":910,"destHeight":648,"sourceBytes":69038,"destBytes":37326,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/03/qq_1.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn56@2020_6/2020/08/25/00-30-53-849_e4d1c1f2ce7b131e.webp","https://teddysun.com/wp-content/uploads/2013/03/qq_2.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn55@2020_5/2020/08/25/00-30-59-932_a71f514c6506d187.webp","https://teddysun.com/wp-content/uploads/2013/03/zhifubao_1.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn32@2020_5/2020/08/25/00-30-58-690_90b238f2f7c04c93.webp"},"publishedOrCreatedDate":1598315426749},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"LAMP一键安装脚本使用说明","link":"https://teddysun.com/?p=410","description":"<p><a href=\"https://teddysun.com/410.html\"><img src=\"https://teddysun.com/wp-content/uploads/lamp.jpg\" alt=\"LAMP shell\" title=\"LAMP\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">LAMP 一键安装脚本持续更新很长一段时间了。在这期间，经常被问到很多问题，回答的比较零散，因此有必要在这里归纳总结一下。</span><br /> <span style=\"font-size:14px;\"> 如果你在使用 LAMP 的过程中也遇到了问题，请参考此文，已经列出了常见的问题和解答，希望能对你有所帮助。</span></p> \n<p><span style=\"font-size:14px;\"> <strong>为什么选择 LAMP 一键安装脚本？</strong></span><br /> <span style=\"font-size:14px;\"> LAMP 是经典的建站环境，尤其适用于个人站长。</span><br /> <span style=\"font-size:14px;\"> 本脚本的软件版本更新及时，支持 PHP 及数据库自选安装。支持 PHP 和数据库程序自助升级。</span><br /> <span style=\"font-size:14px;\"> 安装方便，支持众多 PHP 插件，实际上是当初为安装 Moodle 而量身打造的 LAMP 环境。</span><br /> <span style=\"font-size:14px;\"> 安装建议：根据自己的 CMS 建站系统要求，选择合适的版本安装即可。</span></p> \n<p><span style=\"font-size:14px;color:red;\"> <strong>更新时间：2015 年 08 月 28 日</strong></span></p> \n<p> <span id=\"more-410\"></span> </p> \n<p> <span style=\"font-size:14px;\"> <strong>程序目录：</strong></span><br /> <span style=\"font-size:14px;\"> MySQL 安装目录： /usr/local/mysql</span><br /> <span style=\"font-size:14px;\"> MySQL 数据库目录： /usr/local/mysql/data（默认，安装时可更改路径，参考问题 8 如何更改）</span><br /> <span style=\"font-size:14px;\"> MariaDB 安装目录： /usr/local/mariadb</span><br /> <span style=\"font-size:14px;\"> MariaDB 数据库目录： /usr/local/mariadb/data（默认，安装时可更改路径，参考问题 8 如何更改）</span><br /> <span style=\"font-size:14px;\"> PHP 安装目录： /usr/local/php</span><br /> <span style=\"font-size:14px;\"> Apache 安装目录： /usr/local/apache</span><br /> <span style=\"font-size:14px;\"> phpMyAdmin 安装目录： /data/www/default/phpmyadmin（安装完成后出于安全，建议将此目录改名，比如改为 /data/www/default/admin_8989）</span></p> \n<p><span style=\"font-size:14px;\"> <strong>网站目录：</strong></span><br /> <span style=\"font-size:14px;\"> 默认的网站根目录： /data/www/default</span><br /> <span style=\"font-size:14px;\"> 默认页位置： /data/www/default/index.html</span><br /> <span style=\"font-size:14px;\"> 新建站点默认目录： /data/www/域名/web</span><br /> <span style=\"font-size:14px;\"> phpmyadmin 后台地址： http://域名或ip/phpmyadmin/（若目录已改名，此处应为改名后的地址，比如 http://域名或ip/admin_8989/）</span><br /> <span style=\"font-size:14px;\"> phpmyadmin 默认用户名：root 密码：root（此密码即 MySQL 的 root 密码。在安装时会要求输入，如不输入则为默认值）</span><br /> <span style=\"font-size:14px;\"> xcache 后台地址： http://域名或ip/xcache/&nbsp;</span><br /> <span style=\"font-size:14px;\"> xcache 默认用户名：admin 密码：123456（用户名和密码在配置文件 /usr/local/php/php.d/xcache.ini 中定义）</span></p> \n<p><span style=\"font-size:14px;\"> <strong>配置文件：</strong></span><br /> <span style=\"font-size:14px;\"> Apache 日志目录： /usr/local/apache/logs</span><br /> <span style=\"font-size:14px;\"> Apache SSL 配置文件： /usr/local/apache/conf/extra/httpd-ssl.conf</span><br /> <span style=\"font-size:14px;\"> 新建站点配置文件： /usr/local/apache/conf/vhost/域名.conf</span><br /> <span style=\"font-size:14px;\"> PHP 配置文件： /usr/local/php/etc/php.ini</span><br /> <span style=\"font-size:14px;\"> PHP 所有扩展配置文件目录: /usr/local/php/php.d/</span><br /> <span style=\"font-size:14px;\"> MySQL 配置文件： /etc/my.cnf</span></p> \n<p><span style=\"font-size:14px;\"> <strong>命令一览：</strong></span><br /> <span style=\"font-size:14px;\"> MySQL 或 MariaDB 命令:</span><br /> <span style=\"font-size:14px;\"> /etc/init.d/mysqld (start|stop|restart|status)</span><br /> <span style=\"font-size:14px;\"> Apache命令:</span><br /> <span style=\"font-size:14px;\"> /etc/init.d/httpd (start|stop|restart|status)</span><br /> <span style=\"font-size:14px;\"> memcached</span><br /> <span style=\"font-size:14px;\"> /etc/init.d/memcached (start|stop|restart|status)</span></p> \n<p><span style=\"font-size:14px;\"> <strong>安装LAMP及建站简单流程：</strong></span><br /> <span style=\"font-size:14px;\"> 1、安装 LAMP 环境</span><br /> <span style=\"font-size:14px;\"> 2、添加虚拟主机。运行命令：lamp add （如果只建一个站，则可以直接将网站程序上传至 /data/www/default 目录下即可）</span><br /> <span style=\"font-size:14px;\"> 3、上传并解压网站程序到网站目录，默认位置为：/data/www/域名/web</span><br /> <span style=\"font-size:14px;\"> 4、更改网站目录权限。以 root 用户登录，运行：chown -R apache:apache /data/www/域名</span><br /> <span style=\"font-size:14px;\"> 5、运行网站安装程序完成网站安装</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问1：</strong>安装完网站程序，升级或安装插件等报错，如何更改网站目录权限？</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>以 root 登录后，运行：chown -R apache:apache /data/www/域名</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问2：</strong>安装时因内存不足报错，不能完成安装？</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>小于 512M 的 VPS 建议并开启 Swap，如何开启 Swap ，可以参考《<a href=\"https://teddysun.com/321.html\" target=\"_blank\">如何在CentOS中添加Swap</a>》一文。</span><br /> <span style=\"font-size:14px;color:red;\">更新（2015 年 08 月 28 日）：</span><span style=\"font-size:14px;\">本次更新优化了在小内存（480-512MB）下的安装体验。当 RAM + Swap 的容量小于 480MB 时，直接退出脚本运行；480-600MB 时，新增 PHP 编译选项 –disable-fileinfo 。</span><br /> <span style=\"font-size:14px;\">同时还优化了安装过程中对内存的占用。</span><br /> <span style=\"font-size:14px;color:blue;\">备注：</span><span style=\"font-size:14px;\">为什么写成 480 MB ？</span><br /> <span style=\"font-size:14px;\">这是因为基于 Xen 或者 KVM 虚拟的 VPS，内存容量一般会低于标注容量。一般说是 512MB，但实际也就只有 480MB 左右。</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问3：</strong>域名跟 ip 地址都显示相同的网页，如何设置？</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>这是因为域名没与 IP 绑定。</span><br /> <span style=\"font-size:14px;\"> 修改配置文件 /usr/local/apache/conf/extra/httpd-vhosts.conf</span><br /> <span style=\"font-size:14px;\"> 在此文件的第 1 行开始，追加以下虚拟主机的配置：</span></p> \n<pre class=\"prettyprint lang-bsh\">&lt;virtualhost *:80&gt;\nServerName  公网 IP\nRedirect 301 / 完整网址（如：http://teddysun.com）\n&lt;/virtualhost&gt;</pre> \n<p><span style=\"font-size:14px;\"> 注意，格式是301+空格+斜杠+空格+完整网址</span><br /> <span style=\"font-size:14px;\"> 此处是用到了 301 永久重定向来达到目的。</span><br /> <span style=\"font-size:14px;\"> 然后保存并重启 Apache，命令：/etc/init.d/httpd restart</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问4：</strong>将 MySQL 换成 MariaDB ，应该怎么做？</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong></span><br /> <span style=\"font-size:14px;\"> 1、备份所有数据库，执行命令：/usr/local/mysql/bin/mysqldump -uroot -p你设定的root密码 –all-databases &gt; /root/mysql.dump</span><br /> <span style=\"font-size:14px;\"> 2、卸载 LAMP，命令：lamp uninstall</span><br /> <span style=\"font-size:14px;\"> 3、重新安装 LAMP，选择 MariaDB</span><br /> <span style=\"font-size:14px;\"> 4、安装完成后，恢复数据库，命令：/usr/local/mariadb/bin/mysql -u root -p你设定的root密码 &lt; /root/mysql.dump</span><br /> <span style=\"font-size:14px;\"> 卸载 LAMP 时，是不会删除 /data/www/default 的，也就是说不会删除网站数据。但数据库会被删掉，因此需要备份。</span><br /> <span style=\"font-size:14px;\"> 注意，考虑到程序兼容性问题，不建议这么做（生产环境换数据库程序不妥，应该事先就规划好用哪种数据库），除非你知道如何备份和恢复你的数据库。</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问5：</strong>如何更改网站的默认目录？</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>修改配置文件 /etc/httpd/conf/extra/httpd-vhosts.conf 里的 DocmentRoot 目录以及下面的 Directory ，再重启 apache 即可</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问6：</strong>全新安装后，无法引用 /data/www/ 之外的目录，如 /home/data/，如何解决？</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>这是因为出于安全考虑，做了目录权限的 open_basedir 限制。</span><br /> <span style=\"font-size:14px;\"> 如何添加比如 /home/data 目录呢？修改 /usr/local/apache/conf/extra/httpd-vhosts.conf 中的 php_admin_value open_basedir 后的值，将 /home/data 添加到最后，注意要用冒号分割。再重启 Apache 即可。</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问7：</strong>请问如果网站是www.ccc.com, 如何让ccc.com跳转到www.ccc.com?</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>既可以在域名解析的时候设置域名跳转（比如 Dnspod 就可以），也可以通过 Apache 的 ServerAlias 设置多个域名。</span><br /> <span style=\"font-size:14px;\"> 比如 www.ccc.com 的配置文件是 /usr/local/apache/conf/vhost/www.ccc.com.conf ，在 ServerName 后新增一行 ServerAlias ccc.com 即可。</span><br /> <span style=\"font-size:14px;\"> 修改示例：</span><br /> <span style=\"font-size:14px;\"> ServerName www.ccc.com</span><br /> <span style=\"font-size:14px;\"> ServerAlias ccc.com</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问8：</strong>安装时自定义 MySQL 或 MariaDB 的路径，系统自动初始化数据库时会出错。然后会提示启动失败？</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>自定义 MySQL 的数据库路径时，如果目录不存在的话 MySQL 或 MariaDB 会尝试创建该目录，但一般会由于权限不足而创建失败。</span><br /> <span style=\"font-size:14px;\"> MySQL 编译安装后会将 /usr/local/mysql 目录的 user:group 设为 mysql:mysql，所以默认目录 /usr/local/mysql/data 是没有问题的。</span><br /> <span style=\"font-size:14px;\"> 因此自定义路径时，最好事先创建好该目录，并把目录 user:group 变更为 mysql:mysql，比如更改目录为 /home/mysql/data</span><br /> <span style=\"font-size:14px;\"> 当然，在还没有安装 LAMP 之前，系统不一定有 mysql 的用户和用户组。执行以下命令可以创建：</span></p> \n<pre class=\"prettyprint lang-bsh\">/usr/sbin/groupadd mysql\n/usr/sbin/useradd -s /sbin/nologin -M -g mysql mysql</pre> \n<p><span style=\"font-size:14px;\"> 然后，在 root 用户下执行：chown -R mysql:mysql /home/mysql/data</span><br /> <span style=\"font-size:14px;color:red;\">更新（2015 年 08 月 28 日）：</span><span style=\"font-size:14px;\">本次更新优化了 MySQL 的安装过程，脚本会检测自定义路径是否存在，如果不存在会自行创建目录并改变其 owner 和 group，无需在此之前手动创建了。</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问9：</strong>LAMP 能配合什么 Web 面板管理呢？</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>Webmin 免费面板。参考《<a href=\"https://teddysun.com/151.html\" target=\"_blank\">使用webmin管理PPTP VPN Server</a>》一文，有在 CentOS 下如何快速安装 webmin 的教程。</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问10：</strong>请问 xcache 的后台怎么进去?</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>http://域名或IP/xcache/</span><br /> <span style=\"font-size:14px;\"> 用户名：admin</span><br /> <span style=\"font-size:14px;\"> 密码：123456</span><br /> <span style=\"font-size:14px;\"> 前提是你安装了 xcache 后才能进入该后台。</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问11：</strong>如何修改 xcache 的后台用户名和密码？</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>修改 /usr/local/php/php.d/xcache.ini 中对应的 xcache.admin.user 和 xcache.admin.pass 的值。</span><br /> <span style=\"font-size:14px;\"> 注意 xcache.admin.pass 的值是密码 md5 后的值。</span><br /> <span style=\"font-size:14px;\"> 然后重启 Apache 即可。</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问12：</strong>程序只能支持到PHP 5.3，不支持PHP 5.4，请问具体如何降级到PHP 5.3呢？是否可以直接卸载 PHP 然后单独重新安装PHP 5.3 ？</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>可以是可以，不过比较麻烦，你要自己重新编译 PHP 5.3.29 。</span><br /> <span style=\"font-size:14px;\"> 删除已有的 PHP 步骤：</span><br /> <span style=\"font-size:14px;\"> rm -rf /etc/php.ini /usr/bin/php* /usr/local/php</span><br /> <span style=\"font-size:14px;\"> 编译 PHP 5.3.29 有几点需要注意的。你需要把环境里的 Apache， MySQL 或 MariaDB 配置一并 configure 好才行，具体可以参照 lamp.sh 脚本里的 install_php 函数。</span></p> \n<p><span style=\"font-size:14px;\"> 当然还有一种办法就是备份好数据，卸载 LAMP 后再次安装时选择 PHP 5.3 版本即可。</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问13：</strong>安装以后要如何关闭日志功能？</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>修改 Apache 的配置文件 /usr/local/apache/conf/httpd.conf ，</span><br /> <span style=\"font-size:14px;\"> 搜索关键字 CustomLog （第300行），在前面加一个“#”注释掉后再重启 Apache 后就不再产生访问日志了。</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问14：</strong>FTP 安装使用是怎样的？</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>1、安装 LAMP 环境；</span><br /> <span style=\"font-size:14px;\"> 2、运行 pureftpd.sh 安装 pureftpd 软件（pureftpd 相关命令：service pure-ftpd start/stop/restart）；</span><br /> <span style=\"font-size:14px;\"> 3、运行 lamp ftp add 命令新增 ftp 用户并根据提示绑定该用户的根目录（例：/data/www/default）；</span><br /> <span style=\"font-size:14px;\"> 4、运行 lamp ftp del 命令删除 ftp 用户，但并不会删除数据；</span><br /> <span style=\"font-size:14px;\"> 5、运行 lamp ftp list 命令查看已有的 ftp 用户一览。</span><br /> <span style=\"font-size:14px;\"> 敬请注意：安装 FTP 会遇到各种权限问题，会和已有的 apache 用户和用户组产生冲突，导致通过 FTP 上传的文件在程序里不可用。</span><br /> <span style=\"font-size:14px;\"> 因此，不推荐使用。目前 SFTP 已经全面替代 FTP 了。你可以用 winscp 客户端 root 连接后上传文件，然后再改下用户和用户组权限为 apache 即可，简单方便。</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问15：</strong>Apache 的 SSL 如何设置？</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>一般设置 /usr/local/apache/conf/extra/httpd-ssl.conf 就够了。</span><br /> <span style=\"font-size:14px;\"> 还需要在 /usr/local/apache/conf/httpd.conf 中开启 Include conf/extra/httpd-ssl.conf ，也就是将前面的 “#” 去掉。</span><br /> <span style=\"font-size:14px;\"> 可以参考《<a href=\"https://teddysun.com/395.html\" target=\"_blank\">Apache下部署ssl教程</a>》一文。</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问16：</strong>安装 PHP 时出现以下错误，怎么处理？</span><br /> <span style=\"font-size:14px;\"> cc: Internal error: Killed (program cc1)</span><br /> <span style=\"font-size:14px;\"> Please submit a full bug report.</span><br /> <span style=\"font-size:14px;\"> See for instructions.</span><br /> <span style=\"font-size:14px;\"> make: *** [ext/fileinfo/libmagic/apprentice.lo] Error 1</span><br /> <span style=\"font-size:14px;\"> Installing PHP failed, Please visit https://teddysun.com/lamp and contact.</span></p> \n<p><span style=\"font-size:14px;\"> <strong>答：</strong>内存不足，安装被 kill了。内存低于 512MB 的又没有 Swap 的话就会如此。如何开启 Swap ，可以参考《<a href=\"https://teddysun.com/321.html\" target=\"_blank\">如何在CentOS中添加Swap</a>》一文。</span><br /> <span style=\"font-size:14px;\"> 更多错误信息查询，参考《<a href=\"https://teddysun.com/363.html\" target=\"_blank\">PHP编译安装常见错误总结</a>》一文。</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问17：</strong>请问如何卸载组件呢，比如 xcache memcached？</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>删掉对应的 .so 文件及配置文件再重启 Apache 即可。</span><br /> <span style=\"font-size:14px;\"> 比如安装了 PHP 5.4 的话：</span><br /> <span style=\"font-size:14px;\"> /usr/local/php/lib/php/extensions/no-debug-non-zts-20100525/xcache.so</span><br /> <span style=\"font-size:14px;\"> /usr/local/php/php.d/xcache.ini</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问18：</strong>怎么卸载 phpMyAdmin?</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>phpMyAdmin 如果不需要的话，直接删除其目录就OK了。</span><br /> <span style=\"font-size:14px;\"> 默认安装位置是 /data/www/default/phpmyadmin/</span></p> \n<p><span style=\"font-size:14px;\"> <strong>问19：</strong>多个IP的VPS如何设置一个IP对应一个域名呢？</span><br /> <span style=\"font-size:14px;\"> <strong>答：</strong>按照以下步骤：</span><br /> <span style=\"font-size:14px;\"> 1、创建虚拟主机，以域名命名；</span><br /> <span style=\"font-size:14px;\"> 2、修改配置文件/usr/local/apache/conf/vhost/域名.conf，将其中的第一行的 virtualhost *:80修改为 virtualhost IP:80；</span><br /> <span style=\"font-size:14px;\"> 3、解析对应的域名到第二步设定好的的 IP ，重启 Apache。</span></p> \n<p><span style=\"font-size:14px;color:blue;\"> 感谢 lxrmyc 以评论为基础的整理。</span><br /> <span style=\"font-size:14px;color:red;\"> 本文在原来的评论的基础上作了更为详细的说明，将会不定时更新。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/410.html\">LAMP一键安装脚本使用说明</a></p>","descriptionType":"html","publishedDate":"Tue, 28 Apr 2015 01:41:45 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/lamp.jpg","linkMd5":"ed63b9807429465f6180a626e6ece66e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn60@2020_6/2020/08/25/00-30-52-416_cf6a6c9c995360f0.webp","destWidth":480,"destHeight":243,"sourceBytes":17839,"destBytes":9820,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/lamp.jpg":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn60@2020_6/2020/08/25/00-30-52-416_cf6a6c9c995360f0.webp"},"publishedOrCreatedDate":1598315426727},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Linux多线程下载工具Axel","link":"https://teddysun.com/?p=377","description":"<p><a href=\"https://teddysun.com/377.html\"><img src=\"https://teddysun.com/wp-content/uploads/2014/linux_2.png\" alt=\"Linux\" title=\"Linux多线程下载工具Axel\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">一般情况，在 Linux 下我们习惯于用 wget 下载，但该工具的缺点就是无法进行多线程下载，所以往往有时候速度不够快。</span><br /> <span style=\"font-size:14px;\">这里介绍的 Axel，是 Linux 下一款不错的 HTTP 或 FTP 高速下载工具。支持多线程下载、断点续传，且可以从多个地址或者从一个地址的多个连接来下载同一个文件，适合网速不给力时多线程下载以提高下载速度。需要注意的是，该软件只有命令行界面。</span></p> \n<p> <span id=\"more-377\"></span> </p> \n<p> <span style=\"font-size:14px;\">1、安装 Axel</span><br /> <span style=\"font-size:14px;\">CentOS 安装 Axel 方法：</span><br /> <span style=\"font-size:14px;\">因默认 repo 里没有 Axel，因此需要手动下载安装。到 <span style=\"font-family:Courier New;\"><a href=\"http://pkgs.repoforge.org/axel/\" target=\"_blank\">http://pkgs.repoforge.org/axel/</a></span> 下载 rpm 包安装即可。</span><br /> <span style=\"font-size:14px;\">CentOS 6.x 32 位下安装</span></p> \n<pre class=\"prettyprint lang-bsh\">wget -c http://pkgs.repoforge.org/axel/axel-2.4-1.el6.rf.i686.rpm\nrpm -ivh axel-2.4-1.el6.rf.i686.rpm</pre> \n<p> <span style=\"font-size:14px;\">CentOS 6.x 64 位下安装</span></p> \n<pre class=\"prettyprint lang-bsh\">wget -c http://pkgs.repoforge.org/axel/axel-2.4-1.el6.rf.x86_64.rpm\nrpm -ivh axel-2.4-1.el6.rf.x86_64.rpm</pre> \n<p> <span style=\"font-size:14px;\">Debian/Ubuntu 安装 Axel 方法：</span></p> \n<pre class=\"prettyprint lang-bsh\">apt-get install -y axel</pre> \n<p> <span style=\"font-size:14px;\">2、使用 Axel</span></p> \n<p><span style=\"font-size:14px;\">axel [OPTIONS] url1 [url2] [url…]</span><br /> <span style=\"font-size:14px;\">-n x &nbsp;指定线程数（x 必须为大于 0 的数字）</span><br /> <span style=\"font-size:14px;\">-o x &nbsp;指定另存为目录（x 必须为本地目录）</span><br /> <span style=\"font-size:14px;\">-s x &nbsp;指定下载速度（x 必须为大于 0 的数字，单位是 bytes/s）</span><br /> <span style=\"font-size:14px;\">-q &nbsp; &nbsp;静默模式，无任何输出信息</span><br /> <span style=\"font-size:14px;\">-V &nbsp; &nbsp;软件版本</span></p> \n<p><span style=\"font-size:14px;\">Axel 在下载过程中如果遇到中断的话，在原来的目录再次执行相同的下载命令即可恢复下载进度。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/377.html\">Linux多线程下载工具Axel</a></p>","descriptionType":"html","publishedDate":"Mon, 25 Aug 2014 08:41:21 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2014/linux_2.png","linkMd5":"bd01240f321f70dfdcae97272cdb1179","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn40@2020_3/2020/08/25/00-30-51-906_a73a186bd320d7dd.webp","destWidth":510,"destHeight":600,"sourceBytes":75843,"destBytes":23444,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2014/linux_2.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn40@2020_3/2020/08/25/00-30-51-906_a73a186bd320d7dd.webp"},"publishedOrCreatedDate":1598315426728},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"一键安装KMS服务脚本","link":"https://teddysun.com/?p=530","description":"<p><a href=\"https://teddysun.com/530.html\"><img src=\"https://teddysun.com/wp-content/uploads/2018/kms.png\" title=\"一键安装KMS服务脚本\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">KMS，是 Key Management System 的缩写，也就是密钥管理系统。这里所说的 KMS，毋庸置疑就是用来激活 VOL 版本的 Windows 和 Office 的 KMS 啦。经常能在网上看到有人提供的 KMS 服务器地址，那么你有没有想过自己也来搞一个这样的服务呢？而这样的服务在 Github 上已经有<a href=\"https://github.com/Wind4/vlmcsd\" target=\"_blank\">开源代码</a>实现了。</span><br /> <span style=\"font-size:14px;\">本文就是在这个开源代码的基础上，开发了适用于三大 Linux 发行版的一键安装 KMS 服务的脚本。</span></p> \n<h2> <span style=\"color:red;\">本脚本适用环境</span><br /> </h2> \n<p><span style=\"font-size:14px;\">系统支持：CentOS 6+，Debian 7+，Ubuntu 12+</span><br /> <span style=\"font-size:14px;\">虚拟技术：任意</span><br /> <span style=\"font-size:14px;\">内存要求：≥128M</span><br /> <span style=\"font-size:14px;color:red;\">日期　　：2018 年 10 月 25 日</span></p> \n<p> <span id=\"more-530\"></span> </p> \n<h3> <span style=\"color:red;\">关于本脚本</span><br /> </h3> \n<p><span style=\"font-size:14px;\">1、本脚本适用于三大 Linux 发行版，其他版本则不支持。</span><br /> <span style=\"font-size:14px;\">2、KMS 服务安装完成后会加入开机自启动。</span><br /> <span style=\"font-size:14px;\">3、默认记录日志，其日志位于 /var/log/vlmcsd.log。</span></p> \n<h3> <span style=\"color:red;\">使用方法</span><br /> </h3> \n<p><span style=\"font-size:14px;\">使用root用户登录，运行以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">wget --no-check-certificate https://github.com/teddysun/across/raw/master/kms.sh &amp;&amp; chmod +x kms.sh &amp;&amp; ./kms.sh</pre> \n<p> <span style=\"font-size:14px;\">安装完成后，输入以下命令查看端口号 1688 的监听情况</span></p> \n<pre class=\"prettyprint lang-bsh\">netstat -nxtlp | grep 1688</pre> \n<p><span style=\"font-size:14px;\">返回值类似于如下这样就表示 OK 了：</span></p> \n<pre class=\"prettyprint lang-bsh\">tcp        0      0 0.0.0.0:1688                0.0.0.0:*                   LISTEN      3200/vlmcsd         \ntcp        0      0 :::1688                     :::*                        LISTEN      3200/vlmcsd </pre> \n<p><span style=\"font-size:14px;\">本脚本安装完成后，会将 KMS 服务加入开机自启动。</span></p> \n<p><span style=\"font-size:14px;\"><strong>使用命令：</strong></span><br /> <span style=\"font-size:14px;\">启动：/etc/init.d/kms start</span><br /> <span style=\"font-size:14px;\">停止：/etc/init.d/kms stop</span><br /> <span style=\"font-size:14px;\">重启：/etc/init.d/kms restart</span><br /> <span style=\"font-size:14px;\">状态：/etc/init.d/kms status</span></p> \n<p><span style=\"font-size:14px;\"><strong>卸载方法：</strong></span><br /> <span style=\"font-size:14px;\">使用 root 用户登录，运行以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">./kms.sh uninstall</pre> \n<h3> <span style=\"color:red;\">如何使用 KMS 服务</span><br /> </h3> \n<p><span style=\"font-size:14px;\">KMS 服务，用于在线激活 VOL 版本的 Windows 和 Office。</span><br /> <span style=\"font-size:14px;\">激活的前提是你的系统是批量授权版本，即 VL 版，一般企业版都是 VL 版。而 VL 版本的镜像一般内置 GVLK key，用于 KMS 激活。</span><br /> <span style=\"font-size:14px;\">下面列表里面含有的产品的 VL 版本或者能使用 key 进入 KMS 通道的产品，都支持使用 KMS 激活。</span></p> \n<p><span style=\"font-size:14px;\">Office 2019 &amp; Office 2016：<a href=\"https://docs.microsoft.com/en-us/DeployOffice/vlactivation/gvlks\" target=\"_blank\">https://docs.microsoft.com/en-us/DeployOffice/vlactivation/gvlks</a></span><br /> <span style=\"font-size:14px;\">Office 2013：<a href=\"https://technet.microsoft.com/zh-cn/library/dn385360.aspx\" target=\"_blank\">https://technet.microsoft.com/zh-cn/library/dn385360.aspx</a></span><br /> <span style=\"font-size:14px;\">Office 2010：<a href=\"https://technet.microsoft.com/zh-cn/library/ee624355(v=office.14).aspx\" target=\"_blank\">https://technet.microsoft.com/zh-cn/library/ee624355(v=office.14).aspx</a></span><br /> <span style=\"font-size:14px;\">Windows：<a href=\"https://docs.microsoft.com/zh-cn/windows-server/get-started/kmsclientkeys\" target=\"_blank\">https://docs.microsoft.com/zh-cn/windows-server/get-started/kmsclientkeys</a></span></p> \n<p><span style=\"font-size:14px;\">使用管理员权限运行 cmd 查看系统版本，命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">wmic os get caption</pre> \n<p><span style=\"font-size:14px;\">使用管理员权限运行 cmd 安装从上面列表得到的 key，命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">slmgr /ipk xxxxx-xxxxx-xxxxx-xxxxx-xxxxx</pre> \n<p><span style=\"font-size:14px;\">使用管理员权限运行 cmd 将 KMS 服务器地址设置为你自己的 IP 或 域名，后面最好再加上端口号（:1688），命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">slmgr /skms Your IP or Domain:1688</pre> \n<p><span style=\"font-size:14px;\"><span style=\"color:red;\"><b>注意：</b></span>本脚本所做的工作就是此步骤。当你的 KMS 服务出于启动状态，那么此处就可以设置为你自己的 KMS 服务器地址。</span><br /> <span style=\"font-size:14px;\">使用管理员权限运行 cmd 手动激活系统，命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">slmgr /ato</pre> \n<p><span style=\"font-size:14px;\">关于 Office 的激活，要求必须是 VOL 版本，否则无法激活。</span><br /> <span style=\"font-size:14px;\">找到你的 Office 安装目录，32 位默认一般为 C:\\Program Files (x86)\\Microsoft Office\\Office16</span><br /> <span style=\"font-size:14px;\">64 位默认一般为 C:\\Program Files\\Microsoft Office\\Office16</span><br /> <span style=\"font-size:14px;\">Office16 是 Office 2016，Office15 就是 Office 2013，Office14 就是 Office 2010。</span><br /> <span style=\"font-size:14px;\">打开以上所说的目录，应该有个 OSPP.VBS 文件。</span><br /> <span style=\"font-size:14px;\">使用管理员权限运行 cmd 进入 Office 目录，命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">cd \"C:\\Program Files (x86)\\Microsoft Office\\Office16\"</pre> \n<p><span style=\"font-size:14px;\">使用管理员权限运行 cmd 注册 KMS 服务器地址：</span></p> \n<pre class=\"prettyprint lang-bsh\">cscript ospp.vbs /sethst:Your IP or Domain</pre> \n<p><span style=\"font-size:14px;\">使用管理员权限运行 cmd 手动激活 Office，命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">cscript ospp.vbs /act</pre> \n<p> <span style=\"font-size:14px;\"><span style=\"color:red;\"><b>注意：</b></span> KMS 方式激活，其有效期只有 180 天。</span><br /> <span style=\"font-size:14px;\">每隔一段时间系统会自动向 KMS 服务器请求续期，请确保你自己的 KMS 服务正常运行。</span></p> \n<h3> <span style=\"color:red;\">常见错误的对策</span><br /> </h3> \n<p><span style=\"font-size:14px;\">如果遇到在执行过程报错，请按以下步骤检查：</span><br /> <span style=\"font-size:14px;\">1，你的 KMS 服务器是否挂了？</span><br /> <span style=\"font-size:14px;\">2，你的 KMS 服务是否正常开启？</span><br /> <span style=\"font-size:14px;\">3，你的系统或 Office 是否为批量 VL 版本？</span><br /> <span style=\"font-size:14px;\">4，你的系统或 Office 是否修改过 Key 或未安装 GVLK Key？</span><br /> <span style=\"font-size:14px;\">5，你是否以管理员权限运行 cmd？</span><br /> <span style=\"font-size:14px;\">6，你的网络连接是否正常？</span><br /> <span style=\"font-size:14px;\">7，你的本地 DNS 解析是否正常？</span><br /> <span style=\"font-size:14px;\">8，如果你排除了以上的对策，那请根据错误提示代码自行搜索原因。</span></p> \n<h3> <span style=\"color:red;\">更新日志</span><br /> </h3> \n<p><span style=\"font-size:14px;\"><span style=\"color:red;\">2018 年 10 月 25 日：</span>修正 vlmcsd 的 git 链接，即每次全新安装皆为官方的最新版本。注意：如果你想升级版本，则需要先停止 kms 服务，再删除 /usr/bin/vlmcsd 文件，然后重新下载最新脚本安装即可。</span></p> \n<h3> <span style=\"color:blue;\">参考链接</span><br /> </h3> \n<p><span style=\"font-size:14px;\"><a href=\"https://03k.org/kms.html\" target=\"_blank\">https://03k.org/kms.html</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/530.html\">一键安装KMS服务脚本</a></p>","descriptionType":"html","publishedDate":"Sun, 15 Apr 2018 09:57:37 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2018/kms.png","linkMd5":"5f18441c157b0a40961851bb704c4109","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn96@2020_4/2020/08/25/00-30-54-110_765a8848f0b46589.webp","destWidth":738,"destHeight":427,"sourceBytes":133458,"destBytes":22662,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2018/kms.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn96@2020_4/2020/08/25/00-30-54-110_765a8848f0b46589.webp"},"publishedOrCreatedDate":1598315426755},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Toad for SQLServer Freeware","link":"https://teddysun.com/?p=255","description":"<p><a href=\"https://teddysun.com/255.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/08/Toad_for_SQLServer.jpg\" alt=\"Toad for SQLServer\" title=\"Toad for SQLServer Freeware\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　小青蛙 Toad 是一种专业的数据库设计管理工具，可以通过一个图形化的用户界面快速访问数据库。不仅支持Oracle，同时还支持SQLServer、MySQL等数据库。</span><br /> <span style=\"font-size:14px;\">　　比起SQL Server Management Studio，Toad for SQLServer可以更方便管理MSSQL，包含模式浏览、sql编辑器、存储过程编辑器、数据库复制、数据库移动、数据比较、版本控制等等功能。</span></p> \n<p> <span id=\"more-255\"></span> </p> \n<p> <span style=\"font-size:14px;\">列出Toad for SQLServer的一些功能：</span><br /> <span style=\"font-size:14px;\"><b>1、数据比较</b></span><br /> <span style=\"font-size:14px;\">在数据库上单击右键-&gt;data compare，可以以图形化方式比较两个数据库哪些表的数据有区别。</span><br /> <span style=\"font-size:14px;\"><b>2、生成数据脚本</b></span><br /> <span style=\"font-size:14px;\">生成数据脚本主要用于数据迁移，从一个mssql里的数据迁移到另一个相同版本的mssql里面。生成了脚本之后，在另一个mssql里面运行一下生成的脚本，数据就自动插入到新mssql里面了。</span><br /> <span style=\"font-size:14px;\">在数据库上单击右键-&gt;Generate SQL-&gt;Data Script，跟随向导就能很轻易地导出数据了。</span><br /> <span style=\"font-size:14px;\"><b>3、备份数据库</b></span><br /> <span style=\"font-size:14px;\">可以自动将数据库备份为bak文件。</span><br /> <span style=\"font-size:14px;\">在数据库上单击右键-&gt;Backup Database</span></p> \n<p><span style=\"font-size:14px;\">当然还有其他功能有待发掘。个人使用一段时间，发现确实要比微软自家的SQL Server Management Studio好用。</span></p> \n<p><span style=\"font-size:14px;\"><b>最新版6.0.0.323的下载地址：</b></span><br /> <span style=\"font-size:14px;\"><a href=\"http://pan.baidu.com/share/link?shareid=2186734343&amp;uk=50623901\" target=\"_blank\">点击这里</a></span></p> \n<p><span style=\"font-size:14px;color:blue;\"><b>参考链接：</b></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://www.cnblogs.com/lyhabc/archive/2012/08/25/2656887.html\" target=\"_blank\">http://www.cnblogs.com/lyhabc/archive/2012/08/25/2656887.html</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/255.html\">Toad for SQLServer Freeware</a></p>","descriptionType":"html","publishedDate":"Thu, 15 Aug 2013 09:43:00 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/08/Toad_for_SQLServer.jpg","linkMd5":"87a98a05dfc236b4a066dd14157f586f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn28@2020_4/2020/08/25/00-30-54-468_77d233e8e1d9bf7b.webp","destWidth":442,"destHeight":220,"sourceBytes":17838,"destBytes":13612,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/08/Toad_for_SQLServer.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn28@2020_4/2020/08/25/00-30-54-468_77d233e8e1d9bf7b.webp"},"publishedOrCreatedDate":1598315426740},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"使用 GPG 加密 Github Commits","link":"https://teddysun.com/?p=496","description":"<p><a href=\"https://teddysun.com/496.html\"><img class=\"aligncenter\" style=\"width: auto; height: auto;\" title=\"使用 GPG 加密 Github Commits\" src=\"https://teddysun.com/wp-content/uploads/2017/gpg.png\" /></a></p> \n<p><span style=\"font-size: 14px;\">GnuPG（简称 GPG），它是目前最流行、最好用的开源加密工具之一。</span><br /> <span style=\"font-size: 14px;\">GPG 有许多用途，比如对文件，邮件的加密。而本文要说的是，如何使用 GPG 来加密 Github Commits。</span><br /> <span style=\"font-size: 14px;\">在 Github 上查看一些项目的 Commits 时，偶尔会发现「This commit was signed with a verified signature.」字样，具体来说，就是下图示例那样。</span></p> \n<p><span id=\"more-496\"></span></p> \n<p><img class=\"left\" style=\"width: auto; height: auto;\" title=\"gpg\" src=\"https://teddysun.com/wp-content/uploads/2017/gpg1.png\" /></p> \n<h3>一、安装 Git 和 TortoiseGit</h3> \n<p><span style=\"font-size: 14px;\">关于如何在 Windows 下安装 Git 和 TortoiseGit，请参考《<a href=\"https://teddysun.com/333.html\" target=\"_blank\" rel=\"noopener noreferrer\">Git初学者：msysgit和tortoisegit</a>》一文。</span><br /> <span style=\"font-size: 14px;\">官方网站：</span><br /> <span style=\"font-size: 14px;\"><a href=\"https://git-scm.com\" target=\"_blank\" rel=\"noopener noreferrer\">https://git-scm.com</a></span><br /> <span style=\"font-size: 14px;\"><a href=\"https://tortoisegit.org\" target=\"_blank\" rel=\"noopener noreferrer\">https://tortoisegit.org</a></span></p> \n<h3>二、生成密钥</h3> \n<p><span style=\"font-size: 14px;\">在安装完 Git 之后，开始菜单项里会有个 Git Bash，打开，如下图所示：</span><br /> <img class=\"left\" style=\"width: auto; height: auto;\" title=\"Git Bash\" src=\"https://teddysun.com/wp-content/uploads/2017/gpg2.png\" /></p> \n<p><span style=\"font-size: 14px;\">Git 自带了 gpg 命令，因此可以直接在 Git Bash 里生成密钥。命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">gpg --full-generate-key</pre> \n<p><span style=\"font-size: 14px;\">回车，提示信息如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">gpg (GnuPG) 2.2.20-unknown; Copyright (C) 2020 Free Software Foundation, Inc.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\nPlease select what kind of key you want:\n   (1) RSA and RSA (default)\n   (2) DSA and Elgamal\n   (3) DSA (sign only)\n   (4) RSA (sign only)\nYour selection?</pre> \n<p><span style=\"font-size: 14px;\">选择加密算法，默认选择第一个选项即可，表示加密和签名都使用 RSA 算法。</span><br /> <span style=\"font-size: 14px;\">选 1，回车。</span></p> \n<p><span style=\"font-size: 14px;\">选择密钥长度，默认为 2048，建议输入 4096。</span></p> \n<pre class=\"prettyprint lang-bsh\">RSA keys may be between 1024 and 4096 bits long.\nWhat keysize do you want? (2048)</pre> \n<p><span style=\"font-size: 14px;\">输入 4096，回车。</span></p> \n<p><span style=\"font-size: 14px;\">设定密钥的有效期。</span></p> \n<pre class=\"prettyprint lang-bsh\">Please specify how long the key should be valid.\n         0 = key does not expire\n      &lt;n&gt;  = key expires in n days\n      &lt;n&gt;w = key expires in n weeks\n      &lt;n&gt;m = key expires in n months\n      &lt;n&gt;y = key expires in n years\nKey is valid for? (0)</pre> \n<p><span style=\"font-size: 14px;\">密钥只是个人使用的话，建议选择第一个选项，即永不过期。</span><br /> <span style=\"font-size: 14px;\">输入 0，回车。</span></p> \n<p><span style=\"font-size: 14px;\">系统会问你上述设置是否正确。</span></p> \n<pre class=\"prettyprint lang-bsh\">Is this correct? (y/N)</pre> \n<p><span style=\"font-size: 14px;\">输入 y，回车。</span></p> \n<p><span style=\"font-size: 14px;\">系统会要求你输入个人信息。</span></p> \n<pre class=\"prettyprint lang-bsh\">You need a user ID to identify your key; the software constructs the user ID\nfrom the Real Name, Comment and Email Address in this form:\n    \"Heinrich Heine (Der Dichter) &lt;heinrichh@duesseldorf.de&gt;\"\n\nReal name:</pre> \n<p><span style=\"font-size: 14px;\">「Real name」填入你的名字，需是英文。回车。</span></p> \n<pre class=\"prettyprint lang-bsh\">Email address:</pre> \n<p><span style=\"font-size: 14px;\">「Email address」填入你的邮箱地址。回车。</span></p> \n<pre class=\"prettyprint lang-bsh\">Comment:</pre> \n<p><span style=\"font-size: 14px;\">「Comment」可以空着不填。回车。</span><br /> <span style=\"font-size: 14px;\">系统会再次让你确认填入的信息。</span></p> \n<pre class=\"prettyprint lang-bsh\">You selected this USER-ID:\n    \"Teddysun &lt;i@teddysun.com&gt;\"\n\nChange (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit?</pre> \n<p><span style=\"font-size: 14px;\">输入 O，回车。</span><br /> <span style=\"font-size: 14px;\">系统会让你设定一个私钥的密码。</span></p> \n<pre class=\"prettyprint lang-bsh\">You need a Passphrase to protect your secret key.\nEnter passphrase:\nRepeat passphrase:</pre> \n<p><span style=\"font-size: 14px;\">注意这里要留空不填，直接回车即可。这是因为 TortoiseGit 不支持 1.4.x 含有私钥密码。</span><br /> <span style=\"font-size: 14px;\">系统这时开始生成密钥，这时会要求你做一些随机的举动，以生成一个随机数。你拿起鼠标随便晃晃，直到完成密钥生成。</span></p> \n<pre class=\"prettyprint lang-bsh\">We need to generate a lot of random bytes. It is a good idea to perform\nsome other action (type on the keyboard, move the mouse, utilize the\ndisks) during the prime generation; this gives the random number\ngenerator a better chance to gain enough entropy.</pre> \n<p><span style=\"font-size: 14px;\">最后，提示生成完毕。</span></p> \n<pre class=\"prettyprint lang-bsh\">gpg: key 0AD6C46D marked as ultimately trusted\npublic and secret key created and signed.</pre> \n<h3>三、列出密钥</h3> \n<p><span style=\"font-size: 14px;\"> 命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">gpg --list-keys</pre> \n<p><span style=\"font-size: 14px;\"> 输出结果如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">gpg: checking the trustdb\ngpg: 3 marginal(s) needed, 1 complete(s) needed, PGP trust model\ngpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u\n/c/Users/teddysun/.gnupg/pubring.gpg\n------------------------------------\npub   4096R/0AD6C46D 2017-02-22\nuid                  Teddysun &lt;i@teddysun.com&gt;\nsub   4096R/5BB7BB4E 2017-02-22</pre> \n<p><span style=\"font-size: 14px;\">第一行显示公钥文件名（pubring.gpg）</span><br /> <span style=\"font-size: 14px;\">第二行显示公钥特征（4096 位，Hash 字符串和生成时间）</span><br /> <span style=\"font-size: 14px;\">第三行显示用户信息</span><br /> <span style=\"font-size: 14px;\">第四行显示私钥特征</span></p> \n<h3>四、输出密钥</h3> \n<p><span style=\"font-size: 14px;\">公钥文件（.gnupg/pubring.gpg）以二进制形式储存，armor 参数可以将其转换为 ASCII 码显示。</span></p> \n<pre class=\"prettyprint lang-bsh\">gpg --armor --output public-key.txt --export [密钥ID]</pre> \n<p><span style=\"font-size: 14px;\">[密钥ID]指定用户的公钥，如 0AD6C46D，output 参数指定输出文件名，如 public-key.txt</span></p> \n<p><span style=\"font-size: 14px;\">同时，export-secret-keys 参数可以转换私钥。</span></p> \n<pre class=\"prettyprint lang-bsh\">gpg --armor --output private-key.txt --export-secret-keys</pre> \n<p><span style=\"font-size: 14px;\">public-key.txt 和 private-key.txt 默认会导出至用户目录 C:\\Users\\&lt;用户名&gt;\\ 下。</span></p> \n<h3>五、上传公钥至 Github 帐号</h3> \n<p><span style=\"font-size: 14px;\"> 点击用户头像，打开 Settings，左侧菜单点击 SSH and GPG keys，在 GPG keys 那里，点击 New GPG key。</span><br /> <span style=\"font-size: 14px;\"> 在输入框里填入刚刚导出的 public-key.txt 内容。</span><br /> <span style=\"font-size: 14px;\"> 点击 Add GPG key，完成上传。</span></p> \n<h3>六、设置 Git</h3> \n<p><span style=\"font-size: 14px;\"> 回到 Git Bash 窗口，根据刚才 gpg –list-keys 显示的结果，此时已经知道密钥 ID 为 0AD6C46D。</span><br /> <span style=\"font-size: 14px;\"> 设置 Git 使用该密钥 ID 加密：</span></p> \n<pre class=\"prettyprint lang-bsh\">git config --global user.signingkey 0AD6C46D</pre> \n<p><span style=\"font-size: 14px;\"> 设置 Git 全局使用该密钥加密：</span></p> \n<pre class=\"prettyprint lang-bsh\">git config --global commit.gpgsign true</pre> \n<p><span style=\"font-size: 14px;\">最后，再输入以下命令查看 Git 配置情况：</span></p> \n<pre class=\"prettyprint lang-bsh\">git config -l</pre> \n<p><span style=\"font-size: 14px;\"> 包含以下信息。</span></p> \n<pre class=\"prettyprint lang-bsh\">user.signingkey=0AD6C46D\ncommit.gpgsign=true</pre> \n<p><span style=\"font-size: 14px;\">至此，使用 GPG 加密 Github Commits 就正式完成了。</span><br /> <span style=\"font-size: 14px;\"> 以后再 Git Commit，同步到 Github 上之后，就会发现该 Commit 已显示 Verified。</span></p> \n<h3><strong>参考链接：</strong></h3> \n<p><span style=\"font-size: 14px;\"> <a href=\"https://teddysun.com/333.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://teddysun.com/333.html</a></span><br /> <span style=\"font-size: 14px;\"> <a href=\"https://help.github.com/articles/generating-a-new-gpg-key/\" target=\"_blank\" rel=\"noopener noreferrer\">https://help.github.com/articles/generating-a-new-gpg-key/</a></span><br /> <span style=\"font-size: 14px;\"> <a href=\"https://help.github.com/articles/adding-a-new-gpg-key-to-your-github-account/\" target=\"_blank\" rel=\"noopener noreferrer\">https://help.github.com/articles/adding-a-new-gpg-key-to-your-github-account/</a></span><br /> <span style=\"font-size: 14px;\"> <a href=\"https://help.github.com/articles/signing-commits-using-gpg/\" target=\"_blank\" rel=\"noopener noreferrer\">https://help.github.com/articles/signing-commits-using-gpg/</a></span><br /> <span style=\"font-size: 14px;\"> <a href=\"http://www.ruanyifeng.com/blog/2013/07/gpg.html\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.ruanyifeng.com/blog/2013/07/gpg.html</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/496.html\">使用 GPG 加密 Github Commits</a></p>","descriptionType":"html","publishedDate":"Sun, 26 Feb 2017 04:04:13 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2017/gpg.png","linkMd5":"670167aced1a7dc96331258f13a9743f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn17@2020_3/2020/08/25/00-30-51-644_ac7e55b7446ae014.webp","destWidth":500,"destHeight":173,"sourceBytes":11824,"destBytes":10688,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2017/gpg.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn17@2020_3/2020/08/25/00-30-51-644_ac7e55b7446ae014.webp","https://teddysun.com/wp-content/uploads/2017/gpg1.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn12@2020_5/2020/08/25/00-30-59-320_da1f4c6434a8c192.webp","https://teddysun.com/wp-content/uploads/2017/gpg2.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn48@2020_1/2020/08/25/00-30-59-565_fbd257231dc17d0a.webp"},"publishedOrCreatedDate":1598315426756},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"CentOS 7下LAMP一键安装","link":"https://teddysun.com/?p=375","description":"<p><a href=\"https://teddysun.com/375.html\"><img src=\"https://teddysun.com/wp-content/uploads/lamp.jpg\" alt=\"LAMP\" title=\"CentOS 7下LAMP一键安装\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">前不久 CentOS 更新到版本 CentOS 7.0.1406，为了支持此版本，<a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP 一键安装脚本</a>做了大量的更新和测试，并遇到了不少问题，在此一一记录下来。</span><br /> <span style=\"font-size:14px;\">由于 CentOS 7 将 service 重定向为 systemctl ，导致开机自启动脚本有的需要重写，这个过程也耗费了不少时间测试。同时，原先在 CentOS 6 存在的一些依赖包，在 CentOS 7 中不存在了，比如 libc-client-devel，这是安装 php-imap 扩展所必须的依赖，少了它编译 PHP 的扩展 imap 时必然会出错，于是只能手动编译安装 imap-2007f ，并指定 imap 扩展的路径。</span><br /> <span style=\"font-size:14px;\">去掉了一些在新旧 CentOS 都不存在的依赖包，比如 libmcrypt-devel，并全部编译安装最新版。</span></p> \n<p> <span id=\"more-375\"></span> </p> \n<p> <span style=\"font-size:14px;\">其中一些最主要的更新，列举如下。</span><br /> <span style=\"font-size:14px;\"><strong>1、获取公网 IP 的方式变更</strong></span><br /> <span style=\"font-size:14px;\">在 CentOS 7 中，默认没有安装 ifconfig ，也就是依赖包 net-tools，所以将原来从 ifconfig 获取 IP 变更为 curl 外链来获取 IP。</span><br /> <span style=\"font-size:14px;\">所以，安装本脚本，务必要保证联网。</span></p> \n<p><span style=\"font-size:14px;\"><strong>2、手动安装一些依赖包</strong></span><br /> <span style=\"font-size:14px;\">这些依赖包包括 pcre、libiconv、libmcrypt、mcrypt、re2c、libedit、imap。</span><br /> <span style=\"font-size:14px;\">在 CentOS 5 中 pcre 版本过低会导致编译 Apache 失败；MySQL 要使用 readline 功能，编译安装 libedit；PHP 的扩展 imap，依赖 libc-client 共享库，编译安装 imap-2007f 等等。</span><br /> <span style=\"font-size:14px;\">其中有些报错信息网上查到也语焉不详，尤其是中文网站。所以在此列举一下。</span><br /> <span style=\"font-size:14px;\">编译 PHP 时出错：</span><br /> <span style=\"font-size:14px;color:red;\">configure: error: utf8_mime2text() has new signature, but U8T_CANONICAL is missing. This should not happen. Check config.log for additional information.</span><br /> <span style=\"font-size:14px;\">就是 imap 扩展缺少依赖包导致的。编译安装 imap-2007f 步骤：</span></p> \n<pre class=\"prettyprint lang-bsh\">wget ftp://ftp.cac.washington.edu/imap/imap-2007f.tar.gz\ntar -zxf imap-2007f.tar.gz\ncd imap-2007f\nmake lr5 PASSWDTYPE=std SSLTYPE=unix.nopwd EXTRACFLAGS=-fPIC IP=4\nrm -rf /usr/local/imap-2007f/\nmkdir /usr/local/imap-2007f/\nmkdir /usr/local/imap-2007f/include/\nmkdir /usr/local/imap-2007f/lib/\ncp c-client/*.h /usr/local/imap-2007f/include/\ncp c-client/*.c /usr/local/imap-2007f/lib/\ncp c-client/c-client.a /usr/local/imap-2007f/lib/libc-client.a</pre> \n<p> <span style=\"font-size:14px;\">备注：在 64 位下编译时 make 参数需要带 EXTRACFLAGS=-fPIC ，在 32 位下则不需要。</span><br /> <span style=\"font-size:14px;\">同时，在 CentOS 7 下编译 PHP 的 imap 扩展时，添加如下参数：</span></p> \n<pre class=\"prettyprint lang-bsh\">--with-imap=/usr/local/imap-2007f \n--with-imap-ssl</pre> \n<p><span style=\"font-size:14px;\">在 CentOS 6 下编译时，由于已经安装了依赖包 libc-client-devel ，所以参数如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">--with-imap\n--with-imap-ssl\n--with-kerberos</pre> \n<p> <span style=\"font-size:14px;\"><strong>3、新增一些判断函数</strong></span><br /> <span style=\"font-size:14px;\">增加了一些判断函数，比如是否为 64 位，是否为 CentOS 7 等。</span></p> \n<p><span style=\"font-size:14px;\"><strong>4、更新启动脚本</strong></span><br /> <span style=\"font-size:14px;\">Apache 的启动脚本 /etc/init.d/httpd 变更，拷贝于 /usr/local/apache/bin/apachectl 文件，同时为了 /etc/init.d/httpd status 能够使用，新增了配置文件 /usr/local/apache/conf/extra/httpd-info.conf 。</span></p> \n<p><span style=\"font-size:14px;\"><strong>5、CentOS 7 下可能会遇到的问题</strong></span><br /> <span style=\"font-size:14px;\">安装 LAMP 完成后，无法用 IP 访问网站。查看进程也发现了 httpd 和 mysqld 也启动了，防火墙貌似也关闭了，ping 也没问题，但就是无法访问。</span><br /> <span style=\"font-size:14px;\">经过一番排查，还真就是 CentOS 7 最新的 firewalld 引起的问题。这时就要用经典的 iptables-services 来替代 firewalld 了。</span></p> \n<pre class=\"prettyprint lang-bsh\">yum -y install iptables-services\nsystemctl mask firewalld\nsystemctl enable iptables\nsystemctl stop firewalld\nsystemctl start iptables</pre> \n<p> <span style=\"font-size:14px;\"><strong>6、PHP组件支持</strong></span><br /> <span style=\"font-size:14px;\">到目前为止，我所见过的 LAMP、LNMP、LANMP 等一键安装脚本，对 PHP 组件的支持都不全面，有很多缺失的，最典型的就是 imap、ldap。</span><br /> <span style=\"font-size:14px;\">为了支持这些组件，我做了大量的改进和测试。这里放一张 PHP 探针截图，支持所有组件，以及 4 种第三方组件。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2014/zujian.png\"><img src=\"https://teddysun.com/wp-content/uploads/2014/zujian.png\" alt=\"PHP ext\" title=\"PHP所有组件\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">虽然 LAMP 一键安装脚本已经做了大量测试，但还是会有不完善的地方，如果你在使用过程中遇到问题，可反馈至 <span style=\"font-family:Courier New;\"><a href=\"https://teddysun.com/lamp\">https://teddysun.com/lamp</a></span> ，提交评论，或者附带安装日志 lamp.log 发送邮件至 i[at]teddysun.com。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/375.html\">CentOS 7下LAMP一键安装</a></p>","descriptionType":"html","publishedDate":"Tue, 12 Aug 2014 04:54:50 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/lamp.jpg","linkMd5":"0ef0ff54fddb3e6163b17774c56a12d4","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn60@2020_6/2020/08/25/00-30-52-416_cf6a6c9c995360f0.webp","destWidth":480,"destHeight":243,"sourceBytes":17839,"destBytes":9820,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/lamp.jpg":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn60@2020_6/2020/08/25/00-30-52-416_cf6a6c9c995360f0.webp","https://teddysun.com/wp-content/uploads/2014/zujian.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn51@2020_2/2020/08/25/00-30-59-646_7a40f375a7708751.webp"},"publishedOrCreatedDate":1598315426737},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Notepad++插件Python Script和Emmet的安装","link":"https://teddysun.com/?p=254","description":"<p><a href=\"https://teddysun.com/254.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/python.png\" alt=\"Python\" title=\"Notepad++插件Python Script和Emmet的安装\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　最近在做一个项目，涉及到大量的HTML、CSS代码的编写，手动写代码效率实在是低下。于是想搜索一下，有没有Notepad++插件可以支持自动生成的，果不其然还真有。Emmet，这款神器其实就是 Zen Coding 的升级版，它可以极大的提高代码编写的效率，并提供了一种非常简练的语法规则，立刻生成对应的 HTML 结构或者 CSS 代码，同时还有多种实用的功能帮助进行前端开发。</span><br /> <span style=\"font-size:14px;\">　　Emmet支持多种编辑器，如Sublime Text 2，TextMate 1.x，Eclipse/Aptana，Espresso，Notepad++等。我习惯于在Notepad++下写代码，因此本文记述的是如何在Notepad++下安装和使用。</span></p> \n<p> <span id=\"more-254\"></span> </p> \n<p> <span style=\"font-size:14px;\"><b>1、下载Emmet和Python Script</b></span><br /> <span style=\"font-size:14px;\">Emmet需要 Python Script 的支持，因此这两款插件必须同时安装才能使用。</span><br /> <span style=\"font-size:14px;\">详见：<span style=\"font-family:Courier New;\"><a href=\"https://github.com/emmetio/npp\" target=\"_blank\">https://github.com/emmetio/npp</a></span></span></p> \n<p><span style=\"font-size:14px;\">下载地址：</span><br /> <span style=\"font-size:14px;\"><a href=\"http://sourceforge.net/projects/npppythonscript/files/latest/download?source=dlp\" target=\"_blank\">PythonScript_full_0.9.2.0</a></span></p> \n<p><span style=\"font-size:14px;\"><a href=\"http://download.emmet.io/npp/emmet-npp.zip\" target=\"_blank\">Emmet的Notepad++插件</a></span></p> \n<p><span style=\"font-size:14px;\"><b>2、安装</b></span><br /> <span style=\"font-size:14px;\">Emmet的安装比较简单，下载完解压后复制到Notepad++安装目录的plugins下即可。</span><br /> <span style=\"font-size:14px;\">Python Script的安装则稍稍复杂，我走了一些弯路后才搞定。一开始以为将解压后的文件扔到plugins下就行了，但启动Notepad++时总是报错。</span><br /> <span style=\"font-size:14px;\">于是我打开 Python Script 的帮助文件，看了一遍安装手册才搞明白。</span><br /> <span style=\"font-size:14px;\">下载完PythonScript_full_0.9.2.0.zip后解压，将python27.dll文件复制到Notepad++安装目录的<span style=\"color:red;\">根目录</span>下，同时在plugins文件夹中的全部内容复制到Notepad++安装目录的plugins下。</span><br /> <span style=\"font-size:14px;\">为表达清楚，摘录Python Script 的目录结构如下：</span></p> \n<pre class=\"prettyprint\">Notepad++ (Notepad++ 安装主目录,一般位于\"C:\\Program Files\"下)\n +\n |-- python27.dll(放在Notepad++ 安装主目录下，和notepad++.exe属于同一目录)\n +-- plugins\n           \\\n           |-- PythonScript.dll\n           |\n           |-- PythonScript\n           |   \\\n           |   |-- lib\n           |   |    \\\n           |   |     |-- (*.py)   很多 *.py 文件和子目录\n           |   |\n           |   |-- scripts\n           |             \\\n           |             |-- (脚本和一些示例)\n           |\n           |\n           |-- doc\n           |    \\\n           |     |-- PythonScript\n           |             \\\n           |             |-- PythonScript.chm(PythonScript帮助文档，英文版)</pre> \n<p> <span style=\"font-size:14px;\"><b>3、Emmet的工作流程</b></span><br /> <span style=\"font-size:14px;\">安装完Emmet后，强烈建议更改 Expand Abbreviation 的键盘快捷键为Tab键。</span><br /> <span style=\"font-size:14px;\">打开Notepad++Settings &gt; Shortcut Mapper…对话框，切换到 plugin commands，选中 Expand Abbreviation 项，修改其快捷键为Tab键即可。</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2013/08/plugin_commands.png\" class=\"aligncenter\" /></p> \n<p><span style=\"font-size:14px;\">然后，就可以按照 Emmet 的工作流程来干活了：</span><br /> <span style=\"font-size:14px;\"><b>打开 HTML 或 CSS 文件-&gt;按语法编写指令-&gt;按下 TAB 键-&gt;生成！</b></span></p> \n<p><span style=\"font-size:14px;\"><b>4、Emmet的使用教程</b></span><br /> <span style=\"font-size:14px;\">请参考：<span style=\"font-family:Courier New;\"><a href=\"http://blog.wpjam.com/m/emmet-grammar/\" target=\"_blank\">http://blog.wpjam.com/m/emmet-grammar/</a></span></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/254.html\">Notepad++插件Python Script和Emmet的安装</a></p>","descriptionType":"html","publishedDate":"Wed, 14 Aug 2013 07:16:37 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/python.png","linkMd5":"b43cb1451e4f637df55fa53ef95c0f9a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn15@2020_2/2020/08/25/00-30-51-804_4bcae60bfba8e964.webp","destWidth":520,"destHeight":226,"sourceBytes":16127,"destBytes":5900,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/python.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn15@2020_2/2020/08/25/00-30-51-804_4bcae60bfba8e964.webp","https://teddysun.com/wp-content/uploads/2013/08/plugin_commands.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn20@2020_2/2020/08/25/00-30-58-343_4b81de462304b811.webp"},"publishedOrCreatedDate":1598315426741},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"wordpress更换主题报错解决方法","link":"https://teddysun.com/?p=133","description":"<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　这两天在折腾主题，有时候觉得这个好看有时候觉得那个好看，于是就换来换去的。这不就换出问题了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 　　在一次换回原主题的过程中，浏览器界面卡住不动，再一刷新就出现了http500内部服务器错误。第一感觉就是当前切换的主题出问题了，进而导致整个网站前台和后台都进不去了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 　　解决方法有2种，推荐第1种，比较简单：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 　　1、通过FTP软件（虚拟主机一般就只有FTP）进入网站的主题目录wp-content/themes，把切换的那个有问题的主题文件夹改名即可重新进入WordPress后台。进入后台会遇到提示，主题目录被破坏恢复到默认主题。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 　　2、通过修改数据库解决。登录phpMyadmin，找到安装wordpress的数据库，执行下面的SQL语句（wp_options中的<span style=\"color:red;\">wp</span>是数据库前缀，改为当初安装时设定的；<span style=\"color:red;\">twentytwelve</span>是举例的主题名称，改为切换时出问题的主题名称）：</span></p> \n<pre class=\"prettyprint\">SELECT * FROM `wp_options` WHERE `option_value` = 'twentytwelve' LIMIT 0 , 30;</pre> \n<p><span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　一般出现3行结果，option_name分别是template、stylesheet、current_theme，修改为没出问题的主题名称即可。</span> </p> \n<p> <span id=\"more-133\"></span> </p> \n<p><span style=\"font-family:'Microsoft YaHei';font-size:14px;\"> 　　这时候网站已经恢复到默认主题（即一开始安装完wordpress后系统自带的三款主题之一），我开始找主题的原因。</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\"> 　　打开Apache的error_log文件，找到如下的错误信息：</span></p> \n<pre class=\"prettyprint\">[Sat Mar 16 21:26:27.637761 2013] [:error] [pid 1100] [client 180.108.184.166:56042] PHP Fatal error: Cannot redeclare remove_more_jump_link() (previously declared in /data/www/default/wp-content/themes/zbench/functions.php:43) in /data/www/default/wp-content/themes/zbench/functions.php on line 486, referer: https://teddysun.com/wp-admin/themes.php</pre> \n<p><span style=\"font-family:'Microsoft YaHei';font-size:14px;\"> 　　出现PHP致命错误是因为一个函数<span style=\"color:red;\">remove_more_jump_link</span>的重申明出现错误。原来，是我当初在主题的functions.php里加了一些自定义的代码来优化显示效果，比如<a href=\"https://teddysun.com/81.html\" target=\"_blank\">去除wordpress的链接含有more-link</a>，自定义后台登录界面等。我在默认主题twentytwelve中添加了这几个函数后，再切换到别的主题，wordpress会自动将这些自定义的函数添加到新主题的functions.php中。然后我又重新将这几个函数添加到新主题中，进而导致函数名重复，出现PHP致命错误。</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\"> 　　原因找到了就容易解决了。将自己添加的那些函数全部删除后，切换主题恢复正常。</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\"> 　　出现这次故障的问题虽然解决了，但还是有不少地方需要在将来注意的。</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\"> 　　1、主题一般是不能随意切换的，固定使用一款主题后，最好是在这款主题的基础上修修改改或者安装插件，因为插件不可能兼容于所有主题；</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\"> 　　2、写文章时，一定要统一风格，最好不要过多使用一些自定义的html标签；</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\"> 　　3、如果之前使用的主题自带SEO功能，那么更换主题后的主题最好也要有SEO功能，否则需要用插件来实现；</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\"> 　　4、更换主题之前，需要确认当前的全部插件是否与更换的主题兼容，有一些主题附带的功能会与某些插件存在冲突，更换前需要好好检查；</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\"> 　　5、重新加入统计跟踪代码。常见的统计跟踪工具（如Google Analytics、cnzz等）代码一般添加到footer.php中，切换主题时也要注意添加到新主题中。（建议最好用插件实现添加统计代码，如Google Analytics）</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/133.html\">wordpress更换主题报错解决方法</a></p>","descriptionType":"html","publishedDate":"Sun, 17 Mar 2013 08:29:35 +0000","feedId":9594,"bgimg":"","linkMd5":"ced5529b16b5ccedbeb5ae9b9fa5669b","bgimgJsdelivr":"","metaImg":"","author":"秋水逸冰","publishedOrCreatedDate":1598315426749},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Eclipse的IOConsole Updater error解决方法","link":"https://teddysun.com/?p=253","description":"<p><a href=\"https://teddysun.com/253.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/08/IOConsole_Updater_error.png\" alt=\"IOConsole Updater error\" title=\"eclipse的IOConsole Updater error解决方法\" class=\"aligncenter\" style=\"height:auto;width:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　在eclipse中启动项目运行一段时间后，或者有时候直接就在启动时报IOConsole Updater的错。网上查了下，这属于eclipse的bug，列表见 <a href=\"https://bugs.eclipse.org/bugs/show_bug.cgi?id=176508\" target=\"_blank\">Bug 176508</a>，<a href=\"https://bugs.eclipse.org/bugs/show_bug.cgi?id=198188\" target=\"_blank\">Bug 198188</a>，<a href=\"https://bugs.eclipse.org/bugs/show_bug.cgi?id=243877\" target=\"_blank\">Bug 243877</a>。在 Bug 243877 中看的我很欢乐，这个bug从2008-08-12建立直到今天，仍然有人在列表里吐槽。</span></p> \n<p> <span id=\"more-253\"></span> </p> \n<p> <span style=\"font-size:14px;\">　　网上给出的做法是：</span><br /> <span style=\"font-size:14px;\">　　进入Window–&gt;Preferences–&gt;Run/Debug–&gt;Console，将Debug Console Settings中的Fixed width console的勾选去掉。</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2013/08/IOConsole_Updater_set.png\" alt=\"IOConsole Updater set\" class=\"aligncenter\" /> </p> \n<p><span style=\"font-size:14px;\">　　实际上，这么做往往并不奏效。</span><br /> <span style=\"font-size:14px;\">　　这个bug重现也很简单，就是console不停地输出信息，一段时间后，就出报出这个错。个人理解的原因是console输出信息过多导致，虽不影响Debug，但不时弹出对话框还是让人很不舒服。</span><br /> <span style=\"font-size:14px;\">　　临时的解决方案是，在去掉Fixed width console的勾选框后，手动定期Clear Console。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/253.html\">Eclipse的IOConsole Updater error解决方法</a></p>","descriptionType":"html","publishedDate":"Tue, 13 Aug 2013 08:46:38 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/08/IOConsole_Updater_error.png","linkMd5":"b86ab108363c05c48003ba80cfbe50bf","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn35@2020_6/2020/08/25/00-30-54-891_62210a71b454a52a.webp","destWidth":534,"destHeight":472,"sourceBytes":15570,"destBytes":32322,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/08/IOConsole_Updater_error.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn35@2020_6/2020/08/25/00-30-54-891_62210a71b454a52a.webp","https://teddysun.com/wp-content/uploads/2013/08/IOConsole_Updater_set.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn87@2020_5/2020/08/25/00-30-59-283_eaba90d86a72a671.webp"},"publishedOrCreatedDate":1598315426741},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Notepad++插件TextFX的下载和使用","link":"https://teddysun.com/?p=252","description":"<p><a href=\"https://teddysun.com/252.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/08/notepad.gif\" alt=\"Notepad++\" title=\"Notepad++插件TextFX的下载和使用\" class=\"aligncenter\" style=\"height:auto;width:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　面对着凌乱的xml或html代码，如何将其整齐的格式化？除了可以在Visual studio和Dreamweaver中格式化外，还有一种选择就是使用Notepad++插件TextFX来做到。</span><br /> <span style=\"font-size:14px;\">　　Notepad++是一款免费的开源的跨平台的代码编辑器。它支持包括中文在内的多国语言，功能强大。不仅可以实现语法高亮显示，也有语法折叠功能，并且支持宏以及扩充基本功能的外挂模组。代码高亮和标签选中后自动寻找闭合标签功能让敲代码变得更加方便。</span><br /> <span style=\"font-size:14px;\">　　但是默认最新版的Notepad++已经不带TextFX插件了，因此需要自己下载和安装才能使用。</span></p> \n<p> <span id=\"more-252\"></span> </p> \n<p> <span style=\"font-size:14px;\"><b>1、下载TextFX v0.26</b></span><br /> <span style=\"font-size:14px;\"><a href=\"http://sourceforge.net/projects/npp-plugins/files/TextFX/TextFX%20v0.26/TextFX.v0.26.unicode.bin.zip/download\" target=\"_blank\">点此下载TextFX</a></span></p> \n<p><span style=\"font-size:14px;\"><b>2、安装</b></span><br /> <span style=\"font-size:14px;\">将下载后的文件解压，得到NppTextFX.dll，将其复制到Notepad++安装目录下的plugins文件夹，重启即可。</span></p> \n<p><span style=\"font-size:14px;\"><b>3、关于Tidy</b></span><br /> <span style=\"font-size:14px;\">安装完插件TextFX后，还缺少一个TextFX的插件Tidy，所以TextFX的一部分功能还不能用。</span><br /> <span style=\"font-size:14px;\">Tidy的下载地址很难找，但在旧版的Notepad++ v5.9里还有这个插件libTidy.dll，因此需先下载Notepad++ v5.9，地址：<a href=\"http://download.tuxfamily.org/notepadplus/5.9/npp.5.9.bin.zip\" target=\"_blank\"><span style=\"font-family:Courier New;\">http://download.tuxfamily.org/notepadplus/5.9/npp.5.9.bin.zip</span></a></span><br /> <span style=\"font-size:14px;\">将Notepad++ v5.9的zip包解压后，进入plugins\\Config文件夹，将tidy文件夹复制到新版的Notepad++安装目录下的plugins\\Config文件夹即可。</span></p> \n<p><span style=\"font-size:14px;\"><b>4、使用TextFX</b></span><br /> <span style=\"font-size:14px;\">1）删除程序空行&nbsp;</span><br /> <span style=\"font-size:14px;\">选择相应的文本</span><br /> <span style=\"font-size:14px;\">点击TextFX —&gt; TextFX Edit —&gt; Delete Blank Lines后，删除选中文本内的空行</span><br /> <span style=\"font-size:14px;\">将选中文字的多个连续空格转换成一个空格。</span><br /> <span style=\"font-size:14px;\">点击TextFX —&gt; TextFX Edit —&gt; Delete Surplus Blank Lines&nbsp;</span></p> \n<p><span style=\"font-size:14px;\">2）整理xml格式</span><br /> <span style=\"font-size:14px;\">选中所有文本，将未格式化的xml文件按照规格缩进</span><br /> <span style=\"font-size:14px;\">点击TextFX—&gt;HTML Tidy—&gt;Tidy: Reindent XML</span><br /> <img src=\"https://teddysun.com/wp-content/uploads/2013/08/TextFX.png\" alt=\"TextFX\" class=\"left\" /></p> \n<p><span style=\"font-size:14px;\">3）改变字符大小写</span><br /> <span style=\"font-size:14px;\">选择相应的文本</span><br /> <span style=\"font-size:14px;\">点击TextFX —&gt; TextFX Characters, 可以选择如下几种形式：</span><br /> <span style=\"font-size:14px;\">UPPER CASE 全部大写&nbsp;</span><br /> <span style=\"font-size:14px;\">lower case 全部小写&nbsp;</span><br /> <span style=\"font-size:14px;\">Proper Case 首字大写&nbsp;</span><br /> <span style=\"font-size:14px;\">Sentense case 句子模式&nbsp;</span><br /> <span style=\"font-size:14px;\">iNVERT cASE 首字小写，其他大写&nbsp;</span></p> \n<p><span style=\"font-size:14px;\">4）去掉文本中的HTML元素&nbsp;</span><br /> <span style=\"font-size:14px;\">选择HTML元素</span><br /> <span style=\"font-size:14px;\">点击TextFX —&gt; TextFX Convert —&gt; Strip HTML tags table tabs</span></p> \n<p><span style=\"font-size:14px;\">5）转换为HTML实体&nbsp;</span><br /> <span style=\"font-size:14px;\">即把“&lt;”转换成“&amp;lt;”、把“&gt;”转换成 “&amp;gt;”。</span><br /> <span style=\"font-size:14px;\">选择相应的文本</span><br /> <span style=\"font-size:14px;\">点击TextFX —&gt; TextFX Convert —&gt; Encode HTML (&amp;&lt;&gt;”)&nbsp;</span></p> \n<p><span style=\"font-size:14px;\">6）计数</span><br /> <span style=\"font-size:14px;\">对选中的文字记数，包括详细的文字总数，行数等。</span><br /> <span style=\"font-size:14px;\">选择相应的文本</span><br /> <span style=\"font-size:14px;\">点击TextFX Tools -&gt; Word Count</span></p> \n<p><span style=\"font-size:14px;color:blue;\"><b>参考链接：</b></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://zhibin07.iteye.com/blog/1287234\" target=\"_blank\">http://zhibin07.iteye.com/blog/1287234</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/252.html\">Notepad++插件TextFX的下载和使用</a></p>","descriptionType":"html","publishedDate":"Mon, 12 Aug 2013 09:06:56 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/08/notepad.gif","linkMd5":"3321d445f8fb74307ae5d6678622d068","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn80@2020_5/2020/08/25/00-30-51-886_cf45724bc7a1ca52.webp","destWidth":456,"destHeight":345,"sourceBytes":13997,"destBytes":14696,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/08/notepad.gif":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn80@2020_5/2020/08/25/00-30-51-886_cf45724bc7a1ca52.webp","https://teddysun.com/wp-content/uploads/2013/08/TextFX.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn79@2020_2/2020/08/25/00-30-59-128_d3e88577e3ae62ae.webp"},"publishedOrCreatedDate":1598315426754},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"告别","link":"https://teddysun.com/?p=548","description":"<p><a href=\"https://teddysun.com/548.html\"><img src=\"https://teddysun.com/wp-content/uploads/2019/goodbye.jpg\" title=\"告别\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"> 斟酌再三，还是觉得已经没有继续坚持下去的必要了。</span></p> \n<p> <span id=\"more-548\"></span> </p> \n<p><span style=\"font-size:14px;\"> 从 2018 年 8 月 8 日起，我的博客正式被墙了。恐怕这已经是相当仁慈的结果，毕竟从 2014 年初我就开始写关于 Shadowsocks 的教程和安装脚本了。我猜测，是因为从一开始我就使用了 CloudFlare 的服务，因此是不便直接对 IP 下手的，所以最终结果也是如我所料，被墙的方式是 DNS 污染。</span><br /> <span style=\"font-size:14px;\"> 也许已经有人发现，自从博客被墙后，我就不怎么更新了。原因无它，一个字足以形容，懒。还有就是有点心灰意冷。本想着反正已经被墙了，那就干脆那么放着吧。但是，有意料之中的事情还是发生了。</span><br /> <span style=\"font-size:14px;\"> 我承认 Toyo（逗比）的事情多少对我产生了一些影响，毕竟这位网友以前多少还是跟我有过沟通交流。从有限的接触来看，我认为他是一个热忱的人，有着强烈的学习欲望。一开始他也使用着我写的脚本，后来他觉得我写的脚本有不完善的地方，比如没有安装完成后的端口管理命令等等。于是跟我反映，而我觉得既然叫一键安装脚本，那自然是只管安装了，也懒得添加新功能。后来他就开始自学bash shell 开发，整合了我的脚本并添加了他自己想要的诸多功能。</span><br /> <span style=\"font-size:14px;\"> 他似乎在这条道路上有着用不完的激情，各种脚本和教程如雨后春笋，有了自己的用户群。而我所知道的，也仅限于此，直到他被人肉，被举报，被拘留，被起诉……</span></p> \n<p><span style=\"font-size:14px;\"> 有那么一瞬间，我回想起自己从 2014 年初坚持至今的心路历程。</span><br /> <span style=\"font-size:14px;\"> 我可能是中国最早开始写 Shadowsocks 一键安装脚本并公开出来的人（权当是自吹自擂吧）。当然，这一切源自于我自己的需求。以至于后来开源脚本并写了各种教程，也都是源于我在使用它。</span><br /> <span style=\"font-size:14px;\"> 我喜欢这个巧妙的工具，比 VPN 轻量，使用起来也并不复杂，所以我愿意去推广和分享。</span><br /> <span style=\"font-size:14px;\"> 但不好的事情还是发生了。很多时候我们无能为力。</span><br /> <span style=\"font-size:14px;\"> 2015年8月，Shadowsocks 的作者 clowwindy 被迫删除其 Github 上的所有关于 Shadowsocks 的代码并从此退出开发。</span><br /> <span style=\"font-size:14px;\"> 2017年7月，ShadowsocksR 的作者 breakwa11 遭到人肉和恶意攻击，删除代码，退出开发。</span><br /> <span style=\"font-size:14px;\"> 迄今（2019年5月）为止，随着主要维护者的相继退出，Shadowsocks libev 版成了一颗独苗，虽然缓慢却仍在不断地更新。</span><br /> <span style=\"font-size:14px;\"> Shadowsocks 发展至今，我觉得该到一键安装脚本退出历史舞台的时候了。原因就是，Shadowsocks 已经成为了大众化的工具，有着完善的服务端安装包，客户端以及各种 Docker 镜像等。</span><br /> <span style=\"font-size:14px;\"> 言及于此，是时候告别了。</span><br /> <span style=\"font-size:14px;\"> 青山不改，绿水长流。</span></p> \n<p><span style=\"font-size:14px;color:red;\"> PS.</span><br /> <span style=\"font-size:14px;\"> 仅仅是教程和文章删除，Github 上仍保留了 master 分支，实际上并不影响脚本使用，但是以后不会再更新了。</span></p> \n<p><span style=\"font-size:14px;color:red;\"> 2019 年 5 月 17 日更新</span><br /> <span style=\"font-size:14px;\"> 对于突然删除文章带来的不便感到万分抱歉！各位的每一条留言我都看过了，感谢理解，理解万岁！</span><br /> <span style=\"font-size:14px;\"> 另，此次告别并非本博客停止更新，以后还会写一些其他方面文章的。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/548.html\">告别</a></p>","descriptionType":"html","publishedDate":"Tue, 14 May 2019 12:56:14 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2019/goodbye.jpg","linkMd5":"4f9d828e9f574cd863476ec7b4fff774","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn29@2020_2/2020/08/25/00-30-51-624_ec48f576d24631be.webp","destWidth":600,"destHeight":400,"sourceBytes":223170,"destBytes":45530,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2019/goodbye.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn29@2020_2/2020/08/25/00-30-51-624_ec48f576d24631be.webp"},"publishedOrCreatedDate":1598315426740},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Apache索引（目录浏览）的那些事儿","link":"https://teddysun.com/?p=305","description":"<p><a href=\"https://teddysun.com/305.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/apache.jpg\" alt=\"Apache\" title=\"Apache索引（目录浏览）的那些事儿\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　在浏览一些镜像文件站的时候，会发现网站目录是可以浏览文件（夹）列表的。举两个例子：<a href=\"http://mirrors.163.com/\" target=\"_blank\">网易开源镜像</a>；<a href=\"http://releases.ubuntu.com/\" target=\"_blank\">Ubuntu</a>。只要 Web 服务器是基于 Apache 的网站都可以开启或禁止索引（目录浏览），那么如何实现禁止和开启显示目录索引呢？</span></p> \n<p> <span id=\"more-305\"></span> </p> \n<p> <span style=\"font-size:14px;color:red;\"><strong>一、禁止 Apache 显示目录索引</strong></span><br /> <span style=\"font-size:14px;\"><strong>方法1、修改Apache配置文件[httpd.conf]</strong></span><br /> <span style=\"font-size:14px;\">（1）目录配置</span></p> \n<pre class=\"prettyprint lang-bsh\">&lt;Directory /home/www/teddysun\"&gt;\n#Options Indexes FollowSymLinks\nOptions FollowSymLinks\nAllowOverride None\nOrder allow,deny\nAllow from all\n&lt;/Directory&gt;</pre> \n<p><span style=\"font-size:14px;\">将 Options Indexes FollowSymLinks 改成 Options FollowSymLinks 即可以禁止 Apache 显示该目录结构。</span><br /> <span style=\"font-size:14px;\">解释：Indexes 的作用就是当该目录下没有指定 index.html 文件时，就显示目录结构，去掉 Indexes ，Apache 就不会显示该目录的列表了。</span></p> \n<p><span style=\"font-size:14px;\">（2）虚拟机配置</span></p> \n<pre class=\"prettyprint lang-bsh\">&lt;virtualhost *:80&gt;\nServerName  domain\nServerAlias  domains \nDocumentRoot  /home/www/teddysun\nCustomLog /home/www/teddysun/logs/access.log combined\nDirectoryIndex index.php index.html\n&lt;Directory /home/www/teddysun&gt;\nOptions +Includes -Indexes\nAllowOverride All\nOrder Deny,Allow\nAllow from All\n&lt;/Directory&gt;\n&lt;/virtualhost&gt;</pre> \n<p><span style=\"font-size:14px;\">此处，在Indexes前面加上 – 符号也是可以禁止 Apache 显示该目录结构。</span><br /> <span style=\"font-size:14px;\">解释：在Indexes前，加 + 代表允许目录浏览；加 – 代表禁止目录浏览。</span></p> \n<p><span style=\"font-size:14px;\"><strong>方法2、修改.htaccess文件</strong></span><br /> <span style=\"font-size:14px;\">在网站根目录修改 .htaccess 文件，增加如下代码（若无.htaccess 文件则新建）：</span></p> \n<pre class=\"prettyprint lang-bsh\">&lt;Files *&gt;\nOptions -Indexes\n&lt;/Files&gt;</pre> \n<p><span style=\"font-size:14px;\">解释：在Indexes前，加 + 代表允许目录浏览；加 – 代表禁止目录浏览。</span></p> \n<p> <span style=\"font-size:14px;color:red;\"><strong>二、开启并定制 Apache 显示目录索引样式</strong></span></p> \n<p><span style=\"font-size:14px;\"><strong>（1）修改Apache配置文件[httpd.conf]</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">&lt;Directory /home/www/teddysun\"&gt;\nOptions Indexes FollowSymLinks\nIndexStyleSheet \"/css/style.css\"\nIndexOptions FancyIndexing HTMLTable ScanHTMLTitles FoldersFirst NameWidth=85 DescriptionWidth=128 IconWidth=16 IconHeight=16 VersionSort Charset=UTF-8\nAllowOverride all\nOrder allow,deny\nAllow from all\n&lt;/Directory&gt;</pre> \n<p><span style=\"font-size:14px;\">解释：在 Options 选项中写入 Indexes，即是打开了目录浏览功能。CentOS6中通过yum安装的 Apache 默认是打开了目录浏览的，但是使用浏览器访问首页，却不能显示出目录，原因在于/etc/httpd/conf.d/welcome.conf文件中的 Indexes 前面有个 – 符号，即 Apache 默认禁止了首页的目录浏览功能。</span></p> \n<p><span style=\"font-size:14px;\"><strong>（2）自定义索引（目录浏览）样式</strong></span><br /> <span style=\"font-size:14px;\">上一步的 IndexOptions 选项可以自定义索引（目录浏览）样式，如下：</span><br /> <span style=\"font-size:14px;\">FancyIndexing 开启目录浏览修饰</span><br /> <span style=\"font-size:14px;\">HTMLTable 此选择与FancyIndexing一起构建一个简单的表来进行目录浏览修饰。</span><br /> <span style=\"font-size:14px;\">ScanHTMLTitles 搜索HTML标题</span><br /> <span style=\"font-size:14px;\">FoldersFirst 目录优先排在前面</span><br /> <span style=\"font-size:14px;\">NameWidth=85 表示文件名可以最多显示85个英文字符</span><br /> <span style=\"font-size:14px;\">DescriptionWidth=128 表示描述可以显示的字符数</span><br /> <span style=\"font-size:14px;\">IconWidth=16 Icon的宽度（像素）</span><br /> <span style=\"font-size:14px;\">IconHeight=16 Icon的高度（像素）</span><br /> <span style=\"font-size:14px;\">VersionSort 版本排序，如果没有此项，将按照拼音顺序排序</span><br /> <span style=\"font-size:14px;\">Charset=UTF-8 字符集</span></p> \n<p><span style=\"font-size:14px;\">其他诸如：</span><br /> <span style=\"font-size:14px;\">AddAltClass、IconsAreLinks、IgnoreCase、IgnoreClient、ShowForbidden、SuppressColumnSorting、SuppressDescription、SuppressHTMLPreamble、SuppressIcon、SuppressLastModified、SuppressRules、SuppressSize、TrackModified、Type等请阅读参考链接。</span></p> \n<p><span style=\"font-size:14px;color:blue;\"><strong>参考链接：</strong></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://httpd.apache.org/docs/2.4/en/mod/mod_autoindex.html#indexoptions\" target=\"_blank\">http://httpd.apache.org/docs/2.4/en/mod/mod_autoindex.html#indexoptions</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/305.html\">Apache索引（目录浏览）的那些事儿</a></p>","descriptionType":"html","publishedDate":"Mon, 18 Nov 2013 09:55:42 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/04/apache.jpg","linkMd5":"c17b940cd638d4e3b7cd8dcfda50f449","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn39@2020_1/2020/08/25/00-30-53-276_972f55ebabde1afa.webp","destWidth":370,"destHeight":313,"sourceBytes":39337,"destBytes":11132,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/04/apache.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn39@2020_1/2020/08/25/00-30-53-276_972f55ebabde1afa.webp"},"publishedOrCreatedDate":1598315426738},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"介绍几款 Windows DD 镜像","link":"https://teddysun.com/?p=545","description":"<p><a href=\"https://teddysun.com/545.html\"><img class=\"aligncenter\" style=\"width: auto; height: auto;\" title=\"介绍几款 Windows DD 镜像\" src=\"https://teddysun.com/wp-content/uploads/2018/win_linux.jpg\" /></a></p> \n<p><span style=\"font-size: 14px;\">前文介绍《<a href=\"https://teddysun.com/544.html\" target=\"_blank\" rel=\"noopener noreferrer\">如何制作 Windows Server 2019 的 DD 镜像</a>》，于是在一段时间里制作了以下 9 种 Windows Server DD 镜像，按照时间顺序由新到旧，分别是：</span><br /> <span style=\"font-size: 14px;\">1，中文版 Windows Server 2019 Datacenter</span><br /> <span style=\"font-size: 14px;\">2，英文版 Windows Server 2019 Datacenter</span><br /> <span style=\"font-size: 14px;\">3，日文版 Windows Server 2019 Datacenter</span><br /> <span style=\"font-size: 14px;\">4，中文版 Windows Server 2016 Datacenter</span><br /> <span style=\"font-size: 14px;\">5，英文版 Windows Server 2016 Datacenter</span><br /> <span style=\"font-size: 14px;\">6，日文版 Windows Server 2016 Datacenter</span><br /> <span style=\"font-size: 14px;\">7，中文版 Windows Server 2012 R2 Datacenter</span><br /> <span style=\"font-size: 14px;\">8，英文版 Windows Server 2012 R2 Datacenter</span><br /> <span style=\"font-size: 14px;\">9，日文版 Windows Server 2012 R2 Datacenter</span></p> \n<p><span id=\"more-545\"></span></p> \n<p><span style=\"font-size: 14px;\">以上镜像按顺序，分别基于以下 MSDN 原版镜像制作完成：</span><br /> <span style=\"font-size: 14px;\">1，cn_windows_server_2019_x64_dvd_2d80e042.iso</span><br /> <span style=\"font-size: 14px;\">2，en_windows_server_2019_x64_dvd_3c2cf1202.iso</span><br /> <span style=\"font-size: 14px;\">3，ja_windows_server_2019_x64_dvd_d7f8ec54.iso</span><br /> <span style=\"font-size: 14px;\">4，cn_windows_server_2016_vl_x64_dvd_11636695.iso</span><br /> <span style=\"font-size: 14px;\">5，en_windows_server_2016_vl_x64_dvd_11636701.iso</span><br /> <span style=\"font-size: 14px;\">6，ja_windows_server_2016_vl_x64_dvd_11645964.iso</span><br /> <span style=\"font-size: 14px;\">7，cn_windows_server_2012_r2_vl_with_update_x64_dvd_6052729.iso</span><br /> <span style=\"font-size: 14px;\">8，en_windows_server_2012_r2_vl_with_update_x64_dvd_6052766.iso</span><br /> <span style=\"font-size: 14px;\">9，ja_windows_server_2012_r2_vl_with_update_x64_dvd_6052800.iso</span></p> \n<h3><span style=\"color: red;\">镜像具备以下特点</span></h3> \n<p><span style=\"font-size: 14px;\">1，集成 virtio 驱动以及 Intel 的网卡驱动，因此适用于大部分 KVM 的 VPS 以及 Kimsufi 服务器</span><br /> <span style=\"font-size: 14px;\">2，无需 VNC 交互直接无人值守安装，DD 完成即可远程登录桌面</span><br /> <span style=\"font-size: 14px;\">3，基于 VOL 版制作，因此可用 KMS 方式激活系统</span><br /> <span style=\"font-size: 14px;\">4，关闭 Ctrl + Alt + Del 快捷键登录方式</span><br /> <span style=\"font-size: 14px;\">5，关闭服务器管理器开机自启动</span><br /> <span style=\"font-size: 14px;\">6，关闭 IE 安全增强配置</span><br /> <span style=\"font-size: 14px;\">7，开启 Windows 远程桌面</span><br /> <span style=\"font-size: 14px;\">8，关闭 Windows 自带防火墙</span><br /> <span style=\"font-size: 14px;\">9，其他基于 Dism++ 自带的一些系统优化，如去掉快捷方式小箭头等</span></p> \n<h3><span style=\"color: red;\">安装方式</span></h3> \n<p><span style=\"font-size: 14px;\">目前经过测试已在腾讯云，Vultr，DigitalOcean，Cloudcone，Kimsufi 上成功安装。</span></p> \n<p><span style=\"font-size: 14px;\">1，在基于 virtio 的 KVM 上安装过程</span><br /> <span style=\"font-size: 14px;\">选 CentOS 7 或 Debian 9 系统。内存不能太小，建议 4GB 起步。用 root 用户 ssh 进去后执行以下的命令，然后静静等待即可。</span><br /> <span style=\"font-size: 14px;\">安装速度取决于网络下载镜像的速度，基本上等待 15 – 60 分钟后，再次打开 VNC 就能看到熟悉的 Windows 登录界面了。</span></p> \n<pre class=\"prettyprint lang-bsh\">wget -qO DebianNET.sh qiu.sh/dd &amp;&amp; bash DebianNET.sh -dd \"DD download URL\"</pre> \n<p><span style=\"font-size: 14px;\">注：DebianNET.sh 脚本由 Vicer 开发，参考网址：<a href=\"https://moeclub.org\" target=\"_blank\" rel=\"noopener noreferrer\">https://moeclub.org</a></span></p> \n<p><span style=\"font-size: 14px;\">2，在 Kimsufi 的服务器上安装过程</span><br /> <span style=\"font-size: 14px;\">进入救援模式后，用 root 用户 ssh 进去后执行以下的命令，然后静静等待即可。</span></p> \n<pre class=\"prettyprint lang-bsh\">wget -O- \"DD download URL\" | gunzip | dd of=/dev/sda</pre> \n<p><span style=\"font-size: 14px;\">注：关于 Kimsufi 的服务器如何进入救援模式，网上有很多图文教程，一搜便知。</span></p> \n<p><span style=\"font-size: 14px; color: red;\"><strong>远程桌面的默认用户名和密码</strong></span><br /> <span style=\"font-size: 14px;\">用户名: administrator</span><br /> <span style=\"font-size: 14px;\">密码: Password147</span></p> \n<p><span style=\"font-size: 14px;\"><span style=\"color: red;\">注意：</span>请在安装完成后登录远程桌面，立即进行 Windows 自动更新以及修改 Administrator 的密码。</span></p> \n<p><span style=\"font-size: 14px;\">镜像文件名，大小，SHA-1 和 MD5 信息如下</span><br /> <span style=\"font-size: 14px;\">1，cn_windows2019.gz, 4.14GB, 7c54a1b070457c191622cdafffb8766718d931c6, 42c9d56eab7cef089a88476d69f2bb54</span><br /> <span style=\"font-size: 14px;\">2，en_windows2019.gz, 3.66GB, 355140cd63be0b4bc2c1231502a1e333ad0051d2, 1addafe1352ee50f0663641c8334b61a</span><br /> <span style=\"font-size: 14px;\">3，ja_windows2019.gz, 4.07GB, d602c215fbb28cc1b7d856f0d7133823bd41c771, c0ebb59138e2a2e423f45a01c565bb65</span><br /> <span style=\"font-size: 14px;\">4，cn_windows2016.gz, 4.21GB, e5327ad1858d44428be9f14b7e636eb11e98bda6, 2ce003299e940c1327e70340e38599b8</span><br /> <span style=\"font-size: 14px;\">5，en_windows2016.gz, 4.05GB, f74f0725c1673b64ab2271d570980b7b82e562b3, cebad56bc1da0f469c4fa6363bf7fa58</span><br /> <span style=\"font-size: 14px;\">6，ja_windows2016.gz, 4.12GB, 709fceb1dba296b04c385bfa60190dcf16187583, c4c000d02901d1eec10d53ee97e743ab</span><br /> <span style=\"font-size: 14px;\">7，cn_windows2012r2.gz, 4.51GB, 8d9f3966e251e2f31ddfd3d06f00436fa002f774, c91d8181b2af823d35c54d2c2568b50e</span><br /> <span style=\"font-size: 14px;\">8，en_windows2012r2.gz, 3.72GB, 81d93cb457abe13d455d639f957f826a4893aa33, 6138ebc7a083c5ca192e8dfe9bfcee93</span><br /> <span style=\"font-size: 14px;\">9，ja_windows2012r2.gz, 4.45GB, 8aae0fb972358a445cb3d44677b36e999e385bad, 6abab80539c48a7f5c147f93af4e974e</span></p> \n<h3><span style=\"color: red;\">下载链接(DD download URL)</span></h3> \n<p><span style=\"font-size: 14px;\">链接地址1：</span><br /> <a href=\"https://fr1.teddyvps.com/iso/cn_windows2019.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://fr1.teddyvps.com/iso/cn_windows2019.gz</span></a><br /> <a href=\"https://fr1.teddyvps.com/iso/en_windows2019.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://fr1.teddyvps.com/iso/en_windows2019.gz</span></a><br /> <a href=\"https://fr1.teddyvps.com/iso/ja_windows2019.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://fr1.teddyvps.com/iso/ja_windows2019.gz</span></a><br /> <a href=\"https://fr1.teddyvps.com/iso/cn_windows2016.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://fr1.teddyvps.com/iso/cn_windows2016.gz</span></a><br /> <a href=\"https://fr1.teddyvps.com/iso/en_windows2016.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://fr1.teddyvps.com/iso/en_windows2016.gz</span></a><br /> <a href=\"https://fr1.teddyvps.com/iso/ja_windows2016.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://fr1.teddyvps.com/iso/ja_windows2016.gz</span></a><br /> <a href=\"https://fr1.teddyvps.com/iso/cn_windows2012r2.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://fr1.teddyvps.com/iso/cn_windows2012r2.gz</span></a><br /> <a href=\"https://fr1.teddyvps.com/iso/en_windows2012r2.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://fr1.teddyvps.com/iso/en_windows2012r2.gz</span></a><br /> <a href=\"https://fr1.teddyvps.com/iso/ja_windows2012r2.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://fr1.teddyvps.com/iso/ja_windows2012r2.gz</span></a></p> \n<p><span style=\"font-size: 14px;\">链接地址2（感谢<a href=\"https://www.yuntu.ca/\" target=\"_blank\" rel=\"noopener noreferrer\">云图小镇</a>的分流下载）：</span><br /> <a href=\"https://mirrors.yuntu.ca/teddysun/cn_windows2019.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://mirrors.yuntu.ca/teddysun/cn_windows2019.gz</span></a><br /> <a href=\"https://mirrors.yuntu.ca/teddysun/en_windows2019.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://mirrors.yuntu.ca/teddysun/en_windows2019.gz</span></a><br /> <a href=\"https://mirrors.yuntu.ca/teddysun/ja_windows2019.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://mirrors.yuntu.ca/teddysun/ja_windows2019.gz</span></a><br /> <a href=\"https://mirrors.yuntu.ca/teddysun/cn_windows2016.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://mirrors.yuntu.ca/teddysun/cn_windows2016.gz</span></a><br /> <a href=\"https://mirrors.yuntu.ca/teddysun/en_windows2016.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://mirrors.yuntu.ca/teddysun/en_windows2016.gz</span></a><br /> <a href=\"https://mirrors.yuntu.ca/teddysun/ja_windows2016.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://mirrors.yuntu.ca/teddysun/ja_windows2016.gz</span></a><br /> <a href=\"https://mirrors.yuntu.ca/teddysun/cn_windows2012r2.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://mirrors.yuntu.ca/teddysun/cn_windows2012r2.gz</span></a><br /> <a href=\"https://mirrors.yuntu.ca/teddysun/en_windows2012r2.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://mirrors.yuntu.ca/teddysun/en_windows2012r2.gz</span></a><br /> <a href=\"https://mirrors.yuntu.ca/teddysun/ja_windows2012r2.gz\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://mirrors.yuntu.ca/teddysun/ja_windows2012r2.gz</span></a></p> \n<p><span style=\"font-size: 14px;\">KMS 客户端安装密钥</span><br /> <a href=\"https://docs.microsoft.com/zh-cn/windows-server/get-started/kmsclientkeys\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"font-size: 14px;\">https://docs.microsoft.com/zh-cn/windows-server/get-started/kmsclientkeys</span></a></p> \n<h3><span style=\"color: red;\">写在最后</span></h3> \n<p><span style=\"font-size: 14px;\">1，这些镜像仅出于学习目的制作，如你需要长期使用，请使用正版 Windows key 激活系统。</span><br /> <span style=\"font-size: 14px;\">2，镜像全部是由原版 MSDN 制作完成，本人可以保证没有夹带任何私货，若不相信本人者，请不要使用。</span><br /> <span style=\"font-size: 14px;\">3，在某些基于 KVM 的 VPS 上安装完成后，比如 Vultr，DigitalOcean，第一次登录远程桌面，你会看到一个黑窗口一闪而过，那是自动识别分区的命令在执行。因此，无需你手动扩展，硬盘已自动扩展成功。</span><br /> <span style=\"font-size: 14px;\">4，Windows Server 2019 的 DD 镜像为 15GB 的 VHD，其余皆为 12GB 的 VHD，有时在某些服务器上安装成功后需要手动扩展磁盘，比如 Kimsufi。</span><br /> <span style=\"font-size: 14px;\">5，使用 Windows DD 镜像有可能会违反某些商家的 TOS，如果因为使用本人制作的镜像而导致被商家惩罚，本人概不负责。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/545.html\">介绍几款 Windows DD 镜像</a></p>","descriptionType":"html","publishedDate":"Sun, 28 Oct 2018 02:52:19 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2018/win_linux.jpg","linkMd5":"39e04f2b79e5593c8e6ffea333a47035","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn43@2020_2/2020/08/25/00-30-54-541_bda9e586d38c5fe5.webp","destWidth":800,"destHeight":401,"sourceBytes":70573,"destBytes":13740,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2018/win_linux.jpg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn43@2020_2/2020/08/25/00-30-54-541_bda9e586d38c5fe5.webp"},"publishedOrCreatedDate":1598315426741},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"MySQL性能优化的简单说明","link":"https://teddysun.com/?p=424","description":"<p><a href=\"https://teddysun.com/424.html\"><img src=\"https://teddysun.com/wp-content/uploads/2015/mysql.png\" title=\"MySQL性能优化的简单说明\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">MySQL 作为 LAMP 组件中的重要一环，在网站架构中担当关于数据处理的重任。作为目前流行最为广泛的开源数据库，网络上已经有相当多的各种优化教程。本文将试着从改善 MySQL 配置入手，进一步提升 MySQL 的性能。</span><br /> <span style=\"font-size:14px;\">关于如何优化数据库结构及 SQL 语句不在本次讨论范围之内。</span><br /> <span style=\"font-size:14px;\">MySQL 性能优化我打算分为三个部分，一是物理硬件的优化，二是 MySQL 安装时的编译优化，三是 MySQL 的配置文件 my.cnf 的优化。</span></p> \n<p> <span id=\"more-424\"></span> </p> \n<p> <span style=\"font-size:14px;\"><strong>一、物理硬件的优化</strong></span><br /> <span style=\"font-size:14px;\">磁盘 I/O 是制约 MySQL 性能的最大因素之一。</span><br /> <span style=\"font-size:14px;\">采用 SSD 的服务器肯定会比普通 HDD 硬盘性能要好；采用 RAID10 的肯定要比单盘的性能要好。</span><br /> <span style=\"font-size:14px;\">所谓物理硬件的优化，其实也就是服务器（VPS）硬件的堆砌。更多的内存，更快的磁盘，更强的 CPU 无疑就是最佳的。</span></p> \n<p><span style=\"font-size:14px;\"><strong>二、MySQL 安装时的编译优化</strong></span><br /> <span style=\"font-size:14px;\">一般情况下不建议直接 yum 安装 MySQL ，一来不能定制功能，二来版本比较老。所以我一般会采取编译安装的方式。</span><br /> <span style=\"font-size:14px;\">源码编译安装的前提条件（依赖包）：</span><br /> <span style=\"font-size:14px;\">1、CMake。官网：<a href=\"http://www.cmake.org/\" target=\"_blank\">http://www.cmake.org/</a>&nbsp;</span><br /> <span style=\"font-size:14px;\">2、GCC，A working ANSI C++ compiler. GCC 4.2.1 or later。官网：<a href=\"http://www.gnu.org/software/gcc/\" target=\"_blank\">http://www.gnu.org/software/gcc/</a></span><br /> <span style=\"font-size:14px;\">3、bison，2.1 or newer。官网：<a href=\"http://www.gnu.org/software/bison/\" target=\"_blank\">http://www.gnu.org/software/bison/</a></span><br /> <span style=\"font-size:14px;\">4、m4。官网：<a href=\"http://www.gnu.org/software/m4/\" target=\"_blank\">http://www.gnu.org/software/m4/</a></span><br /> <span style=\"font-size:14px;\">5、tar。官网：<a href=\"http://www.gnu.org/software/tar/\" target=\"_blank\">http://www.gnu.org/software/tar/</a></span></p> \n<p><span style=\"font-size:14px;color:#003399;\">编译参数：</span><br /> <span style=\"font-size:14px;\">MySQL 5.5.x</span><br /> <span style=\"font-size:14px;\"><a href=\"http://dev.mysql.com/doc/refman/5.5/en/source-configuration-options.html\" target=\"_blank\">http://dev.mysql.com/doc/refman/5.5/en/source-configuration-options.html</a></span></p> \n<p><span style=\"font-size:14px;\">MySQL 5.6.x</span><br /> <span style=\"font-size:14px;\"><a href=\"http://dev.mysql.com/doc/refman/5.6/en/source-configuration-options.html\" target=\"_blank\">http://dev.mysql.com/doc/refman/5.6/en/source-configuration-options.html</a></span></p> \n<p><span style=\"font-size:14px;\"><a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP 一键安装脚本</a>里对 MySQL 编译的参数如下：</span><br /> <span style=\"font-size:14px;\">-DCMAKE_INSTALL_PREFIX=/usr/local/mysql&nbsp;</span><br /> <span style=\"font-size:14px;\">-DMYSQL_UNIX_ADDR=/tmp/mysql.sock&nbsp;</span><br /> <span style=\"font-size:14px;\">-DDEFAULT_CHARSET=utf8&nbsp;</span><br /> <span style=\"font-size:14px;\">-DDEFAULT_COLLATION=utf8_general_ci&nbsp;</span><br /> <span style=\"font-size:14px;\">-DWITH_EXTRA_CHARSETS=complex&nbsp;</span><br /> <span style=\"font-size:14px;\">-DWITH_INNOBASE_STORAGE_ENGINE=1&nbsp;</span><br /> <span style=\"font-size:14px;\">-DWITH_READLINE=1&nbsp;</span><br /> <span style=\"font-size:14px;\">-DENABLED_LOCAL_INFILE=1&nbsp;</span><br /> <span style=\"font-size:14px;\">-DWITH_PARTITION_STORAGE_ENGINE=1&nbsp;</span><br /> <span style=\"font-size:14px;\">-DWITH_FEDERATED_STORAGE_ENGINE=1&nbsp;</span><br /> <span style=\"font-size:14px;\">-DWITH_BLACKHOLE_STORAGE_ENGINE=1&nbsp;</span><br /> <span style=\"font-size:14px;\">-DWITH_MYISAM_STORAGE_ENGINE=1&nbsp;</span><br /> <span style=\"font-size:14px;\">-DWITH_EMBEDDED_SERVER=1</span></p> \n<p><span style=\"font-size:14px;\">由于 -DWITH_DEBUG 默认就是 OFF 状态，所以也无需特别指定此参数。</span></p> \n<p><span style=\"font-size:14px;\"><strong>三、MySQL 的配置文件 my.cnf 的优化</strong></span><br /> <span style=\"font-size:14px;color:#003399;\">配置文件：</span><br /> <span style=\"font-size:14px;\">MySQL 5.5.x</span><br /> <span style=\"font-size:14px;\"><a href=\"https://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html\" target=\"_blank\">https://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html</a></span></p> \n<p><span style=\"font-size:14px;\">MySQL 5.6.x</span><br /> <span style=\"font-size:14px;\"><a href=\"https://dev.mysql.com/doc/refman/5.6/en/server-system-variables.html\" target=\"_blank\">https://dev.mysql.com/doc/refman/5.6/en/server-system-variables.html</a></span></p> \n<p><span style=\"font-size:14px;\">结合 <a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP 一键安装脚本</a>的 my.cnf 文件，只列出其中 <span style=\"color:#003399;\">[mysqld]</span> 段落中的内容，其他段落内容对 MySQL 运行性能影响甚微，因而姑且忽略。</span><br /> <span style=\"font-size:14px;\">介绍一些优化参数。</span><br /> <span style=\"font-size:14px;\">[mysqld]</span><br /> <span style=\"font-size:14px;\">port = 3306</span><br /> <span style=\"font-size:14px;\">socket = /tmp/mysql.sock</span><br /> <span style=\"font-size:14px;color:#003399;\">skip-external-locking</span><br /> <span style=\"font-size:14px;\">#避免 MySQL 的外部锁定，减少出错几率增强稳定性。</span></p> \n<p><span style=\"font-size:14px;color:#003399;\">key_buffer_size = 16M</span><br /> <span style=\"font-size:14px;\">#指定用于索引的缓冲区大小，增加它可得到更好的索引处理性能。16M适用于 512MB内存，对于内存在4GB左右的服务器该参数可设置为256M，依此类推即可。注意：该参数值设置的过大反而会是服务器整体效率降低！</span></p> \n<p><span style=\"font-size:14px;color:#003399;\">max_allowed_packet = 1M</span><br /> <span style=\"font-size:14px;\">#MySQL 根据此配置会限制 server 接受的数据包大小。</span></p> \n<p><span style=\"font-size:14px;color:#003399;\">table_open_cache = 64</span><br /> <span style=\"font-size:14px;\">#指定表高速缓存的大小。每当MySQL访问一个表时，如果在表缓冲区中还有空间，该表就被打开并放入其中，这样可以更快地访问表内容。注意，不能盲目地把table_open_cache设置成很大的值。如果设置得太高，可能会造成文件描述符不足，从而造成性能不稳定或者连接失败。</span><br /> <span style=\"font-size:14px;\">64 适用于 512MB 内存，1GB 内存则可以设置成 128，依此类推即可。</span></p> \n<p><span style=\"font-size:14px;color:#003399;\">sort_buffer_size = 512K</span><br /> <span style=\"font-size:14px;\">#查询排序时所能使用的缓冲区大小。注意：该参数对应的分配内存是每连接独占，如果有100个连接，那么实际分配的总共排序缓冲区大小为100 × 512K ＝ 50MB。</span><br /> <span style=\"font-size:14px;\">512K 适用于 512MB 内存，1GB 内存则可以设置成 1M，依此类推即可。</span></p> \n<p><span style=\"font-size:14px;color:#003399;\">net_buffer_length = 8K</span><br /> <span style=\"font-size:14px;\">#初始化server 接受的数据包大小，当需要的时候再由 max_allowed_packet 控制增长的大小。注意：该参数值设置的范围只能为1 – 1024K。</span></p> \n<p><span style=\"font-size:14px;color:#003399;\">read_buffer_size = 256K</span><br /> <span style=\"font-size:14px;\">#读查询操作所能使用的缓冲区大小。和 sort_buffer_size 一样，该参数对应的分配内存也是每连接独享。</span><br /> <span style=\"font-size:14px;\">256K 适用于 512MB 内存，1GB 内存则可以设置成 512K，依此类推即可。</span></p> \n<p><span style=\"font-size:14px;color:#003399;\">read_rnd_buffer_size = 512K</span><br /> <span style=\"font-size:14px;\">#查询操作多表所能使用的缓冲区大小。设置较大的值可以有效提升 ORDER BY 的性能。和 sort_buffer_size 一样，该参数对应的分配内存也是每连接独享。</span><br /> <span style=\"font-size:14px;\">512K适用于 512MB 内存，1GB 内存则可以设置成 1M，依此类推即可。</span></p> \n<p><span style=\"font-size:14px;color:#003399;\">myisam_sort_buffer_size = 8M</span><br /> <span style=\"font-size:14px;\">#MyISAM 排序所能使用的缓冲区大小。</span><br /> <span style=\"font-size:14px;\">8M 适用于 512MB 内存，1GB 内存则可以设置成 16M，依此类推即可。</span></p> \n<p><span style=\"font-size:14px;color:#003399;\">max_connections = 256</span><br /> <span style=\"font-size:14px;\">#指定MySQL允许的最大连接进程数。如果在访问时经常出现 Too Many Connections 的错误提示，则需要增大该参数值。</span><br /> <span style=\"font-size:14px;\">注意：该参数默认值为 151，最大可以设置为 100000</span><br /> <span style=\"font-size:14px;\">这里建议设置成内存的一半，比如 512MB 内存就设置成 256，依此类推。</span></p> \n<p><span style=\"font-size:14px;color:#003399;\"><strong>[写在最后]</strong></span><br /> <span style=\"font-size:14px;\">我发现所谓的 MySQL 优化大部分都是来自于官方文档的说明。</span><br /> <span style=\"font-size:14px;\">国内的教程要么是很老的，要么是随处转载的，几乎没有多大参考价值。</span><br /> <span style=\"font-size:14px;\">没有最优的配置文件，只有适合自己的配置。所以需要结合实际情况，比如内存大小，磁盘 I/O 状况来调整。</span><br /> <span style=\"font-size:14px;\"><a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP 一键脚本</a>默认的配置（默认是用于 512MB 内存的 VPS），肯定不是适合你的（是适合我的）。</span><br /> <span style=\"font-size:14px;\">而上面只是列举出几个比较重要的参数，更多的参数请参照官方网站。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/424.html\">MySQL性能优化的简单说明</a></p>","descriptionType":"html","publishedDate":"Mon, 13 Jul 2015 03:14:31 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2015/mysql.png","linkMd5":"a4edeb5d81534d1e490a762384a13966","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn43@2020_5/2020/08/25/00-30-53-891_2605f18ed60dab66.webp","destWidth":600,"destHeight":310,"sourceBytes":10445,"destBytes":11870,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2015/mysql.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn43@2020_5/2020/08/25/00-30-53-891_2605f18ed60dab66.webp"},"publishedOrCreatedDate":1598315426725},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"如何制作 Windows Server 2019 的 DD 镜像","link":"https://teddysun.com/?p=544","description":"<p><a href=\"https://teddysun.com/544.html\"><img src=\"https://teddysun.com/wp-content/uploads/2018/wallpaper.jpg\" title=\"如何制作 Windows Server 2019 的 DD 镜像\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">DD 命令是 Linux 下的磁盘读写常用命令。它可以将已有的硬盘镜像文件直接写到硬盘上。通过 DD 命令，我们可以把系统由 Linux 改造成 Windows，这样不仅能获得一个纯净的系统，而且也能省下不少费用。网上 DD 镜像文件有很多，但是鱼龙混杂，不是版本不合适，就是害怕有后门木马。所以求人不如求己，自己制作的镜像才是最好的。</span><br /> <span style=\"font-size:14px;\">下面以制作目前最新的 Windows Server 2019 系统的 DD 镜像为例，记录一下整个过程。</span></p> \n<p> <span id=\"more-544\"></span> </p> \n<h3> <span style=\"color:red;\">事前准备</span><br /> </h3> \n<p><span style=\"font-size:14px;\">1，MSDN 原版 Windows Server 2019 系统的 iso 文件。此处以英文版的 en_windows_server_2019_x64_dvd_3c2cf1202.iso 为例。</span><br /> <span style=\"font-size:14px;\">2，<a href=\"https://www.7-zip.org/\" target=\"_blank\">7zip</a></span><br /> <span style=\"font-size:14px;\">3，<a href=\"https://www.chuyu.me/zh-Hans/index.html\" target=\"_blank\">Dism++</a></span><br /> <span style=\"font-size:14px;\">4，<a href=\"https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/virtio-win-0.1.149-1/virtio-win-0.1.149.iso\" target=\"_blank\">virtio 驱动</a></span><br /> <span style=\"font-size:14px;\">5，一款支持 Hyper-V 的服务器（可选）</span></p> \n<h3> <span style=\"color:red;\">编辑镜像</span><br /> </h3> \n<p><span style=\"font-size:14px;\">1，使用 7zip 打开 en_windows_server_2019_x64_dvd_3c2cf1202.iso 并从中提取文件 install.wim，其路径位于 \\sources\\install.wim，将其单独解压到本地硬盘。此处假设为 D:\\install.wim。</span><br /> <span style=\"font-size:14px;\">2，新建一个目录，此处假设为 D:\\Win2019。将下载回来的 Dism++ 解压到一个单独目录下，根据系统的不同运行 Dism++x64.exe（64 位） 或 Dism++x86.exe （32位）</span><br /> <span style=\"font-size:14px;\">3，在打开的 Dism++ 界面里选择菜单，文件，挂载映像。在弹出的窗口里，第一个浏览那里，点击选择刚才解压出来的 D:\\install.wim，此时 Dism++ 会读出 install.wim 里包含的各个版本，我选择了 ServerDatacenter 版。记住不要选择只读模式，点击确定，等待映像挂载完毕。</span></p> \n<p><img title=\"dd Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/dd_windows_01.png\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\">4，挂载准备就绪后，点击打开会话，进入主界面。</span></p> \n<p><img title=\"dd Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/dd_windows_02.png\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\">5，将事前准备好的 virtio 驱动 iso 文件，此处下载回来的文件名为 virtio-win-0.1.149.iso，用 7zip 将之解压到 D:\\virtio-win-0.1.149。点击驱动管理，添加驱动。选择驱动所在的文件夹后，会自动安装驱动。在弹出窗口，点击确定。</span></p> \n<p><img title=\"dd Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/dd_windows_04.png\" style=\"width:auto;height:auto;\" /></p> \n<p><img title=\"dd Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/dd_windows_05.png\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\">6，如果要适配某些独立服务器比如 Kimsufi，需要手动安装 Intel 的网卡驱动。</span><br /> <span style=\"font-size:14px;\"><a href=\"https://downloadmirror.intel.com/25016/eng/PROWinx64.exe\" target=\"_blank\">点击下载</a>。下载后，用 7zip 打开该文件，将 PROWinx64.exe\\PRO1000\\Winx64\\NDIS65 目录复制出来备用。</span><br /> <span style=\"font-size:14px;\">然后需要对文件 e1c65x64.inf 魔改一下才能使用，内容如下，注意对比（<span style=\"color:red;\">此处为天坑，切记</span>）。</span></p> \n<pre class=\"prettyprint\">[Intel.NTamd64.10.0]\n; DisplayName                   Section        DeviceID\n; -----------                   -------        --------\n%E1502NC.DeviceDesc%            = E1502,       PCI\\VEN_8086&amp;DEV_1502\n%E1502NC.DeviceDesc%            = E1502,       PCI\\VEN_8086&amp;DEV_1502&amp;SUBSYS_00008086\n%E1502NC.DeviceDesc%            = E1502,       PCI\\VEN_8086&amp;DEV_1502&amp;SUBSYS_00011179\n%E1502NC.DeviceDesc%            = E1502,       PCI\\VEN_8086&amp;DEV_1502&amp;SUBSYS_00021179\n%E1502NC.DeviceDesc%            = E1502.10.0.1,       PCI\\VEN_8086&amp;DEV_1502\n%E1502NC.DeviceDesc%            = E1502.10.0.1,       PCI\\VEN_8086&amp;DEV_1502&amp;SUBSYS_00008086\n%E1502NC.DeviceDesc%            = E1502.10.0.1,       PCI\\VEN_8086&amp;DEV_1502&amp;SUBSYS_00011179\n%E1502NC.DeviceDesc%            = E1502.10.0.1,       PCI\\VEN_8086&amp;DEV_1502&amp;SUBSYS_00021179\n%E1503NC.DeviceDesc%            = E1503.10.0.1,       PCI\\VEN_8086&amp;DEV_1503\n%E1503NC.DeviceDesc%            = E1503.10.0.1,       PCI\\VEN_8086&amp;DEV_1503&amp;SUBSYS_00008086\n%E1503NC.DeviceDesc%            = E1503.10.0.1,       PCI\\VEN_8086&amp;DEV_1503&amp;SUBSYS_00011179\n%E1503NC.DeviceDesc%            = E1503.10.0.1,       PCI\\VEN_8086&amp;DEV_1503&amp;SUBSYS_00021179</pre> \n<p><span style=\"font-size:14px;\">之后重复添加驱动的步骤，将此驱动加入。</span><br /> <span style=\"font-size:14px;\">7，点击更新管理，扫描，安装，开始安装更新。此处因为是最新版系统，暂时还没有更新包。</span></p> \n<p><img title=\"dd Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/dd_windows_06.png\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\">8，点击系统优化，有一系列选项，按需进行优化。我的建议是将防火墙关闭。</span></p> \n<p><img title=\"dd Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/dd_windows_07.png\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\">9，编辑完镜像后，另存为新的镜像。此处假设为 D:\\win2019.wim。等待新的镜像保存完毕。</span></p> \n<p><img title=\"dd Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/dd_windows_08.png\" style=\"width:auto;height:auto;\" /></p> \n<h3> <span style=\"color:red;\">创建 VHD 虚拟硬盘</span><br /> </h3> \n<p><span style=\"font-size:14px;\">1，依次点击开始菜单，Windows 管理工具，计算机管理。点击磁盘管理，操作，创建 VHD，在弹出的窗口，指定计算机上的虚拟硬盘位置，此处假设为 D:\\2019.vhd，选择虚拟硬盘大小为 15GB，点击确定，具体如图所示。注意硬盘不宜设置过大，不然将来 DD 的时候，VPS 或服务器的硬盘小于你指定的磁盘大小的话会出错。</span></p> \n<p><img title=\"dd Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/dd_windows_11.png\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\">2，等待片刻，虚拟磁盘创建完毕。然后选中新建的 VHD 硬盘，右键点击初始化磁盘，分区选择 MBR，点击确定。右键点击新建简单卷，并一路下一步确认，盘符任意指定，此处假设为 T 盘。至此虚拟磁盘创建完毕。</span></p> \n<p><img title=\"dd Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/dd_windows_12.png\" style=\"width:auto;height:auto;\" /></p> \n<p><img title=\"dd Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/dd_windows_13.png\" style=\"width:auto;height:auto;\" /></p> \n<p><img title=\"dd Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/dd_windows_14.png\" style=\"width:auto;height:auto;\" /></p> \n<h3> <span style=\"color:red;\">创建带有 Windows Server 2019 系统的 VHD 虚拟硬盘</span><br /> </h3> \n<p><span style=\"font-size:14px;\">1，此时另存为的新镜像 D:\\win2019.wim 已经创建完毕。在 Dism++ 界面，依次点击，文件，释放镜像，第一个浏览那里，点击选择 D:\\win2019.wim，第二个浏览那里，选择刚建立的 VHD 磁盘 T 盘，选中添加引导和格式化，点击确定，在弹出的窗口里选择更多（此处很重要），选择刚建立的磁盘盘符，点击确认。</span></p> \n<p><img title=\"dd Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/dd_windows_15.png\" style=\"width:auto;height:auto;\" /></p> \n<p><img title=\"dd Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/dd_windows_16.png\" style=\"width:auto;height:auto;\" /></p> \n<p><img title=\"dd Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/dd_windows_17.png\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\">2，释放镜像完毕后，关闭 Dism++。此时再将该 VHD 磁盘，此处选中 T 盘，右键点击，弹出。</span></p> \n<h3> <span style=\"color:red;\">创建无人值守的 DD 包（可选）</span><br /> </h3> \n<p><span style=\"font-size:14px;\">之前创建完毕的 VHD 虚拟硬盘实际上就可以使用了。</span><br /> <span style=\"font-size:14px;\">有些 VPS 提供的控制面板有 VNC，可以用鼠标，还能快捷输入 Ctrl + Alt + Del，那么此 VHD 虚拟硬盘就可以直接拿来使用。</span><br /> <span style=\"font-size:14px;\">而实际上很多地方是不能 VNC 的，因此就需要做成无人值守，DD 完了立刻就能使用远程登录进入桌面。此时，我们需要借助 Hyper-V 开启远程桌面及定制，优化一下系统。</span></p> \n<p><span style=\"font-size:14px;\">1，依次打开 Hyper-V 管理器，连接到服务器，本地计算机，操作，新建，虚拟机，指定名称和位置，第一代（1），内存，网络连接，使用现有虚拟硬盘，选择 D:\\2019.vhd，完成。以下演示图截自日文系统，实际上界面都是一样的。</span></p> \n<p><img title=\"hyper-v Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/hyper-v_01.png\" style=\"width:auto;height:auto;\" /></p> \n<p><img title=\"hyper-v Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/hyper-v_02.png\" style=\"width:auto;height:auto;\" /></p> \n<p><img title=\"hyper-v Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/hyper-v_03.png\" style=\"width:auto;height:auto;\" /></p> \n<p><img title=\"hyper-v Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/hyper-v_04.png\" style=\"width:auto;height:auto;\" /></p> \n<p><img title=\"hyper-v Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/hyper-v_05.png\" style=\"width:auto;height:auto;\" /></p> \n<p><img title=\"hyper-v Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/hyper-v_06.png\" style=\"width:auto;height:auto;\" /></p> \n<p><img title=\"hyper-v Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/hyper-v_07.png\" style=\"width:auto;height:auto;\" /></p> \n<p><img title=\"hyper-v Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/hyper-v_08.png\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\">2，创建完毕虚拟机后，建议取消检查点。选中虚拟机，右键点击，设置，检查点，取消勾选启用检查点。</span></p> \n<p><img title=\"hyper-v Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/hyper-v_11.png\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\">3，选中虚拟机，右键点击，连接，启动。然后就像平时安装系统一样，输入一些信息，同意条款，设置 Administrator 密码，进入桌面后，可以进行各种设置了。</span></p> \n<p><img title=\"hyper-v Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/hyper-v_09.png\" style=\"width:auto;height:auto;\" /></p> \n<p><img title=\"hyper-v Windows\" class=\"left\" src=\"https://teddysun.com/wp-content/uploads/2018/hyper-v_10.png\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\">比如修改注册表关闭 Ctrl + Alt + Del，以及开启远程桌面，不验证用户级别等操作。此处略过。</span></p> \n<h3> <span style=\"color:red;\">压缩 VHD 虚拟硬盘</span><br /> </h3> \n<p><span style=\"font-size:14px;\">1，选中 D:\\2019.vhd，右键选择 7zip，添加压缩包，压缩格式选择 gzip，选项默认，点击确认。7zip如果压缩报错，用管理员模式启动即可。</span><br /> <span style=\"font-size:14px;\">2，等待压缩完成后，将压缩包重命名，上传到你自己的服务器，利用 Apache 或 Nginx 等 WebServer 做一个下载直链即可直接拿来使用了。</span></p> \n<h3> <span style=\"color:blue;\">参考链接：</span><br /> </h3> \n<p><a href=\"https://www.fmqcloud.com/archives/makedd.html\" target=\"_blank\"><span style=\"font-size:14px;\">https://www.fmqcloud.com/archives/makedd.html</span></a><br /> <a href=\"http://www.chinavps.net/zhuanzai/dd-windows-10-zhizuo.html\" target=\"_blank\"><span style=\"font-size:14px;\">http://www.chinavps.net/zhuanzai/dd-windows-10-zhizuo.html</span></a><br /> <a href=\"https://www.hostloc.com/thread-357177-1-1.html\" target=\"_blank\"><span style=\"font-size:14px;\">https://www.hostloc.com/thread-357177-1-1.html</span></a><br /> <a href=\"https://www.hostloc.com/thread-480867-1-1.html\" target=\"_blank\"><span style=\"font-size:14px;\">https://www.hostloc.com/thread-480867-1-1.html</span></a></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/544.html\">如何制作 Windows Server 2019 的 DD 镜像</a></p>","descriptionType":"html","publishedDate":"Sun, 07 Oct 2018 03:14:31 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2018/wallpaper.jpg","linkMd5":"926f9ce15a1f968e331864c627d75567","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn12@2020_5/2020/08/25/00-30-52-087_6387b6d6dc7cc81a.webp","destWidth":800,"destHeight":500,"sourceBytes":184515,"destBytes":11062,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2018/wallpaper.jpg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn12@2020_5/2020/08/25/00-30-52-087_6387b6d6dc7cc81a.webp","https://teddysun.com/wp-content/uploads/2018/dd_windows_01.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn3@2020_4/2020/08/25/00-30-58-105_f63088225740b720.webp","https://teddysun.com/wp-content/uploads/2018/dd_windows_02.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn6@2020_6/2020/08/25/00-30-56-931_a1af378e229588ab.webp","https://teddysun.com/wp-content/uploads/2018/dd_windows_04.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn79@2020_5/2020/08/25/00-30-56-967_f5a80b3f957d0d0b.webp","https://teddysun.com/wp-content/uploads/2018/dd_windows_05.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn88@2020_2/2020/08/25/00-30-56-950_f9342d5fdd317cc0.webp","https://teddysun.com/wp-content/uploads/2018/dd_windows_06.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn63@2020_2/2020/08/25/00-31-00-280_d3853750b1e97bad.webp","https://teddysun.com/wp-content/uploads/2018/dd_windows_07.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn92@2020_6/2020/08/25/00-31-00-088_8a4da314741e4bec.webp","https://teddysun.com/wp-content/uploads/2018/dd_windows_08.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn38@2020_4/2020/08/25/00-31-00-553_706717308af196c3.webp","https://teddysun.com/wp-content/uploads/2018/dd_windows_11.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn95@2020_6/2020/08/25/00-30-56-957_0a931cad82edae83.webp","https://teddysun.com/wp-content/uploads/2018/dd_windows_12.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn67@2020_6/2020/08/25/00-30-56-915_4fcfe36de79986b0.webp","https://teddysun.com/wp-content/uploads/2018/dd_windows_13.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn47@2020_1/2020/08/25/00-30-59-210_c4d37072b7275754.webp","https://teddysun.com/wp-content/uploads/2018/dd_windows_14.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn24@2020_6/2020/08/25/00-30-57-737_627833f6173e4686.webp","https://teddysun.com/wp-content/uploads/2018/dd_windows_15.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn87@2020_6/2020/08/25/00-30-59-433_f3738bd63564c52c.webp","https://teddysun.com/wp-content/uploads/2018/dd_windows_16.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn12@2020_1/2020/08/25/00-30-59-272_a917a586abdf1661.webp","https://teddysun.com/wp-content/uploads/2018/dd_windows_17.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn47@2020_5/2020/08/25/00-30-58-516_ab415e913045774b.webp","https://teddysun.com/wp-content/uploads/2018/hyper-v_01.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn26@2020_6/2020/08/25/00-31-00-502_fbacf45919c845b9.webp","https://teddysun.com/wp-content/uploads/2018/hyper-v_02.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn98@2020_2/2020/08/25/00-31-01-664_6be38224645811eb.webp","https://teddysun.com/wp-content/uploads/2018/hyper-v_03.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn4@2020_5/2020/08/25/00-30-58-491_8b26fa1a9ce5c913.webp","https://teddysun.com/wp-content/uploads/2018/hyper-v_04.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn47@2020_5/2020/08/25/00-30-56-922_054fa1dcbb62b8c5.webp","https://teddysun.com/wp-content/uploads/2018/hyper-v_05.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn71@2020_5/2020/08/25/00-30-56-924_a76c9457535484dd.webp","https://teddysun.com/wp-content/uploads/2018/hyper-v_06.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn67@2020_3/2020/08/25/00-30-59-852_07a7b535f4ac594f.webp","https://teddysun.com/wp-content/uploads/2018/hyper-v_07.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn36@2020_2/2020/08/25/00-30-59-483_02c79c5821f9993a.webp","https://teddysun.com/wp-content/uploads/2018/hyper-v_08.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn99@2020_1/2020/08/25/00-31-00-553_c95fa5b806156610.webp","https://teddysun.com/wp-content/uploads/2018/hyper-v_11.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn83@2020_2/2020/08/25/00-30-56-974_75379fb39b4ac501.webp","https://teddysun.com/wp-content/uploads/2018/hyper-v_09.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn64@2020_6/2020/08/25/00-30-58-842_953a2af59ca7ba0f.webp","https://teddysun.com/wp-content/uploads/2018/hyper-v_10.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn35@2020_5/2020/08/25/00-30-56-907_839cfbafb407bd9d.webp"},"publishedOrCreatedDate":1598315426739},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"CentOS下用wget命令下载JDK","link":"https://teddysun.com/?p=148","description":"<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">通常需要下载jdk时，直接用wget命令是不行的。那么，如何解决呢？</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">只需要在wget的时候加上一个特殊的cookie就可以搞定，下载最新版jdk-8u102的完整命令:</span> </p> \n<pre class=\"prettyprint lang-bsh\">wget --no-cookie --header \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u102-b14/jdk-8u102-linux-x64.rpm -O jdk-8u102-linux-x64.rpm</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">而如果出现Unable to establish SSL connection的话，在wget后面加上–no-check-certificate即可，命令如下：</span> </p> \n<pre class=\"prettyprint lang-bsh\">wget --no-cookie --no-check-certificate --header \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u102-b14/jdk-8u102-linux-x64.rpm -O jdk-8u102-linux-x64.rpm</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">安装jdk</span> </p> \n<pre class=\"prettyprint lang-bsh\">rpm -ivh jdk-8u102-linux-x64.rpm</pre> \n<p> <span id=\"more-148\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">配置jdk，请参照《</span><a href=\"https://teddysun.com/146.html\" target=\"_blank\"><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">CentOS下JDK7和tomcat的安装配置</span></a><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">》一文。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">以上的方法不仅仅是在CentOS下，其他的Linux发行版也可以。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">有的时候，原来的系统里已经安装了旧版本的jdk，如何卸载呢？</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">先查看系统已安装的jdk</span> </p> \n<pre class=\"prettyprint lang-bsh\">rpm -qa | grep jdk</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">返回jdk1.8.0_102-1.8.0_102-fcs.x86_64（这里是举例说明）</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">卸载已安装的jdk</span> </p> \n<pre class=\"prettyprint lang-bsh\">rpm -e --nodeps jdk1.8.0_102-1.8.0_102-fcs.x86_64</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">之后再输入java -version则会提示command not found。至此，卸载完成。开始安装新版本的jdk吧。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/148.html\">CentOS下用wget命令下载JDK</a></p>","descriptionType":"html","publishedDate":"Sat, 30 Mar 2013 12:04:47 +0000","feedId":9594,"bgimg":"","linkMd5":"3007ba2b12b5ae5154296e219690dd8a","bgimgJsdelivr":"","metaImg":"","author":"秋水逸冰","publishedOrCreatedDate":1598315426748},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Google日语输入法离线安装包","link":"https://teddysun.com/?p=389","description":"<p><a href=\"https://teddysun.com/389.html\"><img src=\"https://teddysun.com/wp-content/uploads/2014/googlejapaneseinput_small.png\" alt=\"google apps\" title=\"Google日语输入法离线安装包\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">通过 google 官网下载回来的安装包，还是需要联网下载才能安装 Google 日语输入法的，由于众所周知的原因，安装肯定是失败的。这时候就需要离线安装包来搞定了。搜索一番发现，网上有个下载器可以自动获取 Google 日语输入法离线安装包的下载地址，但是，还是那个众所周知的原因，这个下载器也需要全局代理（VPN）才能使用。</span></p> \n<p> <span id=\"more-389\"></span> </p> \n<p><span style=\"font-size:14px;\">介绍这个下载器的网址，详见<a href=\"http://www.helloyao.com/2014/08/5761.html\" target=\"_blank\">这里</a>。</span><br /> <span style=\"font-size:14px;\">总之，费了周折还是下载回来了离线安装包，在这里共享一下下载链接，如下：</span></p> \n<p><span style=\"font-size:14px;\"><strong>稳定版</strong></span><br /> <span style=\"font-size:14px;\">x86</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;<span style=\"font-family:Courier New;\"><a href=\"http://dl.google.com/japanese-ime/1.13.1641.0/googlejapaneseinput32.msi\" target=\"_blank\">http://dl.google.com/japanese-ime/1.13.1641.0/googlejapaneseinput32.msi</a></span></span><br /> <span style=\"font-size:14px;\">x64</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;<span style=\"font-family:Courier New;\"><a href=\"http://dl.google.com/japanese-ime/1.13.1641.0/googlejapaneseinput64.msi\" target=\"_blank\">http://dl.google.com/japanese-ime/1.13.1641.0/googlejapaneseinput64.msi</a></span></span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;</span><br /> <span style=\"font-size:14px;\"><strong>开发版</strong></span><br /> <span style=\"font-size:14px;\">x86</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;<span style=\"font-family:Courier New;\"><a href=\"http://dl.google.com/japanese-ime/2.16.2007.100/googlejapaneseinput32.msi\" target=\"_blank\">http://dl.google.com/japanese-ime/2.16.2007.100/googlejapaneseinput32.msi</a></span></span><br /> <span style=\"font-size:14px;\">x64</span><br /> <span style=\"font-size:14px;\">&nbsp; &nbsp; &nbsp;<span style=\"font-family:Courier New;\"><a href=\"http://dl.google.com/japanese-ime/2.16.2007.100/googlejapaneseinput64.msi\" target=\"_blank\">http://dl.google.com/japanese-ime/2.16.2007.100/googlejapaneseinput64.msi</a></span></span></p> \n<p><span style=\"font-size:14px;\">完整的下载地址，详见：</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://lamp.teddysun.com/googlejapaneseinputdownload.txt\" target=\"_blank\">http://lamp.teddysun.com/googlejapaneseinputdownload.txt</a></span></p> \n<p><span style=\"font-size:14px;\">建议安装稳定版，根据系统不同，请自行选择 32 还是 64 位安装包下载。</span><br /> <span style=\"font-size:14px;\">有了这个下载链接，拖到迅雷或旋风等第三方下载工具里，妥妥的。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/389.html\">Google日语输入法离线安装包</a></p>","descriptionType":"html","publishedDate":"Fri, 26 Dec 2014 06:41:23 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2014/googlejapaneseinput_small.png","linkMd5":"3ae124e7d969cd80f518d906e1ce12ed","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn96@2020_1/2020/08/25/00-30-52-467_8ad862464cd34c5a.webp","destWidth":600,"destHeight":501,"sourceBytes":127741,"destBytes":29520,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2014/googlejapaneseinput_small.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn96@2020_1/2020/08/25/00-30-52-467_8ad862464cd34c5a.webp"},"publishedOrCreatedDate":1598315426728},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"phpMyAdmin 高级功能设置方法","link":"https://teddysun.com/?p=268","description":"<p><a href=\"https://teddysun.com/268.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/09/phpMyAdmin.png\" alt=\"phpMyAdmin\" title=\"phpMyAdmin 高级功能设置方法\" class=\"left\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　phpMyAdmin 安装后，默认其高级功能是不开启的，所以一般登录到 phpMyAdmin 后，会提示“phpMyAdmin 高级功能尚未完全设置，部分功能未激活。请点击这里查看原因。”。而所谓的高级功能，其实就是存储 phpMyAdmin 的各种参数到数据库中。</span><br /> <span style=\"font-size:14px;\">　　要解决这个问题也不难，实际上根据 phpMyAdmin 的提示一步一步也能完成。这里简单记录一下过程。</span></p> \n<p> <span id=\"more-268\"></span> </p> \n<p><span style=\"font-size:14px;\">　　第一步，在 phpMyAdmin 源码的 examples 目录下有个 create_tables.sql 文件，这就是创建名为 phpmyadmin 数据库的SQL文。当你用 root 用户登录 phpMyAdmin 后，在“导入”页面，上传这个 create_tables.sql 文件即可成功创建数据库phpmyadmin。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/09/phpmyadmin_1.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/09/phpmyadmin_1.png\" alt=\"phpmyadmin import\" title=\"phpmyadmin 导入\" class=\"left\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　第二步，创建完数据库 phpmyadmin 后，展开左侧phpmyadmin，出现12张表名。</span></p> \n<p><a href=\"https://teddysun.com/wp-content/uploads/2013/09/phpmyadmin_2.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/09/phpmyadmin_2.png\" alt=\"phpmyadmin database\" title=\"phpmyadmin数据库\" class=\"left\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　第三步，更改配置文件 (config.inc.php)中参数，参见 config.sample.inc.php 中的范例。有关 phpMyAdmin configuration storage settings 的设置如下：</span></p> \n<pre class=\"prettyprint lang-html\">$cfg['Servers'][$i]['pmadb'] = 'phpmyadmin';\n$cfg['Servers'][$i]['bookmarktable'] = 'pma__bookmark';\n$cfg['Servers'][$i]['relation'] = 'pma__relation';\n$cfg['Servers'][$i]['table_info'] = 'pma__table_info';\n$cfg['Servers'][$i]['table_coords'] = 'pma__table_coords';\n$cfg['Servers'][$i]['pdf_pages'] = 'pma__pdf_pages';\n$cfg['Servers'][$i]['column_info'] = 'pma__column_info';\n$cfg['Servers'][$i]['history'] = 'pma__history';\n$cfg['Servers'][$i]['tracking'] = 'pma__tracking';\n$cfg['Servers'][$i]['designer_coords'] = 'pma__designer_coords';\n$cfg['Servers'][$i]['userconfig'] = 'pma__userconfig';\n$cfg['Servers'][$i]['recent'] = 'pma__recent';\n$cfg['Servers'][$i]['table_uiprefs'] = 'pma__table_uiprefs';</pre> \n<p><span style=\"font-size:14px;\">　　第四步，退出，并重新登录 phpMyAdmin 以加载新配置并使其生效。</span></p> \n<p><span style=\"font-size:14px;\">　　需要注意的是，我记得老版本中的 create_tables.sql 创建出的表名，类似于pma_bookmark，是一条下划线“_”，而不是现在的pma__bookmark,两条下划线“__”，因此配置文件中也要做出相应的更改。</span></p> \n<p><span style=\"font-size:14px;color:red;\"><b>　　2013年12月18日更新：</b></span><br /> <span style=\"font-size:14px;\">　　由于 phpMyAdmin 的版本 4.1.1 所创建的 phpmyadmin 数据库新增了 3 张表，所以其配置文件 config.inc.php 也需作相应的变更。最新版 phpMyAdmin configuration storage settings 的设置如下：</span></p> \n<pre class=\"prettyprint lang-html\">$cfg['Servers'][$i]['pmadb'] = 'phpmyadmin';\n$cfg['Servers'][$i]['bookmarktable'] = 'pma__bookmark';\n$cfg['Servers'][$i]['relation'] = 'pma__relation';\n$cfg['Servers'][$i]['table_info'] = 'pma__table_info';\n$cfg['Servers'][$i]['table_coords'] = 'pma__table_coords';\n$cfg['Servers'][$i]['pdf_pages'] = 'pma__pdf_pages';\n$cfg['Servers'][$i]['column_info'] = 'pma__column_info';\n$cfg['Servers'][$i]['history'] = 'pma__history';\n$cfg['Servers'][$i]['tracking'] = 'pma__tracking';\n$cfg['Servers'][$i]['designer_coords'] = 'pma__designer_coords';\n$cfg['Servers'][$i]['userconfig'] = 'pma__userconfig';\n$cfg['Servers'][$i]['recent'] = 'pma__recent';\n$cfg['Servers'][$i]['table_uiprefs'] = 'pma__table_uiprefs';\n$cfg['Servers'][$i]['users'] = 'pma__users';\n$cfg['Servers'][$i]['usergroups'] = 'pma__usergroups';\n$cfg['Servers'][$i]['navigationhiding'] = 'pma__navigationhiding';</pre> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/268.html\">phpMyAdmin 高级功能设置方法</a></p>","descriptionType":"html","publishedDate":"Mon, 09 Sep 2013 07:16:37 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/09/phpMyAdmin.png","linkMd5":"e050e5390a499dbaf5981e9b036b2e6c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn76@2020_6/2020/08/25/00-30-52-089_daf8d2fa29bff2ab.webp","destWidth":800,"destHeight":566,"sourceBytes":84984,"destBytes":67446,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/09/phpMyAdmin.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn76@2020_6/2020/08/25/00-30-52-089_daf8d2fa29bff2ab.webp","https://teddysun.com/wp-content/uploads/2013/09/phpmyadmin_1.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn95@2020_5/2020/08/25/00-30-59-762_bfecdd1517dff716.webp","https://teddysun.com/wp-content/uploads/2013/09/phpmyadmin_2.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn40@2020_1/2020/08/25/00-30-59-935_2b3ab4d5924ef0fe.webp"},"publishedOrCreatedDate":1598315426740},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Apache的启动脚本httpd编辑","link":"https://teddysun.com/?p=147","description":"<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　一般情况，如果是手动编译的话，apache是没有启动脚本的，也就是说用户不能通过简单的</span><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">/etc/init.d/httpd(start|stop|restart)来启动/关闭/重新启动。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　其实在源码里已经有启动的脚本，我们要修改下即可，把Apache加入系统SysV服务中来。&nbsp;</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　在源码httpd-2.x.x/build/rpm中存在httpd.init</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　拷贝命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">cp httpd.init /etc/init.d/httpd</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">拷贝之后，注意其中有三处主要的地方需要修改下的：</span>&nbsp;</p> \n<pre class=\"prettyprint lang-bsh\">httpd=${HTTPD-/usr/local/apache/bin/httpd}\npidfile=${PIDFILE-/usr/local/apache/logs/${prog}.pid}\nCONFFILE=/usr/local/apache/conf/httpd.conf</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">请根据自己的实际情况更改相应的路径！</span></p> \n<p><span id=\"more-147\"></span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">然后运行如下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">chmod +x /etc/init.d/httpd\nchkconfig --add httpd\nchkconfig --level 2345 httpd on</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">这样一来，启动、停止、重启Apache就可以用以下方式了：&nbsp;</span></p> \n<pre class=\"prettyprint lang-bsh\">/etc/init.d/httpd start\n/etc/init.d/httpd stop\n/etc/init.d/httpd restart</pre> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/147.html\">Apache的启动脚本httpd编辑</a></p>","descriptionType":"html","publishedDate":"Fri, 29 Mar 2013 03:23:35 +0000","feedId":9594,"bgimg":"","linkMd5":"bf11e8b491971d315b1681ca3409819e","bgimgJsdelivr":"","metaImg":"","author":"秋水逸冰","publishedOrCreatedDate":1598315426748},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"CentOS下JDK7和tomcat的安装配置","link":"https://teddysun.com/?p=146","description":"<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>1、下载地址</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">若安装的是32位系统则下载jdk-7u21-linux-i586.rpm；</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">若安装的是64位系统则下载jdk-7u21-linux-x64.rpm；</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>2、安装JDK</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">用root登录，执行</span></p> \n<pre class=\"prettyprint lang-bsh\">rpm -ivh jdk-7u21-linux-i586.rpm</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">64位系统则是：</span></p> \n<pre class=\"prettyprint lang-bsh\">rpm -ivh jdk-7u21-linux-x64.rpm </pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">操作完成后，默认安装路径应该是</span><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><em><span>/usr/java/jdk1.7.0_21</span></em></span></p> \n<p> <span id=\"more-146\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>3、配置JDK</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">vi /etc/profile</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在profile文件下面追加写入下面信息：</span></p> \n<pre class=\"prettyprint lang-bsh\">export JAVA_HOME=/usr/java/jdk1.7.0_21\nexport CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nexport PATH=$PATH:$JAVA_HOME/bin</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">保存退出，执行:</span></p> \n<pre class=\"prettyprint lang-bsh\">source /etc/profile</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">更新 alternatives，选择JDK版本</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">执行：</span></p> \n<pre class=\"prettyprint lang-bsh\">update-alternatives --install /usr/bin/java java /usr/java/jdk1.7.0_21/bin/java 60</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">然后配置JDK，执行：</span></p> \n<pre class=\"prettyprint lang-bsh\">update-alternatives --config java</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">There are 2 programs which provide ‘java’.</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">&nbsp; Selection &nbsp; &nbsp;Command</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">———————————————–</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">* &nbsp;1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /usr/lib/jvm/jre-1.5.0-gcj/bin/java</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">&nbsp;+ 2 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /usr/java/jdk1.7.0_21/bin/java</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">Enter to keep the current selection[+], or type selection number:<strong><span style=\"color:#E53333;\">2&nbsp;</span></strong></span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">选择我们最新安装的/usr/java/jdk1.7.0_21/bin/java，然后回车。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">接下来，输入：<em><span style=\"background-color:#CCCCCC;\">java -version</span></em> 就会看到：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">java version “1.7.0_21”</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">Java(TM) SE Runtime Environment (build 1.7.0_21-b11)</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">Java HotSpot(TM) Client VM (build 23.7-b11, mixed mode, sharing)</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>4、下载tomcat</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><a href=\"http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.34/bin/apache-tomcat-7.0.34.tar.gz\" target=\"_blank\">http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.34/bin/apache-tomcat-7.0.34.tar.gz</a></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">解压文件，执行：</span></p> \n<pre class=\"prettyprint lang-bsh\">tar -zxvf apache-tomcat-7.0.34.tar.gz</pre> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">文件夹重命名，执行：</span></p> \n<pre class=\"prettyprint lang-bsh\">mv apache-tomcat-7.0.34 tomcat</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">移动解压后的文件夹。我这里是移动到/data/www目录。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>5、配置tomcat</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">vi /etc/profile</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在profile文件下面追加写入下面信息：</span></p> \n<pre class=\"prettyprint lang-bsh\">export TOMCAT_HOME=/data/www/tomcat/</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">保存退出，执行:</span> </p> \n<pre class=\"prettyprint lang-bsh\"> source /etc/profile</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>6、启动tomcat</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">cd /data/www/tomcat/bin/\nchmod +x *.sh\n./ catalina.sh start</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>7、配置防火墙规则，开启8080端口</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">vi /etc/sysconfig/iptables\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT #允许8080端口通过防火墙</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">注意：该规则应添加到默认的22端口这条规则的下面。</span></p> \n<pre class=\"prettyprint lang-bsh\">/etc/init.d/iptables restart #最后重启防火墙使配置生效</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">最后，在浏览器输入服务器的ip:8080，如下：http://192.168.1.36:8080， 就可以打开tomcat的默认页面了。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/146.html\">CentOS下JDK7和tomcat的安装配置</a></p>","descriptionType":"html","publishedDate":"Thu, 28 Mar 2013 14:53:17 +0000","feedId":9594,"bgimg":"","linkMd5":"fbd3bf25f25ee6cc13814b41240f2fd1","bgimgJsdelivr":"","metaImg":"","author":"秋水逸冰","publishedOrCreatedDate":1598315426750},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"域名那些事儿","link":"https://teddysun.com/?p=429","description":"<p><a href=\"https://teddysun.com/429.html\"><img src=\"https://teddysun.com/wp-content/uploads/2015/domain.jpg\" title=\"域名那些事儿\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">一开始我并不知道什么是域名，尽管每天都上一些网站。每天打开浏览器输入一串字符再回车，稍等片刻，网页就会显示出来。</span><br /> <span style=\"font-size:14px;\">直到我开始热衷于注册邮箱，各种后缀的邮箱，免费邮箱。</span><br /> <span style=\"font-size:14px;\">那已是十几年前（2004 年开始）的故事了。</span><br /> <span style=\"font-size:14px;\">那时候雅虎中国率先推出容量为 1G 的邮箱，紧接着 Google 在愚人节那天推出了 Gmail，容量为 1G，且每天自动增长容量。我注册遍了国内所有的免费邮箱后，对 Gmail 垂涎已久，无奈当时是邀请制。直到在一本叫《电脑爱好者》杂志上看到了某人有邀请资格，于是给他发了一封邮件，几天后才算是拥有 Gmail 邮箱。</span><br /> <span style=\"font-size:14px;\">自此开始迷恋各种邮箱，说白了也就是域名。</span><br /> <span style=\"font-size:14px;\">当时来说，无非就知道 com、net、org、cn 这几种后缀而已。</span></p> \n<p> <span id=\"more-429\"></span> </p> \n<p><span style=\"font-size:14px;\">身为一名学生党，并没有什么钱可以去注册属于自己的域名。于是就更加热衷于注册各种免费邮箱，各种后缀的邮箱。然后登录不同的邮箱，自己给自己发邮件。</span><br /> <span style=\"font-size:14px;\">当时热衷于此，并不知道这其实可以算作一种病，执念太重。</span><br /> <span style=\"font-size:14px;\">直到毕业以后，才算真正的开始玩域名。</span></p> \n<p><span style=\"font-size:15px;color:blue;\"><strong>为什么不喜欢 cn 域名？</strong></span></p> \n<p><span style=\"font-size:14px;\">其实我注册的第一个域名就是 cn 后缀。一开始谁也没说过个人不允许使用，并且各家注册商都在拼命鼓吹 cn 域名的种种优点，如便宜、国产、中国人的象征云云。在 2008 年，随着 CNNIC 联合万网、新网等大批注册商对 cn 域名降价开始，就注定是一个杯具的开始。</span><br /> <span style=\"font-size:14px;\">我之所以注册域名，本质上还是想做成企业邮箱。因为前面说过，我是一个邮箱控。</span><br /> <span style=\"font-size:14px;\">当时万网正在搞活动，首年注册 cn 域名只需 5 元一个。我惊喜了，我欢呼了，我以为捡到大便宜了。迫不及待地注册了用户名之后才发现，注册第一个 cn 域名需要 100 元，然后万网再送你 19 张优惠券，你再用优惠券免费注册 19 个，共计 20 个，这样一算下来可不就是 5 元一个了么。</span><br /> <span style=\"font-size:14px;\">注册了以自己名字命名的域名后，我对剩下来的 19 张优惠券踌躇不已。往后续费可不便宜，注册的越多就意味着以后扔进去越多。于是我把那些优惠券送人，反正不能浪费，至于后来有多少优惠券被注册成了域名我就不知道了，但肯定是没有用完。第一步，我就这样被万网往坑里带了。</span><br /> <span style=\"font-size:14px;\">申请了域名后，我马不停蹄的申请了 Hotmail 的免费企业邮箱。微软很大方，给了 500 个名额，5GB 容量的邮箱。事实上，我只用到了 2 个名额。终于用上属于自己的个性域名邮箱后，我开始鼓捣域名的各个功能。</span><br /> <span style=\"font-size:14px;\">当时 Google Apps 不允许 cn 域名注册，一开始我还不是很理解，直到后来才明白过来。不过也已是后话了。</span><br /> <span style=\"font-size:14px;\">域名转发，顾名思义，就是转发 URL。自定义一个 CNAME，指向一个 URL，当用户访问我的域名时，能自动引导到我指定的 URL。好景不长，这个功能就被限制使用，转发的 URL 统统需要先审核才能使用，而且不能超过 10 条，超过 10 条的就要付费。</span><br /> <span style=\"font-size:14px;\">一段时间后，我也就懒得折腾域名了。反正也没绑定主机，也没做网站，有个个性邮箱使用就满足了。然而又是好景不长，域名也要备案了。万网几乎每个星期都有往我邮箱里发邮件提醒我备案。杯具的是，我没接虚拟主机，光是域名在工信部的网站根本就没有入口去备案。我一怒之下，听之任之，就再也没去管它。再后来，互联网“整风运动”开始了。</span><br /> <span style=\"font-size:14px;\">在 2009 年末的一场始于央视的“扫黄”运动中，牵一发而动全身，cn 域名纷纷落马，各中小站长怨声载道。</span><br /> <span style=\"font-size:14px;\">然后就被要求邮寄身份证和相关材料，否则停止 cn 域名解析。</span><br /> <span style=\"font-size:14px;\">一怒之下，删除所有的解析记录，决意不再续费域名，弃用之。</span></p> \n<p><span style=\"font-size:15px;color:blue;\"><strong>为什么不在国内注册域名？</strong></span></p> \n<p><span style=\"font-size:14px;\">其实我注册的第一个 com 域名就是在国内注册的。一家新网的代理，叫华夏名网。</span><br /> <span style=\"font-size:14px;\">弃用 cn 域名后，我就打算注册个 com 域名来玩玩。恰好遇到这家在搞活动，于是我就华丽入坑了。</span><br /> <span style=\"font-size:14px;\">直到邮箱里再次收到域名需要备案的提醒，我才恍然大悟。于是我决定将域名转到 Godaddy。</span><br /> <span style=\"font-size:14px;\">然后一系列的奇葩遭遇接踵而至了。</span><br /> <span style=\"font-size:14px;\">要求下载他们网站的文档，打印出来填好，并附上身份证复印件，邮寄到他们公司。</span><br /> <span style=\"font-size:14px;\">我照办了。顺丰航空件，第二天他们就收到了。</span><br /> <span style=\"font-size:14px;\">然而并没有什么卵用。他们要求我续费一年，说当初我是在搞活动期间注册的，为了弥补损失，必须要先续费才给转移码。</span><br /> <span style=\"font-size:14px;\">我又照办了。</span><br /> <span style=\"font-size:14px;\">续费后，并没有收到转移码。</span><br /> <span style=\"font-size:14px;\">各种上网找攻略，很多人都有类似的遭遇，我发现他们的解决办法就是，去 ICANN 官网投诉。</span><br /> <span style=\"font-size:14px;\">为此我还找到了 Complaint 投诉范文。</span><br /> <span style=\"font-size:14px;\">二话不说，就去填了表。</span><br /> <span style=\"font-size:14px;\">然后在第二天，邮箱里躺着一封新网发来的域名转移码。</span><br /> <span style=\"font-size:14px;\">一个星期后，域名终于在 Godaddy 的账户里了。</span></p> \n<p><span style=\"font-size:15px;color:blue;\"><strong>为什么后来从 Godaddy 转走域名？</strong></span></p> \n<p><span style=\"font-size:14px;\">Godaddy 在没有换 CEO 之前还是相当不错的。实惠的价格，各种优惠码，时不时还有特价活动。</span><br /> <span style=\"font-size:14px;\">于是在后面的几年里，陆陆续续又注册（剁手）了不少域名。</span><br /> <span style=\"font-size:14px;\">Godaddy 打算上市并换了 CEO 之后，取消了大多数的优惠码，并且特价活动只允许美国和加拿大的信用卡用户才能参与。</span><br /> <span style=\"font-size:14px;\">从此 Godaddy 与低价无缘了。</span><br /> <span style=\"font-size:14px;\">再加上陆续传出有不少用户域名被盗的事情。于是我决定将所有的域名转移走。</span><br /> <span style=\"font-size:14px;\">这是一项大工程。</span><br /> <span style=\"font-size:14px;\">好在是国外域名注册商，自由转入转出。</span><br /> <span style=\"font-size:14px;\">尽管我和大多数人一样，是个比较节约的人，但碰到了本能够节约却不能节约的事，那就只能放弃（无奈）。</span><br /> <span style=\"font-size:14px;\">好在资本主义国家域名注册业务一样竞争激烈，所以不乏一些比较便宜又不错的注册商，比如 Name.com、Namesilo、Namecheap 等。</span><br /> <span style=\"font-size:14px;\">但 Godaddy 依然是世界上域名保有量最大的注册商，没有之一。</span></p> \n<p><span style=\"font-size:15px;color:blue;\"><strong>非主流后缀的泛滥？</strong></span></p> \n<p><span style=\"font-size:14px;\">从去年（2014）以来，可能你会跟我一样，发现有大批的新域名后缀涌现出来。</span><br /> <span style=\"font-size:14px;\">2011年6月20日，ICANN 正式通过 New gTLD（新顶级域名）计划，任何公司、机构都有权向 ICANN 申请新通用顶级域名。在这其后 ICANN 陆续批准了大概几百个新的域名后缀。</span><br /> <span style=\"font-size:14px;\">更多后缀详见：<span style=\"font-family:Courier New;\"><a href=\"https://www.iana.org/domains/root/db\" target=\"_blank\">https://www.iana.org/domains/root/db</a></span></span><br /> <span style=\"font-size:14px;\">ICANN 生财有道，当然那些申请新顶级域名后缀的人也不傻。</span><br /> <span style=\"font-size:14px;\">Business is business。</span><br /> <span style=\"font-size:14px;\">我注册的第一个非主流后缀是 .tokyo。</span><br /> <span style=\"font-size:14px;\">运营这个后缀的注册商是日本 GMO 旗下的最大的域名注册商 onamae.com。</span><br /> <span style=\"font-size:14px;\">趁着搞活动，我一口气注册了 5 个，都是 3 位数字的 .tokyo。</span><br /> <span style=\"font-size:14px;\">尽管这家已然是日本最大的域名注册商，但仍然不支持除日本之外的信用卡付款。</span><br /> <span style=\"font-size:14px;\">域名的用处和玩法，我已然了然于心。新域名后缀在折腾了一段时间后，发现也不过尔尔。</span><br /> <span style=\"font-size:14px;\">当然，域名邮箱是必不可少的（虽然并没有什么卵用）。</span><br /> <span style=\"font-size:14px;\">雨后春笋般，甚至各种奇葩，闻所未闻的后缀都出现了。</span><br /> <span style=\"font-size:14px;\">低价与高价起飞，字符更不拘一格。</span><br /> <span style=\"font-size:14px;\">傲娇如 .rich，就是一个字，贵。扯淡如 .我爱你，摆明了就是赚眼球来了。</span><br /> <span style=\"font-size:14px;\">好在 ICANN 当初规定只允许申请 3 字母及以上的新域名后缀，否则还不折腾出花来。</span><br /> <span style=\"font-size:14px;\">而 2 字母的则留给国别域名使用了。</span></p> \n<p><span style=\"font-size:15px;color:blue;\"><strong>国别域名是什么？</strong></span></p> \n<p><span style=\"font-size:14px;\">这个世界居然有大约 224 个国家和地区，其中国家为193个，地区为31个。</span><br /> <span style=\"font-size:14px;\">ICANN 基本上为这些国家和地区都分配了域名后缀。</span><br /> <span style=\"font-size:14px;\">然后基本上每个后缀都由相应的国家运营管理，当然也有些比较穷的小国会把域名运营权转让给商业公司。</span><br /> <span style=\"font-size:14px;\">.cn 对应的就是中国的国别域名，.hk 则是香港地区的域名。</span><br /> <span style=\"font-size:14px;\">每个国别的注册，其实都有不同的规定，有的是开放注册，有的则有附带条件，比如我下面举例的 .re（留尼汪）域名。</span><br /> <span style=\"font-size:14px;\">.re 是留尼汪的域名，此地为法国殖民地，所以此域名的运营在法国 AFNIC 手里，其旗下还有 .fr、.pm、.yt、.tf、.wf 后缀。</span><br /> <span style=\"font-size:14px;\">.re 开放给居住、设立于欧洲经济区或瑞士满18岁的个人和组织。</span><br /> <span style=\"font-size:14px;\">上个月（2015年7月）的时候，我得知 .re 开放 1-2 字符的域名注册，于是便在第一时间里注册（剁手）了几个 2 字母的 .re 域名。</span><br /> <span style=\"font-size:14px;\">.re，中文里有热的含义，所以原本是打算做个短网址站。然后不幸的是，本月（2015年8月）初的时候，收到域名注册商的邮件，大意就是注册局不让注册了，域名要被删除。</span><br /> <span style=\"font-size:14px;\">于是这几个 .re 还没在手里捂热就没了。</span><br /> <span style=\"font-size:14px;\">不过这让我发现了很多有意思的国别后缀，有的注册价格并不贵（此处的意思就是我又剁手了）。</span><br /> <span style=\"font-size:14px;\">这其中最有趣的应该就是域名 hack 了，简而言之就是利用域名后缀拼出常见的单词，比如 youtu.be、del.icio.us 等等。</span></p> \n<p><span style=\"font-size:15px;color:blue;\"><strong>为什么要玩域名？</strong></span></p> \n<p><span style=\"font-size:14px;\">人活一世，除了要工作养活自己外，总得有点什么兴趣爱好，才不至于太枯燥。</span><br /> <span style=\"font-size:14px;\">我的第一个 com 域名注册于 2009 年，直到 2013 年初我才终于开始建站，一个基于 WordPress 的博客。</span><br /> <span style=\"font-size:14px;\">Just for fun。</span></p> \n<p> <span style=\"font-size:14px;\"><strong>阅读更多：</strong><a href=\"https://teddysun.com/446.html\" target=\"_blank\">域名那些事儿2</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/429.html\">域名那些事儿</a></p>","descriptionType":"html","publishedDate":"Fri, 14 Aug 2015 09:45:59 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2015/domain.jpg","linkMd5":"2b4605126d440b29241bea23a299c115","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn92@2020_1/2020/08/25/00-30-53-369_f90af01ce64da9c5.webp","destWidth":610,"destHeight":427,"sourceBytes":63890,"destBytes":23956,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2015/domain.jpg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn92@2020_1/2020/08/25/00-30-53-369_f90af01ce64da9c5.webp"},"publishedOrCreatedDate":1598315426725},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Google Drive for WordPress插件汉化","link":"https://teddysun.com/?p=53","description":"<div style=\"text-align:center;\"> \n <a href=\"https://teddysun.com/wp-content/uploads/2013/02/google_drive.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/02/google_drive.png\" alt=\"google_drive\" width=\"603\" height=\"355\" class=\"aligncenter size-full wp-image-54\" srcset=\"https://teddysun.com/wp-content/uploads/2013/02/google_drive.png 603w, https://teddysun.com/wp-content/uploads/2013/02/google_drive-300x176.png 300w\" sizes=\"(max-width: 603px) 100vw, 603px\" /></a> \n</div> \n<p class=\"MsoNormal\" style=\"text-indent:2em;\"> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">安装完</span><span style=\"font-family:'Microsoft YaHei';font-size:14px;\">WordPress</span><span style=\"font-family:'Microsoft YaHei';font-size:14px;\">就肯定免不了要折腾，折腾就免不了会出错，出错免不了会头疼。怎么办？做改动之前，你只需要一键备份下网站数据和数据库，那么即使折腾出错了，也能及时恢复如初。</span><span></span> </p> \n<p style=\"text-indent:2em;\"> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">Google Drive for WordPress插件的安装，请参考网上已有的教程，戳</span><a href=\"http://ttt.tt/54/\" target=\"_blank\"><span style=\"font-family:'Microsoft YaHei';font-size:14px;color:red;\">这里</span></a><span style=\"font-family:'Microsoft YaHei';font-size:14px;\">。我主要是在这篇教程的基础上，部分汉化了该插件的界面，便于国人安装和使用。</span> </p> \n<p> <span id=\"more-53\"></span> </p> \n<p style=\"text-indent:2em;\"> <span style=\"line-height:1.5;font-family:'Microsoft YaHei';font-size:14px;\">下载汉化版的插件：</span><span style=\"line-height:1.5;\"><a href=\"http://pan.baidu.com/share/link?shareid=274990&amp;uk=50623901\" target=\"_blank\"><span style=\"font-family:'Microsoft YaHei';font-size:14px;\">http://pan.baidu.com/share/link?shareid=274990&amp;uk=50623901</span></a></span> </p> \n<p style=\"text-indent:2em;\"> <span style=\"line-height:1.5;font-family:'Microsoft YaHei';font-size:14px;\">下载wp-google-drive.zip文件，在后台安装插件界面，上传该zip文件，安装完毕后启用。如图所示：</span> </p> \n<p style=\"text-indent:2em;\"> </p> \n<div style=\"text-align:center;\"> \n <a href=\"https://teddysun.com/wp-content/uploads/2013/02/google_drive_step1.png\"></a>\n <a href=\"https://teddysun.com/wp-content/uploads/2013/02/google_drive_step1.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/02/google_drive_step1.png\" alt=\"google_drive_step1\" width=\"519\" height=\"506\" class=\"aligncenter size-full wp-image-56\" srcset=\"https://teddysun.com/wp-content/uploads/2013/02/google_drive_step1.png 519w, https://teddysun.com/wp-content/uploads/2013/02/google_drive_step1-300x292.png 300w\" sizes=\"(max-width: 519px) 100vw, 519px\" /></a> \n</div> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/53.html\">Google Drive for WordPress插件汉化</a></p>","descriptionType":"html","publishedDate":"Mon, 25 Feb 2013 03:58:17 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/02/google_drive.png","linkMd5":"c962ea90d6975968d867d4c6ba3c199b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn19@2020_6/2020/08/25/00-30-54-522_d727907a23f380a9.webp","destWidth":603,"destHeight":355,"sourceBytes":48899,"destBytes":10014,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/02/google_drive.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn19@2020_6/2020/08/25/00-30-54-522_d727907a23f380a9.webp","https://teddysun.com/wp-content/uploads/2013/02/google_drive_step1.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn77@2020_5/2020/08/25/00-31-01-059_2d35883199253e9e.webp"},"publishedOrCreatedDate":1598315426750},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"网盘扩容的游戏背后","link":"https://teddysun.com/?p=265","description":"<p><a href=\"https://teddysun.com/265.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/09/yun.jpg\" alt=\"free\" title=\"网盘扩容的游戏背后\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　始于8月份的网盘容量大战终于暂时告一段落了。几乎所有提供网盘服务的国内大厂都直接或间接参与了这次“战争”，先后宣布各自的容量扩容计划，无不喜闻乐见大快人心普天同庆奔走相告（喜大普奔）。几天前在MIUI论坛上看到一篇文章《<a href=\"http://www.miui.com/thread-1376528-1-1.html\" target=\"_blank\">小米云存储空间现在可以扩容了</a>》，详述了网盘容量大玩数字游戏的槽点，有兴趣的可以点进去看看。</span></p> \n<p> <span id=\"more-265\"></span> </p> \n<p><span style=\"font-size:14px;\">　　再之前在免费资源部落看到的一篇《<a href=\"http://www.freehao123.com/jinshan-baidu-360-pan/\" target=\"_blank\">网盘商的数字游戏</a>》，也是无力吐槽了这次网盘大战。这里引用文章中的一段话：</span><br /> <span style=\"font-size:14px;color:blue;\">　　网盘商喜欢拿数字来炒冷饭，每年都来炒一下，冷了又热一下，乐此不疲。对这些“所谓”的TB的网盘先不要说是不是真的可以放一个TB的文件，就是我放在网盘的文件的隐私是一个大问题。</span><br /> <span style=\"font-size:14px;\">　　基本上，这两篇文章里已经将大部分槽点分析的很透彻了。我只想说说很早之前就发现的一个现象，抛砖引玉，共同讨论。</span></p> \n<p><span style=\"font-size:14px;\">　　众所周知，百度音乐一直是一个不错的搜索MP3的平台。做过网站的朋友都知道，如果你放在服务器的一个MP3文件不幸被百度给索引了，而且恰好是比较热门的歌曲，那么除非你发现及时删除了该文件，否则流量会在一夜之间消耗殆尽。但现在，百度音乐不这么干了，搜索的歌曲基本上外链都来自于其百度网盘的分享。换句话说，百度利用其网盘分享优势已经形成了最大的音乐分享平台，并且还不会为此担责。因为所有的音乐资源都是来自于用户分享，用户协议写的清楚明了。</span><br /> <span style=\"font-size:14px;\">　　因此，我所担心的并不是用户恶意滥用资源而遭到删号，而是网盘的服务商利用其技术挖掘用户分享的数据为其所用。早前，我在《<a href=\"https://teddysun.com/190.html\" target=\"_blank\">免费的才是最贵的</a>》一文中有提到，但凡商业公司提供免费服务的背后，总会有或多或少其他目的。<span style=\"color:red;\">互联网上没有谁会永远当活雷锋。你免费获得了多少，你相应地就会失去多少。失去金钱是小事，失去生活重心才是大事。在付费的商业模式下，企业依旧存在着收集客户信息的可能，但这些只能更好地帮它分析用户购买的行为，并非其主要收入的来源。在免费的模式下，你只是用户，不是顾客。企业根本无需顾忌契约关系带来的风险。生存的压力让它们有着强烈的动力去搜刮用户的一切并将之变现。</span></span><br /> <span style=\"font-size:14px;\">　　在Dropbox火了之后，国内也涌现出了大量的网盘服务商，良莠不齐，各怀目的。所谓永久免费，除了噱头，剩下的就是利用了。网盘是个烧钱的服务，服务器和带宽都是投入巨大的，即便将来在政策上没有风险，也会在盈利上有压力。所以有句话要记住——隐私是你自己的，至于要不要自己看着办。至于我，依旧热衷于本地存储。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/265.html\">网盘扩容的游戏背后</a></p>","descriptionType":"html","publishedDate":"Thu, 05 Sep 2013 10:25:59 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/09/yun.jpg","linkMd5":"b54effa84a0cee84bfe92dd9a5ebbc83","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn7@2020_2/2020/08/25/00-30-51-833_5181213a0d49c579.webp","destWidth":600,"destHeight":400,"sourceBytes":47828,"destBytes":14460,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/09/yun.jpg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn7@2020_2/2020/08/25/00-30-51-833_5181213a0d49c579.webp"},"publishedOrCreatedDate":1598315426740},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"PHP加速缓存Zend Opcache","link":"https://teddysun.com/?p=384","description":"<p><a href=\"https://teddysun.com/384.html\"><img src=\"https://teddysun.com/wp-content/uploads/2014/OPcache.png\" alt=\"Zend Opcache\" title=\"PHP加速缓存Zend Opcache\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">很多人都在问 PHP 加速缓存哪个好，毫无疑问 Zend Opcache 是首选。为什么？因为，这是官方出品的，在PHP5.5开始，已经随着PHP的源代码一起发布了。</span><br /> <span style=\"font-size:14px;\">在使用 <a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP 一键安装脚本</a>后，如果你选的是 PHP 5.5 ，那么当 PHP 编译完成后，Zend Opcache 就已经存在了（<span style=\"font-family:Courier New;\">/usr/local/php/lib/php/extensions/no-debug-non-zts-20121212/opcache.so </span>）。</span><br /> <span style=\"font-size:14px;\">当然，如果选择了 PHP 5.3 或 PHP 5.4，也是可以安装 Zend Opcache 的，运行一键安装脚本 opcache.sh ，会自动安装 <span style=\"font-family:Courier New;\"><a href=\"http://pecl.php.net/zendopcache\" target=\"_blank\">http://pecl.php.net/zendopcache</a></span> 下的最新版。这货完全可以替代其他的缓存类工具，如 APC，eAccelerator，Xcache 等。</span></p> \n<p> <span id=\"more-384\"></span> </p> \n<p><span style=\"font-size:14px;\">官方还没有 Zend Opcache 管理面板，虽然能在 phpinfo 里的 Zend OPcache下可以看到状态，但还是不够一目了然。目前有个开源的第三方管理面板可供选择，详见：<a href=\"https://gist.github.com/ck-on/4959032\" target=\"_blank\">这里</a>。opcache.sh 脚本已经集成了该面板，只需在安装完成后，浏览器打开：http://yourwebsite/ocp.php 就能很直观的看到 Zend Opcache 的管理界面了。</span><br /> <span style=\"font-size:14px;\">我的 <a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP 一键安装脚本</a>里，已经包含了可以探测 Zend Opcache 是否安装，并显示其版本号的探针文件 p.php 。</span><br /> <span style=\"font-size:14px;\">安装了 PHP 5.5 的截图如下：</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2014/probe5.5.png\"><img src=\"https://teddysun.com/wp-content/uploads/2014/probe5.5.png\" alt=\"Zend Opcache\" title=\"PHP探针5.5\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">安装了 PHP 5.4 的截图如下：</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2014/probe5.4.png\"><img src=\"https://teddysun.com/wp-content/uploads/2014/probe5.4.png\" alt=\"Zend Opcache\" title=\"PHP探针5.4\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"><b>备注：</b>Zend Guard Loader 目前还不支持 PHP 5.5 ，所以第一张截图里 Zend Guard Loader 是未安装状态。</span><br /> <span style=\"font-size:14px;\">关于 Zend Opcache 的介绍，已经无需我多说了，一搜一大把，反正优点多多，强烈建议使用。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/384.html\">PHP加速缓存Zend Opcache</a></p>","descriptionType":"html","publishedDate":"Tue, 14 Oct 2014 08:30:47 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2014/OPcache.png","linkMd5":"7376babe349da92651a0881d1ec20d1c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn4@2020_4/2020/08/25/00-30-51-889_ddbe61d2abd80698.webp","destWidth":600,"destHeight":400,"sourceBytes":67069,"destBytes":14706,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2014/OPcache.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn4@2020_4/2020/08/25/00-30-51-889_ddbe61d2abd80698.webp","https://teddysun.com/wp-content/uploads/2014/probe5.5.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn75@2020_1/2020/08/25/00-30-57-116_4e33e33a258172b8.webp","https://teddysun.com/wp-content/uploads/2014/probe5.4.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn52@2020_1/2020/08/25/00-30-57-104_8bea9056ad2d16de.webp"},"publishedOrCreatedDate":1598315426728},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"网盘作战大升级","link":"https://teddysun.com/?p=263","description":"<p><a href=\"https://teddysun.com/263.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/08/vdisk.jpg\" alt=\"微盘\" title=\"网盘作战大升级\" class=\"aligncenter\" style=\"height:auto;width:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　网盘容量大作战再次升级，度娘在行动，微云在癫疯，浪浪家的微盘也没闲着。百度1T活动之后，我在昨晚打开该活动页面发现活动升级了，变成百度云2T超大容量永久使用。之前领取到的360G，将会在2013年9月1日8点前扩容到1024G；之前领取到的564G，将会在2013年9月1日10点前扩容到1024G。换言之，就是1块钱买2T容量。</span><br /> <span style=\"font-size:14px;\">　　新浪微盘再也按捺不住了，扬言“网盘持久战，我们玩的起！先送100G，后续吓爆你！”好吧，也就是免费拿100G，当然又是老套的登录手机客户端和桌面客户端后再领取的做法。至于后续的“吓爆你”，个人猜测无非是推出牛逼的新功能，容量再增加到无限或者抽奖送实物等等，已经玩不出什么新花样了。</span></p> \n<p> <span id=\"more-263\"></span> </p> \n<p><span style=\"font-size:14px;\">　　虽然对于用户来说是喜大普奔的事情，但这些公司在硝烟四起的时候是否仅仅是玩数字游戏呢？微云号称的10T计划，碰到了用户钻空子，转存大文件扩容量，仅仅一天过后就关闭了转存功能。</span><br /> <span style=\"font-size:14px;\">　　注册微盘用户要首先是微博用户，而微博注册要绑身份证号码和真实姓名，有时候还要绑手机号，实在是麻烦。最大的问题是，很多人都说，微盘会不会用着用着就化为乌有了，因为新浪有删号的光荣传统。</span><br /> <span style=\"font-size:14px;\">　　115网盘，自取消了公共分享之后，向企业用户发力，闷声发财。这会儿也凑了个热闹，发起了“1TB不够？那就给你NTB”活动，学起了腾讯，搞空间自动增长，不过不是按使用量来的，而是按年来。普通注册用户1TB/年自动增长空间。换句话说，只要广东一一五科技有限公司不倒闭，那就等同于无限容量了。</span><br /> <span style=\"font-size:14px;\">　　至于金山快盘，这个网盘大跃进的发起者，这会儿已经默不作声了。因为有金山T盘食言在先，金山云存储似乎止步于100G了。</span><br /> <span style=\"font-size:14px;\">　　不要以为金山、360、百度云、腾讯微云等都已向用户免费开放超大的云储存空间，就标志着我们从此进入了云的时代，因为他们都保留了最终解释权。</span><br /> <span style=\"font-size:14px;\">　　这其中的每一家服务我都用过，基本上功能都差不多——核心功能：存储，同步，分享。但是有一点是毋庸置疑的，那就是中国的宽带不提速，云时代就不会真正的到来，我们目前所看到的只是假象，是一次全民狂欢的围观。</span><br /> <span style=\"font-size:14px;\">　　我想没有多少人会用限制了上传带宽的网速去填满那些1TB，2TB，10TB，NTB的空间吧，真正能用到的容量最多也在100GB以下。正所谓，网盘太大，文件不够用了。所以，这些活动也就参与一下，动动鼠标领完容量放在那就好，且看谁家能服务到最后。</span><br /> <span style=\"font-size:14px;\"></span><br /> <span style=\"font-size:14px;\">最后，分享活动网址（按照时间顺序）：</span><br /> <span style=\"font-size:14px;\">1、金山快盘</span><br /> <span style=\"font-size:14px;\"><a href=\"http://www.kuaipan.cn/100g\" target=\"_blank\">http://www.kuaipan.cn/100g</a></span><br /> <span style=\"font-size:14px;\">2、360云盘</span><br /> <span style=\"font-size:14px;\"><a href=\"http://huodong.yunpan.360.cn/xt\" target=\"_blank\">http://huodong.yunpan.360.cn/xt</a></span><br /> <span style=\"font-size:14px;\"><a href=\"http://hd.wsm.360.cn/fudai/lottery.php?rd=1&amp;id=2\" target=\"_blank\">http://hd.wsm.360.cn/fudai/lottery.php?rd=1&amp;id=2</a></span><br /> <span style=\"font-size:14px;\">3、百度云</span><br /> <span style=\"font-size:14px;\"><a href=\"http://yun.baidu.com/1t\" target=\"_blank\">http://yun.baidu.com/1t</a></span><br /> <span style=\"font-size:14px;\">4、微云</span><br /> <span style=\"font-size:14px;\"><a href=\"http://www.weiyun.com/act/10t.html\" target=\"_blank\">http://www.weiyun.com/act/10t.html</a></span><br /> <span style=\"font-size:14px;\">5、新浪微盘</span><br /> <span style=\"font-size:14px;\"><a href=\"http://vdisk.weibo.com/zt/kongjian\" target=\"_blank\">http://vdisk.weibo.com/zt/kongjian</a></span><br /> <span style=\"font-size:14px;\">6、115网盘</span><br /> <span style=\"font-size:14px;\"><a href=\"http://115.com/tnt\" target=\"_blank\">http://115.com/tnt</a></span></p> \n<div> \n</div> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/263.html\">网盘作战大升级</a></p>","descriptionType":"html","publishedDate":"Sat, 31 Aug 2013 15:35:31 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/08/vdisk.jpg","linkMd5":"f70689f6cc55373d990a6d2717cabde3","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn88@2020_6/2020/08/25/00-30-54-352_2e70f34eeaa87d52.webp","destWidth":597,"destHeight":326,"sourceBytes":55555,"destBytes":21838,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/08/vdisk.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn88@2020_6/2020/08/25/00-30-54-352_2e70f34eeaa87d52.webp"},"publishedOrCreatedDate":1598315426740},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"短信炸弹原理简要分析","link":"https://teddysun.com/?p=262","description":"<p><a href=\"https://teddysun.com/262.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/08/boom.jpg\" alt=\"炸弹\" title=\"短信炸弹原理简要分析\" class=\"aligncenter\" style=\"height:auto;width:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　这两天在全球主机交流论坛看到一个比较火的帖子，描述的是利用短信轰炸手机，也可以看作是DDOS手机。一开始我以为是忽悠人的或者就是木马什么的，直到我看到了源码，才敢用自己的手机号试了下，5分钟左右收到30多条短信。</span></p> \n<p><span style=\"font-size:14px;\">　　其实原理并不复杂，收集了网上很多运营商或者服务商（比如凡客，中国移动，京东，阿里巴巴等）的短信验证机制的URL，用PHP代码将手机号码作为参数轮询，然后发送垃圾短信。众所周知，我们在注册一些网站用户或者忘记密码等情况时，会用到短信验证码的功能，该程序就是利用这种功能，短时间内发送大量的垃圾短信，以达到“轰炸”的效果。</span></p> \n<p> <span id=\"more-262\"></span> </p> \n<p> <span style=\"font-size:14px;\">围观地址：<span style=\"font-family:Courier New;\"><a href=\"http://www.fucksms.tk/\" target=\"_blank\">http://www.fucksms.tk/</a>（<span style=\"color:red;\">2013/9/1更新，该网址目前意料之中的失效了</span>）</span></span></p> \n<p><span style=\"font-size:14px;\">PHP源码下载（纯净版）：</span><br /> <span style=\"font-size:14px;\"><a href=\"https://teddysun.com/wp-content/uploads/sms.zip\" target=\"_blank\">sms.zip</a></span></p> \n<p><span style=\"font-size:16px;color:red;\"><b>说明：</b></span><br /> <span style=\"font-size:14px;color:blue;\">源码来源于互联网，本人作了<span style=\"color:#0000FF;font-size:14px;line-height:21px;\">无广告</span>无暗链修改，上传至PHP环境主机即可打开使用。请勿恶意使用，否则自负法律责任。</span></p> \n<p><span style=\"font-size:14px;\">PS：如果发现效果不佳，那说明部分URL已经失效。请自行搜寻后，替换首页的index.php中的相关内容即可。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/262.html\">短信炸弹原理简要分析</a></p>","descriptionType":"html","publishedDate":"Fri, 30 Aug 2013 04:25:51 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/08/boom.jpg","linkMd5":"e0e21bc386fa105b9ef3b7cf0c262197","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn80@2020_5/2020/08/25/00-30-53-191_e2eca238a4b4420c.webp","destWidth":540,"destHeight":371,"sourceBytes":27361,"destBytes":14312,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/08/boom.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn80@2020_5/2020/08/25/00-30-53-191_e2eca238a4b4420c.webp"},"publishedOrCreatedDate":1598315426740},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Eclipse:Failed to create the Java Virtual Machine","link":"https://teddysun.com/?p=261","description":"<p><a href=\"https://teddysun.com/261.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/08/eclipse_failed_error.jpg\" alt=\"Eclipse error\" title=\"Failed to create the Java Virtual Machine\" class=\"aligncenter\" style=\"height:auto;width:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　我在用Eclipse的最新版Java EE Kepler（v4.3.0），安装完JBoss Developer Studio 7(Kepler)后，再次启动Eclipse，弹出Failed to create the Java Virtual Machine的错误。确认后就会自动退出。</span></p> \n<p> <span id=\"more-261\"></span> </p> \n<p> <span style=\"font-size:14px;\">　　原因分析：</span><br /> <span style=\"font-size:14px;\">安装完JBoss Developer Studio 7(Kepler)后，对Eclipse安装目录下的eclipse.ini文件重新写入新的参数导致。</span></p> \n<p><span style=\"font-size:14px;\">源文件：</span></p> \n<pre class=\"prettyprint\">-startup\nplugins/org.eclipse.equinox.launcher_1.3.0.v20130327-1440.jar\n--launcher.library\nplugins/org.eclipse.equinox.launcher.win32.win32.x86_1.1.200.v20130521-0416\n-product\norg.eclipse.epp.package.jee.product\n--launcher.defaultAction\nopenFile\n--launcher.XXMaxPermSize\n256M\n-showsplash\norg.eclipse.platform\n--launcher.XXMaxPermSize\n256m\n--launcher.defaultAction\nopenFile\n--launcher.appendVmargs\n-vmargs\n-Dosgi.requiredJavaVersion=1.6\n-Xms40m\n-Xmx512m</pre> \n<p><span style=\"font-size:14px;\">修改后：</span></p> \n<pre class=\"prettyprint\">-startup\nplugins/org.eclipse.equinox.launcher_1.3.0.v20130327-1440.jar\n--launcher.library\nplugins/org.eclipse.equinox.launcher.win32.win32.x86_1.1.200.v20130521-0416\n-product\norg.eclipse.epp.package.jee.product\n--launcher.defaultAction\nopenFile\n--launcher.XXMaxPermSize\n256M\n-showsplash\norg.eclipse.platform\n--launcher.XXMaxPermSize\n256m\n--launcher.defaultAction\nopenFile\n--launcher.appendVmargs\n-vmargs\n-Dosgi.requiredJavaVersion=1.6\n-Xms256m\n-Xmx1024m\n-Djboss.discovery.directory.url=https://devstudio.jboss.com/updates/7.0/devstudio-directory.xml</pre> \n<p><span style=\"font-size:14px;\">可以看到，-Xms和-Xmx的参数被改大了，启动时系统不能为其分配足够的内存导致这个错误的出现。</span></p> \n<p><span style=\"font-size:14px;\"><b>解决方法：</b></span><br /> <span style=\"font-size:14px;color:red;\">-Xms不变，将-Xmx的参数修改为512m即可。</span></p> \n<div> \n <span style=\"font-size:14px;\"></span> \n</div> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/261.html\">Eclipse:Failed to create the Java Virtual Machine</a></p>","descriptionType":"html","publishedDate":"Tue, 27 Aug 2013 02:57:03 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/08/eclipse_failed_error.jpg","linkMd5":"ffcb5d623d47c652bb99e27d931a9d95","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn48@2020_3/2020/08/25/00-30-54-841_48bd91afe0d68915.webp","destWidth":450,"destHeight":302,"sourceBytes":25227,"destBytes":22990,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/08/eclipse_failed_error.jpg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn48@2020_3/2020/08/25/00-30-54-841_48bd91afe0d68915.webp"},"publishedOrCreatedDate":1598315426740},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"CentOS下安装aria2教程","link":"https://teddysun.com/?p=381","description":"<p><a href=\"https://teddysun.com/381.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg\" alt=\"Linux\" title=\"CentOS下安装aria2教程\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">aria2 是另一款 Linux 下轻量级的多线程下载工具，支持Http/Https、Ftp、BitTorrent、Metalink协议。它比 axel 优秀的地方在于：</span><br /> <span style=\"font-size:14px;\">完全支持 BitTorrent 协议，同时可以作为 BitTorrent 客户端来下载种子文件；支持 <a href=\"http://baike.baidu.com/view/2401614.htm\" target=\"_blank\">Metalink</a> 协议；远程控制（通过 web 端）下载进程。</span><br /> <span style=\"font-size:14px;\">官网地址：<span style=\"font-family:Courier New;\"><a href=\"http://aria2.sourceforge.net\" target=\"_blank\">http://aria2.sourceforge.net</a></span> ，首页有简略使用教程（<span style=\"font-family:Courier New;\">Usage Examples</span>），更多高阶教程围观官网 <a href=\"http://aria2.sourceforge.net/manual/en/html/index.html\" target=\"_blank\"><span style=\"font-family:Courier New;\">Manual</span></a> 。</span></p> \n<p> <span id=\"more-381\"></span> </p> \n<p> <span style=\"font-size:14px;\">本文介绍的是如何在 CentOS 中安装 aria2 ，以及出现错误的一些记录。</span><br /> <span style=\"font-size:14px;\">同样的，默认 repo 里没有 aria2 ，因此需要到 <span style=\"font-family:Courier New;\"><a href=\"http://pkgs.repoforge.org/aria2/\" target=\"_blank\">http://pkgs.repoforge.org/aria2/</a></span> 去下载 rpm 包安装即可。</span><br /> <span style=\"font-size:14px;\">CentOS 6.x 32 位下安装</span></p> \n<pre class=\"prettyprint lang-bsh\">wget -c http://pkgs.repoforge.org/aria2/aria2-1.16.4-1.el6.rf.i686.rpm\nrpm -ivh aria2-1.16.4-1.el6.rf.i686.rpm</pre> \n<p><span style=\"font-size:14px;\">CentOS 6.x 64 位下安装</span></p> \n<pre class=\"prettyprint lang-bsh\">wget -c http://pkgs.repoforge.org/aria2/aria2-1.16.4-1.el6.rf.x86_64.rpm\nrpm -ivh aria2-1.16.4-1.el6.rf.x86_64.rpm</pre> \n<p><span style=\"font-size:14px;\">在安装过程有可能会出现缺少 <span style=\"color:red;\">libnettle.so.4</span> 的错误提示。</span><br /> <span style=\"font-size:14px;\">因此需要先到 <span style=\"font-family:Courier New;\"><a href=\"http://pkgs.repoforge.org/nettle/\" target=\"_blank\">http://pkgs.repoforge.org/nettle/</a></span> 去下载安装 nettle 即可。</span><br /> <span style=\"font-size:14px;\">CentOS 6.x 32 位下安装</span></p> \n<pre class=\"prettyprint lang-bsh\">wget -c http://pkgs.repoforge.org/nettle/nettle-2.2-1.el6.rf.i686.rpm\nwget -c http://pkgs.repoforge.org/nettle/nettle-devel-2.2-1.el6.rf.i686.rpm\nrpm -ivh nettle-2.2-1.el6.rf.i686.rpm\nrpm -ivh nettle-devel-2.2-1.el6.rf.i686.rpm</pre> \n<p> <span style=\"font-size:14px;\">CentOS 6.x 64 位下安装</span></p> \n<pre class=\"prettyprint lang-bsh\">wget -c http://pkgs.repoforge.org/nettle/nettle-2.2-1.el6.rf.x86_64.rpm\nwget -c http://pkgs.repoforge.org/nettle/nettle-devel-2.2-1.el6.rf.x86_64.rpm\nrpm -ivh nettle-2.2-1.el6.rf.x86_64.rpm\nrpm -ivh nettle-devel-2.2-1.el6.rf.x86_64.rpm</pre> \n<p> <span style=\"font-size:14px;\">通过 rpm 安装的一般都不会是最新版的。官网目前的最新版本已经到 1.18.8 ，有兴趣的可以自己去下载源码回来编译安装。</span><br /> <span style=\"font-size:14px;\">安装完成后，还可以安装一个 <span style=\"font-family:Courier New;\">Web UI </span>工具，可视化管理下载过程。</span><br /> <span style=\"font-size:14px;\">围观网址：<span style=\"font-family:Courier New;\"><a href=\"https://github.com/ziahamza/webui-aria2\" target=\"_blank\">https://github.com/ziahamza/webui-aria2</a></span></span></p> \n<h2> CentOS 第三方软件源 RepoForge 已经死亡<br /> </h2> \n<p><span style=\"font-size:14px;\">RepoForge might be outdated. We have no updates since very long time.</span><br /> <span style=\"font-size:14px;\">RepoForge は時代遅れかもしれません。非常に長期間、何の更新もしていません。</span><br /> <span style=\"font-size:14px;\">RepoForge 也许已经落后于时代，已经长时间不再更新了。</span></p> \n<p><span style=\"font-size:14px;\">RPMForge/RepoForge – This is a dead project. Not maintained. DO NOT USE.</span><br /> <span style=\"font-size:14px;\">RPMForge/RepoForge – これは死んだプロジェクトです。メンテナンスされていません。使ってはいけません。</span><br /> <span style=\"font-size:14px;\">RPMForge/RepoForge – 这是一个已经死亡的项目。不再维护。不要使用。</span></p> \n<p><span style=\"font-size:14px;\"><a href=\"http://pkgs.repoforge.org/\" target=\"_blank\">http://pkgs.repoforge.org</a> 该网址已无法访问。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/381.html\">CentOS下安装aria2教程</a></p>","descriptionType":"html","publishedDate":"Sat, 20 Sep 2014 08:03:38 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg","linkMd5":"fc688fc226f95487d0e85cc77358d713","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn34@2020_3/2020/08/25/00-30-52-039_da8898b7cb91c054.webp","destWidth":741,"destHeight":316,"sourceBytes":21400,"destBytes":15404,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn34@2020_3/2020/08/25/00-30-52-039_da8898b7cb91c054.webp"},"publishedOrCreatedDate":1598315426762},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"JBoss主要版本下载链接一览","link":"https://teddysun.com/?p=260","description":"<p><a href=\"https://teddysun.com/260.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/08/JBoss.jpg\" alt=\"JBoss\" title=\"JBoss主要版本下载链接一览\" class=\"aligncenter\" style=\"height:auto;width:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"> <a href=\"http://www.jboss.org/\" target=\"_blank\">JBoss</a>在2006年被 RedHat 收购。在各种 J2EE 应用服务器中，JBoss 是最受欢迎而且功能最为强大的应用服务器。不过JBoss从8.0开始改名为WildFly，这个新名称在我看来似乎并不朗朗上口。</span><br /> <span style=\"font-size:14px;\"> 在折腾Java EE的配置时，新增一个Server，发现JBoss最多只到JBoss v5.0，官网上明明已经更新到7.1了，为何这里只显示这么古老的版本，而且我用的是Eclipse的最新版Kepler（v4.3.0）。几番搜索，需要安装JBoss Developer Studio 7(Kepler)后Server才会显示JBoss community项。</span></p> \n<p> <span id=\"more-260\"></span> </p> \n<p><span style=\"font-size:14px;\"> 安装JBoss Developer Studio 7(Kepler)过程比较简单，直接在Help–Eclipse Marketplace中搜索关键字“jboss”找到安装即可。</span><br /> <span style=\"font-size:14px;\"> 或者也可以直接安装，Help–Install New Software，Work with新增一个Repository，Name填JBoss，Location填<a href=\"https://devstudio.jboss.com/updates/7.0/\" target=\"_blank\">https://devstudio.jboss.com/updates/7.0/</a>，确认，下一步安装即可。</span><br /> <span style=\"font-size:14px;\"> 安装完毕后，再次新增Server，选择JBoss community–JBoss AS 7.1，下一步时则会要求下载runtime，实际上也就是JBoss Application Server。根据下面的下载链接一览下载回需要的版本，解压至任意目录，并将该目录路径设置到JBoss Runtime的Home directory即可。</span></p> \n<p><span style=\"font-size:14px;color:red;\">更新时间：2018 年 04 月 30 日</span></p> \n<p><span style=\"font-size:14px;color:red;\"><b>备注：</b>JBoss 从版本 8.0 开始改名为 WildFly</span><br /> <span style=\"font-size:14px;\">WildFly 12.0.0.Final</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/wildfly/12.0.0.Final/wildfly-12.0.0.Final.zip\" target=\"_blank\">http://download.jboss.org/wildfly/12.0.0.Final/wildfly-12.0.0.Final.zip</a></span><br /> <span style=\"font-size:14px;\">WildFly 11.0.0.Final</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/wildfly/11.0.0.Final/wildfly-11.0.0.Final.zip\" target=\"_blank\">http://download.jboss.org/wildfly/11.0.0.Final/wildfly-11.0.0.Final.zip</a></span><br /> <span style=\"font-size:14px;\">WildFly 10.1.0.Final</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/wildfly/10.1.0.Final/wildfly-10.1.0.Final.zip\" target=\"_blank\">http://download.jboss.org/wildfly/10.1.0.Final/wildfly-10.1.0.Final.zip</a></span><br /> <span style=\"font-size:14px;\">WildFly 10.0.0.Final</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/wildfly/10.0.0.Final/wildfly-10.0.0.Final.zip\" target=\"_blank\">http://download.jboss.org/wildfly/10.0.0.Final/wildfly-10.0.0.Final.zip</a></span><br /> <span style=\"font-size:14px;\">WildFly 9.0.2.Final</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/wildfly/9.0.2.Final/wildfly-9.0.2.Final.zip\" target=\"_blank\">http://download.jboss.org/wildfly/9.0.2.Final/wildfly-9.0.2.Final.zip</a></span><br /> <span style=\"font-size:14px;\">WildFly 9.0.1.Final</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/wildfly/9.0.1.Final/wildfly-9.0.1.Final.zip\" target=\"_blank\">http://download.jboss.org/wildfly/9.0.1.Final/wildfly-9.0.1.Final.zip</a></span><br /> <span style=\"font-size:14px;\">WildFly 9.0.0.Final</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/wildfly/9.0.0.Final/wildfly-9.0.0.Final.zip\" target=\"_blank\">http://download.jboss.org/wildfly/9.0.0.Final/wildfly-9.0.0.Final.zip</a></span><br /> <span style=\"font-size:14px;\">WildFly 8.2.1.Final</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/wildfly/8.2.1.Final/wildfly-8.2.1.Final.zip\" target=\"_blank\">http://download.jboss.org/wildfly/8.2.1.Final/wildfly-8.2.1.Final.zip</a></span><br /> <span style=\"font-size:14px;\">WildFly 8.2.0.Final</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/wildfly/8.2.0.Final/wildfly-8.2.0.Final.zip\" target=\"_blank\">http://download.jboss.org/wildfly/8.2.0.Final/wildfly-8.2.0.Final.zip</a></span><br /> <span style=\"font-size:14px;\">WildFly 8.1.0.Final</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/wildfly/8.1.0.Final/wildfly-8.1.0.Final.zip\" target=\"_blank\">http://download.jboss.org/wildfly/8.1.0.Final/wildfly-8.1.0.Final.zip</a></span><br /> <span style=\"font-size:14px;\">WildFly 8.0.0.Final</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/wildfly/8.0.0.Final/wildfly-8.0.0.Final.zip\" target=\"_blank\">http://download.jboss.org/wildfly/8.0.0.Final/wildfly-8.0.0.Final.zip</a></span><br /> <span style=\"font-size:14px;\">Jboss AS 7.1.1</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/jbossas/7.1/jboss-as-7.1.1.Final/jboss-as-7.1.1.Final.zip\" target=\"_blank\">http://download.jboss.org/jbossas/7.1/jboss-as-7.1.1.Final/jboss-as-7.1.1.Final.zip</a></span><br /> <span style=\"font-size:14px;\">Jboss AS 7.1.0</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/jbossas/7.1/jboss-as-7.1.0.Final/jboss-as-7.1.0.Final.zip\" target=\"_blank\">http://download.jboss.org/jbossas/7.1/jboss-as-7.1.0.Final/jboss-as-7.1.0.Final.zip</a></span><br /> <span style=\"font-size:14px;\">Jboss AS 7.0.2</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/jbossas/7.0/jboss-as-7.0.2.Final/jboss-as-7.0.2.Final.zip\" target=\"_blank\">http://download.jboss.org/jbossas/7.0/jboss-as-7.0.2.Final/jboss-as-7.0.2.Final.zip</a></span><br /> <span style=\"font-size:14px;\">Jboss AS 7.0.1</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/jbossas/7.0/jboss-as-7.0.1.Final/jboss-as-7.0.1.Final.zip\" target=\"_blank\">http://download.jboss.org/jbossas/7.0/jboss-as-7.0.1.Final/jboss-as-7.0.1.Final.zip</a></span><br /> <span style=\"font-size:14px;\">Jboss AS 7.0.0</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/jbossas/7.0/jboss-as-7.0.0.Final/jboss-as-7.0.0.Final.zip\" target=\"_blank\">http://download.jboss.org/jbossas/7.0/jboss-as-7.0.0.Final/jboss-as-7.0.0.Final.zip</a></span><br /> <span style=\"font-size:14px;\">Jboss AS 6.1.0</span><br /> <span style=\"font-size:14px;\"><a href=\"http://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip\" target=\"_blank\">http://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip</a></span></p> \n<p><span style=\"font-size:14px;color:red;\"><b>更多链接：</b></span><br /> <span style=\"font-size:14px;\"><a href=\"http://www.jboss.org/jbossas/downloads/\" target=\"_blank\">http://www.jboss.org/jbossas/downloads/</a></span></p> \n<p><span style=\"font-size:14px;\">Jboss AS 6.0.0</span><br /> <span style=\"font-size:14px;\"><a href=\"http://sourceforge.net/projects/jboss/files/JBoss/JBoss-6.0.0.Final/jboss-as-distribution-6.0.0.Final.zip/download\" target=\"_blank\">http://sourceforge.net/projects/jboss/files/JBoss/JBoss-6.0.0.Final/jboss-as-distribution-6.0.0.Final.zip/download</a></span><br /> <span style=\"font-size:14px;\">Jboss AS 5.1.0.GA</span><br /> <span style=\"font-size:14px;\"><a href=\"http://sourceforge.net/projects/jboss/files/JBoss/JBoss-5.1.0.GA/jboss-5.1.0.GA.zip/download\" target=\"_blank\">http://sourceforge.net/projects/jboss/files/JBoss/JBoss-5.1.0.GA/jboss-5.1.0.GA.zip/download</a></span><br /> <span style=\"font-size:14px;\">Jboss AS 4.2.3.GA</span><br /> <span style=\"font-size:14px;\"><a href=\"http://sourceforge.net/projects/jboss/files/JBoss/JBoss-4.2.3.GA/jboss-4.2.3.GA.zip/download\" target=\"_blank\">http://sourceforge.net/projects/jboss/files/JBoss/JBoss-4.2.3.GA/jboss-4.2.3.GA.zip/download</a></span></p> \n<p><span style=\"font-size:14px;\"><b>更多链接：</b></span><br /> <span style=\"font-size:14px;\"><a href=\"http://sourceforge.net/projects/jboss/files/JBoss/\" target=\"_blank\">http://sourceforge.net/projects/jboss/files/JBoss/</a></span></p> \n<p><span style=\"font-size:14px;\">JBoss自版本6.0.0之前都保存在sourceforge.net。</span></p> \n<p><span style=\"font-size:14px;\">同时JBoss还有企业中间件（JBoss Enterprise Middleware），也就是JBoss EAP，最新Release版本是7.1.0。</span></p> \n<p><span style=\"font-size:14px;\"><b>JBoss EAP 7.1 下载链接（含补丁包）：</b></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1tWmX8qxSmZ9QG0nTyrZeQw\" target=\"_blank\">jboss-eap-7.1.0.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1Affg7AALaaHPP-ntzl9Qyg\" target=\"_blank\">jboss-eap-7.1.2-patch.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1Sh6Uqae6DpIeI_aHfoNk1g\" target=\"_blank\">jboss-eap-7.1.0-src.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1p4T9loO1F87wxGvitYN34Q\" target=\"_blank\">jboss-eap-7.1.0-maven-repository.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/18gYAxdVXjmf2vYglMSQwow\" target=\"_blank\">jboss-eap-7.1.0-quickstarts.zip</a></span></p> \n<p><span style=\"font-size:14px;\"><b>JBoss EAP 7.0 下载链接（含补丁包）：</b></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1OaYFN2BDWF5ic-rrKBfnJQ\" target=\"_blank\">jboss-eap-7.0.0.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1I9vFbbxmpGIBPjC0h18rig\" target=\"_blank\">jboss-eap-7.0.9-patch.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1w2Lwpu_y6ANcxMc_beSAXQ\" target=\"_blank\">jboss-eap-7.0.0-src.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1ZUjYzG3LcV5_MaWrZDqpNg\" target=\"_blank\">jboss-eap-7.0.0-maven-repository.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1Bd9nf8NqzBC2CzshdLGtRA\" target=\"_blank\">jboss-eap-7.0.0-quickstarts.zip</a></span></p> \n<p><span style=\"font-size:14px;\"><b>JBoss EAP 6.4 下载链接（含补丁包）：</b></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1mgDrOJA\" target=\"_blank\">jboss-eap-6.4.0.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1vpIKW6xiVE150fVix9aILQ\" target=\"_blank\">jboss-eap-6.4.19-patch.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1pJiJB1h\" target=\"_blank\">jboss-eap-6.4.0-src.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1o6oltj0\" target=\"_blank\">jboss-eap-6.4.0-maven-repository.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1lmbE2\" target=\"_blank\">jboss-eap-6.4.0-quickstarts.zip</a></span></p> \n<p><span style=\"font-size:14px;\"><b>JBoss EAP 6.3 下载链接（含补丁包）：</b></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1c0lc7XQ\" target=\"_blank\">jboss-eap-6.3.0.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1pB2GdrSW2SHG2-CR34pLHQ\" target=\"_blank\">jboss-eap-6.3.3-patch.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1sjnZSFb\" target=\"_blank\">jboss-eap-6.3.0-src.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1bnjIDun\" target=\"_blank\">jboss-eap-6.3.0-maven-repository.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1nt0Zpl3\" target=\"_blank\">jboss-eap-6.3.0-quickstarts.zip</a></span></p> \n<p><span style=\"font-size:14px;\"><b>JBoss EAP 6.2 下载链接（含补丁包）：</b></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1dD1iYQH\" target=\"_blank\">jboss-eap-6.2.0.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1jjdWt-3yHRVLt6ZFB0R8rg\" target=\"_blank\">jboss-eap-6.2.4-patch.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1c0zPmRe\" target=\"_blank\">jboss-eap-6.2.0-src.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1pJudig7\" target=\"_blank\">jboss-eap-6.2.0-maven-repository.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1eQ9U6Mu\" target=\"_blank\">jboss-eap-6.2.0-quickstarts.zip</a></span></p> \n<p><span style=\"font-size:14px;\"><b>JBoss EAP 6.1 下载链接：</b></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1BW1h5\" target=\"_blank\">jboss-eap-6.1.0.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1eg3Jf\" target=\"_blank\">jboss-eap-6.1.0-src.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/144TJL\" target=\"_blank\">jboss-eap-6.1.0-maven-repository.zip</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://pan.baidu.com/s/1zfnqj\" target=\"_blank\">jboss-eap-6.1.0-quickstarts.zip</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/260.html\">JBoss主要版本下载链接一览</a></p>","descriptionType":"html","publishedDate":"Mon, 26 Aug 2013 07:31:21 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/08/JBoss.jpg","linkMd5":"08ceacc33dc3312b49c5a1cd75070aa1","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn25@2020_5/2020/08/25/00-30-52-428_1204d6d6a8d90d4e.webp","destWidth":450,"destHeight":245,"sourceBytes":8152,"destBytes":8408,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/08/JBoss.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn25@2020_5/2020/08/25/00-30-52-428_1204d6d6a8d90d4e.webp"},"publishedOrCreatedDate":1598315426762},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"总结我所用过的VPS商家","link":"https://teddysun.com/?p=318","description":"<p><a href=\"https://teddysun.com/318.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/vps_diagram.gif\" alt=\"VPS\" title=\"总结我所用过的VPS商家\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　从今年 2 月建站以来，陆陆续续用过15家的 VPS ，前前后后买了超过 20 多款不同种类的 VPS，将基于Xen、OpenVZ、KVM 和 VMware vSphere 的都玩了个遍，渐渐的也总结了一些规律顺带评价一下我所用过的这些 VPS 。</span><br /> <span style=\"font-size:14px;\">　　<strong>写在前面</strong>：如今流行用 VPS 建站，就像当初流行虚拟主机一样，但需要明白一点的是，用 VPS 多多少少需要了解 Linux 、Shell 以及常用的软件如 Apache、Nginx、PHP、MySQL 等。所以，并不适合初学者，如果你只是想建站做内容，那么还是老老实实用虚拟主机吧。</span></p> \n<p> <span id=\"more-318\"></span> </p> \n<p> <span style=\"font-size:14px;\">下面按照时间顺序，列出我所用过的 VPS 商家：</span></p> \n<pre class=\"prettyprint\">xehost.com\nyardvps.com\nstylexnetworks.com\naliyun.com\nlocvps.com\nhostshare.cn\ndigitalocean.com\nswiftvm.com（已被supremebytes.com收购）\nsupremebytes.com\nbandwagonhost.com\nipxcore.com\nramnode.com\ndirectspace.net\nbuyvm.net</pre> \n<p><span style=\"font-size:14px;\">下面根据我的使用经验，给以上商家排名。鉴于是个人主观感受，所以仅供参考，你要是买了其中任何一家出了问题，不要来问我。</span></p> \n<p><span style=\"font-size:14px;\"><strong>No.1、Digitalocean.com</strong></span><br /> <span style=\"font-size:14px;\">之所以将 <a href=\"http://goo.gl/lrT5QI\" target=\"_blank\">Digitalocean.com</a> 排在第一位，是因为这家的确给我不错的印象，光是关于这家的评测文章我就写了<a href=\"https://teddysun.com/tag/digitalocean\" target=\"_blank\"> 3 篇</a>。其 San Francisco 数据中心对于国人来说非常友好，速度及性价比都是非常优秀的。规矩建站则推荐这家，至于折腾帝还是免了，因为这家的确比较严格。</span><br /> <span style=\"font-size:14px;\">所有的 VPS 都是基于 KVM 技术，只允许 Linux ，这也避免了 Windows 带来的低效和折腾。下面是我用过的一款参数：</span></p> \n<pre class=\"prettyprint lang-bsh\">RAM：512MB\nDisk Storage：20GB SSD\nMonthly Transfer：1024GB\nCPU Cores：1 core @ 2.0GHz\nIPv4 addresses：1\nServer Connection Speed：100Mbps\nLocation：San Francisco, CA, USA\nVirtualization：KVM Based</pre> \n<p><br /> <span style=\"font-size:14px;\"><strong>No.2、Ramnode.com</strong></span><br /> <span style=\"font-size:14px;\">Ramnode.com 在 2013 年异军突起，以黑马姿态占据 LET TOP20排行榜第一名，其 VPS 以稳定性著称，并且西雅图数据中心对国人友好。提供基于 OpenVZ 和 KVM 的 VPS ，并且有西雅图、亚特兰大、荷兰三处数据中心。</span><br /> <span style=\"font-size:14px;\">下面是我用过的一款 OpenVZ 的参数：</span></p> \n<pre class=\"prettyprint lang-bsh\">RAM：128MB\nvSwap：128MB\nDisk Storage：10GB SSD\nMonthly Transfer：500GB\nCPU Cores：1 core @ 3.4GHz\nIPv4 addresses：1\nIPv6 addresses：16\nServer Connection Speed：1Gbps\nLocation：Seattle, WA, USA\nVirtualization：OpenVZ Based</pre> \n<p> <span style=\"font-size:14px;\"><strong>No.3、Buyvm.net</strong></span><br /> <span style=\"font-size:14px;\">Buyvm.net 是一家加拿大公司，其所有服务器全部都在美国，数据中心有拉斯维加斯和纽约。我个人很喜欢他们家的 Stallion 面板，比 SolusVM 好看而且实用。提供基于 OpenVZ 和 KVM 的 VPS ，每个VPS提供1个IPv4和16个IPv6；在 Stallion 面板中，TUN/TAP、PPTP、IPGRE、IPIP、IPSec默认是 Enabled 状态；如果你有2台或以上的 VPS ，那么其私有Internal IP Address允许你在内网自由交换数据（不算流量）；基于 AJax 和 Java 的 Console（控制台），这个功能在 SSH 无法登录时就很有用了。</span><br /> <span style=\"font-size:14px;\">下面是我用过的一款 OpenVZ 的参数：</span></p> \n<pre class=\"prettyprint lang-bsh\">RAM：256MB\nvSwap：256MB\nDisk Storage：30GB\nMonthly Transfer：1000GB\nCPU Cores：2 core @ 2.27GHz\nIPv4 addresses：1\nIPv6 addresses：16\nServer Connection Speed：100Mbps\nLocation：Las Vegas, NV, USA\nVirtualization：OpenVZ Based</pre> \n<p> <span style=\"font-size:14px;\"><strong>No.4、Locvps.com</strong></span><br /> <span style=\"font-size:14px;\">Locvps.com 是由 Hostloc论坛的 kwx 创建，人称邝总。本人的网站就放在他家的MC机房的服务器上。在经过半年来的使用体验后感觉不错，属于国人良心IDC。至于是不是one man，那就不知道了，但现在生意越做越大，下设了3个网站分别提供基于 Xen、OpenVZ 的 VPS 以及虚拟主机。6处数据中心：洛杉矶MC、洛杉矶PR、拉斯维加斯、圣何塞、丹佛、香港。其主力机房是洛杉矶MC和香港。</span><br /> <span style=\"font-size:14px;\">下面是我用过的一款 Xen 的参数：</span></p> \n<pre class=\"prettyprint lang-bsh\">RAM：512MB\nvSwap：1024MB\nDisk Storage：15GB SSD\nMonthly Transfer：500GB\nCPU Cores：2 core @ 3.4GHz\nIPv4 addresses：1\nServer Connection Speed：100Mbps\nLocation：Los Angeles, CA, USA\nVirtualization：Xen Based</pre> \n<p> <span style=\"font-size:14px;\"><strong>No.5、Hostshare.cn</strong></span><br /> <span style=\"font-size:14px;\">Hostshare.cn 是由 Hostloc论坛的组长创建，提供洛杉矶MC机房的基于 Xen 的廉价VPS，在使用其优惠码后的价格甚至比国外的便宜，最低一款月付18元。本人曾用过一款，uptime（服务器已运行时间）一直很稳健，感觉相当良好，原本打算一直保留用来科学上网的，结果过了十一忘记续费被删了。值得一提的是，他们家的服务器无RAID，所以做好数据备份是十分必要的。当然，用来练手是相当不错的。</span><br /> <span style=\"font-size:14px;\">下面是我用过的一款 Xen 的参数：</span></p> \n<pre class=\"prettyprint lang-bsh\">RAM：256MB\nvSwap：256MB\nDisk Storage：10GB\nMonthly Transfer：300GB\nCPU Cores：1 core @ 3.4GHz\nIPv4 addresses：1\nServer Connection Speed：100Mbps\nLocation：Los Angeles, CA, USA\nVirtualization：Xen Based</pre> \n<p> <span style=\"font-size:14px;\"><strong>No.6、Bandwagonhost.com</strong></span><br /> <span style=\"font-size:14px;\">Bandwagonhost.com是IT7网络公司（始于2004年）的低端VPS品牌，国人戏称为“搬瓦工”。其有2处数据中心，亚利桑那、荷兰。作为国人用户，当然无可争议的选择了美国西海岸的亚利桑那州。他们家最大的优势就是性价比超好，稳定性不错同时兼顾价格。所有 VPS 基于 OpenVZ 技术。</span><br /> <span style=\"font-size:14px;\">下面是我用过的一款 OpenVZ 的参数：</span></p> \n<pre class=\"prettyprint lang-bsh\">RAM：512MB\nvSwap：512MB\nDisk Storage：6GB\nMonthly Transfer：500GB\nCPU Cores：2 core @ 2.13GHz\nIPv4 addresses：1\nServer Connection Speed：1Gbps\nLocation：Arizona, AZ, USA\nVirtualization：OpenVZ Based</pre> \n<p> <span style=\"font-size:14px;\">后面的几款，不想做排序了。有的在我博客里能搜到评测文章，有的只是一带而过。</span><br /> <span style=\"font-size:14px;\">玩 VPS 和玩域名一样，往往都有成瘾倾向。各种 VPS 买了扔，扔了买，浪费精力和钱。和群里的朋友一讨论，发现不少人都有和我一样的毛病。治这种病的最简单粗暴的方法就是，买一台独立服务器，将Xen、OpenVZ、KVM通通折腾一遍，就会根治了。</span><br /> <span style=\"font-size:14px;\"></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/318.html\">总结我所用过的VPS商家</a></p>","descriptionType":"html","publishedDate":"Fri, 22 Nov 2013 03:33:40 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/04/vps_diagram.gif","linkMd5":"4f2dad3a07babcb26e269ad46a5c1a26","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn31@2020_3/2020/08/25/00-30-54-104_49f756d3e7a783ef.webp","destWidth":427,"destHeight":392,"sourceBytes":31301,"destBytes":15890,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/04/vps_diagram.gif":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn31@2020_3/2020/08/25/00-30-54-104_49f756d3e7a783ef.webp"},"publishedOrCreatedDate":1598315426738},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"DigitalOcean：San Francisco 评测","link":"https://teddysun.com/?p=317","description":"<p><a href=\"https://teddysun.com/317.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_1.png\" alt=\"DigitalOcean\" title=\"DigitalOcean：San Francisco 评测\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　<a href=\"http://goo.gl/lrT5QI\" target=\"_blank\">DigitalOcean</a> 的 San Francisco 数据中心，我也用了一段时间了。从个人感觉上来说，到国内的速度一直很稳定，包括在上网高峰时段，基本稳定在150-250ms之间。对于专心建站的人来说，这是个超具有性价比的商家。我曾经写过两篇关于 DigitalOcean 的文章：<a href=\"https://teddysun.com/139.html\" target=\"_blank\">又一家VPS：DigitalOcean</a>，<a href=\"https://teddysun.com/217.html\" target=\"_blank\">DigitalOcean：给力的VPS</a>。</span><br /> <span style=\"font-size:14px;\">　　从今年5月初上线 San Francisco 数据中心以来，就已经有很多人使用并评测过了。我在这里也是简单拿出一些数据来，仅供参考。</span></p> \n<p> <span id=\"more-317\"></span> </p> \n<p><span style=\"font-size:14px;\">对于我来说，所购买的自然是最低配的那款。废话不多说，其配置如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">RAM：512MB\nDisk Storage：20GB SSD\nMonthly Transfer：1024GB\nCPU Cores：1 @ 2.0GHz\nIPv4 addresses：1\nServer Connection Speed：100 megabit/second\nLocation：San Francisco, CA, USA\nVirtualization：KVM Based\nPrice:$5/month</pre> \n<p> <span style=\"font-size:14px;\"><strong>1、CPU信息</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">[root@do ~]# cat /proc/cpuinfo\nprocessor       : 0\nvendor_id       : GenuineIntel\ncpu family      : 6\nmodel           : 2\nmodel name      : QEMU Virtual CPU version 1.0\nstepping        : 3\ncpu MHz         : 1999.999\ncache size      : 4096 KB\nfdiv_bug        : no\nhlt_bug         : no\nf00f_bug        : no\ncoma_bug        : no\nfpu             : yes\nfpu_exception   : yes\ncpuid level     : 4\nwp              : yes\nflags           : fpu de pse tsc msr pae mce cx8 apic mtrr pge mca cmov pse36 clflush mmx fxsr sse sse2 syscall nx lm up unfair_spinlock pni vmx cx16 popcnt hypervisor lahf_lm\nbogomips        : 3999.99\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 40 bits physical, 48 bits virtual\npower management:</pre> \n<p><span style=\"font-size:14px;\"><strong>2、内存信息</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">[root@do ~]# cat /proc/meminfo\nMemTotal:         511028 kB\nMemFree:           34732 kB\nBuffers:          145072 kB\nCached:           153464 kB\nSwapCached:            0 kB\nActive:           383144 kB\nInactive:          57104 kB\nActive(anon):     141824 kB\nInactive(anon):      372 kB\nActive(file):     241320 kB\nInactive(file):    56732 kB\nUnevictable:           0 kB\nMlocked:               0 kB\nHighTotal:             0 kB\nHighFree:              0 kB\nLowTotal:         511028 kB\nLowFree:           34732 kB\nSwapTotal:             0 kB\nSwapFree:              0 kB\nDirty:                20 kB\nWriteback:             0 kB\nAnonPages:        141724 kB\nMapped:            17624 kB\nShmem:               484 kB\nSlab:              27692 kB\nSReclaimable:      22584 kB\nSUnreclaim:         5108 kB\nKernelStack:         840 kB\nPageTables:         2716 kB\nNFS_Unstable:          0 kB\nBounce:                0 kB\nWritebackTmp:          0 kB\nCommitLimit:      255512 kB\nCommitted_AS:     848472 kB\nVmallocTotal:     505860 kB\nVmallocUsed:        3420 kB\nVmallocChunk:     498052 kB\nHugePages_Total:       0\nHugePages_Free:        0\nHugePages_Rsvd:        0\nHugePages_Surp:        0\nHugepagesize:       2048 kB\nDirectMap4k:        8180 kB\nDirectMap2M:      516096 kB</pre> \n<p><span style=\"font-size:14px;\"><strong>3、硬盘信息</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">[root@do ~]# df -hal\nFilesystem            Size  Used Avail Use% Mounted on\n/dev/vda               20G  3.5G   16G  19% /\nnone                  250M     0  250M   0% /dev/shm\nnone                     0     0     0   -  /proc/sys/fs/binfmt_misc</pre> \n<p><span style=\"font-size:14px;\"><strong>4、I/O性能</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">[root@do ~]# hdparm -t /dev/vda\n\n/dev/vda:\n Timing buffered disk reads:  1046 MB in  3.00 seconds = 348.58 MB/sec\n\n[root@do ~]# dd if=/dev/zero of=test bs=64k count=16k conv=fdatasync\n16384+0 records in\n16384+0 records out\n1073741824 bytes (1.1 GB) copied, 2.75323 s, 390 MB/s</pre> \n<p><span style=\"font-size:14px;\"><strong>5、chinaz的ping数据</strong></span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/11/do_ping_20131120.jpg\"><img src=\"https://teddysun.com/wp-content/uploads/2013/11/do_ping_20131120.jpg\" alt=\"DigitalOcean Ping\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"><strong>6、探针截图</strong></span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/11/do_tz_20131120.jpg\"><img src=\"https://teddysun.com/wp-content/uploads/2013/11/do_tz_20131120.jpg\" alt=\"DigitalOcean Probe\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;color:blue;\"><strong>写在后面：</strong></span><br /> <span style=\"font-size:14px;\">网上有很多人都反映这家比较严格，动辄喜欢删号封号啥的。的确，为了确保不影响其他用户，一旦 VPS 遇到 DDOS 攻击的话，一般是会 suspended ，也就是暂停 VPS ，只要在后台 Ticket 过去解释一下，应该就能解决问题。</span><br /> <span style=\"font-size:14px;\">个人以为，你只要不违反<a href=\"https://www.digitalocean.com/tos\" target=\"_blank\"> TOS（terms of service）</a>服务条款，自然不会受到那样的待遇。</span><br /> <span style=\"font-size:14px;\">当然，性价比不错的 VPS 商家还有不少，千言万语一句话，记得常备份数据。参考：</span><br /> <span style=\"font-size:14px;\"><a href=\"https://teddysun.com/178.html\" target=\"_blank\">备份利器Dropbox Uploader</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://teddysun.com/179.html\" target=\"_blank\">同步神器BitTorrent Sync</a></span></p> \n<p><span style=\"font-size:14px;\">如果你是用 WordPress 建站，参考：<a href=\"https://teddysun.com/53.html\" target=\"_blank\">Google Drive for WordPress插件汉化</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/317.html\">DigitalOcean：San Francisco 评测</a></p>","descriptionType":"html","publishedDate":"Wed, 20 Nov 2013 11:34:00 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_1.png","linkMd5":"f96ad47c7313139e27265aad2576e2ea","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn48@2020_6/2020/08/25/00-30-53-087_278e994b8cd1ad98.webp","destWidth":1083,"destHeight":653,"sourceBytes":68714,"destBytes":60970,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_1.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn48@2020_6/2020/08/25/00-30-53-087_278e994b8cd1ad98.webp","https://teddysun.com/wp-content/uploads/2013/11/do_ping_20131120.jpg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn72@2020_2/2020/08/25/00-30-58-439_26273581077a9e43.webp","https://teddysun.com/wp-content/uploads/2013/11/do_tz_20131120.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn4@2020_3/2020/08/25/00-30-59-425_15dd7d1d6ec61ac7.webp"},"publishedOrCreatedDate":1598315426737},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"WireGuard 一键安装脚本","link":"https://teddysun.com/?p=554","description":"<p><a href=\"https://teddysun.com/554.html\"><img class=\"aligncenter\" style=\"width: auto; height: auto;\" title=\"WireGuard 一键安装脚本\" src=\"https://teddysun.com/wp-content/uploads/2019/wireguard.png\" /></a></p> \n<h2><span style=\"color: red;\">本脚本适用环境</span></h2> \n<p><span style=\"font-size: 14px;\">系统支持：CentOS 7+，Debian 8+，Raspbian 10，Ubuntu 16+，Fedora 29+</span><br /> <span style=\"font-size: 14px;\">内存要求：≥256M</span><br /> <span style=\"font-size: 14px; color: red;\">日期　　：2020 年 4 月 2 日</span></p> \n<h3><span style=\"color: red;\">关于本脚本</span></h3> \n<p><span style=\"font-size: 14px;\">1. 支持两种安装方式：从代码编译安装，从 repository 直接安装；</span><br /> <span style=\"font-size: 14px;\">2. 脚本会创建默认的 wg0 设备，以及 wg0 的客户端配置，并生成客户端配置对应的二维码 png 图片；</span><br /> <span style=\"font-size: 14px;\">3. 脚本会修改本机防火墙设置，如果未启用防火墙，则会出现警告提示，需要手动去设置；</span><br /> <span style=\"font-size: 14px;\">4. 脚本会从 1024 到 20480 随机生成监听端口；</span><br /> <span style=\"font-size: 14px;\">5. 脚本支持新增，删除，列出客户端功能；</span><br /> <span style=\"font-size: 14px;\">6. 脚本支持查看已安装的 WireGuard 的版本号；</span><br /> <span style=\"font-size: 14px;\">7. 脚本支持从代码编译安装的方式升级 WireGuard 到当前最新版本；</span><br /> <span id=\"more-554\"></span></p> \n<h3><span style=\"color: red;\">客户端下载</span></h3> \n<p><span style=\"font-size: 14px;\">Windows, macOS, Android, iOS 客户端</span><br /> <span style=\"font-size: 14px;\"><a href=\"https://www.wireguard.com/install/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.wireguard.com/install/</a></span></p> \n<h3><span style=\"color: red;\">脚本使用方法</span></h3> \n<p><span style=\"font-size: 14px;\">使用 root 用户登录系统，运行以下命令下载脚本，赋予执行权限：</span></p> \n<pre class=\"prettyprint lang-bsh\">wget --no-check-certificate -O /opt/wireguard.sh https://raw.githubusercontent.com/teddysun/across/master/wireguard.sh\nchmod 755 /opt/wireguard.sh</pre> \n<h3><span style=\"color: red;\">写在前面</span></h3> \n<p><span style=\"font-size: 14px;\">WireGuard 的安装和使用条件是<span style=\"color: red;\">比较苛刻</span>的。因此我不建议在<span style=\"color: red;\">生产系统</span>里安装和使用 WireGuard，除非你知道自己在做什么。</span><br /> <span style=\"font-size: 14px;\">它依赖于内核，也就是 kernel，在不同的系统中，<span style=\"color: red;\">内核，内核源码包，内核头文件</span>必须存在且这三者版本要一致。</span><br /> <span style=\"font-size: 14px;\">RedHat，CentOS，Fedora，Oracle Linux，Amazon Linux 等 rpm 系的名字是 kernel，kernel-devel，kernel-headers。</span><br /> <span style=\"font-size: 14px;\">Debian，Ubuntu 等 deb 系的名字是 kernel，linux-headers。</span><br /> <span style=\"font-size: 14px;\">如果这三者任一条件不满足的话，则不管是从代码编译安装还是从 repository 直接安装，也只是安装了 wireguard-tools 而已。</span><br /> <span style=\"font-size: 14px;\">而 WireGuard 真正工作的部分，是 wireguard-dkms，也就是动态内核模块支持(DKMS)，是它将 WireGuard 编译到系统内核中。 </span><br /> <span style=\"font-size: 14px;\">因此，在某些 VPS 商家，是需要你先自主更换系统内核，并事先将这三者安装好，才有可能不会出现编译或安装失败。</span></p> \n<p><span style=\"font-size: 14px;\">我在测试的时候，就经历过各种内核的问题导致的安装失败。如果你也遇到了同样的问题，建议先更换内核。</span><br /> <span style=\"font-size: 14px;\">就我个人的体验而言，在 CentOS 7 下更换为 elrepo 的内核是最容易的。这里有个脚本，可以更换到最新版内核，且自动开启 BBR 网络传输算法。</span><br /> <span style=\"font-size: 14px;\"><a href=\"https://teddysun.com/489.html\" target=\"_blank\" rel=\"noopener noreferrer\">一键安装最新内核并开启 BBR 脚本</a></span><br /> <span style=\"font-size: 14px;\">此脚本运行后，最后会提示你重启系统，此时可以输入 n，暂不重启。手动安装 kernel-headers，运行如下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">yum -y install kernel-ml-headers</pre> \n<p><span style=\"font-size: 14px;\">然后再重启之。运行如下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">reboot</pre> \n<p><span style=\"font-size: 14px;\">重启后进入系统，运行下面的从代码编译安装 WireGuard，基本上就不会出现安装失败的问题了。</span><br /> <span style=\"font-size: 14px; color: red;\">注意：自主更换内核后，我建议使用从代码编译安装 WireGuard。</span></p> \n<h3><span style=\"color: red;\">更新日志</span></h3> \n<p><span style=\"font-size: 14px; color: red;\">2020 年 4 月 2 日：</span><br /> <span style=\"font-size: 14px;\">Linux 内核 5.6 正式发布了，内置了 wireguard module。</span><br /> <span style=\"font-size: 14px;\">本次更新添加了检测系统内核版本，如果大于等于 5.6 则不安装 wireguard module，仅安装 wireguard tools，然后再生成默认配置。</span><br /> <span style=\"font-size: 14px;\">当系统内核小于 5.6 时，则依然安装 wireguard module 和 tools，并生成默认配置。</span></p> \n<p><span style=\"font-size: 14px; color: red;\">2020 年 1 月 6 日：</span><br /> <span style=\"font-size: 14px;\">一个好消息是 WireGuard 即将要合并到内核 5.6 里面了。</span><br /> <span style=\"font-size: 14px;\">于是作者在近期把 repo 改名了，从而导致脚本无法获取到正确的版本号。</span><br /> <span style=\"font-size: 14px;\">并且还把原来的 repo 一分为二了，分别改为 wireguard-linux-compat 和 wireguard-tools。前者是内核模块，后者是命令行工具。</span><br /> <span style=\"font-size: 14px;\">此次更新就是修复了以上问题。</span></p> \n<p><span style=\"font-size: 14px; color: red;\">2019 年 11 月 16 日：</span><br /> <span style=\"font-size: 14px;\">1、修正客户端配置文件创建时的各参数顺序，与 Windows 客户端的显示顺序一致。</span><br /> <span style=\"font-size: 14px;\">2、新增 Windows 客户端配置示例说明。</span></p> \n<p><span style=\"font-size: 14px; color: red;\">2019 年 10 月 27 日：</span><br /> <span style=\"font-size: 14px;\">1、新增卸载函数，使用方法请参考下面的<strong>卸载方法</strong>。</span><br /> <span style=\"font-size: 14px;\">2、支持在 CentOS8 下从 repository 安装，或者从代码编译安装。</span></p> \n<h3><span style=\"color: red;\">从代码编译安装 WireGuard</span></h3> \n<pre class=\"prettyprint lang-bsh\">/opt/wireguard.sh -s</pre> \n<h3><span style=\"color: red;\">从 repository 直接安装 WireGuard</span></h3> \n<pre class=\"prettyprint lang-bsh\">/opt/wireguard.sh -r</pre> \n<h3><span style=\"color: red;\">安装完成后，脚本提示如下</span></h3> \n<pre class=\"prettyprint lang-bsh\">WireGuard VPN Server installation completed\nWireGuard VPN default client file is below:\n/etc/wireguard/wg0_client\nWireGuard VPN default client QR Code is below:\n/etc/wireguard/wg0_client.png\nDownload and scan this QR Code with your phone\nWelcome to visit: https://teddysun.com/554.html\nEnjoy it</pre> \n<h3><span style=\"color: red;\">卸载方法</span></h3> \n<pre class=\"prettyprint lang-bsh\">/opt/wireguard.sh -n</pre> \n<h3><span style=\"color: red;\">其他使用选项</span></h3> \n<p><span style=\"font-size: 14px;\">查看已安装 WireGuard 版本号</span></p> \n<pre class=\"prettyprint lang-bsh\">/opt/wireguard.sh -v</pre> \n<p><span style=\"font-size: 14px;\">编译升级 WireGuard 到当前最新版本</span></p> \n<pre class=\"prettyprint lang-bsh\">/opt/wireguard.sh -u</pre> \n<p><span style=\"font-size: 14px;\">新增 WireGuard 客户端配置</span></p> \n<pre class=\"prettyprint lang-bsh\">/opt/wireguard.sh -a</pre> \n<p><span style=\"font-size: 14px;\">删除 WireGuard 客户端配置</span><br /> <span style=\"font-size: 14px; color: red;\">注意：默认客户端 wg0 不允许删除</span></p> \n<pre class=\"prettyprint lang-bsh\">/opt/wireguard.sh -d</pre> \n<p><span style=\"font-size: 14px;\">列出 WireGuard 客户端配置</span></p> \n<pre class=\"prettyprint lang-bsh\">/opt/wireguard.sh -l</pre> \n<h3><span style=\"color: red;\">高级用法</span></h3> \n<p><span style=\"font-size: 14px;\">如果你在安装时，需要自定义自己想要的端口，那么可以 export 变量 VPN_SERVER_WG_PORT 的值，这样脚本就会读取这个变量值来定义监听端口，而不会自己随机生成。</span><br /> <span style=\"font-size: 14px;\">比如你想自定义端口为 1234，那么具体做法就是，在执行从代码编译安装 WireGuard 或者从 repository 直接安装 WireGuard 之前，运行如下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">export VPN_SERVER_WG_PORT=1234</pre> \n<p><span style=\"font-size: 14px;\">下面是一份脚本里用到的变量列表名（共计 11 个），以及它们具体代表什么含义的说明。</span><br /> <span style=\"font-size: 14px;\">VPN_SERVER_PUB_IPV4，定义服务器公网 IPv4，如果你的服务器端存在多个可用公网 IPv4，指定此变量的值。</span><br /> <span style=\"font-size: 14px;\">VPN_SERVER_PUB_IPV6，定义服务器公网 IPv6，如果你的服务器端存在多个可用公网 IPv6，指定此变量的值。</span><br /> <span style=\"font-size: 14px;\">VPN_SERVER_PUB_NIC，定义服务器默认网卡名称，如果你的服务器有多个可用网卡，指定此变量的值。</span><br /> <span style=\"font-size: 14px;\">VPN_SERVER_WG_NIC，定义 WireGuard 网卡名，默认为 wg0，这里一般不推荐指定此变量的值。</span><br /> <span style=\"font-size: 14px;\">VPN_SERVER_WG_IPV4，定义 WireGuard 服务端的内网 IPv4，默认为 10.88.88.1，这里一般不推荐指定此变量的值。</span><br /> <span style=\"font-size: 14px;\">VPN_SERVER_WG_IPV6，定义 WireGuard 服务端的内网 IPv6，默认为 fd88:88:88::1，这里一般不推荐指定此变量的值。</span><br /> <span style=\"font-size: 14px;\">VPN_SERVER_WG_PORT，定义器 WireGuard 服务端的监听端口，默认为从 1024 到 20480 随机生成，如果你想自定义端口，指定此变量的值。</span><br /> <span style=\"font-size: 14px;\">VPN_CLIENT_WG_IPV4，定义 WireGuard 默认客户端的内网 IPv4，默认为 10.88.88.2，这里一般不推荐指定此变量的值。</span><br /> <span style=\"font-size: 14px;\">VPN_CLIENT_WG_IPV6，定义 WireGuard 默认客户端的内网 IPv6，默认为 fd88:88:88::2，这里一般不推荐指定此变量的值。</span><br /> <span style=\"font-size: 14px;\">VPN_CLIENT_DNS_1，定义 WireGuard 默认客户端的 DNS，默认为 1.1.1.1，如果你想自定义为别的 DNS，指定此变量的值。</span><br /> <span style=\"font-size: 14px;\">VPN_CLIENT_DNS_2，定义 WireGuard 默认客户端的 DNS，默认为 8.8.8.8，如果你想自定义为别的 DNS，指定此变量的值。</span></p> \n<h3><span style=\"color: red;\">Windows 客户端配置</span></h3> \n<p><span style=\"font-size: 14px;\">下载，安装，打开客户端软件，点击 Add Tunnel -&gt; Add empty tunnel…</span><br /> <img class=\"left\" style=\"width: auto; height: auto;\" title=\"WireGuard 一键安装脚本\" src=\"https://teddysun.com/wp-content/uploads/2019/wireguard_w1.png\" /></p> \n<p><span style=\"font-size: 14px;\">此时出现一个可以编辑的界面，将脚本生成的客户端配置 /etc/wireguard/wg0_client 里的内容复制出来，粘贴，保存。</span><br /> <img class=\"left\" style=\"width: auto; height: auto;\" title=\"WireGuard 一键安装脚本\" src=\"https://teddysun.com/wp-content/uploads/2019/wireguard_w2.png\" /></p> \n<p><img class=\"left\" style=\"width: auto; height: auto;\" title=\"WireGuard 一键安装脚本\" src=\"https://teddysun.com/wp-content/uploads/2019/wireguard_w3.png\" /></p> \n<p><span style=\"font-size: 14px;\">点击 Activate，就可以 VPN 连接了。</span><br /> <img class=\"left\" style=\"width: auto; height: auto;\" title=\"WireGuard 一键安装脚本\" src=\"https://teddysun.com/wp-content/uploads/2019/wireguard_w4.png\" /></p> \n<h3><span style=\"color: blue;\">参考链接</span></h3> \n<p><span style=\"font-size: 14px;\"><a href=\"https://www.wireguard.com/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.wireguard.com</a></span><a href=\"https://www.wireguard.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><br /> </a><a href=\"https://github.com/WireGuard/WireGuard\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/WireGuard/WireGuard</a><br /> <span style=\"font-size: 14px;\"><a href=\"https://git.zx2c4.com/WireGuard\" target=\"_blank\" rel=\"noopener noreferrer\">https://git.zx2c4.com/WireGuard</a></span><br /> <span style=\"font-size: 14px;\"><a href=\"https://golb.hplar.ch/2019/07/wireguard-windows.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://golb.hplar.ch/2019/07/wireguard-windows.html</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/554.html\">WireGuard 一键安装脚本</a></p>","descriptionType":"html","publishedDate":"Sat, 28 Sep 2019 08:14:19 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2019/wireguard.png","linkMd5":"72f1b03b8f1b938f2609446c2c2a7e1b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn32@2020_5/2020/08/25/00-30-55-545_aa38c1c8040e781b.webp","destWidth":1200,"destHeight":630,"sourceBytes":51026,"destBytes":50540,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2019/wireguard.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn32@2020_5/2020/08/25/00-30-55-545_aa38c1c8040e781b.webp","https://teddysun.com/wp-content/uploads/2019/wireguard_w1.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn74@2020_1/2020/08/25/00-31-01-964_85b7df40d871c100.webp","https://teddysun.com/wp-content/uploads/2019/wireguard_w2.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn46@2020_6/2020/08/25/00-31-01-697_5d23563817ee0ad5.webp","https://teddysun.com/wp-content/uploads/2019/wireguard_w3.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn11@2020_6/2020/08/25/00-31-00-628_b5da1ad2900b93a8.webp","https://teddysun.com/wp-content/uploads/2019/wireguard_w4.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn71@2020_2/2020/08/25/00-30-59-846_7a8105fd7168c046.webp"},"publishedOrCreatedDate":1598315426719},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Godaddy的优惠码政策探讨","link":"https://teddysun.com/?p=279","description":"<p><a href=\"https://teddysun.com/279.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/09/godaddy.jpg\" alt=\"godaddy\" title=\"Godaddy的优惠码政策探讨\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　我从2010年初开始使用Godaddy注册域名，一开始并不知道还有优惠码一说，所以注册的域名都是全款。但自从知道了可以用优惠码后，在2011年一年间就注册了9个域名。截至目前我有20个域名注册在Godaddy（玩域名败家啊）。很长一段时间以来，在群里总会有人在讨论优惠码失效或者国人信用卡无法付款的问题，我也没太在意，直到我有几个域名即将到期准备续费的时候，我才发现，想找一个对于国人能用的优惠码是多难。</span></p> \n<p> <span id=\"more-279\"></span> </p> \n<p><span style=\"font-size:14px;\">　　没错，不少神码已经失效，比如cjc749dom、cjc795dom，$7.99+$0.18=$8.17的价格一般续费时很多人都用这2个优惠码，但是如今不行了。</span><br /> <span style=\"font-size:14px;\"> 还有，Godaddy的域名转入，没有用任何优惠码，也无法用paypal（已验证信用卡）付款，试了很多次。发了3封support除了叫我换一种付款方式就是让我清除缓存，事实上这些方法我都用了，并且换了浏览器也试过，甚至最后我截图过去说明也无济于事。</span><br /> <span style=\"font-size:14px;\">　　这次域名转入时照例是要试试用优惠码的，发现不行后，删除购物车内项目，清除cookie、cache后不带优惠码重试，购物车出现以下提示：</span><br /> <span style=\"font-size:14px;color:blue;\">　　You qualified for multiple money-saving offers! We’ve automatically applied the best offer, giving you the lowest price.&nbsp;</span><br /> <span style=\"font-size:14px;\">　　我个人猜测的原因是：上一次续费一个me域名时用了一个30%的优惠码，所以系统将这个优惠码记住了，又或者默认添加了一个优惠码，导致我最后无法通过Paypal付款。事实上，价格没有任何变动，转入域名默认就是$7.99+$0.18=$8.17，所以我百思不得其解转而求助于support，得不到任何有效的回答。</span><br /> <span style=\"font-size:14px;\">　　最终不得不弃转入Godaddy，继而转到name.com，没有任何隐藏收费就是$8.25。</span></p> \n<p><span style=\"font-size:14px;\"><b> 个人认为：</b></span><br /> <span style=\"font-size:14px;\"> 1、Godaddy自新CEO上台后，开始改变策略，不欢迎使用大幅度的优惠码注册域名。而一些低幅度的优惠码基本上又没有什么吸引力，所以这一招基本就可以把钻空子的人排除在外。而我想，Godaddy作为一个商业公司攫取利润无可厚非，但优惠码还分国家（优惠码说明里没有提到国家，但分明就是）就让人觉得难以理解，比如一些大幅度优惠码如cjcRMN199、199nuts、Kristy295等，限定只有美国或加拿大的信用卡用户才能付款成功。</span></p> \n<p><span style=\"font-size:14px;\"> 2、之前优惠码能用的时候，不少中国用户钻空子，在淘宝上代购，动辄就是几千个域名一起注册，甚至动用注册机批量注册。然后，域名到期了就扔掉。Godaddy以大幅度的优惠吸引用户注册域名，指望是续费的时候能赚上第一年亏掉的钱，结果因为国人的续费率太低，所以才想出了那么一招，也不得不让人遗憾。但是我想说的是，<span style=\"color:red;\">只要是规则就会有漏洞，明知有漏洞修补后却不明示，依旧以一副漏洞的样子示人，这大概就是Godaddy现在的风格了。</span></span></p> \n<p><span style=\"font-size:14px;\"> 3、虽然Godaddy早在2010年就支持支付宝方式付款，但用此方式购买不但成功率不高，而且很多优惠码无法使用，所以基本上，用这一方式付款除了不差钱就是没办法（没有信用卡）。对于目前Godaddy的优惠码策略，我感觉基本上已经不适用于国人，其域名价格在不使用优惠码的条件下，已无多少竞争力可言。name.com、namecheap.com、namesilo.com都是其有力的竞争对手。</span></p> \n<p><span style=\"font-size:14px;\"> 4、Godaddy依旧在用发优惠码邮件的方式刷存在感，但是邮件里收到的那些优惠码，能打动人吗？</span></p> \n<p><span style=\"font-size:14px;\"><b> 总结：</b></span><br /> <span style=\"font-size:14px;\"> Godaddy作为全球最大域名注册商，就是以低价来获得市场份额的。但是这低价却让用户用之不易，却不明示，着实让人摸不着头脑，甚至每次付款，都成了碰运气之举。多次失败后，像我一样放弃的也大有人在吧。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/279.html\">Godaddy的优惠码政策探讨</a></p>","descriptionType":"html","publishedDate":"Mon, 30 Sep 2013 07:56:37 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/09/godaddy.jpg","linkMd5":"bf01ab95c64a668f5dfd3bfa3ecddc90","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn60@2020_6/2020/08/25/00-30-52-036_0567fc2e60464639.webp","destWidth":801,"destHeight":406,"sourceBytes":109655,"destBytes":28724,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/09/godaddy.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn60@2020_6/2020/08/25/00-30-52-036_0567fc2e60464639.webp"},"publishedOrCreatedDate":1598315426739},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"在CentOS下编译安装GCC","link":"https://teddysun.com/?p=432","description":"<p><a href=\"https://teddysun.com/432.html\"><img src=\"https://teddysun.com/wp-content/uploads/2015/gcc_logo.png\" title=\"在CentOS下编译安装GCC\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">我们知道，关于 GCC 在 CentOS 下通过 yum 安装默认版本号，CentOS 5 是 4.1.2；CentOS 6 是 4.4.7；CentOS 7 是 4.8.3。</span><br /> <span style=\"font-size:14px;\">很多时候在编译安装软件都需要高版本的 GCC，否则就会报错。</span><br /> <span style=\"font-size:14px;\">那么如何升级 GCC 的版本呢？</span></p> \n<p><span style=\"font-size:14px;\">首先要确认升级到的 GCC 版本号。</span><br /> <span style=\"font-size:14px;\">目前 GCC 的最新版已经到了 5.2，而 CentOS 7 则依然使用其 4.8，所以基于兼容性考虑，我选择升级到 4.8.5。</span><br /> <span style=\"font-size:14px;\">GCC 官网：<span style=\"font-family:Courier New;\"><a href=\"https://gcc.gnu.org\" target=\"_blank\">https://gcc.gnu.org</a></span></span></p> \n<p> <span id=\"more-432\"></span> </p> \n<p><span style=\"font-size:14px;\">下面开始一步一步来编译安装 GCC 4.8.5，需要注意的是，在编译安装 GCC 之前，系统里必须先要通过 yum 安装老版本的 GCC 和依赖库。</span><br /> <span style=\"font-size:14px;\">如果是在 x86_64 系统下编译的话，还需要安装 libgcc.i686 glibc-devel.i686 才行。</span></p> \n<pre class=\"prettyprint lang-bsh\">yum install -y gcc texinfo-tex flex zip libgcc.i686 glibc-devel.i686</pre> \n<p> <span style=\"font-size:14px;\">当然，如果是在 CentOS 5 x86_64 系统下安装，则是如下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">yum install -y gcc texinfo-tex flex zip libgcc.i386 glibc-devel.i386</pre> \n<p> <span style=\"font-size:14px;\">同时需注意，编译安装 GCC 内存不小于 1GB，Swap 不小于 1GB，硬盘最低不小于 10GB，否则极有可能会中途报错退出。</span><br /> <span style=\"font-size:14px;\">编译安装完后，目录 gcc-4.8.5 将会有 5GB 之多。</span></p> \n<p><span style=\"font-size:14px;\">1、下载源码</span></p> \n<pre class=\"prettyprint lang-bsh\">wget ftp://ftp.gnu.org/gnu/gcc/gcc-4.8.5/gcc-4.8.5.tar.gz</pre> \n<p> <span style=\"font-size:14px;\">2、下载依赖包</span><br /> <span style=\"font-size:14px;\">编译安装 GCC 需要依赖 mpc，mpfr，gmp包。好在 GCC 源码里自带脚本可以轻松下载依赖包。</span></p> \n<pre class=\"prettyprint lang-bsh\">tar zxf gcc-4.8.5.tar.gz\ncd gcc-4.8.5\n./contrib/download_prerequisites</pre> \n<p> <span style=\"font-size:14px;\">在此脚本里可以看到依赖包的版本号依次是 mpc-0.8.1，mpfr-2.4.2，gmp-4.3.2。</span></p> \n<p><span style=\"font-size:14px;\">3、编译安装</span></p> \n<pre class=\"prettyprint lang-bsh\">mkdir gcc-build-4.8.5\ncd gcc-build-4.8.5\n../configure --prefix=/usr\nmake &amp;&amp; make install</pre> \n<p> <span style=\"font-size:14px;\">为了避免安装后系统里出现多个版本的 GCC，这里直接将编译安装的目录指定为 /usr，如果不指定 –prefix，则会默认安装到 /usr/local 下。</span><br /> <span style=\"font-size:14px;\">GCC 4.8.5 光是源代码就有105MB，因此可以预见整个编译过程需要很长时间（差不多 2 个小时左右）。</span></p> \n<p><span style=\"font-size:14px;\">4、查看版本号</span></p> \n<pre class=\"prettyprint lang-bsh\">gcc --version\ngcc (GCC) 4.8.5\n\ng++ --version\ng++ (GCC) 4.8.5\n\nwhich gcc\n/usr/bin/gcc\n\nwhich g++\n/usr/bin/g++</pre> \n<p> <span style=\"font-size:14px;\">注：本次是在 CentOS 6.7 x86_64 下安装成功。</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2015/gcc_install.png\" title=\"gcc\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\">5、测试程序</span><br /> <span style=\"font-size:14px;\">cd ~</span><br /> <span style=\"font-size:14px;\">创建一个 main.cpp 文件，内容如下：</span></p> \n<pre class=\"prettyprint lang-cpp\">    #include &lt;iostream&gt;\n    using namespace std;\n    int main() {\n        cout &lt;&lt; \"Hello world!\" &lt;&lt; endl;\n        return 0;\n    }</pre> \n<p><span style=\"font-size:14px;\">&nbsp; &nbsp;&nbsp;</span><br /> <span style=\"font-size:14px;\">编译 main.cpp，执行如下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">g++ main.cpp -o main</pre> \n<p> <span style=\"font-size:14px;\">执行生成的文件：</span><br /> <span style=\"font-size:14px;\">./main</span></p> \n<p><span style=\"font-size:14px;\">输出如下：</span><br /> <span style=\"font-size:14px;\">Hello world!</span></p> \n<p><span style=\"font-size:14px;color:blue;\"><strong>写在最后</strong></span><br /> <span style=\"font-size:14px;\">通过 rpm 命令查询 GCC 包的安装情况：</span><br /> <span style=\"font-size:14px;\">rpm -qa | grep gcc</span></p> \n<p><span style=\"font-size:14px;\">输出如下：</span><br /> <span style=\"font-size:14px;\">gcc-4.4.7-16.el6.x86_64</span><br /> <span style=\"font-size:14px;\">libgcc-4.4.7-16.el6.x86_64</span><br /> <span style=\"font-size:14px;\">libgcc-4.4.7-16.el6.i686</span><br /> <span style=\"font-size:14px;\">gcc-c++-4.4.7-16.el6.x86_64</span></p> \n<p><span style=\"font-size:14px;\">因此通过以上步骤编译安装 GCC 后，请慎用 yum update 或者通过 yum 来升级 GCC 的命令。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/432.html\">在CentOS下编译安装GCC</a></p>","descriptionType":"html","publishedDate":"Wed, 02 Sep 2015 05:49:59 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2015/gcc_logo.png","linkMd5":"a64267636a54186517f53af2a05fa0ef","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn50@2020_3/2020/08/25/00-30-52-039_7359fe58e03a8180.webp","destWidth":450,"destHeight":480,"sourceBytes":73713,"destBytes":18804,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2015/gcc_logo.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn50@2020_3/2020/08/25/00-30-52-039_7359fe58e03a8180.webp","https://teddysun.com/wp-content/uploads/2015/gcc_install.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn40@2020_3/2020/08/25/00-30-58-671_3849dbac179eb536.webp"},"publishedOrCreatedDate":1598315426724},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Javascript获取URL参数值","link":"https://teddysun.com/?p=319","description":"<p><a href=\"https://teddysun.com/319.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/11/javascript.jpg\" alt=\"Javascript\" title=\"Javascript获取URL参数值\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　今天碰到在做一个动态页面的时候，需要用到 URL 的参数值来作判断，从而决定某一块内容在当前页面是否显示。例如exampe.html?parm1=xxx&amp;parm2=xxx&amp;parm3=xxx&amp;…，在这里就需要获取.html后面的所有参数的值。</span><br /> <span style=\"font-size:14px;\">　　脑子里的第一个想法是利用“&amp;”符号分割 URL ，从而达到获取参数值的目的。</span><br /> <span style=\"font-size:14px;\">　　同时在网上搜了下，实地操作后，记录如下。</span></p> \n<p> <span id=\"more-319\"></span> </p> \n<p> <span style=\"font-size:14px;\"><strong>方法一：</strong></span><br /> <span style=\"font-size:14px;\">在某一块内容的 div 标签后面，加入如下 Javascript 代码：</span> </p> \n<p> </p> \n<pre class=\"prettyprint lang-js\">\t&lt;script type=\"text/javascript\"&gt;\n\tfunction getQueryString(name) {\n\t\tvar reg = new RegExp(\"(^|&amp;)\" + name + \"=([^&amp;]*)(&amp;|$)\", \"i\");\n\t\tvar r = document.location.search.substr(1).match(reg);\n\t\tif (r != null) return unescape(r[2]); return null;\n\t}\n\tif(getQueryString(\"parm1\") != null) {\n\t\tdocument.getElementById(\"xxxx\").style.display = \"none\";\n\t}\n\t&lt;/script&gt;</pre> \n<p><span style=\"font-size:14px;\">这里用到的判断就是，根据 parm1 的值来决定是否显示 id 为 xxxx 这一块 div 区域。</span><br /> <span style=\"font-size:14px;\">此处用到的正则表达式解释：</span><br /> <span style=\"font-size:14px;\">以&amp;开始或直接以name开始；以&amp;结束或直接结束；name的值是由0到多个不是&amp;的字符组成；”i”是忽略大小写！</span></p> \n<p><span style=\"font-size:14px;\"><strong>方法二：</strong></span><br /> <span style=\"font-size:14px;\">这是一个获取 URL 带 questring 参数的Javascript客户端解决方案。</span></p> \n<pre class=\"prettyprint lang-js\">\t&lt;script type=\"text/javascript\"&gt;\n\tfunction GetRequest() {\n\tvar url = location.search; //获取url中\"?\"符后的字串\n\tvar theRequest = new Object();\n\tif (url.indexOf(\"?\") != -1) {\n\t\tvar str = url.substr(1);\n\t\tif (str.indexOf(\"&amp;\") != -1) {\n\t\t\tstrs = str.split(\"&amp;\");\n\t\t\tfor (var i = 0; i &lt; strs.length; i++) {\n\t\t\t\ttheRequest[strs[i].split(\"=\")[0]] = unescape(strs[i].split(\"=\")[1]);\n\t\t\t}\n\t\t} else {\n\t\t\ttheRequest[str.split(\"=\")[0]] = unescape(str.split(\"=\")[1]);\n\t\t}\n\t}\n\t\treturn theRequest;\n\t}\n\t&lt;/script&gt;</pre> \n<p><span style=\"font-size:14px;\">调用此函数的方法：</span></p> \n<pre class=\"prettyprint lang-js\">\t&lt;script type=\"text/javascript\"&gt;\n\t\tvar Request = new Object();\n\t\tRequest = GetRequest();\n\t\tvar parm1,parm2,parm3,parmN;\n\t\tparm1 = Request['parm1'];\n\t\tparm2 = Request['parm2'];\n\t\tparm3 = Request['parm3'];\n\t\tparmN = Request['parmN'];\n\t&lt;/script&gt;</pre> \n<p> <span style=\"font-size:14px;color:blue;\"><strong>参考链接：</strong></span><br /> <span style=\"font-size:14px;font-family:Courier New;\"><a href=\"http://www.cnblogs.com/jiekk/archive/2011/06/28/2092444.html\" target=\"_blank\">http://www.cnblogs.com/jiekk/archive/2011/06/28/2092444.html</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/319.html\">Javascript获取URL参数值</a></p>","descriptionType":"html","publishedDate":"Mon, 25 Nov 2013 11:56:07 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/11/javascript.jpg","linkMd5":"b80ca55c6c5364c4a6a1a24258b05789","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn91@2020_3/2020/08/25/00-30-52-062_c5316266779a4810.webp","destWidth":600,"destHeight":363,"sourceBytes":74138,"destBytes":20422,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/11/javascript.jpg":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn91@2020_3/2020/08/25/00-30-52-062_c5316266779a4810.webp"},"publishedOrCreatedDate":1598315426739},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"少壮不努力，一生在内地","link":"https://teddysun.com/?p=390","description":"<p><a href=\"https://teddysun.com/390.html\"><img src=\"https://teddysun.com/wp-content/uploads/2014/google_block.jpg\" title=\"少壮不努力，一生在内地\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">2014年眼看就要结束了，回顾这过去的一年里，我干过的最有成就感的事，莫过于写了几个一键安装脚本，在这样一个最好又最坏的时代里，它所带来的效果是微乎其微的，但对于我个人，确是无比重要的荣光。</span></p> \n<p><span style=\"font-size:14px;\">当初纯粹的无心之举，却让这几篇文章成为点击率之最，这也是我预料之外的。</span></p> \n<p><span style=\"font-size:14px;\">也是从今年开始，逐渐地文章更新也不再频繁了，但对于评论，我能做到及时回复，给予我能力范围内的回答，也算无愧于心了。</span></p> \n<p> <span id=\"more-390\"></span> </p> \n<p><span style=\"font-size:14px;\">我无法预料未来，也许根本没有未来，或者只是他们口中的未来。作为一名技术从业者，我深深地体会到面对网络屏蔽的无力感，即便是你想方设法能穿越这堵墙，也会感到挫败。我们的开发者，平白无故要比别人多花一份时间，精力和金钱来冲破藩篱。</span></p> \n<p><span style=\"font-size:14px;\">在这里，特别感谢 Shadowsocks 的作者 <a href=\"https://github.com/clowwindy\" target=\"_blank\">@clowwindy</a> 及 <a href=\"https://github.com/madeye\" target=\"_blank\">@madeye</a> ，是他们以及诸多开发者的努力，让我们离世界的距离又近了一步。而我所做的，仅仅是向他们看齐罢了。</span></p> \n<p><span style=\"font-size:14px;\">若干年前，我看到这么一句话，「<strong><span style=\"color:red;\">少壮不努力，一生在内地</span></strong>」，从此便记在心里。不管我们肉身何处，心，总是向往自由的。</span></p> \n<p><span style=\"font-size:14px;\">共勉之！</span></p> \n<p><span style=\"font-size:14px;\"><strong>后记：</strong></span><br /> <span style=\"font-size:14px;\">写这篇个人年末总结的时候，恰逢 Gmail 遭遇完全屏蔽一事。我自不多言，截取几段来自 Twitter 的评论，有目共睹吧。</span></p> \n<p><span style=\"font-size:14px;\">1、不用 Google 又不是不能活。不上网又不是不能活。不用电脑又不是不能活。不用手机又不是不能活。不看电视又不是不能活。不住楼房又不是不能活。不穿衣服又不是不能活。不会说话又不是不能活。认为 GFW 无所谓的人，只配过原始人的生活。</span></p> \n<p><span style=\"font-size:14px;\">2、限购房子，限购车子，限制互联网，一个个活得诚惶诚恐，这个国家，什么都限制，唯独不限制政府的权力。事实是，真正有钱有权的人可以养很多的房子，很多的车，而穷人的孩子，眼巴巴看着美好生活，一步一步地却总也跟不上。</span></p> \n<p><span style=\"font-size:14px;\">3、对普罗大众封锁谷歌等“普世”产品，但砌墙者的电脑却有6个VPN，新华社、央视、环球以及老胡等却在推特上进行所谓“大外宣”，或是在雁栖湖、乌镇设立互联网特区。这些个特权并不新鲜。小礼堂的情色电影，书架上的《金瓶梅》，你若是高干，就是在文革里，也能实现。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/390.html\">少壮不努力，一生在内地</a></p>","descriptionType":"html","publishedDate":"Tue, 30 Dec 2014 06:31:53 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2014/google_block.jpg","linkMd5":"c9530511e448decf6d4ee3b2f9f4304a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn31@2020_3/2020/08/25/00-30-53-472_e61d7c82413e22d2.webp","destWidth":640,"destHeight":360,"sourceBytes":22587,"destBytes":18028,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2014/google_block.jpg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn31@2020_3/2020/08/25/00-30-53-472_e61d7c82413e22d2.webp"},"publishedOrCreatedDate":1598315426734},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"LAMP安装脚本","link":"https://teddysun.com/?p=45","description":"<p><span style=\"font-size:21px;font-family:'Microsoft YaHei';color:#000;\">本脚本适用环境：</span></p> \n<ul> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">系统支持：CentOS-5 (32bit/64bit)或CentOS-6 (32bit/64bit)</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 内存要求：≥512M</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 日期：2013年02月22日</span> </li> \n</ul> \n<p><span style=\"font-size:21px;font-family:'Microsoft YaHei';color:#000;\">将会安装:</span></p> \n<ul> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">1、Apache 2.4.3</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 2、MySQL 5.5.30</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 3、PHP 5.3.22 + ZendGuardLoader(Zend出品的加速器)</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 4、phpMyAdmin 3.5.7</span> </li> \n <p><span id=\"more-45\"></span></p> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 5、OCI8 + oracle-instantclient &nbsp;(可选安装，支持PHP连接Oracle数据库)</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 6、xcache 2.0.1 (可选安装)</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 7、xcache 3.0.1 (推荐安装)</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 8、pure-ftpd-1.0.36（可选安装）</span> </li> \n</ul> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 注意：6、7二者只能选其一安装。</span></p> \n<p><span style=\"font-size:21px;font-family:'Microsoft YaHei';color:#000;\">如何安装：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">第一步，终端中输入以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">cd /root\nwget http://teddysun.googlecode.com/files/lamp1.2.1.tar.gz\ntar -zxvf lamp1.2.1.tar.gz\ncd /root/lamp1.2.1\nchmod +x *.sh</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 第二步，禁止SELINUX</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 终端中输入以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">cd /root/lamp1.2.1\n./disable.sh</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 第三步，安装LAMP</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 终端中输入以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">cd /root/lamp1.2.1\n./lamp.sh | tee lamp.log</pre> \n<p><span style=\"font-size:21px;font-family:'Microsoft YaHei';color:#000;\">安装其它：</span></p> \n<ul> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">1、（可选安装）执行脚本xcache_2.0.1.sh安装xcache 2.0.1。(命令：./xcache_2.0.1.sh)</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">&nbsp; &nbsp; &nbsp;（推荐安装）执行脚本xcache_3.0.1.sh安装xcache 3.0.1。(命令：./xcache_3.0.1.sh)</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 2、执行脚本php5.3_oci8_oracle11g.sh安装OCI8扩展以及oracle-instantclient11.2（命令：./php5.3_oci8_oracle11g.sh）</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 3、执行脚本php5.3_oci8_oracle10g.sh安装OCI8扩展以及oracle-instantclient10.2（命令：./php5.3_oci8_oracle10g.sh）</span> </li> \n <li> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 4、（可选安装）执行脚本pureftpd.sh安装pure-ftpd-1.0.36。(命令：./pureftpd.sh)</span> </li> \n</ul> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 备注：2、3两者选其一执行即可（可选）。该脚本是为了使PHP可以连接Oracle数据库。若连接的数据库版本为10.2，则执行3，否则执行2。</span></p> \n<p><span style=\"font-size:21px;font-family:'Microsoft YaHei';color:#000;\">注意：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">1、执行脚本时出现下面的错误提示时。</span></p> \n<pre class=\"prettyprint lang-bsh\">-bash: ./lamp.sh: /bin/bash^M: bad interpreter: No such file or directory</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 是因为Windows下和Linux下的文件编码不同所致。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 解决办法是：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 执行</span></p> \n<pre class=\"prettyprint lang-bsh\">vi lamp.sh</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 输入命令</span></p> \n<pre class=\"prettyprint lang-bsh\">:set ff=unix </pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> #注意，包括冒号</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 回车后，输入ZZ（注意为大写连续2个字母Z），保存退出vi命令。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 2、Oracle数据库连接错误排查</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 一般连接外部oracle服务器那一步骤时，可能会出现ORA-24408:could not generate unique server group name这样的错误，解决办法是在hosts中将主机名添加即可：</span></p> \n<pre class=\"prettyprint lang-bsh\">vi /etc/hosts\n127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 test\n::1 localhost localhost.localdomain localhost6 localhost6.localdomain6 test</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 上面的代码中，test即为主机名。然后重启网络服务即可。service network restart</span></p> \n<p><span style=\"font-size:21px;font-family:'Microsoft YaHei';color:#000;\"> 使用提示：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> lamp add(del,list)：创建（删除，列出）虚拟主机。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> lamp ftp(add|del|list)：创建（删除，列出）ftp用户。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> lamp uninstall：一键删除lamp（删除之前注意备份好数据！）</span></p> \n<p><span style=\"font-size:21px;font-family:'Microsoft YaHei';color:#000;\">程序目录：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">mysql安装目录: /usr/local/mysql</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> mysql data目录：/usr/local/mysql/data（默认，安装时可更改路径）</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> php安装目录: /usr/local/php</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> apache安装目录： /usr/local/apache</span></p> \n<p><span style=\"font-size:21px;font-family:'Microsoft YaHei';color:#000;\">命令一览：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">mysql命令: /etc/init.d/mysqld(start|stop|restart|reload|status)</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> &nbsp; &nbsp; &nbsp; &nbsp;或：service mysqld(start|stop|restart|reload|status)</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> apache命令: /etc/init.d/httpd(start|stop|restart|reload|status)</span><br /> <span style=\"font-size:14px;\"> &nbsp; &nbsp; &nbsp; &nbsp;或：service httpd(start|stop|restart|reload|status) </span>&nbsp; &nbsp; &nbsp;</p> \n<p><span style=\"font-size:21px;font-family:'Microsoft YaHei';color:#000;\">网站根目录：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">安装完后默认的web根目录： /data/www/default</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 更多信息请参考<a href=\"https://code.google.com/p/teddysun/\" target=\"_blank\">Google code项目主页</a></span>。</p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';color:red;\">更新（2013年5月26日）：LAMP一键安装脚本已更新到2.0版本。详情请参照<a href=\"https://teddysun.com/lamp\" target=\"_blank\">页面</a>。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/45.html\">LAMP安装脚本</a></p>","descriptionType":"html","publishedDate":"Sun, 24 Feb 2013 04:03:48 +0000","feedId":9594,"bgimg":"","linkMd5":"c6c76e0dff89170814734216defd36b1","bgimgJsdelivr":"","metaImg":"","author":"秋水逸冰","publishedOrCreatedDate":1598315426751},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"域名那些事儿5","link":"https://teddysun.com/?p=552","description":"<p><a href=\"https://teddysun.com/552.html\"><img src=\"https://teddysun.com/wp-content/uploads/2019/domain5.png\" title=\"域名那些事儿5\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">一段时间以来，陆陆续续又注册了不少国别（地区）域名。甚至在一些国别（地区）域名，还捡了不少漏，注册到了自己喜欢的前缀。</span><br /> <span style=\"font-size:14px;\">比如，在日本宣布新年号为令和的那天，抢注到了 <a href=\"http://reiwa.hk\" target=\"_blank\" rel=\"noopener noreferrer\">reiwa.hk</a>；把 <a href=\"http://teddy.hk\" target=\"_blank\" rel=\"noopener noreferrer\">teddy.hk</a> 和 <a href=\"http://teddy.tw\" target=\"_blank\" rel=\"noopener noreferrer\">teddy.tw</a> 也纳入囊中等等。</span><br /> <span style=\"font-size:14px;\">这其中，最曲折的要数 <a href=\"http://ssr.jp\" target=\"_blank\" rel=\"noopener noreferrer\">ssr.jp</a> 这个域名。</span><br /> <span style=\"font-size:14px;\">这是一个拍卖得来的域名，所花代价不菲。个中原因还是我太冲动。</span></p> \n<p> <span id=\"more-552\"></span> </p> \n<p><span style=\"font-size:14px;\">下面开始说故事，请搬好板凳前排坐好。</span></p> \n<p><span style=\"font-size:14px;\">日本的域名注册业务，事实上差不多已经被 GMO 集团垄断，域名换来换去都逃不脱 GMO 的控制。</span><br /> <span style=\"font-size:14px;\">SSL 方面则有 globalsign，也是 GMO 旗下的。</span><br /> <span style=\"font-size:14px;\">甚至可以这么说，凡是在日本开展互联网业务的个人或企业，都避不开 GMO，或多或少都要用到他们家的服务。</span><br /> <span style=\"font-size:14px;\">我曾经在GMO 旗下的 onamae.com 及 z.com 都注册过域名，其使用体验非常之不愉快。这是后话，后面会提到。</span></p> \n<p><span style=\"font-size:14px;\">onamae.com 会在每个月举办中古（也就是二手，即到期未续费域名） .jp 域名的拍卖活动，所有列出来的待拍卖域名以价格 6000 日元起步，最后是出价高者得。</span><br /> <span style=\"font-size:14px;\">我在一次很偶然的机会下，看到了 ssr.jp 在拍卖列表中。</span><br /> <span style=\"font-size:14px;\">众所周知，这个 ssr 是一个我很熟悉的名词缩写，同时又由于手游阴阳师的火爆，SSR 卡牌是最稀有的种类。所以就产生了想要拍下的念头。</span><br /> <span style=\"font-size:14px;\">较量是从上午 9 点开始，在 19 点半左右达到巅峰。</span><br /> <span style=\"font-size:14px;\">我的出价从 7500 日元起步，被反超，继续出价，再被反超，出一次稍微大的，又被反超，出一次更大的，再次被反超……于是我开始恶作剧式出价，然后再次被反超，出价给死死咬住。</span><br /> <span style=\"font-size:14px;\">我开始觉得有意思，开始想到，即便最后拍不到这个域名，也要让其拥有者付出不菲的代价。</span><br /> <span style=\"font-size:14px;\">继续恶作剧式提高出价，想看着下一轮的被反超。</span><br /> <span style=\"font-size:14px;\">当时间快要到截止时间晚上 19 点的时候，就在我觉得对方不会再次出价的时候，系统居然延迟了该域名的拍卖截止时间（从这里也能看出 onamae.com 的风格）。</span><br /> <span style=\"font-size:14px;\">系统自动延迟了 30 分钟，然后就看到价格再一次被反超。</span><br /> <span style=\"font-size:14px;\">我，目！瞪！口！呆！</span><br /> <span style=\"font-size:14px;\">我甚至开始怀疑是不是系统在玩我。此时我的出价已经到了 30000 日元。</span><br /> <span style=\"font-size:14px;\">我想，再把价格最后一次抬高吧，如果对方还比我高，我就放弃了。</span><br /> <span style=\"font-size:14px;\">立 flag 后通常都不会有什么好结果，这很符合墨菲定律。我隐约觉得对方可能不会再出价了。</span><br /> <span style=\"font-size:14px;\">最后果然如我所料，对方放弃了出价。最后的成交价是 34800 日元。</span><br /> <span style=\"font-size:14px;\">我懵逼了，搬起的石头最终砸到了自己的脚。而这也是我玩域名迄今为止，最贵的域名。</span></p> \n<p><span style=\"font-size:14px;\">更有意思的事在后面。我一开始绝对想不到这个 ssr.jp 还是个有故事的域名。</span></p> \n<p><span style=\"font-size:14px;\">我喜欢玩域名邮箱，那么这个域名自然而然也会被我拿来开通域名邮箱。</span><br /> <span style=\"font-size:14px;\">有意思的事情就发生在开通了域名邮箱之后。</span><br /> <span style=\"font-size:14px;\">通常情况下，我喜欢将域名邮箱的所有前缀都集中转发到某个邮箱里，换句话说，我的每个域名邮箱，都拥有无数个前缀名。</span><br /> <span style=\"font-size:14px;\">于是，我就经常能收到 ssr.jp 前任主人的各种邮件。比如 Facebook 密码重置，宅急便不在联络，年金通知，银行转账通知等等等等。</span><br /> <span style=\"font-size:14px;\">我对这些邮件均无动于衷（入侵别人帐号是违法的），也没有采取任何措施通知前任主人。</span><br /> <span style=\"font-size:14px;\">是的，我在等他来联系我，如果他觉得这个域名对于他来说更重要的话。</span></p> \n<p><span style=\"font-size:14px;\">故事到这里就差不多要告一段落了。</span><br /> <span style=\"font-size:14px;\">我想告诉大家的是，拍卖二手域名需谨慎，更不要一时冲动不计后果的拍下来。因为你不知道它是不是一个烫手山芋。</span></p> \n<p><span style=\"font-size:14px;\">再来吐槽一下 onamae.com 及 z.com 的使用体验。</span><br /> <span style=\"font-size:14px;\">且不说其这两家网页的落后，单是一个登录后台操作，往往就需要十几二十秒。后台的各种操作，比如域名搜索，注册，确认等，基本全是这种需要几十秒的风格。</span><br /> <span style=\"font-size:14px;\">性能差，这是我的第一个印象。</span></p> \n<p><span style=\"font-size:14px;\">z.com 难得地支持了 PayPal 和 Alipay，所以我就一直在用着，尽管其后台非常难用，也只能忍受。</span><br /> <span style=\"font-size:14px;\">直到有一次续费两个 jp 域名，到付费网关的时候出现错误而无法返回，于是出现了 PayPal 扣款而实际却没到账的情况。</span><br /> <span style=\"font-size:14px;\">提交工单表格根本没人回；发邮件给客服，扯皮了很久就是一口咬定没发现问题。我在 PayPal 上发起争议也不了了之没有下文。最后我放弃了这笔 6000 多日元的争议，自认倒霉。</span><br /> <span style=\"font-size:14px;\">服务差，这是我的第二个印象。</span></p> \n<p><span style=\"font-size:14px;\">onamae.com 有看似很多种付款方式，其实都对国外用户不友好。</span><br /> <span style=\"font-size:14px;\">后来想把几个 jp 后缀域名从 onamae.com 转移到 value-domain.com（备注：value-domain.com 也是 GMO 旗下的域名注册网站，只不过这家是 PHP 写的管理后台，使用体验稍微好点）。</span><br /> <span style=\"font-size:14px;\">费了一番劲（阅读各种转移的文档以及选择转移的方式等），终于转移成功。</span><br /> <span style=\"font-size:14px;\">但是之前在 onamae.com 已经提前续费了 1 年的 jp 域名，转移后的域名到期日却没有任何变化。</span><br /> <span style=\"font-size:14px;\">在咨询 onamae.com 客服后被告知，由于 jprs 的更新机制，之前已经提前续费的钱是无法退回的。</span><br /> <span style=\"font-size:14px;\">体验差，这是我的第三个印象。</span></p> \n<p><span style=\"font-size:14px;\">为什么已经提前续费的钱退不回来呢？</span><br /> <span style=\"font-size:14px;\">这里就不得不吐槽一下日本 jprs 的域名更新机制了（备注：jprs 是 jp 国别域名的管理机构，同时也是个要赚钱的商业公司）。</span><br /> <span style=\"font-size:14px;\">jp 域名是按照自然月来计算过期日，譬如你是在今年 4 月 1 日注册的域名，那么过期日则是下一年的月末，也就是下一年的 4 月 30 日。而且你在注册商那里不管注册几年，whois 信息显示的过期日始终是下一年。注册局只在每个月的月初才会统一更新 whois 信息，每次只增加 1 年，当然前提是你的域名在注册商那里已经续费了。</span><br /> <span style=\"font-size:14px;\">如果中途你要把 jp 域名转出去，最好是先等转移完成后再到新服务商那里续费，以避免损失。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/552.html\">域名那些事儿5</a></p>","descriptionType":"html","publishedDate":"Sun, 18 Aug 2019 07:53:20 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2019/domain5.png","linkMd5":"badd196288d8b8ed72e711683e071ab1","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn68@2020_2/2020/08/25/00-30-52-836_0325bb29339930f7.webp","destWidth":600,"destHeight":513,"sourceBytes":38820,"destBytes":25868,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2019/domain5.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn68@2020_2/2020/08/25/00-30-52-836_0325bb29339930f7.webp"},"publishedOrCreatedDate":1598315426742},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"新购VPS后的设置及网站迁移步骤","link":"https://teddysun.com/?p=276","description":"<p><a href=\"https://teddysun.com/276.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/07/vps.jpg\" alt=\"vps\" title=\"新购VPS后的设置及网站迁移步骤\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">作为一个不盈利的博客网站，时不时也需要迁移网站什么的。废话不说，准备搭环境及迁移事项。设置步骤如下：</span><br /> <span style=\"font-size:14px;\"><b>1、更改Host名</b></span><br /> <span style=\"font-size:14px;\">更改默认生成的Host名，有助于标识该VPS。</span></p> \n<pre class=\"prettyprint lang-bsh\">vi /etc/sysconfig/network</pre> \n<p><span style=\"font-size:14px;\">更改其中的HOSTNAME项的值为teddysun.com，再执行命令：hostname teddysun.com即可。最后执行：hostname即可查看更改后的Host名。退出putty后重新登录即可显示新的Host名。</span></p> \n<p><span style=\"font-size:14px;\"><b>2、设置SSH证书无密码登录及关闭密码验证登录</b></span><br /> <span style=\"font-size:14px;\">详细教程参考：《<a href=\"https://teddysun.com/237.html\" target=\"_blank\">SSH无密码登录及putty设置</a>》</span></p> \n<p> <span id=\"more-276\"></span> </p> \n<p> <span style=\"font-size:14px;\"><b>3、开启自带防火墙iptables</b></span><br /> <span style=\"font-size:14px;\">默认安装好的VPS是没有开启iptables的，因此需要手动开启。</span><br /> <span style=\"font-size:14px;\">执行命令：service iptables start</span><br /> <span style=\"font-size:14px;\">为了网站能够正常运行，需要开启80和3306端口。</span><br /> <span style=\"font-size:14px;\">修改/etc/sysconfig/iptables中的内容如下：</span></p> \n<pre class=\"prettyprint lang-bsh\"># Firewall configuration written by system-config-firewall\n# Manual customization of this file is not recommended.\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n-A INPUT -p icmp -j ACCEPT\n-A INPUT -i lo -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\nCOMMIT</pre> \n<p><span style=\"font-size:14px;\">修改完成后，重启iptables命令：service iptables restart</span><br /> <span style=\"font-size:14px;\">同时，屏蔽一些肉鸡和僵尸网络的IP地址是非常必要的。详细教程参考：《<a href=\"https://teddysun.com/203.html\" target=\"_blank\">利用iptables屏蔽各国IP的脚本</a>》</span></p> \n<p><span style=\"font-size:14px;\"><b>4、安装LAMP环境</b></span><br /> <span style=\"font-size:14px;\">详细教程参考：《<a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP一键安装脚本</a>》</span><br /> <span style=\"font-size:14px;\">备注：为了保证该脚本与官网的软件版本一致，我随时保持更新和修正 bug。安装完成后，运行 upgrade_php.sh 脚本更新 PHP 和 phpMyadmin 到最新版。</span><br /> <span style=\"font-size:14px;\">phpMyadmin 安装后，本脚本默认已经开启了高级功能。至于其高级功能，详细教程可以参考：《<a href=\"https://teddysun.com/268.html\" target=\"_blank\">phpMyAdmin 高级功能设置方法</a>》</span></p> \n<p><span style=\"font-size:14px;\"><b>5、安装可选软件包（可选）</b></span><br /> <span style=\"font-size:14px;\">安装nslookup和dig，详细教程参考：《</span><a href=\"https://teddysun.com/191.html\" target=\"_blank\"><span style=\"font-size:14px;\">Linux系统中nslookup和dig安装使用</span></a><span style=\"font-size:14px;\">》</span><br /> <span style=\"font-size:14px;\">安装远程登录命令screen，详细教程参考：《</span><a href=\"https://teddysun.com/204.html\" target=\"_blank\"><span style=\"font-size:14px;\">Linux远程登录命令screen</span></a><span style=\"font-size:14px;\">》</span><br /> <span style=\"font-size:14px;\">安装VPS虚拟技术查看工具virt-what，详细教程参考：《</span><a href=\"https://teddysun.com/171.html\" target=\"_blank\"><span style=\"font-size:14px;\">如何判断VPS的虚拟技术</span></a><span style=\"font-size:14px;\">》</span><br /> <span style=\"font-size:14px;\">安装路由查询命令traceroute，执行：yum -y install traceroute</span></p> \n<p><span style=\"font-size:14px;\"><b>6、评估硬盘I/O性能</b></span><br /> <span style=\"font-size:14px;\">如果是SSD硬盘，则用hdparm工具来测试比较准确。详细教程参考：《</span><a href=\"http://www.kwx.gd/CentOSApp/Linux-hdparm-SSD.html\" target=\"_blank\"><span style=\"font-size:14px;\">评估SSD VPS硬盘性能</span></a><span style=\"font-size:14px;\">》</span><br /> <span style=\"font-size:14px;\">如果是传统硬盘，则用dd命令来测试。执行以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">dd if=/dev/zero of=test bs=64k count=16k oflag=dsync</pre> \n<p><span style=\"font-size:14px;\"><b>7、本地ping工具WinMTR</b></span><br /> <span style=\"font-size:14px;\">在本地电脑安装工具WinMTR（32位）来ping，得到的数值会比较准确。下载地址：</span><br /> <a href=\"http://pan.baidu.com/share/link?shareid=2916211155&amp;uk=50623901\" target=\"_blank\"><span style=\"font-family:'Courier New';font-size:14px;\">http://pan.baidu.com/share/link?shareid=2916211155&amp;uk=50623901</span></a></p> \n<p><span style=\"font-size:14px;color:red;\"><b>8、迁移事项准备工作</b></span><br /> <span style=\"font-size:14px;\">因为我的网站已经用了Google Drive for WordPress汉化版插件，详细教程参考：《</span><a href=\"https://teddysun.com/53.html\" target=\"_blank\"><span style=\"font-size:14px;\">Google Drive for WordPress插件汉化</span></a><span style=\"font-size:14px;\">》并且是每天备份，必要时还可以随时备份，所以不用担心数据丢失。</span><br /> <span style=\"font-size:14px;\">但我用了WP Super Cache缓存插件，而这部分的静态文件并没有被选中备份。整站搬家的话，还是运用tar大法吧。</span><br /> <span style=\"font-size:14px;\"><b>一般 WordPress 包含：</b></span><br /> <span style=\"font-size:14px;\">1）官网下载过来的压缩包解压出来的程序文件；</span><br /> <span style=\"font-size:14px;\">2）用户上传的文件一般在 wp-content/upload/ 目录；</span><br /> <span style=\"font-size:14px;\">3）插件、主题在 wp-content/themes、/wp-content/plugins/ 目录；</span><br /> <span style=\"font-size:14px;\">4）用户产生的文章和配置则保存在 MySQL 数据库里；</span></p> \n<p><span style=\"font-size:14px;\">所以我们备份及恢复的时候需要以下<b>2个部分</b>：</span><br /> <span style=\"font-size:14px;\">1）硬盘里网站根目录下的所有文件（程序，上传的文件，主题，插件等）；</span><br /> <span style=\"font-size:14px;\">2）MySQL 数据库；</span></p> \n<p><span style=\"font-size:14px;\"><b>备份及恢复的步骤如下：</b></span><br /> <span style=\"font-size:14px;\">1）导出数据库到自己的目录下（Google Drive for WordPress插件已经搞定此事）；</span><br /> <span style=\"font-size:14px;\">2）打包整个目录（包含导出的数据库以及其他所有文件）；</span><br /> <span style=\"font-size:14px;\">3）登录新的VPS，获取压缩包后解压缩；</span><br /> <span style=\"font-size:14px;\">4）把解压缩出来的数据库sql文件导入新VPS的 MySQL 数据库里；</span><br /> <span style=\"font-size:14px;\">5）修改 wp-config.php 把数据库配置信息修改为新VPS上的数据库信息；</span></p> \n<p><span style=\"font-size:14px;\"><b>明确步骤后，整个操作如下：</b></span><br /> <span style=\"font-size:14px;\">1）运用tar大法将整个网站目录（假设网站根目录路径为/data/www/default）打包。</span></p> \n<pre class=\"prettyprint lang-bsh\">tar -zcf teddysun.com.tar.gz /data/www/default</pre> \n<p>2）将打包好的teddysun.com.tar.gz文件移动到路径/data/www/default下，为的是在新VPS上可以用wget命令直接下载，省的拖回本地再上传。</p> \n<pre class=\"prettyprint lang-bsh\">mv teddysun.com.tar.gz /data/www/default</pre> \n<p><span style=\"font-size:14px;\">3）登录新VPS，wget下载teddysun.com.tar.gz文件并解压。</span><br /> <span style=\"font-size:14px;\">4）使用phpMyadmin将解压出来的数据库sql文件导入新VPS的MySQL数据库中。</span><br /> <span style=\"font-size:14px;\">5）修改 wp-config.php 把数据库配置信息。</span></p> \n<p><span style=\"font-size:14px;\">从入手到迁移完成，差不多2个小时左右就能搞定。等目前的VPS快到期了就着手准备迁移，目前已经设置好环境的新VPS准备再观望一段时间，看看稳定性（Dnspod监控）。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/276.html\">新购VPS后的设置及网站迁移步骤</a></p>","descriptionType":"html","publishedDate":"Tue, 24 Sep 2013 07:21:40 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/07/vps.jpg","linkMd5":"c6da6ed9781a6e962a9d3d6e51504f2e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn59@2020_2/2020/08/25/00-30-52-956_961cf20355c72e2d.webp","destWidth":540,"destHeight":318,"sourceBytes":36559,"destBytes":14684,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/07/vps.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn59@2020_2/2020/08/25/00-30-52-956_961cf20355c72e2d.webp"},"publishedOrCreatedDate":1598315426739},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Windows 7下替换记事本为Notepad2","link":"https://teddysun.com/?p=155","description":"<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">众所周知，Windows下的记事本(notepad.exe)功能单一，缺点不言而喻。对于整天写代码的人来说，换一个支持代码高亮、编码转换、行号显示、多步Ctrl+Z等功能的软件就好了。这就是Notepad2，一款轻量级文本编辑器。本文介绍的是在Windows 7下如何将记事本替换为Notepad2。</span></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>步骤一，下载Notepad2</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">官方网站是<a href=\"http://www.flos-freeware.ch/notepad2.html\" target=\"_blank\">http://www.flos-freeware.ch/notepad2.html</a>，这里介绍的是汉化后的版本。下载链接如下：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><a href=\"http://pan.baidu.com/share/link?shareid=351455&amp;uk=50623901\" target=\"_blank\">http://pan.baidu.com/share/link?shareid=351455&amp;uk=50623901</a></span></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>步骤二，取得管理员权限</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">由于Windows 7的UAC机制，所以需要先取得管理员权限才能进行替换操作。有很多种方法，这里提供一个简单的为右键菜单添加取得所有权的菜单。下载链接中提供的注册表文件，双击导入注册表即可（系统会有提示，不用理会）。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><a href=\"http://pan.baidu.com/share/link?shareid=351483&amp;uk=50623901\" target=\"_blank\">&nbsp;http://pan.baidu.com/share/link?shareid=351483&amp;uk=50623901&nbsp;</a><br /> </span> </p> \n<p> <span id=\"more-155\"></span> </p> \n<p> <span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>步骤三，用Notepad2替换系统自带的记事本</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">搜索C:\\Windows目录里的“notepad.exe”文件，应该会出来好几个目录都含有这个文件，在我的系统里为</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">C:\\Windows\\winsxs\\x86_microsoft-windows-notepad_31bf3856ad364e35_6.1.7600.16385_none_6ef0e39ed15350e4</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">和C:\\Windows\\winsxs\\x86_microsoft-windows-notepadwin_31bf3856ad364e35_6.1.7600.16385_none_42a023025c60a33a两个目录（每个机器和版本的Windows 7目录名不一样，但都类似这两个），除了这两个很长名字的目录外还有其它包含notepad.exe文件的目录不用管。这两个目录上点击右键，管理员取得所有权（步骤二就是导入一个右键菜单项的），然后将已下载汉化版notepad.exe覆盖这两个目录里对应的文件即可，覆盖完成后立刻生效，点击任一文本文件就可以发现已经使用Notepad2打开啦。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/155.html\">Windows 7下替换记事本为Notepad2</a></p>","descriptionType":"html","publishedDate":"Wed, 03 Apr 2013 13:18:02 +0000","feedId":9594,"bgimg":"","linkMd5":"4249e1b8b913e1cf957a71e87db27bbe","bgimgJsdelivr":"","metaImg":"","author":"秋水逸冰","publishedOrCreatedDate":1598315426747},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Apache下部署SSL教程","link":"https://teddysun.com/?p=395","description":"<p><a href=\"https://teddysun.com/395.html\"><img src=\"https://teddysun.com/wp-content/uploads/2015/ssl.png\" title=\"Apache下部署SSL教程\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">https（全称：Hyper Text Transfer Protocol over Secure Socket Layer），是以安全为目标的 http 通道，简单讲是 http 的安全版。即 http 下加入 SSL 层，https 的安全基础是 SSL，因此加密的详细内容就需要 SSL。</span><br /> <span style=\"font-size:14px;\">个人网站用 SSL 证书，国外这几年开始比较流行起来，尤其是 Google 对使用了 <span style=\"font-size:14px;\">SSL</span> 证书的网站收录良好，越来越多的网站开始使用 https 访问了。但是国内的一众搜索引擎对 SSL 就不那么友好了，而且使用 SSL 后会拖慢网站浏览速度。</span><br /> <span style=\"font-size:14px;\">不管怎样，安全性越来越受到重视总归不是一件坏事。</span><br /> <span style=\"font-size:14px;\">那么在 Apache 里配置 SSL 是怎样的，我们一步一步来。</span></p> \n<p> <span id=\"more-395\"></span> </p> \n<p> <span style=\"font-size:14px;\"><strong>一、使用 OpenSSL 生成证书请求</strong></span><br /> <span style=\"font-size:14px;\">生成 rsa 私钥（2048位）</span></p> \n<pre class=\"prettyprint lang-bsh\">openssl genrsa -out teddysun.pem 2048\n\nGenerating RSA private key, 2048 bit long modulus\n.........................+++\n................................................................+++\ne is 65537 (0x10001)</pre> \n<p> <span style=\"font-size:14px;\">生成 csr 证书请求</span></p> \n<pre class=\"prettyprint lang-bsh\">openssl req -new -sha256 -key teddysun.pem -out teddysun.csr\n\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [XX]:CN  // 国家代码\nState or Province Name (full name) []:Shanghai  // 省\nLocality Name (eg, city) [Default City]:Shanghai  // 城市\nOrganization Name (eg, company) [Default Company Ltd]:Teddysun // 组织或公司名\nOrganizational Unit Name (eg, section) []:  // 不填\nCommon Name (eg, your name or your server's hostname) []:*.teddysun.com // 此处演示是通配符域名，一般带 www 前缀即可\nEmail Address []:admin@teddysun.com  // 邮箱地址\n\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:  // 不填\nAn optional company name []:  // 不填</pre> \n<p> <span style=\"font-size:14px;\">查看生成完毕的文件</span></p> \n<pre class=\"prettyprint lang-bsh\">ll *.pem *.csr\n\n-rw-r--r-- 1 root root 1058 Jan 22 14:30 teddysun.csr\n-rw-r--r-- 1 root root 1675 Jan 22 14:25 teddysun.pem</pre> \n<p> <span style=\"font-size:14px;\">将上述 2 个文件下载到本地，用记事本打开 teddysun.csr，里面的完整内容就是证书请求了。</span></p> \n<p><span style=\"font-size:14px;\"><strong>二、签发证书</strong></span></p> \n<p><span style=\"font-size:14px;\">如果需要默认受信任的证书，则需要花钱购买了。比如&nbsp;</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://www.namecheap.com/security/ssl-certificates/comodo/positivessl.aspx\" target=\"_blank\">https://www.namecheap.com/security/ssl-certificates/comodo/positivessl.aspx&nbsp;</a></span><br /> <span style=\"font-size:14px;\">只需 9 美元/年。</span><br /> <span style=\"font-size:14px;\">利用第一步生成的 csr 文件，即可申请证书，过程略，网上有一堆图文教程。</span></p> \n<p><span style=\"font-size:14px;\">另外，证书可以自签，但是使用的时候需要安装根证书，否则便不受信任。</span><br /> <span style=\"font-size:14px;\">下面说说自签名证书步骤</span></p> \n<p><span style=\"font-size:14px;\">生成根证书 rsa 私钥（2048位）</span></p> \n<pre class=\"prettyprint lang-bsh\">openssl genrsa -out ca.pem 2048\n\nGenerating RSA private key, 2048 bit long modulus\n...............................................+++\n.........+++\ne is 65537 (0x10001)</pre> \n<p> <span style=\"font-size:14px;\">利用私钥创建根证书</span></p> \n<pre class=\"prettyprint lang-bsh\">openssl req -new -x509 -days 3650 -key ca.pem -out ca.crt\n\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [XX]:CN\nState or Province Name (full name) []:Shanghai\nLocality Name (eg, city) [Default City]:Shanghai\nOrganization Name (eg, company) [Default Company Ltd]:Teddysun\nOrganizational Unit Name (eg, section) []:\nCommon Name (eg, your name or your server's hostname) []:teddysun.com Root CA\nEmail Address []:admin@teddysun.com</pre> \n<p> <span style=\"font-size:14px;\">至此，有效期为 3650 天的根证书 ca.crt 就创建完毕了。</span><br /> <span style=\"font-size:14px;\">查看生成完毕的文件</span></p> \n<pre class=\"prettyprint lang-bsh\">ll *.pem *.csr *.crt\n\n-rw-r--r-- 1 root root 1411 Jan 22 15:14 ca.crt\n-rw-r--r-- 1 root root 1679 Jan 22 14:48 ca.pem\n-rw-r--r-- 1 root root 1041 Jan 22 14:40 teddysun.csr\n-rw-r--r-- 1 root root 1675 Jan 22 14:25 teddysun.pem</pre> \n<p> <span style=\"font-size:14px;\">利用根证书签发 ssl 证书</span></p> \n<pre class=\"prettyprint lang-bsh\">openssl ca -in teddysun.csr -out teddysun.crt -cert ca.crt -keyfile ca.pem</pre> \n<p> <span style=\"font-size:14px;\">这一步出错了，错误信息如下</span></p> \n<pre class=\"prettyprint lang-bsh\">Using configuration from /etc/pki/tls/openssl.cnf\n/etc/pki/CA/index.txt: No such file or directory\nunable to open '/etc/pki/CA/index.txt'\n140292081481544:error:02001002:system library:fopen:No such file or directory:bss_file.c:398:fopen('/etc/pki/CA/index.txt','r')\n140292081481544:error:20074002:BIO routines:FILE_CTRL:system lib:bss_file.c:400:</pre> \n<p> <span style=\"font-size:14px;\">提示缺少文件，那我们就生成一个空文件</span></p> \n<pre class=\"prettyprint lang-bsh\">touch /etc/pki/CA/index.txt</pre> \n<p> <span style=\"font-size:14px;\">继续执行</span></p> \n<pre class=\"prettyprint lang-bsh\">openssl ca -in teddysun.csr -out teddysun.crt -cert ca.crt -keyfile ca.pem</pre> \n<p> <span style=\"font-size:14px;\">又出错了，错误信息如下</span></p> \n<pre class=\"prettyprint lang-bsh\">Using configuration from /etc/pki/tls/openssl.cnf\n/etc/pki/CA/serial: No such file or directory\nerror while loading serial number\n140375536244552:error:02001002:system library:fopen:No such file or directory:bss_file.c:398:fopen('/etc/pki/CA/serial','r')\n140375536244552:error:20074002:BIO routines:FILE_CTRL:system lib:bss_file.c:400:</pre> \n<p> <span style=\"font-size:14px;\">还是缺少文件，这里生成一个内容为 01 的文件</span></p> \n<pre class=\"prettyprint lang-bsh\">echo '01' &gt; /etc/pki/CA/serial</pre> \n<p> <span style=\"font-size:14px;\">再次执行</span></p> \n<pre class=\"prettyprint lang-bsh\">openssl ca -in teddysun.csr -out teddysun.crt -cert ca.crt -keyfile ca.pem\n\nUsing configuration from /etc/pki/tls/openssl.cnf\nCheck that the request matches the signature\nSignature ok\nCertificate Details:\n        Serial Number: 1 (0x1)\n        Validity\n            Not Before: Jan 22 07:35:14 2015 GMT\n            Not After : Jan 22 07:35:14 2016 GMT\n        Subject:\n            countryName               = CN\n            stateOrProvinceName       = Shanghai\n            organizationName          = Teddysun\n            commonName                = *.teddysun.com\n            emailAddress              = admin@teddysun.com\n        X509v3 extensions:\n            X509v3 Basic Constraints: \n                CA:FALSE\n            Netscape Comment: \n                OpenSSL Generated Certificate\n            X509v3 Subject Key Identifier: \n                E8:7F:9E:BE:12:25:22:48:A2:49:AE:D5:CB:A6:7B:24:EE:A6:E2:5B\n            X509v3 Authority Key Identifier: \n                keyid:C7:0C:EF:F2:73:8C:CB:01:7A:8F:9C:30:A7:80:37:FA:E7:B6:88:02\n\nCertificate is to be certified until Jan 22 07:35:14 2016 GMT (365 days)\nSign the certificate? [y/n]:y\n\n\n1 out of 1 certificate requests certified, commit? [y/n]y\nWrite out database with 1 new entries\nData Base Updated</pre> \n<p> <span style=\"font-size:14px;\">至此，就签发了一个默认有效期为 365 天的通配符域名 *.teddysun.com 的 ssl 证书了。</span><br /> <span style=\"font-size:14px;\">如果想签发更长有效期的证书，比如 730 天的，则命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">openssl ca -in teddysun.csr -out teddysun2.crt -days 730 -cert ca.crt -keyfile ca.pem</pre> \n<p><span style=\"font-size:14px;\">最长不能超过根证书的有效期。</span></p> \n<p><span style=\"font-size:14px;\">查看最终生成完毕的文件</span></p> \n<pre class=\"prettyprint lang-bsh\">ll *.pem *.csr *.crt\n\n-rw-r--r-- 1 root root 1411 Jan 22 15:14 ca.crt\n-rw-r--r-- 1 root root 1679 Jan 22 14:48 ca.pem\n-rw-r--r-- 1 root root 4594 Jan 22 15:35 teddysun.crt\n-rw-r--r-- 1 root root 1041 Jan 22 14:40 teddysun.csr\n-rw-r--r-- 1 root root 1675 Jan 22 14:25 teddysun.pem</pre> \n<p> <span style=\"font-size:14px;\">分别解释一下这 5 个文件。</span><br /> <span style=\"font-size:14px;\">ca.crt 是签发完成的根证书文件</span><br /> <span style=\"font-size:14px;\">ca.pem 是根证书的私钥文件</span><br /> <span style=\"font-size:14px;\">teddysun.crt 是签发完成的域名证书文件</span><br /> <span style=\"font-size:14px;\">teddysun.csr 是证书请求文件</span><br /> <span style=\"font-size:14px;\">teddysun.pem 是签发域名的私钥</span></p> \n<p><span style=\"font-size:14px;\">如果要使用自签名的证书，需要在<strong>本机导入</strong>根证书，步骤如下：</span><br /> <span style=\"font-size:14px;\">点击“安装证书”，下一步，将所有的证书放入下列存储，浏览，选择“收信任的根证书颁发机构”，下一步，完成。</span></p> \n<p><span style=\"font-size:14px;\">安装好根证书后，再打开后，就是这个样子的：</span><br /> <img src=\"https://teddysun.com/wp-content/uploads/2015/rootca.png\" title=\"root ca\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2015/rootca2.png\" title=\"root ca\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2015/rootca3.png\" title=\"root ca\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;\">自签名证书则是这个样子的：</span><br /> <img src=\"https://teddysun.com/wp-content/uploads/2015/teddysunca.png\" title=\"ssl ca\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2015/teddysunca1.png\" title=\"ssl ca\" class=\"left\" style=\"width:auto;height:auto;\" /></p> \n<p> <span style=\"font-size:14px;\"><strong>三、在 Apache 下部署 ssl 证书</strong></span></p> \n<p><span style=\"font-size:14px;\">首先需要合并一下证书文件，用记事本打开 ca.crt 文件，全选，复制，再用记事本打开 teddysun.crt ，在其内容的最后，回车，粘贴 ca.crt 的全部内容，保存。</span><br /> <span style=\"font-size:14px;\">当然，如果是在 namecheap 申请到的证书，发到你邮箱的时候都都打包好了，证书也合并好了，直接使用即可。</span></p> \n<p><span style=\"font-size:14px;\">在安装完 <a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP</a> 环境后，默认是没有加载 https 配置的，这里需要修改一下配置文件 /usr/local/apache/conf/httpd.conf ，找到下面的</span><br /> <span style=\"font-size:14px;\">#Include conf/extra/httpd-ssl.conf ，将前面的 # 去掉，保存。</span><br /> <span style=\"font-size:14px;\">将合并后的证书 teddysun.crt 和私钥 teddysun.pem 复制到 /usr/local/apache/conf/ 下。</span><br /> <span style=\"font-size:14px;\">再修改配置文件 /usr/local/apache/conf/extra/httpd-ssl.conf ，Sample 内容如下：</span></p> \n<pre class=\"prettyprint lang-js\">Listen 443\nSSLPassPhraseDialog  builtin\nSSLSessionCache  \"shmcb:/usr/local/apache/logs/ssl_scache(512000)\"\nSSLSessionCacheTimeout  300\n\n&lt;VirtualHost *:443&gt;\n\tDocumentRoot /data/www/default/\n\tServerName teddysun.com\n\tServerAlias www.teddysun.com\n\tErrorLog \"/usr/local/apache/logs/lamp_error_log\"\n\tTransferLog \"/usr/local/apache/logs/lamp_access_log\"\n\n\tSSLEngine on\n\tSSLProtocol All -SSLv2 -SSLv3\n\tSSLHonorCipherOrder on\n\tSSLCipherSuite ALL:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA\n\n\tSSLCertificateFile /usr/local/apache/conf/teddysun.crt\n\tSSLCertificateKeyFile /usr/local/apache/conf/teddysun.pem\n\n\tCustomLog \"/usr/local/apache/logs/lamp_ssl_request_log\" \\\n\t\t\"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\"\n\n\tBrowserMatch \"MSIE [2-5]\" \\\n\t\tnokeepalive ssl-unclean-shutdown \\\n\t\tdowngrade-1.0 force-response-1.0\n\n\t&lt;Directory /data/www/default/&gt;\n\t\tOptions -Indexes +FollowSymLinks\n\t\tAllowOverride All\n\t\tRequire all granted\n\t&lt;/Directory&gt;\n&lt;/VirtualHost&gt;\n</pre> \n<p> <span style=\"font-size:14px;\">上述配置都修改完毕后，注意防火墙要放行 443 端口。查看防火墙状态：</span></p> \n<pre class=\"prettyprint lang-bsh\">/etc/init.d/iptables status</pre> \n<p> <span style=\"font-size:14px;\">然后再重启 Apache ，命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">/etc/init.d/httpd restart</pre> \n<p> <span style=\"font-size:14px;\">好了，现在就可以愉快地用 https 访问网站了。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/395.html\">Apache下部署SSL教程</a></p>","descriptionType":"html","publishedDate":"Fri, 23 Jan 2015 02:24:04 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2015/ssl.png","linkMd5":"cbeb0e79ddbb9c5280a1607caf95358f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn71@2020_1/2020/08/25/00-30-54-262_7daa115448c96bd3.webp","destWidth":519,"destHeight":231,"sourceBytes":64255,"destBytes":18782,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2015/ssl.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn71@2020_1/2020/08/25/00-30-54-262_7daa115448c96bd3.webp","https://teddysun.com/wp-content/uploads/2015/rootca.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn42@2020_6/2020/08/25/00-31-00-716_482af059b06b95e3.webp","https://teddysun.com/wp-content/uploads/2015/rootca2.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn79@2020_5/2020/08/25/00-30-58-244_fe3b52d109096372.webp","https://teddysun.com/wp-content/uploads/2015/rootca3.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn16@2020_4/2020/08/25/00-30-58-309_84f242d2ba6eb075.webp","https://teddysun.com/wp-content/uploads/2015/teddysunca.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn67@2020_5/2020/08/25/00-30-58-382_1b543ea858ec1fd1.webp","https://teddysun.com/wp-content/uploads/2015/teddysunca1.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn36@2020_4/2020/08/25/00-30-58-814_e9d0200cec2df385.webp"},"publishedOrCreatedDate":1598315426727},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Outlook.com邮箱后缀大全","link":"https://teddysun.com/?p=274","description":"<p><a href=\"https://teddysun.com/274.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/09/outlook-com-logo.gif\" alt=\"Outlook\" title=\"Outlook.com邮箱后缀大全\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　最常见的是outlook.com，hotmail.com，live.com这三种，其余的便是国别域名后缀了。在2013年4月的时候，微软 Outlook.com 一口气推出了 32 个国际域名 Outlook.com 邮箱地址注册、别名、重命名支持。我搜集了一些Outlook.com邮箱后缀注册地址，分享如下：</span></p> \n<p> <span id=\"more-274\"></span> </p> \n<p> <span style=\"font-size:14px;\">1、中国</span><br /> <span style=\"font-size:14px;\">可注册outlook.com，hotmail.com，live.com，live.cn后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=ZH-CN&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=ZH-CN&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">2、香港</span><br /> <span style=\"font-size:14px;\">可注册outlook.com，hotmail.com.hk，hotmail.com，live.hk后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=ZH-HK&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=ZH-HK&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">3、台湾</span><br /> <span style=\"font-size:14px;\">可注册outlook.com，hotmail.com.tw，hotmail.com，livemail.tw后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=ZH-TW&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=ZH-TW&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">4、日本</span><br /> <span style=\"font-size:14px;\">可注册outlook.jp，outlook.com，hotmail.co.jp，live.jp后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=JA-JP&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=JA-JP&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">5、韩国</span><br /> <span style=\"font-size:14px;\">可注册outlook.kr，outlook.com，hotmail.co.kr，hotmail.com，live.co.kr后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=KO-KR&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=KO-KR&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">6、美国</span><br /> <span style=\"font-size:14px;\">可注册outlook.com，hotmail.com，live.com后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=EN-US&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=EN-US&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">7、英国</span><br /> <span style=\"font-size:14px;\">可注册outlook.com，hotmail.co.uk，live.co.uk后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=EN-GB&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=EN-GB&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">8、法国</span><br /> <span style=\"font-size:14px;\">可注册outlook.fr，outlook.com，hotmail.fr，live.fr后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=FR-FR&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=FR-FR&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">9、加拿大</span><br /> <span style=\"font-size:14px;\">可注册outlook.com，hotmail.ca，hotmail.com，live.ca后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=EN-CA&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=EN-CA&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">10、澳大利亚</span><br /> <span style=\"font-size:14px;\">可注册outlook.com，outlook.com.au，hotmail.com，hotmail.com.au，live.com.au后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=EN-AU&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=EN-AU&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">11、新加坡</span><br /> <span style=\"font-size:14px;\">可注册outlook.sg，outlook.com，hotmail.sg，hotmail.com，live.com.sg后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=EN-SG&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=EN-SG&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">12、新西兰</span><br /> <span style=\"font-size:14px;\">可注册outlook.co.nz，outlook.com，hotmail.co.nz，live.com后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=EN-NZ&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=EN-NZ&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">13、德国</span><br /> <span style=\"font-size:14px;\">可注册outlook.de，outlook.com，hotmail.de，hotmail.com，live.de后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=DE-DE&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=DE-DE&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">14、墨西哥</span><br /> <span style=\"font-size:14px;\">可注册outlook.com，hotmail.com，live.com.mx后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=ES-MX&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=ES-MX&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">15、爱尔兰</span><br /> <span style=\"font-size:14px;\">可注册outlook.ie，outlook.com，hotmail.com，live.ie后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=EN-IE&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=EN-IE&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">16、印度</span><br /> <span style=\"font-size:14px;\">可注册outlook.com，outlook.in，hotmail.com，hotmail.co.in，live.in后缀。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://signup.live.com/signup.aspx?mkt=EN-IN&amp;lic=1\" target=\"_blank\" rel=\"noopener noreferrer\">https://signup.live.com/signup.aspx?mkt=EN-IN&amp;lic=1</a></span></p> \n<p><span style=\"font-size:14px;\">更多其他国别域名，参考：<span style=\"font-family:Courier New;\"><a href=\"http://www.microsoft.com/zh-cn/locale.aspx\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.microsoft.com/zh-cn/locale.aspx</a></span>的国家名，然后将注册URL中的mkt参数的值改为相应的国家代码即可注册。同时需注意填写资料的时，相应国家的邮政编码（Postal Code）自行网络搜索正确的填进去。</span></p> \n<p><span style=\"font-size:14px;\">PS：</span><br /> <span style=\"font-size:14px;\">目前msn.com和msn.cn后缀已经不能注册，微软已关闭注册通道，改为全力推广Outlook.com了。微软的帐号系统确实有点混乱，从hotmail.com到live.com再到Outlook.com，这里有一篇解释文，讲的是Microsoft 帐户（Outloook.com 帐号）的注册、重命名、别名和帐户链接，亮点在评论里，有兴趣的自己看。<span style=\"font-family:Courier New;\"><a href=\"http://livesino.net/archives/4329.live\" target=\"_blank\" rel=\"noopener noreferrer\">http://livesino.net/archives/4329.live</a></span></span></p> \n<p><span style=\"font-size:14px;\">其实，如果想将 @outlook.com 域名的邮箱更改为 @outlook.sg 等这类域名的地址，或者是直接注册新的 @outlook.it 地址的 Microsoft 账户，还可以这么操作：</span><br /> <span style=\"font-size:14px;\">Outlook.com 新注册：直接在底部选择表格中的对应国家的语言；</span><br /> <span style=\"font-size:14px;\">Outlook.com 添加别名（推荐）：先改<a href=\"https://account.live.com/editprof.aspx\" target=\"_blank\" rel=\"noopener noreferrer\">国籍</a>，添加别名时就能看到对应域名。</span></p> \n<p><span style=\"font-size:14px;color:#333333;\"> 附&nbsp;32 个国家对应的 Outlook.com 域名： </span></p> \n<p style=\"color:#333333;font-family:微软雅黑, 华文黑体, DengXian, Tahoma, Arial;font-size:14px;background-color:#FFFFFF;\"> <span id=\"more-5868\"></span> </p> \n<table width=\"640\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\" style=\"font-size:13px;width:639px;color:#333333;font-family:微软雅黑, 华文黑体, DengXian, Tahoma, Arial;background-color:#FFFFFF;\" class=\"ke-zeroborder\"> \n <tbody> \n  <tr> \n   <td valign=\"top\" width=\"320\"> <strong>国家</strong> </td> \n   <td valign=\"top\" width=\"320\"> <strong>域名</strong> </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 阿根廷（Argentina） </td> \n   <td valign=\"top\" width=\"320\"> outlook.com.ar </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 澳大利亚（Australia） </td> \n   <td valign=\"top\" width=\"320\"> outlook.com.au </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 奥地利（Austria） </td> \n   <td valign=\"top\" width=\"320\"> outlook.at </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 比利时（Belgium） </td> \n   <td valign=\"top\" width=\"320\"> outlook.be </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 巴西（Brazil） </td> \n   <td valign=\"top\" width=\"320\"> outlook.com.br </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 智利（Chile） </td> \n   <td valign=\"top\" width=\"320\"> outlook.cl </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 捷克（Czech） </td> \n   <td valign=\"top\" width=\"320\"> outlook.cz </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 丹麦（Denmark） </td> \n   <td valign=\"top\" width=\"320\"> outlook.dk </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 法国（France） </td> \n   <td valign=\"top\" width=\"320\"> outlook.fr </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 德国（Germany） </td> \n   <td valign=\"top\" width=\"320\"> outlook.de </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 希腊（Greece） </td> \n   <td valign=\"top\" width=\"320\"> outlook.com.gr </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 以色列（Israel） </td> \n   <td valign=\"top\" width=\"320\"> outlook.co.il </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 印度（India） </td> \n   <td valign=\"top\" width=\"320\"> outlook.in </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 印尼（Indonesia） </td> \n   <td valign=\"top\" width=\"320\"> outlook.co.id </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 爱尔兰（Ireland） </td> \n   <td valign=\"top\" width=\"320\"> outlook.ie </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 意大利（Italy） </td> \n   <td valign=\"top\" width=\"320\"> outlook.it </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 匈牙利（Hungary） </td> \n   <td valign=\"top\" width=\"320\"> outlook.hu </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 日本（Japan） </td> \n   <td valign=\"top\" width=\"320\"> outlook.jp </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 韩国（Korea） </td> \n   <td valign=\"top\" width=\"320\"> outlook.kr </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 拉托维亚（Latvia） </td> \n   <td valign=\"top\" width=\"320\"> outlook.lv </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 马来西亚（Malaysia） </td> \n   <td valign=\"top\" width=\"320\"> outlook.my </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 新西兰（New Zealand） </td> \n   <td valign=\"top\" width=\"320\"> outlook.co.nz </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 秘鲁（Peru） </td> \n   <td valign=\"top\" width=\"320\"> outlook.com.pe </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 菲律宾（Philippines） </td> \n   <td valign=\"top\" width=\"320\"> outlook.ph </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 葡萄牙（Portugal） </td> \n   <td valign=\"top\" width=\"320\"> outlook.pt </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 沙特阿拉伯（Saudi Arabia） </td> \n   <td valign=\"top\" width=\"320\"> outlook.sa </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 新加坡（Singapore） </td> \n   <td valign=\"top\" width=\"320\"> outlook.sg </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 斯洛伐克（Slovakia） </td> \n   <td valign=\"top\" width=\"320\"> outlook.sk </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 西班牙（Spain） </td> \n   <td valign=\"top\" width=\"320\"> outlook.es </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 泰国（Thailand） </td> \n   <td valign=\"top\" width=\"320\"> outlook.co.th </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 土耳其（Turkey） </td> \n   <td valign=\"top\" width=\"320\"> outlook.com.tr </td> \n  </tr> \n  <tr> \n   <td valign=\"top\" width=\"320\"> 越南（Vietnam） </td> \n   <td valign=\"top\" width=\"320\"> outlook.com.vn </td> \n  </tr> \n </tbody> \n</table> \n<p><span style=\"font-size:14px;\">参考链接：<span style=\"font-family:Courier New;\"><a href=\"http://livesino.net/archives/5868.live\" target=\"_blank\" rel=\"noopener noreferrer\">http://livesino.net/archives/5868.live</a></span></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/274.html\">Outlook.com邮箱后缀大全</a></p>","descriptionType":"html","publishedDate":"Wed, 18 Sep 2013 08:58:33 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/09/outlook-com-logo.gif","linkMd5":"1ad1b28c9565e68e75771d1497824fc6","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn8@2020_5/2020/08/25/00-30-54-337_91484faefc600815.webp","destWidth":600,"destHeight":297,"sourceBytes":35652,"destBytes":6258,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/09/outlook-com-logo.gif":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn8@2020_5/2020/08/25/00-30-54-337_91484faefc600815.webp"},"publishedOrCreatedDate":1598315426740},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"在Centos 5.x或6.x上安装RHEL EPEL Repo","link":"https://teddysun.com/?p=153","description":"<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">repository，资源库，源的意思。RHEL EPEL(Extra Packages for Enterprise Linux) Repo是Linux发行版中最大的软件仓库之一，免费，丰富的软件包更新。</span></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>安装步骤</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';color:#003399;\">Centos 5.x</span> </p> \n<pre class=\"prettyprint lang-bsh\">wget http://dl.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm\nwget http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\nrpm -ivh epel-release-5-4.noarch.rpm\nrpm -ivh remi-release-5.rpm</pre> \n<p><span style=\"font-size:14px;color:#003399;font-family:'Microsoft YaHei';\">Centos 6.x</span> </p> \n<pre class=\"prettyprint lang-bsh\">wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\nwget http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\nrpm -ivh epel-release-6-8.noarch.rpm\nrpm -ivh remi-release-6.rpm</pre> \n<p> <span id=\"more-153\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>完成后的设置</strong></span> </p> \n<pre class=\"prettyprint lang-bsh\">ls -1 /etc/yum.repos.d/epel* /etc/yum.repos.d/remi.repo</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">返回</span></p> \n<pre class=\"prettyprint lang-bsh\">/etc/yum.repos.d/epel.repo\n/etc/yum.repos.d/epel-testing.repo\n/etc/yum.repos.d/remi.repo</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><strong>允许remi repository</strong></span> </p> \n<pre class=\"prettyprint lang-bsh\">vi /etc/yum.repos.d/remi.repo</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">编辑[remi]下的enabled选项从<span style=\"color:#003399;\">0</span>设为<span style=\"color:#E53333;\">1</span></span></p> \n<pre class=\"prettyprint\">[remi]\nname=Les RPM de remi pour Enterprise Linux 6 - $basearch\n#baseurl=http://rpms.famillecollet.com/enterprise/6/remi/$basearch/\nmirrorlist=http://rpms.famillecollet.com/enterprise/6/remi/mirror\nenabled=1\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">至此，安装完成。</span></p> \n<p></p> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">安装完运行yum报错：</span> </p> \n<p> <span style=\"font-family:'Courier New';color:#E53333;\">Error: Cannot retrieve metalink for repository: epel. Please verify its path and try again</span> </p> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">解决办法：</span> </p> \n<pre class=\"prettyprint lang-bsh\">vi /etc/yum.repos.d/epel.repo</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">编辑[epel]下的baseurl前的#号去掉，mirrorlist前添加#号。正确配置如下：</span> </p> \n<pre class=\"prettyprint\">[epel]\nname=Extra Packages for Enterprise Linux 6 - $basearch\nbaseurl=http://download.fedoraproject.org/pub/epel/6/$basearch\n#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-6&amp;arch=$basearch\nfailovermethod=priority\nenabled=1\ngpgcheck=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">再运行</span></p> \n<pre class=\"prettyprint lang-bsh\">yum makecache</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">英文出自于<a href=\"http://www.rackspace.com/knowledge_center/article/installing-rhel-epel-repo-on-centos-5x-or-6x\" target=\"_blank\">这里</a>。</span></p> \n<div> \n</div> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/153.html\">在Centos 5.x或6.x上安装RHEL EPEL Repo</a></p>","descriptionType":"html","publishedDate":"Tue, 02 Apr 2013 07:37:37 +0000","feedId":9594,"bgimg":"","linkMd5":"129df737c9ae57b7bfa8e7618bf44b9c","bgimgJsdelivr":"","metaImg":"","author":"秋水逸冰","publishedOrCreatedDate":1598315426748},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Outlook设置Outlook.com的步骤","link":"https://teddysun.com/?p=273","description":"<p><a href=\"https://teddysun.com/273.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/09/outlook_logo.jpg\" alt=\"Outlook\" title=\"Outlook设置Outlook.com的步骤\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　微软自2012年8月推出Outlook.com以来，其简洁大方的web邮箱设计确实比较讨喜。我这个邮箱控也在第一时间里注册并使用。将Hotmail的一系列后缀名如：hotmail.com，hotmail.co.jp，hotmail.com.hk<span style=\"font-size:14px;line-height:21px;\">，hotmail.com.tw<span style=\"font-size:14px;line-height:21px;\">，hotmail.co.uk<span style=\"font-size:14px;line-height:21px;\">，</span></span></span>live.com，live.cn，live.jp<span style=\"font-size:14px;line-height:21px;\">，live.hk<span style=\"font-size:14px;line-height:21px;\">，livemail.tw<span style=\"font-size:14px;line-height:21px;\">，live.co.uk<span style=\"font-size:14px;line-height:21px;\">，</span></span></span></span>msn.com，msn.cn，outlook.com，outlook.jp等全部注册完毕。</span><br /> <span style=\"font-size:14px;\">　　如今微软已经将全部的帐号都迁移至Outlook.com的新界面下，就连</span><a href=\"https://domains.live.com/\" target=\"_blank\"><span style=\"font-size:14px;\">域名邮箱</span></a><span style=\"font-size:14px;\">也不例外。在Google Apps早已停止免费用户注册的当下，微软还是业界良心，不但支持cn域名还同时能创建50个账户在每个域名下。</span> </p> \n<p> <span id=\"more-273\"></span> </p> \n<p> <span style=\"font-size:14px;\">　　微软有回收免费邮箱帐号的传统，一旦你在 270 天或在注册后 10 天内没有登录到您的免费 Windows Live Hotmail 帐户，Windows Live 将把您的邮箱功能更改为“非活动”状态；如果您在之后的 95 天内没有使用该帐户的任何其他功能，那么该帐户将被系统删除。一旦删除，您就不能用原来的账户密码登录到您的任何MSN相关产品。对于我来说，因为帐号太多，所以需要设置POP3或者IMAP的方式定期登录一下，下面是过程。</span></p> \n<p><span style=\"font-size:14px;\">在电子邮件应用中使用以下设置。</span></p> \n<p><span style=\"font-size:14px;\"><b>接收 (POP3) 服务器</b></span><br /> <span style=\"font-size:14px;\">服务器地址：pop-mail.outlook.com</span><br /> <span style=\"font-size:14px;\">端口：995</span><br /> <span style=\"font-size:14px;\">加密连接：SSL</span></p> \n<p><span style=\"font-size:14px;\">发送 (SMTP) 服务器</span><br /> <span style=\"font-size:14px;\">服务器地址：smtp-mail.outlook.com</span><br /> <span style=\"font-size:14px;\">端口：25（如果阻止了 25，则使用 587）</span><br /> <span style=\"font-size:14px;\">身份验证：是</span><br /> <span style=\"font-size:14px;\">加密连接：TLS</span><br /> <span style=\"font-size:14px;\">用户名：你的电子邮件地址</span><br /> <span style=\"font-size:14px;\">密码：你的密码</span><br /> <span style=\"font-size:14px;\">将电子邮件下载到你的电子邮件应用后，如果不想从 Outlook.com 收件箱中删除这些电子邮件，则选择“在服务器上保留邮件的副本”选项。</span></p> \n<p><span style=\"font-size:14px;color:blue;\">与仅同步收件箱的 POP 不同，IMAP 同步所有电子邮件文件夹。</span><br /> <span style=\"font-size:14px;\"><b>接收 (IMAP) 服务器</b></span><br /> <span style=\"font-size:14px;\">服务器地址：imap-mail.outlook.com</span><br /> <span style=\"font-size:14px;\">端口：993</span><br /> <span style=\"font-size:14px;\">加密连接：SSL</span></p> \n<p><span style=\"font-size:14px;\">发送 (SMTP) 服务器</span><br /> <span style=\"font-size:14px;\">服务器地址：smtp-mail.outlook.com</span><br /> <span style=\"font-size:14px;\">端口：25（如果阻止了 25，则使用 587）</span><br /> <span style=\"font-size:14px;\">身份验证：是</span><br /> <span style=\"font-size:14px;\">加密连接：TLS</span><br /> <span style=\"font-size:14px;\">用户名：你的电子邮件地址</span><br /> <span style=\"font-size:14px;\">密码：你的密码</span></p> \n<p><span style=\"font-size:14px;\">这里需要强调一点的是，如果要用Outlook2010、Outlook 2007 和 Outlook 2003来接收Outlook.com邮件的话，则需要先安装</span><a href=\"http://go.microsoft.com/fwlink/?linkid=242718\" target=\"_blank\"><span style=\"font-size:14px;\">Outlook Hotmail Connector</span></a><span style=\"font-size:14px;\">，然后再手动配置 Outlook.com 帐户。</span><br /> <span style=\"font-size:14px;\">更多详细信息，请浏览下面的参考链接。</span></p> \n<p><span style=\"font-size:14px;color:blue;\"><b>参考链接：</b></span><br /> <span style=\"font-family:Courier New;\"><a href=\"http://windows.microsoft.com/zh-cn/windows/outlook/send-receive-from-app\" target=\"_blank\"><span style=\"font-size:14px;\">http://windows.microsoft.com/zh-cn/windows/outlook/send-receive-from-app</span></a></span><br /> <span style=\"font-family:Courier New;\"><a href=\"http://windows.microsoft.com/zh-cn/windows/outlook/outlook-connector\" target=\"_blank\"><span style=\"font-size:14px;\">http://windows.microsoft.com/zh-cn/windows/outlook/outlook-connector</span></a></span></p> \n<p><span style=\"font-size:14px;color:blue;\"><b>附录</b></span><br /> <span style=\"font-size:14px;\">这里有一篇我写于2009年的教程，《<a href=\"http://blog.sina.com.cn/s/blog_40c61fe50100dnj2.html\" target=\"_blank\">如何注册微软不同后缀的邮箱</a>》，<s>其中大部分还是适用的</s>。（已失效）</span><br /> <span style=\"font-size:14px;color:red;\"><b>更新（2013/09/18）</b></span><br /> <span style=\"font-size:14px;\">其实注册不同后缀的Outlook邮箱很简单，参考<a href=\"http://www.microsoft.com/zh-cn/locale.aspx\" target=\"_blank\">http://www.microsoft.com/zh-cn/locale.aspx</a>，记下国家代码，比如中国是ZH-CN，日本JA-JP，香港ZH-HK，台湾ZH-TW等，然后打开链接<a href=\"https://signup.live.com/signup.aspx?mkt=ZH-CN&amp;lic=1\" target=\"_blank\">https://signup.live.com/signup.aspx?mkt=ZH-CN&amp;lic=1</a>，将参数mkt后的值变更为相应的国家代码，打开页面后点击注册即可获得相应的Outlook后缀了。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/273.html\">Outlook设置Outlook.com的步骤</a></p>","descriptionType":"html","publishedDate":"Tue, 17 Sep 2013 07:00:51 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/09/outlook_logo.jpg","linkMd5":"bc8ca4e5ce63285308d67828fbf91d93","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn35@2020_3/2020/08/25/00-30-52-913_47a342982176e8eb.webp","destWidth":640,"destHeight":360,"sourceBytes":20710,"destBytes":9744,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/09/outlook_logo.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn35@2020_3/2020/08/25/00-30-52-913_47a342982176e8eb.webp"},"publishedOrCreatedDate":1598315426739},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"使用webmin管理PPTP VPN Server","link":"https://teddysun.com/?p=151","description":"<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>webmin简介</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">webmin是目前功能最强大的基于Web的Unix系统管理工具。管理员通过浏览器访问webmin的各种管理功能并完成相应的管理动作。目前webmin支持绝大多数的Unix系统。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">webmin能让你能够在远程使用浏览器通过Web界面管理你的主机。管理员能添加用户帐号，管理Apache,DNS,文件共享系统等。webmin允许你DIY模块，你只需要到模块管理页面，增加你需要的功能，删除你认为不实用的功能。</span></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>webmin安装</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">目前最新版本是1.660，具体请参考：<a href=\"http://sourceforge.net/projects/webadmin/\" target=\"_blank\">http://sourceforge.net/projects/webadmin/</a></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">终端命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">cd /opt\nwget http://www.webmin.com/download/rpm/webmin-current.rpm -O webmin-current.rpm\nrpm -ivh webmin-current.rpm</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">安装完毕后，浏览器打开地址http://ip:10000登录，用户名root，密码为root的密码。</span></p> \n<p> <span id=\"more-151\"></span> </p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>webmin修改界面语言</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">登录后，依次点击Webmin-&gt;Webmin Configuratin-&gt;Language，在Display in language选项选择Simplified Chinese(ZH_CN),点击Change Language按钮即可变更界面语言。</span></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>管理PPTP VPN Server</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">看到这个界面的前提是已安装PPTP服务，如何安装参照《</span><a href=\"https://teddysun.com/134.html\" target=\"_blank\"><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">PPTP一键安装脚本</span></a><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">》。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">点击网络-&gt;<span style=\"color:#003399;\">PPTP VPN Server</span>，看到如下PPTP VPN Server界面</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/04/pptp_vpn_server1.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/pptp_vpn_server1.png\" alt=\"pptp_vpn_server\" title=\"pptp_vpn_server1\" width=\"560\" height=\"315\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><span style=\"color:#003399;\">PPTP Server Options</span>（Server选项），配置local IP address和remote IP address，如下</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/04/pptp_vpn_server2.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/pptp_vpn_server2.png\" alt=\"pptp_vpn_server\" title=\"pptp_vpn_server2\" width=\"560\" height=\"315\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><span style=\"color:#003399;\">PPP Options</span>（PPP选项），如下</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/04/pptp_vpn_server3.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/pptp_vpn_server3.png\" alt=\"pptp_vpn_server\" title=\"pptp_vpn_server3\" width=\"560\" height=\"315\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><span style=\"color:#003399;\">PPP Accounts</span>，顾名思义是添加用户的地方。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><span style=\"color:#003399;\">Active Connections</span>，当前活动的连接。点击进去可以看到当前哪个ip在线。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/151.html\">使用webmin管理PPTP VPN Server</a></p>","descriptionType":"html","publishedDate":"Tue, 02 Apr 2013 04:08:26 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/04/pptp_vpn_server1.png","linkMd5":"ceab8b84993b7658697428558d9de747","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn68@2020_1/2020/08/25/00-30-54-371_9337ab32e8e6325d.webp","destWidth":962,"destHeight":672,"sourceBytes":56966,"destBytes":44794,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/04/pptp_vpn_server1.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn68@2020_1/2020/08/25/00-30-54-371_9337ab32e8e6325d.webp","https://teddysun.com/wp-content/uploads/2013/04/pptp_vpn_server2.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn30@2020_1/2020/08/25/00-31-00-619_bba043e3837996c3.webp","https://teddysun.com/wp-content/uploads/2013/04/pptp_vpn_server3.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn28@2020_6/2020/08/25/00-30-59-072_801090a86a0a7964.webp"},"publishedOrCreatedDate":1598315426748},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"程序员节日快乐","link":"https://teddysun.com/?p=271","description":"<p><a href=\"https://teddysun.com/wp-content/uploads/2013/09/pg.jpg\"><img src=\"https://teddysun.com/wp-content/uploads/2013/09/pg_small.jpg\" alt=\"程序员\" title=\"程序员节日快乐\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　教师节刚刚过去，今天，我们迎来了程序员节。</span></p> \n<p><span style=\"font-size:14px;\">　　据<a href=\"http://zh.wikipedia.org/zh-cn/程序员节\" target=\"_blank\">维基百科介绍</a>，程序员节是一个国际上被众多科技公司和软件企业承认的业内人士节日。日期是在每年的第 256（十六进制为 0x100，或 28）天，也就是平年的 9 月 13 日或闰年的 9 月 12 日。</span></p> \n<p> <span id=\"more-271\"></span> </p> \n<p> <span style=\"font-size:14px;\">　　它是俄罗斯的一个官方节日，并且有诸多其他国家也庆祝这个节日，它们包括中国，以色列，孟加拉国，智利，巴西，墨西哥，奥地利，德国，加拿大，克罗地亚，法国，危地马拉，印度，比利时，澳大利亚，新西兰，波兰，斯洛文尼亚，英国，美国和乌拉圭。</span></p> \n<p><span style=\"font-size:14px;\">　　之所以选择 256（28），是因为它是一个被程序员们所熟知的 8 位元基本数字。用 1 个字节（等于 8 位元）最多能表示 256 个数值，而且在平年中，256 是 2 的最大幂中小于 365 的值。</span></p> \n<p><span style=\"font-size:14px;\">　　白色被选为程序员节的主题色。在红绿蓝 24 位深（RGB）颜色空间里，每种原色可以有 256 种级别（从 0 到 255 一共 256 个数值）的深浅变化，当三种原色都达到最大深浅值，即为十六进制的 0xFFFFFF 时，表示白色，所以全世界的程序员们会穿着白色来庆祝这一天。</span></p> \n<p><span style=\"font-size:14px;\">　　设立这个节日要归功于瓦伦丁·巴尔特（Valentin Balt），并行技术网页设计公司（Parallel Technologies web design company）的一名职员，2002 年，他收集签名向俄罗斯联邦政府请愿，请求将这一天定为程序员节。2009 年 7 月 24 日，俄罗斯联邦通信与大众传媒部提出了新的节日安排方案，设立程序员节。9 月 11 日，俄罗斯总统梅德韦杰夫签署了这个法案。</span></p> \n<p><span style=\"font-size:14px;color:blue;\">PS，一直不知道，程序员居然还有个节日。身为苦逼程序员的一员，能正常下班就算很幸福啦。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/271.html\">程序员节日快乐</a></p>","descriptionType":"html","publishedDate":"Fri, 13 Sep 2013 06:21:29 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/09/pg_small.jpg","linkMd5":"846dfed2a4695df306ba522feaae26a6","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn7@2020_1/2020/08/25/00-30-54-410_cac8ebf7d9698e16.webp","destWidth":600,"destHeight":229,"sourceBytes":36982,"destBytes":27794,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/09/pg_small.jpg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn7@2020_1/2020/08/25/00-30-54-410_cac8ebf7d9698e16.webp"},"publishedOrCreatedDate":1598315426739},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"网盘容量的秘密","link":"https://teddysun.com/?p=270","description":"<p><a href=\"https://teddysun.com/270.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/09/disk.jpg\" alt=\"微云\" title=\"网盘容量的秘密\" class=\"left\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　本以为网盘大战已经告一段落了，没想到后劲不小。《<a href=\"https://teddysun.com/263.html\" target=\"_blank\">网盘作战大升级</a>》一文中的活动链接已更新。百度目前到3T，微云直接10T，微盘的“吓死人”其实就是分享不限量，360则到了38T。</span><br /> <span style=\"font-size:14px;\">　　国内的网盘公司都在 TB 的级别上竞争，而国外如Dropbox，Google Drive，SkyDrive则一直没有动静。知乎上有人问，就硬件成本来计算，成本会不会太高？比如说百度网盘一亿用户，每人3T，成本是怎样的？真相究竟是什么？</span></p> \n<p> <span id=\"more-270\"></span> </p> \n<p> <span style=\"font-size:14px;color:blue;\">　　以下为转载，有删改（主要是错别字），揭晓的秘密只是部分，有待发掘更多。</span></p> \n<p><span style=\"font-size:14px;\">　　举例来说，我想要为每个用户提供 1G 的网络存储空间。如果服务器上有一个 1000G 的硬盘可以全部为用户提供数据储存，如果每个用户分配 1G 的最大储存空间，那么能非配给多少个用户使用呢？</span><br /> <span style=\"font-size:14px;\">　　你一定说是 1000÷1=1000 个用户。但事实上你这么分配了，你会发现每个用户平时根本不会上传 1G 的东西将容量占满，平均用户平时只上传 50M 的文件，也就是说，你将 1000G 的硬盘分给 1000个人使用，但只有效利用了其中的 50M×1000=50G 的空间，剩余 950G 的空间基本都完全浪费了。</span></p> \n<p><span style=\"font-size:14px;\">　　那么怎么解决呢？</span><br /> <span style=\"font-size:14px;\">　　你可以变通一下，将这 1000G 的空间分配给 20000个用户使用，每个人的上传上限容量还是1G，但每人平时还是平均上传 50M 的数据，那么 20000×50M=1000G，这下子就把服务器上的存储空间充分利用了。但你又怕这样分配给 20000个人后，万一某一刻人们突然多上传点数据，那么用户不是就觉察出来你分给人家的 1G 空间是假的了吗？所以可以不分配那么多人，只分配给 19000 人，剩下一些空间做应急之用。</span><br /> <span style=\"font-size:14px;\">　　突然发现一下子将可分配的用户数量翻了19倍啊，了不起。那还有没有办法更加有效的利用一下呢？</span><br /> <span style=\"font-size:14px;\">　　如果我有 1000台以上的服务器，一个服务器上有 1000G 空间，那么我们个服务器上都要留下 50G 的余量以备用户突然上传大数据时导致数据塞满的情况，那么我这 1000台服务器上就空出了 1000×50G=50000G 的空间被浪费了，多么可惜。所以我们发明了存储集群，使得一个用户的数据可以被分配在多个服务器上存储，但在用户那看起来只是一个 1G 的连续空间，那么就没必要在每个服务器上预留出应急空间了，甚至可以充分的将前一个服务器塞满后，在将数据往下一个服务器中塞。这样保证了服务器空间的最大利用，如果某一刻管理员发现用户都在疯狂上传数据（在一个大规模用户群下，这样的概率少之又少）导致我现有提供的空间不够了，没关系，只需要随手加几块硬盘或者服务器就解决了。</span><br /> <span style=\"font-size:14px;\">　　好吧，这下子我们的服务器空间利用高多了，可以将一定量的空间分配给最多的用户使用了。但有没有更好的改进方案呢？</span><br /> <span style=\"font-size:14px;\">　　管理员有一天发现，即使每个用户平均下来只存储 50M 的东西，但这 50M 也不是一蹴而就的，是随着1-2年的使用慢慢的达到这个数量的，也就是说，一个新的用户刚刚注册我的网络空间时，不会上传东西，或者只上传一点非常少的东西。那么我为每一个用户都初始分配了 50M 的空间，即使将来2年后他们会填满这50M，但这期间的这空间就有很多是浪费的。所以聪明的工程师说：既然我们可以分布式、集群式存储，一个用户的数据可以分布在多个服务器上，那么我们就假设一开始就给一个新注册的用户提供 0M 的空间，将来他用多少，我就给他提供多少存储空间，这样就彻底的保证硬盘的利用了，但用户界面还是要显示 1G 的。</span></p> \n<p><span style=\"font-size:14px;\">　　工程师的这个点子，使得我在建立网盘初期能用1台1000G的服务器提供了大约 1000000 人来注册和使用，随着注册的人多了，我也有钱了，也可以不断增加服务器以提供他们后期的存储了。同时因为一部分服务器晚了一年多购买，我的购买成本也下来了。</span><br /> <span style=\"font-size:14px;\">　　那么……这结束了吗？若是邮箱提供商的话，这样的利用率够高了。但网盘就不一样了。</span><br /> <span style=\"font-size:14px;\">　　聪明的工程师发现：不同于邮箱，大家的内容的附件绝大多数都是自创的和不同的。但网盘上大家上传的东西很多都是重复的。</span><br /> <span style=\"font-size:14px;\">　　比如张三今天下载了一部《Tokyo Hot》上传到了自己的网盘上，李四在三天后也下载了一模一样的《Tokyo Hot》上传到了网盘上，随着用户的增多，你会发现总计有 1000个人上传了1000份一模一样的文件到你宝贵的服务器空间上，所以工程师想出一个办法，既然是一样的文件，我就只存一份不就好啦，然后在用户的前端显示是每人都有一份不就行啦。当某些用户要删除这个文件的时候，我并不真的删除，只需要在前端显示似乎删除了，但后端一直保留着以供其他拥有此文件的用户下载。直到所有使用此文件的用户都删除了这个文件我再真的将其删除吧。</span><br /> <span style=\"font-size:14px;\">　　这样子随着存储的数据越来越多，注册的用户越来越多，其上传的重复数据越来越多。你发现这样的检测重复文件存储的效率越来越大。这样算下来似乎每个人上传的不重复的文件平均只是1M左右。这下子你可以提供超过 50倍 的用户使用您这有限的空间了。</span><br /> <span style=\"font-size:14px;\">　　但伴随这使用，你又发现一个规律：</span><br /> <span style=\"font-size:14px;\">　　张三上传的《Tokyo Hot N0124》和李四上传的《TH n124》是同一个文件，只不过文件名不一样，难道我就不能识别出他们是一个文件，然后只将其分别给不同的用户保存成不同的文件名不就行啦？确实可行，但这要利用一些识别文件相同性的算法，例如 MD5 值等。只要两个文件的 MD5 值一样，文件大小一样，我就认为它们是相同的文件，只需要保存一份文件并给不同的用户记作不同的文件名就好了。</span><br /> <span style=\"font-size:14px;\">　　有一天你发现，因为每一个文件都需要计算 MD5 值，导致 CPU 负荷很大，而且本来一样的文件非要浪费带宽上传回来才可以检测一致性，能改进一下吗？</span><br /> <span style=\"font-size:14px;\">　　聪明的工程师写了个软件或插件，美其名曰“上传控件”，将计算 MD5 的工作交给了上传用户的电脑来完成，一旦计算出用户要上传的数据和服务器上已经存储的某个数据是一样的，就干脆不用上传了，直接在用户那里标记上这个文件已经按照某某文件名上传成功了。这个过程几乎是瞬间搞定了，并给其起了个高富帅的名字“秒传”！</span><br /> <span style=\"font-size:14px;\">　　通过以上这么多步骤，你发现本来你只能给 1000用户提供网络空间的，这么多改进办法后，在用户界面显示 1G 空间不变的情况下，近乎可以为 1000000个用户提供网络空间了。</span><br /> <span style=\"font-size:14px;\">　　这样若是您哪天心情好，对外宣传说：我要将每个用户的存储空间上限提升到1TB。那么每个用户平均还是只上传50M数据，只有极个别的用户上传了突破1G原始空间的数据，你会发现所付出的成本近乎是微乎其微的。</span></p> \n<p><span style=\"font-size:14px;color:red;\">最后提一个醒，说免费无限容量的真的信得过吗？参考雅虎中国早年关闭相册和现在关闭邮箱的行为便知端倪。</span></p> \n<p><span style=\"font-size:14px;color:blue;\">PS：目前百度的离线下载功能还很弱，主要体现在资源库没有迅雷的大，不是最热的那些资源都下载不到，毕竟迅雷是培养了好几年才牛逼的……相信百度此番免费政策出来后离线下载功能会越来越完善的。</span></p> \n<p><span style=\"font-size:14px;\">参考链接：<a href=\"http://www.zhihu.com/question/21591490\" target=\"_blank\">http://www.zhihu.com/question/21591490</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/270.html\">网盘容量的秘密</a></p>","descriptionType":"html","publishedDate":"Tue, 10 Sep 2013 10:14:40 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/09/disk.jpg","linkMd5":"c9d9f40bc4d29236a22c2c15dad6acc0","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn51@2020_4/2020/08/25/00-30-54-118_53657afa6ee83ca9.webp","destWidth":918,"destHeight":494,"sourceBytes":46566,"destBytes":40610,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/09/disk.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn51@2020_4/2020/08/25/00-30-54-118_53657afa6ee83ca9.webp"},"publishedOrCreatedDate":1598315426744},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"CentOS 6下编译PHP出错","link":"https://teddysun.com/?p=329","description":"<p><a href=\"https://teddysun.com/329.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/12/no1.jpg\" title=\"ACentOS 6.5 x64 编译PHP出错\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"> PHP 官方更新倒是挺勤快的。几天不见，又更新了。于是升级一下 VPS 的 PHP 呗。编译的过程中跑着跑着出现了错误如下：</span><span style=\"font-size:14px;color:red;\">cc: Internal error: Killed (program cc1)</span><br /> <span style=\"font-size:14px;\"> 很明显这是编译进程被系统给 kill 掉了，我在测试 LAMP一键安装脚本时，遇到过多次这种情况。原因无非就是内存太小导致的。今天在一个 256MB 内存的 VPS 编译的时候又出现这种错误了。通常情况，在 x64 的系统中小内存的 VPS 里比较常见。</span></p> \n<p> <span id=\"more-329\"></span> </p> \n<p><span style=\"font-size:14px;\"> 在阿里云 512MB VPS上测试时，也出现过这种情况。解决办法，就是在编译 PHP 时 configure 增加一个选项 –disable-fileinfo，同时关闭一些运行中的进程如mysqld，httpd等等，以节约内存。</span><br /> <span style=\"font-size:14px;\"> 还有就是增加 swap 分区（前提是 VPS 不存在 swap 分区的情况下，比如 DigitalOcean 默认就没有 swap 分区），也可以帮助解决小内存编译的问题。如何在 DigitalOcean 的系统中增加 swap 分区，请参阅：<span style=\"font-family:Courier New;\"><a href=\"https://teddysun.com/321.html\" target=\"_blank\">https://teddysun.com/321.html</a></span></span><br /> <span style=\"font-size:14px;\"> 通过以上步骤，我在 256MB 的 buyvm 的 VPS 上顺利编译完 PHP。</span></p> \n<p><span style=\"font-size:14px;\"> 附上我的完整的编译 PHP 的 configure 选项（更多具体详情，参阅：<a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP一键安装脚本</a>）：</span></p> \n<pre class=\"prettyprint lang-bsh\">./configure --prefix=/usr/local/php --with-apxs2=/usr/local/apache/bin/apxs  --with-config-file-path=/usr/local/php/etc --with-mysqli=/usr/local/mysql/bin/mysql_config --with-pdo-mysql --with-mysql-sock=/usr/local/mysql/mysql.sock --with-config-file-scan-dir=/usr/local/php/php.d --with-openssl --with-zlib --with-curl --enable-ftp --with-gd --with-jpeg-dir --with-png-dir --with-freetype-dir --with-xmlrpc --enable-calendar --with-imap --with-kerberos --with-imap-ssl --with-ldap --enable-bcmath --enable-exif --enable-wddx --enable-tokenizer --enable-simplexml --enable-sockets --enable-ctype --enable-gd-native-ttf --enable-mbstring --enable-intl --enable-xml --enable-dom --enable-json --enable-session --enable-soap --with-mcrypt --enable-zip --with-iconv=/usr/local/libiconv --with-mysql=/usr/local/mysql --with-icu-dir=/usr --with-mhash=/usr --with-pcre-dir --without-pear --disable-fileinfo</pre> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/329.html\">CentOS 6下编译PHP出错</a></p>","descriptionType":"html","publishedDate":"Sat, 11 Jan 2014 05:37:07 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/12/no1.jpg","linkMd5":"131bfabff4dc8c76150eff941c6c8e24","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn83@2020_4/2020/08/25/00-30-51-883_9cc67b3f48f2d7ae.webp","destWidth":600,"destHeight":397,"sourceBytes":44424,"destBytes":20986,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/12/no1.jpg":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn83@2020_4/2020/08/25/00-30-51-883_9cc67b3f48f2d7ae.webp"},"publishedOrCreatedDate":1598315426735},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Google式大扫除","link":"https://teddysun.com/?p=208","description":"<p><a href=\"https://teddysun.com/208.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/google.png\" alt=\"Google\" title=\"Google式大扫除\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　Google式大扫除又开始动刀了，这次开刀的对象是Google Code。距离上次宣布即将停止（2013年7月1日）Google Reader的时间才2个多月。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　唯一令人安慰的是，Google Code不是一刀切的，至少对于已经存在的文件都可一直被下载下去。而不幸的是，我是Google这两项服务的重度使用者。当Google绞尽脑汁在提升社交产品Google+的活跃度时，Google的其他小众服务被被关闭也只是时间的问题。但是，当这一天真的来临，我还是有点难以接受。尽管已经宣布了Google Reader的“死亡日期”，我还是在继续使用着，直到那一天真正的到来为止。虽然有替代方案，比如Feedly，鲜果等，但我还是不情愿转移。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　Google Code的下载本来的初衷是提供源码打包下载，时至今日已经沦为下载站或图床服务(国内尤甚)。不赚钱，耗费大量服务器资源，高带宽占用，在这样的大环境下，Google做出这个决定是能够理解的，但对于那些遵守规则的人来说就显得有些不公平。</span></p> \n<p> <span id=\"more-208\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"color:red;\">世上没有免费的午餐，尤其是没有长久的免费午餐。</span>尽管Google财大气粗，但也不是活雷锋。严格意义上来说，互联网没有任何一个公司是足够让人信任的。服务被关闭，用户数据被删除，出了告示都算是君子了。只有把所有的重要数据和应用掌握在自己手里，才有主动权。参阅《<a href=\"https://teddysun.com/200.html\" target=\"_blank\">ownCloud：你的专属私有云</a>》，在自己的服务器上搭建云服务。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　下次再有这样的事，我们也要淡然处之，哪怕明天Google说停止搜索服务。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　Google Reader被关闭是针对阅读爱好者和记者，Google Code则针对的是开发者。下一个针对的人群是什么呢？等着瞧吧。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"color:red;\"><b>附上完整译文：</b></span></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　托管在Google Code上的项目为开源项目提供了一个免费的协作开发环境。每个项目都有自己的成员控制、Subversion/Mercurial/Git 仓库、问题跟踪、维基页和下载服务。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　托管在Google Code上的项目带有的下载服务，可以让公众自由下载开源项目的文件。不幸的是，下载服务已成为最近显著增加的事件（incident）的主要滥用来源。由于该服务日益被滥用，再加上保持我们社区安全的愿望，我们要关闭下载服务了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　从今日（2013年5月22日）开始，【还没有任何下载量的现有项目】和【所有新项目】，将无法再创建下载了。在 2014 年 1 月 14 日前，已有下载量的现有项目不受影响，不过从 2014 年 1 日 15 日开始，也将无法再创建下载了。所有项目中现有的下载，在可预见的未来中，将继续开放。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　如果你的项目正在用下载服务来分发文件，并需要定期创建新下载，我们推荐你在 2014 年 1 月 15 日之前把文件转移到类似 Google Drive 的服务。如果你选择把文件转移到 Google Drive，请查看我们的<a href=\"https://code.google.com/p/support/wiki/DownloadsFAQ\" target=\"_blank\">帮助文章</a>。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　By Google 项目托管团队</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　出处：<a href=\"http://google-opensource.blogspot.com/2013/05/a-change-to-google-code-download-service.html\" target=\"_blank\">英文链接</a>（需翻）</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/208.html\">Google式大扫除</a></p>","descriptionType":"html","publishedDate":"Thu, 23 May 2013 15:01:25 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/google.png","linkMd5":"8bc06f5e2e587a7733099bf7b140e586","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn8@2020_5/2020/08/25/00-30-52-830_5d9178f33877a975.webp","destWidth":520,"destHeight":392,"sourceBytes":93340,"destBytes":14860,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/google.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn8@2020_5/2020/08/25/00-30-52-830_5d9178f33877a975.webp"},"publishedOrCreatedDate":1598315426743},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"使用 Docker 快速部署 Shadowsocks-libev + v2ray-plugin","link":"https://teddysun.com/?p=569","description":"<p><a href=\"https://teddysun.com/569.html\"><img class=\"aligncenter\" style=\"width: auto; height: auto;\" title=\"使用 Docker 快速部署 Shadowsocks-libev + v2ray-plugin\" src=\"https://teddysun.com/wp-content/uploads/2014/shadowsocks.png\" /></a></p> \n<h3><span style=\"color: red;\">条件准备</span></h3> \n<p><span style=\"font-size: 14px;\">一台墙外VPS；</span><br /> <span style=\"font-size: 14px;\">一台安装好 SSH 客户端的本地电脑；</span><br /> <span style=\"font-size: 14px;\">如果需要 tls 功能则需要准备一个域名以及一个 Cloudflare 账号。</span></p> \n<p><span id=\"more-569\"></span></p> \n<h3><span style=\"color: red;\">一、安装 Docker</span></h3> \n<h4>1.1 以 root 用户登录，执行一键脚本安装 Docker</h4> \n<p><span style=\"font-size: 14px;\">以Debian系为例，升级源并安装软件</span></p> \n<pre class=\"prettyprint lang-bsh\">$ apt-get update &amp;&amp; apt-get install -y wget vim</pre> \n<p><span style=\"font-size: 14px;\">执行此命令等候自动安装 Docker</span></p> \n<pre class=\"prettyprint lang-bsh\">$ wget -qO- get.docker.com | bash</pre> \n<p><span style=\"font-size: 14px;\"><b>说明：</b>推荐使用 KVM 架构的 VPS，OpenVZ 架构的 VPS 不支持安装 Docker，另外 CentOS 8 不支持用此脚本来安装 Docker。</span></p> \n<h4>1.2 对 Docker 的一些命令操作</h4> \n<p><span style=\"font-size: 14px;\">查看 Docker 安装版本等信息</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker version</pre> \n<p><span style=\"font-size: 14px;\">启动 Docker 服务</span></p> \n<pre class=\"prettyprint lang-bsh\">$ systemctl start docker</pre> \n<p><span style=\"font-size: 14px;\">查看 Docker 运行状态</span></p> \n<pre class=\"prettyprint lang-bsh\">$ systemctl status docker</pre> \n<p><span style=\"font-size: 14px;\">将 Docker 服务加入开机自启动</span></p> \n<pre class=\"prettyprint lang-bsh\">$ systemctl enable docker</pre> \n<p><span style=\"font-size: 14px; color: red;\">下面讲解的配置从上往下，难度由简到繁，如果你想一步到位，建议跳过二，三步，直接看第四步。</span></p> \n<h3><span style=\"color: red;\">二、用 Docker 部署 Shadowsocks-libev + v2ray-plugin over websocket (HTTP)</span></h3> \n<h4>2.1 创建配置文件</h4> \n<p><span style=\"font-size: 14px;\">在 /etc 目录下创建 shadowsocks-libev 目录</span></p> \n<pre class=\"prettyprint lang-bsh\">$ mkdir /etc/shadowsocks-libev</pre> \n<p><span style=\"font-size: 14px;\">切换目录至 /etc/shadowsocks-libev</span></p> \n<pre class=\"prettyprint lang-bsh\">$ cd /etc/shadowsocks-libev</pre> \n<p><span style=\"font-size: 14px;\">创建并开始编辑名为 config.json 的配置文件</span></p> \n<pre class=\"prettyprint lang-bsh\">$ vim config.json</pre> \n<p><span style=\"font-size: 14px;\">以下为配置文件内容示例，添加后保存并退出</span></p> \n<pre class=\"prettyprint lang-bsh\">{\n\"server\":\"0.0.0.0\",\n\"server_port\":9000,\n\"method\":\"aes-256-gcm\",\n\"timeout\":300,\n\"password\":\"password0\",\n\"fast_open\":false,\n\"nameserver\":\"8.8.8.8\",\n\"mode\":\"tcp_and_udp\",\n\"plugin\":\"v2ray-plugin\",\n\"plugin_opts\":\"server\"\n}</pre> \n<p><span style=\"font-size: 14px;\"><b>说明：</b>server 后面默认填 0.0.0.0，请不要修改。关于更多参数用法和说明请参考：<a href=\"https://github.com/shadowsocks/shadowsocks-libev/blob/master/doc/shadowsocks-libev.asciidoc\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a></span><br /> <span style=\"font-size: 14px;\">值得注意的是，如果把 plugin_opts 改为</span></p> \n<pre class=\"prettyprint lang-bsh\">\"plugin_opts\":\"server;mux=0\"</pre> \n<p>后就可以用 Quantumult X。</p> \n<h4>2.2 用 Docker 结合上面的配置文件创建并启动容器</h4> \n<p><span style=\"font-size: 14px;\">命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker run -d --name ss-libev --restart always -p 9000:9000 -p 9000:9000/udp -v /etc/shadowsocks-libev:/etc/shadowsocks-libev teddysun/shadowsocks-libev</pre> \n<p><span style=\"font-size: 14px;\">参数解释：</span><br /> <span style=\"font-size: 14px;\">docker run：开始运行一个容器</span><br /> <span style=\"font-size: 14px;\">-d 参数：容器以后台运行并输出容器ID</span><br /> <span style=\"font-size: 14px;\">–name 参数：给容器分配一个识别符，方便将来的启动，停止，删除等操作</span><br /> <span style=\"font-size: 14px;\">–restart 参数：配置容器启动类型，always 即为 docker 服务重新启动时自动启动本容器</span><br /> <span style=\"font-size: 14px;\">-p 参数：容器的 9000 端口映射到本机的 9000 端口。默认是 TCP 映射，当需要 UDP 映射时候，那就再追加一次 UDP 的映射。冒号后面是容器端口，冒号前面是宿主机端口，可以写成一致，也可以写成不一致</span><br /> <span style=\"font-size: 14px;\">-v 参数：挂载卷（volume），冒号后面是容器的路径，冒号前面是宿主机的路径，可以写成一致，也可以写成不一致</span><br /> <span style=\"font-size: 14px;\">teddysun/shadowsocks-libev：这是从 docker hub 下载回来的镜像完整路径名</span></p> \n<h4>2.3 后期容器处理常用命令</h4> \n<p><span style=\"font-size: 14px;\">前面 docker run 后面 –name ss-libev 中的 ss-libev 为 $name，其代表容器识别符，也就是 $name=ss-libev。</span><br /> <span style=\"font-size: 14px;\">查看容器在线状态及大小</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker ps -as</pre> \n<p><span style=\"font-size: 14px;\">查看容器的运行输出日志</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker logs $name</pre> \n<p><span style=\"font-size: 14px;\">重新启动容器，一般在修改除端口外的配置后使用使修改生效</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker restart $name</pre> \n<p><span style=\"font-size: 14px;\">停止容器的运行</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker stop $name</pre> \n<p><span style=\"font-size: 14px;\">移除容器</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker rm $name</pre> \n<p><span style=\"font-size: 14px;\">查看 docker 容器占用 CPU，内存等信息</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker stats --no-stream</pre> \n<h3><span style=\"color: red;\">三、用 Docker 部署 Shadowsocks-libev + v2ray-plugin over websocket (HTTPS)</span></h3> \n<h4>3.1 用 acme.sh 脚本申请 SSL 证书</h4> \n<p><span style=\"font-size: 14px;\">此处需要用到一个你拥有的域名。参考：<a href=\"https://ssu.tw/index.php/archives/8/\" target=\"_blank\" rel=\"noopener noreferrer\">这篇文章</a>。下面默认你已经获取到 Clouflare API key，并且也已经安装好 acme.sh 脚本。</span></p> \n<h4>3.2 创建配置文件</h4> \n<p><span style=\"font-size: 14px;\">在 /etc 目录下创建 shadowsocks-libev 目录</span></p> \n<pre class=\"prettyprint lang-bsh\">$ mkdir /etc/shadowsocks-libev</pre> \n<p><span style=\"font-size: 14px;\">切换目录至 /etc/shadowsocks-libev</span></p> \n<pre class=\"prettyprint lang-bsh\">$ cd /etc/shadowsocks-libev</pre> \n<p><span style=\"font-size: 14px;\">创建 config.json 的配置文件</span></p> \n<pre class=\"prettyprint lang-bsh\">$ vim config.json</pre> \n<p><span style=\"font-size: 14px;\">以下为配置文件内容示例，添加后保存并退出</span></p> \n<pre class=\"prettyprint lang-bsh\">{\n\"server\":\"0.0.0.0\",\n\"server_port\":9000,\n\"password\":\"password0\",\n\"timeout\":300,\n\"method\":\"aes-256-gcm\",\n\"fast_open\":false,\n\"nameserver\":\"8.8.8.8\",\n\"mode\":\"tcp_and_udp\",\n\"plugin\":\"v2ray-plugin\",\n\"plugin_opts\":\"server;tls;host=mydomain.me;cert=/etc/shadowsocks-libev/plugin.crt;key=/etc/shadowsocks-libev/plugin.key\"\n}</pre> \n<p><span style=\"font-size: 14px;\"><b>说明：</b>server 后面的 0.0.0.0 不要修改，plugin_opts 后面的配置除了域名外也不要修改</span></p> \n<h4>3.3 安装证书到 Shadowsocks-libev 配置文件的目录 /etc/shadowsocks-libev</h4> \n<p><span style=\"font-size: 14px;\">假设你的是域名是 mydomain.me，且已经在 Cloudflare 上设置好 A 记录解析</span><br /> <span style=\"font-size: 14px;\">CF_Key 的值替换成你自己的 Cloudflare API Key</span></p> \n<pre class=\"prettyprint lang-bsh\">$ export CF_Key=\"xxxxxxxxxxxxxxxxxxxxxxxxxxx\"</pre> \n<p><span style=\"font-size: 14px;\">CF_Email 的值替换成你自己的 Cloudflare 注册邮箱账号名</span></p> \n<pre class=\"prettyprint lang-bsh\">$ export CF_Email=\"youremail@gmail.com\"</pre> \n<p><span style=\"font-size: 14px;\">用 acme.sh 脚本申请证书</span></p> \n<pre class=\"prettyprint lang-bsh\">$ acme.sh --issue --dns dns_cf -d mydomain.me -k ec-256</pre> \n<p><span style=\"font-size: 14px;\">安装证书到 Shadowsocks-libev 配置文件的目录 /etc/shadowsocks-libev</span></p> \n<pre class=\"prettyprint lang-bsh\">$ acme.sh --installcert -d mydomain.me --fullchain-file /etc/shadowsocks-libev/plugin.crt --key-file /etc/shadowsocks-libev/plugin.key --ecc</pre> \n<h4>3.4 用 Docker 结合上面的配置文件创建并启动容器</h4> \n<pre class=\"prettyprint lang-bsh\">$ docker run -d --name ss-libev --restart always -p 9000:9000 -p 9000:9000/udp -v /etc/shadowsocks-libev:/etc/shadowsocks-libev teddysun/shadowsocks-libev</pre> \n<h3><span style=\"color: red;\">四、用 Docker 部署 Shadowsocks-libev + v2ray-plugin over websocket (HTTP) + TLS + caddy + CDN</span></h3> \n<h4>4.1 申请 SSL 证书以及安装证书</h4> \n<p><span style=\"font-size: 14px;\">参考上面的 3.1 和 3.3 章节。</span></p> \n<h4>4.2 创建配置文件</h4> \n<p><span style=\"font-size: 14px;\">在 /etc 目录下创建 shadowsocks-libev 目录</span></p> \n<pre class=\"prettyprint lang-bsh\">$ mkdir /etc/shadowsocks-libev</pre> \n<p><span style=\"font-size: 14px;\">切换目录至 /etc/shadowsocks-libev</span></p> \n<pre class=\"prettyprint lang-bsh\">$ cd /etc/shadowsocks-libev</pre> \n<p><span style=\"font-size: 14px;\">创建 config.json 的配置文件</span></p> \n<pre class=\"prettyprint lang-bsh\">$ vim config.json</pre> \n<p><span style=\"font-size: 14px;\">以下为配置文件内容示例，添加后保存并退出</span></p> \n<pre class=\"prettyprint lang-bsh\">{\n\"server\":\"127.0.0.1\",\n\"server_port\":9000,\n\"password\":\"password0\",\n\"timeout\":300,\n\"method\":\"aes-256-gcm\",\n\"fast_open\":false,\n\"nameserver\":\"8.8.8.8\",\n\"mode\":\"tcp_and_udp\",\n\"plugin\":\"v2ray-plugin\",\n\"plugin_opts\":\"server;path=/ray\"\n}</pre> \n<p><span style=\"font-size: 14px;\"><b>说明：</b>因为要监听本地，所以 server 后面地址填 127.0.0.1， 9000 端口不对外开放，此处只是在 websocket 的配置上加了个 path 参数（后面的值可以更改，比如可以改为 path=/teddysun），tls 则要由 caddy 来提供。</span></p> \n<h4>4.3 用 Docker 结合上面的配置文件创建并启动容器</h4> \n<p><span style=\"font-size: 14px;\">命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ docker run -d --name ss-libev --restart always --net host -v /etc/shadowsocks-libev:/etc/shadowsocks-libev teddysun/shadowsocks-libev</pre> \n<p><span style=\"font-size: 14px;\"><b>说明：</b>此处不用端口映射，直接使用</span></p> \n<pre class=\"prettyprint lang-bsh\">--net host</pre> \n<p>参数配置，让容器跟宿主机共用网络。</p> \n<h4>4.4 安装 caddy</h4> \n<p><span style=\"font-size: 14px;\">执行下面一条命令安装 caddy v1.0.5，并把它放到 /usr/bin 目录下（此为 Linux x86_64 系统示例）</span></p> \n<pre class=\"prettyprint lang-bsh\">$ wget -O /usr/bin/caddy https://dl.lamp.sh/files/caddy_linux_amd64\n$ chmod 755 /usr/bin/caddy</pre> \n<p><span style=\"font-size: 14px;\">如果是 Linux x86 系统，则执行如下命令</span></p> \n<pre class=\"prettyprint lang-bsh\">$ wget -O /usr/bin/caddy https://dl.lamp.sh/files/caddy_linux_386\n$ chmod 755 /usr/bin/caddy</pre> \n<h4>4.5 配置 caddy 目录</h4> \n<p><span style=\"font-size: 14px;\">在/root目录下创建 caddy 目录并切换至此</span></p> \n<pre class=\"prettyprint lang-bsh\">$ cd /root &amp;&amp; mkdir caddy &amp;&amp; cd caddy</pre> \n<p><span style=\"font-size: 14px;\">安装证书和 key 到 /root/caddy 目录下</span></p> \n<pre class=\"prettyprint lang-bsh\">$ acme.sh --installcert -d mydomain.me --fullchain-file /root/caddy/caddy.crt --key-file /root/caddy/caddy.key --ecc</pre> \n<h4>4.6 创建 caddy 配置文件</h4> \n<p><span style=\"font-size: 14px;\">创建文件并开始编辑 caddy 配置文件 caddy.conf</span></p> \n<pre class=\"prettyprint lang-bsh\">$ vim caddy.conf</pre> \n<p><span style=\"font-size: 14px;\">下面是 caddy 配置文件示例，添加后保存并退出</span></p> \n<pre class=\"prettyprint lang-bsh\">mydomain.me:443 {\n  gzip\n  tls /root/caddy/caddy.crt /root/caddy/caddy.key\n  log /root/caddy/caddy.log\n  proxy / https://www.baidu.com\n  proxy /ray 127.0.0.1:9000 {\n    websocket\n    header_upstream -Origin\n  }\n}</pre> \n<p><span style=\"font-size: 14px;\"><b>说明：</b>此处只要关注路径和端口号，9000 是 /etc/shadowsocks-libev/config.json 里配置的，/ray 是配置文件内 plugin_opts 后面的 path=/ray，请注意替换。另 caddy 需要监听 443 端口，请确保 VPS 的 443 端口没有被占用。</span></p> \n<h4>4.7 运行 caddy</h4> \n<p><span style=\"font-size: 14px;\">后台运行 caddy</span></p> \n<pre class=\"prettyprint lang-bsh\">$ nohup caddy -conf /root/caddy/caddy.conf &amp;</pre> \n<p><span style=\"font-size: 14px;\">可以查看 caddy 运行产生的日志</span></p> \n<pre class=\"prettyprint lang-bsh\">$ cat /root/caddy/caddy.log</pre> \n<p><span style=\"font-size: 14px;\">确认 caddy 运行状态，下面的命令有输出则表示正常</span></p> \n<pre class=\"prettyprint lang-bsh\">$ ps -ef | grep -v grep | grep caddy</pre> \n<h4>4.8 开启 Cloudflare 的 CDN 保护，开启 SSL/TLS 的 Full 模式</h4> \n<p><span style=\"font-size: 14px;\">如下图所示，第 1 步，开启 CDN</span></p> \n<p><img class=\"left\" style=\"width: auto; height: auto;\" src=\"https://teddysun.com/wp-content/uploads/2019/ws_1.png\" /></p> \n<p><span style=\"font-size: 14px;\">如下图所示，第 2 步，开启 Full 模式</span></p> \n<p><img class=\"left\" style=\"width: auto; height: auto;\" src=\"https://teddysun.com/wp-content/uploads/2019/ws_2.png\" /></p> \n<h3><span style=\"color: red;\">五、客户端配置</span></h3> \n<h4>5.1 Windows 客户端</h4> \n<p><span style=\"font-size: 14px;\">先到<a href=\"https://github.com/shadowsocks/v2ray-plugin/releases\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>下载 v2ray-plugin-windows-amd64 的安装包，下载完成后解压到 <a href=\"https://github.com/shadowsocks/shadowsocks-windows/releases\" target=\"_blank\" rel=\"noopener noreferrer\">shadowsocks-windows</a> 的安装目录下，并重命名为 v2ray-plugin.exe 即可。</span><br /> <span style=\"font-size: 14px;\"><b>选项说明：</b></span><br /> <span style=\"font-size: 14px;\">插件程序：v2ray-plugin</span><br /> <span style=\"font-size: 14px;\">如果选的是第一种，Shadowsocks-libev + v2ray-plugin over websocket (HTTP)，<strong>插件选项</strong>这里可以留空</span><br /> <span style=\"font-size: 14px;\">如果选的是第二种，Shadowsocks-libev + v2ray-plugin over websocket (HTTPS)，<strong>插件选项</strong>这里填 tls;host=mydomain.me</span><br /> <span style=\"font-size: 14px;\">如果选的是第三种，Shadowsocks-libev + v2ray-plugin over websocket (HTTP) + TLS + caddy + CDN，<strong>插件选项</strong>这里填 tls;host=mydomain.me;path=/ray</span><br /> <span style=\"font-size: 14px;\">值得注意的是：如果你把 plugin_opts 改为</span></p> \n<pre class=\"prettyprint lang-bsh\">\"plugin_opts\":\"server;mux=0\"</pre> \n<p>后就可以用 Quantumult X 来使用这个节点，但 Windows 客户端不能直接使用了。</p> \n<h4>5.2 Android 客户端</h4> \n<p><span style=\"font-size: 14px;\">先到<a href=\"https://github.com/shadowsocks/v2ray-plugin-android/releases\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>下载插件并安装，其余的配置都跟上面 Windows 客户端一致。</span></p> \n<h4>5.3 iOS 客户端</h4> \n<p><span style=\"font-size: 14px;\">请使用 Shadowrocket，也就是俗称的小火箭，添加如下配置使用。</span><br /> <span style=\"font-size: 14px;\">填写服务器，端口，密码，选择算法，插件选择 v2ray-plugin</span></p> \n<p><img class=\"left\" style=\"width: auto; height: auto;\" src=\"https://teddysun.com/wp-content/uploads/2019/ws_3.png\" /></p> \n<p><span style=\"font-size: 14px;\">点击插件 v2ray-plugin</span></p> \n<p><img class=\"left\" style=\"width: auto; height: auto;\" src=\"https://teddysun.com/wp-content/uploads/2019/ws_4.png\" /></p> \n<p><span style=\"font-size: 14px;\">设置插件 v2ray-plugin，开启 TLS，填写路径，服务器则填写你的域名</span></p> \n<p><img class=\"left\" style=\"width: auto; height: auto;\" src=\"https://teddysun.com/wp-content/uploads/2019/ws_5.png\" /></p> \n<h3><span style=\"color: red;\">六、写在最后</span></h3> \n<p><span style=\"font-size: 14px;\">本文为网友【<a href=\"https://ssu.tw/\" target=\"_blank\" rel=\"noopener noreferrer\">毕世平</a>】所总结，我只是在其基础上稍作修改。如有不对的地方，欢迎在评论里指出。</span></p> \n<h3><span style=\"color: red;\">参考链接：</span></h3> \n<p><span style=\"font-size: 14px;\"><a href=\"https://ssu.tw/index.php/archives/31/\" target=\"_blank\" rel=\"noopener noreferrer\">https://ssu.tw/index.php/archives/31/</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/569.html\">使用 Docker 快速部署 Shadowsocks-libev + v2ray-plugin</a></p>","descriptionType":"html","publishedDate":"Tue, 26 Nov 2019 14:29:58 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2014/shadowsocks.png","linkMd5":"b99843baba90026fccd42bb7e9b8fe19","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn52@2020_1/2020/08/25/00-30-52-806_c9911c8615f31a57.webp","destWidth":600,"destHeight":293,"sourceBytes":33008,"destBytes":8746,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2014/shadowsocks.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn52@2020_1/2020/08/25/00-30-52-806_c9911c8615f31a57.webp","https://teddysun.com/wp-content/uploads/2019/ws_1.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn76@2020_3/2020/08/25/00-30-57-998_735ab89110b9150a.webp","https://teddysun.com/wp-content/uploads/2019/ws_2.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn21@2020_5/2020/08/25/00-30-57-100_56752a2a9bfd534b.webp","https://teddysun.com/wp-content/uploads/2019/ws_3.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn63@2020_1/2020/08/25/00-30-58-577_e8c9bc5802cc7228.webp","https://teddysun.com/wp-content/uploads/2019/ws_4.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn20@2020_3/2020/08/25/00-30-56-993_1a147e4632c6f806.webp","https://teddysun.com/wp-content/uploads/2019/ws_5.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn32@2020_5/2020/08/25/00-30-57-049_a67d91ebed4b3ff4.webp"},"publishedOrCreatedDate":1598315426740},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"L2TP/IPSec一键安装脚本","link":"https://teddysun.com/?p=448","description":"<p><a href=\"https://teddysun.com/448.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/11/wall.jpg\" alt=\"Great Wall\" title=\"L2TP一键安装脚本\" class=\"aligncenter\" style=\"height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"><strong>本脚本适用环境：</strong></span><br /> <span style=\"font-size:14px;\">系统支持：CentOS6+，Debian7+，Ubuntu12+</span><br /> <span style=\"font-size:14px;\">内存要求：≥128M</span><br /> <span style=\"font-size:14px;color:red;\">更新日期：2017 年 05 月 28 日</span></p> \n<p><span style=\"font-size:14px;\"><strong>关于本脚本：</strong></span><br /> <span style=\"font-size:14px;\">名词解释如下</span><br /> <span style=\"font-size:14px;\">L2TP（Layer 2 Tunneling Protocol）</span><br /> <span style=\"font-size:14px;\">IPSec（Internet Protocol Security）</span><br /> <span style=\"font-size:14px;\">IKEv2 (Internet Key Exchange v2)</span><br /> <span style=\"font-size:14px;\">能实现 IPsec 的目前总体上有 openswan，libreswan，strongswan 这3种。</span><br /> <span style=\"font-size:14px;\">libreswan 是基于 openswan 的 fork，所以现在各个发行版基本已经看不到 openswan 的身影了。</span><br /> <span style=\"font-size:14px;\">当然也有使用 strongswan 的。</span></p> \n<p><span style=\"font-size:14px;\">之所以要更新 L2TP 一键安装脚本，是因为随着各个 Linux 发行版不断推陈出新，原有的脚本已经不适应现在的需求。</span><br /> <span style=\"font-size:14px;\">本脚本通过编译安装最新版 libreswan 来实现 IPSec（CentOS7 下则是全部 yum 安装），yum 或 apt-get 来安装 xl2tpd，再根据各个发行版的使用方法不同，部署防火墙规则。</span></p> \n<p> <span id=\"more-448\"></span> </p> \n<h3> <span style=\"color:red;\">隆重介绍 Docker 版 L2TP/IPsec</span><br /> </h3> \n<p><span style=\"font-size:14px;color:red;\">由于此脚本已经很久不更新，因此已经不推荐使用该脚本来安装了。OK，下面隆重介绍一下 Docker 版 L2TP/IPsec。</span><br /> <span style=\"font-size:14px;color:red;\">使用 Docker 的好处就是对当前系统的环境没有破坏性，随时可以新建或者删除容器，而且方便快捷，实在是居家必备。</span><br /> <span style=\"font-size:14px;color:red;\">具体请查看《<a href=\"https://teddysun.com/536.html\" target=\"_blank\">介绍几款 Docker 镜像</a>》此文中的【L2TP/IPsec VPN Server Docker Image】小节。</span><br /> <span style=\"font-size:14px;color:red;\">以及该项目的 <a href=\"https://hub.docker.com/r/teddysun/l2tp\" target=\"_blank\">Docker Hub 页面</a>，或 <a href=\"https://github.com/teddysun/across/tree/master/docker/l2tp\" target=\"_blank\">Github 页面</a>。</span></p> \n<p></p> \n<h3> 写在前面：<br /> </h3> \n<p><span style=\"font-size:14px;\">基于 OpenVZ 虚拟化技术的 VPS 需要开启TUN/TAP才能正常使用，购买 VPS 时请先咨询服务商是否支持开启 TUN/TAP。</span></p> \n<p><span style=\"font-size:14px;\">OpenVZ 虚拟的 VPS 需要系统内核支持 IPSec 才行。也就是说，母服务器的内核如果不支持的话那就没办法，只能换 VPS。</span><br /> <span style=\"font-size:14px;\">因此，一般不建议在 OpenVZ 的 VPS 上安装本脚本。脚本如果检测到该 VPS 为 OpenVZ 架构，会出现警告提醒。</span></p> \n<p><span style=\"font-size:14px;\">如何检测是否支持TUN模块？</span><br /> <span style=\"font-size:14px;\">执行命令：</span><br /> <span style=\"font-size:14px;\">cat /dev/net/tun</span><br /> <span style=\"font-size:14px;\">如果返回信息为：cat: /dev/net/tun: File descriptor in bad state 说明正常</span></p> \n<p><span style=\"font-size:14px;\">如何检测是否支持ppp模块？</span><br /> <span style=\"font-size:14px;\">执行命令：</span><br /> <span style=\"font-size:14px;\">cat /dev/ppp</span><br /> <span style=\"font-size:14px;\">如果返回信息为：cat: /dev/ppp: No such device or address 说明正常</span><br /> <span style=\"font-size:14px;\">当然，脚本在安装时也会执行检查，如果不适用于安装，脚本会予以提示。</span></p> \n<h3> 使用方法：<br /> </h3> \n<p><span style=\"font-size:14px;\">root 用户登录后，运行以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/across/master/l2tp.sh\nchmod +x l2tp.sh\n./l2tp.sh</pre> \n<p> <span style=\"font-size:14px;\">执行后，会有如下交互界面</span></p> \n<p><a href=\"https://teddysun.com/wp-content/uploads/2016/l2tp_1.png\"><img src=\"https://teddysun.com/wp-content/uploads/2016/l2tp_1.png\" alt=\"L2TP\" title=\"L2TP一键安装脚本\" class=\"left\" style=\"height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;color:blue;\">Please input IP-Range:</span><br /> <span style=\"font-size:14px;color:blue;\">(Default Range: 192.168.18):</span><br /> <span style=\"font-size:14px;\">输入本地IP段范围（本地电脑连接到VPS后给分配的一个本地IP地址），直接回车意味着输入默认值192.168.18</span></p> \n<p><span style=\"font-size:14px;color:blue;\">Please input PSK:</span><br /> <span style=\"font-size:14px;color:blue;\">(Default PSK: teddysun.com):</span><br /> <span style=\"font-size:14px;\">PSK意为预共享密钥，即指定一个密钥将来在连接时需要用到，直接回车意味着输入默认值teddysun.com</span></p> \n<p><span style=\"font-size:14px;color:blue;\">Please input Username:</span><br /> <span style=\"font-size:14px;color:blue;\">(Default Username: teddysun):</span><br /> <span style=\"font-size:14px;\">Username意为用户名，即第一个默认用户。直接回车意味着输入默认值teddysun</span></p> \n<p><span style=\"font-size:14px;color:blue;\">Please input teddysun’s password:</span><br /> <span style=\"font-size:14px;color:blue;\">(Default Password: Q4SKhu2EXQ):</span><br /> <span style=\"font-size:14px;\">输入用户的密码，默认会随机生成一个10位包含大小写字母和数字的密码，当然你也可以指定密码。</span></p> \n<p> <span style=\"font-size:14px;color:blue;\">ServerIP:your_server_main_IP</span><br /> <span style=\"font-size:14px;\">显示你的 VPS 的主 IP（如果是多 IP 的 VPS 也只显示一个）</span></p> \n<p><span style=\"font-size:14px;color:blue;\">Server Local IP:192.168.18.1</span><br /> <span style=\"font-size:14px;\">显示你的 VPS 的本地 IP（默认即可）</span></p> \n<p><span style=\"font-size:14px;color:blue;\">Client Remote IP Range:192.168.18.2-192.168.18.254</span><br /> <span style=\"font-size:14px;\">显示 IP 段范围</span></p> \n<p><span style=\"font-size:14px;color:blue;\">PSK:teddysun.com</span><br /> <span style=\"font-size:14px;\">显示 PSK</span></p> \n<p><span style=\"font-size:14px;color:blue;\">Press any key to start…or Press Ctrl+c to cancel</span><br /> <span style=\"font-size:14px;\">按下任意按键继续，如果想取消安装，请按Ctrl+c键</span></p> \n<p> <span style=\"font-size:14px;\">安装完成后，脚本会执行 ipsec verify 命令并提示如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">If there are no [FAILED] above, then you can connect to your\nL2TP VPN Server with the default Username/Password is below:\n\nServerIP:your_server_IP\nPSK:your PSK\nUsername:your usename\nPassword:your password\n\nIf you want to modify user settings, please use command(s):\nl2tp -a (Add a user)\nl2tp -d (Delete a user)\nl2tp -l (List all users)\nl2tp -m (Modify a user password)\nWelcome to visit https://teddysun.com/448.html\nEnjoy it!</pre> \n<p><span style=\"font-size:14px;\">如果你要想对用户进行操作，可以使用如下命令：</span><br /> <span style=\"font-size:14px;\">l2tp -a 新增用户</span><br /> <span style=\"font-size:14px;\">l2tp -d 删除用户</span><br /> <span style=\"font-size:14px;\">l2tp -m 修改现有的用户的密码</span><br /> <span style=\"font-size:14px;\">l2tp -l 列出所有用户名和密码</span><br /> <span style=\"font-size:14px;\">l2tp -h 列出帮助信息</span></p> \n<p></p> \n<h3> 其他事项：<br /> </h3> \n<p><span style=\"font-size:14px;\">1、脚本在安装完成后，已自动启动进程，并加入了开机自启动。</span><br /> <span style=\"font-size:14px;\">2、脚本会改写 iptables 或 firewalld 的规则。</span><br /> <span style=\"font-size:14px;\">3、脚本安装时，会即时将安装日志写到 /root/l2tp.log 文件里，如果你安装失败，可以通过此文件来寻找错误信息。</span></p> \n<h3> 使用命令：<br /> </h3> \n<p><span style=\"font-size:14px;\">ipsec status （查看 IPSec 运行状态）</span><br /> <span style=\"font-size:14px;\">ipsec verify （查看 IPSec 检查结果）</span><br /> <span style=\"font-size:14px;\">/etc/init.d/ipsec start|stop|restart|status （CentOS6 下使用）</span><br /> <span style=\"font-size:14px;\">/etc/init.d/xl2tpd start|stop|restart （CentOS6 下使用）</span><br /> <span style=\"font-size:14px;\">systemctl start|stop|restart|status ipsec （CentOS7 下使用）</span><br /> <span style=\"font-size:14px;\">systemctl start|stop|restart xl2tpd （CentOS7 下使用）</span><br /> <span style=\"font-size:14px;\">service ipsec start|stop|restart|status （Debian/Ubuntu 下使用）</span><br /> <span style=\"font-size:14px;\">service xl2tpd start|stop|restart （Debian/Ubuntu 下使用）</span></p> \n<h3> <span style=\"color:red;\">更新日志</span><br /> </h3> \n<p><span style=\"font-size:14px;color:red;\">2017 年 05 月 28 日：</span><br /> <span style=\"font-size:14px;\">升级 libreswan 到版本 3.20。</span><br /> <span style=\"font-size:14px;\">修正 libreswan 的若干配置问题。</span><br /> <span style=\"font-size:14px;\">修正 xl2tpd 的端口监听配置问题。</span><br /> <span style=\"font-size:14px;\">修正在 CentOS 6 对 libevent2 的依赖问题，改为 yum 安装 libevent2-devel。</span><br /> <span style=\"font-size:14px;\">测试表明，在内网环境的 VPS 里（如AWS， IDCF，GCE，腾讯云，阿里云等）也可以正常使用了。</span></p> \n<p><span style=\"font-size:14px;color:red;\">2017 年 02 月 25 日：</span><br /> <span style=\"font-size:14px;\">升级 libreswan 到版本 3.19。</span></p> \n<p><span style=\"font-size:14px;color:red;\">2016 年 09 月 12 日：</span><br /> <span style=\"font-size:14px;\">修正了在 CentOS 6 下 libevent2 依赖的问题；</span><br /> <span style=\"font-size:14px;\">新增了一个 -m 选项，用以修改现有用户的密码。</span></p> \n<p><span style=\"font-size:14px;color:red;\">2016 年 08 月 13 日：</span><br /> <span style=\"font-size:14px;\">修正 Debian 8 下的 sd-daemon.h: No such file or directory 问题，是由于缺少依赖包 libsystemd-daemon-dev 导致的。</span></p> \n<p><span style=\"font-size:14px;color:red;\">2016 年 08 月 05 日：</span><br /> <span style=\"font-size:14px;\">升级 libreswan 到版本 3.18。</span></p> \n<p><span style=\"font-size:14px;color:red;\">2016 年 06 月 10 日：</span><br /> <span style=\"font-size:14px;\">脚本在安装完成后，新增了几个命令，便于操作用户</span><br /> <span style=\"font-size:14px;\">l2tp -a 新增用户</span><br /> <span style=\"font-size:14px;\">l2tp -d 删除用户</span><br /> <span style=\"font-size:14px;\">l2tp -l 列出所有用户</span><br /> <span style=\"font-size:14px;\">l2tp -h 列出帮助信息</span></p> \n<p><span style=\"font-size:14px;color:red;\">2016 年 04 月 25 日：</span><br /> <span style=\"font-size:14px;\">4、在 <strong><a href=\"https://teddysun.com/t/vultr\" target=\"_blank\">Vultr 的 Debian 7</a></strong>的系统模板下安装时，软件包 libcurl4-nss-dev 会出现依赖错误。如下所示：</span></p> \n<pre class=\"prettyprint\">The following packages have unmet dependencies:\nlibcurl4-nss-dev : Depends: libldap2-dev but it is not going to be installed\nDepends: librtmp-dev but it is not going to be installed</pre> \n<p><span style=\"font-size:14px;\">而 libldap2-dev 和 librtmp-dev 又依赖了其他几种软件包。总之最后的依赖关系如下： </span></p> \n<pre class=\"prettyprint\">libldap2-dev : Depends: libldap-2.4-2 (= 2.4.31-2+deb7u1) but 2.4.31+really2.4.40+dfsg-1+deb8u1~bpo70+1 is to be installed\nlibrtmp-dev : Depends: libgnutls-dev but it is not going to be installed\nlibgnutls-dev : Depends: libp11-kit-dev (&gt;= 0.4) but it is not going to be installed\nlibp11-kit-dev : Depends: libp11-kit0 (= 0.12-3) but 0.20.7-1~bpo70+1 is to be installed</pre> \n<p><span style=\"font-size:14px;\">那么解决办法就是把最底层的依赖包 libp11-kit0 先卸载掉，然后再安装 libcurl4-nss-dev 即可。</span></p> \n<pre class=\"prettyprint lang-bsh\">apt-get -y remove libp11-kit0\napt-get -y --no-install-recommends install libcurl4-nss-dev wget</pre> \n<p><span style=\"font-size:14px;\">然后再运行脚本安装即可。</span></p> \n<p><span style=\"font-size:14px;color:red;\">2016 年 04 月 22 日：</span><br /> <span style=\"font-size:14px;\">修复了在 Ubuntu 16.04 下因为默认缺少 python 命令而导致 ipsec verify 等命令不能用的问题。</span></p> \n<p><span style=\"font-size:14px;color:red;\">2016 年 04 月 19 日：</span><br /> <span style=\"font-size:14px;\">修复了在 Debian 7 下因为 libnss3 和 libnspr4 的版本过低而导致编译 libreswan 失败的问题。</span></p> \n<p><span style=\"font-size:14px;color:red;\">2016 年 04 月 18 日：</span><br /> <span style=\"font-size:14px;\">目前在 Debian 7 上测试的结果，因为 libnss3 和 libnspr4 的版本过低而导致编译 libreswan 失败。临时解决办法是 dpkg 安装 libnss3_3.17.2 和 libnspr4_4.10.7 的 deb 包后重试。</span></p> \n<p><span style=\"font-size:14px;color:blue;\"><strong>参考链接：</strong></span><br /> <span style=\"font-size:14px;\"><a target=\"_blank\" href=\"https://libreswan.org/wiki/3.14_on_Debian_Wheezy\">https://libreswan.org/wiki/3.14_on_Debian_Wheezy</a></span><br /> <span style=\"font-size:14px;\"><a target=\"_blank\" href=\"https://github.com/libreswan/libreswan\">https://github.com/libreswan/libreswan</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/448.html\">L2TP/IPSec一键安装脚本</a></p>","descriptionType":"html","publishedDate":"Mon, 18 Apr 2016 14:32:47 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/11/wall.jpg","linkMd5":"0bfaee07cd125ce265eaeab898ee35f4","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn20@2020_4/2020/08/25/00-30-53-958_c4a4d32fb88c1d42.webp","destWidth":600,"destHeight":387,"sourceBytes":52908,"destBytes":52908,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/11/wall.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn20@2020_4/2020/08/25/00-30-53-958_c4a4d32fb88c1d42.webp","https://teddysun.com/wp-content/uploads/2016/l2tp_1.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn54@2020_3/2020/08/25/00-31-00-791_529321eb4da7a141.webp"},"publishedOrCreatedDate":1598315426724},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"XAMPP安装intl和xmlrpc扩展","link":"https://teddysun.com/?p=206","description":"<p><a href=\"https://teddysun.com/206.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/xampp.jpg\" alt=\"xampp\" title=\"XAMPP安装intl和xmlrpc扩展\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">XAMPP是一个易于安装且包含Apache、MySQL、PHP的发行版。其最新版为1.8.1。这里介绍的是由一位xampp多年使用及爱好者的一次升级加工版1.8.2，包含32和64位版本。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">xampps x64 组件包含:</span></p> \n<pre class=\"prettyprint\">apache 2.4.4, php 5.5.0rc, mysql 5.6.11, phpmyadmin 4.0.1, filezillaftp 0.9.41</pre> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\"> xampps x86 组件包含:</span></p> \n<pre class=\"prettyprint\">apache 2.4.4, php 5.4.15, mysql 5.6.11, phpmyadmin 4.0.1, filezillaftp 0.9.41</pre> \n<p><span style=\"font-size:14px;\"><span style=\"font-family:Microsoft YaHei;\">xampps x86下载地址</span>：</span><a target=\"_blank\" href=\"http://pan.baidu.com/share/link?shareid=443117&amp;uk=50623901\"><span style=\"font-size:14px;font-family:Courier New;\">http://pan.baidu.com/share/link?shareid=443117&amp;uk=50623901</span></a><br /> <span style=\"font-size:14px;\"><span style=\"font-family:Microsoft YaHei;\">xampps x64下载地址</span>：</span><a target=\"_blank\" href=\"http://pan.baidu.com/share/link?shareid=443118&amp;uk=50623901\"><span style=\"font-size:14px;font-family:Courier New;\">http://pan.baidu.com/share/link?shareid=443118&amp;uk=50623901</span></a></p> \n<p> <span id=\"more-206\"></span> </p> \n<p> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">XAMPP默认是没有安装intl和xmlrpc扩展的，如何开启呢？</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\"><strong>1、开启intl扩展</strong></span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">编辑[xampp_folder_path]/php/php.ini文件，搜索;extension=php_intl.dll，将之前的“;”去掉。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">在[intl] 小节处，定义default_local和error_level的值如下：</span></p> \n<pre class=\"prettyprint\">[intl]\nintl.default_locale = en_utf8\nintl.error_level = E_WARNING</pre> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">保存并退出。在XAMPP控制面板重启apache即可。</span></p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">开启intl扩展后，如果遇到<span style=\"color:red;\">icuuc49.dll缺失错误</span>，请参照以下方法解决：</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">打开[xampp_path]/php/，找到并选中以下3个文件：</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">icudt49.dll</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">icuin49.dll</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">icuuc49.dll</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">复制并粘贴到[xampp_path]/apache/bin文件夹下即可。</span></p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\"><strong>2、开启xmlrpc扩展</strong></span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">这个就比较简单了。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">编辑[xampp_folder_path]/php/php.ini文件，搜索;extension=php_xmlrpc.dll，将之前的“;”去掉。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">保存并退出。在XAMPP控制面板重启apache即可。</span> </p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;color:red;\"><b>更新至版本1.8.4（2013年7月30日）：</b></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://www.fenanr.com/read/112162.html\" target=\"_blank\">http://www.fenanr.com/read/112162.html</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/206.html\">XAMPP安装intl和xmlrpc扩展</a></p>","descriptionType":"html","publishedDate":"Tue, 21 May 2013 13:21:14 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/xampp.jpg","linkMd5":"916d90ec7fabfa9c610ad09991e8b422","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn100@2020_6/2020/08/25/00-30-54-343_19793b53e15ccbd3.webp","destWidth":356,"destHeight":313,"sourceBytes":18221,"destBytes":10846,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/xampp.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn100@2020_6/2020/08/25/00-30-54-343_19793b53e15ccbd3.webp"},"publishedOrCreatedDate":1598315426745},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Apache如何开启Gzip压缩","link":"https://teddysun.com/?p=326","description":"<p><a href=\"https://teddysun.com/326.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/apache.jpg\" alt=\"Apache\" title=\"Apache如何开启Gzip压缩\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">因为开启 Gzip 压缩会消耗额外的 CPU 资源，所以我在<a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP一键安装脚本</a>中默认并没有开启 Gzip 压缩。今天被人问及如何添加 Gzip 压缩，步骤很简单，只需修改 Apache 的配置文件并重启一下 Apache 即可。</span></p> \n<p><span style=\"font-size:14px;\">在开启 Gzip 之前，需先确认 Apache 的配置文件中有没有加载 mod_deflate 和 mod_headers 模块。</span><br /> <span style=\"font-size:14px;\"><a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP一键安装脚本</a>的 Apache 配置文件路径是：/usr/local/apache/conf/httpd.conf</span></p> \n<p> <span id=\"more-326\"></span> </p> \n<p><span style=\"font-size:14px;\">打开此文件查找如下两行代码：</span></p> \n<pre class=\"prettyprint lang-bsh\">LoadModule deflate_module modules/mod_deflate.so\nLoadModule headers_module modules/mod_headers.so</pre> \n<p><span style=\"font-size:14px;\">前面没有#符号即为正常的，若是有#符号则表示被注释掉了，删除前面的#符号即可。</span></p> \n<p> <span style=\"font-size:14px;\">在 Apache 配置文件 /usr/local/apache/conf/httpd.conf 的最后添加：</span></p> \n<pre class=\"prettyprint lang-bsh\">&lt;IfModule deflate_module&gt;\nSetOutputFilter DEFLATE\nSetEnvIfNoCase Request_URI .(?:gif|jpe?g|png)$ no-gzip dont-vary\nSetEnvIfNoCase Request_URI .(?:exe|t?gz|zip|bz2|sit|rar)$ no-gzip dont-vary\nSetEnvIfNoCase Request_URI .(?:pdf|doc|avi|mov|mp3|rm)$ no-gzip dont-vary\nAddOutputFilterByType DEFLATE text/html text/plain text/xml text/css\nAddOutputFilterByType DEFLATE application/x-javascript\n&lt;/IfModule&gt;</pre> \n<p> <span style=\"font-size:14px;color:red;\"><strong>注解：</strong></span><br /> <span style=\"font-size:14px;\">IfModule deflate_module 是判断如果 deflate_module 模块加载的话，执行里面的配置。</span><br /> <span style=\"font-size:14px;\">SetOutputFilter DEFLATE 是设置输出为 deflate 压缩算法。</span><br /> <span style=\"font-size:14px;\">SetEnvIfNoCase Request_URI 是排除一些常见的图片，影音，文档等类型的后缀，不压缩。</span><br /> <span style=\"font-size:14px;\">AddOutputFilterByType DEFLATE 是对常见的文本类型,如html,txt,xml,css,js做压缩处理。</span></p> \n<p><span style=\"font-size:14px;\">保存以上修改好的配置文件，重启 Apache 即可。</span></p> \n<pre class=\"prettyprint lang-bsh\">service httpd restart</pre> \n<p><span style=\"font-size:14px;\">或者</span></p> \n<pre class=\"prettyprint lang-bsh\">/etc/init.d/httpd restart</pre> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/326.html\">Apache如何开启Gzip压缩</a></p>","descriptionType":"html","publishedDate":"Thu, 19 Dec 2013 06:33:33 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/04/apache.jpg","linkMd5":"ae59440654449fddb8052e6e3b13fcbb","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn39@2020_1/2020/08/25/00-30-53-276_972f55ebabde1afa.webp","destWidth":370,"destHeight":313,"sourceBytes":39337,"destBytes":11132,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/04/apache.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn39@2020_1/2020/08/25/00-30-53-276_972f55ebabde1afa.webp"},"publishedOrCreatedDate":1598315426735},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"域名那些事儿2","link":"https://teddysun.com/?p=446","description":"<p><a href=\"https://teddysun.com/446.html\"><img src=\"https://teddysun.com/wp-content/uploads/2016/domains.gif\" title=\"域名那些事儿2\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">十年前我喜欢各种各样的邮箱后缀，然后去注册很多并不使用的邮箱地址；十年后我喜欢自由的定制邮箱后缀，然后去注册很多并不真正使用的域名。直到……各种奇葩的域名后缀都出来后。关于域名，其实还可以说的更多，于是故事还是从ICANN的New gTLD（新顶级域名）计划实施后开始讲起吧。</span></p> \n<p> <span id=\"more-446\"></span> </p> \n<p><span style=\"font-size:15px;color:blue;\"><strong>新顶级域名</strong></span></p> \n<p> <span style=\"font-size:14px;\">2014年中，新域名后缀如雨后春笋般冒了出来，但当时的很多浏览器并不支持新域名后缀，默认的情况下会以搜索结果代替地址栏回车后的呈现。同时，很多第三方域名解析服务商比如 Dnspod 当时也并不是全部支持那些后缀的，只有他们收录的域名后缀才允许添加解析。这就出现了这样的一种状况，很多域名注册商为了大力推广新域名后缀，而实施首年注册价格打折到腿软的价格体系，比如0.99美元/年，或者有的干脆就首年免费。虽然吸引了不少人的眼光并由此而产生了大量的垃圾域名，但更多的是一些企业出于品牌保护而注册的。然而并没有什么卵用，几乎没有人拿来做正经网站，所以即便是注册了，也是沿用了注册商自带的域名解析服务。</span></p> \n<p><span style=\"font-size:14px;\">我便是在这个时候入了坑，注册了几个当时自认为有着不错前缀的新后缀域名。经历了一段时间的等待，第三方域名解析服务商才开始支持这些新的域名后缀解析。当然，我注册域名后第一件要干的事，就是去开个邮箱服务。</span></p> \n<p><span style=\"font-size:14px;\">在持有了2年之后，我打算放弃继续持有所有的新后缀的域名。事实证明，新后缀越多，则越发显得com的珍贵。</span></p> \n<p><span style=\"font-size:14px;\">在我看来，新域名后缀字符超过3个的，除有特殊含义之外的，个人持有和使用都是不明智的。举个例子，xyz 后缀因为 Google 使用了abc.xyz作为其官方首页域名后而名声大噪，注册量应该是所有新后缀里最大的。在今年（2016）年初开始作死，首年注册价格低到令人发指。个人估计是注册局，也就是幕后公司为了冲量，于是更多的垃圾域名产生了。就像当年的.info及.cn的推广，各种垃圾站横生，甚至导致根域名遭到搜索引擎降权。</span></p> \n<p><span style=\"font-size:14px;\">目前为止，还有很多后缀还是不对外开放注册的，只是很多大公司自己注册来玩的，比如 Google 的 .google 和微软的 .microsoft 等一系列后缀。如果你有兴趣，可以试试访问 com.google 这个域名，以前是把 Google 首页文字全部颠倒的，如今则是跳转到首页。</span></p> \n<p><span style=\"font-size:14px;\">随着时间的推移，各种新域名后缀还在不断增加。个人认为，经过岁月的沉淀和变迁之后，真正留下来的就是经过用户检验的，以及，不差钱的后缀。</span></p> \n<p><span style=\"font-size:14px;\">在这场新域名的大潮中，真正的受益者应该是ICANN，赚的盆满钵满。各大公司和域名注册商在这场「域名大跃进」中所扮演的，就是个参与者。</span></p> \n<p><span style=\"font-size:14px;\">至于个人嘛，有新后缀就可以继续囤米了，大家玩得开心就好。</span></p> \n<p> <span style=\"font-size:15px;color:blue;\"><strong>注册国别域名</strong></span></p> \n<p> <span style=\"font-size:14px;\">我们知道通用域名后缀就那么几个，com，net，org是最流行的，所以注册的人也最多，很多稀有的前缀都已被注册，如果你也想注册同样的前缀，那是不可能的。据我所知，com的4字母在多年前就已被注册殆尽。于是很多人就会想个折中的办法，加个字母或者尾巴什么的。当然，不差钱的可以去收购。</span></p> \n<p><span style=\"font-size:14px;\">经过几十年的注册，几乎你能想到的所有单词，拼音，甚至双拼三拼四拼都已被注册了。没办法，谁叫域名最多可以有63个字符呢。这时候如果你特别想要某个前缀，又没钱去收购，怎么办呢？</span></p> \n<p><span style=\"font-size:14px;\">没错，还有国别域名可以选择。你看到的所有的2字母域名后缀，都是国别域名。比如众所周知的me（黑山），co（哥伦比亚），cc（科科斯群岛），cn（中国），jp（日本），hk（香港），de（德国），fr（法国），uk（英国），ru（俄罗斯），us（美国），tw（台湾），la（老挝），tv（图瓦卢）等等。这也是为什么ICANN后来搞域名大跃进，不批准2字母后缀的原因。因为确切的说，2字母要留给ccTLDs（国别域名）。</span></p> \n<p><span style=\"font-size:14px;\">所以，尽管有些前缀看起来很珍贵，但在某些国别域名里，依然是可注册的。当然，因为是国别域名，所以各国允许注册的政策并不一样。有的要求是在本国居住的人才能注册，有的是开放注册不设限，有的价格奇贵无比，有的甚至连个像样的官网都没有。</span></p> \n<p><span style=\"font-size:14px;\">这个世界大约有224个国家和地区，排除一些注册条件比较苛刻的（有不少，不举例了），价格贵到离谱的（小国家）和不能注册的（比如.kp朝鲜），最后大体上还能有200个可选的域名后缀。</span></p> \n<p><span style=\"font-size:14px;\">我们尽量选择一些开放注册不设限的国别域名来注册即可，甚至有些国别域名你还可以注册个3字符以内的前缀。</span></p> \n<p><span style=\"font-size:14px;\">有的国别域名则是不开放根域名注册，比如.au（澳大利亚），只能注册诸如com.au，net.au之类的域名。有的国别域名，则有一堆二级域名后缀，类似于com.cn，net.cn，org.cn，gov.cn，edu.cn等等。</span></p> \n<p><span style=\"font-size:14px;\">目前为止，我所见到的，能注册国别域名最多的网站应该是1api旗下的<a href=\"https://www.hexonet.net/\" target=\"_blank\">Hexonet</a>，其次是<a href=\"https://www.gandi.net/\" target=\"_blank\">Gandi</a>，再次是<a href=\"http://www.ipmirror.com/\" target=\"_blank\">IP Mirror</a>。</span></p> \n<p> <span style=\"font-size:15px;color:blue;\"><strong>对域名的展望</strong></span></p> \n<p> <span style=\"font-size:14px;\">当初为什么会诞生域名这种东西？本质上来说还是为了促进信息的流动而创造的。域名所对应的是各种服务，比如http，ftp，ssh，email等。域名需要解析到相应的 IP 上才能形成服务，因为 IP 难记，所以才有了域名。</span></p> \n<p><span style=\"font-size:14px;\">不管是 Ipv4 还是 Ipv6，都很难记。所以域名在未来很长一段时间内是不会消亡的。但是因为搜索引擎的存在，域名愈发显得不那么重要了。有多少人现在是直接在地址栏输入域名后访问网站的呢？</span></p> \n<p><span style=\"font-size:14px;\">同时，各种浏览器也在不断进化，今后只需输入关键词，就可以直达你想去的网站也不是不可能。人们获取信息的途径在增多，方法变得更容易，成本降得更低……</span></p> \n<p><span style=\"font-size:14px;\">也许在不远的将来，智能机器人会代替现在所有的终端设备，与人们语音交互，手势交互，甚至能眼神交互，一切都虚拟化了。到那时，也许已经没人知道什么是域名了。</span></p> \n<p><span style=\"font-size:14px;\">我希望可以在我有生之年，看到这样的科技进步。</span></p> \n<p> <span style=\"font-size:14px;\"><strong>阅读更多：</strong><a href=\"https://teddysun.com/429.html\" target=\"_blank\">域名那些事儿</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/446.html\">域名那些事儿2</a></p>","descriptionType":"html","publishedDate":"Thu, 11 Feb 2016 14:39:06 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2016/domains.gif","linkMd5":"f5184736e6777aab938e241cfd5ee784","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn84@2020_1/2020/08/25/00-30-52-383_92f6f13475bdca84.webp","destWidth":613,"destHeight":407,"sourceBytes":29414,"destBytes":12176,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2016/domains.gif":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn84@2020_1/2020/08/25/00-30-52-383_92f6f13475bdca84.webp"},"publishedOrCreatedDate":1598315426723},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Linux Shell逻辑运算符和表达式详解","link":"https://teddysun.com/?p=325","description":"<p><a href=\"https://teddysun.com/325.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg\" alt=\"Linux\" title=\"Linux Shell逻辑运算符和表达式详解\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">Shell 基本上是一个命令解释器，类似于 DOS 下的 command。它接收用户命令（如 ls 等），然后调用相应的应用程序。较为通用的 Shell 有标准的Bourne shell (sh）和C shell (csh）。</span><br /> <span style=\"font-size:14px;\">很多时候在写 Shell 脚本的时候都容易遗忘部分逻辑运算符和表达式的写法，因此摘录如下，留待不时之需查询使用。</span><br /> <span style=\"font-size:14px;\">Shell 逻辑运算符涉及以下几种类型，只要适当选择，可以解决我们很多复杂的判断，达到事半功倍效果。</span></p> \n<p> <span id=\"more-325\"></span> </p> \n<p> <span style=\"font-size:14px;\"><strong>一、逻辑判断</strong></span><br /> <span style=\"font-size:14px;color:#003399;\">1、关于文件与目录的逻辑判断</span><br /> <span style=\"font-size:14px;\">-f 常用。判断『文件』是否为普通文件，比如: if [ -f filename ]</span><br /> <span style=\"font-size:14px;\">-d 常用。判断『目录』是否存在</span><br /> <span style=\"font-size:14px;\">-b 判断是否为一个『 block 文件』</span><br /> <span style=\"font-size:14px;\">-c 判断是否为一个『 character 文件』</span><br /> <span style=\"font-size:14px;\">-S 判断是否为一个『 socket 标签文件』</span><br /> <span style=\"font-size:14px;\">-L 判断是否为一个『 symbolic link 的文件』</span><br /> <span style=\"font-size:14px;\">-e 判断『文件』是否存在</span></p> \n<p><span style=\"font-size:14px;color:#003399;\">2、关于程序的逻辑判断</span><br /> <span style=\"font-size:14px;\">-G 判断是否由 GID 所执行的程序所拥有</span><br /> <span style=\"font-size:14px;\">-O 判断是否由 UID 所执行的程序所拥有</span><br /> <span style=\"font-size:14px;\">-p 判断是否为程序间传送信息的 name pipe 或是 FIFO</span></p> \n<p><span style=\"font-size:14px;color:#003399;\">3、关于文件的属性判断</span><br /> <span style=\"font-size:14px;\">-r 判断是否为可读的属性</span><br /> <span style=\"font-size:14px;\">-w 判断是否为可以写入的属性</span><br /> <span style=\"font-size:14px;\">-x 判断是否为可执行的属性</span><br /> <span style=\"font-size:14px;\">-s 判断是否为『非空白文件』</span><br /> <span style=\"font-size:14px;\">-u 判断是否具有『 SUID 』的属性</span><br /> <span style=\"font-size:14px;\">-g 判断是否具有『 SGID 』的属性</span><br /> <span style=\"font-size:14px;\">-k 判断是否具有『 sticky bit 』的属性</span></p> \n<p><span style=\"font-size:14px;color:#003399;\">4、两个文件之间的判断与比较</span><br /> <span style=\"font-size:14px;\">-nt 第一个文件比第二个文件新</span><br /> <span style=\"font-size:14px;\">-ot 第一个文件比第二个文件旧</span><br /> <span style=\"font-size:14px;\">-ef 第一个文件与第二个文件为同一个文件（ link 之类的文件）</span></p> \n<p><span style=\"font-size:14px;color:#003399;\">5. 布尔运算符</span><br /> <span style=\"font-size:14px;\">&amp;&amp; 逻辑与</span><br /> <span style=\"font-size:14px;\">|| 逻辑或</span><br /> <span style=\"font-size:14px;\">! 逻辑非</span></p> \n<p><span style=\"font-size:14px;\"><strong>二、运算符号</strong></span><br /> <span style=\"font-size:14px;\">= 等于 &nbsp; 应用于：整型或字符串比较 如果在[] 中，只能是字符串</span><br /> <span style=\"font-size:14px;\">!= 不等于 应用于：整型或字符串比较 如果在[] 中，只能是字符串</span><br /> <span style=\"font-size:14px;\">&lt; 小于 &nbsp; 应用于：整型比较 在[] 中，不能使用表示字符串</span><br /> <span style=\"font-size:14px;\">&gt; 大于 &nbsp; 应用于：整型比较 在[] 中，不能使用表示字符串</span><br /> <span style=\"font-size:14px;\">-eq 等于 &nbsp; 应用于：整型比较</span><br /> <span style=\"font-size:14px;\">-ne 不等于 应用于：整型比较</span><br /> <span style=\"font-size:14px;\">-lt 小于 &nbsp; 应用于：整型比较</span><br /> <span style=\"font-size:14px;\">-gt 大于 &nbsp; 应用于：整型比较</span><br /> <span style=\"font-size:14px;\">-le 小于或等于 应用于：整型比较</span><br /> <span style=\"font-size:14px;\">-ge 大于或等于 应用于：整型比较</span><br /> <span style=\"font-size:14px;\">-a 双方都成立（and） 相当于 &amp;&amp;&nbsp;</span><br /> <span style=\"font-size:14px;\">-o 单方成立（or） 相当于 ||&nbsp;</span><br /> <span style=\"font-size:14px;\">-z 空字符串</span><br /> <span style=\"font-size:14px;\">-n 非空字符串</span></p> \n<p><span style=\"font-size:14px;\"><strong>三、逻辑表达式</strong></span><br /> <span style=\"font-size:14px;\"><strong><span style=\"color:red;\">注意：</span></strong>所有字符与逻辑运算符直接用“空格”分开，不能连到一起。</span><br /> <span style=\"font-size:14px;color:#003399;\">1、test 命令</span><br /> <span style=\"font-size:14px;\">使用方法：test EXPRESSION</span></p> \n<p><span style=\"font-size:14px;\">如：</span></p> \n<pre class=\"prettyprint lang-bsh\">[root@localhost ~]# test 1 = 1 &amp;&amp; echo 'ok'\nok\n[root@localhost ~]# test -d /etc/ &amp;&amp; echo 'ok' \nok\n[root@localhost ~]# test 1 -eq 1 &amp;&amp; echo 'ok'\nok\n[root@localhost ~]# if test 1 = 1 ; then echo 'ok'; fi\nok</pre> \n<p> <span style=\"font-size:14px;color:#003399;\">2、精简表达式</span><br /> <span style=\"font-size:14px;\">[] 表达式</span></p> \n<pre class=\"prettyprint lang-bsh\">[root@localhost ~]# [ 1 -eq 1 ] &amp;&amp; echo 'ok'\nok\n[root@localhost ~]# [ 2 &lt; 1 ] &amp;&amp; echo 'ok'\n-bash: 1: No such file or directory\n[root@localhost ~]# [ 2 \\&lt; 1 ] &amp;&amp; echo 'ok'\n\n[root@localhost ~]# [ 2 -gt 1 -a 3 -lt 4 ] &amp;&amp; echo 'ok'\nok\n[root@localhost ~]# [ 2 -gt 1 &amp;&amp; 3 -lt 4 ] &amp;&amp; echo 'ok'\n-bash: [: missing `]'</pre> \n<p><span style=\"font-size:14px;\"><span style=\"color:red;\"><strong>注意：</strong></span>在[] 表达式中，常见的&gt;,&lt;需要加转义字符，表示字符串大小比较，以acill码位置作为比较。不直接支持&lt;&gt;运算符，还有逻辑运算符 || 和 &amp;&amp; 它需要用-a[and] –o[or]表示。</span></p> \n<p> <span style=\"font-size:14px;\">[[]] 表达式</span></p> \n<pre class=\"prettyprint lang-bsh\">[root@localhost ~]# [ 1 -eq 1 ] &amp;&amp; echo 'ok'\nok\n[root@localhost ~]# [[ 2 &lt; 3 ]] &amp;&amp; echo 'ok'\nok\n[root@localhost ~]# [[ 2 &lt; 3 &amp;&amp; 4 &lt; 5 ]] &amp;&amp; echo 'ok'\nok</pre> \n<p><span style=\"font-size:14px;\"><strong><span style=\"color:red;\">注意：</span></strong>[[]] 运算符只是[]运算符的扩充。能够支持&lt;,&gt;符号运算不需要转义符，它还是以字符串比较大小。里面支持逻辑运算符 || 和 &amp;&amp;&nbsp;</span></p> \n<p><span style=\"font-size:14px;\">bash 的条件表达式中有三个几乎等效的符号和命令：test，[]和[[]]。通常，大家习惯用if [];then这样的形式。而[[]]的出现，根据ABS所说，是为了兼容&gt;&lt;之类的运算符。</span><br /> <span style=\"font-size:14px;\">不考虑对低版本bash和对sh的兼容的情况下，用[[]]是兼容性强，而且性能比较快，在做条件运算时候，可以使用该运算符。</span></p> \n<p><span style=\"font-size:14px;color:#337FE5;\"><strong>参考链接：</strong></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://www.cnblogs.com/chengmo/archive/2010/10/01/1839942.html\" target=\"_blank\">http://www.cnblogs.com/chengmo/archive/2010/10/01/1839942.html</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/325.html\">Linux Shell逻辑运算符和表达式详解</a></p>","descriptionType":"html","publishedDate":"Fri, 13 Dec 2013 04:06:24 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg","linkMd5":"738a51ff08ddeee263bae23c3bc7c40a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn34@2020_3/2020/08/25/00-30-52-039_da8898b7cb91c054.webp","destWidth":741,"destHeight":316,"sourceBytes":21400,"destBytes":15404,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn34@2020_3/2020/08/25/00-30-52-039_da8898b7cb91c054.webp"},"publishedOrCreatedDate":1598315426737},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Linux远程登录命令screen","link":"https://teddysun.com/?p=204","description":"<p><a href=\"https://teddysun.com/204.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/centos6.jpg\" alt=\"screen\" title=\"Linux远程登录命令screen\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在Windows中可以通过Putty来管理和访问Linux系统的SSH环境，运行命令返回结果。但由于一些不稳定因素，比如网络突然中断或不小心误关闭Putty窗口，就</span><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">会导致远程命令也会被停止。如何避免这种情况，就要用到screen这个工具了。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><b> 1、screen是什么</b></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> screen是一个可以在多个进程之间多路复用一个物理终端的全屏窗口管理器。用户可以在一个screen会话中创建多个screen子会话，在每一个screen会话（或子会话）中就像操作一个真实的telnet/SSH连接窗口。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><b> 2、screen如何安装</b></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 一般最小化安装的Linux系统中默认是没有安装screen的。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> Fedora / Centos系统:</span></p> \n<pre class=\"prettyprint lang-bsh\">yum -y install screen</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">Debian / Ubuntu系统：</span></p> \n<pre class=\"prettyprint lang-bsh\">apt-get -y install screen</pre> \n<p> <span id=\"more-204\"></span> </p> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><b>3、screen如何使用</b></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 运行screen -help命令可以看到screen的具体用法如下。</span></p> \n<pre class=\"prettyprint\">Use: screen [-opts] [cmd [args]]\n or: screen -r [host.tty]\n\nOptions:\n-4            Use IPv4.\n-6            Use IPv6.\n-a            Force all capabilities into each window's termcap.\n-A -[r|R]     Adapt all windows to the new display width &amp; height.\n-c file       Read configuration file instead of '.screenrc'.\n-d (-r)       Detach the elsewhere running screen (and reattach here).\n-dmS name     Start as daemon: Screen session in detached mode.\n-D (-r)       Detach and logout remote (and reattach here).\n-D -RR        Do whatever is needed to get a screen session.\n-e xy         Change command characters.\n-f            Flow control on, -fn = off, -fa = auto.\n-h lines      Set the size of the scrollback history buffer.\n-i            Interrupt output sooner when flow control is on.\n-l            Login mode on (update /var/run/utmp), -ln = off.\n-list         or -ls. Do nothing, just list our SockDir.\n-L            Turn on output logging.\n-m            ignore $STY variable, do create a new screen session.\n-O            Choose optimal output rather than exact vt100 emulation.\n-p window     Preselect the named window if it exists.\n-q            Quiet startup. Exits with non-zero return code if unsuccessful.\n-r            Reattach to a detached screen process.\n-R            Reattach if possible, otherwise start a new session.\n-s shell      Shell to execute rather than $SHELL.\n-S sockname   Name this session &lt;pid&gt;.sockname instead of &lt;pid&gt;.&lt;tty&gt;.&lt;host&gt;.\n-t title      Set title. (window's name).\n-T term       Use term as $TERM for windows, rather than \"screen\".\n-U            Tell screen to use UTF-8 encoding.\n-v            Print \"Screen version 4.00.03 (FAU) 23-Oct-06\".\n-wipe         Do nothing, just clean up SockDir.\n-x            Attach to a not detached screen. (Multi display mode).\n-X            Execute &lt;cmd&gt; as a screen command in the specified session.</pre> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">这里举例创建会话的用法。</span></p> \n<pre class=\"prettyprint lang-bsh\">screen -S lamp</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">以上命令是创建一个名为lamp的会话。在此会话中安装lamp一键安装包，是不会受网络中断影响的。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 如果此时网络中断或关闭了Putty窗口，只需运行：</span></p> \n<pre class=\"prettyprint lang-bsh\">screen -r lamp</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">即可恢复原来的会话。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 更多详细帮助，请执行man命令后参照。</span></p> \n<pre class=\"prettyprint lang-bsh\">man screen</pre> \n<div> \n</div> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/204.html\">Linux远程登录命令screen</a></p>","descriptionType":"html","publishedDate":"Mon, 20 May 2013 02:07:20 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/centos6.jpg","linkMd5":"2d386103dcb9dddcf7621f93590dbe6e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn87@2020_6/2020/08/25/00-30-51-881_66c69e6e04c2d44a.webp","destWidth":520,"destHeight":390,"sourceBytes":32688,"destBytes":15212,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/centos6.jpg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn87@2020_6/2020/08/25/00-30-51-881_66c69e6e04c2d44a.webp"},"publishedOrCreatedDate":1598315426744},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"如何使用 FirewallD 开启 IP 白名单","link":"https://teddysun.com/?p=566","description":"<p><a href=\"https://teddysun.com/566.html\"><img class=\"aligncenter\" style=\"width: auto; height: auto;\" title=\"如何使用FirewallD开启IP白名单\" src=\"https://teddysun.com/wp-content/uploads/2019/firewall.jpg\" /></a><br /> <span style=\"font-size: 14px;\">Firewalld 是可用于许多 Linux 发行版的防火墙管理解决方案，它充当 Linux 内核提供的 iptables 数据包过滤系统的前端。</span><br /> <span style=\"font-size: 14px;\">在本教程中，介绍如何为服务器设置防火墙，并使用 firewall-cmd 管理工具来管理防火墙添加 IP 白名单。</span><br /> <span id=\"more-566\"></span></p> \n<h2><span style=\"color: red;\">Firewalld 中的基本概念</span></h2> \n<h3><span style=\"color: red;\">区域(zone)</span></h3> \n<p><span style=\"font-size: 14px;\">区域(zone)基本上是一组规则，它们决定了允许哪些流量，具体取决于你对计算机所连接的网络的信任程度。为网络接口分配了一个区域，以指示防火墙应允许的行为。</span><br /> <span style=\"font-size: 14px;\">Firewalld 一般已经默认内置了 9 个区域(zone)，大部分情况下，这些已经足够使用，按从最不信任到最受信任的顺序为：</span></p> \n<p><span style=\"font-size: 14px;\">drop：最低信任级别。所有传入的连接都将被丢弃而不会回复，并且只能进行传出连接。</span><br /> <span style=\"font-size: 14px;\">block：与上述类似，但不是简单地删除连接，而是使用 icmp-host-prohibitedor 和 icmp6-adm-prohibited 消息拒绝传入的请求。</span><br /> <span style=\"font-size: 14px;\">public：表示不信任的公共网络。您不信任其他计算机，但可能会视情况允许选择的传入连接。默认情况下，此区域为激活状态。</span><br /> <span style=\"font-size: 14px;\">external：如果你使用防火墙作为网关，则为外部网络。将其配置为 NAT 转发，以便你的内部网络保持私有但可访问。</span><br /> <span style=\"font-size: 14px;\">internal：external 区域的另一侧，用于网关的内部。这些计算机值得信赖，并且可以使用一些其他服务。</span><br /> <span style=\"font-size: 14px;\">dmz：用于 DMZ (DeMilitarized Zone) 中的计算机（将无法访问网络其余部分的隔离计算机），仅允许某些传入连接。</span><br /> <span style=\"font-size: 14px;\">work：用于工作机。信任网络中的大多数计算机。可能还允许其他一些服务。</span><br /> <span style=\"font-size: 14px;\">home：家庭环境。通常，这意味着您信任其他大多数计算机，并且将接受其他一些服务。</span><br /> <span style=\"font-size: 14px;\">trusted：信任网络中的所有计算机。可用选项中最开放的，应谨慎使用。</span></p> \n<h2><span style=\"color: red;\">安装并启用防火墙</span></h2> \n<p><span style=\"font-size: 14px;\">Firewalld 是在某些 Linux 发行版上默认安装的，但有时候需要手动安装。CentOS 下的安装命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sudo yum install firewalld</pre> \n<p><span style=\"font-size: 14px;\">启用 Firewalld 服务并允许自启动</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sudo systemctl start firewalld\n$ sudo systemctl enable firewalld</pre> \n<p><span style=\"font-size: 14px;\">确认 Firewalld 服务是否正在运行</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sudo firewall-cmd --state</pre> \n<p><span style=\"font-size: 14px;\">返回 running 则表示已经运行；not running 则表示没有运行。</span></p> \n<h3><span style=\"color: red;\">熟悉当前的防火墙规则</span></h3> \n<p><span style=\"font-size: 14px;\">输入以下命令，可以看到当前选择哪个区域作为默认区域：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sudo firewall-cmd --get-default-zone</pre> \n<p><span style=\"font-size: 14px;\">一般情况下会返回 public</span><br /> <span style=\"font-size: 14px;\">输入以下内容进行确认哪个区域处于激活状态：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sudo firewall-cmd --get-active-zones</pre> \n<p><span style=\"font-size: 14px;\">一般情况下，在只有一个网卡的情况下会返回：</span></p> \n<pre class=\"prettyprint lang-bsh\">public\n  interfaces: eth0</pre> \n<p><span style=\"font-size: 14px;\">获取可用区域的列表，输入以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sudo firewall-cmd --get-zones</pre> \n<p><span style=\"font-size: 14px;\">返回：</span></p> \n<pre class=\"prettyprint lang-bsh\">block dmz drop external home internal public trusted work</pre> \n<p><span style=\"font-size: 14px;\">通过指定 –zone 的 –list-all 参数，我们可以看到与区域关联的特定配置：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sudo firewall-cmd --zone=home --list-all</pre> \n<p><span style=\"font-size: 14px;\">返回值：</span></p> \n<pre class=\"prettyprint lang-bsh\">home\n  target: default\n  icmp-block-inversion: no\n  interfaces: \n  sources: \n  services: dhcpv6-client mdns samba-client ssh\n  ports: \n  protocols: \n  masquerade: no\n  forward-ports: \n  source-ports: \n  icmp-blocks: \n  rich rules:</pre> \n<p><span style=\"font-size: 14px;\">获取可用区域列表的详细信息，输入以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sudo firewall-cmd --list-all-zones</pre> \n<h2><span style=\"color: red;\">使用 Firewalld 配置 IP 白名单</span></h2> \n<p><span style=\"font-size: 14px;\">如前所述，Firewalld 有内置的区域，可以利用这些区域不同的特性，来简单快捷地配置 IP 白名单。</span><br /> <span style=\"font-size: 14px;\">具体做法就是，首先要收集你要允许的 IP 白名单列表，比如 Cloudflare 的<a href=\"https://www.cloudflare.com/ips/\" target=\"_blank\" rel=\"noopener noreferrer\">所有 IP 范围</a>：</span></p> \n<pre class=\"prettyprint lang-bsh\">173.245.48.0/20\n103.21.244.0/22\n103.22.200.0/22\n103.31.4.0/22\n141.101.64.0/18\n108.162.192.0/18\n190.93.240.0/20\n188.114.96.0/20\n197.234.240.0/22\n198.41.128.0/17\n162.158.0.0/15\n104.16.0.0/12\n172.64.0.0/13\n131.0.72.0/22</pre> \n<p><span style=\"font-size: 14px;\">与此同时，你也要加入你自己的 IP 地址，否则白名单一旦生效，可能会将你阻挡在外而无法连接。</span></p> \n<p><span style=\"font-size: 14px;\">将这些 IP 列表逐一加入 trusted 区域，使用命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sudo firewall-cmd --permanent --zone=trusted --add-source=173.245.48.0/20\n……\n$ sudo firewall-cmd --permanent --zone=trusted --add-source=131.0.72.0/22</pre> \n<p><span style=\"font-size: 14px;\">使 trusted 区域设置生效，使用命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sudo firewall-cmd --reload</pre> \n<p><span style=\"font-size: 14px;\">确认 trusted 区域是否设置正确，使用命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sudo firewall-cmd --zone=trusted --list-all</pre> \n<p><span style=\"font-size: 14px;\">返回：</span></p> \n<pre class=\"prettyprint lang-bsh\">trusted (active)\n  target: ACCEPT\n  icmp-block-inversion: no\n  interfaces: \n  sources: 173.245.48.0/20 …… 131.0.72.0/22\n  services: \n  ports: \n  protocols: \n  masquerade: no\n  forward-ports: \n  source-ports: \n  icmp-blocks: \n  rich rules:</pre> \n<p><span style=\"font-size: 14px;\">因为此时已经设置了 trusted 区域，所以还需要切换默认区域从 public 到 drop，以达到无视所有接入连接的目的。使用命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sudo firewall-cmd --set-default-zone=drop</pre> \n<p><span style=\"font-size: 14px;\">再将默认网卡 eth0 分配给 drop 区域，使用命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sudo firewall-cmd --permanent --zone=drop --change-interface=eth0</pre> \n<p><span style=\"font-size: 14px;\">使白名单最终生效，使用命令如下（<strong>注意：</strong>请再次确认你的所有 IP 都加入了 trusted 区域）：</span></p> \n<pre class=\"prettyprint lang-bsh\">$ sudo firewall-cmd --reload</pre> \n<p><span style=\"font-size: 14px;\">至此，白名单设置正式生效。</span></p> \n<h3><span style=\"color: red;\">后记</span></h3> \n<p><span style=\"font-size: 14px;\">之所以要设置 IP 白名单，是因为最近遇到了 SYN_RECV 攻击，大量的 IP 连接到服务器的 80 和 443 端口，瞬间让整个机器动弹不得。</span><br /> <span style=\"font-size: 14px;\">因为网站使用了 Cloudflare 的 CDN 服务，所以设置了只允许 Cloudflare 的所有 IP 以及自己的常用固定 IP 可以访问。</span><br /> <span style=\"font-size: 14px;\">除此之外的 IP 则一律不许连接，这样在保证网站正常的情况下，也可以防止 DDoS 攻击。</span></p> \n<h3><span style=\"color: blue;\">参考链接</span></h3> \n<p><span style=\"font-size: 14px;\"><a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-using-firewalld-on-centos-7\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.digitalocean.com/community/tutorials/how-to-set-up-a-firewall-using-firewalld-on-centos-7</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/566.html\">如何使用 FirewallD 开启 IP 白名单</a></p>","descriptionType":"html","publishedDate":"Sat, 02 Nov 2019 12:42:43 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2019/firewall.jpg","linkMd5":"97a8b753ef69883eff9d66375451c70f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn19@2020_4/2020/08/25/00-30-53-127_39222b0bf85c0f37.webp","destWidth":1080,"destHeight":675,"sourceBytes":53176,"destBytes":19180,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2019/firewall.jpg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn19@2020_4/2020/08/25/00-30-53-127_39222b0bf85c0f37.webp"},"publishedOrCreatedDate":1598315426718},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"吐槽腾讯：PC用户也是用户","link":"https://teddysun.com/?p=324","description":"<p><a href=\"https://teddysun.com/324.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/12/pian.jpg\" title=\"吐槽腾讯：PC用户也是用户\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　大清早，电脑开启，QQ 登陆，好慢，等了一两分钟，哗哗地弹广告消息，xxx 送我钱，xxx 送我优惠券，xxx 送我彩票，你妹的腾讯，一个聊天 QQ 客户端怎么成往门缝塞的小广告了，一个普通 QQ、一个会员 QQ，等待广告弹完关闭完，三五分钟浪费了。</span><br /> <span style=\"font-size:14px;\">　　我突然想到，腾讯的小马哥不是一直在宣扬腾讯 xx 重视用户体验么，不是在讲用户体验的闭环么，难道只在微信那边讲体验、讲传奇、讲神话，换了 pc 端，用户就要成为腾讯 sm 的对象么？我在微信端对腾讯和易迅的好印象，一下子消散了，这 tmd 恨不得往我电脑弹一天广告的节奏，还让我怎么愿意感受你什么电商体验、甚至支付体验，跟日本小电影网站的弹窗数量已经不相上下了啊。</span></p> \n<p> <span id=\"more-324\"></span> </p> \n<p> <span style=\"font-size:14px;\"><strong>精神分裂式的一边包装圣人，一边充当无赖</strong></span></p> \n<p><span style=\"font-size:14px;\">　　微信的成功， 让腾讯在移动端放心了，张小龙更是被包装成圣人一般，微信持而不破的用户生态循环设计牛逼哄哄，马化腾也讲了很多产品经理的教学资料，腾讯一下子站在像 apple 一样重视用户体验的高度上去了。我也认真看了马化腾和张小龙的各种讲话资料，真是很不错，可谓关心用户体验的典范。</span></p> \n<p><span style=\"font-size:14px;\">　　可惜，同样是腾讯产品，同样作为腾讯用户，pc 端的用户长期不被当人看啊，腾讯一直肆无忌惮地弹各种广告，拍拍、易迅、财付通等轮番上阵，不是送我钱，就是送我优惠券，你妹的，用户怎么又一下子变成白痴了，这种无赖行为无异于变态 sm 行为。</span></p> \n<p><span style=\"font-size:14px;\">　　腾讯的一边圣人化，需要用户的追捧和行业的膜拜，一边充当无赖小流氓，往用户门缝里塞“快来啊，你要中奖啦”，这是一种什么样儿的心理结构，还是厚黑学那一套么？即便是你垄断地位，没有其他厂商敢于挑战你，难道就这样继续无赖下去，非要遇到周鸿祎这样的钢刀战士才学会颤抖么？</span></p> \n<p><span style=\"font-size:14px;\"><strong>推送，推送，还要推送几个世纪</strong></span></p> \n<p><span style=\"font-size:14px;\">　　微信、微博在移动端的成功和火爆，很大意义上标志着网民用户习惯的迁移和升级，难道用户就是一群识别不了你推送信息的白痴么，如果这样的话，大家还是去下载别家的通讯工具玩玩，支持一下变革者，过度依赖于腾讯的产品，腾讯就会肆无忌惮地给我们弹N多广告。</span></p> \n<p><span style=\"font-size:14px;\">　　话说网络广告精准时代早已到来，腾讯 QQ 推送给我的信息全是一堆低级促销小广告，毫无匹配度和精准度而言，以腾讯的技术能力完全可以做到，既然 360 能够用扣扣保镖技术做到，腾讯自己也应该好好反思一下用户的声音，真的用户离不开你么？</span></p> \n<p><span style=\"font-size:14px;\"><strong>闭环，是功能堆砌的大圆饼么？</strong></span></p> \n<p><span style=\"font-size:14px;\">　　马化腾经常讲的生态闭环，我理解的是一个健康的、有良好体验的微循环系统，作为腾讯旧时代的支柱——QQ 客户端的闭环是否符合马化腾的闭环理念，在理论上，QQ 各种弹窗给集团其他产品带去一定的流量，从而构建大的闭环。但是，我发现自己看新闻依旧去网易新闻，买东西照样去京东、天猫，看视频照样去优酷、 搜狐。</span></p> \n<p><span style=\"font-size:14px;\">　　腾讯搜搜已经证明了腾讯基于 QQ 客户端的大闭环就是摊大饼，几乎没有太多的意义，反而加强了那些团队对客户端的依赖意识，让团队丧失了狼性和市场敏感度。</span></p> \n<p><span style=\"font-size:14px;\">　　大圆饼套在脖子上，转着圈吃，最后发现自己的身体运动能力下降了，所以，并非近场的推送就是好事，腾讯 QQ 这样垃圾的消息广告模式和功能堆砌，严重损害了腾讯公关部大力推广的马化腾创新科技领袖形象，也加深了用户对腾讯另一面的厌恶。</span></p> \n<p><span style=\"font-size:14px;\"><strong>本文转载自</strong>：<span style=\"font-family:Courier New;\"><a href=\"http://www.tmtpost.com/83360.html\" target=\"_blank\">http://www.tmtpost.com/83360.html</a></span></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/324.html\">吐槽腾讯：PC用户也是用户</a></p>","descriptionType":"html","publishedDate":"Thu, 12 Dec 2013 10:19:30 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/12/pian.jpg","linkMd5":"bafbffeb33386ad850f043815c07195b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn54@2020_3/2020/08/25/00-30-52-443_801662c9f3bd4c88.webp","destWidth":500,"destHeight":336,"sourceBytes":113187,"destBytes":14916,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/12/pian.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn54@2020_3/2020/08/25/00-30-52-443_801662c9f3bd4c88.webp"},"publishedOrCreatedDate":1598315426736},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"利用iptables屏蔽各国IP的脚本","link":"https://teddysun.com/?p=203","description":"<p><a href=\"https://teddysun.com/203.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/hack.jpg\" alt=\"scan_bash\" title=\"利用iptables屏蔽各国IP的脚本\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 早在4月的时候，我的网站就遭遇过肉鸡恶意扫描，详见《<a href=\"https://teddysun.com/164.html\" target=\"_blank\">网站遭遇大规模暴力破解攻击</a>》一文。成千上万的肉鸡对wordpress进行疯狂的攻击，所以部署一个防火墙很重要。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> <a href=\"http://www.storyday.com/aboutus\" target=\"_blank\">东哥</a>对他的<a href=\"http://www.storyday.com/html/y2013/3257_the-iptables-ip-shielding-around-the-script-to-download.html\" target=\"_blank\">cdn日志分析</a>后发现主要的攻击IP都是来自俄罗斯，土耳其，还有中国的福建莆田（个人的发现结果，请禁止任何地域攻击）。并且经过搜索后整理一个屏蔽俄罗斯和土耳其IP的脚本，我转载过来供各位下载使用。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 下载运行（<span style=\"color:red;\">注意：</span>更改iptables规则必须以root用户运行该脚本）：</span></p> \n<pre class=\"prettyprint lang-bsh\">wget https://teddysun.com/wp-content/uploads/2013/05/block.sh\nchmod +x block.sh\n./block.sh</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"> 要清除iptables规则也很简单：</span></p> \n<pre class=\"prettyprint lang-bsh\">iptables -F\niptables -X</pre> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/203.html\">利用iptables屏蔽各国IP的脚本</a></p>","descriptionType":"html","publishedDate":"Thu, 16 May 2013 08:04:48 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/hack.jpg","linkMd5":"fd2a84fd6bac706479cfa13d952be39f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn84@2020_2/2020/08/25/00-30-54-107_808e2a77e47e35e3.webp","destWidth":470,"destHeight":352,"sourceBytes":38199,"destBytes":35184,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/hack.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn84@2020_2/2020/08/25/00-30-54-107_808e2a77e47e35e3.webp"},"publishedOrCreatedDate":1598315426744},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"一键测试脚本bench.sh","link":"https://teddysun.com/?p=444","description":"<p><a href=\"https://teddysun.com/444.html\"><img class=\"aligncenter\" style=\"width: auto; height: auto;\" title=\"一键测试脚本bench.sh\" src=\"https://teddysun.com/wp-content/uploads/2014/linux_2.png\" /></a></p> \n<p><span style=\"font-size: 14px;\">经过几个版本的演化，一键测试脚本 <span style=\"font-family: Courier New;\">bench.sh</span> 已经几乎全面适用于各种 Linux 发行版的网络（下行）和 IO 测试。</span><br /> <span style=\"font-size: 14px;\">并将测试结果以较为美观的方式显示出来。</span></p> \n<h3><span style=\"color: red;\">总结一下 bench.sh 特点：</span></h3> \n<p><span style=\"font-size: 14px;\">1、显示当前测试的各种系统信息；</span><br /> <span style=\"font-size: 14px;\">2、取自世界多处的知名数据中心的测试点，下载测试比较全面；</span><br /> <span style=\"font-size: 14px;\"><del>3、支持 IPv6 下载测速；</del></span><br /> <span style=\"font-size: 14px;\">4、IO 测试三次，并显示平均值。</span></p> \n<p><span id=\"more-444\"></span></p> \n<p><span style=\"font-size: 14px;\">再配合 <a href=\"https://teddysun.com/245.html\" target=\"_blank\" rel=\"noopener noreferrer\">unixbench.sh</a> 脚本测试，即可全面测试 VPS 的性能。</span></p> \n<p><span style=\"font-size: 14px;\"><strong>使用方法：</strong></span><br /> <span style=\"font-size: 14px; color: red;\"><strong>命令1：</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">wget -qO- bench.sh | bash</pre> \n<p><span style=\"font-size: 14px;\">或者</span></p> \n<pre class=\"prettyprint lang-bsh\">curl -Lso- bench.sh | bash</pre> \n<p><span style=\"font-size: 14px; color: red;\"><strong>命令2：</strong></span></p> \n<pre class=\"prettyprint lang-bsh\">wget -qO- 86.re/bench.sh | bash</pre> \n<p><span style=\"font-size: 14px;\">或者</span></p> \n<pre class=\"prettyprint lang-bsh\">curl -so- 86.re/bench.sh | bash</pre> \n<p><span style=\"font-size: 14px;\"><strong>备注：</strong></span><br /> <span style=\"font-size: 14px;\">bench.sh 既是脚本名，同时又是域名。所以不要怀疑我写错了或者你看错了。</span></p> \n<p><span style=\"font-size: 14px;\"><strong>下载地址：</strong></span><br /> <span style=\"font-size: 14px; font-family: 'Courier New';\"><a href=\"https://github.com/teddysun/across/blob/master/bench.sh\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/teddysun/across/blob/master/bench.sh</a></span></p> \n<p><span style=\"font-size: 14px; color: red;\">2020 年 07 月 29 日更新：</span><br /> <span style=\"font-size: 14px;\">1. 修改：测速为 speedtest 提供的，区分上传下载，更实用；</span><br /> <span style=\"font-size: 14px;\">2. 增加：TCP Congestion Control；虚拟化方式；IP 信息等。</span></p> \n<p><span style=\"font-size: 14px;\">下图所示的是我的 <a href=\"https://qiu.sh/vultr\" target=\"_blank\" rel=\"noopener noreferrer\">Vultr</a> 的评测数据：</span><br /> <img class=\"left\" style=\"width: auto; height: auto;\" title=\"bench.sh\" src=\"https://teddysun.com/wp-content/uploads/2020/speedtest.png\" /></p> \n<p><span style=\"font-size: 14px; color: red;\">2018 年 01 月 07 日更新：</span><br /> <span style=\"font-size: 14px;\">修改：显示信息的颜色，分门别类，更容易区分。</span></p> \n<p><span style=\"font-size: 14px;\">下图所示的是我的 KS3C 百兆独服的评测数据：</span><br /> <img class=\"left\" style=\"width: auto; height: auto;\" title=\"bench.sh\" src=\"https://teddysun.com/wp-content/uploads/2018/ks3c_bench.png\" /></p> \n<p><span style=\"font-size: 14px; color: red;\">2016 年 11 月 24 日更新：</span><br /> <span style=\"font-size: 14px;\">新增：显示硬盘信息；把 IO 速度测试的位置提前，网络下载速度测试放到最后。</span></p> \n<p><span style=\"font-size: 14px;\">如下所示：</span><br /> <img class=\"left\" style=\"width: auto; height: auto;\" title=\"bench.sh\" src=\"https://teddysun.com/wp-content/uploads/2016/update_bench.png\" /></p> \n<p><span style=\"font-size: 14px;\">最后放几张测试图片。</span></p> \n<p><span style=\"font-size: 14px;\"><strong>BandwagonHost Los Angel</strong></span><br /> <img class=\"left\" style=\"width: auto; height: auto;\" title=\"BandwagonHost\" src=\"https://teddysun.com/wp-content/uploads/2015/speedtest_bwg.png\" /></p> \n<p><span style=\"font-size: 14px;\"><strong>DigitalOcean Singapore</strong></span><br /> <img class=\"left\" style=\"width: auto; height: auto;\" title=\"DigitalOcean Singapore\" src=\"https://teddysun.com/wp-content/uploads/2015/speedtest_do_sg.png\" /></p> \n<p><span style=\"font-size: 14px;\"><strong>Ramnode Seattle</strong></span><br /> <img class=\"left\" style=\"width: auto; height: auto;\" title=\"Ramnode Seattle\" src=\"https://teddysun.com/wp-content/uploads/2015/speedtest_ramnode.png\" /></p> \n<p><span style=\"font-size: 14px;\"><strong>Xvmlabs Los Angel</strong></span><br /> <img class=\"left\" style=\"width: auto; height: auto;\" title=\"Xvmlabs Los Angel\" src=\"https://teddysun.com/wp-content/uploads/2015/speedtest_xvmlabs.png\" /></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/444.html\">一键测试脚本bench.sh</a></p>","descriptionType":"html","publishedDate":"Mon, 28 Dec 2015 06:00:24 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2014/linux_2.png","linkMd5":"ce5c0ded51f907918637e82bc4a01940","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn40@2020_3/2020/08/25/00-30-51-906_a73a186bd320d7dd.webp","destWidth":510,"destHeight":600,"sourceBytes":75843,"destBytes":23444,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2014/linux_2.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn40@2020_3/2020/08/25/00-30-51-906_a73a186bd320d7dd.webp","https://teddysun.com/wp-content/uploads/2020/speedtest.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn76@2020_6/2020/08/25/00-30-59-235_0ea1f16d8764c966.webp","https://teddysun.com/wp-content/uploads/2018/ks3c_bench.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn84@2020_5/2020/08/25/00-30-59-083_78a6b83655b18cba.webp","https://teddysun.com/wp-content/uploads/2016/update_bench.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn16@2020_2/2020/08/25/00-30-59-693_0252383f92e99918.webp","https://teddysun.com/wp-content/uploads/2015/speedtest_bwg.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn39@2020_5/2020/08/25/00-30-57-775_cc46528e183ef78b.webp","https://teddysun.com/wp-content/uploads/2015/speedtest_do_sg.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn44@2020_1/2020/08/25/00-30-57-400_0b95534039c4ae7c.webp","https://teddysun.com/wp-content/uploads/2015/speedtest_ramnode.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn58@2020_6/2020/08/25/00-31-00-723_cbb28193ba399552.webp","https://teddysun.com/wp-content/uploads/2015/speedtest_xvmlabs.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn66@2020_5/2020/08/25/00-31-00-783_39fd9b3c979c3735.webp"},"publishedOrCreatedDate":1598315426724},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Webmin：如何安装Perl模块DBI和DBD-MySQL","link":"https://teddysun.com/?p=322","description":"<p><a href=\"https://teddysun.com/322.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/12/webmin.jpg\" alt=\"Webmin\" title=\"Webmin：如何安装Perl模块DBI和DBD-MySQL\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"line-height:1.5;font-size:14px;\">　　<a href=\"http://www.webmin.com/\" target=\"_blank\">Webmin</a> 是一款功能非常强大的 Linux 系统管理面板。让你可以通过浏览器就能添加用户帐号，管理 Apache,DNS,MySQL 等各种功能。Webmin 是基于 Perl 语言开发的面板，使用 Webmin 管理 Linux 服务器，你可以可视化管理你的服务器，脱离了命令行模式的管理方法。最重要的是，它是一款免费的面板。</span><br /> <span style=\"font-size:14px;\">　　如何安装 Webmin ，请参考这篇：<a href=\"https://teddysun.com/151.html\" target=\"_blank\">使用webmin管理PPTP VPN Server</a></span></p> \n<p> <span id=\"more-322\"></span> </p> \n<p> <span style=\"font-size:14px;\">我在使用 Webmin 管理 MySQL 数据库的时候，遇到以下的错误信息：</span><br /> <span style=\"font-size:14px;\">警告：您的系统未安装Perl 模块 DBI 和 DBD::mysql，Webmin将无法可靠地访问您的MySQL数据库。</span><br /> <span style=\"font-size:14px;\">英文信息是这样的：</span><br /> <span style=\"font-size:14px;\">Warning: The Perl modules DBI and DBD::mysql are not installed on your system, so Webmin will not be able to reliably access your MySQL database.</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/12/webmin_mysql_1.jpg\"><img src=\"https://teddysun.com/wp-content/uploads/2013/12/webmin_mysql_1.jpg\" alt=\"Webmin MySQL\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">这是因为没有安装 perl-DBI 和 perl-DBD-MySQL 导致的。解决办法也很简单，yum 安装即可。</span><br /> <span style=\"font-size:14px;\">运行以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">yum install -y perl-DBD-MySQL</pre> \n<p><span style=\"font-size:14px;\">会自动安装依赖包 mysql-libs 和 perl-DBI 。</span></p> \n<p><span style=\"font-size:14px;\">安装完成后的截图：</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/12/webmin_mysql_2.jpg\"><img src=\"https://teddysun.com/wp-content/uploads/2013/12/webmin_mysql_2.jpg\" alt=\"Webmin MySQL\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/322.html\">Webmin：如何安装Perl模块DBI和DBD-MySQL</a></p>","descriptionType":"html","publishedDate":"Tue, 03 Dec 2013 03:31:14 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/12/webmin.jpg","linkMd5":"3aaa2730f58ccbdba6f3a370c757bd25","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn59@2020_1/2020/08/25/00-30-55-698_ec385b9e233e266d.webp","destWidth":475,"destHeight":500,"sourceBytes":96772,"destBytes":37948,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/12/webmin.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn59@2020_1/2020/08/25/00-30-55-698_ec385b9e233e266d.webp","https://teddysun.com/wp-content/uploads/2013/12/webmin_mysql_1.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn100@2020_6/2020/08/25/00-31-01-089_9def60f95ced0e53.webp","https://teddysun.com/wp-content/uploads/2013/12/webmin_mysql_2.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn91@2020_1/2020/08/25/00-30-59-593_fd03e8d3de24a3ad.webp"},"publishedOrCreatedDate":1598315426737},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"忠烈杨家将，救爹小分队","link":"https://teddysun.com/?p=209","description":"<p><a href=\"https://teddysun.com/209.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/yang.jpg\" alt=\"忠烈杨家将\" title=\"忠烈杨家将，救爹小分队\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　关于这部电影，首先要说的是，色女必看！先不说老牌帅哥郑少秋，单看那杨家七子，郑伊健、余波、周渝民、林峰、李晨、吴尊、付辛博……都是两岸三地非型即帅的演员，从英俊小生到成熟老男人，几乎“通杀”各年龄段女性观众。这些型男们在电影里秀身材、肌肉、演技……这毫无疑问是本片最大的看点。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　不得不说，剧情设计还是本片最大弱点：柴郡主与杨六郎青梅竹马，但潘仁美之子潘豹垂涎柴郡主美色意欲收归，其老爹便为其设计了一出比武招亲，却没想遭到急性子七郎的破坏，更是失手让其摔死。潘仁美爱子心切欲报仇，恰逢辽兵南下，主动请缨任正统帅，杨业被任命先锋。于是悲剧就此埋下。杨业在金沙滩一役被潘仁美摆了一道，被辽军困于两狼山，七子欲上阵救父脱险。临行前思夫心切的佘老太君向鬼谷子卜问凶吉，得了一张字条，上书：当知天命难违，七子去六子回。按本片英文“Saving General Yang”的调调来看，于是整部电影的基调就成了救爹回家。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　鬼谷子在本片中成了一个算命先生，他老人家从<span style=\"color:red;\">战国时期穿越到北宋时期</span>，为的就是给佘赛花那张字条。观众会认为杨家七子中有一人会在这场救爹行动中死掉，殊不知“七子去六子回”的意思是第六子回，其余六子全部仆街。编剧设计这个桥段是玩了一个文字游戏，因为这句话既可以理解为死了一个回来六个，又可以理解为第六子回来其他人死了。</span></p> \n<p> <span id=\"more-209\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　杨七郎性子最急，所以最先死。影片的开始杨七郎在擂台上失手让潘豹摔死，继而招致潘仁美怀恨在心，死在寰州城潘仁美的乱箭下也就不足为奇了。当观众以为死了杨七郎，那其余人应该能安全了吧。孰料果然是父子心有灵犀。当儿子们千辛万苦地把杨业给救出来后，结果他老人家因梦到杨七郎死了，继而想不开一头撞死在李陵碑上。“老羊不死，小羊难活”（“<span style=\"font-family:'Microsoft YaHei';font-size:14px;line-height:21px;\">羊</span>”谐音“杨”）。真是封建迷信害死人吶。　</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　当杨大郎准备站出来殿后时，悲剧便开始了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　大郎、二郎相继因寡不敌众死于乱刀之下；四郎、五郎与围追辽军一同跃下山崖；三郎在杀死辽军弓箭手后遭耶律原暗算被长枪穿个透心凉；最后只剩下背着杨业尸身的六郎逆袭了耶律原。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　下面是吐槽时间：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　1、反派人物耶律原的设计最不合理。他不是为父报仇的，而是为母亲的含恨而终而不平。其动机乃是复仇，使故事俨然成了两大家族的恩怨。于是他来杀杨家父子就成了天经地义之举。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　2、历史上杨家将金沙滩救皇帝英勇捐躯，确实“忠烈”，结果经编剧一改成了救爹小分队，一下子从保卫国家降格为营救亲人。影片前半部分杨业活着时，谈及忠君报国，还有几分“忠烈”的意味，杨业一死，儿子们就只剩来来回回保卫尸体了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　3、活下来的杨六郎，被描绘成了优柔寡断的人。遇事必流一滴泪，开口总是对不起，背着爹一路向东，哥哥们在身后浴血奋战而亡；被杀父杀兄仇人殴得像颗猪头一样毫无还手之力，但是，最后好不容易把仇人打倒在地，居然他妈的下不了手差点被KO……这编剧也太搞笑了吧……最后我在演职员表里看到编剧一栏赫然写着黄子恒，再去一搜，其父黄百鸣。再一看，监制黄百鸣。于是就豁然了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　4、整部电影有着大量打戏，既有两军交战的大场面，也有着狭路相逢的火拼，在不到100分钟的时长里，文戏被弱化到了可有可无的地步，大部分时间都留给了动作场面，这就导致了本文开头所说的，剧情薄弱。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　下载链接，点<a href=\"https://teddysun.com/?p=209/ftp://dygod1:dygod1@d070.dygod.org:1064/[%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82-www.dy2018.net].%E5%BF%A0%E7%83%88%E6%9D%A8%E5%AE%B6%E5%B0%86.BD.1280x720.%E5%9B%BD%E7%B2%A4%E5%8F%8C%E8%AF%AD%E4%B8%AD%E5%AD%97.mkv\" target=\"_blank\">这里</a>（用迅雷，你懂的）。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/209.html\">忠烈杨家将，救爹小分队</a></p>","descriptionType":"html","publishedDate":"Sun, 26 May 2013 09:22:26 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/yang.jpg","linkMd5":"2581ffd39d6084601b6bc4bdab75cae9","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn36@2020_3/2020/08/25/00-30-54-024_1b00839113fa4d36.webp","destWidth":520,"destHeight":662,"sourceBytes":211863,"destBytes":103860,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/yang.jpg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn36@2020_3/2020/08/25/00-30-54-024_1b00839113fa4d36.webp"},"publishedOrCreatedDate":1598315426743},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"新站开张","link":"https://teddysun.com/?p=34","description":"<p style=\"text-indent:2em;\"> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">&nbsp;突然发现已经有很久没写日志了。</span> </p> \n<p style=\"text-indent:2em;\"> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">&nbsp;自从干了攻城师一职后，更多考虑的是代码方面的事，别说写东西，连一篇像样的日志也懒得去写了。不是脑子里没想法，而是不想记录。久而久之，懒散了。</span> </p> \n<p style=\"text-indent:2em;\"> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">&nbsp;这次折腾再三，换了三家VPS供应商，把这个小博客建起来了。说下过程吧。</span> </p> \n<p style=\"text-indent:2em;\"> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">&nbsp;最早是看到阿里云搞活动，1核CPU，512MB内存，20G系统和40G数据的硬盘，1MB带宽，三个月139大洋。当时我用公司的VMware vSphere虚拟了一个机器装了CentOS6.3，开始编写一个适合Moodle（一个在线学习的开源系统）的LAMP环境，同时还要优化Apache和PHP的配置。于是我就脑子一热，入手了阿里云拿来跑脚本，美其名曰测试。之后就不断的重装系统，换CentOS6.x和CentOS5.x的32位和64位轮流来，再不断的跑脚本，排错。一个星期后，搞定脚本。然后我想到，光用来测试脚本太浪费了，干脆不如建个站吧。可是国内的环境，大家懂的，备案是件很麻烦的事。我又是个怕麻烦的人，于是这事就耽搁下来。之后，我找了些搭建VPN的脚本（比如PPTP、L2TP、Cisco IPSec等）在这个阿里云上跑测试，自己再做些修改，也算是物有所用了。</span> </p> \n<p><span id=\"more-34\"></span></p> \n<p style=\"text-indent:2em;\"> <span style=\"font-size:14px;\"><span style=\"font-family:Microsoft YaHei;\">&nbsp;在</span><a href=\"http://www.vpser.net/\" target=\"_blank\"><span style=\"font-family:Microsoft YaHei;\">VPS侦探</span></a><span style=\"font-family:Microsoft YaHei;\">看到YardVPS发布2013年1月史无前例的限时5折超给力月付终身优惠码活动，尽管用过YardVPS用户普遍反映一般，且无技术支持，我一看优惠后的价格$3.98每月，再次脑子一热入手了。这时候我的LAMP脚本已经更新到版本1.1了，正好就拿来测试了。说一点使用近2个月的感受：国内速度真心一般，ping值电信和联通差不多，在200-300ms左右。但是，抽风，经常抽风。我这边在Wordpress后台找个主题或插件折腾的正起劲，一刷新，挂了。putty连接也失去响应。没办法只能等，一般分分钟也就恢复了。最无奈的是他们家的后台，连个Ticket也不能发，只能发邮件support，我有过被support邮箱退信然后居然还能回复的经历。&nbsp;</span></span> </p> \n<p style=\"text-indent:2em;\"> <span style=\"font-size:14px;\"><span style=\"font-family:Microsoft YaHei;\">最后换到了</span><a href=\"http://www.stylexnetworks.com/\" target=\"_blank\"><span style=\"font-family:Microsoft YaHei;\">StyleXnetworks</span></a><span style=\"font-family:Microsoft YaHei;\">，终身5折后$5.5每月，给出了个测试IP，ping出来的速度杠杠的，电信联通平均才140-180ms，于是心动不如行动。没想到出师不利，系统给分配的IP直接就给墙了，害得我好一顿排查，最后发了Ticket，换了IP后就一切正常了。</span></span> </p> \n<p style=\"text-indent:2em;\"> <span style=\"font-size:14px;\"><span style=\"font-family:Microsoft YaHei;\">前两天，有那么一会儿，抽烟后发觉脑袋晕晕的，半天才能缓过劲来。于是打算戒烟，以我之前每星期一包每包10块计算，正好够我玩VPS的。何乐不为呢？</span><span style=\"font-size:14px;line-height:21px;\"><span style=\"font-family:Microsoft YaHei;\">&nbsp;这就是现在你们看到的网站了，最后说一句，我的LAMP脚本更新到版本2.2了，戳</span><a href=\"https://teddysun.com/lamp\" target=\"_blank\"><span style=\"font-family:Microsoft YaHei;\">这里</span></a><span style=\"font-family:Microsoft YaHei;\">围观。</span></span></span> </p> \n<p style=\"text-indent:2em;\"> <span style=\"font-size:14px;\"><span style=\"font-family:Microsoft YaHei;color:red;\">更新：本站现在托管于<a target=\"_blank\" href=\"https://www.digitalocean.com/?refcode=e5e343560b4d\">DigitalOcean</a>，只需月付5美元即可拥有稳定服务。</span></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/34.html\">新站开张</a></p>","descriptionType":"html","publishedDate":"Sat, 23 Feb 2013 13:38:12 +0000","feedId":9594,"bgimg":"","linkMd5":"fdefaf3493e25cd21ecd45e3f70c8bba","bgimgJsdelivr":"","metaImg":"","author":"秋水逸冰","publishedOrCreatedDate":1598315426750},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"CentOS下如何手动添加Swap","link":"https://teddysun.com/?p=321","description":"<p><a href=\"https://teddysun.com/321.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/12/swap.jpg\" alt=\"Swap\" title=\"DigitalOcean：如何在CentOS中添加Swap\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"> 前几天在编译 PHP 的时候出现了进程被 killed 的状况，经过我的吐槽以及和别人交流后发现，是内存耗尽的缘故。其实是因为当时开着 MySQL 进程消耗了不少内存，后来觉得有必要手动添加一下 Swap（交换分区），这样以免以后再编译什么的时候进程被K 。</span><br /> <span style=\"font-size:14px;\"> 关于 Linux 中 Swap（交换分区），类似于 Windows 的虚拟内存，就是当内存不足的时候，把一部分硬盘空间虚拟成内存使用,从而解决内存容量不足的情况。</span><br /> <span style=\"font-size:14px;\"> 那么如何在 CentOS 中手动添加 Swap 呢？</span></p> \n<p> <span id=\"more-321\"></span> </p> \n<p> <span style=\"font-size:14px;\"><strong>1、检查 Swap 空间</strong></span><br /> <span style=\"font-size:14px;\">在设置 Swap 文件之前，有必要先检查一下系统里有没有既存的 Swap 文件。</span><br /> <span style=\"font-size:14px;\">运行以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">swapon -s</pre> \n<p><span style=\"font-size:14px;\">如果返回的信息概要是空的，则表示 Swap 文件不存在。</span></p> \n<p><span style=\"font-size:14px;\"><strong>2、检查文件系统</strong></span><br /> <span style=\"font-size:14px;\">在设置 Swap 文件之前，同样有必要检查一下文件系统，看看是否有足够的硬盘空间来设置 Swap 。运行以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">df -hal</pre> \n<p><span style=\"font-size:14px;\">检查返回的信息，还剩余足够的硬盘空间即可。</span></p> \n<p><span style=\"font-size:14px;\"><strong>3、创建并允许 Swap 文件</strong></span><br /> <span style=\"font-size:14px;\">下面使用 dd 命令来创建 Swap 文件。</span></p> \n<pre class=\"prettyprint lang-bsh\">dd if=/dev/zero of=/swapfile bs=1024 count=1024k</pre> \n<p><span style=\"font-size:14px;color:red;\">参数解读：</span><br /> <span style=\"font-size:14px;\">if=文件名：输入文件名，缺省为标准输入。即指定源文件。&lt; if=input file &gt;</span><br /> <span style=\"font-size:14px;\">of=文件名：输出文件名，缺省为标准输出。即指定目的文件。&lt; of=output file &gt;</span><br /> <span style=\"font-size:14px;\">bs=bytes：同时设置读入/输出的块大小为bytes个字节</span><br /> <span style=\"font-size:14px;\">count=blocks：仅拷贝blocks个块，块大小等于bs指定的字节数。</span></p> \n<p><span style=\"font-size:14px;\"><strong>4、格式化并激活 Swap 文件</strong></span><br /> <span style=\"font-size:14px;\">上面已经创建好 Swap 文件，还需要格式化后才能使用。运行命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">mkswap /swapfile</pre> \n<p><span style=\"font-size:14px;\">激活 Swap ，运行命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">swapon /swapfile</pre> \n<p> <span style=\"font-size:14px;\">以上步骤做完，再次运行命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">swapon -s</pre> \n<p><span style=\"font-size:14px;\">你会发现返回的信息概要：</span></p> \n<pre class=\"prettyprint lang-bsh\">Filename                    Type        Size    Used    Priority\n/swapfile               file        524284    0     -1</pre> \n<p> <span style=\"font-size:14px;\">如果要机器重启的时候自动挂载 Swap ，那么还需要修改 fstab 配置。</span><br /> <span style=\"font-size:14px;\">用 vim 打开 /etc/fstab 文件，在其最后添加如下一行：</span></p> \n<pre class=\"prettyprint lang-bsh\">/swapfile &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; swap &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;swap &nbsp; &nbsp;defaults &nbsp; &nbsp; &nbsp; &nbsp;0 0</pre> \n<p> <span style=\"font-size:14px;\">最后，赋予 Swap 文件适当的权限：</span></p> \n<pre class=\"prettyprint lang-bsh\">chown root:root /swapfile \nchmod 600 /swapfile</pre> \n<p> <span style=\"font-size:14px;\">同时，我们还可以修改 Linux Swap 空间的 swappiness ，降低对硬盘的缓存。</span><br /> <span style=\"font-size:14px;\">Linux 会使用硬盘的一部分做为 Swap 分区，用来进行进程调度–进程是正在运行的程序–把当前不用的进程调成‘等待（standby）’，甚至‘睡眠（sleep）’，一旦要用，再调成‘活动（active）’，睡眠的进程就会在 Swap 分区，把内存空出来让给‘活动’的进程。</span><br /> <span style=\"font-size:14px;\">如果内存够大，应当告诉 Linux 不必太多的使用 Swap 分区，可以通过修改 swappiness 的参数来设置。swappiness=0 的时候表示最大限度使用物理内存，然后才是 Swap 空间，swappiness＝100 的时候表示积极的使用 Swap 分区，并且把内存上的数据及时的搬运到 Swap 空间里面。</span><br /> <span style=\"font-size:14px;\">在 CentOS 中，swappiness 的默认值是60。</span><br /> <span style=\"font-size:14px;\">通过以下命令可以看到：</span></p> \n<pre class=\"prettyprint lang-bsh\">cat /proc/sys/vm/swappiness</pre> \n<p><span style=\"font-size:14px;\">返回值60</span></p> \n<p><span style=\"font-size:14px;\">我们可以调整 swappiness 的值到一个合适的参数，从而达到最优化使用 Swap 的目的。这里我们将其设为10。</span><br /> <span style=\"font-size:14px;\">使用 sysctl 命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">sysctl vm.swappiness=10</pre> \n<p><span style=\"font-size:14px;\">但是这只是临时性的修改，在你重启系统后会恢复默认的60，要永久设置，还需要在 vim 中修改sysctl.conf：</span></p> \n<pre class=\"prettyprint lang-bsh\">vi /etc/sysctl.conf</pre> \n<p><span style=\"font-size:14px;\">在这个文档的最后加上这样一行:</span></p> \n<pre class=\"prettyprint lang-bsh\"># Search for the vm.swappiness setting.  Uncomment and change it as necessary.\nvm.swappiness=10</pre> \n<p><span style=\"font-size:14px;\">输入:x，保存退出 vim 。</span></p> \n<p><span style=\"font-size:14px;\">这样一来，Swap 分区重启后都会生效了。</span></p> \n<p> <span style=\"font-size:14px;color:blue;\"><strong>参考链接：</strong></span><br /> <span style=\"font-size:14px;\"><a href=\"https://www.digitalocean.com/community/articles/how-to-add-swap-on-centos-6\" target=\"_blank\">https://www.digitalocean.com/community/articles/how-to-add-swap-on-centos-6</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/321.html\">CentOS下如何手动添加Swap</a></p>","descriptionType":"html","publishedDate":"Mon, 02 Dec 2013 06:49:19 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/12/swap.jpg","linkMd5":"0a002e08cfbd3a58475748b05ddede3c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn52@2020_6/2020/08/25/00-30-52-802_740a1a0ba2a49b3c.webp","destWidth":518,"destHeight":302,"sourceBytes":16150,"destBytes":13596,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/12/swap.jpg":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn52@2020_6/2020/08/25/00-30-52-802_740a1a0ba2a49b3c.webp"},"publishedOrCreatedDate":1598315426737},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"ownCloud：你的专属私有云","link":"https://teddysun.com/?p=200","description":"<p><a href=\"https://teddysun.com/200.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/owncloud_logo.png\" alt=\"owncloud\" title=\"ownCloud：你的专属私有云\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">相信大家都用过网盘，现在更流行的说法应该叫“云存储”。比如国外的有Google Drive、Dropbox、SkyDrive等，国内的有百度云、酷盘、金山快盘、华为网盘等。这些网盘可以在不同的设备上来存储和获取数据，PC端、智能手机、平板电脑等等，不同设备间的数据是可以实时同步的。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">云的概念流行起来后，各大IT公司纷纷上马云计算，公有云和私有云的说法也逐渐被人所知。这次介绍的是开源软件ownCloud来搭建自己的私有云。ownCloud 起源于一个叫The KDE 云计算项目，现在已经适用于大多主流平台，它最早是KED的开发者Frank Karlitschek 创建的，现在由一个ownCloud team共同开发。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">官方网站：<a target=\"_blank\" href=\"http://owncloud.org/\"><span style=\"font-family:Courier New;\">http://owncloud.org/</span></a></span></p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">那么如何在自己的VPS上搭建基于ownCloud的私有云呢？别急，一步一步来。</span></p> \n<p> <span id=\"more-200\"></span> </p> \n<p> <span style=\"font-size:16px;font-family:Microsoft YaHei;\"><strong>1、下载和安装环境介绍</strong></span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">去官方网站下载最新Release的源码，本次安装用到的是最新版（截至2013年5月14日）ownCloud 5.0.5。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">下载地址：</span><br /> <a target=\"_blank\" href=\"http://download.owncloud.org/community/owncloud-5.0.5.tar.bz2\"><span style=\"font-size:14px;font-family:Courier New;\">http://download.owncloud.org/community/owncloud-5.0.5.tar.bz2</span></a></p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">ownCloud内核是用PHP5写的，支持SQLite、MySQL、Oracle以及PostgreSQL等数据库。简单来说，是最典型的LAMP应用。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">如何安装LAMP环境，请参考：<a target=\"_blank\" href=\"https://teddysun.com/lamp\">LAMP一键安装脚本</a></span></p> \n<p><span style=\"font-size:16px;font-family:Microsoft YaHei;\"><strong>2、安装ownCloud</strong></span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">下载完成的源码拷贝至网站根目录后，执行以下命令解压：</span></p> \n<pre class=\"prettyprint lang-bsh\">tar -jxf owncloud-5.0.5.tar.bz2</pre> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">赋予权限才能创建data目录（以<span style=\"font-family:Courier New;\">/data/www/default/owncloud/</span>目录为例）：</span></p> \n<pre class=\"prettyprint lang-bsh\">chown -R apache:apache /data/www/default/owncloud/</pre> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">浏览器打开网址执行安装步骤：</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;color:#003399;\">http://VPS的公网IP地址/owncloud/</span></p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">你要建立一个管理员帐号，输入必填的用户名和密码就完成了。为了配置数据库，点“Advanced” 选择MySQL，然后输入MySQL的数据库名、用户名和密码。点击“Finish”完成安装过程。如下图：</span><br /> <img src=\"https://teddysun.com/wp-content/uploads/2013/05/owncloud_install.png\" alt=\"owncloud_install\" title=\"owncloud_install\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">安装完成后，弹出欢迎界面，给出各种客户端的同步工具下载。如下图（<strong>点击可看大图</strong>）：</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/05/owncloud_welcome.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/owncloud_welcome_small.png\" alt=\"owncloud_welcome\" title=\"owncloud_welcome\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:16px;font-family:Microsoft YaHei;\"><strong>3、安装桌面同步或移动客户端等</strong></span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">打开链接：<a target=\"_blank\" href=\"http://owncloud.org/install/\"><span style=\"font-family:Courier New;\">http://owncloud.org/install/</span></a>，有适用于Windows, Mac OS X， Linux， iOS， Android客户端。选择下载，安装即可。</span></p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">桌面同步客户端可以连续同步、选择文件夹同步、多文件夹同步。多文件夹同步是你可以同步对多个文件夹位置进行同步到多个ownCloud文件夹下。</span></p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">ownCloud的使用过程基本跟主流云存储服务商雷同，就不一一细述了。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">这是一个面向企业或者个人的私有云存储系统，<span style=\"color:red;\">让用户在各大服务商提供的服务之外能有别的选择</span>。至少，数据是真正掌握在自己手中的。</span></p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;color:red;\"><strong>延伸阅读：</strong></span><br /> <a target=\"_blank\" href=\"http://www.guokr.com/article/436968/\"><span style=\"font-size:14px;font-family:Microsoft YaHei;\">上传到云端的财产，还属于你吗？</span></a><br /> <a target=\"_blank\" href=\"http://www.geekpark.net/read/view/178731\"><span style=\"font-size:14px;font-family:Microsoft YaHei;\">迷失在云端：谁来保护我们的虚拟财产？</span></a></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/200.html\">ownCloud：你的专属私有云</a></p>","descriptionType":"html","publishedDate":"Tue, 14 May 2013 10:22:26 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/owncloud_logo.png","linkMd5":"9843ffee10e5beac6c84cd4d7d4a521d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn60@2020_5/2020/08/25/00-30-54-013_23561b365956531d.webp","destWidth":520,"destHeight":258,"sourceBytes":30752,"destBytes":22190,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/owncloud_logo.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn60@2020_5/2020/08/25/00-30-54-013_23561b365956531d.webp","https://teddysun.com/wp-content/uploads/2013/05/owncloud_install.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn3@2020_2/2020/08/25/00-31-00-379_9454621f9e202ec8.webp","https://teddysun.com/wp-content/uploads/2013/05/owncloud_welcome_small.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn4@2020_6/2020/08/25/00-30-57-386_74f24f7efaebff19.webp"},"publishedOrCreatedDate":1598315426744},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"安装PHP的PDO MySQL扩展","link":"https://teddysun.com/?p=320","description":"<p><a href=\"https://teddysun.com/320.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/11/php.png\" alt=\"PHP\" title=\"安装PHP的PDO MySQL扩展\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　今天在寻思着安装 Drupal 玩一下，在安装的过程中发现数据库选项只支持 SQLite 而没有 MySQL。纳尼？为什么会这样？结果发现没有编译安装PDO MySQL导致的。于是赶紧更新<a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP一键安装脚本</a>。</span><br /> <span style=\"font-size:14px;\">　　PHP Data Objects(PDO)扩展为 PHP 访问数据库定义了一个轻量级的一致接口。实现 PDO 接口的每个数据库驱动可以公开具体数据库的特性作为标准扩展功能。注意利用 PDO 扩展自身并不能实现任何数据库功能；必须使用一个具体数据库的 PDO 驱动来访问数据库服务。</span></p> \n<p> <span id=\"more-320\"></span> </p> \n<p> <span style=\"font-size:14px;\">记录安装 PDO MySQL 扩展过程。</span></p> \n<p><span style=\"font-size:14px;\">参考官方的安装文档后发现，在编译安装 PHP 时加上 –with-pdo-mysql[=DIR] 参数即可安装 PDO MySQL 扩展。其中的[=DIR]是可选的，是指 MySQL 的安装目录。</span><br /> <span style=\"font-size:14px;\">另外，需要用到 –with-mysql-sock[=DIR] 参数来设置全部 MySQL 的扩展的 unix socket 指针。</span></p> \n<p><span style=\"font-size:14px;\">最终，在我的<a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP一键安装脚本</a>中，指定的参数如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">./configure --with-pdo-mysql --with-mysql-sock=/usr/local/mysql/mysql.sock</pre> \n<p><br /> <span style=\"font-size:14px;\">目前，<a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP一键安装脚本</a>已更新。已经安装该脚本的用户，可以运行 update.sh 脚本，重新编译安装一次即可。附安装完PDO MySQL扩展后的 phpinfo 截图如下：</span></p> \n<p><img src=\"https://teddysun.com/wp-content/uploads/2013/11/pdo_mysql.png\" alt=\"PDO MySQL\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></p> \n<p><span style=\"font-size:14px;color:blue;\"><strong>参考链接：</strong></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://www.php.net/manual/en/intro.pdo.php\" target=\"_blank\">http://www.php.net/manual/en/intro.pdo.php</a></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://www.php.net/manual/en/ref.pdo-mysql.php\" target=\"_blank\">http://www.php.net/manual/en/ref.pdo-mysql.php</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/320.html\">安装PHP的PDO MySQL扩展</a></p>","descriptionType":"html","publishedDate":"Thu, 28 Nov 2013 09:40:57 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/11/php.png","linkMd5":"9a9792f9dca2646ef9e13e2f7f3808f3","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn79@2020_4/2020/08/25/00-30-51-823_98db429a3ce60c2f.webp","destWidth":600,"destHeight":318,"sourceBytes":73085,"destBytes":20966,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/11/php.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn79@2020_4/2020/08/25/00-30-51-823_98db429a3ce60c2f.webp","https://teddysun.com/wp-content/uploads/2013/11/pdo_mysql.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn43@2020_6/2020/08/25/00-30-57-951_f83089c1409d48e0.webp"},"publishedOrCreatedDate":1598315426737},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"网站被迫搬家","link":"https://teddysun.com/?p=166","description":"<p><a href=\"https://teddysun.com/wp-content/uploads/2013/04/downtime.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/downtime.png\" alt=\"downtime\" title=\"网站宕机\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　一早刚起来就收到Dnspod监控给我发来的微信，提醒我网站在7点12分的时候宕机了。我以为是遭到了攻击，毕竟这两天不太平，Wordpress的网站大规模的被搞，小站扛不住挂了也是理所当然的。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　putty和winscp都无法连接，于是我进入到StyleXnetworks后台，发现连Console也无法进入了。最后一招当然就是reboot了，等了半小时左右，显示进度的菊花还在那转呀转。搞得我很不爽，发了Ticket才知道是服务商的问题，给我的回复是：</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\">　　I really apologize for the inconvenience, however our SAN head unit has been bricked and we are waiting for a replacement. ETA <span style=\"color:red;\">10-12</span> hours. Contact billing for a full month of compensation.</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　尼玛居然要10-12个小时，而且这么大的事情连个邮件通知都没有，非得发了Ticket才告诉，没办法了，还是搬家吧。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　从买VPS到编译环境到恢复数据，整个过程花费了3小时40分钟。数据完好无损。感谢Google Drive，感谢wp-google-drive插件，感谢CCAV，感谢党感谢国家！</span></p> \n<div> \n <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"></span> \n</div> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/166.html\">网站被迫搬家</a></p>","descriptionType":"html","publishedDate":"Tue, 16 Apr 2013 03:30:29 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/04/downtime.png","linkMd5":"529e16be0c9b90a34230c6a2b36d10b4","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn11@2020_5/2020/08/25/00-30-52-891_8ee47a105faa604b.webp","destWidth":530,"destHeight":398,"sourceBytes":64269,"destBytes":16566,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/04/downtime.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn11@2020_5/2020/08/25/00-30-52-891_8ee47a105faa604b.webp"},"publishedOrCreatedDate":1598315426747},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"解决pip安装M2Crypto失败的问题","link":"https://teddysun.com/?p=440","description":"<p><a href=\"https://teddysun.com/440.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg\" alt=\"Linux\" title=\"解决pip安装M2Crypto失败\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">M2Crypto 是最完整的为 Python 包装 OpenSSL 的 RSA，DSA，DH，EC，HMACs，消息摘要，对称密码算法（包括AES）的一个库工具。</span><br /> <span style=\"font-size:14px;\">而自从 M2Crypto 升级到版本 0.22.5 后，用 pip install M2Crypto 命令来安装 M2Crypto 时总是会失败。</span><br /> <span style=\"font-size:14px;\">在没有升级到此版本之前，使用 pip 安装则是没有问题的。下面来找找原因。</span><br /> <span style=\"font-size:14px;\">系统环境：CentOS 6.7 x86</span><br /> <span style=\"font-size:14px;\">失败关键字：swig</span></p> \n<p> <span id=\"more-440\"></span> </p> \n<p><span style=\"font-size:14px;\">失败现象：</span></p> \n<pre class=\"prettyprint lang-bsh\">swigging SWIG/_m2crypto.i to SWIG/_m2crypto_wrap.c\nswig -python -I/usr/include/python2.6 -I/usr/include -includeall -modern -builtin -outdir build/lib.linux-i686-2.6/M2Crypto -D__i386__ -o SWIG/_m2crypto_wrap.c SWIG/_m2crypto.i\nswig error : Unrecognized option -builtin\nUse 'swig -help' for available options.\nerror: command 'swig' failed with exit status 1</pre> \n<p> <span style=\"font-size:14px;\">这里有个最为明显的错误提示：</span><br /> <span style=\"font-size:14px;\">swig error : Unrecognized option -builtin</span></p> \n<p><span style=\"font-size:14px;\">这说明，系统里安装的 swig 是没有 -builtin 这个选项的。来看看系统装的 swig 版本。</span><br /> <span style=\"font-size:14px;\">rpm -qa | grep swig</span><br /> <span style=\"font-size:14px;\">返回：</span><br /> <span style=\"font-size:14px;\">swig-1.3.40-6.el6.i686</span><br /> <span style=\"font-size:14px;\">是不是版本比较旧的缘故导致的呢？再来看看 swig 的帮助。</span><br /> <span style=\"font-size:14px;\">swig -help</span><br /> <span style=\"font-size:14px;\">看到其中有：</span><br /> <span style=\"font-size:14px;\">Note: ‘swig -&lt;lang&gt; -help’ displays options for a specific target language.</span><br /> <span style=\"font-size:14px;\">因为是涉及到 Python，换个命令来看看。</span><br /> <span style=\"font-size:14px;\">swig -python -help</span><br /> <span style=\"font-size:14px;\">返回（节选）：</span><br /> <span style=\"font-size:14px;\">-buildnone &nbsp; &nbsp; &nbsp;– Use Py_BuildValue() to obtain Py_None (default in Windows)</span><br /> <span style=\"font-size:14px;\">注意其中的 options，果然是没有 -builtin 这个选项的。</span></p> \n<p><span style=\"font-size:14px;\">好吧很明显，安装 M2Crypto 所依赖的 swig 版本升级了，而 CentOS 默认的 swig 版本过低了。</span><br /> <span style=\"font-size:14px;\">下面来升级 swig 版本。<a href=\"http://www.swig.org\" target=\"_blank\">官网</a>最新版已经到了 3.0.7 了，就编译安装此版本的。</span></p> \n<pre class=\"prettyprint lang-bsh\">wget -O swig-3.0.7.tar.gz http://prdownloads.sourceforge.net/swig/swig-3.0.7.tar.gz\ntar zxf swig-3.0.7.tar.gz\ncd swig-3.0.7\n./configure --prefix=/usr\nmake &amp;&amp; make install</pre> \n<p> <span style=\"font-size:14px;\">安装完成后，再来看一下版本号。</span><br /> <span style=\"font-size:14px;\">swig -version</span><br /> <span style=\"font-size:14px;\">返回：</span><br /> <span style=\"font-size:14px;\">SWIG Version 3.0.7</span></p> \n<p><span style=\"font-size:14px;\">至此，升级 swig 完成。再来看看新版本的 swig 到底有没有 -builtin 这个选项。</span><br /> <span style=\"font-size:14px;\">swig -python -help</span><br /> <span style=\"font-size:14px;\">返回（节选）：</span><br /> <span style=\"font-size:14px;\">-buildnone &nbsp; &nbsp; &nbsp;– Use Py_BuildValue() to obtain Py_None (default in Windows)</span><br /> <span style=\"font-size:14px;\">-builtin &nbsp; &nbsp; &nbsp; &nbsp;– Create new python built-in types, rather than proxy classes, for better performance</span></p> \n<p><span style=\"font-size:14px;\">果然如此。既然如此，那赶紧继续用 pip 安装 M2Crypto 吧。</span><br /> <span style=\"font-size:14px;\">pip install M2Crypto</span></p> \n<p><span style=\"font-size:14px;\">Boom，又出错了。错误信息如下：</span></p> \n<pre class=\"prettyprint\">swigging SWIG/_m2crypto.i to SWIG/_m2crypto_wrap.c\nswig -python -I/usr/include/python2.6 -I/usr/include -includeall -modern -builtin -outdir build/lib.linux-i686-2.6/M2Crypto -D__i386__ -o SWIG/_m2crypto_wrap.c SWIG/_m2crypto.i\n/usr/include/openssl/opensslconf.h:13: Error: Unable to find 'opensslconf-i386.h'\nerror: command 'swig' failed with exit status 1</pre> \n<p> <span style=\"font-size:14px;\">原因是什么呢？M2Crypto 没找到 openssl 的头文件 opensslconf-i386.h</span><br /> <span style=\"font-size:14px;\">如果是在 x86_64 下安装的话，会找不到 opensslconf-x86_64.h</span></p> \n<p><span style=\"font-size:14px;\">怎么办呢？看来是不能通过 pip 来安装了，那我们手动来。</span></p> \n<pre class=\"prettyprint lang-bsh\">wget --no-check-certificate -O M2Crypto-0.22.5.tar.gz https://pypi.python.org/packages/source/M/M2Crypto/M2Crypto-0.22.5.tar.gz\ntar zxf M2Crypto-0.22.5.tar.gz\ncd M2Crypto-0.22.5\ncp /usr/include/openssl/opensslconf-i386.h ./  #手动把头文件复制过来（适用于x86）\ncp /usr/include/openssl/opensslconf-x86_64.h ./  #手动把头文件复制过来（适用于x86_64）\npython setup.py install</pre> \n<p> <span style=\"font-size:14px;\">好了，这下终于安装完成了。看看成果：</span><br /> <span style=\"font-size:14px;\">pip list | grep M2Crypto</span><br /> <span style=\"font-size:14px;\">返回：</span><br /> <span style=\"font-size:14px;\">M2Crypto (0.22.5)</span></p> \n<p><span style=\"font-size:14px;\">后来我去到 M2Crypto 的官网去看了下，已经有人跟作者反映了这个事情。</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"https://gitlab.com/m2crypto/m2crypto/issues/69\" target=\"_blank\">https://gitlab.com/m2crypto/m2crypto/issues/69</a></span><br /> <span style=\"font-size:14px;\">希望作者能在下个版本改进吧。</span><br /> <span style=\"font-size:14px;\"></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/440.html\">解决pip安装M2Crypto失败的问题</a></p>","descriptionType":"html","publishedDate":"Mon, 30 Nov 2015 02:40:43 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg","linkMd5":"3e0fa8363a08c521486ab749d7be450b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn34@2020_3/2020/08/25/00-30-52-039_da8898b7cb91c054.webp","destWidth":741,"destHeight":316,"sourceBytes":21400,"destBytes":15404,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn34@2020_3/2020/08/25/00-30-52-039_da8898b7cb91c054.webp"},"publishedOrCreatedDate":1598315426724},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"网站遭遇大规模暴力破解攻击","link":"https://teddysun.com/?p=164","description":"<p><a href=\"https://teddysun.com/wp-content/uploads/2013/04/wordpresstarget.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/wordpresstarget.png\" alt=\"wordpresstarget\" title=\"wordpress被攻击\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　看<a href=\"http://cnbeta.com/articles/233546.htm\" target=\"_blank\">新闻</a>说，用WordPress搭建的网站在过去几天里遭到了大规模的暴力破解攻击，攻击者首先扫描互联网上的Wordpress网站，然后利用Web服务器组建的僵尸网络不断尝试用户名和密码试图登录管理界面。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　我想这不是危言耸听，而是真的行动，这几日的确有人不断的在尝试登录我的后台，并逐渐智能地判断出我的登录用户名。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　一开始的扫描是从默认的admin开始的。</span></p> \n<p> <span id=\"more-164\"></span> </p> \n<p><a href=\"https://teddysun.com/wp-content/uploads/2013/04/wordpresstarget_1.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/wordpresstarget_1.png\" alt=\"wordpresstarget\" title=\"wordpress被攻击\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　经过不断的试错，或者说，被有心之人盯上了，从而找到了正确的用户名。IP来自于不同的国家，有巴西，捷克，印度等。目前可以知道的是，攻击者是利用肉鸡连续不断的尝试登录后台，企图暴力破解。我的后台显示User Agent是Mozilla/3.0 (compatible; Indy Library)。由于Wordpress的默认后台地址就是wp-admin，所以全部的登录后Redirect都指向后台。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/04/wordpresstarget_2.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/wordpresstarget_2.png\" alt=\"wordpresstarget\" title=\"wordpress被攻击\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　如何保护自己的小站呢？毕竟是我辛辛苦苦建设的网站，可不想就这么被搞。（由此可见，破坏永远远比建设容易）</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"font-size:16px;\"><strong>1、常规备份</strong></span></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　我用的是<a href=\"https://teddysun.com/53.html\" target=\"_blank\">wp-google-drive插件</a>，经过我自己的汉化，同时优化了备份的文件名。常规备份是每天一次。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"font-size:16px;\"><strong>2、跟进官网更新</strong></span></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　不管是Wordpress程序还是其插件，需要在第一时间跟进到最新版本。因为WordPress每次升级都包含一些安全措施的修补。如果你没有及时更新，你的网站就存在漏洞，这样的网站就处于危险之中。同理，插件也是。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"font-size:16px;\"><strong>3、立即更改密码</strong></span></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　如果你的网站被人暴力破解了，那肯定是因为你设置的密码<span style=\"color:#E53333;\">太弱</span>了。要知道现在一个8位的字母加数字组合，用不了半天就会被破。为此，你需要设置更长更强壮的密码，尽最大可能地用到大小写字母、数字、特殊符号，并且至少要达到15位。真正的密码应该是随机的、毫无意义的字母、数字和特殊符号的组合。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"font-size:16px;\"><strong>4、保护/wp-admin/文件夹</strong></span></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　由于WordPress默认的管理后台就是/wp-admin/文件夹，所以我们应该尽可能的避免别人访问这个文件夹里面的文件。在/wp-admin/文件夹里面新建个.htaccess文件，用来限制IP登录吧。</span></p> \n<p>AuthUserFile /dev/null<br /> AuthGroupFile /dev/null<br /> AuthName “Example Access Control”<br /> AuthType Basic<br /> &lt;LIMIT GET&gt;<br /> order deny,allow<br /> deny from all<br /> allow from xxx.xxx.xxx.xxx<br /> allow from xxx.xxx.xxx.xxx<br /> &lt;/LIMIT&gt;</p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　将xxx.xxx.xxx.xxx换成你当前的IP地址，如果你用的是固定IP则更好，如果不是的话（ADSL常常IP不固定），那只好麻烦一点，每次登录后台前获取一下你的IP地址，然后修改此文件，将当前IP加入该.htaccess文件中。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　网站安全靠个人，为了你的成果，你必须像个斗士一样去保护它。做一些措施，行动起来吧。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/164.html\">网站遭遇大规模暴力破解攻击</a></p>","descriptionType":"html","publishedDate":"Mon, 15 Apr 2013 02:45:55 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/04/wordpresstarget.png","linkMd5":"9b25a5acdb2d90476d802ef041aece70","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn55@2020_6/2020/08/25/00-30-53-970_261c2f99c79d6c55.webp","destWidth":352,"destHeight":344,"sourceBytes":32618,"destBytes":8734,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/04/wordpresstarget.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn55@2020_6/2020/08/25/00-30-53-970_261c2f99c79d6c55.webp","https://teddysun.com/wp-content/uploads/2013/04/wordpresstarget_1.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn86@2020_3/2020/08/25/00-30-57-127_74ac394c5715995a.webp","https://teddysun.com/wp-content/uploads/2013/04/wordpresstarget_2.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn96@2020_5/2020/08/25/00-30-58-839_447e3a49103c214d.webp"},"publishedOrCreatedDate":1598315426747},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"利用iptables屏蔽俄罗斯和土耳其的IP","link":"https://teddysun.com/?p=284","description":"<p><a href=\"https://teddysun.com/284.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/10/block.jpg\" alt=\"block\" title=\"利用iptables屏蔽俄罗斯和土耳其的IP\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　自从用上了 VPS 后，发现大量的网络攻击无时无刻都存在，比如被扫描端口，被暴力破解，被猜解后台密码，被垃圾评论骚扰。一段时间以来，我发现来自俄罗斯和土耳其的 IP 攻击最多，而我的网站是中文，阅读者大多数来自中国。因此屏蔽这两个国家的 IP 段是不会使网站访问受影响，反而会减少攻击。</span><br /> <span style=\"font-size:14px;\">　　那么，如何屏蔽来自俄罗斯和土耳其的 IP 呢？（请举一反三，屏蔽其他国家 IP 方法也是一样的）</span></p> \n<p> <span id=\"more-284\"></span> </p> \n<p><span style=\"font-size:14px;\">　　网上流传的在 <a href=\"http://www.ipdeny.com/ipblocks/\" target=\"_blank\">IPdeny </a>下载俄罗斯和土耳其的 IP 地址列表全为空，因此我找到了</span><a href=\"https://www.countryipblocks.net/country_selection.php\" target=\"_blank\"><span style=\"font-size:14px;\">countryipblocks</span></a><span style=\"font-size:14px;\">（需翻，国内 IP 无法访问），选择俄罗斯和土耳其，生成 CIDR，分别复制并保存为 ru.zone 和 tr.zone。</span></p> \n<p><a href=\"https://teddysun.com/wp-content/uploads/2013/10/blockip.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/10/blockip.png\" alt=\"countryipblocks\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　获取了国家的所有 IP 地址后，要想屏蔽这些 IP 就很容易了，写个脚本逐行读取 ru.zone 和 tr.zone 文件并加入到 iptables 中即可。</span></p> \n<p><span style=\"font-size:14px;\">　　</span><a href=\"https://teddysun.com/wp-content/uploads/block_ru_tr.sh\" target=\"_blank\"><span style=\"font-size:14px;\"><b>本地下载</b></span></a></p> \n<p><span style=\"font-size:14px;\"><b>　　使用方法：</b></span></p> \n<pre class=\"prettyprint lang-bsh\">wget https://teddysun.com/wp-content/uploads/block_ru_tr.sh\nchmod +x block_ru_tr.sh\n./block_ru_tr.sh</pre> \n<p><span style=\"font-size:14px;\">　　该脚本执行完毕后，屏蔽日志位于当前目录下的blockedip.log文件中。有8791行。</span></p> \n<p><span style=\"font-size:14px;color:blue;\">　　该脚本在测试时，发现在基于 OpenVZ 的 VPS 中执行会出现“iptables: Memory allocation problem.”错误，原因是基于 OpenVZ 的 VPS 超售严重而导致内存分配不足。在基于 Xen 的 VPS 中执行则完全没有问题。</span></p> \n<p><span style=\"font-size:14px;\">　　其实还可以通过 .htaccess 规则来限制这两个国家的 IP 访问。方法如下：</span><br /> <span style=\"font-size:14px;\">　　在 countryipblocks 的页面，选择 .htaccess Deny，再分别选择国家 RUSSIAN FEDERATION 和 TURKEY，点击“Creat ACL”按钮即可生成 .htaccess 规则。复制粘贴到文本文件中，上传至 wordpress 根目录下，并改名为 .htaccess，如果该文件已经存在，则需要将在线生成的 .htaccess 屏蔽 IP 规则添加至 # BEGIN WordPress 和 # END WordPress 之间即可。</span></p> \n<p><span style=\"font-size:14px;\">　　另：我还发现大量的垃圾评论的 IP 都来自福建莆田，也不知何故，难道说是这个地方的肉鸡多？</span></p> \n<div> \n</div> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/284.html\">利用iptables屏蔽俄罗斯和土耳其的IP</a></p>","descriptionType":"html","publishedDate":"Wed, 09 Oct 2013 13:15:17 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/10/block.jpg","linkMd5":"e49db512b423874d228adf7854e9c6e2","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn56@2020_5/2020/08/25/00-30-51-910_4e00761999d2bffd.webp","destWidth":600,"destHeight":400,"sourceBytes":61556,"destBytes":28332,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/10/block.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn56@2020_5/2020/08/25/00-30-51-910_4e00761999d2bffd.webp","https://teddysun.com/wp-content/uploads/2013/10/blockip.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn91@2020_5/2020/08/25/00-30-59-494_0c0f349c50326f07.webp"},"publishedOrCreatedDate":1598315426739},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"poco图片站被ESET Smart Security 6拦截的解决办法","link":"https://teddysun.com/?p=162","description":"<p><a href=\"https://teddysun.com/wp-content/uploads/2013/04/poco_eset1.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/poco_eset1.png\" alt=\"poco block\" title=\"poco block1\" class=\"aligncenter\" style=\"width:auto;height:auto;\" height=\"315\" width=\"560\" /></a><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">poco作为国内著名的图片社区站，很多网站引用了其外链。但是最近遇到了诺顿的杀毒软件套装ESET Smart Security 6或杀毒软件ESET NOD32 Antivirus将poco列入内部黑名单而频频阻止访问，并弹出窗口如上图。</span></p> \n<p> <span id=\"more-162\"></span> </p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">日志文件如下图。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/04/poco_eset2.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/poco_eset2.png\" alt=\"poco block\" title=\"poco block2\" class=\"aligncenter\" style=\"width:auto;height:auto;\" height=\"315\" width=\"560\" /></a></p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">网上有人说现在用http://img14.poco.cn/做图床的网页图片都打不开了，我把网址添加到不过滤的地址列表和允许的地址列表还是没用。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">实际上，经过亲测只需将poco的整站域名添加到不过滤的地址列表即可。操作流程如下：</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">软件主界面–&gt;设置–&gt;进入高级设置–&gt;Web和电子邮件–&gt;Web访问保护–&gt;URL地址管理，选中“不过滤的地址列表”，点击“添加(A)”按钮，在弹出的框里填“<span style=\"color:red;\">*poco.cn*</span>”，见下图红色框框部分。注意不要将双引号也填进去了。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/04/poco_eset3.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/poco_eset3.png\" alt=\"poco block\" title=\"poco block3\" class=\"aligncenter\" style=\"width:auto;height:auto;\" height=\"315\" width=\"560\" /></a></p> \n<p><span style=\"font-size:14px;font-family:Microsoft YaHei;\">最后点击“确认”，保存即可。</span><br /> <span style=\"font-size:14px;font-family:Microsoft YaHei;\">再刷新网站，应该就再不会出现弹出窗口阻止了。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/162.html\">poco图片站被ESET Smart Security 6拦截的解决办法</a></p>","descriptionType":"html","publishedDate":"Fri, 12 Apr 2013 12:56:27 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/04/poco_eset1.png","linkMd5":"d26ae5fd21b1a1cc97262cbf9e53b886","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn3@2020_2/2020/08/25/00-30-53-465_0d8c8214b30f513e.webp","destWidth":352,"destHeight":182,"sourceBytes":7946,"destBytes":8962,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/04/poco_eset1.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn3@2020_2/2020/08/25/00-30-53-465_0d8c8214b30f513e.webp","https://teddysun.com/wp-content/uploads/2013/04/poco_eset2.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn22@2020_1/2020/08/25/00-31-01-810_c68682598d2f48e0.webp","https://teddysun.com/wp-content/uploads/2013/04/poco_eset3.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn50@2020_2/2020/08/25/00-31-01-222_2f88b273ee71dbcf.webp"},"publishedOrCreatedDate":1598315426747},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"使用youtube-dl下载YouTube视频","link":"https://teddysun.com/?p=282","description":"<p><a href=\"https://teddysun.com/282.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/10/YouTube.jpg\" alt=\"YouTube\" title=\"使用youtube-dl下载YouTube视频\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"><a href=\"http://youtube-dl.org\" target=\"_blank\">youtube-dl</a>是一个使用python编写的脚本，可以下载热门视频网站的视频。在Linux系统下可以一健下载Youtube、Youku、Tudou等热门网站的视频，甚至是一些XXX站的视频下载，如YouPorn、XVideos等。下面介绍使用方法。</span></p> \n<p> <span id=\"more-282\"></span> </p> \n<p><span style=\"font-size:14px;\"><b>1、环境确认</b></span><br /> <span style=\"font-size:14px;\">youtube-dl需要Python 2.6以上的版本。因此需要先确认安装的Python版本。默认CentOS6.x是安装了2.6.6。通过以下命令可以查看版本：</span><br /> <span style=\"font-size:14px;\">python –version</span></p> \n<p><span style=\"font-size:14px;\">若是CentOS5.x，则需要编译安装新版本。参考《</span><a href=\"https://teddysun.com/215.html\" target=\"_blank\"><span style=\"font-size:14px;\">CentOS 6.4安装Python2.7.5</span></a><span style=\"font-size:14px;\">》，在CentOS5.x下编译安装步骤是一样的。</span></p> \n<p><span style=\"font-size:14px;\"><b>2、下载安装</b></span><br /> <span style=\"font-size:14px;\">youtube-dl直接下载最新版到/usr/local/bin/目录下并赋予权限即可使用。命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://youtube-dl.org/latest/youtube-dl -O /usr/local/bin/youtube-dl\nchmod a+x /usr/local/bin/youtube-dl</pre> \n<p> <span style=\"font-size:14px;\"><b>3、用法</b></span><br /> <span style=\"font-size:14px;\">使用帮助命令查看其用法：</span></p> \n<pre class=\"prettyprint lang-bsh\">youtube-dl -h</pre> \n<p> <span style=\"font-size:14px;\">一些常用的参数：</span></p> \n<pre class=\"prettyprint lang-bsh\">youtube-dl --list-extractors  #查看支持网站列表\nyoutube-dl -U  #程序升级\nyoutube-dl --get-format URL #获取视频格式\nyoutube-dl -F URL #获取所有格式（目前仅支持YouTube），例如：\nyoutube-dl -F http://www.youtube.com/watch?v=n-BXNXvTvV4\n[youtube] Setting language\n[youtube] n-BXNXvTvV4: Downloading video webpage\n[youtube] n-BXNXvTvV4: Downloading video info webpage\n[youtube] n-BXNXvTvV4: Extracting video information\nAvailable formats:\n37      :       mp4     [1080x1920]\n46      :       webm    [1080x1920]\n22      :       mp4     [720x1280]\n45      :       webm    [720x1280]\n35      :       flv     [480x854]\n44      :       webm    [480x854]\n34      :       flv     [360x640]\n18      :       mp4     [360x640]\n43      :       webm    [360x640]\n5       :       flv     [240x400]\n36      :       3gp     [240x320]\n17      :       3gp     [144x176]\n137     :       mp4     [1080p] (DASH Video)\n136     :       mp4     [720p] (DASH Video)\n135     :       mp4     [480p] (DASH Video)\n134     :       mp4     [360p] (DASH Video)\n133     :       mp4     [240p] (DASH Video)\n160     :       mp4     [192p] (DASH Video)\n141     :       mp4     [256k] (DASH Audio)\n172     :       webm    [256k] (DASH Audio)\n140     :       mp4     [128k] (DASH Audio)\n171     :       webm    [128k] (DASH Audio)\n139     :       mp4     [48k] (DASH Audio)\n\nyoutube-dl -f format URL #下载指定格式的视频，这里以下载1080p原画质量的视频格式为例:\nyoutube-dl -f 137 http://www.youtube.com/watch?v=n-BXNXvTvV4</pre> \n<p> <span style=\"font-size:14px;color:red;\"><b>补充说明：</b></span><br /> <span style=\"font-size:14px;\">我在VPS上试了试，下载YouTube的1080p速度飞快，几百兆的视频几乎瞬间搞定。下载回来重命名一下，放到Apache的htdoc目录里，再用百度或迅雷的离线下载拖回来，如此收藏YouTube视频易如反掌。</span></p> \n<p><span style=\"font-size:14px;color:blue;\"><b>参考链接：</b></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://www.zhukun.net/archives/6785\" target=\"_blank\">http://www.zhukun.net/archives/6785</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/282.html\">使用youtube-dl下载YouTube视频</a></p>","descriptionType":"html","publishedDate":"Mon, 07 Oct 2013 05:09:10 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/10/YouTube.jpg","linkMd5":"d981277181f19c60cda4298fd9f0e3ba","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn16@2020_1/2020/08/25/00-30-53-439_9f9f12ab6dd82dcc.webp","destWidth":620,"destHeight":359,"sourceBytes":19044,"destBytes":16462,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/10/YouTube.jpg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn16@2020_1/2020/08/25/00-30-53-439_9f9f12ab6dd82dcc.webp"},"publishedOrCreatedDate":1598315426761},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"毒战，团灭战","link":"https://teddysun.com/?p=219","description":"<p><a href=\"https://teddysun.com/wp-content/uploads/2013/06/duzhan_large.jpg\"><img src=\"https://teddysun.com/wp-content/uploads/2013/06/duzhan.jpg\" title=\"毒战，团灭战\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　如果这部电影不打着杜琪峰的招牌，想必是没法在国内上映的，至少在大陆是没法上映。按照广电总局的调调，抽烟的镜头都不能给特写，更何况还有枪战，吸食毒品的画面，一览无余的暴力和血腥。100分钟的电影，灰色，写实，残酷，团灭。我想这几个关键字可以作为对这部电影的总结。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　剧情上，古天乐饰演的蔡添明一边开车一边狂吐并失控撞进商店，一起车祸引发了孙红雷饰演的缉毒队长张雷的注意力。蔡添明的制毒工厂发生爆炸，他侥幸逃脱却落入警察之手，自知难有活路的他跟警方合作，力图挖出藏在幕后的毒枭和捣毁贩毒网络。在此过程中他却包藏祸心几度想反水逃跑，最终却害死了警匪双方所有的人，自己也落得了注射死刑的下场。</span></p> \n<p> <span id=\"more-219\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　顾名思义，从电影的名字就能看出来，这并不是一部轻松的电影，它黑色，压抑，血腥，紧张，刺激。表现的是十足的正邪较量，毒贩蔡添明与缉毒队长张雷玩的是猫和老鼠的游戏，一个想一网打尽，一个想逃出生天，各自有着不同的算盘，同时也是生死相搏的斗智斗勇。蔡添明是个有着丰富经验的毒贩，他并非是存有待罪立功之心，而是时刻算计着伺机而逃。为求活命他可谓是不择手段、大耍阴谋诡计，说着帮警察抓毒贩的谎言，给警察设下一个又一个圈套，最终导致缉毒警队全军覆灭。而且，他接二连三出卖同伙的行径也颇耐人寻味。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　导演杜琪峰并不仁慈，甚至有点腹黑。<span style=\"color:red;\">一方代表正义，一方代表邪恶，最后尽数仆街，出乎意料又顺理成章。</span>从一开始蔡添明被抓后，主动要求和警方合作以求得一个死缓，我以为最后会是一个人赃俱获的“大团圆”式结局，正义战胜邪恶，警方灭了毒贩团伙，然后锦旗飘飘，欢欣鼓舞。结局却是，两方人马持手枪对射，每个人都身中数弹，倒地气绝。蔡添明的一句台词“手枪对手枪，怕什么”让我印象深刻，让人不得不吐槽一下警察的装备了，你看大聋小聋还有几杆长家伙呢。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　值得一提的是古天乐的演技真的是无可挑剔，不愧我追过他多年来的每一部电影。在医院与警察周旋的冷静、寻求死缓时的决然、面对亲朋死去的冷血、回忆妻子的苦痛、摆脱警察围困的阴险、执行死刑时的恐惧……一个完整的犯罪者的心路演绎的淋漓尽致。当他被判处死刑，执行注射死亡时，还依旧喋喋不休地讲他所知道的毒贩地点与人物，还保有侥幸心理以此来换取活命的机会，这种矛盾的心理刻画真他妈的细腻。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　不给你“期待”的大团圆，而是将悲剧呈现在你的面前，不分正义和邪恶。我想这大概就是这场团灭战的升华了吧。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　下载链接，点<a href=\"https://teddysun.com/?p=219/ftp://dygod1:dygod1@d245.dygod.org:6003/[%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82www.dy2018.net].%E6%AF%92%E6%88%98.MP4.720x404.%E5%9B%BD%E8%AF%AD%E4%B8%AD%E5%AD%97.mp4\" target=\"_blank\">这里</a>（用迅雷，你懂的）。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/219.html\">毒战，团灭战</a></p>","descriptionType":"html","publishedDate":"Sun, 02 Jun 2013 14:49:15 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/06/duzhan.jpg","linkMd5":"b6a1622f346cda68b157699d95067140","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn72@2020_4/2020/08/25/00-30-53-934_49ae5b36f26d3044.webp","destWidth":520,"destHeight":706,"sourceBytes":157010,"destBytes":61798,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/06/duzhan.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn72@2020_4/2020/08/25/00-30-53-934_49ae5b36f26d3044.webp"},"publishedOrCreatedDate":1598315426743},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"DigitalOcean：给力的VPS","link":"https://teddysun.com/?p=217","description":"<p><a href=\"https://teddysun.com/217.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/DigitalOcean.png\" alt=\"DigitalOcean\" title=\"DigitalOcean：给力的San Francisco数据中心\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　3月份的时候，我写了一篇关于DigitalOcean的评测文章，见《<a href=\"https://teddysun.com/139.html\" target=\"_blank\">又一家VPS：DigitalOcean</a>》。当时DigitalOcean在Ticket中给我的回复是很快上线California的数据中心，然后在4月下旬左右，他们家的San Francisco节点上线了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　如今过去一段时间了，各个关于DigitalOcean的评测文章也出炉了不少，我也就不做重复评测了。不过还是要多说几句，DigitalOcean性价比不错，最低一款配置的价钱仅$5每月（折合人民币31元左右），基于KVM架构，512MB内存，20GB的SSD硬盘，1TB流量。这样的性价比简直接近完美。以我自己的实际使用体会来看，因为San Francisco位于美国西海岸，距离中国的物理距离比较近，网速还是挺优秀的，就算是晚上上网高峰时段，ping值也稳定在150-250ms左右。</span></p> \n<p> <span id=\"more-217\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　这次DigitalOcean的后台经过了较大改版后，变得简洁大方实用。有几个优点要突出说明一下：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　1、DIY方便简单，创建一个Droplet不超过60秒。同时可以自助更换节点。目前的三处节点分别是旧金山(San Francisco)、纽约(New York)和荷兰阿姆斯特丹(Amsterdam)。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　2、计费方式灵活，可以按月或按小时付费（这样你可以创建最大内存的Droplet，玩几天后再删掉，扣费也只会扣那几天的，金额不会太大）。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　3、Ticket回复快，一般不超过10分钟就会回复。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　4、备份简单，支持创建快照（Snapshots）和数据备份（Droplet Backups）。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　5、支持SSH密钥登录系统，省掉密码，更安全。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　6、支持API控制Droplet，通过API可以实现重启、关机、开机、快照、恢复、密码重置、升降级规格、重装系统、重命名、删除等操作。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　7、支持DNS解析到DigitalOcean的nameservers。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　8、付款方式支持信用卡和paypal。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　当然，再好的东西也会有缺点：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　1、不支持Windows，所支持的系统全部是Linux发行版Fedora、Ubuntu、CentOS、Debian。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　2、客服不支持中文，交流沟通都需英文（废话）。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　更多体会，尽在试用，<a href=\"http://goo.gl/lrT5QI\" target=\"_blank\">点此链接进官网</a>注册试用吧。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　最后，我在写这篇文章的时候发现了他们家的官网宕机了。宕机图片很有意思，截图如下（点击看大图）：</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/05/down.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/down_small.png\" alt=\"DigitalOcean\" title=\"DigitalOcean down\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/217.html\">DigitalOcean：给力的VPS</a></p>","descriptionType":"html","publishedDate":"Fri, 31 May 2013 15:30:25 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/DigitalOcean.png","linkMd5":"eb9b2a5b8d6806b513e486b8d06fc019","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn39@2020_4/2020/08/25/00-30-53-988_83cdf3bf8d95dfe5.webp","destWidth":520,"destHeight":263,"sourceBytes":131208,"destBytes":20018,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/DigitalOcean.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn39@2020_4/2020/08/25/00-30-53-988_83cdf3bf8d95dfe5.webp","https://teddysun.com/wp-content/uploads/2013/05/down_small.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn18@2020_5/2020/08/25/00-30-57-393_d7a9691b73072b8e.webp"},"publishedOrCreatedDate":1598315426743},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"LAMP下SSL设置教程","link":"https://teddysun.com/?p=454","description":"<p><a href=\"https://teddysun.com/454.html\"><img src=\"https://teddysun.com/wp-content/uploads/2015/ssl.png\" title=\"LAMP下SSL设置教程\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">https（全称：Hyper Text Transfer Protocol over Secure Socket Layer），是以安全为目标的 http 通道，简单讲是 http 的安全版。即 http 下加入 SSL 层，https 的安全基础是 SSL，因此加密的详细内容就需要 SSL。在各个 Linux 发行版中，实现 SSL 的一般则是 openssl 套件。</span><br /> <span style=\"font-size:14px;\">默认情况下，<a href=\"https://lamp.sh/\" target=\"_blank\">LAMP</a> 是没有开启 SSL 的，需要手动配置。本篇教程主要是将手动配置的过程总结一下。</span><br /> <span style=\"font-size:14px;\">下面将从申请 CSR 开始，一步一步部署 SSL。</span></p> \n<p> <span id=\"more-454\"></span> </p> \n<p> <span style=\"font-size:14px;\"><strong>1、生成证书请求 CSR 文件</strong></span></p> \n<p><span style=\"font-size:14px;\">这里需要用到 openssl 命令，需要安装 openssl。</span><br /> <span style=\"font-size:14px;\">CentOS 下：</span></p> \n<pre class=\"prettyprint lang-bsh\">yum install -y openssl openssl-devel</pre> \n<p><span style=\"font-size:14px;\">Debian 或 Ubuntu 下：</span></p> \n<pre class=\"prettyprint lang-bsh\">apt-get install -y openssl</pre> \n<p> <span style=\"font-size:14px;\">以 RSA 2048 私钥举例，命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">openssl req -new -nodes -newkey rsa:2048 -sha256 -keyout server.pem -out server.csr</pre> \n<p> <span style=\"font-size:14px;\">以 ECC 256 私钥举例，命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">openssl ecparam -out server.pem -name prime256v1 -genkey\nopenssl req -new -key server.pem -out server.csr</pre> \n<p> <span style=\"font-size:14px;\">以上命令，在生成 CSR 的时候会有个交互，如下：</span></p> \n<pre class=\"prettyprint\">You are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [XX]:CN  // 国家代码\nState or Province Name (full name) []:Shanghai  // 省\nLocality Name (eg, city) [Default City]:Shanghai  // 市\nOrganization Name (eg, company) [Default Company Ltd]:Teddysun // 组织或公司名（随便填）\nOrganizational Unit Name (eg, section) []:  // 部门，可不填\nCommon Name (eg, your name or your server's hostname) []:teddysun.com // *则是通配符域名，一般证书发行会自带 www 子域名\nEmail Address []:admin@teddysun.com  // 邮箱地址（一定要有个域名邮箱，用以验证域名所有权）\n\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:  // 不填\nAn optional company name []:  // 不填</pre> \n<p><span style=\"font-size:14px;color:red;\"><strong>注意：</strong></span><br /> <span style=\"font-size:14px;\">这里的 server.pem 即为私钥，需要好好保存，最好你申请下来的证书在配置时，需要用到这个私钥，一旦私钥丢失，该证书就废了，只能重新申请。</span><br /> <span style=\"font-size:14px;\">一般情况下，申请 RSA 2048 的证书就足够了。</span></p> \n<p><span style=\"font-size:14px;\">以上步骤全部做完，则会生成两个文件：</span><br /> <span style=\"font-size:14px;\">server.pem</span><br /> <span style=\"font-size:14px;\">server.csr</span></p> \n<p><span style=\"font-size:14px;\">将其下载回本地，妥善保管。用任意文本编辑器打开 server.csr，用里面的内容去申请证书即可。</span></p> \n<p><span style=\"font-size:14px;\">当然，最好是将这 2 个文件改名为你自己的域名，以方便辨识，比如：</span><br /> <span style=\"font-size:14px;\">teddysun_com.pem</span><br /> <span style=\"font-size:14px;\">teddysun_com.csr</span></p> \n<p><span style=\"font-size:14px;\"><strong>2、申请证书</strong></span></p> \n<p><span style=\"font-size:14px;\">现在市面上应该已经存在 5 种免费 SSL（DV）的提供商了，分别是：</span><br /> <span style=\"font-size:14px;\">1）letsencrypt （<a href=\"https://github.com/certbot/certbot\" target=\"_blank\">https://github.com/certbot/certbot</a>）</span><br /> <span style=\"font-size:14px;\">2）startssl &nbsp;（<a href=\"https://www.startssl.com/\" target=\"_blank\">https://www.startssl.com/</a>）</span><br /> <span style=\"font-size:14px;\">3）wosign &nbsp;（<a href=\"https://buy.wosign.com/free/\" target=\"_blank\">https://buy.wosign.com/free/</a>）</span><br /> <span style=\"font-size:14px;\">4）comodo</span><br /> <span style=\"font-size:14px;\">5）alphassl</span><br /> <span style=\"font-size:14px;\">前 3 种都比较容易申请，后 2 种则需要通过一些途径才能免费获取的到。</span></p> \n<p><span style=\"font-size:14px;\">付费的则五花八门了，这里就不再赘述。</span></p> \n<p><span style=\"font-size:14px;\">申请过程省略。</span></p> \n<p><span style=\"font-size:14px;\">最后你会得到一个证书文件（一般后缀名为 crt）。</span><br /> <span style=\"font-size:14px;color:red;\"><strong>注意：</strong></span><br /> <span style=\"font-size:14px;\">有的证书（比如 comodo 及 alphassl）还需要合并证书链，将你得到的证书以及根证书合并到同一个文件中才能使用。</span><br /> <span style=\"font-size:14px;\">每家的证书链都是不一样的，如果你是用 letsencrypt 申请的话，默认已经是有个完整证书链的证书了。</span><br /> <span style=\"font-size:14px;\">/etc/letsencrypt/live/&lt;domain&gt;/fullchain.pem</span></p> \n<p><span style=\"font-size:14px;color:blue;\">Tips：如何合并证书链？</span><br /> <span style=\"font-size:14px;\">用任意文本编辑器打开你的证书文件（比如名称为：teddysun_com.crt），在文本的最后面添加根证书（teddysun_com.ca-bundle）里的全部内容，保存。</span></p> \n<p><span style=\"font-size:14px;\"><strong>3、部署证书</strong></span></p> \n<p><span style=\"font-size:14px;color:red;\">2017 年 11 月 4 日更新：</span><br /> <span style=\"font-size:14px;color:red;\">LAMP 新增对 Let’s Encrypt 的支持，自动签发免费的证书，并添加自动任务到 crond，定期运行自动更新证书。</span><br /> <span style=\"font-size:14px;color:red;\">LAMP 新增安装自定义证书，交互式搞定配置文件。</span><br /> <span style=\"font-size:14px;color:red;\">详情请浏览：<a href=\"https://lamp.sh/ssl.html\" target=\"_blank\">https://lamp.sh/ssl.html</a></span></p> \n<p><span style=\"font-size:14px;\">在安装完 <a href=\"https://lamp.sh/\" target=\"_blank\">LAMP</a> 环境后，默认是没有加载 SSL 配置的。</span><br /> <span style=\"font-size:14px;\">1）这里需要修改一下配置文件</span><br /> <span style=\"font-size:14px;\">/usr/local/apache/conf/httpd.conf</span><br /> <span style=\"font-size:14px;\">找到下面的一行</span><br /> <span style=\"font-size:14px;\">#Include conf/extra/httpd-ssl.conf</span><br /> <span style=\"font-size:14px;\">将前面的 # 注释去掉，保存。</span></p> \n<p><span style=\"font-size:14px;\">2）将合并后的证书，比如 teddysun_com.crt 和私钥 teddysun_com.pem 复制到路径 /usr/local/apache/conf/ 下。</span></p> \n<p><span style=\"font-size:14px;\">3）修改配置文件 /usr/local/apache/conf/extra/httpd-ssl.conf ，内容如下：</span></p> \n<pre class=\"prettyprint\">Listen 443\nSSLPassPhraseDialog  builtin\nSSLSessionCache  \"shmcb:/usr/local/apache/logs/ssl_scache(512000)\"\nSSLSessionCacheTimeout  300\n\n&lt;VirtualHost *:443&gt;\n    DocumentRoot /data/www/default/\n    ServerName teddysun.com\n    ServerAlias www.teddysun.com\n    ErrorLog \"/usr/local/apache/logs/teddysun_com_error_log\"\n    TransferLog \"/usr/local/apache/logs/teddysun_com_access_log\"\n\n    SSLEngine on\n    SSLProtocol All -SSLv2 -SSLv3\n    SSLHonorCipherOrder on\n    SSLCipherSuite ALL:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA\n\n    SSLCertificateFile /usr/local/apache/conf/teddysun_com.crt\n    SSLCertificateKeyFile /usr/local/apache/conf/teddysun_com.pem\n\n    CustomLog \"/usr/local/apache/logs/teddysun_com_request_log\" \\\n        \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\"\n\n    BrowserMatch \"MSIE [2-5]\" \\\n        nokeepalive ssl-unclean-shutdown \\\n        downgrade-1.0 force-response-1.0\n\n    &lt;Directory /data/www/default/&gt;\n        Options -Indexes +FollowSymLinks\n        AllowOverride All\n        Require all granted\n    &lt;/Directory&gt;\n&lt;/VirtualHost&gt;</pre> \n<p> <span style=\"font-size:14px;color:red;\"><strong>注意：</strong></span><br /> <span style=\"font-size:14px;\">该配置文件是基于 Apache 2.4 而来。</span><br /> <span style=\"font-size:14px;\">VirtualHost 虚拟主机里的配置是可以更改的。</span><br /> <span style=\"font-size:14px;\">1）如果你想指定固定 IP 到该 VirtualHost，把 &lt;VirtualHost *:443&gt; 改为 &lt;VirtualHost 12.34.56.78:443&gt;，这里的 12.34.56.78 是举例 IP</span><br /> <span style=\"font-size:14px;\">2）DocumentRoot 是网站根目录，指定为你自己的目录</span><br /> <span style=\"font-size:14px;\">3）ServerName 是网站主域名，指定为你自己的</span><br /> <span style=\"font-size:14px;\">4）ServerAlias 是网站的其他域名，可定义多行，也可不定义。不定义的话，就删除该行</span><br /> <span style=\"font-size:14px;\">5）ErrorLog 是错误日志，指定具体路径</span><br /> <span style=\"font-size:14px;\">6）TransferLog 是访问日志，指定具体路径</span><br /> <span style=\"font-size:14px;\">7）SSLEngine 必须是 on</span><br /> <span style=\"font-size:14px;\">8）SSLProtocol 是指定 SSL 连接方式，不包含 SSLv2 和 SSLv3，这两种已不安全</span><br /> <span style=\"font-size:14px;\">9）SSLHonorCipherOrder 必须是 on</span><br /> <span style=\"font-size:14px;\">10）SSLCipherSuite 是加密套件，这里去除了一些不再安全的一些方式</span><br /> <span style=\"font-size:14px;\">11）SSLCertificateFile 是证书文件，指定具体路径</span><br /> <span style=\"font-size:14px;\">12）SSLCertificateKeyFile 是证书的私钥文件，指定具体路径</span><br /> <span style=\"font-size:14px;\">13）CustomLog 是自定义日志的格式</span><br /> <span style=\"font-size:14px;\">14）BrowserMatch 是浏览器匹配，这里主要是对微软 IE 旧版本 2-5 进行了定义</span><br /> <span style=\"font-size:14px;\">15）Directory 是和 DocumentRoot 一致的，是对文件夹一些属性的定义</span></p> \n<p><span style=\"font-size:14px;color:#003399;\">参考链接：</span><br /> <span style=\"font-size:14px;\"><a href=\"https://httpd.apache.org/docs/current/mod/mod_ssl.html\" target=\"_blank\">https://httpd.apache.org/docs/current/mod/mod_ssl.html</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://httpd.apache.org/docs/current/mod/mod_setenvif.html\" target=\"_blank\">https://httpd.apache.org/docs/current/mod/mod_setenvif.html</a></span><br /> <span style=\"font-size:14px;\"><a href=\"https://httpd.apache.org/docs/current/mod/core.html#directory\" target=\"_blank\">https://httpd.apache.org/docs/current/mod/core.html#directory</a></span></p> \n<p><span style=\"font-size:14px;\"><strong>4、确认生效</strong></span></p> \n<p><span style=\"font-size:14px;\">在确认以上步骤全部完成，并且正确的情况下，重启 Apache 后即可生效。</span></p> \n<pre class=\"prettyprint lang-bsh\">/etc/init.d/httpd restart</pre> \n<p> <span style=\"font-size:14px;\">查看 httpd 监听的端口，应该会有 443</span></p> \n<pre class=\"prettyprint lang-bsh\">netstat -anp | grep -v grep | grep httpd</pre> \n<p> <span style=\"font-size:14px;\">域名解析好后，使用 Chrome 浏览器访问，你就会看到你的网址前有个可爱的小绿锁了。</span></p> \n<p><span style=\"font-size:14px;\"><strong>5、测评</strong></span></p> \n<p><span style=\"font-size:14px;\">下面就可以来测评一下你的 SSL 部署的得分了。</span><br /> <span style=\"font-size:14px;\">访问以下网址：</span><br /> <span style=\"font-size:14px;\"><a href=\"https://www.ssllabs.com/ssltest/index.html\" target=\"_blank\">https://www.ssllabs.com/ssltest/index.html</a></span></p> \n<p><span style=\"font-size:14px;\">输入你的网站域名，跟上面配置里的 ServerName 的值一致。</span><br /> <span style=\"font-size:14px;\">稍等片刻，就会看到得分了。</span></p> \n<p><span style=\"font-size:14px;\">按照以上配置，正常状态下，得分应该是 <span style=\"color:green;\"><strong>A</strong></span></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/454.html\">LAMP下SSL设置教程</a></p>","descriptionType":"html","publishedDate":"Sun, 26 Jun 2016 05:15:34 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2015/ssl.png","linkMd5":"85b0cdab7cb88d05c2850736f3f3e34e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn71@2020_1/2020/08/25/00-30-54-262_7daa115448c96bd3.webp","destWidth":519,"destHeight":231,"sourceBytes":64255,"destBytes":18782,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2015/ssl.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn71@2020_1/2020/08/25/00-30-54-262_7daa115448c96bd3.webp"},"publishedOrCreatedDate":1598315426723},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Git初学者：msysgit和tortoisegit","link":"https://teddysun.com/?p=333","description":"<p><a href=\"https://teddysun.com/333.html\"><img src=\"https://teddysun.com/wp-content/uploads/2014/Git.png\" title=\"Git初学者：msysgit和tortoisegit\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">Git现在如日中天，要是不会一点都不好意思自称为攻城师。用过CVS、SVN后再用Git，一时半会儿还有点不太适应，就像习惯了Android界面一时适应不了iOS一样。那么，Git与SVN的区别到底是什么？</span><br /> <span style=\"font-size:14px;\"> Git与大部分版本控制系统的差别是很大的，比如Subversion、CVS、Perforce、Mercurial 等等，使用的是“增量文件系统” （Delta Storage systems）, 就是说它们存储每次提交(commit)之间的差异。Git正好与之相反，它会把你的每次提交的文件的全部内容（snapshot）都会记录下来。这会是在使用Git时的一个很重要的理念。</span></p> \n<p> <span id=\"more-333\"></span> </p> \n<p><span style=\"font-size:14px;\"> 以SVN为例，源代码管理是以服务器为中心的，每个开发者都连在服务器上，本地修改，然后commit到svn服务器上。这种做法看似完美，但是有缺陷：</span><br /> <span style=\"font-size:14px;\"> 1、开发者不能本地跟踪代码版本，因为所有的信息都是在服务器上。你把本地的代码改了很多，但是又不能提交。通常，本地只能缓存一个版本。对于小项目无所谓，但是项目一复杂，人员多就麻烦了。通常你本地的代码都全是红色的。自己都不知道今天修改了什么， 有哪些修改是真正应该提交给svn的。</span><br /> <span style=\"font-size:14px;\"> 2、因为第一点，一旦离开服务器你将无法正常工作。因为本地不能跟踪代码版本。 &nbsp;你的几乎任何操作都必须连上服务器。比如，show log，blame，show history等等。</span><br /> <span style=\"font-size:14px;\"> 3、对于大型项目，svn几乎不可用。比如linux内核项目，开发者何止几万？都直接提交给svn服务器的话还不乱套了。</span><br /> <span style=\"font-size:14px;\"> 4、对于个人的项目而言（或者对于小公司的项目），不用版本控制当然不行，但是为了用版本控制而专门架设svn服务器不但麻烦而且浪费。</span><br /> <span style=\"font-size:14px;\"> 当然，以上问题Linux内核的作者Linus Benedict Torvalds也遇到了这些问题，于是他决定再一次改变世界， 重写一个可以本地使用的svn。</span></p> \n<p><span style=\"font-size:14px;\"> Git没有服务器，装上Git软件之后，你就可以指定本地的文件夹进行版本控制了。你可拔掉网线，然后在本地修改，commit，revert（rollback）， branch， restore， show log， blame， history 等等，全部你之前在svn里面可以用的操作。</span><br /> <span style=\"font-size:14px;\"> 如果每个人都自顾自的开发，那么怎么协作呢？通常Git比SVN会多出两个操作，就是 pull 和 push。</span><br /> <span style=\"font-size:14px;\"> 开发者之间通过 pull&nbsp;和 push 操作， 把别人的修改拉过来，或者把自己的修改推给别人。</span></p> \n<p><span style=\"font-size:14px;\"> <a href=\"http://git-scm.com/\" target=\"_blank\">Git官方网站</a>的口号就是everything is local（一切皆本地），由此可见Git面世之初的定位便是如此。当然大部分程序员都是在Windows下工作，下载Git的windows客户端<a href=\"https://msysgit.github.io/\" target=\"_blank\"> msysgit </a>安装即可，具体安装过程省略（自动识别windows 32 或64位）。</span><br /> <span style=\"font-size:14px;\"> 高手习惯于用命令行，但初学者一般还是要GUI客户端的，推荐TortoiseGit，类似于TortoiseSVN，基本操作类似，容易上手。<a href=\"https://code.google.com/p/tortoisegit/\" target=\"_blank\">https://code.google.com/p/tortoisegit/</a></span><br /> <span style=\"font-size:14px;\"> 依次安装msysgit和TortoiseGit后，就可以像操作SVN一样创建Git版本库了。</span><br /> <span style=\"font-size:14px;\"> 在任意目录下右击，出现TortoiseGit的右键菜单，点击Git Clone，出现如下图界面：</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2014/Gitclone.png\"><img src=\"https://teddysun.com/wp-content/uploads/2014/Gitclone.png\" title=\"Git Clone\" class=\"left\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"> URL填入在线托管的Git地址，Directory便是本地文件夹，其他选择默认即可。</span><br /> <span style=\"font-size:14px;\"> 下面列举几个常用的免费Git托管网站：</span><br /> <span style=\"font-size:14px;\"> 1、 Github.com <a href=\"https://github.com/\" target=\"_blank\">https://github.com/</a> 最著名的免费Git托管网站，曾一度被我天朝大墙屏蔽，缺点是免费的不支持私有项目。</span><br /> <span style=\"font-size:14px;\"> 2、 京东代码库 <a href=\"https://code.jd.com/\" target=\"_blank\">https://code.jd.com/</a> 京东商城的免费Git托管网站，提供一键搬迁功能，对所有公有、私有项目免费提供容量为1G的存储空间。</span><br /> <span style=\"font-size:14px;\"> 3、 开源中国代码托管 <a href=\"https://git.oschina.net/\" target=\"_blank\">https://git.oschina.net/</a> 支持公有项目和私有项目，成员无限，项目1000个。</span><br /> <span style=\"font-size:14px;\"> 4、 CSDN Code <a href=\"https://code.csdn.net/\" target=\"_blank\">https://code.csdn.net/</a> 支持公有项目和私有项目，提供512MB 存储空间。</span><br /> <span style=\"font-size:14px;\"> 5、 Bitbucket <a href=\"https://bitbucket.org/\" target=\"_blank\">https://bitbucket.org/</a> 也是国外比较著名的Git托管网站，免费用户支持公有和私有项目。</span></p> \n<p><span style=\"font-size:14px;\"> 将远程版本库克隆到本地后，就可以像操作SVN一样管理代码了，Diff，Revert，Add，Commit等等。与SVN不同之处是多了3个操作：Pull，Fetch，Push。</span><br /> <span style=\"font-size:14px;\"> 右键菜单Git Sync如下图：</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2014/GitSync.png\"><img src=\"https://teddysun.com/wp-content/uploads/2014/GitSync.png\" title=\"Git Sync\" class=\"left\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"> 利用TortoiseGit快速开始使用Git，可以帮助我们减少学习时间，基本上可以替代命令行实现Git的所有功能。</span></p> \n<p><span style=\"font-size:14px;\"> 最后介绍一下两个概念：</span><br /> <span style=\"font-size:14px;\"><b> 1、 Git目录。</b>是为你的项目存储所有历史和元信息的目录——包括所有的对象(commits,trees,blobs,tags)，这些对象指向不同的分支。每一个项目只能有一个“Git目录”(这和SVN，CVS的每个子目录中都有此类目录相反)，这个叫“.git”的目录在你项目的根目录下，默认是隐藏属性(这是默认设置,但并不是必须的)。</span><br /> <span style=\"font-size:14px;\"><b> 2、 工作目录。</b>Git的“工作目录”存储着你现在签出(checkout)来用来编辑的文件。当你在项目的不同分支间切换时，工作目录里的文件经常会被替换和删除。所有历史信息都保存在“Git目录”中；工作目录只用来临时保存签出(checkout) 文件的地方，你可以编辑工作目录的文件直到下次提交(commit)为止。</span></p> \n<p><span style=\"font-size:14px;color:red;\"><b> 附录：</b></span><br /> <span style=\"font-size:14px;\"> 如何去掉安装msysgit后产生的右键菜单，如Git Init Here，Git GUI，Git Bash等？</span><br /> <span style=\"font-size:14px;\"> 如果你和我一样，不喜欢msysgit右键菜单的快捷方式，那么完全有办法去除掉。</span><br /> <span style=\"font-size:14px;\"> 运行cmd，定位到msysgit的安装目录。</span><br /> <span style=\"font-size:14px;\"> Windows 32位系统：</span></p> \n<pre class=\"prettyprint\">cd C:\\Program Files\\Git\\git-cheetah\nregsvr32 /u git_shell_ext.dll</pre> \n<p><span style=\"font-size:14px;\"> Windows 64位系统：</span></p> \n<pre class=\"prettyprint\">cd C:\\Program Files (x86)\\Git\\git-cheetah\nregsvr32 /u git_shell_ext64.dll</pre> \n<p> <span style=\"font-size:14px;\"><b> 学习Git中文资料推荐：</b></span><br /> <span style=\"font-size:14px;\"> Git Community Book 中文版，下载地址：<a href=\"http://gitbook.liuhui998.com/book.pdf\" target=\"_blank\">http://gitbook.liuhui998.com/book.pdf</a></span></p> \n<p><span style=\"font-size:14px;color:blue;\"><b> 参考链接：</b></span><br /> <span style=\"font-size:14px;\"><a href=\"http://www.cnblogs.com/shuidao/p/3535299.html\" target=\"_blank\"> http://www.cnblogs.com/shuidao/p/3535299.html</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/333.html\">Git初学者：msysgit和tortoisegit</a></p>","descriptionType":"html","publishedDate":"Sun, 02 Feb 2014 13:07:22 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2014/Git.png","linkMd5":"d400d305bebd9a87768d54dddcaad41e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn72@2020_5/2020/08/25/00-30-52-095_1ac6f1cb1bbfe427.webp","destWidth":600,"destHeight":251,"sourceBytes":16241,"destBytes":13784,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2014/Git.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn72@2020_5/2020/08/25/00-30-52-095_1ac6f1cb1bbfe427.webp","https://teddysun.com/wp-content/uploads/2014/Gitclone.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn100@2020_5/2020/08/25/00-30-57-165_b2b437dfaf0fed8c.webp","https://teddysun.com/wp-content/uploads/2014/GitSync.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn28@2020_1/2020/08/25/00-30-58-289_d1e66d0e7801f6b1.webp"},"publishedOrCreatedDate":1598315426736},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"程序员们都是不被世人所理解的天才","link":"https://teddysun.com/?p=212","description":"<p><a href=\"https://teddysun.com/212.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/shudu1.jpg\" alt=\"数独\" title=\"程序员们都是不被世人所理解的天才\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';color:red;\">事情大体上是这样的：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">“芬兰数学家因卡拉，花费3个月时间设计出了世界上迄今难度最大的数独游戏，而且它只有一个答案。因卡拉说只有思考能力最快、头脑最聪明的人才能破解这个游戏。”这是英国《每日邮报》2012年6月30日的一篇报道。这个号称“世界最难数独”的“超级游戏”，却被扬州一位69岁的农民花三天时间解了出来。而这个具有初中文化的老汉，数独游戏启蒙正是源于扬子晚报。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">上面就是题目，简单说下，所谓数独，就是如上图，横向竖向都用1到9填充。然后就是九宫，就是你注意到黑线分成的九个矩阵，也是1到9，下面是这位天才老头用了三天给出的结果。</span></p> \n<p> <span id=\"more-212\"></span> </p> \n<p> <img src=\"https://teddysun.com/wp-content/uploads/2013/05/shudu2.jpg\" alt=\"数独\" class=\"aligncenter\" width=\"400\" height=\"535\" /></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">从图片可以看出，天才老头把原题目给改了，然后花了3天算出一个答案，然后自然被封神了，也就是你看的新闻，可见，<span style=\"color:red;\">这就是广大人民眼中的天才。</span></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">作为孤独的程序员们，因为计算机与经和大脑密不可分，所以无论是做事还是其它，最终的结果都是人机合体的，所以他们往往能给出世人无法理解的答案和东西。比如:</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">通过自已的聪明，借助程序去完成。这当然也是本文的大体意思，如果用最粗造的算法，相信很一个会写程序的人都可以写出来，计算结果的时间看CPU能力，以现在的CPU速度，应该都可以很快给出结果。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">有兴趣的可以尝试下，<strong>人加机器，多久能给出答案!</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">这里把结果贴一下:</span></p> \n<blockquote>\n <p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">8 1 2 7 5 3 6 4 9</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">9 4 3 6 8 2 1 7 5</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">6 7 5 4 9 1 2 8 3</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">1 5 4 2 3 7 8 9 6</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">3 6 9 8 4 5 7 2 1</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">2 8 7 1 6 9 5 3 4</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">5 2 1 9 7 4 3 6 8</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">4 3 8 5 2 6 9 1 7</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">7 9 6 3 1 8 4 5 2</span> </p>\n</blockquote> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><b>如果以为程序员们仅仅只能做到这一步，那就大错特错了。</b></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">下面还有更多的解:</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">1、Google搜答案，程序员很善于这个，有问题，找Google。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">2、使用Google Goggles，这是个图形搜索，只要把图片拍下来一搜，结果都出来了。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">3、使用数独计算器软件，当然也可以自已写一个，那么不仅仅是上面这个数堵，理论上所有数独的答案都有了，当然也可以轻松去做一个题。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><b>如果以为程序员们仅仅只能做到这一步，那就大错特错了。</b></span></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><b>终盘数量</b></span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">数独中的数字排列千变万化，那么究竟有多少种终盘的数字组合呢？</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">6,670,903,752,021,072,936,960（约6.67×10的21次方）种组合，2005年由Bertram Felgenhauer和Frazer Jarvis计算出该数字，并将计算方法发布在他们网站上，如果将等价终盘（如旋转、翻转、行行对换，数字对换等变形）不计算，则有5,472,730,538个组合。数独终盘的组合数量都如此惊人，那么数独题目数量就更加不计其数了，因为每个数独终盘又可以制作出无数道合格的数独题目。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><b>如果以为程序员们仅仅只能做到这一步，那还是大错特错了。</b></span></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><b>标准数独</b></span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">目前（截止2011年）发现的最少提示数9×9标准数独为17个提示，关于是否有16提示数的合格题目，网络上也争论很久，有发现16提示数双解的，但是仍未发现唯一解。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在2006年Gary McGuire撰写了程序，试图通过暴力法来证明16提示数的数独是否存在，方法很简单，既然Bertram Felgenhauer和Frazer Jarvis已经计算出不等价的终盘总数为5,472,730,538个，那么将每个终盘是16提示的情况都跑一遍，如果没有找到16提示的数独，那么就可以证明最少提示数为17个。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">但因为是暴力方法，对于一台单核的电脑来说需要跑30万年才能跑出结果。经过很多人及团队努力，最后Gary McGuire的团队在2009年设计了新的算法，利用Deadly Pattern的思路，花费710万小时CPU时间后，于2012年1月1日提出了9×9标准数独不存在16提示唯一解的证明，继而说明最少需要17个提示数。并将他们的论文以及源代码更新在2006年的页面上。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">&nbsp;由此可见，程序员们借助聪明的脑袋，加上计算机的强大计算机能力，可以完成的事情，已经远远超越普通老百姓，尤其是对电脑理解不是很深的群体的理解范围，所以程序员们不容易被世人所理解也很正常。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">你只要稍微借助计算机，就可以完成一般人无法想象的事情.给出他们难于置信的答案，而这种能力已经无法用普通的，不借助计算机所无法理解和承受的范围。</span></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>再回顾一下：</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">芬兰数学家因卡拉，花费3个月时间设计出了世界上迄今难度最大的数独游戏(<span style=\"color:red;\">难度大的依据是什么？</span>)</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">江苏69岁农民3天破解“世界最难数独”(<span style=\"color:red;\">实际上是改了题目，已经不是原题了</span>)</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">那么作为一个程序员的你，你可以在这方面，你怎么去出题和去破解呢？你要花多少时间呢？</span></p> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><b>新闻来源：</b><span style=\"font-family:Courier New;\"><a href=\"http://news.163.com/13/0526/15/8VQFJ02L00011229.html\" target=\"_blank\">http://news.163.com/13/0526/15/8VQFJ02L00011229.html</a></span></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\"><b>原文链接：</b><span style=\"font-family:Courier New;\"><a href=\"http://www.cnblogs.com/DSharp/archive/2013/05/27/3101718.html\" target=\"_blank\">http://www.cnblogs.com/DSharp/archive/2013/05/27/3101718.html</a></span></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/212.html\">程序员们都是不被世人所理解的天才</a></p>","descriptionType":"html","publishedDate":"Mon, 27 May 2013 13:19:47 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/shudu1.jpg","linkMd5":"1e0ff589bf48f86ef71bb62008678b49","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn23@2020_3/2020/08/25/00-30-54-552_5df1431b9536592c.webp","destWidth":400,"destHeight":446,"sourceBytes":21884,"destBytes":10928,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/shudu1.jpg":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn23@2020_3/2020/08/25/00-30-54-552_5df1431b9536592c.webp","https://teddysun.com/wp-content/uploads/2013/05/shudu2.jpg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn31@2020_4/2020/08/25/00-30-57-094_8e143769a1b66f24.webp"},"publishedOrCreatedDate":1598315426743},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"同步神器BitTorrent Sync","link":"https://teddysun.com/?p=179","description":"<p><a href=\"https://teddysun.com/179.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/bittorrent_sync.png\" alt=\"BitTorrent Sync\" title=\"BitTorrent Sync\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<a href=\"http://labs.bittorrent.com/experiments/sync.html\" target=\"_blank\"><span style=\"font-family:Courier New;\">BitTorrent Sync</span></a>是什么？是由BitTorrent公司开发的基于BitTorrent协议的Sync(同步)应用，能够安全地同步文件夹到多个设备，并且，它是免费的。与传统的基于云同步的服务不同，BitTorrent的解决方案没有限制，能够完全控制文件的存储位置。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　与诸多如Dropbox、Google Drive、Skydrive、Box等云服务存储商不同的是，通过这个软件，你可以将一个文件夹同步到p2p网络中。BitTorrent Sync并不是基于云的。用户在自己的电脑间同步文件，没有任何第三方能够访问它。除了安全性的提升，BitTorrent Sync的传输速度也超过了很多云服务的竞争厂商。另一个优点是，它没有存储或传输的限制，使得用户可以随心所欲地免费同步尽可能多的文件。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　安装软件之后，添加一个文件夹，就会产生一个唯一的key。只要知道这个key，就可以创建一个同步，将key和本地文件夹对应上来进行同步。同时，该工具还可以自定义下载和上传速度。</span></p> \n<p> <span id=\"more-179\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　适合一些圈子来分享某些资源，嗯，你懂的。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"font-family:Courier New;\">BitTorrent Sync</span>支持Windows、Mac和Linux平台。通过一个web界面，还能在NAS设备上运行。</span></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>　　1、下载安装</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　由于Windows和Mac平台的广泛性，上手非常容易，这里介绍在Linux下的安装过程。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　通过官网<a href=\"http://labs.bittorrent.com/experiments/sync.html\" target=\"_blank\"><span style=\"font-family:Courier New;\">http://labs.bittorrent.com/experiments/sync.html</span></a>下载，以32位系统为例说明。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　打开终端执行：</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://btsync.s3-website-us-east-1.amazonaws.com/btsync_i386.tar.gz\ntar -zxvf btsync_i386.tar.gz\n./btsync</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　注意：通过wget下载的URL应以官方的为准，<span style=\"font-family:Courier New;\">BitTorrent Sync</span>默认具备执行的权限（Owner为501，Group为502），解压后即可执行。</span></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>　　2、使用</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　在Linux和NAS设备上，安装完毕后可以通过web界面来管理和使用<span style=\"font-family:Courier New;\">BitTorrent Sync</span>。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　默认的URL：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<span style=\"color:#337FE5;\">http://IP地址:8888/gui</span></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　其中端口号8888是可以修改的，其配置文件(JSON格式)示例可以通过命令<span style=\"font-family:'Courier New';color:red;\">./btsync –dump-sample-config</span>获得。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　将示例配置文件保存到当前目录下：</span></p> \n<pre class=\"prettyprint lang-c\">./btsync --dump-sample-config &gt; sync.conf</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　保存完毕后，修改之，然后重新加载新的配置文件：</span></p> \n<pre class=\"prettyprint lang-bsh\">./btsync --config sync.conf</pre> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　截图如下：</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/04/bittorrent_sync_screen.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/bittorrent_sync_screen.png\" alt=\"BitTorrent Sync\" title=\"BitTorrent Sync\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　只需点击“Add Folder”即可添加文件夹。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/04/bittorrent_sync_screen2.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/bittorrent_sync_screen2.png\" alt=\"BitTorrent Sync\" title=\"BitTorrent Sync\" class=\"left\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>　　3、参数一览</strong></span></p> \n<pre class=\"prettyprint lang-c\">./btsync --help\nBitTorrent Sync 1.0.116\nUsage:\n          btsync [--config &lt;path&gt;] [--nodaemon] [--generate-secret] [--dump-sample-config] [--help] [--get-ro-secret &lt;secret&gt;]\nOptions:\n        --config - location and name of configuration file\n        --nodaemon - do not use daemon mode\n        --generate-secret - generate shared secret\n        --get-ro-secret - get read only secret for existing master secret\n        --dump-sample-config - dump sample config file\n        --help - print this message and exit\n</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　更多用法，详见官方<a href=\"http://btsync.s3-website-us-east-1.amazonaws.com/BitTorrentSyncUserGuide.pdf\" target=\"_blank\">user guide</a>。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/179.html\">同步神器BitTorrent Sync</a></p>","descriptionType":"html","publishedDate":"Thu, 25 Apr 2013 06:46:13 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/04/bittorrent_sync.png","linkMd5":"522244c8fc050f907cb3c7c86fd279b0","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn72@2020_3/2020/08/25/00-30-55-608_73f33aaa8b7d7ef1.webp","destWidth":560,"destHeight":320,"sourceBytes":15615,"destBytes":10140,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/04/bittorrent_sync.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn72@2020_3/2020/08/25/00-30-55-608_73f33aaa8b7d7ef1.webp","https://teddysun.com/wp-content/uploads/2013/04/bittorrent_sync_screen.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn24@2020_3/2020/08/25/00-30-59-677_6c6e13acd6e8d0f8.webp","https://teddysun.com/wp-content/uploads/2013/04/bittorrent_sync_screen2.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn33@2020_6/2020/08/25/00-31-00-648_99894bbc07470ad1.webp"},"publishedOrCreatedDate":1598315426746},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Google Code迁移到Github的过程","link":"https://teddysun.com/?p=291","description":"<p><a href=\"https://teddysun.com/291.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/10/github.jpg\" alt=\"github\" title=\"Google Code迁移到Github的过程\" class=\"aligncenter\" style=\"height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　之前一直是将LAMP一键安装脚本托管在 Google Code 上面，利用 SVN 进行版本控制也挺爽的。Google Code 在2014年1月15日后将不再支持创建下载（既存的下载不受影响），虽然 SVN 还是可用的，但如今 Git 已成趋势。所以，研究了下，将所有的代码及 SVN 提交记录迁移到了 Github 上。</span><br /> <span style=\"font-size:14px;\">　　这次是把<span style=\"font-family:Courier New;\"><a href=\"http://code.google.com/p/teddysun/\" target=\"_blank\">http://code.google.com/p/teddysun/</a></span>这个使用SVN管理的项目迁移到 Github上，需要用到 git svn 命令。</span></p> \n<p> <span id=\"more-291\"></span> </p> \n<p> <span style=\"font-size:14px;\"><strong>0、环境介绍</strong></span><br /> <span style=\"font-size:14px;\">本次操作全程在CentOS release 6.4 (Final)下完成的。</span></p> \n<p><span style=\"font-size:14px;\"><strong>1、准备工作</strong></span><br /> <span style=\"font-size:14px;\">首先肯定是要在Github注册，注册完毕后，新建一个Repository。Repository name填项目名，Description（可选）一般填项目简介，不用说肯定是Public了（因为Private Repository是要付费的），Initialize this repository with a README这个可不勾选。最后点击“Create repository”按钮，创建好Repository。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/10/github1.jpg\"><img src=\"https://teddysun.com/wp-content/uploads/2013/10/github1.jpg\" alt=\"github1\" title=\"github repository\" class=\"aligncenter\" style=\"height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">接下来，进入Account settings，点击左侧“SSH Keys”，选择“Add SSH Key”，进行SSH Key的添加。这一步主要是为后面从本地环境连接到 Github 做准备的。</span><br /> <span style=\"font-size:14px;\">Title填写一个易于辨识的名称，Key填写的则是第2步生成的公钥。</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/10/github2.jpg\"><img src=\"https://teddysun.com/wp-content/uploads/2013/10/github2.jpg\" alt=\"github2\" title=\"github SSH Key\" class=\"aligncenter\" style=\"height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"><strong>2、生成SSH Key</strong></span><br /> <span style=\"font-size:14px;\">这一步可以参考《<a href=\"https://teddysun.com/237.html\" target=\"_blank\">SSH无密码登录及putty设置</a>》一文，以 root 用户登录的话，将/root/.ssh/id_rsa.pub中的内容全部复制出来，粘贴到第1步的Key中并保存。</span></p> \n<p><span style=\"font-size:14px;\"><strong>3、安装git和git-svn</strong></span><br /> <span style=\"font-size:14px;\">执行命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">yum -y install git git-core git-svn</pre> \n<p> <span style=\"font-size:14px;\"><strong>4、开始迁移</strong></span><br /> <span style=\"font-size:14px;\">执行命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">git svn clone https://teddysun.googlecode.com/svn/ -s</pre> \n<p><span style=\"font-size:14px;\">注： -s 参数是表面使用的是svn标准命名方法，即 trunk，tags，branches，这个参数很重要，建议使用，命令后面还可以加个文件夹名字作为clone后的目录，如果没有默认是当前路径。</span></p> \n<p><span style=\"font-size:14px;\">至此，本地已经clone了SVN仓库，现在需要的就是提交到Github上去了。</span><br /> <span style=\"font-size:14px;\">clone完毕后，进入svn目录。执行命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">cd svn</pre> \n<p><span style=\"font-size:14px;\">注：执行上面的命令后，默认是clone到当前路径的svn目录中的。</span></p> \n<p><span style=\"font-size:14px;\">关联github远程仓库，执行命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">git remote add origin git@github.com:teddysun/lamp.git</pre> \n<p> <span style=\"font-size:14px;\">关联后，再push到Github上，执行命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">git push -u origin master</pre> \n<p> <span style=\"font-size:14px;\">如果第1步的SSH Key填写正确的话，只需稍等片刻，就可以去Github围观啦。<br /> 地址如下：<span style=\"font-family:Courier New;\"><a href=\"https://github.com/teddysun/lamp\" target=\"_blank\">https://github.com/teddysun/lamp</a></span></span></p> \n<p><span style=\"font-size:14px;color:blue;\"><strong>参考链接：</strong></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://www.blogjava.net/lishunli/archive/2012/01/15/368562.html\" target=\"_blank\">http://www.blogjava.net/lishunli/archive/2012/01/15/368562.html</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/291.html\">Google Code迁移到Github的过程</a></p>","descriptionType":"html","publishedDate":"Tue, 29 Oct 2013 10:11:10 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/10/github.jpg","linkMd5":"3198c2da7c1eb8184cf3f4318f809092","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn68@2020_4/2020/08/25/00-30-51-871_e535b0264be7060d.webp","destWidth":600,"destHeight":391,"sourceBytes":31778,"destBytes":20380,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/10/github.jpg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn68@2020_4/2020/08/25/00-30-51-871_e535b0264be7060d.webp","https://teddysun.com/wp-content/uploads/2013/10/github1.jpg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn56@2020_4/2020/08/25/00-30-59-991_8113b2b371a4d227.webp","https://teddysun.com/wp-content/uploads/2013/10/github2.jpg":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn44@2020_2/2020/08/25/00-30-58-694_af7fc86cb901c14e.webp"},"publishedOrCreatedDate":1598315426738},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"如何手动升级ownCloud","link":"https://teddysun.com/?p=211","description":"<p><a href=\"https://teddysun.com/211.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/owncloud_logo.png\" alt=\"owncloud\" title=\"如何手动升级ownCloud\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">ownCloud是一款保持更新的开源私有云系统，基于PHP5开发的。支持SQLite、MySQL、Oracle以及PostgreSQL等数据库。本文介绍的是如何手动升级的步骤。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">请务必遵循<span style=\"color:red;\">以下原则</span>升级：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">1、备份原文件夹；</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">2、停用所有第三方apps；</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">3、解压最新版的安装包，覆盖到原文件夹中；</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">4、确认所有的文件和文件夹权限是正确的；</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">5、打开ownCloud首页，升级自动进行。</span></p> \n<p> <span id=\"more-211\"></span> </p> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">假设将ownCloud安装在web根目录下的./ownCloud/文件夹中，SSH登录，进入web根目录后按照如下步骤进行升级：</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">1、使用rsync命令的存档模式备份./ownCloud/文件夹（该模式可以保留文件权限、拥有者、时间戳等信息），执行命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">rsync -a owncloud/ owncloud_bkp`date +\"%Y%m%d\"`/</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">2、官网下载最新版ownCloud，执行命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://download.owncloud.org/community/owncloud-latest.tar.bz2</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">3、将最新版的压缩包解压到./owncloud_latest/文件夹，执行命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">mkdir owncloud_latest\ntar -C owncloud_latest -xjf owncloud-latest.tar.bz2</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">4、使用rsync命令覆盖./ownCloud/文件夹，执行命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">rsync --inplace -rtv owncloud_latest/owncloud/ owncloud/</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">5、删除安装包（安全起见），执行命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">rm -rf owncloud-latest.tar.bz2 owncloud_latest/</pre> \n<p> <span style=\"font-size:16px;font-family:'Microsoft YaHei';color:red;\">注意事项：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">1、如果你已经上传了大量的数据，请在升级时确认硬盘空间是否足够；</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">2、在后台点击升级，只会下载最新版安装包到backup文件夹，并不会自动安装，同时会将config.php中的maintenance mode修改为true。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">这就会导致一个错误提示“<span style=\"color:#337FE5;\">OwnCloud is in maintenance mode</span>”，因此在手动升级后，需要将./owncloud/config/config.php中的maintenance mode从true改为false，再打开首页才能顺利升级；</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">3、升级到最新版的ownCloud后，经过我的测试（测试环境：CentOS6.4_x86，&nbsp;<a href=\"https://teddysun.com/lamp\" target=\"_blank\">LAMP一键安装包</a>），是可以很好的支持中文的（目录名和文件名皆可）。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">参考原文：<span style=\"font-family:Courier New;\"><a href=\"http://doc.owncloud.org/server/5.0/admin_manual/maintenance/update.html\" target=\"_blank\">http://doc.owncloud.org/server/5.0/admin_manual/maintenance/update.html</a></span></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/211.html\">如何手动升级ownCloud</a></p>","descriptionType":"html","publishedDate":"Mon, 27 May 2013 09:39:54 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/owncloud_logo.png","linkMd5":"bca6c594b13d1f69ffdd95d46ebba14d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn60@2020_5/2020/08/25/00-30-54-013_23561b365956531d.webp","destWidth":520,"destHeight":258,"sourceBytes":30752,"destBytes":22190,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/owncloud_logo.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn60@2020_5/2020/08/25/00-30-54-013_23561b365956531d.webp"},"publishedOrCreatedDate":1598315426747},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"备份利器Dropbox Uploader","link":"https://teddysun.com/?p=178","description":"<p><a href=\"https://teddysun.com/178.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/dropbox.jpg\" alt=\"Dropbox\" title=\"Dropbox Uploader\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　<a href=\"https://github.com/andreafabrizi/Dropbox-Uploader\" target=\"_blank\">Dropbox Uploader</a>是一个用bash脚本写的，可以对Dropbox进行上传、下载、删除、浏览、分享等操作。实在是VPS举家备份，同步，迁移之利器。</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;line-height:1.5;\">　　该脚本的优点是仅需cURL支持，常规Linux发行版中都会默认安装。同时无需提供你的Dropbox用户名和密码，而是通过官方的Dropbox API授权来处理的。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　执行以下命令下载该脚本：</span></p> \n<pre class=\"prettyprint lang-bsh\">wget https://raw.github.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh\nchmod +x dropbox_uploader.sh\n</pre> \n<p> <span id=\"more-178\"></span> </p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>　　使用方法：</strong></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\">　　./dropbox_uploader.sh COMMAND [PARAMETERS]</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　[%%]: 必须参数</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　&lt;%%&gt;: 可选参数</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　第一次执行该脚本时，会创建配置文件，同时会有一些提示信息如下：</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\">&nbsp;This is the first time you run this script.</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"> &nbsp;Please open this URL from your Browser, and access using your account:</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';color:#337FE5;\">#这是第一次使用这个脚本，所以要先用浏览器打开下面的网址去访问你的账户：</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\">&nbsp;-&gt; https://www2.dropbox.com/developers/apps</span><br /> <span style=\"color:#337FE5;font-size:14px;font-family:'Microsoft YaHei';\">#进入这个网址并登录后，点击”Create an App”，应该会出来一个新建app的对话框</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\">&nbsp;If you haven’t already done, click “Create an App” and fill in the</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"> &nbsp;form with the following data:</span><br /> &nbsp;<span style=\"font-size:14px;font-family:'Microsoft YaHei';color:#337FE5;\">#照着下面它提供给你的信息填进去</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\">&nbsp; App name: MyUploader46917696</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"> &nbsp; Description: What do you want…</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"> &nbsp; Access level: App folder or Full Dropbox</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';color:#337FE5;\">#现在点击”Create”按钮</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\">&nbsp;Now, click on the “Create” button.</span><br /> <span style=\"color:#337FE5;font-size:14px;font-family:'Microsoft YaHei';\">#新的App建立后，你应该会看到一个叫App key和一个叫App secret的东西</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\">&nbsp;When your new App is successfully created, please type the</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"> &nbsp;App Key, App Secret and the Access level:</span></p> \n<p><span style=\"font-size:14px;font-family:'Courier New';\"> &nbsp;# App key: ohnbqmvks44yovl</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"> &nbsp;# App secret: 8zcjr2t1nn1u3b0</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"> &nbsp;# Access level you have chosen, App folder or Full Dropbox [a/f]:<span style=\"color:#E53333;\">f</span></span></p> \n<p><span style=\"font-size:14px;font-family:'Courier New';\"> &nbsp;&gt; App key is ohnbqmvks44yovl, App secret is 8zcjr2t1nn1u3b0 and Access level is Full Dropbox, it’s ok? [y/n]<span style=\"color:#E53333;\">y</span></span></p> \n<p><span style=\"font-size:14px;font-family:'Courier New';\"> &nbsp;&gt; Token request… OK</span><br /> <span style=\"color:#337FE5;font-size:14px;font-family:'Microsoft YaHei';\">#用浏览器访问下面的URL，允许访问</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\">&nbsp;Please visit this URL from your Browser, and allow Dropbox Uploader</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"> &nbsp;to access your DropBox account:</span></p> \n<p><span style=\"font-size:14px;font-family:'Courier New';\">&nbsp;–&gt; https://www2.dropbox.com/1/oauth/authorize?oauth_token=mlDH7GRhndcV4liq</span><br /> <span style=\"color:#337FE5;font-size:14px;font-family:'Microsoft YaHei';\">#操作完成后，回车确认</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\">Press enter when done…</span></p> \n<p><span style=\"font-size:14px;font-family:'Courier New';\"> &nbsp;&gt; Access Token request… OK</span><br /> <span style=\"color:#337FE5;font-size:14px;font-family:'Microsoft YaHei';\">#设置完成</span><br /> &nbsp;<span style=\"font-size:14px;font-family:'Courier New';\">Setup completed!</span></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>　　过程截图如下：</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　图一↓（App name是之前的截图，跟下面的有点出入，不影响理解。懒得重新截图了）</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader1.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader1.png\" alt=\"Dropbox\" title=\"Dropbox Uploader1\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　图二↓</span><br /> <a href=\"https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader2.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader2.png\" alt=\"Dropbox\" title=\"Dropbox Uploader1\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　图三↓</span></p> \n<p><a href=\"https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader3.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader3.png\" alt=\"Dropbox\" title=\"Dropbox Uploader1\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　图四↓</span></p> \n<p><a href=\"https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader4.png\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader4.png\" alt=\"Dropbox\" title=\"Dropbox Uploader1\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>　　可用的参数：</strong></span><br /> <span style=\"font-size:14px;font-family:'Courier New';color:red;\">　　upload [LOCAL_FILE] &lt;REMOTE_FILE&gt;</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　　上传一个本地文件到远程的Dropbox文件夹下。如果文件大于150MB则使用默认4MB的块上传，在这种情况下，会以Verbose模式显示每个块的上传情况。相反，上传如果发生错误，则显示*号并且重试三次。只有当文件小于150MB时，才会使用标准API上传。Verbose模式默认设定为1，在上传过程中则显示进度。</span></p> \n<p><span style=\"font-size:14px;font-family:'Courier New';color:red;\">　　download [REMOTE_FILE] &lt;LOCAL_FILE&gt;</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　从Dropbox下载到本地文件夹中。</span></p> \n<p><span style=\"font-size:14px;font-family:'Courier New';color:red;\">　　delete [REMOTE_FILE/REMOTE_DIRECTORY]</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　从Dropbox删除文件或目录。</span></p> \n<p><span style=\"font-size:14px;font-family:'Courier New';color:red;\">　　mkdir [REMOTE_DIRECTORY]</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　在Dropbox上新建一个目录。</span></p> \n<p><span style=\"font-size:14px;font-family:'Courier New';color:red;\">　　list &lt;REMOTE_DIRECTORY&gt;</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　列出Dropbox的目录下的内容详情。</span></p> \n<p><span style=\"font-size:14px;font-family:'Courier New';color:red;\">　　share [REMOTE_FILE]</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　分享Dropbox的一个文件，生成一个URL链接。</span></p> \n<p><span style=\"font-size:14px;font-family:'Courier New';color:red;\">　　info</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　显示关于你的Dropbox的一些账户信息。</span></p> \n<p><span style=\"font-size:14px;font-family:'Courier New';color:red;\">　　unlink</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　解除与你的Dropbox账户关联。</span></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>　　可选参数：</strong></span><br /> <span style=\"font-size:14px;font-family:'Courier New';color:red;\">　　-f [FILENAME]</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　指定加载一个配置文件。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　下面举例说明：</span></p> \n<pre class=\"prettyprint lang-bsh\">./dropbox_uploader.sh upload /root/install.log /Public/install.txt\n./dropbox_uploader.sh upload /root/install.log\n./dropbox_uploader.sh download /backup.zip\n./dropbox_uploader.sh delete /backup.zip\n./dropbox_uploader.sh mkdir /myDir/\n./dropbox_uploader.sh upload \"My File.txt\" \"My File 2.txt\" (与脚本同目录下的文件...)\n./dropbox_uploader.sh share \"My File.txt\"</pre> \n<p></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/178.html\">备份利器Dropbox Uploader</a></p>","descriptionType":"html","publishedDate":"Wed, 24 Apr 2013 08:40:01 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/04/dropbox.jpg","linkMd5":"89b6fd92fbf2ea09a9a8b75a9b093a69","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn28@2020_3/2020/08/25/00-30-54-599_251a5c642dad4235.webp","destWidth":600,"destHeight":350,"sourceBytes":26132,"destBytes":12758,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/04/dropbox.jpg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn28@2020_3/2020/08/25/00-30-54-599_251a5c642dad4235.webp","https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader1.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn80@2020_5/2020/08/25/00-30-58-537_c54d9f458812cbd6.webp","https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader2.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn94@2020_4/2020/08/25/00-31-01-759_c09501b194ab9eb2.webp","https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader3.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn62@2020_6/2020/08/25/00-31-01-054_5552ec18c0ac0baf.webp","https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader4.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn95@2020_5/2020/08/25/00-31-00-319_329002037dbfdbff.webp"},"publishedOrCreatedDate":1598315426755},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"谁让你们把高科技玩得太快了","link":"https://teddysun.com/?p=210","description":"<p><a href=\"https://teddysun.com/210.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/05/guahao.jpg\" alt=\"挂号\" title=\"谁让你们把高科技玩得太快了\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　如果拍一部色情片，作为一名演员，一听到导演喊“停”，你就得停下来，否则就会被剧组开除，哪怕你把生殖器憋出毛病也没有办法。谁叫你是演员呢？</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　在今天的互联网领域，也发生着同样的闹剧。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　网上挂号服务北京叫停，深圳叫停打车APP服务，2013年初铁道部叫停抢票插件……这一些列叫停，给出的罪名大同小异——不安全、不合法、扰乱市场秩序，坑害老百姓的利益等等。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　那我们就看看这些<span style=\"color:red;\">民间叫好，官方叫停</span>的服务到底做错了什么？</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　如今，看病难，求医难，尤其是北京、上海这样的国际性大城市，知名医院、知名专家更是“一号难求”，而普通号码，很多医院需要排队大半天，也未必能够等到号码。而从地方来的患者，通常是上午来看病，有时候需要排队到下午，甚至当天也排不到号码，只能住旅馆等待。</span></p> \n<p> <span id=\"more-210\"></span> </p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　淘宝网“淘宝生活”可以实现“医院挂号”。提供了北京、上海等18个省市600多家医院门诊以及7万多名专家预约。用户网上预约成功后，手机上就会收到取号时间和地点。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　网上挂号服务的的特点是：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　1、大的上市公司，数据库强大，合作的医院太多，成功率过高，导致了北京市政府累计投入1178万元的专门挂号网站114等流量较少、客源不足，继续投入申请经费理由不充分，甚至有被取代的风险。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　2、人性化程度过高，访问速度过快，预约流程过于简单，体验性太好，导致政府形象严重受损。再说，患者过早地解决了问题，导致医院周围经济不繁荣，知名医院、知名专家身份大大贬值，不利于整个医疗行业带动中国GDP的提升。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　3、互联网高科技发展太快，导致监管部门政策滞后，有关部门难以从中寻租，有关部门创收下降。既是运动员，也是裁判员的监管部门，“卧榻之侧岂容他人鼾睡”。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　分析了挂号网站之后，深圳叫停打车APP服务，大家应该能够理解政府的苦衷。数据显示，目前，中国11家主流安卓应用商店中，打车类应用下载量超过百万，其中“摇摇招车”、“易打车”、“打车小秘”等客户端下载量均已超过10万次，用户主要集中在北京、上海、广州、深圳等一线城市。早在2010年，深圳市交委曾提出要统一全市出租车电召平台，时隔3年，深圳统一电召平台却未按计划如期上线。政府3年也整不出“电召平台”，竟然被这些不知天高地厚的互联网公司一夜之间搞定，这不是给监管部门难堪吗？如果不叫停，那监管部门颜面何在？</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　再绕回来，说说年初叫停的“抢票插件”。12306购票平台逢节必瘫痪，为此，铁道部原本计划3亿元打造最牛购票平台。谁知道半路上杀出一窝子楞头青，让全国人民知道还有比12306更快的购票方式，这还了得。还好，铁道部叫停得比较及时，以确保3亿投资没有“泡汤”。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　其实，监管部门无论是叫停医院预约挂号，打车APP，还是抢票插件，原因只有两个：第一、你们把高科技玩得太快了，让监管部门跟不上步伐；第二，抢监管部门的生意，可能会导致已经批示的形象工程流产。所以，笔者总结出来一个经验：这些互联网企业，在整这些高科技软件的时候，尽量降低其用户体验，将其弄得比政府官方网站流程更长，让用户耗费时间更多，一经推出，遭遇全国人民骂声一片，这样被叫停的几率会大大降低，甚至会被监管部门推崇和鼓励。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">　　参考原文：<span style=\"font-family:Courier New;\"><a href=\"http://www.letscorp.net/archives/50882\" target=\"_blank\">http://www.letscorp.net/archives/50882</a></span>（需翻，你懂的）</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/210.html\">谁让你们把高科技玩得太快了</a></p>","descriptionType":"html","publishedDate":"Sun, 26 May 2013 13:20:17 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/05/guahao.jpg","linkMd5":"2d105f82fb7fd057a81ec26b33e47800","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn24@2020_4/2020/08/25/00-30-53-269_a51da1ad1e800cf2.webp","destWidth":520,"destHeight":254,"sourceBytes":35135,"destBytes":10622,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/05/guahao.jpg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn24@2020_4/2020/08/25/00-30-53-269_a51da1ad1e800cf2.webp"},"publishedOrCreatedDate":1598315426743},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"如何新建最低权限的SSH帐号","link":"https://teddysun.com/?p=297","description":"<p><a href=\"https://teddysun.com/297.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/11/wall.jpg\" alt=\"Great Wall\" title=\"如何新建最低权限的SSH帐号\" class=\"aligncenter\" style=\"height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\"> 最近我发现不少基于 OpenVZ 的 VPS 哪怕在 SolusVM 面板里开启了 PPP，实际上都是没有权限的。以前我比较执着于搭建 PPTP，一旦 OpenVZ 的 VPS 没有开启 PPP 模块我就火急火燎地发 Ticket，想想看如今 PPTP 已经被干扰得不成样子了。于是搞了个 Tunnelier + Proxy Switchy配合 OpenVZ 的 VPS 来科学上网，再加上 AutoProxy 的规则，换个途径，也就换了份心情。</span><br /> <span style=\"font-size:14px;\"> SSH的全称是SecureShell。通过使用SSH，可以把所有传输的数据进行加密，这样“中间人”这种攻击方式就不可能实现了，而且也能够防止DNS和IP欺骗。用SSH做Socks5代理，进行本地端口转发即可实现科学上网啦。</span></p> \n<p> <span id=\"more-297\"></span> </p> \n<p> <span style=\"font-size:14px;\">为了限制 SSH 仅用于TCP加密传输，有必要新建个最低权限的 SSH 帐号。步骤如下（<span style=\"color:red;\">备注：本教程适用于CentOS、RedHat、Fedora</span>）：</span></p> \n<p><span style=\"font-size:14px;\">1、root登陆 VPS 后，输入如下命令创建一个权限最低的用户（备注：将username改为你想要的用户名）：</span></p> \n<pre class=\"prettyprint lang-bsh\">useradd -M -s /sbin/nologin -n username</pre> \n<p><span style=\"font-size:14px;\">2、修改该用户的密码：</span></p> \n<pre class=\"prettyprint lang-bsh\">passwd username</pre> \n<p><span style=\"font-size:14px;\">根据提示输入两遍密码。</span><br /> <span style=\"font-size:14px;\">搞定收工。</span><br /> <span style=\"font-size:14px;\">尽情地享受 SSH 代理带来的乐趣吧！</span></p> \n<p><span style=\"font-size:14px;color:blue;\"><strong>补充:</strong></span><br /> <span style=\"font-size:14px;\">1、关于 SSH 代理软件，有 Tunnelier 和 MyEnTunnel 两种选择，一般我会选择前者。</span><br /> <span style=\"font-size:14px;\">下载地址：<a href=\"http://dl.bitvise.com/BvSshClient-Inst.exe\" target=\"_blank\">点击这里</a></span><br /> <span style=\"font-size:14px;\">2、用以上命令建立的用户已是最低权限，用此帐号登陆PUTTY或者WinSCP，都会使程序自动关闭或报错，比如WinSCP就会出现：Cannot initialize SFTP protocol. Is the host running a SFTP server?的提示。</span></p> \n<p><span style=\"font-size:14px;\">欲知更多详细设置教程：戳<a href=\"http://blog.csdn.net/luosiyong/article/details/7685273\" target=\"_blank\">这里</a>。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/297.html\">如何新建最低权限的SSH帐号</a></p>","descriptionType":"html","publishedDate":"Thu, 07 Nov 2013 11:22:12 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/11/wall.jpg","linkMd5":"e7a80ae5fa93d391dccda63e13aea4e3","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn20@2020_4/2020/08/25/00-30-53-958_c4a4d32fb88c1d42.webp","destWidth":600,"destHeight":387,"sourceBytes":52908,"destBytes":52908,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/11/wall.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn20@2020_4/2020/08/25/00-30-53-958_c4a4d32fb88c1d42.webp"},"publishedOrCreatedDate":1598315426738},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"CentOS下如何安装7zip","link":"https://teddysun.com/?p=176","description":"<p><a href=\"https://teddysun.com/176.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/7zip.png\" alt=\"7zip\" title=\"安装7ZIP\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">7-zip以高压缩率著称，并且是一款免费开源的压缩软件。在常规的Linux发行版中，无法通过简单的yum命令来安装该软件。那么在CentOS中，如何安装7ZIP呢？</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">有以下3种方法：</span></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>第一种，源码编译安装</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">官网下载地址：<a href=\"http://www.7-zip.org/download.html\" target=\"_blank\"><span style=\"font-family:Courier New;\">http://www.7-zip.org/download.html</span></a></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">源文件项目地址：<a href=\"http://sourceforge.net/projects/p7zip/\" target=\"_blank\"><span style=\"font-family:Courier New;\">http://sourceforge.net/projects/p7zip/</span></a>，目前最新版为9.20.1。</span></p> \n<p> <span id=\"more-176\"></span> </p> \n<p> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">执行以下命令下载安装：</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://nchc.dl.sourceforge.net/project/p7zip/p7zip/9.20.1/p7zip_9.20.1_src_all.tar.bz2\ntar -jxvf p7zip_9.20.1_src_all.tar.bz2\ncd p7zip_9.20.1\nmake\nmake install</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">最后一步make install后出现以下信息，即为安装完毕。</span></p> \n<pre class=\"prettyprint lang-bsh\">./install.sh /usr/local/bin /usr/local/lib/p7zip /usr/local/man /usr/local/share/doc/p7zip\n- installing /usr/local/bin/7za\n- installing /usr/local/man/man1/7z.1\n- installing /usr/local/man/man1/7za.1\n- installing /usr/local/man/man1/7zr.1\n- installing /usr/local/share/doc/p7zip/README\n- installing /usr/local/share/doc/p7zip/ChangeLog\n- installing HTML help in /usr/local/share/doc/p7zip/DOCS</pre> \n<p> <span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>第二种，rpm安装</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">下载地址：<a href=\"http://pkgs.repoforge.org/p7zip/\" target=\"_blank\"><span style=\"font-family:Courier New;\">http://pkgs.repoforge.org/p7zip/</span></a>，请以最新版为准。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在 CentOS 5.x 32位下安装7ZIP</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://pkgs.repoforge.org/p7zip/p7zip-9.20.1-1.el5.rf.i386.rpm\nrpm -ivh p7zip-9.20.1-1.el5.rf.i386.rpm</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在 CentOS 5.x 64位下安装7ZIP</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://pkgs.repoforge.org/p7zip/p7zip-9.20.1-1.el5.rf.x86_64.rpm\nrpm -ivh p7zip-9.20.1-1.el5.rf.x86_64.rpm</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在 CentOS 6.x 32位下安装7ZIP</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://pkgs.repoforge.org/p7zip/p7zip-9.20.1-1.el6.rf.i686.rpm\nrpm -ivh p7zip-9.20.1-1.el6.rf.i686.rpm</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在 CentOS 6.x 64位下安装7ZIP</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://pkgs.repoforge.org/p7zip/p7zip-9.20.1-1.el6.rf.x86_64.rpm\nrpm -ivh p7zip-9.20.1-1.el6.rf.x86_64.rpm</pre> \n<p> <span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>第三种，yum安装</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">通过《<a href=\"https://teddysun.com/153.html\" target=\"_blank\">在Centos 5.x或6.x上安装RHEL EPEL Repo</a>》一文，安装RHEL EPEL Repo后，即可使用yum安装7ZIP。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">命令如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">yum install -y p7zip</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">使用7zip的命令是7za。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">安装完成后的使用方法：</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">7za {a|d|l|e|u|x} 压缩包文件名 {文件列表或目录，可选}</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">a &nbsp;向压缩包里添加文件或创建压缩包，如向001.7z添加001.jpg，执行：7za a 001.7z 001.jpg；将001目录打包执行：7za a 001.7z 001；</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">d &nbsp;从压缩里删除文件，如将001.7z里的001.jpg删除，执行：7za d 001.7z 001.jpg</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">l &nbsp;列出压缩包里的文件，如列出001.7z里的文件，执行：7za l 001.7z</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">e &nbsp;解压到当前目录，目录结构会被破坏，如001.rar内有如下目录及文件123/456/789.html，</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">执行：7za e 001.rar，目录123和456及文件789.html都会存放在当前目录下。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">x &nbsp;以完整路径解压。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">zip文件解压中文文件乱码问题，由于zip文件中没有声明其编码，所以在Linux上使用unzip解压以默认编码解压，中文文件名会出现乱码。</span></p> \n<div> \n</div> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/176.html\">CentOS下如何安装7zip</a></p>","descriptionType":"html","publishedDate":"Tue, 23 Apr 2013 07:18:34 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/04/7zip.png","linkMd5":"66ad2974e385fdbb0d324e46a142fc15","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn45@2020_3/2020/08/25/00-30-51-837_b4b113fb1a6c4c18.webp","destWidth":400,"destHeight":388,"sourceBytes":14310,"destBytes":11148,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/04/7zip.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn45@2020_3/2020/08/25/00-30-51-837_b4b113fb1a6c4c18.webp"},"publishedOrCreatedDate":1598315426746},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"OpenVZ安装指南","link":"https://teddysun.com/?p=296","description":"<p><a href=\"https://teddysun.com/296.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/11/openvz.jpg\" alt=\"OpenVZ\" title=\"OpenVZ安装指南\" class=\"aligncenter\" style=\"height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　鼎鼎大名的 OpenVZ 谁不知道？在主机行业被使用（滥用）很多年，依然在茁壮发展。作为一种操作系统级别的虚拟化技术，运行 OpenVZ 没有硬性的硬件要求。OpenVZ 能够创建被称为容器（containers）的虚拟化环境。这些虚拟机没有完全隔离（因语言习惯不同，还是将“容器”翻译成“虚拟机”比较通俗易懂）。OpenVZ 其中的一项功能就是：它简单并且几乎没有任何硬性开销。有使用资源限制的虚拟机（如内存或硬盘），但这些限制都并不是死板的。所以，你可以分配更多的资源给实际可用的虚拟机。这也是 OpenVZ 的弱点之一，它很容易超售。</span><br /> <span style=\"font-size:14px;\">　　不管你喜欢与否，OpenVZ是一项很好的技术，它完美的创建了一种虚拟的环境，几乎没有任何硬性开销。但是，你会用它做为 VPS 提供商吗？</span><br /> <span style=\"font-size:14px;\">　　本教程就是安装 OpenVZ 的指南：你需要在一台最小化安装CentOS 64位（RedHat）操作系统的独立服务器上来安装 OpenVZ，至少2个IP地址（同一子网），还有一些时间。</span></p> \n<p> <span id=\"more-296\"></span> </p> \n<p> <span style=\"font-size:14px;\"><strong>1、安装 OpenVZ</strong></span><br /> <span style=\"font-size:14px;\">建议为虚拟机（默认是/vz目录）分配一个单独的分区上，并格式化为ext4文件系统。</span><br /> <span style=\"font-size:14px;\">下载 openvz.repo 文件到/etc/yum.repos.d/ 目录下</span></p> \n<pre class=\"prettyprint lang-bsh\">wget -P /etc/yum.repos.d/ http://ftp.openvz.org/openvz.repo</pre> \n<p><span style=\"font-size:14px;\">导入 OpenVZ GPG key 用于签名 RPM 包</span></p> \n<pre class=\"prettyprint lang-bsh\">rpm --import http://ftp.openvz.org/RPM-GPG-Key-OpenVZ</pre> \n<p> <span style=\"font-size:14px;\">开始安装</span><br /> <span style=\"font-size:14px;\">OpenVZ 现已支持 Linux 3.x内核，但目前仍在用着2.6.x的内核。</span></p> \n<pre class=\"prettyprint lang-bsh\">yum -y install vzkernel</pre> \n<p> <span style=\"font-size:14px;\">至此，OpenVZ 就已经安装完毕了。这时候，<span style=\"color:red;\"><strong>不能重启机器</strong></span>。</span><br /> <span style=\"font-size:14px;\">确认 /etc/sysctl.conf 配置文件中的内容跟下列的一致：</span></p> \n<pre class=\"prettyprint lang-bsh\"># On Hardware Node we generally need\n# packet forwarding enabled and proxy arp disabled\nnet.ipv4.ip_forward = 1\nnet.ipv6.conf.default.forwarding = 1\nnet.ipv6.conf.all.forwarding = 1\nnet.ipv4.conf.default.proxy_arp = 0\n\n# Enables source route verification\nnet.ipv4.conf.all.rp_filter = 1\n\n# Enables the magic-sysrq key\nkernel.sysrq = 1\n\n# We do not want all our interfaces to send redirects\nnet.ipv4.conf.default.send_redirects = 1\nnet.ipv4.conf.all.send_redirects = 0</pre> \n<p> <span style=\"font-size:14px;\">同时，禁止SELinux，运行命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">echo \"SELINUX=disabled\" &gt; /etc/sysconfig/selinux</pre> \n<p> <span style=\"font-size:14px;\">还需要安装一些额外的软件包：vzctl，用于管理虚拟机；vzquota，用于控制硬盘容量分配；ploop，用于 OpenVZ 的文件系统管理。</span><br /> <span style=\"font-size:14px;\">执行以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">yum -y install vzctl vzquota ploop</pre> \n<p> <span style=\"font-size:14px;\">到这一步完成后，重启机器。系统会自动加载 OpenVZ 内核（默认选择），启动完成后，检查是否正确安装内核：</span></p> \n<pre class=\"prettyprint lang-bsh\">uname -a</pre> \n<p> <span style=\"font-size:14px;\">会输出类似以下结果：</span></p> \n<pre class=\"prettyprint lang-js\">Linux hostname 2.6.32-042stab081.8 #1 SMP Mon Nov 05 17:50:24 MSK 2013 x86_64 GNU/Linux</pre> \n<p> <span style=\"font-size:14px;\">其中字符串“042stab081.8”代表着 OpenVZ 版本号，理应是 OpenVZ <a href=\"http://openvz.org/\" target=\"_blank\">官网</a>上的最新版。</span></p> \n<p><span style=\"font-size:14px;\"><strong>2、创建虚拟机（container）</strong></span><br /> <span style=\"font-size:14px;\">创建一个虚拟机并不难，不过在这之前，需先下载 OpenVZ 官网上的一些操作系统的模版放在/vz/template/cache/下，请注意，下载回来的文件以tar.gz结尾，无需解压。</span><br /> <span style=\"font-size:14px;\">OpenVZ 官网提供的模版下载地址：</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://openvz.org/Download/template/cache\" target=\"_blank\">http://openvz.org/Download/template/cache</a></span></p> \n<p><span style=\"font-size:14px;\">这些模板包括：CentOS、Debian、Fedora、openSUSE、Ubuntu，都是常见的 Linux 发行版。</span></p> \n<p><span style=\"font-size:14px;\">创建并启动一个虚拟机，只需运行以下命令：</span></p> \n<pre class=\"prettyprint lang-bsh\">vzctl create CTID --ostemplate osname\nvzctl set CTID --ipadd a.b.c.d --save\nvzctl set CTID --nameserver a.b.c.d --save\nvzctl start CTID</pre> \n<p> <span style=\"font-size:14px;\">这里的 CTID 是一个正整数ID，osname 是系统模版的名称，a.b.c.d是分配的 IP 地址，nameserver 是域名服务器（通常用Google的公共DNS服务器8.8.8.8）。</span></p> \n<p><span style=\"font-size:14px;\">举例如下：</span></p> \n<pre class=\"prettyprint lang-bsh\">vzctl create 101 –ostemplate centos-6-x86\nvzctl set 101 –ipadd 192.0.2.1 –save\nvzctl set 101 –nameserver 8.8.8.8 –save\nvzctl start 101</pre> \n<p> <span style=\"font-size:14px;\">到这里，一个虚拟机（container）就创建好了。</span></p> \n<p><span style=\"font-size:14px;\">刷新已创建的虚拟机，执行：</span></p> \n<pre class=\"prettyprint lang-bsh\">vzctl exec CTID ps ax</pre> \n<p> <span style=\"font-size:14px;\">进入虚拟机，执行：</span></p> \n<pre class=\"prettyprint lang-bsh\">vzctl enter CTID</pre> \n<p> <span style=\"font-size:14px;\">退出虚拟机，输入exit即可。</span></p> \n<p><span style=\"font-size:14px;\">停止虚拟机，执行：</span></p> \n<pre class=\"prettyprint lang-bsh\">vzctl stop CTID</pre> \n<p> <span style=\"font-size:14px;\">删除虚拟机，执行：</span></p> \n<pre class=\"prettyprint lang-bsh\">vzctl destroy CTID</pre> \n<p> <span style=\"font-size:14px;\">对虚拟机的使用资源进行限制，则编辑/etc/vz/conf/CTID.conf即可。每个已创建的虚拟机都会有各自的配置文件。一般默认配置是256MB内存，512MB vSwap，2GB硬盘空间。</span></p> \n<p><span style=\"font-size:14px;color:blue;\"><strong>参考链接：</strong></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://openvz.org/Quick_installation\" target=\"_blank\">http://openvz.org/Quick_installation</a></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://wiki.openvz.org/Quick_Installation_CentOS_6\" target=\"_blank\">http://wiki.openvz.org/Quick_Installation_CentOS_6</a></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://openvz.org/Basic_operations_in_OpenVZ_environment\" target=\"_blank\">http://openvz.org/Basic_operations_in_OpenVZ_environment</a></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://lowendbox.com/blog/tutorial-getting-started-with-openvz/\" target=\"_blank\">http://lowendbox.com/blog/tutorial-getting-started-with-openvz/</a></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/296.html\">OpenVZ安装指南</a></p>","descriptionType":"html","publishedDate":"Tue, 05 Nov 2013 10:51:18 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/11/openvz.jpg","linkMd5":"4c15781a10f481ff169817436e8f8ef5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn51@2020_5/2020/08/25/00-30-54-921_1a15036b5b4ba075.webp","destWidth":600,"destHeight":599,"sourceBytes":39298,"destBytes":27000,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/11/openvz.jpg":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn51@2020_5/2020/08/25/00-30-54-921_1a15036b5b4ba075.webp"},"publishedOrCreatedDate":1598315426738},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"Linux中如何安装RAR","link":"https://teddysun.com/?p=174","description":"<p><a href=\"https://teddysun.com/174.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/logo_winrar.png\" alt=\"RAR\" title=\"安装RAR\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在Windows下的winrar几乎一统压缩软件的市场占有率，winrar只是RAR在Windows环境下的图形界面而已，核心功能还是RAR，那么如何在Linux中安装RAR呢？</span></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>1、下载RAR</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">下载地址：<a href=\"http://www.rarsoft.com/download.htm\" target=\"_blank\"><span style=\"font-family:'Courier New';\">http://www.rarsoft.com/download.htm</span></a>，目前最新版为5.0.1。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">使用wget下载（32位系统）：</span> </p> \n<pre class=\"prettyprint lang-bsh\">wget http://www.rarsoft.com/rar/rarlinux-5.0.1.tar.gz</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">若是64为系统则是：</span> </p> \n<pre class=\"prettyprint lang-bsh\">wget http://www.rarsoft.com/rar/rarlinux-x64-5.0.1.tar.gz</pre> \n<p> <span id=\"more-174\"></span> </p> \n<p> <span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>2、安装RAR</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">32位系统：</span></p> \n<pre class=\"prettyprint lang-bsh\">tar -zxf rarlinux-5.0.1.tar.gz\ncd rar\nmake</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">64位系统：</span></p> \n<pre class=\"prettyprint lang-bsh\">tar -zxf rarlinux-x64-5.0.1.tar.gz\ncd rar\nmake</pre> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>3、简单用法</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">安装完毕后就有了RAR和UNRAR这两个程序，RAR是压缩程序，UNRAR是解压程序。它们的参数选项很多，举例说明一下其用法。</span></p> \n<pre class=\"prettyprint lang-bsh\">rar a all *.jpg</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">该命令是将所有.jpg的文件压缩成一个rar包，名为all.rar，该程序会将.rar 扩展名将自动附加到包名后。</span></p> \n<pre class=\"prettyprint lang-bsh\">unrar e all.rar</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">该命令是将all.rar中的所有文件解压出来。</span></p> \n<p><span style=\"font-size:16px;font-family:'Microsoft YaHei';\"><strong>4、通过RPM安装UNRAR</strong></span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">Linux下的RAR软件不是开源的，以上安装的是其试用版。实际上，在CentOS系统中可以很方便地通过RPM的方式安装UNRAR这个软件。使得系统支持RAR文件的解压缩。</span><br /> <span style=\"font-size:14px;font-family:'Microsoft YaHei';\">下载地址：<a href=\"http://pkgs.repoforge.org/unrar/\" target=\"_blank\"><span style=\"font-family:Courier New;\">http://pkgs.repoforge.org/unrar/</span></a>，目前最新版为4.2.3。</span></p> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在 CentOS 5.x 32位下安装UNRAR</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://pkgs.repoforge.org/unrar/unrar-4.2.3-1.el5.rf.i386.rpm\nrpm -ivh unrar-4.2.3-1.el5.rf.i386.rpm</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在 CentOS 5.x 64位下安装UNRAR</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://pkgs.repoforge.org/unrar/unrar-4.2.3-1.el5.rf.x86_64.rpm\nrpm -ivh unrar-4.2.3-1.el5.rf.x86_64.rpm</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在 CentOS 6.x 32位下安装UNRAR</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://pkgs.repoforge.org/unrar/unrar-4.2.3-1.el6.rf.i686.rpm\nrpm -ivh unrar-4.2.3-1.el6.rf.i686.rpm</pre> \n<p><span style=\"font-size:14px;font-family:'Microsoft YaHei';\">在 CentOS 6.x 64位下安装UNRAR</span></p> \n<pre class=\"prettyprint lang-bsh\">wget http://pkgs.repoforge.org/unrar/unrar-4.2.3-1.el6.rf.x86_64.rpm\nrpm -ivh unrar-4.2.3-1.el6.rf.x86_64.rpm</pre> \n<p></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/174.html\">Linux中如何安装RAR</a></p>","descriptionType":"html","publishedDate":"Mon, 22 Apr 2013 10:21:22 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/04/logo_winrar.png","linkMd5":"547c1e06aa7e4d9c638f69714347ca9a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn48@2020_4/2020/08/25/00-30-53-240_f397989591f8f0c9.webp","destWidth":512,"destHeight":512,"sourceBytes":51568,"destBytes":31556,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/04/logo_winrar.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn48@2020_4/2020/08/25/00-30-53-240_f397989591f8f0c9.webp"},"publishedOrCreatedDate":1598315426747},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"如何创建和解压tar.xz文件","link":"https://teddysun.com/?p=294","description":"<p><a href=\"https://teddysun.com/294.html\"><img src=\"https://teddysun.com/wp-content/uploads/2013/11/xz.jpg\" alt=\"xz Linux\" title=\"如何创建和解压tar.xz文件\" class=\"aligncenter\" style=\"height:auto;\" /></a></p> \n<p><span style=\"font-size:14px;\">　　认识tar.xz格式文件是在Linux内核的<a href=\"https://www.kernel.org\" target=\"_blank\">官方网站</a>上，比如最新的<a href=\"https://www.kernel.org/pub/linux/kernel/v3.x/linux-3.12.tar.xz\" target=\"_blank\">Linux内核3.12</a>，就是.xz后缀的文件。</span><br /> <span style=\"font-size:14px;\">　　根据维基百科的<a href=\"http://zh.wikipedia.org/wiki/Xz\" target=\"_blank\">解释</a>， xz 是一个使用 LZMA压缩算法的无损数据压缩文件格式。和gzip与bzip2一样，同样支持多文件压缩，但是约定不能将多于一个的目标文件压缩进同一个档案文件。相反，xz通常作为一种归档文件自身的压缩格式，例如使用tar或cpioUnix程序创建的归档。xz 在GNU coreutils（版本 7.1 或更新）中被使用。xz 作为压缩软件包被收录在 Fedora (自Fedora 12起), Arch Linux, FreeBSD、 Slackware Linux、CRUX 和 Funtoo中。</span></p> \n<p> <span id=\"more-294\"></span> </p> \n<p><span style=\"font-size:14px;\">　　由于 xz 文件格式的压缩率更高，已在 Linux 各发行版中广泛使用。最典型的就是Linux内核，3.12版本的xz压缩包仅72.85MB，解压后能达到518.77MB。</span></p> \n<p><span style=\"font-size:14px;\">XZ Utils的官方网站为：</span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://tukaani.org/xz/\" target=\"_blank\">http://tukaani.org/xz/</a></span></p> \n<p><span style=\"font-size:14px;\">那么，如何创建和解压.xz 格式文件呢？以解压linux-3.12.tar.xz为例。</span></p> \n<p><span style=\"font-size:14px;\"><strong>解压 xz 格式文件</strong></span><br /> <span style=\"font-size:14px;color:red;\">方法一：</span><br /> <span style=\"font-size:14px;\">需要用到两步命令，首先利用 xz-utils 的 xz 命令将 linux-3.12.tar.xz 解压为 linux-3.12.tar，其次用 tar 命令将 linux-3.12.tar 完全解压。</span></p> \n<pre class=\"prettyprint lang-bsh\">xz -d linux-3.12.tar.xz\ntar -xf linux-3.12.tar</pre> \n<p><span style=\"font-size:14px;color:red;\">方法二（推荐）</span></p> \n<pre class=\"prettyprint lang-bsh\">tar -Jxf linux-3.12.tar.xz</pre> \n<p> <span style=\"font-size:14px;\"><strong>创建 xz 格式文件</strong></span><br /> <span style=\"font-size:14px;color:red;\">方法一：</span><br /> <span style=\"font-size:14px;\">也是用到两步命令，首先利用 tar 命令将 linux-3.12 文件夹打包成 linux-3.12.tar，其次用 xz-utils 的 xz 命令将 linux-3.12.tar 压缩成 linux-3.12.tar.xz。</span></p> \n<pre class=\"prettyprint lang-bsh\">tar -cf linux-3.12.tar linux-3.12/\nxz -z linux-3.12.tar</pre> \n<p><span style=\"font-size:14px;color:red;\">方法二（推荐）</span></p> \n<pre class=\"prettyprint lang-bsh\">tar -Jcf linux-3.12.tar.xz linux-3.12/</pre> \n<p> <span style=\"font-size:14px;color:blue;\"><strong>参考链接：</strong></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://tukaani.org/xz/\" target=\"_blank\">http://tukaani.org/xz/</a></span><br /> <span style=\"font-size:14px;font-family:'Courier New';\"><a href=\"http://zh.wikipedia.org/wiki/Xz\" target=\"_blank\">http://zh.wikipedia.org/wiki/Xz</a></span><br /> <span style=\"font-size:14px;\"></span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/294.html\">如何创建和解压tar.xz文件</a></p>","descriptionType":"html","publishedDate":"Mon, 04 Nov 2013 06:58:25 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/11/xz.jpg","linkMd5":"84a40bd0403cad51256ac9afeb5baa62","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn100@2020_3/2020/08/25/00-30-51-857_68d25cf40d0bfeda.webp","destWidth":625,"destHeight":406,"sourceBytes":87553,"destBytes":45768,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/11/xz.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn100@2020_3/2020/08/25/00-30-51-857_68d25cf40d0bfeda.webp"},"publishedOrCreatedDate":1598315426740},{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","title":"如何判断VPS的虚拟技术","link":"https://teddysun.com/?p=171","description":"<p><a href=\"https://teddysun.com/wp-content/uploads/2013/04/vps_diagram.gif\"><img src=\"https://teddysun.com/wp-content/uploads/2013/04/vps_diagram.gif\" alt=\"VPS虚拟技术\" title=\"VPS虚拟技术\" class=\"aligncenter\" style=\"width:auto;height:auto;\" /></a></p> \n<p><span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　我们知道VPS的虚拟技术有许多种，如Openvz、Xen、VMware vSphere、Hyper-V、KVM及Xen的HVM与PV等。在Xen中pv是半虚拟化，hvm是全虚拟化，pv只能用于linux内核的系统，hvm可以虚拟所有常见操作系统(Linux+windows)，理论效率比pv略低，另外hvm需要cpu虚拟化指令支持，pv无此要求。而Openvz是一个类似于Linux-VServer的操作系级全虚拟化解决方案，目前基于Xen和Openvz的VPS服务商比较多。</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　那么如何判断买到的是哪种虚拟技术的VPS呢？价格上，Openvz一般比Xen便宜得多，但稳定性和用途范围就不及Xen了。要了花了Xen的钱却买了Openvz的VPS岂不是很冤。</span></p> \n<p> <span id=\"more-171\"></span> </p> \n<p><span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　<span style=\"font-size:16px;\"><strong>1、通过系统目录判断</strong></span></span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　执行命令：ls -al /proc</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　一般Openvz的话，则会有vz目录，Xen的话则会有xen目录。</span></p> \n<p><span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　<span style=\"font-size:16px;\"><strong>2、通过网卡信息判断</strong></span></span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　执行命令：ifconfig</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　一般Openvz的话，则会有venet0或venet0:x网卡标识，Xen的话一般则是eth0。</span></p> \n<p><span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　<span style=\"font-size:16px;\"><strong>3、通过VPS控制面板判断</strong></span></span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　流行的VPS面板包括SolusVM、vePortal等，会显示具体的虚拟技术。</span></p> \n<p><span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　<span style=\"font-size:16px;\"><strong>4、通过virt-what命令判断</strong></span></span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　CentOS或RedHat系统的话，执行命令：yum install -y virt-what</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　virt-what是一个判断当前环境所使用的虚拟技术的脚本，常见的虚拟技术基本上都能正常识别出来。</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　安装好virt-what后，执行命令：virt-what</span><br /> <span style=\"font-family:'Microsoft YaHei';font-size:14px;\">　　根据返回的信息，即可判断出当前VPS所使用的虚拟技术。</span></p> \n<p>转载请注明：<a href=\"https://teddysun.com\">秋水逸冰</a> » <a href=\"https://teddysun.com/171.html\">如何判断VPS的虚拟技术</a></p>","descriptionType":"html","publishedDate":"Fri, 19 Apr 2013 10:30:59 +0000","feedId":9594,"bgimg":"https://teddysun.com/wp-content/uploads/2013/04/vps_diagram.gif","linkMd5":"68c53e94e5792792ba099ddc856f2b0e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn31@2020_3/2020/08/25/00-30-54-104_49f756d3e7a783ef.webp","destWidth":427,"destHeight":392,"sourceBytes":31301,"destBytes":15890,"author":"秋水逸冰","articleImgCdnMap":{"https://teddysun.com/wp-content/uploads/2013/04/vps_diagram.gif":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn31@2020_3/2020/08/25/00-30-54-104_49f756d3e7a783ef.webp"},"publishedOrCreatedDate":1598315426747}],"record":{"createdTime":"2020-08-25 08:30:26","updatedTime":"2020-08-25 08:30:26","feedId":9594,"fetchDate":"Tue, 25 Aug 2020 00:30:26 +0000","fetchMs":1578,"handleMs":1475,"totalMs":48689,"newArticles":0,"totalArticles":145,"status":1,"type":0,"ip":"54.175.226.183","hostName":"us-036.herokuapp.com","requestId":"555ce27cd5b6423dbd7b2e93aaeb0b1c_9594","contentType":"application/rss+xml; charset=UTF-8","totalBytes":7174158,"bgimgsTotal":133,"bgimgsGithubTotal":133,"articlesImgsTotal":239,"articlesImgsGithubTotal":237,"successGithubMap":{"myreaderx8":9,"myreaderx14":8,"myreaderx15":9,"myreaderx7":8,"myreaderx6":9,"myreaderx16":9,"myreaderx32":8,"myreaderx10":9,"myreaderx4":8,"myreaderx33":9,"myreaderx11":9,"myreaderx3":8,"myreaderx12":8,"myreaderx2":7,"myreaderx1":9,"myreaderx13":8,"myreaderx30":8,"myreaderx31":7,"myreaderx18":8,"myreaderx19":7,"myreaderx":9,"myreaderx25":8,"myreaderx27":8,"myreaderx21":7,"myreaderx22":9,"myreaderx23":8,"myreaderx24":9,"myreaderx5oss":5,"myreaderx29":8},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:35:14","updatedTime":"2020-08-25 04:35:14","id":9594,"name":"秋水逸冰","url":"https://teddysun.com/feed","subscriber":null,"website":null,"icon":"https://teddysun.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx64/cdn36@2020_6/2020/08/25/00-30-25-905_b435baa29a7afe58.ico","description":"","weekly":null,"link":"https://teddysun.com"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":2565938,"tmpBodyImgCdnBytes":4608220,"tmpBgImgCdnBytes":0,"extra4":{"start":1598315423145,"total":0,"statList":[{"spend":2149,"msg":"获取xml内容"},{"spend":1475,"msg":"解释文章"},{"spend":1,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":14998,"msg":"正文链接上传到cdn"}]},"extra5":239,"extra6":239,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://teddysun.u.qiniudn.com/wp-content/uploads/2014/phpmyadmin_3.png","sourceStatusCode":404,"sourceBytes":0,"destBytes":0,"feedId":9594,"totalSpendMs":1215,"convertSpendMs":0,"createdTime":"2020-08-25 08:30:57","host":"us-018*","referer":"https://teddysun.com/?p=359","linkMd5ListStr":"9fba75e95fcb402ce8d726a8da54caaf","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://teddysun.u.qiniudn.com/wp-content/uploads/2014/phpmyadmin_1.png","sourceStatusCode":404,"sourceBytes":0,"destBytes":0,"feedId":9594,"totalSpendMs":1009,"convertSpendMs":0,"createdTime":"2020-08-25 08:30:58","host":"us-018*","referer":"https://teddysun.com/?p=359","linkMd5ListStr":"9fba75e95fcb402ce8d726a8da54caaf","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://teddysun.u.qiniudn.com/wp-content/uploads/2014/phpmyadmin_2.png","sourceStatusCode":404,"sourceBytes":0,"destBytes":0,"feedId":9594,"totalSpendMs":1405,"convertSpendMs":0,"createdTime":"2020-08-25 08:30:58","host":"us-002*","referer":"https://teddysun.com/?p=359","linkMd5ListStr":"9fba75e95fcb402ce8d726a8da54caaf","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://teddysun.u.qiniudn.com/wp-content/uploads/2014/phpmyadmin_1.png","sourceStatusCode":404,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","sourceBytes":0,"destBytes":0,"feedId":9594,"totalSpendMs":1645,"convertSpendMs":0,"createdTime":"2020-08-25 08:30:59","host":"europe-23*","referer":"https://teddysun.com/?p=359","linkMd5ListStr":"9fba75e95fcb402ce8d726a8da54caaf","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://teddysun.u.qiniudn.com/wp-content/uploads/2014/phpmyadmin_3.png","sourceStatusCode":404,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","sourceBytes":0,"destBytes":0,"feedId":9594,"totalSpendMs":2015,"convertSpendMs":0,"createdTime":"2020-08-25 08:30:59","host":"europe69*","referer":"https://teddysun.com/?p=359","linkMd5ListStr":"9fba75e95fcb402ce8d726a8da54caaf","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://teddysun.u.qiniudn.com/wp-content/uploads/2014/phpmyadmin_2.png","sourceStatusCode":404,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","sourceBytes":0,"destBytes":0,"feedId":9594,"totalSpendMs":1316,"convertSpendMs":0,"createdTime":"2020-08-25 08:31:00","host":"us-025*","referer":"https://teddysun.com/?p=359","linkMd5ListStr":"9fba75e95fcb402ce8d726a8da54caaf","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"}],"extra10_invalidATagHrefValue":{"https://teddysun.com/?p=581_//teddysun.com/581.html":"https://teddysun.com/581.html","https://teddysun.com/?p=587_//teddysun.com/587.html":"https://teddysun.com/587.html","https://teddysun.com/?p=536_//teddysun.com/536.html":"https://teddysun.com/536.html","https://teddysun.com/?p=406_ftp://ftp.iij.ad.jp/pub/network/isc/bind9/9.11.3/BIND9.11.3.x64.zip":"https://teddysun.com/?p=406/ftp://ftp.iij.ad.jp/pub/network/isc/bind9/9.11.3/BIND9.11.3.x64.zip","https://teddysun.com/?p=566_//teddysun.com/566.html":"https://teddysun.com/566.html","https://teddysun.com/?p=219_ftp://dygod1:dygod1@d245.dygod.org:6003/[%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82www.dy2018.net].%E6%AF%92%E6%88%98.MP4.720x404.%E5%9B%BD%E8%AF%AD%E4%B8%AD%E5%AD%97.mp4":"https://teddysun.com/?p=219/ftp://dygod1:dygod1@d245.dygod.org:6003/[%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82www.dy2018.net].%E6%AF%92%E6%88%98.MP4.720x404.%E5%9B%BD%E8%AF%AD%E4%B8%AD%E5%AD%97.mp4","https://teddysun.com/?p=198_ftp://dygod1:dygod1@d079.dygod.org:9047/[%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82-www.dy2018.net].%E6%91%A9%E5%A4%A9%E6%A5%BC.BD.1280x720.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.rmvb":"https://teddysun.com/?p=198/ftp://dygod1:dygod1@d079.dygod.org:9047/[%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82-www.dy2018.net].%E6%91%A9%E5%A4%A9%E6%A5%BC.BD.1280x720.%E4%B8%AD%E6%96%87%E5%AD%97%E5%B9%95.rmvb","https://teddysun.com/?p=545_//teddysun.com/545.html":"https://teddysun.com/545.html","https://teddysun.com/?p=406_ftp://ftp.iij.ad.jp/pub/network/isc/bind9/":"https://teddysun.com/?p=406/ftp://ftp.iij.ad.jp/pub/network/isc/bind9/","https://teddysun.com/?p=544_//teddysun.com/544.html":"https://teddysun.com/544.html","https://teddysun.com/?p=554_//teddysun.com/554.html":"https://teddysun.com/554.html","https://teddysun.com/?p=584_//teddysun.com/584.html":"https://teddysun.com/584.html","https://teddysun.com/?p=569_//teddysun.com/569.html":"https://teddysun.com/569.html","https://teddysun.com/?p=548_//teddysun.com/548.html":"https://teddysun.com/548.html","https://teddysun.com/?p=552_//teddysun.com/552.html":"https://teddysun.com/552.html","https://teddysun.com/?p=406_/406.html":"https://teddysun.com/406.html","https://teddysun.com/?p=209_ftp://dygod1:dygod1@d070.dygod.org:1064/[%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82-www.dy2018.net].%E5%BF%A0%E7%83%88%E6%9D%A8%E5%AE%B6%E5%B0%86.BD.1280x720.%E5%9B%BD%E7%B2%A4%E5%8F%8C%E8%AF%AD%E4%B8%AD%E5%AD%97.mkv":"https://teddysun.com/?p=209/ftp://dygod1:dygod1@d070.dygod.org:1064/[%E7%94%B5%E5%BD%B1%E5%A4%A9%E5%A0%82-www.dy2018.net].%E5%BF%A0%E7%83%88%E6%9D%A8%E5%AE%B6%E5%B0%86.BD.1280x720.%E5%9B%BD%E7%B2%A4%E5%8F%8C%E8%AF%AD%E4%B8%AD%E5%AD%97.mkv","https://teddysun.com/?p=406_ftp://ftp.iij.ad.jp/pub/network/isc/bind9/9.11.3/BIND9.11.3.x86.zip":"https://teddysun.com/?p=406/ftp://ftp.iij.ad.jp/pub/network/isc/bind9/9.11.3/BIND9.11.3.x86.zip"},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-032.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-002.herokuapp.com/":{"failCount":1,"successCount":3,"resultList":[200,200,200,404]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-024.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe70.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-038.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-025.herokuapp.com/":{"failCount":1,"successCount":2,"resultList":[200,404,200]},"http://europe69.herokuapp.com/":{"failCount":1,"successCount":6,"resultList":[200,200,200,200,200,200,404]},"http://europe-23.herokuapp.com/":{"failCount":1,"successCount":6,"resultList":[200,200,200,200,200,404,200]},"http://us-54.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-004.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-003.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-016.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-013.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-018.herokuapp.com/":{"failCount":2,"successCount":3,"resultList":[200,200,404,404,200]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://europe-24.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe-58.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe66.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":7,"resultList":[200,200,200,200,200,200,200]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe62.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-023.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2016/bbr.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn64@2020_6/2020/08/25/00-30-51-654_9c2851ccaa2368cd.webp","sourceBytes":36399,"destBytes":8816,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":839,"convertSpendMs":20,"createdTime":"2020-08-25 08:30:51","host":"us-020*","referer":"https://teddysun.com/?p=489","linkMd5ListStr":"49805e2ae40da6512fe2d52cac035c85,49805e2ae40da6512fe2d52cac035c85","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"35.5 KB","destSize":"8.6 KB","compressRate":"24.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2017/gpg.png","sourceStatusCode":200,"destWidth":500,"destHeight":173,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn17@2020_3/2020/08/25/00-30-51-644_ac7e55b7446ae014.webp","sourceBytes":11824,"destBytes":10688,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":861,"convertSpendMs":13,"createdTime":"2020-08-25 08:30:51","host":"us-038*","referer":"https://teddysun.com/?p=496","linkMd5ListStr":"670167aced1a7dc96331258f13a9743f,670167aced1a7dc96331258f13a9743f","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"11.5 KB","destSize":"10.4 KB","compressRate":"90.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/dig.jpg","sourceStatusCode":200,"destWidth":640,"destHeight":372,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn87@2020_4/2020/08/25/00-30-51-683_f4046348154b5142.webp","sourceBytes":35226,"destBytes":18834,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":917,"convertSpendMs":30,"createdTime":"2020-08-25 08:30:51","host":"us-012*","referer":"https://teddysun.com/?p=406","linkMd5ListStr":"f4b20f4460498673a790abfd082c7735,f4b20f4460498673a790abfd082c7735","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.4 KB","destSize":"18.4 KB","compressRate":"53.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2019/goodbye.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn29@2020_2/2020/08/25/00-30-51-624_ec48f576d24631be.webp","sourceBytes":223170,"destBytes":45530,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":976,"convertSpendMs":14,"createdTime":"2020-08-25 08:30:51","host":"us-001*","referer":"https://teddysun.com/?p=548","linkMd5ListStr":"4f9d828e9f574cd863476ec7b4fff774,4f9d828e9f574cd863476ec7b4fff774","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"217.9 KB","destSize":"44.5 KB","compressRate":"20.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/08/wangpan.jpg","sourceStatusCode":200,"destWidth":590,"destHeight":320,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn42@2020_6/2020/08/25/00-30-51-848_e004db29b9154d22.webp","sourceBytes":68908,"destBytes":8534,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1038,"convertSpendMs":10,"createdTime":"2020-08-25 08:30:51","host":"us-029*","referer":"https://teddysun.com/?p=258","linkMd5ListStr":"7050e3db2a9f9db7d2f268eaf2d8a4c9,7050e3db2a9f9db7d2f268eaf2d8a4c9","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"67.3 KB","destSize":"8.3 KB","compressRate":"12.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/09/yun.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn7@2020_2/2020/08/25/00-30-51-833_5181213a0d49c579.webp","sourceBytes":47828,"destBytes":14460,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1070,"convertSpendMs":10,"createdTime":"2020-08-25 08:30:51","host":"us-010*","referer":"https://teddysun.com/?p=265","linkMd5ListStr":"b54effa84a0cee84bfe92dd9a5ebbc83,b54effa84a0cee84bfe92dd9a5ebbc83","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.7 KB","destSize":"14.1 KB","compressRate":"30.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/11/php.png","sourceStatusCode":200,"destWidth":600,"destHeight":318,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn79@2020_4/2020/08/25/00-30-51-823_98db429a3ce60c2f.webp","sourceBytes":73085,"destBytes":20966,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1094,"convertSpendMs":21,"createdTime":"2020-08-25 08:30:51","host":"us-030*","referer":"https://teddysun.com/?p=320","linkMd5ListStr":"8341f0ea65d94c3e5934b7d0989424fc,7462a3fa5bac88f48021edca46fc503f,9a9792f9dca2646ef9e13e2f7f3808f3,8341f0ea65d94c3e5934b7d0989424fc,7462a3fa5bac88f48021edca46fc503f,9a9792f9dca2646ef9e13e2f7f3808f3","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"71.4 KB","destSize":"20.5 KB","compressRate":"28.7%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/wordpress-logo.png","sourceStatusCode":200,"destWidth":500,"destHeight":357,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn21@2020_2/2020/08/25/00-30-51-818_667e258f114275c9.webp","sourceBytes":14064,"destBytes":13584,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1094,"convertSpendMs":9,"createdTime":"2020-08-25 08:30:51","host":"us-025*","referer":"https://teddysun.com/?p=182","linkMd5ListStr":"ac3a4a1bbbd53f5e30986fc832141f6d,ac3a4a1bbbd53f5e30986fc832141f6d","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.7 KB","destSize":"13.3 KB","compressRate":"96.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/OPcache.png","sourceStatusCode":200,"destWidth":600,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn4@2020_4/2020/08/25/00-30-51-889_ddbe61d2abd80698.webp","sourceBytes":67069,"destBytes":14706,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1120,"convertSpendMs":26,"createdTime":"2020-08-25 08:30:51","host":"us-022*","referer":"https://teddysun.com/?p=384","linkMd5ListStr":"7376babe349da92651a0881d1ec20d1c,7376babe349da92651a0881d1ec20d1c","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65.5 KB","destSize":"14.4 KB","compressRate":"21.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/whois.png","sourceStatusCode":200,"destWidth":600,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn64@2020_4/2020/08/25/00-30-51-897_35c927f681d03e34.webp","sourceBytes":36220,"destBytes":12280,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1092,"convertSpendMs":36,"createdTime":"2020-08-25 08:30:51","host":"us-014*","referer":"https://teddysun.com/?p=415","linkMd5ListStr":"e50c42f9e50b94a1e0ba3a16272d7517,e50c42f9e50b94a1e0ba3a16272d7517","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"35.4 KB","destSize":"12 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/08/notepad.gif","sourceStatusCode":200,"destWidth":456,"destHeight":345,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn80@2020_5/2020/08/25/00-30-51-886_cf45724bc7a1ca52.webp","sourceBytes":13997,"destBytes":14696,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1133,"convertSpendMs":58,"createdTime":"2020-08-25 08:30:51","host":"us-037*","referer":"https://teddysun.com/?p=252","linkMd5ListStr":"3321d445f8fb74307ae5d6678622d068,3321d445f8fb74307ae5d6678622d068","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.7 KB","destSize":"14.4 KB","compressRate":"105%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/10/github.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":391,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn68@2020_4/2020/08/25/00-30-51-871_e535b0264be7060d.webp","sourceBytes":31778,"destBytes":20380,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1137,"convertSpendMs":13,"createdTime":"2020-08-25 08:30:51","host":"us-002*","referer":"https://teddysun.com/?p=291","linkMd5ListStr":"3198c2da7c1eb8184cf3f4318f809092,3198c2da7c1eb8184cf3f4318f809092","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31 KB","destSize":"19.9 KB","compressRate":"64.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/centos6.jpg","sourceStatusCode":200,"destWidth":520,"destHeight":390,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn87@2020_6/2020/08/25/00-30-51-881_66c69e6e04c2d44a.webp","sourceBytes":32688,"destBytes":15212,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1147,"convertSpendMs":16,"createdTime":"2020-08-25 08:30:51","host":"us-006*","referer":"https://teddysun.com/?p=204","linkMd5ListStr":"2d386103dcb9dddcf7621f93590dbe6e,2d386103dcb9dddcf7621f93590dbe6e","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.9 KB","destSize":"14.9 KB","compressRate":"46.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/linux_2.png","sourceStatusCode":200,"destWidth":510,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn40@2020_3/2020/08/25/00-30-51-906_a73a186bd320d7dd.webp","sourceBytes":75843,"destBytes":23444,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1172,"convertSpendMs":81,"createdTime":"2020-08-25 08:30:51","host":"us-022*","referer":"https://teddysun.com/?p=444","linkMd5ListStr":"bd01240f321f70dfdcae97272cdb1179,ce5c0ded51f907918637e82bc4a01940,bd01240f321f70dfdcae97272cdb1179,ce5c0ded51f907918637e82bc4a01940","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"74.1 KB","destSize":"22.9 KB","compressRate":"30.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/11/xz.jpg","sourceStatusCode":200,"destWidth":625,"destHeight":406,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn100@2020_3/2020/08/25/00-30-51-857_68d25cf40d0bfeda.webp","sourceBytes":87553,"destBytes":45768,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1160,"convertSpendMs":23,"createdTime":"2020-08-25 08:30:51","host":"us-034*","referer":"https://teddysun.com/?p=294","linkMd5ListStr":"84a40bd0403cad51256ac9afeb5baa62,84a40bd0403cad51256ac9afeb5baa62","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"85.5 KB","destSize":"44.7 KB","compressRate":"52.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/7zip.png","sourceStatusCode":200,"destWidth":400,"destHeight":388,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn45@2020_3/2020/08/25/00-30-51-837_b4b113fb1a6c4c18.webp","sourceBytes":14310,"destBytes":11148,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1164,"convertSpendMs":14,"createdTime":"2020-08-25 08:30:51","host":"us-017*","referer":"https://teddysun.com/?p=176","linkMd5ListStr":"66ad2974e385fdbb0d324e46a142fc15,66ad2974e385fdbb0d324e46a142fc15","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14 KB","destSize":"10.9 KB","compressRate":"77.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/python.png","sourceStatusCode":200,"destWidth":520,"destHeight":226,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn15@2020_2/2020/08/25/00-30-51-804_4bcae60bfba8e964.webp","sourceBytes":16127,"destBytes":5900,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1179,"convertSpendMs":6,"createdTime":"2020-08-25 08:30:51","host":"us-002*","referer":"https://teddysun.com/?p=254","linkMd5ListStr":"bb98a13cf5a77fd8cffb007bf11f8d98,cc2ebae819df3567059a2b598ea02e2c,b43cb1451e4f637df55fa53ef95c0f9a,bb98a13cf5a77fd8cffb007bf11f8d98,cc2ebae819df3567059a2b598ea02e2c,b43cb1451e4f637df55fa53ef95c0f9a","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.7 KB","destSize":"5.8 KB","compressRate":"36.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/07/placid.jpg","sourceStatusCode":200,"destWidth":540,"destHeight":338,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn68@2020_2/2020/08/25/00-30-51-933_9ec8d8139b08de67.webp","sourceBytes":35248,"destBytes":18136,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1169,"convertSpendMs":28,"createdTime":"2020-08-25 08:30:51","host":"us-008*","referer":"https://teddysun.com/?p=246","linkMd5ListStr":"d55ecae091ca61c15f87ef046bd73cf5,d55ecae091ca61c15f87ef046bd73cf5","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.4 KB","destSize":"17.7 KB","compressRate":"51.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/12/no1.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":397,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn83@2020_4/2020/08/25/00-30-51-883_9cc67b3f48f2d7ae.webp","sourceBytes":44424,"destBytes":20986,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1220,"convertSpendMs":11,"createdTime":"2020-08-25 08:30:51","host":"us-018*","referer":"https://teddysun.com/?p=329","linkMd5ListStr":"131bfabff4dc8c76150eff941c6c8e24,131bfabff4dc8c76150eff941c6c8e24","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43.4 KB","destSize":"20.5 KB","compressRate":"47.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/10/block.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn56@2020_5/2020/08/25/00-30-51-910_4e00761999d2bffd.webp","sourceBytes":61556,"destBytes":28332,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1177,"convertSpendMs":50,"createdTime":"2020-08-25 08:30:51","host":"us-039*","referer":"https://teddysun.com/?p=284","linkMd5ListStr":"e49db512b423874d228adf7854e9c6e2,e49db512b423874d228adf7854e9c6e2","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"60.1 KB","destSize":"27.7 KB","compressRate":"46%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/centos.png","sourceStatusCode":200,"destWidth":512,"destHeight":513,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn38@2020_4/2020/08/25/00-30-51-988_b6b67f6420dd5b6d.webp","sourceBytes":32395,"destBytes":14110,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1211,"convertSpendMs":100,"createdTime":"2020-08-25 08:30:51","host":"us-52*","referer":"https://teddysun.com/?p=193","linkMd5ListStr":"b9e60d9e373bc100dff64a9f3fd0c74c,b9e60d9e373bc100dff64a9f3fd0c74c","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.6 KB","destSize":"13.8 KB","compressRate":"43.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/09/godaddy.jpg","sourceStatusCode":200,"destWidth":801,"destHeight":406,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn60@2020_6/2020/08/25/00-30-52-036_0567fc2e60464639.webp","sourceBytes":109655,"destBytes":28724,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1249,"convertSpendMs":22,"createdTime":"2020-08-25 08:30:51","host":"us-026*","referer":"https://teddysun.com/?p=279","linkMd5ListStr":"bf01ab95c64a668f5dfd3bfa3ecddc90,bf01ab95c64a668f5dfd3bfa3ecddc90","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"107.1 KB","destSize":"28.1 KB","compressRate":"26.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/gcc_logo.png","sourceStatusCode":200,"destWidth":450,"destHeight":480,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn50@2020_3/2020/08/25/00-30-52-039_7359fe58e03a8180.webp","sourceBytes":73713,"destBytes":18804,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1282,"convertSpendMs":29,"createdTime":"2020-08-25 08:30:51","host":"us-005*","referer":"https://teddysun.com/?p=432","linkMd5ListStr":"a64267636a54186517f53af2a05fa0ef,a64267636a54186517f53af2a05fa0ef","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"72 KB","destSize":"18.4 KB","compressRate":"25.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/03/picture.png","sourceStatusCode":200,"destWidth":800,"destHeight":509,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn58@2020_1/2020/08/25/00-30-52-213_3689015e122ad5ab.webp","sourceBytes":295988,"destBytes":29842,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1477,"convertSpendMs":21,"createdTime":"2020-08-25 08:30:51","host":"us-001*","referer":"https://teddysun.com/?p=110","linkMd5ListStr":"716fab4aaaa652634c6f566e2e1d76fa,716fab4aaaa652634c6f566e2e1d76fa","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"289.1 KB","destSize":"29.1 KB","compressRate":"10.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/09/phpMyAdmin.png","sourceStatusCode":200,"destWidth":800,"destHeight":566,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn76@2020_6/2020/08/25/00-30-52-089_daf8d2fa29bff2ab.webp","sourceBytes":84984,"destBytes":67446,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1411,"convertSpendMs":58,"createdTime":"2020-08-25 08:30:51","host":"us-53*","referer":"https://teddysun.com/?p=268","linkMd5ListStr":"e050e5390a499dbaf5981e9b036b2e6c,e050e5390a499dbaf5981e9b036b2e6c","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"83 KB","destSize":"65.9 KB","compressRate":"79.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/wallpaper.jpg","sourceStatusCode":200,"destWidth":800,"destHeight":500,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn12@2020_5/2020/08/25/00-30-52-087_6387b6d6dc7cc81a.webp","sourceBytes":184515,"destBytes":11062,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1358,"convertSpendMs":17,"createdTime":"2020-08-25 08:30:51","host":"europe-23*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567,926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"180.2 KB","destSize":"10.8 KB","compressRate":"6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/linux.jpg","sourceStatusCode":200,"destWidth":741,"destHeight":316,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn34@2020_3/2020/08/25/00-30-52-039_da8898b7cb91c054.webp","sourceBytes":21400,"destBytes":15404,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1418,"convertSpendMs":9,"createdTime":"2020-08-25 08:30:51","host":"europe64*","referer":"https://teddysun.com/?p=440","linkMd5ListStr":"b3637f8cdfb2ae768409659d880a308d,ca8b9f6768e1215775b849376874f989,fc688fc226f95487d0e85cc77358d713,738a51ff08ddeee263bae23c3bc7c40a,3e0fa8363a08c521486ab749d7be450b,b3637f8cdfb2ae768409659d880a308d,ca8b9f6768e1215775b849376874f989,fc688fc226f95487d0e85cc77358d713,738a51ff08ddeee263bae23c3bc7c40a,3e0fa8363a08c521486ab749d7be450b","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.9 KB","destSize":"15 KB","compressRate":"72%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2016/domains.gif","sourceStatusCode":200,"destWidth":613,"destHeight":407,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn84@2020_1/2020/08/25/00-30-52-383_92f6f13475bdca84.webp","sourceBytes":29414,"destBytes":12176,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1564,"convertSpendMs":20,"createdTime":"2020-08-25 08:30:51","host":"us-024*","referer":"https://teddysun.com/?p=446","linkMd5ListStr":"f5184736e6777aab938e241cfd5ee784,f5184736e6777aab938e241cfd5ee784","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.7 KB","destSize":"11.9 KB","compressRate":"41.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/11/javascript.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":363,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn91@2020_3/2020/08/25/00-30-52-062_c5316266779a4810.webp","sourceBytes":74138,"destBytes":20422,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1455,"convertSpendMs":11,"createdTime":"2020-08-25 08:30:51","host":"europe69*","referer":"https://teddysun.com/?p=319","linkMd5ListStr":"b80ca55c6c5364c4a6a1a24258b05789,b80ca55c6c5364c4a6a1a24258b05789","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"72.4 KB","destSize":"19.9 KB","compressRate":"27.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/Git.png","sourceStatusCode":200,"destWidth":600,"destHeight":251,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn72@2020_5/2020/08/25/00-30-52-095_1ac6f1cb1bbfe427.webp","sourceBytes":16241,"destBytes":13784,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1448,"convertSpendMs":13,"createdTime":"2020-08-25 08:30:51","host":"europe21*","referer":"https://teddysun.com/?p=333","linkMd5ListStr":"d400d305bebd9a87768d54dddcaad41e,d400d305bebd9a87768d54dddcaad41e","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.9 KB","destSize":"13.5 KB","compressRate":"84.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/lamp.jpg","sourceStatusCode":200,"destWidth":480,"destHeight":243,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn60@2020_6/2020/08/25/00-30-52-416_cf6a6c9c995360f0.webp","sourceBytes":17839,"destBytes":9820,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1597,"convertSpendMs":8,"createdTime":"2020-08-25 08:30:51","host":"us-032*","referer":"https://teddysun.com/?p=375","linkMd5ListStr":"ed63b9807429465f6180a626e6ece66e,0ef0ff54fddb3e6163b17774c56a12d4,ed63b9807429465f6180a626e6ece66e,0ef0ff54fddb3e6163b17774c56a12d4","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.4 KB","destSize":"9.6 KB","compressRate":"55%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/08/JBoss.jpg","sourceStatusCode":200,"destWidth":450,"destHeight":245,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn25@2020_5/2020/08/25/00-30-52-428_1204d6d6a8d90d4e.webp","sourceBytes":8152,"destBytes":8408,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1650,"convertSpendMs":6,"createdTime":"2020-08-25 08:30:51","host":"us-013*","referer":"https://teddysun.com/?p=260","linkMd5ListStr":"08ceacc33dc3312b49c5a1cd75070aa1,08ceacc33dc3312b49c5a1cd75070aa1","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8 KB","destSize":"8.2 KB","compressRate":"103.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2017/binary.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":375,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn72@2020_2/2020/08/25/00-30-52-076_ef5214bbf5081704.webp","sourceBytes":117986,"destBytes":64380,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1616,"convertSpendMs":18,"createdTime":"2020-08-25 08:30:51","host":"europe65*","referer":"https://teddysun.com/?p=507","linkMd5ListStr":"68d7eaa970bf9de09fa3964b14f256d0,68d7eaa970bf9de09fa3964b14f256d0","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"115.2 KB","destSize":"62.9 KB","compressRate":"54.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/zendguard.png","sourceStatusCode":200,"destWidth":640,"destHeight":315,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn4@2020_3/2020/08/25/00-30-52-521_6447f7f8a6519d4a.webp","sourceBytes":177928,"destBytes":15102,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":862,"convertSpendMs":13,"createdTime":"2020-08-25 08:30:52","host":"us-53*","referer":"https://teddysun.com/?p=417","linkMd5ListStr":"c03fa83b38d3b063cbac7fd990bacb58,c03fa83b38d3b063cbac7fd990bacb58","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"173.8 KB","destSize":"14.7 KB","compressRate":"8.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/Linux.jpg","sourceStatusCode":200,"destWidth":640,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn44@2020_3/2020/08/25/00-30-52-630_d5baed85199ae75d.webp","sourceBytes":108076,"destBytes":4972,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1858,"convertSpendMs":18,"createdTime":"2020-08-25 08:30:51","host":"us-010*","referer":"https://teddysun.com/?p=351","linkMd5ListStr":"52a645ffa3dd23058d26130aa749617f,52a645ffa3dd23058d26130aa749617f","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"105.5 KB","destSize":"4.9 KB","compressRate":"4.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/12/pian.jpg","sourceStatusCode":200,"destWidth":500,"destHeight":336,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn54@2020_3/2020/08/25/00-30-52-443_801662c9f3bd4c88.webp","sourceBytes":113187,"destBytes":14916,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1830,"convertSpendMs":49,"createdTime":"2020-08-25 08:30:51","host":"europe68*","referer":"https://teddysun.com/?p=324","linkMd5ListStr":"bafbffeb33386ad850f043815c07195b,bafbffeb33386ad850f043815c07195b","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"110.5 KB","destSize":"14.6 KB","compressRate":"13.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/googlejapaneseinput_small.png","sourceStatusCode":200,"destWidth":600,"destHeight":501,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn96@2020_1/2020/08/25/00-30-52-467_8ad862464cd34c5a.webp","sourceBytes":127741,"destBytes":29520,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1837,"convertSpendMs":15,"createdTime":"2020-08-25 08:30:51","host":"europe-57*","referer":"https://teddysun.com/?p=389","linkMd5ListStr":"3ae124e7d969cd80f518d906e1ce12ed,3ae124e7d969cd80f518d906e1ce12ed","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"124.7 KB","destSize":"28.8 KB","compressRate":"23.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/shadowsocks.png","sourceStatusCode":200,"destWidth":600,"destHeight":293,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn52@2020_1/2020/08/25/00-30-52-806_c9911c8615f31a57.webp","sourceBytes":33008,"destBytes":8746,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":812,"convertSpendMs":25,"createdTime":"2020-08-25 08:30:52","host":"us-026*","referer":"https://teddysun.com/?p=569","linkMd5ListStr":"b99843baba90026fccd42bb7e9b8fe19,b99843baba90026fccd42bb7e9b8fe19","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.2 KB","destSize":"8.5 KB","compressRate":"26.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/google.png","sourceStatusCode":200,"destWidth":520,"destHeight":392,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn8@2020_5/2020/08/25/00-30-52-830_5d9178f33877a975.webp","sourceBytes":93340,"destBytes":14860,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1141,"convertSpendMs":14,"createdTime":"2020-08-25 08:30:52","host":"us-030*","referer":"https://teddysun.com/?p=208","linkMd5ListStr":"c991b03dd39b2eddf2ed3026b653c973,8bc06f5e2e587a7733099bf7b140e586,c991b03dd39b2eddf2ed3026b653c973,8bc06f5e2e587a7733099bf7b140e586","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"91.2 KB","destSize":"14.5 KB","compressRate":"15.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/09/outlook_logo.jpg","sourceStatusCode":200,"destWidth":640,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn35@2020_3/2020/08/25/00-30-52-913_47a342982176e8eb.webp","sourceBytes":20710,"destBytes":9744,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":963,"convertSpendMs":15,"createdTime":"2020-08-25 08:30:52","host":"us-010*","referer":"https://teddysun.com/?p=273","linkMd5ListStr":"bc8ca4e5ce63285308d67828fbf91d93,bc8ca4e5ce63285308d67828fbf91d93","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.2 KB","destSize":"9.5 KB","compressRate":"47%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2019/domain5.png","sourceStatusCode":200,"destWidth":600,"destHeight":513,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn68@2020_2/2020/08/25/00-30-52-836_0325bb29339930f7.webp","sourceBytes":38820,"destBytes":25868,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":866,"convertSpendMs":13,"createdTime":"2020-08-25 08:30:52","host":"us-53*","referer":"https://teddysun.com/?p=552","linkMd5ListStr":"badd196288d8b8ed72e711683e071ab1,badd196288d8b8ed72e711683e071ab1","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.9 KB","destSize":"25.3 KB","compressRate":"66.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/downtime.png","sourceStatusCode":200,"destWidth":530,"destHeight":398,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn11@2020_5/2020/08/25/00-30-52-891_8ee47a105faa604b.webp","sourceBytes":64269,"destBytes":16566,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1136,"convertSpendMs":16,"createdTime":"2020-08-25 08:30:52","host":"us-018*","referer":"https://teddysun.com/?p=166","linkMd5ListStr":"529e16be0c9b90a34230c6a2b36d10b4,529e16be0c9b90a34230c6a2b36d10b4","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"62.8 KB","destSize":"16.2 KB","compressRate":"25.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/07/vps.jpg","sourceStatusCode":200,"destWidth":540,"destHeight":318,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn59@2020_2/2020/08/25/00-30-52-956_961cf20355c72e2d.webp","sourceBytes":36559,"destBytes":14684,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1036,"convertSpendMs":8,"createdTime":"2020-08-25 08:30:52","host":"us-002*","referer":"https://teddysun.com/?p=276","linkMd5ListStr":"ae7297f8f0feae0fca3b731d8582b788,a67dc54cab0cfa05737229a26e38411e,c6da6ed9781a6e962a9d3d6e51504f2e,ae7297f8f0feae0fca3b731d8582b788,a67dc54cab0cfa05737229a26e38411e,c6da6ed9781a6e962a9d3d6e51504f2e","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"35.7 KB","destSize":"14.3 KB","compressRate":"40.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/06/google_reader_close.jpg","sourceStatusCode":200,"destWidth":540,"destHeight":374,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn27@2020_6/2020/08/25/00-30-52-981_94883d543c6f2fc0.webp","sourceBytes":30828,"destBytes":18838,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1092,"convertSpendMs":11,"createdTime":"2020-08-25 08:30:52","host":"us-034*","referer":"https://teddysun.com/?p=231","linkMd5ListStr":"b742eb374161cdec1ca327337410bbd7,b742eb374161cdec1ca327337410bbd7","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.1 KB","destSize":"18.4 KB","compressRate":"61.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/03/theme_option.png","sourceStatusCode":200,"destWidth":712,"destHeight":642,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn16@2020_1/2020/08/25/00-30-52-915_28c6634e6840bd87.webp","sourceBytes":89874,"destBytes":27846,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1198,"convertSpendMs":34,"createdTime":"2020-08-25 08:30:52","host":"us-006*","referer":"https://teddysun.com/?p=113","linkMd5ListStr":"504be2b9c4e9057b0a520d94cb87f796,504be2b9c4e9057b0a520d94cb87f796","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"87.8 KB","destSize":"27.2 KB","compressRate":"31%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2016/gdrive.png","sourceStatusCode":200,"destWidth":705,"destHeight":344,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn96@2020_5/2020/08/25/00-30-53-128_1194ba1f1f101105.webp","sourceBytes":71838,"destBytes":17374,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":836,"convertSpendMs":12,"createdTime":"2020-08-25 08:30:53","host":"us-022*","referer":"https://teddysun.com/?p=469","linkMd5ListStr":"c9b7b5493d399c0b9d473bca1c643a02,c9b7b5493d399c0b9d473bca1c643a02","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"70.2 KB","destSize":"17 KB","compressRate":"24.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/12/swap.jpg","sourceStatusCode":200,"destWidth":518,"destHeight":302,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn52@2020_6/2020/08/25/00-30-52-802_740a1a0ba2a49b3c.webp","sourceBytes":16150,"destBytes":13596,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2247,"convertSpendMs":7,"createdTime":"2020-08-25 08:30:51","host":"europe61*","referer":"https://teddysun.com/?p=321","linkMd5ListStr":"0a002e08cfbd3a58475748b05ddede3c,0a002e08cfbd3a58475748b05ddede3c","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.8 KB","destSize":"13.3 KB","compressRate":"84.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2020/android.png","sourceStatusCode":200,"destWidth":810,"destHeight":540,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn11@2020_5/2020/08/25/00-30-53-244_2d4be1b31b7fc328.webp","sourceBytes":66021,"destBytes":9408,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":803,"convertSpendMs":36,"createdTime":"2020-08-25 08:30:53","host":"us-039*","referer":"https://teddysun.com/?p=584","linkMd5ListStr":"b0915d4dce1b310a7c94ad5d06cb6bf5,b0915d4dce1b310a7c94ad5d06cb6bf5","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"64.5 KB","destSize":"9.2 KB","compressRate":"14.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/08/boom.jpg","sourceStatusCode":200,"destWidth":540,"destHeight":371,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn80@2020_5/2020/08/25/00-30-53-191_e2eca238a4b4420c.webp","sourceBytes":27361,"destBytes":14312,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1199,"convertSpendMs":12,"createdTime":"2020-08-25 08:30:52","host":"us-006*","referer":"https://teddysun.com/?p=262","linkMd5ListStr":"e0e21bc386fa105b9ef3b7cf0c262197,e0e21bc386fa105b9ef3b7cf0c262197","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.7 KB","destSize":"14 KB","compressRate":"52.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/07/supremebytes.jpg","sourceStatusCode":200,"destWidth":540,"destHeight":340,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn76@2020_5/2020/08/25/00-30-53-178_bd2fdf1bc80829cc.webp","sourceBytes":53895,"destBytes":20096,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1231,"convertSpendMs":9,"createdTime":"2020-08-25 08:30:52","host":"us-018*","referer":"https://teddysun.com/?p=240","linkMd5ListStr":"13873f199369e9f80680aba8811ac37b,13873f199369e9f80680aba8811ac37b","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"52.6 KB","destSize":"19.6 KB","compressRate":"37.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/logo_winrar.png","sourceStatusCode":200,"destWidth":512,"destHeight":512,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn48@2020_4/2020/08/25/00-30-53-240_f397989591f8f0c9.webp","sourceBytes":51568,"destBytes":31556,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1343,"convertSpendMs":64,"createdTime":"2020-08-25 08:30:52","host":"us-039*","referer":"https://teddysun.com/?p=174","linkMd5ListStr":"547c1e06aa7e4d9c638f69714347ca9a,547c1e06aa7e4d9c638f69714347ca9a","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.4 KB","destSize":"30.8 KB","compressRate":"61.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/07/unixbench.png","sourceStatusCode":200,"destWidth":540,"destHeight":501,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn91@2020_3/2020/08/25/00-30-52-996_1589511b235aac67.webp","sourceBytes":47642,"destBytes":26414,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2415,"convertSpendMs":17,"createdTime":"2020-08-25 08:30:51","host":"europe-25*","referer":"https://teddysun.com/?p=245","linkMd5ListStr":"bc093a96ab878a2548b5f113f9f3eef2,bc093a96ab878a2548b5f113f9f3eef2","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.5 KB","destSize":"25.8 KB","compressRate":"55.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/06/VC_Redist_Installer.png","sourceStatusCode":200,"destWidth":513,"destHeight":398,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn76@2020_3/2020/08/25/00-30-52-793_a89d5d463c526651.webp","sourceBytes":23858,"destBytes":27650,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2413,"convertSpendMs":10,"createdTime":"2020-08-25 08:30:51","host":"europe-59*","referer":"https://teddysun.com/?p=223","linkMd5ListStr":"dc201566b1ae6ac18c3008f655783260,dc201566b1ae6ac18c3008f655783260","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.3 KB","destSize":"27 KB","compressRate":"115.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/domain.jpg","sourceStatusCode":200,"destWidth":610,"destHeight":427,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn92@2020_1/2020/08/25/00-30-53-369_f90af01ce64da9c5.webp","sourceBytes":63890,"destBytes":23956,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1117,"convertSpendMs":12,"createdTime":"2020-08-25 08:30:53","host":"us-034*","referer":"https://teddysun.com/?p=429","linkMd5ListStr":"2b4605126d440b29241bea23a299c115,2b4605126d440b29241bea23a299c115","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"62.4 KB","destSize":"23.4 KB","compressRate":"37.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2019/firewall.jpg","sourceStatusCode":200,"destWidth":1080,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn19@2020_4/2020/08/25/00-30-53-127_39222b0bf85c0f37.webp","sourceBytes":53176,"destBytes":19180,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1413,"convertSpendMs":22,"createdTime":"2020-08-25 08:30:52","host":"europe69*","referer":"https://teddysun.com/?p=566","linkMd5ListStr":"97a8b753ef69883eff9d66375451c70f,97a8b753ef69883eff9d66375451c70f","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.9 KB","destSize":"18.7 KB","compressRate":"36.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/phpMyAdmin.png","sourceStatusCode":200,"destWidth":599,"destHeight":424,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn100@2020_2/2020/08/25/00-30-53-371_e330ed41ac53a429.webp","sourceBytes":133751,"destBytes":62332,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1171,"convertSpendMs":31,"createdTime":"2020-08-25 08:30:53","host":"us-010*","referer":"https://teddysun.com/?p=364","linkMd5ListStr":"9fba75e95fcb402ce8d726a8da54caaf,cc1989cae97327eb1db61964575e0244,9fba75e95fcb402ce8d726a8da54caaf,cc1989cae97327eb1db61964575e0244","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"130.6 KB","destSize":"60.9 KB","compressRate":"46.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/10/YouTube.jpg","sourceStatusCode":200,"destWidth":620,"destHeight":359,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn16@2020_1/2020/08/25/00-30-53-439_9f9f12ab6dd82dcc.webp","sourceBytes":19044,"destBytes":16462,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1088,"convertSpendMs":13,"createdTime":"2020-08-25 08:30:53","host":"us-026*","referer":"https://teddysun.com/?p=282","linkMd5ListStr":"d981277181f19c60cda4298fd9f0e3ba,d981277181f19c60cda4298fd9f0e3ba","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.6 KB","destSize":"16.1 KB","compressRate":"86.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/google_block.jpg","sourceStatusCode":200,"destWidth":640,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn31@2020_3/2020/08/25/00-30-53-472_e61d7c82413e22d2.webp","sourceBytes":22587,"destBytes":18028,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1629,"convertSpendMs":28,"createdTime":"2020-08-25 08:30:52","host":"us-022*","referer":"https://teddysun.com/?p=390","linkMd5ListStr":"c9530511e448decf6d4ee3b2f9f4304a,c9530511e448decf6d4ee3b2f9f4304a","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.1 KB","destSize":"17.6 KB","compressRate":"79.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_1.png","sourceStatusCode":200,"destWidth":1083,"destHeight":653,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn48@2020_6/2020/08/25/00-30-53-087_278e994b8cd1ad98.webp","sourceBytes":68714,"destBytes":60970,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2663,"convertSpendMs":28,"createdTime":"2020-08-25 08:30:51","host":"europe-23*","referer":"https://teddysun.com/?p=317","linkMd5ListStr":"84e3eba0ae84d629d9a777a2a0d465bf,f96ad47c7313139e27265aad2576e2ea,84e3eba0ae84d629d9a777a2a0d465bf,f96ad47c7313139e27265aad2576e2ea","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"67.1 KB","destSize":"59.5 KB","compressRate":"88.7%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/guahao.jpg","sourceStatusCode":200,"destWidth":520,"destHeight":254,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn24@2020_4/2020/08/25/00-30-53-269_a51da1ad1e800cf2.webp","sourceBytes":35135,"destBytes":10622,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1605,"convertSpendMs":6,"createdTime":"2020-08-25 08:30:52","host":"europe-57*","referer":"https://teddysun.com/?p=210","linkMd5ListStr":"2d105f82fb7fd057a81ec26b33e47800,2d105f82fb7fd057a81ec26b33e47800","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.3 KB","destSize":"10.4 KB","compressRate":"30.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/docker.png","sourceStatusCode":200,"destWidth":773,"destHeight":537,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn43@2020_4/2020/08/25/00-30-53-616_609ae3d1e5be8850.webp","sourceBytes":37884,"destBytes":21998,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":869,"convertSpendMs":20,"createdTime":"2020-08-25 08:30:53","host":"us-006*","referer":"https://teddysun.com/?p=536","linkMd5ListStr":"c92873e91eaf01224f7d5a07356245ed,4fa9c259c3d559984364b9a62b7258fb,5b7e40a642a0e26b50fdc4f3e9a6f3aa,c92873e91eaf01224f7d5a07356245ed,4fa9c259c3d559984364b9a62b7258fb,5b7e40a642a0e26b50fdc4f3e9a6f3aa","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37 KB","destSize":"21.5 KB","compressRate":"58.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/apache.jpg","sourceStatusCode":200,"destWidth":370,"destHeight":313,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn39@2020_1/2020/08/25/00-30-53-276_972f55ebabde1afa.webp","sourceBytes":39337,"destBytes":11132,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1599,"convertSpendMs":6,"createdTime":"2020-08-25 08:30:52","host":"europe-23*","referer":"https://teddysun.com/?p=326","linkMd5ListStr":"de12ade2979e76b9b0bc9be806a10957,c17b940cd638d4e3b7cd8dcfda50f449,ae59440654449fddb8052e6e3b13fcbb,de12ade2979e76b9b0bc9be806a10957,c17b940cd638d4e3b7cd8dcfda50f449,ae59440654449fddb8052e6e3b13fcbb","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.4 KB","destSize":"10.9 KB","compressRate":"28.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/poco_eset1.png","sourceStatusCode":200,"destWidth":352,"destHeight":182,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn3@2020_2/2020/08/25/00-30-53-465_0d8c8214b30f513e.webp","sourceBytes":7946,"destBytes":8962,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1368,"convertSpendMs":6,"createdTime":"2020-08-25 08:30:53","host":"europe-23*","referer":"https://teddysun.com/?p=162","linkMd5ListStr":"d26ae5fd21b1a1cc97262cbf9e53b886,d26ae5fd21b1a1cc97262cbf9e53b886","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.8 KB","destSize":"8.8 KB","compressRate":"112.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/host1plus.png","sourceStatusCode":200,"destWidth":646,"destHeight":220,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn23@2020_2/2020/08/25/00-30-53-491_a72d02d3afb2f4c2.webp","sourceBytes":14389,"destBytes":19266,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1407,"convertSpendMs":23,"createdTime":"2020-08-25 08:30:53","host":"us-002*","referer":"https://teddysun.com/?p=416","linkMd5ListStr":"b58a887125f8273ee4b734af61b113b5,b58a887125f8273ee4b734af61b113b5","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.1 KB","destSize":"18.8 KB","compressRate":"133.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/03/qq_1.png","sourceStatusCode":200,"destWidth":910,"destHeight":648,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn56@2020_6/2020/08/25/00-30-53-849_e4d1c1f2ce7b131e.webp","sourceBytes":69038,"destBytes":37326,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1910,"convertSpendMs":110,"createdTime":"2020-08-25 08:30:52","host":"us-014*","referer":"https://teddysun.com/?p=136","linkMd5ListStr":"0d9b43089f9ae1c925219206b3e5c5f9,0d9b43089f9ae1c925219206b3e5c5f9","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"67.4 KB","destSize":"36.5 KB","compressRate":"54.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/wordpresstarget.png","sourceStatusCode":200,"destWidth":352,"destHeight":344,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn55@2020_6/2020/08/25/00-30-53-970_261c2f99c79d6c55.webp","sourceBytes":32618,"destBytes":8734,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1026,"convertSpendMs":7,"createdTime":"2020-08-25 08:30:53","host":"us-034*","referer":"https://teddysun.com/?p=164","linkMd5ListStr":"9b25a5acdb2d90476d802ef041aece70,9b25a5acdb2d90476d802ef041aece70","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.9 KB","destSize":"8.5 KB","compressRate":"26.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/06/duzhan.jpg","sourceStatusCode":200,"destWidth":520,"destHeight":706,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn72@2020_4/2020/08/25/00-30-53-934_49ae5b36f26d3044.webp","sourceBytes":157010,"destBytes":61798,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2004,"convertSpendMs":21,"createdTime":"2020-08-25 08:30:52","host":"us-030*","referer":"https://teddysun.com/?p=219","linkMd5ListStr":"b6a1622f346cda68b157699d95067140,b6a1622f346cda68b157699d95067140","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"153.3 KB","destSize":"60.3 KB","compressRate":"39.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/owncloud_logo.png","sourceStatusCode":200,"destWidth":520,"destHeight":258,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn60@2020_5/2020/08/25/00-30-54-013_23561b365956531d.webp","sourceBytes":30752,"destBytes":22190,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1115,"convertSpendMs":29,"createdTime":"2020-08-25 08:30:53","host":"us-022*","referer":"https://teddysun.com/?p=211","linkMd5ListStr":"9843ffee10e5beac6c84cd4d7d4a521d,bca6c594b13d1f69ffdd95d46ebba14d,9843ffee10e5beac6c84cd4d7d4a521d,bca6c594b13d1f69ffdd95d46ebba14d","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30 KB","destSize":"21.7 KB","compressRate":"72.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/06/icp.jpg","sourceStatusCode":200,"destWidth":520,"destHeight":390,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn64@2020_3/2020/08/25/00-30-53-991_38c3c8692f966107.webp","sourceBytes":47055,"destBytes":15924,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1140,"convertSpendMs":12,"createdTime":"2020-08-25 08:30:53","host":"us-010*","referer":"https://teddysun.com/?p=220","linkMd5ListStr":"22683423d86da97423a01d7406122298,22683423d86da97423a01d7406122298","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46 KB","destSize":"15.6 KB","compressRate":"33.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/11/wall.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":387,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn20@2020_4/2020/08/25/00-30-53-958_c4a4d32fb88c1d42.webp","sourceBytes":52908,"destBytes":52908,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1691,"convertSpendMs":29,"createdTime":"2020-08-25 08:30:53","host":"us-014*","referer":"https://teddysun.com/?p=297","linkMd5ListStr":"0bfaee07cd125ce265eaeab898ee35f4,e7a80ae5fa93d391dccda63e13aea4e3,0bfaee07cd125ce265eaeab898ee35f4,e7a80ae5fa93d391dccda63e13aea4e3","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.7 KB","destSize":"51.7 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/kms.png","sourceStatusCode":200,"destWidth":738,"destHeight":427,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn96@2020_4/2020/08/25/00-30-54-110_765a8848f0b46589.webp","sourceBytes":133458,"destBytes":22662,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":864,"convertSpendMs":21,"createdTime":"2020-08-25 08:30:54","host":"us-53*","referer":"https://teddysun.com/?p=530","linkMd5ListStr":"5f18441c157b0a40961851bb704c4109,5f18441c157b0a40961851bb704c4109","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"130.3 KB","destSize":"22.1 KB","compressRate":"17%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/vps_diagram.gif","sourceStatusCode":200,"destWidth":427,"destHeight":392,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn31@2020_3/2020/08/25/00-30-54-104_49f756d3e7a783ef.webp","sourceBytes":31301,"destBytes":15890,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1573,"convertSpendMs":26,"createdTime":"2020-08-25 08:30:53","host":"us-53*","referer":"https://teddysun.com/?p=171","linkMd5ListStr":"4f2dad3a07babcb26e269ad46a5c1a26,68c53e94e5792792ba099ddc856f2b0e,4f2dad3a07babcb26e269ad46a5c1a26,68c53e94e5792792ba099ddc856f2b0e","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.6 KB","destSize":"15.5 KB","compressRate":"50.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/https.jpg","sourceStatusCode":200,"destWidth":800,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn4@2020_4/2020/08/25/00-30-54-136_4758deb6f28cab8d.webp","sourceBytes":14997,"destBytes":10086,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":843,"convertSpendMs":16,"createdTime":"2020-08-25 08:30:54","host":"us-018*","referer":"https://teddysun.com/?p=527","linkMd5ListStr":"e6c54a19d9cac5a7ec96a09ef8ca1ec5,e6c54a19d9cac5a7ec96a09ef8ca1ec5","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.6 KB","destSize":"9.8 KB","compressRate":"67.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/DigitalOcean.png","sourceStatusCode":200,"destWidth":520,"destHeight":263,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn39@2020_4/2020/08/25/00-30-53-988_83cdf3bf8d95dfe5.webp","sourceBytes":131208,"destBytes":20018,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1431,"convertSpendMs":12,"createdTime":"2020-08-25 08:30:53","host":"us-018*","referer":"https://teddysun.com/?p=217","linkMd5ListStr":"eb9b2a5b8d6806b513e486b8d06fc019,eb9b2a5b8d6806b513e486b8d06fc019","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"128.1 KB","destSize":"19.5 KB","compressRate":"15.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/07/subversion.png","sourceStatusCode":200,"destWidth":540,"destHeight":405,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn84@2020_1/2020/08/25/00-30-54-212_c1bf5e8ca6ecf1f0.webp","sourceBytes":153319,"destBytes":13432,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1048,"convertSpendMs":30,"createdTime":"2020-08-25 08:30:53","host":"us-014*","referer":"https://teddysun.com/?p=243","linkMd5ListStr":"a0142477ee9a6142a0f4b60fb2693fcf,a0142477ee9a6142a0f4b60fb2693fcf","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"149.7 KB","destSize":"13.1 KB","compressRate":"8.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/mysql.png","sourceStatusCode":200,"destWidth":600,"destHeight":310,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn43@2020_5/2020/08/25/00-30-53-891_2605f18ed60dab66.webp","sourceBytes":10445,"destBytes":11870,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2255,"convertSpendMs":7,"createdTime":"2020-08-25 08:30:52","host":"europe61*","referer":"https://teddysun.com/?p=424","linkMd5ListStr":"a4edeb5d81534d1e490a762384a13966,a4edeb5d81534d1e490a762384a13966","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.2 KB","destSize":"11.6 KB","compressRate":"113.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2016/wp-security.png","sourceStatusCode":200,"destWidth":650,"destHeight":341,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn76@2020_5/2020/08/25/00-30-54-266_b1d644ede6769ce5.webp","sourceBytes":56361,"destBytes":17134,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1246,"convertSpendMs":48,"createdTime":"2020-08-25 08:30:53","host":"us-039*","referer":"https://teddysun.com/?p=482","linkMd5ListStr":"1ddb7ddb9ee88eacb5f3a9c95127ea03,1ddb7ddb9ee88eacb5f3a9c95127ea03","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55 KB","destSize":"16.7 KB","compressRate":"30.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/yang.jpg","sourceStatusCode":200,"destWidth":520,"destHeight":662,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn36@2020_3/2020/08/25/00-30-54-024_1b00839113fa4d36.webp","sourceBytes":211863,"destBytes":103860,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1720,"convertSpendMs":26,"createdTime":"2020-08-25 08:30:53","host":"us-030*","referer":"https://teddysun.com/?p=209","linkMd5ListStr":"2581ffd39d6084601b6bc4bdab75cae9,2581ffd39d6084601b6bc4bdab75cae9","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"206.9 KB","destSize":"101.4 KB","compressRate":"49%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/xampp.jpg","sourceStatusCode":200,"destWidth":356,"destHeight":313,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn100@2020_6/2020/08/25/00-30-54-343_19793b53e15ccbd3.webp","sourceBytes":18221,"destBytes":10846,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1078,"convertSpendMs":6,"createdTime":"2020-08-25 08:30:54","host":"us-030*","referer":"https://teddysun.com/?p=206","linkMd5ListStr":"916d90ec7fabfa9c610ad09991e8b422,916d90ec7fabfa9c610ad09991e8b422","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.8 KB","destSize":"10.6 KB","compressRate":"59.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/02/google_drive.png","sourceStatusCode":200,"destWidth":603,"destHeight":355,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn19@2020_6/2020/08/25/00-30-54-522_d727907a23f380a9.webp","sourceBytes":48899,"destBytes":10014,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":981,"convertSpendMs":10,"createdTime":"2020-08-25 08:30:54","host":"us-034*","referer":"https://teddysun.com/?p=53","linkMd5ListStr":"c962ea90d6975968d867d4c6ba3c199b,c962ea90d6975968d867d4c6ba3c199b","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.8 KB","destSize":"9.8 KB","compressRate":"20.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/09/outlook-com-logo.gif","sourceStatusCode":200,"destWidth":600,"destHeight":297,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn8@2020_5/2020/08/25/00-30-54-337_91484faefc600815.webp","sourceBytes":35652,"destBytes":6258,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1160,"convertSpendMs":15,"createdTime":"2020-08-25 08:30:54","host":"us-006*","referer":"https://teddysun.com/?p=274","linkMd5ListStr":"1ad1b28c9565e68e75771d1497824fc6,1ad1b28c9565e68e75771d1497824fc6","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.8 KB","destSize":"6.1 KB","compressRate":"17.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2016/domain2.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":278,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn64@2020_2/2020/08/25/00-30-54-151_2a52a42911149545.webp","sourceBytes":46284,"destBytes":16200,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2387,"convertSpendMs":9,"createdTime":"2020-08-25 08:30:52","host":"europe65*","referer":"https://teddysun.com/?p=464","linkMd5ListStr":"93d5afaa35a51335513ec957cca66a0d,93d5afaa35a51335513ec957cca66a0d","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.2 KB","destSize":"15.8 KB","compressRate":"35%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/03/tongzhi.jpg","sourceStatusCode":200,"destWidth":1000,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn88@2020_2/2020/08/25/00-30-54-499_757a5c28caf5c18b.webp","sourceBytes":112013,"destBytes":36782,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1264,"convertSpendMs":19,"createdTime":"2020-08-25 08:30:54","host":"us-002*","referer":"https://teddysun.com/?p=111","linkMd5ListStr":"5286ac14335c4d43de6f4e5539fffd10,5286ac14335c4d43de6f4e5539fffd10","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"109.4 KB","destSize":"35.9 KB","compressRate":"32.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/shudu1.jpg","sourceStatusCode":200,"destWidth":400,"destHeight":446,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn23@2020_3/2020/08/25/00-30-54-552_5df1431b9536592c.webp","sourceBytes":21884,"destBytes":10928,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1005,"convertSpendMs":10,"createdTime":"2020-08-25 08:30:54","host":"us-022*","referer":"https://teddysun.com/?p=212","linkMd5ListStr":"1e0ff589bf48f86ef71bb62008678b49,1e0ff589bf48f86ef71bb62008678b49","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.4 KB","destSize":"10.7 KB","compressRate":"49.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/vultr.png","sourceStatusCode":200,"destWidth":640,"destHeight":406,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn99@2020_1/2020/08/25/00-30-54-255_743a76dfb83057ed.webp","sourceBytes":206422,"destBytes":26780,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2813,"convertSpendMs":14,"createdTime":"2020-08-25 08:30:52","host":"europe65*","referer":"https://teddysun.com/?p=353","linkMd5ListStr":"c207934e2e1ec2f7eca32eabb6071876,c207934e2e1ec2f7eca32eabb6071876","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"201.6 KB","destSize":"26.2 KB","compressRate":"13%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/09/disk.jpg","sourceStatusCode":200,"destWidth":918,"destHeight":494,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn51@2020_4/2020/08/25/00-30-54-118_53657afa6ee83ca9.webp","sourceBytes":46566,"destBytes":40610,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1631,"convertSpendMs":24,"createdTime":"2020-08-25 08:30:53","host":"europe-57*","referer":"https://teddysun.com/?p=270","linkMd5ListStr":"c9d9f40bc4d29236a22c2c15dad6acc0,c9d9f40bc4d29236a22c2c15dad6acc0","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.5 KB","destSize":"39.7 KB","compressRate":"87.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/dropbox.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":350,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn28@2020_3/2020/08/25/00-30-54-599_251a5c642dad4235.webp","sourceBytes":26132,"destBytes":12758,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1001,"convertSpendMs":19,"createdTime":"2020-08-25 08:30:54","host":"us-010*","referer":"https://teddysun.com/?p=178","linkMd5ListStr":"89b6fd92fbf2ea09a9a8b75a9b093a69,89b6fd92fbf2ea09a9a8b75a9b093a69","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25.5 KB","destSize":"12.5 KB","compressRate":"48.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/ssl.png","sourceStatusCode":200,"destWidth":519,"destHeight":231,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn71@2020_1/2020/08/25/00-30-54-262_7daa115448c96bd3.webp","sourceBytes":64255,"destBytes":18782,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1436,"convertSpendMs":11,"createdTime":"2020-08-25 08:30:53","host":"europe61*","referer":"https://teddysun.com/?p=454","linkMd5ListStr":"cbeb0e79ddbb9c5280a1607caf95358f,85b0cdab7cb88d05c2850736f3f3e34e,cbeb0e79ddbb9c5280a1607caf95358f,85b0cdab7cb88d05c2850736f3f3e34e","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"62.7 KB","destSize":"18.3 KB","compressRate":"29.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/hack.jpg","sourceStatusCode":200,"destWidth":470,"destHeight":352,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn84@2020_2/2020/08/25/00-30-54-107_808e2a77e47e35e3.webp","sourceBytes":38199,"destBytes":35184,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2435,"convertSpendMs":11,"createdTime":"2020-08-25 08:30:52","host":"europe69*","referer":"https://teddysun.com/?p=203","linkMd5ListStr":"8d8f55040afe84128701c1b945c604d8,fd2a84fd6bac706479cfa13d952be39f,8d8f55040afe84128701c1b945c604d8,fd2a84fd6bac706479cfa13d952be39f","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.3 KB","destSize":"34.4 KB","compressRate":"92.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/win_linux.jpg","sourceStatusCode":200,"destWidth":800,"destHeight":401,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn43@2020_2/2020/08/25/00-30-54-541_bda9e586d38c5fe5.webp","sourceBytes":70573,"destBytes":13740,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":980,"convertSpendMs":39,"createdTime":"2020-08-25 08:30:54","host":"us-026*","referer":"https://teddysun.com/?p=545","linkMd5ListStr":"39e04f2b79e5593c8e6ffea333a47035,39e04f2b79e5593c8e6ffea333a47035","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"68.9 KB","destSize":"13.4 KB","compressRate":"19.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/08/vdisk.jpg","sourceStatusCode":200,"destWidth":597,"destHeight":326,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn88@2020_6/2020/08/25/00-30-54-352_2e70f34eeaa87d52.webp","sourceBytes":55555,"destBytes":21838,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2469,"convertSpendMs":10,"createdTime":"2020-08-25 08:30:52","host":"europe-57*","referer":"https://teddysun.com/?p=263","linkMd5ListStr":"f70689f6cc55373d990a6d2717cabde3,f70689f6cc55373d990a6d2717cabde3","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"54.3 KB","destSize":"21.3 KB","compressRate":"39.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/08/Toad_for_SQLServer.jpg","sourceStatusCode":200,"destWidth":442,"destHeight":220,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn28@2020_4/2020/08/25/00-30-54-468_77d233e8e1d9bf7b.webp","sourceBytes":17838,"destBytes":13612,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2108,"convertSpendMs":9,"createdTime":"2020-08-25 08:30:53","host":"europe65*","referer":"https://teddysun.com/?p=255","linkMd5ListStr":"87a98a05dfc236b4a066dd14157f586f,87a98a05dfc236b4a066dd14157f586f","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.4 KB","destSize":"13.3 KB","compressRate":"76.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/pptp_vpn_server1.png","sourceStatusCode":200,"destWidth":962,"destHeight":672,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn68@2020_1/2020/08/25/00-30-54-371_9337ab32e8e6325d.webp","sourceBytes":56966,"destBytes":44794,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1617,"convertSpendMs":34,"createdTime":"2020-08-25 08:30:53","host":"europe-23*","referer":"https://teddysun.com/?p=151","linkMd5ListStr":"ceab8b84993b7658697428558d9de747,ceab8b84993b7658697428558d9de747","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.6 KB","destSize":"43.7 KB","compressRate":"78.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/09/pg_small.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":229,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn7@2020_1/2020/08/25/00-30-54-410_cac8ebf7d9698e16.webp","sourceBytes":36982,"destBytes":27794,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2313,"convertSpendMs":9,"createdTime":"2020-08-25 08:30:53","host":"europe61*","referer":"https://teddysun.com/?p=271","linkMd5ListStr":"846dfed2a4695df306ba522feaae26a6,846dfed2a4695df306ba522feaae26a6","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.1 KB","destSize":"27.1 KB","compressRate":"75.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/08/bandwagonhost.png","sourceStatusCode":200,"destWidth":1008,"destHeight":694,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn80@2020_3/2020/08/25/00-30-54-687_3369c2e7942afef5.webp","sourceBytes":362422,"destBytes":77556,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1650,"convertSpendMs":76,"createdTime":"2020-08-25 08:30:53","host":"us-026*","referer":"https://teddysun.com/?p=249","linkMd5ListStr":"4fdc64f2f0e6fcce305c018dfa4001c5,4fdc64f2f0e6fcce305c018dfa4001c5","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"353.9 KB","destSize":"75.7 KB","compressRate":"21.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/webmin.jpg","sourceStatusCode":200,"destWidth":599,"destHeight":445,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn40@2020_2/2020/08/25/00-30-54-798_ace66d06ca04c9f8.webp","sourceBytes":114128,"destBytes":14648,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1212,"convertSpendMs":47,"createdTime":"2020-08-25 08:30:54","host":"us-039*","referer":"https://teddysun.com/?p=403","linkMd5ListStr":"cee079b76b5252f95de60a862fda1943,cee079b76b5252f95de60a862fda1943","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"111.5 KB","destSize":"14.3 KB","compressRate":"12.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/08/eclipse_failed_error.jpg","sourceStatusCode":200,"destWidth":450,"destHeight":302,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn48@2020_3/2020/08/25/00-30-54-841_48bd91afe0d68915.webp","sourceBytes":25227,"destBytes":22990,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1108,"convertSpendMs":11,"createdTime":"2020-08-25 08:30:54","host":"us-014*","referer":"https://teddysun.com/?p=261","linkMd5ListStr":"ffcb5d623d47c652bb99e27d931a9d95,ffcb5d623d47c652bb99e27d931a9d95","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.6 KB","destSize":"22.5 KB","compressRate":"91.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2017/lamp.jpg","sourceStatusCode":200,"destWidth":800,"destHeight":450,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn63@2020_2/2020/08/25/00-30-54-867_548c8c79744b5acd.webp","sourceBytes":109714,"destBytes":23000,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":916,"convertSpendMs":14,"createdTime":"2020-08-25 08:30:54","host":"us-030*","referer":"https://teddysun.com/?p=517","linkMd5ListStr":"7c8d32814b30ac4cec32e0d97e26ba16,7c8d32814b30ac4cec32e0d97e26ba16","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"107.1 KB","destSize":"22.5 KB","compressRate":"21%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/11/openvz.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":599,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn51@2020_5/2020/08/25/00-30-54-921_1a15036b5b4ba075.webp","sourceBytes":39298,"destBytes":27000,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1142,"convertSpendMs":14,"createdTime":"2020-08-25 08:30:54","host":"us-002*","referer":"https://teddysun.com/?p=296","linkMd5ListStr":"4c15781a10f481ff169817436e8f8ef5,4c15781a10f481ff169817436e8f8ef5","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.4 KB","destSize":"26.4 KB","compressRate":"68.7%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2016/ftp.jpg","sourceStatusCode":200,"destWidth":620,"destHeight":413,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn92@2020_1/2020/08/25/00-30-54-785_811025191783f246.webp","sourceBytes":117587,"destBytes":22590,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1702,"convertSpendMs":12,"createdTime":"2020-08-25 08:30:54","host":"europe65*","referer":"https://teddysun.com/?p=484","linkMd5ListStr":"1f173f8bad7b548a55dcf67db6e9d9f7,1f173f8bad7b548a55dcf67db6e9d9f7","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"114.8 KB","destSize":"22.1 KB","compressRate":"19.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/free.jpg","sourceStatusCode":200,"destWidth":450,"destHeight":499,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn67@2020_1/2020/08/25/00-30-55-148_564e2b6390a43ada.webp","sourceBytes":53617,"destBytes":21978,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1151,"convertSpendMs":10,"createdTime":"2020-08-25 08:30:54","host":"us-018*","referer":"https://teddysun.com/?p=190","linkMd5ListStr":"eb2e986fa86a41d4d15e8c5724df3696,eb2e986fa86a41d4d15e8c5724df3696","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"52.4 KB","destSize":"21.5 KB","compressRate":"41%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/08/locvps.jpg","sourceStatusCode":200,"destWidth":990,"destHeight":497,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn15@2020_5/2020/08/25/00-30-54-953_ff0f900672138316.webp","sourceBytes":62293,"destBytes":37876,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1782,"convertSpendMs":25,"createdTime":"2020-08-25 08:30:54","host":"europe-57*","referer":"https://teddysun.com/?p=257","linkMd5ListStr":"b5514bda99c9090c5c60533f3483a908,b5514bda99c9090c5c60533f3483a908","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"60.8 KB","destSize":"37 KB","compressRate":"60.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/delete.jpg","sourceStatusCode":200,"destWidth":512,"destHeight":244,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn47@2020_4/2020/08/25/00-30-55-229_e116b5a6d662cfa1.webp","sourceBytes":96315,"destBytes":12196,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2458,"convertSpendMs":8,"createdTime":"2020-08-25 08:30:53","host":"europe69*","referer":"https://teddysun.com/?p=196","linkMd5ListStr":"23c73f355a15f58a25dee4544890ffb4,23c73f355a15f58a25dee4544890ffb4","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"94.1 KB","destSize":"11.9 KB","compressRate":"12.7%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/08/IOConsole_Updater_error.png","sourceStatusCode":200,"destWidth":534,"destHeight":472,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn35@2020_6/2020/08/25/00-30-54-891_62210a71b454a52a.webp","sourceBytes":15570,"destBytes":32322,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1663,"convertSpendMs":13,"createdTime":"2020-08-25 08:30:54","host":"europe61*","referer":"https://teddysun.com/?p=253","linkMd5ListStr":"b86ab108363c05c48003ba80cfbe50bf,b86ab108363c05c48003ba80cfbe50bf","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.2 KB","destSize":"31.6 KB","compressRate":"207.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/bittorrent_sync.png","sourceStatusCode":200,"destWidth":560,"destHeight":320,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn72@2020_3/2020/08/25/00-30-55-608_73f33aaa8b7d7ef1.webp","sourceBytes":15615,"destBytes":10140,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1640,"convertSpendMs":11,"createdTime":"2020-08-25 08:30:54","host":"us-006*","referer":"https://teddysun.com/?p=179","linkMd5ListStr":"522244c8fc050f907cb3c7c86fd279b0,522244c8fc050f907cb3c7c86fd279b0","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.2 KB","destSize":"9.9 KB","compressRate":"64.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/12/webmin.jpg","sourceStatusCode":200,"destWidth":475,"destHeight":500,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn59@2020_1/2020/08/25/00-30-55-698_ec385b9e233e266d.webp","sourceBytes":96772,"destBytes":37948,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1887,"convertSpendMs":13,"createdTime":"2020-08-25 08:30:54","host":"us-53*","referer":"https://teddysun.com/?p=322","linkMd5ListStr":"3aaa2730f58ccbdba6f3a370c757bd25,3aaa2730f58ccbdba6f3a370c757bd25","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"94.5 KB","destSize":"37.1 KB","compressRate":"39.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/Tower.jpg","sourceStatusCode":200,"destWidth":520,"destHeight":741,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn55@2020_6/2020/08/25/00-30-55-472_75aea0ca340c8b6f.webp","sourceBytes":179450,"destBytes":67896,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1901,"convertSpendMs":29,"createdTime":"2020-08-25 08:30:54","host":"europe65*","referer":"https://teddysun.com/?p=198","linkMd5ListStr":"3091f7a9184400aed5fd7196e3ed21d0,3091f7a9184400aed5fd7196e3ed21d0","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"175.2 KB","destSize":"66.3 KB","compressRate":"37.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2016/domain4.png","sourceStatusCode":200,"destWidth":534,"destHeight":373,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn11@2020_6/2020/08/25/00-30-55-711_456cce9d8a8b98c7.webp","sourceBytes":88722,"destBytes":24748,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2444,"convertSpendMs":16,"createdTime":"2020-08-25 08:30:54","host":"europe69*","referer":"https://teddysun.com/?p=466","linkMd5ListStr":"b451e7ea98f7cf1470dabef771b82b19,b451e7ea98f7cf1470dabef771b82b19","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"86.6 KB","destSize":"24.2 KB","compressRate":"27.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2019/wireguard.png","sourceStatusCode":200,"destWidth":1200,"destHeight":630,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn32@2020_5/2020/08/25/00-30-55-545_aa38c1c8040e781b.webp","sourceBytes":51026,"destBytes":50540,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2375,"convertSpendMs":64,"createdTime":"2020-08-25 08:30:54","host":"europe-23*","referer":"https://teddysun.com/?p=554","linkMd5ListStr":"72f1b03b8f1b938f2609446c2c2a7e1b,72f1b03b8f1b938f2609446c2c2a7e1b","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49.8 KB","destSize":"49.4 KB","compressRate":"99%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/l2tp_conn2.png","sourceStatusCode":200,"destWidth":543,"destHeight":718,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn10@2020_4/2020/08/25/00-30-56-904_eb24a7c38d412220.webp","sourceBytes":13285,"destBytes":33196,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":821,"convertSpendMs":16,"createdTime":"2020-08-25 08:30:56","host":"us-013*","referer":"https://teddysun.com/?p=536","linkMd5ListStr":"5b7e40a642a0e26b50fdc4f3e9a6f3aa","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13 KB","destSize":"32.4 KB","compressRate":"249.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/dd_windows_12.png","sourceStatusCode":200,"destWidth":724,"destHeight":231,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn67@2020_6/2020/08/25/00-30-56-915_4fcfe36de79986b0.webp","sourceBytes":26752,"destBytes":8536,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":841,"convertSpendMs":14,"createdTime":"2020-08-25 08:30:56","host":"us-039*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.1 KB","destSize":"8.3 KB","compressRate":"31.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/hyper-v_10.png","sourceStatusCode":200,"destWidth":642,"destHeight":535,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn35@2020_5/2020/08/25/00-30-56-907_839cfbafb407bd9d.webp","sourceBytes":36888,"destBytes":20626,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":856,"convertSpendMs":16,"createdTime":"2020-08-25 08:30:56","host":"us-006*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36 KB","destSize":"20.1 KB","compressRate":"55.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/hyper-v_05.png","sourceStatusCode":200,"destWidth":879,"destHeight":633,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn71@2020_5/2020/08/25/00-30-56-924_a76c9457535484dd.webp","sourceBytes":80292,"destBytes":32646,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":880,"convertSpendMs":25,"createdTime":"2020-08-25 08:30:56","host":"us-026*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"78.4 KB","destSize":"31.9 KB","compressRate":"40.7%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/dd_windows_02.png","sourceStatusCode":200,"destWidth":1234,"destHeight":867,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn6@2020_6/2020/08/25/00-30-56-931_a1af378e229588ab.webp","sourceBytes":17689,"destBytes":20008,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":955,"convertSpendMs":31,"createdTime":"2020-08-25 08:30:56","host":"us-025*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.3 KB","destSize":"19.5 KB","compressRate":"113.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/hyper-v_04.png","sourceStatusCode":200,"destWidth":878,"destHeight":634,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn47@2020_5/2020/08/25/00-30-56-922_054fa1dcbb62b8c5.webp","sourceBytes":90652,"destBytes":38122,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":966,"convertSpendMs":24,"createdTime":"2020-08-25 08:30:56","host":"us-034*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"88.5 KB","destSize":"37.2 KB","compressRate":"42.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/probe5.4.png","sourceStatusCode":200,"destWidth":972,"destHeight":114,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn52@2020_1/2020/08/25/00-30-57-104_8bea9056ad2d16de.webp","sourceBytes":5710,"destBytes":9554,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1030,"convertSpendMs":14,"createdTime":"2020-08-25 08:30:56","host":"us-022*","referer":"https://teddysun.com/?p=384","linkMd5ListStr":"7376babe349da92651a0881d1ec20d1c","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.6 KB","destSize":"9.3 KB","compressRate":"167.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2019/ws_4.png","sourceStatusCode":200,"destWidth":1242,"destHeight":2208,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn20@2020_3/2020/08/25/00-30-56-993_1a147e4632c6f806.webp","sourceBytes":141999,"destBytes":57774,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1020,"convertSpendMs":85,"createdTime":"2020-08-25 08:30:56","host":"us-010*","referer":"https://teddysun.com/?p=569","linkMd5ListStr":"b99843baba90026fccd42bb7e9b8fe19","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"138.7 KB","destSize":"56.4 KB","compressRate":"40.7%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/probe5.5.png","sourceStatusCode":200,"destWidth":975,"destHeight":111,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn75@2020_1/2020/08/25/00-30-57-116_4e33e33a258172b8.webp","sourceBytes":5737,"destBytes":9250,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1013,"convertSpendMs":7,"createdTime":"2020-08-25 08:30:56","host":"us-014*","referer":"https://teddysun.com/?p=384","linkMd5ListStr":"7376babe349da92651a0881d1ec20d1c","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.6 KB","destSize":"9 KB","compressRate":"161.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/l2tp_conn1.png","sourceStatusCode":200,"destWidth":600,"destHeight":419,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn8@2020_4/2020/08/25/00-30-57-063_98ca68bcf9c827af.webp","sourceBytes":38471,"destBytes":11622,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":975,"convertSpendMs":16,"createdTime":"2020-08-25 08:30:56","host":"us-033*","referer":"https://teddysun.com/?p=536","linkMd5ListStr":"5b7e40a642a0e26b50fdc4f3e9a6f3aa","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.6 KB","destSize":"11.3 KB","compressRate":"30.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/dd_windows_05.png","sourceStatusCode":200,"destWidth":1231,"destHeight":866,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn88@2020_2/2020/08/25/00-30-56-950_f9342d5fdd317cc0.webp","sourceBytes":43888,"destBytes":51974,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1045,"convertSpendMs":58,"createdTime":"2020-08-25 08:30:56","host":"us-53*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.9 KB","destSize":"50.8 KB","compressRate":"118.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/vultr1.png","sourceStatusCode":200,"destWidth":866,"destHeight":226,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn14@2020_3/2020/08/25/00-30-57-089_c29e18a2ed0ba182.webp","sourceBytes":12396,"destBytes":21212,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1075,"convertSpendMs":10,"createdTime":"2020-08-25 08:30:56","host":"us-001*","referer":"https://teddysun.com/?p=353","linkMd5ListStr":"c207934e2e1ec2f7eca32eabb6071876","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12.1 KB","destSize":"20.7 KB","compressRate":"171.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/dd_windows_04.png","sourceStatusCode":200,"destWidth":1234,"destHeight":867,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn79@2020_5/2020/08/25/00-30-56-967_f5a80b3f957d0d0b.webp","sourceBytes":32838,"destBytes":38536,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1068,"convertSpendMs":63,"createdTime":"2020-08-25 08:30:56","host":"us-002*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.1 KB","destSize":"37.6 KB","compressRate":"117.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/wordpresstarget_1.png","sourceStatusCode":200,"destWidth":842,"destHeight":580,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn86@2020_3/2020/08/25/00-30-57-127_74ac394c5715995a.webp","sourceBytes":23110,"destBytes":30152,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1105,"convertSpendMs":22,"createdTime":"2020-08-25 08:30:56","host":"us-022*","referer":"https://teddysun.com/?p=164","linkMd5ListStr":"9b25a5acdb2d90476d802ef041aece70","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.6 KB","destSize":"29.4 KB","compressRate":"130.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2019/ws_2.png","sourceStatusCode":200,"destWidth":1268,"destHeight":608,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn21@2020_5/2020/08/25/00-30-57-100_56752a2a9bfd534b.webp","sourceBytes":58712,"destBytes":40068,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1107,"convertSpendMs":194,"createdTime":"2020-08-25 08:30:56","host":"us-52*","referer":"https://teddysun.com/?p=569","linkMd5ListStr":"b99843baba90026fccd42bb7e9b8fe19","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"57.3 KB","destSize":"39.1 KB","compressRate":"68.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/hyper-v_11.png","sourceStatusCode":200,"destWidth":901,"destHeight":861,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn83@2020_2/2020/08/25/00-30-56-974_75379fb39b4ac501.webp","sourceBytes":164321,"destBytes":64970,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1125,"convertSpendMs":55,"createdTime":"2020-08-25 08:30:56","host":"us-021*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"160.5 KB","destSize":"63.4 KB","compressRate":"39.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/Gitclone.png","sourceStatusCode":200,"destWidth":556,"destHeight":393,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn100@2020_5/2020/08/25/00-30-57-165_b2b437dfaf0fed8c.webp","sourceBytes":30551,"destBytes":19174,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1118,"convertSpendMs":10,"createdTime":"2020-08-25 08:30:56","host":"us-006*","referer":"https://teddysun.com/?p=333","linkMd5ListStr":"d400d305bebd9a87768d54dddcaad41e","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.8 KB","destSize":"18.7 KB","compressRate":"62.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2019/ws_5.png","sourceStatusCode":200,"destWidth":1242,"destHeight":2208,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn32@2020_5/2020/08/25/00-30-57-049_a67d91ebed4b3ff4.webp","sourceBytes":162866,"destBytes":66062,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1126,"convertSpendMs":140,"createdTime":"2020-08-25 08:30:56","host":"us-039*","referer":"https://teddysun.com/?p=569","linkMd5ListStr":"b99843baba90026fccd42bb7e9b8fe19","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"159 KB","destSize":"64.5 KB","compressRate":"40.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/dd_windows_11.png","sourceStatusCode":200,"destWidth":1230,"destHeight":882,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn95@2020_6/2020/08/25/00-30-56-957_0a931cad82edae83.webp","sourceBytes":237443,"destBytes":65386,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1157,"convertSpendMs":39,"createdTime":"2020-08-25 08:30:56","host":"us-018*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"231.9 KB","destSize":"63.9 KB","compressRate":"27.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/shudu2.jpg","sourceStatusCode":200,"destWidth":400,"destHeight":535,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn31@2020_4/2020/08/25/00-30-57-094_8e143769a1b66f24.webp","sourceBytes":51089,"destBytes":41080,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1176,"convertSpendMs":12,"createdTime":"2020-08-25 08:30:56","host":"us-018*","referer":"https://teddysun.com/?p=212","linkMd5ListStr":"1e0ff589bf48f86ef71bb62008678b49","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49.9 KB","destSize":"40.1 KB","compressRate":"80.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/vultr2.png","sourceStatusCode":200,"destWidth":981,"destHeight":783,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn10@2020_3/2020/08/25/00-30-57-169_55071c28934807c2.webp","sourceBytes":38101,"destBytes":63706,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1161,"convertSpendMs":28,"createdTime":"2020-08-25 08:30:56","host":"us-034*","referer":"https://teddysun.com/?p=353","linkMd5ListStr":"c207934e2e1ec2f7eca32eabb6071876","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.2 KB","destSize":"62.2 KB","compressRate":"167.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_3.png","sourceStatusCode":200,"destWidth":715,"destHeight":745,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn92@2020_2/2020/08/25/00-30-57-157_928ce06feb8af294.webp","sourceBytes":30357,"destBytes":48120,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1222,"convertSpendMs":29,"createdTime":"2020-08-25 08:30:56","host":"us-010*","referer":"https://teddysun.com/?p=139","linkMd5ListStr":"84e3eba0ae84d629d9a777a2a0d465bf","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.6 KB","destSize":"47 KB","compressRate":"158.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/07/zip2.png","sourceStatusCode":200,"destWidth":654,"destHeight":615,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn92@2020_4/2020/08/25/00-30-57-207_40f8f8968e54bda1.webp","sourceBytes":33662,"destBytes":48218,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1231,"convertSpendMs":58,"createdTime":"2020-08-25 08:30:56","host":"us-030*","referer":"https://teddysun.com/?p=246","linkMd5ListStr":"d55ecae091ca61c15f87ef046bd73cf5","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.9 KB","destSize":"47.1 KB","compressRate":"143.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/host1plus_vps_small.png","sourceStatusCode":200,"destWidth":600,"destHeight":340,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn55@2020_3/2020/08/25/00-30-57-292_dbf3e75b4d06672b.webp","sourceBytes":111470,"destBytes":26936,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1254,"convertSpendMs":13,"createdTime":"2020-08-25 08:30:56","host":"us-010*","referer":"https://teddysun.com/?p=416","linkMd5ListStr":"b58a887125f8273ee4b734af61b113b5","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"108.9 KB","destSize":"26.3 KB","compressRate":"24.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/whois_3.png","sourceStatusCode":200,"destWidth":837,"destHeight":510,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn16@2020_6/2020/08/25/00-30-57-263_22cb2a441bff2bb0.webp","sourceBytes":71727,"destBytes":42398,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1275,"convertSpendMs":54,"createdTime":"2020-08-25 08:30:56","host":"us-022*","referer":"https://teddysun.com/?p=415","linkMd5ListStr":"e50c42f9e50b94a1e0ba3a16272d7517","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"70 KB","destSize":"41.4 KB","compressRate":"59.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/07/v2_ping.png","sourceStatusCode":200,"destWidth":731,"destHeight":221,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn100@2020_4/2020/08/25/00-30-57-227_d668ddb831bf7851.webp","sourceBytes":11656,"destBytes":24292,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1397,"convertSpendMs":8,"createdTime":"2020-08-25 08:30:56","host":"europe61*","referer":"https://teddysun.com/?p=240","linkMd5ListStr":"13873f199369e9f80680aba8811ac37b","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"11.4 KB","destSize":"23.7 KB","compressRate":"208.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/down_small.png","sourceStatusCode":200,"destWidth":520,"destHeight":268,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn18@2020_5/2020/08/25/00-30-57-393_d7a9691b73072b8e.webp","sourceBytes":56594,"destBytes":11256,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1415,"convertSpendMs":7,"createdTime":"2020-08-25 08:30:56","host":"europe64*","referer":"https://teddysun.com/?p=217","linkMd5ListStr":"eb9b2a5b8d6806b513e486b8d06fc019","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.3 KB","destSize":"11 KB","compressRate":"19.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_2.png","sourceStatusCode":200,"destWidth":905,"destHeight":1638,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn25@2020_5/2020/08/25/00-30-57-357_dd8a57a336e17e37.webp","sourceBytes":124838,"destBytes":160684,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1572,"convertSpendMs":69,"createdTime":"2020-08-25 08:30:56","host":"us-029*","referer":"https://teddysun.com/?p=139","linkMd5ListStr":"84e3eba0ae84d629d9a777a2a0d465bf","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"121.9 KB","destSize":"156.9 KB","compressRate":"128.7%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/owncloud_welcome_small.png","sourceStatusCode":200,"destWidth":520,"destHeight":354,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn4@2020_6/2020/08/25/00-30-57-386_74f24f7efaebff19.webp","sourceBytes":34360,"destBytes":14356,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1438,"convertSpendMs":10,"createdTime":"2020-08-25 08:30:56","host":"europe69*","referer":"https://teddysun.com/?p=200","linkMd5ListStr":"9843ffee10e5beac6c84cd4d7d4a521d","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.6 KB","destSize":"14 KB","compressRate":"41.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/whois_4.png","sourceStatusCode":200,"destWidth":471,"destHeight":590,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn84@2020_4/2020/08/25/00-30-57-274_cb3388cfb853c032.webp","sourceBytes":16564,"destBytes":51234,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1554,"convertSpendMs":17,"createdTime":"2020-08-25 08:30:56","host":"europe65*","referer":"https://teddysun.com/?p=415","linkMd5ListStr":"e50c42f9e50b94a1e0ba3a16272d7517","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.2 KB","destSize":"50 KB","compressRate":"309.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/speedtest_do_sg.png","sourceStatusCode":200,"destWidth":530,"destHeight":605,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn44@2020_1/2020/08/25/00-30-57-400_0b95534039c4ae7c.webp","sourceBytes":47724,"destBytes":62454,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1664,"convertSpendMs":22,"createdTime":"2020-08-25 08:30:56","host":"europe-57*","referer":"https://teddysun.com/?p=444","linkMd5ListStr":"ce5c0ded51f907918637e82bc4a01940","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.6 KB","destSize":"61 KB","compressRate":"130.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/whois_1.png","sourceStatusCode":200,"destWidth":837,"destHeight":510,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn40@2020_3/2020/08/25/00-30-57-567_214505d2714b6ca5.webp","sourceBytes":49109,"destBytes":32062,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1727,"convertSpendMs":19,"createdTime":"2020-08-25 08:30:56","host":"europe69*","referer":"https://teddysun.com/?p=415","linkMd5ListStr":"e50c42f9e50b94a1e0ba3a16272d7517","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48 KB","destSize":"31.3 KB","compressRate":"65.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/Python_install.png","sourceStatusCode":200,"destWidth":580,"destHeight":647,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn35@2020_3/2020/08/25/00-30-57-951_59966361c4c4ab40.webp","sourceBytes":28614,"destBytes":36976,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1042,"convertSpendMs":20,"createdTime":"2020-08-25 08:30:57","host":"us-026*","referer":"https://teddysun.com/?p=346","linkMd5ListStr":"bb98a13cf5a77fd8cffb007bf11f8d98","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"27.9 KB","destSize":"36.1 KB","compressRate":"129.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/11/pdo_mysql.png","sourceStatusCode":200,"destWidth":605,"destHeight":435,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn43@2020_6/2020/08/25/00-30-57-951_f83089c1409d48e0.webp","sourceBytes":9771,"destBytes":21478,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1028,"convertSpendMs":11,"createdTime":"2020-08-25 08:30:57","host":"us-002*","referer":"https://teddysun.com/?p=320","linkMd5ListStr":"9a9792f9dca2646ef9e13e2f7f3808f3","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.5 KB","destSize":"21 KB","compressRate":"219.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/speedtest_bwg.png","sourceStatusCode":200,"destWidth":513,"destHeight":431,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn39@2020_5/2020/08/25/00-30-57-775_cc46528e183ef78b.webp","sourceBytes":30623,"destBytes":42358,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1031,"convertSpendMs":21,"createdTime":"2020-08-25 08:30:57","host":"us-014*","referer":"https://teddysun.com/?p=444","linkMd5ListStr":"ce5c0ded51f907918637e82bc4a01940","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.9 KB","destSize":"41.4 KB","compressRate":"138.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/whois_2.png","sourceStatusCode":200,"destWidth":837,"destHeight":510,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn96@2020_4/2020/08/25/00-30-57-517_3dd3428e6e727a95.webp","sourceBytes":59380,"destBytes":51300,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1853,"convertSpendMs":21,"createdTime":"2020-08-25 08:30:56","host":"europe-23*","referer":"https://teddysun.com/?p=415","linkMd5ListStr":"e50c42f9e50b94a1e0ba3a16272d7517","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"58 KB","destSize":"50.1 KB","compressRate":"86.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/bind_1.png","sourceStatusCode":200,"destWidth":614,"destHeight":518,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn56@2020_4/2020/08/25/00-30-57-909_67b331d43e897830.webp","sourceBytes":61894,"destBytes":30686,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":934,"convertSpendMs":20,"createdTime":"2020-08-25 08:30:57","host":"us-030*","referer":"https://teddysun.com/?p=406","linkMd5ListStr":"f4b20f4460498673a790abfd082c7735","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"60.4 KB","destSize":"30 KB","compressRate":"49.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/08/band_ping.jpg","sourceStatusCode":200,"destWidth":731,"destHeight":222,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn64@2020_3/2020/08/25/00-30-58-195_b91c80ac34d1f62c.webp","sourceBytes":61514,"destBytes":23320,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1081,"convertSpendMs":10,"createdTime":"2020-08-25 08:30:57","host":"us-006*","referer":"https://teddysun.com/?p=249","linkMd5ListStr":"4fdc64f2f0e6fcce305c018dfa4001c5","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"60.1 KB","destSize":"22.8 KB","compressRate":"37.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/dd_windows_14.png","sourceStatusCode":200,"destWidth":1232,"destHeight":885,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn24@2020_6/2020/08/25/00-30-57-737_627833f6173e4686.webp","sourceBytes":225466,"destBytes":66388,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1983,"convertSpendMs":46,"createdTime":"2020-08-25 08:30:56","host":"europe-23*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"220.2 KB","destSize":"64.8 KB","compressRate":"29.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/dd_windows_01.png","sourceStatusCode":200,"destWidth":1234,"destHeight":864,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn3@2020_4/2020/08/25/00-30-58-105_f63088225740b720.webp","sourceBytes":43858,"destBytes":58854,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1003,"convertSpendMs":56,"createdTime":"2020-08-25 08:30:58","host":"us-014*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.8 KB","destSize":"57.5 KB","compressRate":"134.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/rootca3.png","sourceStatusCode":200,"destWidth":419,"destHeight":486,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn16@2020_4/2020/08/25/00-30-58-309_84f242d2ba6eb075.webp","sourceBytes":23307,"destBytes":11290,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":985,"convertSpendMs":12,"createdTime":"2020-08-25 08:30:58","host":"us-53*","referer":"https://teddysun.com/?p=395","linkMd5ListStr":"cbeb0e79ddbb9c5280a1607caf95358f","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.8 KB","destSize":"11 KB","compressRate":"48.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/nslookup.png","sourceStatusCode":200,"destWidth":603,"destHeight":572,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn75@2020_2/2020/08/25/00-30-58-147_bfc461dcf4784572.webp","sourceBytes":26607,"destBytes":43768,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1134,"convertSpendMs":22,"createdTime":"2020-08-25 08:30:57","host":"us-034*","referer":"https://teddysun.com/?p=191","linkMd5ListStr":"ca8b9f6768e1215775b849376874f989","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26 KB","destSize":"42.7 KB","compressRate":"164.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/rootca2.png","sourceStatusCode":200,"destWidth":419,"destHeight":486,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn79@2020_5/2020/08/25/00-30-58-244_fe3b52d109096372.webp","sourceBytes":27969,"destBytes":18900,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1106,"convertSpendMs":20,"createdTime":"2020-08-25 08:30:57","host":"us-022*","referer":"https://teddysun.com/?p=395","linkMd5ListStr":"cbeb0e79ddbb9c5280a1607caf95358f","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"27.3 KB","destSize":"18.5 KB","compressRate":"67.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/cron_iptables2.png","sourceStatusCode":200,"destWidth":1276,"destHeight":894,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn83@2020_3/2020/08/25/00-30-58-249_96a327e0e5a33bc1.webp","sourceBytes":76632,"destBytes":76034,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1269,"convertSpendMs":34,"createdTime":"2020-08-25 08:30:57","host":"us-010*","referer":"https://teddysun.com/?p=187","linkMd5ListStr":"8d8f55040afe84128701c1b945c604d8","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"74.8 KB","destSize":"74.3 KB","compressRate":"99.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/Tower.png","sourceStatusCode":200,"destWidth":520,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn52@2020_6/2020/08/25/00-30-58-445_74a3b261d1205799.webp","sourceBytes":220794,"destBytes":9446,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1402,"convertSpendMs":15,"createdTime":"2020-08-25 08:30:57","host":"us-53*","referer":"https://teddysun.com/?p=198","linkMd5ListStr":"3091f7a9184400aed5fd7196e3ed21d0","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"215.6 KB","destSize":"9.2 KB","compressRate":"4.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/08/plugin_commands.png","sourceStatusCode":200,"destWidth":593,"destHeight":587,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn20@2020_2/2020/08/25/00-30-58-343_4b81de462304b811.webp","sourceBytes":15404,"destBytes":36112,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1141,"convertSpendMs":34,"createdTime":"2020-08-25 08:30:58","host":"us-030*","referer":"https://teddysun.com/?p=254","linkMd5ListStr":"b43cb1451e4f637df55fa53ef95c0f9a","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15 KB","destSize":"35.3 KB","compressRate":"234.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2019/ws_1.png","sourceStatusCode":200,"destWidth":1352,"destHeight":423,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn76@2020_3/2020/08/25/00-30-57-998_735ab89110b9150a.webp","sourceBytes":39434,"destBytes":33704,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2472,"convertSpendMs":35,"createdTime":"2020-08-25 08:30:56","host":"europe69*","referer":"https://teddysun.com/?p=569","linkMd5ListStr":"b99843baba90026fccd42bb7e9b8fe19","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.5 KB","destSize":"32.9 KB","compressRate":"85.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/dd_windows_17.png","sourceStatusCode":200,"destWidth":1232,"destHeight":862,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn47@2020_5/2020/08/25/00-30-58-516_ab415e913045774b.webp","sourceBytes":30747,"destBytes":37840,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":948,"convertSpendMs":36,"createdTime":"2020-08-25 08:30:58","host":"us-010*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30 KB","destSize":"37 KB","compressRate":"123.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/hyper-v_03.png","sourceStatusCode":200,"destWidth":880,"destHeight":630,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn4@2020_5/2020/08/25/00-30-58-491_8b26fa1a9ce5c913.webp","sourceBytes":107236,"destBytes":45462,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":978,"convertSpendMs":34,"createdTime":"2020-08-25 08:30:58","host":"us-030*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"104.7 KB","destSize":"44.4 KB","compressRate":"42.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/07/zip1.png","sourceStatusCode":200,"destWidth":1162,"destHeight":328,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn60@2020_4/2020/08/25/00-30-58-049_0adbfa7cea08be7b.webp","sourceBytes":21167,"destBytes":31910,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2429,"convertSpendMs":15,"createdTime":"2020-08-25 08:30:56","host":"europe-23*","referer":"https://teddysun.com/?p=246","linkMd5ListStr":"d55ecae091ca61c15f87ef046bd73cf5","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.7 KB","destSize":"31.2 KB","compressRate":"150.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/GitSync.png","sourceStatusCode":200,"destWidth":609,"destHeight":465,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn28@2020_1/2020/08/25/00-30-58-289_d1e66d0e7801f6b1.webp","sourceBytes":40693,"destBytes":27560,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2420,"convertSpendMs":13,"createdTime":"2020-08-25 08:30:56","host":"europe61*","referer":"https://teddysun.com/?p=333","linkMd5ListStr":"d400d305bebd9a87768d54dddcaad41e","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39.7 KB","destSize":"26.9 KB","compressRate":"67.7%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/10/github2.jpg","sourceStatusCode":200,"destWidth":722,"destHeight":427,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn44@2020_2/2020/08/25/00-30-58-694_af7fc86cb901c14e.webp","sourceBytes":19326,"destBytes":4182,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1045,"convertSpendMs":14,"createdTime":"2020-08-25 08:30:58","host":"us-022*","referer":"https://teddysun.com/?p=291","linkMd5ListStr":"3198c2da7c1eb8184cf3f4318f809092","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.9 KB","destSize":"4.1 KB","compressRate":"21.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/gcc_install.png","sourceStatusCode":200,"destWidth":720,"destHeight":330,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn40@2020_3/2020/08/25/00-30-58-671_3849dbac179eb536.webp","sourceBytes":16155,"destBytes":33362,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1067,"convertSpendMs":15,"createdTime":"2020-08-25 08:30:58","host":"us-034*","referer":"https://teddysun.com/?p=432","linkMd5ListStr":"a64267636a54186517f53af2a05fa0ef","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.8 KB","destSize":"32.6 KB","compressRate":"206.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/11/do_ping_20131120.jpg","sourceStatusCode":200,"destWidth":729,"destHeight":220,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn72@2020_2/2020/08/25/00-30-58-439_26273581077a9e43.webp","sourceBytes":52748,"destBytes":24194,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1487,"convertSpendMs":12,"createdTime":"2020-08-25 08:30:58","host":"europe-57*","referer":"https://teddysun.com/?p=317","linkMd5ListStr":"f96ad47c7313139e27265aad2576e2ea","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.5 KB","destSize":"23.6 KB","compressRate":"45.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/teddysunca.png","sourceStatusCode":200,"destWidth":419,"destHeight":486,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn67@2020_5/2020/08/25/00-30-58-382_1b543ea858ec1fd1.webp","sourceBytes":30805,"destBytes":14690,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1559,"convertSpendMs":9,"createdTime":"2020-08-25 08:30:58","host":"europe69*","referer":"https://teddysun.com/?p=395","linkMd5ListStr":"cbeb0e79ddbb9c5280a1607caf95358f","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.1 KB","destSize":"14.3 KB","compressRate":"47.7%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/wordpresstarget_2.png","sourceStatusCode":200,"destWidth":841,"destHeight":582,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn96@2020_5/2020/08/25/00-30-58-839_447e3a49103c214d.webp","sourceBytes":23820,"destBytes":29522,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1695,"convertSpendMs":71,"createdTime":"2020-08-25 08:30:58","host":"us-039*","referer":"https://teddysun.com/?p=164","linkMd5ListStr":"9b25a5acdb2d90476d802ef041aece70","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.3 KB","destSize":"28.8 KB","compressRate":"123.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2020/kms_docker_hub.png","sourceStatusCode":200,"destWidth":881,"destHeight":844,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn59@2020_2/2020/08/25/00-30-58-831_ede8a59325538dcd.webp","sourceBytes":80160,"destBytes":33320,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1005,"convertSpendMs":69,"createdTime":"2020-08-25 08:30:58","host":"us-039*","referer":"https://teddysun.com/?p=581","linkMd5ListStr":"4fa9c259c3d559984364b9a62b7258fb","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"78.3 KB","destSize":"32.5 KB","compressRate":"41.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/03/zhifubao_1.png","sourceStatusCode":200,"destWidth":1004,"destHeight":480,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn32@2020_5/2020/08/25/00-30-58-690_90b238f2f7c04c93.webp","sourceBytes":23596,"destBytes":15550,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1407,"convertSpendMs":19,"createdTime":"2020-08-25 08:30:58","host":"europe69*","referer":"https://teddysun.com/?p=136","linkMd5ListStr":"0d9b43089f9ae1c925219206b3e5c5f9","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23 KB","destSize":"15.2 KB","compressRate":"65.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/hyper-v_09.png","sourceStatusCode":200,"destWidth":1315,"destHeight":902,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn64@2020_6/2020/08/25/00-30-58-842_953a2af59ca7ba0f.webp","sourceBytes":195108,"destBytes":56046,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1019,"convertSpendMs":53,"createdTime":"2020-08-25 08:30:58","host":"us-026*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"190.5 KB","destSize":"54.7 KB","compressRate":"28.7%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader1.png","sourceStatusCode":200,"destWidth":1007,"destHeight":753,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn80@2020_5/2020/08/25/00-30-58-537_c54d9f458812cbd6.webp","sourceBytes":141348,"destBytes":51998,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2815,"convertSpendMs":26,"createdTime":"2020-08-25 08:30:56","host":"europe-57*","referer":"https://teddysun.com/?p=178","linkMd5ListStr":"89b6fd92fbf2ea09a9a8b75a9b093a69","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"138 KB","destSize":"50.8 KB","compressRate":"36.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/teddysunca1.png","sourceStatusCode":200,"destWidth":419,"destHeight":486,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn36@2020_4/2020/08/25/00-30-58-814_e9d0200cec2df385.webp","sourceBytes":26264,"destBytes":11698,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1351,"convertSpendMs":9,"createdTime":"2020-08-25 08:30:58","host":"europe-57*","referer":"https://teddysun.com/?p=395","linkMd5ListStr":"cbeb0e79ddbb9c5280a1607caf95358f","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25.6 KB","destSize":"11.4 KB","compressRate":"44.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2019/ws_3.png","sourceStatusCode":200,"destWidth":1242,"destHeight":2208,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn63@2020_1/2020/08/25/00-30-58-577_e8c9bc5802cc7228.webp","sourceBytes":184331,"destBytes":70630,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2832,"convertSpendMs":79,"createdTime":"2020-08-25 08:30:56","host":"europe61*","referer":"https://teddysun.com/?p=569","linkMd5ListStr":"b99843baba90026fccd42bb7e9b8fe19","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"180 KB","destSize":"69 KB","compressRate":"38.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/cron_iptables1.png","sourceStatusCode":200,"destWidth":1276,"destHeight":894,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn8@2020_6/2020/08/25/00-30-58-329_615c7b848c9c18ce.webp","sourceBytes":51588,"destBytes":50354,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1816,"convertSpendMs":34,"createdTime":"2020-08-25 08:30:58","host":"us-002*","referer":"https://teddysun.com/?p=187","linkMd5ListStr":"8d8f55040afe84128701c1b945c604d8","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.4 KB","destSize":"49.2 KB","compressRate":"97.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/08/TextFX.png","sourceStatusCode":200,"destWidth":528,"destHeight":479,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn79@2020_2/2020/08/25/00-30-59-128_d3e88577e3ae62ae.webp","sourceBytes":29536,"destBytes":50154,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1192,"convertSpendMs":16,"createdTime":"2020-08-25 08:30:58","host":"us-53*","referer":"https://teddysun.com/?p=252","linkMd5ListStr":"3321d445f8fb74307ae5d6678622d068","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.8 KB","destSize":"49 KB","compressRate":"169.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/07/google_reader_notice.jpg","sourceStatusCode":200,"destWidth":500,"destHeight":585,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn68@2020_5/2020/08/25/00-30-59-134_65eac3a2b55c7d82.webp","sourceBytes":145100,"destBytes":46086,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1274,"convertSpendMs":25,"createdTime":"2020-08-25 08:30:58","host":"us-014*","referer":"https://teddysun.com/?p=232","linkMd5ListStr":"c991b03dd39b2eddf2ed3026b653c973","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"141.7 KB","destSize":"45 KB","compressRate":"31.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/pptp_vpn_server3.png","sourceStatusCode":200,"destWidth":962,"destHeight":672,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn28@2020_6/2020/08/25/00-30-59-072_801090a86a0a7964.webp","sourceBytes":76898,"destBytes":75526,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1414,"convertSpendMs":34,"createdTime":"2020-08-25 08:30:58","host":"us-006*","referer":"https://teddysun.com/?p=151","linkMd5ListStr":"ceab8b84993b7658697428558d9de747","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"75.1 KB","destSize":"73.8 KB","compressRate":"98.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/08/IOConsole_Updater_set.png","sourceStatusCode":200,"destWidth":627,"destHeight":548,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn87@2020_5/2020/08/25/00-30-59-283_eaba90d86a72a671.webp","sourceBytes":34831,"destBytes":34500,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1040,"convertSpendMs":13,"createdTime":"2020-08-25 08:30:59","host":"us-018*","referer":"https://teddysun.com/?p=253","linkMd5ListStr":"b86ab108363c05c48003ba80cfbe50bf","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34 KB","destSize":"33.7 KB","compressRate":"99%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2017/gpg1.png","sourceStatusCode":200,"destWidth":326,"destHeight":214,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn12@2020_5/2020/08/25/00-30-59-320_da1f4c6434a8c192.webp","sourceBytes":14559,"destBytes":9034,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":830,"convertSpendMs":15,"createdTime":"2020-08-25 08:30:59","host":"us-004*","referer":"https://teddysun.com/?p=496","linkMd5ListStr":"670167aced1a7dc96331258f13a9743f","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.2 KB","destSize":"8.8 KB","compressRate":"62.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/ks3c_bench.png","sourceStatusCode":200,"destWidth":716,"destHeight":985,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn84@2020_5/2020/08/25/00-30-59-083_78a6b83655b18cba.webp","sourceBytes":81191,"destBytes":102118,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1105,"convertSpendMs":57,"createdTime":"2020-08-25 08:30:58","host":"us-030*","referer":"https://teddysun.com/?p=444","linkMd5ListStr":"ce5c0ded51f907918637e82bc4a01940","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"79.3 KB","destSize":"99.7 KB","compressRate":"125.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/ipsec.jpg","sourceStatusCode":200,"destWidth":640,"destHeight":585,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn28@2020_2/2020/08/25/00-30-59-458_5766d3a9eb93c45b.webp","sourceBytes":64962,"destBytes":11404,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":834,"convertSpendMs":13,"createdTime":"2020-08-25 08:30:59","host":"us-024*","referer":"https://teddysun.com/?p=536","linkMd5ListStr":"5b7e40a642a0e26b50fdc4f3e9a6f3aa","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"63.4 KB","destSize":"11.1 KB","compressRate":"17.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2017/gpg2.png","sourceStatusCode":200,"destWidth":745,"destHeight":401,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn48@2020_1/2020/08/25/00-30-59-565_fbd257231dc17d0a.webp","sourceBytes":4849,"destBytes":6488,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":786,"convertSpendMs":10,"createdTime":"2020-08-25 08:30:59","host":"us-032*","referer":"https://teddysun.com/?p=496","linkMd5ListStr":"670167aced1a7dc96331258f13a9743f","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.7 KB","destSize":"6.3 KB","compressRate":"133.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/dd_windows_13.png","sourceStatusCode":200,"destWidth":585,"destHeight":465,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn47@2020_1/2020/08/25/00-30-59-210_c4d37072b7275754.webp","sourceBytes":57056,"destBytes":17644,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2403,"convertSpendMs":13,"createdTime":"2020-08-25 08:30:57","host":"europe65*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.7 KB","destSize":"17.2 KB","compressRate":"30.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/dd_windows_16.png","sourceStatusCode":200,"destWidth":1231,"destHeight":863,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn12@2020_1/2020/08/25/00-30-59-272_a917a586abdf1661.webp","sourceBytes":21065,"destBytes":24390,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2149,"convertSpendMs":50,"createdTime":"2020-08-25 08:30:58","host":"europe65*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.6 KB","destSize":"23.8 KB","compressRate":"115.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/bind_4.png","sourceStatusCode":200,"destWidth":677,"destHeight":492,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn32@2020_5/2020/08/25/00-30-59-497_5c8f172034802577.webp","sourceBytes":39841,"destBytes":28446,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":900,"convertSpendMs":24,"createdTime":"2020-08-25 08:30:59","host":"us-012*","referer":"https://teddysun.com/?p=406","linkMd5ListStr":"f4b20f4460498673a790abfd082c7735","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.9 KB","destSize":"27.8 KB","compressRate":"71.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/hyper-v_07.png","sourceStatusCode":200,"destWidth":879,"destHeight":629,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn36@2020_2/2020/08/25/00-30-59-483_02c79c5821f9993a.webp","sourceBytes":116775,"destBytes":48810,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":996,"convertSpendMs":23,"createdTime":"2020-08-25 08:30:59","host":"us-001*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"114 KB","destSize":"47.7 KB","compressRate":"41.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/11/do_tz_20131120.jpg","sourceStatusCode":200,"destWidth":961,"destHeight":270,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn4@2020_3/2020/08/25/00-30-59-425_15dd7d1d6ec61ac7.webp","sourceBytes":99937,"destBytes":33050,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1378,"convertSpendMs":13,"createdTime":"2020-08-25 08:30:59","host":"us-034*","referer":"https://teddysun.com/?p=317","linkMd5ListStr":"f96ad47c7313139e27265aad2576e2ea","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"97.6 KB","destSize":"32.3 KB","compressRate":"33.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/10/blockip.png","sourceStatusCode":200,"destWidth":1009,"destHeight":778,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn91@2020_5/2020/08/25/00-30-59-494_0c0f349c50326f07.webp","sourceBytes":57457,"destBytes":90922,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1442,"convertSpendMs":47,"createdTime":"2020-08-25 08:30:59","host":"us-006*","referer":"https://teddysun.com/?p=284","linkMd5ListStr":"e49db512b423874d228adf7854e9c6e2","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.1 KB","destSize":"88.8 KB","compressRate":"158.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/bittorrent_sync_screen.png","sourceStatusCode":200,"destWidth":1019,"destHeight":292,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn24@2020_3/2020/08/25/00-30-59-677_6c6e13acd6e8d0f8.webp","sourceBytes":14965,"destBytes":12780,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1069,"convertSpendMs":11,"createdTime":"2020-08-25 08:30:59","host":"us-035*","referer":"https://teddysun.com/?p=179","linkMd5ListStr":"522244c8fc050f907cb3c7c86fd279b0","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.6 KB","destSize":"12.5 KB","compressRate":"85.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2020/speedtest.png","sourceStatusCode":200,"destWidth":711,"destHeight":848,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn76@2020_6/2020/08/25/00-30-59-235_0ea1f16d8764c966.webp","sourceBytes":77100,"destBytes":76234,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1690,"convertSpendMs":33,"createdTime":"2020-08-25 08:30:58","host":"europe65*","referer":"https://teddysun.com/?p=444","linkMd5ListStr":"ce5c0ded51f907918637e82bc4a01940","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"75.3 KB","destSize":"74.4 KB","compressRate":"98.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/dd_windows_15.png","sourceStatusCode":200,"destWidth":1234,"destHeight":868,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn87@2020_6/2020/08/25/00-30-59-433_f3738bd63564c52c.webp","sourceBytes":49429,"destBytes":60834,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2560,"convertSpendMs":37,"createdTime":"2020-08-25 08:30:58","host":"europe-23*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48.3 KB","destSize":"59.4 KB","compressRate":"123.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/hyper-v_06.png","sourceStatusCode":200,"destWidth":880,"destHeight":630,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn67@2020_3/2020/08/25/00-30-59-852_07a7b535f4ac594f.webp","sourceBytes":65623,"destBytes":23384,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":896,"convertSpendMs":29,"createdTime":"2020-08-25 08:30:59","host":"us-51*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"64.1 KB","destSize":"22.8 KB","compressRate":"35.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2019/wireguard_w4.png","sourceStatusCode":200,"destWidth":827,"destHeight":651,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn71@2020_2/2020/08/25/00-30-59-846_7a8105fd7168c046.webp","sourceBytes":23901,"destBytes":24238,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":886,"convertSpendMs":25,"createdTime":"2020-08-25 08:30:59","host":"us-029*","referer":"https://teddysun.com/?p=554","linkMd5ListStr":"72f1b03b8f1b938f2609446c2c2a7e1b","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.3 KB","destSize":"23.7 KB","compressRate":"101.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/host1plus_payment.png","sourceStatusCode":200,"destWidth":309,"destHeight":322,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn52@2020_6/2020/08/25/00-30-59-811_597e0e064ac910b4.webp","sourceBytes":11137,"destBytes":13846,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1183,"convertSpendMs":24,"createdTime":"2020-08-25 08:30:59","host":"us-021*","referer":"https://teddysun.com/?p=416","linkMd5ListStr":"b58a887125f8273ee4b734af61b113b5","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.9 KB","destSize":"13.5 KB","compressRate":"124.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/07/keygen_2.png","sourceStatusCode":200,"destWidth":493,"destHeight":477,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn44@2020_2/2020/08/25/00-30-59-871_b2104e4f5a1dfec5.webp","sourceBytes":50728,"destBytes":35972,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1214,"convertSpendMs":18,"createdTime":"2020-08-25 08:30:59","host":"us-54*","referer":"https://teddysun.com/?p=237","linkMd5ListStr":"b3637f8cdfb2ae768409659d880a308d","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49.5 KB","destSize":"35.1 KB","compressRate":"70.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/zujian.png","sourceStatusCode":200,"destWidth":969,"destHeight":386,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn51@2020_2/2020/08/25/00-30-59-646_7a40f375a7708751.webp","sourceBytes":12259,"destBytes":29122,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2137,"convertSpendMs":14,"createdTime":"2020-08-25 08:30:58","host":"europe-23*","referer":"https://teddysun.com/?p=375","linkMd5ListStr":"0ef0ff54fddb3e6163b17774c56a12d4","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"12 KB","destSize":"28.4 KB","compressRate":"237.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/12/webmin_mysql_2.jpg","sourceStatusCode":200,"destWidth":1025,"destHeight":551,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn91@2020_1/2020/08/25/00-30-59-593_fd03e8d3de24a3ad.webp","sourceBytes":125024,"destBytes":48188,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2662,"convertSpendMs":22,"createdTime":"2020-08-25 08:30:58","host":"europe61*","referer":"https://teddysun.com/?p=322","linkMd5ListStr":"3aaa2730f58ccbdba6f3a370c757bd25","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"122.1 KB","destSize":"47.1 KB","compressRate":"38.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/09/phpmyadmin_1.png","sourceStatusCode":200,"destWidth":877,"destHeight":663,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn95@2020_5/2020/08/25/00-30-59-762_bfecdd1517dff716.webp","sourceBytes":20176,"destBytes":30772,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1642,"convertSpendMs":20,"createdTime":"2020-08-25 08:30:59","host":"europe69*","referer":"https://teddysun.com/?p=268","linkMd5ListStr":"e050e5390a499dbaf5981e9b036b2e6c","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.7 KB","destSize":"30.1 KB","compressRate":"152.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/10/github1.jpg","sourceStatusCode":200,"destWidth":815,"destHeight":495,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn56@2020_4/2020/08/25/00-30-59-991_8113b2b371a4d227.webp","sourceBytes":62288,"destBytes":21446,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1233,"convertSpendMs":20,"createdTime":"2020-08-25 08:30:59","host":"us-009*","referer":"https://teddysun.com/?p=291","linkMd5ListStr":"3198c2da7c1eb8184cf3f4318f809092","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"60.8 KB","destSize":"20.9 KB","compressRate":"34.4%"},{"code":1,"isDone":false,"source":"http://teddysun.u.qiniudn.com/wp-content/uploads/2014/phpmyadmin_1.png","sourceStatusCode":404,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","sourceBytes":0,"destBytes":0,"feedId":9594,"totalSpendMs":1645,"convertSpendMs":0,"createdTime":"2020-08-25 08:30:59","host":"europe-23*","referer":"https://teddysun.com/?p=359","linkMd5ListStr":"9fba75e95fcb402ce8d726a8da54caaf","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2016/update_bench.png","sourceStatusCode":200,"destWidth":505,"destHeight":465,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn16@2020_2/2020/08/25/00-30-59-693_0252383f92e99918.webp","sourceBytes":27494,"destBytes":46658,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1535,"convertSpendMs":28,"createdTime":"2020-08-25 08:30:59","host":"europe68*","referer":"https://teddysun.com/?p=444","linkMd5ListStr":"ce5c0ded51f907918637e82bc4a01940","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.8 KB","destSize":"45.6 KB","compressRate":"169.7%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/07/keygen_1.png","sourceStatusCode":200,"destWidth":490,"destHeight":478,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn80@2020_3/2020/08/25/00-31-00-126_22e6d429b598cdb1.webp","sourceBytes":52910,"destBytes":19534,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1065,"convertSpendMs":16,"createdTime":"2020-08-25 08:30:59","host":"us-006*","referer":"https://teddysun.com/?p=237","linkMd5ListStr":"b3637f8cdfb2ae768409659d880a308d","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.7 KB","destSize":"19.1 KB","compressRate":"36.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/dd_windows_07.png","sourceStatusCode":200,"destWidth":1234,"destHeight":865,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn92@2020_6/2020/08/25/00-31-00-088_8a4da314741e4bec.webp","sourceBytes":46144,"destBytes":55882,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":972,"convertSpendMs":51,"createdTime":"2020-08-25 08:31:00","host":"us-038*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.1 KB","destSize":"54.6 KB","compressRate":"121.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/03/qq_2.png","sourceStatusCode":200,"destWidth":855,"destHeight":557,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn55@2020_5/2020/08/25/00-30-59-932_a71f514c6506d187.webp","sourceBytes":39924,"destBytes":26460,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2220,"convertSpendMs":19,"createdTime":"2020-08-25 08:30:58","host":"europe61*","referer":"https://teddysun.com/?p=136","linkMd5ListStr":"0d9b43089f9ae1c925219206b3e5c5f9","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39 KB","destSize":"25.8 KB","compressRate":"66.3%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader4.png","sourceStatusCode":200,"destWidth":704,"destHeight":419,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn95@2020_5/2020/08/25/00-31-00-319_329002037dbfdbff.webp","sourceBytes":31796,"destBytes":9670,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1026,"convertSpendMs":13,"createdTime":"2020-08-25 08:31:00","host":"us-026*","referer":"https://teddysun.com/?p=178","linkMd5ListStr":"89b6fd92fbf2ea09a9a8b75a9b093a69","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.1 KB","destSize":"9.4 KB","compressRate":"30.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/07/image002.png","sourceStatusCode":200,"destWidth":465,"destHeight":56,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn75@2020_4/2020/08/25/00-31-00-345_19b386375fcee963.webp","sourceBytes":2780,"destBytes":3332,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":987,"convertSpendMs":4,"createdTime":"2020-08-25 08:31:00","host":"us-017*","referer":"https://teddysun.com/?p=240","linkMd5ListStr":"13873f199369e9f80680aba8811ac37b","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.7 KB","destSize":"3.3 KB","compressRate":"119.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/vultr_probe.png","sourceStatusCode":200,"destWidth":959,"destHeight":301,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn100@2020_1/2020/08/25/00-31-00-310_b5ab79ea3aa1720d.webp","sourceBytes":15442,"destBytes":36356,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1161,"convertSpendMs":26,"createdTime":"2020-08-25 08:31:00","host":"us-014*","referer":"https://teddysun.com/?p=353","linkMd5ListStr":"c207934e2e1ec2f7eca32eabb6071876","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.1 KB","destSize":"35.5 KB","compressRate":"235.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/05/owncloud_install.png","sourceStatusCode":200,"destWidth":502,"destHeight":822,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn3@2020_2/2020/08/25/00-31-00-379_9454621f9e202ec8.webp","sourceBytes":32229,"destBytes":19068,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1162,"convertSpendMs":19,"createdTime":"2020-08-25 08:31:00","host":"us-003*","referer":"https://teddysun.com/?p=200","linkMd5ListStr":"9843ffee10e5beac6c84cd4d7d4a521d","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.5 KB","destSize":"18.6 KB","compressRate":"59.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/09/phpmyadmin_2.png","sourceStatusCode":200,"destWidth":1160,"destHeight":412,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn40@2020_1/2020/08/25/00-30-59-935_2b3ab4d5924ef0fe.webp","sourceBytes":29577,"destBytes":34768,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1691,"convertSpendMs":18,"createdTime":"2020-08-25 08:30:59","host":"europe65*","referer":"https://teddysun.com/?p=268","linkMd5ListStr":"e050e5390a499dbaf5981e9b036b2e6c","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.9 KB","destSize":"34 KB","compressRate":"117.6%"},{"code":1,"isDone":false,"source":"http://teddysun.u.qiniudn.com/wp-content/uploads/2014/phpmyadmin_3.png","sourceStatusCode":404,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","sourceBytes":0,"destBytes":0,"feedId":9594,"totalSpendMs":2015,"convertSpendMs":0,"createdTime":"2020-08-25 08:30:59","host":"europe69*","referer":"https://teddysun.com/?p=359","linkMd5ListStr":"9fba75e95fcb402ce8d726a8da54caaf","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/host1plus_ping.png","sourceStatusCode":200,"destWidth":893,"destHeight":253,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn87@2020_2/2020/08/25/00-31-00-319_1226b2998162c087.webp","sourceBytes":4948,"destBytes":14566,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1412,"convertSpendMs":8,"createdTime":"2020-08-25 08:30:59","host":"europe-59*","referer":"https://teddysun.com/?p=416","linkMd5ListStr":"b58a887125f8273ee4b734af61b113b5","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.8 KB","destSize":"14.2 KB","compressRate":"294.4%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/bittorrent_sync_screen2.png","sourceStatusCode":200,"destWidth":557,"destHeight":424,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn33@2020_6/2020/08/25/00-31-00-648_99894bbc07470ad1.webp","sourceBytes":16594,"destBytes":11482,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1049,"convertSpendMs":9,"createdTime":"2020-08-25 08:31:00","host":"us-023*","referer":"https://teddysun.com/?p=179","linkMd5ListStr":"522244c8fc050f907cb3c7c86fd279b0","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.2 KB","destSize":"11.2 KB","compressRate":"69.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/dd_windows_08.png","sourceStatusCode":200,"destWidth":1231,"destHeight":863,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn38@2020_4/2020/08/25/00-31-00-553_706717308af196c3.webp","sourceBytes":51584,"destBytes":60134,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1034,"convertSpendMs":87,"createdTime":"2020-08-25 08:31:00","host":"us-012*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.4 KB","destSize":"58.7 KB","compressRate":"116.6%"},{"code":1,"isDone":false,"source":"http://teddysun.u.qiniudn.com/wp-content/uploads/2014/phpmyadmin_2.png","sourceStatusCode":404,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","sourceBytes":0,"destBytes":0,"feedId":9594,"totalSpendMs":1316,"convertSpendMs":0,"createdTime":"2020-08-25 08:31:00","host":"us-025*","referer":"https://teddysun.com/?p=359","linkMd5ListStr":"9fba75e95fcb402ce8d726a8da54caaf","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/bind_3.png","sourceStatusCode":200,"destWidth":677,"destHeight":492,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn60@2020_6/2020/08/25/00-31-00-256_4ead5926461595c4.webp","sourceBytes":45558,"destBytes":41864,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1651,"convertSpendMs":21,"createdTime":"2020-08-25 08:30:59","host":"europe-23*","referer":"https://teddysun.com/?p=406","linkMd5ListStr":"f4b20f4460498673a790abfd082c7735","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"44.5 KB","destSize":"40.9 KB","compressRate":"91.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/rootca.png","sourceStatusCode":200,"destWidth":419,"destHeight":486,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn42@2020_6/2020/08/25/00-31-00-716_482af059b06b95e3.webp","sourceBytes":32595,"destBytes":15598,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1077,"convertSpendMs":9,"createdTime":"2020-08-25 08:31:00","host":"us-001*","referer":"https://teddysun.com/?p=395","linkMd5ListStr":"cbeb0e79ddbb9c5280a1607caf95358f","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.8 KB","destSize":"15.2 KB","compressRate":"47.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/bind_2.png","sourceStatusCode":200,"destWidth":615,"destHeight":214,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn19@2020_4/2020/08/25/00-31-00-419_d87cb0ddd3fc39fc.webp","sourceBytes":21966,"destBytes":21508,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2161,"convertSpendMs":10,"createdTime":"2020-08-25 08:30:59","host":"europe-57*","referer":"https://teddysun.com/?p=406","linkMd5ListStr":"f4b20f4460498673a790abfd082c7735","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.5 KB","destSize":"21 KB","compressRate":"97.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/dd_windows_06.png","sourceStatusCode":200,"destWidth":1230,"destHeight":862,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn63@2020_2/2020/08/25/00-31-00-280_d3853750b1e97bad.webp","sourceBytes":35236,"destBytes":38244,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1672,"convertSpendMs":32,"createdTime":"2020-08-25 08:30:59","host":"europe62*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.4 KB","destSize":"37.3 KB","compressRate":"108.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/pptp_vpn_server2.png","sourceStatusCode":200,"destWidth":962,"destHeight":672,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn30@2020_1/2020/08/25/00-31-00-619_bba043e3837996c3.webp","sourceBytes":51622,"destBytes":45870,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1232,"convertSpendMs":37,"createdTime":"2020-08-25 08:31:00","host":"us-033*","referer":"https://teddysun.com/?p=151","linkMd5ListStr":"ceab8b84993b7658697428558d9de747","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.4 KB","destSize":"44.8 KB","compressRate":"88.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/hyper-v_08.png","sourceStatusCode":200,"destWidth":878,"destHeight":631,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn99@2020_1/2020/08/25/00-31-00-553_c95fa5b806156610.webp","sourceBytes":71508,"destBytes":28358,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2442,"convertSpendMs":23,"createdTime":"2020-08-25 08:30:59","host":"europe-57*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"69.8 KB","destSize":"27.7 KB","compressRate":"39.7%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/Python_interpreters.png","sourceStatusCode":200,"destWidth":792,"destHeight":733,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn84@2020_6/2020/08/25/00-31-00-441_c592bdf3587eb164.webp","sourceBytes":37493,"destBytes":51258,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1691,"convertSpendMs":24,"createdTime":"2020-08-25 08:30:59","host":"europe70*","referer":"https://teddysun.com/?p=346","linkMd5ListStr":"bb98a13cf5a77fd8cffb007bf11f8d98","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.6 KB","destSize":"50.1 KB","compressRate":"136.7%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2016/l2tp_1.png","sourceStatusCode":200,"destWidth":486,"destHeight":580,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn54@2020_3/2020/08/25/00-31-00-791_529321eb4da7a141.webp","sourceBytes":15440,"destBytes":48874,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1144,"convertSpendMs":18,"createdTime":"2020-08-25 08:31:00","host":"us-035*","referer":"https://teddysun.com/?p=448","linkMd5ListStr":"0bfaee07cd125ce265eaeab898ee35f4","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.1 KB","destSize":"47.7 KB","compressRate":"316.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/speedtest_ramnode.png","sourceStatusCode":200,"destWidth":516,"destHeight":600,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn58@2020_6/2020/08/25/00-31-00-723_cbb28193ba399552.webp","sourceBytes":59129,"destBytes":62632,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1003,"convertSpendMs":23,"createdTime":"2020-08-25 08:31:00","host":"us-025*","referer":"https://teddysun.com/?p=444","linkMd5ListStr":"ce5c0ded51f907918637e82bc4a01940","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"57.7 KB","destSize":"61.2 KB","compressRate":"105.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/speedtest_xvmlabs.png","sourceStatusCode":200,"destWidth":528,"destHeight":430,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn66@2020_5/2020/08/25/00-31-00-783_39fd9b3c979c3735.webp","sourceBytes":29694,"destBytes":42194,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1016,"convertSpendMs":25,"createdTime":"2020-08-25 08:31:00","host":"us-004*","referer":"https://teddysun.com/?p=444","linkMd5ListStr":"ce5c0ded51f907918637e82bc4a01940","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29 KB","destSize":"41.2 KB","compressRate":"142.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/hyper-v_01.png","sourceStatusCode":200,"destWidth":1315,"destHeight":902,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn26@2020_6/2020/08/25/00-31-00-502_fbacf45919c845b9.webp","sourceBytes":190583,"destBytes":49390,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1076,"convertSpendMs":45,"createdTime":"2020-08-25 08:31:00","host":"us-54*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"186.1 KB","destSize":"48.2 KB","compressRate":"25.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2014/vultr_ping.png","sourceStatusCode":200,"destWidth":728,"destHeight":218,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn7@2020_3/2020/08/25/00-31-00-621_6cffaa3ea9d3c217.webp","sourceBytes":6429,"destBytes":21156,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1519,"convertSpendMs":8,"createdTime":"2020-08-25 08:31:00","host":"europe67*","referer":"https://teddysun.com/?p=353","linkMd5ListStr":"c207934e2e1ec2f7eca32eabb6071876","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.3 KB","destSize":"20.7 KB","compressRate":"329.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/02/google_drive_step1.png","sourceStatusCode":200,"destWidth":519,"destHeight":506,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn77@2020_5/2020/08/25/00-31-01-059_2d35883199253e9e.webp","sourceBytes":20575,"destBytes":15994,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1234,"convertSpendMs":19,"createdTime":"2020-08-25 08:31:00","host":"us-038*","referer":"https://teddysun.com/?p=53","linkMd5ListStr":"c962ea90d6975968d867d4c6ba3c199b","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.1 KB","destSize":"15.6 KB","compressRate":"77.7%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader3.png","sourceStatusCode":200,"destWidth":763,"destHeight":514,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn62@2020_6/2020/08/25/00-31-01-054_5552ec18c0ac0baf.webp","sourceBytes":41789,"destBytes":23748,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1379,"convertSpendMs":66,"createdTime":"2020-08-25 08:31:00","host":"us-014*","referer":"https://teddysun.com/?p=178","linkMd5ListStr":"89b6fd92fbf2ea09a9a8b75a9b093a69","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"40.8 KB","destSize":"23.2 KB","compressRate":"56.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/12/webmin_mysql_1.jpg","sourceStatusCode":200,"destWidth":1022,"destHeight":572,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn100@2020_6/2020/08/25/00-31-01-089_9def60f95ced0e53.webp","sourceBytes":142984,"destBytes":57142,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":4085,"convertSpendMs":36,"createdTime":"2020-08-25 08:30:58","host":"us-026*","referer":"https://teddysun.com/?p=322","linkMd5ListStr":"3aaa2730f58ccbdba6f3a370c757bd25","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"139.6 KB","destSize":"55.8 KB","compressRate":"40%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_5.png","sourceStatusCode":200,"destWidth":976,"destHeight":441,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn89@2020_6/2020/08/25/00-31-01-196_bc1b3efcee699c12.webp","sourceBytes":51372,"destBytes":35720,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1224,"convertSpendMs":27,"createdTime":"2020-08-25 08:31:00","host":"us-006*","referer":"https://teddysun.com/?p=139","linkMd5ListStr":"84e3eba0ae84d629d9a777a2a0d465bf","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.2 KB","destSize":"34.9 KB","compressRate":"69.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2019/wireguard_w3.png","sourceStatusCode":200,"destWidth":609,"destHeight":492,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn11@2020_6/2020/08/25/00-31-00-628_b5da1ad2900b93a8.webp","sourceBytes":20527,"destBytes":33856,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1826,"convertSpendMs":14,"createdTime":"2020-08-25 08:31:00","host":"europe-56*","referer":"https://teddysun.com/?p=554","linkMd5ListStr":"72f1b03b8f1b938f2609446c2c2a7e1b","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20 KB","destSize":"33.1 KB","compressRate":"164.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/08/locvps_lv_ping.png","sourceStatusCode":200,"destWidth":730,"destHeight":223,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn85@2020_6/2020/08/25/00-31-01-233_7fca5c616c4c6729.webp","sourceBytes":7779,"destBytes":24126,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1081,"convertSpendMs":14,"createdTime":"2020-08-25 08:31:00","host":"us-016*","referer":"https://teddysun.com/?p=257","linkMd5ListStr":"b5514bda99c9090c5c60533f3483a908","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.6 KB","destSize":"23.6 KB","compressRate":"310.1%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/03/DigitalOcean_4.png","sourceStatusCode":200,"destWidth":1008,"destHeight":690,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn70@2020_5/2020/08/25/00-31-01-302_a9419d1b0626213d.webp","sourceBytes":44555,"destBytes":39100,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1610,"convertSpendMs":26,"createdTime":"2020-08-25 08:31:00","host":"europe68*","referer":"https://teddysun.com/?p=139","linkMd5ListStr":"84e3eba0ae84d629d9a777a2a0d465bf","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43.5 KB","destSize":"38.2 KB","compressRate":"87.8%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/poco_eset3.png","sourceStatusCode":200,"destWidth":807,"destHeight":515,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn50@2020_2/2020/08/25/00-31-01-222_2f88b273ee71dbcf.webp","sourceBytes":67832,"destBytes":44872,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1865,"convertSpendMs":17,"createdTime":"2020-08-25 08:31:00","host":"europe-56*","referer":"https://teddysun.com/?p=162","linkMd5ListStr":"d26ae5fd21b1a1cc97262cbf9e53b886","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"66.2 KB","destSize":"43.8 KB","compressRate":"66.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/07/image001.png","sourceStatusCode":200,"destWidth":719,"destHeight":170,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn17@2020_3/2020/08/25/00-31-01-466_b4c267592edbb4a3.webp","sourceBytes":15128,"destBytes":31108,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2260,"convertSpendMs":10,"createdTime":"2020-08-25 08:31:00","host":"europe-24*","referer":"https://teddysun.com/?p=240","linkMd5ListStr":"13873f199369e9f80680aba8811ac37b","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.8 KB","destSize":"30.4 KB","compressRate":"205.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2019/wireguard_w2.png","sourceStatusCode":200,"destWidth":609,"destHeight":492,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn46@2020_6/2020/08/25/00-31-01-697_5d23563817ee0ad5.webp","sourceBytes":9736,"destBytes":14218,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2202,"convertSpendMs":11,"createdTime":"2020-08-25 08:31:00","host":"europe66*","referer":"https://teddysun.com/?p=554","linkMd5ListStr":"72f1b03b8f1b938f2609446c2c2a7e1b","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.5 KB","destSize":"13.9 KB","compressRate":"146%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2018/hyper-v_02.png","sourceStatusCode":200,"destWidth":879,"destHeight":633,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn98@2020_2/2020/08/25/00-31-01-664_6be38224645811eb.webp","sourceBytes":76653,"destBytes":34132,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1789,"convertSpendMs":21,"createdTime":"2020-08-25 08:31:01","host":"europe-24*","referer":"https://teddysun.com/?p=544","linkMd5ListStr":"926f9ce15a1f968e331864c627d75567","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"74.9 KB","destSize":"33.3 KB","compressRate":"44.5%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/dropbox_uploader2.png","sourceStatusCode":200,"destWidth":1008,"destHeight":666,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn94@2020_4/2020/08/25/00-31-01-759_c09501b194ab9eb2.webp","sourceBytes":34343,"destBytes":35444,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2056,"convertSpendMs":79,"createdTime":"2020-08-25 08:31:00","host":"us-009*","referer":"https://teddysun.com/?p=178","linkMd5ListStr":"89b6fd92fbf2ea09a9a8b75a9b093a69","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.5 KB","destSize":"34.6 KB","compressRate":"103.2%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2013/04/poco_eset2.png","sourceStatusCode":200,"destWidth":802,"destHeight":624,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn22@2020_1/2020/08/25/00-31-01-810_c68682598d2f48e0.webp","sourceBytes":85322,"destBytes":73044,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2652,"convertSpendMs":22,"createdTime":"2020-08-25 08:31:00","host":"europe64*","referer":"https://teddysun.com/?p=162","linkMd5ListStr":"d26ae5fd21b1a1cc97262cbf9e53b886","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"83.3 KB","destSize":"71.3 KB","compressRate":"85.6%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2019/wireguard_w1.png","sourceStatusCode":200,"destWidth":828,"destHeight":648,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn74@2020_1/2020/08/25/00-31-01-964_85b7df40d871c100.webp","sourceBytes":13376,"destBytes":8008,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":2210,"convertSpendMs":16,"createdTime":"2020-08-25 08:31:00","host":"europe-58*","referer":"https://teddysun.com/?p=554","linkMd5ListStr":"72f1b03b8f1b938f2609446c2c2a7e1b","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.1 KB","destSize":"7.8 KB","compressRate":"59.9%"},{"code":1,"isDone":false,"source":"https://teddysun.com/wp-content/uploads/2015/host1plus_server.png","sourceStatusCode":200,"destWidth":504,"destHeight":593,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn81@2020_2/2020/08/25/00-31-11-054_8c129a195536f830.webp","sourceBytes":7943,"destBytes":12868,"targetWebpQuality":75,"feedId":9594,"totalSpendMs":1028,"convertSpendMs":12,"createdTime":"2020-08-25 08:31:10","host":"us-027*","referer":"https://teddysun.com/?p=416","linkMd5ListStr":"b58a887125f8273ee4b734af61b113b5","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.8 KB","destSize":"12.6 KB","compressRate":"162%"}],"successGithubMap":{"myreaderx8":9,"myreaderx14":8,"myreaderx15":9,"myreaderx7":8,"myreaderx6":9,"myreaderx16":9,"myreaderx32":8,"myreaderx10":9,"myreaderx4":8,"myreaderx33":9,"myreaderx11":9,"myreaderx3":8,"myreaderx12":8,"myreaderx2":7,"myreaderx1":9,"myreaderx13":8,"myreaderx30":8,"myreaderx31":7,"myreaderx18":8,"myreaderx19":7,"myreaderx":9,"myreaderx25":8,"myreaderx27":8,"myreaderx21":7,"myreaderx22":9,"myreaderx23":8,"myreaderx24":9,"myreaderx5oss":5,"myreaderx29":8},"failGithubMap":{}}