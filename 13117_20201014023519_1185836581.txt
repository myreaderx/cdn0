{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-14 10:34:13","updatedTime":"2020-10-14 10:34:13","title":"¿Qué ha pasado, Tiki-Wiki? Vulnerabilidades XSS, no gracias","link":"https://www.securityartwork.es/?p=28961","description":"\n<p><em>La entrada de hoy es una colaboración enviada por el equipo del <a href=\"http://www.csirtcv.gva.es/\">CSIRT-CV</a>, el Centro de Seguridad TIC de la Comunitat Valenciana, en relación a la detección de una vulnerabilidad en el CMS Tiki-Wiki durante el pasado diciembre</em>.</p>\n\n\n\n<hr class=\"wp-block-separator is-style-dots\"/>\n\n\n\n<p>Hace ya unos meses, concretamente en diciembre de 2019, en el <a href=\"http://www.csirtcv.gva.es/\">CSIRT-CV</a> descubrimos una vulnerabilidad en el CMS <a href=\"https://info.tiki.org/HomePage\">Tiki-Wiki</a>, un sistema de gestión de contenidos del estilo de WordPress, Joomla o Drupal.</p>\n\n\n\n<p>Esta vulnerabilidad se publicó meses más tarde, en abril de 2020, con el código&#160;<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8966\">CVE-2020-8966</a>, como se puede comprobar en nuestra <a href=\"https://www.csirtcv.gva.es/es/alertas/el-equipo-de-csirt-cv-descubre-una-vulnerabilidad-cross-site-scripting-en-el-software-tiki\">página de alertas</a>, dando el suficiente margen de tiempo a los desarrolladores para corregir el problema detectado en la aplicación. Todo esto se canalizó a través de <a href=\"https://www.incibe-cert.es/\">INCIBE-CERT</a>, que intermedió con la empresa desarrolladora. Una vez corregida, <a href=\"https://www.incibe-cert.es/alerta-temprana/avisos-seguridad/fallos-cross-site-scripting-xss-encontradas-el-software-tiki-wiki\">publicada</a> y tras los problemas derivados de la Covid-19 hemos sacado un rato para contaros los detalles de la misma.</p>\n\n\n\n<p>Durante un test de intrusión realizado a una página web interna que usaba este CMS, se detectaron varios fallos de seguridad <em>Cross-Site Scripting (XSS) Reflected</em> sobre la <em>versión 18.3</em>, pero cuya explotación seguía siendo efectiva en la última versión disponible, la<em> v.20.0</em> por aquel entonces.</p>\n\n\n\n<span id=\"more-28961\"></span>\n\n\n\n<p>La vulnerabilidad XSS permite la inyección de código sobre algún campo de entrada de datos de la página web: un buscador, un campo de participación en un foro o un formulario de recogida de datos. La intención es que el código inyectado se ejecute en el navegador de la víctima tras su acceso al recurso. Esta vulnerabilidad puede ser de dos tipos: persistente cuando el código inyectado se almacena en la web y se ejecuta en el navegador de cada usuario que accede a la página, o reflejado, cuando no se almacena sino que va embebido dentro de la URL, y que se hace llegar de algún modo a la víctima para que pinche en él, como por ejemplo un correo electrónico, un enlace por redes sociales, etc.</p>\n\n\n\n<p>En este caso, se identificaron varios recursos vulnerables a XSS reflejado,  que podían (y pueden, en sistemas vulnerables) aprovechados por cualquier usuario malintencionado para realizar distintos tipos de ataque: robo de sesión, ataques contra el navegador, descarga de software malicioso, keyloggers u otros ataques del lado del cliente. </p>\n\n\n\n<h3>Recurso <em><strong>tiki-index.php</strong></em></h3>\n\n\n\n<p>Después de esta breve introducción, vamos con el primer problema de seguridad, detectado en el <strong>parámetro <em>msg</em></strong> del recurso <em><strong>tiki-index.php</strong> (URL: http://servidor/recurso/tiki-index.php)</em>.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1494\" height=\"628\" src=\"https://www.securityartwork.es/wp-content/uploads/2020/09/image-19.png\" alt=\"\" class=\"wp-image-28969\"/><figcaption>1. XSS reflejado en el <strong>parámetro msg</strong></figcaption></figure>\n\n\n\n<p>Como se puede observar en la prueba de concepto (PoC), aprovechando que el parámetro <em>msg n</em>o impide el uso de caracteres especiales y por lo tanto permite la ejecución de la función <em>alert</em>, se consiguió inyectar en la petición el siguiente código JavaScript, mostrando por pantalla el texto XSS y confirmando que es vulnerable.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1460\" height=\"127\" src=\"https://www.securityartwork.es/wp-content/uploads/2020/09/image-29.png\" alt=\"\" class=\"wp-image-28981\"/></figure>\n\n\n\n<h3>Recurso <em>tiki-contact.php</em></h3>\n\n\n\n<p>Otro parámetro vulnerable a XSS fue <em><strong>subject </strong></em>del recurso<em> <strong>tiki-contact.php </strong>(URL: http://servidor/recurso/tiki-contact.php), </em>formulario utilizado para enviar un correo al administrador del CMS. Al igual que en el anterior caso, este tampoco filtraba correctamente la entrada de texto permitiendo la inyección del código, tal y como se muestra en la imagen:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1031\" height=\"733\" src=\"https://www.securityartwork.es/wp-content/uploads/2020/09/image-20.png\" alt=\"\" class=\"wp-image-28970\"/><figcaption>2. XSS reflejado en el <strong>parámetro subject</strong></figcaption></figure>\n\n\n\n<p>En esta ocasión se utilizó el siguiente código con la función <em>alert(), </em>para que se ejecutara al pasar el ratón por encima del campo<em> subject (Tema) </em>del formulario de contacto:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1458\" height=\"122\" src=\"https://www.securityartwork.es/wp-content/uploads/2020/09/image-30.png\" alt=\"\" class=\"wp-image-28982\"/></figure>\n\n\n\n<h3>Historial del CMS <em><strong>tiki-pagehistory.php</strong></em></h3>\n\n\n\n<p>Los tres siguientes parámetros vulnerables se detectaron sobre el recurso del <strong>historial</strong> del CMS <em><strong>tiki-pagehistory.php</strong></em> <em>(URL: </em>http://<em>servidor/recurso/tiki-pagehistory.php)</em>. </p>\n\n\n\n<p>El<strong> primer parámetro vulnerable </strong>se detectó al observar que era posible habilitar la paginación y establecer un número máximo de resultados por página. </p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1062\" height=\"733\" src=\"https://www.securityartwork.es/wp-content/uploads/2020/09/image-25.png\" alt=\"\" class=\"wp-image-28976\"/><figcaption>3. XSS reflejado en el <strong>parámetro history_pagesize</strong></figcaption></figure>\n\n\n\n<p>El parámetro <em><strong>history_pagesize</strong>, </em>igual que en los anteriores casos, no filtraba los datos de entrada y permitió ejecutar de nuevo código JavaScript.</p>\n\n\n\n<p>Para esta PoC se modificó la petición que realiza el recurso en el lado del cliente contra el servidor, para habilitar y seleccionar el valor máximo de paginación, que al no estar correctamente sanitizado permitió inyectar el siguiente código:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1750\" height=\"146\" src=\"https://www.securityartwork.es/wp-content/uploads/2020/09/image-31.png\" alt=\"\" class=\"wp-image-28983\"/></figure>\n\n\n\n<p>Con el <strong>segundo parámetro vulnerable</strong> nos encontramos con una situación similar a la anterior cuando se cambia de página en el historial. </p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1198\" height=\"623\" src=\"https://www.securityartwork.es/wp-content/uploads/2020/09/image-26.png\" alt=\"\" class=\"wp-image-28977\"/><figcaption>4. XSS reflejado en el <strong>parámetro history_offset</strong></figcaption></figure>\n\n\n\n<p>Para ello, se estableció el parámetro<strong> <em>history_offset</em></strong> con el valor previamente indicado como valor máximo de resultados por página y sobre la misma URL (<em>http://servidor/recurso/tiki-pagehistory.php?page=Inici&#38;history_offset=25</em>), y se comprobó que se podía ejecutar el siguiente código:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1749\" height=\"150\" src=\"https://www.securityartwork.es/wp-content/uploads/2020/09/image-32.png\" alt=\"\" class=\"wp-image-28984\"/></figure>\n\n\n\n<p>El <strong>tercer parámetro vulnerable</strong> sobre el recurso <em>tiki-pagehistory.php</em> se identificó al presionar el botón “<em>Collapse Into Edit Sessions</em>”. </p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"997\" height=\"706\" src=\"https://www.securityartwork.es/wp-content/uploads/2020/09/image-27.png\" alt=\"\" class=\"wp-image-28978\"/><figcaption>5. XSS reflejado en el <strong>parámetro show_all_versions</strong></figcaption></figure>\n\n\n\n<p>Este realizaba una petición GET (<em>http://servidor/recurso//tiki-pagehistory.php?page=Inici&#38;clear_versions=1&#38;show_all_versions=n</em>) que contiene el parámetro <em>show_all_versions</em>, que tampoco era validado correctamente,  permitiendo la inyección del código siguiente sobre la propia URL:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1747\" height=\"145\" src=\"https://www.securityartwork.es/wp-content/uploads/2020/09/image-33.png\" alt=\"\" class=\"wp-image-28985\"/></figure>\n\n\n\n<h4>Recurso <em>tiki-browse_freetags.php</em></h4>\n\n\n\n<p>Por último y cambiando de recurso, se detectó otro fallo de seguridad en <em>tiki-browse_freetags.php (URL:http://servidor/recurso/tiki-browse_freetags.php). </em>Este caso es más especial pues el código a inyectar va justo después del nombre del archivo, antes de la definición de los parámetros con los que se llama al recurso, por lo que no hay ningún parámetro involucrado<em>. </em></p>\n\n\n\n<p>Al acceder a este recurso, uno de los enlaces generado por la propia web, encargado de mostrar más contenido, toma como URL destino parte de la URL actual. Al no filtrarse adecuadamente, insertando el carácter “<em>/</em>” fue posible inyectar código JavaScript , tal y como se puede observar en las siguientes ilustraciones:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1746\" height=\"147\" src=\"https://www.securityartwork.es/wp-content/uploads/2020/09/image-34.png\" alt=\"\" class=\"wp-image-28986\"/></figure>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1756\" height=\"803\" src=\"https://www.securityartwork.es/wp-content/uploads/2020/09/image-28.png\" alt=\"\" class=\"wp-image-28979\"/><figcaption>Código fuente de tiki-browse_freetags.php con el código inyectado marcado</figcaption></figure>\n\n\n\n<p>Con esto concluimos esta entrada sobre los fallos de seguridad XSS descubiertos por <a href=\"https://www.csirtcv.gva.es/\">CSIRT-CV</a> en el CMS Tiki-Wiki, destacando la importancia de desarrollar aplicaciones siguiendo las <a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html\">guías existentes</a> de desarrollo seguro, mejorando de esa forma la seguridad de nuestros usuarios.</p>\n<p>La entrada <a rel=\"nofollow\" href=\"https://www.securityartwork.es/2020/09/23/que-ha-pasado-tiki-wiki-vulnerabilidades-xss-no-gracias/\">¿Qué ha pasado, Tiki-Wiki? Vulnerabilidades XSS, no gracias</a> aparece primero en <a rel=\"nofollow\" href=\"https://www.securityartwork.es\">Security Art Work</a>.</p>\n","descriptionType":"html","publishedDate":"Wed, 23 Sep 2020 08:33:39 +0000","feedId":13117,"bgimg":"https://www.securityartwork.es/wp-content/uploads/2020/09/image-19.png","linkMd5":"80f03ccda31bdf81ac129500bbbc6a92","destWidth":1494,"destHeight":628,"sourceBytes":276832,"destBytes":22164,"author":"CSIRT-CV","articleImgCdnMap":{"https://www.securityartwork.es/wp-content/uploads/2020/09/image-19.png":null,"https://www.securityartwork.es/wp-content/uploads/2020/09/image-29.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn92@2020_3/2020/10/14/02-34-17-260_0f87c6d87b8b5cde.webp","https://www.securityartwork.es/wp-content/uploads/2020/09/image-20.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn94@2020_5/2020/10/14/02-34-17-757_47d2cf602dd7e9a0.webp","https://www.securityartwork.es/wp-content/uploads/2020/09/image-30.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn99@2020_6/2020/10/14/02-34-17-327_44f5fad73f66320a.webp","https://www.securityartwork.es/wp-content/uploads/2020/09/image-25.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn15@2020_6/2020/10/14/02-34-16-949_f7d2daf91b0cc475.webp","https://www.securityartwork.es/wp-content/uploads/2020/09/image-31.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn5@2020_5/2020/10/14/02-34-17-375_d4d3d19b1179e0a4.webp","https://www.securityartwork.es/wp-content/uploads/2020/09/image-26.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn30@2020_1/2020/10/14/02-34-17-149_082ea861635fb9d7.webp","https://www.securityartwork.es/wp-content/uploads/2020/09/image-32.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn4@2020_6/2020/10/14/02-35-18-245_7dbb88125bb5c734.webp","https://www.securityartwork.es/wp-content/uploads/2020/09/image-27.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn28@2020_6/2020/10/14/02-34-17-073_bdc6a29b33a70d6e.webp","https://www.securityartwork.es/wp-content/uploads/2020/09/image-33.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn12@2020_2/2020/10/14/02-34-16-791_759845c1c990900d.webp","https://www.securityartwork.es/wp-content/uploads/2020/09/image-34.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn20@2020_5/2020/10/14/02-34-17-339_8bf12d86f5d2f74e.webp","https://www.securityartwork.es/wp-content/uploads/2020/09/image-28.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn23@2020_5/2020/10/14/02-34-17-895_fe47912c6d6b71fe.webp"},"publishedOrCreatedDate":1602642853874}],"record":{"createdTime":"2020-10-14 10:34:13","updatedTime":"2020-10-14 10:34:13","feedId":13117,"fetchDate":"Wed, 14 Oct 2020 02:34:13 +0000","fetchMs":1624,"handleMs":9,"totalMs":67107,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"37ff164ed8700febcc02ea7a26d1d1bb","hostName":"europe62*","requestId":"182e6bdb92254662ad331ea6b86c5d8d_13117","contentType":"application/rss+xml; charset=UTF-8","totalBytes":291592,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":12,"articlesImgsGithubTotal":11,"successGithubMap":{"myreaderx8":1,"myreaderx27":1,"myreaderx32":1,"myreaderx4":1,"myreaderx33":1,"myreaderx22":1,"myreaderx12":1,"myreaderx2":1,"myreaderx1":1,"myreaderx30":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1}},"feed":{"createdTime":"2020-08-25 04:38:16","updatedTime":"2020-09-05 16:46:31","id":13117,"name":"Security Art Work","url":"http://www.securityartwork.es/feed/","subscriber":236,"website":null,"icon":"https://www.securityartwork.es/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn56@2020_6/2020/09/05/08-46-31-141_b4d67f5a4c6c5ab5.png","description":"Blog de Seguridad de la Información de S2 Grupo","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-10-14 10:35:19","updatedTime":"2020-10-14 10:35:19","id":null,"feedId":13117,"linkMd5":"80f03ccda31bdf81ac129500bbbc6a92"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":291592,"tmpBgImgCdnBytes":0,"extra4":{"start":1602642852088,"total":0,"statList":[{"spend":1777,"msg":"获取xml内容"},{"spend":9,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":62831,"msg":"正文链接上传到cdn"}]},"extra5":12,"extra6":12,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://www.securityartwork.es/wp-content/uploads/2020/09/image-19.png","sourceStatusCode":200,"destWidth":1494,"destHeight":628,"sourceBytes":276832,"destBytes":22164,"targetWebpQuality":75,"feedId":13117,"totalSpendMs":1291,"convertSpendMs":58,"createdTime":"2020-10-14 10:34:13","host":"us-003*","referer":"https://www.securityartwork.es/?p=28961","linkMd5ListStr":"80f03ccda31bdf81ac129500bbbc6a92,80f03ccda31bdf81ac129500bbbc6a92","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn85/contents/2020/10/14/02-34-15-241_fc6071efe035e1f8.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Wed, 14 Oct 2020 02:34:15 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9D2E:68FE:2B3769C:4A75B27:5F8663A4"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602644796"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn85/contents/2020/10/14/02-34-15-241_fc6071efe035e1f8.webp","historyStatusCode":[],"spendMs":47},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"270.3 KB","destSize":"21.6 KB","compressRate":"8%"},{"code":1,"isDone":false,"source":"https://www.securityartwork.es/wp-content/uploads/2020/09/image-19.png","sourceStatusCode":200,"destWidth":1494,"destHeight":628,"sourceBytes":276832,"destBytes":22164,"targetWebpQuality":75,"feedId":13117,"totalSpendMs":960,"convertSpendMs":42,"createdTime":"2020-10-14 10:34:15","host":"us-003*","referer":"https://www.securityartwork.es/?p=28961","linkMd5ListStr":"80f03ccda31bdf81ac129500bbbc6a92,80f03ccda31bdf81ac129500bbbc6a92","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn85/contents/2020/10/14/02-34-16-285_fc6071efe035e1f8.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Wed, 14 Oct 2020 02:34:16 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9D2E:68FE:2B3772A:4A75D7D:5F8663A7"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602644796"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn85/contents/2020/10/14/02-34-16-285_fc6071efe035e1f8.webp","historyStatusCode":[],"spendMs":38},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"270.3 KB","destSize":"21.6 KB","compressRate":"8%"},null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-032.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-24.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-54.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe21.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-036.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-007.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe-58.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-024.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://www.securityartwork.es/wp-content/uploads/2020/09/image-25.png","sourceStatusCode":200,"destWidth":1062,"destHeight":733,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn15@2020_6/2020/10/14/02-34-16-949_f7d2daf91b0cc475.webp","sourceBytes":241644,"destBytes":14292,"targetWebpQuality":75,"feedId":13117,"totalSpendMs":1636,"convertSpendMs":40,"createdTime":"2020-10-14 10:34:16","host":"europe-58*","referer":"https://www.securityartwork.es/?p=28961","linkMd5ListStr":"80f03ccda31bdf81ac129500bbbc6a92","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"236 KB","destSize":"14 KB","compressRate":"5.9%"},{"code":1,"isDone":false,"source":"https://www.securityartwork.es/wp-content/uploads/2020/09/image-33.png","sourceStatusCode":200,"destWidth":1747,"destHeight":145,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn12@2020_2/2020/10/14/02-34-16-791_759845c1c990900d.webp","sourceBytes":18122,"destBytes":10806,"targetWebpQuality":75,"feedId":13117,"totalSpendMs":1644,"convertSpendMs":10,"createdTime":"2020-10-14 10:34:16","host":"europe21*","referer":"https://www.securityartwork.es/?p=28961","linkMd5ListStr":"80f03ccda31bdf81ac129500bbbc6a92","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.7 KB","destSize":"10.6 KB","compressRate":"59.6%"},{"code":1,"isDone":false,"source":"https://www.securityartwork.es/wp-content/uploads/2020/09/image-29.png","sourceStatusCode":200,"destWidth":1460,"destHeight":127,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn92@2020_3/2020/10/14/02-34-17-260_0f87c6d87b8b5cde.webp","sourceBytes":14324,"destBytes":9230,"targetWebpQuality":75,"feedId":13117,"totalSpendMs":1571,"convertSpendMs":9,"createdTime":"2020-10-14 10:34:16","host":"us-53*","referer":"https://www.securityartwork.es/?p=28961","linkMd5ListStr":"80f03ccda31bdf81ac129500bbbc6a92","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14 KB","destSize":"9 KB","compressRate":"64.4%"},{"code":1,"isDone":false,"source":"https://www.securityartwork.es/wp-content/uploads/2020/09/image-27.png","sourceStatusCode":200,"destWidth":997,"destHeight":706,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn28@2020_6/2020/10/14/02-34-17-073_bdc6a29b33a70d6e.webp","sourceBytes":221856,"destBytes":14148,"targetWebpQuality":75,"feedId":13117,"totalSpendMs":1711,"convertSpendMs":52,"createdTime":"2020-10-14 10:34:16","host":"europe-24*","referer":"https://www.securityartwork.es/?p=28961","linkMd5ListStr":"80f03ccda31bdf81ac129500bbbc6a92","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"216.7 KB","destSize":"13.8 KB","compressRate":"6.4%"},{"code":1,"isDone":false,"source":"https://www.securityartwork.es/wp-content/uploads/2020/09/image-34.png","sourceStatusCode":200,"destWidth":1746,"destHeight":147,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn20@2020_5/2020/10/14/02-34-17-339_8bf12d86f5d2f74e.webp","sourceBytes":17273,"destBytes":10428,"targetWebpQuality":75,"feedId":13117,"totalSpendMs":1597,"convertSpendMs":13,"createdTime":"2020-10-14 10:34:16","host":"us-036*","referer":"https://www.securityartwork.es/?p=28961","linkMd5ListStr":"80f03ccda31bdf81ac129500bbbc6a92","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.9 KB","destSize":"10.2 KB","compressRate":"60.4%"},{"code":1,"isDone":false,"source":"https://www.securityartwork.es/wp-content/uploads/2020/09/image-26.png","sourceStatusCode":200,"destWidth":1198,"destHeight":623,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn30@2020_1/2020/10/14/02-34-17-149_082ea861635fb9d7.webp","sourceBytes":195985,"destBytes":14340,"targetWebpQuality":75,"feedId":13117,"totalSpendMs":1778,"convertSpendMs":34,"createdTime":"2020-10-14 10:34:16","host":"europe-25*","referer":"https://www.securityartwork.es/?p=28961","linkMd5ListStr":"80f03ccda31bdf81ac129500bbbc6a92","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"191.4 KB","destSize":"14 KB","compressRate":"7.3%"},{"code":1,"isDone":false,"source":"https://www.securityartwork.es/wp-content/uploads/2020/09/image-31.png","sourceStatusCode":200,"destWidth":1750,"destHeight":146,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn5@2020_5/2020/10/14/02-34-17-375_d4d3d19b1179e0a4.webp","sourceBytes":18185,"destBytes":10954,"targetWebpQuality":75,"feedId":13117,"totalSpendMs":1681,"convertSpendMs":17,"createdTime":"2020-10-14 10:34:16","host":"us-008*","referer":"https://www.securityartwork.es/?p=28961","linkMd5ListStr":"80f03ccda31bdf81ac129500bbbc6a92","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.8 KB","destSize":"10.7 KB","compressRate":"60.2%"},{"code":1,"isDone":false,"source":"https://www.securityartwork.es/wp-content/uploads/2020/09/image-30.png","sourceStatusCode":200,"destWidth":1458,"destHeight":122,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn99@2020_6/2020/10/14/02-34-17-327_44f5fad73f66320a.webp","sourceBytes":15341,"destBytes":10298,"targetWebpQuality":75,"feedId":13117,"totalSpendMs":1673,"convertSpendMs":21,"createdTime":"2020-10-14 10:34:16","host":"us-032*","referer":"https://www.securityartwork.es/?p=28961","linkMd5ListStr":"80f03ccda31bdf81ac129500bbbc6a92","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15 KB","destSize":"10.1 KB","compressRate":"67.1%"},{"code":1,"isDone":false,"source":"https://www.securityartwork.es/wp-content/uploads/2020/09/image-20.png","sourceStatusCode":200,"destWidth":1031,"destHeight":733,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn94@2020_5/2020/10/14/02-34-17-757_47d2cf602dd7e9a0.webp","sourceBytes":475617,"destBytes":14562,"targetWebpQuality":75,"feedId":13117,"totalSpendMs":2154,"convertSpendMs":56,"createdTime":"2020-10-14 10:34:16","host":"us-54*","referer":"https://www.securityartwork.es/?p=28961","linkMd5ListStr":"80f03ccda31bdf81ac129500bbbc6a92","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"464.5 KB","destSize":"14.2 KB","compressRate":"3.1%"},{"code":1,"isDone":false,"source":"https://www.securityartwork.es/wp-content/uploads/2020/09/image-28.png","sourceStatusCode":200,"destWidth":1756,"destHeight":803,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn23@2020_5/2020/10/14/02-34-17-895_fe47912c6d6b71fe.webp","sourceBytes":857579,"destBytes":170954,"targetWebpQuality":75,"feedId":13117,"totalSpendMs":2612,"convertSpendMs":98,"createdTime":"2020-10-14 10:34:16","host":"us-024*","referer":"https://www.securityartwork.es/?p=28961","linkMd5ListStr":"80f03ccda31bdf81ac129500bbbc6a92","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"837.5 KB","destSize":"166.9 KB","compressRate":"19.9%"},{"code":1,"isDone":false,"source":"https://www.securityartwork.es/wp-content/uploads/2020/09/image-32.png","sourceStatusCode":200,"destWidth":1749,"destHeight":150,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn4@2020_6/2020/10/14/02-35-18-245_7dbb88125bb5c734.webp","sourceBytes":18289,"destBytes":11580,"targetWebpQuality":75,"feedId":13117,"totalSpendMs":1240,"convertSpendMs":10,"createdTime":"2020-10-14 10:35:17","host":"europe-25*","referer":"https://www.securityartwork.es/?p=28961","linkMd5ListStr":"80f03ccda31bdf81ac129500bbbc6a92","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.9 KB","destSize":"11.3 KB","compressRate":"63.3%"}],"successGithubMap":{"myreaderx8":1,"myreaderx27":1,"myreaderx32":1,"myreaderx4":1,"myreaderx33":1,"myreaderx22":1,"myreaderx12":1,"myreaderx2":1,"myreaderx1":1,"myreaderx30":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1}}