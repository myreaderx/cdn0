{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-12-01 14:16:49","updatedTime":"2020-12-01 14:16:49","title":"Flutter状态State的5种应对方法","link":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+Flutter%E7%8A%B6%E6%80%81State%E7%9A%845%E7%A7%8D%E5%BA%94%E5%AF%B9%E6%96%B9%E6%B3%95","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://content.sov5.cn/mmbiz_jpg/XIibZ0YbvibkVjVN52RxD6W9WELQdbqwe38nSDOO0aLnSQWIqibgIWz5aRuia4Do4Sh9nAZTqXj0X8nPklUh6lw8lA?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n\n                    \n                    \n                    <section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\" data-mpa-powered-by=\"yiban.io\"><section style=\"text-align: left;\">\n\t\t<img data-ratio=\"0.6666666666666666\" data-type=\"jpeg\" data-w=\"3456\" style=\"width: 100%; border-radius: 4px; margin-bottom: 25px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkVjVN52RxD6W9WELQdbqwe3XunLiccfKVQfnasuncM2ltWXoTXhA2rictAgf9MPneRsmG8at48q9bdQ/640?wx_fmt=jpeg\">\n\t</section><section style=\"font-size: 14px;color: rgb(145, 145, 145);text-align: left;line-height: 1em;margin-top: 13px;padding-left: 14px;\">\n\t\t作者 | Ryan Edge\t</section><section style=\"font-size: 14px;color: rgb(145, 145, 145);text-align: left;line-height: 1em;margin-top: 13px;padding-left: 14px;\">\n\t\t译者 | 王强\t</section><section style=\"font-size: 14px;color: rgb(145, 145, 145);text-align: left;line-height: 1em;margin-top: 13px;padding-left: 14px;\">\n\t\t策划 | 李俊辰\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">本文最初发布于 poetryincode.dev 网站，经原作者授权由 InfoQ 中文站翻译并分享。</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">通过下方链接查看本文中示例的代码：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://github.com/chimon2000/flutter_state_five_ways</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">不管你是刚开始了解 Flutter，还是已经接触 Flutter 有了一段时间，你都可能已经知道有很多方法可以处理应用程序状态。我可以肯定，每个月都会冒出来一些新的途径。因为没有太多可以直接对比的例子，所以想要了解这些方法之间的差异和各自的权衡可能会很困难。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">我认为，学习如何使用一个库的最佳方法是用它来构建项目。对比两个库的最佳方法是用它们来执行相同的任务：构建相同的功能，从而更好地了解彼此的权衡所在。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">在本文中，我将使用同样的应用程序作为基础，用我很喜欢的几位作者制作的 5 个库，使用相同的模式来实现共享状态。这些库有的很流行，有的罕见，有的很新，有的相对老旧。</p><ol class=\"list-paddingleft-2\" style=\"list-style-type: decimal;\"><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Riverpod（带有 StateNotifier）</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Bloc</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">flutter_command</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">MobX</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">binder</p></li></ol><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">我会尽力找出各个库之间的差异，并对每种方法做一个总结。为了演示各个库的 API，我们将实现一个笔记应用，它会显示一个输入字段以创建新的笔记，还会显示已创建笔记的列表。你可以在这里观看演示效果：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://flutter-state.codemagic.app/</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">在开始之前我想澄清一下，就算我可能会批评其中的某些库，但它们仍然值得大家使用。我发现所有这些库都可以为你完成大部分工作，而且我的观点会有一些主观偏见。选择它们本来也是个人喜好的结果。同样，本文没有介绍的库也并不是不好。我的观点也不是真理，而且就算我的看法是正确的，我也没那么勤奋来选出所有好用的库来。另外，这毕竟是一篇博客文章，不是什么大部头。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>准备工作</span>\n\t</section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">如果你决定跟我一起研究，请创建一个新的 Flutter 应用来测试这几种方法：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\">flutter <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">create</span> state_examples</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">要运行这个应用的时候，请在项目根目录中执行 run 命令。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 50px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">flutter</span> run</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">我们将在示例中重用一些类，因此接下来会定义它们。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><p style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em 15px;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 477px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// A simple helper function to allow us to immutably add to lists.</span><br mpa-from-tpl=\"t\">extension ImmutableList<t> on <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">List</span><t> {<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">List</span><t> concat(T item) =&gt; <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">List</span><t>.from(<t>[...this, item]);<br mpa-from-tpl=\"t\">}</t></t></t></t></t></p></pre></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><p style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em 15px;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 368px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// A simple widget for displaying individual notes.</span><br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 253px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">Note</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 108px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">StatelessWidget</span> </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">final</span> String text;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 361px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 28px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">Note</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 159px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">({Key key, <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.text})</span> : <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">super</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(key: key)</span></span>;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 253px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">Widget <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">build</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 159px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(BuildContext context)</span> </span>{<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> Padding(<br mpa-from-tpl=\"t\">      padding: <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> EdgeInsets.symmetric(vertical: <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">8.0</span>),<br mpa-from-tpl=\"t\">      child: Text(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'Note: $text'</span>),<br mpa-from-tpl=\"t\">    );<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">}</p></pre></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 440px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// You can add equatable as a dependency to your pubspec.yaml</span><br mpa-from-tpl=\"t\"><span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 325px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// https://pub.dev/packages/equatable/install</span><br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> NotesState <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 50px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> Equatable {<br mpa-from-tpl=\"t\">  final List&lt;<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">String</span>&gt; notes;<br mpa-from-tpl=\"t\">  final <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">String</span> input;<br mpa-from-tpl=\"t\">  NotesState(<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.notes,<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.input,<br mpa-from-tpl=\"t\">  );<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  List&lt;<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">Object</span>&gt; <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">get</span> props =&gt; [notes, input];<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  bool <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">get</span> stringify =&gt; <span style=\"color: rgb(86, 182, 194);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(86, 182, 194);font-weight: 400;font-style: normal;\">true</span>;<br mpa-from-tpl=\"t\">  NotesState copyWith({<br mpa-from-tpl=\"t\">    List&lt;<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">String</span>&gt; notes,<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">String</span> input,<br mpa-from-tpl=\"t\">  }) {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> NotesState(<br mpa-from-tpl=\"t\">      notes ?? <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.notes,<br mpa-from-tpl=\"t\">      input ?? <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.input,<br mpa-from-tpl=\"t\">    );<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  NotesState.initial()<br mpa-from-tpl=\"t\">      : notes = [],<br mpa-from-tpl=\"t\">        input = <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">''</span>;<br mpa-from-tpl=\"t\">}</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">我们还希望重构 main.dart 文件，以便轻松换掉页面。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">main</span>() {<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">runApp</span>(App());<br mpa-from-tpl=\"t\">}<br mpa-from-tpl=\"t\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">App</span> <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 108px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">StatelessWidget</span> {<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  Widget build(BuildContext context) {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">return</span> <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">ProviderScope</span>(<br mpa-from-tpl=\"t\">      <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">child</span>: MaterialApp(<br mpa-from-tpl=\"t\">        <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">title</span>: <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'Flutter Demo'</span>,<br mpa-from-tpl=\"t\">        <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">theme</span>: ThemeData(<br mpa-from-tpl=\"t\">          <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">primarySwatch</span>: Colors.blue,<br mpa-from-tpl=\"t\">          <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">visualDensity</span>: VisualDensity.adaptivePlatformDensity,<br mpa-from-tpl=\"t\">        ),<br mpa-from-tpl=\"t\">        <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 390px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// home: SomePage(), //This is where our page will go,</span><br mpa-from-tpl=\"t\">      ),<br mpa-from-tpl=\"t\">    );<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">}</code></pre></section><section style=\"text-align: center;font-size: 20px;\"><span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>Riverpod</span>\n\t<br></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Riverpod 文档：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://riverpod.dev/</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Riverpod 是 Remi Rousselet 创建的一个相当新的库，也是他对自己另一个库 provider 遇到的一些最常见问题的直接回应，其中很重要的一个问题是当开发人员无法提供依赖项时会引发 ProviderNotFound 异常。Riverpod 解决了这个问题，还有更简单的 API，我觉得这是它的两个最大优势。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">与其他选项相比，我的看法是如果你只使用 StateNotifier，那么用起来就没那么头疼，因为你要处理的是一个简单的 API，这个 API 实现了 MVU 模式，还有一大堆文档支持。如果你正在使用完整的 API，我觉得你会遇到的麻烦会比其他选项平均来说高很多。。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>Riverpod 实践</span>\n\t</section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;text-align: left;\">要开始使用 Riverpod，请将这个库安装为依赖项：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">dependencies</span>:<br mpa-from-tpl=\"t\">  # ..<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.other</span> <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">dependencies</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 116px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">flutter_riverpod</span>: ^0<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 21px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.12</span><span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.1</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">riverpod</span>: ^0<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.12</span><span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.1</span></code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;text-align: left;\">接下来，将 ProviderScope 添加到应用的根 / 入口点：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">main</span>() {<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 513px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// For widgets to be able to read providers, we need to wrap the entire</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 311px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// application in a \"ProviderScope\" widget.</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 426px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// This is where the state of our providers will be stored.</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">runApp</span>(ProviderScope(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">child</span>: App()));<br mpa-from-tpl=\"t\">}</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;margin-bottom: 15px;\">然后，要创建和更改状态，我们将创建一个 NotesController，它扩展一个 StateNotifier 和一个 StateNotifierProvider，来存储对 NotesController 的引用，并将其提供给我们的应用程序和设置一些初始状态：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 542px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// We create a \"provider\", which will store a reference to NotesController.</span><br mpa-from-tpl=\"t\">final notesProvider = StateNotifierProvider(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 57px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">ref</span>) =&gt;</span> NotesController());<br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 404px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 108px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">NotesController</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 50px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 93px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">StateNotifier</span>&lt;<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">NotesState</span>&gt; </span>{<br mpa-from-tpl=\"t\">  NotesController() : <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">super</span>(NotesState.initial());<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> addNote() {<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 21px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">var</span> notes = state.notes.concat(state.input);<br mpa-from-tpl=\"t\">    state = state.copyWith(notes: notes, <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">input</span>: <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">''</span>);<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> updateInput(<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">String</span> input) =&gt; state = state.copyWith(input: input);<br mpa-from-tpl=\"t\">}</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;margin-bottom: 15px;\">现在，我们可以在 BuildContext 和 Consumer 上使用 read 扩展方法来访问应用中任何位置的 NotesController。read 扩展使我们能够执行突变函数，而 Consumer 小部件使我们能够订阅状态更改。这是在 Riverpod 中实现的 Notes UI：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 303px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 87px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">RiverpodPage</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">StatefulWidget</span> </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 340px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">RiverpodPage</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 80px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">({Key key})</span> : <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 37px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">super</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(key: key)</span></span>;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 239px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">_RiverpodPageState <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 80px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">createState</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>=&gt; _RiverpodPageState();<br mpa-from-tpl=\"t\">}<br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 383px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 130px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">_RiverpodPageState</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">State</span>&lt;<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">RiverpodPage</span>&gt; </span>{<br mpa-from-tpl=\"t\">  TextEditingController _controller;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 123px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">initState</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>{<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">super</span>.initState();<br mpa-from-tpl=\"t\">    _controller = TextEditingController();<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 109px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">dispose</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>{<br mpa-from-tpl=\"t\">    _controller?.dispose();<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">super</span>.dispose();<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 253px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">Widget <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">build</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 159px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(BuildContext context)</span> </span>{<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> Scaffold(<br mpa-from-tpl=\"t\">      appBar: AppBar(title: Text(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'My notes app'</span>)),<br mpa-from-tpl=\"t\">      body: Padding(<br mpa-from-tpl=\"t\">        padding: <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> EdgeInsets.all(<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">8.0</span>),<br mpa-from-tpl=\"t\">        child: Column(<br mpa-from-tpl=\"t\">          children: [<br mpa-from-tpl=\"t\">            FlatButton(<br mpa-from-tpl=\"t\">                onPressed: () {<br mpa-from-tpl=\"t\">                  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 303px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// Get a reference of the NotesController </span><br mpa-from-tpl=\"t\">                  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 130px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// and add a note.</span><br mpa-from-tpl=\"t\">                  context.read(notesProvider).addNote();<br mpa-from-tpl=\"t\">                  _controller.clear();<br mpa-from-tpl=\"t\">                },<br mpa-from-tpl=\"t\">                child: Text(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'Create Note'</span>)),<br mpa-from-tpl=\"t\">            TextField(<br mpa-from-tpl=\"t\">              controller: _controller,<br mpa-from-tpl=\"t\">              <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 303px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// Get a reference of the NotesController </span><br mpa-from-tpl=\"t\">              <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 217px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// and update the input value.</span><br mpa-from-tpl=\"t\">              onChanged: (value) =&gt;<br mpa-from-tpl=\"t\">                  context.read(notesProvider).updateInput(value), <br mpa-from-tpl=\"t\">              decoration: InputDecoration.collapsed(hintText: <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'Add a note'</span>),<br mpa-from-tpl=\"t\">            ),<br mpa-from-tpl=\"t\">            Divider(),<br mpa-from-tpl=\"t\">            Expanded(<br mpa-from-tpl=\"t\">              child: Consumer(<br mpa-from-tpl=\"t\">                builder: (context, watch, child) {<br mpa-from-tpl=\"t\"><br mpa-from-tpl=\"t\">                  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 318px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// Subscribe to the NotesController's state </span><br mpa-from-tpl=\"t\">= var state = watch(notesProvider.state);<br mpa-from-tpl=\"t\">                  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> ListView.builder(<br mpa-from-tpl=\"t\">                    itemBuilder: (context, index) =&gt;<br mpa-from-tpl=\"t\">                        Note(text: state.notes[index]),<br mpa-from-tpl=\"t\">                    itemCount: state.notes.length,<br mpa-from-tpl=\"t\">                  );<br mpa-from-tpl=\"t\">                },<br mpa-from-tpl=\"t\">              ),<br mpa-from-tpl=\"t\">            )<br mpa-from-tpl=\"t\">          ],<br mpa-from-tpl=\"t\">        ),<br mpa-from-tpl=\"t\">      ),<br mpa-from-tpl=\"t\">    );<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">}</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">最后，我们将反注释 home: SomePage()，并使用上面定义的小部件换掉 SomePage。<br></p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>评价</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">这个示例可能会让大家觉得 Riverpod 用起来平平无奇，但这是设计使然。Riverpod 是一个功能非常强大的库，提供了状态管理和依赖项注入。本文介绍的其他选项并不是都有这样的能力。但是强大的力量意味着更大的……算了不说了。这里的权衡是，这种能力造就了一个相当大的 API，这可能会令人生畏。Riverpod 有丰富的文档支持，但是你可能会发现自己要在文档里翻来翻去，具体取决于要学习的内容。不要因为这个就放弃使用它，因为大多数用例只需使用 StateNotifier 就能解决了。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">Riverpod 非常顺滑，也许有点难以入门，但它解决了 provider 这个库的主要问题。我目前没在使用它，但是如果我开始了一个项目，并且很熟悉 provider，需要在两者之间做出选择，那么我会毫不犹豫地选择 Riverpod。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>  Bloc  </span></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Bloc 文档：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://bloclibrary.dev/</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Bloc 库是这个列表中最古老的一员，足足有两年的历史！它最初是由 Felix Angelov 创建的，是一种基于事件驱动的 Bloc 模式，最近它经过了重构，以同时支持事件驱动和函数驱动的状态更新。这听起来似乎是微不足道的变化，但是作为在多个框架中用过事件驱动模式的程序员，我可以肯定这种改变是很有价值的。我已经见识过了事件驱动的大型应用程序中会冒出来多少样板和技术债。能够选择何时使用这种模式是非常重要的。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Bloc 有两种类型的状态对象：Blocs 是事件驱动的，继承自 Cubits，后者是函数驱动的。两者都继承自 Stream，并使开发人员免受其某些复杂性的影响。实质上，它们的区别就这些了。由于 Blocs 是 Cubits 的扩展，因此生态系统的其余部分（BlocProvider、BlocListener、BlocBuilder 等）都可以被两者共享。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Bloc 也是这个列表上所有库中文档做得最好的榜样。它的整个 API 都在 bloclibrary.dev 上提供了文档支持，以及你可能要解决的每一个重要问题的示例，从使用 RESTful/GraphQL/Firebase API 到处理导航，无所不包。他们的文档写得太好了，怎么夸都不为过。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">与其他选项相比，我想说的是这个库用起来要轻松一些，因为你要处理的是一个简单的 API，这个 API 实现了 MVU 模式，有一大堆文档支持。</p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>Bloc 实践</span>\n\t</section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">要开始使用 Bloc，请将这个库安装为依赖项：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">dependencies</span>:<br mpa-from-tpl=\"t\">  # ..<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.other</span> <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">dependencies</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">bloc</span>: ^6<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.1</span><span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.0</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 87px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">flutter_bloc</span>: ^6<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.0</span><span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.6</span></code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">接下来，要创建和更改状态，我们将使用来自 Bloc 的 Cubit，使用一些初始状态初始化我们的类，并创建几个突变器（mutator）函数：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 310px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">NotesCubit</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 50px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 37px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">Cubit</span>&lt;<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">NotesState</span>&gt; </span>{<br mpa-from-tpl=\"t\">  NotesCubit(): <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">super</span>(NotesState.initial());<br mpa-from-tpl=\"t\"><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 109px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">addNote</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>{<br mpa-from-tpl=\"t\">    emit(state.copyWith(notes: state.notes.concat(state.input), input: <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">''</span>));<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 224px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 80px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">updateInput</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(String input)</span> </span>=&gt; emit(state.copyWith(input: input));<br mpa-from-tpl=\"t\">}</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">我们将使用 BlocProvider 类在整个应用中共享我们的 NotesCubit。为了保持一致，我们将在小部件树中 App 的上方添加 BlocProvider。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">void</span> main() {<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 513px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// For widgets to be able to read providers, we need to wrap the entire</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 304px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// application in a \"BlocProvider\" widget.</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 434px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// This is where the state of our NotesCubit will be stored.</span><br mpa-from-tpl=\"t\">  runApp(BlocProvider<notescubit><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 564px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 297px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">create: (<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 8px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">_</span>) =&gt; NotesCubit(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 0px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"></span>), child: App(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 0px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"></span>)</span>));<br mpa-from-tpl=\"t\">}</span></notescubit></code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;text-align: left;\">现在，我们可以在 BuildContext 和 BlocBuilder 上使用 bloc 扩展方法来访问应用中的 NotesCubit。这是在 Bloc 中实现的 Notes UI：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 274px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">BlocPage</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">StatefulWidget</span> </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 311px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 57px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">BlocPage</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 80px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">({Key key})</span> : <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">super</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(key: key)</span></span>;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 210px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">_BlocPageState <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 79px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">createState</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>=&gt; _BlocPageState();<br mpa-from-tpl=\"t\">}<br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 325px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">_BlocPageState</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">State</span>&lt;<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 57px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">BlocPage</span>&gt; </span>{<br mpa-from-tpl=\"t\">  TextEditingController _controller;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 123px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">initState</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>{<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">super</span>.initState();<br mpa-from-tpl=\"t\">    _controller = TextEditingController();<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 109px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">dispose</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>{<br mpa-from-tpl=\"t\">    _controller?.dispose();<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">super</span>.dispose();<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 253px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">Widget <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">build</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 159px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(BuildContext context)</span> </span>{<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> Scaffold(<br mpa-from-tpl=\"t\">      appBar: AppBar(title: Text(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 145px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'My notes app: Bloc'</span>)),<br mpa-from-tpl=\"t\">      body: Padding(<br mpa-from-tpl=\"t\">        padding: <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> EdgeInsets.all(<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">8.0</span>),<br mpa-from-tpl=\"t\">        child: Column(<br mpa-from-tpl=\"t\">          children: [<br mpa-from-tpl=\"t\">            FlatButton(<br mpa-from-tpl=\"t\">                onPressed: () {<br mpa-from-tpl=\"t\">                  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 267px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// Get a reference of the NotesCubit </span><br mpa-from-tpl=\"t\">                  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 130px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// and add a note.</span><br mpa-from-tpl=\"t\">                  context.bloc<notescubit>().addNote();<br mpa-from-tpl=\"t\">                  _controller.clear();<br mpa-from-tpl=\"t\">                },<br mpa-from-tpl=\"t\">                child: Text(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'Create Note'</span>)),<br mpa-from-tpl=\"t\">            TextField(<br mpa-from-tpl=\"t\">              controller: _controller,<br mpa-from-tpl=\"t\">              <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 267px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// Get a reference of the NotesCubit </span><br mpa-from-tpl=\"t\">              <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 217px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// and update the input value.</span><br mpa-from-tpl=\"t\">              onChanged: (value) =&gt;<br mpa-from-tpl=\"t\">                  context.bloc<notescubit>().updateInput(value),<br mpa-from-tpl=\"t\">              decoration: InputDecoration.collapsed(hintText: <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'Add a note'</span>),<br mpa-from-tpl=\"t\">            ),<br mpa-from-tpl=\"t\">            Divider(),<br mpa-from-tpl=\"t\">            <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 282px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// Subscribe to the NotesCubit's state </span><br mpa-from-tpl=\"t\">            BlocBuilder<notescubit notesstate>(<br mpa-from-tpl=\"t\">              builder: (context, state) =&gt; Expanded(<br mpa-from-tpl=\"t\">                child: ListView.builder(<br mpa-from-tpl=\"t\">                  itemBuilder: (context, index) =&gt;<br mpa-from-tpl=\"t\">                      Note(text: state.notes[index]),<br mpa-from-tpl=\"t\">                  itemCount: state.notes.length,<br mpa-from-tpl=\"t\">                ),<br mpa-from-tpl=\"t\">              ),<br mpa-from-tpl=\"t\">            )<br mpa-from-tpl=\"t\">          ],<br mpa-from-tpl=\"t\">        ),<br mpa-from-tpl=\"t\">      ),<br mpa-from-tpl=\"t\">    );<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">}</notescubit></notescubit></notescubit></code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">同样，我们将反注释 home: SomePage()（如果尚未反注释），并用上面定义的小部件换掉 SomePage。<br></p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>评价</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">实际上，我经手的几个项目已经从 provider 迁移到了 Bloc。这不是说 Riverpod 就不行，因为用 Bloc 重构要比 Riverpod 简单得多。此外，在使用 Firebase 的情况下，由于 Firebase 和 Bloc 都依赖 Streams，因此我们重构起来会很简单。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">目前来说，我发现自己使用 Bloc 的效率最高，因为它没那么复杂，而且文档很丰富。再次强调，我能充分理解 API 是非常值得夸奖的优点。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">我不会说未来五年内我都会继续使用 Bloc，但是对我来说，这绝对是现在的合适之选。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>flutter_command</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">flutter_command 文档：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://pub.dev/packages/flutter_command</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">flutter_command 实际上是 Thomas Burkhart 对 rx_command 库的重新构想。两者之间的主要区别在于，前者基于 ValueNotifier 和 ValueListenableBuilder 构建，而后者基于 Streams 构建。两者都是从.Net 的 ReactiveCommands 派生的，因此如果你熟悉这个模式，也许你会发现自己很容易就能上手这个库。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">与其他选项相比，设置大致上没什么区别，而如果你从未使用过 ReactiveCommands，我觉得它用起来会更难一些。</p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>flutter_command 实践</span>\n\t</section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">要开始使用 flutter_command，请将这个库安装为依赖项：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">dependencies</span>:<br mpa-from-tpl=\"t\">  # ..<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.other</span> <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">dependencies</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 109px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">flutter_command</span>: ^0<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.9</span><span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.3</span></code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">接下来，要创建和改变状态，我们将创建一个 NotesViewModel 类来定义我们的状态，以及来自 flutter_command 的 Command(s)，用于突变这个状态：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 151px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">NotesViewModel</span> </span>{<br mpa-from-tpl=\"t\">  NotesState state = NotesState.initial();<br mpa-from-tpl=\"t\">  Command&lt;<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">String</span>, <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">String</span>&gt; inputChangedCommand;<br mpa-from-tpl=\"t\">  Command&lt;<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">String</span>, NotesState&gt; updateNotesCommand;<br mpa-from-tpl=\"t\">  NotesViewModel() {<br mpa-from-tpl=\"t\">    inputChangedCommand = Command.createSync(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 7px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">x</span>) =&gt;</span> x, <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">''</span>);<br mpa-from-tpl=\"t\">    updateNotesCommand = Command.createSync((input) {<br mpa-from-tpl=\"t\">      state = state.copyWith(notes: state.notes.concat(input));<br mpa-from-tpl=\"t\">      inputChangedCommand.execute(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">''</span>);<br mpa-from-tpl=\"t\">      <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> state;<br mpa-from-tpl=\"t\">    }, NotesState.initial());<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">}</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;text-align: left;\">现在，我们可以使用创建的 NotesViewModel 订阅状态（使用 ValueListenableBuilder），并执行 inputChangedCommand 和 updateNotesCommand 来突变状态。这是在 flutter_command 中实现的 Notes UI：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 347px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 130px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">FlutterCommandPage</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">StatefulWidget</span> </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 383px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 130px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">FlutterCommandPage</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 79px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">({Key key})</span> : <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">super</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(key: key)</span></span>;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 282px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">_FlutterCommandPageState <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 79px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">createState</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>=&gt; _FlutterCommandPageState();<br mpa-from-tpl=\"t\">}<br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 469px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 173px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">_FlutterCommandPageState</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 50px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">State</span>&lt;<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 130px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">FlutterCommandPage</span>&gt; </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">final</span> _notesViewModel = NotesViewModel();<br mpa-from-tpl=\"t\">  TextEditingController _controller;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 123px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">initState</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>{<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">super</span>.initState();<br mpa-from-tpl=\"t\">    _controller = TextEditingController();<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 109px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">dispose</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>{<br mpa-from-tpl=\"t\">    _controller?.dispose();<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">super</span>.dispose();<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 253px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">Widget <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">build</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 159px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(BuildContext context)</span> </span>{<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> Scaffold(<br mpa-from-tpl=\"t\">      appBar: AppBar(title: Text(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'My notes app'</span>)),<br mpa-from-tpl=\"t\">      body: Padding(<br mpa-from-tpl=\"t\">        padding: <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> EdgeInsets.all(<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">8.0</span>),<br mpa-from-tpl=\"t\">        child: Column(<br mpa-from-tpl=\"t\">          children: [<br mpa-from-tpl=\"t\">            FlatButton(<br mpa-from-tpl=\"t\">                onPressed: () { <br mpa-from-tpl=\"t\">                  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 209px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// Execute updateNotesCommand</span><br mpa-from-tpl=\"t\">                  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 123px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// to add a note.</span><br mpa-from-tpl=\"t\">                  _notesViewModel.updateNotesCommand<br mpa-from-tpl=\"t\">                      .execute(_notesViewModel.inputChangedCommand.value);<br mpa-from-tpl=\"t\">                  _controller.clear();<br mpa-from-tpl=\"t\">                },<br mpa-from-tpl=\"t\">                child: Text(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'Create Note'</span>)),<br mpa-from-tpl=\"t\">            TextField(<br mpa-from-tpl=\"t\">              controller: _controller, <br mpa-from-tpl=\"t\">              <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 217px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// Execute inputChangedCommand</span><br mpa-from-tpl=\"t\">              <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 209px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// to update the input value.</span><br mpa-from-tpl=\"t\">              onChanged: _notesViewModel.inputChangedCommand,<br mpa-from-tpl=\"t\">              decoration: InputDecoration.collapsed(hintText: <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'Add a note'</span>),<br mpa-from-tpl=\"t\">            ),<br mpa-from-tpl=\"t\">            Divider(), <br mpa-from-tpl=\"t\">            <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 210px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// Use ValueListenableBuilder</span><br mpa-from-tpl=\"t\">            <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 181px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// to subscribe to state.</span><br mpa-from-tpl=\"t\">            ValueListenableBuilder<notesstate>(<br mpa-from-tpl=\"t\">              valueListenable: _notesViewModel.updateNotesCommand,<br mpa-from-tpl=\"t\">              builder: (context, state, _) =&gt; Expanded(<br mpa-from-tpl=\"t\">                child: ListView.builder(<br mpa-from-tpl=\"t\">                  itemBuilder: (context, index) =&gt;<br mpa-from-tpl=\"t\">                      Note(text: state.notes[index]),<br mpa-from-tpl=\"t\">                  itemCount: state.notes.length,<br mpa-from-tpl=\"t\">                ),<br mpa-from-tpl=\"t\">              ),<br mpa-from-tpl=\"t\">            )<br mpa-from-tpl=\"t\">          ],<br mpa-from-tpl=\"t\">        ),<br mpa-from-tpl=\"t\">      ),<br mpa-from-tpl=\"t\">    );<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">}</notesstate></code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">我们将反注释 home: SomePage()（如果尚未操作），并使用上面定义的小部件换掉 SomePage。<br></p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>评价</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">我对这个库的感受很复杂。对于熟悉其概念的人来说，它可能是一个完美的选择。对于像我这样来自 React/Angular 社区的人来说，它并不会给人浑然天成的感受。文档来说，应付这个示例是足够了。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">我可能不会使用 flutter_command，但是我觉得这个库在别人手中的效果和列表中的其他库相比并不会落下风。我肯定会向已经熟悉这些模式的人，或想尝试一些异国风情的人们推荐它。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block> MobX </span></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">MobX 文档：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://mobx.netlify.app/</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">MobX.dart 已经出来一段时间——快两年了！只要你有一定 React 经验，肯定会立刻知道 MobX.dart 是 MobX.js 的一个端口。概念是相同的，只是实践中有所区别：你需要使用代码生成来复现运行时在后台通过动态语言（如 JavaScript）执行的神奇功能。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">与其他选项相比，我的看法是如果你从未用过可观察对象（observable），那么这个库设置起来要比其他选项复杂一些，并且用起来会更难一点。</p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>MobX 实践</span>\n\t</section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">要开始使用 MobX，请将这个库安装为依赖项：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">dependencies</span>:<br mpa-from-tpl=\"t\">  # ..<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.other</span> <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">dependencies</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">mobx</span>: ^1<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.2</span><span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.1</span>+4<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 87px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">flutter_mobx</span>: ^1<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.1</span><span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.0</span>+2<br mpa-from-tpl=\"t\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 115px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">dev_dependencies</span>:<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 87px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">build_runner</span>: ^1<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 21px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.10</span><span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.4</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 87px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">mobx_codegen</span>: ^1<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.1</span><span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.1</span>+3</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;text-align: left;\">接下来，要创建和更改状态，我们将使用来自 mobx 的一个 Store，使用一些初始状态初始化我们的类，并创建几个突变器函数：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\">part <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'notes.g.dart'</span>;<br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> Notes = NotesBase <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">with</span> _$Notes;<br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">abstract</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> NotesBase <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">with</span> Store {<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 80px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@observable</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">String</span> input = <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">''</span>;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 80px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@observable</span><br mpa-from-tpl=\"t\">  ObservableList&lt;<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">String</span>&gt; notes = ObservableList();<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@action</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">void</span> updateInput(<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">String</span> val) {<br mpa-from-tpl=\"t\">    input = val;<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@action</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">void</span> addNote() {<br mpa-from-tpl=\"t\">    notes.add(input);<br mpa-from-tpl=\"t\">    input = <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">''</span>;<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">}</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">你可能会马上注意到到处都是红色的花体。这是因为我们尚未生成 store 所依赖的文件。我们运行以下命令来做到这一点。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 50px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">flutter</span> packages pub run build_runner build</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;text-align: left;\">然后，我们可以使用 flutter_mobx 中的 Observer 和 store 中定义的动作来引用和更新状态。这是在 mobx 中实现的 Notes UI：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 274px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">MobxPage</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">StatefulWidget</span> </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 311px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 57px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">MobxPage</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 80px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">({Key key})</span> : <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">super</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(key: key)</span></span>;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 210px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">_MobxPageState <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 79px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">createState</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>=&gt; _MobxPageState();<br mpa-from-tpl=\"t\">}<br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 325px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">_MobxPageState</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">State</span>&lt;<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 57px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">MobxPage</span>&gt; </span>{<br mpa-from-tpl=\"t\">  var _notesStore = Notes();<br mpa-from-tpl=\"t\">  TextEditingController _controller;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 123px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">initState</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>{<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">super</span>.initState();<br mpa-from-tpl=\"t\">    _controller = TextEditingController();<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 109px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">dispose</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>{<br mpa-from-tpl=\"t\">    _controller?.dispose();<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">super</span>.dispose();<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 253px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">Widget <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">build</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 159px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(BuildContext context)</span> </span>{<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> Scaffold(<br mpa-from-tpl=\"t\">      appBar: AppBar(title: Text(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'My notes app'</span>)),<br mpa-from-tpl=\"t\">      body: Padding(<br mpa-from-tpl=\"t\">        padding: <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> EdgeInsets.all(<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">8.0</span>),<br mpa-from-tpl=\"t\">        child: Column(<br mpa-from-tpl=\"t\">          children: [<br mpa-from-tpl=\"t\">            FlatButton(<br mpa-from-tpl=\"t\">                onPressed: () { <br mpa-from-tpl=\"t\">                  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 180px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// Execute addNote action</span><br mpa-from-tpl=\"t\">                  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 123px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// to add a note.</span><br mpa-from-tpl=\"t\">                  _notesStore.addNote();<br mpa-from-tpl=\"t\">                  _controller.clear();<br mpa-from-tpl=\"t\">                },<br mpa-from-tpl=\"t\">                child: Text(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'Create Note'</span>)),<br mpa-from-tpl=\"t\">            TextField(<br mpa-from-tpl=\"t\">              controller: _controller, <br mpa-from-tpl=\"t\">              <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 209px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// Execute updateInput action</span><br mpa-from-tpl=\"t\">              <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 209px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// to update the input value.</span><br mpa-from-tpl=\"t\">              onChanged: _notesStore.updateInput,<br mpa-from-tpl=\"t\">              decoration: InputDecoration.collapsed(hintText: <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'Add a note'</span>),<br mpa-from-tpl=\"t\">            ),<br mpa-from-tpl=\"t\">            Divider(),<br mpa-from-tpl=\"t\"><br mpa-from-tpl=\"t\">            <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 203px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// Use Observer to subscribe</span><br mpa-from-tpl=\"t\">            <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 232px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// to updates to the NotesStore.</span><br mpa-from-tpl=\"t\">            Observer(<br mpa-from-tpl=\"t\">              builder: (_) =&gt; Expanded(<br mpa-from-tpl=\"t\">                child: ListView.builder(<br mpa-from-tpl=\"t\">                  itemBuilder: (context, index) =&gt;<br mpa-from-tpl=\"t\">                      Note(text: _notesStore.notes[index]),<br mpa-from-tpl=\"t\">                  itemCount: _notesStore.notes.length,<br mpa-from-tpl=\"t\">                ),<br mpa-from-tpl=\"t\">              ),<br mpa-from-tpl=\"t\">            )<br mpa-from-tpl=\"t\">          ],<br mpa-from-tpl=\"t\">        ),<br mpa-from-tpl=\"t\">      ),<br mpa-from-tpl=\"t\">    );<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">}</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">同样，我们将反注释 home: SomePage()（如果尚未操作），并用上面定义的小部件换掉 SomePage。<br></p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>评价</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">尽管我从未在 JavaScript 中使用过 mobx，但由于它们的本质是相同的，因此对我来说它的概念很浅显易懂。它简化了很多事情这一点我很喜欢，虽然我发现装饰器 + 构建生成用起来比较奇妙。我个人还认为，依赖状态管理层的构建生成可能会很烦人。在 UI 层之后，我发现这是自己更改最多的层。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">mobx 最大的优势就是它的易用性和完善的文档。它在这份列表中仅次于 Bloc，因为你应该能从 mobx.netlify.app 了解所需的一切。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block> binder </span></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">binder 文档：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://pub.dev/packages/binder</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">刚诞生不久的 binder 是由 Romain Rastel 创造的。它受到了 Recoil 和 Riverpod 的深刻影响，并试图创建一个易于学习且 API 表面积较小的库。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">与其他选项相比，我觉得这个库的上手难度要低很多，因为你要处理的是非常小的 API，而这个 API 还有着丰富的文档支持。</p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>binder 实践</span>\n\t</section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">要开始使用 binder，请将这个库安装为依赖项：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">dependencies</span>:<br mpa-from-tpl=\"t\">  # ..<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.other</span> <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">dependencies</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">binder</span>: ^0<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.1</span><span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">.5</span></code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">接下来，将 BinderScope 添加到应用的根 / 入口点：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">main</span>() {<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 513px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// For widgets to be able to read app state, we need to wrap the entire</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 296px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// application in a \"BinderScope\" widget.</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(224, 108, 117);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(224, 108, 117);font-weight: 400;font-style: normal;\">runApp</span>(BinderScope(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 37px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">child</span>: App()));<br mpa-from-tpl=\"t\">}</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">为了创建一些状态，我们将使用一个来自 binder 的 StateRef，并设置一些初始状态：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\">// We <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">create</span> a <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 80px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"state ref\"</span>, which will <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">store</span> a <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">reference</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">to</span> NotesState.<br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">final</span> notesRef = StateRef(NotesState.initial());</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;text-align: left;\">接下来，要更改状态，我们将创建一个 Logic 类和一个来自 binder 的 LogicRef：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 542px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// We create a \"logic ref\", which will store a reference to NotesViewLogic.</span><br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">final</span> notesViewLogicRef = LogicRef((scope) =&gt; NotesViewLogic(scope));<br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 231px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">NotesViewLogic</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">with</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">Logic</span> </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 231px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">NotesViewLogic</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(<span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">this</span>.scope)</span></span>;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">final</span> Scope scope;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 109px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">addNote</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>{<br mpa-from-tpl=\"t\">    var state = read(notesRef);<br mpa-from-tpl=\"t\">    write(notesRef,<br mpa-from-tpl=\"t\">        state.copyWith(notes: state.notes.concat(state.input), input: <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">''</span>));<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 224px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 80px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">updateInput</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(String input)</span> </span>=&gt;<br mpa-from-tpl=\"t\">      write(notesRef, read(notesRef).copyWith(input: input));<br mpa-from-tpl=\"t\">}</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">现在，我们可以使用 BuildContext 上的 read、use 和 watch 扩展方法来访问应用程序中任何位置的 StateRef 和 LogicRef。这是在 binder 中实现的 Notes UI：<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 289px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">BinderPage</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 50px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 102px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">StatefulWidget</span> </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 325px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">BinderPage</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 79px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">({Key key})</span> : <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">super</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(key: key)</span></span>;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 224px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">_BinderPageState <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 79px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">createState</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>=&gt; _BinderPageState();<br mpa-from-tpl=\"t\">}<br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 354px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">class</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 116px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">_BinderPageState</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 50px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">extends</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">State</span>&lt;<span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">BinderPage</span>&gt; </span>{<br mpa-from-tpl=\"t\">  TextEditingController _controller;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 123px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">initState</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>{<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">super</span>.initState();<br mpa-from-tpl=\"t\">    _controller = TextEditingController();<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 109px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">void</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">dispose</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 14px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> </span>{<br mpa-from-tpl=\"t\">    _controller?.dispose();<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">super</span>.dispose();<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">@override</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 253px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">Widget <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">build</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 159px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(BuildContext context)</span> </span>{<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 187px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// Subscribe to NotesState</span><br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">final</span> state = context.watch(notesRef);<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> Scaffold(<br mpa-from-tpl=\"t\">      appBar: AppBar(title: Text(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 101px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'My notes app'</span>)),<br mpa-from-tpl=\"t\">      body: Padding(<br mpa-from-tpl=\"t\">        padding: <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> EdgeInsets.all(<span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">8.0</span>),<br mpa-from-tpl=\"t\">        child: Column(<br mpa-from-tpl=\"t\">          children: [<br mpa-from-tpl=\"t\">            FlatButton(<br mpa-from-tpl=\"t\">                onPressed: () {<br mpa-from-tpl=\"t\">                  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 267px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// Get a reference of NotesViewLogic </span><br mpa-from-tpl=\"t\">                  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 130px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// and add a note.</span><br mpa-from-tpl=\"t\">                  context.use(notesViewLogicRef).addNote();<br mpa-from-tpl=\"t\">                  _controller.clear();<br mpa-from-tpl=\"t\">                },<br mpa-from-tpl=\"t\">                child: Text(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'Create Note'</span>)),<br mpa-from-tpl=\"t\">            TextField(<br mpa-from-tpl=\"t\">              controller: _controller,<br mpa-from-tpl=\"t\">              <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 267px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// Get a reference of NotesViewLogic </span><br mpa-from-tpl=\"t\">              <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 217px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// and update the input value.</span><br mpa-from-tpl=\"t\">              onChanged: (value) =&gt;<br mpa-from-tpl=\"t\">                  context.use(notesViewLogicRef).updateInput(value),<br mpa-from-tpl=\"t\">              decoration: InputDecoration.collapsed(hintText: <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 86px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'Add a note'</span>),<br mpa-from-tpl=\"t\">            ),<br mpa-from-tpl=\"t\">            Divider(),<br mpa-from-tpl=\"t\">            Expanded(<br mpa-from-tpl=\"t\">              child: ListView.builder(<br mpa-from-tpl=\"t\">                itemBuilder: (context, index) =&gt; Note(text: state.notes[index]),<br mpa-from-tpl=\"t\">                itemCount: state.notes.length,<br mpa-from-tpl=\"t\">              ),<br mpa-from-tpl=\"t\">            )<br mpa-from-tpl=\"t\">          ],<br mpa-from-tpl=\"t\">        ),<br mpa-from-tpl=\"t\">      ),<br mpa-from-tpl=\"t\">    );<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">}</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">同样，我们将反注释 home: SomePage()（如果尚未操作），并用上面定义的小部件换掉 SomePage。<br></p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>评价</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">binder 是很新的库，在本文发表前一周在刚刚发布。因此，指望这个库与其他库具有相同级别的文档是不公平的。就它的当前状态来说，文档已经很够用了。另外，由于 binder 从 provider 和 Riverpod 借鉴了很多东西，以尽可能接近 Recoil，所以我很容易就可以上手并用起来这个库。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">我对这个库寄予很高的期望，并期待看到更多示例来凸显其优点。如果你没什么选择可用，那么它通过减小 API 表面积可以提供与 Riverpod 相似的优势。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>    总结    </span></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">公平起见，我想重申一下，我的偏好是很主观的，因为它们是基于我个人的经验。另外，这是一个基础示例，其中不包含副作用 / 异步性或测试，因此没有充分利用这些库的功能。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">希望本文能帮助大家基本了解如何使用这些库完成相同的任务，并看明白它们之间的异同。尽管我有自己的偏好，但我敢肯定，你使用这个列表中的任何选项都可以做得很好。</p><section style=\"text-align: left;margin-top: 30px;margin-left: 8px;color: rgb(60, 112, 198);\"><span style=\"display: inline-block;width: 15px;height: 15px;margin-right: 10px;background-image: url(\" https: center no-repeat initial></span>\n\t\t作者介绍\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">我叫 Ryan Edge，是 Flutter 项目的谷歌开发人员专家、Superformula 的软件工程师和半专业的开源贡献者。</p><section style=\"text-align: left;margin-top: 30px;margin-left: 8px;color: rgb(60, 112, 198);\"><span style=\"display: inline-block;width: 15px;height: 15px;margin-right: 10px;background-image: url(\" https: center no-repeat initial></span>\n\t\t延伸阅读\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://poetryincode.dev/flutter-state-5-ways</span><span style=\"color: rgb(60, 112, 198);text-align: left;\"></span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img class=\"rich_pages\" data-ratio=\"0.5546875\" data-type=\"gif\" data-w=\"640\" style=\"text-align: center; color: rgb(63, 63, 63); max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/XIibZ0YbvibkUNBiaqUcdaM6cSBbJTHNBWykQ3XNMAeniaibTxUHOibdyKSIVeicW2lEcfABtC7Y3W0ms4TKKVxHWHASQ/640?wx_fmt=gif\"></p></section>\n                </div>\n\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247503755&amp;idx=2&amp;sn=d9b12c39d8c04a5262789a9c60adcadd&amp;chksm=f9527ac8ce25f3de80ec660cefcc4111bae284ae6bafa238e8dc5a21425bc664a79eb5cec54b&amp;scene=0#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/19192/lQ3uSXegOt\"></div></div>","descriptionType":"html","publishedDate":"Fri, 27 Nov 2020 06:15:00 +0000","feedId":2775,"bgimg":"http://content.sov5.cn/mmbiz_jpg/XIibZ0YbvibkVjVN52RxD6W9WELQdbqwe38nSDOO0aLnSQWIqibgIWz5aRuia4Do4Sh9nAZTqXj0X8nPklUh6lw8lA?imageView2/1/w/600","linkMd5":"fbf06235765b7f57ec47002da822c135","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn36@2020_5/2020/12/01/06-16-50-885_fec8c1eebf2247e1.webp","destWidth":600,"destHeight":545,"sourceBytes":31143,"destBytes":29430,"author":"","articleImgCdnMap":{"http://content.sov5.cn/mmbiz_jpg/XIibZ0YbvibkVjVN52RxD6W9WELQdbqwe38nSDOO0aLnSQWIqibgIWz5aRuia4Do4Sh9nAZTqXj0X8nPklUh6lw8lA?imageView2/1/w/600":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn36@2020_5/2020/12/01/06-16-50-885_fec8c1eebf2247e1.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkVjVN52RxD6W9WELQdbqwe3XunLiccfKVQfnasuncM2ltWXoTXhA2rictAgf9MPneRsmG8at48q9bdQ/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn43@2020_6/2020/12/01/06-17-17-043_10672deefff4f247.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/XIibZ0YbvibkUNBiaqUcdaM6cSBbJTHNBWykQ3XNMAeniaibTxUHOibdyKSIVeicW2lEcfABtC7Y3W0ms4TKKVxHWHASQ/640?wx_fmt=gif":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn47@2020_1/2020/12/01/06-17-14-999_29f1e5baa2307803.webp","http://www.jintiankansha.me/rss_static/19192/lQ3uSXegOt":null},"publishedOrCreatedDate":1606803409275}],"record":{"createdTime":"2020-12-01 14:16:49","updatedTime":"2020-12-01 14:16:49","feedId":2775,"fetchDate":"Tue, 01 Dec 2020 06:16:49 +0000","fetchMs":218,"handleMs":71,"totalMs":29465,"newArticles":0,"totalArticles":5,"status":1,"type":0,"ip":"bda07e07efc53abb82c59151b0d992a7","hostName":"us-005*","requestId":"a644c71af97f46e8b98940633044f7b1_2775","contentType":"application/rss+xml","totalBytes":154428,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":4,"articlesImgsGithubTotal":3,"successGithubMap":{"myreaderx25":1,"myreaderx13":1,"myreaderx31":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-24 21:31:44","updatedTime":"2020-09-01 10:14:55","id":2775,"name":"前端之巅","url":"http://feedmaker.kindle4rss.com/feeds/frontshow.weixin.xml","subscriber":null,"website":null,"icon":"http://www.sogou.com/images/logo/new/favicon.ico?v=4","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn48@2020_6/2020/09/01/02-14-41-796_d24121c9beed1de6.ico","description":"InfoQ大前端技术社群：囊括前端、移动、Node全栈一线技术，紧跟业界发展步伐。","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-12-01 14:17:18","updatedTime":"2020-12-01 14:17:18","id":null,"feedId":2775,"linkMd5":"fbf06235765b7f57ec47002da822c135"}],"tmpCommonImgCdnBytes":29430,"tmpBodyImgCdnBytes":124998,"tmpBgImgCdnBytes":0,"extra4":{"start":1606803408811,"total":0,"statList":[{"spend":407,"msg":"获取xml内容"},{"spend":71,"msg":"解释文章"},{"spend":1,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":26537,"msg":"正文链接上传到cdn"}]},"extra5":4,"extra6":4,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/19192/lQ3uSXegOt","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":2456,"convertSpendMs":0,"createdTime":"2020-12-01 14:16:51","host":"us-007*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+Flutter%E7%8A%B6%E6%80%81State%E7%9A%845%E7%A7%8D%E5%BA%94%E5%AF%B9%E6%96%B9%E6%B3%95","linkMd5ListStr":"fbf06235765b7f57ec47002da822c135","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/19192/lQ3uSXegOt","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":1033,"convertSpendMs":0,"createdTime":"2020-12-01 14:16:54","host":"us-024*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+Flutter%E7%8A%B6%E6%80%81State%E7%9A%845%E7%A7%8D%E5%BA%94%E5%AF%B9%E6%96%B9%E6%B3%95","linkMd5ListStr":"fbf06235765b7f57ec47002da822c135","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/XIibZ0YbvibkUNBiaqUcdaM6cSBbJTHNBWykQ3XNMAeniaibTxUHOibdyKSIVeicW2lEcfABtC7Y3W0ms4TKKVxHWHASQ/640?wx_fmt=gif","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":3919,"convertSpendMs":0,"createdTime":"2020-12-01 14:16:51","host":"europe-57*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+Flutter%E7%8A%B6%E6%80%81State%E7%9A%845%E7%A7%8D%E5%BA%94%E5%AF%B9%E6%96%B9%E6%B3%95","linkMd5ListStr":"fbf06235765b7f57ec47002da822c135","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+Flutter%E7%8A%B6%E6%80%81State%E7%9A%845%E7%A7%8D%E5%BA%94%E5%AF%B9%E6%96%B9%E6%B3%95","extra23historyStatusCode":[403,403],"sourceSize":"0","destSize":"0"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe69.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-007.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://europe-57.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://us-024.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://content.sov5.cn/mmbiz_jpg/XIibZ0YbvibkVjVN52RxD6W9WELQdbqwe38nSDOO0aLnSQWIqibgIWz5aRuia4Do4Sh9nAZTqXj0X8nPklUh6lw8lA?imageView2/1/w/600","sourceStatusCode":200,"destWidth":600,"destHeight":545,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn36@2020_5/2020/12/01/06-16-50-885_fec8c1eebf2247e1.webp","sourceBytes":31143,"destBytes":29430,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":2382,"convertSpendMs":19,"createdTime":"2020-12-01 14:16:49","host":"us-019*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+Flutter%E7%8A%B6%E6%80%81State%E7%9A%845%E7%A7%8D%E5%BA%94%E5%AF%B9%E6%96%B9%E6%B3%95","linkMd5ListStr":"fbf06235765b7f57ec47002da822c135,fbf06235765b7f57ec47002da822c135","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.4 KB","destSize":"28.7 KB","compressRate":"94.5%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_gif/XIibZ0YbvibkUNBiaqUcdaM6cSBbJTHNBWykQ3XNMAeniaibTxUHOibdyKSIVeicW2lEcfABtC7Y3W0ms4TKKVxHWHASQ/640?wx_fmt=gif","sourceStatusCode":200,"destWidth":640,"destHeight":355,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn47@2020_1/2020/12/01/06-17-14-999_29f1e5baa2307803.webp","sourceBytes":151828,"destBytes":93190,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":20190,"convertSpendMs":380,"createdTime":"2020-12-01 14:16:55","host":"us-017*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+Flutter%E7%8A%B6%E6%80%81State%E7%9A%845%E7%A7%8D%E5%BA%94%E5%AF%B9%E6%96%B9%E6%B3%95","linkMd5ListStr":"fbf06235765b7f57ec47002da822c135","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"148.3 KB","destSize":"91 KB","compressRate":"61.4%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkVjVN52RxD6W9WELQdbqwe3XunLiccfKVQfnasuncM2ltWXoTXhA2rictAgf9MPneRsmG8at48q9bdQ/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":1080,"destHeight":720,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn43@2020_6/2020/12/01/06-17-17-043_10672deefff4f247.webp","sourceBytes":48926,"destBytes":31808,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":26378,"convertSpendMs":25,"createdTime":"2020-12-01 14:16:51","host":"europe69*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+Flutter%E7%8A%B6%E6%80%81State%E7%9A%845%E7%A7%8D%E5%BA%94%E5%AF%B9%E6%96%B9%E6%B3%95","linkMd5ListStr":"fbf06235765b7f57ec47002da822c135","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.8 KB","destSize":"31.1 KB","compressRate":"65%"}],"successGithubMap":{"myreaderx25":1,"myreaderx13":1,"myreaderx31":1},"failGithubMap":{}}