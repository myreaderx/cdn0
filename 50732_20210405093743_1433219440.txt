{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-04-05 17:36:41","updatedTime":"2021-04-05 17:36:41","title":"Arm Launches ARMv9","link":"https://fuse.wikichip.org/?p=4646","description":"<p>Ten years ago Arm launched a new 64-bit architecture. ARMv8 more than just extended the virtual address space over ARMv7. It cleaned up and streamlined the architecture and eliminated legacy quirks. ARMv8 has proven to be an extremely successful architecture, adding numerous new features over the next decade. Today, Arm is launching its successor &#8211; ARMv9 for the next decade.</p>\n<p><a href=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-history.png\"><img loading=\"lazy\" src=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-history.png\" alt=\"\" width=\"1507\" height=\"725\" class=\"aligncenter size-full wp-image-4647\" srcset=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-history.png 1507w, https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-history-300x144.png 300w, https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-history-1024x493.png 1024w, https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-history-768x369.png 768w\" sizes=\"(max-width: 1507px) 100vw, 1507px\" /></a></p>\n<p>The ARMv8 (specifically the A profile) has undergone significant enhancements over the last few years. Arm works closely with partners on defining those features. Related features are typically bundled together and are introduced as new decimal versions (e.g., v8.1, v8.2, etc..) on a consistent cadence. Arm also provides slightly modified ARMv8 ISAs called &#8220;profiles&#8221; for different classes of devices &#8211; Application (A) general-purpose processors, Real-Time (R), and Microcontrollers (M). This article will talk about the A profile since that&#8217;s the main ISA found in mobile, desktop, and server computers based on Arm and is the only ARMv9 profile Arm is launching today. Arm stated other ARMv9 profiles are planned for the future.</p>\n<p>The first few revisions (8.1 and 8.2) concentrated on general enhancements. v8.2 also added the Scalable Vector Extension (SVE) although it was made optional with support limited to a few cores. </p>\n<p>With v8.3-8.5 new security-related features were added. Some of it is a result of the Meltdown and Spectre vulnerabilities while others try to address the decade&#8217;s-old memory-related vulnerabilities such as buffer overflows. For example, the ARMv8.3 extension added a new feature called Pointer Authentication, an optional extension that allows for the authentication of the address in registers prior to data references and indirect branches. The extension introduced new instructions for signing and authenticating pointers against a chosen context (e.g., valid return address within a stack frame). Those pointers would then use Pointer Authentication Code or PACs which are baked into the pointer values themselves to authenticate and validate valid from invalid pointers. Pointer Authentication quickly made its way into Apple&#8217;s A12 SoC.</p>\n<div style=\"clear: both;\"></div >\n<table>\n<tr>\n<td>\n<a href=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/ptr-auth.jpg\"><img loading=\"lazy\" width=\"1080\" height=\"608\" src=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/ptr-auth.jpg\" alt=\"\" style=\"display: block;\" class=\"wp-image-4675\" srcset=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/ptr-auth.jpg 1080w, https://fuse.wikichip.org/wp-content/uploads/2021/03/ptr-auth-300x169.jpg 300w, https://fuse.wikichip.org/wp-content/uploads/2021/03/ptr-auth-1024x576.jpg 1024w, https://fuse.wikichip.org/wp-content/uploads/2021/03/ptr-auth-768x432.jpg 768w\" sizes=\"(max-width: 1080px) 100vw, 1080px\" /></a>\n</td>\n<td>\n<a href=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/mte.jpg\"><img loading=\"lazy\" width=\"1080\" height=\"608\" src=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/mte.jpg\" alt=\"\" style=\"display: block;\" class=\"wp-image-4676\" srcset=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/mte.jpg 1080w, https://fuse.wikichip.org/wp-content/uploads/2021/03/mte-300x169.jpg 300w, https://fuse.wikichip.org/wp-content/uploads/2021/03/mte-1024x576.jpg 1024w, https://fuse.wikichip.org/wp-content/uploads/2021/03/mte-768x432.jpg 768w\" sizes=\"(max-width: 1080px) 100vw, 1080px\" /></a>\n</td>\n</tr>\n</table>\n<p><span style=\"clear: both;\"></span></p>\n<p>ARMv8.3-8.5 also added support for Secure exception level 2 was added and additional support for more cryptographic hashing algorithms was also introduced. Nested virtualization (guest VMs running at EL1) and NEON complex numbers were also added at that time. ARMv8.5 added a number of new ways of addressing speculative execution attacks. Memory tagging was added which limits access to memory from pointers with correct tags. Branch Target Indicators (BTI) is another extension that allows branches to only a valid set of destinations.</p>\n<blockquote><p>&#8220;The Memory Tagging Extension (MTE) will be an integral part of the first generation of ARMv9 CPUs available in the next year, and software support for using memory tagging is being introduced as part of Android 11 and Opensuse,&#8221; &#8211; Richard Grisenthwaite, Arm SVP and Chief Architect.</p></blockquote>\n<p><a href=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-extensions.png\"><img src=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-extensions.png\" alt=\"\" width=\"500px\" class=\"aligncenter size-full wp-image-4652\" srcset=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-extensions.png 1000w, https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-extensions-300x251.png 300w, https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-extensions-768x642.png 768w\" sizes=\"(max-width: 1000px) 100vw, 1000px\" /></a></p>\n<h4>ARMv9</h4>\n<p>This leads us to ARMv9 which Arm is launching today. ARMv9 is fully compatible with ARMv8 and introduces a number of major extensions that are designed to improve security as well as specialized acceleration for better performance efficiency of DSP and ML workloads. Like its predecessor, ARMv9 will cover all three profiles (A, M, and R) in the future.</p>\n<p><a href=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-history-v9.png\"><img loading=\"lazy\" src=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-history-v9.png\" alt=\"\" width=\"1505\" height=\"665\" class=\"aligncenter size-full wp-image-4661\" /></a></p>\n<p>As far as features and extensions go, ARMv9.0&#8217;s starting point is ARMv8.5. It&#8217;s worth pointing out that since not all features are suitable for all markets and devices, some ARMv8.x features were made optional. Some optional features early on were also made mandatory in later versions of ARMv8.x, therefore we also expect to see some of those optional features becoming mandatory later on in ARMv9.x. That said since the ARMv9.0 starting point is ARMv8.5, all mandatory features in ARMv8.5 are mandatory in ARMv9.0. Incremental enhancements will continue for v9.x in the same manner as Arm has done with ARMv8.x</p>\n<p><a href=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/ARMv9.0-starting-point.png\"><img src=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/ARMv9.0-starting-point.png\" alt=\"\" width=\"400px\" class=\"aligncenter size-full wp-image-4697\" srcset=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/ARMv9.0-starting-point.png 1056w, https://fuse.wikichip.org/wp-content/uploads/2021/03/ARMv9.0-starting-point-300x238.png 300w, https://fuse.wikichip.org/wp-content/uploads/2021/03/ARMv9.0-starting-point-1024x811.png 1024w, https://fuse.wikichip.org/wp-content/uploads/2021/03/ARMv9.0-starting-point-768x608.png 768w\" sizes=\"(max-width: 1056px) 100vw, 1056px\" /></a></p>\n<h4>SVE2</h4>\n<p>In order to improve DSP and ML workloads, the ARMv9 will be introducing a number of new vector extensions. ARMv9 relies on second-generation Scalable Vector Extension 2 (SVE2) as the foundation for those extensions. SVE2 extends the capabilities of SVE with operations that are much more orthogonal to NEON. As the name implies the extension uses a vector-length-agnostic programming model with an architecture specification that allows the underlying implementation to be implemented in various vector widths ranging from 128- to 2,048-bit vectors.</p>\n<p>Currently, only the Fujitsu A64FX CPU supports SVE. Last year <a href=\"https://fuse.wikichip.org/news/4564/arm-updates-its-neoverse-roadmap-new-bfloat16-sve-support/\">Arm announced</a> that the Neoverse N2 and V1 will be the first CPUs from Arm to support SVE. Those CPUs are expected to be launched this year. Arm says that over the next few years, they plan on extending SVE further with &#8220;substantial enhancements in performing matrix-based calculations.&#8221;</p>\n<p>ARMv9&#8217;s emphasis on SVE makes it clear that this will likely be the way forward. Arm says it expects all new vector code to be written in SVE2, retaining NEON for just legacy reasons.</p>\n<h4>Confidential Compute Architecture (CCA)</h4>\n<p>A second component of the ARMv9 which will be introduced in the future is the Arm Confidential Compute Architecture or Arm CCA. The ultimate goal here is to successfully protect the software data in use on any piece of device the software is deployed on. CCA is designed to get rid of the old assumption that privileged software &#8211; be it the underlying operating system or even the hypervisor &#8211; need access to private software data.</p>\n<p><a href=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-cca.png\"><img loading=\"lazy\" src=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-cca.png\" alt=\"\" width=\"1503\" height=\"660\" class=\"aligncenter size-full wp-image-4667\" srcset=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-cca.png 1503w, https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-cca-300x132.png 300w, https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-cca-1024x450.png 1024w, https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-cca-768x337.png 768w\" sizes=\"(max-width: 1503px) 100vw, 1503px\" /></a></p>\n<p>According to Arm, the Confidential Compute Architecture introduces a new concept called Realms. Those are dynamically-created, secure, private enclaves separated from both the existing secure and non-secure worlds. Realms, in theory, are entirely protected from any form of inspection or access by any piece of software or even the host through the use of a fourth entirely private address space. &#8220;Realms use a small amount of trust in the testable management software that is inherently separate from the operating system and hypervisor,&#8221; said Grisenthwaite. In essence, realms should be able to protect the user&#8217;s data, even if the device&#8217;s operating system is compromised.</p>\n<p><a href=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-realms.png\"><img loading=\"lazy\" src=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-realms.png\" alt=\"\" width=\"1317\" height=\"622\" class=\"aligncenter size-full wp-image-4708\" srcset=\"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-realms.png 1317w, https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-realms-300x142.png 300w, https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-realms-1024x484.png 1024w, https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-realms-768x363.png 768w\" sizes=\"(max-width: 1317px) 100vw, 1317px\" /></a></p>\n<p>More detailed information on the new Arm CCA will be disclosed later this year around summertime. Arm expects that Arm CCA Extension to show up in silicon implementations within the next two to three years.</p>\n","descriptionType":"html","publishedDate":"Tue, 30 Mar 2021 18:00:31 +0000","feedId":50732,"bgimg":"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-history.png","linkMd5":"110c35fca8ff9acbd6edf5489717a784","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn73@2020_2/2021/04/05/09-36-42-382_2edc716bfe93c098.webp","destWidth":1507,"destHeight":725,"sourceBytes":508219,"destBytes":47950,"author":"David Schor","articleImgCdnMap":{"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-history.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn73@2020_2/2021/04/05/09-36-42-382_2edc716bfe93c098.webp","https://fuse.wikichip.org/wp-content/uploads/2021/03/ptr-auth.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn85@2020_1/2021/04/05/09-37-43-283_7aeee1b1c3910d5e.webp","https://fuse.wikichip.org/wp-content/uploads/2021/03/mte.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn93@2020_3/2021/04/05/09-36-42-947_0a08a9137957d202.webp","https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-extensions.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn80@2020_4/2021/04/05/09-36-43-290_23047740d74e1697.webp","https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-history-v9.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn78@2020_5/2021/04/05/09-36-43-106_353006459c47dc28.webp","https://fuse.wikichip.org/wp-content/uploads/2021/03/ARMv9.0-starting-point.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn90@2020_1/2021/04/05/09-36-44-148_e96142bc011e689b.webp","https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-cca.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn100@2020_6/2021/04/05/09-36-43-118_2dc411101850fd14.webp","https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-realms.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn97@2020_6/2021/04/05/09-36-43-053_f78e1414fa233a46.webp"},"publishedOrCreatedDate":1617615401936}],"record":{"createdTime":"2021-04-05 17:36:41","updatedTime":"2021-04-05 17:36:41","feedId":50732,"fetchDate":"Mon, 05 Apr 2021 09:36:41 +0000","fetchMs":359,"handleMs":9,"totalMs":61979,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"0c100e5b1ca1404feeceff01695dc4bf","hostName":"us-039*","requestId":"b2d2d0b4d96147ba88792f8f9b62d1b0_50732","contentType":"application/rss+xml; charset=UTF-8","totalBytes":457580,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":8,"articlesImgsGithubTotal":8,"successGithubMap":{"myreaderx8":1,"myreaderx15":1,"myreaderx6":1,"myreaderx3":1,"myreaderx2":1,"myreaderx13":1,"myreaderx24":1,"myreaderx19":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 03:57:45","updatedTime":"2020-09-07 06:15:59","id":50732,"name":"WikiChip Fuse","url":"https://fuse.wikichip.org/feed/","subscriber":63,"website":null,"icon":"https://fuse.wikichip.org/wp-content/uploads/2018/07/cropped-wikichip_logo2.svg_-32x32.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx64/cdn48@2020_3/2020/09/06/22-15-58-325_cb27053993be9a86.png","description":"Your Chips and Semi News","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":47950,"tmpBodyImgCdnBytes":409630,"tmpBgImgCdnBytes":0,"extra4":{"start":1617615401564,"total":0,"statList":[{"spend":363,"msg":"获取xml内容"},{"spend":9,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":60897,"msg":"正文链接上传到cdn"}]},"extra5":8,"extra6":8,"extra7ImgCdnFailResultVector":[null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-018.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-54.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-019.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe66.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-003.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-015.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-history.png","sourceStatusCode":200,"destWidth":1507,"destHeight":725,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn73@2020_2/2021/04/05/09-36-42-382_2edc716bfe93c098.webp","sourceBytes":508219,"destBytes":47950,"targetWebpQuality":75,"feedId":50732,"totalSpendMs":685,"convertSpendMs":101,"createdTime":"2021-04-05 17:36:41","host":"us-040*","referer":"https://fuse.wikichip.org/?p=4646","linkMd5ListStr":"110c35fca8ff9acbd6edf5489717a784,110c35fca8ff9acbd6edf5489717a784","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"496.3 KB","destSize":"46.8 KB","compressRate":"9.4%"},{"code":1,"isDone":false,"source":"https://fuse.wikichip.org/wp-content/uploads/2021/03/mte.jpg","sourceStatusCode":200,"destWidth":1080,"destHeight":608,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn93@2020_3/2021/04/05/09-36-42-947_0a08a9137957d202.webp","sourceBytes":55685,"destBytes":45862,"targetWebpQuality":75,"feedId":50732,"totalSpendMs":630,"convertSpendMs":40,"createdTime":"2021-04-05 17:36:42","host":"us-54*","referer":"https://fuse.wikichip.org/?p=4646","linkMd5ListStr":"110c35fca8ff9acbd6edf5489717a784","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"54.4 KB","destSize":"44.8 KB","compressRate":"82.4%"},{"code":1,"isDone":false,"source":"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-realms.png","sourceStatusCode":200,"destWidth":1317,"destHeight":622,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn97@2020_6/2021/04/05/09-36-43-053_f78e1414fa233a46.webp","sourceBytes":424208,"destBytes":55304,"targetWebpQuality":75,"feedId":50732,"totalSpendMs":643,"convertSpendMs":79,"createdTime":"2021-04-05 17:36:42","host":"us-018*","referer":"https://fuse.wikichip.org/?p=4646","linkMd5ListStr":"110c35fca8ff9acbd6edf5489717a784","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"414.3 KB","destSize":"54 KB","compressRate":"13%"},{"code":1,"isDone":false,"source":"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv9-cca.png","sourceStatusCode":200,"destWidth":1503,"destHeight":660,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn100@2020_6/2021/04/05/09-36-43-118_2dc411101850fd14.webp","sourceBytes":571105,"destBytes":62802,"targetWebpQuality":75,"feedId":50732,"totalSpendMs":712,"convertSpendMs":116,"createdTime":"2021-04-05 17:36:42","host":"us-019*","referer":"https://fuse.wikichip.org/?p=4646","linkMd5ListStr":"110c35fca8ff9acbd6edf5489717a784","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"557.7 KB","destSize":"61.3 KB","compressRate":"11%"},{"code":1,"isDone":false,"source":"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-history-v9.png","sourceStatusCode":200,"destWidth":1908,"destHeight":853,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn78@2020_5/2021/04/05/09-36-43-106_353006459c47dc28.webp","sourceBytes":427631,"destBytes":51452,"targetWebpQuality":75,"feedId":50732,"totalSpendMs":844,"convertSpendMs":107,"createdTime":"2021-04-05 17:36:42","host":"us-014*","referer":"https://fuse.wikichip.org/?p=4646","linkMd5ListStr":"110c35fca8ff9acbd6edf5489717a784","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"417.6 KB","destSize":"50.2 KB","compressRate":"12%"},{"code":1,"isDone":false,"source":"https://fuse.wikichip.org/wp-content/uploads/2021/03/armv8-extensions.png","sourceStatusCode":200,"destWidth":1000,"destHeight":836,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn80@2020_4/2021/04/05/09-36-43-290_23047740d74e1697.webp","sourceBytes":376521,"destBytes":71886,"targetWebpQuality":75,"feedId":50732,"totalSpendMs":963,"convertSpendMs":186,"createdTime":"2021-04-05 17:36:42","host":"us-015*","referer":"https://fuse.wikichip.org/?p=4646","linkMd5ListStr":"110c35fca8ff9acbd6edf5489717a784","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"367.7 KB","destSize":"70.2 KB","compressRate":"19.1%"},{"code":1,"isDone":false,"source":"https://fuse.wikichip.org/wp-content/uploads/2021/03/ARMv9.0-starting-point.png","sourceStatusCode":200,"destWidth":1056,"destHeight":836,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn90@2020_1/2021/04/05/09-36-44-148_e96142bc011e689b.webp","sourceBytes":390651,"destBytes":74868,"targetWebpQuality":75,"feedId":50732,"totalSpendMs":1832,"convertSpendMs":374,"createdTime":"2021-04-05 17:36:42","host":"europe66*","referer":"https://fuse.wikichip.org/?p=4646","linkMd5ListStr":"110c35fca8ff9acbd6edf5489717a784","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"381.5 KB","destSize":"73.1 KB","compressRate":"19.2%"},{"code":1,"isDone":false,"source":"https://fuse.wikichip.org/wp-content/uploads/2021/03/ptr-auth.jpg","sourceStatusCode":200,"destWidth":1080,"destHeight":608,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn85@2020_1/2021/04/05/09-37-43-283_7aeee1b1c3910d5e.webp","sourceBytes":62472,"destBytes":47456,"targetWebpQuality":75,"feedId":50732,"totalSpendMs":505,"convertSpendMs":32,"createdTime":"2021-04-05 17:37:43","host":"us-018*","referer":"https://fuse.wikichip.org/?p=4646","linkMd5ListStr":"110c35fca8ff9acbd6edf5489717a784","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"61 KB","destSize":"46.3 KB","compressRate":"76%"}],"successGithubMap":{"myreaderx8":1,"myreaderx15":1,"myreaderx6":1,"myreaderx3":1,"myreaderx2":1,"myreaderx13":1,"myreaderx24":1,"myreaderx19":1},"failGithubMap":{}}