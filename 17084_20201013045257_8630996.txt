{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-13 12:52:45","updatedTime":"2020-10-13 12:52:45","title":"MySQL 数据库性能优化之缓存参数优化","link":"http://isky000.com/?p=983","description":"<p>在平时被问及最多的问题就是关于 MySQL 数据库性能优化方面的问题，所以最近打算写一个<strong>MySQL数据库性能优化</strong>方面的系列文章，希望对初中级 MySQL DBA 以及其他对 MySQL 性能优化感兴趣的朋友们有所帮助。</p>\n<p>这是 <strong>MySQL数据库性能优化专题 </strong>系列的第一篇文章：<a href=\"http://isky000.com/database/mysql-perfornamce-tuning-cache-parameter\">MySQL 数据库性能优化之缓存参数优化</a></p>\n<p>数据库属于 IO 密集型的应用程序，其主要职责就是数据的管理及存储工作。而我们知道，从内存中读取一个数据库的时间是微秒级别，而从一块普通硬盘上读取一个IO是在毫秒级别，二者相差3个数量级。所以，要优化数据库，首先第一步需要优化的就是 IO，尽可能将磁盘IO转化为内存IO。<strong><em>本文先从 MySQL 数据库IO相关参数（缓存参数）的角度来看看可以通过哪些参数进行IO优化</em></strong>：</p>\n<ul>\n<li><strong>query_cache_size/query_cache_type （global）</strong></li>\n<p>Query cache 作用于整个 MySQL Instance，主要用来缓存 MySQL 中的 ResultSet，也就是一条SQL语句执行的结果集，所以仅仅只能针对select语句。当我们打开了 Query Cache 功能，MySQL在接受到一条select语句的请求后，如果该语句满足Query Cache的要求（未显式说明不允许使用Query Cache，或者已经显式申明需要使用Query Cache），MySQL 会直接根据预先设定好的HASH算法将接受到的select语句以字符串方式进行hash，然后到Query Cache 中直接查找是否已经缓存。也就是说，如果已经在缓存中，该select请求就会直接将数据返回，从而省略了后面所有的步骤（如 SQL语句的解析，优化器优化以及向存储引擎请求数据等），极大的提高性能。</p>\n<p>当然，Query Cache 也有一个致命的缺陷，那就是当某个表的数据有任何任何变化，都会导致所有引用了该表的select语句在Query Cache 中的缓存数据失效。所以，当我们的数据变化非常频繁的情况下，使用Query Cache 可能会得不偿失。</p>\n<p>Query Cache的使用需要多个参数配合，其中最为关键的是 query_cache_size 和 query_cache_type ，前者设置用于缓存 ResultSet 的内存大小，后者设置在何场景下使用 Query Cache。在以往的经验来看，如果不是用来缓存基本不变的数据的MySQL数据库，query_cache_size 一般 256MB 是一个比较合适的大小。当然，这可以通过计算Query Cache的命中率（Qcache_hits/(Qcache_hits+Qcache_inserts)*100)）来进行调整。query_cache_type可以设置为0(OFF)，1(ON)或者2(DEMOND)，分别表示完全不使用query cache，除显式要求不使用query cache（使用sql_no_cache）之外的所有的select都使用query cache，只有显示要求才使用query cache（使用sql_cache）。</p>\n<li><strong>binlog_cache_size （global）</strong></li>\n<p>Binlog  Cache 用于在打开了二进制日志（binlog）记录功能的环境，是 MySQL 用来提高binlog的记录效率而设计的一个用于短时间内临时缓存binlog数据的内存区域。</p>\n<p>一般来说，如果我们的数据库中没有什么大事务，写入也不是特别频繁，2MB～4MB是一个合适的选择。但是如果我们的数据库大事务较多，写入量比较大，可与适当调高binlog_cache_size。同时，我们可以通过binlog_cache_use 以及 binlog_cache_disk_use来分析设置的binlog_cache_size是否足够，是否有大量的binlog_cache由于内存大小不够而使用临时文件（binlog_cache_disk_use）来缓存了。</p>\n<li><strong>key_buffer_size （global）</strong></li>\n<p>Key Buffer 可能是大家最为熟悉的一个 MySQL 缓存参数了，尤其是在 MySQL 没有更换默认存储引擎的时候，很多朋友可能会发现，默认的 MySQL 配置文件中设置最大的一个内存参数就是这个参数了。key_buffer_size 参数用来设置用于缓存 MyISAM存储引擎中索引文件的内存区域大小。如果我们有足够的内存，这个缓存区域最好是能够存放下我们所有的 MyISAM 引擎表的所有索引，以尽可能提高性能。</p>\n<p>此外，当我们在使用MyISAM 存储的时候有一个及其重要的点需要注意，由于 MyISAM 引擎的特性限制了他仅仅只会缓存索引块到内存中，而不会缓存表数据库块。所以，我们的 SQL 一定要尽可能让过滤条件都在索引中，以便让缓存帮助我们提高查询效率。</p>\n<li><strong>bulk_insert_buffer_size （thread）</strong></li>\n<p>和key_buffer_size一样，这个参数同样也仅作用于使用 MyISAM存储引擎，用来缓存批量插入数据的时候临时缓存写入数据。当我们使用如下几种数据写入语句的时候，会使用这个内存区域来缓存批量结构的数据以帮助批量写入数据文件：</p>\n<p>insert &#8230; select &#8230;<br />\ninsert &#8230; values (&#8230;) ,(&#8230;),(&#8230;)&#8230;<br />\nload data infile&#8230; into&#8230; (非空表)</p>\n<li><strong>innodb_buffer_pool_size（global）</strong></li>\n<p>当我们使用InnoDB存储引擎的时候，innodb_buffer_pool_size 参数可能是影响我们性能的最为关键的一个参数了，他用来设置用于缓存 InnoDB 索引及数据块的内存区域大小，类似于 MyISAM 存储引擎的 key_buffer_size 参数，当然，可能更像是 Oracle 的 db_cache_size。简单来说，当我们操作一个 InnoDB 表的时候，返回的所有数据或者去数据过程中用到的任何一个索引块，都会在这个内存区域中走一遭。</p>\n<p>和key_buffer_size 对于 MyISAM 引擎一样，innodb_buffer_pool_size 设置了 InnoDB 存储引擎需求最大的一块内存区域的大小，直接关系到 InnoDB存储引擎的性能，所以如果我们有足够的内存，尽可将该参数设置到足够打，将尽可能多的 InnoDB 的索引及数据都放入到该缓存区域中，直至全部。</p>\n<p>我们可以通过 (Innodb_buffer_pool_read_requests – Innodb_buffer_pool_reads) / Innodb_buffer_pool_read_requests * 100% 计算缓存命中率，并根据命中率来调整 innodb_buffer_pool_size 参数大小进行优化。</p>\n<li><strong>innodb_additional_mem_pool_size（global）</strong></li>\n<p>这个参数我们平时调整的可能不是太多，很多人都使用了默认值，可能很多人都不是太熟悉这个参数的作用。innodb_additional_mem_pool_size 设置了InnoDB存储引擎用来存放数据字典信息以及一些内部数据结构的内存空间大小，所以当我们一个MySQL Instance中的数据库对象非常多的时候，是需要适当调整该参数的大小以确保所有数据都能存放在内存中提高访问效率的。</p>\n<p>这个参数大小是否足够还是比较容易知道的，因为当过小的时候，MySQL 会记录 Warning 信息到数据库的 error log 中，这时候你就知道该调整这个参数大小了。</p>\n<li><strong>innodb_log_buffer_size （global）</strong></li>\n<p>这是 InnoDB 存储引擎的事务日志所使用的缓冲区。类似于 Binlog Buffer，InnoDB 在写事务日志的时候，为了提高性能，也是先将信息写入 Innofb Log Buffer 中，当满足 innodb_flush_log_trx_commit 参数所设置的相应条件（或者日志缓冲区写满）之后，才会将日志写到文件（或者同步到磁盘）中。可以通过 innodb_log_buffer_size 参数设置其可以使用的最大内存空间。<br />\n注：innodb_flush_log_trx_commit 参数对 InnoDB Log 的写入性能有非常关键的影响。该参数可以设置为0，1，2，解释如下：</p>\n<p>0：log buffer中的数据将以每秒一次的频率写入到log file中，且同时会进行文件系统到磁盘的同步操作，但是每个事务的commit并不会触发任何log buffer 到log file的刷新或者文件系统到磁盘的刷新操作；<br />\n1：在每次事务提交的时候将log buffer 中的数据都会写入到log file，同时也会触发文件系统到磁盘的同步；<br />\n2：事务提交会触发log buffer 到log file的刷新，但并不会触发磁盘文件系统到磁盘的同步。此外，每秒会有一次文件系统到磁盘同步操作。</p>\n<p>此外，MySQL文档中还提到，这几种设置中的每秒同步一次的机制，可能并不会完全确保非常准确的每秒就一定会发生同步，还取决于进程调度的问题。实际上，InnoDB 能否真正满足此参数所设置值代表的意义正常 Recovery 还是受到了不同 OS 下文件系统以及磁盘本身的限制，可能有些时候在并没有真正完成磁盘同步的情况下也会告诉 mysqld 已经完成了磁盘同步。</p>\n<li><strong>innodb_max_dirty_pages_pct （global）</strong></li>\n<p>这个参数和上面的各个参数不同，他不是用来设置用于缓存某种数据的内存大小的一个参数，而是用来控制在 InnoDB Buffer Pool 中可以不用写入数据文件中的Dirty Page 的比例（已经被修但还没有从内存中写入到数据文件的脏数据）。这个比例值越大，从内存到磁盘的写入操作就会相对减少，所以能够一定程度下减少写入操作的磁盘IO。</p>\n<p>但是，如果这个比例值过大，当数据库 Crash 之后重启的时间可能就会很长，因为会有大量的事务数据需要从日志文件恢复出来写入数据文件中。同时，过大的比例值同时可能也会造成在达到比例设定上限后的 flush 操作“过猛”而导致性能波动很大。</ul>\n<div>上面这几个参数是 MySQL 中为了减少磁盘物理IO而设计的主要参数，对 MySQL 的性能起到了至关重要的作用。</div>\n<div></div>\n<div>&#8212;EOF&#8212;</div>\n<div></div>\n<div>按照 <a rel=\"external nofollow\" href=\"http://heylinux.com/\">mcsrainbow</a> 朋友的要求，这里列一下根据以往经验得到的相关参数的建议值：</div>\n<div>\n<ul>\n<li>query_cache_type : 如果全部使用innodb存储引擎，建议为0，如果使用MyISAM 存储引擎，建议为2，同时在SQL语句中显式控制是否是哟你gquery cache</li>\n<li>query_cache_size: 根据 命中率（Qcache_hits/(Qcache_hits+Qcache_inserts)*100)）进行调整，一般不建议太大，256MB可能已经差不多了，大型的配置型静态数据可适当调大</li>\n<li>binlog_cache_size: 一般环境2MB～4MB是一个合适的选择，事务较大且写入频繁的数据库环境可以适当调大，但不建议超过32MB</li>\n<li>key_buffer_size: 如果不使用MyISAM存储引擎，16MB足以，用来缓存一些系统表信息等。如果使用 MyISAM存储引擎，在内存允许的情况下，尽可能将所有索引放入内存，简单来说就是“越大越好”</li>\n<li>bulk_insert_buffer_size: 如果经常性的需要使用批量插入的特殊语句（上面有说明）来插入数据，可以适当调大该参数至16MB～32MB，不建议继续增大，某人8MB</li>\n<li>innodb_buffer_pool_size: 如果不使用InnoDB存储引擎，可以不用调整这个参数，如果需要使用，在内存允许的情况下，尽可能将所有的InnoDB数据文件存放如内存中，同样将但来说也是“越大越好”</li>\n<li>innodb_additional_mem_pool_size: 一般的数据库建议调整到8MB～16MB，如果表特别多，可以调整到32MB，可以根据error log中的信息判断是否需要增大</li>\n<li>innodb_log_buffer_size: 默认是1MB，系的如频繁的系统可适当增大至4MB～8MB。当然如上面介绍所说，这个参数实际上还和另外的flush参数相关。一般来说不建议超过32MB</li>\n<li>innodb_max_dirty_pages_pct: 根据以往的经验，重启恢复的数据如果要超过1GB的话，启动速度会比较慢，几乎难以接受，所以建议不大于 1GB/innodb_buffer_pool_size(GB)*100 这个值。当然，如果你能够忍受启动时间比较长，而且希望尽量减少内存至磁盘的flush，可以将这个值调整到90，但不建议超过90</li>\n</ul>\n</div>\n<p><em>注：以上取值范围仅仅只是我的根据以往遇到的数据库场景所得到的一些优化经验值，并不一定适用于所有场景，所以在实际优化过程中还需要大家自己不断的调整分析，也欢迎大家随时通过 Mail 与我联系沟通交流优化或者是架构方面的技术，一起探讨相互学习。</em></p>\n<hr />作者： <a href=\"http://isky000.com\">Sky.Jian</a> &#160;发布在：<a href=\"http://isky000.com\">iSky000.com</a> &#160;欢迎&#160;<a href=\"http://feed.feedsky.com/sky000\">订阅本站Feed</a><br />Copyright &#169; 2004-2012， 可以任意转载, 但转载时务必以超链接形式标明文章原始出处 和 作者信息 及 <a href=\"http://creativecommons.org/licenses/by-nc-sa/2.5/\">版权声明</a> <br />链接：<a href=\"http://isky000.com/database/mysql-perfornamce-tuning-cache-parameter\">http://isky000.com/database/mysql-perfornamce-tuning-cache-parameter</a><br />Hosted On <a href=\"http://www.dreamhost.com/rewards.cgi?imysqler\">Dreamhost</a>,折扣码 iMySQLer )</small><table class=\"wumii-related-items\" cellspacing=\"0\" cellpadding=\"2\" border=\"0\" width=\"100%\" style=\"clear: both;\">\n    \n    <tr>\n        <td ><b><font size=\"-1\"  style=\"display: block !important; padding: 20px 0 5px !important;\">您可能也喜欢：</font></b></td>\n    </tr>\n    \n            <tr>\n                <td style=\"margin: 0 !important; padding: 0 !important; line-height: 20px !important;\">\n                    <img border=\"0\" src=\"http://static.wumii.cn/images/widget/widget_solidPoint.gif\">\n                    <a target=\"_blank\" style=\"text-decoration: none !important;\" href=\"http://app.wumii.com/ext/redirect?url=http%3A%2F%2Fisky000.com%2Fdatabase%2Fmysql-performance-tuning-hardware&from=http%3A%2F%2Fisky000.com%2Fdatabase%2Fmysql-perfornamce-tuning-cache-parameter\">\n                        <font size=\"-1\" color=\"#333333\" style=\"line-height: 1.65em; font-size: 12px !important;\">MySQL数据库性能优化之硬件瓶颈分析</font>\n                    </a>\n                </td>\n            </tr>\n            <tr>\n                <td style=\"margin: 0 !important; padding: 0 !important; line-height: 20px !important;\">\n                    <img border=\"0\" src=\"http://static.wumii.cn/images/widget/widget_solidPoint.gif\">\n                    <a target=\"_blank\" style=\"text-decoration: none !important;\" href=\"http://app.wumii.com/ext/redirect?url=http%3A%2F%2Fisky000.com%2Fdatabase%2Fmysql-performance-tuning-storage-engine&from=http%3A%2F%2Fisky000.com%2Fdatabase%2Fmysql-perfornamce-tuning-cache-parameter\">\n                        <font size=\"-1\" color=\"#333333\" style=\"line-height: 1.65em; font-size: 12px !important;\">MySQL数据库性能优化之存储引擎选择</font>\n                    </a>\n                </td>\n            </tr>\n            <tr>\n                <td style=\"margin: 0 !important; padding: 0 !important; line-height: 20px !important;\">\n                    <img border=\"0\" src=\"http://static.wumii.cn/images/widget/widget_solidPoint.gif\">\n                    <a target=\"_blank\" style=\"text-decoration: none !important;\" href=\"http://app.wumii.com/ext/redirect?url=http%3A%2F%2Fisky000.com%2Fdatabase%2Fmysql-performance-tuning-index&from=http%3A%2F%2Fisky000.com%2Fdatabase%2Fmysql-perfornamce-tuning-cache-parameter\">\n                        <font size=\"-1\" color=\"#333333\" style=\"line-height: 1.65em; font-size: 12px !important;\">MySQL 数据库性能优化之索引优化</font>\n                    </a>\n                </td>\n            </tr>\n            <tr>\n                <td style=\"margin: 0 !important; padding: 0 !important; line-height: 20px !important;\">\n                    <img border=\"0\" src=\"http://static.wumii.cn/images/widget/widget_solidPoint.gif\">\n                    <a target=\"_blank\" style=\"text-decoration: none !important;\" href=\"http://app.wumii.com/ext/redirect?url=http%3A%2F%2Fisky000.com%2Fdatabase%2Fmysql-performance-tuning-sql&from=http%3A%2F%2Fisky000.com%2Fdatabase%2Fmysql-perfornamce-tuning-cache-parameter\">\n                        <font size=\"-1\" color=\"#333333\" style=\"line-height: 1.65em; font-size: 12px !important;\">MySQL 数据库性能优化之SQL优化</font>\n                    </a>\n                </td>\n            </tr>\n    \n    <tr>\n        <td  align=\"right\">\n            <a style=\"text-decoration: none !important;\" href=\"http://www.wumii.com/widget/relatedItems\" target=\"_blank\" title=\"无觅相关文章插件\">\n                <font size=\"-1\" color=\"#bbbbbb\" style=\"display: block !important; font-family: arial !important; padding: 5px 0 !important; font-size: 12px !important; color: #bbb !important;\">无觅</font>\n            </a>\n        </td>\n    </tr>\n</table><img src=\"http://www1.feedsky.com/t1/675949039/sky000/feedsky/s.gif?r=http://isky000.com/database/mysql-perfornamce-tuning-cache-parameter\" border=\"0\" height=\"0\" width=\"0\" style=\"position:absolute\" /><img src=\"http://feeds.feedburner.com/~r/sky000/~4/UBrCt54vqLw\" height=\"1\" width=\"1\" alt=\"\"/>","descriptionType":"html","publishedDate":"Wed, 12 Sep 2012 11:20:12 +0000","feedId":17084,"bgimg":"http://static.wumii.cn/images/widget/widget_solidPoint.gif","linkMd5":"eb52e3ccc08db8d2c05c42f438c12ec2","sourceBytes":0,"destBytes":0,"author":"朝阳","articleImgCdnMap":{"http://static.wumii.cn/images/widget/widget_solidPoint.gif":null,"http://www1.feedsky.com/t1/675949039/sky000/feedsky/s.gif?r=http://isky000.com/database/mysql-perfornamce-tuning-cache-parameter":null,"http://feeds.feedburner.com/~r/sky000/~4/UBrCt54vqLw":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn59@2020_4/2020/10/13/04-52-45-768_a1a5b100e143d96d.webp"},"publishedOrCreatedDate":1602564765284}],"record":{"createdTime":"2020-10-13 12:52:45","updatedTime":"2020-10-13 12:52:45","feedId":17084,"fetchDate":"Tue, 13 Oct 2020 04:52:45 +0000","fetchMs":212,"handleMs":185056,"totalMs":197068,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"521d8df089fc67e35add3163b58b477a","hostName":"us-009*","requestId":"90ff6d00d1064975848fabe3f632c51c_17084","contentType":"text/xml; charset=UTF-8","totalBytes":72,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":3,"articlesImgsGithubTotal":1,"successGithubMap":{"myreaderx13":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:14:18","updatedTime":"2020-09-07 02:48:27","id":17084,"name":"Sky.Jian 朝阳的天空","url":"http://feeds2.feedburner.com/sky000","subscriber":195,"website":null,"icon":"http://isky000.com/favicon.ico","icon_jsdelivr":null,"description":"MySQL & Oracle DBA, 数据库性能优化，数据库架构设计","weekly":null,"link":"http://isky000.com"},"noPictureArticleList":[{"createdTime":"2020-10-13 12:52:57","updatedTime":"2020-10-13 12:52:57","id":null,"feedId":17084,"linkMd5":"eb52e3ccc08db8d2c05c42f438c12ec2"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":72,"tmpBgImgCdnBytes":0,"extra4":{"start":1602564579985,"total":0,"statList":[{"spend":243,"msg":"获取xml内容"},{"spend":185056,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":11426,"msg":"正文链接上传到cdn"}]},"extra5":3,"extra6":3,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://static.wumii.cn/images/widget/widget_solidPoint.gif","sourceStatusCode":0,"sourceBytes":0,"destBytes":0,"feedId":17084,"totalSpendMs":270,"convertSpendMs":0,"createdTime":"2020-10-13 12:52:45","host":"us-022*","referer":"http://isky000.com/?p=983","linkMd5ListStr":"eb52e3ccc08db8d2c05c42f438c12ec2,eb52e3ccc08db8d2c05c42f438c12ec2,eb52e3ccc08db8d2c05c42f438c12ec2,eb52e3ccc08db8d2c05c42f438c12ec2,eb52e3ccc08db8d2c05c42f438c12ec2","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[0],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://static.wumii.cn/images/widget/widget_solidPoint.gif","sourceStatusCode":0,"sourceBytes":0,"destBytes":0,"feedId":17084,"totalSpendMs":27,"convertSpendMs":0,"createdTime":"2020-10-13 12:52:45","host":"us-007*","referer":"http://isky000.com/?p=983","linkMd5ListStr":"eb52e3ccc08db8d2c05c42f438c12ec2,eb52e3ccc08db8d2c05c42f438c12ec2,eb52e3ccc08db8d2c05c42f438c12ec2,eb52e3ccc08db8d2c05c42f438c12ec2,eb52e3ccc08db8d2c05c42f438c12ec2","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[0],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www1.feedsky.com/t1/675949039/sky000/feedsky/s.gif?r=http://isky000.com/database/mysql-perfornamce-tuning-cache-parameter","sourceStatusCode":0,"sourceBytes":0,"destBytes":0,"feedId":17084,"totalSpendMs":4018,"convertSpendMs":0,"createdTime":"2020-10-13 12:52:45","host":"us-011*","referer":"http://isky000.com/?p=983","linkMd5ListStr":"eb52e3ccc08db8d2c05c42f438c12ec2","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[0],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www1.feedsky.com/t1/675949039/sky000/feedsky/s.gif?r=http://isky000.com/database/mysql-perfornamce-tuning-cache-parameter","sourceStatusCode":0,"sourceBytes":0,"destBytes":0,"feedId":17084,"totalSpendMs":4030,"convertSpendMs":0,"createdTime":"2020-10-13 12:52:52","host":"europe-23*","referer":"http://isky000.com/?p=983","linkMd5ListStr":"eb52e3ccc08db8d2c05c42f438c12ec2","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[0],"sourceSize":"0","destSize":"0"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-23.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,0]},"http://us-011.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[0]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://feeds.feedburner.com/~r/sky000/~4/UBrCt54vqLw","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn59@2020_4/2020/10/13/04-52-45-768_a1a5b100e143d96d.webp","sourceBytes":43,"destBytes":72,"targetWebpQuality":75,"feedId":17084,"totalSpendMs":930,"convertSpendMs":4,"createdTime":"2020-10-13 12:52:45","host":"europe-23*","referer":"http://isky000.com/?p=983","linkMd5ListStr":"eb52e3ccc08db8d2c05c42f438c12ec2","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43 B","destSize":"72 B","compressRate":"167.4%"}],"successGithubMap":{"myreaderx13":1},"failGithubMap":{}}