{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-10 00:53:15","updatedTime":"2020-10-10 00:53:15","title":"Announcing Playwright for Python: Reliable end-to-end testing for the web","link":"https://devblogs.microsoft.com/python/?p=8037","description":"<p>Automated end-to-end tests are a powerful tool for your team to ship faster and with more confidence. End-to-end tests automate UI interactions and can validate the functionality of your applications. To this end, we are announcing <a href=\"https://github.com/microsoft/playwright-python\">Playwright for Python</a> in preview today. Playwright enables developers and testers to write reliable end-to-end tests in Python. Get started by installing <a href=\"https://pypi.org/project/playwright/\">Playwright from PyPI</a>.</p>\n<p><img class=\"wp-image-8038 size-full\" src=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2020/09/playwright-python-repl.gif\" alt=\"Playwright in Python\" width=\"960\" height=\"638\" /></p>\n<p style=\"text-align: center;\"><small>Click the image to see Playwright in action!</small></p>\n<p>With the Playwright API, you can author end-to-end tests that run on all modern web browsers. Playwright delivers automation that is faster, more reliable and more capable than existing testing tools.</p>\n<p>Automated end-to-end tests have become more important than ever before. Teams are shipping faster and building apps that run on a growing set of devices. This increase in velocity and web targets puts immense pressure on the testing process, and automation is critical.</p>\n<p>While automation is important, end-to-end tests are prone to being slow and flaky. To fix this, we released <a href=\"https://github.com/microsoft/playwright\">Playwright in JavaScript</a> earlier this year and have enabled thousands of developers and testers to be successful at end-to-end testing. Today, we’re bringing the same capabilities to Python.</p>\n<p>&#160;</p>\n<h2 id=\"how-is-playwright-different\">How is Playwright different?</h2>\n<h4 id=\"1-playwright-delivers-reliable-timeout-free-automation\">1. Playwright delivers reliable, timeout-free automation.</h4>\n<p>Modern web apps are rich and responsive, issuing network requests and DOM changes based on user interactions. This asynchronous behavior makes modern apps harder to predictably automate. Traditional automated tests rely on sleep timeouts to manage this complexity, but timeouts often lead to unpredictable failures.</p>\n<p>Playwright <a href=\"https://playwright.dev/#path=docs%2Factionability.md&#38;q=\" target=\"_blank\" rel=\"noopener noreferrer\">automatically waits for the UI</a> to be ready, which ensures tests are reliable to execute and simpler to author. Under the hood, Playwright uses an event-driven architecture that can listen to precise browser events like DOM changes, network requests and page navigations.</p>\n<h4 id=\"2-playwright-is-built-for-the-modern-web\">2. Playwright is built for the modern web.</h4>\n<p>The web platform is <a href=\"https://whatwebcando.today/\" target=\"_blank\" rel=\"noopener noreferrer\">continuously evolving</a> and adding newer capabilities every year. Playwright is built to automate newer web features, including <a href=\"https://playwright.dev/#path=docs%2Femulation.md&#38;q=\" target=\"_blank\" rel=\"noopener noreferrer\">emulation of mobile viewports</a>, geolocation and web permissions. Playwright scripts can even <a href=\"https://playwright.dev/#path=docs%2Fnetwork.md&#38;q=\" target=\"_blank\" rel=\"noopener noreferrer\">intercept and modify network activity</a> and automate scenarios across multiple pages.</p>\n<h4 id=\"3-playwright-works-on-all-modern-browsers\">3. Playwright works on all modern browsers.</h4>\n<p>With Playwright, you can author automated tests for all modern browser engines: <a href=\"https://www.chromium.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Chromium</a> (for Google Chrome and the new Microsoft Edge), <a href=\"https://webkit.org/\" target=\"_blank\" rel=\"noopener noreferrer\">WebKit</a> (for Apple Safari) and <a href=\"https://www.mozilla.org/en-CA/firefox/\" target=\"_blank\" rel=\"noopener noreferrer\">Mozilla Firefox</a>. WebKit is supported on all platforms, which enables you to test rendering on Safari, even on Windows and Linux machines.</p>\n<p>&#160;</p>\n<h2 id=\"use-playwright-with-pytest\">Use Playwright with pytest</h2>\n<p>With our <a href=\"https://github.com/microsoft/playwright-pytest\" target=\"_blank\" rel=\"noopener noreferrer\">pytest plugin for Playwright</a>, you can get started easily with end-to-end testing. To install Playwright, the plugin, and the browsers to test on, run:</p>\n<pre class=\"prettyprint\">pip install playwright pytest-playwright \npython -m playwright install\n</pre>\n<p>This plugin configures <a href=\"https://docs.pytest.org/en/stable/fixture.html\" target=\"_blank\" rel=\"noopener noreferrer\">pytest fixtures</a> that provide building blocks you need for end-to-end browser testing. For example, the page fixture provides a new web page to run a test. For a complete list of fixtures, <a href=\"https://github.com/microsoft/playwright-pytest#fixtures\" target=\"_blank\" rel=\"noopener noreferrer\">see plugin docs</a>.</p>\n<pre class=\"prettyprint\">from playwright.sync_api import Page \n\ndef test_example_is_working(page: Page): \n    page.goto('https://example.com') \n    assert page.innerText('h1') == 'Example Domain'\n</pre>\n<p>&#160;</p>\n<h2 id=\"use-playwright-with-django\">Use Playwright with Django</h2>\n<p>You can use Playwright to test views in Django web apps. To install Playwright, and the browsers to test on, run:</p>\n<pre class=\"prettyprint\">pip install playwright \npython –m playwright install \n</pre>\n<p>Playwright integrates with the built-in testing tools in Django. Specifically, you can use the <a href=\"https://docs.djangoproject.com/en/3.1/topics/testing/tools/#liveservertestcase\" target=\"_blank\" rel=\"noopener noreferrer\">LiveServerTestCase class</a> to launch a live Django server and run browser tests against it.</p>\n<pre class=\"prettyprint\">from django.contrib.staticfiles.testing import StaticLiveServerTestCase \nfrom playwright import sync_playwright \n\nclass MyViewTests(StaticLiveServerTestCase): \n    @classmethod \n    def setUpClass(cls): \n        super().setUpClass() \n        cls.playwright = sync_playwright().start() \n        cls.browser = cls.playwright.chromium.launch() \n\n    @classmethod \n    def tearDownClass(cls): \n        cls.browser.close() \n        cls.playwright.stop() \n        super().tearDownClass() \n\n    def test_login(self): \n        page = self.browser.newPage() \n        page.goto('%s%s' % (self.live_server_url, '/login/')) \n        page.fill('#username', 'myuser') \n        page.fill('#password', 'secret') \n        page.click('text=Log in') \n        assert page.url == '%s%s' % (self.live_server_url, '/profile/') \n        page.close()\n</pre>\n<p>&#160;</p>\n<h2 id=\"deploy-playwright-tests-to-ci-cd\">Deploy Playwright tests to CI/CD</h2>\n<p>Running end-to-end tests in your CI/CD pipelines helps catch issues early. You can deploy Playwright tests to CI/CD with the <a href=\"https://github.com/marketplace/actions/run-playwright-tests\" target=\"_blank\" rel=\"noopener noreferrer\">Playwright GitHub Action</a> or with tools for <a href=\"https://playwright.dev/#path=docs%2Fci.md&#38;q=\" target=\"_blank\" rel=\"noopener noreferrer\">other CI/CD providers</a>.</p>\n<hr />\n<p>Playwright for Python is <a href=\"https://github.com/microsoft/playwright-python\" target=\"_blank\" rel=\"noopener noreferrer\">built in the open on GitHub</a>, and we are eager to learn more on how Playwright works for you. Feel free to share feedback or feature requests on <a href=\"https://github.com/microsoft/playwright-python/issues\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub issues</a> or <a href=\"https://join.slack.com/t/playwright/shared_invite/enQtOTEyMTUxMzgxMjIwLThjMDUxZmIyNTRiMTJjNjIyMzdmZDA3MTQxZWUwZTFjZjQwNGYxZGM5MzRmNzZlMWI5ZWUyOTkzMjE5Njg1NDg\" target=\"_blank\" rel=\"noopener noreferrer\">join the Playwright Slack community</a> to connect with other users.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://devblogs.microsoft.com/python/announcing-playwright-for-python-reliable-end-to-end-testing-for-the-web/\">Announcing Playwright for Python: Reliable end-to-end testing for the web</a> appeared first on <a rel=\"nofollow\" href=\"https://devblogs.microsoft.com/python\">Python</a>.</p>\n","descriptionType":"html","publishedDate":"Wed, 30 Sep 2020 16:26:25 +0000","feedId":49129,"bgimg":"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2020/09/playwright-python-repl.gif","linkMd5":"0a7b579e913c3094a1fdbb3a9f223af3","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn72@2020_3/2020/10/09/16-54-01-988_24582521ca327838.webp","destWidth":960,"destHeight":638,"sourceBytes":6764979,"destBytes":2934384,"author":"Arjun Attam","articleImgCdnMap":{"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2020/09/playwright-python-repl.gif":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn72@2020_3/2020/10/09/16-54-01-988_24582521ca327838.webp"},"publishedOrCreatedDate":1602262395471}],"record":{"createdTime":"2020-10-10 00:53:15","updatedTime":"2020-10-10 00:53:15","feedId":49129,"fetchDate":"Fri, 09 Oct 2020 16:53:15 +0000","fetchMs":270,"handleMs":14,"totalMs":48860,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"0b90fceb7c6618e8146be2bf87c2c62d","hostName":"europe67*","requestId":"79cb80ab8e6e47519c649106fc6a0347_49129","contentType":"application/rss+xml; charset=UTF-8","totalBytes":2934384,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":1,"articlesImgsGithubTotal":1,"successGithubMap":{"myreaderx7":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 03:51:39","updatedTime":"2020-09-07 06:09:50","id":49129,"name":"Python","url":"http://blogs.msdn.microsoft.com/pythonengineering/feed/","subscriber":65,"website":null,"icon":"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2018/10/Microsoft-Favicon.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn95@2020_5/2020/09/06/22-09-47-164_6321c1b6478d4b23.png","description":"Read the latest updates about all things Python at Microsoft","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":2934384,"tmpBodyImgCdnBytes":0,"tmpBgImgCdnBytes":0,"extra4":{"start":1602262395175,"total":0,"statList":[{"spend":282,"msg":"获取xml内容"},{"spend":14,"msg":"解释文章"},{"spend":1,"msg":"上传封面图到cdn"},{"spend":1,"msg":"正文链接上传到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"}]},"extra5":1,"extra6":1,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2020/09/playwright-python-repl.gif","sourceStatusCode":200,"destWidth":960,"destHeight":638,"sourceBytes":6764979,"destBytes":2934384,"targetWebpQuality":60,"feedId":49129,"totalSpendMs":25839,"convertSpendMs":23786,"createdTime":"2020-10-10 00:53:15","host":"us-010*","referer":"https://devblogs.microsoft.com/python/?p=8037","linkMd5ListStr":"0a7b579e913c3094a1fdbb3a9f223af3,0a7b579e913c3094a1fdbb3a9f223af3","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx7/cdn72/contents/2020/10/09/16-53-39-630_24582521ca327838.webp","resp":{"code":409,"msg":"Conflict","body":"{\n  \"message\": \"is at 9f9954bd66636cd4728a636db50955ea6fdaebde but expected 7ddb8591df4920291b66aaf798ec96a79b71d0af\",\n  \"documentation_url\": \"https://docs.github.com/rest/reference/repos#create-or-update-file-contents\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-length":["222"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Oct 2020 16:53:41 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["409 Conflict"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":[""],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CC18:0A71:CF9D3:15C828:5F809591"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["5000"],"x-ratelimit-remaining":["4369"],"x-ratelimit-reset":["1602264132"],"x-ratelimit-used":["631"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 409,url is : https://api.github.com/repos/myreaderx7/cdn72/contents/2020/10/09/16-53-39-630_24582521ca327838.webp","historyStatusCode":[],"spendMs":1774},"base64UserPassword":null,"token":"8d15a******************************b7dec"},"githubUser":"myreaderx7","githubHttpCode":409,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.5 MB","destSize":"2.8 MB","compressRate":"43.4%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2020/09/playwright-python-repl.gif","sourceStatusCode":200,"destWidth":960,"destHeight":638,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn72@2020_3/2020/10/09/16-54-01-988_24582521ca327838.webp","sourceBytes":6764979,"destBytes":2934384,"targetWebpQuality":60,"feedId":49129,"totalSpendMs":22477,"convertSpendMs":20253,"createdTime":"2020-10-10 00:53:41","host":"us-010*","referer":"https://devblogs.microsoft.com/python/?p=8037","linkMd5ListStr":"0a7b579e913c3094a1fdbb3a9f223af3,0a7b579e913c3094a1fdbb3a9f223af3","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.5 MB","destSize":"2.8 MB","compressRate":"43.4%"}],"successGithubMap":{"myreaderx7":1},"failGithubMap":{}}