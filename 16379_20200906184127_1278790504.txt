{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-07 02:39:23","updatedTime":"2020-09-07 02:39:23","title":"Routopsy – Hacking Routing with Routers","link":"https://sensepost.com/blog/2020/routopsy-hacking-routing-with-routers/","description":"<p><em>This is a summary of our <a href=\"https://www.blackhat.com/us-20/briefings/schedule/index.html#routopsy-modern-routing-protocol-vulnerability-analysis-and-exploitation-20810\">BlackHat USA 2020</a> talk.</em></p>\n\n\n\n<h2><strong>Introduction</strong></h2>\n\n\n\n<p>On some of our engagements, <a rel=\"noreferrer noopener\" href=\"https://twitter.com/TH3_GOAT_FARM3R\" target=\"_blank\">Szymon</a> and <a rel=\"noreferrer noopener\" href=\"https://twitter.com/tkempheks\" target=\"_blank\">I</a> found ourselves on various networks vulnerable to; insecure, misconfigured, and often overlooked networking protocols. These included dynamic routing protocols (referred to as <a rel=\"noreferrer noopener\" href=\"https://techdifferences.com/difference-between-static-and-dynamic-routing.html\" target=\"_blank\">DRP</a>&#x2018;s) and first hop redundancy protocols (referred to as <a rel=\"noreferrer noopener\" href=\"https://www.expertnetworkconsultant.com/configuring/understanding-first-hop-redundancy-protocols-fhrp/\" target=\"_blank\">FHRP</a>&#x2018;s). We decided to focus on these two classes of networking protocols to manipulate traffic flows and identify <em>non-conventional</em> ways of performing Person-in-the-Middle (PitM) attacks. This post details the results of that research and the tool we wrote to explore this attack surface. The tool is called Routopsy and is available on <a rel=\"noreferrer noopener\" href=\"https://github.com/sensepost/routopsy\" target=\"_blank\">Github</a>.</p>\n\n\n\n<h2><strong>Background</strong></h2>\n\n\n\n<p>To better understand the protocols and attacks we are going to cover, let&#x2019;s start with some basics.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"880\" height=\"251\" src=\"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-2.png\" alt=\"\" class=\"wp-image-42296\"><figcaption>Static routes required to route traffic between 192.168.1.0/24 and 192.168.2.0/24</figcaption></figure>\n\n\n\n<p>Static routes are well understood and can be configured to direct traffic between two networks, say 192.168.1.0/24 to 192.168.2.0/24. This, however, requires a total of four static routes to be configured on various routers. Not a big deal, right?</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"902\" height=\"364\" src=\"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-3.png\" alt=\"\" class=\"wp-image-42297\"><figcaption>Static routing vs Dynamic Routing</figcaption></figure>\n\n\n\n<p>Actually, it <strong>IS</strong> a big deal. Static routing does not scale well in any medium to large network. The blue lines in the image above indicate static routes required to perform routing between a local subnet on each router while also providing some redundancy. Still doesn&#x2019;t look too complex? Think about when you add more routers and or more networks. The management overhead of this is simply not reasonable.</p>\n\n\n\n<h3>Dynamic Routing</h3>\n\n\n\n<p>Dynamic Routing Protocols such as <a href=\"https://www.geeksforgeeks.org/routing-information-protocol-rip/#:~:text=Routing%20Information%20Protocol%20(RIP)%20is,RIP%20uses%20port%20number%20520.\">RIP</a>/<a href=\"https://en.wikipedia.org/wiki/Enhanced_Interior_Gateway_Routing_Protocol#:~:text=Enhanced%20Interior%20Gateway%20Routing%20Protocol%20(EIGRP)%20is%20an%20advanced%20distance,available%20only%20on%20Cisco%20routers.\">EIGRP</a>/<a href=\"https://en.wikipedia.org/wiki/Open_Shortest_Path_First#:~:text=Open%20Shortest%20Path%20First%20(OSPF,2328%20(1998)%20for%20IPv4.\">OSPF</a> and <a href=\"https://en.wikipedia.org/wiki/Border_Gateway_Protocol\">BGP</a> address scalability issues with static routing by sharing network routing information between DRP-capable devices such as routers and firewalls. Getting this set up is simply a matter of configuring the relevant protocol between devices you want to be able to share routing information with each other. Additionally, as the name &#x201C;dynamic&#x201D; implies, when new networks are introduced, they are dynamically shared if their subnet has been included in the DRP configuration. Routes to these networks are calculated using various metrics, which allow for multiple paths to exist to known networks. Should the primary path become unavailable, the redundant path would be available within the routing table.</p>\n\n\n\n<h3>First Hop Redundancy</h3>\n\n\n\n<p>First Hop Redundancy Protocols provide a redundant Layer 3 address/gateway by making use of a virtual IP/MAC address pair. The virtual IP/MAC address is assigned to a device with the highest priority within a logical group. Devices which choose to route their traffic via the virtual IP/MAC are oblivious to network failures as the virtual addresses are assigned to the current active, highest priority device. Should a failure occur, the secondary device would be assigned the virtual address pair. The usually happens fast enough that other devices won&#x2019;t even notice the change.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"823\" height=\"414\" src=\"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-12.png\" alt=\"\" class=\"wp-image-42318\"><figcaption>FHRP providing failover for User A</figcaption></figure>\n\n\n\n<h2><strong>Protocol Identification</strong></h2>\n\n\n\n<p>Identification of these protocols could be performed using a packet sniffer of choice such as <a href=\"https://www.wireshark.org/\">Wireshark</a>. Depending on the network you are on, you may see DRP and FHRP traffic on the broadcast domain of the network you are currently on. If this is the case, you are already halfway along the route to pwning routers!</p>\n\n\n\n<h3>Protocol Authentication</h3>\n\n\n\n<p>While it is possible to harden these protocols with some form of authentication, in practice, it is rarely done. Authentication could be configured as plaintext or using some form of crypto (keyed-md5, hmac-sha <a href=\"https://tools.ietf.org/html/rfc5709\">etc</a>.). Even with authentication applied to these protocols, the hashed credentials could be cracked to attack the relevant protocol.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>if authentication == true:\n    if password == cleartext:\n        do_attack(password)\n    else:\n        hash = get_password_hash()  #EtterCap\n        password = crack_hash(hash) #JohntheRipper\n        if hash_cracked == true:\n            do_attack(password)\nelse:\n    do_attack()</code></pre>\n\n\n\n<p>Misconfigured DRP&#x2019;s / FHRP&#x2019;s are easy to exploit when configured with plaintext or no authentication. However, the same password related problems exist when crypto is applied. The system uses a shared password, which means a single disclosure defeats the security of the whole. Also, network configuration how-to guides make use of passwords such as <a href=\"https://www.cisco.com/c/en/us/support/docs/ip/routing-information-protocol-rip/13719-50.html\">&#x201C;key&#x201D;</a> and <a href=\"https://www.cisco.com/c/en/us/support/docs/ip/routing-information-protocol-rip/13719-50.html\">&#x201C;cisco&#x201D;</a> which are easily guessed or, depending on the crypto, subjected to offline password brute forcing attacks.</p>\n\n\n\n<h3>Protocol Interpretation</h3>\n\n\n\n<p>Other than authentication, protocol specific fields need to be considered before attacking. For example, when attacking OSPF, the <strong>area ID</strong>, <strong>authentication data</strong>, and <strong>hello/dead</strong> timer intervals should be considered.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"789\" height=\"535\" src=\"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-5.png\" alt=\"\" class=\"wp-image-42300\"><figcaption>OSPF fields to consider when joining the routing process</figcaption></figure>\n\n\n\n<p>For most DRP&#x2019;s the interesting fields mentioned above should be matched on the attacker&#x2019;s end to ensure that a routing neighborship is established.</p>\n\n\n\n<p>When attacking <a href=\"https://en.wikipedia.org/wiki/Hot_Standby_Router_Protocol\">HSRP</a>, <strong>hello/hold</strong> timers, <strong>priority</strong> and the <strong>group</strong> number should be considered.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"839\" height=\"426\" src=\"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-6.png\" alt=\"\" class=\"wp-image-42301\"><figcaption>HSRP fields to consider when joining the FHRP group</figcaption></figure>\n\n\n\n<p>The priority of the attacker should be set to a higher value than the current active device. The remaining interesting fields should be matched on the attacker&#x2019;s end in order to join the FHRP group.</p>\n\n\n\n<p>You&#x2019;re probably thinking that you need to understand the inner-workings of these protocols to attack them. While partially true, the idea is that Routopsy makes it possible to explore your attack surface of these protocols without extensive networking knowledge. At the same time, because Routopsy makes use of real routers, if you do understand the inner workings of these protocols you are free to perform more advanced traffic manipulations and route injections.</p>\n\n\n\n<p>One important thing to understand, is that we&#x2019;re taking advantage of protocols being multicast (<strong>224.0.0.2/224.0.0.5</strong>) into end-user networks. This can be observed in the destination IP fields in the Wireshark images above. These protocols often &#x201C;bleed&#x201D; into unintended networks as a result of misconfigurations and this is where we are able to take advantage of them.</p>\n\n\n\n<h2><strong>Impact</strong></h2>\n\n\n\n<p>Identifying these multicast packets, regardless of authentication, suggests that there&#x2019;s potential for exploitation and therefore impact! The impact of attacking these protocols could vary from network enumeration, PitM attacks and Denial-of-Service (DoS) attacks. For DRP attacks, the simplest but still useful &#x2018;attack&#x2019; would simply be to join the routing process in order to perform some network enumeration and discovery of other network ranges.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"772\" height=\"488\" src=\"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-7.png\" alt=\"\" class=\"wp-image-42302\"><figcaption>Learning about the finance and server network</figcaption></figure>\n\n\n\n<p>Imagine yourself performing some ping sweeps or port scans to identify potential target hosts on a network. You&#x2019;re likely using good ol&#x2019; nmap, but this could be tedious if you have zero knowledge of the current networks at play. For example, you could be doing things like nmap 192.168.0.0/16, which could take some tiiiiiiime. Not to mention the potential of tripping up detection defences. But now you observe that there are some multicast EIGRP/OSPF packets, and by simply joining the routing process (aka: <code>routopsy <strong>--attack</strong></code>) you could learn about a finance or server network which would be a lot faster in the discovery process. This doesn&#x2019;t mean that you will find <strong>all</strong> the networks within an environment, but it could definitely lead to a quick win. </p>\n\n\n\n<h2>Traffic Redirection &#38; Manipulation</h2>\n\n\n\n<p>For a moment imagine you managed to discover a vulnerable DRP, and have successfully joined the routing process and learned about new networks. While that is only an enumeration capability, one could go a step further and perform some traffic redirection. Before we get to that, let&#x2019;s take a moment to understand how a router will decide where to send traffic.</p>\n\n\n\n<p>Routers prefer specific routes, meaning that more specific subnet masks are prefered. Consider the two following static routes, <code>ip route 1.3.3.0/24 eth0</code> and <code>ip route 1.3.3.7/32 eth1</code>. Traffic routed towards 1.3.3.7 will traverse the eth1 interface as the /32 <a href=\"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">CIDR</a> is preferred over the /24 CIDR. There are other factors to consider such as <a href=\"https://www.cisco.com/c/en/us/support/docs/ip/border-gateway-protocol-bgp/15986-admin-distance.html\">administrative distance</a> (AD) which could play a role. For example, Cisco devices assign an AD of 1 to static routes and an AD of 90 to EIGRP routes. The result of this is that a static route towards 1.3.3.0/24 would be preferred over the same route learnt via EIGRP. Regardless of the AD, a route with a greater CIDR would still be preferred. Knowing this we can attempt to &#x2018;beat&#x2019; routing table entries and either forward traffic elsewhere or terminate on the attacker endpoint.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"902\" height=\"479\" src=\"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-8.png\" alt=\"\" class=\"wp-image-42303\"><figcaption>Redirecting traffic towards the attacker</figcaption></figure>\n\n\n\n<p>In summary, one could perform route injection and traffic redirection, which would have more severe impacts when compared to just learning about new networks.</p>\n\n\n\n<p>For FHRP&#x2019;s, the simplest explanation of the attacks one could perform can be described as &#x2018;gateway takeover&#x2019; attacks. </p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"840\" height=\"424\" src=\"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-9.png\" alt=\"\" class=\"wp-image-42304\"><figcaption>Redirecting traffic towards the attacker</figcaption></figure>\n\n\n\n<p>For gateway takeover attacks we simply become the active FHRP device by sending packets with a priority higher than the currect active device. This could lead to your NIC melting if you become the default gateway for a &#x2018;busy&#x2019; network? Using something like this high speed USB NIC could help: <a href=\"https://www.sonnetstore.com/collections/ethernet-networking/usb-3-to-5gbe-adapter\">https://www.sonnetstore.com/collections/ethernet-networking/usb-3-to-5gbe-adapter</a></p>\n\n\n\n<h2><strong>Routopsy</strong></h2>\n\n\n\n<p>Some of our first attacks were done by bridging Virtual Machines with a target network, running something like a Fortinet Firewall and configuring the firewall to learn and inject routes. This had many issues including that it was hard to configure these appliances and we often wanted more specific control over our attack, which wasn&#x2019;t always easy to achieve. With us finding these protocols more often than we expected, we decided to automate some of the work so that we could focus on impact faster. Our idea was to build a tool similar to the likes of <a href=\"https://github.com/nottinghamprisateam/pyersinia\">yersinia</a> and <a href=\"https://github.com/Raizo62/Loki_on_Kali\">loki</a>, but with a slightly more modern approach and by doing so, hoping that people would become more familiar with and interested in understanding, securing and attacking these protocols. </p>\n\n\n\n<h3>Internals</h3>\n\n\n\n<p>What makes Routopsy different from older tools? It is modular by design, which enables us to attack network related protocols using a virtual router such as <a href=\"https://frrouting.org/\">frrouting</a>. The router itself runs in a docker container, wrapped with an orchestration layer built with python3. That way we can easily use a powerful packet crafting library such as <a href=\"https://scapy.net/\">scapy</a>, which is used extensively in the toolkit.</p>\n\n\n\n<h3>Operation</h3>\n\n\n\n<p>Routopsy has two modes of operation. The first mode is called scan mode (<code>routopsy <strong>--scan</strong></code>). This mode sniffs for vulnerable multicast packets, and if identified, builds a router configuration template as a result. This configuration template can then be applied to a frrouting docker container at a later stage. The second mode is called attack mode (<code>routopsy <strong>--attack</strong></code>). This mode also performs the scan action, but then builds the attacking container using the configuration template built from the parsed network traffic. This will result in Routopsy learning about new routes/networks, but will not modify any traffic flows. </p>\n\n\n\n<p>Routopsy also has some subcommands for the attack mode, and include the <strong><code>--inject</code></strong> and <strong><code>--redirect</code></strong> flags. The inject flag will redistribute a static route into the routing process that is being attacked. For the redirect flag, traffic will be routed towards the attacker, whereas for the inject flag, traffic will be routed towards the attacker and forwarded onto the attackers default gateway. </p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1916\" height=\"977\" src=\"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/Peek-2020-08-07-12-37.gif\" alt=\"\" class=\"wp-image-42436\"><figcaption>Demonstration of inject and redirect flags</figcaption></figure>\n\n\n\n<p>An example of where the <strong><code>--redirect</code></strong> flag could be useful would be in  scenarios where you would like to route DNS traffic destined for <a href=\"https://developers.google.com/speed/public-dns\">8.8.8.8</a> towards yourself and modify the responses. Or, perhaps you would like to honeypot some ssh traffic, or run <code>socat</code> and forward traffic elsewhere. Quite a few possibilities!</p>\n\n\n\n<p>The <strong><code>--inject</code></strong> flag on the other hand could be useful to intercept traffic that would normally be routed to the Internet. For example, say you identified that users had been connecting to an FTP server; with the <strong><code>--inject</code></strong> flag you can redirect traffic towards Routopsy, source NAT the traffic and route the traffic towards your default gateway.</p>\n\n\n\n<h3>Local redirection</h3>\n\n\n\n<p>But wait&#x2026; there&#x2019;s more! We&#x2019;ve also have a variation of the <strong><code>--inject</code></strong> and <strong><code>--redirect</code></strong> flags called <strong><code>--inject-local</code></strong> and <strong><code>--redirect-local</code></strong>. These flags can be used to redirect traffic originating from another network, to the attacker controlled machine. This could be useful in a scenario where you would usually perform ARP Spoofing/DHPCv6 PitM attacks but the network has been hardened against such attacks. There is a constraint when using this attack though; the attack will not modify traffic originating from the local network, only inbound traffic from another network.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"648\" height=\"347\" src=\"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/local_attack_bpost.png\" alt=\"\" class=\"wp-image-42323\"><figcaption>Inner and outer container used in the &#x2013;local attack variants </figcaption></figure>\n\n\n\n<p>Under the hood the attack is accomplished by building two containers for the <strong><code>--local</code></strong> attack, an inner and an outer container. The inner container, otherwise referred to as the &#x201C;Peer Router&#x201D;, is configured using the default <a href=\"https://docs.docker.com/network/bridge/\">docker bridge network</a>. The outer container, otherwise referred to as the &#x201C;Routopsy&#x201D; container is configured using <a href=\"https://docs.docker.com/network/host/\">docker host networking</a>. The inner container is configured to establish a routing &#x201C;neighbourship&#x201D; with the outer container to share routing information with the greater network. The outer container will propagate this information from the inner container, but negate it from being installed in its own routing table. So, when traffic from another network arrives at Routopsy, traffic will not be routed back to the inner container, but instead back to the real host we are attacking on our local network. This is done using using some <a href=\"https://en.wikipedia.org/wiki/Access-control_list\">acl</a> and <a href=\"https://networklessons.com/cisco/ccnp-route/introduction-to-route-maps\">route-map</a> configuration statements.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1911\" height=\"977\" src=\"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/routopsy_blog_3.gif\" alt=\"\" class=\"wp-image-42324\"><figcaption>Demonstration of the &#x2013;linject-local attack</figcaption></figure>\n\n\n\n<h2><strong>Remediation</strong> <strong>and Detection</strong></h2>\n\n\n\n<p>As you can see, manipulation of traffic flows is quite easily achievable under the right conditions, and could have a severe impact. Luckily the remediation and protection of these protocols is also really simple and could be implemented in multiple ways. Below you can find a list of potential controls that could be implemented to protect your DRP and FHRP.</p>\n\n\n\n<p>For DRP:</p>\n\n\n\n<ul><li>Limit broadcasts/multicasts to segments where the traffic is expected<ul><li>Make use of <a href=\"https://www.kareemccie.com/2018/09/what-is-passive-interface.html#:~:text=%2D%2D%3E%20Passive%20Interface%20is%20a,only%20understood%20by%20the%20routers.\">passive-interfaces</a> where applicable</li><li>Configure stricter <a href=\"https://www.cellstream.com/reference-reading/tipsandtricks/369-what-is-the-network-command-in-ospf-and-bgp#:~:text=The%20&apos;network&apos;%20command%20is%20used,OSPFv2%20(for%20IPv4%20routing).&#38;text=The%20command%20is%20used%20to,this%20network%20to%20be%20advertised.\">network statements</a> to ensure that routing protocols are advertised over certain interfaces only</li></ul></li><li>Configure strong authentication algorithms and use long and complex passwords</li></ul>\n\n\n\n<p>For FHRP:</p>\n\n\n\n<ul><li>Limit broadcasts/multicasts to segments where the traffic is expected</li><li>Configure strong authentication algorithms and use long and complex passwords</li><li>Configure higher priorities preventing a rogue devices becoming the active/primary device</li></ul>\n\n\n\n<p>In order to detect attacks against such protocols, we recommend sending syslog to a log collector or <a href=\"https://searchsecurity.techtarget.com/definition/security-information-and-event-management-SIEM#:~:text=Security%20information%20and%20event%20management%20(SIEM)%20is%20an%20approach%20to,sim%22%20with%20a%20silent%20e.\">SIEM</a> and monitoring for state changes.</p>\n\n\n\n<h2><strong>PlayGround</strong></h2>\n\n\n\n<p>We&#x2019;re aware that many people don&#x2019;t have access to software/hardware in order to build labs to play around with these vulnerabilities, or lack the knowledge on how to configure network emulators. For that reason, we have also built some &#x2018;yaml&#x2019; files which can be used with docker-compose to build two lab environments within docker.  </p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"1024\" height=\"374\" src=\"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/play_bpost-1024x374.png\" alt=\"\" class=\"wp-image-42326\"><figcaption>lab configuration</figcaption></figure>\n\n\n\n<p>The topology for these files are shown above and in both labs traffic can be redirected from the victim towards Routopsy. An example of attacking VRRP is shown below and further instructions along with many other detail regarding the tool can be found on <a href=\"https://github.com/sensepost/routopsy/wiki\">https://github.com/sensepost/routopsy/wiki</a></p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1916\" height=\"977\" src=\"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/Peek-2020-08-06-17-06.gif\" alt=\"\" class=\"wp-image-42395\"></figure>\n","descriptionType":"html","publishedDate":"Mon, 03 Aug 2020 18:23:23 +0000","feedId":16379,"bgimg":"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-2.png","linkMd5":"3b7a9bbd4f488fc4b463b74179afba31","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn19@2020_6/2020/09/06/18-39-23-954_87f9842dae7c2308.webp","destWidth":880,"destHeight":251,"sourceBytes":46256,"destBytes":11634,"author":"","articleImgCdnMap":{"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-2.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn19@2020_6/2020/09/06/18-39-23-954_87f9842dae7c2308.webp","https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-3.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn66@2020_1/2020/09/06/18-39-25-247_98eac24396322adb.webp","https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-12.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn31@2020_4/2020/09/06/18-39-25-493_b2c8b17895e6ea3b.webp","https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-5.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn47@2020_2/2020/09/06/18-39-25-011_e0ef630f2d2858c0.webp","https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-6.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn52@2020_1/2020/09/06/18-39-25-233_a6465887876a235e.webp","https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-7.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn56@2020_5/2020/09/06/18-39-25-394_258bba61c8d48f54.webp","https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-8.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn39@2020_2/2020/09/06/18-39-25-479_b9836c7fcee63af7.webp","https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-9.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn44@2020_3/2020/09/06/18-39-25-586_8e06c7c5371aa932.webp","https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/Peek-2020-08-07-12-37.gif":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn28@2020_3/2020/09/06/18-39-46-506_7d3f53d814f091bf.webp","https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/local_attack_bpost.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn59@2020_2/2020/09/06/18-39-25-043_204eba88b28a7521.webp","https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/routopsy_blog_3.gif":null,"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/play_bpost-1024x374.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn34@2020_1/2020/09/06/18-39-25-208_1050dce6511b9f55.webp","https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/Peek-2020-08-06-17-06.gif":null},"publishedOrCreatedDate":1599417563677}],"record":{"createdTime":"2020-09-07 02:39:23","updatedTime":"2020-09-07 02:39:23","feedId":16379,"fetchDate":"Sun, 06 Sep 2020 18:39:23 +0000","fetchMs":166,"handleMs":1247,"totalMs":125619,"newArticles":0,"totalArticles":20,"status":1,"type":0,"ip":"ab22ccae49a680c841ff007fee8203b8","hostName":"europe69*","requestId":"d77df0c5381645bcacfd3014e744d03a_16379","contentType":"application/xml","totalBytes":1181092,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":13,"articlesImgsGithubTotal":11,"successGithubMap":{"myreaderx14":1,"myreaderx8":1,"myreaderx27":1,"myreaderx32":1,"myreaderx33":1,"myreaderx12":1,"myreaderx5oss":1,"myreaderx31":1,"myreaderx29":1,"myreaderx18":1,"myreaderx":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:12:43","updatedTime":"2020-09-07 02:12:43","id":16379,"name":"Orange Cyberdefense","url":"https://www.sensepost.com/rss.xml","subscriber":204,"website":null,"icon":"https://sensepost.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn62@2020_3/2020/09/06/18-39-22-622_2da21b3e80ba28b1.ico","description":"doing the web 2.0 thing...","weekly":null,"link":"https://sensepost.com"},"noPictureArticleList":[{"createdTime":"2020-09-07 02:41:27","updatedTime":"2020-09-07 02:41:27","id":null,"feedId":16379,"linkMd5":"3b7a9bbd4f488fc4b463b74179afba31"}],"tmpCommonImgCdnBytes":11634,"tmpBodyImgCdnBytes":1169458,"tmpBgImgCdnBytes":0,"extra4":{"start":1599417562258,"total":0,"statList":[{"spend":173,"msg":"获取xml内容"},{"spend":1247,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":123088,"msg":"正文链接上传到cdn"}]},"extra5":13,"extra6":11,"extra7ImgCdnFailResultVector":[null,null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://us-018.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe68.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-002.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-009.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-029.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-2.png","sourceStatusCode":200,"destWidth":880,"destHeight":251,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn19@2020_6/2020/09/06/18-39-23-954_87f9842dae7c2308.webp","sourceBytes":46256,"destBytes":11634,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":879,"convertSpendMs":22,"createdTime":"2020-09-07 02:39:23","host":"us-014*","referer":"https://sensepost.com/blog/2020/routopsy-hacking-routing-with-routers/","linkMd5ListStr":"3b7a9bbd4f488fc4b463b74179afba31,3b7a9bbd4f488fc4b463b74179afba31","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"45.2 KB","destSize":"11.4 KB","compressRate":"25.2%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/local_attack_bpost.png","sourceStatusCode":200,"destWidth":648,"destHeight":347,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn59@2020_2/2020/09/06/18-39-25-043_204eba88b28a7521.webp","sourceBytes":43567,"destBytes":12130,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1204,"convertSpendMs":10,"createdTime":"2020-09-07 02:39:24","host":"europe-23*","referer":"https://sensepost.com/blog/2020/routopsy-hacking-routing-with-routers/","linkMd5ListStr":"3b7a9bbd4f488fc4b463b74179afba31","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.5 KB","destSize":"11.8 KB","compressRate":"27.8%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/play_bpost-1024x374.png","sourceStatusCode":200,"destWidth":1024,"destHeight":374,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn34@2020_1/2020/09/06/18-39-25-208_1050dce6511b9f55.webp","sourceBytes":179427,"destBytes":24842,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1105,"convertSpendMs":23,"createdTime":"2020-09-07 02:39:24","host":"us-030*","referer":"https://sensepost.com/blog/2020/routopsy-hacking-routing-with-routers/","linkMd5ListStr":"3b7a9bbd4f488fc4b463b74179afba31","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"175.2 KB","destSize":"24.3 KB","compressRate":"13.8%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-5.png","sourceStatusCode":200,"destWidth":789,"destHeight":535,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn47@2020_2/2020/09/06/18-39-25-011_e0ef630f2d2858c0.webp","sourceBytes":88280,"destBytes":46976,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1432,"convertSpendMs":18,"createdTime":"2020-09-07 02:39:24","host":"europe68*","referer":"https://sensepost.com/blog/2020/routopsy-hacking-routing-with-routers/","linkMd5ListStr":"3b7a9bbd4f488fc4b463b74179afba31","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"86.2 KB","destSize":"45.9 KB","compressRate":"53.2%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-3.png","sourceStatusCode":200,"destWidth":902,"destHeight":364,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn66@2020_1/2020/09/06/18-39-25-247_98eac24396322adb.webp","sourceBytes":97602,"destBytes":23700,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1442,"convertSpendMs":13,"createdTime":"2020-09-07 02:39:24","host":"europe-22*","referer":"https://sensepost.com/blog/2020/routopsy-hacking-routing-with-routers/","linkMd5ListStr":"3b7a9bbd4f488fc4b463b74179afba31","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"95.3 KB","destSize":"23.1 KB","compressRate":"24.3%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-7.png","sourceStatusCode":200,"destWidth":772,"destHeight":488,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn56@2020_5/2020/09/06/18-39-25-394_258bba61c8d48f54.webp","sourceBytes":66528,"destBytes":17182,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1317,"convertSpendMs":13,"createdTime":"2020-09-07 02:39:24","host":"us-034*","referer":"https://sensepost.com/blog/2020/routopsy-hacking-routing-with-routers/","linkMd5ListStr":"3b7a9bbd4f488fc4b463b74179afba31","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65 KB","destSize":"16.8 KB","compressRate":"25.8%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-12.png","sourceStatusCode":200,"destWidth":823,"destHeight":414,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn31@2020_4/2020/09/06/18-39-25-493_b2c8b17895e6ea3b.webp","sourceBytes":85294,"destBytes":22156,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1379,"convertSpendMs":80,"createdTime":"2020-09-07 02:39:24","host":"us-029*","referer":"https://sensepost.com/blog/2020/routopsy-hacking-routing-with-routers/","linkMd5ListStr":"3b7a9bbd4f488fc4b463b74179afba31","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"83.3 KB","destSize":"21.6 KB","compressRate":"26%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-6.png","sourceStatusCode":200,"destWidth":839,"destHeight":426,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn52@2020_1/2020/09/06/18-39-25-233_a6465887876a235e.webp","sourceBytes":77299,"destBytes":41670,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1550,"convertSpendMs":18,"createdTime":"2020-09-07 02:39:24","host":"europe-56*","referer":"https://sensepost.com/blog/2020/routopsy-hacking-routing-with-routers/","linkMd5ListStr":"3b7a9bbd4f488fc4b463b74179afba31","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"75.5 KB","destSize":"40.7 KB","compressRate":"53.9%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-8.png","sourceStatusCode":200,"destWidth":902,"destHeight":479,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn39@2020_2/2020/09/06/18-39-25-479_b9836c7fcee63af7.webp","sourceBytes":102732,"destBytes":28846,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1397,"convertSpendMs":23,"createdTime":"2020-09-07 02:39:24","host":"us-018*","referer":"https://sensepost.com/blog/2020/routopsy-hacking-routing-with-routers/","linkMd5ListStr":"3b7a9bbd4f488fc4b463b74179afba31","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"100.3 KB","destSize":"28.2 KB","compressRate":"28.1%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/image-9.png","sourceStatusCode":200,"destWidth":840,"destHeight":424,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn44@2020_3/2020/09/06/18-39-25-586_8e06c7c5371aa932.webp","sourceBytes":90959,"destBytes":22958,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":1485,"convertSpendMs":14,"createdTime":"2020-09-07 02:39:24","host":"us-006*","referer":"https://sensepost.com/blog/2020/routopsy-hacking-routing-with-routers/","linkMd5ListStr":"3b7a9bbd4f488fc4b463b74179afba31","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"88.8 KB","destSize":"22.4 KB","compressRate":"25.2%"},{"code":1,"isDone":false,"source":"https://sensepost.com/img/pages/blog/2020/routopsy-hacking-routing-with-routers/Peek-2020-08-07-12-37.gif","sourceStatusCode":200,"destWidth":1916,"destHeight":977,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn28@2020_3/2020/09/06/18-39-46-506_7d3f53d814f091bf.webp","sourceBytes":761887,"destBytes":928998,"targetWebpQuality":75,"feedId":16379,"totalSpendMs":23690,"convertSpendMs":21497,"createdTime":"2020-09-07 02:39:24","host":"europe64*","referer":"https://sensepost.com/blog/2020/routopsy-hacking-routing-with-routers/","linkMd5ListStr":"3b7a9bbd4f488fc4b463b74179afba31","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"744 KB","destSize":"907.2 KB","compressRate":"121.9%"}],"successGithubMap":{"myreaderx14":1,"myreaderx8":1,"myreaderx27":1,"myreaderx32":1,"myreaderx33":1,"myreaderx12":1,"myreaderx5oss":1,"myreaderx31":1,"myreaderx29":1,"myreaderx18":1,"myreaderx":1},"failGithubMap":{}}