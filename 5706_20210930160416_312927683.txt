{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-10-01 00:01:09","updatedTime":"2021-10-01 00:01:09","title":"兼容IE浏览器的图片局部高斯模糊实现","link":"https://www.zhangxinxu.com/wordpress/?p=10131","description":"<p>by <a href=\"https://www.zhangxinxu.com/\">zhangxinxu</a> from <a href=\"https://www.zhangxinxu.com/wordpress/?p=10131\">https://www.zhangxinxu.com/wordpress/?p=10131</a> 鑫空间-鑫生活<br /> 本文欢迎分享与聚合，全文转载就不必了，尊重版权，圈子就这么大，若急用可以联系授权。</p> \n<p><script>window.wxShareImgUrl = 'https://www.zhangxinxu.com/study/image/share/202109-local-blur.jpg';if(!/zhangxinxu/.test(location.host)){document.body.addEventListener('mousedown',function(){location.href='https://www.zhangxinxu.com/wordpress/?p=10131'});}</script></p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/local-blur-cover.jpg\" width=\"480\" height=\"303\" alt=\"局部模糊占位图\" class=\"alignright clip thumb size-medium\" /></p> \n<h3>一、需求描述</h3> \n<p>需求是这样的，需要实现下图所示的模糊效果。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-30_220657.jpg\" width=\"257\" height=\"258\" alt=\"局部模糊效果示意\" class=\"alignnone size-medium\" /></p> \n<p>两个难点，一是局部模糊，二是模糊的边缘是羽化的，而不是突然截断的。</p> \n<p>这个需求该如何实现呢？</p> \n<h3>二、我的实现思路</h3> \n<p>我的实现思路分为3步：</p> \n<ol> \n <li>绘制两层 Canvas，下层 Canvas 是完整的图像，而上层 Canvas 近绘制需要模糊的区域；</li> \n <li>模糊上层 Canvas，示意图如下：<br /> <img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-30_221055.jpg\" width=\"366\" height=\"319\" alt=\"模糊分为两层\" class=\"alignnone size-medium\" /></li> \n <li>两层 Canvas 合二为一。</li> \n</ol> \n<p>其中，实现思路1和3都可以使用 Canvas 的 <code>drawImage()</code> 方法实现，这个比较入门，有挑战的是第2步，如何模糊一个 Canvas 图像？</p> \n<p>如果是在 CSS 中，可以使用 CSS <code>filter</code> 滤镜属性一步到位，要是在 Canvas 中，也可以使用 <code>filter</code> 滤镜属性就好了？</p> \n<p>恭喜你！愿望成真了，Canvas 还真就新支持了一个 filter 属性，可以实现在 Canvas 画布中的各种滤镜效果，不仅是模糊，反相、饱和度、色调旋转、灰度等 10 个滤镜函数全部都支持。</p> \n<p><span class=\"hidden\">//zxx: 如果你看到这段文字，说明你现在访问是不是原文站点，更好的阅读体验在这里：https://www.zhangxinxu.com/wordpress/?p=10131（作者张鑫旭）</span></p> \n<h3>三、canvas filter滤镜函数</h3> \n<p>Canvas filter 滤镜支持的滤镜函数有下表这些：</p> \n<table class=\"params_table\" style=\"max-width:480px;\" border=\"0\" cellspacing=\"1\"> \n <thead> \n  <tr> \n   <th>滤镜函数</th> \n   <th>释义</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>url(#someId)</td> \n   <td>使用ID是someId的SVG滤镜</td> \n  </tr> \n  <tr> \n   <td>blur(5px)</td> \n   <td>模糊</td> \n  </tr> \n  <tr> \n   <td>brightness(2.4)</td> \n   <td>亮度</td> \n  </tr> \n  <tr> \n   <td>contrast(200%)</td> \n   <td>对比度</td> \n  </tr> \n  <tr> \n   <td>drop-shadow(4px 4px 8px blue)</td> \n   <td>投影</td> \n  </tr> \n  <tr> \n   <td>grayscale(50%)</td> \n   <td>灰度</td> \n  </tr> \n  <tr> \n   <td>hue-rotate(90deg)</td> \n   <td>色调变化</td> \n  </tr> \n  <tr> \n   <td>invert(75%)</td> \n   <td>反相</td> \n  </tr> \n  <tr> \n   <td>opacity(25%)</td> \n   <td>透明度</td> \n  </tr> \n  <tr> \n   <td>saturate(230%)</td> \n   <td>饱和度</td> \n  </tr> \n  <tr> \n   <td>sepia(60%)</td> \n   <td>褐色</td> \n  </tr> \n </tbody> \n</table> \n<p>各个滤镜效果可以见此<a href=\"https://www.canvasapi.cn/CanvasRenderingContext2D/filter\" target=\"_canvasapi\">文档页面</a>。</p> \n<p>在本例中，我们需要的滤镜函数就是 <code>blur()</code> 模糊函数，使用语法如下：</p> \n<pre>context.filter = 'blur(5px)';\n<span class=\"green\">// 此时绘制的图像就是模糊的</span>\ncontext.drawImage(...)</pre> \n<p>是不是相当简单？你以为需求就这么轻松实现了吗？</p> \n<p>非也，filter 属性虽然好用，但是兼容性情况却不容乐观，尤其 Safari 浏览器并不支持，这就好比丝线打结——难解了。</p> \n<p>此时，只能出动原始的高斯模糊算法，对图像进行处理了。</p> \n<p>当然，我们无需自己编写，可以去 GitHub 上找找开源的处理。</p> \n<p>我在13年的时候有篇文章“<a href=\"https://www.zhangxinxu.com/wordpress/2013/11/css-svg-image-blur/\">使用CSS将图片转换成模糊(毛玻璃)效果</a>”中提到了一个名为 StackBlur 的项目，<a href=\"https://github.com/flozz/StackBlur\" rel=\"noopener\" target=\"_github\">https://github.com/flozz/StackBlur</a></p> \n<p>打开一看，项目还在，Star数目也不少，看起来还挺靠谱，然而一番实践下来，发现不适合这里的需求。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_152341.png\" width=\"421\" height=\"143\" alt=\"StackBlur Star数目\" /></p> \n<h3>四、StackBlur 的问题</h3> \n<p>可能是为了保证高性能，StackBlur 的模糊算法看起来是非对称的，如果是边缘犀利的高斯模糊，StackBlur 绝对没有任何问题，表现非常良好，但是，如果是这里的四周透明的高斯模糊，就会出现白边或者黑线，以及最终形状不规则的问题，如下图所示：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_153305.jpg\" width=\"183\" height=\"360\" alt=\"StackBlur 的问题示意\" /></p> \n<p>我还专门做了个简易demo展现此问题：<a href=\"https://www.zhangxinxu.com/study/202109/blur.html\" class=\"a_link\" target=\"_blank\">StackBlur 白边黑线问题 demo</a></p> \n<p>也给相关 Issues 补充了关于此问题的复现描述，不过作者一直没有回复，估计这个问题不太好解决。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_153807.png\" width=\"662\" height=\"183\" alt=\"Issues反馈截图\" /></p> \n<p>可是需求不等人，那就寻找比较正统的高斯模糊算法。</p> \n<h3>五、找到新的解决工具</h3> \n<p>找啊找，找啊找，找到了一个其貌不扬的项目：<a href=\"https://github.com/finscn/SimpleBlur\" rel=\"noopener\" target=\"_github\">https://github.com/finscn/SimpleBlur</a></p> \n<p>这个项目及其简陋，就一个 JS 文件加几行 ReadMe，Star 数量只有 1 个，而且是 8 年前的项目，也就是发布后动都没动过。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_154406.png\" width=\"728\" height=\"341\" alt=\"项目简陋示意\" /></p> \n<p>不禁让人怀疑，这个项目靠谱么？</p> \n<p>靠不靠谱还是要通过实践才知道。</p> \n<p>我就整个个简易 demo 跑了下，我去，效果贼好，就是性能差到要砸电脑，有多差呢，一张 600 * 800 像素的图。模糊半径是 40，结果在 IE Edge（就是 IE11 浏览器）下，居然要 20s。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_155849.jpg\" width=\"388\" height=\"503\" alt=\"运行时间示意\" /></p> \n<p>是不是找到 Star 数量如此低的原因了，这种性能，显然是不能用在生产环境的。</p> \n<p>但是，实在是架不住最终的效果就是自己想要的，于是我就打开源码，打算帮忙优化下性能，结果发现作者还提供了另外一种算法实现，基于矩阵的，就在代码中，我整个人懵了，但很快就搞懂了。</p> \n<p>作者示意的代码中有个参数为 <code>gaussian</code>，如下代码：</p> \n<pre>var blur = new Blur({\n    radius: 20,\n    gaussian : true,\n});\nblur.init();</pre> \n<p>使用的值是 <code>true</code>，性能问题就出在这个 <code>true</code> 上，如果作者示意的代码是 <code>false</code>，我估计 Star 数目会多不少，因为，如果 <code>gaussian</code> 参数的值是 <code>false</code>，使用的是另外那一种的性能高很多的模糊算法。</p> \n<p>再来试试运行效果：</p> \n<pre>new Blur({\n    radius: 40,\n    gaussian: false\n})</pre> \n<p>此时，同样的图像，同样的模糊半径，在 IE 11 浏览器下，只需要 1 秒就完成了，速度提升了 20 多倍：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_164054.jpg\" width=\"398\" height=\"484\" alt=\"另外一种算法效率\" /></p> \n<p>Chrome 浏览器下仅需要 170 毫秒左右：</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_164410.jpg\" width=\"421\" height=\"249\" alt=\"Chrome下运行事件\" /></p> \n<p>这个性能完全可以在项目中使用。</p> \n<p>所以，这里的 Blur.js 不是不能用，而是不能按照 ReadMe 提供的用法用。</p> \n<h3>六、整合、最终效果与开源</h3> \n<p>搞定了 IE 浏览器和 Safari 浏览器下的模糊实现，剩下的就是整合了。</p> \n<p>支持 filter 滤镜的使用原生的滤镜，不支持的使用 Blur.js 进行模糊处理。</p> \n<p>如果判断浏览器的 canvas 是否支持 filter 属性呢？</p> \n<p>千万不要基于浏览器判断，因为某些 Android 设备以及某些 APP 使用的内核理论上应该支持，实际上并没有支持。</p> \n<p>我使用判断方法如下（<code>context</code> 是任意 canvas 的上下文）：</p> \n<pre>var isSupportFilter = (typeof context.filter === 'string');</pre> \n<p>假设需要绘制的图形元素是 <code>img</code>，则整合后的执行代码如下：</p> \n<pre>// 执行模糊\nif (typeof context.filter == 'string') {\n    // 支持canvas滤镜\n    context.filter = 'blur(10px)';\n    // 绘制局部图像\n    context.drawImage(img, arrParamsDraw);\n} else {\n    // 不支持Canvas滤镜\n    // 使用第三方方法\n    var blurFixed = new Blur({\n        radius: numRadius,\n        gaussian : false\n    });\n    blurFixed.init();\n    // 先绘制局部图像\n    context.drawImage(img, 0, 0);\n    // 再执行模糊\n    var imgBlured = blurFixed.blurRGBA(canvas, null, true);\n}</pre> \n<p>这样，就能实现 IE9 及其以上浏览器的全部兼容了。</p> \n<h4>代码封装与 gitee 开源</h4> \n<p>为了方便大家使用，我把相关的处理全部用一个方法封装起来了，并且开源到了 gitee 上，地址是：<a href=\"https://gitee.com/zhangxinxu/local-blur\" rel=\"noopener\" target=\"_blank\">https://gitee.com/zhangxinxu/local-blur</a></p> \n<p>如果你觉得项目还不错，欢迎 Star 该项目。</p> \n<p>封装好的 JS 就是下面的 <a href=\"https://gitee.com/zhangxinxu/local-blur/raw/master/localBlur.js\" rel=\"noopener\" target=\"_blank\">localBlur.js</a>。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-30_221942.png\" width=\"453\" height=\"275\" alt=\"开源JS文件示意\" class=\"alignnone size-medium\" /></p> \n<p>封装的方法名就是 localBlur，具体使用如下：</p> \n<ol> \n <li>引入 localBlur.js <pre>&lt;script src=\"./localBlur.js\"&gt;&lt;/script&gt;</pre> </li> \n <li>调用 localBlur 方法 <pre>localBlur(source, radius, bounding, output);\n// 或者\nlocalBlur(src, radius, bounding, callback);</pre> </li> \n</ol> \n<p><strong>其中：</strong></p> \n<dl> \n <dt>\n  source\n </dt> \n <dd>\n  表示原始图像资源，可以是 \n  <code>&lt;img&gt;</code> 图像元素，也可以是 \n  <code>&lt;canvas&gt;</code> 画布元素。\n </dd> \n <dt>\n  src\n </dt> \n <dd>\n  表示原始图像的 URL 地址，注意跨域的问题。\n </dd> \n <dt>\n  radius\n </dt> \n <dd>\n  数值，必需，表示模糊半径。\n </dd> \n <dt>\n  bounding\n </dt> \n <dd>\n  数组，可选，表示模糊的局部区域范围，由 4 个值组成，\n  <code>[x, y, width, height]</code>, 分别表示区域的左上角坐标和宽高大小，例如 \n  <code>[20, 20, 240, 120]</code>，表示图像上横坐标 20px，纵坐标 20px为左上角，宽度是 240px，高度是 120px 的矩形区域发生模糊。\n </dd> \n <dt>\n  output\n </dt> \n <dd>\n  显示最终模糊效果的 \n  <code>&lt;canvas&gt;</code> 画布元素。\n </dd> \n <dt>\n  callback\n </dt> \n <dd>\n  显示最终模糊效果的回调函数，支持一个参数，表示包含模糊效果的 \n  <code>&lt;canvas&gt;</code> 画布元素。\n </dd> \n</dl> \n<h4>最终案例效果</h4> \n<p>封装的方法有了，那么效果如何呢？</p> \n<p>项目中的 index.html 就是演示页面，不过 gitee 的 pages 功能没开发，大家也可以狠狠地点击这里体验效果：<a href=\"https://www.zhangxinxu.com/study/202109/image-local-gaussian-blur-demo.php\" rel=\"noopener\" target=\"_blank\">兼容Safari/IE的局部高斯模糊demo</a></p> \n<p>如果手机访问的，不方便体验，也可以观看下面的视频感受下实现效果（不动点击播放）：</p> \n<p>\n <video src=\"//image.zhangxinxu.com/video/blog/202109/local-blur.mp4\" type=\"video/mp4\" width=\"274\" height=\"706\" preload=\"auto\" autoplay=\"\" autobuffer=\"\" loop=\"\" x-webkit-airplay=\"allow\" x5-video-player-type=\"h5\" x5-video-player-fullscreen=\"true\" x5-video-orientation=\"portraint\" webkit-playsinline=\"true\" playsinline=\"true\" ​​​​poster=\"//image.zhangxinxu.com/image/blog/201806/poster.png\"></video></p> \n<p>核心实现其实就这么一句：</p> \n<pre>localBlur(source, 10, [76,40,360,240], output);</pre> \n<p>其他：目标图像尺寸越小，性能约好，模糊半径越小，性能也约好，这一点在 IE 浏览器上更为明显。</p> \n<h4>欢迎关注我的gitee</h4> \n<p>欢迎关注我的 gitee 账户，<a href=\"https://gitee.com/zhangxinxu/\" rel=\"noopener\" target=\"_blank\">https://gitee.com/zhangxinxu/</a> 以后写小玩具全部都会扔在上面，因为速度快，目前已经有10个小玩具了。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/2021-09-30_224939.png\" width=\"347\" height=\"422\" alt=\"关注我\" class=\"alignnone size-medium\" /></p> \n<h3>七、结束之 CSS 也可以实现</h3> \n<p>如果不需要兼容 IE 浏览器，或者不需要最终合成一张图片，最简单的方法还是使用 CSS 实现，具体不表，可参见“<a href=\"https://www.zhangxinxu.com/wordpress/2013/11/css-svg-image-blur/\">使用CSS将图片转换成模糊(毛玻璃)效果</a>”这篇文章。</p> \n<p>前两天，编辑跟我说《CSS新世界》重印了，说实话，出乎了我的意料，没想到这么快就重印了，毕竟首印足足有4000册，在这里，特别感谢大家的支持，目前微博还有转发抽奖，如果不嫌麻烦的，可以转发下，说不定可以获得《CSS新世界》的签字版。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202109/print-again.jpg\" width=\"375\" height=\"209\" alt=\"重印截图\" class=\"alignnone size-medium\" /></p> \n<p>还有1个小时就是国庆节了，算是马不停蹄在9月份的末尾赶出来了这篇文章，如果您觉得文章内容还不错，欢迎转发，欢迎分享。</p> \n<p>在这里，祝所有的前端同行国庆节快乐，一切顺顺利利！</p> \n<p><img src=\"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg\" width=\"20\" height=\"20\" align=\"absmiddle\" /></p> \n<p>本文为原创文章，欢迎分享，勿全文转载，如果实在喜欢，可收藏，永不过期，且会及时更新知识点及修正错误，阅读体验也更好。<br /> 本文地址：<a href=\"https://www.zhangxinxu.com/wordpress/?p=10131\">https://www.zhangxinxu.com/wordpress/?p=10131</a></p> \n<p>（本篇完）</p>","descriptionType":"html","publishedDate":"Thu, 30 Sep 2021 15:10:36 +0000","feedId":5706,"bgimg":"https://image.zhangxinxu.com/image/blog/202109/local-blur-cover.jpg","linkMd5":"f6b7b0aa54dced687cdbb3037c7a3635","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn45@2020_3/2021/09/30/16-02-15-593_e0506dc68697402b.webp","destWidth":480,"destHeight":303,"sourceBytes":27827,"destBytes":16064,"author":"张 鑫旭","articleImgCdnMap":{"https://image.zhangxinxu.com/image/blog/202109/local-blur-cover.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn45@2020_3/2021/09/30/16-02-15-593_e0506dc68697402b.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-30_220657.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn66@2020_3/2021/09/30/16-02-18-127_73ba80728ff7caa5.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-30_221055.jpg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn61@2020_6/2021/09/30/16-03-18-253_c3a8d36d06a60baf.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-27_152341.png":null,"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_153305.jpg":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn4@2020_3/2021/09/30/16-03-20-667_0b89aed7e814c997.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-27_153807.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn69@2020_4/2021/09/30/16-02-18-949_a365438bd00317a8.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-27_154406.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn99@2020_1/2021/09/30/16-02-18-071_78457c646acbc080.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-27_155849.jpg":null,"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_164054.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn92@2020_4/2021/09/30/16-02-18-230_b96d84e70800e61a.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-27_164410.jpg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn83@2020_1/2021/09/30/16-02-18-168_fbafd452318583e8.webp","https://image.zhangxinxu.com/image/blog/202109/2021-09-30_221942.png":null,"https://image.zhangxinxu.com/image/blog/202109/2021-09-30_224939.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn96@2020_5/2021/09/30/16-02-18-636_527137a8ae604715.webp","https://image.zhangxinxu.com/image/blog/202109/print-again.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn5@2020_6/2021/09/30/16-02-19-321_d534156b19771a34.webp","https://image.zhangxinxu.com/image/emtion/emoji/2764.svg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn68@2020_1/2021/09/30/16-03-17-408_345d3ecc932d1a40.svg"},"publishedOrCreatedDate":1633017669421}],"record":{"createdTime":"2021-10-01 00:01:09","updatedTime":"2021-10-01 00:01:09","feedId":5706,"fetchDate":"Thu, 30 Sep 2021 16:01:09 +0000","fetchMs":2756,"handleMs":9,"totalMs":190084,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"79b59b7ab14b8d981e3d8a220e20848a","hostName":"us-016*","requestId":"607d8f5aa76444b9b38cb9485246534b_5706","contentType":"application/rss+xml; charset=UTF-8","totalBytes":132395,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":14,"articlesImgsGithubTotal":11,"successGithubMap":{"myreaderx6":1,"myreaderx16":1,"myreaderx10":1,"myreaderx32":1,"myreaderx22":1,"myreaderx12":1,"myreaderx2":1,"myreaderx13":1,"myreaderx30":1,"myreaderx18":1,"myreaderx19":1},"failGithubMap":{"myreaderx23":1,"myreaderx31":1}},"feed":{"createdTime":"2020-08-25 04:30:15","updatedTime":"2020-09-01 11:15:46","id":5706,"name":"张鑫旭-鑫空间-鑫生活","url":"http://www.zhangxinxu.com/wordpress/feed/","subscriber":null,"website":null,"icon":"https://www.zhangxinxu.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn89@2020_1/2020/09/01/03-15-46-738_9a339309f46b07b8.ico","description":"提高前端技术，先从使用谷歌搜索做起","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-10-01 00:04:16","updatedTime":"2021-10-01 00:04:16","id":null,"feedId":5706,"linkMd5":"f6b7b0aa54dced687cdbb3037c7a3635"}],"tmpCommonImgCdnBytes":16064,"tmpBodyImgCdnBytes":116331,"tmpBgImgCdnBytes":0,"extra4":{"start":1633017666195,"total":0,"statList":[{"spend":3217,"msg":"获取xml内容"},{"spend":9,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":120414,"msg":"正文链接上传到cdn"}]},"extra5":14,"extra6":13,"extra7ImgCdnFailResultVector":[null,null,null,null,null,null,null,{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_152341.png","sourceStatusCode":200,"destWidth":421,"destHeight":143,"sourceBytes":5776,"destBytes":6304,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1688,"convertSpendMs":5,"createdTime":"2021-10-01 00:03:17","host":"us-53*","referer":"https://www.zhangxinxu.com/wordpress/?p=10131","linkMd5ListStr":"f6b7b0aa54dced687cdbb3037c7a3635","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn87/contents/2021/09/30/16-03-19-195_a966ab5dc63a8f66.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 30 Sep 2021 16:03:19 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["86D8:0E75:560C0D:FAEFBC:6155DFC7"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1633020041"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn87/contents/2021/09/30/16-03-19-195_a966ab5dc63a8f66.webp","historyStatusCode":[],"spendMs":39},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.6 KB","destSize":"6.2 KB","compressRate":"109.1%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_155849.jpg","sourceStatusCode":200,"destWidth":388,"destHeight":503,"sourceBytes":28412,"destBytes":17616,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2298,"convertSpendMs":8,"createdTime":"2021-10-01 00:03:17","host":"us-031*","referer":"https://www.zhangxinxu.com/wordpress/?p=10131","linkMd5ListStr":"f6b7b0aa54dced687cdbb3037c7a3635","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn59/contents/2021/09/30/16-03-19-822_db4e11f5df0e9fff.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Thu, 30 Sep 2021 16:03:19 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["DB4A:16B7:52BE04:E15B7B:6155DFC7"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1633020077"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn59/contents/2021/09/30/16-03-19-822_db4e11f5df0e9fff.webp","historyStatusCode":[],"spendMs":31},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"27.7 KB","destSize":"17.2 KB","compressRate":"62%"},null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-013.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe65.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe68.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-011.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-019.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://us-010.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe-22.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-014.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/local-blur-cover.jpg","sourceStatusCode":200,"destWidth":480,"destHeight":303,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn45@2020_3/2021/09/30/16-02-15-593_e0506dc68697402b.webp","sourceBytes":27827,"destBytes":16064,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2563,"convertSpendMs":8,"createdTime":"2021-10-01 00:02:13","host":"us-55*","referer":"https://www.zhangxinxu.com/wordpress/?p=10131","linkMd5ListStr":"f6b7b0aa54dced687cdbb3037c7a3635,f6b7b0aa54dced687cdbb3037c7a3635","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"27.2 KB","destSize":"15.7 KB","compressRate":"57.7%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_154406.png","sourceStatusCode":200,"destWidth":728,"destHeight":341,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn99@2020_1/2021/09/30/16-02-18-071_78457c646acbc080.webp","sourceBytes":13523,"destBytes":17854,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2454,"convertSpendMs":8,"createdTime":"2021-10-01 00:02:15","host":"us-019*","referer":"https://www.zhangxinxu.com/wordpress/?p=10131","linkMd5ListStr":"f6b7b0aa54dced687cdbb3037c7a3635","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.2 KB","destSize":"17.4 KB","compressRate":"132%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-30_220657.jpg","sourceStatusCode":200,"destWidth":257,"destHeight":258,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn66@2020_3/2021/09/30/16-02-18-127_73ba80728ff7caa5.webp","sourceBytes":11362,"destBytes":6256,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2598,"convertSpendMs":4,"createdTime":"2021-10-01 00:02:15","host":"us-012*","referer":"https://www.zhangxinxu.com/wordpress/?p=10131","linkMd5ListStr":"f6b7b0aa54dced687cdbb3037c7a3635","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"11.1 KB","destSize":"6.1 KB","compressRate":"55.1%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_164410.jpg","sourceStatusCode":200,"destWidth":421,"destHeight":249,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn83@2020_1/2021/09/30/16-02-18-168_fbafd452318583e8.webp","sourceBytes":14626,"destBytes":11646,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2603,"convertSpendMs":8,"createdTime":"2021-10-01 00:02:15","host":"us-002*","referer":"https://www.zhangxinxu.com/wordpress/?p=10131","linkMd5ListStr":"f6b7b0aa54dced687cdbb3037c7a3635","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.3 KB","destSize":"11.4 KB","compressRate":"79.6%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_164054.jpg","sourceStatusCode":200,"destWidth":398,"destHeight":484,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn92@2020_4/2021/09/30/16-02-18-230_b96d84e70800e61a.webp","sourceBytes":27624,"destBytes":15852,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2662,"convertSpendMs":10,"createdTime":"2021-10-01 00:02:15","host":"us-53*","referer":"https://www.zhangxinxu.com/wordpress/?p=10131","linkMd5ListStr":"f6b7b0aa54dced687cdbb3037c7a3635","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"27 KB","destSize":"15.5 KB","compressRate":"57.4%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-30_224939.png","sourceStatusCode":200,"destWidth":347,"destHeight":422,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn96@2020_5/2021/09/30/16-02-18-636_527137a8ae604715.webp","sourceBytes":20433,"destBytes":17462,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":3029,"convertSpendMs":7,"createdTime":"2021-10-01 00:02:15","host":"us-031*","referer":"https://www.zhangxinxu.com/wordpress/?p=10131","linkMd5ListStr":"f6b7b0aa54dced687cdbb3037c7a3635","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20 KB","destSize":"17.1 KB","compressRate":"85.5%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_153807.png","sourceStatusCode":200,"destWidth":662,"destHeight":183,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn69@2020_4/2021/09/30/16-02-18-949_a365438bd00317a8.webp","sourceBytes":7057,"destBytes":15708,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":3342,"convertSpendMs":5,"createdTime":"2021-10-01 00:02:15","host":"us-011*","referer":"https://www.zhangxinxu.com/wordpress/?p=10131","linkMd5ListStr":"f6b7b0aa54dced687cdbb3037c7a3635","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"15.3 KB","compressRate":"222.6%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/print-again.jpg","sourceStatusCode":200,"destWidth":750,"destHeight":418,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn5@2020_6/2021/09/30/16-02-19-321_d534156b19771a34.webp","sourceBytes":43591,"destBytes":17546,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":3740,"convertSpendMs":9,"createdTime":"2021-10-01 00:02:15","host":"europe69*","referer":"https://www.zhangxinxu.com/wordpress/?p=10131","linkMd5ListStr":"f6b7b0aa54dced687cdbb3037c7a3635","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42.6 KB","destSize":"17.1 KB","compressRate":"40.3%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn68@2020_1/2021/09/30/16-03-17-408_345d3ecc932d1a40.svg","sourceBytes":391,"destBytes":391,"feedId":5706,"totalSpendMs":1728,"convertSpendMs":0,"createdTime":"2021-10-01 00:03:15","host":"us-012*","referer":"https://www.zhangxinxu.com/wordpress/?p=10131","linkMd5ListStr":"f6b7b0aa54dced687cdbb3037c7a3635","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"391 B","destSize":"391 B","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-30_221055.jpg","sourceStatusCode":200,"destWidth":366,"destHeight":319,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn61@2020_6/2021/09/30/16-03-18-253_c3a8d36d06a60baf.webp","sourceBytes":19426,"destBytes":11522,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2558,"convertSpendMs":6,"createdTime":"2021-10-01 00:03:15","host":"us-011*","referer":"https://www.zhangxinxu.com/wordpress/?p=10131","linkMd5ListStr":"f6b7b0aa54dced687cdbb3037c7a3635","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19 KB","destSize":"11.3 KB","compressRate":"59.3%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202109/2021-09-27_153305.jpg","sourceStatusCode":200,"destWidth":183,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn4@2020_3/2021/09/30/16-03-20-667_0b89aed7e814c997.webp","sourceBytes":5889,"destBytes":2094,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":3392,"convertSpendMs":7,"createdTime":"2021-10-01 00:03:17","host":"europe69*","referer":"https://www.zhangxinxu.com/wordpress/?p=10131","linkMd5ListStr":"f6b7b0aa54dced687cdbb3037c7a3635","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.8 KB","destSize":"2 KB","compressRate":"35.6%"}],"successGithubMap":{"myreaderx6":1,"myreaderx16":1,"myreaderx10":1,"myreaderx32":1,"myreaderx22":1,"myreaderx12":1,"myreaderx2":1,"myreaderx13":1,"myreaderx30":1,"myreaderx18":1,"myreaderx19":1},"failGithubMap":{"myreaderx23":1,"myreaderx31":1}}