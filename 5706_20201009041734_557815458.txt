{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-09 12:17:08","updatedTime":"2020-10-09 12:17:08","title":"flex:0 flex:1 flex:none flex:auto应该在什么场景下使用？","link":"https://www.zhangxinxu.com/wordpress/?p=9541","description":"<p>by <a href=\"https://www.zhangxinxu.com/\">zhangxinxu</a> from <a href=\"https://www.zhangxinxu.com/wordpress/?p=9541\">https://www.zhangxinxu.com/wordpress/?p=9541</a><br /> 本文欢迎分享与聚合，全文转载就不必了，尊重版权，圈子就这么大，若急用可以联系授权。</p> \n<p><script>window.wxShareImgUrl = 'https://www.zhangxinxu.com/study/image/share/202010-flex-0-1-none.png';</script></p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202010/flex-0-1-none-cover.png\" width=\"484\" height=\"303\" class=\"alignright thumb clip size-medium\" /></p> \n<h3>一、推荐使用flex缩写语法</h3> \n<p>CSS官方文档明确推荐flex属性使用缩写语法，描述如下所示：</p> \n<blockquote>\n <p>Authors are encouraged to control flexibility using the flex shorthand rather than with its longhand properties directly, as the shorthand correctly resets any unspecified components to accommodate common uses.</p>\n</blockquote> \n<p>大致意思是，建议使用单值缩写，而不是完整的3个属性值，因为单值属性所对应的flex计算值根据开发者日常最常用的使用进行了优化。</p> \n<p>这句话很多人并不知道什么意思，这个说来话长，想想还是讲一下吧。</p> \n<p><code>flex</code>属性是<code>flex-grow</code>，<code>flex-shrink</code>和<code>flex-basis</code>这3个CSS属性的缩写，如果不清楚，可以参见我之前这篇口碑热文“<a href=\"https://www.zhangxinxu.com/wordpress/2019/12/css-flex-deep/\">CSS flex属性深入理解</a>”。</p> \n<p>按照以往的经验，<code>flex</code>属性只有一个值的时候，另外缺省的值应该使用默认值才对，但是<code>flex</code>属性并不是这样的。</p> \n<p>我们可以对比CSS <code>border</code>属性。</p> \n<p>CSS <code>border</code>属性是<code>border-width</code>，<code>border-style</code>和<code>border-color</code>这3个CSS属性的缩写，当<code>border</code>属性设置了1个值或2个值的时候，剩下的属性值一定是默认值，例如：</p> \n<ul> \n <li><code>border:2px</code>等同于<code>border:2px none currentColor</code>，也就是此时<code>border-style</code>是默认值<code>none</code>，<code>border-color</code>的计算值是当前的色值；</li> \n <li><code>border:#fff</code>等同于<code>border:medium none #fff</code>，也就是此时<code>border-width</code>是默认值<code>medium</code>；</li> \n <li><code>border:solid</code>等同于<code>border:medium solid currentColor</code>。</li> \n</ul> \n<p>使用下面的代码可以得到<code>flex-basis</code>默认值是<code>auto</code>，<code>flex-grow</code>默认值是<code>0</code>，<code>flex-shrink</code>默认值是<code>1</code>。</p> \n<pre>console.log(getComputedStyle(document.body).flexGrow);\nconsole.log(getComputedStyle(document.body).flexShrink);\nconsole.log(getComputedStyle(document.body).flexBasis);</pre> \n<p>实际运行效果如下：<br /> <img src=\"https://image.zhangxinxu.com/image/blog/202009/6-39-insert_flex-initial2.png\" loading=\"lazy\" alt=\"Chrome和Firefox浏览器获取的flex子属性的默认值示意\" /></p> \n<p>然后再看下<code>flex</code>缩写属性的计算值，就会发现不一样的事情：</p> \n<ul> \n <li><code>flex:1</code>等同于<code>flex:1 1 0%</code>，<code>flex:1 2</code>等同于<code>flex:1 2 0%</code>，即<code>flex-basis</code>使用的不是默认值<code>auto</code>，而是使用的<code>0%</code>；</li> \n <li><code>flex:100px</code>等同于<code>flex:1 1 100px</code>，即<code>flex-grow</code>使用的不是默认值<code>0</code>，而是使用的<code>1</code>；</li> \n</ul> \n<p>这就是上面提到的<code>flex</code>属性站在实用主义的角度对缩写属性的计算值进行了优化。</p> \n<p>然后，还有一个重要原因，flex属性的长语法需要理解深刻，反复使用才能驾驭，门槛比较好，因此，实际开发，如果可以，建议使用flex缩写。</p> \n<p>常见的flex缩写有下面这几个，<code>flex:0</code>、<code>flex:1</code>、<code>flex:none</code>、<code>flex:auto</code>，那各个CSS声明应该在什么场景下使用才正确呢？</p> \n<p><span class=\"hidden\">//zxx: 如果你看到这段文字，说明你现在访问是体验糟糕的垃圾盗版网站，你可以访问原文获得很好的体验：https://www.zhangxinxu.com/wordpress/?p=9541（作者张鑫旭）</span></p> \n<h3>二、使用flex缩写语法场景</h3> \n<p>下表展示了常见的<code>flex</code>属性单值语法对应的<code>flex</code>计算值，涵盖了绝大多数的<code>flex</code>属性的使用场景。</p> \n<table border=\"0\" class=\"params_table\" cellspacing=\"1\"> \n <caption>\n  <small>flex单值语法对应的计算值</small>\n </caption> \n <thead> \n  <tr> \n   <th>单值语法</th> \n   <th>等同于</th> \n   <th>备注</th> \n  </tr> \n </thead> \n <tbody> \n  <tr align=\"left\"> \n   <td>flex: initial</td> \n   <td>flex: 0 1 auto</td> \n   <td>初始值，常用</td> \n  </tr> \n  <tr align=\"left\"> \n   <td>flex: 0</td> \n   <td>flex: 0 0 0%</td> \n   <td>适用场景少</td> \n  </tr> \n  <tr align=\"left\"> \n   <td>flex: none</td> \n   <td>flex: 0 0 auto</td> \n   <td>推荐</td> \n  </tr> \n  <tr align=\"left\"> \n   <td>flex: 1</td> \n   <td>flex: 1 1 0%</td> \n   <td>推荐</td> \n  </tr> \n  <tr align=\"left\"> \n   <td>flex: auto</td> \n   <td>flex: 1 1 auto</td> \n   <td>适用场景少</td> \n  </tr> \n </tbody> \n</table> \n<h4>1. flex:initial基本表现和适用场景</h4> \n<p><code>flex:initial</code>等同于设置<code>flex: 0 1 auto</code>，可以理解为flex属性的默认值。</p> \n<p>该默认值图形示意如下图所示。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202005/6-39_flex-initial.png\" loading=\"lazy\" width=\"283\" height=\"143\" alt=\"flex属性初始值分解示意\" /></p> \n<p>其行为表现文字描述为：</p> \n<blockquote>\n <p>flex容器有剩余空间时尺寸不会增长（flex-grow:0），flex容器尺寸不足时尺寸会收缩变小（flex-shrink:1），尺寸自适应于内容（flex-basis:auto）（行为类似fit-content）。</p>\n</blockquote> \n<p>举个例子，我们给flex容器设置深红色的虚线框，如果此时flex子项（设置深天蓝色轮廓）的内容都比较少，就会有如下图所示的效果，剩余空间依然保留。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202005/6-40_flex-initial-less.png\" loading=\"lazy\" width=\"331\" height=\"95\" alt=\"flex子项内容较少时候的尺寸表现\" /></p> \n<p>相关CSS代码和HTML代码如下所示：</p> \n<pre name=\"code\" class=\"css\">.container {\n    display: flex;\n    border: 2px dashed crimson;\n}\n.container item {\n    border: 2px solid deepskyblue;    \n}</pre> \n<pre name=\"code\" class=\"html\">&lt;div class=\"container\"&gt;\n    &lt;item&gt;范张&lt;/item&gt;\n    &lt;item&gt;范鑫&lt;/item&gt;\n    &lt;item&gt;范旭&lt;/item&gt;\n    &lt;item&gt;范帅&lt;/item&gt;\n    &lt;item&gt;范哥&lt;/item&gt;\n&lt;/div&gt;</pre> \n<p>如果子项内容很多，由于<code>flex-shrink:1</code>，因此，会缩小，表现效果就是文字换行，效果如下图所示。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202005/6-41_flex-initial-more.png\" loading=\"lazy\" width=\"359\" height=\"183\" alt=\"flex子项内容较多时候的尺寸表现\" /></p> \n<p><p><code>'initial'</code>是CSS中的一个全局关键字，表示CSS属性的初始值，通常用来还原已经设置的CSS属性。因此日常开发不会专门设置<code>flex:initial</code>声明，但是不设置并不是说<code>flex</code>默认属性值用的不多。</p> <h5>flex:initial适用场景</h5> <p><code>flex:initial</code>声明适用于下图所示的布局效果。</p> <p><img src=\"https://image.zhangxinxu.com/image/blog/202010/6-45-insert_flex-initial-situable2.png\" loading=\"lazy\" width=\"416\" height=\"164\" alt=\"适合flex:initial声明的布局轮廓图示意\" /></p> <p>上图所示的布局效果常见于按钮、标题、小图标等小部件的排版布局，因为这些小部件的宽度都不会很宽，水平位置的控制多使用<code>justify-content</code>和<code>margin-left:auto/margin-right:auto</code>实现。</p> <p>除了上图所示的布局效果外，<code>flex:initial</code>声明还适用于一侧内容宽度固定，另外一侧内容宽度任意的两栏自适应布局场景，布局轮廓如图下图所示（点点点表示文本内容）。</p> <p><img src=\"https://image.zhangxinxu.com/image/blog/202010/6-45-insert_flex-initial-suitable2.png\" loading=\"lazy\" width=\"415\" height=\"110\" alt=\"适合flex:initial声明的两栏自适应布局轮廓图示意\" /></p> <p>此时，无需任何其他Flex布局相关的CSS设置，只需要容器元素设置<code>display:flex</code>即可。</p> <p>总结下就是那些希望元素尺寸收缩，同时元素内容万一较多又能自动换行的场景可以不做任何<code>flex</code>属性设置。</p> <h4>2. flex:0和flex:none的区别和各自适用场景</h4> <p><code>flex:0</code>等同于设置<code>flex: 0 0 0%</code>，<code>flex:none</code>等同于设置<code>flex: 0 0 auto</code>。</p> <p>这两个值的图形示意如下图所示。</p> <p><img src=\"https://image.zhangxinxu.com/image/blog/202010/6-44_flex-0-none.png\" loading=\"lazy\" width=\"277\" height=\"235\" alt=\"flex:0和flex:none分解示意\" /></p> <p>从上可以看出<code>flex:0</code>和<code>flex:none</code>对应的<code>flex-grow</code>和<code>flex-shrink</code>属性值均是<code>0</code>，因此两者都会有如下的行为描述：</p> \n <blockquote>\n  <p>元素尺寸不会弹性增大、也不会弹性变小，也就是元素不再具有弹性。</p>\n </blockquote> <p>那<code>flex-basis:0%</code>和<code>flex-basis:auto</code>有什么区别呢？</p> \n <ul> \n  <li><code>flex-basis:0%</code>表示固定尺寸是0，由于元素不具有弹性，因此，设置<code>flex:0</code>的元素的最终尺寸表现为最小内容宽度；</li> \n  <li><code>flex-basis:auto</code>表示固定尺寸由内容决定，由于元素不具有弹性，因此，元素内的内容不会换行。但是，注意，不会换行并不表示设置<code>flex:none</code>的元素最终尺寸表现就是最大内容宽度，如果外部尺寸不足，<code>flex:none</code>有可能实际的尺寸是最小内容尺寸；</li> \n </ul> <p>举个例子，设置每个flex子项有足够多的内容，HTML代码如下所示：</p> <pre>&lt;h4&gt;flex:0&lt;/h4&gt;\n&lt;div class=\"container flex-0\"&gt;\n    &lt;item&gt;范张范张范张&lt;/item&gt;\n    &lt;item&gt;范鑫范鑫范鑫&lt;/item&gt;\n    &lt;item&gt;范旭范旭范旭&lt;/item&gt;\n    &lt;item&gt;范帅范帅范帅&lt;/item&gt;\n    &lt;item&gt;范哥范哥范哥&lt;/item&gt;\n&lt;/div&gt;\n&lt;h4&gt;flex:none&lt;/h4&gt;\n&lt;div class=\"container flex-none\"&gt;\n    &lt;item&gt;范张范张范张&lt;/item&gt;\n    &lt;item&gt;范鑫范鑫范鑫&lt;/item&gt;\n    &lt;item&gt;范旭范旭范旭&lt;/item&gt;\n    &lt;item&gt;范帅范帅范帅&lt;/item&gt;\n    &lt;item&gt;范哥范哥范哥&lt;/item&gt;\n&lt;/div&gt;</pre> <p>然后对flex子项分别设置<code>flex:0</code>和<code>flex:none</code>，CSS代码如下所示：</p> <pre>.container {\n    display: flex;\n}\n.flex-0 item {\n    flex: 0;\n}\n.flex-none item {\n    flex: none;\n}</pre> <p>结果如图下图所示：</p> <p><img src=\"https://image.zhangxinxu.com/image/blog/202010/6-45_flex-0-none.png\" loading=\"lazy\" width=\"445\" height=\"231\" alt=\"flex:0和flex:none的布局效果示意\" /></p> <p>可以看到应用了<code>flex:0</code>的元素全部高高耸起，一柱擎天，表现为最小内容宽度；而应用了<code>flex:none</code>的元素则无视容器的尺寸限制，直接溢出容器，没有换行，表现为最大内容宽度。</p> <h5>适合使用flex:0的场景</h5> <p>由于应用了<code>flex:0</code>的元素表现为最小内容宽度，因此，适合使用<code>flex:0</code>的场景并不多，除非元素内容的主体是替换元素，此时文字内容就会庇护在替换元素的宽度下从而不会出现“一柱擎天”的排版效果。</p> <p>该适用场景的布局示意如下图所示。</p> <p><img src=\"https://image.zhangxinxu.com/image/blog/202010/6-49-insert_flex-0-suitable2.png\" loading=\"lazy\" width=\"416\" height=\"209\" alt=\"适用于flex:0的布局轮廓示意图\" /></p> <p>其中上图左侧部分的矩形表示一个图像，图像下方会有文字内容不定的描述信息，此时，左侧内容就适合设置<code>flex:0</code>，这样，无论文字的内容如何设置，左侧内容的宽度都是图像的宽度。</p> <h5>适合使用flex:none的场景</h5> <p>当flex子项的宽度就是内容的宽度，且内容永远不会换行，则适合使用<code>flex:none</code>，这个场景比<code>flex:0</code>适用的场景要更常见。</p> <p>例如列表右侧经常会有一个操作按钮，对于按钮元素而言，里面的文字内容一定是不能换行的，此时，就非常适合设置<code>flex:none</code>，例如下面这个例子，示意了按钮使用了<code>flex:none</code>之后的布局变化，HTML和CSS代码如下所示：</p> <pre>&lt;div class=\"item\"&gt;\n    &lt;img src=\"1.jpg\"&gt;\n    &lt;p&gt;右侧按钮没有设置flex:none，表现为最小内容宽度。&lt;/p&gt;\n    &lt;button&gt;按钮&lt;/button&gt;\n&lt;/div&gt;\n&lt;div class=\"item\"&gt;\n    &lt;img src=\"1.jpg\"&gt;\n    &lt;p&gt;右侧按钮设置了flex:none，按钮正常显示了。&lt;/p&gt;\n    &lt;button <span style=\"color:#cd0000;\">class=\"none\"</span>&gt;按钮&lt;/button&gt;\n&lt;/div&gt;</pre> <pre>.container {\n    display: flex;\n    padding: .5rem;\n    border: 1px solid lightgray;\n    background-color: #fff;\n}\nimg {\n    width: 3rem; height: 3rem;\n    margin-right: .5rem;\n}\nbutton {\n    align-self: center;\n    padding: 5px;\n    margin-left: .5rem;\n}\n<span style=\"color:#cd0000;\">.none {\n    flex: none;\n}</span></pre> <p>从代码可以看出两段内容的唯一区别就是下面的布局对按钮元素设置了<code>flex:none</code>，结果就有如下图所示的不同的布局效果。</p> <p><img src=\"https://image.zhangxinxu.com/image/blog/202010/6-50-insert_flex-none-suitable.png\" loading=\"lazy\" width=\"400\" height=\"188\" alt=\"适用于flex:none的对比效果示意图\" /></p> <p>不仅按钮正常显示了，整个布局会自动适配按钮的尺寸，也就是按钮文字多了，中间的文字内容宽度就会自动减小，整个布局依然是弹性的。</p> <h4>3. flex:1和flex:auto的区别和各自适用场景</h4> <p><code>flex:1</code>等同于设置<code>flex: 1 1 0%</code>，<code>flex:auto</code>等同于设置<code>flex: 1 1 auto</code>。</p> <p>这两个值的图形示意如下图所示。</p> <p><img src=\"https://image.zhangxinxu.com/image/blog/202010/6-53-_flex-1-auto-replace.png\" loading=\"lazy\" width=\"276\" height=\"249\" alt=\"flex:1和flex:auto分解示意\" /></p> <p>结合flex属性值的描述，我们可以得出<code>flex:1</code>和<code>flex:auto</code>的行为表现：</p> \n <blockquote>\n  <p>元素尺寸可以弹性增大，也可以弹性变小，具有十足的弹性，但是<code>flex:1</code>在尺寸不足时会优先最小化内容尺寸，<code>flex:auto</code>在尺寸不足时会优先最大化内容尺寸。</p>\n </blockquote> <p>上面的描述可以通过一个例子明白是什么意思，这一次是仅仅设置第1项的文字内容很多，HTML代码如下所示：</p> <pre>&lt;h4&gt;flex:1&lt;/h4&gt;\n&lt;div class=\"container flex-1\"&gt;\n    &lt;item&gt;范张范张范张范张范张范张范张范张范张&lt;/item&gt;\n    &lt;item&gt;范鑫&lt;/item&gt;\n    &lt;item&gt;范旭&lt;/item&gt;\n    &lt;item&gt;范帅&lt;/item&gt;\n    &lt;item&gt;范哥&lt;/item&gt;\n&lt;/div&gt;\n&lt;h4&gt;flex:auto&lt;/h4&gt;\n&lt;div class=\"container flex-auto\"&gt;\n    &lt;item&gt;范张范张范张范张范张范张范张范张范张&lt;/item&gt;\n    &lt;item&gt;范鑫&lt;/item&gt;\n    &lt;item&gt;范旭&lt;/item&gt;\n    &lt;item&gt;范帅&lt;/item&gt;\n    &lt;item&gt;范哥&lt;/item&gt;\n&lt;/div&gt;</pre> <p>可以看出两段HTML结构和内容都是一样的，现在，对上下两端HTML设置不同的CSS样式，代码如下所示：</p> <pre>.flex-1 item {\n    flex: 1;\n}\n.flex-auto item {\n    flex: auto;\n}</pre> <p>结果就会看到如下图所示的布局效果。</p> <p><img src=\"https://image.zhangxinxu.com/image/blog/202010/6-43_flex-1-auto.png\" loading=\"lazy\" width=\"322\" height=\"231\" alt=\"flex:1和flex:auto的对比效果示意\" /></p> <p>上图鲜明地体现了<code>flex:1</code>和<code>flex:auto</code>的区别，虽然都是充分分配容器的尺寸，但是<code>flex:1</code>的尺寸表现更为内敛（优先牺牲自己的尺寸），<code>flex:auto</code>的尺寸表现则更为霸道（优先扩展自己的尺寸）。</p> <p>从某种程度上讲，<code>flex:1</code>的表现神似<code>table-layout:fixed</code>，<code>flex:auto</code>的表现神似<code>table-layout:auto</code>。</p> <h5>适合使用flex:1的场景</h5> <p>当希望元素充分利用剩余空间，同时不会侵占其他元素应有的宽度的时候，适合使用<code>flex:1</code>，这样的场景在Flex布局中非常的多。</p> <p>例如所有的等分列表，或者等比例列表都适合使用<code>flex:1</code>或者其他flex数值，适合的布局效果轮廓如下图所示。</p> <p><img src=\"https://image.zhangxinxu.com/image/blog/202010/6-54-insert-_flex-1-suitable.png\" loading=\"lazy\" width=\"416\" height=\"167\" alt=\"flex:1适合用在固定比例的列表中\" /></p> <p>以及适用于无规律布局中动态内容元素，我们不妨继续使用<code>flex:none</code>那里演示的例子进行说明。</p> <p>下面这段HTML和CSS代码下的按钮元素是换行显示的（就是前面出现过的按钮不换行的例子的HTML代码）。</p> <pre>&lt;div class=\"item\"&gt;\n    &lt;img src=\"1.jpg\"&gt;\n    &lt;p&gt;右侧按钮没有设置flex:none，表现为最小内容宽度。&lt;/p&gt;\n    &lt;button&gt;按钮&lt;/button&gt;\n&lt;/div&gt;</pre> <pre>.container {\n    display: flex;\n    padding: .5rem;\n    border: 1px solid lightgray;\n    background-color: #fff;\n}\nimg {\n    width: 3rem; height: 3rem;\n    margin-right: .5rem;\n}\nbutton {\n    align-self: center;\n    padding: 5px;\n    margin-left: .5rem;\n}</pre> <p>除了设置<code>&lt;button&gt;</code>元素<code>flex:none</code>以外，在这个例子中，我们还可以设置<code>&lt;p&gt;</code>元素<code>flex:1</code>实现类似的效果。</p> <pre>p {\n    flex: 1;\n}</pre> <p>结果就有如下图所示，<code>&lt;p&gt;</code>元素设置了<code>flex:1</code>之后，按钮元素正常显示了。</p> <p><img src=\"https://image.zhangxinxu.com/image/blog/202010/6-56-insert-_flex-1-suitable2.png\" loading=\"lazy\" width=\"400\" height=\"186\" alt=\"主体动态的文本元素设置flex:1之后的效果对比示意\" /></p> <h5>适合使用flex:auto的场景</h5> <p>当希望元素充分利用剩余空间，但是各自的尺寸按照各自内容进行分配的时候，适合使用<code>flex:auto</code>。</p> <p><code>flex:auto</code>多用于内容固定，或者内容可控的布局场景，例如导航数量不固定，每个导航文字数量也不固定的导航效果就适合使用<code>flex:auto</code>效果来实现，我做了个很简单的示意，代码如下所示：</p> <pre>&lt;nav class=\"flex\"&gt;\n  &lt;span&gt;首页&lt;/span&gt;\n  &lt;span&gt;排行榜&lt;/span&gt;\n  &lt;span&gt;我的订单&lt;/span&gt;\n  &lt;span&gt;个人中心&lt;/span&gt;\n&lt;/nav&gt;</pre> <pre>nav span {\n    <strong>flex: auto;</strong>\n    line-height: 3rem;\n    background: #444;\n    color: #fff;\n    text-align:center;\n}\nspan + span {\n    border-left: 1px solid #eee;\n}</pre> <p>此时大家就可以看到一个基于内容自动分配宽度的自适应导航效果了，效果如下图所示，文字越多的导航占据的宽度越大，这完全是浏览器自动分配的。</p> <p><img src=\"https://image.zhangxinxu.com/image/blog/202010/6-57-insert-_flex-auto-suitable.png\" loading=\"lazy\" width=\"414\" height=\"49\" alt=\"flex:auto实现的基于内容宽度自动分配的导航效果示意\" /></p> <h3>三、最后总结一下</h3> <p>最后总结一下：</p> \n <ul> \n  <li><code>flex:initial</code>表示默认的flex状态，无需专门设置，适合小控件元素的分布布局，或者某一项内容动态变化的布局；</li> \n  <li><code>flex:0</code>适用场景较少，适合设置在替换元素的父元素上；</li> \n  <li><code>flex:none</code>适用于不换行的内容固定或者较少的小控件元素上，如按钮。</li> \n  <li><code>flex:1</code>适合等分布局；</li> \n  <li><code>flex:auto</code>适合基于内容动态适配的布局；</li> \n </ul> <p>以上就是本文内容，写于2020年国庆，部分内容节选自明年会出版的新书《CSS新世界》。</p> <p>感谢您的阅读，如果您觉得本文内容还不错，欢迎分享。</p> <p><img src=\"https://image.zhangxinxu.com/image/emtion/emoji/1f618.svg\" width=\"20\" height=\"20\" align=\"absmiddle\" /></p> <p>本文为原创文章，欢迎分享，勿全文转载，如果实在喜欢，可收藏，永不过期，且会及时更新知识点及修正错误，阅读体验也更好。<br /> 本文地址：<a href=\"https://www.zhangxinxu.com/wordpress/?p=9541\">https://www.zhangxinxu.com/wordpress/?p=9541</a></p> <p>（本篇完）</p> </p>","descriptionType":"html","publishedDate":"Tue, 06 Oct 2020 05:21:29 +0000","feedId":5706,"bgimg":"https://image.zhangxinxu.com/image/blog/202010/flex-0-1-none-cover.png","linkMd5":"747d07146b44885392382d633bec0298","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn49@2020_4/2020/10/09/04-17-20-921_610d22331ddfc309.webp","destWidth":484,"destHeight":303,"sourceBytes":7802,"destBytes":3774,"author":"张 鑫旭","articleImgCdnMap":{"https://image.zhangxinxu.com/image/blog/202010/flex-0-1-none-cover.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn49@2020_4/2020/10/09/04-17-20-921_610d22331ddfc309.webp","https://image.zhangxinxu.com/image/blog/202009/6-39-insert_flex-initial2.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn82@2020_4/2020/10/09/04-17-22-820_7b1245a6d7718e68.webp","https://image.zhangxinxu.com/image/blog/202005/6-39_flex-initial.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn57@2020_2/2020/10/09/04-17-22-751_246104d8876105b7.webp","https://image.zhangxinxu.com/image/blog/202005/6-40_flex-initial-less.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn92@2020_4/2020/10/09/04-17-22-184_222cea67bc9c9ebe.webp","https://image.zhangxinxu.com/image/blog/202005/6-41_flex-initial-more.png":null,"https://image.zhangxinxu.com/image/blog/202010/6-45-insert_flex-initial-situable2.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn53@2020_3/2020/10/09/04-17-22-626_86732ba5820aab93.webp","https://image.zhangxinxu.com/image/blog/202010/6-45-insert_flex-initial-suitable2.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn96@2020_4/2020/10/09/04-17-22-464_314f21205efdabd2.webp","https://image.zhangxinxu.com/image/blog/202010/6-44_flex-0-none.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn86@2020_6/2020/10/09/04-17-23-728_4c1d36d57afc628a.webp","https://image.zhangxinxu.com/image/blog/202010/6-45_flex-0-none.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn5@2020_2/2020/10/09/04-17-22-712_e9cb62627165ec65.webp","https://image.zhangxinxu.com/image/blog/202010/6-49-insert_flex-0-suitable2.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn78@2020_6/2020/10/09/04-17-33-609_2897474737bc4270.webp","https://image.zhangxinxu.com/image/blog/202010/6-50-insert_flex-none-suitable.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn66@2020_4/2020/10/09/04-17-24-619_de4179ed4205dab0.webp","https://image.zhangxinxu.com/image/blog/202010/6-53-_flex-1-auto-replace.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn61@2020_1/2020/10/09/04-17-23-256_c08377915f9bf945.webp","https://image.zhangxinxu.com/image/blog/202010/6-43_flex-1-auto.png":null,"https://image.zhangxinxu.com/image/blog/202010/6-54-insert-_flex-1-suitable.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn74@2020_4/2020/10/09/04-17-22-255_5680536ac4d3af7a.webp","https://image.zhangxinxu.com/image/blog/202010/6-56-insert-_flex-1-suitable2.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn99@2020_5/2020/10/09/04-17-33-577_cd5bf9218e04815c.webp","https://image.zhangxinxu.com/image/blog/202010/6-57-insert-_flex-auto-suitable.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn4@2020_1/2020/10/09/04-17-21-746_142510fa25caa4e7.webp","https://image.zhangxinxu.com/image/emtion/emoji/1f618.svg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn9@2020_5/2020/10/09/04-17-22-255_ab0051cdab5c9258.svg"},"publishedOrCreatedDate":1602217028268}],"record":{"createdTime":"2020-10-09 12:17:08","updatedTime":"2020-10-09 12:17:08","feedId":5706,"fetchDate":"Fri, 09 Oct 2020 04:17:08 +0000","fetchMs":4234,"handleMs":68,"totalMs":30824,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"08cc7d7b1ce844c0994701dd817046a1","hostName":"us-036*","requestId":"b199d9514e3643d990f120fcabdddc14_5706","contentType":"application/rss+xml; charset=UTF-8","totalBytes":149976,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":17,"articlesImgsGithubTotal":15,"successGithubMap":{"myreaderx8":1,"myreaderx15":1,"myreaderx6":1,"myreaderx27":1,"myreaderx10":1,"myreaderx4":1,"myreaderx32":1,"myreaderx22":1,"myreaderx12":1,"myreaderx13":1,"myreaderx30":1,"myreaderx31":1,"myreaderx18":1,"myreaderx29":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}},"feed":{"createdTime":"2020-08-25 04:30:15","updatedTime":"2020-09-01 11:15:46","id":5706,"name":"张鑫旭-鑫空间-鑫生活","url":"http://www.zhangxinxu.com/wordpress/feed/","subscriber":null,"website":null,"icon":"https://www.zhangxinxu.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn89@2020_1/2020/09/01/03-15-46-738_9a339309f46b07b8.ico","description":"提高前端技术，先从使用谷歌搜索做起","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-10-09 12:17:34","updatedTime":"2020-10-09 12:17:34","id":null,"feedId":5706,"linkMd5":"747d07146b44885392382d633bec0298"}],"tmpCommonImgCdnBytes":3774,"tmpBodyImgCdnBytes":146202,"tmpBgImgCdnBytes":0,"extra4":{"start":1602217023550,"total":0,"statList":[{"spend":4651,"msg":"获取xml内容"},{"spend":68,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":12705,"msg":"正文链接上传到cdn"}]},"extra5":17,"extra6":17,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202005/6-41_flex-initial-more.png","sourceStatusCode":200,"destWidth":359,"destHeight":183,"sourceBytes":3913,"destBytes":24334,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":715,"convertSpendMs":20,"createdTime":"2020-10-09 12:17:21","host":"us-54*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn70/contents/2020/10/09/04-17-22-377_6ebbe221e6b8be4f.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Oct 2020 04:17:22 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B54E:0C8E:273943:6DC873:5F7FE44C"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602217959"],"x-ratelimit-used":["68"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn70/contents/2020/10/09/04-17-22-377_6ebbe221e6b8be4f.webp","historyStatusCode":[],"spendMs":58},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.8 KB","destSize":"23.8 KB","compressRate":"621.9%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202005/6-41_flex-initial-more.png","sourceStatusCode":200,"destWidth":359,"destHeight":183,"sourceBytes":3913,"destBytes":24334,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":221,"convertSpendMs":76,"createdTime":"2020-10-09 12:17:22","host":"us-54*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn70/contents/2020/10/09/04-17-22-622_6ebbe221e6b8be4f.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Oct 2020 04:17:22 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B54E:0C8E:27394A:6DC8E9:5F7FE452"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602217959"],"x-ratelimit-used":["68"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn70/contents/2020/10/09/04-17-22-622_6ebbe221e6b8be4f.webp","historyStatusCode":[],"spendMs":53},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.8 KB","destSize":"23.8 KB","compressRate":"621.9%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/6-43_flex-1-auto.png","sourceStatusCode":200,"destWidth":322,"destHeight":231,"sourceBytes":4890,"destBytes":15462,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1100,"convertSpendMs":10,"createdTime":"2020-10-09 12:17:21","host":"us-039*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn89/contents/2020/10/09/04-17-22-773_da372b9380467e6d.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Oct 2020 04:17:22 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["EB88:3C91:82C20D:14135F2:5F7FE450"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602217950"],"x-ratelimit-used":["75"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn89/contents/2020/10/09/04-17-22-773_da372b9380467e6d.webp","historyStatusCode":[],"spendMs":52},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.8 KB","destSize":"15.1 KB","compressRate":"316.2%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/6-43_flex-1-auto.png","sourceStatusCode":200,"destWidth":322,"destHeight":231,"sourceBytes":4890,"destBytes":15462,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":413,"convertSpendMs":7,"createdTime":"2020-10-09 12:17:22","host":"us-039*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn89/contents/2020/10/09/04-17-23-195_da372b9380467e6d.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 09 Oct 2020 04:17:23 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["EB88:3C91:82C21F:14136FE:5F7FE452"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602217950"],"x-ratelimit-used":["75"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn89/contents/2020/10/09/04-17-23-195_da372b9380467e6d.webp","historyStatusCode":[],"spendMs":54},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.8 KB","destSize":"15.1 KB","compressRate":"316.2%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-039.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-007.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe66.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-015.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe70.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-038.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-54.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-019.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-003.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-040.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/flex-0-1-none-cover.png","sourceStatusCode":200,"destWidth":484,"destHeight":303,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn49@2020_4/2020/10/09/04-17-20-921_610d22331ddfc309.webp","sourceBytes":7802,"destBytes":3774,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1790,"convertSpendMs":8,"createdTime":"2020-10-09 12:17:19","host":"us-040*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298,747d07146b44885392382d633bec0298","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.6 KB","destSize":"3.7 KB","compressRate":"48.4%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/6-57-insert-_flex-auto-suitable.png","sourceStatusCode":200,"destWidth":414,"destHeight":49,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn4@2020_1/2020/10/09/04-17-21-746_142510fa25caa4e7.webp","sourceBytes":928,"destBytes":1784,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":834,"convertSpendMs":5,"createdTime":"2020-10-09 12:17:21","host":"us-040*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"928 B","destSize":"1.7 KB","compressRate":"192.2%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202005/6-40_flex-initial-less.png","sourceStatusCode":200,"destWidth":331,"destHeight":95,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn92@2020_4/2020/10/09/04-17-22-184_222cea67bc9c9ebe.webp","sourceBytes":3381,"destBytes":9556,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1276,"convertSpendMs":7,"createdTime":"2020-10-09 12:17:21","host":"us-034*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.3 KB","destSize":"9.3 KB","compressRate":"282.6%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/6-54-insert-_flex-1-suitable.png","sourceStatusCode":200,"destWidth":416,"destHeight":167,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn74@2020_4/2020/10/09/04-17-22-255_5680536ac4d3af7a.webp","sourceBytes":1460,"destBytes":6668,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1314,"convertSpendMs":4,"createdTime":"2020-10-09 12:17:21","host":"us-031*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.4 KB","destSize":"6.5 KB","compressRate":"456.7%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/emtion/emoji/1f618.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn9@2020_5/2020/10/09/04-17-22-255_ab0051cdab5c9258.svg","sourceBytes":2020,"destBytes":2020,"feedId":5706,"totalSpendMs":1309,"convertSpendMs":0,"createdTime":"2020-10-09 12:17:21","host":"us-038*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2 KB","destSize":"2 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/6-45-insert_flex-initial-situable2.png","sourceStatusCode":200,"destWidth":416,"destHeight":164,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn53@2020_3/2020/10/09/04-17-22-626_86732ba5820aab93.webp","sourceBytes":2397,"destBytes":6506,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1652,"convertSpendMs":5,"createdTime":"2020-10-09 12:17:21","host":"us-027*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.3 KB","destSize":"6.4 KB","compressRate":"271.4%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/6-45-insert_flex-initial-suitable2.png","sourceStatusCode":200,"destWidth":415,"destHeight":110,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn96@2020_4/2020/10/09/04-17-22-464_314f21205efdabd2.webp","sourceBytes":2072,"destBytes":1936,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1650,"convertSpendMs":18,"createdTime":"2020-10-09 12:17:21","host":"us-022*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2 KB","destSize":"1.9 KB","compressRate":"93.4%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202005/6-39_flex-initial.png","sourceStatusCode":200,"destWidth":283,"destHeight":143,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn57@2020_2/2020/10/09/04-17-22-751_246104d8876105b7.webp","sourceBytes":11352,"destBytes":7552,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1781,"convertSpendMs":5,"createdTime":"2020-10-09 12:17:21","host":"us-015*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"11.1 KB","destSize":"7.4 KB","compressRate":"66.5%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202009/6-39-insert_flex-initial2.png","sourceStatusCode":200,"destWidth":1172,"destHeight":315,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn82@2020_4/2020/10/09/04-17-22-820_7b1245a6d7718e68.webp","sourceBytes":27068,"destBytes":40858,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1925,"convertSpendMs":26,"createdTime":"2020-10-09 12:17:21","host":"us-007*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.4 KB","destSize":"39.9 KB","compressRate":"150.9%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/6-45_flex-0-none.png","sourceStatusCode":200,"destWidth":445,"destHeight":231,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn5@2020_2/2020/10/09/04-17-22-712_e9cb62627165ec65.webp","sourceBytes":5792,"destBytes":16588,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":1773,"convertSpendMs":7,"createdTime":"2020-10-09 12:17:21","host":"europe-60*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.7 KB","destSize":"16.2 KB","compressRate":"286.4%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/6-53-_flex-1-auto-replace.png","sourceStatusCode":200,"destWidth":276,"destHeight":249,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn61@2020_1/2020/10/09/04-17-23-256_c08377915f9bf945.webp","sourceBytes":22203,"destBytes":11470,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":2421,"convertSpendMs":20,"createdTime":"2020-10-09 12:17:21","host":"us-003*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.7 KB","destSize":"11.2 KB","compressRate":"51.7%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/6-44_flex-0-none.png","sourceStatusCode":200,"destWidth":277,"destHeight":235,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn86@2020_6/2020/10/09/04-17-23-728_4c1d36d57afc628a.webp","sourceBytes":20879,"destBytes":11998,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":3028,"convertSpendMs":5,"createdTime":"2020-10-09 12:17:21","host":"europe70*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.4 KB","destSize":"11.7 KB","compressRate":"57.5%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/6-50-insert_flex-none-suitable.png","sourceStatusCode":200,"destWidth":400,"destHeight":188,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn66@2020_4/2020/10/09/04-17-24-619_de4179ed4205dab0.webp","sourceBytes":23078,"destBytes":12044,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":3870,"convertSpendMs":5,"createdTime":"2020-10-09 12:17:21","host":"europe66*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.5 KB","destSize":"11.8 KB","compressRate":"52.2%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/6-49-insert_flex-0-suitable2.png","sourceStatusCode":200,"destWidth":416,"destHeight":209,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn78@2020_6/2020/10/09/04-17-33-609_2897474737bc4270.webp","sourceBytes":4672,"destBytes":5040,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":12620,"convertSpendMs":18,"createdTime":"2020-10-09 12:17:21","host":"us-019*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.6 KB","destSize":"4.9 KB","compressRate":"107.9%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202010/6-56-insert-_flex-1-suitable2.png","sourceStatusCode":200,"destWidth":400,"destHeight":186,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn99@2020_5/2020/10/09/04-17-33-577_cd5bf9218e04815c.webp","sourceBytes":23076,"destBytes":12182,"targetWebpQuality":75,"feedId":5706,"totalSpendMs":12640,"convertSpendMs":14,"createdTime":"2020-10-09 12:17:21","host":"us-010*","referer":"https://www.zhangxinxu.com/wordpress/?p=9541","linkMd5ListStr":"747d07146b44885392382d633bec0298","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.5 KB","destSize":"11.9 KB","compressRate":"52.8%"}],"successGithubMap":{"myreaderx8":1,"myreaderx15":1,"myreaderx6":1,"myreaderx27":1,"myreaderx10":1,"myreaderx4":1,"myreaderx32":1,"myreaderx22":1,"myreaderx12":1,"myreaderx13":1,"myreaderx30":1,"myreaderx31":1,"myreaderx18":1,"myreaderx29":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}}