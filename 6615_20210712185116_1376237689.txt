{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-07-13 02:51:05","updatedTime":"2021-07-13 02:51:05","title":"走进chrome内心，了解V8引擎是如何工作的","link":"https://segmentfault.com/a/1190000040331440","description":"<p>作为一个前端程序员，每天上班的第一件事就是打开电脑，不由自主的点开<code>chrome</code>浏览器，或是摸会儿鱼或是立马进入工作状态。接下来浏览器窗口就会陪伴着你度过一天的时光，正常到七八点钟，晚点就九十点钟，再晚点就陪你跨过一天，时刻关注着你的工作。作为一个忠诚陪伴你的伙伴，你扪心自问，你有认真的了解过它是如何工作的吗？你有走进过它的内心世界吗？</p>\n<p>如果你也好奇过，那么请收看这期的《走进chrome内心，了解V8引擎是如何工作的》。</p>\n<h3>V8是什么</h3>\n<p>在深入了解一件事物之前，首先要知道它是什么。</p>\n<p><code>V8</code>是一个由<code>Google</code>开源的采用<code>C++</code>编写的高性能<code>JavaScript</code>和<code>WebAssembly</code>引擎，应用在 <code>Chrome</code>和<code>Node.js</code>等中。它实现了<code>ECMAScript</code>和<code>WebAssembly</code>，运行在<code>Windows 7</code>及以上、<code>macOS 10.12+</code>以及使用<code>x64、IA-32、ARM</code>或<code>MIPS</code>处理器的<code>Linux</code>系统上。 <code>V8</code>可以独立运行，也可以嵌入到任何<code>C++</code>应用程序中。</p>\n<h3>V8由来</h3>\n<p>接下来我们来关心关心它如何诞生的，以及为什么叫这个名字。</p>\n<p>V8最初是由<code>Lars Bak</code>团队开发的，以汽车的<code>V8</code>发动机（有八个气缸的V型发动机）进行命名，预示着这将是一款性能极高的<code>JavaScript</code>引擎，在<code>2008年9月2号</code>同<code>chrome</code>一同开源发布。</p>\n<h3>为什么需要V8</h3>\n<p>我们写的<code>JavaScript</code>代码最终是要在机器中被执行的，但机器无法直接识别这些高级语言。需要经过一系列的处理，将高级语言转换成机器可以识别的的指令，也就是二进制码，交给机器执行。这中间的转换过程就是<code>V8</code>的具体工作。</p>\n<p>接下来我们就来详细的了解一下。</p>\n<h3>V8组成</h3>\n<p>首先来看一下<code>V8</code>的内部组成。<code>V8</code>的内部有很多模块，其中最重要的4个如下：</p>\n<ul>\n <li><strong>Parser</strong>: 解析器，负责将源代码解析成<code>AST</code></li>\n <li><strong>Ignition</strong>: 解释器，负责将<code>AST</code>转换成字节码并执行，同时会标记热点代码</li>\n <li><strong>TurboFan</strong>: 编译器，负责将热点代码编译成机器码并执行</li>\n <li><strong>Orinoco</strong>: 垃圾回收器，负责进行内存空间回收</li>\n</ul>\n<h3>V8工作流程</h3>\n<p>以下是<code>V8</code>中几个重要模块的具体工作流程图。我们逐个分析。</p>\n<p><img src=\"https://segmentfault.com/img/remote/1460000040331442\" alt=\"V8工作流程.png\" title=\"V8工作流程.png\" /></p>\n<h4>Parser解析器</h4>\n<p>Parser解析器负责将源代码转换成抽象语法树<code>AST</code>。在转换过程中有两个重要的阶段：<code>词法分析（Lexical Analysis）</code>和<code>语法分析（Syntax Analysis）</code>。</p>\n<h5>词法分析</h5>\n<p>也称为分词，是将字符串形式的代码转换为标记（token）序列的过程。这里的<code>token</code>是一个字符串，是构成源代码的最小单位，类似于英语中单词。词法分析也可以理解成将英文字母组合成单词的过程。词法分析过程中不会关心单词之间的关系。比如：词法分析过程中能够将括号标记成<code>token</code>，但并不会校验括号是否匹配。</p>\n<p><code>JavaScript</code>中的<code>token</code>主要包含以下几种：</p>\n<blockquote>\n <p>关键字：var、let、const等</p>\n <p>标识符：没有被引号括起来的连续字符，可能是一个变量，也可能是 if、else 这些关键字，又或者是 true、false 这些内置常量</p>\n <p>运算符： +、-、 *、/ 等</p>\n <p>数字：像十六进制，十进制，八进制以及科学表达式等</p>\n <p>字符串：变量的值等</p>\n <p>空格：连续的空格，换行，缩进等</p>\n <p>注释：行注释或块注释都是一个不可拆分的最小语法单元</p>\n <p>标点：大括号、小括号、分号、冒号等</p>\n</blockquote>\n<p>以下是<code>const a = 'hello world'</code>经过<code>esprima</code>词法分析后生成的<code>tokens</code>。</p>\n<pre><code>[\n    {\n        \"type\": \"Keyword\",\n        \"value\": \"const\"\n    },\n    {\n        \"type\": \"Identifier\",\n        \"value\": \"a\"\n    },\n    {\n        \"type\": \"Punctuator\",\n        \"value\": \"=\"\n    },\n    {\n        \"type\": \"String\",\n        \"value\": \"'hello world'\"\n    }\n]</code></pre>\n<h5>语法分析</h5>\n<p>语法分心是将词法分析产生的<code>token</code>按照某种给定的形式文法转换成<code>AST</code>的过程。也就是把单词组合成句子的过程。在转换过程中会验证语法，语法如果有错的话，会抛出语法错误。</p>\n<p>上述<code>const a = 'hello world'</code>经过语法分析后生成的<code>AST</code>如下：</p>\n<pre><code>{\n  \"type\": \"Program\",\n  \"body\": [\n    {\n      \"type\": \"VariableDeclaration\",\n      \"declarations\": [\n        {\n          \"type\": \"VariableDeclarator\",\n          \"id\": {\n            \"type\": \"Identifier\",\n            \"name\": \"a\"\n          },\n          \"init\": {\n            \"type\": \"Literal\",\n            \"value\": \"hello world\",\n            \"raw\": \"'hello world'\"\n          }\n        }\n      ],\n      \"kind\": \"const\"\n    }\n  ],\n  \"sourceType\": \"script\"\n}</code></pre>\n<p>经过<code>Parser</code>解析器生成的<code>AST</code>将交由<code>Ignition</code>解释器进行处理。</p>\n<h4>Ignition解释器</h4>\n<p>Ignition解释器负责将<code>AST</code>转换成字节码（Bytecode）并执行。字节码是介于<code>AST</code>和机器码之间的一种代码，与特定类型的机器代码无关，需要通过解释器转换成机器码才可以执行。</p>\n<p>看到这里想必大家都有疑惑，既然字节码也需要转换成机器码才能运行，那一开始为什么不直接将<code>AST</code>转换成机器码直接运行呢？转换成机器码直接运行速度肯定更快，那为什么还要加一个中间过程呢？</p>\n<p>其实在<code>V8</code>的<code>5.9</code>版本之前是没有字节码的，而是直接将JS代码编译成机器码并将机器码存储到内存中，这样就占用了大量的内存，而早期的手机内存都不高，过度的占用会导致手机性能大大的下降；而且直接编译成机器码导致编译时间长，启动速度慢；再者直接将JS代码转换成机器码需要针对不同的<code>CPU</code>架构编写不同的指令集，复杂度很高。</p>\n<p><code>5.9</code>版本以后引入了字节码，可以解决上述内存占用大、启动时间长、代码复杂度高这几个问题。</p>\n<p>接下来我们来看看<code>Ignition</code>是如何将<code>AST</code>转换成字节码的。</p>\n<p>下图是<code>Ignition</code>解释器的工作流程图。<code>AST</code>需要先通过字节码生成器，再经过一系列的优化之后才能生成字节码。</p>\n<p><img src=\"https://segmentfault.com/img/remote/1460000040331443\" alt=\"ignation.png\" title=\"ignation.png\" /></p>\n<p>其中的优化包括：</p>\n<ul>\n <li><strong>Register Optimizer</strong>：主要是避免寄存器不必要的加载和存储</li>\n <li><strong>Peephole Optimizer</strong>：寻找字节码中可以复用的部分，并进行合并</li>\n <li><strong>Dead-code Elimination</strong>： 删除无用的代码，减少字节码的大小</li>\n</ul>\n<p>将代码转换成字节码后就可以通过解释器执行了。<code>Ignition</code>在执行的过程中，会监视代码的执行情况并记录执行信息，如函数的执行次数、每次执行函数时所传的参数等。</p>\n<p>当同一段代码被执行多次，就会被标记成热点代码。热点代码会交给<code>TurboFan</code>编译器进行处理。</p>\n<h3>TurboFan编译器</h3>\n<p><code>TurboFan</code>拿到<code>Ignition</code>标记的热点代码后，会先进行优化处理，然后将优化后字节码编译成更高效的机器码存储起来。下次再次执行相同代码时，会直接执行相应的机器码，这样就在很大程度上提升了代码的执行效率。</p>\n<p>当一段代码不再是热点代码后，<code>TurboFan</code>会进行去优化的过程，将优化编译后的机器码还原成字节码，将代码的执行权利交还给<code>Ignition</code>。</p>\n<p>现在我们来看一看具体的执行过程。</p>\n<p>以<code>sum += arr[i]</code>为例，由于<code>JS</code>是动态类型的语言，每次的<code>sum</code>和<code>arr[i]</code>都有可能是不同的类型，在执行这段代码时，<code>Ignition</code>每次都会检查<code>sum</code>和<code>arr[i]</code>的数据类型。当发现同样的代码被执行了多次时，就将其标记为热点代码，交给<code>TurboFan</code>。</p>\n<p><code>TurboFan</code>在执行时，如果每次都判断<code>sum</code>和<code>arr[i]</code>的数据类型是很浪费时间的。因此在优化时，会根据之前的几次执行确定<code>sum</code>和<code>arr[i]</code>的数据类型，将其编译成机器码。下次再执行时，省去了判断数据类型的过程。</p>\n<p>但如果在后续的执行过程中，<code>arr[i]</code>的数据类型发生了改变，之前生成的机器码就不满足要求了，<code>TurboFan</code>会把之前生成的机器码丢弃，将执行权利再交给<code>Ignition</code>，完成去优化的过程。</p>\n<p>热点代码：<br><img src=\"https://segmentfault.com/img/remote/1460000040331444\" alt=\"image.png\" title=\"image.png\" /></br></p>\n<p>优化前：<br><img src=\"https://segmentfault.com/img/remote/1460000040331445\" alt=\"image.png\" title=\"image.png\" /></br></p>\n<p>优化后：<br><img src=\"https://segmentfault.com/img/remote/1460000040331446\" alt=\"image.png\" title=\"image.png\" /></br></p>\n<h3>总结</h3>\n<p>现在我们来总结一下<code>V8</code>的执行过程：</p>\n<ol>\n <li>源代码经过<code>Parser</code>解析器，经过词法分析和语法分析生成<code>AST</code></li>\n <li><code>AST</code>经过<code>Ignition</code>解释器生成字节码并执行</li>\n <li>在执行过程中，如果发现热点代码，将热点代码交给<code>TurboFan</code>编译器生成机器码并执行</li>\n <li>如果热点代码不再满足要求，进行去优化处理</li>\n</ol>\n<p>这种字节码与解释器和编译器结合的技术，就是我们通常所说的即时编译(<code>JIT</code>)。</p>\n<p>本文并没有介绍垃圾回收器<code>Orinoco</code>，<code>V8</code>的垃圾回收机制可以单独用一篇文章来详细介绍，我们下期再见。</p>\n<h3>参考文章</h3>\n<ol>\n <li><a href=\"https://v8.dev/docs\" rel=\"nofollow noreferrer\">V8官方文档</a></li>\n <li><a href=\"https://v8.dev/blog/10-years\" rel=\"nofollow noreferrer\">Celebrating 10 years of V8</a></li>\n <li><a href=\"https://zhuanlan.zhihu.com/p/96502646\" rel=\"nofollow noreferrer\">V8是如何执行JavaScript代码的？</a></li>\n <li><a href=\"https://docs.google.com/presentation/d/1OqjVqRhtwlKeKfvMdX6HaCIu9wpZsrzqpIVIwQSuiXQ/edit#slide=id.g1453eb7f19_5_431\" rel=\"nofollow noreferrer\">Ignition: An Interpreter for V8</a></li>\n <li><a href=\"https://zh.wikipedia.org/wiki/%E5%8D%B3%E6%99%82%E7%B7%A8%E8%AD%AF\" rel=\"nofollow noreferrer\">即时编译</a></li>\n</ol>","descriptionType":"html","publishedDate":"Mon, 12 Jul 2021 02:19:01 +0000","feedId":6615,"bgimg":"https://segmentfault.com/img/remote/1460000040331442","linkMd5":"321904c8d548e96ba2cdac3a07510189","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn26@2020_6/2021/07/12/18-51-12-042_7abd755ee48e5ab4.webp","destWidth":732,"destHeight":376,"sourceBytes":29870,"destBytes":29870,"author":"阳呀呀","articleImgCdnMap":{"https://segmentfault.com/img/remote/1460000040331442":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn26@2020_6/2021/07/12/18-51-12-042_7abd755ee48e5ab4.webp","https://segmentfault.com/img/remote/1460000040331443":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn32@2020_3/2021/07/12/18-51-15-210_eb4db36d58065415.webp","https://segmentfault.com/img/remote/1460000040331444":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn30@2020_4/2021/07/12/18-51-14-897_d0868a2565384e3e.webp","https://segmentfault.com/img/remote/1460000040331445":null,"https://segmentfault.com/img/remote/1460000040331446":null},"publishedOrCreatedDate":1626115865951}],"record":{"createdTime":"2021-07-13 02:51:05","updatedTime":"2021-07-13 02:51:05","feedId":6615,"fetchDate":"Mon, 12 Jul 2021 18:51:05 +0000","fetchMs":3081,"handleMs":47,"totalMs":34455,"newArticles":0,"totalArticles":50,"status":1,"type":0,"ip":"79b59b7ab14b8d981e3d8a220e20848a","hostName":"us-032*","requestId":"0bd5630f8f704b73bb6140c84b8ae597_6615","contentType":"application/atom+xml; charset=UTF-8","totalBytes":69214,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":5,"articlesImgsGithubTotal":3,"successGithubMap":{"myreaderx21":1,"myreaderx22":1,"myreaderx19":1},"failGithubMap":{"myreaderx14":1,"myreaderx31":1}},"feed":{"createdTime":"2020-08-25 04:33:08","updatedTime":"2021-04-03 14:32:14","id":6615,"name":"SegmentFault 最新的文章","url":"http://segmentfault.com/feeds/blogs","subscriber":null,"website":null,"icon":"https://segmentfault.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn75@2020_2/2021/04/03/06-32-08-760_eb238dca7c8e9f0e.jpg","description":"","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-07-13 02:51:16","updatedTime":"2021-07-13 02:51:16","id":null,"feedId":6615,"linkMd5":"321904c8d548e96ba2cdac3a07510189"}],"tmpCommonImgCdnBytes":29870,"tmpBodyImgCdnBytes":39344,"tmpBgImgCdnBytes":0,"extra4":{"start":1626115842159,"total":0,"statList":[{"spend":23745,"msg":"获取xml内容"},{"spend":47,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":4056,"msg":"正文链接上传到cdn"}]},"extra5":5,"extra6":5,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000040331445","sourceStatusCode":200,"destWidth":732,"destHeight":409,"sourceBytes":28786,"destBytes":28786,"feedId":6615,"totalSpendMs":2590,"convertSpendMs":0,"createdTime":"2021-07-13 02:51:12","host":"us-006*","referer":"https://segmentfault.com/a/1190000040331440","linkMd5ListStr":"321904c8d548e96ba2cdac3a07510189","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn40/contents/2021/07/12/18-51-15-065_3d366d95805702a7.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 12 Jul 2021 18:51:15 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CDBE:720A:5B78517:B6C4F81:60EC8F23"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1626118513"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["62"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn40/contents/2021/07/12/18-51-15-065_3d366d95805702a7.webp","historyStatusCode":[],"spendMs":89},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.1 KB","destSize":"28.1 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000040331446","sourceStatusCode":200,"destWidth":732,"destHeight":378,"sourceBytes":22450,"destBytes":22450,"feedId":6615,"totalSpendMs":2608,"convertSpendMs":0,"createdTime":"2021-07-13 02:51:12","host":"us-007*","referer":"https://segmentfault.com/a/1190000040331440","linkMd5ListStr":"321904c8d548e96ba2cdac3a07510189","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn37/contents/2021/07/12/18-51-15-140_594026999ec895bd.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 12 Jul 2021 18:51:15 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CF18:6BEB:1A41D75:4B56392:60EC8F23"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1626118516"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn37/contents/2021/07/12/18-51-15-140_594026999ec895bd.webp","historyStatusCode":[],"spendMs":31},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.9 KB","destSize":"21.9 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000040331445","sourceStatusCode":200,"destWidth":732,"destHeight":409,"sourceBytes":28786,"destBytes":28786,"feedId":6615,"totalSpendMs":1417,"convertSpendMs":0,"createdTime":"2021-07-13 02:51:15","host":"us-006*","referer":"https://segmentfault.com/a/1190000040331440","linkMd5ListStr":"321904c8d548e96ba2cdac3a07510189","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn40/contents/2021/07/12/18-51-16-543_3d366d95805702a7.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 12 Jul 2021 18:51:16 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CDBE:720A:5B785BD:B6C50D4:60EC8F24"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1626118513"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["62"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn40/contents/2021/07/12/18-51-16-543_3d366d95805702a7.webp","historyStatusCode":[],"spendMs":33},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.1 KB","destSize":"28.1 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000040331446","sourceStatusCode":200,"destWidth":732,"destHeight":378,"sourceBytes":22450,"destBytes":22450,"feedId":6615,"totalSpendMs":1432,"convertSpendMs":0,"createdTime":"2021-07-13 02:51:15","host":"us-007*","referer":"https://segmentfault.com/a/1190000040331440","linkMd5ListStr":"321904c8d548e96ba2cdac3a07510189","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn37/contents/2021/07/12/18-51-16-568_594026999ec895bd.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 12 Jul 2021 18:51:16 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CF18:6BEB:1A41D9B:4B5641A:60EC8F24"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1626118516"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["61"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn37/contents/2021/07/12/18-51-16-568_594026999ec895bd.webp","historyStatusCode":[],"spendMs":40},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.9 KB","destSize":"21.9 KB","compressRate":"100%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-006.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-007.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000040331442","sourceStatusCode":200,"destWidth":732,"destHeight":376,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn26@2020_6/2021/07/12/18-51-12-042_7abd755ee48e5ab4.webp","sourceBytes":29870,"destBytes":29870,"feedId":6615,"totalSpendMs":2665,"convertSpendMs":0,"createdTime":"2021-07-13 02:51:09","host":"europe66*","referer":"https://segmentfault.com/a/1190000040331440","linkMd5ListStr":"321904c8d548e96ba2cdac3a07510189,321904c8d548e96ba2cdac3a07510189","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.2 KB","destSize":"29.2 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000040331444","sourceStatusCode":200,"destWidth":732,"destHeight":406,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn30@2020_4/2021/07/12/18-51-14-897_d0868a2565384e3e.webp","sourceBytes":17876,"destBytes":17876,"feedId":6615,"totalSpendMs":2645,"convertSpendMs":0,"createdTime":"2021-07-13 02:51:12","host":"us-030*","referer":"https://segmentfault.com/a/1190000040331440","linkMd5ListStr":"321904c8d548e96ba2cdac3a07510189","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.5 KB","destSize":"17.5 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/remote/1460000040331443","sourceStatusCode":200,"destWidth":732,"destHeight":442,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn32@2020_3/2021/07/12/18-51-15-210_eb4db36d58065415.webp","sourceBytes":21468,"destBytes":21468,"feedId":6615,"totalSpendMs":2951,"convertSpendMs":0,"createdTime":"2021-07-13 02:51:12","host":"us-031*","referer":"https://segmentfault.com/a/1190000040331440","linkMd5ListStr":"321904c8d548e96ba2cdac3a07510189","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21 KB","destSize":"21 KB","compressRate":"100%"}],"successGithubMap":{"myreaderx21":1,"myreaderx22":1,"myreaderx19":1},"failGithubMap":{"myreaderx14":1,"myreaderx31":1}}