{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-10-01 10:15:56","updatedTime":"2021-10-01 10:15:56","title":"JS WeakMap应该什么时候使用","link":"https://www.zhangxinxu.com/wordpress/?p=10064","description":"<p>by <a href=\"https://www.zhangxinxu.com/\">zhangxinxu</a> from <a href=\"https://www.zhangxinxu.com/wordpress/?p=10064\">https://www.zhangxinxu.com/wordpress/?p=10064</a> 鑫空间-鑫生活<br /> 本文欢迎分享与聚合，全文转载就不必了，尊重版权，圈子就这么大，若急用可以联系授权。</p> \n<p><script>window.wxShareImgUrl = 'https://www.zhangxinxu.com/study/image/share/202108-weakmap.png';</script></p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202108/weakmap-cover.png\" width=\"481\" height=\"340\" alt=\"红梅葡萄占位图\" class=\"alignright clip thumb size-medium\" /></p> \n<h3>一、从哪里开始呢？</h3> \n<p>算了，还是先说结论吧。</p> \n<h3>二、WeakMap什么时候用？</h3> \n<p>首先，大家要明白，就算没有 WeakMap，JS的世界也是照常运转，WeakMap在JS世界的地位，就和其名称一样——“weak”，弱。</p> \n<p>属于那种有作用，但是并不在关键位置干大事的人，有点类似于一些CSS功能选择器，虽然使用更简单更方便，但是平常使用JS实现的交互效果挺好的，所以并不那么流行与普及。</p> \n<p>WeakMap的作用就是可以更有效的垃圾回收、释放内存。</p> \n<p>我们平常开发的Web应用都是如此的简单，就算代码很垃圾，吃了很多内存那又如何，页面照样流畅，用户照样无感知。</p> \n<p>所以，对于绝大多数开发者和应用程序而言，WeakMap的商业价值是很低的。</p> \n<p>这么一说，似乎WeakMap没什么好学的。</p> \n<p>其实不然。</p> \n<p>如果是超大型应用，或者用户基数庞大的产品，或者是服务器这种负载较高的场景，对于内存管理要求就很高，此时WeakMap的优势就可以体现。</p> \n<p>这其实有点悖论的味道在里面。</p> \n<p>上述所有需要用到WeakMap的场景都一定是需要资深前端开发参与的场景，而如果你连WeakMap都不知道，就谈不上资深，挑上面的大梁可能会闪着腰。</p> \n<p>也就是，你学会了WeakMap以及类似的JS知识点，才有机会参与必须要使用这些JS特性的项目中，完成自我价值的证明与贡献。</p> \n<p>所以，没有什么知识是没用的，只是时机的问题，所谓厚积薄发，就是这样一个意思。</p> \n<h4>垃圾？内存？</h4> \n<p>就内存管理而言，JS开发人员可以归为下面几种：</p> \n<ol> \n <li>内存？什么内存？我JS想怎么写就怎么写，运行不挺好的！反正浏览器页面关掉什么都没了。</li> \n <li>恩，这里这个对象之后没用了，我可以设置为null。意识是好的，设置也设置了，就是内存究竟有没有释放不得而知，看运气。</li> \n <li>这里设置null不行，因为对象在其他地方也引用了，其他引用的地方也要删除，属于理解比较深刻的，JS基本功很扎实的。</li> \n</ol> \n<p>举个大家比较容易懂的例子，已知页面中有个DOM元素，HTML结构如下：</p> \n<pre>&lt;img id=\"img\" src=\"https://bookcover.yuewen.com/qdbimg/349573/1027030348/180\"&gt;</pre> \n<p>然后，需要删除此DOM元素，小明是这么处理的：</p> \n<pre>var eleImage = document.getElementById('img');\neleImage.remove();</pre> \n<p>这个处理有没有什么问题？</p> \n<p>从效果上来看，完全解决了需求。</p> \n<p>但是实际上，虽然页面中的图片元素删除了，但是内存中的这个DOM对象依然存在的。</p> \n<p>我们不妨这样测试下：</p> \n<pre>var eleImage = document.getElementById('img');\neleImage.remove();\n\nsetTimeout(() =&gt; {\n  document.body.append(eleImage);\n}, 2000);</pre> \n<p>就会看到图片被删除了（如下GIF录屏），然后过了2秒钟又出现在了页面上，因为eleImage还在内存中，并未清除，不会被回收。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202108/image-append.gif\" width=\"241\" height=\"282\" alt=\"删除后2秒又出现\" class=\"alignnone size-medium\" /></p> \n<p>所以，如果确定eleImage不再需要，需要多执行一句，同时设为 null。</p> \n<pre>var eleImage = document.getElementById('img');\neleImage.remove();\neleImage = null;</pre> \n<p>这样，JS在执行垃圾回收的时候，就会把eleImage这个垃圾收回，释放内存。</p> \n<p>大家可以看看自己是不关心内存的那类JS开发，还是会注意释放不需要的内存的JS开发。</p> \n<p>OK，事情还没完，有时候，设置eleImage为<code>null</code>，并不能真正回收内存。</p> \n<p>例如实际开发，有时候需要记住初始的outerHTML字符，方便还原。为了和原始DOM产生关联，有些开发就把DOM元素和outerHTML字符串放在同一个数组中进行管理：</p> \n<pre>var eleImage = document.getElementById('img');\nvar storage = {\n    arrDom: [eleImage, eleImage.outerHTML]\n};\neleImage.remove();\neleImage = null;</pre> \n<p>此时，eleImage这个DOM对象其实还在内存中。因为 eleImage 被 <code>storage.arrDom</code> 引用了，即使eleImage设为<code>null</code>也无法将内存彻底释放。</p> \n<p>测试下：</p> \n<pre>var eleImage = document.getElementById('img');\nvar storage = {\n    arrDom: [eleImage, eleImage.outerHTML]\n};\neleImage.remove();\neleImage = null;\n\nsetTimeout(() =&gt; {\n  document.body.append(storage.arrDom[0]);\n}, 2000);</pre> \n<p>同样可以看到，图片被删除后，2秒后又出现了。</p> \n<p>这个还是看实时效果吧。</p> \n<p>点击后面的按钮查看效果：<button id=\"wmpFBtn\">点击我执行remove再定时显示~喵儿~</button></p> \n<div id=\"boxXXX\" style=\"height:260px;width:280px;padding:8px;border:1px solid gray;\">\n <img id=\"imgXX\" src=\"https://bookcover.yuewen.com/qdbimg/349573/1027030348/180\" />\n</div> \n<p><script> (function () { var button = document.getElementById('wmpFBtn'); var eleImage = document.getElementById('imgXX'); var box = document.getElementById('boxXXX'); var storage = {arrDom: [eleImage, eleImage.outerHTML]}; if (button) { button.onclick = function () { eleImage.remove(); eleImage = null; setTimeout(function() {box.appendChild(storage.arrDom[0]);}, 2000); } } })(); </script></p> \n<p>此时，要想完全把图像的内存释放，还需要执行下面这行：</p> \n<pre>storage.arrDom[0] = null;</pre> \n<p>大家试想下，如果是你，可以释放内存做到这一步吗？如果可以做到，那你就可以归类为资深的JS前端开发那一类了。</p> \n<p>但是，纯靠技术手段，人工识别哪些地方的内存要释放，实在是太累了。就算懂行的人有时候嫌麻烦，都懒得去管理，那有没有什么手段，我只要变量设为null，所有有引用的地方的内存都自动释放呢？</p> \n<p>这就可以考虑使用WeakMap了。</p> \n<p><span class=\"hidden\">//zxx: 如果你看到这段文字，说明你现在访问是体验糟糕的垃圾盗版网站，你可以访问原文获得很好的体验：https://www.zhangxinxu.com/wordpress/?p=10064（作者张鑫旭）</span></p> \n<h4>使用场景</h4> \n<p>上面的例子，如果使用WeakMap实现回是怎样的呢？</p> \n<p>代码说话：</p> \n<pre>var eleImage = document.getElementById('img');\nvar storeMap = new WeakMap();\nstoreMap.set(eleImage, eleImage.outerHTML);\neleImage.remove();\neleImage = null;</pre> \n<p>同样是缓存图片的outerHTML数据，但是这里使用了 WeakMap 对象，将 eleImage 作为一个弱键，这样，eleImage一旦设置为 null，所有相关的数据都会被释放。</p> \n<p>究竟内存释放没有，上面的例子不好测试，一是要借助工具，二是内存变化很小，看不出来。</p> \n<p><strong>更新于当日</strong><br /> 经过评论反馈，FinalizationRegistry是可以检测垃圾回收的执行，并触发相应的回调的。</p> \n<p>不过，我们可以使用Map对象对比下，如果是Map对象，<code>eleImage</code>作为键，那就是强引用，是一直在内存中的，例如：</p> \n<pre>var eleImage = document.getElementById('img');\nvar storeMap = new Map();\nstoreMap.set(eleImage, eleImage.outerHTML);\neleImage.remove();\neleImage = null;\n\nsetTimeout(() =&gt; {\n  document.body.append(storeMap.keys().next().value);\n}, 2000);</pre> \n<p>可以看到，虽然eleImage remove掉了，还设为了null，但是依然在内存中，可以append到页面中。</p> \n<p>根据上面的分析和描述，我们可以得出下面的结论。</p> \n<h4>结论</h4> \n<p>当我们需要在某个对象上临时存放数据的时候，请使用WeakMap，尤其对于JS理解不是很深刻的开发人员，更是如此，因为省心，不要关心经常挂在嘴边的“内存泄露”问题。</p> \n<p>因为到时候只需要删除该对象，所有相关的引用和关联的内存都会被释放。</p> \n<p>也就是，虽然我看不懂代码是怎么执行的，但是我这么写的，性能就是好，逼格就是高！</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202108/2021-08-15_104552.jpg\" width=\"320\" height=\"212\" alt=\"看不懂\" class=\"alignnone size-medium\" /></p> \n<h3>三、回到WeakMap语法本身</h3> \n<p>说了这么多，是时候介绍 WeakMap 语法的真身了。</p> \n<h4>语法</h4> \n<pre>let myWm = new WeakMap()</pre> \n<p>此时，myWm就是一个新的WeakMap对象，包括了下面这些方法：</p> \n<pre><span style=\"color:green;\">// 删除键</span>\nmyWm.delete(key);\n<span style=\"color:green;\">// 设置键和值</span>\nmyWm.set(key, value);\n<span style=\"color:green;\">// 是否包含某键</span>\nmyWm.has(key);\n<span style=\"color:green;\">// 获取键对应的值</span>\nmyWm.get(key);</pre> \n<h4>说明</h4> \n<ol> \n <li>key只能是对象，不能是原始数据类型（字符串、数字、true或false，null，undefined，symbol等类型）</li> \n <li>WeakMap中的键是无法枚举的</li> \n</ol> \n<p><strong>key只能是对象</strong></p> \n<p>下面的用法都是可以的：</p> \n<pre>myWm.set([], 1);\nmyWm.set(new Date(), '鑫空间');\nmyWm.set(()=&gt;{}, 1);\nmyWm.set(document.createElement('by-zhangxinxu'), 1);</pre> \n<p>但是如果key不是对象，而是字符串之类的基本类型，就会报错，例如：</p> \n<pre><span style=\"color:green;\">// 会报错</span>\nmyWm.set('css新世界', true);</pre> \n<p>此时会报下面的错误：</p> \n<blockquote>\n <p>“TypeError: Invalid value used as weak map key</p>\n</blockquote> \n<p>因此WeakMap适合用在在对象上临时缓存数据的场景。</p> \n<p><strong>key无法枚举</strong></p> \n<p>不同于Map对象，Map对象是可以枚举的，有<code>keys()</code>、<code>values()</code>、<code>entries()</code>方法，还可以使用<code>forEach</code>遍历。</p> \n<p>但是WeakMap无法枚举，WeakMap的这个特性也可以用来模拟私有属性。</p> \n<pre>const myWm = new WeakMap();\nclass Fish {\n    constructor(name) {\n        myWm.set(this, { \n            _fishbone: ['草鱼', '鲫鱼', '青鱼', '鲤鱼', '鲢鱼', '鳙鱼', '鳊鱼', '翘嘴', '餐条'],\n        });\n        this.name = name;\n    }\n\n    isBone() {\n        return myWm.get(this)._fishbone.includes(this.name);\n    }\n}\n\n<span style=\"color:green;\">// 测试，买了两条鱼</span>\nlet fish1 = new Fish('草鱼');\nlet fish2 = new Fish('回鱼');\n\n<span style=\"color:green;\">// 返回 true，有刺</span>\nconsole.log(fish1.isBone());\n<span style=\"color:green;\">// 返回 false，没有肌间刺</span>\nconsole.log(fish2.isBone());</pre> \n<p>上面的代码中，_fishbone虽然和Fish对象相关联，但是却无法通过Fish对象直接获取。</p> \n<p>如果不知道名称，也无法通过myWm遍历出来。</p> \n<p>关于WeakMap更详细的语法介绍和示意可参考MDN文档：<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\" rel=\"noopener\" target=\"_blank\">MDN WeakMap</a></p> \n<h3>四、结束语</h3> \n<p>考考大家，我昨天钓的下面3种鱼，哪种鱼有肌间刺，哪几种鱼没有肌间刺？</p> \n<p><img src=\"https://image.zhangxinxu.com/image/blog/202108/myfish-s.jpg\" width=\"240\" height=\"320\" alt=\"钓货\" class=\"alignnone size-medium\" /></p> \n<p>好，本文内容就上面这些。</p> \n<p>如果文中有表述不准确的地方，或者有所遗漏，欢迎指正。</p> \n<p>如果您觉得文章不错，也欢迎分享。</p> \n<p><img src=\"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg\" width=\"20\" height=\"20\" align=\"absmiddle\" /></p> \n<p>本文为原创文章，欢迎分享，勿全文转载，如果实在喜欢，可收藏，永不过期，且会及时更新知识点及修正错误，阅读体验也更好。<br /> 本文地址：<a href=\"https://www.zhangxinxu.com/wordpress/?p=10064\">https://www.zhangxinxu.com/wordpress/?p=10064</a></p> \n<p>（本篇完）</p>","descriptionType":"html","publishedDate":"Sun, 15 Aug 2021 04:40:49 +0000","feedId":3950,"bgimg":"https://image.zhangxinxu.com/image/blog/202108/weakmap-cover.png","linkMd5":"0493b4a598574bdda98fe8636e888f57","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn63@2020_5/2021/10/01/02-16-02-437_5d67f2c5f94d29b3.webp","destWidth":481,"destHeight":340,"sourceBytes":10158,"destBytes":5564,"author":"张 鑫旭","articleImgCdnMap":{"https://image.zhangxinxu.com/image/blog/202108/weakmap-cover.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn63@2020_5/2021/10/01/02-16-02-437_5d67f2c5f94d29b3.webp","https://image.zhangxinxu.com/image/blog/202108/image-append.gif":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn67@2020_6/2021/10/01/02-16-05-894_7f6ddf99b01f2f9c.webp","https://bookcover.yuewen.com/qdbimg/349573/1027030348/180":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn76@2020_2/2021/10/01/02-16-08-743_84ce2e944d9ef870.webp","https://image.zhangxinxu.com/image/blog/202108/2021-08-15_104552.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn81@2020_1/2021/10/01/02-17-04-864_cf2b0157c2a87528.webp","https://image.zhangxinxu.com/image/blog/202108/myfish-s.jpg":null,"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn72@2020_6/2021/10/01/02-16-05-095_345d3ecc932d1a40.svg"},"publishedOrCreatedDate":1633054556942}],"record":{"createdTime":"2021-10-01 10:15:56","updatedTime":"2021-10-01 10:15:56","feedId":3950,"fetchDate":"Fri, 01 Oct 2021 02:15:56 +0000","fetchMs":4555,"handleMs":21,"totalMs":73544,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"4cf9ab886509ef3fd2ece0a16b714d9c","hostName":"europe-56*","requestId":"2297edf6d021425880da28603b846b21_3950","contentType":"application/rss+xml; charset=UTF-8","totalBytes":46471,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":6,"articlesImgsGithubTotal":5,"successGithubMap":{"myreaderx7":1,"myreaderx32":1,"myreaderx3":1,"myreaderx30":1,"myreaderx5oss":1},"failGithubMap":{"myreaderx31":1}},"feed":{"createdTime":"2020-08-25 04:29:34","updatedTime":"2020-09-01 10:39:31","id":3950,"name":"张鑫旭-鑫空间-鑫生活","url":"http://www.zhangxinxu.com/wordpress/?feed=rss2","subscriber":null,"website":null,"icon":"https://www.zhangxinxu.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn11@2020_3/2020/09/01/02-39-31-993_9a339309f46b07b8.ico","description":"提高前端技术，先从使用谷歌搜索做起","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-10-01 10:17:05","updatedTime":"2021-10-01 10:17:05","id":null,"feedId":3950,"linkMd5":"0493b4a598574bdda98fe8636e888f57"}],"tmpCommonImgCdnBytes":5564,"tmpBodyImgCdnBytes":40907,"tmpBgImgCdnBytes":0,"extra4":{"start":1633054551889,"total":0,"statList":[{"spend":5033,"msg":"获取xml内容"},{"spend":21,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":62446,"msg":"正文链接上传到cdn"}]},"extra5":6,"extra6":6,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202108/myfish-s.jpg","sourceStatusCode":200,"destWidth":360,"destHeight":480,"sourceBytes":39979,"destBytes":23994,"targetWebpQuality":75,"feedId":3950,"totalSpendMs":3377,"convertSpendMs":55,"createdTime":"2021-10-01 10:16:03","host":"europe-23*","referer":"https://www.zhangxinxu.com/wordpress/?p=10064","linkMd5ListStr":"0493b4a598574bdda98fe8636e888f57","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn74/contents/2021/10/01/02-16-06-217_5496e33e9879d2b2.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 01 Oct 2021 02:16:06 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E7DE:1097C:10A5A4:11B79B:61566F66"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1633057692"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn74/contents/2021/10/01/02-16-06-217_5496e33e9879d2b2.webp","historyStatusCode":[],"spendMs":169},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39 KB","destSize":"23.4 KB","compressRate":"60%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202108/myfish-s.jpg","sourceStatusCode":200,"destWidth":360,"destHeight":480,"sourceBytes":39979,"destBytes":23994,"targetWebpQuality":75,"feedId":3950,"totalSpendMs":1420,"convertSpendMs":28,"createdTime":"2021-10-01 10:16:06","host":"us-009*","referer":"https://www.zhangxinxu.com/wordpress/?p=10064","linkMd5ListStr":"0493b4a598574bdda98fe8636e888f57","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx31/cdn74/contents/2021/10/01/02-16-07-817_5496e33e9879d2b2.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69855631.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Fri, 01 Oct 2021 02:16:07 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A72C:5287:12C13B7:268E93F:61566F67"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1633057692"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx31/cdn74/contents/2021/10/01/02-16-07-817_5496e33e9879d2b2.webp","historyStatusCode":[],"spendMs":41},"base64UserPassword":null,"token":"da243******************************d9e47"},"githubUser":"myreaderx31","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39 KB","destSize":"23.4 KB","compressRate":"60%"},null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202108/weakmap-cover.png","sourceStatusCode":200,"destWidth":481,"destHeight":340,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn63@2020_5/2021/10/01/02-16-02-437_5d67f2c5f94d29b3.webp","sourceBytes":10158,"destBytes":5564,"targetWebpQuality":75,"feedId":3950,"totalSpendMs":3451,"convertSpendMs":12,"createdTime":"2021-10-01 10:15:59","host":"europe69*","referer":"https://www.zhangxinxu.com/wordpress/?p=10064","linkMd5ListStr":"0493b4a598574bdda98fe8636e888f57,0493b4a598574bdda98fe8636e888f57","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.9 KB","destSize":"5.4 KB","compressRate":"54.8%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/emtion/emoji/2764.svg","sourceStatusCode":200,"destWidth":0,"destHeight":0,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn72@2020_6/2021/10/01/02-16-05-095_345d3ecc932d1a40.svg","sourceBytes":391,"destBytes":391,"feedId":3950,"totalSpendMs":2251,"convertSpendMs":0,"createdTime":"2021-10-01 10:16:03","host":"us-009*","referer":"https://www.zhangxinxu.com/wordpress/?p=10064","linkMd5ListStr":"0493b4a598574bdda98fe8636e888f57","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"391 B","destSize":"391 B","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202108/image-append.gif","sourceStatusCode":200,"destWidth":241,"destHeight":282,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn67@2020_6/2021/10/01/02-16-05-894_7f6ddf99b01f2f9c.webp","sourceBytes":48808,"destBytes":22996,"targetWebpQuality":75,"feedId":3950,"totalSpendMs":3444,"convertSpendMs":43,"createdTime":"2021-10-01 10:16:03","host":"europe-57*","referer":"https://www.zhangxinxu.com/wordpress/?p=10064","linkMd5ListStr":"0493b4a598574bdda98fe8636e888f57","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.7 KB","destSize":"22.5 KB","compressRate":"47.1%"},{"code":1,"isDone":false,"source":"https://bookcover.yuewen.com/qdbimg/349573/1027030348/180","sourceStatusCode":200,"destWidth":180,"destHeight":240,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn76@2020_2/2021/10/01/02-16-08-743_84ce2e944d9ef870.webp","sourceBytes":30328,"destBytes":10202,"targetWebpQuality":75,"feedId":3950,"totalSpendMs":5900,"convertSpendMs":4,"createdTime":"2021-10-01 10:16:03","host":"us-008*","referer":"https://www.zhangxinxu.com/wordpress/?p=10064","linkMd5ListStr":"0493b4a598574bdda98fe8636e888f57","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.6 KB","destSize":"10 KB","compressRate":"33.6%"},{"code":1,"isDone":false,"source":"https://image.zhangxinxu.com/image/blog/202108/2021-08-15_104552.jpg","sourceStatusCode":200,"destWidth":320,"destHeight":212,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn81@2020_1/2021/10/01/02-17-04-864_cf2b0157c2a87528.webp","sourceBytes":9535,"destBytes":7318,"targetWebpQuality":75,"feedId":3950,"totalSpendMs":2309,"convertSpendMs":4,"createdTime":"2021-10-01 10:17:03","host":"europe-57*","referer":"https://www.zhangxinxu.com/wordpress/?p=10064","linkMd5ListStr":"0493b4a598574bdda98fe8636e888f57","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.3 KB","destSize":"7.1 KB","compressRate":"76.7%"}],"successGithubMap":{"myreaderx7":1,"myreaderx32":1,"myreaderx3":1,"myreaderx30":1,"myreaderx5oss":1},"failGithubMap":{"myreaderx31":1}}