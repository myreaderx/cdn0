{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2022-03-14 16:21:10","updatedTime":"2022-03-14 16:21:10","title":"Java不支持协程？那是你不知道Quasar！","link":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%8D%8F%E7%A8%8B%EF%BC%9F%E9%82%A3%E6%98%AF%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93Quasar%EF%BC%81","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1x0nYJqMZsXJejpwrbzKyernicSgnVcYdpKCbMdzASTUWhUHAKNibeqMg/0?wx_fmt=jpeg%5Cx26amp;random=0.12509211302925483?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n                    \n                    \n                    <section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" style=\"color: black;letter-spacing: 0px;font-size: 16px;padding-right: 10px;padding-left: 10px;line-height: 1.6;word-break: break-word;overflow-wrap: break-word;text-align: left;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, \" pingfang sc cambria cochin georgia times new roman serif><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;text-align: justify;\">在编程语言的这个圈子里，各种语言之间的对比似乎就一直就没有停过，像什么古早时期的<strong>\"PHP是世界上最好的语言\"</strong>就不提了，最近我在摸鱼的时候，看到不少文章都在说<strong>\"Golang性能吊打Java\"</strong>。作为一个写了好几年java的javaer，这我怎么能忍？于是在网上看了一些对比golang和java的文章，其中戳中java痛点、也是golang被吹上天的一条，就是对多线程并发的支持了。先看一段描述：</p><blockquote data-tool=\"mdnice编辑器\" style=\"border-top: none;border-right: none;border-bottom: none;font-size: 0.9em;overflow: auto;border-left-color: rgb(239, 112, 96);color: rgb(106, 115, 125);padding: 10px 10px 10px 20px;margin-bottom: 20px;margin-top: 20px;background: rgb(255, 249, 249);\"><p style=\"font-size: 16px;padding-top: 8px;padding-bottom: 8px;color: black;line-height: 26px;\">Go从语言层面原生支持并发，并且使用简单，Go语言中的并发基于轻量级线程<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Goroutine</code>，创建成本很低，单个Go应用也可以充分利用CPU多核，编写高并发服务端软件简单，执行性能好，很多情况下完全不需要考虑锁机制以及由此带来的各种问题。</p></blockquote><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">看到这，我的心瞬间凉了大半截，真的是字字扎心。虽然说java里的<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>JUC</code>包已经帮我们封装好了很多并发工具，但实际高并发的环境中我们还要考虑到各种锁的使用，以及服务器性能瓶颈、限流熔断等非常多方面的问题。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">再说回go，前面提到的这个<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>goroutine</code>究竟是什么东西？其实，轻量级线程<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>goroutine</code>也可以被称为<strong>协程</strong>，得益于go中的调度器以及GMP模型，go程序会智能地将<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>goroutine</code>中的任务合理地分配给每个 CPU。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">好了，其实上面说的这一大段我也不懂，都是向写go的哥们儿请教来的，总之就是go的并发性能非常优秀就是了。不过这都不是我们要说的重点，今天我们要讨论的是如何在Java中使用协程。</p><h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;border-bottom: 2px solid rgb(239, 112, 96);font-size: 1.3em;\"><span style=\"display: inline-block;background: rgb(239, 112, 96);color: rgb(255, 255, 255);padding: 3px 10px 1px;border-top-right-radius: 3px;border-top-left-radius: 3px;margin-right: 3px;\">协程是什么？</span><span style=\"display: inline-block;vertical-align: bottom;border-bottom: 36px solid rgb(239, 235, 233);border-right: 20px solid transparent;\"></span></h2><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">我们知道，线程在阻塞状态和可运行状态的切换，以及线程间的上下文切换都会造成性能的损耗。为了解决这些问题，引入协程<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>coroutine</code>这一概念，就像在一个进程中允许存在多个线程，在一个线程中，也可以存在多个协程。</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img class=\"rich_pages wxw-img\" data-ratio=\"0.7405189620758483\" data-type=\"jpeg\" data-w=\"501\" style=\"display: block; margin-right: auto; margin-left: auto; height: auto !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1ymXic5jxmibN5icYI1xBZe75IIQZhNibZIhJp0icibWGk5HODz4phMYop8Rw/640?wx_fmt=jpeg\"></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">那么，使用协程究竟有什么好处呢？</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">首先，执行效率高。线程的切换由操作系统内核执行，消耗资源较多。而协程由程序控制，在用户态执行，不需要从用户态切换到内核态，我们也可以理解为，协程是一种进程自身来调度任务的调度模式，因此协程间的切换开销远小于线程切换。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">其次，节省资源。因为协程在本质上是通过分时复用了一个单线程，因此能够节省一定的资源。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">类似于线程的五种状态切换，协程间也存在状态的切换，下面这张图展示了协程调度器内部任务的流转。</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img class=\"rich_pages wxw-img\" data-ratio=\"0.6672212978369384\" data-type=\"jpeg\" data-w=\"601\" style=\"display: block; margin-right: auto; margin-left: auto; height: auto !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1dyAltHop4DLErCRMuCGt031eqKum2ln4iaO7zoo3Q4ciaxSiblGQsX7BA/640?wx_fmt=jpeg\"></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">综合上面这些角度来看，和原生支持协程的go比起来，java在多线程并发上还真的是不堪一击。但是，虽然在Java官方的jdk中不能直接使用协程，但是，有其他的开源框架借助动态修改字节码的方式实现了协程，就比如我们接下来要学习的Quasar。</p><h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;border-bottom: 2px solid rgb(239, 112, 96);font-size: 1.3em;\"><span style=\"display: inline-block;background: rgb(239, 112, 96);color: rgb(255, 255, 255);padding: 3px 10px 1px;border-top-right-radius: 3px;border-top-left-radius: 3px;margin-right: 3px;\">Quasar使用</span><span style=\"display: inline-block;vertical-align: bottom;border-bottom: 36px solid rgb(239, 235, 233);border-right: 20px solid transparent;\"></span></h2><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">Quasar是一个开源的Java协程框架，通过利用<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Java instrument</code>技术对字节码进行修改，使方法挂起前后可以保存和恢复jvm栈帧，方法内部已执行到的字节码位置也通过增加状态机的方式记录，在下次恢复执行可直接跳转至最新位置。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">Quasar项目最后更新时间为2018年，版本停留在<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>0.8.0</code>，但是我在直接使用这个版本时报了一个错误：</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img class=\"rich_pages wxw-img\" data-ratio=\"0.18274111675126903\" data-type=\"png\" data-w=\"591\" style=\"display: block; margin-right: auto; margin-left: auto; height: auto !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1sFW6W2p7HwqJ3U5UbkbzZOJAawkIlLbwG3a8drfCPZGLDD1rFC65ibg/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">这个错误的大意就是这个class文件是使用的高版本jdk编译的，所以你在低版本的jdk上当然无法运行了。这里<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>major</code>版本号54对应的是<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>jdk10</code>，而我使用的是<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>jdk8</code>，无奈降级试了一下低版本，果然<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>0.7.10</code>可以使用：</p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;\"><span style=\"display: block;background: url(\" https: no-repeat rgb></span><code style=\"overflow-x: auto;padding: 15px 16px 16px;color: rgb(171, 178, 191);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb><span style=\"line-height: 26px;\">&lt;<span style=\"color: rgb(224, 108, 117);line-height: 26px;\">dependency</span>&gt;</span><br>    <span style=\"line-height: 26px;\">&lt;<span style=\"color: rgb(224, 108, 117);line-height: 26px;\">groupId</span>&gt;</span>co.paralleluniverse<span style=\"line-height: 26px;\"><span style=\"color: rgb(224, 108, 117);line-height: 26px;\">groupId</span>&gt;</span><br>    <span style=\"line-height: 26px;\">&lt;<span style=\"color: rgb(224, 108, 117);line-height: 26px;\">artifactId</span>&gt;</span>quasar-core<span style=\"line-height: 26px;\"><span style=\"color: rgb(224, 108, 117);line-height: 26px;\">artifactId</span>&gt;</span><br>    <span style=\"line-height: 26px;\">&lt;<span style=\"color: rgb(224, 108, 117);line-height: 26px;\">version</span>&gt;</span>0.7.10<span style=\"line-height: 26px;\"><span style=\"color: rgb(224, 108, 117);line-height: 26px;\">version</span>&gt;</span><br><span style=\"line-height: 26px;\"><span style=\"color: rgb(224, 108, 117);line-height: 26px;\">dependency</span>&gt;</span><br></code></pre><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">在我们做好准备工作后，下面就写几个例子来感受一下协程的魅力吧。</p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 20px;\">1、运行时间</h3><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">下面我们模拟一个简单的场景，假设我们有一个任务，平均执行时间为1秒，分别测试一下使用线程和协程并发执行10000次需要消耗多少时间。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">先通过线程进行调用，直接使用<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Executors</code>线程池：</p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;\"><span style=\"display: block;background: url(\" https: no-repeat rgb></span><code style=\"overflow-x: auto;padding: 15px 16px 16px;color: rgb(171, 178, 191);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb><span style=\"line-height: 26px;\"><span style=\"color: rgb(198, 120, 221);line-height: 26px;\">public</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">static</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">void</span> <span style=\"color: rgb(97, 174, 238);line-height: 26px;\">main</span><span style=\"line-height: 26px;\">(String[] args)</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">throws</span> InterruptedException </span>{<br>    CountDownLatch countDownLatch=<span style=\"color: rgb(198, 120, 221);line-height: 26px;\">new</span> CountDownLatch(<span style=\"color: rgb(209, 154, 102);line-height: 26px;\">10000</span>);<br>    <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">long</span> start = System.currentTimeMillis();<br>    ExecutorService executor= Executors.newCachedThreadPool();<br>    <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">for</span> (<span style=\"color: rgb(198, 120, 221);line-height: 26px;\">int</span> i = <span style=\"color: rgb(209, 154, 102);line-height: 26px;\">0</span>; i 10000; i++) {<br>        executor.submit(() -&gt; {<br>            <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">try</span> {<br>                TimeUnit.SECONDS.sleep(<span style=\"color: rgb(209, 154, 102);line-height: 26px;\">1</span>);<br>            } <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">catch</span> (InterruptedException e) {<br>                e.printStackTrace();<br>            }<br>            countDownLatch.countDown();<br>        });<br>    }<br>    countDownLatch.await();<br>    <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">long</span> end = System.currentTimeMillis();<br>    System.out.println(<span style=\"color: rgb(152, 195, 121);line-height: 26px;\">\"Thread use:\"</span>+(end-start)+<span style=\"color: rgb(152, 195, 121);line-height: 26px;\">\" ms\"</span>);<br>}<br></code></pre><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">查看运行时间：</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img class=\"rich_pages wxw-img\" data-ratio=\"0.32\" data-type=\"png\" data-w=\"550\" style=\"display: block; margin-right: auto; margin-left: auto; height: auto !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1KvEToIQXvgyViapZiccic6VFJNFHK8XRU0qABR2HRAu1dzkWSw6MrWUMg/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">好了，下面我们再用Quasar中的协程跑一下和上面相同的流程。这里我们要使用的是Quasar中的<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Fiber</code>，它可以被翻译为<strong>协程</strong>或<strong>纤程</strong>，创建<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Fiber</code>的类型主要可分为下面两类：</p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;\"><span style=\"display: block;background: url(\" https: no-repeat rgb></span><code style=\"overflow-x: auto;padding: 15px 16px 16px;color: rgb(171, 178, 191);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb><span style=\"line-height: 26px;\"><span style=\"color: rgb(198, 120, 221);line-height: 26px;\">public</span> <span style=\"color: rgb(97, 174, 238);line-height: 26px;\">Fiber</span><span style=\"line-height: 26px;\">(String name, FiberScheduler scheduler, <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">int</span> stackSize, SuspendableRunnable target)</span></span>;<br><span style=\"line-height: 26px;\"><span style=\"color: rgb(198, 120, 221);line-height: 26px;\">public</span> <span style=\"color: rgb(97, 174, 238);line-height: 26px;\">Fiber</span><span style=\"line-height: 26px;\">(String name, FiberScheduler scheduler, <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">int</span> stackSize, SuspendableCallable<v> target)</v></span></span>;<br></code></pre><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">在<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Fiber</code>中可以运行无返回值的<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>SuspendableRunnable</code>或有返回值的<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>SuspendableCallable</code>，看这个名字也知道区别就是java中的<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Runnable</code>和<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Callable</code>的区别了。其余参数都可以省略，<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>name</code>为协程的名称，<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>scheduler</code>是调度器，默认使用<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>FiberForkJoinScheduler</code>，<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>stackSize</code>指定用于保存fiber调用栈信息的<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>stack</code>大小。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">在下面的代码中，使用了<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Fiber.sleep()</code>方法进行协程的休眠，和<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Thread.sleep()</code>非常类似。</p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;\"><span style=\"display: block;background: url(\" https: no-repeat rgb></span><code style=\"overflow-x: auto;padding: 15px 16px 16px;color: rgb(171, 178, 191);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb><span style=\"line-height: 26px;\"><span style=\"color: rgb(198, 120, 221);line-height: 26px;\">public</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">static</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">void</span> <span style=\"color: rgb(97, 174, 238);line-height: 26px;\">main</span><span style=\"line-height: 26px;\">(String[] args)</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">throws</span> InterruptedException </span>{<br>    CountDownLatch countDownLatch=<span style=\"color: rgb(198, 120, 221);line-height: 26px;\">new</span> CountDownLatch(<span style=\"color: rgb(209, 154, 102);line-height: 26px;\">10000</span>);<br>    <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">long</span> start = System.currentTimeMillis();<br><br>    <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">for</span> (<span style=\"color: rgb(198, 120, 221);line-height: 26px;\">int</span> i = <span style=\"color: rgb(209, 154, 102);line-height: 26px;\">0</span>; i 10000; i++) {<br>        <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">new</span> Fiber&lt;&gt;(<span style=\"color: rgb(198, 120, 221);line-height: 26px;\">new</span> SuspendableRunnable(){<br>            <span style=\"color: rgb(97, 174, 238);line-height: 26px;\">@Override</span><br>            <span style=\"line-height: 26px;\"><span style=\"color: rgb(198, 120, 221);line-height: 26px;\">public</span> Integer <span style=\"color: rgb(97, 174, 238);line-height: 26px;\">run</span><span style=\"line-height: 26px;\">()</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">throws</span> SuspendExecution, InterruptedException </span>{<br>                Fiber.sleep(<span style=\"color: rgb(209, 154, 102);line-height: 26px;\">1000</span>);<br>                countDownLatch.countDown();<br>            }<br>        }).start();<br>    }<br><br>    countDownLatch.await();<br>    <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">long</span> end = System.currentTimeMillis();<br>    System.out.println(<span style=\"color: rgb(152, 195, 121);line-height: 26px;\">\"Fiber use:\"</span>+(end-start)+<span style=\"color: rgb(152, 195, 121);line-height: 26px;\">\" ms\"</span>);<br>}<br></code></pre><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">直接运行，报了一个警告：</p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;\"><span style=\"display: block;background: url(\" https: no-repeat rgb></span><code style=\"overflow-x: auto;padding: 15px 16px 16px;color: rgb(171, 178, 191);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb>QUASAR WARNING: Quasar Java Agent isn<span style=\"color: rgb(152, 195, 121);line-height: 26px;\">'t running. If you'</span>re using another instrumentation method you can ignore this message; otherwise, please refer to the Getting Started section <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">in</span> the Quasar documentation.<br></code></pre><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">还记得我们前面说过的Quasar生效的原理是基于<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Java instrument</code>技术吗，所以这里需要给它添加一个代理Agent。找到本地maven仓库中已经下好的jar包，在<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>VM options</code>中添加参数：</p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;\"><span style=\"display: block;background: url(\" https: no-repeat rgb></span><code style=\"overflow-x: auto;padding: 15px 16px 16px;color: rgb(171, 178, 191);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb>-javaagent:E:\\Apache\\maven-repository\\co\\paralleluniverse\\quasar-core\\0.7.10\\quasar-core-0.7.10.jar<br></code></pre><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">这次运行时就没有提示警告了，查看一下运行时间：</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img class=\"rich_pages wxw-img\" data-ratio=\"0.2921739130434783\" data-type=\"png\" data-w=\"575\" style=\"display: block; margin-right: auto; margin-left: auto; height: auto !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1yz1GIwSu1RDv4ibxypgJonDDOKibnIia0ELEFdcVQgtCX98pM8RTdp7cw/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">运行时间只有使用线程池时的一半多一点，确实能大大缩短程序的效率。</p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 20px;\">2、内存占用</h3><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">在测试完运行时间后，我们再来测试一下运行内存占用的对比。通过下面代码尝试在本地启动100万个线程：</p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;\"><span style=\"display: block;background: url(\" https: no-repeat rgb></span><code style=\"overflow-x: auto;padding: 15px 16px 16px;color: rgb(171, 178, 191);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb><span style=\"line-height: 26px;\"><span style=\"color: rgb(198, 120, 221);line-height: 26px;\">public</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">static</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">void</span> <span style=\"color: rgb(97, 174, 238);line-height: 26px;\">main</span><span style=\"line-height: 26px;\">(String[] args)</span> </span>{<br>    <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">for</span> (<span style=\"color: rgb(198, 120, 221);line-height: 26px;\">int</span> i = <span style=\"color: rgb(209, 154, 102);line-height: 26px;\">0</span>; i 1000000; i++) {<br>        <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">new</span> Thread(() -&gt; {<br>            <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">try</span> {<br>                Thread.sleep(<span style=\"color: rgb(209, 154, 102);line-height: 26px;\">100000</span>);<br>            } <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">catch</span> (InterruptedException e) {<br>                e.printStackTrace();<br>            }<br>        }).start();<br>    }<br>}<br></code></pre><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">本来以为会报<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>OutOfMemoryError</code>，但是没想到的是我的电脑直接直接卡死了…而且不是一次，试了几次都是以卡死只能重启电脑而结束。好吧，我选择放弃，那么下面再试试启动100万个<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Fiber</code>协程。</p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;\"><span style=\"display: block;background: url(\" https: no-repeat rgb></span><code style=\"overflow-x: auto;padding: 15px 16px 16px;color: rgb(171, 178, 191);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb><span style=\"line-height: 26px;\"><span style=\"color: rgb(198, 120, 221);line-height: 26px;\">public</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">static</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">void</span> <span style=\"color: rgb(97, 174, 238);line-height: 26px;\">main</span><span style=\"line-height: 26px;\">(String[] args)</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">throws</span> Exception </span>{<br>    CountDownLatch countDownLatch=<span style=\"color: rgb(198, 120, 221);line-height: 26px;\">new</span> CountDownLatch(<span style=\"color: rgb(209, 154, 102);line-height: 26px;\">10000</span>);<br>    <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">for</span> (<span style=\"color: rgb(198, 120, 221);line-height: 26px;\">int</span> i = <span style=\"color: rgb(209, 154, 102);line-height: 26px;\">0</span>; i 1000000; i++) {<br>        <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">int</span> finalI = i;<br>        <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">new</span> Fiber&lt;&gt;((SuspendableCallable<integer>)()-&gt;{<br>            Fiber.sleep(<span style=\"color: rgb(209, 154, 102);line-height: 26px;\">100000</span>);<br>            countDownLatch.countDown();<br>            <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">return</span> finalI;<br>        }).start();<br>    }<br>    countDownLatch.await();<br>    System.out.println(<span style=\"color: rgb(152, 195, 121);line-height: 26px;\">\"end\"</span>);<br>}<br></integer></code></pre><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">程序能够正常执行结束，看样子使用的内存真的比线程少很多。上面我故意使每个协程结束的时间拖得很长，这样我们就可以在运行过程中使用Java VisualVM查看内存的占用情况了：</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img class=\"rich_pages wxw-img\" data-ratio=\"0.64375\" data-type=\"png\" data-w=\"1120\" style=\"display: block; margin-right: auto; margin-left: auto; height: auto !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1f6KvdiacITWTVnpSfzuuMslMY1znaxDGprOH7Z2FVjSnkH3y6MSicRFA/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">可以看到在使用<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Fiber</code>的情况下只使用了1G多一点的内存，平均到100万个协程上也就是说每个<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Fiber</code>只占用了<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>1Kb</code>左右的内存空间，和<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Thread</code>线程比起来真的是非常的轻量级。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">从上面这张图中我们也可以看到，运行了非常多的<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>ForkJoinPool</code>，它们又起到了什么作用呢？我们在前面说过，协程是由程序控制在用户态进行切换，而Quasar中的调度器就使用了一个或多个<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>ForkJoinPool</code>来完成对<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Fiber</code>的调度。</p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 20px;\">3、原理与应用</h3><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">这里简单介绍一下Quasar的原理，在编译时框架会对代码进行扫描，如果方法带有<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>@Suspendable</code>注解，或抛出了<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>SuspendExecution</code>，或在配置文件<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>META-INF/suspendables</code>中指定该方法，那么Quasar就会修改生成的字节码，在<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>park</code>挂起方法的前后，插入一些字节码。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">这些字节码会记录此时协程的执行状态，例如相关的局部变量与操作数栈，然后通过抛出异常的方式将cpu的控制权从当前协程交回到控制器，此时控制器可以再调度另外一个协程运行，并通过之前插入的那些字节码恢复当前协程的执行状态，使程序能继续正常执行。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">回头看一下前面例子中的<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>SuspendableRunnable</code>和<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>SuspendableCallable</code>，它们的<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>run</code>方法上都抛出了<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>SuspendExecution</code>，其实这并不是一个真正的异常，仅作为识别挂起方法的声明，在实际运行中不会抛出。当我们创建了一个<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Fiber</code>，并在其中调用了其他方法时，如果想要Quasar的调度器能够介入，那么必须在使用时层层抛出这个异常或添加注解。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">看一下简单的代码书写的示例：</p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;\"><span style=\"display: block;background: url(\" https: no-repeat rgb></span><code style=\"overflow-x: auto;padding: 15px 16px 16px;color: rgb(171, 178, 191);display: -webkit-box;font-family: \" operator mono consolas monaco menlo monospace rgb><span style=\"line-height: 26px;\"><span style=\"color: rgb(198, 120, 221);line-height: 26px;\">public</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">void</span> <span style=\"color: rgb(97, 174, 238);line-height: 26px;\">request</span><span style=\"line-height: 26px;\">()</span></span>{<br>    <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">new</span> Fiber&lt;&gt;(<span style=\"color: rgb(198, 120, 221);line-height: 26px;\">new</span> SuspendableRunnable() {<br>        <span style=\"color: rgb(97, 174, 238);line-height: 26px;\">@Override</span><br>        <span style=\"line-height: 26px;\"><span style=\"color: rgb(198, 120, 221);line-height: 26px;\">public</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">void</span> <span style=\"color: rgb(97, 174, 238);line-height: 26px;\">run</span><span style=\"line-height: 26px;\">()</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">throws</span> SuspendExecution, InterruptedException </span>{<br>            String content = sendRequest();<br>            System.out.println(content);<br>        }<br>    }).start();<br>}<br><br><span style=\"line-height: 26px;\"><span style=\"color: rgb(198, 120, 221);line-height: 26px;\">private</span> String <span style=\"color: rgb(97, 174, 238);line-height: 26px;\">sendRequest</span><span style=\"line-height: 26px;\">()</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">throws</span> SuspendExecution </span>{<br>    <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">return</span> realSendRequest();<br>}<br><br><span style=\"line-height: 26px;\"><span style=\"color: rgb(198, 120, 221);line-height: 26px;\">private</span> String <span style=\"color: rgb(97, 174, 238);line-height: 26px;\">realSendRequest</span><span style=\"line-height: 26px;\">()</span> <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">throws</span> SuspendExecution</span>{<br>    HttpResponse response = HttpRequest.get(<span style=\"color: rgb(152, 195, 121);line-height: 26px;\">\"http://127.0.0.1:6879/name\"</span>).execute();<br>    String content = response.body();<br>    <span style=\"color: rgb(198, 120, 221);line-height: 26px;\">return</span> content;<br>}<br></code></pre><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">需要注意的是，如果在方法内部已经通过try/catch的方式捕获了<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Exception</code>，也应该再次手动抛出这个<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>SuspendExecution</code>异常。</p><h2 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;border-bottom: 2px solid rgb(239, 112, 96);font-size: 1.3em;\"><span style=\"display: inline-block;background: rgb(239, 112, 96);color: rgb(255, 255, 255);padding: 3px 10px 1px;border-top-right-radius: 3px;border-top-left-radius: 3px;margin-right: 3px;\">总结</span><span style=\"display: inline-block;vertical-align: bottom;border-bottom: 36px solid rgb(239, 235, 233);border-right: 20px solid transparent;\"></span></h2><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">本文介绍了Quasar框架的简单使用，其具体的实现原理比较复杂，暂时就不在这里进行讨论，后面打算单独拎出来进行分析。另外，目前已经有不少其他的框架中已经集成了Quasar，例如同样是<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Parallel Universe</code>下的Comsat项目，能够提供了HTTP和DB访问等功能。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">虽然现在想要在Java中使用协程还只能使用这样的第三方的框架，但是也不必灰心，在OpenJDK 16中已经加入了一个名为<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Project Loom</code>的项目， 在<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>OpenJDK Wiki</code>上可以看到对它的介绍，它将使用<code style=\"font-size: 14px;overflow-wrap: break-word;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all rgb>Fiber</code>轻量级用户模式线程，从jvm层面对多线程技术进行彻底的改变，使用新的编程模型，使轻量级线程的并发也能够适用于高吞吐量的业务场景。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;line-height: 26px;\">Quasar和Loom的相关的文档放在下面，有兴趣的小伙伴们可以自己看一下。</p><blockquote data-tool=\"mdnice编辑器\" style=\"border-top: none;border-right: none;border-bottom: none;font-size: 0.9em;overflow: auto;border-left-color: rgb(239, 112, 96);color: rgb(106, 115, 125);padding: 10px 10px 10px 20px;margin-bottom: 20px;margin-top: 20px;background: rgb(255, 249, 249);\"><p style=\"font-size: 16px;padding-top: 8px;padding-bottom: 8px;color: black;line-height: 26px;\">Quasar git：https://github.com/puniverse/quasar</p><p style=\"font-size: 16px;padding-top: 8px;padding-bottom: 8px;color: black;line-height: 26px;\">Quasar api：http://docs.paralleluniverse.co/quasar/javadoc/</p><p style=\"font-size: 16px;padding-top: 8px;padding-bottom: 8px;color: black;line-height: 26px;\">OpenJdk Wiki：https://wiki.openjdk.java.net/display/loom/Main</p></blockquote><p style=\"white-space: normal;outline: 0px;max-width: 100%;color: rgb(0, 0, 0);font-size: 16px;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb center border-box break-word><span style=\"outline: 0px;max-width: 100%;font-size: 15px;color: rgb(136, 136, 136);box-sizing: border-box !important;overflow-wrap: break-word !important;\">- EOF -</span></p><section donone=\"shifuMouseDownCard('shifu_c_030')\" label=\"Copyright Reserved by PLAYHUDONG.\" style=\"margin-top: 1em;margin-bottom: 1em;white-space: normal;outline: 0px;max-width: 100%;color: rgb(0, 0, 0);font-size: 16px;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb start initial border-box break-word><section style=\"margin-left: 1em;outline: 0px;max-width: 100%;line-height: 1.4;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding: 3px 8px;outline: 0px;max-width: 100%;border-radius: 4px;color: rgb(255, 255, 255);background-color: rgb(255, 105, 31);font-family: inherit;text-align: inherit;text-decoration: inherit;box-sizing: border-box !important;overflow-wrap: break-word !important;\">推荐阅读</span>  <span style=\"margin-left: 4px;padding: 3px 8px;outline: 0px;max-width: 100%;border-radius: 1.2em;color: rgb(255, 255, 255);line-height: 1.2;background-color: rgb(204, 204, 204);font-family: inherit;text-align: inherit;text-decoration: inherit;border-color: rgb(249, 110, 87);font-size: 12px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">点击标题可跳转</span></section><section style=\"margin-top: -11px;padding: 22px 16px 16px;outline: 0px;max-width: 100%;border-width: 1px;border-style: solid;border-color: rgb(255, 105, 31);color: rgb(51, 51, 51);font-size: 1em;font-family: inherit;text-align: inherit;text-decoration: inherit;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"outline: 0px;max-width: 100%;line-height: 2em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651510890&amp;idx=1&amp;sn=6d05a3d4c73ba57666576dccdf21dbeb&amp;chksm=bd25b4158a523d031abc41e7bc8e8f925e24fbc910e2d14c216639fb387f72928c602ea5121f&amp;scene=21#wechat_redirect\" textvalue=\"为什么不建议用try catch处理异常？\" linktype=\"text\" imgurl=\"\" imgdata=\"null\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\" wah-hotarea=\"click\" style=\"outline: 0px;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: pointer;max-width: 100%;font-size: 12px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">为什么不建议用try catch处理异常？</a><br style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p><p style=\"outline: 0px;max-width: 100%;line-height: 2em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651510893&amp;idx=1&amp;sn=6a61c1ebc55560dff7bd747a5e213c8d&amp;chksm=bd25b4128a523d0494db029266f83125cb18eed4a007aaab1326d8f18f587c1f6c96750ec0f7&amp;scene=21#wechat_redirect\" textvalue=\"JDK动态代理为什么必须要基于接口？\" linktype=\"text\" imgurl=\"\" imgdata=\"null\" data-itemshowtype=\"11\" tab=\"innerlink\" data-linktype=\"2\" style=\"font-size: 12px;\">JDK动态代理为什么必须要基于接口？</a><br></p><p style=\"outline: 0px;max-width: 100%;line-height: 2em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651503297&amp;idx=2&amp;sn=5f19e03d6b86789b3b28af5cee97d1e9&amp;chksm=bd25d6be8a525fa8b8d16745d3454ddc4aa562571964d88eb9fd4e2cb274f8a9ae806bf0b3d5&amp;scene=21#wechat_redirect\" textvalue=\"一个 HashMap 跟面试官扯了半个小时\" linktype=\"text\" imgurl=\"\" imgdata=\"null\" data-itemshowtype=\"11\" tab=\"innerlink\" data-linktype=\"2\" wah-hotarea=\"click\" hasload=\"1\" style=\"text-decoration: underline;outline: 0px;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);cursor: pointer;max-width: 100%;font-size: 12px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\">一个 HashMap 跟面试官扯了半个小时</span></a><br style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p></section></section><p style=\"white-space: normal;outline: 0px;max-width: 100%;color: rgb(0, 0, 0);font-size: 16px;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb start border-box break-word><br style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p><p style=\"white-space: normal;outline: 0px;max-width: 100%;color: rgb(0, 0, 0);font-size: 16px;letter-spacing: 0.544px;font-family: -apple-system-font, system-ui, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb center border-box break-word><br style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p><p style=\"white-space: normal;outline: 0px;max-width: 100%;color: rgb(0, 0, 0);font-size: 16px;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb center border-box break-word><span style=\"outline: 0px;max-width: 100%;font-size: 14px;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">看完本文有收获？请转发分享给更多人</span><br style=\"outline: 0px;max-width: 100%;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></p><p style=\"white-space: normal;outline: 0px;max-width: 100%;color: rgb(0, 0, 0);font-size: 16px;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb center border-box break-word><strong style=\"outline: 0px;max-width: 100%;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">关注「ImportNew」，提升Java技能</strong></p><p style=\"white-space: normal;outline: 0px;max-width: 100%;color: rgb(0, 0, 0);font-size: 16px;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb center border-box break-word><img class=\"rich_pages wxw-img\" data-ratio=\"0.9166666666666666\" data-s=\"300,640\" data-type=\"jpeg\" data-w=\"600\" width=\"auto\" style=\"outline: 0px; box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; width: 600px !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg\"></p><p style=\"white-space: normal;outline: 0px;max-width: 100%;color: rgb(0, 0, 0);font-size: 16px;font-family: -apple-system, BlinkMacSystemFont, \" helvetica neue sc sans gb yahei ui arial sans-serif rgb right border-box break-word><span style=\"outline: 0px;max-width: 100%;font-size: 14px;box-sizing: border-box !important;overflow-wrap: break-word !important;\"></span><span style=\"outline: 0px;max-width: 100%;font-family: -apple-system-font, system-ui, \" helvetica neue sc sans gb yahei ui arial sans-serif center border-box break-word>点赞和在看就是最大的支持</span><span style=\"outline: 0px;max-width: 100%;font-family: -apple-system-font, system-ui, \" helvetica neue sc sans gb yahei ui arial sans-serif center border-box break-word>❤️</span></p></section>\n                </div>\n\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651510897&amp;idx=1&amp;sn=85ca5e6e63d674d7c9d3a7d174a306ba&amp;chksm=bd25b40e8a523d183a8d513dbf02d8c54034f6847b9b5edeccf790a465bcc20cb367f4eabf76#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">文章原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/11757/dv8iGtd77U\"></div></div>","descriptionType":"html","publishedDate":"Sun, 13 Mar 2022 03:30:00 +0000","feedId":2521,"bgimg":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1x0nYJqMZsXJejpwrbzKyernicSgnVcYdpKCbMdzASTUWhUHAKNibeqMg/0?wx_fmt=jpeg%5Cx26amp;random=0.12509211302925483?imageView2/1/w/600","linkMd5":"9d1245f82d0862b27d74538fca90d26f","author":"","articleImgCdnMap":{"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1x0nYJqMZsXJejpwrbzKyernicSgnVcYdpKCbMdzASTUWhUHAKNibeqMg/0?wx_fmt=jpeg%5Cx26amp;random=0.12509211302925483?imageView2/1/w/600":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1ymXic5jxmibN5icYI1xBZe75IIQZhNibZIhJp0icibWGk5HODz4phMYop8Rw/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn20@2020_6/2022/03/14/08-23-26-973_6ff7fce5a4f88162.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1dyAltHop4DLErCRMuCGt031eqKum2ln4iaO7zoo3Q4ciaxSiblGQsX7BA/640?wx_fmt=jpeg":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1sFW6W2p7HwqJ3U5UbkbzZOJAawkIlLbwG3a8drfCPZGLDD1rFC65ibg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn22@2020_1/2022/03/14/08-24-25-768_a77e7066a4ff928d.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1KvEToIQXvgyViapZiccic6VFJNFHK8XRU0qABR2HRAu1dzkWSw6MrWUMg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn10@2020_2/2022/03/14/08-23-19-645_ad6a93692f969139.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1yz1GIwSu1RDv4ibxypgJonDDOKibnIia0ELEFdcVQgtCX98pM8RTdp7cw/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn17@2020_2/2022/03/14/08-23-27-486_f5f13ced5f7046c7.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1f6KvdiacITWTVnpSfzuuMslMY1znaxDGprOH7Z2FVjSnkH3y6MSicRFA/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn16@2020_3/2022/03/14/08-23-30-031_f93d0239d4369c75.webp","http://www.jintiankansha.me/rss_static/11757/dv8iGtd77U":null},"publishedOrCreatedDate":1647246070795}],"record":{"createdTime":"2022-03-14 16:21:10","updatedTime":"2022-03-14 16:21:10","feedId":2521,"fetchDate":"Mon, 14 Mar 2022 08:21:10 +0000","fetchMs":350,"handleMs":54,"totalMs":245798,"newArticles":0,"totalArticles":5,"status":1,"type":0,"ip":"245d88d7b2d8f26704713c23b090d029","hostName":"us-039*","requestId":"b6a31a0698a14d39b93c7d51b106b3b4_2521","contentType":"application/rss+xml","totalBytes":92114,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":9,"articlesImgsGithubTotal":5,"successGithubMap":{"myreaderx16":1,"myreaderx22":1,"myreaderx3":1,"myreaderx11":1,"myreaderx18":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-24 21:31:41","updatedTime":"2020-09-01 10:09:47","id":2521,"name":"ImportNew","url":"http://feedmaker.kindle4rss.com/feeds/importnew.weixin.xml","subscriber":null,"website":null,"icon":"http://www.sogou.com/images/logo/new/favicon.ico?v=4","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn9@2020_3/2020/09/01/02-08-31-388_d24121c9beed1de6.ico","description":"伯乐在线旗下账号，专注Java技术分享，包括Java基础技术、进阶技能、架构设计和Java技术领域动态等。","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2022-03-14 16:25:15","updatedTime":"2022-03-14 16:25:15","id":null,"feedId":2521,"linkMd5":"9d1245f82d0862b27d74538fca90d26f"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":92114,"tmpBgImgCdnBytes":0,"extra4":{"start":1647246070035,"total":0,"statList":[{"spend":710,"msg":"获取xml内容"},{"spend":54,"msg":"解释文章"},{"spend":120314,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":123539,"msg":"正文链接上传到cdn"}]},"extra5":9,"extra6":6,"extra7ImgCdnFailResultVector":[null,null,{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/dv8iGtd77U","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":373,"convertSpendMs":0,"createdTime":"2022-03-14 16:23:12","host":"europe-60*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%8D%8F%E7%A8%8B%EF%BC%9F%E9%82%A3%E6%98%AF%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93Quasar%EF%BC%81","linkMd5ListStr":"9d1245f82d0862b27d74538fca90d26f","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/dv8iGtd77U","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":992,"convertSpendMs":0,"createdTime":"2022-03-14 16:23:12","host":"us-007*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%8D%8F%E7%A8%8B%EF%BC%9F%E9%82%A3%E6%98%AF%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93Quasar%EF%BC%81","linkMd5ListStr":"9d1245f82d0862b27d74538fca90d26f","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},null,null,null,null,null,null,null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe65.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-007.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://europe62.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe63.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://europe64.herokuapp.com/":{"failCount":2,"successCount":1,"resultList":[200,null,null]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe61.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe66.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe-60.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://us-023.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1KvEToIQXvgyViapZiccic6VFJNFHK8XRU0qABR2HRAu1dzkWSw6MrWUMg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":550,"destHeight":176,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn10@2020_2/2022/03/14/08-23-19-645_ad6a93692f969139.webp","sourceBytes":16621,"destBytes":10192,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":7770,"convertSpendMs":6,"createdTime":"2022-03-14 16:23:12","host":"europe-59*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%8D%8F%E7%A8%8B%EF%BC%9F%E9%82%A3%E6%98%AF%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93Quasar%EF%BC%81","linkMd5ListStr":"9d1245f82d0862b27d74538fca90d26f","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.2 KB","destSize":"10 KB","compressRate":"61.3%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1ymXic5jxmibN5icYI1xBZe75IIQZhNibZIhJp0icibWGk5HODz4phMYop8Rw/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":501,"destHeight":371,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn20@2020_6/2022/03/14/08-23-26-973_6ff7fce5a4f88162.webp","sourceBytes":35613,"destBytes":25602,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":14998,"convertSpendMs":14,"createdTime":"2022-03-14 16:23:12","host":"europe64*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%8D%8F%E7%A8%8B%EF%BC%9F%E9%82%A3%E6%98%AF%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93Quasar%EF%BC%81","linkMd5ListStr":"9d1245f82d0862b27d74538fca90d26f","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.8 KB","destSize":"25 KB","compressRate":"71.9%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1yz1GIwSu1RDv4ibxypgJonDDOKibnIia0ELEFdcVQgtCX98pM8RTdp7cw/640?wx_fmt=png","sourceStatusCode":200,"destWidth":575,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn17@2020_2/2022/03/14/08-23-27-486_f5f13ced5f7046c7.webp","sourceBytes":16431,"destBytes":9858,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":15481,"convertSpendMs":10,"createdTime":"2022-03-14 16:23:12","host":"europe63*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%8D%8F%E7%A8%8B%EF%BC%9F%E9%82%A3%E6%98%AF%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93Quasar%EF%BC%81","linkMd5ListStr":"9d1245f82d0862b27d74538fca90d26f","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16 KB","destSize":"9.6 KB","compressRate":"60%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":600,"destHeight":550,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn16@2020_3/2022/03/14/08-23-30-031_f93d0239d4369c75.webp","sourceBytes":37143,"destBytes":31608,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":18063,"convertSpendMs":13,"createdTime":"2022-03-14 16:23:12","host":"europe62*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%8D%8F%E7%A8%8B%EF%BC%9F%E9%82%A3%E6%98%AF%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93Quasar%EF%BC%81","linkMd5ListStr":"9d1245f82d0862b27d74538fca90d26f","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.3 KB","destSize":"30.9 KB","compressRate":"85.1%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/zpom4BeZSicYrdeuOm5lY7AYawaRDd4Z1sFW6W2p7HwqJ3U5UbkbzZOJAawkIlLbwG3a8drfCPZGLDD1rFC65ibg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":591,"destHeight":108,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn22@2020_1/2022/03/14/08-24-25-768_a77e7066a4ff928d.webp","sourceBytes":13876,"destBytes":14854,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":11495,"convertSpendMs":7,"createdTime":"2022-03-14 16:24:14","host":"europe62*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+Java%E4%B8%8D%E6%94%AF%E6%8C%81%E5%8D%8F%E7%A8%8B%EF%BC%9F%E9%82%A3%E6%98%AF%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93Quasar%EF%BC%81","linkMd5ListStr":"9d1245f82d0862b27d74538fca90d26f","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.6 KB","destSize":"14.5 KB","compressRate":"107%"}],"successGithubMap":{"myreaderx16":1,"myreaderx22":1,"myreaderx3":1,"myreaderx11":1,"myreaderx18":1},"failGithubMap":{}}