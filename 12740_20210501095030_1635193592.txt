{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-05-01 17:49:54","updatedTime":"2021-05-01 17:49:54","title":"折纸效果！ Cocos Creator 3.0","link":"https://juejin.cn/post/6957223039826133028","description":"<div class=\"markdown-body\"><style>.markdown-body{word-break:break-word;line-height:1.75;font-weight:400;font-size:15px;overflow-x:hidden;color:#333}.markdown-body h1,.markdown-body h2,.markdown-body h3,.markdown-body h4,.markdown-body h5,.markdown-body h6{line-height:1.5;margin-top:35px;margin-bottom:10px;padding-bottom:5px}.markdown-body h1{font-size:30px;margin-bottom:5px}.markdown-body h2{padding-bottom:12px;font-size:24px;border-bottom:1px solid #ececec}.markdown-body h3{font-size:18px;padding-bottom:0}.markdown-body h4{font-size:16px}.markdown-body h5{font-size:15px}.markdown-body h6{margin-top:5px}.markdown-body p{line-height:inherit;margin-top:22px;margin-bottom:22px}.markdown-body img{max-width:100%}.markdown-body hr{border:none;border-top:1px solid #ddd;margin-top:32px;margin-bottom:32px}.markdown-body code{word-break:break-word;border-radius:2px;overflow-x:auto;background-color:#fff5f5;color:#ff502c;font-size:.87em;padding:.065em .4em}.markdown-body code,.markdown-body pre{font-family:Menlo,Monaco,Consolas,Courier New,monospace}.markdown-body pre{overflow:auto;position:relative;line-height:1.75}.markdown-body pre>code{font-size:12px;padding:15px 12px;margin:0;word-break:normal;display:block;overflow-x:auto;color:#333;background:#f8f8f8}.markdown-body a{text-decoration:none;color:#0269c8;border-bottom:1px solid #d1e9ff}.markdown-body a:active,.markdown-body a:hover{color:#275b8c}.markdown-body table{display:inline-block!important;font-size:12px;width:auto;max-width:100%;overflow:auto;border:1px solid #f6f6f6}.markdown-body thead{background:#f6f6f6;color:#000;text-align:left}.markdown-body tr:nth-child(2n){background-color:#fcfcfc}.markdown-body td,.markdown-body th{padding:12px 7px;line-height:24px}.markdown-body td{min-width:120px}.markdown-body blockquote{color:#666;padding:1px 23px;margin:22px 0;border-left:4px solid #cbcbcb;background-color:#f8f8f8}.markdown-body blockquote:after{display:block;content:\"\"}.markdown-body blockquote>p{margin:10px 0}.markdown-body ol,.markdown-body ul{padding-left:28px}.markdown-body ol li,.markdown-body ul li{margin-bottom:0;list-style:inherit}.markdown-body ol li .task-list-item,.markdown-body ul li .task-list-item{list-style:none}.markdown-body ol li .task-list-item ol,.markdown-body ol li .task-list-item ul,.markdown-body ul li .task-list-item ol,.markdown-body ul li .task-list-item ul{margin-top:0}.markdown-body ol ol,.markdown-body ol ul,.markdown-body ul ol,.markdown-body ul ul{margin-top:3px}.markdown-body ol li{padding-left:6px}.markdown-body .contains-task-list{padding-left:0}.markdown-body .task-list-item{list-style:none}@media (max-width:720px){.markdown-body h1{font-size:24px}.markdown-body h2{font-size:20px}.markdown-body h3{font-size:18px}}</style><blockquote>\n<p>仅占用一个 drawcall !</p>\n</blockquote>\n<h1 data-id=\"heading-0\">效果</h1>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/db1ffe6632a244d1880b649c2d30f337~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"折纸效果\" loading=\"lazy\" referrerpolicy=\"no-referrer\"></p>\n<h1 data-id=\"heading-1\">实现</h1>\n<h2 data-id=\"heading-2\">整体思路</h2>\n<p>思路遵循以下几步</p>\n<ul>\n<li>初始化一个多边形。</li>\n<li>折叠后分割成两个多边形。</li>\n<li>如果需要继续分割，对场上的所有多边形进行折叠，折叠出新的多边形的层级正好与原来的相反。</li>\n</ul>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cfe9a536b47a4402b0378836c211d2ee~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"整体思路\" loading=\"lazy\" referrerpolicy=\"no-referrer\"></p>\n<p>所以，所有的计算和渲染都可以转换成对一个多边形的操作。</p>\n<p>为了简化计算，我们约定初始化的多边形为凸多边形。这么做有几个好处。</p>\n<ul>\n<li>折叠后生成的仍是凸多边形，并且对于每个多边形只会折叠出两个</li>\n<li>渲染时，分割凸多边形为三角形特别方便，即能快速计算出顶点索引</li>\n</ul>\n<h2 data-id=\"heading-3\">计算</h2>\n<p>主要分为三块</p>\n<ul>\n<li>多边形分割</li>\n<li>线线交点</li>\n<li>轴对称</li>\n</ul>\n<h3 data-id=\"heading-4\">分割</h3>\n<p>观察触摸方向和多边形各个点的关系。</p>\n<p>可以发现，<strong>触摸方向</strong> 与 <strong>触摸方向中点指向多边形顶点</strong> 的夹角决定了分割后的多边形的点。</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0207099274134065a94fef0e8136f96e~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"分割\" loading=\"lazy\" referrerpolicy=\"no-referrer\"></p>\n<ul>\n<li>当夹角大于90度时，该顶点正好是折叠多边形的顶点。</li>\n<li>当夹角等于90度时，该顶点是两个多边形的顶点。</li>\n<li>当夹角小于90度时，该顶点是底部多边形的顶点。</li>\n</ul>\n<p>向量间的点积正好可以帮助我们判断夹角问题。</p>\n<pre><code class=\"hljs language-ts copyable\" lang=\"ts\"><span class=\"hljs-keyword\">const</span> dotValue = temp_v2_vector.dot(temp_v2_vector_3)\n<span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">Math</span>.abs(dotValue) === <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-comment\">// 刚好在点上      </span>\n} <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (dotValue > <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-comment\">// 在前面  </span>\n} <span class=\"hljs-keyword\">else</span> {\n    <span class=\"hljs-comment\">// 在后面</span>\n}\n<span class=\"copy-code-btn\">复制代码</span></code></pre>\n<h3 data-id=\"heading-5\">交点</h3>\n<p>当被分割的多边形相邻两点与触摸方向的夹角不同时（属于两个多边形的点），需要计算触摸向量的垂直线与该线段的交点。</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/292de77a9ecd412e881e48a349e1793a~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"交点\" loading=\"lazy\" referrerpolicy=\"no-referrer\"></p>\n<p>直线上的一点可以用点和向量表示。</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dcdacf559d8c4a098d2aaf30ef1350d1~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"直线上的点\" loading=\"lazy\" referrerpolicy=\"no-referrer\"></p>\n<p>把两直线的点表达式结合，再运用克莱姆法则（<code>Cramer's Rule</code>）求出交点。</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a9d3bb288e2947e4904e1aff340e8da3~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"克莱姆法则\" loading=\"lazy\" referrerpolicy=\"no-referrer\"></p>\n<pre><code class=\"hljs language-ts copyable\" lang=\"ts\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">linelinePoint</span>(<span class=\"hljs-params\">p1: Vec2, p1Dir: Vec2, p2: Vec2, p2Dir: Vec2</span>) </span>{\n    <span class=\"hljs-keyword\">const</span> a1 = p1Dir.x, b1 = -p2Dir.x, c1 = p2.x - p1.x\n    <span class=\"hljs-keyword\">const</span> a2 = p1Dir.y, b2 = -p2Dir.y, c2 = p2.y - p1.y\n    <span class=\"hljs-keyword\">const</span> d = a1 * b2 - a2 * b1,\n        d1 = c1 * b2 - c2 * b1,\n        d2 = a1 * c2 - c1 * a2\n    <span class=\"hljs-keyword\">const</span> t1 = d1 / d, t2 = d2 / d\n    <span class=\"hljs-keyword\">return</span> [t1, t2]\n}\n<span class=\"copy-code-btn\">复制代码</span></code></pre>\n<p>这里计算的是比例<code>t</code>，这个<code>t</code>不仅可以用来求出顶点坐标，也可以求出相交的纹理坐标。</p>\n<pre><code class=\"hljs language-ts copyable\" lang=\"ts\"><span class=\"hljs-keyword\">const</span> posSpilt = Vec2(pos.x + dir.x * t1, pos.y + dir.y * t1)\n<span class=\"hljs-keyword\">const</span> uvSpilt = Vec2(uv.x + uvdir.x * t1, uv.y + uvdir.y * t1)\n<span class=\"copy-code-btn\">复制代码</span></code></pre>\n<h3 data-id=\"heading-6\">对称点</h3>\n<p>折叠多边形的顶点正好是原多边形顶点关于触摸垂直轴对称的点。</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8d64ce400e0b41119c39a2d109db9e3c~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"折叠点\" loading=\"lazy\" referrerpolicy=\"no-referrer\"></p>\n<p>求对称点同样可以运用向量计算。</p>\n<ol>\n<li>求出该顶点与中点的向量</li>\n<li>求出该点在触摸方向的单位向量的投影(点乘)，这正好是距离的一半</li>\n<li>求出对称点坐标（距离乘方向向量+起始点坐标）</li>\n</ol>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a4f489d3ae7e4531aad758e50fbb56d0~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"求对称点\" loading=\"lazy\" referrerpolicy=\"no-referrer\"></p>\n<pre><code class=\"hljs language-ts copyable\" lang=\"ts\">Vec2.subtract(temp_v2_vector_4, temp_v2_pos, pos)\n<span class=\"hljs-keyword\">const</span> dotLength = temp_v2_vector_4.dot(temp_v2_vector) * <span class=\"hljs-number\">2</span>\ntemp_v2_pos_2.set((pos.x + temp_v2_vector.x * dotLength), pos.y + temp_v2_vector.y * dotLength)\n<span class=\"copy-code-btn\">复制代码</span></code></pre>\n<h2 data-id=\"heading-7\">渲染</h2>\n<p>渲染一个图形一般是由三角形组成。</p>\n<p>对于凸多边形，分割三角形就比较简单。选取其中一个顶点，和其他顶点连接，就可以把多边形分割成三角形。</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/eb9bd632a9cc42dbacf20bbac38e40aa~tplv-k3u1fbpfcp-zoom-1.image\" alt=\"凸多边形分割\" loading=\"lazy\" referrerpolicy=\"no-referrer\"></p>\n<p>渲染一个凸多边形采用<code>Assembler</code>的方式组装顶点数据。</p>\n<p>分为以下几步实现：</p>\n<ol>\n<li>将引擎中的<code>Sprite-simple</code>组装器拷贝出来，作为自己的组装器模板。</li>\n<li>新建一个类继承<code>Sprite</code>，并设置它的组装器到自己的组装器</li>\n<li>创建变量顶点数组，纹理数组。</li>\n<li>编写组装器逻辑</li>\n</ol>\n<p>直接看看代码吧:D</p>\n<p>凸多边形的类。</p>\n<pre><code class=\"hljs language-ts copyable\" lang=\"ts\"><span class=\"hljs-comment\">// 仅限凸多边形</span>\n<span class=\"hljs-meta\">@ccclass</span>(<span class=\"hljs-string\">'PolygonSprite'</span>)\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">PolygonSprite</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Sprite</span> </span>{\n    <span class=\"hljs-meta\">@property</span>({ <span class=\"hljs-attr\">type</span>: [Vec2] })\n    <span class=\"hljs-keyword\">protected</span> _vertices: Vec2[] = [<span class=\"hljs-keyword\">new</span> Vec2(-<span class=\"hljs-number\">100</span>, -<span class=\"hljs-number\">100</span>), <span class=\"hljs-keyword\">new</span> Vec2(<span class=\"hljs-number\">100</span>, -<span class=\"hljs-number\">100</span>), <span class=\"hljs-keyword\">new</span> Vec2(<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>), <span class=\"hljs-keyword\">new</span> Vec2(-<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>)];\n    <span class=\"hljs-comment\">// 省略部分代码</span>\n\n    <span class=\"hljs-meta\">@property</span>({ <span class=\"hljs-attr\">type</span>: [Vec2] })\n    <span class=\"hljs-keyword\">protected</span> _uvs: Vec2[] = [<span class=\"hljs-keyword\">new</span> Vec2(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> Vec2(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>), <span class=\"hljs-keyword\">new</span> Vec2(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>), <span class=\"hljs-keyword\">new</span> Vec2(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>)];\n    <span class=\"hljs-comment\">// 省略部分代码</span>\n\n    <span class=\"hljs-keyword\">protected</span> <span class=\"hljs-function\"><span class=\"hljs-title\">_flushAssembler</span>(<span class=\"hljs-params\"></span>)</span> {\n        <span class=\"hljs-comment\">//指向自定义的组装器</span>\n        <span class=\"hljs-keyword\">let</span> assembler = polygonAssembler;\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">this</span>._assembler !== assembler) {\n            <span class=\"hljs-built_in\">this</span>.destroyRenderData();\n            <span class=\"hljs-built_in\">this</span>._assembler = assembler;\n        }\n        <span class=\"hljs-comment\">// 省略部分代码</span>\n    }\n}\n<span class=\"copy-code-btn\">复制代码</span></code></pre>\n<p>接下来看组装器内修改部分。</p>\n<p>处理顶点数据</p>\n<pre><code class=\"hljs language-ts copyable\" lang=\"ts\"><span class=\"hljs-comment\">// 保存顶点数据</span>\n<span class=\"hljs-function\"><span class=\"hljs-title\">updateVertexData</span>(<span class=\"hljs-params\">sprite: PolygonSprite</span>)</span> {\n    <span class=\"hljs-comment\">//中间变量</span>\n    <span class=\"hljs-keyword\">const</span> renderData = sprite.renderData;\n    <span class=\"hljs-keyword\">if</span> (!renderData) {\n        <span class=\"hljs-keyword\">return</span>;\n    }\n    renderData.vertexCount = renderData.dataLength = sprite.vertices.length\n    <span class=\"hljs-comment\">// 三角形数量 = 顶点数 - 2</span>\n    <span class=\"hljs-comment\">// 索引数量 = 三角形数量X3</span>\n    renderData.indicesCount = (renderData.vertexCount - <span class=\"hljs-number\">2</span>) * <span class=\"hljs-number\">3</span>\n    renderData.vertDirty = <span class=\"hljs-literal\">false</span>;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i < sprite.vertices.length; ++i) {\n        <span class=\"hljs-keyword\">const</span> xy = sprite.vertices[i];\n        renderData.data[i].x = xy.x\n        renderData.data[i].y = xy.y\n    }\n},\n<span class=\"copy-code-btn\">复制代码</span></code></pre>\n<p>缓存UV坐标，我们定义的纹理坐标是归一化到0-1，在更新数据时再根据实际的纹理坐标(合图)进行转换。</p>\n<pre><code class=\"hljs language-ts copyable\" lang=\"ts\"><span class=\"hljs-function\"><span class=\"hljs-title\">updateUvs</span>(<span class=\"hljs-params\">sprite: PolygonSprite</span>)</span> {\n    <span class=\"hljs-keyword\">const</span> renderData = sprite.renderData!;\n    <span class=\"hljs-comment\">//实际uv</span>\n    <span class=\"hljs-keyword\">const</span> uv = sprite.spriteFrame!.uv;\n    <span class=\"hljs-comment\">// 左 下 上 右 </span>\n    <span class=\"hljs-keyword\">const</span> l = uv[<span class=\"hljs-number\">0</span>], b = uv[<span class=\"hljs-number\">1</span>], t = uv[<span class=\"hljs-number\">7</span>], r = uv[<span class=\"hljs-number\">6</span>]\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i < sprite.uvs.length; ++i) {\n        <span class=\"hljs-keyword\">const</span> uvs = sprite.uvs[i];\n        renderData.data[i].u = l + (r - l) * uvs.x\n        renderData.data[i].v = b + (t - b) * uvs.y\n    }\n    renderData.uvDirty = <span class=\"hljs-literal\">false</span>;\n},\n<span class=\"copy-code-btn\">复制代码</span></code></pre>\n<p>填充数据修改，顶点索引就从第一个点开始连接到各个顶点的三角形。</p>\n<pre><code class=\"hljs language-ts copyable\" lang=\"ts\"><span class=\"hljs-function\"><span class=\"hljs-title\">fillBuffers</span>(<span class=\"hljs-params\">sprite: PolygonSprite, renderer: <span class=\"hljs-built_in\">any</span></span>)</span> {\n    <span class=\"hljs-comment\">//省略代码</span>\n\n    <span class=\"hljs-comment\">// 填充顶点</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i < renderData.vertexCount; ++i) {\n        <span class=\"hljs-keyword\">const</span> vert = renderData.data[i];\n        <span class=\"hljs-comment\">// 计算世界坐标</span>\n        vBuf![vertexOffset++] = a * vert.x + c * vert.y + tx;\n        vBuf![vertexOffset++] = b * vert.x + d * vert.y + ty;\n        vBuf![vertexOffset++] = vert.z;\n        <span class=\"hljs-comment\">// 填充uv</span>\n        vBuf![vertexOffset++] = vert.u;\n        vBuf![vertexOffset++] = vert.v;\n        Color.toArray(vBuf!, sprite.color, vertexOffset);\n        vertexOffset += <span class=\"hljs-number\">4</span>;\n    }\n\n    <span class=\"hljs-comment\">// 填充索引</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i < sprite.vertices.length - <span class=\"hljs-number\">2</span>; ++i) {\n        <span class=\"hljs-keyword\">const</span> start = i;\n        iBuf![indicesOffset++] = vertexId;\n        iBuf![indicesOffset++] = start + <span class=\"hljs-number\">1</span> + vertexId;\n        iBuf![indicesOffset++] = start + <span class=\"hljs-number\">2</span> + vertexId;\n    }\n},\n<span class=\"copy-code-btn\">复制代码</span></code></pre>\n<h1 data-id=\"heading-8\">小结</h1>\n<p>实现折叠效果可以将问题分解成处理一个多边形的问题，并用<code>assembler</code>实现合批渲染。</p>\n<p>以上为白玉无冰使用 <code>Cocos Creator 3.0.0</code> 实现 <code>\"折纸效果!\"</code> 的技术分享。欢迎三连(点赞/在看/留言/分享)支持!</p>\n<blockquote>\n<p>keep hungry! keep foolish!</p>\n</blockquote>\n<p><a href=\"http://store.cocos.com/app/detail/2844\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">完整项目链接  - cocos store (100分)</a></p>\n<p>当然也可以在号内找到所有教程项目的地址:D<br>\n<a href=\"https://mp.weixin.qq.com/s/1guPBbKkG6iWCcWa_uz6CQ\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">原文链接</a></p></div>","descriptionType":"text/html","publishedDate":"Fri, 30 Apr 2021 23:41:08 +0000","feedId":12740,"bgimg":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/db1ffe6632a244d1880b649c2d30f337~tplv-k3u1fbpfcp-zoom-1.image","linkMd5":"f931445d12a1c0c6bb837d53e98cc5ab","destWidth":621,"destHeight":584,"sourceBytes":414095,"destBytes":189684,"author":"白玉无冰","articleImgCdnMap":{"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/db1ffe6632a244d1880b649c2d30f337~tplv-k3u1fbpfcp-zoom-1.image":null,"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cfe9a536b47a4402b0378836c211d2ee~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn77@2020_3/2021/05/01/09-50-30-301_0f3d935c662ba1e5.webp","https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0207099274134065a94fef0e8136f96e~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn2@2020_1/2021/05/01/09-50-29-522_d91a8b6009ad3ee2.webp","https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/292de77a9ecd412e881e48a349e1793a~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn89@2020_2/2021/05/01/09-50-29-427_fe885bd71642985c.webp","https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dcdacf559d8c4a098d2aaf30ef1350d1~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn82@2020_4/2021/05/01/09-50-29-697_809f8668ceb20b56.webp","https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a9d3bb288e2947e4904e1aff340e8da3~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn98@2020_2/2021/05/01/09-50-30-152_fd5839f305a48052.webp","https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8d64ce400e0b41119c39a2d109db9e3c~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn94@2020_4/2021/05/01/09-50-30-277_3ba7835455081fa7.webp","https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a4f489d3ae7e4531aad758e50fbb56d0~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn84@2020_6/2021/05/01/09-50-29-751_3c4d0b0146a2fabe.webp","https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/eb9bd632a9cc42dbacf20bbac38e40aa~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn6@2020_4/2021/05/01/09-50-30-017_66f8c8527cf3b8b1.webp"},"publishedOrCreatedDate":1619862594955}],"record":{"createdTime":"2021-05-01 17:49:54","updatedTime":"2021-05-01 17:49:54","feedId":12740,"fetchDate":"Sat, 01 May 2021 09:49:54 +0000","fetchMs":21,"handleMs":5,"totalMs":35796,"newArticles":0,"totalArticles":5,"status":1,"type":0,"ip":"f306b40366a93aa712f78b685bea0f01","hostName":"us-023*","requestId":"a8b7cb364f9a4cf3b108786fb6f34119_12740","contentType":"application/xml; charset=utf-8","totalBytes":60724,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":9,"articlesImgsGithubTotal":8,"successGithubMap":{"myreaderx6":1,"myreaderx16":1,"myreaderx10":1,"myreaderx11":1,"myreaderx2":1,"myreaderx24":1,"myreaderx1":1,"myreaderx29":1},"failGithubMap":{"myreaderx23":1}},"feed":{"createdTime":"2020-08-25 04:37:55","updatedTime":"2020-09-05 16:40:22","id":12740,"name":"掘金前端","url":"https://rsshub.app/juejin/category/frontend","subscriber":243,"website":null,"icon":"https://juejin.im/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx65/cdn53@2020_2/2020/09/05/08-40-02-078_24cb365749d306f2.ico","description":"掘金前端 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-05-01 17:50:30","updatedTime":"2021-05-01 17:50:30","id":null,"feedId":12740,"linkMd5":"f931445d12a1c0c6bb837d53e98cc5ab"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":60724,"tmpBgImgCdnBytes":0,"extra4":{"start":1619862594928,"total":0,"statList":[{"spend":22,"msg":"获取xml内容"},{"spend":5,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":1399,"msg":"正文链接上传到cdn"}]},"extra5":9,"extra6":9,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/db1ffe6632a244d1880b649c2d30f337~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":621,"destHeight":584,"sourceBytes":414095,"destBytes":189684,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":1621,"convertSpendMs":494,"createdTime":"2021-05-01 17:49:55","host":"europe67*","referer":"https://juejin.cn/post/6957223039826133028","linkMd5ListStr":"f931445d12a1c0c6bb837d53e98cc5ab,f931445d12a1c0c6bb837d53e98cc5ab","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn71/contents/2021/05/01/09-49-56-382_c30be0fb3253edd7.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 01 May 2021 09:49:56 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D3AE:90FE:6C5FACC:6E385E2:608D2444"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1619865177"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn71/contents/2021/05/01/09-49-56-382_c30be0fb3253edd7.webp","historyStatusCode":[],"spendMs":298},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"404.4 KB","destSize":"185.2 KB","compressRate":"45.8%"},{"code":1,"isDone":false,"source":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/db1ffe6632a244d1880b649c2d30f337~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":621,"destHeight":584,"sourceBytes":414095,"destBytes":189684,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":2397,"convertSpendMs":526,"createdTime":"2021-05-01 17:50:26","host":"europe67*","referer":"https://juejin.cn/post/6957223039826133028","linkMd5ListStr":"f931445d12a1c0c6bb837d53e98cc5ab,f931445d12a1c0c6bb837d53e98cc5ab","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn71/contents/2021/05/01/09-50-28-078_c30be0fb3253edd7.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 01 May 2021 09:50:29 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D3AE:90FE:6C63165:6E3BD6D:608D2464"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1619865177"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn71/contents/2021/05/01/09-50-28-078_c30be0fb3253edd7.webp","historyStatusCode":[],"spendMs":1208},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"404.4 KB","destSize":"185.2 KB","compressRate":"45.8%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-038.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-020.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/292de77a9ecd412e881e48a349e1793a~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":204,"destHeight":184,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn89@2020_2/2021/05/01/09-50-29-427_fe885bd71642985c.webp","sourceBytes":6071,"destBytes":4726,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":390,"convertSpendMs":3,"createdTime":"2021-05-01 17:50:29","host":"us-009*","referer":"https://juejin.cn/post/6957223039826133028","linkMd5ListStr":"f931445d12a1c0c6bb837d53e98cc5ab","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.9 KB","destSize":"4.6 KB","compressRate":"77.8%"},{"code":1,"isDone":false,"source":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0207099274134065a94fef0e8136f96e~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":204,"destHeight":184,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn2@2020_1/2021/05/01/09-50-29-522_d91a8b6009ad3ee2.webp","sourceBytes":6150,"destBytes":4830,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":474,"convertSpendMs":10,"createdTime":"2021-05-01 17:50:29","host":"us-038*","referer":"https://juejin.cn/post/6957223039826133028","linkMd5ListStr":"f931445d12a1c0c6bb837d53e98cc5ab","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6 KB","destSize":"4.7 KB","compressRate":"78.5%"},{"code":1,"isDone":false,"source":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dcdacf559d8c4a098d2aaf30ef1350d1~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":152,"destHeight":101,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn82@2020_4/2021/05/01/09-50-29-697_809f8668ceb20b56.webp","sourceBytes":3093,"destBytes":2336,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":588,"convertSpendMs":2,"createdTime":"2021-05-01 17:50:29","host":"us-020*","referer":"https://juejin.cn/post/6957223039826133028","linkMd5ListStr":"f931445d12a1c0c6bb837d53e98cc5ab","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3 KB","destSize":"2.3 KB","compressRate":"75.5%"},{"code":1,"isDone":false,"source":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a4f489d3ae7e4531aad758e50fbb56d0~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":580,"destHeight":564,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn84@2020_6/2021/05/01/09-50-29-751_3c4d0b0146a2fabe.webp","sourceBytes":33891,"destBytes":16936,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":659,"convertSpendMs":9,"createdTime":"2021-05-01 17:50:29","host":"us-021*","referer":"https://juejin.cn/post/6957223039826133028","linkMd5ListStr":"f931445d12a1c0c6bb837d53e98cc5ab","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.1 KB","destSize":"16.5 KB","compressRate":"50%"},{"code":1,"isDone":false,"source":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/eb9bd632a9cc42dbacf20bbac38e40aa~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":264,"destHeight":199,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn6@2020_4/2021/05/01/09-50-30-017_66f8c8527cf3b8b1.webp","sourceBytes":2960,"destBytes":6538,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":922,"convertSpendMs":4,"createdTime":"2021-05-01 17:50:29","host":"us-026*","referer":"https://juejin.cn/post/6957223039826133028","linkMd5ListStr":"f931445d12a1c0c6bb837d53e98cc5ab","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.9 KB","destSize":"6.4 KB","compressRate":"220.9%"},{"code":1,"isDone":false,"source":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a9d3bb288e2947e4904e1aff340e8da3~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":464,"destHeight":489,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn98@2020_2/2021/05/01/09-50-30-152_fd5839f305a48052.webp","sourceBytes":21345,"destBytes":9616,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":1073,"convertSpendMs":13,"createdTime":"2021-05-01 17:50:29","host":"europe-60*","referer":"https://juejin.cn/post/6957223039826133028","linkMd5ListStr":"f931445d12a1c0c6bb837d53e98cc5ab","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.8 KB","destSize":"9.4 KB","compressRate":"45.1%"},{"code":1,"isDone":false,"source":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8d64ce400e0b41119c39a2d109db9e3c~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":314,"destHeight":210,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn94@2020_4/2021/05/01/09-50-30-277_3ba7835455081fa7.webp","sourceBytes":4804,"destBytes":2678,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":1165,"convertSpendMs":4,"createdTime":"2021-05-01 17:50:29","host":"europe-22*","referer":"https://juejin.cn/post/6957223039826133028","linkMd5ListStr":"f931445d12a1c0c6bb837d53e98cc5ab","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.7 KB","destSize":"2.6 KB","compressRate":"55.7%"},{"code":1,"isDone":false,"source":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cfe9a536b47a4402b0378836c211d2ee~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":473,"destHeight":440,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn77@2020_3/2021/05/01/09-50-30-301_0f3d935c662ba1e5.webp","sourceBytes":22311,"destBytes":13064,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":1258,"convertSpendMs":7,"createdTime":"2021-05-01 17:50:29","host":"europe-56*","referer":"https://juejin.cn/post/6957223039826133028","linkMd5ListStr":"f931445d12a1c0c6bb837d53e98cc5ab","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.8 KB","destSize":"12.8 KB","compressRate":"58.6%"}],"successGithubMap":{"myreaderx6":1,"myreaderx16":1,"myreaderx10":1,"myreaderx11":1,"myreaderx2":1,"myreaderx24":1,"myreaderx1":1,"myreaderx29":1},"failGithubMap":{"myreaderx23":1}}