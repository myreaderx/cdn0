{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"11 Weeks of Android: People & Identity","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/diUEUHUWU1o/11-weeks-of-android-people-identity.html","description":"<img style=\"display:none\" src=\"https://2.bp.blogspot.com/-dFSgJWCaDC0/Xt7CIj42_fI/AAAAAAAAPB8/RiZgZY1zzEEc-iP5LkVwDMJMAO4lmrRXwCLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2Btemplate_mock%2Bv1.png\"> \n<p><em>Posted by Dr. Stefan Frank, Senior Product Manager, Android System UI</em></p>\n<p> <a href=\"https://2.bp.blogspot.com/-dFSgJWCaDC0/Xt7CIj42_fI/AAAAAAAAPB8/RiZgZY1zzEEc-iP5LkVwDMJMAO4lmrRXwCLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2Btemplate_mock%2Bv1.png\" imageanchor=\"1\"><img id=\"imgFull\" style=\"width:100%;\" border=\"0\" src=\"https://2.bp.blogspot.com/-dFSgJWCaDC0/Xt7CIj42_fI/AAAAAAAAPB8/RiZgZY1zzEEc-iP5LkVwDMJMAO4lmrRXwCLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2Btemplate_mock%2Bv1.png\" data-original-width=\"1600\" data-original-height=\"730\" alt=\"#11 weeks of Android with Android logo\"></a> </p>\n<p> <em>This blog post is part of a weekly series for <a href=\"http://d.android.com/11weeksofandroid\">#11WeeksOfAndroid</a>. Each week we’re diving into a key area of Android so you don’t miss anything. This week, we spotlight people &amp; identity. Here's a look at what you should know.</em> </p> \n<h2>The big news</h2> \n<p> One of the goals of <a href=\"https://developer.android.com/android11\">Android 11</a> was making our phones more people-centric. Because nothing matters more to people than connecting to loved ones. It is a core human need especially during our current physical distancing constraints. We have the need to be more social than ever before. <a href=\"https://developer.android.com/android11\">Android 11</a> reimagines how we have conversations on our phones by adding new capabilities to help you maintain your identity across multiple devices. </p> \n<p> We are announcing some new features in Android 11 that allows you to easily connect with your loved ones, friends and business colleagues. At the center of this release is the Android Conversation Shortcut API and Identity Services Library. These new tools empower instant connections to your best friend, sharing funny pictures of your dogs, telling your aunt about a tasty seafood recipe that you discovered, or congratulating an office colleague about her promotion. And they also provide a new level of password management that makes it easier for your users to sign up and sign in. </p> \n<p> One of our favorite features brings conversations from people that matter most to you right to the lock screen of your phone. You’ll easily recognize them by their avatar and instantly respond to your family, friends, or colleagues. These are people you truly want to connect to. We knew this feature would be useful, but the responses from our beta-testers made us smile. The decision to include the Conversation Shortcut API to improve the lives of our users was one of the easiest decisions for us to make in the release of Android 11. </p> \n<a href=\"https://3.bp.blogspot.com/-whxWR9jPRr8/XuuLHmgUTxI/AAAAAAAAPHM/MH9IACXVuuMLgrIK_Kp8qyYZSY2anySjACLcBGAsYHQ/s1600/image1.gif\" imageanchor=\"1\"><img id=\"imgFull\" border=\"0\" src=\"https://3.bp.blogspot.com/-whxWR9jPRr8/XuuLHmgUTxI/AAAAAAAAPHM/MH9IACXVuuMLgrIK_Kp8qyYZSY2anySjACLcBGAsYHQ/s1600/image1.gif\" data-original-width=\"1000\" data-original-height=\"1000\" alt=\"Creating a bubble from an incoming notification and accessing the conversation from the bubble.\"></a> \n<p id=\"imgCaption\"> <em>Creating a bubble from an incoming notification and accessing the conversation from the bubble.</em> </p> \n<p> One of the new features building on top of shortcuts is the new conversation space at the top of your notifications. It focuses your attention on what matters most - your conversations. Right from these notifications the user can trigger another new feature in Android 11 - <a href=\"https://developer.android.com/guide/topics/ui/bubbles\">Bubbles</a>. Bubbles are small representations of conversations floating over other content on the side of the screen, which can be expanded to allow quick access to conversations, without changing what you were doing on the device. They are super handy for carrying on conversations while using the device for other tasks. </p> \n<a href=\"https://3.bp.blogspot.com/-D_aYqhKwr5w/XuuLQMRSf2I/AAAAAAAAPHQ/keM_cP-4f2oqT_nMU2yWQvVGfcs4KAscgCLcBGAsYHQ/s1600/image2.gif\" imageanchor=\"1\"><img id=\"imgFull\" border=\"0\" src=\"https://3.bp.blogspot.com/-D_aYqhKwr5w/XuuLQMRSf2I/AAAAAAAAPHQ/keM_cP-4f2oqT_nMU2yWQvVGfcs4KAscgCLcBGAsYHQ/s1600/image2.gif\" data-original-width=\"1000\" data-original-height=\"1000\" alt=\"The new conversations space showing how a conversation is marked as priority and will be displayed on the lock screen.\"></a> \n<p id=\"imgCaption\"> <em>The new conversations space showing how a conversation is marked as priority and will be displayed on the lock screen. </em> </p> \n<p> A long tap on conversation notifications enables the user to mark priority conversations in order to give special prominence to the most important people. Priority conversations will be displayed with their individual avatar right on the lock screen and move to the top of your notifications. They can even be set to break through do-not-disturb. Another use of the conversation shortcuts is that they are used as share targets in the system share sheet, which was already launched in Android 10. </p> \n<p> Another focus of this week was identity. To tackle user and developer complexity that makes identity a challenge for developers, we've been working on <a href=\"http://goo.gle/onetapandroid\">One Tap</a> and Block Store, part of our new Google Identity Services Library. <a href=\"http://goo.gle/onetapandroid\">One Tap</a> is our new cross-platform sign-in mechanism for Web and Android, supporting and streamlining multiple types of credentials. Block Store is our new token-based sign-in mechanism that’s built on top of Backup and Restore. It allows you to keep your user signed in across Android devices. </p> \n<p> We’re super excited about all these features [since] they help <strong>all of us</strong> connect, communicate and express ourselves to the people that we care about and to the apps we are dealing with -- which is as important now as it’s ever been.” </p> \n<h2>What to watch</h2> \n<p> For a high level overview of the people centric functionality, we recommend that you check out the Android 11 launch highlight video on People. Earlier this week, we also launched a new talk on ‘<a href=\"https://www.youtube.com/watch?v=CKlVSvFyt3s&amp;list=PLWz5rJ2EKKc-Z8NeBXJkf1bzUVhx3fvh4&amp;index=3\">Conversation Notifications</a>’, where Artur describes how to implement the conversation shortcut and bubbles. There is also a <a href=\"https://www.youtube.com/watch?v=oLLUDOQxJS8\">great overview talk</a> on the conversation additions and other System UI news from Dan. Finally, you can also listen to Chet’s podcasts where he interviews us on <a href=\"http://androidbackstage.blogspot.com/2020/06/episode-141-discussing-conversations.html\">People</a> and <a href=\"http://androidbackstage.blogspot.com/2020/06/episode-140-bubbles.html\">Bubbles</a>. </p> \n<p> If you’re interested in learning more about Identity, we also published “<a href=\"https://www.youtube.com/watch?v=KFGthqwDmc0&amp;list=PLWz5rJ2EKKc-Z8NeBXJkf1bzUVhx3fvh4&amp;index=4\">In Identity on Android: What’s new in sign-in</a>”, this week. In this video, Vishal explains the new libraries in the Google Identity System: One Tap and Block Store.\" </p> \n<p> Two of the teams that worked very early with us on these conversation specific topics are the Messenger team from Facebook and the direct messaging team from Twitter. Read the stories around both of these implementations <a href=\"https://android-developers.googleblog.com/2020/06/bringing-twitters-dms-into-android-11s.html\">here</a> and <a href=\"https://android-developers.googleblog.com/2020/06/messenger-and-conversations.html\">here</a>. </p> \n<h2>Learning path</h2> \n<p> If you’re looking for an easy way to pick up the highlights of this week, check out the <a href=\"https://developers.android.com/courses/pathways/android-week1-people-identity\">People and Identity pathway</a>. A pathway is an ordered tutorial that allows users to complete a pre-defined module that culminates in a quiz. It may include codelabs, videos, articles and blog posts. A virtual badge is awarded to each user who passes the quiz. Test your knowledge of key takeaways about People and Identity to earn a limited edition badge. </p> \n<h2>Key takeaways</h2> \n<p> Android 11 is the starting point of an ongoing focus on what matters most to users, people and conversations. Many of our partners in our ecosystem introduced amazing apps and services enabling these connections with people and conversations. We in Android want to elevate and surface these partners more prominently in order to support this goal. Thus if you are working on an app that fosters real time communication between people, we strongly encourage you to adopt the conversation shortcut based APIs for notifications, bubbles and sharing when targeting API 30 in order to put users’ conversations front and center and give them quick access to your app. The developer documentation <a href=\"https://developer.android.com/preview/features/conversations\">can be found here</a>. </p> \n<p> For apps that handle user accounts, we encourage you to help our users avoid messy password hunting and forgotten credential processes by integrating One Tap to streamline credential management and Block Store to handle device updates. These integrations will work on phones back to Android M. </p> \n<p> In the spirit of this week, I wish you meaningful and joyful connections with the people that matter to you and seamless experiences with your favorite apps. We hope you will help us in our journey of supporting these goals. </p> \n<h2>Resources</h2> \n<p> <em>You can find the entire playlist of #11WeeksOfAndroid video content <a href=\"https://www.youtube.com/playlist?list=PLWz5rJ2EKKc-Z8NeBXJkf1bzUVhx3fvh4\">here</a>, and learn more about each week <a href=\"http://d.android.com/11weeksofandroid\">here</a>. We’ll continue to spotlight new areas each week, so <a href=\"https://android-developers.googleblog.com/\">keep an eye out</a> and follow us on <a href=\"https://twitter.com/androiddev\">Twitter</a> and <a href=\"https://www.youtube.com/user/androiddevelopers\">YouTube</a>. Thanks so much for letting us be a part of this experience with you! </em> </p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=diUEUHUWU1o:FgP-1Wfo0-I:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=diUEUHUWU1o:FgP-1Wfo0-I:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=diUEUHUWU1o:FgP-1Wfo0-I:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/diUEUHUWU1o\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Thu, 18 Jun 2020 22:03:00 +0000","feedId":7,"bgimg":"https://2.bp.blogspot.com/-dFSgJWCaDC0/Xt7CIj42_fI/AAAAAAAAPB8/RiZgZY1zzEEc-iP5LkVwDMJMAO4lmrRXwCLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2Btemplate_mock%2Bv1.png","linkMd5":"0eb9c41f236b1d185a012362a87ce259","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn86@2020_3/2020-07-25/1595694868343_74829fe217b68af4.webp","author":"Android Developers","articleImgCdnMap":{"https://2.bp.blogspot.com/-dFSgJWCaDC0/Xt7CIj42_fI/AAAAAAAAPB8/RiZgZY1zzEEc-iP5LkVwDMJMAO4lmrRXwCLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2Btemplate_mock%2Bv1.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn86@2020_3/2020-07-25/1595694868343_74829fe217b68af4.webp","https://3.bp.blogspot.com/-whxWR9jPRr8/XuuLHmgUTxI/AAAAAAAAPHM/MH9IACXVuuMLgrIK_Kp8qyYZSY2anySjACLcBGAsYHQ/s1600/image1.gif":null,"https://3.bp.blogspot.com/-D_aYqhKwr5w/XuuLQMRSf2I/AAAAAAAAPHQ/keM_cP-4f2oqT_nMU2yWQvVGfcs4KAscgCLcBGAsYHQ/s1600/image2.gif":null,"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=diUEUHUWU1o:FgP-1Wfo0-I:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn74@2020_2/2020-07-25/1595694875127_e19ec3b8792fd05f.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/diUEUHUWU1o":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn38@2020_3/2020-07-25/1595694871935_26e366c20caf9e32.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"Android 11 Beta 2 and Platform Stability","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/bd-T1TBazY4/android-11-beta-2-and-platform-stability.html","description":"<img style=\"display:none\" src=\"https://3.bp.blogspot.com/-Va2TPLzeDbs/XwTTXcFuXFI/AAAAAAAAJGA/hw7OgOxBGcsUQgtPGNiDwf0l85fKLZ4qACLcBGAsYHQ/s1600/Dialscreenshot.png\"> \n<p><em>Posted by Dave Burke, VP of Engineering</em></p>\n<p> <a href=\"https://3.bp.blogspot.com/-Va2TPLzeDbs/XwTTXcFuXFI/AAAAAAAAJGA/hw7OgOxBGcsUQgtPGNiDwf0l85fKLZ4qACLcBGAsYHQ/s1600/Dialscreenshot.png\" imageanchor=\"1\"><img border=\"0\" style=\"width:230px\" id=\"floatRight\" src=\"https://3.bp.blogspot.com/-Va2TPLzeDbs/XwTTXcFuXFI/AAAAAAAAJGA/hw7OgOxBGcsUQgtPGNiDwf0l85fKLZ4qACLcBGAsYHQ/s1600/Dialscreenshot.png\" data-original-width=\"1318\" data-original-height=\"1322\" alt=\"Android 11 dial\"></a> </p>\n<p> A few weeks ago we <a href=\"https://android-developers.googleblog.com/2020/06/unwrapping-android-11-beta-plus-more.html\">unwrapped the first Beta of Android 11</a> with a focus on people, controls, and privacy. As we highlighted in the <a href=\"https://developer.android.com/android11\">#Android11Beta Launch</a>, we’re making Android more people-centric and expressive, helping users control their smart devices, and giving them even more control over sensitive permissions. Developers can use APIs like <a href=\"https://developer.android.com/preview/features/conversations\">Conversations</a>, <a href=\"https://developer.android.com/guide/topics/ui/bubbles\">Bubbles</a>, <a href=\"https://developer.android.com/preview/features/device-control\">Device Controls</a>, and <a href=\"https://developer.android.com/preview/features/media-controls\">Media Controls</a>, to integrate these experiences into their apps. </p> \n<p> Today we’re pushing out the second Beta of Android 11 for you to try. This release takes us to the <a href=\"https://developer.android.com/preview/overview#timeline\">Platform Stability</a> milestone, which means that Android 11’s APIs and behaviors are finalized. For developers, it’s time to get started on your final compatibility updates and publish them in time for the official release later in Q3. </p> \n<p> This week’s theme in <a href=\"https://developer.android.com/11weeksofandroid\">#11 Weeks of Android</a> is Android 11 Compatibility and we’ll be sharing helpful content and materials all week. You can find them on the <a href=\"https://developer.android.com/11weeksofandroid\">#11 Weeks page</a> or follow Android Developers on <a href=\"https://twitter.com/AndroidDev\">Twitter</a> and <a href=\"https://www.youtube.com/user/androiddevelopers\">Youtube</a>. </p> \n<p> You can get Beta 2 today on your Pixel 2, 3, 3a, and 4 device by <a href=\"https://www.google.com/android/beta\">enrolling here</a> for over-the-air updates, and <a href=\"https://developer.android.com/preview/download\">downloads</a> are also available. If you previously enrolled for Beta 1, you will automatically get the over-the-air update. <a href=\"https://developer.android.com/preview/feedback.html\">Let us know what you think</a>, and thanks for the feedback you’ve provided so far! </p> \n<h2 id=\"platformstability\">Platform Stability</h2> \n<p> Beta 2 brings Android 11 to <a href=\"https://developer.android.com/preview/overview#platform_stability\">Platform Stability</a>, a new release milestone that we added this year just for developers, based on your feedback. </p> \n<p> Platform Stability means that all app-facing surfaces and behaviors are now final in Android 11. This includes not only final SDK and NDK APIs, but also final system behaviors and restrictions on non-SDK interfaces that may affect apps. So from Beta 2, you can release compatibility updates with confidence that the platform won’t change. More on the timeline is <a href=\"https://developer.android.com/preview/overview#timeline\">here</a>. </p> \n<a href=\"https://4.bp.blogspot.com/-xv5CjfndWg8/XwTT2ykJSsI/AAAAAAAAJGI/rqxWH9MppHoIcLffVcmtnaBXwmspfeeCwCLcBGAsYHQ/s1600/timeline.png\" imageanchor=\"1\"><img border=\"0\" id=\"imgFull\" src=\"https://4.bp.blogspot.com/-xv5CjfndWg8/XwTT2ykJSsI/AAAAAAAAJGI/rqxWH9MppHoIcLffVcmtnaBXwmspfeeCwCLcBGAsYHQ/s1600/timeline.png\" data-original-width=\"1600\" data-original-height=\"374\" alt=\"Platform Stability timeline\"></a> \n<p> With the platform now stable, we’re encouraging <strong>all app and game</strong> <strong>developers</strong> to start your final compatibility testing and publish your updates ahead of the final release. </p> \n<p> For <strong>all SDK, library, tools, and game engine developers</strong>, it’s even more important to start testing now and release your compatible updates as soon as possible -- your downstream app and game developers may be blocked until they receive your updates. When you’ve released a compatible update, be vocal and let developers know! </p> \n<iframe width=\"560\" height=\"315\" id=\"imgFull\" src=\"https://www.youtube.com/embed/OzlhNZEAchQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> \n<br>\n<br> \n<h2 id=\"appcompatibility\">Why app compatibility is important</h2> \n<p> For Android, the term a<em>pp compatibility</em> means that your app runs properly on a specific version of the platform, typically the latest version. You can check this right now by installing your production app on a device or emulator running Android 11. Just test all of the user flows and features, and if the app looks and runs properly, then you’re done, it’s compatible! </p> \n<p> It sounds simple, but sometimes there’s more to it. With each release, we make integral changes that improve privacy and security, as well as implement changes that evolve the overall user experience across the OS. Sometimes these can affect your apps, so it’s important to take a look at the <a href=\"https://developer.android.com/preview/behavior-changes-all\">behavior changes</a> and test against them, then publish the compatible update to users. It’s a basic but critical level of quality. </p> \n<p> App compatibility comes into play as users update to the latest version of Android, whether they’ve purchased a new device or installed an update on their current device. They’re excited to explore the latest version of Android, and they want to experience it with their favorite apps. If the apps don’t work properly, it’s a major issue - for users and for all of us. </p> \n<p> So while there are a ton of <a href=\"https://developer.android.com/preview/features\">new APIs and capabilities</a> to explore, and more changes to consider when you’re ready to change your app’s targeting, start by testing your current app and releasing a compatible update first. </p> \n<p> Updates to Pixel and other devices will get started as soon as Android 11 reaches the final release to <a href=\"https://source.android.com/\">Android Open Source Project (AOSP)</a>, which we expect later in Q3. Multiple partner devices are also in active public previews now to support your compatibility testing. </p> \n<h2 id=\"easier_app_compatibility\">Making app compatibility easier in Android 11</h2> \n<p> With each release, we’re working to reduce the work you’ll need to do to get your apps ready. In Android 11, we’ve added new processes, developer tools, and release milestones to minimize the impact of platform updates and make it easier for apps to stay compatible. </p> \n<ul> \n <li><strong>Minimizing the impact of behavior changes</strong> - we’re making a conscious effort to minimize platform changes that could affect apps by making them opt-in, wherever possible, until you set <a href=\"https://developer.android.com/distribute/best-practices/develop/target-sdk\">targetSdkVersion</a> to Android 11 in your app. If you are distributing through Google Play, you’ll have more than a year to opt-in to these changes. </li>\n <li><strong>Easier testing and debugging</strong> - To help you test for compatibility, we’ve made many of the breaking changes toggleable - meaning that you can force-enable or disable the changes individually from Developer options or adb. With this change, there’s no longer a need to change targetSdkVersion or recompile your app for basic testing. <a href=\"https://developer.android.com/preview/test-changes\">Check out the details here</a>. \n  <center>\n   <a href=\"https://3.bp.blogspot.com/-vkoW40yNHlY/XwTUwuWo4mI/AAAAAAAAJGU/mrx1eNqeKAQXxtkM-lAFs0oY9Vuzu6HmQCLcBGAsYHQ/s1600/appcompatibilitychanges.png\" imageanchor=\"1\"><img style=\"width:300px\" border=\"0\" src=\"https://3.bp.blogspot.com/-vkoW40yNHlY/XwTUwuWo4mI/AAAAAAAAJGU/mrx1eNqeKAQXxtkM-lAFs0oY9Vuzu6HmQCLcBGAsYHQ/s1600/appcompatibilitychanges.png\" data-original-width=\"1221\" data-original-height=\"1600\" alt=\"App compatibility toggles in Developer options\"></a>\n  </center> <p id=\"imgCaption\">App compatibility toggles in Developer options.</p> </li> \n</ul> \n<ul> \n <li><strong>Restrictions on non-SDK interfaces</strong> - as part of our ongoing effort to gradually move developers away from non-SDK APIs, we’ve updated the lists of <a href=\"https://developer.android.com/preview/non-sdk-11\">restricted non-SDK interfaces</a>, and as always your feedback and <a href=\"https://developer.android.com/distribute/best-practices/develop/restrictions-non-sdk-interfaces#feature-request\">requests for public API equivalents</a> are welcome. </li>\n <li><strong>Dynamic resource loader</strong> - As part of their migration away from non-SDK interfaces, developers asked us for a public API to load resources and assets dynamically at runtime. We’ve now added a <a href=\"https://developer.android.com/reference/android/content/res/loader/package-summary.html\">Resource Loader framework</a> in Android 11, and thank you to the developers who gave us this input! </li>\n <li><strong>Platform stability milestone</strong> - As mentioned, this is a new milestone we’ve added to our release process to give developers a clear date for final changes. It includes not only final SDK/NDK APIs, but also final internal APIs and system behaviors that may affect apps. </li> \n</ul> \n<br>\n<br> \n<h2 id=\"appsready\">Get your apps ready for Android 11!</h2> \n<p>Now that Android 11 is stable, <b>make your apps compatible</b> as soon as possible. Here’s how to do it. </p> \n<a href=\"https://2.bp.blogspot.com/-c7S2OU24y-g/XwTVSX-OHJI/AAAAAAAAJGc/y678nfHADwoY8olKdEcSVnC4Pga9uG8tACLcBGAsYHQ/s1600/androi11-compat-flow.png\" imageanchor=\"1\"><img border=\"0\" id=\"imgFull\" src=\"https://2.bp.blogspot.com/-c7S2OU24y-g/XwTVSX-OHJI/AAAAAAAAJGc/y678nfHADwoY8olKdEcSVnC4Pga9uG8tACLcBGAsYHQ/s1600/androi11-compat-flow.png\" data-original-width=\"831\" data-original-height=\"624\" alt=\"Android 11 compatibility flow chart\"></a> \n<p> For testing your current app, start with the <a href=\"https://developer.android.com/preview/behavior-changes-all\">behavior changes for all apps</a> to see where it could be affected. Here are the top changes (these apply regardless of your app’s targetSdkVersion): </p> \n<ul> \n <li><strong>One-time permission</strong> - Users can now grant single-use permission to access location, device microphone and camera. Details <a href=\"https://developer.android.com/preview/privacy/permissions#one-time\">here</a>. </li>\n <li><strong>External storage access</strong> - Apps can no longer access other apps’ files in external storage. Details <a href=\"https://developer.android.com/preview/privacy/storage#other-apps-private-dirs\">here</a>. </li>\n <li><strong>Scudo hardened allocator</strong> - Now the heap memory allocator for native code in apps. Details <a href=\"https://developer.android.com/preview/behavior-changes-all#scudo\">here</a>. </li>\n <li><strong>File descriptor sanitizer</strong> - Now enabled by default to detect file descriptor handling issues for native code in apps. Details <a href=\"https://developer.android.com/preview/behavior-changes-all#fdsan\">here</a>. </li> \n</ul> \n<p> Remember to <strong>test the libraries and SDKs in your app</strong> for compatibility. If you find an issue, try updating to the latest version of the SDK, or reach out to the developer for help. </p> \n<p> Later, after you’ve published the compatible version of your current app, you can start the <a href=\"https://developer.android.com/preview/migration#setup_sdk\">process</a> of <a href=\"https://developer.android.com/distribute/best-practices/develop/target-sdk\">updating your app's targetSdkVersion</a>. Review the <a href=\"https://developer.android.com/preview/behavior-changes-11\">behavior changes for Android 11 apps</a> and try the <a href=\"https://developer.android.com/preview/test-changes\">compatibility framework</a> to help find impacts. Here are some of the top changes to test for (these apply only to targetSdkVersion 30+): </p> \n<ul> \n <li><strong>Scoped storage</strong> - New storage restrictions, behaviors, and APIs for apps reading and writing files. Details <a href=\"https://developer.android.com/preview/privacy/storage#scoped-storage\">here</a>. </li>\n <li><strong>Background location </strong>- Changes to how apps request background location and how users grant it. Details <a href=\"https://developer.android.com/preview/privacy/location#request-background-location-separately\">here</a>. </li>\n <li><strong>Package visibility</strong> - Changes to how apps can query and interact with other installed apps. Details <a href=\"https://developer.android.com/preview/privacy/package-visibility\">here</a>. </li>\n <li><strong>Compressed resource files</strong> - Apps can’t be installed or updated if they contain a compressed resources.arsc file, or if the file is not aligned on a 4-byte boundary. Details <a href=\"https://developer.android.com/preview/behavior-changes-11#compressed-resource-file\">here</a>. </li>\n <li><strong>APK Signature Scheme v2 </strong>- Apps must now be signed using APK Signature Scheme v2 or higher. Details <a href=\"https://developer.android.com/preview/behavior-changes-11#minimum-signature-scheme\">here</a>. </li>\n <li><strong>Heap pointer tagging</strong> - For 64-bit processes, native heap allocations have a tag set in the top byte of the pointer that should not be modified by apps. Details <a href=\"https://developer.android.com/preview/behavior-changes-11#heap-pointer-tagging\">here</a>. </li> \n</ul> \n<p> During testing, watch for <strong>uses of restricted non-SDK interfaces</strong> in your app and move those to public SDK equivalents instead. You can read about the restricted APIs <a href=\"https://developer.android.com/preview/non-sdk-11\">here</a>. </p> \n<h2><strong>Explore the new features and APIs</strong></h2> \n<p> As soon as you’re ready, dive into Android 11 and learn about the new experiences you can build. Our <a href=\"https://android-developers.googleblog.com/2020/06/unwrapping-android-11-beta-plus-more.html\">#Android11 Beta post</a> has a recap of new features for developers, and you can also visit the <a href=\"https://developer.android.com/android11\">Beta Launch page</a> to see talks from the Android team on what’s new in their areas. </p> \n<p> Android Studio also has new features for Android 11 also, to improve your productivity and workflow, such as <a href=\"https://developer.android.com/preview/features#incremental\">ADB incremental</a> for faster installs of large APKs, and additional nullability annotations on platform APIs. You can give these a try by <a href=\"https://developer.android.com/studio/preview\">downloading</a> the latest Android Studio Beta or Canary version. Instructions for configuring Android Studio for Android 11 are <a href=\"https://developer.android.com/preview/setup-sdk\">here</a>. </p> \n<p> For complete details on Android 11 features and APIs, visit the <a href=\"https://developer.android.com/11\">Android 11 developer site</a>. </p> \n<h2>How do I get Beta 2?</h2> \n<p> It’s easy! You can <a href=\"https://www.google.com/android/beta\">enroll here</a> to get Android 11 Beta updates over-the-air for Pixel 2, 3, 3a, and 4 devices. Alternatively, give <a href=\"https://flash.android.com/welcome?continue=%2Fpreview%2Fbeta2\">Android Flash Tool</a> a try for easy on-demand updates, and downloadable system images are also <a href=\"https://developer.android.com/preview/download\">available</a>. If you don't have a Pixel device, you can use the Android Emulator in Android Studio or try a GSI image to run Android 11 on supported Treble-compliant devices. </p> \n<p> As always, your feedback is critical, so please <a href=\"https://developer.android.com/preview/feedback.html\">let us know what you think</a>. You can use our hotlists for filing <a href=\"https://issuetracker.google.com/issues/new?component=190602&amp;template=1226573\">platform issues</a> (including privacy and behavior changes), <a href=\"https://issuetracker.google.com/issues/new?component=190602&amp;template=1227376\">app compatibility issues</a>, and <a href=\"https://issuetracker.google.com/issues/new?component=190602&amp;template=1227583\">third-party SDK issues</a>. You've shared great feedback with us so far -- thank you! </p> \n<h2>Android 11 compatibility week</h2> \n<p> This week in <a href=\"https://developer.android.com/11weeksofandroid\">#11 Weeks of Android</a>, we’re highlighting Android 11 Compatibility, a theme that’s important for all developers now that the platform has reached stability. </p> \n<p> We’re sharing resources to help you with compatibility testing <a href=\"https://developer.android.com/11weeksofandroid\">here</a>, and you can follow Android Developers on <a href=\"https://twitter.com/AndroidDev\">Twitter</a> and <a href=\"https://www.youtube.com/user/androiddevelopers\">Youtube</a> to catch helpful content and materials in this area all this week! </p> \n<p> Also, the Android engineering team will host a Reddit AMA on r/androiddev tomorrow, July 9 at 12:00PM PST, to answer your technical questions about Android 11. See <a href=\"https://www.reddit.com/r/androiddev/comments/hk3hrq/were_on_the_android_engineering_team_ask_us\">this post</a> for details and to submit your questions. </p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=bd-T1TBazY4:MNALpYpI03k:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=bd-T1TBazY4:MNALpYpI03k:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=bd-T1TBazY4:MNALpYpI03k:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/bd-T1TBazY4\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Wed, 08 Jul 2020 16:59:00 +0000","feedId":7,"bgimg":"https://3.bp.blogspot.com/-Va2TPLzeDbs/XwTTXcFuXFI/AAAAAAAAJGA/hw7OgOxBGcsUQgtPGNiDwf0l85fKLZ4qACLcBGAsYHQ/s1600/Dialscreenshot.png","linkMd5":"be3be4075c0abd45ebce1a15a7ab4350","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn38@2020_5/2020-07-25/1595694868161_23dc6d58d42c1d8b.webp","author":"Android Developers","articleImgCdnMap":{"https://3.bp.blogspot.com/-Va2TPLzeDbs/XwTTXcFuXFI/AAAAAAAAJGA/hw7OgOxBGcsUQgtPGNiDwf0l85fKLZ4qACLcBGAsYHQ/s1600/Dialscreenshot.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn38@2020_5/2020-07-25/1595694868161_23dc6d58d42c1d8b.webp","https://4.bp.blogspot.com/-xv5CjfndWg8/XwTT2ykJSsI/AAAAAAAAJGI/rqxWH9MppHoIcLffVcmtnaBXwmspfeeCwCLcBGAsYHQ/s1600/timeline.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn94@2020_4/2020-07-25/1595694873862_b6a491787fffc57f.webp","https://3.bp.blogspot.com/-vkoW40yNHlY/XwTUwuWo4mI/AAAAAAAAJGU/mrx1eNqeKAQXxtkM-lAFs0oY9Vuzu6HmQCLcBGAsYHQ/s1600/appcompatibilitychanges.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn30@2020_4/2020-07-25/1595694875768_d9e492e8775cc711.webp","https://2.bp.blogspot.com/-c7S2OU24y-g/XwTVSX-OHJI/AAAAAAAAJGc/y678nfHADwoY8olKdEcSVnC4Pga9uG8tACLcBGAsYHQ/s1600/androi11-compat-flow.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn74@2020_2/2020-07-25/1595694873980_8d6bcf6830d2a40c.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=bd-T1TBazY4:MNALpYpI03k:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn58@2020_1/2020-07-25/1595694871906_3d071eb0f07eae60.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/bd-T1TBazY4":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn38@2020_2/2020-07-25/1595694873506_038baab1ddfcd0f0.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"Announcing the winners of the #AndroidDevChallenge, powered by on-device machine learning","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/MNxJegOmBqY/dev-challenge-winners.html","description":"<img style=\"display:none\" src=\"https://2.bp.blogspot.com/-3rDnNays7jc/XvDFnQQCdpI/AAAAAAAAPHk/ehkWuzoC5WcJ6GWWeatBMWo2LQIPlaIOACLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2B2.png\"> \n<p><em>Posted by <a href=\"https://twitter.com/jlehrbaum?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor\">Jacob Lehrbaum</a>, Director of Developer Relations, Android</em></p>\n<p> </p>\n<p> Developers like you have always played an important role in Android innovation. Over 10 years ago, when we first launched the Android SDK, we also announced the <a href=\"https://developer.android.com/helpful-innovation\">Android Developer Challenge</a> to reward model apps and highlight new ways of solving user problems. As Android pushes the boundaries of machine learning, 5G, foldables, and more, developers continue to help shape these new frontiers. To celebrate this work, we revived the challenge in 2019, with a focus on <a href=\"http://developer.android.com/helpful-innovation\">“Helpful Innovation,”</a> powered by on-device machine learning. </p> \n<iframe id=\"imgFull\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/0UacdrFRMtI\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> \n<p> We received hundreds of creative projects, and at the end of last year, picked 10 winners who each combined a strong idea and a thirst to bring it to life. Since then, we’ve been working with those winners to help turn their ideas into reality. And today,<a href=\"http://developer.android.com/helpful-innovation\"> we’re announcing the 10 winners</a>. Some are still at the beginning of their journey but but their apps are now ready for you to download and try out! ! </p> \n<ul> \n <li><strong><a href=\"https://play.google.com/store/apps/details?id=com.navneet.theagrodocapp\">AgroDoc</a></strong> helps farmers diagnose plant disease and make treatment plans. [Navneet Krishna; Kochi, India] </li>\n <li><strong><a href=\"https://play.google.com/store/apps/details?id=com.fyp.agrifarm\">AgriFarm</a></strong> helps farmers detect plant diseases and prevent major damage in fruits and vegetables such as tomatoes, corn and potatoes. [Balochisan, Pakistan] </li>\n <li><strong><a href=\"https://play.google.com/store/apps/details?id=com.geekslab.david.mobilesms .\">Eskke</a> </strong>streamlines mobile money management for people in the Congo, letting them transfer money, pay bills, buy subscriptions and essential airtime through SMS. [David Mumbere Kathoh; Goma, Democratic Republic of Congo] </li>\n <li><strong><a href=\"https://play.google.com/store/apps/details?id=com.mangoai.leepi\">Leepi</a> </strong>helps students learn hand gestures and symbols for American Sign Language. [Prince Patel; Bengaluru, India] </li>\n <li><strong><a href=\"https://play.google.com/store/apps/details?id=com.mixpose.shiva.android\">MixPose</a></strong> is a live streaming platform that gives yoga teachers and fitness professionals the opportunity to teach, track alignment, and give feedback in real-time. [Peter Ma; San Francisco, California, USA] </li>\n <li><strong><a href=\"https://play.google.com/store/apps/details?id=com.br.ml.brpathfinder\">Pathfinder</a></strong> could help people with visual impairments navigate complex situations by identifying and calculating the trajectories of objects moving in their path. [Colin Shelton; Addison, Texas, USA] </li>\n <li><strong><a href=\"https://play.google.com/store/apps/details?id=co.vimo.snore\">Snore &amp; Cough</a></strong> helps you identify and analyze snoring and coughing, to help provide info to users seeking assistance from a medical professional. [Ethan Fan; Mountain View, California, USA] </li>\n <li><strong><a href=\"https://play.google.com/store/apps/details?id=lmu.pms.stila\">Stila</a></strong> pairs with a wearable device, like the Fitbit wristband or a device running on Wear OS by Google to monitor and track the body’s stress levels. By monitoring stress levels over time, you have the chance to better understand and manage stress in your life. [Yingdin Wing; Munich, Germany] </li>\n <li><strong><a href=\"https://play.google.com/store/apps/details?id=com.epam.mobilelabs.trashly\">Trashly</a></strong> makes recycling easier. Just point the on-device camera at an item, and through object detection, the app identifies and classifies plastic and paper cups, bags, bottles, etc. [Elvin Rakhmankulov; Chicago, Illinois, USA] </li>\n <li><strong><a href=\"https://play.google.com/store/apps/details?id=com.unodogs \">UnoDogs</a></strong> helps owners better support their pet’s wellness, providing customized information and fitness programs. [Chinmany Mishra; New Delhi, India] </li> \n</ul> \n<h2>Making on-device machine learning more accessible, with ML Kit and TensorFlow Lite</h2> \n<p> Increasingly, machine learning is becoming a more accessible tool to developers with limited to no background in the technology. In fact, for most of the winners of the Android Developer Challenge, this was their first foray into machine learning. That’s thanks in part to two key offerings from Google, which bring on-device machine learning into reach for millions of developers around the world. </p> \n<p> The first is<strong> <a href=\"https://developers.google.com/ml-kit\">ML Kit</a></strong>. ML Kit brings Google’s on-device machine learning technologies to mobile app developers, so they can build customized and interactive experiences into their apps. This includes tools such as language translation, text recognition, object detection and more. <strong>Eskke</strong>, for instance, uses <a href=\"https://developers.google.com/ml-kit/vision/text-recognition/android\">offline text recognition</a> and <a href=\"https://developers.google.com/ml-kit/vision/barcode-scanning/android\">barcode scanning</a> from ML Kit so users can scan the QR code at a mobile money kiosk and quickly withdraw money. And <strong>MixPose</strong> uses ML Kit's forthcoming Pose detection API to detect each user’s yoga positions and movements, so teachers can provide feedback. </p> \n<iframe width=\"560\" height=\"315\" id=\"imgFull\" src=\"https://www.youtube.com/embed/GZe5BKBnzho\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> \n<p> The other Google resource that many of the Android Dev Challenge winners used was <a href=\"https://www.tensorflow.org/lite\">TensorFlow Lite</a>. This powerful machine learning framework can help run machine learning models on Android, iOS and IoT devices that would never normally be able to support them. Its set of tools can be used for all kinds of powerful neural network-related applications, from image detection to speech recognition, bringing the latest cutting-edge technology to the devices we carry around with us wherever we go. <strong>Trashly</strong>, for instance, uses a custom TensorFlow Lite model to report if an object is recyclable and how to recycle it. </p> \n<p> Helpful innovation, such as the 10 winning apps in the Android Developer Challenge, has the potential to change the way we access, use, and interpret information, making it available when we need it, where we need it most. By working with these developers focused on helpful innovation, we hope to inspire the next wave of developers to unlock what’s possible with this new technology. </p> \n<a href=\"https://2.bp.blogspot.com/-3rDnNays7jc/XvDFnQQCdpI/AAAAAAAAPHk/ehkWuzoC5WcJ6GWWeatBMWo2LQIPlaIOACLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2B2.png\" imageanchor=\"1\"><img id=\"imgFull\" style=\"width:100%;\" border=\"0\" src=\"https://2.bp.blogspot.com/-3rDnNays7jc/XvDFnQQCdpI/AAAAAAAAPHk/ehkWuzoC5WcJ6GWWeatBMWo2LQIPlaIOACLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2B2.png\" data-original-width=\"1600\" data-original-height=\"901\" alt=\"#11WeeksOfAndroid Week 2 Machine Learning with Android logo head\"></a> \n<h2>What’s next in Android Machine Learning week?</h2> \n<p> As we kick off the second week of #11WeeksOfAndroid, focused on Machine Learning, we will highlight new tools and resources available to Android developers. Here’s a taste of the rest of this week: </p> \n<ul> \n <li><strong>Tuesday - ML Kit</strong>, the turnkey ML SDK went through a major overhaul with its new on-device offering this month. Check out the substantial improvement in developer usability, CameraX support and where the platform is going next. </li>\n <li><strong>Wednesday - Custom Models</strong>. When prepackaged SDK doesn’t quite satisfy your need, tools from Android Studio, TensorFlow Lite and ML Kit might just be the answer. Aside from individual offerings, we will also highlight how they can be used together. </li>\n <li><strong>Thursday - ML design.</strong> Learn some best practices for making ML product decisions from the People + AI Guidebook. We will go behind the scenes of the Read Along app, an on-device ML app that helps grow universal literacy. Bring your whole team because everyone, including UXers, engineers, and product managers are invited! </li> \n</ul> \n<p> On Tuesday and Wednesday, we will also have a <em>“codelab of the day”</em> so get your <a href=\"https://developer.android.com/studio/preview\">Android Studio 4.1 beta today</a>, block off an hour in your schedule and take this ML journey with us! </p> \n<p> <em>*</em>The apps presented here are the projects of the developers individually, and not Google. </p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=MNxJegOmBqY:rPphwq5fyBI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=MNxJegOmBqY:rPphwq5fyBI:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=MNxJegOmBqY:rPphwq5fyBI:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/MNxJegOmBqY\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Mon, 22 Jun 2020 15:03:00 +0000","feedId":7,"bgimg":"https://2.bp.blogspot.com/-3rDnNays7jc/XvDFnQQCdpI/AAAAAAAAPHk/ehkWuzoC5WcJ6GWWeatBMWo2LQIPlaIOACLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2B2.png","linkMd5":"a21f42ddc5639304322e7de90e685c32","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn22@2020_4/2020-07-25/1595694869186_453d86b17fd6a00a.webp","author":"Android Developers","articleImgCdnMap":{"https://2.bp.blogspot.com/-3rDnNays7jc/XvDFnQQCdpI/AAAAAAAAPHk/ehkWuzoC5WcJ6GWWeatBMWo2LQIPlaIOACLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2B2.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn22@2020_4/2020-07-25/1595694869186_453d86b17fd6a00a.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=MNxJegOmBqY:rPphwq5fyBI:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn42@2020_1/2020-07-25/1595694874728_fbceeab7b2f5cf3e.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/MNxJegOmBqY":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn18@2020_5/2020-07-25/1595694871909_ea802d845d6efc7e.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"Excelliance Tech: moving to new Android dynamic resource loading APIs for long-term compatibility","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/7m1khJMFdD4/excelliance-tech-dynamic-resource-loading.html","description":"<img style=\"display:none\" src=\"https://4.bp.blogspot.com/-GX4qn4zdENw/XwOiPt7frVI/AAAAAAAAJFo/rPaxax5C9_s_zYueQJl8AvNBEHL7XITkwCLcBGAsYHQ/s1600/07-%25E5%258D%2593%25E7%259B%259F%25E7%25A7%2591%25E6%258A%2580.png\"> \n<p><em>This blogpost is a collaboration between Google and Excelliance Tech. Authored by Zhuo Chen with support from Zhihai Wang, Gao Huang from Excelliance Tech.</em></p>\n<p> <a href=\"https://3.bp.blogspot.com/-D-mDuHjmcjo/XwOf7Npt7mI/AAAAAAAAJFc/r0mjnaLeVkMqeOcdrdPbSgpXRI2vo1W7wCLcBGAsYHQ/s1600/logo.png\" imageanchor=\"1\"><img border=\"0\" id=\"floatLeft\" style=\"width:100px\" src=\"https://3.bp.blogspot.com/-D-mDuHjmcjo/XwOf7Npt7mI/AAAAAAAAJFc/r0mjnaLeVkMqeOcdrdPbSgpXRI2vo1W7wCLcBGAsYHQ/s1600/logo.png\" data-original-width=\"1200\" data-original-height=\"1200\"></a> </p>\n<p> Excelliance Tech improved the stability and compatibility of their LeBian SDK by moving away from non-SDK APIs, toward stable, official APIs. Their collaboration with the Android team during the process also led to a new public API for resource loading that all developers can use - the <a href=\"https://developer.android.com/reference/android/content/res/loader/ResourcesLoader\">ResourcesLoader</a> API in Android 11. </p> \n<h2>Helping game developers keep users engaged</h2> \n<p> Games are becoming increasingly complex, and a loading progress bar is not only a countdown to a new adventure, but also a bridge which connects players and developers. </p> \n<p> Players want the game to load right away, so \"loading\" has its own priorities: resources that will be used in the first few minutes need to be packed into the APK, while the rest of the content can be downloaded in the background after the game starts. </p> \n<p> Developers are always creating new content for their games, so \"change\" is the only constant: different campaigns bring different launch screens and themes, keeping the game experience fresh for players. </p> \n<p> Excelliance Tech’s LeBian (乐变) game assets streaming service helps game developers meet players’ needs by loading fresh resources dynamically while the game is loading or being played. </p> \n<p> <em>Meteor, Butterfly And a Sword (流星群侠传)</em> by NetEase Games, <em>Duoduo Auto Chess (多多自走棋)</em> by Dragonest Game, <em>Langrisser (梦幻模拟战)</em> by ZlongGames, <em>Junior Three Kingdom 2 (少年三国志 2)</em> by Yoozoo Games - these games are created by different developers and have different look and feel, but one thing they have in common: they all use LeBian game streaming service to load resources. </p> \n<p> The resource loading technology is so useful that Excelliance Tech is even using it in the LeBian SDK itself, bringing a better experience for developers. Dynamic resource loading makes the SDK much easier to use. By dynamically updating its internal resources when needed, the library doesn’t require developers to update the SDK for new resources. </p> \n<p> Before Android 11 introduced the <a href=\"https://developer.android.com/reference/android/content/res/loader/ResourcesLoader\">ResourcesLoader</a> API, Excelliance Tech had to build their dynamic resource loading capability the hard way, using <a href=\"https://developer.android.com/distribute/best-practices/develop/restrictions-non-sdk-interfaces\">non-SDK interfaces</a>. </p> \n<h2>Building the initial product</h2> \n<p> When Excelliance was first building their product, Android did not offer public APIs for the dynamic resource loading use-case. The team did what they could, but ended up using non-SDK interfaces to add the external resources. While this met the technical need initially, the implementation was fragile - it depended on non-SDK interfaces, which don’t have the same compatibility guarantees as official SDK APIs and can change without notice. </p> \n<p> As a result, Excelliance found that compatibility issues would surface unexpectedly as new versions of Android were released. These required additional testing and development to assure the stability of the product. Over many iterations, it took the Excelliance team six engineer-months and a lot of code to stabilize their solution, while knowing that it might break again in the next Android release. With Android tightening <a href=\"https://developer.android.com/distribute/best-practices/develop/restrictions-non-sdk-interfaces\">restrictions on non-SDK interfaces</a> to achieve better stability and app compatibility, relying on those non-SDK interfaces became no longer an option. </p> \n<h2>Working toward a sustainable solution</h2> \n<p> As the Android team increased its focus on <a href=\"https://android-developers.googleblog.com/2018/06/an-update-on-non-sdk-restrictions-in.html\">moving apps to public APIs</a>, Excelliance saw an opportunity to migrate to a stronger foundation. They reached out to the Android team to give their feedback and highlighted their use case and need for public SDK APIs. </p> \n<p> Over time, their collaboration led to the development of the <a href=\"https://developer.android.com/reference/android/content/res/loader/ResourcesLoader\">ResourcesLoader</a> public API that’s available for the first time in Android 11. Excelliance Tech has already moved to the new ResourcesLoader API and they’ve seen better productivity and product quality as a result. Excelliance believes the ResourcesLoader API provides advantages including the following: </p> \n<ul> \n <li><strong>Easy to use</strong>. The development team migrated the solution to the new API in 2 days, testing included. </li>\n <li><strong>No performance loss.</strong> In some cases, the loading speed even increased because ResourcesLoader can load uncompressed resources much faster. </li>\n <li><strong>Easy to develop</strong>. Before using the ResourcesLoader API, the team had to assign a senior engineer to 1) understand how AssetManager works, 2) find private APIs and find out how they work on different Android versions, 3) learn zip file structure, etc. Now it only takes a junior engineer who can read the API documentation. </li>\n <li><strong>Much less code</strong>. Before the ResourcesLoader API, the solution took more than 1,000 lines of code, now it has less than 50 lines of code, with the essential code down to just a few lines. </li>\n <li><strong>Forward compatibility</strong>. By using official public APIs that will continue to be supported by the Android team, the developer’s solution will have much better compatibility on the future Android platforms. </li> \n</ul> \n<pre class=\"prettyprint\">String sdkroot = getApplicationInfo().dataDir + \"/lebian\";\nResourcesLoader rl = new ResourcesLoader();\nrl.addProvider(ResourcesProvider.loadFromDirectory(sdkroot, null));\nResources res = getResources();\nres.addLoaders(rl);\nfinal AssetManager assetManager = res.getAssets();\n</pre> \n<p id=\"imgCaption\">After moving to the new ResourcesLoader API, the essential code has just a few lines (down from hundreds of lines of code across a number of source files).</p> \n<h2>Improving performance</h2> \n<p> Excelliance Tech did a comparison test, loading 16,028 files (uncompressed 1.47GB, compressed 1.36GB) in 4 ways: </p> \n<ol> \n <li>Load resources directly from APK </li>\n <li>Load resources using non-SDK interfaces </li>\n <li>Load APK using ResourcesLoader </li>\n <li>Load resources directly from a directory using ResourcesLoader </li> \n</ol> \n<p> Resources are compressed in option 1, 2 and 3, and the average loading times are around 19 seconds. Option 4 loads uncompressed resources directly from a directory using ResourcesLoader, the average loading time is about 3 seconds - <strong>a 6x performance improvement!</strong> </p> \n<p> Summarizing the overall impact of ResourcesLoader, Huang Gao, CEO &amp; Product Lead at Excelliance Tech, said “The new ResourcesLoader API dramatically reduces development and maintenance costs and allows us to focus more on product and business innovation.\" </p> \n<h2>Co-creating the future</h2> \n<a href=\"https://4.bp.blogspot.com/-GX4qn4zdENw/XwOiPt7frVI/AAAAAAAAJFo/rPaxax5C9_s_zYueQJl8AvNBEHL7XITkwCLcBGAsYHQ/s1600/07-%25E5%258D%2593%25E7%259B%259F%25E7%25A7%2591%25E6%258A%2580.png\" imageanchor=\"1\"><img id=\"imgFull\" border=\"0\" src=\"https://4.bp.blogspot.com/-GX4qn4zdENw/XwOiPt7frVI/AAAAAAAAJFo/rPaxax5C9_s_zYueQJl8AvNBEHL7XITkwCLcBGAsYHQ/s1600/07-%25E5%258D%2593%25E7%259B%259F%25E7%25A7%2591%25E6%258A%2580.png\" data-original-width=\"1457\" data-original-height=\"620\" alt=\"The Excelliance Tech team.\"></a> \n<p id=\"imgCaption\">The Excelliance Tech team. </p> \n<p>\"On the Android platform, we've created some valuable products and services, which makes us want to invest more to create innovative products\", Excelliance Tech stated, \"We hope to have more opportunities to participate in the building of the Android ecosystem and contribute our efforts to make a better Android both for consumers and developers.\" </p> \n<p> Excelliance Tech made an investment for the long-term compatibility of the LeBian SDK. Moving to the ResourcesLoader API has already yielded stability and performance benefits, reduced the complexity of their code, and reduced risks of future compatibility issues as Android rolls out new versions of the platform. The ResourcesLoader API is part of Android 11’s public APIs, benefitting the entire Android developer community. </p> \n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=7m1khJMFdD4:jPZgewer7gE:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=7m1khJMFdD4:jPZgewer7gE:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=7m1khJMFdD4:jPZgewer7gE:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/7m1khJMFdD4\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Tue, 07 Jul 2020 17:01:00 +0000","feedId":7,"bgimg":"https://4.bp.blogspot.com/-GX4qn4zdENw/XwOiPt7frVI/AAAAAAAAJFo/rPaxax5C9_s_zYueQJl8AvNBEHL7XITkwCLcBGAsYHQ/s1600/07-%25E5%258D%2593%25E7%259B%259F%25E7%25A7%2591%25E6%258A%2580.png","linkMd5":"49a7565dfcb42264297753db40573c77","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn74@2020_2/2020-07-25/1595694869787_87e8bbabf783e9a2.webp","author":"Android Developers","articleImgCdnMap":{"https://4.bp.blogspot.com/-GX4qn4zdENw/XwOiPt7frVI/AAAAAAAAJFo/rPaxax5C9_s_zYueQJl8AvNBEHL7XITkwCLcBGAsYHQ/s1600/07-%25E5%258D%2593%25E7%259B%259F%25E7%25A7%2591%25E6%258A%2580.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn74@2020_2/2020-07-25/1595694869787_87e8bbabf783e9a2.webp","https://3.bp.blogspot.com/-D-mDuHjmcjo/XwOf7Npt7mI/AAAAAAAAJFc/r0mjnaLeVkMqeOcdrdPbSgpXRI2vo1W7wCLcBGAsYHQ/s1600/logo.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn78@2020_3/2020-07-25/1595694872529_db3494cb4787b56e.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=7m1khJMFdD4:jPZgewer7gE:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn58@2020_2/2020-07-25/1595694871702_c4c4af617d4aaf22.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/7m1khJMFdD4":null}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"Android 11 Developer Preview on Android TV","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/0RZNCZWhJQw/android-11-dp-on-android-tv.html","description":"<img style=\"display:none\" src=\"https://1.bp.blogspot.com/-2rD3wkJMU5M/XvPcNWynchI/AAAAAAAAPI8/O8g4ZCnFIwkoH3XVbkXrtqPf9pW6UWWaACLcBGAsYHQ/s1600/Blog%2Bvisual%2B%25281%2529%2B%25281%2529.png\"> \n<p><em>Posted by Xiaodao Wu, Developer Advocate</em></p>\n<p> <a href=\"https://1.bp.blogspot.com/-2rD3wkJMU5M/XvPcNWynchI/AAAAAAAAPI8/O8g4ZCnFIwkoH3XVbkXrtqPf9pW6UWWaACLcBGAsYHQ/s1600/Blog%2Bvisual%2B%25281%2529%2B%25281%2529.png\" imageanchor=\"1\"><img id=\"imgFull\" style=\"width:100%;\" border=\"0\" src=\"https://1.bp.blogspot.com/-2rD3wkJMU5M/XvPcNWynchI/AAAAAAAAPI8/O8g4ZCnFIwkoH3XVbkXrtqPf9pW6UWWaACLcBGAsYHQ/s1600/Blog%2Bvisual%2B%25281%2529%2B%25281%2529.png\" data-original-width=\"1600\" data-original-height=\"667\"></a> </p>\n<p> With the rise in quality content that’s keeping us glued to the big screen, it’s no surprise watch time on the TV continues to grow. As users spend more time in their living rooms, they are also looking to get more from their smart TVs and streaming devices. To help developers meet these needs, we are always working to support the latest Android features on Android TV. </p> \n<p> Today, we are releasing an Android 11 Developer Preview for Android TV with many privacy, performance, accessibility and connectivity features. More information can be found on the <a href=\"https://developer.android.com/preview\">Android 11 Developer Preview</a> web page. </p> \n<p> The Android 11 Developer Preview on TV is for developers (not for consumer use), this image is for <a href=\"https://store.askey.com/us/adt-3.html\">ADT-3 developer devices</a> only, it is available by manual download and flash. All user data on the ADT-3 device will be wiped out after flash. Once the device has been flashed to Android 11, you will not be able to go back to the previous Android 10 build. </p> \n<ol> \n <li>Download the system image (<a href=\"https://dl.google.com/dl/developers/android/rvc/images/adt/adt3-user-rp1a.200521.001-factory-542bfe28.zip\">link</a>) and unzip the file. </li>\n <li>Plug in the ADT-3 developer kit for Android TV and enable Developer options. </li>\n <li>Run <code>flash-all.sh</code> in the unzipped folder to perform manual system image installation to the ADT-3 device. </li> \n</ol> \n<p> The flash-all script uses fastboot and adb tools to upgrade the system. The latest version of fastboot is recommended; developers can find it in the <a href=\"https://developer.android.com/studio/releases/platform-tools.html\">Android SDK Platform-Tools package</a>. </p> \n<p> We encourage you to test your Android TV app on the Android 11 Developer Preview. If you have any feedback, please <a href=\"https://developer.android.com/preview/feedback\">reach out to us</a>. We’d love to hear from you. </p> \n<p> Tune in to the Android Beyond Phones week of the <a href=\"https://developer.android.com/11weeksofandroid\">#11WeeksOfAndroid</a> on August 10th for even more developer resources from Android TV. </p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=0RZNCZWhJQw:N9z1ic2-S0A:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=0RZNCZWhJQw:N9z1ic2-S0A:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=0RZNCZWhJQw:N9z1ic2-S0A:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/0RZNCZWhJQw\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Thu, 25 Jun 2020 15:00:00 +0000","feedId":7,"bgimg":"https://1.bp.blogspot.com/-2rD3wkJMU5M/XvPcNWynchI/AAAAAAAAPI8/O8g4ZCnFIwkoH3XVbkXrtqPf9pW6UWWaACLcBGAsYHQ/s1600/Blog%2Bvisual%2B%25281%2529%2B%25281%2529.png","linkMd5":"18af8a57cc7a925dbcf74100c951842b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn90@2020_6/2020-07-25/1595694869189_0fb1844208d7eaa8.webp","author":"Android Developers","articleImgCdnMap":{"https://1.bp.blogspot.com/-2rD3wkJMU5M/XvPcNWynchI/AAAAAAAAPI8/O8g4ZCnFIwkoH3XVbkXrtqPf9pW6UWWaACLcBGAsYHQ/s1600/Blog%2Bvisual%2B%25281%2529%2B%25281%2529.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn90@2020_6/2020-07-25/1595694869189_0fb1844208d7eaa8.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=0RZNCZWhJQw:N9z1ic2-S0A:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn82@2020_3/2020-07-25/1595694871705_09c520518790ad9e.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/0RZNCZWhJQw":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn66@2020_5/2020-07-25/1595694871623_6e4325aab02b4392.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"On-device machine learning solutions with ML Kit, now even easier to use","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/X6iKUVd9MB0/mlkit-on-device-machine-learning-solutions.html","description":"<img style=\"display:none\" src=\"https://4.bp.blogspot.com/-WgZufMzjqsk/XvFKRp9CZUI/AAAAAAAAPIU/zgpeM87OnYA7esL-VuJU2VI_xvl-7xUQACLcBGAsYHQ/s1600/image3.png\"> \n<p><em>Posted by Christiaan Prins, Product Manager, ML Kit and Shiyu Hu, Tech Lead Manager, ML Kit</em></p>\n<p> <a href=\"https://4.bp.blogspot.com/-ikzQvn-zORs/XvFITOxjstI/AAAAAAAAPHw/OFKAnXM_5gQOaDKUzbDgVroPTcCC9GBVQCLcBGAsYHQ/s1600/mlkit-logo-text.png\" imageanchor=\"1\"><img id=\"imgHalf\" border=\"0\" src=\"https://4.bp.blogspot.com/-ikzQvn-zORs/XvFITOxjstI/AAAAAAAAPHw/OFKAnXM_5gQOaDKUzbDgVroPTcCC9GBVQCLcBGAsYHQ/s1600/mlkit-logo-text.png\" data-original-width=\"1200\" data-original-height=\"369\" alt=\"ML Kit logo\"></a> </p>\n<p> Two years ago at I/O 2018 we introduced ML Kit, making it easier for mobile developers to integrate machine learning into your apps. Today, more than 25,000 applications on Android and iOS make use of ML Kit’s features. Now, we are introducing some changes that will make it even easier to use ML Kit. In addition, we have a new feature and a set of improvements we’d like to discuss. </p> \n<h2>A new ML Kit SDK, fully focused on on-device ML</h2> \n<a href=\"https://4.bp.blogspot.com/-Ud5Bqrc6Vzc/XvFIl3POC-I/AAAAAAAAPH4/JR7svld_TIk7cHCpaLbEoeaHaFehKLI_gCLcBGAsYHQ/s1600/image1.png\" imageanchor=\"1\"><img id=\"imgFull\" style=\"width:100%;\" border=\"0\" src=\"https://4.bp.blogspot.com/-Ud5Bqrc6Vzc/XvFIl3POC-I/AAAAAAAAPH4/JR7svld_TIk7cHCpaLbEoeaHaFehKLI_gCLcBGAsYHQ/s1600/image1.png\" data-original-width=\"1600\" data-original-height=\"559\" alt=\"ML Kit API Overview\"></a> \n<p> ML Kit's APIs are built to help you tackle common challenges in the Vision and Natural Language domains. We make it easy to recognize text, scan barcodes, track and classify objects in real-time, do translation of text, and more. </p> \n<p> The original version of ML Kit was tightly integrated with Firebase, and we heard from many of you that you wanted more flexibility when implementing it in your apps. As a result, we are now making all the on-device APIs available in a new standalone ML Kit SDK that no longer requires a Firebase project. You can still use both ML Kit and Firebase to get the best of both products if you choose to. </p> \n<p> With this change, ML Kit is now fully focused on on-device machine learning, giving you access to the unique benefits that on-device versus cloud ML offers: </p> \n<ul> \n <li><strong>It’s fast,</strong> <strong>unlocking real-time use cases</strong>- since processing happens on the device, there is no network latency. This means, we can do inference on a stream of images / video or multiple times a second on text strings. </li>\n <li><strong>Works offline</strong> - you can rely on our APIs even when the network is spotty or your app’s end-user is in an area without connectivity. </li>\n <li><strong>Privacy is retained</strong>: since all processing is performed locally, there is no need to send sensitive user data over the network to a server. </li> \n</ul> \n<p> Naturally, you still get access to Google’s on-device models and processing pipelines, all accessible through easy-to-use APIs, and offered at no cost. </p> \n<p> All ML Kit resources can now be found on our <a href=\"https://g.co/mlkit\">new website</a> where we made it a lot easier to access sample apps, API reference docs and our community channels that are there to help you if you have questions. </p> \n<div id=\"flexParent\"> \n <a href=\"https://2.bp.blogspot.com/-KZ3ZEHzzH8I/XvFIyo9Z-4I/AAAAAAAAPIA/Gdaw0rNzVuo6wdkBjeCgBn4XWTzDOyEKgCLcBGAsYHQ/s1600/image4.gif\" imageanchor=\"1\"><img id=\"flexImg\" border=\"0\" src=\"https://2.bp.blogspot.com/-KZ3ZEHzzH8I/XvFIyo9Z-4I/AAAAAAAAPIA/Gdaw0rNzVuo6wdkBjeCgBn4XWTzDOyEKgCLcBGAsYHQ/s1600/image4.gif\" data-original-width=\"360\" data-original-height=\"720\" alt=\"Object detection &amp; tracking gif\"></a> \n <a href=\"https://3.bp.blogspot.com/-7AMbYyYCGww/XvFIyeX43HI/AAAAAAAAPH8/5M-nyTejfsgATzJQRExqFmnmCABOaBGUACLcBGAsYHQ/s1600/image2.gif\" imageanchor=\"1\"><img id=\"flexImg\" border=\"0\" src=\"https://3.bp.blogspot.com/-7AMbYyYCGww/XvFIyeX43HI/AAAAAAAAPH8/5M-nyTejfsgATzJQRExqFmnmCABOaBGUACLcBGAsYHQ/s1600/image2.gif\" data-original-width=\"360\" data-original-height=\"720\" alt=\"Text recognition + Language ID + Translate gif\"></a> \n</div> \n<p> </p> \n<h3>What does this mean if I already use ML Kit today?</h3> \n<p> If you are using ML Kit for Firebase’s on-device APIs in your app today, we recommend you to migrate to the new standalone ML Kit SDK to benefit from new features and updates. For more information and step-by-step instructions to update your app, please follow our <a href=\"https://developers.google.com/ml-kit/migration\">Migration guide</a>. The cloud-based APIs, model deployment and AutoML Vision Edge remain available through <a href=\"https://firebase.google.com/products/ml\">Firebase Machine Learning</a>. </p> \n<h2>Shrink your app footprint with Google Play Services</h2> \n<p> Apart from making ML Kit easier to use, developers also asked if we can ship ML Kit through Google Play Services resulting in a smaller app footprint and the model can be reused between apps. Apart from Barcode scanning and Text recognition, we have now added Face detection / contour (model size: 20MB) to the list of APIs that support this functionality. </p> \n<pre class=\"prettyprint\">// Face detection / Face contour model\n// Delivered via Google Play Services outside your app's APK…\nimplementation 'com.google.android.gms:play-services-mlkit-face-detection:16.0.0'\n\n// …or bundled with your app's APK\nimplementation 'com.google.mlkit:face-detection:16.0.0'\n</pre> \n<h2>Jetpack Lifecycle / CameraX support</h2> \n<p> <strong><a href=\"https://developer.android.com/reference/androidx/lifecycle/Lifecycle\">Android Jetpack Lifecycle</a> support</strong> has been added to all APIs. Developers can use addObserver to automatically manage teardown of ML Kit APIs as the app goes through screen rotation or closure by the user / system. This makes CameraX integration easier. With this release, we are also recommending that developers adopt CameraX in their apps due to the ease of integration and image quality improvements (compared to Camera1) on a wide range of devices. </p> \n<pre class=\"prettyprint\">// ML Kit now supports Lifecycle\nval recognizer = TextRecognizer.newInstance()\nlifecycle.addObserver(recognizer)\n\n// ...\n\n// Just like CameraX\nval camera = cameraProvider.bindToLifecycle( /* lifecycleOwner= */this,\n    cameraSelector, previewUseCase, analysisUseCase)\n</pre> \n<p> For an overview of all recent changes, check out the <a href=\"https://developers.google.com/ml-kit/release-notes\">release notes</a> for the new SDK. </p> \n<h2>Codelab of the day - ML Kit x CameraX</h2> \n<p> To help you get started with the new ML Kit and its support for CameraX, we have created this code lab to <a href=\"https://codelabs.developers.google.com/codelabs/mlkit-android-translate/\">Recognize, Identify Language and Translate text</a>. If you have any questions regarding this code lab, please raise them at <a href=\"https://stackoverflow.com/questions/tagged/google-mlkit\">StackOverflow</a> and tag it with <strong>[google-mlkit]</strong>. Our team will monitor this. </p> \n<a href=\"https://2.bp.blogspot.com/-P2hnO2tzU9c/XvFKDR_3xEI/AAAAAAAAPIQ/gl2LbC0w39A6YQFdLiPbxgfbRsQ-IiCTQCLcBGAsYHQ/s1600/OCR%2BRound%2Bv2.png\" imageanchor=\"1\"><img id=\"imgHalf\" style=\"width:40%;\" border=\"0\" src=\"https://2.bp.blogspot.com/-P2hnO2tzU9c/XvFKDR_3xEI/AAAAAAAAPIQ/gl2LbC0w39A6YQFdLiPbxgfbRsQ-IiCTQCLcBGAsYHQ/s1600/OCR%2BRound%2Bv2.png\" data-original-width=\"800\" data-original-height=\"1600\" alt=\"screenshot of app running\"></a> \n<h2>Early access program</h2> \n<p> Through our early access program, developers have an opportunity to partner with the ML Kit team and get access to upcoming features. Two new APIs are now available as part of this program: </p> \n<ul> \n <li><strong><a href=\"https://developers.google.com/ml-kit/early-access/entity-extraction\">Entity Extraction</a></strong> - Detect entities in text &amp; make them actionable. We have support for phone numbers, addresses, payment numbers, tracking numbers, date/time and more. </li>\n <li><strong><a href=\"https://developers.google.com/ml-kit/early-access/pose-detection\">Pose Detection</a></strong> - Low-latency pose detection supporting 33 skeletal points, including hands and feet tracking. </li> \n</ul> \n<p> If you are interested, head over to our <a href=\"https://developers.google.com/ml-kit/early-access\">early access page</a> for details. </p> \n<a href=\"https://2.bp.blogspot.com/-hiREKTBOQzo/XvIyNQxye1I/AAAAAAAAPIk/0_-Y8vonL_Yk9HCiL2swwiNHh7QUHkaRgCLcBGAsYHQ/s1600/rope.gif\" imageanchor=\"1\"><img id=\"imgHalf\" border=\"0\" src=\"https://2.bp.blogspot.com/-hiREKTBOQzo/XvIyNQxye1I/AAAAAAAAPIk/0_-Y8vonL_Yk9HCiL2swwiNHh7QUHkaRgCLcBGAsYHQ/s1600/rope.gif\" data-original-width=\"320\" data-original-height=\"388\" alt=\"pose detection on man jumping rope\"></a> \n<h2>Tomorrow - Support for custom models</h2> \n<p> ML Kit's turn-key solutions are built to help you take common challenges. However, if you needed to have a more tailored solution, one that required custom models, you typically needed to build an implementation from scratch. To help, we are now providing the option to swap out the default Google models with a custom TensorFlow Lite model. We’re starting with the <strong><a href=\"https://developers.google.com/ml-kit/vision/image-labeling#using_a_custom_tensorflow_lite_model\">Image Labeling</a></strong> and <strong><a href=\"https://developers.google.com/ml-kit/vision/object-detection#custom-classifier\">Object Detection and Tracking</a></strong> APIs, that now support custom image classification models. </p> \n<p> Tomorrow, we will dive a bit deeper into how to find or train a TensorFlow Lite model and use it either with ML Kit, or with Android Studio’s new ML binding functionality. </p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=X6iKUVd9MB0:nuR5td16Wuo:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=X6iKUVd9MB0:nuR5td16Wuo:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=X6iKUVd9MB0:nuR5td16Wuo:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/X6iKUVd9MB0\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Tue, 23 Jun 2020 17:00:00 +0000","feedId":7,"bgimg":"https://4.bp.blogspot.com/-WgZufMzjqsk/XvFKRp9CZUI/AAAAAAAAPIU/zgpeM87OnYA7esL-VuJU2VI_xvl-7xUQACLcBGAsYHQ/s1600/image3.png","linkMd5":"33293b6224ebc5aa4e7d4f3656460417","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn82@2020_2/2020-07-25/1595694869189_86093b979f5a6474.webp","author":"Android Developers","articleImgCdnMap":{"https://4.bp.blogspot.com/-WgZufMzjqsk/XvFKRp9CZUI/AAAAAAAAPIU/zgpeM87OnYA7esL-VuJU2VI_xvl-7xUQACLcBGAsYHQ/s1600/image3.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn82@2020_2/2020-07-25/1595694869189_86093b979f5a6474.webp","https://4.bp.blogspot.com/-ikzQvn-zORs/XvFITOxjstI/AAAAAAAAPHw/OFKAnXM_5gQOaDKUzbDgVroPTcCC9GBVQCLcBGAsYHQ/s1600/mlkit-logo-text.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn26@2020_4/2020-07-25/1595694872269_4d7c7bf526b68efd.webp","https://4.bp.blogspot.com/-Ud5Bqrc6Vzc/XvFIl3POC-I/AAAAAAAAPH4/JR7svld_TIk7cHCpaLbEoeaHaFehKLI_gCLcBGAsYHQ/s1600/image1.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn38@2020_4/2020-07-25/1595694871726_4d624b38cb714ad6.webp","https://2.bp.blogspot.com/-KZ3ZEHzzH8I/XvFIyo9Z-4I/AAAAAAAAPIA/Gdaw0rNzVuo6wdkBjeCgBn4XWTzDOyEKgCLcBGAsYHQ/s1600/image4.gif":null,"https://3.bp.blogspot.com/-7AMbYyYCGww/XvFIyeX43HI/AAAAAAAAPH8/5M-nyTejfsgATzJQRExqFmnmCABOaBGUACLcBGAsYHQ/s1600/image2.gif":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn62@2020_6/2020-07-25/1595694877100_d400e746c6099e39.webp","https://2.bp.blogspot.com/-P2hnO2tzU9c/XvFKDR_3xEI/AAAAAAAAPIQ/gl2LbC0w39A6YQFdLiPbxgfbRsQ-IiCTQCLcBGAsYHQ/s1600/OCR%2BRound%2Bv2.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn90@2020_2/2020-07-25/1595694875739_bf8d95ddfe89a36a.webp","https://2.bp.blogspot.com/-hiREKTBOQzo/XvIyNQxye1I/AAAAAAAAPIk/0_-Y8vonL_Yk9HCiL2swwiNHh7QUHkaRgCLcBGAsYHQ/s1600/rope.gif":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn66@2020_5/2020-07-25/1595694880529_eb9132d7e713ed89.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=X6iKUVd9MB0:nuR5td16Wuo:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn30@2020_2/2020-07-25/1595694873545_d22fa93ab8cd80d5.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/X6iKUVd9MB0":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn98@2020_1/2020-07-25/1595694871682_e25c61ea7a164546.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"11 Weeks of Android: Android 11 Compatibility","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/2542Q0fABHc/11-weeks-of-android-compatibility.html","description":"<img src=\"https://2.bp.blogspot.com/-vKqohBFO1m0/XwfRiJ70ZbI/AAAAAAAAPMY/_70XyqPG4ecpl188FhKx0tpvq1OQ9T7jgCLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2Btemplate%2Bv1.png\" style=\"display: none;\"> \n<br> \n<em>Posted by Dirk Dougherty, Android Developer Relations</em>\n<br> \n<a href=\"https://2.bp.blogspot.com/-vKqohBFO1m0/XwfRiJ70ZbI/AAAAAAAAPMY/_70XyqPG4ecpl188FhKx0tpvq1OQ9T7jgCLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2Btemplate%2Bv1.png\" imageanchor=\"1\"><img border=\"0\" data-original-height=\"901\" data-original-width=\"1600\" id=\"imgFull\" src=\"https://2.bp.blogspot.com/-vKqohBFO1m0/XwfRiJ70ZbI/AAAAAAAAPMY/_70XyqPG4ecpl188FhKx0tpvq1OQ9T7jgCLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2Btemplate%2Bv1.png\" style=\"width: 100%;\"></a> \n<br> \n<em>This blog post is part of a weekly series for <a href=\"http://d.android.com/11weeksofandroid\">#11WeeksOfAndroid</a>. Each week we’re diving into a key area of Android so you don’t miss anything. This week, we spotlighted <strong>Android 11 Compatibility</strong>; here’s a look at what you should know.</em> \n<br> \n<h2> <strong>The big news</strong></h2> With \n<a href=\"https://android-developers.googleblog.com/2020/07/android-11-beta-2-and-platform-stability.html\">Beta 2 now in the hands of users and developers</a>, Android 11 is moving quickly toward the final release later in Q3. For developers, now is the time to make sure your apps are ready! With that in mind, this week we highlighted some resources that can help you get started with app compatibility testing and use some of the new tools in Android 11. Here’s a quick rundown of topics that we covered. \n<br> \n<strong>Platform stability</strong> \n<br> In Android 11 we added a new release milestone called Platform Stability to clearly signal to developers that all APIs and system behaviors are complete. This week, with Beta 2, Android 11 reached Platform Stability, so it’s a great time to do your final compatibility testing and updates. The \n<a href=\"https://android-developers.googleblog.com/2020/07/android-11-beta-2-and-platform-stability.html#platformstability\">Beta 2 and Platform Stability</a> blog post goes into more detail on what this milestone means for developers, and you can also read about it in the \n<a href=\"https://developer.android.com/preview/overview#timeline\">Android 11 timeline</a>. \n<br> \n<a href=\"https://4.bp.blogspot.com/-xv5CjfndWg8/XwTT2ykJSsI/AAAAAAAAJGI/rqxWH9MppHoIcLffVcmtnaBXwmspfeeCwCLcBGAsYHQ/s1600/timeline.png\" imageanchor=\"1\"><img alt=\"timeline\" border=\"0\" data-original-height=\"374\" data-original-width=\"1600\" id=\"imgFull\" src=\"https://4.bp.blogspot.com/-xv5CjfndWg8/XwTT2ykJSsI/AAAAAAAAJGI/rqxWH9MppHoIcLffVcmtnaBXwmspfeeCwCLcBGAsYHQ/s1600/timeline.png\"></a> \n<strong>App compatibility</strong> \n<br> As we talked about in our \n<a href=\"https://android-developers.googleblog.com/2020/07/android-11-beta-2-and-platform-stability.html#appcompatibility\">Beta 2 post</a> this week, Android 11 compatibility means that your app is validated to run properly on Android 11 with all of the functionality and features that users expect. To get started, all you need is your app and a device or emulator running Android 11. \n<br> When making sure an app is compatible, the goal is to test your app and make the minimum changes to maintain your app’s functionality on Android 11, then publish the compatible version to users by the Android 11 final release. In most cases you should be able to do this without changing your targetSdkVersion or compiling against the new APIs. \n<br> It isn’t just for apps and games either - if you develop SDKs, libraries, tools, or even frameworks, now is the time to test those against Android 11 and release a compatible version. App and game developers using your products could be blocked until they can get your Android 11 compatible versions. \n<br> For more details on app compatibility, take a look at the \n<a href=\"https://developer.android.com/preview/migration\">migration guide</a> and the list of \n<a href=\"https://developer.android.com/preview/behavior-changes-all\">behavior changes</a> that could affect your apps. \n<br> \n<strong>Tools for testing your apps</strong> \n<br> We highlighted some new tools for you to use as you get started with compatibility testing. Our blog post “\n<a href=\"https://android-developers.googleblog.com/2020/07/testing-app-compatibility-Android.html\">Testing app compatibility in Android 11</a>” went into the details. \n<br> First is the \n<a href=\"https://developer.android.com/preview/test-changes\">compatibility framework</a>, a new feature that helps with managing the platform changes that can affect apps. It provides standard metadata for changes, standard gating based on targetSdkVersion, and standard log output to help you identify a change affecting your app. You can toggle behavioral changes in a debuggable app, either through Developer options in Settings or through adb. This helps you isolate changes and test against them individually. \n<br> Isolating regressions across devices and API levels can be time-consuming and complex. Now with Android Studio 4.2, you can \n<a href=\"https://developer.android.com/studio/preview/features#instrumentation-testing\">run instrumentation tests in parallel</a> across multiple physical or virtual devices at once, then compare all of the results in a single Test Matrix. You can run tests on more devices in less time, and catch issues earlier. \n<br> Android Generic System Image (GSI) is a great way to expand your Android 11 testing across a broader set of devices and we’ve released an updated\n<a href=\"https://codelabs.developers.google.com/codelabs/using-android-q-gsi/index.html?index=..%2F..index#0\"> Android GSI codelab</a> to help you get started. Through GSI, you can install a generic version of Android 11 on any unlocked, Treble-compliant device that shipped with Android 9 or higher. This includes not only Pixel devices, but many other popular devices in use across the global Android ecosystem. \n<br> \n<center> \n <a href=\"https://3.bp.blogspot.com/-vkoW40yNHlY/XwTUwuWo4mI/AAAAAAAAJGU/mrx1eNqeKAQXxtkM-lAFs0oY9Vuzu6HmQCLcBGAsYHQ/s1600/appcompatibilitychanges.png\" imageanchor=\"1\"><img alt=\"App compatibility toggles in Developer options\" border=\"0\" data-original-height=\"1600\" data-original-width=\"1221\" src=\"https://3.bp.blogspot.com/-vkoW40yNHlY/XwTUwuWo4mI/AAAAAAAAJGU/mrx1eNqeKAQXxtkM-lAFs0oY9Vuzu6HmQCLcBGAsYHQ/s1600/appcompatibilitychanges.png\" style=\"width: 300px;\"></a>\n</center> \n<div id=\"imgCaption\">\n  App compatibility toggles in Developer options.\n</div> \n<strong>Ecosystem updates and app compatibility</strong> \n<br> In our “\n<a href=\"https://android-developers.googleblog.com/2020/07/accelerating-android-updates.html\">Accelerating Android updates</a>” blog post, we looked at how we’re continuing to get the latest OS to reach critical mass by expanding Android’s updatability architecture. With technology like Project Treble and Google Play system updates, we can deliver updates across more devices faster, and increase consistency across the ecosystem. \n<br> The work we’ve been doing with \n<a href=\"https://source.android.com/devices/architecture\">Project Treble</a> is making it dramatically faster and easier to bring up new versions of Android on new and existing devices. It also makes it possible for device-makers to run their own Developer Preview programs, in some cases in parallel with Android’s own ongoing development. These programs help device makers get their OS updates ready sooner and engage earlier with the Android developer community. \n<br> With \n<a href=\"https://android-developers.googleblog.com/2019/05/fresher-os-with-projects-treble-and-mainline.html\">Google Play system updates</a> (Project Mainline) the goal is to directly update core OS components across devices in the Android ecosystem to improve security, privacy, and consistency across the ecosystem. In Android 11, we’ve added more updatable modules to standardize behaviors in key app-facing areas such as permissions, media, NNAPI, and others. \n<br> Other improvements include a Generic Kernel Image (GKI) and Virtual A/B, a new over-the-air update mechanism that combines the benefits of \n<a href=\"https://source.android.com/devices/tech/ota/ab?hl=en\">seamless updates</a> with smaller storage requirements. We’re working closely with device makers to bring these to Android 11 devices. \n<br> Over time, these will help reduce your development and testing costs to make your app compatible across platform versions and devices. \n<br> \n<h2> <strong>Taking center stage</strong></h2> A common reason for unexpected app compatibility issues is apps and games depending on Android non-SDK interfaces. In Android 11 we're continuing our \n<a href=\"https://developer.android.com/about/versions/pie/restrictions-non-sdk-interfaces\">long-term effort</a> to move apps to using public APIs instead. \n<br> This week we highlighted Excelliance Tech, who recently moved their LeBian SDK away from non-SDK interfaces, toward stable, official APIs. Their collaboration with the Android team also led to a new public API for resource loading that all developers can use - the \n<a href=\"https://developer.android.com/reference/android/content/res/loader/ResourcesLoader\">ResourcesLoader</a> API in Android 11. \n<br> Check out the Excelliance Tech story in \n<a href=\"https://android-developers.googleblog.com/2020/07/excelliance-tech-dynamic-resource-loading.html\">this blog post</a>. \n<br> \n<a href=\"https://4.bp.blogspot.com/-GX4qn4zdENw/XwOiPt7frVI/AAAAAAAAJFo/rPaxax5C9_s_zYueQJl8AvNBEHL7XITkwCLcBGAsYHQ/s1600/07-%25E5%258D%2593%25E7%259B%259F%25E7%25A7%2591%25E6%258A%2580.png\" imageanchor=\"1\"><img alt=\"The Excelliance Tech team.\" border=\"0\" data-original-height=\"620\" data-original-width=\"1457\" id=\"imgFull\" src=\"https://4.bp.blogspot.com/-GX4qn4zdENw/XwOiPt7frVI/AAAAAAAAJFo/rPaxax5C9_s_zYueQJl8AvNBEHL7XITkwCLcBGAsYHQ/s1600/07-%25E5%258D%2593%25E7%259B%259F%25E7%25A7%2591%25E6%258A%2580.png\"></a> \n<div id=\"imgCaption\">\n  The Excelliance Tech team. \n</div> \n<h2> <strong>What to watch</strong></h2> During Android 11 Compatibility week we posted three short videos to help you plan for compatibility and test your apps. View the playlist \n<a href=\"https://www.youtube.com/playlist?list=PLWz5rJ2EKKc-Rkjav7zN93x4gJPOruB26\">here</a>. \n<br> The video below gives you a quick overview of Android’s annual release timeline and what the phases mean for developers. \n<br> \n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen frameborder=\"0\" height=\"315\" id=\"imgFull\" src=\"https://www.youtube.com/embed/OzlhNZEAchQ\" width=\"560\"></iframe> Next, here’s a video that introduces the compatibility framework, a new testing and debugging feature for developers in Android 11. It shows what it is, why it is useful, and how to use it. You’ll walk through an example that shows how you’d enable a specific change, test your app with the change, and then look for the log output to help you identify the change that affected the app. \n<br> \n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen frameborder=\"0\" height=\"315\" id=\"imgFull\" src=\"https://www.youtube.com/embed/82einkyFns4\" width=\"560\"></iframe> Last, this video takes you through a new feature in Android Studio that lets you run instrumentation tests in parallel on multiple devices. It shows you how to set up a device set, run tests on the devices, and then jump into the Text Matrix to compare and analyze results. It’s a great way to do your app compatibility testing in Android Studio. \n<br> \n<iframe allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen frameborder=\"0\" height=\"315\" id=\"imgFull\" src=\"https://www.youtube.com/embed/GM7CXRJKpEI\" width=\"560\"></iframe> \n<h2> <strong>Learning path</strong></h2> If you’re looking for an easy way to pick up the highlights of this week, check out the \n<a href=\"https://developer.android.com/courses/pathways/android-week4-compatibility\">Compatibility pathway</a>. A pathway is an ordered tutorial that allows users to complete a pre-defined module that culminates in a quiz. A badge is awarded to each user who passes the quiz and can be saved to your \n<a href=\"http://google.dev/u/me\">Google Developer Profile</a>. Test your knowledge about Android 11 Compatibility to earn a limited edition Android 11 Compatibility badge. \n<br> \n<h2> <strong>Key takeaways</strong></h2> With each release, we’re working to reduce the impact of compatibility testing on your apps. In Android 11, we’ve added new processes, developer tools, and release milestones to make it easier. We hope the resources we provided this week are helpful as you get started with your compatibility testing. Here are this week’s key takeaways for developers: \n<br> \n<ol> \n <li>Android 11 has reached Platform Stability and all app-facing APIs and behaviors are now complete. </li> \n <li>App and game developers should start compatibility testing now and release updates by the Android 11 final release later this year. </li> \n <li>SDK, library, and tool developers should complete testing and release compatible versions as soon as possible to avoid blocking downstream developers. </li> \n <li>New tools and resources are available to help. See below for highlights and visit developer.android.com/11 for complete details. </li> \n</ol> \n<h2> <strong>Resources</strong></h2> \n<em>You can find the entire playlist of #11WeeksOfAndroid video content <a href=\"https://www.youtube.com/user/androiddevelopers\">here</a>. We’ll continue to spotlight new areas each week, so <a href=\"https://android-developers.googleblog.com/\">keep an eye out</a> and follow us on <a href=\"https://twitter.com/androiddev\">Twitter</a> and <a href=\"https://www.youtube.com/user/androiddevelopers\">YouTube</a>. Below are the links to resources we talked about during Android 11 Compatibility week. </em> \n<br> \n<strong> Blog posts </strong>\n<br> \n<a href=\"https://android-developers.googleblog.com/2020/07/testing-app-compatibility-Android.html\">Testing app compatibility in Android 11</a> \n<br> \n<a href=\"https://android-developers.googleblog.com/2020/07/excelliance-tech-dynamic-resource-loading.html\">Excelliance Tech: moving to new Android APIs for long-term compatibility</a> \n<br> \n<a href=\"https://android-developers.googleblog.com/2020/07/android-11-beta-2-and-platform-stability.html#platformstability\">Android 11 Beta 2 and Platform Stability</a> \n<br> \n<a href=\"https://android-developers.googleblog.com/2020/07/accelerating-android-updates.html\">Accelerating Android updates</a> \n<br> \n<strong> Videos </strong>\n<br> \n<a href=\"https://www.youtube.com/watch?v=pCtCzPBC5MI&amp;list=PLWz5rJ2EKKc-Rkjav7zN93x4gJPOruB26\">Android 11 Compatibility playlist</a> \n<br> \n<a href=\"https://www.youtube.com/watch?v=pCtCzPBC5MI\">Android 11 Compatibility week preview</a> \n<br> \n<a href=\"https://youtu.be/82einkyFns4\">Testing platform changes in Android 11</a> \n<br> \n<a href=\"https://youtu.be/GM7CXRJKpEI\">Testing app compatibility with Android Studio</a> \n<br> \n<a href=\"https://www.youtube.com/watch?&amp;v=OzlhNZEAchQ\">Platform Stability and the Android release timeline</a> \n<br> \n<strong> Codelabs </strong>\n<br> \n<a href=\"https://codelabs.developers.google.com/codelabs/using-android-q-gsi/index.html?index=..%2F..index#0\">Installing Android 11 GSI</a> \n<br> \n<strong> Learning Paths </strong>\n<br> \n<a href=\"https://developer.android.com/courses/pathways/android-week4-compatibility\">Android 11 - Week 4 - Compatibility</a> \n<br> \n<strong> Reddit AMA </strong>\n<br> \n<a href=\"https://www.reddit.com/r/androiddev/comments/hk3hrq/were_on_the_android_engineering_team_ask_us/\">Android Platform Team AMA</a> \n<br> \n<strong> Related documentation </strong>\n<br> \n<a href=\"https://developer.android.com/preview/overview\">Android 11 timeline</a> \n<br> \n<a href=\"https://developer.android.com/preview/get\">Get Android 11</a> \n<br> \n<a href=\"https://developer.android.com/preview/migration\">Android 11 migration guide</a> \n<br> \n<a href=\"https://developer.android.com/preview/behavior-changes-all\">Android 11 behavior changes</a> \n<br> \n<a href=\"https://developer.android.com/preview/test-changes\">Testing app compatibility</a> \n<br> \n<a href=\"https://developer.android.com/preview/non-sdk-11\">Non-SDK restrictions in Android 11</a> \n<br> \n<a href=\"https://developer.android.com/preview/feedback\">Feedback and issues</a> \n<br> \n<a href=\"https://developer.android.com/11\">Android 11 Developer Site</a> \n<br> \n<br> \n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=2542Q0fABHc:F2K6eng6sn4:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=2542Q0fABHc:F2K6eng6sn4:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=2542Q0fABHc:F2K6eng6sn4:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/2542Q0fABHc\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Fri, 10 Jul 2020 21:16:00 +0000","feedId":7,"bgimg":"https://2.bp.blogspot.com/-vKqohBFO1m0/XwfRiJ70ZbI/AAAAAAAAPMY/_70XyqPG4ecpl188FhKx0tpvq1OQ9T7jgCLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2Btemplate%2Bv1.png","linkMd5":"9f1c6dcd3d303970904596e41fb5eab8","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn26@2020_1/2020-07-25/1595694868166_4e345a450329bff7.webp","author":"Android Developers","articleImgCdnMap":{"https://2.bp.blogspot.com/-vKqohBFO1m0/XwfRiJ70ZbI/AAAAAAAAPMY/_70XyqPG4ecpl188FhKx0tpvq1OQ9T7jgCLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2Btemplate%2Bv1.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn26@2020_1/2020-07-25/1595694868166_4e345a450329bff7.webp","https://4.bp.blogspot.com/-xv5CjfndWg8/XwTT2ykJSsI/AAAAAAAAJGI/rqxWH9MppHoIcLffVcmtnaBXwmspfeeCwCLcBGAsYHQ/s1600/timeline.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn94@2020_4/2020-07-25/1595694873862_b6a491787fffc57f.webp","https://3.bp.blogspot.com/-vkoW40yNHlY/XwTUwuWo4mI/AAAAAAAAJGU/mrx1eNqeKAQXxtkM-lAFs0oY9Vuzu6HmQCLcBGAsYHQ/s1600/appcompatibilitychanges.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn30@2020_4/2020-07-25/1595694875768_d9e492e8775cc711.webp","https://4.bp.blogspot.com/-GX4qn4zdENw/XwOiPt7frVI/AAAAAAAAJFo/rPaxax5C9_s_zYueQJl8AvNBEHL7XITkwCLcBGAsYHQ/s1600/07-%25E5%258D%2593%25E7%259B%259F%25E7%25A7%2591%25E6%258A%2580.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn74@2020_2/2020-07-25/1595694869787_87e8bbabf783e9a2.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=2542Q0fABHc:F2K6eng6sn4:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn22@2020_4/2020-07-25/1595694873511_0fbd069d8a1345a1.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/2542Q0fABHc":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn90@2020_4/2020-07-25/1595694871602_b23e2a32398ade75.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"Preparing your Gradle build for package visibility in Android 11","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/UoSQmIM8t5c/preparing-your-build-for-package-visibility-in-android-11.html","description":"<div dir=\"ltr\" style=\"text-align: left;\" trbidi=\"on\"> \n <img src=\"https://4.bp.blogspot.com/-f3njnPL0Dsg/Xwy5V9Db3xI/AAAAAAAAPNE/aOQINEm6D-kh7ex3wlu_9ppSQIf1obhxQCLcBGAsYHQ/s1600/Blog%2Bimage%2B.png\" style=\"display: none;\"> \n <br> \n <em>Posted by <a href=\"https://twitter.com/davidjwiner?lang=en\">David Winer</a>, Product Manager</em>\n <br> \n <br> \n <a href=\"https://4.bp.blogspot.com/-f3njnPL0Dsg/Xwy5V9Db3xI/AAAAAAAAPNE/aOQINEm6D-kh7ex3wlu_9ppSQIf1obhxQCLcBGAsYHQ/s1600/Blog%2Bimage%2B.png\" imageanchor=\"1\"><img alt=\"illustration of mobile device with lock\" border=\"0\" data-original-height=\"288\" data-original-width=\"512\" id=\"imgFull\" src=\"https://4.bp.blogspot.com/-f3njnPL0Dsg/Xwy5V9Db3xI/AAAAAAAAPNE/aOQINEm6D-kh7ex3wlu_9ppSQIf1obhxQCLcBGAsYHQ/s1600/Blog%2Bimage%2B.png\"></a> \n <br> One of the central themes for Android 11 has been protecting user privacy. On Android 10 and earlier, you could query the full set of installed apps using methods like \n <code>queryIntentActivities()</code>. Often, however, this approach provides much more access than most apps need to implement their functionality. To better protect user privacy, we updated how apps view and interact with other installed apps on Android 11. \n <br> To provide better accountability for access to installed apps, apps targeting Android 11 (API level 30) will see a filtered list of installed apps by default. The new \n <code>&lt;queries&gt;</code> element in your app or library’s Android manifest allows you to describe which other apps you might need to interact with. For more information about this change, check out our \n <a href=\"https://medium.com/androiddevelopers/package-visibility-in-android-11-cc857f221cd9\">Medium post</a> on package visibility in Android 11. \n <br> \n <h2> Android Studio and Gradle support</h2> If you are using Android Gradle plugin 4.1+, your tools should work with the new \n <code>&lt;queries&gt; </code>declaration. However, older versions of the Android Gradle plugin are not aware of this new element. If you add the \n <code>&lt;queries&gt;</code> element or if you start relying on a library or SDK that supports targeting Android 11, you may encounter manifest merging errors. For example, when building your app you may see the following error in the Build Output Window: \n <br> \n <code>Android resource linking failed /Users/sample/AndroidStudioProjects/MyApp/app/build/intermediates/merged_manifests/debug/AndroidManifest.xml:18: error: unexpected element &lt;queries&gt; found in &lt;manifest&gt;</code> \n <br> Alternatively, you may see an error in the Build Output Window that directs you to the Manifest merger logs: \n <br> \n <code>Manifest merger failed with multiple errors, see logs</code> \n <br> Upon expanding the \n <a href=\"https://developer.android.com/studio/build/manifest-merge#inspect_the_merged_manifest_and_find_conflicts\">Merged Manifest view</a> you would then see an additional error: \n <br> \n <code>Error: Missing 'package' key attribute on element package</code> \n <br> \n <h2> Android Gradle plugin fixes</h2> The best solution to deal with these errors is to upgrade to \n <a href=\"https://developer.android.com/studio/releases/gradle-plugin#updating-plugin\">Android Gradle plugin 4.1 Beta</a>. \n <br> We know that not everyone is ready to upgrade to the latest version, though, and you may be relying on old versions of Gradle or libraries that aren’t compatible with 4.1. \n <br> So, today we issued a set of \n <a href=\"https://developer.android.com/studio/releases/gradle-plugin#4-0-0\">dot releases</a> for the Android Gradle plugin that are compatible with \n <code>&lt;queries&gt;</code>: \n <br> \n <a href=\"https://2.bp.blogspot.com/-dH1U0SjyHbY/Xw0ZuOVO8iI/AAAAAAAAPNc/OWZSB0ySALIsO7KimlDpMb88fRlRtITIACLcBGAsYHQ/s1600/AGP%2Btable%2Bv3.png\" imageanchor=\"1\"><img alt=\"\" border=\"0\" compatibility=\"\" data-original-height=\"900\" data-original-width=\"1600\" gradle=\"\" id=\"imgFull\" ndroid=\"\" plugin=\"\" src=\"https://2.bp.blogspot.com/-dH1U0SjyHbY/Xw0ZuOVO8iI/AAAAAAAAPNc/OWZSB0ySALIsO7KimlDpMb88fRlRtITIACLcBGAsYHQ/s1600/AGP%2Btable%2Bv3.png\" style=\"width: 100%;\" table=\"\"></a> For example, if you are currently using Android Gradle plugin version 4.0.0, you can upgrade the version in your project-level build.gradle file: \n <br> \n <pre class=\"prettyprint\"> buildscript {\n\n    repositories {\n        google()\n        jcenter()\n    }\n\n    dependencies {\n        // classpath 'com.android.tools.build:gradle:4.0.0'\n        classpath 'com.android.tools.build:gradle:<mark>4.0.1</mark>'\n    }\n}</pre> \n <br> For more information on this new feature in Android 11, check out the \n <a href=\"https://developer.android.com/preview/privacy/package-visibility\">package visibility documentation</a> and the \n <a href=\"https://developer.android.com/studio/releases/gradle-plugin\">Android Gradle plugin release notes</a>. \n <br> \n <br>\n</div> \n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=UoSQmIM8t5c:K2J4EAMQ1zI:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=UoSQmIM8t5c:K2J4EAMQ1zI:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=UoSQmIM8t5c:K2J4EAMQ1zI:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/UoSQmIM8t5c\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Tue, 14 Jul 2020 17:26:00 +0000","feedId":7,"bgimg":"https://4.bp.blogspot.com/-f3njnPL0Dsg/Xwy5V9Db3xI/AAAAAAAAPNE/aOQINEm6D-kh7ex3wlu_9ppSQIf1obhxQCLcBGAsYHQ/s1600/Blog%2Bimage%2B.png","linkMd5":"4e0e3385c34a23d08b05141d592acfd8","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn18@2020_1/2020-07-25/1595694867963_ddbfb3ff2090a5b0.webp","author":"Android Developers","articleImgCdnMap":{"https://4.bp.blogspot.com/-f3njnPL0Dsg/Xwy5V9Db3xI/AAAAAAAAPNE/aOQINEm6D-kh7ex3wlu_9ppSQIf1obhxQCLcBGAsYHQ/s1600/Blog%2Bimage%2B.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn18@2020_1/2020-07-25/1595694867963_ddbfb3ff2090a5b0.webp","https://2.bp.blogspot.com/-dH1U0SjyHbY/Xw0ZuOVO8iI/AAAAAAAAPNc/OWZSB0ySALIsO7KimlDpMb88fRlRtITIACLcBGAsYHQ/s1600/AGP%2Btable%2Bv3.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn38@2020_5/2020-07-25/1595694875769_a3c556dd2b6832a6.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=UoSQmIM8t5c:K2J4EAMQ1zI:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn42@2020_4/2020-07-25/1595694871703_cf5f34b493a83093.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/UoSQmIM8t5c":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn86@2020_5/2020-07-25/1595694875790_4ec560d289a7eca4.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"Getting on the same page with Paging 3","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/BK5IcZZce8c/getting-on-same-page-with-paging-3.html","description":"<img style=\"display:none\" src=\"https://3.bp.blogspot.com/-eGu7cn6d12k/XxIE85ezRwI/AAAAAAAAPQk/Pej7vTRjtRw-fAv6U-KwupNSV9FV92kTgCLcBGAsYHQ/s1600/Paging%2Bdata%2Bwith%2Bpaging%2B3.0%2Bv03.png\"> \n<p><em>Posted by <a href=\"https://twitter.com/FMuntenescu\">Florina Muntenescu</a>, Android Developer Advocate</em></p>\n<p> <a href=\"https://3.bp.blogspot.com/-eGu7cn6d12k/XxIE85ezRwI/AAAAAAAAPQk/Pej7vTRjtRw-fAv6U-KwupNSV9FV92kTgCLcBGAsYHQ/s1600/Paging%2Bdata%2Bwith%2Bpaging%2B3.0%2Bv03.png\" imageanchor=\"1\"><img id=\"imgFull\" style=\"width:100%;\" border=\"0\" src=\"https://3.bp.blogspot.com/-eGu7cn6d12k/XxIE85ezRwI/AAAAAAAAPQk/Pej7vTRjtRw-fAv6U-KwupNSV9FV92kTgCLcBGAsYHQ/s1600/Paging%2Bdata%2Bwith%2Bpaging%2B3.0%2Bv03.png\" data-original-width=\"1024\" data-original-height=\"512\" alt=\"Android graphic\"></a> </p>\n<h1>Getting on the same page with Paging 3</h1> \n<p> The Paging library enables you to load large sets of data gradually and gracefully, reducing network usage and system resources. You told us that the Paging 2.0 API was not enough - that you wanted easier error handling, more flexibility to implement list transformations like <code>map</code> or <code>filter</code>, and support for list separators, headers, and footers. So we launched Paging 3.0 (now in alpha02), a complete rewrite of the library using Kotlin coroutines (still supporting Java users) and offering the features you asked for. </p> \n<h2>Paging 3 highlights</h2> \n<p> The Paging 3 API provides support for common functionality that you would otherwise need to implement yourself when loading data in pages: </p> \n<ul> \n <li>Keeps track of the keys to be used for retrieving the next and previous page. </li>\n <li>Automatically requests the correct next page when the user scrolls to the end of the loaded data. </li>\n <li>Ensures that multiple requests aren’t triggered at the same time. </li>\n <li>Tracks loading state and allows you to display it in a <code>RecyclerView</code> list item or elsewhere in your UI, and provides easy retry functionality for failed loads. </li>\n <li>Enables common operations like <code>map</code> or <code>filter</code> on the list to be displayed, independently of whether you’re using <code>Flow</code>, <code>LiveData</code>, or RxJava <code>Flowable</code> or <code>Observable</code>. </li>\n <li>Provides an easy way of implementing list separators. </li>\n <li>Simplifies data caching, ensuring that you’re not executing data transformations at every configuration change. </li> \n</ul> \n<p> We also made several Paging 3 components backwards compatible with Paging 2.0; so if you already use Paging in your app, you can <a href=\"https://developer.android.com/topic/libraries/architecture/paging/v3-migration\">migrate</a> incrementally. </p> \n<h2>Adopting Paging 3 in your app</h2> \n<p> Let’s say that we’re implementing an app that displays all the good doggos. We get the doggos from a <code>GoodDoggos</code> API that supports index-based pagination. Let’s go over the Paging components we need to implement and how they fit into your app architecture. The following examples will be in Kotlin, using coroutines. For examples in the Java programming language using LiveData/RxJava, check out the <a href=\"https://developer.android.com/topic/libraries/architecture/paging/v3-overview\">documentation</a>. </p> \n<p> The Paging library integrates directly into the recommended Android app architecture in each layer of your app: </p> \n<center> \n <a href=\"https://3.bp.blogspot.com/-WDij3mAUZEo/XxXYliprwbI/AAAAAAAAPRY/EaHnaoH0S60ydry-Q7ZPpw1L5FuPG_cnACLcBGAsYHQ/s1600/Screenshot%2B2020-07-01%2Bat%2B13.41.47.png\" imageanchor=\"1\"><img style=\"width:600px\" border=\"0\" src=\"https://3.bp.blogspot.com/-WDij3mAUZEo/XxXYliprwbI/AAAAAAAAPRY/EaHnaoH0S60ydry-Q7ZPpw1L5FuPG_cnACLcBGAsYHQ/s1600/Screenshot%2B2020-07-01%2Bat%2B13.41.47.png\" data-original-width=\"1600\" data-original-height=\"446\" alt=\"Paging components\"></a> \n</center> \n<p id=\"imgCaption\"> Paging components and their integration in the app architecture\" </p> \n<h3>Defining the data source</h3> \n<p> Depending on where you’re loading data from, implement only a <code><a href=\"https://developer.android.com/reference/kotlin/androidx/paging/PagingSource\">PagingSource</a></code> or a <code>PagingSource</code> and a <code><a href=\"https://developer.android.com/reference/kotlin/androidx/paging/RemoteMediator\">RemoteMediator</a></code>: </p>\n<ul> \n <li>If you’re loading data from a <strong>single source</strong>, like network, local database, a file, etc, implement the <code>PagingSource</code> (if you’re using Room, it <a href=\"https://developer.android.com/training/data-storage/room/accessing-data#paging-integration\">implements</a> the <code>PagingSource</code> for you starting in Room 2.3.0-alpha). </li>\n <li>If you’re loading data from a <strong>layered source</strong>, like a network data source with a local database cache, implement the <code>RemoteMediator</code> to merge the two sources and a <code>PagingSource</code> for the local database cache. </li> \n</ul> \n<h3>PagingSource</h3> \n<p> A <code><a href=\"https://developer.android.com/reference/kotlin/androidx/paging/PagingSource\">PagingSource</a></code> defines the source of paging data and how to retrieve data from that single source. The <code>PagingSource</code> should be part of the repository layer. Implement <code><a href=\"https://developer.android.com/reference/kotlin/androidx/paging/PagingSource#load\">load()</a></code> to retrieve paged data from your data source and return the loaded data together with information about next and previous keys. This is a <code>suspend</code> function, so you can call other <code>suspend</code> functions here, such as the network call: </p>\n<pre class=\"prettyprint\">class DoggosRemotePagingSource(\n&nbsp; &nbsp; val backend: GoodDoggosService\n) : PagingSource&lt;Int, Dog&gt;() {\n&nbsp; override suspend fun load(\n&nbsp; &nbsp; params: LoadParams&lt;Int&gt;\n&nbsp; ): LoadResult&lt;Int, Dog&gt; {\n&nbsp; &nbsp; try {\n&nbsp; &nbsp; &nbsp; // Load page 1 if undefined.\n&nbsp; &nbsp; &nbsp; val nextPageNumber = params.key ?: 1\n&nbsp; &nbsp; &nbsp; val response = backend.getDoggos(nextPageNumber)\n&nbsp; &nbsp; &nbsp; return LoadResult.Page(\n&nbsp; &nbsp; &nbsp; &nbsp; data = response.doggos,\n&nbsp; &nbsp; &nbsp; &nbsp; prevKey = null, // Only paging forward.\n&nbsp; &nbsp; &nbsp; &nbsp; nextKey = response.nextPageNumber + 1\n&nbsp; &nbsp; &nbsp; )\n&nbsp; &nbsp; } catch (e: Exception) {\n&nbsp; &nbsp; &nbsp;   // Handle errors in this block\n&nbsp; &nbsp; &nbsp; &nbsp; return LoadResult.Error(exception)\n&nbsp; &nbsp; }\n&nbsp; }\n}</pre> \n<h3>PagingData and Pager</h3> \n<p> The container for paginated data is called <code><a href=\"https://developer.android.com/reference/kotlin/androidx/paging/PagingData\">PagingData</a></code>. A new instance of <code>PagingData</code> is created every time your data is refreshed. To build a stream of <code>PagingData</code> create a <code><a href=\"https://developer.android.com/reference/kotlin/androidx/paging/Pager\">Pager</a></code> instance, using a <code><a href=\"https://developer.android.com/reference/kotlin/androidx/paging/PagingConfig\">PagingConfig</a></code> configuration object and a function that tells the <code>Pager</code> how to get an instance of your <code>PagingSource</code> implementation. </p>\n<p> In your <code>ViewModel</code> you construct the <code>Pager</code> object and expose a <code>Flow&lt;PagingData&gt;</code> to the UI. <code>Flow&lt;PagingData&gt;</code> has a handy <code><a href=\"https://developer.android.com/reference/kotlin/androidx/paging/package-summary#cachedin\">cachedIn()</a></code> method that makes the data stream shareable and allows you to cache the content of a <code>Flow&lt;PagingData&gt;</code> in a <code>CoroutineScope</code>. That way if you implement any transformations on the data stream, they will not be triggered again each time you <code>collect</code> the <code>flow</code> after <code>Activity</code> recreation. The caching should be done as close to the UI layer as possible, but not in the UI layer, as we want to make sure it persists beyond configuration change. The best place for this would be in a <code>ViewModel</code>, using the <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/package-summary#viewmodelscope\">viewModelScope</a></code>: </p>\n<pre class=\"prettyprint\">val doggosPagingFlow = Pager(PagingConfig(pageSize = 10)) {\n  DogRemotePagingSource(goodDoggosService)\n}.flow.cachedIn(viewModelScope)</pre> \n<h3>PagingDataAdapter</h3> \n<p> To connect a <code>RecyclerView</code> to the <code>PagingData</code>, implement a <code><a href=\"https://developer.android.com/reference/kotlin/androidx/paging/PagingDataAdapter\">PagingDataAdapter</a></code>: </p>\n<pre class=\"prettyprint\">class DogAdapter(diffCallback: DiffUtil.ItemCallback&lt;Dog&gt;) :\n  PagingDataAdapter&lt;Dog, DogViewHolder&gt;(diffCallback) {\n  override fun onCreateViewHolder(\n    parent: ViewGroup,\n    viewType: Int\n  ): DogViewHolder {\n    return DogViewHolder(parent)\n  }\n\n  override fun onBindViewHolder(holder: DogViewHolder, position: Int) {\n    val item = getItem(position)\n    if(item == null) {\n      holder.bindPlaceholder()\n    } else {\n      holder.bind(item)\n    }\n  }\n}</pre> \n<p> Then, in your <code>Activity</code>/<code>Fragment</code> you’ll have to collect the <code>Flow&lt;PagingData&gt;</code> and submit it to the <code>PagingDataAdapter</code>. This is what the implementation would look like in an <code>Activity onCreate()</code>: </p> \n<pre class=\"prettyprint\">val viewModel by viewModels&lt;DoggosViewModel&gt;()\n\nval pagingAdapter = DogAdapter(DogComparator)\nval recyclerView = findViewById&lt;RecyclerView&gt;(R.id.recycler_view)\nrecyclerView.adapter = pagingAdapter\n\nlifecycleScope.launch {\n  viewModel.doggosPagingFlow.collectLatest { pagingData -&gt;\n    pagingAdapter.submitData(pagingData)\n  }\n}</pre> \n<h2>Paged data transformations</h2> \n<center> \n <a href=\"https://2.bp.blogspot.com/-97PVeeAEpNk/XxXah7PeWZI/AAAAAAAAPRs/TaNPCBrtBMkzlbxBJkdv6dJEsbCuwSQ5ACLcBGAsYHQ/s1600/Screenshot%2B2020-07-19%2Bat%2B12.31.10.png\" imageanchor=\"1\"><img style=\"width:300px\" border=\"0\" src=\"https://2.bp.blogspot.com/-97PVeeAEpNk/XxXah7PeWZI/AAAAAAAAPRs/TaNPCBrtBMkzlbxBJkdv6dJEsbCuwSQ5ACLcBGAsYHQ/s1600/Screenshot%2B2020-07-19%2Bat%2B12.31.10.png\" data-original-width=\"668\" data-original-height=\"1314\" alt=\"A filtered list\"></a> \n</center> \n<p id=\"imgCaption\"> Displaying a filtered list </p> \n<p> Transforming <code>PagingData</code> streams is very similar to the way you would any other data stream. For example, if we only want to display playful doggos from our <code>Flow&lt;PagingData&lt;Dog&gt;&gt;</code> we would need to map the <code>Flow</code> object and then <code>filter</code> the <code>PagingData</code>: </p> \n<pre class=\"prettyprint\">doggosPagingFlow.map { pagingData -&gt;\n        pagingData.filter { dog -&gt; dog.isPlayful }\n    }</pre> \n<center> \n <a href=\"https://1.bp.blogspot.com/-BhEPdp1l9P8/XxXbF-Z0F0I/AAAAAAAAPR4/KyDkrVZTmuMFMfRqhIuYf9ifj7x87KE9QCLcBGAsYHQ/s1600/Screenshot%2B2020-07-19%2Bat%2B12.23.26.png\" imageanchor=\"1\"><img style=\"width: 300px\" border=\"0\" src=\"https://1.bp.blogspot.com/-BhEPdp1l9P8/XxXbF-Z0F0I/AAAAAAAAPR4/KyDkrVZTmuMFMfRqhIuYf9ifj7x87KE9QCLcBGAsYHQ/s1600/Screenshot%2B2020-07-19%2Bat%2B12.23.26.png\" data-original-width=\"668\" data-original-height=\"1318\" alt=\"list with separators\"></a> \n</center> \n<p id=\"imgCaption\"> List with separators </p> \n<p> Adding <strong>list separators</strong> is also a paged data transformation where we transform the <code>PagingData</code> to insert separator objects into the list. For example, we can insert letter separators for our doggos’ names. When using separators, you will need to implement your own UI model class that supports the new separator items. To modify your <code>PagingData</code> to add separators, you will use the <code><a href=\"https://developer.android.com/reference/kotlin/androidx/paging/PagingData#insertseparators\">insertSeparators</a></code> transformation: </p>\n<pre class=\"prettyprint\">pager.flow.map { pagingData: PagingData&lt;Dog&gt; -&gt;\n  pagingData.map { doggo -&gt;\n    // Convert items in stream to UiModel.DogModel.\n    UiModel.DogModel(doggo)\n  }\n  .insertSeparators&lt;UiModel.DogModel, UiModel&gt; { before: Dog, after: Dog -&gt;\n      return if(after == null) {\n          // we're at the end of the list\n          null\n      } else if (before == null || before.breed != after.breed) {\n          // breed above and below different, show separator\n          UiModel.SeparatorItem(after.breed)\n      } else {\n          // no separator\n          null\n      }\n    }\n  }\n}.cachedIn(viewModelScope)</pre> \n<p> Just as before, we're using <code>cachedIn</code> right before the UI layer. This ensures that loaded data and the results of any transformations can be cached and reused after a configuration change. </p> \n<h3>Advanced Paging work with RemoteMediator</h3> \n<p> If you’re paging data from a <strong>layered source</strong>, you should implement a <code><a href=\"https://developer.android.com/reference/kotlin/androidx/paging/RemoteMediator\">RemoteMediator</a></code>. For example, in the implementation of this class you need to request data from the network and save it in the database. The <code><a href=\"https://developer.android.com/reference/kotlin/androidx/paging/RemoteMediator#load\">load()</a></code> method will be triggered whenever there is no more data in the database to be displayed. Based on the <code><a href=\"https://developer.android.com/reference/kotlin/androidx/paging/PagingState\">PagingState</a></code> and the <code><a href=\"https://developer.android.com/reference/kotlin/androidx/paging/LoadType\">LoadType</a></code> we can construct the next page request. </p>\n<p> It’s your responsibility to define how the previous and next remote page keys are constructed and retained as the Paging library doesn’t know what your API looks like. For example, you can associate remote keys to every item you receive from the network and save them in the database. </p> \n<pre class=\"prettyprint\">override suspend fun load(loadType: LoadType, state: PagingState&lt;Int, Dog&gt;): MediatorResult {\n\n   val page = ... // computed based on loadType and state\n\n   try {\n       val doggos = backend.getDoggos(page)\n       doggosDatabase.doggosDao().insertAll(doggos)\n       \n       val endOfPaginationReached = emails.isEmpty()\n       return MediatorResult.Success(endOfPaginationReached = endOfPaginationReached)\n   } catch (exception: Exception) {\n       return MediatorResult.Error(exception)\n   } \n}</pre> \n<p> When you’re loading data from the network and saving it to the database, the database is the source of truth for the data displayed on the screen. This means that the UI will be displaying data from your database, so you’ll have to implement a <code>PagingSource</code> for your database. If you’re using Room, you’ll just need to add a new query in your DAO that returns a <code>PagingSource</code>: </p> \n<pre class=\"prettyprint\">@Query(\"SELECT * FROM doggos\")\nfun getDoggos(): PagingSource&lt;Int, Dog&gt;</pre> \n<p> The <code>Pager</code> implementation changes slightly in this case, as you need to pass the <code>RemoteMediator</code> instance as well: </p> \n<pre class=\"prettyprint\">val pagingSourceFactory = { database.doggosDao().getDoggos() }\n\nreturn Pager(\n     config = PagingConfig(pageSize = NETWORK_PAGE_SIZE),\n     remoteMediator = DoggosRemoteMediator(service, database),\n     pagingSourceFactory = pagingSourceFactory\n).flow</pre> \n<p> Check out the <a href=\"https://developer.android.com/topic/libraries/architecture/paging/v3-network-db\">docs</a> to find out more about working with RemoteMediator. For a complete implementation of <code>RemoteMediator</code> in an app, check out step 15 of the <a href=\"https://codelabs.developers.google.com/codelabs/android-paging/#14\">Paging codelab</a> and the <a href=\"https://github.com/googlecodelabs/android-paging/blob/step13-19_network_and_database/app/src/main/java/com/example/android/codelabs/paging/data/GithubRemoteMediator.kt\">accompanying code</a>. </p> \n<br> \n<br> \n<p> We’ve designed the Paging 3 library to help you accommodate both simple and complex uses of Paging. It makes it easier to work with large sets of data whether it’s being loaded from the network, a database, in-memory cache, or some combination of these sources. The library is built on coroutines and <code>Flow</code>, making it easy to call suspend functions and work with streams of data. </p> \n<p> As Paging 3 is still in alpha, we need your help to make it better! To get started, find out more about Paging in our <a href=\"https://developer.android.com/topic/libraries/architecture/paging/v3-overview\">documentation</a> and try it out by taking our <a href=\"https://codelabs.developers.google.com/codelabs/android-paging/\">codelab</a> or checking out the <a href=\"https://github.com/android/architecture-components-samples/tree/master/PagingWithNetworkSample\">sample</a>. Then, let us know how we can improve the library by creating issues on the <a href=\"https://issuetracker.google.com/issues?q=componentid:413106%20status:openhttps://issuetracker.google.com/issues?q=componentid:413106%20status:open\">Issue Tracker</a>. </p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=BK5IcZZce8c:EGCBoyG6j5g:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=BK5IcZZce8c:EGCBoyG6j5g:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=BK5IcZZce8c:EGCBoyG6j5g:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/BK5IcZZce8c\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Tue, 21 Jul 2020 13:20:00 +0000","feedId":7,"bgimg":"https://3.bp.blogspot.com/-eGu7cn6d12k/XxIE85ezRwI/AAAAAAAAPQk/Pej7vTRjtRw-fAv6U-KwupNSV9FV92kTgCLcBGAsYHQ/s1600/Paging%2Bdata%2Bwith%2Bpaging%2B3.0%2Bv03.png","linkMd5":"d8c2fda321208bb071d07ae5b7d7d06c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn78@2020_6/2020-07-25/1595694868016_d098c941958143fb.webp","author":"Android Developers","articleImgCdnMap":{"https://3.bp.blogspot.com/-eGu7cn6d12k/XxIE85ezRwI/AAAAAAAAPQk/Pej7vTRjtRw-fAv6U-KwupNSV9FV92kTgCLcBGAsYHQ/s1600/Paging%2Bdata%2Bwith%2Bpaging%2B3.0%2Bv03.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn78@2020_6/2020-07-25/1595694868016_d098c941958143fb.webp","https://3.bp.blogspot.com/-WDij3mAUZEo/XxXYliprwbI/AAAAAAAAPRY/EaHnaoH0S60ydry-Q7ZPpw1L5FuPG_cnACLcBGAsYHQ/s1600/Screenshot%2B2020-07-01%2Bat%2B13.41.47.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn54@2020_3/2020-07-25/1595694871696_cbce7015e2ee36e6.webp","https://2.bp.blogspot.com/-97PVeeAEpNk/XxXah7PeWZI/AAAAAAAAPRs/TaNPCBrtBMkzlbxBJkdv6dJEsbCuwSQ5ACLcBGAsYHQ/s1600/Screenshot%2B2020-07-19%2Bat%2B12.31.10.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn26@2020_1/2020-07-25/1595694874049_d95c473c08fd94b2.webp","https://1.bp.blogspot.com/-BhEPdp1l9P8/XxXbF-Z0F0I/AAAAAAAAPR4/KyDkrVZTmuMFMfRqhIuYf9ifj7x87KE9QCLcBGAsYHQ/s1600/Screenshot%2B2020-07-19%2Bat%2B12.23.26.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn26@2020_3/2020-07-25/1595694874814_382180d40f315bc9.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=BK5IcZZce8c:EGCBoyG6j5g:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn66@2020_2/2020-07-25/1595694871886_f80fce1ad285f959.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/BK5IcZZce8c":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn46@2020_6/2020-07-25/1595694871930_b71ed9222b679da4.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"Accelerating Android Updates","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/O0bTGXVphuY/accelerating-android-updates.html","description":"<img style=\"display:none\" src=\"https://3.bp.blogspot.com/-Sl_jjA1fGVE/Xwc8VcxcdlI/AAAAAAAAJHE/NKZ_6uyg_WIBFrmVmRH-jvyZR4VHE1BMgCLcBGAsYHQ/s1600/androidgraph.png\"> \n<p><em>Posted by Eddie Hsu (Technical Program Manager), Brent VerWeyst (Product Manager), Maya Ben Ari (Product Manager), Amith Dsouza (Technical Account Manager), Iliyan Malchev (Project Treble Architect)</em></p>\n<p> </p>\n<p> Over the past few years we’ve introduced new capabilities that enable us to deliver updates more uniformly, quickly, and efficiently to Android devices. These capabilities include: </p> \n<ul> \n <li>Oreo’s introduction of <a href=\"https://android-developers.googleblog.com/2017/05/here-comes-treble-modular-base-for.html\">Project Treble</a> created a system/vendor split for a much cleaner <a href=\"https://android-developers.googleblog.com/2017/05/here-comes-treble-modular-base-for.html\">separation of OEM and SoC</a> dependencies from the rest of the code base. This effort sped up the adoption of Android Pie by 2.5X. Every Android device that preloads the Google Play Store has been Treble compliant since that point. </li>\n <li>In Pie, we started publishing the <a href=\"https://developer.android.com/topic/generic-system-image\">Generic System Images</a> (GSI) so that developers can use them for app-compat testing on real hardware. Treble compliance means that every device is compatible with our GSIs, even if it does not ship with them. We also worked with our major partners to launch an OEM <a href=\"https://android-developers.googleblog.com/2018/05/faster-adoption-with-project-treble.html\">developer preview program</a>. As a result, we saw a further 1.5X increase in the adoption of Android 10. </li>\n <li>In Android 10, we started updating components of the OS directly via Google Play system updates (<a href=\"https://android-developers.googleblog.com/2019/05/fresher-os-with-projects-treble-and-mainline.html\">Project Mainline</a>). Mainline provides security and privacy updates for the OS in a way that’s similar to apps – through Google Play. For example, in our most recent deployment, we directly updated 285 million devices with fixes for security vulnerabilities. </li>\n <li>Google Play is also responsible for updating critical applications and services, such as authentication, push notifications, and Google Play Protect. A good example is the launch of the <a href=\"https://blog.google/inside-google/company-announcements/apple-google-exposure-notification-api-launches/\">Exposure Notification</a> API. Exposure Notifications are a tool to help public-health agencies in the fight against COVID-19. The API was deployed in May via Google Play to over 2 billion devices in the space of just 4 weeks. </li> \n</ul> \n<p> </p>\n<h2>Android 10 Adoption</h2> \n<p></p> \n<p> Thanks to these efforts, the adoption of Android 10 has been faster than any previous versions of Android. Android 10 was running on 100 million devices 5 months post launch –&nbsp;28% faster than Android Pie. </p> \n<a href=\"https://3.bp.blogspot.com/-Sl_jjA1fGVE/Xwc8VcxcdlI/AAAAAAAAJHE/NKZ_6uyg_WIBFrmVmRH-jvyZR4VHE1BMgCLcBGAsYHQ/s1600/androidgraph.png\" imageanchor=\"1\"><img id=\"imgFull\" border=\"0\" src=\"https://3.bp.blogspot.com/-Sl_jjA1fGVE/Xwc8VcxcdlI/AAAAAAAAJHE/NKZ_6uyg_WIBFrmVmRH-jvyZR4VHE1BMgCLcBGAsYHQ/s1600/androidgraph.png\" data-original-width=\"1078\" data-original-height=\"730\"></a> \n<p> </p>\n<h2>Updatability in Android 11</h2> \n<p></p> \n<p> Below are the major themes in updatability this year: </p> \n<p> <strong>OEM Developer Previews:</strong> In Android 11, device makers (OEMs) are continuing their developer previews ahead of the official launch. Seven OEMs have released Developer Preview builds on 13 devices to provide app developers with diverse hardware as they test for compatibility. </p> \n<p> <strong>Google Play system update:</strong> 21 OS components are now updatable, including 9 additions in Android 11 focused on improving privacy, security, and developer consistency across devices. Highlights include an enhanced permissions component that standardizes user and developer access to critical privacy controls on Android devices, a Neural Networks API (NNAPI) component that optimizes performance and guarantees consistent APIs across devices, and a Tethering component for improved interoperability. The new updatable OS components in Android 11 are: Tethering, NNAPI, Cell Broadcast Receiver, adbd, Internet Key Exchange, Media Provider, statsd, WiFi, and SDK extension. </p> \n<p> <strong>Generic Kernel Image: </strong>Our ongoing updatability work extends to the Linux kernel itself, with initiatives such as 6-year LTS support. In Android 11, we are further isolating common code in the Android Linux kernel to create a Generic Kernel Image (GKI) that works across all Android devices, as well as to enable faster security deployments. Stay tuned for a more detailed post on GKI in the coming months. </p> \n<p> <strong>Virtual A/B:</strong> Most OS updates are not delivered via Google Play. Instead, they use separate third-party Over-the-Air (OTA) services that differ among the various OEMs. These services use a mechanism that, while very space efficient, has the disadvantage of being slow to apply, rendering the device inoperable for the duration. To solve this problem, in Android Nougat we launched a mechanism called \"A/B OTA\" (aka <a href=\"https://source.android.com/devices/tech/ota/ab?hl=en\">Seamless Updates</a>). A/B OTAs have the advantage of appearing to be near-instant from the user's perspective, since they apply in the background and become active on the next reboot. However, they doubled the amount of storage reserved for the OS itself, limiting adoption among OEMs. </p> \n<p> We’ve developed a new OTA mechanism –&nbsp;Virtual A/B – that combines the benefits of the previous two: being seamless from the user's perspective while requiring less storage. We are working closely with our OEM partners to begin implementing Virtual A/B in Android 11 devices, making OTAs as frictionless as possible. Going forward, Virtual A/B will be the only supported OTA mechanism in Android. </p> \n<p> </p>\n<h2>Looking to the Future</h2> \n<p></p> \n<p> We’re excited by the increased adoption of Android and are grateful for the close collaborations with our chipset and OEM partners to deploy updates earlier. We continue to work on a number of enhancements in the platform and infrastructure to make it easier for developers and users to benefit from the latest versions of Android. </p> \n<p><em>Reminder that the Android engineering team will host a Reddit AMA today at 12:00PM PST to answer your technical questions about Android 11. See <a href=\"https://www.reddit.com/r/androiddev/comments/hk3hrq/were_on_the_android_engineering_team_ask_us\">this post</a> for details and to submit your questions.</em></p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=O0bTGXVphuY:Tv0oAQe1rPw:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=O0bTGXVphuY:Tv0oAQe1rPw:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=O0bTGXVphuY:Tv0oAQe1rPw:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/O0bTGXVphuY\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Thu, 09 Jul 2020 16:31:00 +0000","feedId":7,"bgimg":"https://3.bp.blogspot.com/-Sl_jjA1fGVE/Xwc8VcxcdlI/AAAAAAAAJHE/NKZ_6uyg_WIBFrmVmRH-jvyZR4VHE1BMgCLcBGAsYHQ/s1600/androidgraph.png","linkMd5":"19b1fb4d1ba661ec8ff7a465e4f6439e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn50@2020_5/2020-07-25/1595694869421_0ba42f7de405d7ad.webp","author":"Android Developers","articleImgCdnMap":{"https://3.bp.blogspot.com/-Sl_jjA1fGVE/Xwc8VcxcdlI/AAAAAAAAJHE/NKZ_6uyg_WIBFrmVmRH-jvyZR4VHE1BMgCLcBGAsYHQ/s1600/androidgraph.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn50@2020_5/2020-07-25/1595694869421_0ba42f7de405d7ad.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=O0bTGXVphuY:Tv0oAQe1rPw:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn86@2020_1/2020-07-25/1595694873795_a6f53bff98ab93df.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/O0bTGXVphuY":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn82@2020_1/2020-07-25/1595694872691_29b55912531b64e3.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"New tools for finding, training, and using custom machine learning models on Android","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/votTJprEkF0/tools-for-custom-ML-models.html","description":"<img style=\"display:none\" src=\"https://3.bp.blogspot.com/-rIVuWenAqII/XvJ8VbudJ8I/AAAAAAAAI_s/nud83QIW5R0MgIO11ch1KMFo6til54zQQCLcBGAsYHQ/s1600/Screen%2BShot%2B2020-06-23%2Bat%2B3.03.49%2BPM.png\"> \n<p><em>Posted by <a href=\"http://twitter.com/hoitab\">Hoi Lam</a>, Android Machine Learning</em></p> \n<p> Yesterday, we talked about <a href=\"https://android-developers.googleblog.com/2020/06/mlkit-on-device-machine-learning-solutions.html\">turnkey machine learning (ML) solutions with ML Kit</a>. But what if that doesn’t completely address your needs and you need to tweak it a little? Today, we will discuss how to find alternative models, and how to train and use custom ML models in your Android app. </p> \n<h2>Find alternative ML models</h2> \n<a href=\"https://1.bp.blogspot.com/-zHjmpajdHBY/XvJ7XvrBxVI/AAAAAAAAI_k/I_ejZeruo7caSzjpBWU8g5JptNQbToyvACLcBGAsYHQ/s1600/Crop.001.png\" imageanchor=\"1\"><img border=\"0\" id=\"imgFull\" src=\"https://1.bp.blogspot.com/-zHjmpajdHBY/XvJ7XvrBxVI/AAAAAAAAI_k/I_ejZeruo7caSzjpBWU8g5JptNQbToyvACLcBGAsYHQ/s1600/Crop.001.png\" data-original-width=\"1600\" data-original-height=\"775\"></a> \n<p id=\"imgCaption\">Crop disease models from the wider research community available on tfhub.dev</p> \n<p> If the turnkey ML solutions don't suit your needs, <a href=\"https://tfhub.dev/\">TensorFlow Hub</a> should be your first port of call. It is a repository of ML models from Google and the wider research community. The models on the site are ready for use in the cloud, in a web-browser or in an app on-device. For Android developers, the most exciting models are the <a href=\"https://tfhub.dev/s?deployment-format=lite\">TensorFlow Lite (TFLite) models</a> that are optimized for mobile. </p> \n<p> In addition to key vision models such as MobileNet and EfficientNet, the repository also boast models powered by the latest research such as: </p> \n<ul> \n <li><a href=\"https://tfhub.dev/google/on_device_vision/classifier/popular_wine_V1/1\">Wine classification</a> for 400,000 popular wines </li>\n <li><a href=\"https://tfhub.dev/google/on_device_vision/classifier/popular_us_products_V1/1\">US supermarket product classification</a> for 100,000 products </li>\n <li><a href=\"https://tfhub.dev/google/collections/landmarks/1\">Landmark recognition</a> on a per-continent basis </li>\n <li><a href=\"https://tfhub.dev/google/lite-model/cropnet/classifier/cassava_disease_V1/1\">CropNet model</a> by Brain Accra for recognising <a href=\"https://www.youtube.com/watch?v=MD61bddZtbg\">Cassava leaf disease</a> </li>\n <li><a href=\"https://tfhub.dev/agripredict/lite-model/disease-classification/1\">Plant disease recognition</a> from <a href=\"https://tfhub.dev/agripredict\">AgriPredict</a> that detects disease in maize and tomato plants </li> \n</ul> \n<p> Many of these solutions were previously only available in the cloud, as the models are too large and too power intensive to run on-device. Today, you can run them on Android <a href=\"https://www.youtube.com/watch?v=SLqsq0zBPIM\">on-device, offline and live</a>. </p> \n<h2>Train your own custom model</h2> \n<iframe width=\"560\" height=\"315\" id=\"imgFull\" src=\"https://www.youtube.com/embed/s_XOVkjXQbU\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> \n<p> Besides the large repository of base models, developers can also train their own models. Developer-friendly tools are available for many common use cases. In addition to <a href=\"https://firebase.google.com/docs/ml/train-image-labeler\">Firebase’s AutoML Vision Edge</a>, the TensorFlow team launched <a href=\"https://www.tensorflow.org/lite/tutorials/model_maker_image_classification\">TensorFlow Lite Model Maker</a> earlier this year to give developers more choices over the base model that support more use cases. TensorFlow Lite Model Maker currently supports two common ML tasks: </p> \n<ul> \n <li><a href=\"https://www.tensorflow.org/lite/tutorials/model_maker_image_classification\">Image Classification</a> </li>\n <li><a href=\"https://www.tensorflow.org/lite/tutorials/model_maker_text_classification\">Text Classification</a> </li> \n</ul> \n<p> The TensorFlow Lite Model Maker can run on your own developer machine or in <a href=\"https://colab.sandbox.google.com/github/tensorflow/tensorflow/blob/master/tensorflow/lite/g3doc/tutorials/model_maker_image_classification.ipynb\">Google Colab</a> online machine learning notebooks. Going forward, the team plans to improve the existing offerings and to add new use cases. </p> \n<h2>Using custom model in your Android app</h2> \n<center>\n <a href=\"https://4.bp.blogspot.com/-BnMBD3FPL2o/XvJ03x2t-OI/AAAAAAAAI_Y/h7Hnnvxe1egYZNloI-wvpAm4R0z89bWgQCLcBGAsYHQ/s1600/ML%2BModel%2BBinding%2B%25281%2529.png\" imageanchor=\"1\"><img border=\"0\" style=\"width:400px\" src=\"https://4.bp.blogspot.com/-BnMBD3FPL2o/XvJ03x2t-OI/AAAAAAAAI_Y/h7Hnnvxe1egYZNloI-wvpAm4R0z89bWgQCLcBGAsYHQ/s1600/ML%2BModel%2BBinding%2B%25281%2529.png\" data-original-width=\"1600\" data-original-height=\"1240\"></a>\n</center> \n<p id=\"imgCaption\">New TFLite Model import screen in Android Studio 4.1 beta</p> \n<p> Once you have selected a model or trained your model there are new easy-to-use tools to help you integrate them into your Android app without having to convert everything into ByteArrays. The first new tool is <a href=\"https://developer.android.com/studio/preview/features#tensor-flow-lite-models\">ML Model binding with Android Studio 4.1</a>. This lets developers import any TFLite model, read the input / output signature of the model, and use it with just a few lines of code that calls the open source TensorFlow Lite Android Support Library. </p> \n<p> Another way to implement a TensorFlow Lite model is via <a href=\"http://g.co/mlkit\">ML Kit</a>. Starting in June, ML Kit no longer requires a Firebase project for on-device functionality. In addition, the <a href=\"https://developers.google.com/ml-kit/vision/image-labeling/custom-models/android\">image classification</a> and <a href=\"https://developers.google.com/ml-kit/vision/object-detection/custom-models/android\">object detection and tracking</a> (ODT) APIs support custom models. The latter ODT offering is especially useful in use-cases where you need to separate out objects from a busy scene. </p> \n<p> So how should you choose between these three solutions? If you are trying to detect a product on a busy supermarket shelf, ML Kit object detection and tracking can help your user select a specific product for processing. The API then performs image classification on just the part of the image that contains the product, which results in better detection performance. On the other hand, if the scene or the object you are trying to detect takes up most of the input image, for example, a landmark such as Big Ben, using ML Model binding or the ML Kit image classification API might be more appropriate. </p> \n<center>\n <a href=\"https://3.bp.blogspot.com/-DTyiNxYczss/XvJ0jjhZDiI/AAAAAAAAI_Q/AJcgeZRpkUw-peqeFzhASbhWpH1AwxbCgCLcBGAsYHQ/s1600/ML%2BKit%2BODT%2BScreenshot%2Bwith%2Bframe%2B%25281%2529.png\" imageanchor=\"1\"><img border=\"0\" style=\"width:500px\" src=\"https://3.bp.blogspot.com/-DTyiNxYczss/XvJ0jjhZDiI/AAAAAAAAI_Q/AJcgeZRpkUw-peqeFzhASbhWpH1AwxbCgCLcBGAsYHQ/s1600/ML%2BKit%2BODT%2BScreenshot%2Bwith%2Bframe%2B%25281%2529.png\" data-original-width=\"1600\" data-original-height=\"777\"></a>\n</center> \n<p id=\"imgCaption\">TensorFlow Hub bird detection model with ML Kit Object Detection &amp; Tracking AP</p> \n<p></p>\n<h2>Two examples of how these tools can fit together</h2> \n<div class=\"separator\" style=\"clear: both; text-align: center;\"> \n <a href=\"https://1.bp.blogspot.com/-cE1bPayJ_hI/XvJzEufBCyI/AAAAAAAAI_E/bDUUp78jWWMFXYF5trCdvIPhO3A-RvyoACLcBGAsYHQ/s1600/Sunflower%2Bwith%2Bframe.png\" imageanchor=\"1\" style=\"clear: right; float: right; margin-bottom: 1em; margin-left: 1em;\"><img border=\"0\" data-original-height=\"1600\" data-original-width=\"776\" height=\"320\" src=\"https://1.bp.blogspot.com/-cE1bPayJ_hI/XvJzEufBCyI/AAAAAAAAI_E/bDUUp78jWWMFXYF5trCdvIPhO3A-RvyoACLcBGAsYHQ/s320/Sunflower%2Bwith%2Bframe.png\" width=\"155\"></a>\n</div> Here are some resources to help you get started: \n<br> \n<ul> \n <li><strong><a href=\"https://goo.gle/3dbCSbt\">Codelab of the day: Recognize Flowers with TensorFlow Lite on Android (beta)</a></strong>. This codelab utilizes the TensorFlow Lite Model Maker to produce the TFLite model and Android Studio 4.1’s ML Model binding to integrate the custom model into an Android app. Together with the TensorFlow team, we have also recorded <a href=\"https://www.youtube.com/watch?v=s_XOVkjXQbU\">a special screencast to run you through all the steps in this codelab</a>. If you have any questions regarding this code lab, please raise them at <a href=\"https://stackoverflow.com/questions/tagged/android-studio+tensorflow-lite\">StackOverflow</a> and tag it with <strong>[Android-Studio]</strong> AND <strong>[Tensorflow-lite]</strong>. Our team will monitor these tags. </li> \n <li><a href=\"https://www.youtube.com/watch?v=3RdEIXRgVHo&amp;feature=youtu.be\">TensorFlow Hub and ML Kit Screencast</a>: In this video, we first go through how Android developers can get the most out of TensorFlow Hub: how to find and download a model. Then we explain the steps to integrate it with ML Kit’s Object Detection and Tracking API. </li> \n</ul> \n<p> </p>\n<h2>Customizing your model is easier than ever</h2> \n<p>Finding, building and using custom models on Android has never been easier. As both Android and TensorFlow teams increase the coverage of machine learning use cases, please let us know how we can improve these tools for your use cases by filing an enhancement request with <a href=\"https://github.com/tensorflow/tensorflow/labels/comp%3Alite\">TensorFlow Lite</a> or <a href=\"https://issuetracker.google.com/issues/new?component=897785&amp;template=1457328\">ML Kit</a>. </p>\n<p>Tomorrow, we will take a step back and focus on how to appropriately use and design for a machine learning first Android app. The content will be appropriate for the entire development team, so bring your product manager and designers along. See you next time. <br> <br></p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=votTJprEkF0:U7bwYvQK09w:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=votTJprEkF0:U7bwYvQK09w:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=votTJprEkF0:U7bwYvQK09w:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/votTJprEkF0\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Wed, 24 Jun 2020 17:00:00 +0000","feedId":7,"bgimg":"https://3.bp.blogspot.com/-rIVuWenAqII/XvJ8VbudJ8I/AAAAAAAAI_s/nud83QIW5R0MgIO11ch1KMFo6til54zQQCLcBGAsYHQ/s1600/Screen%2BShot%2B2020-06-23%2Bat%2B3.03.49%2BPM.png","linkMd5":"0aa4c3b84975a1f728c7e3b5a947dc81","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn54@2020_1/2020-07-25/1595694868008_0c5780fbedeb063b.webp","author":"Android Developers","articleImgCdnMap":{"https://3.bp.blogspot.com/-rIVuWenAqII/XvJ8VbudJ8I/AAAAAAAAI_s/nud83QIW5R0MgIO11ch1KMFo6til54zQQCLcBGAsYHQ/s1600/Screen%2BShot%2B2020-06-23%2Bat%2B3.03.49%2BPM.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn54@2020_1/2020-07-25/1595694868008_0c5780fbedeb063b.webp","https://1.bp.blogspot.com/-zHjmpajdHBY/XvJ7XvrBxVI/AAAAAAAAI_k/I_ejZeruo7caSzjpBWU8g5JptNQbToyvACLcBGAsYHQ/s1600/Crop.001.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn62@2020_4/2020-07-25/1595694871892_394ba932d7e086e0.webp","https://4.bp.blogspot.com/-BnMBD3FPL2o/XvJ03x2t-OI/AAAAAAAAI_Y/h7Hnnvxe1egYZNloI-wvpAm4R0z89bWgQCLcBGAsYHQ/s1600/ML%2BModel%2BBinding%2B%25281%2529.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn78@2020_4/2020-07-25/1595694880520_4a4c3b5ccda43c46.webp","https://3.bp.blogspot.com/-DTyiNxYczss/XvJ0jjhZDiI/AAAAAAAAI_Q/AJcgeZRpkUw-peqeFzhASbhWpH1AwxbCgCLcBGAsYHQ/s1600/ML%2BKit%2BODT%2BScreenshot%2Bwith%2Bframe%2B%25281%2529.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn58@2020_3/2020-07-25/1595694876454_8754a63188651444.webp","https://1.bp.blogspot.com/-cE1bPayJ_hI/XvJzEufBCyI/AAAAAAAAI_E/bDUUp78jWWMFXYF5trCdvIPhO3A-RvyoACLcBGAsYHQ/s320/Sunflower%2Bwith%2Bframe.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn86@2020_5/2020-07-25/1595694872268_b0429e5365fede74.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=votTJprEkF0:U7bwYvQK09w:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn98@2020_5/2020-07-25/1595694873006_dec6c57f3f764572.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/votTJprEkF0":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn50@2020_5/2020-07-25/1595694873987_083fb8111222fb77.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"New features to acquire and retain subscribers","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/Ko2SEINaSw0/new-features-to-acquire-and-retain-subscribers.html","description":"<img style=\"display:none\" src=\"https://2.bp.blogspot.com/-pWz2YJq_FEk/XvEXWmw2gZI/AAAAAAAAI8E/cZfFHZ_T0Z4GNEC1DlIORN2Miql6ClGMgCLcBGAsYHQ/s1600/phones.png\"> \n<em>Posted by Angela Ying, Product Manager, Google Play</em>\n<br> \n<p> Subscription continues to be one of the fastest growing business models for apps in Google Play. As your subscription business evolves and becomes more sophisticated, our platform continues to evolve to better support your needs. Today we’re excited to tell you more about the new subscription capabilities we announced at the <a href=\"https://www.youtube.com/watch?v=gnrNckXeSjQ&amp;feature=youtu.be\">Android 11 Beta Launch</a>, including promotional codes to help you access new subscribers, new opportunities to remind users of your value and win back churned users. Many of these capabilities are built on top of the <a href=\"https://android-developers.googleblog.com/2020/06/meet-google-play-billing-library.html\">Play Billing Library version 3</a>. </p>\n<p> In addition to the new capabilities, we are also making improvements to our existing platform. Over the past few years, we have launched many features, such as account hold, restore, and pause, which have been highly effective in reducing your voluntary and involuntary churn. We want to ensure that everyone can take advantage of them, which is why we are planning on changing the default settings for these features from optional to either mandatory or on by default <strong>starting on November 1, 2020. </strong>Additional details on these features and implementation requirements can be found at the end of this post.<strong> </strong> </p>\n<p> Here’s everything that is changing about the subscriptions platform: </p>\n<p> <a href=\"https://2.bp.blogspot.com/-cZmiQUESPdk/XvEUB7yxOSI/AAAAAAAAI74/_yFvnDbro2QR0xd9vymIweStskWkf2ynwCLcBGAsYHQ/s1600/Untitled%2Bdocument%2B%252812%2529.png\" imageanchor=\"1\"><img alt=\"Subscriptions platform\" border=\"0\" data-original-height=\"415\" data-original-width=\"1026\" id=\"imgFull\" src=\"https://2.bp.blogspot.com/-cZmiQUESPdk/XvEUB7yxOSI/AAAAAAAAI74/_yFvnDbro2QR0xd9vymIweStskWkf2ynwCLcBGAsYHQ/s1600/Untitled%2Bdocument%2B%252812%2529.png\"></a> </p>\n<p> </p>\n<h2> More targeted promotions</h2> Promotions and deals are an important way to grow your business to acquire new customers. That’s why over the last year, we have invested in new promotional code capabilities for subscriptions that you can use to send promotions to a more targeted set of users. \n<p> Last year at <a href=\"https://www.youtube.com/watch?v=N4004Set4F8\">I/O 2019</a>, we launched subscription one-time promotion codes, unique alphanumeric codes that can be distributed to individual users for redemption. Now, we have launched a new frictionless redemption flow which allows users to easily redeem the code, purchase the subscription, and install the app in the Play store in a few simple steps. This greatly simplifies the user experience by reducing the friction users go through to use your code. Since this subscription is started outside of your app, it is only available to developers who are using <a href=\"https://developer.android.com/google/play/billing/integrate\">Billing Library 2.0 or higher</a>. </p>\n<p> </p>\n<center> \n <a href=\"https://2.bp.blogspot.com/-pWz2YJq_FEk/XvEXWmw2gZI/AAAAAAAAI8E/cZfFHZ_T0Z4GNEC1DlIORN2Miql6ClGMgCLcBGAsYHQ/s1600/phones.png\" imageanchor=\"1\"><img alt=\"example mobile displays\" border=\"0\" data-original-height=\"613\" data-original-width=\"981\" id=\"imgFull\" src=\"https://2.bp.blogspot.com/-pWz2YJq_FEk/XvEXWmw2gZI/AAAAAAAAI8E/cZfFHZ_T0Z4GNEC1DlIORN2Miql6ClGMgCLcBGAsYHQ/s1600/phones.png\"></a>\n</center> In addition to one-time codes, we are excited to officially announce the launch of custom codes (also known as vanity codes), which can be redeemed by multiple users and can be used for marketing campaigns to drive acquisitions. For example, you can post custom codes in advertisements or in social promotions to creatively engage with potential new users. Users can redeem a custom code in your app by entering it in their payment methods when purchasing a subscription. \n<p> </p>\n<h2> Remind users of the value of your subscription</h2> Retaining your subscribers is crucial for the long-term health of your subscriptions business. The reason why users stay subscribed is because they perceive ongoing value from your subscription service. To help you communicate this value, we recently launched a module that will remind users of the benefits gained from a subscription when they go to cancel. To take advantage of this module, add a short list of up to 4 subscriber benefits in the Google Play Console. \n<p> </p>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"> \n <a href=\"https://1.bp.blogspot.com/-jtCmQDVkVE4/XvEYUFel46I/AAAAAAAAI8U/eCb2VvpxACgd7kC7a6zmLIz5sFH25xe0ACLcBGAsYHQ/s1600/Subs%2Bbenefits.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1600\" data-original-width=\"772\" height=\"320\" src=\"https://1.bp.blogspot.com/-jtCmQDVkVE4/XvEYUFel46I/AAAAAAAAI8U/eCb2VvpxACgd7kC7a6zmLIz5sFH25xe0ACLcBGAsYHQ/s320/Subs%2Bbenefits.png\" width=\"154\"></a>\n</div> \n<h2> Win back churned subscribers</h2> If users do churn from their subscription, we want to make it easy for them to restart it whenever they want. To help you do this, we have launched the ability for users to resubscribe to recently expired subscriptions directly from the Google Play subscriptions center. You can enable your SKUs for resubscribe in the Google Play Console. Since this subscription is started outside of your app, it is only available to developers who are using Billing Library version 2 or higher. \n<p> </p>\n<div class=\"separator\" style=\"clear: both; text-align: center;\"> \n <a href=\"https://1.bp.blogspot.com/-N-w0SO8w_fU/XvEYij13C8I/AAAAAAAAI8Y/ONVmbxOi-EApbAQ31CS78b2muG2Mckz0ACLcBGAsYHQ/s1600/resubscribe.png\" imageanchor=\"1\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" data-original-height=\"1600\" data-original-width=\"772\" height=\"320\" src=\"https://1.bp.blogspot.com/-N-w0SO8w_fU/XvEYij13C8I/AAAAAAAAI8Y/ONVmbxOi-EApbAQ31CS78b2muG2Mckz0ACLcBGAsYHQ/s320/resubscribe.png\" width=\"154\"></a>\n</div> \n<p> </p>\n<h2>Price decreases without opt-ins</h2> \n<p> Finally, we’ve heard your feedback that requiring users to opt in to subscription price decreases was too restrictive. We are happy to announce that subscription price decreases will no longer require users to take action to opt in to keep their subscription. Users will be notified of an upcoming price decrease and be able to see the upcoming change in the Google Play subscriptions center. </p> \n<h2>Updated platform retention settings</h2> \n<p> Over the past few years, our platform has made strides in helping you keep your subscribers, through features aimed at decreasing both voluntary churn and involuntary churn (churn due to payment failure). For example, account hold has helped developers achieve 8% lower involuntary churn and 35% higher payment decline recovery rate compared to developers without account hold. Although these features are effective, retention may not be something that you are thinking about when starting out for the first time. </p> \n<p> That’s why we are announcing updated defaults for several subscriptions features that have been up until now optional, which will take effect on <strong>November 1, 2020.</strong> </p> \n<ul> \n <li>Account hold and restore will both be mandatory for all developers. \n  <ul> \n   <li>Account hold is a state the user enters after a renewal fails due to a payment issue. During account hold, the user loses access to the subscription while Google notifies the user and retries the payment method. <a href=\"https://developer.android.com/google/play/billing/subs#account-hold\">Learn how to integrate account hold</a> </li>\n   <li>Restore enables users to resume auto-renewals after they have cancelled the subscription but before the subscription expires. <a href=\"https://developer.android.com/google/play/billing/subs#restore\">Learn how to integrate restore</a> </li> \n  </ul> </li>\n <li>Pause and resubscribe will be turned on by default for all developers with subscriptions enabled. You can opt-out of either feature in Google Play Console at any time, in case you are unable to implement the changes by November. \n  <ul> \n   <li>Pause enables users to pause their subscription for up to 3 months. At the end of the pause period, the subscription will auto-resume. Pause requires Account Hold to be enabled. You can disable the feature by selecting “Disabled” next to Pause in the subscription settings of the Play console. <a href=\"https://developer.android.com/google/play/billing/subs#pause\">Learn how to integrate pause</a> </li>\n   <li>Resubscribe enables users to resubscribe to a churned subscription within 12 months of subscription expiry. This feature is only available to apps that support <a href=\"https://developer.android.com/google/play/billing/billing_overview\">Billing Library versions 2.0</a> and above. You can disable the feature by changing the setting to “Disabled” for each subscription product in the Play console. <a href=\"https://developer.android.com/google/play/billing/subs#resubscribe\">Learn how to integrate resubscribe</a> </li> \n  </ul> </li> \n</ul> \n<p> You may have to make modifications to your app or your server to handle these new features. Specifically, your app should: </p> \n<ul> \n <li><strong>Recognize when a user loses access to the subscription and when the user regains it later </strong> \n  <ul> \n   <li>If your app relies on the Billing Library and not the Google Play Developer API <a href=\"https://developers.google.com/android-publisher/api-ref/purchases/subscriptions\">Purchases.subscriptions</a> to maintain the latest state of your subscriber, then your app should automatically be able to handle this. </li>\n   <li>However, if you rely on the Google Play Developer API, which is common for developers whose subscription is accessible across multiple platforms such as web, it is important that you always have the latest status of the subscriber in your server. </li>\n   <li>To ensure you always have the latest subscriber status, we strongly recommend implementing Real-Time Developer Notifications. <a href=\"https://developer.android.com/google/play/billing/realtime_developer_notifications\">Learn more</a>. </li> \n  </ul> </li>\n <li><strong>Gracefully handle out of app purchases (Billing Library 2.0+ only)</strong> \n  <ul> \n   <li>When a user opens the app after resubscribing, make sure you <a href=\"https://developer.android.com/google/play/billing/integrate#process\">acknowledge the purchase</a> and show an in-app message recognizing the new purchase. Check out our <a href=\"https://developer.android.com/google/play/billing/integrate#ooap\">best practices</a> for handling out of app purchases. </li> \n  </ul> </li> \n</ul> \n<p> Although not every feature will require you to make engineering changes, we highly recommend that you test each feature before November 1. To make the transition easier, Google has enabled Account Hold, Pause, Restore, and Resubscribe for all license test accounts. <a href=\"https://developer.android.com/google/play/billing/billing_testing#testing-subscriptions\">Learn more about testing for subscriptions</a>. </p> \n<br>\n<br> \n<br>\n<br> \n<center> \n <p> How useful did you find this blog post? </p> \n <p> <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=1%E2%98%85+%E2%80%93+Not+at+all&amp;entry.2056663615&amp;entry.646747778=PlayLanguagesAPI-03/19\" style=\"color: gold;\">★</a> <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=2%E2%98%85+%E2%80%93+Not+very&amp;entry.2056663615&amp;entry.646747778=PlayLanguagesAPI-03/19\" style=\"color: gold;\">★</a> <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=3%E2%98%85+%E2%80%93+Somewhat&amp;entry.2056663615&amp;entry.646747778=PlayLanguagesAPI-03/19\" style=\"color: gold;\">★</a> <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=4%E2%98%85+%E2%80%93+Very&amp;entry.2056663615&amp;entry.646747778=PlayLanguagesAPI-03/19\" style=\"color: gold;\">★</a> <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScLTlzFd_aV-3rAdBqO1QxwCsuAcDCIM6fJFXyNcyf7zElVXg/viewform?entry.753333049=5%E2%98%85+%E2%80%93+Extremely&amp;entry.2056663615&amp;entry.646747778=PlayLanguagesAPI-03/19\" style=\"color: gold;\">★</a> </p> \n <p> <a href=\"https://4.bp.blogspot.com/-1LBva3U1LCI/W6kL2pl9ZYI/AAAAAAAAFys/grkBZRKkAWE1eLAh6DPffThJ7gP__SREACLcBGAs/s1600/play_logo_16_9%2B%25285%2529.png\" imageanchor=\"1\"><img id=\"imgHalf\" style=\"width:40%;\" border=\"0\" src=\"https://4.bp.blogspot.com/-1LBva3U1LCI/W6kL2pl9ZYI/AAAAAAAAFys/grkBZRKkAWE1eLAh6DPffThJ7gP__SREACLcBGAs/s1600/play_logo_16_9%2B%25285%2529.png\" data-original-width=\"499\" data-original-height=\"281\"></a> </p> \n</center> \n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=Ko2SEINaSw0:20an1CWYcrY:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=Ko2SEINaSw0:20an1CWYcrY:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=Ko2SEINaSw0:20an1CWYcrY:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/Ko2SEINaSw0\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Tue, 23 Jun 2020 15:42:00 +0000","feedId":7,"bgimg":"https://2.bp.blogspot.com/-pWz2YJq_FEk/XvEXWmw2gZI/AAAAAAAAI8E/cZfFHZ_T0Z4GNEC1DlIORN2Miql6ClGMgCLcBGAsYHQ/s1600/phones.png","linkMd5":"1d552505b0a1f8645a4ae7bbb6397051","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn58@2020_6/2020-07-25/1595694869187_7ed1a318e56b10d4.webp","author":"Google Developers","articleImgCdnMap":{"https://2.bp.blogspot.com/-pWz2YJq_FEk/XvEXWmw2gZI/AAAAAAAAI8E/cZfFHZ_T0Z4GNEC1DlIORN2Miql6ClGMgCLcBGAsYHQ/s1600/phones.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn58@2020_6/2020-07-25/1595694869187_7ed1a318e56b10d4.webp","https://2.bp.blogspot.com/-cZmiQUESPdk/XvEUB7yxOSI/AAAAAAAAI74/_yFvnDbro2QR0xd9vymIweStskWkf2ynwCLcBGAsYHQ/s1600/Untitled%2Bdocument%2B%252812%2529.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn78@2020_1/2020-07-25/1595694873285_4b2e6e48e76fd053.webp","https://1.bp.blogspot.com/-jtCmQDVkVE4/XvEYUFel46I/AAAAAAAAI8U/eCb2VvpxACgd7kC7a6zmLIz5sFH25xe0ACLcBGAsYHQ/s320/Subs%2Bbenefits.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn46@2020_5/2020-07-25/1595694874958_5c361d454b92d020.webp","https://1.bp.blogspot.com/-N-w0SO8w_fU/XvEYij13C8I/AAAAAAAAI8Y/ONVmbxOi-EApbAQ31CS78b2muG2Mckz0ACLcBGAsYHQ/s320/resubscribe.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn14@2020_2/2020-07-25/1595694873491_831a1e8af3a56a8a.webp","https://4.bp.blogspot.com/-1LBva3U1LCI/W6kL2pl9ZYI/AAAAAAAAFys/grkBZRKkAWE1eLAh6DPffThJ7gP__SREACLcBGAs/s1600/play_logo_16_9%2B%25285%2529.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn2@2020_1/2020-07-25/1595694874168_536270849f70b284.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=Ko2SEINaSw0:20an1CWYcrY:-BTjWOF_DHI":null,"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/Ko2SEINaSw0":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn62@2020_5/2020-07-25/1595694874986_54263578e1e8e8d2.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"Decrease startup time with Jetpack App Startup","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/C42xoR2gU4c/decrease-startup-time-with-jetpack-app.html","description":"<img style=\"display:none\" src=\"https://3.bp.blogspot.com/-nQZnpkNzvHg/Xxiu-grxEuI/AAAAAAAAPTY/SaDDpJtTY-ovG6kQqKRHEMJDJ3ivhVJRgCLcBGAsYHQ/s1600/Jetpack_Decrease_Starup_Time.png\"> \n<p><em>Posted by <a href=\"https://twitter.com/yrezgui\">Yacine Rezgui</a>, Developer Advocate and <a href=\"https://twitter.com/tikurahul\">Rahul Ravikumar</a>, Software Engineer</em></p>\n<p> </p>\n<center> \n <a href=\"https://3.bp.blogspot.com/-nQZnpkNzvHg/Xxiu-grxEuI/AAAAAAAAPTY/SaDDpJtTY-ovG6kQqKRHEMJDJ3ivhVJRgCLcBGAsYHQ/s1600/Jetpack_Decrease_Starup_Time.png\" imageanchor=\"1\"><img style=\"width:650px\" border=\"0\" src=\"https://3.bp.blogspot.com/-nQZnpkNzvHg/Xxiu-grxEuI/AAAAAAAAPTY/SaDDpJtTY-ovG6kQqKRHEMJDJ3ivhVJRgCLcBGAsYHQ/s1600/Jetpack_Decrease_Starup_Time.png\" data-original-width=\"1600\" data-original-height=\"476\" alt=\"Jetpack image\"></a> \n</center> \n<p> Application startup time is a critical metric for any application. Users expect apps to be responsive and fast to load. When an application does not meet this expectation, it can be disappointing to users. This poor experience may cause a user to rate your app badly on the Play store, or even abandon your app altogether. </p> \n<p> <a href=\"https://developer.android.com/topic/libraries/app-startup\">Jetpack App Startup</a> is a library that provides a straightforward, performant way to initialize components at application startup. Both library developers and app developers can use App Startup to streamline startup sequences and explicitly set the order of initialization. </p> \n<p> Apps and libraries often rely on having components (<code>WorkManager</code>, <code>ProcessLifecycleObserver</code>, <code>FirebaseApp</code> etc.) initialized before <code>Application.onCreate()</code>. This is usually achieved by using content providers to initialize each dependency. Instead of defining separate content providers for each component that needs to be initialized, App Startup lets you define initializers that share a single content provider. This significantly improves app startup time, usually by ~2ms per content provider. App Startup also helps you <strong>further improve startup performance</strong> by making it really easy to <a href=\"https://developer.android.com/topic/libraries/app-startup#disable-individual\">initialize components lazily</a>. When App Startup goes stable, we will be updating our libraries like `WorkManager` and `ProcessLifecycle` to benefit from this as well. </p> \n<p> App Startup supports API level 14 and above. </p> \n<h2>How to use it</h2> \n<b>Gradle setup</b> \n<p> To use App Startup in your library or app, add the following dependency to your gradle file: </p> \n<pre class=\"prettyprint\">repositories {\n    google()\n    maven()\n}\n\ndependencies {\n  implementation \"androidx.startup:startup-runtime:1.0.0-alpha02\"\n}\n</pre> \n<b>Define an Initializer</b> \n<p> To be able to use App Startup in your application, you need to define an<a href=\"https://developer.android.com/topic/libraries/app-startup#implement-initializers\"> Initializer</a>. This is where you define how to initialize and specify your dependencies. Here’s the interface you need to implement: </p> \n<pre class=\"prettyprint\">interface Initializer&lt;out T: Any&gt; {\n    fun create(context: Context): T\n    fun dependencies(): List&lt;Class&lt;out Initializer&lt;*&gt;&gt;&gt;\n}</pre> \n<p> As a practical example, here’s what an <code>Initializer</code> that initializes <strong>WorkManager</strong> might look like: </p> \n<pre class=\"prettyprint\">class WorkManagerInitializer : Initializer&lt;WorkManager&gt; {\n    override fun create(context: Context): WorkManager {\n        val configuration = Configuration.Builder()\n            .setMinimumLoggingLevel(Log.DEBUG)\n            .build()\n\n        WorkManager.initialize(context, configuration)\n        return WorkManager.getInstance(context)\n    }\n   \n    // This component does not have any dependencies\n    override fun dependencies() = emptyList&lt;Class&lt;out Initializer&lt;*&gt;&gt;&gt;()\n}</pre> \n<p> <b>Note: </b> <i>This example is purely illustrative. This <code>Initializer</code> should actually be defined by the WorkManager library.</i> </p> \n<p> Lastly, we need to add an entry for <code>WorkManagerInitializer</code> in the <code>AndroidManifest.xml</code>: </p> \n<pre class=\"prettyprint\">&lt;provider\n    android:name=\"androidx.startup.InitializationProvider\"\n    android:authorities=\"${applicationId}.androidx-startup\"\n    android:exported=\"false\"\n    tools:node=\"merge\"&gt;\n    &lt;!-- This entry makes WorkManagerInitializer discoverable. --&gt;\n    &lt;meta-data android:name=\"com.example.WorkManagerInitializer\"\n          android:value=\"androidx.startup\" /&gt;\n&lt;/provider&gt;</pre> \n<h2>How it works</h2> \n<p> App Startup uses a single content provider called <code>InitializationProvider</code>. This content provider discovers initializers by introspecting the <code>&lt;meta-data&gt;</code> entries in the merged <code>AndroidManifest.xml</code> file. This happens before <code>Application.onCreate()</code>. </p> \n<p> After the discovery phase, it subsequently initializes a component after having initialized all its dependencies. Therefore, a component is <strong>only initialized after</strong> all its dependencies have been initialized. </p> \n<h2>Lazy initialization</h2> \n<p> We highly recommend using lazy initialization to further improve startup performance. To make initialization of a component lazy, you need to do the following: </p> \n<p> Add a <code>tools:node=\"remove\"</code> attribute to the <code>&lt;meta-data&gt;</code> entry for the <code>Initializer</code>. This disables eager initialization. </p> \n<pre class=\"prettyprint\">&lt;provider\n    android:name=\"androidx.startup.InitializationProvider\"\n    android:authorities=\"${applicationId}.androidx-startup\"\n    android:exported=\"false\"\n    tools:node=\"merge\"&gt;\n    &lt;!-- disables eager initialization --&gt;\n    &lt;meta-data android:name=\"com.example.WorkManagerInitializer\"\n              tools:node=\"remove\" /&gt;\n&lt;/provider&gt;</pre> \n<p> To lazily initialize <code>WorkManagerInitializer</code> you can then use: </p> \n<pre class=\"prettyprint\">// This returns an instance of WorkManager\nAppInitializer.getInstance(context)\n    .initializeComponent(WorkManagerInitializer.class);</pre> \n<p> Your app now initializes the component lazily. For more information, please read our detailed documentation <a href=\"https://developer.android.com/topic/libraries/app-startup#disable-individual\">here</a>. </p> \n<h2>Final thoughts</h2> \n<p> App Startup is currently in <code>alpha-02</code>. Find out more about how to use it from our <a href=\"https://developer.android.com/topic/libraries/app-startup\">documentation</a>. Once you try it out, help us make it better by giving us feedback on the <a href=\"https://issuetracker.google.com/components/823348#basic\">issue tracker</a>. </p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=C42xoR2gU4c:WDE0jF_quU8:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=C42xoR2gU4c:WDE0jF_quU8:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=C42xoR2gU4c:WDE0jF_quU8:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/C42xoR2gU4c\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Thu, 23 Jul 2020 23:20:00 +0000","feedId":7,"bgimg":"https://3.bp.blogspot.com/-nQZnpkNzvHg/Xxiu-grxEuI/AAAAAAAAPTY/SaDDpJtTY-ovG6kQqKRHEMJDJ3ivhVJRgCLcBGAsYHQ/s1600/Jetpack_Decrease_Starup_Time.png","linkMd5":"fee0c5681dbee5b72d4a8c6f81836923","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn42@2020_6/2020-07-25/1595694869189_1ac3aa785ab7cedd.webp","author":"Android Developers","articleImgCdnMap":{"https://3.bp.blogspot.com/-nQZnpkNzvHg/Xxiu-grxEuI/AAAAAAAAPTY/SaDDpJtTY-ovG6kQqKRHEMJDJ3ivhVJRgCLcBGAsYHQ/s1600/Jetpack_Decrease_Starup_Time.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn42@2020_6/2020-07-25/1595694869189_1ac3aa785ab7cedd.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=C42xoR2gU4c:WDE0jF_quU8:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn42@2020_1/2020-07-25/1595694873872_3a4d69eb13f2643c.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/C42xoR2gU4c":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn94@2020_6/2020-07-25/1595694871945_252da72525d2e752.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"Learn Android and Kotlin with no programming experience","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/pFFLyW6Oz5c/learn-android-and-kotlin-with-no-experience.html","description":"<img“imgfull”style=\"display:none\" src=\"https://4.bp.blogspot.com/-2xdRboZXPwo/Xw-uR2xUiWI/AAAAAAAAPQM/noNfBUf3VQQeNwgkJoBpstxBn8cQg_Z2QCLcBGAsYHQ/s1600/Screen%2BShot%2B2020-07-15%2Bat%2B5.29.55%2BPM.png\"> \n <p><em>Posted by <a href=\"https://twitter.com/katherine_kuan\">Kat Kuan</a>, Developer Advocate, Android </em></p>\n <p> </p>\n <p> Many people today are considering career paths that enable them to work remotely. App development allows for that style of work. For people who want a new opportunity, it’s possible to start learning Android today, even without prior programming experience. </p> \n <p> In 2016, we released our <a href=\"https://android-developers.googleblog.com/2016/06/introducing-android-basics-nanodegree.html\">Android Basics curriculum</a>, which assumes no programming experience, and the response has been tremendous. Hundreds of thousands of students have been learning Android development and programming concepts simultaneously as they build apps. Since then, there have been big platform changes with four major releases of Android and support added for the Kotlin programming language. We also introduced Jetpack, a suite of libraries that make it easier to build better apps with less code. With all these new updates, it’s time to release the next generation of training content for beginners. </p> \n <p> Today we’re announcing the launch of <a href=\"http://g.co/android/basics\">Android Basics in Kotlin</a>, a new online course for people without programming experience to learn how to build Android apps. The course teaches Kotlin, a modern programming language that developers love because of its conciseness and how it increases productivity. Kotlin is quickly gaining momentum in industry. Over a single year from 2018 - 2019, <a href=\"https://www.hiringlab.org/2019/11/26/fastest-rising-tech-skills/\">Indeed Hiring Lab</a> found a 76% increase in Kotlin jobs.* </p> \n <p> Google announced that Android development is Kotlin-first, and 60% of professional Android developers have already adopted the language. In the Play Store, 70% of the top 1,000 apps use Kotlin. To keep pace and prepare for the future, there has never been a more opportune time to learn Android with Kotlin. </p> \n <iframe id=\"imgFull\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/oSim9fBFy-E\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> \n <p> Learning to code for the first time can feel intimidating, but it is possible to learn without a technical background. From a recent <a href=\"https://insights.stackoverflow.com/survey/2020#developer-profile-undergraduate-major-professional-developers2\">Stack Overflow Developer Survey</a>, nearly 40% of the professional developers who studied at university did not receive a formal computer science or software engineering degree. </p> \n <p> To build your confidence, the <a href=\"http://g.co/android/basics\">Android Basics in Kotlin</a> course offers step-by-step instructions on how to use Android Studio to build apps, as well as how to run them on an Android device (or virtual device). The goal is to expose you to the tools and resources that professional Android developers use. With hands-on practice, you learn the fundamentals of programming. By the end of the course, you will have completed a collection of Android apps to start building a portfolio. </p>\n <div id=\"flexParent\"> \n  <a href=\"https://1.bp.blogspot.com/-i8np-BrbX3A/Xw9zh1xDXMI/AAAAAAAAPPU/tjMtRPmYyVwCtxYyASUulsGICoJuzpKuQCLcBGAsYHQ/s1600/BirthdayCardApp_framed.png\" imageanchor=\"1\"><img id=\"flexImg\" border=\"0\" src=\"https://1.bp.blogspot.com/-i8np-BrbX3A/Xw9zh1xDXMI/AAAAAAAAPPU/tjMtRPmYyVwCtxYyASUulsGICoJuzpKuQCLcBGAsYHQ/s1600/BirthdayCardApp_framed.png\" data-original-width=\"360\" data-original-height=\"720\" alt=\"Object detection &amp; tracking gif\"></a> \n  <a href=\"https://3.bp.blogspot.com/-4ya4NMqA6GU/Xw90F5KcyWI/AAAAAAAAPPc/G5C37EIWU6I8PsPA2WT1_fo3PNTy7ZNSQCLcBGAsYHQ/s1600/DiceRollerApp_framed.png\" imageanchor=\"1\"><img id=\"flexImg\" border=\"0\" src=\"https://3.bp.blogspot.com/-4ya4NMqA6GU/Xw90F5KcyWI/AAAAAAAAPPc/G5C37EIWU6I8PsPA2WT1_fo3PNTy7ZNSQCLcBGAsYHQ/s1600/DiceRollerApp_framed.png\" 360\" data-original-height=\"720\" alt=\"Text recognition + Language ID + Translate gif\"></a> \n </div> \n <p id=\"imgCaption\"> App screenshots from the course </p> This course is split up into units, where each unit is made up of a series of pathways. At the end of each pathway, there is a quiz to assess what you’ve learned so far. If you pass the quiz, you earn a badge that can be saved to your \n <a href=\"https://google.dev/help\">Google Developer Profile</a>. \n <div id=\"flexParent\"> \n  <a href=\"https://3.bp.blogspot.com/-L6PH6lZ9IC8/Xw92SPtMJTI/AAAAAAAAPPs/KhcFNLEYBPIAQf52UD5M6B5MAQzzP_IfQCLcBGAsYHQ/s1600/GDev-Badge-Birthday-Card-App%25402x%2B%25281%2529.png\" imageanchor=\"1\"><img id=\"flexImg\" border=\"0\" src=\"https://3.bp.blogspot.com/-L6PH6lZ9IC8/Xw92SPtMJTI/AAAAAAAAPPs/KhcFNLEYBPIAQf52UD5M6B5MAQzzP_IfQCLcBGAsYHQ/s1600/GDev-Badge-Birthday-Card-App%25402x%2B%25281%2529.png\" data-original-width=\"360\" data-original-height=\"720\" alt=\"Object detection &amp; tracking gif\"></a> \n  <a href=\"https://1.bp.blogspot.com/-EDmBvK7Qico/Xw93LA6NWyI/AAAAAAAAPQA/in9wGV1MqpI4S6JcSmha-8UO_ZRTwIxSQCLcBGAsYHQ/s1600/GDev-Badge-Adventures-in-Kotlin%25402x%2B%25281%2529.png\" imageanchor=\" imageanchor=\" 1\"><img id=\"flexImg\" border=\"0\" src=\"https://1.bp.blogspot.com/-EDmBvK7Qico/Xw93LA6NWyI/AAAAAAAAPQA/in9wGV1MqpI4S6JcSmha-8UO_ZRTwIxSQCLcBGAsYHQ/s1600/GDev-Badge-Adventures-in-Kotlin%25402x%2B%25281%2529.png\" imageanchor=\"360\" data-original-height=\"720\" alt=\"Text recognition + Language ID + Translate gif\"></a> \n </div> \n <p id=\"imgCaption\"> Badges you can earn </p> \n <p> The course is free for anyone to take. Basic computer literacy and basic math skills are recommended prerequisites. Unit 1 of the course is available today, with more units being released as they become available. If you’ve never built an app before but want to learn how, check out the <a href=\"http://g.co/android/basics\">Android Basics in Kotlin</a> course. </p> \n <p> If you already have programming experience, check out the other free training courses we offer in Kotlin: </p> \n <ul> \n  <li><a href=\"https://developer.android.com/courses/kotlin-bootcamp/overview\">Kotlin Bootcamp for Programmers</a> </li>\n  <li><a href=\"https://developer.android.com/courses/kotlin-android-fundamentals/overview\">Android Kotlin Fundamentals</a> </li>\n  <li><a href=\"https://developer.android.com/courses/kotlin-android-advanced/overview\">Advanced Android in Kotlin</a> </li> \n </ul> \n <p> We can’t wait to see what you build! </p> \n <p> <em> <small> *from US tech job postings on Indeed.com</small> </em> </p>\n <div class=\"feedflare\"> \n  <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=pFFLyW6Oz5c:HKBcteu8yMY:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n  <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=pFFLyW6Oz5c:HKBcteu8yMY:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=pFFLyW6Oz5c:HKBcteu8yMY:-BTjWOF_DHI\" border=\"0\"></a> \n </div>\n <img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/pFFLyW6Oz5c\" height=\"1\" width=\"1\" alt=\"\">\n</img“imgfull”style=\"display:none\">","descriptionType":"html","publishedDate":"Thu, 16 Jul 2020 13:00:00 +0000","feedId":7,"bgimg":"https://1.bp.blogspot.com/-i8np-BrbX3A/Xw9zh1xDXMI/AAAAAAAAPPU/tjMtRPmYyVwCtxYyASUulsGICoJuzpKuQCLcBGAsYHQ/s1600/BirthdayCardApp_framed.png","linkMd5":"9fb335443d34e809157d9310d1cf47fd","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn10@2020_5/2020-07-25/1595694868401_943cd8e7970d22be.webp","author":"Android Developers","articleImgCdnMap":{"https://1.bp.blogspot.com/-i8np-BrbX3A/Xw9zh1xDXMI/AAAAAAAAPPU/tjMtRPmYyVwCtxYyASUulsGICoJuzpKuQCLcBGAsYHQ/s1600/BirthdayCardApp_framed.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn10@2020_5/2020-07-25/1595694868401_943cd8e7970d22be.webp","https://3.bp.blogspot.com/-4ya4NMqA6GU/Xw90F5KcyWI/AAAAAAAAPPc/G5C37EIWU6I8PsPA2WT1_fo3PNTy7ZNSQCLcBGAsYHQ/s1600/DiceRollerApp_framed.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn94@2020_4/2020-07-25/1595694874577_dda5a512c30165d5.webp","https://3.bp.blogspot.com/-L6PH6lZ9IC8/Xw92SPtMJTI/AAAAAAAAPPs/KhcFNLEYBPIAQf52UD5M6B5MAQzzP_IfQCLcBGAsYHQ/s1600/GDev-Badge-Birthday-Card-App%25402x%2B%25281%2529.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn8@2020_4/2020-07-25/1595694873862_d72bfb370717f4d9.webp","https://1.bp.blogspot.com/-EDmBvK7Qico/Xw93LA6NWyI/AAAAAAAAPQA/in9wGV1MqpI4S6JcSmha-8UO_ZRTwIxSQCLcBGAsYHQ/s1600/GDev-Badge-Adventures-in-Kotlin%25402x%2B%25281%2529.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn46@2020_3/2020-07-25/1595694874306_7850fcbc5fecc95f.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=pFFLyW6Oz5c:HKBcteu8yMY:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn46@2020_5/2020-07-25/1595694871721_a95cf07cf84b6c88.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/pFFLyW6Oz5c":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn98@2020_5/2020-07-25/1595694873981_15af01447bc19d16.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":" 11 Weeks of Android: Privacy and Security","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/dKk6WySum04/11-weeks-of-android-privacy-and-security.html","description":"<img style=\"display:none\" src=\"https://2.bp.blogspot.com/-jmZyD9b6o-M/XwPZSlwx-NI/AAAAAAAAPL8/j3M41G7vly4GgIDjzQlmQxpi8zX1NBPqQCLcBGAsYHQ/s1600/trustandsafety-1.png\"> \n<div style=\"line-height:1;\"> \n <p><em>Posted by:<br>Charmaine D’Silva, Product Lead, Android Privacy and Framework<br>Narayan Kamath, Engineering Lead, Android Privacy and Framework<br>Stephan Somogyi, Product Lead, Android Security<br>Sudhi Herle, Engineering Lead, Android Security</em></p>\n <p> </p>\n</div> \n<p> <em>This blog post is part of a weekly series for <a href=\"https://twitter.com/search?q=%2311WeeksOfAndroid&amp;src=typed_query\">#11WeeksOfAndroid</a>. For each <a href=\"https://twitter.com/search?q=%2311WeeksOfAndroid&amp;src=typed_query\">#11WeeksOfAndroid</a>, we’re diving into a key area so you don’t miss anything. This week, we spotlighted <strong>Privacy and Security</strong>; here’s a look at what you should know.</em> </p> \n<a href=\"https://2.bp.blogspot.com/-jmZyD9b6o-M/XwPZSlwx-NI/AAAAAAAAPL8/j3M41G7vly4GgIDjzQlmQxpi8zX1NBPqQCLcBGAsYHQ/s1600/trustandsafety-1.png\" imageanchor=\"1\"><img id=\"imgHalf\" style=\"width:100%;\" border=\"0\" src=\"https://2.bp.blogspot.com/-jmZyD9b6o-M/XwPZSlwx-NI/AAAAAAAAPL8/j3M41G7vly4GgIDjzQlmQxpi8zX1NBPqQCLcBGAsYHQ/s1600/trustandsafety-1.png\" data-original-width=\"1200\" data-original-height=\"675\" alt=\"mobile security illustration\"></a> \n<p> Privacy and security is core to how we design Android, and with every new release we increase our investment in this space. Android 11 continues to make important strides in these areas, and this week we’ll be sharing a series of updates and resources about Android privacy and security. But first, let’s take a quick look at some of the most important changes we’ve made in Android 11 to protect user privacy and make the platform more secure. </p> \n<p> As shared in the “<a href=\"https://www.youtube.com/watch?v=5w5h_UdIiqs\">All things privacy in Android 11</a>” video, we’re giving users even more control over sensitive permissions. Throughout the development of this release, we have engaged deeply and frequently with our developer community to design these features in a balanced way - amplifying user privacy while minimizing developer impact. Let’s go over some of these features: </p> \n<p> <strong>One-time permission</strong>: In Android 10, we introduced a granular location permission that allows users to limit access to location only when an app is in use (aka foreground only). When presented with the new runtime permissions options, users choose foreground only location more than 50% of the time. This demonstrated to us that users really wanted finer controls for permissions. So in Android 11, we’ve introduced <a href=\"https://developer.android.com/preview/privacy/permissions#one-time\">one time permissions</a> that let users give an app access to the device microphone, camera, or location, just that one time. As an app developer, there are no changes that you need to make to your app for it to work with one time permissions, and the app can request permissions again the next time the app is used. Learn more about building privacy-friendly apps with these new changes <a href=\"https://youtu.be/MXlVj-EYgIQ\">in this video</a>. </p> \n<p> <strong>Background location:</strong> In Android 10 we added a background location usage reminder so users can see when apps are accessing device location in the background. Users who interacted with the reminder either downgraded or denied the location permission over 75% of the time. Many apps that requested background location could actually provide the same user experience by only accessing location while the app is visible to the user. </p> \n<p> In Android 11, background location will require additional steps from the user beyond granting a runtime prompt. If your app needs background location, the system will ensure that the app first asks for foreground location. The app can then broaden its access to background location through a separate permission request, which will cause the system to take the user to Settings in order to complete the permission grant. </p> \n<p> In February, we <a href=\"https://support.google.com/googleplay/android-developer/answer/9799150\">announced</a> that Google Play developers will need to get approval to access background location in their app to prevent misuse. We're giving developers more time to make changes and won't be enforcing the policy for existing apps until 2021. Check out this helpful video <a href=\"https://www.youtube.com/watch?v=xTVeFJZQ28c&amp;feature=youtu.be\">to find possible background location usage in your code</a>. </p> \n<p> <strong>Permissions auto-reset: </strong>Most users tend to download and install over 60 apps on their device but interact with only a third of these apps on a regular basis. If users haven’t used an app that targets Android 11 for an extended period of time, the system will “<a href=\"https://developer.android.com/preview/privacy/permissions#auto-reset\">auto-reset</a>” all of the granted runtime permissions associated with the app and notify the user. The app can request the permissions again the next time the app is used. If you have an app that has a legitimate need to retain permissions, you can prompt users to turn this feature OFF for your app in Settings. </p> \n<p> <strong>Data access auditing APIs: </strong>Android encourages developers to limit their access to sensitive data, even if they have been granted permission to do so. In Android 11, developers will have access to <a href=\"https://developer.android.com/preview/privacy/data-access-auditing\">new APIs</a> that will give them more transparency into their app’s usage of private and protected data. The APIs will enable apps to track when the system records the app’s access to private user data. Learn more about new <a href=\"https://medium.com/androiddevelopers/new-android-11-tools-to-make-apps-more-private-and-stable-c9dcea0af415\">tools in Android 11</a> to make your apps more private and stable. </p> \n<p> <strong>Scoped Storage: </strong>In Android 10, we introduced <a href=\"https://developer.android.com/training/data-storage#scoped-storage\">scoped storage</a> which provides a filtered view into external storage, giving access to app-specific files and media collections. This change protects user privacy by limiting broad access to shared storage in many ways including changing the storage permission to only give read access to photos, videos and music and improving app storage attribution. Since Android 10, we’ve incorporated developer feedback and made many improvements to help developers adopt scoped storage, including: updated permission UI to enhance user experience, direct file path access to media to improve compatibility with existing libraries, updated APIs for modifying media, <a href=\"https://developer.android.com/preview/privacy/storage#all-files-access\">Manage External Storage</a> permission to enable select use cases that need broad files access, and protected external app directories. In Android 11, scoped storage will be mandatory for all apps that target API level 30. Many developers, like <a href=\"https://android-developers.googleblog.com/2020/07/bringing-modern-storage-to-vibers-users.html\">Viber</a>, have made progress to adopt the new storage paradigm. Refer to this <a href=\"https://medium.com/androiddevelopers/android-11-storage-faq-78cefea52b7c\">FAQ</a> for common implementation questions. Learn more in this <a href=\"https://youtu.be/RjyYCUW-9tY\">video</a> and check out the <a href=\"https://developer.android.com/preview/privacy/storage\">developer documentation</a> for further details. </p> \n<p> <strong>Google Play system updates: </strong>Google Play system updates were introduced with Android 10 as part of <a href=\"https://android-developers.googleblog.com/2019/05/fresher-os-with-projects-treble-and-mainline.html\">Project Mainline</a>. Their main benefit is to increase the modularity and granularity of platform subsystems within Android so we can update core OS components without needing a full OTA update from your phone manufacturer. Earlier this year, thanks to Project Mainline, we were able to quickly fix a critical vulnerability in the media decoding subsystem. Android 11 adds new modules, and maintains the security properties of existing ones. For example, Conscrypt, which provides cryptographic primitives, maintained its FIPS validation in Android 11 as well. </p> \n<p> <strong>BiometricPrompt API:</strong> Developers can now use the <a href=\"https://developer.android.com/preview/features#biometric-auth\">BiometricPrompt API</a> to specify the biometric authenticator strength required by their app to unlock or access sensitive parts of the app. We are planning to add this to the <a href=\"https://developer.android.com/jetpack/androidx/releases/biometric\">Jetpack Biometric library</a> to allow for backward compatibility and will share further updates on this work as it progresses. </p> \n<p> <strong>Identity Credential API: </strong>This will unlock new use cases such as mobile drivers licences, National ID, and Digital ID. It’s being built by our security team to ensure this information is stored safely, using security hardware to secure and control access to the data, in a way that <a href=\"https://www.brookings.edu/techstream/privacy-preserving-credentials-for-smartphones-are-coming/\">enhances user privacy</a> as compared to traditional physical documents. We’re working with various government agencies and industry partners to make sure that Android 11 is ready for such digital-first identity experiences. </p> \n<p> Thank you for your flexibility and feedback as we continue to build an increasingly more private and secure platform. You can learn about more features in the <a href=\"https://developer.android.com/preview/\">Android 11 Beta developer site</a>. You can also learn about general best practices related to <a href=\"https://developer.android.com/privacy/best-practices\">privacy</a> and <a href=\"https://developer.android.com/topic/security/best-practices\">security</a>. </p> \n<p> Please follow Android Developers on <a href=\"https://twitter.com/androiddev\">Twitter</a> and <a href=\"https://www.youtube.com/user/androiddevelopers\">Youtube</a> to catch helpful content and materials in this area all this week. </p> \n<p> <strong>Resources</strong> </p> \n<p> <em>You can find the entire playlist of #11WeeksOfAndroid video content <a href=\"https://www.youtube.com/user/androiddevelopers\">here</a>, and learn more about each week <a href=\"http://d.android.com/android11\">here</a>. We’ll continue to spotlight new areas each week, so <a href=\"https://android-developers.googleblog.com/\">keep an eye out</a> and follow us on <a href=\"https://twitter.com/androiddev\">Twitter</a> and <a href=\"https://www.youtube.com/user/androiddevelopers\">YouTube</a>. Thanks so much for letting us be a part of this experience with you! </em> </p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=dKk6WySum04:iiRGA_bHqqY:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=dKk6WySum04:iiRGA_bHqqY:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=dKk6WySum04:iiRGA_bHqqY:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/dKk6WySum04\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Mon, 29 Jun 2020 17:00:00 +0000","feedId":7,"bgimg":"https://2.bp.blogspot.com/-jmZyD9b6o-M/XwPZSlwx-NI/AAAAAAAAPL8/j3M41G7vly4GgIDjzQlmQxpi8zX1NBPqQCLcBGAsYHQ/s1600/trustandsafety-1.png","linkMd5":"15ef32c3ef0250c596b0b24796cc2d64","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn94@2020_3/2020-07-25/1595694868109_7ea465a870843e1a.webp","author":"Android Developers","articleImgCdnMap":{"https://2.bp.blogspot.com/-jmZyD9b6o-M/XwPZSlwx-NI/AAAAAAAAPL8/j3M41G7vly4GgIDjzQlmQxpi8zX1NBPqQCLcBGAsYHQ/s1600/trustandsafety-1.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn94@2020_3/2020-07-25/1595694868109_7ea465a870843e1a.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=dKk6WySum04:iiRGA_bHqqY:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn58@2020_3/2020-07-25/1595694874106_fd7151bd5b9d31f5.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/dKk6WySum04":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn66@2020_3/2020-07-25/1595694875018_07fd1ad38598cca6.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"Read Along: Grow child literacy with on-device ML design insights","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/kg_NPoZM2A8/on-device-ML-design-insights.html","description":"<img style=\"display:none\" src=\"https://3.bp.blogspot.com/-Yw2yptfJ5qM/XvO4Fd8NPZI/AAAAAAAAJCY/Q7PnMRUJgLwXd4bWRu9LlseJS7tDYaZhQCLcBGAsYHQ/s1600/maxresdefault.jpg\"> \n<p><em>Posted by <a href=\"https://twitter.com/dqpdang?lang=en\">Di Dang</a>, Design Advocate</em></p>\n<p> </p>\n<p> From our Machine Learning-themed week together, we’ve delved into an <a href=\"https://codelabs.developers.google.com/codelabs/mlkit-android-translate/#0\">ML Kit x CameraX Codelab</a>, and we learned how to <a href=\"https://android-developers.googleblog.com/2020/06/tools-for-custom-ML-models.html\">train your own custom models and integrate them in your Android app</a>. In addition to the technical considerations that go into using ML, it’s important that we design our ML-based apps in a way that enables our users to feel in control of the ML technology, and not the other way around. To help product creators understand some best practices for ML product decisions, the <a href=\"http://pair.withgoogle.com\">PAIR team</a> published the <a href=\"http://pair.withgoogle.com/guidebook\">People + AI Guidebook</a> at Google I/O last year. Let’s take a look at some ML design considerations you can apply in your Android apps by learning from the example of <a href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.seekh\">Read Along</a>. </p> \n<br> \n<iframe width=\"560\" id=\"imgFull\" height=\"315\" src=\"https://www.youtube.com/embed/fllbN6ZixnE\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> \n<br>\n<br> \n<p> Google recently launched Read Along, an Android app that uses on-device ML and voice UI to help children learn to read anytime, anywhere, using just their voice. According to the <a href=\"https://sustainabledevelopment.un.org/sdg4\">UN Division of Sustainable Development Goals</a>, more than 50% of children worldwide are not achieving minimum proficiency in reading. First launched in India as “Bolo”, the “Read Along” app is now available globally. We recently went behind the scenes with the Read Along team <a href=\"https://www.youtube.com/watch?v=fllbN6ZixnE&amp;feature=youtu.be\">in this episode</a> of <a href=\"http://yt.be/centered\">Centered</a>, to learn how they made an ML- and voice-based app to improve child literacy. </p> \n<center>\n <a href=\"https://twitter.com/sundarpichai/status/1258525625796554752\" imageanchor=\"1\"><img border=\"0\" src=\"https://1.bp.blogspot.com/-EtQWilonX7Y/XvTQMUYxs2I/AAAAAAAAPJU/diou5DuMw74nlRw17t2vL8F815eOFb1EwCLcBGAsYHQ/s1600/readalong.png\" data-original-width=\"422\" data-original-height=\"500\"></a>\n</center> \n<h2>Why Machine Learning and Voice UI?</h2> Since using ML can be time- and cost-intensive, we need to \n<a href=\"https://pair.withgoogle.com/chapter/user-needs/#section1\">find the intersection of ML strengths and user needs</a>. To learn to read, children need time on task and one-on-one attention, which is challenging for areas where there is a lack of access to teachers or educational materials. “In many parts of the world, there are only so many schools that can be built, only so many teachers can be trained. So first and foremost, it's a scale problem,” said Nitin Kashyap, Read Along’s product manager. This creates a unique opportunity for the use of ML—to provide real-time reading feedback at scale, Read Along utilizes the Google Assistant’s text-to-speech and speech recognition capabilities. The Read Along team also added abilities on edge to preserve children’s privacy. The voice data is analyzed on-device without being sent to any Google servers, enabling children to use Read Along offline as well. \n<center>\n <a href=\"https://1.bp.blogspot.com/-SaqWJ1SX4Xc/XvO2k7UR98I/AAAAAAAAJCI/UIAXl3rJCdw8UH2AGIuhft_RnUS2RcRLACLcBGAsYHQ/s1600/CEN010-11%2B%25281%2529.gif\" imageanchor=\"1\"><img border=\"0\" style=\"width:600px\" src=\"https://1.bp.blogspot.com/-SaqWJ1SX4Xc/XvO2k7UR98I/AAAAAAAAJCI/UIAXl3rJCdw8UH2AGIuhft_RnUS2RcRLACLcBGAsYHQ/s1600/CEN010-11%2B%25281%2529.gif\" data-original-width=\"1280\" data-original-height=\"720\" alt=\"Child using app demo\"></a>\n</center> \n<h2>False positives vs. false negatives</h2> \n<p> Since ML-based systems are inherently probabilistic, they can generate “wrong” predictions in the form of false positives and false negatives. As we create ML-based applications, we need to <a href=\"https://pair.withgoogle.com/chapter/user-needs/#section3\">decide which behavior to optimize for</a>. Within the Read Along experience, a false positive denotes that the child has misread a word, though the system fails to recognize this and does not provide corrective feedback. On the other hand, an example of a false negative is when a child reads a word correctly, but Read Along predicts the word was read incorrectly, and thus prompts the child to try again. “We spent a little time to understand what really happens when the child gets false positive and false negative, and what impact does it have on the psychology, and also on the reading experience,“ said Eshita Priyadarshini, Read Along’s UX Research Lead. “When the child is reading, we don't really tell him, \"Oh, you got that word wrong. Why don't you read it again?\" By unpacking the impact of false positives and false negatives on the user, the Read Along team decided to <a href=\"https://pair.withgoogle.com/chapter/glossary/#recall\">optimize for recall</a>, thereby increasing the number of false positives, which results in a user experience that feels more encouraging for children. </p> \n<center>\n <a href=\"https://2.bp.blogspot.com/-IZXx7o9IGvg/XvO3dmO-riI/AAAAAAAAJCQ/VYxg_Y_W_kcB6xiIDb6u7llN-WxSTOL4gCLcBGAsYHQ/s1600/Screen%2BShot%2B2020-06-24%2Bat%2B1.28.26%2BPM.png\" imageanchor=\"1\"><img border=\"0\" style=\"width:600px\" src=\"https://2.bp.blogspot.com/-IZXx7o9IGvg/XvO3dmO-riI/AAAAAAAAJCQ/VYxg_Y_W_kcB6xiIDb6u7llN-WxSTOL4gCLcBGAsYHQ/s1600/Screen%2BShot%2B2020-06-24%2Bat%2B1.28.26%2BPM.png\" data-original-width=\"1250\" data-original-height=\"795\" alt=\"Screenshot of People + AI Guidebook\"></a>\n</center> \n<p> To learn more about how the Read Along team made ML product decisions, check out <a href=\"https://www.youtube.com/watch?v=fllbN6ZixnE&amp;list=PLJ21zHI2TNh-pgTlTpaW9kbnqAAVJgB0R&amp;index=2&amp;t=0s\">the full Centered episode</a>. For more guidance on how your cross-functional team (spanning UX, PM, and engineering) can come together to design ML-based applications, check out the <a href=\"http://pair.withgoogle.com/guidebook\">People + AI Guidebook</a>. </p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=kg_NPoZM2A8:GhO_UTj3l2s:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=kg_NPoZM2A8:GhO_UTj3l2s:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=kg_NPoZM2A8:GhO_UTj3l2s:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/kg_NPoZM2A8\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Thu, 25 Jun 2020 17:02:00 +0000","feedId":7,"bgimg":"https://3.bp.blogspot.com/-Yw2yptfJ5qM/XvO4Fd8NPZI/AAAAAAAAJCY/Q7PnMRUJgLwXd4bWRu9LlseJS7tDYaZhQCLcBGAsYHQ/s1600/maxresdefault.jpg","linkMd5":"5ff40fa4112c7439f85c123c587b94ed","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn14@2020_3/2020-07-25/1595694869189_f15dcaa7a2c331a2.webp","author":"Android Developers","articleImgCdnMap":{"https://3.bp.blogspot.com/-Yw2yptfJ5qM/XvO4Fd8NPZI/AAAAAAAAJCY/Q7PnMRUJgLwXd4bWRu9LlseJS7tDYaZhQCLcBGAsYHQ/s1600/maxresdefault.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn14@2020_3/2020-07-25/1595694869189_f15dcaa7a2c331a2.webp","https://1.bp.blogspot.com/-EtQWilonX7Y/XvTQMUYxs2I/AAAAAAAAPJU/diou5DuMw74nlRw17t2vL8F815eOFb1EwCLcBGAsYHQ/s1600/readalong.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn42@2020_1/2020-07-25/1595694872269_5075bad75a123f13.webp","https://1.bp.blogspot.com/-SaqWJ1SX4Xc/XvO2k7UR98I/AAAAAAAAJCI/UIAXl3rJCdw8UH2AGIuhft_RnUS2RcRLACLcBGAsYHQ/s1600/CEN010-11%2B%25281%2529.gif":null,"https://2.bp.blogspot.com/-IZXx7o9IGvg/XvO3dmO-riI/AAAAAAAAJCQ/VYxg_Y_W_kcB6xiIDb6u7llN-WxSTOL4gCLcBGAsYHQ/s1600/Screen%2BShot%2B2020-06-24%2Bat%2B1.28.26%2BPM.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn2@2020_6/2020-07-25/1595694874068_9fbc5af67b006f05.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=kg_NPoZM2A8:GhO_UTj3l2s:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn10@2020_4/2020-07-25/1595694871909_d030df33e46d94e1.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/kg_NPoZM2A8":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn50@2020_5/2020-07-25/1595694874784_5c42b5c7303aa863.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"11 Weeks of Android: Jetpack","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/BT1CjuA_DHg/11-weeks-of-android-jetpack.html","description":"<img style=\"display:none\" src=\"https://2.bp.blogspot.com/-bVoOhOXrtJc/XxoUMnqaeBI/AAAAAAAAPUU/82DBnqY5nkQ_HblLRelQw_ZzjLjCUPW0wCLcBGAsYHQ/s1600/week6updatedbanner.png\"> \n<p><em>Posted by Diana Wong, Product Manager, Android Jetpack</em></p>\n<p> <a href=\"https://2.bp.blogspot.com/-bVoOhOXrtJc/XxoUMnqaeBI/AAAAAAAAPUU/82DBnqY5nkQ_HblLRelQw_ZzjLjCUPW0wCLcBGAsYHQ/s1600/week6updatedbanner.png\" imageanchor=\"1\"><img border=\"0\" style=\"width:100%\" src=\"https://2.bp.blogspot.com/-bVoOhOXrtJc/XxoUMnqaeBI/AAAAAAAAPUU/82DBnqY5nkQ_HblLRelQw_ZzjLjCUPW0wCLcBGAsYHQ/s1600/week6updatedbanner.png\" data-original-width=\"1600\" data-original-height=\"900\" alt=\"Android Jetpack Week 6 banner\"></a> </p>\n<p> <em>This blog post is part of a weekly series for <a href=\"https://twitter.com/search?q=%2311WeeksOfAndroid&amp;src=typed_query\">#11WeeksOfAndroid</a>. For each of the <a href=\"https://developer.android.com/11weeksofandroid\">#11WeeksOfAndroid</a>, we’re diving into a key area so you don’t miss anything.This week, we spotlighted <strong>Jetpack</strong>; here’s a look at what you should know.</em> </p> \n<h2>The big news</h2> \n<p> In 2018, we launched <a href=\"https://developer.android.com/jetpack\">Android Jetpack</a> as a suite of libraries to help developers follow best practices, reduce boilerplate code, and write code that works consistently across Android versions and devices. We are excited about the growth we’ve seen and the incredible feedback that developers like you have shared with us. 47% of the top 1000 apps use 2 or more Jetpack libraries, not including core libraries like AppCompat or Lifecycle. Our work over the past year has been about making the basics easy for Android developers, so that you can focus on the code you care about. We have released many updates to our existing libraries as well as new libraries to help make building high-quality apps easier. </p> \n<h2>What to watch</h2> \n<p> We have also been busy pushing out many updates over the past year! </p> \n<p> For an overall look at what’s new in Jetpack, be sure to check out our talk from #Android11 Beta launch: </p> \n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/R3caBPj-6Sg\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> \n<p> It’s a quick fly-by introducing many of the updates to our libraries, with pointers on how to get started. </p> \n<p> This week, we’ve also done deep dives into major releases like Hilt, including <a href=\"https://medium.com/androiddevelopers/hilt-and-dagger-annotations-cheat-sheet-9adea070e495\">cheat sheets</a> to help you get started, and how we migrated our own samples to use Hilt for dependency injection. Less boilerplate = more fun. </p> \n<center>\n <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/B56oV3IHMxg\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</center> \n<p> Paging 3.0 is one of our first libraries written Kotlin-first and based on coroutines. The Paging library adds the features you asked for like better error handling, easier list transformations like map or filter, and support for common features like list separators, headers, and footers. We added RxJava, LiveData and ListenableFutures support and backwards compatibility with Paging 2, so it’s easier to migrate. </p> \n<center>\n <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/1cwqGOku2a4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</center> \n<p> Using the Camera in your app? <a href=\"https://www.youtube.com/watch?v=QYkTXJ2TuiA&amp;feature=emb_title\">CameraX</a> is in Beta and helps developers manage edge cases across different devices and OS versions, so that you don’t have to. </p> \n<center>\n <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/LUw_LpTMTto\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</center> \n<p> This year, we've made several major improvements with the release of Navigation 2.3, which allows you to navigate between different screens of your app with ease while also allowing you to follow Android UI principles. Let us <i>navigate</i> you through them all here:</p> \n<center>\n <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/09qjn706ITA\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</center> \n<h2>Spotlight on <i>Permissions</i></h2> \n<p> In Android 11, we continued our work to give users even more control over sensitive permissions. At the same time, it's very important to us that we make it as easy as possible for you as developers to build for Android. With the changes in privacy over the past several releases, Android Jetpack is making it easier for your app to work with Permissions. Now there are type-safe contracts for common intents and more via new <code><a href=\"https://developer.android.com/training/basics/intents/result\">ActivityResult</a></code> APIs. These changes simplify how you request permissions, and we’ll continue to work on making permissions easier in the future. Find out more in this post.</p> \n<h2>Learning path</h2> \n<p> Take a look at our new <a href=\"https://developer.android.com/courses/pathways/android-week6-jetpack?linkId=94749714\">Learning pathway</a> for an easy way to go through all the highlights from this week. It’s an ordered tutorial which guides you through our new content, culminating in a quiz. Bonus: You earn a bright and shiny Jetpack badge to be saved to your <a href=\"http://google.dev/u/me\">Google Developer Profile</a>. In addition to the learning pathway, we’ve also got a new <a href=\"https://developer.android.com/jetpack/androidx/explorer\">library explorer</a> to make it simple to find more about Jetpack libraries you might be looking for and their latest updates. </p> \n<h2>Key takeaways</h2> \n<p>Best practices are baked into Jetpack libraries, giving opinionated guidance to make it easier for you to build a higher-quality Android app. We’ve released new features to Navigation and Workmanager, updates to increase the stability of CameraX, added robustness for Biometrics, and more. We’ve also launched new libraries, like our collaboration with Dagger for Hilt and a new library to help improve app startup. Your feedback is important to us; so give these libraries a shot, tell us what you think, and help us improve them! </p> \n<h2>Resources</h2> \n<p> <em>You can find the entire playlist of #11WeeksOfAndroid video content <a href=\"https://www.youtube.com/user/androiddevelopers\">here</a>, and learn more about each week <a href=\"http://d.android.com/android11\">here</a>. We’ll continue to spotlight new areas each week, so <a href=\"https://android-developers.googleblog.com/\">keep an eye out</a> and follow us on <a href=\"https://twitter.com/androiddev\">Twitter</a> and <a href=\"https://www.youtube.com/user/androiddevelopers\">YouTube</a>. Thanks so much for letting us be a part of this experience with you! </em> </p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=BT1CjuA_DHg:3sM25AXqfe4:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=BT1CjuA_DHg:3sM25AXqfe4:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=BT1CjuA_DHg:3sM25AXqfe4:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/BT1CjuA_DHg\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Fri, 24 Jul 2020 17:01:00 +0000","feedId":7,"bgimg":"https://2.bp.blogspot.com/-bVoOhOXrtJc/XxoUMnqaeBI/AAAAAAAAPUU/82DBnqY5nkQ_HblLRelQw_ZzjLjCUPW0wCLcBGAsYHQ/s1600/week6updatedbanner.png","linkMd5":"b616576e5266179882d9df65aaeecd0a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn6@2020_1/2020-07-25/1595694869186_f07110add11035e8.webp","author":"Android Developers","articleImgCdnMap":{"https://2.bp.blogspot.com/-bVoOhOXrtJc/XxoUMnqaeBI/AAAAAAAAPUU/82DBnqY5nkQ_HblLRelQw_ZzjLjCUPW0wCLcBGAsYHQ/s1600/week6updatedbanner.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn6@2020_1/2020-07-25/1595694869186_f07110add11035e8.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=BT1CjuA_DHg:3sM25AXqfe4:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn74@2020_1/2020-07-25/1595694871708_f5c295cda83b6bbe.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/BT1CjuA_DHg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn10@2020_1/2020-07-25/1595694874417_850626ed662e4336.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"11 Weeks of Android: Languages","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/TAVenccN-sA/11-weeks-of-android-languages.html","description":"<img style=\"display:none\" src=\"https://2.bp.blogspot.com/-u-Ak7QxkniQ/XxEA6qopFCI/AAAAAAAAPQY/7KRjRBKd6PguitA7i4PvGnaC8cvLANXcQCLcBGAsYHQ/s1600/Week5.png\"> \n<p><em>Posted by <a href=\"https://twitter.com/davidjwiner?lang=en\">David Winer</a>, Product Manager</em></p>\n<p> <a href=\"https://2.bp.blogspot.com/-u-Ak7QxkniQ/XxEA6qopFCI/AAAAAAAAPQY/7KRjRBKd6PguitA7i4PvGnaC8cvLANXcQCLcBGAsYHQ/s1600/Week5.png\" imageanchor=\"1\"><img id=\"imgFull\" style=\"width:100%;\" border=\"0\" src=\"https://2.bp.blogspot.com/-u-Ak7QxkniQ/XxEA6qopFCI/AAAAAAAAPQY/7KRjRBKd6PguitA7i4PvGnaC8cvLANXcQCLcBGAsYHQ/s1600/Week5.png\" data-original-width=\"1600\" data-original-height=\"901\" alt=\"11 Weeks of Android, Week 5: Languages\"></a> </p>\n<p> <em>This blog post is part of a weekly series for <a href=\"http://d.android.com/11weeksofandroid\">#11WeeksOfAndroid</a>. Each week we’re diving into a key area of Android so you don’t miss anything. This week, we spotlighted <strong>languages</strong>; here’s a look at what you should know.</em> </p> \n<p> Modern Android development starts with outstanding language support. Together, Kotlin, the Java programming language, and C++ form the foundation for Android’s APIs and the tools you use every day for app development. This week we dove into all of the latest news across Android’s three core languages: from Kotlin coroutines to Android 11’s new Java APIs to better tools for native development, there’s a lot packed into the latest release. </p> \n<iframe id=\"imgFull\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/AgPj1Q6D--c\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> \n<h2>Kotlin and coroutines</h2> \n<p> Kotlin is at the core of Android’s modern, opinionated APIs. We hear from Android developers around the world that they love Kotlin for how expressive it is, how it helps you write higher quality apps, and how easy it is to start using in your existing Java codebase. More than 70% of the top 1000 apps on the Play Store now use Kotlin, and <a href=\"https://www.zdnet.com/article/programming-languages-javascript-now-used-by-12-million-developers-but-kotlin-rises-fastest/\">SlashData</a><sup>TM</sup> announced earlier this year that Kotlin has been the fastest growing language community in percentage terms over the past two years. With the Android 11 beta, we decided to further embrace Kotlin by officially recommending coroutines for asynchronous work on Android. </p> \n<iframe id=\"imgFull\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/6manrgTPzyA\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> \n<p> Coroutines make it easy to write, read, and understand async code. The coroutines library is stable and already has deep integration with many of the Jetpack libraries you may be using, including <a href=\"https://developer.android.com/training/data-storage/room/referencing-data\">Room</a>, <a href=\"https://medium.com/androiddevelopers/livedata-with-coroutines-and-flow-part-i-reactive-uis-b20f676d25d7\">LiveData</a>, and <a href=\"https://developer.android.com/topic/libraries/architecture/workmanager\">WorkManager</a>. If you’re new to coroutines, check out <a href=\"https://www.youtube.com/watch?v=6manrgTPzyA\">Android ❤️ Coroutines: How to Manage Async Tasks in Kotlin</a>, the latest <a href=\"https://developer.android.com/courses/pathways/android-coroutines\">coroutines learning pathway</a>, and our new <a href=\"https://developer.android.com/kotlin/coroutines\">coroutines developer guide</a>. </p> \n<h2>Getting started with Kotlin</h2> \n<p> From Kotlin-first libraries in Android Jetpack to deep integration with the tools in Android Studio, Android is deeply committed to Kotlin — and there’s never been a better time to start using it. We’ve heard from many of you, though, that convincing your team to adopt Kotlin is not always easy. Even though Kotlin is 100% interoperable with the Java programming language, your teammates might have concerns. Is it worth spending the time learning a new language? How should you prioritize Kotlin against our other product and technology priorities? </p> \n<p> This week we released a <a href=\"https://developer.android.com/stories/apps/google-home\">new case study</a> from the Google Home team to help answer some of these questions. Over the course of one year, the Google Home team moved all new feature development to Kotlin and found their null pointer exceptions dropped by 33% during the same period. This is consistent with what we’ve heard from Android teams all over the world — from <a href=\"https://developer.android.com/stories/apps/duolingo-kotlin\">Duolingo</a> to <a href=\"https://www.youtube.com/watch?v=ao9QvtpszOU&amp;vl=en\">Zomato</a> to <a href=\"https://www.youtube.com/watch?v=roSp-SsBPp4\">Cash App</a> — Kotlin is delivering value both in the form of productivity and higher app quality for teams large and small. For all our latest case studies and data on Kotlin, check out our new <a href=\"http://d.android.com/kotlin/stories\">Kotlin case studies page</a>. </p> \n<iframe id=\"imgFull\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/oSim9fBFy-E\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> \n<p> For beginners, we announced the launch of our new <a href=\"https://developer.android.com/courses/topics/android-basics-kotlin\">Android Basics in Kotlin</a> course. If you are just learning how to program, Android Basics teaches essential programming concepts like functions and variables and will take you from “Hello World” all the way up through building a whole collection of Android apps in Kotlin. </p> \n<h2>The Java programming language and C++</h2> \n<p> When we announced official support for Kotlin three years ago, we didn’t forget about the large number of Java and C++ Android developers. In the Android 11 release, we sought to keep improving our support for both of these languages. With the Android 11 beta, we upgraded our Java library support with a number of new APIs from OpenJDK 9, 10, and 11. We also unveiled Java library desugaring in Android Studio 4.0, making it easy to use many of these newer Java APIs even on older Android devices — for those of you who have asked for java.time support on older devices, we’ve heard you loud and clear, and it’s arrived. For all the latest information on how to make use of these newer APIs, check out Murat Yener’s talk <a href=\"https://www.youtube.com/watch?v=heCvGfOGH0s&amp;feature=emb_title\">Support for newer Java APIs</a>. With Android 11, we also updated the Android runtime to make app startup even faster with <a href=\"https://medium.com/androiddevelopers/improving-app-startup-with-i-o-prefetching-62fbdb9c9020\">I/O prefetching</a>. </p> \n<iframe id=\"imgFull\" width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/heCvGfOGH0s\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> \n<p> The C++ developer experience continues to get better, too. Android 11 included updates across the native toolchain, including better tools for <a href=\"https://medium.com/androiddevelopers/pgo-for-native-android-applications-1a48a99e95d0\">profile-guided optimization (PGO)</a> and <a href=\"https://android-developers.googleblog.com/2020/02/native-dependencies-in-android-studio-40.html\">improvements to native dependency management</a> in Android Studio 4.0. </p> \n<h2>Ever-improving toolchains</h2> \n<p> Finally, we continue to focus on improvements to the D8 and R8 compilers in Android Studio. Android Studio comes with built-in support for the <a href=\"https://developer.android.com/studio/build/shrink-code\">R8 shrinker</a>, which helps you keep your app’s memory footprint small, leading to higher installs and retention among your users. We also recently added support for shrinking Kotlin libraries and apps that use Kotlin reflection with R8. For more information, check out Mads Ager and Morten Krogh-Jespersen’s latest <a href=\"https://medium.com/androiddevelopers/shrinking-kotlin-libraries-and-applications-using-kotlin-reflection-with-r8-6fe0a0e2d115\">Medium post</a>. </p> \n<h3>Resources</h3> \n<p> <em>You can find the entire playlist of #11WeeksOfAndroid video content <a href=\"https://www.youtube.com/user/androiddevelopers\">here</a>, and learn more about each week <a href=\"http://d.android.com/android11\">here</a>. We’ll continue to spotlight new areas each week, so <a href=\"https://android-developers.googleblog.com/\">keep an eye out</a> and follow us on <a href=\"https://twitter.com/androiddev\">Twitter</a> and <a href=\"https://www.youtube.com/user/androiddevelopers\">YouTube</a>. Thanks so much for letting us be a part of this experience with you! </em> </p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=TAVenccN-sA:OMHIt6RkyU0:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=TAVenccN-sA:OMHIt6RkyU0:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=TAVenccN-sA:OMHIt6RkyU0:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/TAVenccN-sA\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Fri, 17 Jul 2020 21:00:00 +0000","feedId":7,"bgimg":"https://2.bp.blogspot.com/-u-Ak7QxkniQ/XxEA6qopFCI/AAAAAAAAPQY/7KRjRBKd6PguitA7i4PvGnaC8cvLANXcQCLcBGAsYHQ/s1600/Week5.png","linkMd5":"90a5fc922b2a78dcd8185c4583a2d56e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn66@2020_4/2020-07-25/1595694869186_5a35f582171e78b7.webp","author":"Android Developers","articleImgCdnMap":{"https://2.bp.blogspot.com/-u-Ak7QxkniQ/XxEA6qopFCI/AAAAAAAAPQY/7KRjRBKd6PguitA7i4PvGnaC8cvLANXcQCLcBGAsYHQ/s1600/Week5.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn66@2020_4/2020-07-25/1595694869186_5a35f582171e78b7.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=TAVenccN-sA:OMHIt6RkyU0:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn82@2020_6/2020-07-25/1595694874053_bf483f5fed3fddcf.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/TAVenccN-sA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn94@2020_3/2020-07-25/1595694875812_fcc708cd9a0d1abd.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"Improving inter-activity communication with Jetpack ActivityResult","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/nNzLFWeLXNI/jetpack-activityresult.html","description":"<img style=\"display:none\" src=\"https://4.bp.blogspot.com/-3Y_7EfhyYGM/XxjIjIB5RkI/AAAAAAAAPTw/KGx1k9HSbuoKrEMBZMJGaN-bS6rkz-j7gCLcBGAsYHQ/s1600/Activity_Result.png\"> \n<p><em>Posted by <a href=\"https://twitter.com/yrezgui\">Yacine Rezgui</a>, Developer Advocate</em></p> \n<a href=\"https://4.bp.blogspot.com/-3Y_7EfhyYGM/XxjIjIB5RkI/AAAAAAAAPTw/KGx1k9HSbuoKrEMBZMJGaN-bS6rkz-j7gCLcBGAsYHQ/s1600/Activity_Result.png\" imageanchor=\"1\"><img style=\"width:100%\" border=\"0\" src=\"https://4.bp.blogspot.com/-3Y_7EfhyYGM/XxjIjIB5RkI/AAAAAAAAPTw/KGx1k9HSbuoKrEMBZMJGaN-bS6rkz-j7gCLcBGAsYHQ/s1600/Activity_Result.png\" data-original-width=\"1600\" data-original-height=\"480\"></a> \n<p> Whether you're requesting a permission, selecting a file from the system file manager, or expecting data from a 3rd party app, passing data between activities is a core element in inter-process communication on Android. We’ve recently released the new <code>ActivityResult</code> APIs to help handle these activity results. </p> \n<p> Previously, to get results from started activities, apps needed to implement an <code>onActivityResult() </code>method in their activities and fragments, check which <code>requestCode</code> a result is referring to, verify that the <code>requestCode</code> is OK, and finally inspect its result data or extended data. </p> \n<p> This leads to complicated code, and it doesn’t provide a type-safe interface for expected arguments when sending or receiving data from an activity. </p> \n<h2>What are the ActivityResult APIs?</h2> \n<p> The <code><a href=\"https://developer.android.com/reference/kotlin/androidx/activity/result/package-summary\">ActivityResult APIs</a></code> were added to the Jetpack <code><a href=\"https://developer.android.com/jetpack/androidx/releases/activity\">activity</a></code> and <code><a href=\"https://developer.android.com/jetpack/androidx/releases/fragment\">fragment</a></code> libraries, making it easier to get results from activities by providing type-safe contracts. These <a href=\"https://developer.android.com/reference/kotlin/androidx/activity/result/contract/ActivityResultContracts\">contracts</a> define expected input and result types for common actions like taking a picture or requesting a permission, while also providing a way to <a href=\"https://developer.android.com/training/basics/intents/result#custom\">create your own contracts</a>. </p>\n<p> The <code>ActivityResult</code> APIs provide components for registering for an activity result, launching a request, and handling its result once it is returned by the system. You can also receive the activity result in a separate class from where the activity is launched and still rely on the type-safe contracts. </p> \n<h2>How to use it</h2> \n<p> To demonstrate how to use the <code>ActivityResult</code> APIs, let’s go over an example where we’re opening a document. </p> \n<p> First, you need to add the following dependencies to your gradle file: </p> \n<pre class=\"prettyprint\">repositories {\n    google()\n    maven()\n}\n\ndependencies {\n  implementation \"androidx.activity:activity:1.2.0-alpha02\"\n  implementation \"androidx.activity:fragment:1.3.0-alpha02\"\n}</pre> \n<p> You need to register a <a href=\"https://developer.android.com/reference/kotlin/androidx/activity/result/ActivityResultCallback\">callback</a> along with the contract that defines its input and output types. </p> \n<p> In this context, <code><a href=\"https://developer.android.com/reference/kotlin/androidx/activity/result/contract/ActivityResultContracts.GetContent\">GetContent()</a></code> refers to the <code><a href=\"https://developer.android.com/reference/android/content/Intent#ACTION_OPEN_DOCUMENT\">ACTION_GET_DOCUMENT</a></code> intent, and is one of the default contracts already defined in the Activity library. You can find the complete list of contracts <a href=\"https://developer.android.com/reference/kotlin/androidx/activity/result/contract/ActivityResultContracts\">here</a>. </p>\n<pre class=\"prettyprint\">val getContent = registerForActivityResult(GetContent()) { uri: Uri? -&gt;\n    // Handle the returned Uri\n}</pre> \n<p> Now we need to launch our activity using the returned launcher. As you can set a mime type filter when listing the selectable files, <code><a href=\"https://developer.android.com/reference/kotlin/androidx/activity/result/contract/ActivityResultContracts.GetContent\">GetContent.launch()</a></code> will accept a string as a parameter: </p>\n<pre class=\"prettyprint\">val getContent = registerForActivityResult(GetContent()) { uri: Uri? -&gt;\n    // Handle the returned Uri\n}\n\noverride fun onCreate(savedInstanceState: Bundle?) {\n    // ...\n\n    val selectButton = findViewById&lt;Button&gt;(R.id.select_button)\n\n    selectButton.setOnClickListener {\n        // Pass in the mime type you'd like to allow the user to select\n        // as the input\n        getContent.launch(\"image/*\")\n    }\n}</pre> \n<p> Once an image has been selected and you return to your activity, your registered callback will be executed with the expected results.<code> </code>As you saw through the code snippets, ActivityResult brings an easier developer experience when dealing with results from activities. </p> \n<p> Start using <code>Activity 1.2.0-alpha02</code> and <code>Fragment 1.3.0-alpha02</code> for a type-safe way to handle your intent results with the new <code>ActivityResult</code> APIs. </p> \n<p> Let us know what you think and how we can make it better by providing feedback on the <a href=\"https://issuetracker.google.com/issues/new?component=527362&amp;template=1189829\">issue tracker</a>. </p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=nNzLFWeLXNI:bzfk1Ospctc:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=nNzLFWeLXNI:bzfk1Ospctc:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=nNzLFWeLXNI:bzfk1Ospctc:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/nNzLFWeLXNI\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Thu, 23 Jul 2020 20:59:00 +0000","feedId":7,"bgimg":"https://4.bp.blogspot.com/-3Y_7EfhyYGM/XxjIjIB5RkI/AAAAAAAAPTw/KGx1k9HSbuoKrEMBZMJGaN-bS6rkz-j7gCLcBGAsYHQ/s1600/Activity_Result.png","linkMd5":"240953d06471ac49e2bb019445cd4ebf","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn70@2020_4/2020-07-25/1595694868069_6fa2c2f0b56c6bab.webp","author":"Android Developers","articleImgCdnMap":{"https://4.bp.blogspot.com/-3Y_7EfhyYGM/XxjIjIB5RkI/AAAAAAAAPTw/KGx1k9HSbuoKrEMBZMJGaN-bS6rkz-j7gCLcBGAsYHQ/s1600/Activity_Result.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn70@2020_4/2020-07-25/1595694868069_6fa2c2f0b56c6bab.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=nNzLFWeLXNI:bzfk1Ospctc:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn54@2020_5/2020-07-25/1595694875063_4a3ef53f4c7ab509.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/nNzLFWeLXNI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn74@2020_4/2020-07-25/1595694872691_ee0c4a29ca129372.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"Bringing modern storage to Viber’s users","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/3YHvPDPPbF8/bringing-modern-storage-to-vibers-users.html","description":"<img style=\"display:none\" src=\"https://1.bp.blogspot.com/-H3ediXRrVPI/XvvBh3xdc9I/AAAAAAAAPLs/_pizaTLQKvYRTN7fhM0LtvcyWvhHiDOnACLcBGAsYHQ/s1600/viber.png\"> \n<p> <em>This blogpost is a collaboration between Google and Viber. Authored by <a href=\"http://twitter.com/KseniiaS\">Kseniia Shumelchyk</a> from Google and Anton Novikov, Sergey Kozlov from Viber.</em> </p> \n<p> As a messaging app, <a href=\"https://play.google.com/store/apps/details?id=com.viber.voip\">Viber</a> needs to store, process and share a significant amount of data. Viber aims to give its users an easy, fast, reliable and secure communication platform by providing an intuitive interface and operating with files in a privacy-preserving way. We believe the modern scoped storage paradigm provides this foundation for app developers and users. </p> \n<p> <a href=\"https://developer.android.com/training/data-storage#scoped-storage\">Scoped storage</a> was introduced in Android 10 with further improvements in Android 11 to provide better protection to app and user data on a platform level. Due to Viber's complexity, the team opted to incrementally implement the changes that were required to comply with scoped storage. </p> \n<p> In this article, we’ll share how Viber handled the migration to scoped storage, focusing on what they did to optimize working with media files and other data in the app. </p> \n<h2>Managing storage across Android versions </h2> \n<p> Android’s storage model has evolved to adapt to changing privacy considerations, leading to the changes in the storage system APIs. Let’s take a look at key platform changes that affected the legacy Viber implementation. </p> \n<h3><strong>Media directories</strong></h3> \n<p> Scoped storage changes the way that apps store and access files on a device's external storage. Viber needed to evaluate the differences between the existing app's storage model and updated platform guidelines, followed by gradual application changes to work with files in scoped storage. Therefore Viber invoked the <em>requestLegacyExternalStorage</em> flag to <a href=\"https://developer.android.com/training/data-storage/use-cases#opt-out-scoped-storage\">temporarily opt-out of scoped storage</a> on Android 10 until the app was fully compatible. </p> \n<p> In order to adjust their app experience to scoped storage, Viber now contributes public media files to <a href=\"https://developer.android.com/training/data-storage/shared/media\">well-defined media collections</a> using the MediaStore API. This way, the files are accessible in a device gallery, and can be read by other apps with the storage permission. Private media files are stored in the app-specific directory on external storage and are accessed via the internal <a href=\"https://developer.android.com/guide/topics/providers/content-providers\">ContentProvider</a>. </p> \n<h3><strong>Storage permissions</strong></h3> \n<p> The other notable update is related to changes in the <a href=\"https://developer.android.com/training/data-storage/shared/media#storage-permission\">storage permissions model</a>: Apps in scoped storage have unrestricted access to their app-specific directories on external storage and can contribute to well-defined media collections without requesting a runtime permission. This change will help Viber provide more granular control to their users: </p> \n<p> <em>“This addition supports our efforts to provide our users with the best security and privacy solutions we can provide supported by the Android OS, users will benefit from this added security later without needing to opt-in. We also added a new ‘Save to gallery’ option allowing users to choose to make their photos readable by other apps or not. Because chats may contain private images or videos, it’s important to give users the ability to hide these files from the gallery. This change gives users additional control over the content included in their Viber messages.“</em> said Anton Novikov and Sergey Kozlov from Viber. </p> \n<h3><strong>Accessing files outside of app-specific directory</strong></h3> \n<p> Previously, Viber created and consumed files in a custom top level directory and depended on file path access. With scoped storage, saving app files to a top level directory became an anti-pattern, so Viber has <a href=\"https://developer.android.com/preview/privacy/storage#migrate-data-for-scoped-storage\">followed best practices</a> to update their implementation to store media files from the chats only in locations that are accessible in scoped storage. </p> \n<p> However, to reduce the complexity of migration, Viber decided to keep their own top level directory for Android 10 and below, storing only the media files that are <a href=\"https://developer.android.com/reference/android/provider/MediaStore#MEDIA_IGNORE_FILENAME\">not exposed to the device’s Gallery app</a>, while for Android 11 and above this directory is used in read-only mode to provide backward compatibility. </p> \n<p> Another use case that Viber has been refining is sharing files in the chats. The updated storage runtime permission gives read access only to the images, videos and audio files that are available through MediaProvider. Starting from Android 11, the only way for Viber to access non-media files created by other apps is by using the <a href=\"https://developer.android.com/guide/topics/providers/document-provider\">Storage Access Framework</a> document picker, which they had already utilized in a different part of their app. </p> \n<h3><strong>App-specific files within external storage</strong></h3> \n<p> In the scoped storage environment, app-specific directories on external storage are becoming private from other apps. This change has helped Viber leverage its use of external storage for storing private user files: </p> \n<p> <em>”We find change to app-specific directories to be useful, because it will help to ensure that personal chats are protected and backed with platform security.”</em> said Anton Novikov from Viber. <a href=\"https://developer.android.com/training/data-storage/app-specific\">Learn more</a> about how to access app-specific files. </p> \n<h3><strong>Single interface to access storage</strong></h3> \n<p> Because Viber targets a large audience running on Android 4.2 and above, they introduced an abstraction layer that aids them in managing storage access efficiently across all supported Android versions and with their use cases in mind. </p> \n<p> Previously, Viber heavily used File API to access files, including files in legacy storage locations. Further, they stored absolute file paths for entries in the local database to keep the user's conversation history. </p> \n<p> To standardize access to this conversation history and thus ensure that users don’t lose access to their files, Viber replaced absolute file paths with content URIs. In the new implementation, the app is accessing files only via content providers: </p> \n<ul> \n <li>Internal <a href=\"https://developer.android.com/reference/androidx/core/content/FileProvider\">FileProvider</a> for Viber app-specific directories. </li>\n <li>External file providers available in the Android framework, such as <a href=\"https://developer.android.com/reference/android/provider/MediaStore\">MediaStore</a> or <a href=\"https://developer.android.com/guide/topics/providers/document-provider\">Storage Access Framework</a>, or those belong to another app that shares files with Viber through Intent.ACTION_SEND. </li> \n</ul> \n<p> By using a consistent ContentProvider layer, the <a href=\"https://developer.android.com/reference/android/content/ContentResolver\">ContentResolver</a> gives the app a unified interface to access the file content. </p> \n<p> This approach has also helped Viber optimize the network layer and define a universal Loader abstraction to upload/fetch and to read/store different types of media files like voice messages, chat images and stickers. </p> \n<h2>Summary</h2> \n<p> Android 11 <a href=\"https://developer.android.com/preview/privacy/storage\">further enhances</a> scoped storage, which provides better protection of app and user data and makes the transition easier for developers. It’s amazing to see many apps like Viber are migrating to take advantage of scoped storage since Android 10. </p> \n<p> We hope Viber’s story is useful and will inspire you to modernize your Android apps as well. <a href=\"https://developer.android.com/training/data-storage/use-cases\">Learn more</a> about Android storage use cases and best practices. </p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=3YHvPDPPbF8:pzVbBhQtWHM:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=3YHvPDPPbF8:pzVbBhQtWHM:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=3YHvPDPPbF8:pzVbBhQtWHM:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/3YHvPDPPbF8\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Wed, 01 Jul 2020 17:00:00 +0000","feedId":7,"bgimg":"https://1.bp.blogspot.com/-H3ediXRrVPI/XvvBh3xdc9I/AAAAAAAAPLs/_pizaTLQKvYRTN7fhM0LtvcyWvhHiDOnACLcBGAsYHQ/s1600/viber.png","linkMd5":"3d2a8ccb1f77901b11f88d3e836ae001","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn98@2020_1/2020-07-25/1595694869187_f3752ec38a2b7228.webp","author":"Android Developers","articleImgCdnMap":{"https://1.bp.blogspot.com/-H3ediXRrVPI/XvvBh3xdc9I/AAAAAAAAPLs/_pizaTLQKvYRTN7fhM0LtvcyWvhHiDOnACLcBGAsYHQ/s1600/viber.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn98@2020_1/2020-07-25/1595694869187_f3752ec38a2b7228.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=3YHvPDPPbF8:pzVbBhQtWHM:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn62@2020_1/2020-07-25/1595694873783_7da5bd5fc3194acc.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/3YHvPDPPbF8":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn50@2020_2/2020-07-25/1595694871929_45bdeb1567d8cdad.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"Google Home reduces #1 cause of crashes by 33%","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/ysvDNcWUNC0/Google-home-reduces-crashes.html","description":"<img style=\"display:none\" src=\"https://1.bp.blogspot.com/-MHWfKy9RlMo/Xw9IxKKmklI/AAAAAAAAPPI/0qpwh_xchekGcmC81hR6XYp5xz_wi2TrQCLcBGAsYHQ/s1600/Google%2BHome%2Band%2BKotlin%2B.png\"> \n<p> The <a href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.chromecast.app&amp;hl=en_US\">Google Home app</a> helps set up, manage, and control your Google Home, Google Nest, and Chromecast devices—plus thousands of connected home products like lights, cameras, thermostats, and more. </p> \n<p> The engineering team behind the Google Home app benefits from using Kotlin and Android Jetpack libraries to boost engineering productivity and developer happiness. </p> \n<center> \n <a href=\"https://1.bp.blogspot.com/-MHWfKy9RlMo/Xw9IxKKmklI/AAAAAAAAPPI/0qpwh_xchekGcmC81hR6XYp5xz_wi2TrQCLcBGAsYHQ/s1600/Google%2BHome%2Band%2BKotlin%2B.png\" imageanchor=\"1\"><img style=\"width:550px\" border=\"0\" src=\"https://1.bp.blogspot.com/-MHWfKy9RlMo/Xw9IxKKmklI/AAAAAAAAPPI/0qpwh_xchekGcmC81hR6XYp5xz_wi2TrQCLcBGAsYHQ/s1600/Google%2BHome%2Band%2BKotlin%2B.png\" data-original-width=\"1600\" data-original-height=\"900\"></a> \n</center> \n<h2><strong>What they did:</strong></h2> \n<p> The Google Home team decided to incorporate Kotlin into their codebase to make programming more productive and to enable the usage of modern language features like var/val, smart casts, coroutines, and more. <strong>As of June 2020, about 30% of the code base is written in Kotlin</strong>, and Kotlin development is encouraged for all new features. </p> \n<p> The team also adopted Jetpack libraries to improve developer velocity, decrease the need for boilerplate code maintenance, and reduce the necessary amount of code. Jetpack libraries also helped make their code more testable, since there are clearer functional boundaries and APIs. </p> \n<h2><strong>Results:</strong></h2> \n<h6> <em>\"Efficacy and writing less code that does more is the ‘speed’ increase you can achieve with Kotlin.” - Jared Burrows, Software Engineer on Google Home</em> </h6> \n<p> Switching to Kotlin resulted in a reduction in the amount of required code, compared to the equivalent of existing Java code. One example is the use of data classes and the Parcelize plugin: <strong>a class which was 126 hand-written lines in Java can now be represented in just 23 lines in Kotlin—an 80% reduction.</strong> Additionally, equality and parcelizing methods can be automatically generated and kept up to date. Many nested loops and filtering checks were also simplified using the functional methods available in Kotlin. </p> \n<p> Because Kotlin can make nullability a part of the language, tricky situations can be avoided, like when inconsistent usage of nullability annotations in Java might lead to a missed bug. <strong>Since the team started migrating to developing new features with Kotlin, they saw a 33% decrease in NullPointerExceptions. </strong>Since this is the most common crash type on Google Play Console, reducing them led to a dramatically improved user experience. </p> \n<p> With a large, mature app like Google Home—which has over a million lines of code—it’s helpful to be able to gradually add Jetpack libraries. Incorporating them allowed the team to consolidate and replace custom tailored solutions, sometimes even with a single library. Since Jetpack libraries can help engineers follow best practices and be less verbose (for example, using <a href=\"https://developer.android.com/training/data-storage/room\">Room</a> or <a href=\"https://developer.android.com/training/constraint-layout\">ConstraintLayout</a>), readability was increased as well. The team considers many of the newer Jetpack libraries ‘must-haves,’ including <a href=\"https://developer.android.com/topic/libraries/architecture/viewmodel\">ViewModel</a> and <a href=\"https://developer.android.com/topic/libraries/architecture/livedata\">LiveData</a>, both of which are used extensively in the Google Home codebase. </p> \n<p> The Google Home app team found the Jetpack KTX integrations with Kotlin coroutines to be especially helpful. The team is now able to avoid tricky asynchronous programming bugs by associating coroutines with lifecycle-aware components like <a href=\"https://developer.android.com/topic/libraries/architecture/viewmodel\">ViewModel</a>. </p> \n<p> <em> <small> Java is a registered trademark of Oracle and/or its affiliates.</small> </em> </p> \n<h2><strong>Get Started:</strong></h2> \n<p> Learn more about <a href=\"https://developer.android.com/kotlin\">writing Android apps in Kotlin</a> and <a href=\"https://developer.android.com/jetpack\">using Android Jetpack libraries</a>. </p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=ysvDNcWUNC0:uztADjcCExs:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=ysvDNcWUNC0:uztADjcCExs:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=ysvDNcWUNC0:uztADjcCExs:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/ysvDNcWUNC0\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Thu, 16 Jul 2020 15:00:00 +0000","feedId":7,"bgimg":"https://1.bp.blogspot.com/-MHWfKy9RlMo/Xw9IxKKmklI/AAAAAAAAPPI/0qpwh_xchekGcmC81hR6XYp5xz_wi2TrQCLcBGAsYHQ/s1600/Google%2BHome%2Band%2BKotlin%2B.png","linkMd5":"0cf502a5e07737b48c174a8886998e18","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn2@2020_5/2020-07-25/1595694868148_d589b7348ab91e01.webp","author":"Android Developers","articleImgCdnMap":{"https://1.bp.blogspot.com/-MHWfKy9RlMo/Xw9IxKKmklI/AAAAAAAAPPI/0qpwh_xchekGcmC81hR6XYp5xz_wi2TrQCLcBGAsYHQ/s1600/Google%2BHome%2Band%2BKotlin%2B.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn2@2020_5/2020-07-25/1595694868148_d589b7348ab91e01.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=ysvDNcWUNC0:uztADjcCExs:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn2@2020_3/2020-07-25/1595694871906_40be92ea0bef6c9f.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/ysvDNcWUNC0":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn18@2020_5/2020-07-25/1595694874549_ffe0ec31fc783ac7.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"Testing app compatibility in Android 11 ","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/oiVbqG3aJMo/testing-app-compatibility-Android.html","description":"<img style=\"display:none\" src=\"https://3.bp.blogspot.com/-DfqTa9b_ImE/XwNh5ceurDI/AAAAAAAAJFE/cgeHAUMBc0gn0B5AkmxoZIe25Th10_MqQCLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2Btemplate%2Bv1.png\"> \n<p><em>Posted by Diana Wong, Product Manager, Android</em></p>\n<p> </p>\n<p> </p>\n<center>\n <a href=\"https://3.bp.blogspot.com/-DfqTa9b_ImE/XwNh5ceurDI/AAAAAAAAJFE/cgeHAUMBc0gn0B5AkmxoZIe25Th10_MqQCLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2Btemplate%2Bv1.png\" imageanchor=\"1\"><img border=\"0\" style=\"width:100%;\" src=\"https://3.bp.blogspot.com/-DfqTa9b_ImE/XwNh5ceurDI/AAAAAAAAJFE/cgeHAUMBc0gn0B5AkmxoZIe25Th10_MqQCLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2Btemplate%2Bv1.png\" data-original-width=\"1600\" data-original-height=\"901\"></a>\n</center> \n<i>This blog post is part of a weekly series for <a href=\"https://twitter.com/search?q=%2311WeeksOfAndroid&amp;src=typed_query\">#11WeeksOfAndroid</a>. For each <a href=\"https://twitter.com/search?q=%2311WeeksOfAndroid&amp;src=typed_query\">#11WeeksOfAndroid</a>, we’re diving into a key area so you don’t miss anything. This week, we’re spotlighting Android 11 compatibility; here’s a look at what you should know.</i> \n<p></p> \n<a href=\"https://1.bp.blogspot.com/-GP42TTMnDso/XwKb6hwY07I/AAAAAAAAJEU/8TPNWRd3Y-YvfUgPov26RmCRXnUZxMhKACLcBGAsYHQ/s1600/android%2B10.png\" imageanchor=\"1\"><img id=\"floatRight\" border=\"0\" src=\"https://1.bp.blogspot.com/-GP42TTMnDso/XwKb6hwY07I/AAAAAAAAJEU/8TPNWRd3Y-YvfUgPov26RmCRXnUZxMhKACLcBGAsYHQ/s1600/android%2B10.png\" data-original-width=\"1280\" data-original-height=\"1102\"></a> \n<h2>Android 11 compatibility week</h2> \n<p> This week in <a href=\"https://developer.android.com/11weeksofandroid\">11 Weeks of Android</a>, we’re highlighting Android 11 Compatibility, a theme that’s important for all developers. For Android, the term<em> app compatibility</em> means that your app runs properly on a specific version of Android, typically the latest version. </p> \n<p> We’re sharing resources to help you with compatibility testing <a href=\"https://developer.android.com/11weeksofandroid\">here</a>, and you can follow Android Developers on <a href=\"https://twitter.com/AndroidDev\">Twitter</a> and <a href=\"https://www.youtube.com/user/androiddevelopers\">Youtube</a> to catch helpful content and materials in this area all this week! </p> \n<h2>Making app compatibility easier in Android 11</h2> \n<p> With each release, we’re working to reduce the work you’ll need to do to get your apps ready. In Android 11, we’ve added new processes, developer tools, and release milestones to minimize the impact of platform updates and make it easier for apps to stay compatible. </p> \n<ul> \n <li><strong>Minimizing the impact of behavior changes</strong> - we’re making a conscious effort to minimize platform changes that could affect apps by making them opt-in, wherever possible, until you set <a href=\"https://developer.android.com/distribute/best-practices/develop/target-sdk\">targetSdkVersion</a> to Android 11 in your app. If you are distributing through Google Play, you’ll have more than a year to opt-in to these changes. </li>\n <li><strong>Easier testing and debugging</strong> - To help you test for compatibility, we’ve made many of the breaking changes toggleable - meaning that you can force-enable or disable the changes individually from Developer options or adb. With this change, there’s no longer a need to change targetSdkVersion or recompile your app for basic testing. We've also made it easier to use Android Studio to run automated tests. </li>\n <li><strong>Restrictions on non-SDK interfaces</strong> - as part of our ongoing effort to gradually move developers away from non-SDK APIs, we’ve updated the lists of <a href=\"https://developer.android.com/preview/non-sdk-11\">restricted non-SDK interfaces</a>, and as always your feedback and <a href=\"https://developer.android.com/distribute/best-practices/develop/restrictions-non-sdk-interfaces#feature-request\">requests for public API equivalents</a> are welcome. </li>\n <li><strong>Dynamic resource loader</strong> - As part of their migration away from non-SDK interfaces, developers asked us for a public API to load resources and assets dynamically at runtime. We’ve now added a <a href=\"https://developer.android.com/reference/android/content/res/loader/package-summary.html\">Resource Loader framework</a> in Android 11, and thank you to the developers who gave us this input! </li> \n</ul> \n<p> You’ll hear more about these topics throughout the week. To get things started, read on to learn more about how we're making it easier to test and debug your app in Android 11. </p> \n<h2>Testing on Android 11</h2> \n<p> Testing your app for a new Android release can be a challenging task, especially when your app might be affected by multiple platform changes. Many questions can come up: </p> \n<ul> \n <li>How do you determine which areas of your app might be affected? </li>\n <li>Should you test by changing the <code><a href=\"https://developer.android.com/guide/topics/manifest/uses-sdk-element#target\">targetSDKVersion,</a></code> and what’s the easiest way to do so? </li>\n <li>Once you begin testing, how do you isolate the issues that are causing problems? </li>\n <li>As you develop and test against the latest version of Android, how do you verify that your app continues to provide a seamless experience across other devices with different form factors and lower API levels? </li> \n</ul> \n<p> We've gotten a lot of great feedback from our developer community about these and other questions. In Android 11, we've added <a href=\"#tools\">new tools</a> to the platform and <a href=\"#features\">new features</a> to Android Studio that can make the testing process a little easier for you. </p> \n<h2 id=\"tools\">New tools for testing platform changes</h2> \n<p> Like previous releases, Android 11 includes some changes in the Android platform that may impact your apps. Although these changes are critical to improve the platform, we try to minimize the immediate change to your apps by putting as many changes as possible behind the platform's latest <code>targetSDKVersion</code>. In Android 11, we've also added many of these platform changes to a new <a href=\"https://developer.android.com/preview/test-changes\">compatibility framework</a>. </p> \n<h3>What is the compatibility framework?</h3> \n<p> When a change is part of the compatibility framework, you can access new developer tools that help you test and debug your app against that change. </p> \n<p> For instance, changes that are part of the compatibility framework are toggleable, so you can force-enable or disable the changes individually, either from a device's developer options or using ADB (Android Debug Bridge). The Android platform automatically adapts its internal API logic, so you don't need to change your <code>targetSDKVersion</code> or recompile your app to perform basic testing. In addition, you can isolate individual changes from each other to lower the amount of time it takes to discover and debug issues in your app. </p> \n<h3>Choosing a change to test against</h3> \n<p> Before you start toggling changes on or off, you should read through the <a href=\"https://developer.android.com/preview/test-changes#list\">lists of behavior changes</a> to determine which changes might affect your app. Changes that are part of the compatibility framework have a corresponding <code>Change ID</code> and <code>Change Name</code> listed before the description of the change. </p> \n<p> Generally, we recommend that you start testing with <a href=\"https://developer.android.com/preview/behavior-changes-all\">behavior changes that affect all apps</a> because those changes can potentially affect your app regardless of <code>targetSDKVersion</code>. However, let's take a look at a change that is gated by <code>targetSDKVersion</code> so that you can see how to test against these changes without recompiling your app with a different target SDK. </p> \n<p> Take a look at the <a href=\"https://developer.android.com/preview/privacy/location#background-location\">change to background location access</a>. This change affects apps that request all-the-time access to background location. If your app is affected by this change, it might be a great candidate to start testing with. The change's name is <code>BACKGROUND_RATIONALE_CHANGE_ID</code> and the change's ID is <code>147316723</code>. You'll use this information to enable this change before you test your app against it. </p> \n<h3>Isolate the change</h3> \n<p> After deciding which change you want to test against, you can toggle that change on or off using the developer options. To get to the developer options, open your device's Settings app and navigate to <strong>System &gt; Advanced &gt; Developer options &gt; App Compatibility Changes</strong>. </p> \n<center>\n <a href=\"https://4.bp.blogspot.com/-YGDGz1JIPDI/XwKdbnvGZJI/AAAAAAAAJEg/D70tKKxbNZkkCiuzjkksquFQNNWTfWdgwCLcBGAsYHQ/s1600/toggle-changes.png\" imageanchor=\"1\"><img border=\"0\" style=\"width:500px\" src=\"https://4.bp.blogspot.com/-YGDGz1JIPDI/XwKdbnvGZJI/AAAAAAAAJEg/D70tKKxbNZkkCiuzjkksquFQNNWTfWdgwCLcBGAsYHQ/s1600/toggle-changes.png\" data-original-width=\"756\" data-original-height=\"572\" alt=\"Toggleable platform changes in the developer options with the background location access change enabled\n\"></a>\n</center> \n<p id=\"imgCaption\">Toggleable platform changes in the developer options with the background location access change enabled</p> \n<p> In this case, the <code>BACKGROUND_RATIONALE_CHANGE_ID </code>is the only change that is enabled to minimize scope of possible causes for any issues that your app might encounter. </p> \n<p> You can also use logcat or ADB to <a href=\"https://developer.android.com/preview/test-changes#identify\">identify which changes are enabled</a> and <a href=\"https://developer.android.com/preview/test-changes#toggle-adb\">use ADB to toggle changes on or off</a>. Note that you can only toggle changes when using a debuggable app. </p> \n<h3>Test and debug your app</h3> \n<p> After enabling a change, you can test and debug your app using your typical testing workflows. If you encounter issues, check your logs to help determine the cause of the problem. If it's not clear whether the problem is caused by the platform change that's enabled, try disabling that change and then retest that area of your app. </p> \n<h3>Learn more</h3> \n<p> Check out this week's <a href=\"https://youtu.be/82einkyFns4\">video</a> on testing platform changes in Android 11 to see another example and read the <a href=\"https://developer.android.com/test-android11\">documentation on developer.android.com</a>. </p> \n<p> </p>\n<center>\n <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/82einkyFns4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</center> \n<p></p> \n<h2 id=\"features\">New tools in Android Studio for testing app compatibility</h2> \n<p>In addition to manual testing on the new platform, we’ve also made it easier to use Android Studio to run automated tests on the latest OS. </p> \n<p>Starting in Android Studio 4.2, instrumentation tests can now be run across multiple physical or virtual devices in parallel. When running tests, there’s now the option to select <b>Multiple Devices</b> in the target device dropdown menu. </p> \n<center>\n <a href=\"https://1.bp.blogspot.com/-qcsVjq6DqB0/XwKe0OC20GI/AAAAAAAAJEs/0_XMEzGEShwMjtESgGU4mYyjz8ewQ2JtgCLcBGAsYHQ/s1600/multipledevices.png\" imageanchor=\"1\"><img border=\"0\" src=\"https://1.bp.blogspot.com/-qcsVjq6DqB0/XwKe0OC20GI/AAAAAAAAJEs/0_XMEzGEShwMjtESgGU4mYyjz8ewQ2JtgCLcBGAsYHQ/s1600/multipledevices.png\" data-original-width=\"245\" data-original-height=\"369\"></a>\n</center> \n<p> This feature is designed to help you catch issues as early as possible in your development cycle and allow you to compare differences between different builds of Android. The results of these tests can be investigated using a new <i>Test Matrix</i> under <b>View &gt; Tool Windows &gt; Run</b>. </p> \n<center>\n <a href=\"https://1.bp.blogspot.com/-uaXqHr7Uy44/XwKfBN5jNbI/AAAAAAAAJEw/YOX4TMx3gPUXHr_tWap600PQSoeOY2bPQCLcBGAsYHQ/s1600/testmatrix.png\" imageanchor=\"1\"><img border=\"0\" src=\"https://1.bp.blogspot.com/-uaXqHr7Uy44/XwKfBN5jNbI/AAAAAAAAJEw/YOX4TMx3gPUXHr_tWap600PQSoeOY2bPQCLcBGAsYHQ/s1600/testmatrix.png\" data-original-width=\"512\" data-original-height=\"180\"></a>\n</center> \n<p id=\"imgCaption\">The new Test Matrix lets you filter your test results by status, device, and API level.</p> \n<h3>Learn more</h3> \n<p> Check out this week's <a href=\"https://www.youtube.com/watch?v=GM7CXRJKpEI&amp;list=PLWz5rJ2EKKc-Rkjav7zN93x4gJPOruB26&amp;index=3\">video</a> on testing app compatibility with Android Studio and read the <a href=\"https://developer.android.com/studio/preview/features#instrumentation-testing\">documentation on developer.android.com</a>. </p>\n<center>\n <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/GM7CXRJKpEI\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</center> \n<p></p> \n<h2>Next steps</h2> \n<p> We encourage you to try out these new tools and <a href=\"https://google.qualtrics.com/jfe/form/SV_9HOzzyeCIEw0ij3?Source=compatibility-framework-tools\">send us feedback</a> about how they're working for you. We hope these tools help make it easier for you to test your app for Android 11. </p> \n<p> Also, the Android engineering team will host a Reddit AMA on r/androiddev thursday, July 9 at 12:00PM PST, to answer your technical questions about Android 11. See <a href=\"https://www.reddit.com/r/androiddev/comments/hk3hrq/were_on_the_android_engineering_team_ask_us\">this post</a> for details and to submit your questions. </p> \n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=oiVbqG3aJMo:YpdCiL2Ec-I:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=oiVbqG3aJMo:YpdCiL2Ec-I:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=oiVbqG3aJMo:YpdCiL2Ec-I:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/oiVbqG3aJMo\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Mon, 06 Jul 2020 17:53:00 +0000","feedId":7,"bgimg":"https://3.bp.blogspot.com/-DfqTa9b_ImE/XwNh5ceurDI/AAAAAAAAJFE/cgeHAUMBc0gn0B5AkmxoZIe25Th10_MqQCLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2Btemplate%2Bv1.png","linkMd5":"7e43712a19f9594c438ed17de26bb8e8","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_6/2020-07-25/1595694869187_4f79268c4eb16883.webp","author":"Android Developers","articleImgCdnMap":{"https://3.bp.blogspot.com/-DfqTa9b_ImE/XwNh5ceurDI/AAAAAAAAJFE/cgeHAUMBc0gn0B5AkmxoZIe25Th10_MqQCLcBGAsYHQ/s1600/11%2BWeeks_learning%2Bbadge%2Btemplate%2Bv1.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_6/2020-07-25/1595694869187_4f79268c4eb16883.webp","https://1.bp.blogspot.com/-GP42TTMnDso/XwKb6hwY07I/AAAAAAAAJEU/8TPNWRd3Y-YvfUgPov26RmCRXnUZxMhKACLcBGAsYHQ/s1600/android%2B10.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn90@2020_2/2020-07-25/1595694873011_42bf38775e40e290.webp","https://4.bp.blogspot.com/-YGDGz1JIPDI/XwKdbnvGZJI/AAAAAAAAJEg/D70tKKxbNZkkCiuzjkksquFQNNWTfWdgwCLcBGAsYHQ/s1600/toggle-changes.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn70@2020_6/2020-07-25/1595694871666_c305c35fff9d78ee.webp","https://1.bp.blogspot.com/-qcsVjq6DqB0/XwKe0OC20GI/AAAAAAAAJEs/0_XMEzGEShwMjtESgGU4mYyjz8ewQ2JtgCLcBGAsYHQ/s1600/multipledevices.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn54@2020_2/2020-07-25/1595694872255_268429ca1a4ee147.webp","https://1.bp.blogspot.com/-uaXqHr7Uy44/XwKfBN5jNbI/AAAAAAAAJEw/YOX4TMx3gPUXHr_tWap600PQSoeOY2bPQCLcBGAsYHQ/s1600/testmatrix.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn6@2020_4/2020-07-25/1595694871609_f44f439761c03916.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=oiVbqG3aJMo:YpdCiL2Ec-I:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn70@2020_3/2020-07-25/1595694873649_cebcc6630fd9be20.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/oiVbqG3aJMo":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn98@2020_6/2020-07-25/1595694875509_e282eaf840d29242.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":" System hardening in Android 11","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/AB3--KjblCA/system-hardening-in-android-11.html","description":"<img style=\"display:none\" src=\"https://4.bp.blogspot.com/-Cu08WoRm1eM/Xvo4mTKDbUI/AAAAAAAAJDM/ZKDhbnisbToohEu7C0O0HENnjtOantdxQCLcBGAsYHQ/s1600/158244028__30318964__148018.png\"> \n<p><em>Posted by Platform Hardening Team</em></p>\n<p> <a href=\"https://4.bp.blogspot.com/-Cu08WoRm1eM/Xvo4mTKDbUI/AAAAAAAAJDM/ZKDhbnisbToohEu7C0O0HENnjtOantdxQCLcBGAsYHQ/s1600/158244028__30318964__148018.png\" imageanchor=\"1\"><img style=\"width:100%;\" border=\"0\" id=\"imgFull\" src=\"https://4.bp.blogspot.com/-Cu08WoRm1eM/Xvo4mTKDbUI/AAAAAAAAJDM/ZKDhbnisbToohEu7C0O0HENnjtOantdxQCLcBGAsYHQ/s1600/158244028__30318964__148018.png\" data-original-width=\"1024\" data-original-height=\"512\"></a> </p>\n<p>In Android 11 we continue to increase the security of the Android platform. We have moved to safer default settings, migrated to a hardened memory allocator, and expanded the use of compiler mitigations that defend against classes of vulnerabilities and frustrate exploitation techniques. </p> \n<h2>Initializing memory</h2> \n<p> We’ve enabled forms of automatic memory initialization in both Android 11’s userspace and the Linux kernel. Uninitialized memory bugs occur in C/C++ when memory is used without having first been initialized to a known safe value. These types of bugs can be confusing, and even the term “uninitialized” is misleading. Uninitialized may seem to imply that a variable has a random value. In reality it isn’t random. It has whatever value was previously placed there. This value may be predictable or even attacker controlled. Unfortunately this behavior can result in a serious vulnerability such as information disclosure bugs like <a href=\"https://en.wikipedia.org/wiki/Address_space_layout_randomization\">ASLR</a> bypasses, or control flow hijacking via a <a href=\"https://en.wikipedia.org/wiki/Heap_spraying\">stack or heap spray</a>. Another possible side effect of using uninitialized values is advanced compiler optimizations may transform the code unpredictably, as this is considered <a href=\"http://blog.llvm.org/2011/05/what-every-c-programmer-should-know.html\">undefined behavior</a> by the relevant C standards. </p> \n<p> In practice, uses of uninitialized memory are difficult to detect. Such errors may sit in the codebase unnoticed for years if the memory happens to be initialized with some \"safe\" value most of the time. When uninitialized memory results in a bug, it is often challenging to identify the source of the error, particularly if it is rarely triggered.<br><br>Eliminating an entire class of such bugs is a lot more effective than hunting them down individually. Automatic stack variable initialization relies on a feature in the Clang compiler which allows choosing initializing local variables with either zeros or a pattern.<br><br>Initializing to zero provides safer defaults for strings, pointers, indexes, and sizes. The downsides of zero init are less-safe defaults for return values, and exposing fewer bugs where the underlying code relies on zero initialization. Pattern initialization tends to expose more bugs and is generally safer for return values and less safe for strings, pointers, indexes, and sizes. </p> \n<h2>Initializing Userspace:</h2> \n<p> Automatic stack variable initialization is enabled throughout the entire Android userspace. During the development of Android 11, we initially selected pattern in order to uncover bugs relying on zero init and then moved to zero-init after a few months for increased safety. Platform OS developers can build with <code>`AUTO_PATTERN_INITIALIZE=true m`</code> if they want help uncovering bugs relying on zero init. </p> \n<h2>Initializing the Kernel:</h2> \n<p> Automatic <a href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=709a972efb01efaeb97cad1adc87fe400119c8ab\">stack</a> and <a href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=6471384af2a6530696fc0203bafe4de41a23c9ef\">heap</a> initialization were recently merged in the upstream Linux kernel. We have made these features available on earlier versions of Android’s kernel including <a href=\"https://android.googlesource.com/kernel/common/+/refs/heads/android-4.14-q/security/Kconfig.hardening#3\">4.14</a>, <a href=\"https://android.googlesource.com/kernel/common/+/refs/heads/android-4.19/security/Kconfig.hardening#20\">4.19</a>, and <a href=\"https://android.googlesource.com/kernel/common/+/refs/heads/android-5.4/security/Kconfig.hardening#20\">5.4</a>. These features enforce initialization of local variables and heap allocations with known values that cannot be controlled by attackers and are useless when leaked. Both features result in a performance overhead, but also prevent undefined behavior improving both stability and security. </p> \n<p> For kernel stack initialization we adopted the <code>CONFIG_INIT_STACK_ALL</code> from upstream Linux. It currently relies on Clang pattern initialization for stack variables, although this is subject to change in the future. </p> \n<p> Heap initialization is controlled by two boot-time flags, init_on_alloc and init_on_free, with the former wiping freshly allocated heap objects with zeroes (think <code>s/kmalloc/kzalloc</code> in the whole kernel) and the latter doing the same before the objects are freed (this helps to reduce the lifetime of security-sensitive data). <code>init_on_alloc</code> is a lot more cache-friendly and has smaller performance impact (within 2%), therefore it has been chosen to protect Android kernels. </p> \n<h2>Scudo is now Android's default native allocator</h2> \n<p> In Android 11, Scudo replaces jemalloc as the default native allocator for Android. Scudo is a hardened memory allocator designed to help detect and mitigate memory corruption bugs in the heap, such as: </p> \n<ul> \n <li><a href=\"https://cwe.mitre.org/data/definitions/415.html\">Double free</a>, </li>\n <li><a href=\"https://cwe.mitre.org/data/definitions/590.html\">Arbitrary free</a>, </li>\n <li><a href=\"https://cwe.mitre.org/data/definitions/122.html\">Heap-based buffer overflow</a>, </li>\n <li><a href=\"https://cwe.mitre.org/data/definitions/416.html\">Use-after-free</a> </li> \n</ul> \n<p> Scudo does not fully prevent exploitation but it does add a number of sanity checks which are effective at strengthening the heap against some memory corruption bugs. </p> \n<p> It also proactively organizes the heap in a way that makes exploitation of memory corruption more difficult, by reducing the predictability of the allocation patterns, and separating allocations by sizes. </p> \n<p> In our internal testing, Scudo has already proven its worth by surfacing security and stability bugs that were previously undetected. </p> \n<h2>Finding Heap Memory Safety Bugs in the Wild (GWP-ASan)</h2> \n<p> Android 11 introduces GWP-ASan, an in-production heap memory safety bug detection tool that's integrated directly into the native allocator Scudo. GWP-ASan probabilistically detects and provides actionable reports for heap memory safety bugs when they occur, works on 32-bit and 64-bit processes, and is enabled by default for system processes and system apps. </p> \n<p> GWP-ASan is also <a href=\"https://developer.android.com/ndk/guides/gwp-asan\">available for developer applications</a> via a one line opt-in in an app's AndroidManifest.xml, with no complicated build support or recompilation of prebuilt libraries necessary. </p> \n<h2>Software Tag-Based KASAN</h2> \n<p> Continuing work on <a href=\"https://security.googleblog.com/2019/08/adopting-arm-memory-tagging-extension.html\">adopting the Arm Memory Tagging Extension</a> (MTE) in Android, Android 11 includes support for kernel <a href=\"https://clang.llvm.org/docs/HardwareAssistedAddressSanitizerDesign.html\">HWASAN</a>, also known as <a href=\"https://www.kernel.org/doc/html/latest/dev-tools/kasan.html#software-tag-based-kasan\">Software Tag-Based KASAN</a>. Userspace <a href=\"https://developer.android.com/ndk/guides/hwasan\">HWASAN</a> is supported since Android 10. </p> \n<p> <a href=\"https://www.kernel.org/doc/html/latest/dev-tools/kasan.html\">KernelAddressSANitizer</a> (KASAN) is a dynamic memory error detector designed to find out-of-bound and use-after-free bugs in the Linux kernel. Its <a href=\"https://www.kernel.org/doc/html/latest/dev-tools/kasan.html#software-tag-based-kasan\">Software Tag-Based mode</a> is a software implementation of the memory tagging concept for the kernel. Software Tag-Based KASAN is available in 4.14, 4.19 and 5.4 Android kernels, and can be enabled with the CONFIG_KASAN_SW_TAGS kernel configuration option. Currently Tag-Based KASAN only supports tagging of slab memory; support for other types of memory (such as stack and globals) will be added in the future. </p> \n<p> Compared to <a href=\"https://www.kernel.org/doc/html/latest/dev-tools/kasan.html#generic-kasan\">Generic KASAN</a>, Tag-Based KASAN has significantly lower memory requirements (see <a href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=0116523cfffa62aeb5aa3b85ce7419f3dae0c1b8\">this kernel commit</a> for details), which makes it usable on dog food testing devices. Another use case for Software Tag-Based KASAN is checking the existing kernel code for compatibility with memory tagging. As Tag-Based KASAN is based on similar concepts as the future in-kernel MTE support, making sure that kernel code works with Tag-Based KASAN will ease in-kernel MTE integration in the future. </p> \n<h2>Expanding existing compiler mitigations</h2> \n<p> We’ve continued to expand the compiler mitigations that have been rolled out in <a href=\"https://android-developers.googleblog.com/2018/06/compiler-based-security-mitigations-in.html\">prior</a> <a href=\"https://android-developers.googleblog.com/2019/05/queue-hardening-enhancements.html\">releases</a> as well. This includes adding both integer and bounds sanitizers to some core libraries that were lacking them. For example, the libminikin fonts library and the libui rendering library are now bounds sanitized. We’ve hardened the NFC stack by implementing both integer overflow sanitizer and bounds sanitizer in those components. </p> \n<p> In addition to the hard mitigations like sanitizers, we also continue to expand our use of <a href=\"https://source.android.com/devices/tech/debug/cfi\">CFI</a> as an exploit mitigation. CFI has been enabled in Android’s <a href=\"https://android-review.googlesource.com/c/platform/system/netd/+/1208864/\">networking daemon</a>, <a href=\"https://android-review.googlesource.com/c/platform/packages/modules/DnsResolver/+/1207886/\">DNS resolver</a>, and more of our core javascript libraries like libv8 and the PacProcessor. </p> \n<h2>The effectiveness of our software codec sandbox</h2> Prior to the Release of Android 10 we \n<a href=\"https://android-developers.googleblog.com/2019/05/queue-hardening-enhancements.html\">announced a new constrained sandbox for software codecs</a>. We’re really pleased with the results. Thus far, Android 10 is the first Android release since the infamous stagefright vulnerabilities in Android 5.0 with zero critical-severity vulnerabilities in the media frameworks. \n<p><i>Thank you to Jeff Vander Stoep, Alexander Potapenko, Stephen Hines, Andrey Konovalov, Mitch Phillips, Ivan Lozano, Kostya Kortchinsky, Christopher Ferris, Cindy Zhou, Evgenii Stepanov, Kevin Deus, Peter Collingbourne, Elliott Hughes, Kees Cook and Ken Chen for their contributions to this post.</i></p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=AB3--KjblCA:SlY2ALc0yKE:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=AB3--KjblCA:SlY2ALc0yKE:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=AB3--KjblCA:SlY2ALc0yKE:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/AB3--KjblCA\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Tue, 30 Jun 2020 17:00:00 +0000","feedId":7,"bgimg":"https://4.bp.blogspot.com/-Cu08WoRm1eM/Xvo4mTKDbUI/AAAAAAAAJDM/ZKDhbnisbToohEu7C0O0HENnjtOantdxQCLcBGAsYHQ/s1600/158244028__30318964__148018.png","linkMd5":"8f178a84c0da1b26163e6107efe85d60","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn46@2020_3/2020-07-25/1595694868153_5f219d10bf9a6141.webp","author":"Android Developers","articleImgCdnMap":{"https://4.bp.blogspot.com/-Cu08WoRm1eM/Xvo4mTKDbUI/AAAAAAAAJDM/ZKDhbnisbToohEu7C0O0HENnjtOantdxQCLcBGAsYHQ/s1600/158244028__30318964__148018.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn46@2020_3/2020-07-25/1595694868153_5f219d10bf9a6141.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=AB3--KjblCA:SlY2ALc0yKE:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn86@2020_4/2020-07-25/1595694873297_c472147089ea97dc.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/AB3--KjblCA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn70@2020_1/2020-07-25/1595694875780_f43bf932483ea181.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"What’s New in Navigation 2020","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/FX5yH2GrOfU/whats-new-in-navigation-2020.html","description":"<img style=\"display:none\" src=\" \"> \n<p><em>Posted by Jeremy Woods, Software Engineer, Android UI Toolkit </em></p>\n<p> </p>\n<center> \n <a href=\"https://4.bp.blogspot.com/-igLPrJ5bA8M/Xxi0yzegEAI/AAAAAAAAPTk/si7V5QsW_18fr_RGOr3SH-xrPdWqTYc-wCLcBGAsYHQ/s1600/What%25E2%2580%2599s%2BNew%2Bin%2BNavigation%2B2020%2Bv02.png\" imageanchor=\"1\"><img style=\"width: 600px\" border=\"0\" src=\"https://4.bp.blogspot.com/-igLPrJ5bA8M/Xxi0yzegEAI/AAAAAAAAPTk/si7V5QsW_18fr_RGOr3SH-xrPdWqTYc-wCLcBGAsYHQ/s1600/What%25E2%2580%2599s%2BNew%2Bin%2BNavigation%2B2020%2Bv02.png\" data-original-width=\"1024\" data-original-height=\"512\" alt=\"Navigation image\"></a>\n</center> \n<p> The latest versions of the Jetpack Navigation library (2.2.0 and 2.3.0) added a lot of requested features and functionality, including <a href=\"https://developer.android.com/guide/navigation/navigation-dynamic\">dynamic navigation</a>, <a href=\"https://developer.android.com/reference/androidx/navigation/NavBackStackEntry\">navigation back stack entries</a>, a library for <a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/testing/TestNavHostController\">navigation testing</a>, additional features for <a href=\"https://developer.android.com/guide/navigation/navigation-navigate#uri\">deep linking</a>, and more. Let’s go over the most important changes, see what problems they solve, and learn how to use them! </p> \n<h2>Dynamic Navigation</h2> \n<p> We’ve updated Navigation to simplify adding dynamic feature modules for your application. </p> \n<p> Previously, implementing navigation between destinations defined in dynamic feature modules required a lot of work. Before you could navigate to the first dynamic destination, you needed to add the Play Core library and the Split Install API to your app. You also needed to check for and download the dynamic module. Once downloaded, you could then finally navigate to the destination. On top of this, if you wanted to have an on-screen progress bar for the module being downloaded, you needed to implement a <code>SplitInstallManager</code> listener. </p> \n<p> To address this complexity, we created the Dynamic Navigator library. This library extends the functionality of the Jetpack Navigation library to provide seamless installation of on-demand dynamic feature modules when navigating. The library handles all Play Store interaction for you, and it even includes a progress screen that provides the download status of your dynamic module. </p>\n<center> \n <a href=\"https://3.bp.blogspot.com/-oO5hDxQNAJc/XxiUD9LVzhI/AAAAAAAAPSg/PiUNldhIeL0FipRFA2qsG76nHXqhKKF_ACLcBGAsYHQ/s1600/On%2BDemand%2BSample.png\" imageanchor=\"1\"><img style=\"width:500px\" border=\"0\" src=\"https://3.bp.blogspot.com/-oO5hDxQNAJc/XxiUD9LVzhI/AAAAAAAAPSg/PiUNldhIeL0FipRFA2qsG76nHXqhKKF_ACLcBGAsYHQ/s1600/On%2BDemand%2BSample.png\" data-original-width=\"1600\" data-original-height=\"1487\" alt=\"The default UI for showing a progress bar when a user navigates to a dynamic feature for the first time.\"></a> \n</center> \n<p></p> \n<p id=\"imgCaption\"> The default UI for showing a progress bar when a user navigates to a dynamic feature for the first time. The app displays this screen as the corresponding module downloads </p> \n<p> To use dynamic navigation, all you need to do is: </p> \n<ol> \n <li>Change instances of <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/fragment/NavHostFragment.html\">NavHostFragment</a></code> to <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/dynamicfeatures/fragment/DynamicNavHostFragment\">DynamicNavHostFragment</a></code> </li>\n <li>Add an <code>app:moduleName</code> attribute to the destinations associated with a <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/dynamicfeatures/fragment/DynamicNavHostFragment\">DynamicNavHostFragment</a></code> </li> \n</ol> \n<p> For more information on dynamic navigation, see <a href=\"https://developer.android.com/guide/navigation/navigation-dynamic\">Navigate with dynamic feature modules</a> and <a href=\"https://github.com/android/app-bundle-samples/tree/master/DynamicFeatureNavigation\">check out the samples</a>. </p> \n<h2>NavBackStackEntry: Unlocked</h2> \n<p> When you navigate from one destination to the next, the previous destination and its latest state is placed on the Navigation back stack. If you return to the previous destination by using <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavController#popBackStack(kotlin.Int,%20kotlin.Boolean)\">navController.popBackBack()</a></code>, the top back stack entry is removed from the back stack with its state still intact and the <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavDestination\">NavDestination</a></code> is restored. The Navigation back stack contains all of the previous destinations that were needed to arrive at the current <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavDestination\">NavDestination</a></code>. </p>\n<p> We manage the destinations on the Navigation back stack by encapsulating them into the <code><a href=\"https://developer.android.com/reference/androidx/navigation/NavBackStackEntry\">NavBackStackEntry</a></code> class. <code>NavBackStackEntry</code> is now public. This means that users can go a level deeper than just <code>NavDestinations</code> and gain access to navigation-specific <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/ViewModel\">ViewModel</a></code>s, <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/Lifecycle\">Lifecycle</a></code>s, and <a href=\"https://developer.android.com/reference/kotlin/androidx/savedstate/SavedStateRegistry\">SavedStateRegistries</a>. You can now properly scope data sharing or ensure it is destroyed at the appropriate time. </p>\n<p> See <a href=\"https://developer.android.com/guide/navigation/navigation-navigate#back-stack\">Navigation and the back stack</a> for more information. </p> \n<h2>NavGraph ViewModels</h2> \n<p> Since a <code><a href=\"https://developer.android.com/reference/androidx/navigation/NavBackStackEntry\">NavBackStackEntry</a></code> is a <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/ViewModelProvider\">ViewModelProvider</a></code>, you can create a <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/ViewModel\">ViewModel</a></code> to share data between destinations at the <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavGraph\">NavGraph</a></code> level. Each parent navigation graph of all <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavDestination\">NavDestinations</a></code> are on the back stack, so your view model can be scoped appropriately: </p>\n<pre class=\"prettyprint\">val viewModel: MyViewModel by navGraphViewModels(R.id.my_graph)\n</pre> \n<p> For more information on navGraph scoped view models, see <a href=\"https://developer.android.com/guide/navigation/navigation-programmatic#share_ui-related_data_between_destinations_with_viewmodel\">Share UI-related data between destinations with ViewModel</a> </p> \n<h2>Returning a Result from a destination</h2> \n<p> By combining <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/ViewModel\">ViewModel</a></code> and <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/Lifecycle\">Lifecycle</a></code>, you can share data between two specific destinations. To do this, <code><a href=\"https://developer.android.com/reference/androidx/navigation/NavBackStackEntry\">NavBackStackEntry</a></code> provides a <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/SavedStateHandle\">SavedStateHandle</a></code>, a key-value map that can be used to store and retrieve data, even across configuration changes. By using the given <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/SavedStateHandle\">SavedStateHandle</a></code>, you can access and pass data between destinations. For example to pass data from destination A to destination B: </p>\n<p> In destination A: </p> \n<pre class=\"prettyprint\">override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n    val navController = findNavController();\n    // We use a String here, but any type that can be put in a Bundle is supported\n    navController.currentBackStackEntry?.savedStateHandle?.getLiveData&lt;String&gt;(\"key\")?.observe(\n        viewLifecycleOwner) { result -&gt;\n        // Do something with the result.\n    }\n}\n</pre> \n<p> And in destination B: </p> \n<pre class=\"prettyprint\">navController.previousBackStackEntry?.savedStateHandle?.set(\"key\", result)\n</pre> \n<p> See <a href=\"https://developer.android.com/guide/navigation/navigation-programmatic#returning_a_result\">Returning a result to the previous Destination</a> for more details. </p> \n<h2>Testing your Navigation Flow</h2> \n<p> Previously, the recommended testing solution for Navigation was Mockito. You would create a mock <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavController\">NavController</a></code> and verify that <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavController#navigate(kotlin.Int)\">navigate()</a></code> was called at the appropriate time with the correct parameters. Unfortunately, this solution was not enough to test certain areas of Navigation flow, such as <code><span style=\"text-decoration:underline;\">ViewModel</span></code> interaction or the Navigation back stack. The Navigation Library now offers a well-integrated solution for these areas with the Navigation Testing library. </p>\n<p> The Navigation Testing library adds <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/testing/TestNavHostController\">TestNavHostController</a></code>, which gives access to the Navigation back stack in a test environment. This means that you can now verify the state of the entire back stack. When using the <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/testing/TestNavHostController\">TestNavHostController</a></code>, you can set your own <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/LifecycleOwner\">LifecycleOwner</a></code>, <code><a href=\"https://developer.android.com/reference/kotlin/androidx/lifecycle/LifecycleOwner\">ViewModelStoreOwner</a></code>, and <code><a href=\"https://developer.android.com/reference/kotlin/androidx/activity/OnBackPressedDispatcher\">OnBackPressDispatcher</a></code> by using the APIs given by <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavHostController.html\">NavHostController</a></code>. By setting these components, you can test them in the context of navigation. </p>\n<p> For example, here's how to test a destination that uses a nav graph-scoped <code>ViewModel</code>: </p> \n<pre class=\"prettyprint\">val navController = TestNavHostController(ApplicationProvider.getApplicationContext())\n\n// This allows fragments to use by navGraphViewModels()\nnavController.setViewModelStore(ViewModelStore())\nnavController.setGraph(R.navigation.main_nav)\n</pre> \n<p> The <code>TestNavHostController</code> also lets you set the current destination. You can move the test directly to the use case being tested without the need to set it up using <code>navigate()</code> calls. This is extremely convenient for writing tests for different navigation scenarios. </p> \n<p> When setting the current destination, you might do something like the following: </p> \n<pre class=\"prettyprint\">val navController = TestNavHostController(ApplicationProvider.getApplicationContext())\n\nnavController.setGraph(R.navigation.main_nav)\nnavController.setCurrentDestination(R.id.destination_1)\n</pre> \n<p> Remember that when setting the current destination, that destination must be part of your nav graph. </p> \n<p> For more information about <code>TestNavHostController</code>, see the <a href=\"https://developer.android.com/guide/navigation/navigation-testing\">Test Navigation docs</a>. </p> \n<h2>Nav Deep Linking</h2> \n<p> Deep linking allows you to navigate directly to any destination no matter where you currently are in the <code><a href=\"https://developer.android.com/reference/kotlin/androidx/navigation/NavGraph\">NavGraph</a></code>. This can be very useful for launching your app to a specific destination or jumping between destinations that would otherwise be inaccessible to one another. </p>\n<p> When navigating using a deep link, you can now provide deep link query parameters in any order and even leave them out altogether if they have been given a default value or have been made nullable. This means that if you have provided default values for all of the query parameters on a deep link, the deep link can match a URL pattern without including any query parameters. </p> \n<p> For example,<code> <strong>www.example.com?arg1={arg1}&amp;arg2={arg2}</strong></code> will now match with <strong><code>www.example.com</code></strong> as long as <code>arg1</code> and <code>arg2</code> have default values and/or are nullable. </p>\n<p> Deep links can also be matched using intent actions and MIME types. Instead of requiring destinations to match by URI, you can provide the deep link with an action or MIME type and match with that instead. You can specify multiple match types for a single deep link, but note that <code><a href=\"https://developer.android.com/reference/java/net/URI?hl=en\">URI</a></code> argument matching is prioritized first, followed by <code>action</code>, and then <code>mimeType</code>. </p>\n<p> You create a deep link by adding it to a destination in XML, using the <a href=\"https://developer.android.com/guide/navigation/navigation-kotlin-dsl#deep\">Kotlin DSL</a>, or by using the Navigation Editor in Android Studio. </p> \n<p> Here's how to add a deep link to a destination using XML: </p> \n<pre class=\"prettyprint\">&lt;fragment android:id=\"@+id/a\"\n          android:name=\"com.example.myapplication.FragmentA\"\n          tools:layout=\"@layout/a\"&gt;\n        &lt;deeplink app:url=\"www.example.com\"\n                app:action=\"android.intent.action.MY_ACTION\"\n                app:mimeType=\"type/subtype\"/&gt;\n    &lt;/fragment&gt;\n</pre> \n<p> Here's how to add the same deep link using the Kotlin DSL: </p> \n<pre class=\"prettyprint\">val baseUri = \"http://www.example.com/\"\n\nfragment&lt;MyFragment&gt;(nav_graph.dest.a) {\n   deepLink(navDeepLink {\n    uriPattern = \"${baseUri}\"\n    action = \"android.intent.action.MY_ACTION\"\n    mimeType = \"type/subtype\"\n   })\n}\n</pre> \n<p> You can also add the same deep link using the Navigation Editor in Android Studio versions 4.1 and higher. Note that you must also be using the Navigation 2.3.0-alpha06 dependency or later. </p>\n<center> \n <a href=\"https://1.bp.blogspot.com/-pdWiqpW1gXw/XxiWRV0uTDI/AAAAAAAAPSs/yXRuANB1Jv4ylvxb3sez-dt44FXQRiVQACLcBGAsYHQ/s1600/Navigation%2B2020.png\" imageanchor=\"1\"><img style=\"width:600px\" border=\"0\" src=\"https://1.bp.blogspot.com/-pdWiqpW1gXw/XxiWRV0uTDI/AAAAAAAAPSs/yXRuANB1Jv4ylvxb3sez-dt44FXQRiVQACLcBGAsYHQ/s1600/Navigation%2B2020.png\" data-original-width=\"512\" data-original-height=\"285\" alt=\"An open dialog in the Navigation Editor for adding a deep link to a destination. There are options to add an URI, a MIME type, and an action, along with a checkBox to Auto Verify\"></a> \n</center> \n<p></p> \n<p id=\"imgCaption\"> Adding a deep link to a destination in the Navigation Editor </p>\n<p> </p>\n<p> To navigate to a destination using a deep link, you must first build a <code><span style=\"text-decoration:underline;\">NavDeepLinkRequest</span></code> and then pass that deep link request into the Navigation controller's call to <code><span style=\"text-decoration:underline;\">navigate()</span></code>: </p>\n<pre class=\"prettyprint\">val deepLinkRequest = NavDeepLinkRequest.Builder\n        .fromUri(Uri.parse(\"http://www.example.com\"))\n        .setAction(\"android.intent.action.MY_ACTION\")\n        .setMimeType(\"type/subtype\")\n        .build()\nnavController.navigate(deeplinkRequest)\n</pre> \n<p> For more information on deep links, visit <a href=\"https://developer.android.com/guide/navigation/navigation-deep-link\">Create a deep link for a destination</a>, as well as the deep linking sections in <a href=\"https://developer.android.com/guide/navigation/navigation-navigate#uri\">Navigate to a destination</a> and <a href=\"https://developer.android.com/guide/navigation/navigation-kotlin-dsl#deep\">Kotlin DSL</a>. </p> \n<h2>Navigation Editor</h2> \n<p> Android Studio 4.0 includes new features for the Navigation Editor. You can now edit your destinations using a split pane view. This means you can edit the XML or design and see the changes in real time. </p>\n<center> \n <a href=\"https://3.bp.blogspot.com/-OrKSwU1pDp4/XxiW3r7JExI/AAAAAAAAPS0/X6ilvTUqRvMhqJKKqI-DHyEMeKEZy6BMgCLcBGAsYHQ/s1600/split-mode-screenshot.png\" imageanchor=\"1\"><img style=\"width: 600px\" border=\"0\" src=\"https://3.bp.blogspot.com/-OrKSwU1pDp4/XxiW3r7JExI/AAAAAAAAPS0/X6ilvTUqRvMhqJKKqI-DHyEMeKEZy6BMgCLcBGAsYHQ/s1600/split-mode-screenshot.png\" data-original-width=\"1600\" data-original-height=\"890\" alt=\"The Navigation Editor opened in split pane mode with the navigation.xml file on the left and the corresponding nav graph on the right. The nav graph has 6 destination, and a nested graph\"></a> \n</center> \n<p></p> \n<p id=\"imgCaption\"> Viewing a navigation.xml file in split view mode </p>\n<p> </p>\n<p> In Android Studio 4.1, the Navigation Editor introduced the component tree. This allows you to traverse the entire nav graph, freely going in and out of nested graphs. </p>\n<center> \n <a href=\"https://4.bp.blogspot.com/-Vi4AOZ9oiGQ/XxiYmmZMvVI/AAAAAAAAPTA/9eJM-PBEoQ0PcKuY8337m9LXvmUJmcK9ACLcBGAsYHQ/s1600/new-component-tree.gif\" imageanchor=\"1\"><img style=\"width: 600px\" border=\"0\" src=\"https://4.bp.blogspot.com/-Vi4AOZ9oiGQ/XxiYmmZMvVI/AAAAAAAAPTA/9eJM-PBEoQ0PcKuY8337m9LXvmUJmcK9ACLcBGAsYHQ/s1600/new-component-tree.gif\" data-original-width=\"1600\" data-original-height=\"889\" alt=\"An open component tree of a nav graph in the Navigation Editor. It starts viewing the entire graph, then moves to the title screen before going into the nested profiles graph. After cycling through the destinations in the profiles graph, it goes back to fragments in the original graph\"></a> \n</center> \n<p></p> \n<p> </p> \n<p id=\"imgCaption\"> Navigating through a graph in the Navigation Editor </p>\n<p> </p>\n<h2>Additional Changes</h2> \n<p> <code><a href=\"https://developer.android.com/reference/androidx/navigation/ui/NavigationUI?hl=en\">NavigationUI</a></code> can now use any layout that uses the <code><a href=\"https://developer.android.com/reference/kotlin/androidx/customview/widget/Openable?hl=en\">Openable</a></code> interface. This means that it is no longer limited to <code><a href=\"https://developer.android.com/reference/kotlin/androidx/drawerlayout/widget/DrawerLayout?hl=en\">DrawerLayout</a></code> and allows for customization of the <code><a href=\"https://developer.android.com/reference/androidx/navigation/ui/AppBarConfiguration?hl=en\">AppBarConfiguration</a></code>. You can provide your <code><a href=\"https://developer.android.com/reference/kotlin/androidx/customview/widget/Openable?hl=en\">Openable</a></code> and use it as the layout instead. </p>\n<p> Navigation also provides support for Kotlin DSL. Kotlin DSL can be used to create different destinations, actions, or deep links. For more information see the <a href=\"https://developer.android.com/guide/navigation/navigation-kotlin-dsl\">documentation for Kotlin DSL</a>. </p> \n<h2>Wrap up</h2> \n<p> Navigation added lots of useful features over the past year. You can simplify your dynamic feature modules by taking advantage of the Dynamic Navigator library, use a <code>NavBackStackEntry</code> to help correctly scope your data, easily test your navigation flow using the <code>TestNavHostController</code>, or even match your deep link using intent actions and/or MIME types. </p> \n<p> For more information about the Jetpack Navigation library, check out the documentation at <a href=\"https://developer.android.com/guide/navigation\">https://developer.android.com/guide/navigation</a> </p> \n<p> Please provide feedback (or file bugs) using the <a href=\"http://www.issuetracker.google.com/issues?q=componentid:409828\">Navigation issuetracker component</a>. </p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=FX5yH2GrOfU:EPlb0nJfe-s:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=FX5yH2GrOfU:EPlb0nJfe-s:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=FX5yH2GrOfU:EPlb0nJfe-s:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/FX5yH2GrOfU\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Thu, 23 Jul 2020 15:53:00 +0000","feedId":7,"bgimg":"https://4.bp.blogspot.com/-igLPrJ5bA8M/Xxi0yzegEAI/AAAAAAAAPTk/si7V5QsW_18fr_RGOr3SH-xrPdWqTYc-wCLcBGAsYHQ/s72-c/What%25E2%2580%2599s%2BNew%2Bin%2BNavigation%2B2020%2Bv02.png","linkMd5":"be9e5f3cac9816f1c7c1f53616ed82e0","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn30@2020_4/2020-07-25/1595694871930_6f09c23e44fdcf0e.webp","author":"Android Developers","articleImgCdnMap":{" ":null,"https://4.bp.blogspot.com/-igLPrJ5bA8M/Xxi0yzegEAI/AAAAAAAAPTk/si7V5QsW_18fr_RGOr3SH-xrPdWqTYc-wCLcBGAsYHQ/s1600/What%25E2%2580%2599s%2BNew%2Bin%2BNavigation%2B2020%2Bv02.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn70@2020_4/2020-07-25/1595694872267_6e430236862489d0.webp","https://3.bp.blogspot.com/-oO5hDxQNAJc/XxiUD9LVzhI/AAAAAAAAPSg/PiUNldhIeL0FipRFA2qsG76nHXqhKKF_ACLcBGAsYHQ/s1600/On%2BDemand%2BSample.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn2@2020_4/2020-07-25/1595694880513_34e070e7e034f540.webp","https://1.bp.blogspot.com/-pdWiqpW1gXw/XxiWRV0uTDI/AAAAAAAAPSs/yXRuANB1Jv4ylvxb3sez-dt44FXQRiVQACLcBGAsYHQ/s1600/Navigation%2B2020.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn14@2020_1/2020-07-25/1595694874308_8fc7d1562f62df3d.webp","https://3.bp.blogspot.com/-OrKSwU1pDp4/XxiW3r7JExI/AAAAAAAAPS0/X6ilvTUqRvMhqJKKqI-DHyEMeKEZy6BMgCLcBGAsYHQ/s1600/split-mode-screenshot.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn6@2020_2/2020-07-25/1595694873514_e16b3834602367e3.webp","https://4.bp.blogspot.com/-Vi4AOZ9oiGQ/XxiYmmZMvVI/AAAAAAAAPTA/9eJM-PBEoQ0PcKuY8337m9LXvmUJmcK9ACLcBGAsYHQ/s1600/new-component-tree.gif":null,"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=FX5yH2GrOfU:EPlb0nJfe-s:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_5/2020-07-25/1595694871722_7e13e6f4cfa79adf.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/FX5yH2GrOfU":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn18@2020_5/2020-07-25/1595694873867_e2a1bf8fde844af4.webp"}},{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","title":"Full spectrum of on-device machine learning tools on Android","link":"http://feedproxy.google.com/~r/blogspot/hsDu/~3/UvR9XS7xkMM/full-spectrum-of-on-device-machine.html","description":"<img style=\"display:none\" src=\"https://1.bp.blogspot.com/-9hglP9yWE3A/XvTWrejejAI/AAAAAAAAPJs/JM9_Wfi9qgkmfbTXbzT_irm8sYjxvUdrACLcBGAsYHQ/s1600/vision.png\"> \n<p><em>Posted by <a href=\"https://twitter.com/hoitab\">Hoi Lam</a>, Android Machine Learning</em></p>\n<p> <br> <iframe width=\"560\" height=\"315\" id=\"imgFull\" src=\"https://www.youtube.com/embed/P-IcDKAlRL4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> <br> </p>\n<p>This blog post is part of a weekly series for #11WeeksOfAndroid. Each week we’re diving into a key area of Android so you don’t miss anything. Throughout this week, we covered various aspects of Android on-device machine learning (ML). Whichever stage of development be it starting out or an established app; whatever role you play in design, product and engineering; whatever your skill level from beginner to experts, we have a wide range of ML tools for you. </p> \n<h2>Design - ML as a differentiator</h2> \n<p>“Focus on the user and all else will follow” is a Google mantra that becomes even more relevant in our machine learning age. Our Design Advocate, Di Dang, highlighted the importance of <a href=\"https://android-developers.googleblog.com/2020/06/on-device-ML-design-insights.html\">finding the unique intersection of user problems and ML strengths</a>. Too often, teams are so keen on the idea of machine learning that they lose sight of their user needs. </p> \n<br> \n<a href=\"https://2.bp.blogspot.com/-Uyo4mSskb5U/XvTVwRYPb0I/AAAAAAAAPJg/myMguJMiDkoFISmKBDAwMUE-MrAQJr0RQCLcBGAsYHQ/s1600/Screen%2BShot%2B2020-06-24%2Bat%2B1.28.26%2BPM.png\" imageanchor=\"1\"><img id=\"imgFull\" border=\"0\" src=\"https://2.bp.blogspot.com/-Uyo4mSskb5U/XvTVwRYPb0I/AAAAAAAAPJg/myMguJMiDkoFISmKBDAwMUE-MrAQJr0RQCLcBGAsYHQ/s1600/Screen%2BShot%2B2020-06-24%2Bat%2B1.28.26%2BPM.png\" data-original-width=\"1250\" data-original-height=\"795\"></a> \n<br> \n<p> Di outlined how <a href=\"https://pair.withgoogle.com/guidebook/\">the People + AI Guidebook</a> can help you make ML product decisions and used the example of the <a href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.seekh\">Read Along app</a> to illustrate topics like precision and recall, which are unique to ML design and development. Check out <a href=\"https://www.youtube.com/watch?v=fllbN6ZixnE\">her interview with the Read Along team</a> together with your team for more inspiration. </p> \n<h2>New ML Kit fully focused on on-device</h2> \n<p>When you decide that on-device machine learning is the solution, the easiest way to implement it will be through turnkey SDKs like ML Kit. Sophisticated Google-trained models and processing pipelines are offered through an easy to use interface in Kotlin / Java. ML Kit is designed and built for on-device ML: it works offline, offers enhanced privacy, unlocks high performance for real-time use cases and it is free. We <a href=\"https://android-developers.googleblog.com/2020/06/mlkit-on-device-machine-learning-solutions.html\">recently made ML Kit a standalone SDK and it no longer requires a Firebase account</a>. Just one line in your build.gradle file and you can start bringing ML functionality into your app.</p> \n<br> \n<a href=\"https://1.bp.blogspot.com/-9hglP9yWE3A/XvTWrejejAI/AAAAAAAAPJs/JM9_Wfi9qgkmfbTXbzT_irm8sYjxvUdrACLcBGAsYHQ/s1600/vision.png\" imageanchor=\"1\"><img id=\"imgFull\" border=\"0\" src=\"https://1.bp.blogspot.com/-9hglP9yWE3A/XvTWrejejAI/AAAAAAAAPJs/JM9_Wfi9qgkmfbTXbzT_irm8sYjxvUdrACLcBGAsYHQ/s1600/vision.png\" data-original-width=\"1600\" data-original-height=\"558\"></a> \n<br> \n<p> The team has also added new functionalities such as Jetpack lifecycle support and the option to use the face contour models via Google Play Services saving as much as 20MB in app size. Another much anticipated addition is the support for swapping Google models with your own for both <a href=\"https://developers.google.com/ml-kit/vision/image-labeling/custom-models/android\">Image Labeling</a> as well as <a href=\"https://developers.google.com/ml-kit/vision/object-detection/custom-models/android\">Object Detection and Tracking</a>. This provides one of the easiest ways to add TensorFlow Lite models to your applications without interacting with ByteArray! </p> \n<h2>Customise with TensorFlow Lite and Android tools</h2> \n<p> If the base model provided by ML Kit doesn’t quite fit the bill, what should developers do? The first port of call should be <a href=\"https://tfhub.dev/s?deployment-format=lite\">TensorFlow Hub</a> where ready-to-use TensorFlow Lite models from both Google and the wider community can be downloaded. From <a href=\"https://tfhub.dev/google/lite-model/on_device_vision/classifier/popular_us_products_V1/1\">100,000 US Supermarket products</a> to <a href=\"https://tfhub.dev/agripredict/lite-model/disease-classification/1\">tomato plant diseases</a> classifiers, the choice is yours. </p> \n<br> \n<a href=\"https://2.bp.blogspot.com/-Y8vpTSANqMs/XvYjlOblpeI/AAAAAAAAPKU/zMVhGkqaBwIRLivBv3tgxgKPqeiycbchgCLcBGAsYHQ/s1600/Crop.001.png\" imageanchor=\"1\"><img border=\"0\" id=\"imgFull\" src=\"https://2.bp.blogspot.com/-Y8vpTSANqMs/XvYjlOblpeI/AAAAAAAAPKU/zMVhGkqaBwIRLivBv3tgxgKPqeiycbchgCLcBGAsYHQ/s1600/Crop.001.png\" data-original-width=\"1600\" data-original-height=\"775\"></a> \n<br> \n<p> In addition to <a href=\"https://firebase.google.com/docs/ml/automl-image-labeling\">Firebase AutoML Vision Edge</a>, you can also build your own model using TensorFlow Model Maker (<a href=\"https://www.tensorflow.org/lite/tutorials/model_maker_image_classification\">image classification</a> / <a href=\"https://www.tensorflow.org/lite/tutorials/model_maker_text_classification\">text classification</a>) with just a few lines of Python. Once you have a TensorFlow Lite model from either TensorFlow Hub, or the Model Maker, you can easily integrate it with your Android app using ML Kit <a href=\"https://developers.google.com/ml-kit/vision/image-labeling/custom-models/android\">Image Labelling</a> or <a href=\"https://developers.google.com/ml-kit/vision/object-detection/custom-models/android\">Object Detection and Tracking</a>. If you prefer an open source solution, <a href=\"https://developer.android.com/studio/preview\">Android Studio 4.1 beta</a> introduces ML model binding that helps wrap around the TensorFlow Lite model with an easy to use Kotlin / Java wrapper. Adding a custom model to your Android app has never been easier. <a href=\"https://android-developers.googleblog.com/2020/06/tools-for-custom-ML-models.html\">Check out this blog for more details</a>. </p> \n<h2>Time for on-device ML is now</h2> \n<a href=\"https://3.bp.blogspot.com/-etIZ0E6CynE/XvYkG-QzC0I/AAAAAAAAPKc/NAiR_6KrbKc8_FIjpMhNmXhCaBWDqoEQACLcBGAsYHQ/s1600/Sunflower%2Bwith%2Bframe.png\" imageanchor=\"1\"><img border=\"0\" id=\"floatRight\" style=\"width:200px\" src=\"https://3.bp.blogspot.com/-etIZ0E6CynE/XvYkG-QzC0I/AAAAAAAAPKc/NAiR_6KrbKc8_FIjpMhNmXhCaBWDqoEQACLcBGAsYHQ/s1600/Sunflower%2Bwith%2Bframe.png\" data-original-width=\"776\" data-original-height=\"1600\"></a> \n<p> From the examples of <a href=\"https://android-developers.googleblog.com/2020/06/dev-challenge-winners.html\">the Android Developer Challenge winners</a>, it is obvious that on-device machine learning has come of age and ML functionalities once reserved for the cloud or supercomputers are now available on your Android phone. Take a step forward with us by trying out our codelabs of the day: </p> \n<ul> \n <li><strong>ML Kit Codelab - </strong><a href=\"https://codelabs.developers.google.com/codelabs/mlkit-android-translate/\">Recognize, Identify Language and Translate text</a> with ML Kit and CameraX </li>\n <li><strong>Custom Model Codelab</strong> - <a href=\"https://goo.gle/3dbCSbt\">Build an Android app to recognize flowers</a> with TensorFlow Lite Model Maker and Android Studio ML model binding </li> \n</ul> \n<p> Also checkout the <a href=\"https://developer.android.com/courses/pathways/android-week2-machine-learning\">ML Week learning pathway</a> and take the quiz to get your very own ML badge. </p> \n<p> Android on-device machine learning is a rapidly evolving platform, if you have any enhancement requests or feedback on how it could be improved, please let us know together with your use-case (<a href=\"https://github.com/tensorflow/tensorflow/labels/comp%3Alite\">TensorFlow Lite</a> / <a href=\"https://issuetracker.google.com/issues/new?component=897785&amp;template=1457328\">ML Kit</a>). Time for on-device ML is now. </p> \n<h2>Resources</h2> \n<p>You can find the entire playlist of #11WeeksOfAndroid video content <a href=\"https://www.youtube.com/c/AndroidDevelopers/playlists?view=50&amp;sort=dd&amp;shelf_id=12\">here</a>, and learn more about each week <a href=\"https://developer.android.com/11weeksofandroid\">here</a>. We’ll continue to spotlight new areas each week, so keep an eye out and follow us on Twitter and YouTube. Thanks so much for letting us be a part of this experience with you!</p>\n<div class=\"feedflare\"> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=UvR9XS7xkMM:MN1y7MSSru4:yIl2AUoC8zA\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA\" border=\"0\"></a> \n <a href=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?a=UvR9XS7xkMM:MN1y7MSSru4:-BTjWOF_DHI\"><img src=\"http://feeds.feedburner.com/~ff/blogspot/hsDu?i=UvR9XS7xkMM:MN1y7MSSru4:-BTjWOF_DHI\" border=\"0\"></a> \n</div>\n<img src=\"http://feeds.feedburner.com/~r/blogspot/hsDu/~4/UvR9XS7xkMM\" height=\"1\" width=\"1\" alt=\"\">","descriptionType":"html","publishedDate":"Fri, 26 Jun 2020 17:55:00 +0000","feedId":7,"bgimg":"https://1.bp.blogspot.com/-9hglP9yWE3A/XvTWrejejAI/AAAAAAAAPJs/JM9_Wfi9qgkmfbTXbzT_irm8sYjxvUdrACLcBGAsYHQ/s1600/vision.png","linkMd5":"1e23fa2dcb09d88c9d0720aed9fbed99","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn62@2020_4/2020-07-25/1595694868112_261c087d6f011697.webp","author":"Android Developers","articleImgCdnMap":{"https://1.bp.blogspot.com/-9hglP9yWE3A/XvTWrejejAI/AAAAAAAAPJs/JM9_Wfi9qgkmfbTXbzT_irm8sYjxvUdrACLcBGAsYHQ/s1600/vision.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn62@2020_4/2020-07-25/1595694868112_261c087d6f011697.webp","https://2.bp.blogspot.com/-Uyo4mSskb5U/XvTVwRYPb0I/AAAAAAAAPJg/myMguJMiDkoFISmKBDAwMUE-MrAQJr0RQCLcBGAsYHQ/s1600/Screen%2BShot%2B2020-06-24%2Bat%2B1.28.26%2BPM.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn82@2020_2/2020-07-25/1595694875570_c913330e3bfd282e.webp","https://2.bp.blogspot.com/-Y8vpTSANqMs/XvYjlOblpeI/AAAAAAAAPKU/zMVhGkqaBwIRLivBv3tgxgKPqeiycbchgCLcBGAsYHQ/s1600/Crop.001.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn54@2020_2/2020-07-25/1595694874823_83aaff016f0eef5c.webp","https://3.bp.blogspot.com/-etIZ0E6CynE/XvYkG-QzC0I/AAAAAAAAPKc/NAiR_6KrbKc8_FIjpMhNmXhCaBWDqoEQACLcBGAsYHQ/s1600/Sunflower%2Bwith%2Bframe.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn22@2020_1/2020-07-25/1595694880523_61a659508288b008.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?d=yIl2AUoC8zA":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_2/2020-07-25/1595694871935_e6aa4d73b74f71ed.webp","http://feeds.feedburner.com/~ff/blogspot/hsDu?i=UvR9XS7xkMM:MN1y7MSSru4:-BTjWOF_DHI":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn34@2020_6/2020-07-25/1595694873872_2e728c98b1d13c56.webp","http://feeds.feedburner.com/~r/blogspot/hsDu/~4/UvR9XS7xkMM":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn14@2020_3/2020-07-25/1595694871627_34785d2aa6b5cd00.webp"}}],"record":{"createdTime":"2020-07-26 00:34:27","updatedTime":"2020-07-25 16:34:27","feedId":7,"fetchDate":"Sat, 25 Jul 2020 16:34:27 +0000","fetchMs":78,"handleMs":57,"totalMs":66389,"newArticles":0,"totalArticles":25,"status":1,"type":0,"ip":"52.213.218.43","hostName":"europe-020.herokuapp.com","requestId":"dd73d65421f64c6d836d6544dbf04c65_7"},"extra4":{"start":1595694867710,"total":0,"statList":[{"spend":78,"msg":"获取xml内容"},{"spend":57,"msg":"解释文章"},{"spend":1768,"msg":"上传封面图到cdn"},{"spend":3181,"msg":"修正封面图上传失败重新上传"},{"spend":62535,"msg":"正文链接上传到cdn"}]},"extra5":118,"extra6":112}