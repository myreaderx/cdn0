{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-07 05:02:45","updatedTime":"2020-09-07 05:02:45","title":"安卓自定义View进阶-画笔基础(Paint)","link":"http://www.gcssloop.com/customview/paint-base","description":"<p>在Android自定义View系列文章中，前面的部分有详细的讲解画布(Canvas)的功能和用法，但是和画布(Canvas)共同出现的画笔(Paint)却没有详细的讲解，本文带大家较为详细的了解一下画笔的相关内容。</p> \n<blockquote> \n <p>Paint 在英文中作为名词时主要含义是涂料，油漆，颜料的意思，作为动词则具有绘画、粉刷的意思，不过在程序相关的中文博客里面，Paint 通常被解释为画笔，本文也将采用这种翻译，因此本文里面提到的画笔如没有特殊表明就指代 Paint。</p> \n</blockquote> \n<h2 id=\"0引子\">0.引子</h2> \n<p>通过本系列前面的文章知道，View 上的内容是通过 Canvas 绘制出来的，但 Canvas 中的大多数绘制方法都是需要 Paint 作为参数的，例如 <code class=\"highlighter-rouge\">canvas.drawCircle(100, 100, 50, paint)</code> 最后就需要传递一个 Paint。这是为什么呢？</p> \n<p>因为画布本身只是呈现的一个载体，真正绘制出来的效果却要取决于画笔，就像同样白纸，要绘制一幅山水图，用毛笔画和用铅笔画的效果肯定是完全不同的，决定不同显示效果的并不是画布(Canvas), 而是画笔(Paint)。</p> \n<p>同样，在程序设计中也采用的类似的设计思想，画布的 draw 方法只是规定了所需要绘制的是什么东西，但具体绘制出什么效果则通过画笔来控制。<br /> 例如： <code class=\"highlighter-rouge\">canvas.drawCircle(100, 100, 50, paint)</code>，这个方法说明了要在坐标 (100, 100) 的位置绘制一个半径为 50 的圆，但是这个圆具体要绘制成什么样子却没有明确的表明，圆的颜色，圆环还是圆饼等都没有明确的指示，而这些内容正存在于画笔之中。</p> \n<h2 id=\"1-内容概览\">1. 内容概览</h2> \n<p>既然是介绍画笔，自然要先总览一下它都有哪些功能，下面简要的列出一些本文中会涉及到的内容。</p> \n<h3 id=\"11-内部类\">1.1 内部类</h3> \n<table> \n <thead> \n  <tr> \n   <th>类型</th> \n   <th>简介</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>enum</td> \n   <td><strong>Paint.Cap</strong><br />Cap指定了描边线和路径(Path)的开始和结束显示效果。</td> \n  </tr> \n  <tr> \n   <td>enum</td> \n   <td><strong>Paint.Join</strong><br />Join指定线条和曲线段在描边路径上连接的处理。</td> \n  </tr> \n  <tr> \n   <td>enum</td> \n   <td><strong>Paint.Style</strong><br />Style指定绘制的图元是否被填充，描边或两者均有(以相同的颜色)。</td> \n  </tr> \n </tbody> \n</table> \n<h3 id=\"12-常量\">1.2 常量</h3> \n<table> \n <thead> \n  <tr> \n   <th>类型</th> \n   <th>简介</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>int</td> \n   <td><strong>ANTI_ALIAS_FLAG</strong><br />开启抗锯齿功能的标记。</td> \n  </tr> \n  <tr> \n   <td>int</td> \n   <td><strong>DITHER_FLAG</strong><br />在绘制时启用抖动的标志。</td> \n  </tr> \n  <tr> \n   <td>int</td> \n   <td><strong>FILTER_BITMAP_FLAG</strong><br />绘制标志，在缩放的位图上启用双线性采样。</td> \n  </tr> \n </tbody> \n</table> \n<h3 id=\"13-构造方法\">1.3 构造方法</h3> \n<table> \n <thead> \n  <tr> \n   <th>构造方法</th> \n   <th>摘要</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>Paint()</td> \n   <td>使用默认设置创建一个新画笔。</td> \n  </tr> \n  <tr> \n   <td>Paint(int flags)</td> \n   <td>创建一个新画笔并提供一些特殊设置(通过 flags 参数)。</td> \n  </tr> \n  <tr> \n   <td>Paint(Paint paint)</td> \n   <td>创建一个新画笔，并使用指定画笔参数初始化。</td> \n  </tr> \n </tbody> \n</table> \n<h3 id=\"14-公开方法\">1.4 公开方法</h3> \n<p>画笔有 100 个左右的公开方法，限于篇幅，在本文中只会列举一部分方法，其余的内容，则放置于后续文章中再详细介绍。</p> \n<table> \n <thead> \n  <tr> \n   <th>返回值</th> \n   <th>简介</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>int</td> \n   <td><strong>getFlags()</strong><br />获取画笔相关的一些设置(标志)。</td> \n  </tr> \n  <tr> \n   <td>int</td> \n   <td><strong>getFlags()</strong><br />获取画笔相关的一些设置(标志)。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>setFlags(int flags)</strong><br />设置画笔的标志位。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>set(Paint src)</strong><br />复制 src 的画笔设置。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>reset()</strong><br />将画笔恢复为默认设置。</td> \n  </tr> \n  <tr> \n   <td>int</td> \n   <td><strong>getAlpha()</strong><br />只返回颜色的alpha值。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>setAlpha(int a)</strong><br />设置透明度。</td> \n  </tr> \n  <tr> \n   <td>int</td> \n   <td><strong>getColor()</strong><br />返回画笔的颜色。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>setColor(int color)</strong><br />设置颜色。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>setARGB(int a, int r, int g, int b)</strong><br />设置带透明通道的颜色。</td> \n  </tr> \n  <tr> \n   <td>float</td> \n   <td><strong>getStrokeWidth()</strong><br />返回描边的宽度。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>setStrokeWidth(float width)</strong><br />设置线条宽度。</td> \n  </tr> \n  <tr> \n   <td>Paint.Style</td> \n   <td><strong>getStyle()</strong><br />返回paint的样式，用于控制如何解释几何元素（除了drawBitmap，它总是假定为FILL_STYLE）。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>setStyle(Paint.Style style)</strong><br />设置画笔绘制模式(填充，描边，或两者均有)。</td> \n  </tr> \n  <tr> \n   <td>Paint.Cap</td> \n   <td><strong>getStrokeCap()</strong><br />返回paint的Cap，控制如何处理描边线和路径的开始和结束。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>setStrokeCap(Paint.Cap cap)</strong><br />设置线帽。</td> \n  </tr> \n  <tr> \n   <td>Paint.Join</td> \n   <td><strong>getStrokeJoin()</strong><br />返回画笔的笔触连接类型。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>setStrokeJoin(Paint.Join join)</strong><br />设置连接方式。</td> \n  </tr> \n  <tr> \n   <td>float</td> \n   <td><strong>getStrokeMiter()</strong><br />返回画笔的笔触斜接值。用于在连接角度锐利时控制斜接连接的行为。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>setStrokeMiter(float miter)</strong><br />设置画笔的笔触斜接值。用于在连接角度锐利时控制斜接连接的行为。</td> \n  </tr> \n  <tr> \n   <td>PathEffect</td> \n   <td><strong>getPathEffect()</strong><br />获取画笔的 patheffect 对象。</td> \n  </tr> \n  <tr> \n   <td>PathEffect</td> \n   <td><strong>setPathEffect(PathEffect effect)</strong><br />设置 Path 效果。</td> \n  </tr> \n  <tr> \n   <td>boolean</td> \n   <td><strong>getFillPath(Path src, Path dst)</strong><br />将任何/所有效果（patheffect，stroking）应用于src，并将结果返回到dst。<br />结果是使用此画笔绘制绘制 src 将与使用默认画笔绘制绘制 dst 相同（至少从几何角度来说是这样的）。</td> \n  </tr> \n </tbody> \n</table> \n<h2 id=\"2-画笔介绍\">2. 画笔介绍</h2> \n<p>由于画笔需要控制的内容也相当的多，因此它内部包含了相当多的属性变量，配置起来也相当繁杂，不过比较好的是，画笔会提供一套默认设置来供我们使用。例如，创建一个新画笔，这个新画笔已经默认设置了绘制颜色为黑色，绘制模式为填充。</p> \n<h3 id=\"21-画笔基本设置\">2.1 画笔基本设置</h3> \n<p>要使用画笔就要会创建画笔，创建一个画笔是非常简单的，在之前的文章中也有过简单的介绍。它有三种创建方法，如下：</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 1.创建一个默认画笔，使用默认的配置</span>\n<span class=\"n\">Paint</span><span class=\"o\">()</span>\n<span class=\"c1\">// 2.创建一个新画笔，并通过 flags 参数进行配置。</span>\n<span class=\"n\">Paint</span><span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">flags</span><span class=\"o\">)</span>\n<span class=\"c1\">// 3.创建一个新画笔，并复制参数中画笔的设置。</span>\n<span class=\"n\">Paint</span><span class=\"o\">(</span><span class=\"n\">Paint</span> <span class=\"n\">paint</span><span class=\"o\">)</span>\n</code></pre> \n</div> \n<p>第1种方式创建默认画笔的方式相信大家都会。</p> \n<p>第2种方式如果设置 flags 为 0 创建出来和默认画笔也是相同的，至于 flags 参数可用设置哪些内容，可以参考最上面的常量表格，里面的参数都是可以设置的，如果需要设置多个参数，参数之间用 <code class=\"highlighter-rouge\">|</code> 进行连接即可。如下：</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"n\">Paint</span> <span class=\"n\">paint</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Paint</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">ANTI_ALIAS_FLAG</span> <span class=\"o\">|</span> <span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">DITHER_FLAG</span><span class=\"o\">);</span> \n</code></pre> \n</div> \n<p>第3种方式是根据已有的画笔复制一个画笔，就是将已有画笔的所有属性都复制到新画笔种，也比较容易理解：</p> \n<div class=\"highlighter-rouge\">\n <pre class=\"highlight\"><code>Paint paintCopy = new Paint(paint);\n</code></pre> \n</div> \n<blockquote> \n <p>复制后的画笔是一个全新的画笔，对复制后的画笔进行任何修改调整都不会影响到被复制的画笔。</p> \n</blockquote> \n<p>你可以观察下面的测试代码来了解以上的3种创建方式。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"n\">Paint</span> <span class=\"n\">paint1</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Paint</span><span class=\"o\">();</span>\n<span class=\"n\">Log</span><span class=\"o\">.</span><span class=\"na\">i</span><span class=\"o\">(</span><span class=\"n\">TAG</span><span class=\"o\">,</span> <span class=\"s\">\"paint1 isAntiAlias = \"</span> <span class=\"o\">+</span> <span class=\"n\">paint1</span><span class=\"o\">.</span><span class=\"na\">isAntiAlias</span><span class=\"o\">());</span>\n<span class=\"n\">Log</span><span class=\"o\">.</span><span class=\"na\">i</span><span class=\"o\">(</span><span class=\"n\">TAG</span><span class=\"o\">,</span> <span class=\"s\">\"paint1 isDither = \"</span> <span class=\"o\">+</span> <span class=\"n\">paint1</span><span class=\"o\">.</span><span class=\"na\">isDither</span><span class=\"o\">());</span>\n\n<span class=\"n\">Paint</span> <span class=\"n\">paint2</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Paint</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">ANTI_ALIAS_FLAG</span> <span class=\"o\">|</span> <span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">DITHER_FLAG</span><span class=\"o\">);</span>\n<span class=\"n\">Log</span><span class=\"o\">.</span><span class=\"na\">i</span><span class=\"o\">(</span><span class=\"n\">TAG</span><span class=\"o\">,</span> <span class=\"s\">\"paint2 isAntiAlias = \"</span> <span class=\"o\">+</span> <span class=\"n\">paint2</span><span class=\"o\">.</span><span class=\"na\">isAntiAlias</span><span class=\"o\">());</span>\n<span class=\"n\">Log</span><span class=\"o\">.</span><span class=\"na\">i</span><span class=\"o\">(</span><span class=\"n\">TAG</span><span class=\"o\">,</span> <span class=\"s\">\"paint2 isDither = \"</span> <span class=\"o\">+</span> <span class=\"n\">paint2</span><span class=\"o\">.</span><span class=\"na\">isDither</span><span class=\"o\">());</span>\n\n<span class=\"n\">Paint</span> <span class=\"n\">paint3</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Paint</span><span class=\"o\">(</span><span class=\"n\">paint2</span><span class=\"o\">);</span>\n<span class=\"n\">paint3</span><span class=\"o\">.</span><span class=\"na\">setAntiAlias</span><span class=\"o\">(</span><span class=\"kc\">false</span><span class=\"o\">);</span>\n<span class=\"n\">Log</span><span class=\"o\">.</span><span class=\"na\">i</span><span class=\"o\">(</span><span class=\"n\">TAG</span><span class=\"o\">,</span> <span class=\"s\">\"paint3 isAntiAlias = \"</span> <span class=\"o\">+</span> <span class=\"n\">paint3</span><span class=\"o\">.</span><span class=\"na\">isAntiAlias</span><span class=\"o\">());</span>\n<span class=\"n\">Log</span><span class=\"o\">.</span><span class=\"na\">i</span><span class=\"o\">(</span><span class=\"n\">TAG</span><span class=\"o\">,</span> <span class=\"s\">\"paint3 isDither = \"</span> <span class=\"o\">+</span> <span class=\"n\">paint3</span><span class=\"o\">.</span><span class=\"na\">isDither</span><span class=\"o\">());</span>\n</code></pre> \n</div> \n<p>输出结果：</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"n\">paint1</span> <span class=\"n\">isAntiAlias</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">paint1</span> <span class=\"n\">isDither</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n    \n<span class=\"n\">paint2</span> <span class=\"n\">isAntiAlias</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n<span class=\"n\">paint2</span> <span class=\"n\">isDither</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n    \n<span class=\"n\">paint3isAntiAlias</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">paint3</span> <span class=\"n\">isDither</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n</code></pre> \n</div> \n<p>画笔在创建之后依旧可以调整，上面的第2种和第3种创建方式，进行的参数设置，在画笔创建完成后依旧可以进行。通过如下的方法：</p> \n<table> \n <thead> \n  <tr> \n   <th>返回值</th> \n   <th>简介</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>int</td> \n   <td><strong>getFlags()</strong><br />获取画笔相关的一些设置(标志)。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>setFlags(int flags)</strong><br />设置画笔的标志位。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>set(Paint src)</strong><br />复制 src 的画笔设置。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>reset()</strong><br />将画笔恢复为默认设置。</td> \n  </tr> \n </tbody> \n</table> \n<p>不过<strong>并不建议使用 setFlags 方法，这是因为 setFlags 方法会覆盖之前设置的内容</strong>，例如：</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"n\">Paint</span> <span class=\"n\">paint</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Paint</span><span class=\"o\">();</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setFlags</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">ANTI_ALIAS_FLAG</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setFlags</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">DITHER_FLAG</span><span class=\"o\">);</span>\n<span class=\"n\">Log</span><span class=\"o\">.</span><span class=\"na\">i</span><span class=\"o\">(</span><span class=\"n\">TAG</span><span class=\"o\">,</span> <span class=\"s\">\"paint isAntiAlias = \"</span> <span class=\"o\">+</span> <span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">isAntiAlias</span><span class=\"o\">());</span>\n<span class=\"n\">Log</span><span class=\"o\">.</span><span class=\"na\">i</span><span class=\"o\">(</span><span class=\"n\">TAG</span><span class=\"o\">,</span> <span class=\"s\">\"paint isDither = \"</span> <span class=\"o\">+</span> <span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">isDither</span><span class=\"o\">());</span>\n</code></pre> \n</div> \n<p>输出结果：</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"n\">paint</span> <span class=\"n\">isAntiAlias</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">paint</span> <span class=\"n\">isDither</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n</code></pre> \n</div> \n<blockquote> \n <p>从结果可以看出，只有最后一次设置的内容有效，之前设置的所有内容都会被覆盖掉。因此不推荐使用。</p> \n <p>如果了解 Google 工程师比较喜欢的编码规范就可以知道原因是什么，最终的flags是由多个flag用”或(<code class=\"highlighter-rouge\">|</code>)”连接起来的，也就是一个变量，如果直接使用 set 方法，自然是会覆盖掉之前设置的内容的。如果想要调整 flag 个人建议还是使用 paint 提供的一些封装方法，如：<code class=\"highlighter-rouge\">setDither(true)</code>，而不要自己手动去直接操作 flag。</p> \n <p>如果有人对 flags 的存储方式感兴趣可以看看这个例子，假如：0x0001 表示类型A， 0x0010 表示类型B，0x0100 表示类型C，0x1000 表示类型D，那么当类型ABD同时存在，但C不存在时时只用存储 0x1011 即可，相比于使用4个 boolean 值来说，这种方案可以显著的节省内存空间的占用，并且用户设置起来也比较方便，可以使用或”|“同时设置多个类型。当然弊端也是有的，那就是单独更改其中一个参数时时稍微麻烦一点，需要进行一些位运算。</p> \n</blockquote> \n<p><strong>使用 set(Paint src) 可以复制一个画笔，但需要注意的是，如果调用了这个方法，当前画笔的所有设置都会被覆盖掉，而替换为所选画笔的设置。</strong></p> \n<p><strong>如果想将画笔重置为初始状态，那就调用 <code class=\"highlighter-rouge\">reset()</code> 方法，该方法会让画笔的所有设置都还原为初始状态，调用该方法后得到的画笔和刚创建时的状态是一样的。</strong></p> \n<h3 id=\"22-画笔颜色\">2.2 画笔颜色</h3> \n<p>这个是最常用的方法，它相关的方法如下；</p> \n<table> \n <thead> \n  <tr> \n   <th>返回值</th> \n   <th>简介</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>int</td> \n   <td><strong>getAlpha()</strong><br />只返回颜色的alpha值。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>setAlpha(int a)</strong><br />设置透明度。</td> \n  </tr> \n  <tr> \n   <td>int</td> \n   <td><strong>getColor()</strong><br />返回画笔的颜色。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>setColor(int color)</strong><br />设置颜色。</td> \n  </tr> \n  <tr> \n   <td>void</td> \n   <td><strong>setARGB(int a, int r, int g, int b)</strong><br />设置带透明通道的颜色。</td> \n  </tr> \n </tbody> \n</table> \n<p>Android 中有 1 个透明通道(Alpha)和 3 个色彩通道(RGB)，其中 Alpha 通道可以单独设置。通过 <strong>getAlpha()</strong> 和 <strong>setAlpha(int a)</strong> 方法可以单独调整透明通道，其中 <strong>setAlpha(int a)</strong> 中参数的取值范围是 0 - 255，即对应 16 进制中的 0x00 - 0xFF。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 下面两种设置方式是等价的，一种是 10 进制，一种是 16 进制</span>\n<span class=\"n\">paint1</span><span class=\"o\">.</span><span class=\"na\">setAlpha</span><span class=\"o\">(</span><span class=\"mi\">204</span><span class=\"o\">);</span>\n<span class=\"n\">paint2</span><span class=\"o\">.</span><span class=\"na\">setAlpha</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"n\">xCC</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p>同理，<strong>setARGB(int a, int r, int g, int b)</strong> 的 4 个参数的取值范围也是 0 - 255，对应 0x00 - 0xFF，下面的设置同样是等价的。</p> \n<div class=\"highlighter-rouge\">\n <pre class=\"highlight\"><code>paint1.setARGB(204, 255, 255, 0);\npaint2.setARGB(0xCC, 0xFF, 0xFF, 0x00);\n</code></pre> \n</div> \n<p>当然，这样设置起来比较麻烦，我们最常用的还是直接使用 <strong>setColor(int color)</strong> 方法，它接受一个 int 类型的参数来表示颜色，我们既可以使用系统内置的一些标准颜色，也可以使用自定义的一些颜色，如下：</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setColor</span><span class=\"o\">(</span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"na\">GREEN</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setColor</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"n\">xFFE2A588</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><strong>注意：</strong></p> \n<p>在使用 setColor 方法时，所设置的颜色必须是 ARGB 同时存在的，通常每个通道用两位16进制数值表示，如 0xFFE2A588。总共 8 位，其中 FF 表示 Alpha 通道。</p> \n<p>如果不设置 Alpha 通道，则默认Alpha通道为 0，即完全透明，如：0xE2A588，总共 6 位，没有 Alpha 通道，如果这样设置，则什么颜色也绘制不出来。</p> \n<p>同样需要注意的是，setColor 不能直接引用资源，不能这样使用：<code class=\"highlighter-rouge\">paint.setColor(R.color.colorPrimary);</code> 如果你这样使用了，编译器会报错的。如果想要使用预定义的颜色资源，可以像下面这样调用：</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"kt\">int</span> <span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"na\">getResources</span><span class=\"o\">().</span><span class=\"na\">getColor</span><span class=\"o\">(</span><span class=\"n\">R</span><span class=\"o\">.</span><span class=\"na\">color</span><span class=\"o\">.</span><span class=\"na\">colorPrimary</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setColor</span><span class=\"o\">(</span><span class=\"n\">color</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<h3 id=\"24-画笔宽度\">2.4 画笔宽度</h3> \n<p>画笔宽度，就是画笔的粗细，它通过下面的方式设置。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 将画笔设置为描边</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStyle</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">STROKE</span><span class=\"o\">);</span>\n<span class=\"c1\">// 设置线条宽度</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStrokeWidth</span><span class=\"o\">(</span><span class=\"mi\">120</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><strong>注意： 这条线的宽度是同时向两边进行扩展的，例如绘制一个圆时，将其宽度设置为 120 则会向外扩展 60 ，向内缩进 60，如下图所示。</strong></p> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-stroke-0.png\" alt=\"paint-width\" /></p> \n<p><strong>因此如果绘制的内容比较靠近视图边缘，使用了比较粗的描边的情况下，一定要注意和边缘保持一定距离(<code class=\"highlighter-rouge\">边距&gt;StrokeWidth/2</code>) 以保证内容不会被剪裁掉。</strong></p> \n<p>如下面这种情况，直接绘制一个矩形，如果不考虑画笔宽度，则绘制的内容就可能不正常。</p> \n<p><strong>在一个 1000x1000 大小的画布上绘制与个大小为 500x500 ，宽度为 100 的矩形。</strong></p> \n<blockquote> \n <p>灰色部分为画布大小。 <br /> 红色为分割线，将画笔分为均等的四份。<br /> 蓝色为矩形。</p> \n</blockquote> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStrokeWidth</span><span class=\"o\">(</span><span class=\"mi\">100</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setColor</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"n\">xFF7FC2D8</span><span class=\"o\">);</span>\n<span class=\"n\">Rect</span> <span class=\"n\">rect</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Rect</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">500</span><span class=\"o\">,</span> <span class=\"mi\">500</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawRect</span><span class=\"o\">(</span><span class=\"n\">rect</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-stroke-1.png\" alt=\"paing-stroke-0\" /></p> \n<p>如果考虑到画笔宽度，需要绘制一个大小刚好填充满左上角区域的矩形，那么实际绘制的矩形就要小一些，(<strong>如果只是绘制一个矩形的话，可以将矩形向内缩小画笔宽度的一半</strong>) 这样绘制出来就是符合预期的。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStrokeWidth</span><span class=\"o\">(</span><span class=\"mi\">100</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setColor</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"n\">xFF7FC2D8</span><span class=\"o\">);</span>\n<span class=\"n\">Rect</span> <span class=\"n\">rect</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Rect</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">500</span><span class=\"o\">,</span> <span class=\"mi\">500</span><span class=\"o\">);</span>\n<span class=\"n\">rect</span><span class=\"o\">.</span><span class=\"na\">inset</span><span class=\"o\">(</span><span class=\"mi\">50</span><span class=\"o\">,</span> <span class=\"mi\">50</span><span class=\"o\">);</span>     <span class=\"c1\">// 注意这里，向内缩小半个宽度</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawRect</span><span class=\"o\">(</span><span class=\"n\">rect</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-stroke-2.png\" alt=\"paing-stroke-1\" /></p> \n<blockquote> \n <p><strong>这里只是用矩形作为例子说明，事实上，绘制任何图形，只要有描边的，就要考虑描边宽度占用的空间，需要适当的缩小图形，以保证其可以完整的显示出来。</strong></p> \n <p><strong>注意：在实际的自定义 View 中也不要忽略 padding 占用的空间哦。</strong></p> \n</blockquote> \n<h4 id=\"hairline-mode-发际线模式\"><strong>hairline mode (发际线模式)：</strong></h4> \n<p>在设置画笔宽度的的方法有如下注释：</p> \n<div class=\"highlighter-rouge\">\n <pre class=\"highlight\"><code>Set the width for stroking.\nPass 0 to stroke in hairline mode.\nHairlines always draws a single pixel independent of the canva's matrix.\n</code></pre> \n</div> \n<p>在画笔宽度为 0 的情况下，使用 drawLine 或者使用描边模式(STROKE)也可以绘制出内容。只是绘制出的内容始终是 1 像素，不受画布缩放的影响。该模式被称为<strong>hairline mode (发际线模式)</strong>。</p> \n<blockquote> \n <p>如果你设置了画笔宽度为 1 像素，那么如果画布放大到 2 倍，1 像素会变成 2 像素。但如果是 0 像素，那么不论画布如何缩放，绘制出来的宽度依旧为 1 像素。</p> \n</blockquote> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 缩放 5 倍</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">scale</span><span class=\"o\">(</span><span class=\"mi\">5</span><span class=\"o\">,</span> <span class=\"mi\">5</span><span class=\"o\">,</span> <span class=\"mi\">500</span><span class=\"o\">,</span> <span class=\"mi\">500</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 0 像素 (Hairline Mode)</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStrokeWidth</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setColor</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"n\">xFF7FC2D8</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawCircle</span><span class=\"o\">(</span><span class=\"mi\">500</span><span class=\"o\">,</span> <span class=\"mi\">455</span><span class=\"o\">,</span> <span class=\"mi\">40</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 1 像素</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStrokeWidth</span><span class=\"o\">(</span><span class=\"mi\">1</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setColor</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"n\">xFF7FC2D8</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawCircle</span><span class=\"o\">(</span><span class=\"mi\">500</span><span class=\"o\">,</span> <span class=\"mi\">545</span><span class=\"o\">,</span> <span class=\"mi\">40</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p>可以看到，在放大 5 倍的情况下，1 像素已经变成了 5 像素，但 hairline mode 绘制出来依旧是 1 像素。</p> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-stroke-3.png\" alt=\"paint-stroke-3\" /></p> \n<h3 id=\"23-画笔模式\">2.3 画笔模式</h3> \n<p>这里的画笔模式(<strong>Paint.Style</strong>)就是指绘制一个图形时，是绘制边缘轮廓，绘制内容区域还是两者都绘制，它有三种模式。</p> \n<table> \n <thead> \n  <tr> \n   <th>Style</th> \n   <th>简介</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>Paint.Style.FILL</td> \n   <td>填充内容，也是画笔的默认模式。</td> \n  </tr> \n  <tr> \n   <td>Paint.Style.STROKE</td> \n   <td>描边，只绘制图形轮廓。</td> \n  </tr> \n  <tr> \n   <td>Paint.Style.FILL_AND_STROKE</td> \n   <td>描边+填充，同时绘制轮廓和填充内容。</td> \n  </tr> \n </tbody> \n</table> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">//填充</span>\n<span class=\"n\">mPaint</span><span class=\"o\">.</span><span class=\"na\">setStyle</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">FILL</span><span class=\"o\">);</span>\n<span class=\"c1\">// 描边</span>\n<span class=\"n\">mPaint</span><span class=\"o\">.</span><span class=\"na\">setStyle</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">STROKE</span><span class=\"o\">);</span>\n<span class=\"c1\">// 描边+填充</span>\n<span class=\"n\">mPaint</span><span class=\"o\">.</span><span class=\"na\">setStyle</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">FILL_AND_STROKE</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><strong>示例程序：</strong></p> \n<p>用一个简单的例子说明一下不同模式的区别。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 画笔初始设置</span>\n<span class=\"n\">Paint</span> <span class=\"n\">paint</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Paint</span><span class=\"o\">();</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setAntiAlias</span><span class=\"o\">(</span><span class=\"kc\">true</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStrokeWidth</span><span class=\"o\">(</span><span class=\"mi\">50</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setColor</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"n\">xFF7FC2D8</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 填充，默认</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStyle</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">FILL</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawCircle</span><span class=\"o\">(</span><span class=\"mi\">500</span><span class=\"o\">,</span> <span class=\"mi\">200</span><span class=\"o\">,</span> <span class=\"mi\">100</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 描边</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStyle</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">STROKE</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawCircle</span><span class=\"o\">(</span><span class=\"mi\">500</span><span class=\"o\">,</span> <span class=\"mi\">500</span><span class=\"o\">,</span> <span class=\"mi\">100</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 描边 + 填充</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStyle</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">FILL_AND_STROKE</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawCircle</span><span class=\"o\">(</span><span class=\"mi\">500</span><span class=\"o\">,</span> <span class=\"mi\">800</span><span class=\"o\">,</span> <span class=\"mi\">100</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-style.png\" alt=\"paint-style\" /></p> \n<h3 id=\"25-画笔线帽\">2.5 画笔线帽</h3> \n<p>画笔线帽(<strong>Paint.Cap</strong>)用于指定线段开始和结束时的效果。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 它通过下面方式设置</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStrokeCap</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Cap</span><span class=\"o\">.</span><span class=\"na\">ROUND</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p>Android 中有三种线帽可供选择。</p> \n<table> \n <thead> \n  <tr> \n   <th>Cap</th> \n   <th>简介</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>Paint.Cap.BUTT</td> \n   <td>无线帽，也是默认类型。</td> \n  </tr> \n  <tr> \n   <td>Paint.Cap.SQUARE</td> \n   <td>以线条宽度为大小，在开头和结尾分别添加半个正方形。</td> \n  </tr> \n  <tr> \n   <td>Paint.Cap.ROUND</td> \n   <td>以线条宽度为直径，在开头和结尾分别添加一个半圆。</td> \n  </tr> \n </tbody> \n</table> \n<p>我们用以下代码来测试线帽。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 画笔初始设置</span>\n<span class=\"n\">Paint</span> <span class=\"n\">paint</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Paint</span><span class=\"o\">();</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStyle</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">STROKE</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setAntiAlias</span><span class=\"o\">(</span><span class=\"kc\">true</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStrokeWidth</span><span class=\"o\">(</span><span class=\"mi\">80</span><span class=\"o\">);</span>\n<span class=\"kt\">float</span> <span class=\"n\">pointX</span> <span class=\"o\">=</span> <span class=\"mi\">200</span><span class=\"o\">;</span>\n<span class=\"kt\">float</span> <span class=\"n\">lineStartX</span> <span class=\"o\">=</span> <span class=\"mi\">320</span><span class=\"o\">;</span>\n<span class=\"kt\">float</span> <span class=\"n\">lineStopX</span> <span class=\"o\">=</span> <span class=\"mi\">800</span><span class=\"o\">;</span>\n<span class=\"kt\">float</span> <span class=\"n\">y</span><span class=\"o\">;</span>\n\n<span class=\"c1\">// 默认</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"mi\">200</span><span class=\"o\">;</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawPoint</span><span class=\"o\">(</span><span class=\"n\">pointX</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawLine</span><span class=\"o\">(</span><span class=\"n\">lineStartX</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">lineStopX</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 无线帽(BUTT)</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"mi\">400</span><span class=\"o\">;</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStrokeCap</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Cap</span><span class=\"o\">.</span><span class=\"na\">BUTT</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawPoint</span><span class=\"o\">(</span><span class=\"n\">pointX</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawLine</span><span class=\"o\">(</span><span class=\"n\">lineStartX</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">lineStopX</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 方形线帽(SQUARE)</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"mi\">600</span><span class=\"o\">;</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStrokeCap</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Cap</span><span class=\"o\">.</span><span class=\"na\">SQUARE</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawPoint</span><span class=\"o\">(</span><span class=\"n\">pointX</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawLine</span><span class=\"o\">(</span><span class=\"n\">lineStartX</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">lineStopX</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 圆形线帽(ROUND)</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"mi\">800</span><span class=\"o\">;</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStrokeCap</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Cap</span><span class=\"o\">.</span><span class=\"na\">ROUND</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawPoint</span><span class=\"o\">(</span><span class=\"n\">pointX</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawLine</span><span class=\"o\">(</span><span class=\"n\">lineStartX</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">lineStopX</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-cap.png\" alt=\"paint-cap\" /></p> \n<p><strong>注意：</strong></p> \n<ol> \n <li>画笔默认是无线帽的，即 BUTT。</li> \n <li>Cap 也会影响到点的绘制，在 Round 的状态下绘制的点是圆的。</li> \n <li>在绘制线条时，线帽时在线段外的，如上图红色部分所显示的内容就是线帽。</li> \n <li><strong>上图中红色的线帽是用特殊方式展示出来的，直接绘制的情况下，线帽颜色和线段颜色相同。</strong></li> \n</ol> \n<h3 id=\"26-线段连接方式拐角类型\">2.6 线段连接方式(拐角类型)</h3> \n<p>画笔的连接方式(<strong>Paint.Join</strong>)是指两条连接起来的线段拐角显示方式。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 通过下面方式设置连接类型</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStrokeJoin</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Join</span><span class=\"o\">.</span><span class=\"na\">ROUND</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p>它同样有三种样式：</p> \n<table> \n <thead> \n  <tr> \n   <th>Cap</th> \n   <th>简介</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>Paint.Join.MITER</td> \n   <td>尖角 (默认模式)</td> \n  </tr> \n  <tr> \n   <td>Paint.Join.BEVEL</td> \n   <td>平角</td> \n  </tr> \n  <tr> \n   <td>Paint.Join.ROUND</td> \n   <td>圆角</td> \n  </tr> \n </tbody> \n</table> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-join-1.png\" alt=\"paint-join-1\" /></p> \n<p>通过效果图可以看出几种不同模式的补偿规则。</p> \n<h3 id=\"27-斜接模式长度限制\">2.7 斜接模式长度限制</h3> \n<p>Android 中线段连接方式默认是 MITER，即在拐角处延长外边缘，直到相交位置。</p> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-join-2.png\" alt=\"paint-join-2\" /></p> \n<p>根据数学原理我们可知，如果夹角足够小，接近于零，那么交点位置就会在延长线上无限远的位置。 <strong>为了避免这种情况，如果连接模式为 MITER(尖角)，当连接角度小于一定程度时会自动将连接模式转换为 BEVEL(平角)。</strong></p> \n<p>那么多大的角度算是比较小呢？根据资料显示，这个角度大约是 28.96°，即 MITER(尖角) 模式下小于该角度的线段连接方式会自动转换为 BEVEL(平角) 模式。</p> \n<p>我们可以通过下面的方法来更改默认限制：</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 设置 Miter Limit，参数并不是角度</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStrokeMiter</span><span class=\"o\">(</span><span class=\"mi\">10</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<blockquote> \n <p><strong>注意：</strong></p> \n <p><strong>参数 miter 就是对长度的限制，它可以通过这个公式计算：miter = 1 / sin ( angle / 2 ) ， angel 是两条线的形成的夹角。</strong></p> \n <p><strong>其中 miter 的数值应该 &gt;= 0，小于 0 的数值无效，其默认数值是 4，下表是 miter 和角度的一些对应关系。</strong></p> \n <table> \n  <thead> \n   <tr> \n    <th style=\"text-align: center\">miter</th> \n    <th style=\"text-align: center\">angle</th> \n   </tr> \n  </thead> \n  <tbody> \n   <tr> \n    <td style=\"text-align: center\">10</td> \n    <td style=\"text-align: center\">11.48</td> \n   </tr> \n   <tr> \n    <td style=\"text-align: center\">9</td> \n    <td style=\"text-align: center\">12.76</td> \n   </tr> \n   <tr> \n    <td style=\"text-align: center\">8</td> \n    <td style=\"text-align: center\">14.36</td> \n   </tr> \n   <tr> \n    <td style=\"text-align: center\">7</td> \n    <td style=\"text-align: center\">16.43</td> \n   </tr> \n   <tr> \n    <td style=\"text-align: center\">6</td> \n    <td style=\"text-align: center\">19.19</td> \n   </tr> \n   <tr> \n    <td style=\"text-align: center\">5</td> \n    <td style=\"text-align: center\">23.07</td> \n   </tr> \n   <tr> \n    <td style=\"text-align: center\">4</td> \n    <td style=\"text-align: center\">28.96</td> \n   </tr> \n   <tr> \n    <td style=\"text-align: center\">3</td> \n    <td style=\"text-align: center\">38.94</td> \n   </tr> \n   <tr> \n    <td style=\"text-align: center\">2</td> \n    <td style=\"text-align: center\">60</td> \n   </tr> \n   <tr> \n    <td style=\"text-align: center\">1</td> \n    <td style=\"text-align: center\">180</td> \n   </tr> \n  </tbody> \n </table> \n <p>关于这部分内容可以在 <a href=\"https://skia.org/user/api/SkPaint_Reference#Miter_Limit\">SkPaint_Reference</a> 查看到。</p> \n</blockquote> \n<h3 id=\"28-patheffect\">2.8 PathEffect</h3> \n<p><strong>PathEffect 在绘制之前修改几何路径，它可以实现划线，自定义填充效果和自定义笔触效果。PathEffect 虽然名字看起来是和 Path 相关的，但实际上它的效果可以作用于 Canvas 的各种绘制，例如 drawLine， drawRect，drawPath 等。</strong></p> \n<blockquote> \n <p><strong>注意： PathEffect 在部分情况下不支持硬件加速，需要关闭硬件加速才能正常使用：</strong></p> \n <ol> \n  <li><code class=\"highlighter-rouge\">Canvas.drawLine()</code> 和 <code class=\"highlighter-rouge\">Canvas.drawLines()</code> 方法画直线时，<code class=\"highlighter-rouge\">setPathEffect()</code> 是不支持硬件加速的；</li> \n  <li><code class=\"highlighter-rouge\">PathDashPathEffect</code> 对硬件加速的支持也有问题，所以当使用 <code class=\"highlighter-rouge\">PathDashPathEffect</code> 的时候，最好也把硬件加速关了。</li> \n </ol> \n</blockquote> \n<p>在 Android 中有 6 种 PathEffect，4 种基础效果，2 种叠加效果。</p> \n<table> \n <thead> \n  <tr> \n   <th>PathEffect</th> \n   <th>简介</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>CornerPathEffect</td> \n   <td>圆角效果，将尖角替换为圆角。</td> \n  </tr> \n  <tr> \n   <td>DashPathEffect</td> \n   <td>虚线效果，用于各种虚线效果。</td> \n  </tr> \n  <tr> \n   <td>PathDashPathEffect</td> \n   <td>Path 虚线效果，虚线中的间隔使用 Path 代替。</td> \n  </tr> \n  <tr> \n   <td>DiscretePathEffect</td> \n   <td>让路径分段随机偏移。</td> \n  </tr> \n  <tr> \n   <td>SumPathEffect</td> \n   <td>两个 PathEffect 效果组合，同时绘制两种效果。</td> \n  </tr> \n  <tr> \n   <td>ComposePathEffect</td> \n   <td>两个 PathEffect 效果叠加，先使用效果1，之后使用效果2。</td> \n  </tr> \n </tbody> \n</table> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 通过 setPathEffect 来设置效果</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setPathEffect</span><span class=\"o\">(</span><span class=\"n\">effect</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<h4 id=\"281-cornerpatheffect\">2.8.1 CornerPathEffect</h4> \n<p>CornerPathEffect 可以将线段之间的任何锐角替换为指定半径的圆角(适用于 STROKE 或 FILL 样式)。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// radius 为圆角半径大小，半径越大，path 越平滑。</span>\n<span class=\"n\">CornerPathEffect</span><span class=\"o\">(</span><span class=\"n\">radius</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-corner-effect.png\" alt=\"paint-corner-effect\" /></p> \n<p>**使用 CornerPathEffect，可以实现圆角矩形效果。 但是在一些特殊情况下，它和圆角矩形的显示效果还是稍有不同的，例如下面这种情况：</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"n\">RectF</span> <span class=\"n\">rect</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RectF</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">600</span><span class=\"o\">,</span> <span class=\"mi\">600</span><span class=\"o\">);</span>\n<span class=\"kt\">float</span> <span class=\"n\">corner</span> <span class=\"o\">=</span> <span class=\"mi\">300</span><span class=\"o\">;</span>\n\n<span class=\"c1\">// 使用 CornerPathEffect 实现类圆角效果</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">((</span><span class=\"mi\">1080</span> <span class=\"o\">-</span> <span class=\"mi\">600</span><span class=\"o\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"o\">,</span> <span class=\"o\">(</span><span class=\"mi\">1920</span> <span class=\"o\">/</span> <span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"mi\">600</span><span class=\"o\">)</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setPathEffect</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">CornerPathEffect</span><span class=\"o\">(</span><span class=\"n\">corner</span><span class=\"o\">));</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawRect</span><span class=\"o\">(</span><span class=\"n\">rect</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 直接绘制圆角矩形</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1920</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setPathEffect</span><span class=\"o\">(</span><span class=\"kc\">null</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawRoundRect</span><span class=\"o\">(</span><span class=\"n\">rect</span><span class=\"o\">,</span> <span class=\"n\">corner</span><span class=\"o\">,</span> <span class=\"n\">corner</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-corcer-effect-1.png\" alt=\"paint-corcer-effect-1\" /></p> \n<p>如上图所示，左侧是使用 CornerPathEffect 将矩形的边角变圆润的效果，右侧则是直接绘制圆角矩形的效果。我们知道，在绘制圆角矩形时，如果圆角足够大时，那么绘制出来就会是圆或者椭圆。但是使用 CornerPathEffect 时，不论圆角有多大，它也不会变成圆形或者椭圆。</p> \n<p><strong>CornerPathEffect 也可以让手绘效果更加圆润。</strong></p> \n<blockquote> \n <p>一些简单的绘图场景或者签名场景中，一般使用 Path 来保存用户的手指轨迹，通过连续的 lineTo 来记录用户手指划过的路径，但是直接的 LineTo 会让转角看起来非常生硬，而使用 CornerPathEffect 效果则可以快速的让轨迹圆润起来。</p> \n</blockquote> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-corcer-effect-2.gif\" alt=\"paint-corcer-effect-2\" /></p> \n<p>如上图，左侧是未经优化的原始路径，右侧是使用了 CornerPathEffect 效果后的路径。上图测试代码如下：</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">CornerPathEffectTestView</span> <span class=\"kd\">extends</span> <span class=\"n\">View</span> <span class=\"o\">{</span>\n    <span class=\"n\">Paint</span> <span class=\"n\">mPaint</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Paint</span><span class=\"o\">();</span>\n    <span class=\"n\">PathEffect</span> <span class=\"n\">mPathEffect</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">CornerPathEffect</span><span class=\"o\">(</span><span class=\"mi\">200</span><span class=\"o\">);</span>\n    <span class=\"n\">Path</span> <span class=\"n\">mPath</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Path</span><span class=\"o\">();</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">CornerPathEffectTestView</span><span class=\"o\">(</span><span class=\"n\">Context</span> <span class=\"n\">context</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">this</span><span class=\"o\">(</span><span class=\"n\">context</span><span class=\"o\">,</span> <span class=\"kc\">null</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"nf\">CornerPathEffectTestView</span><span class=\"o\">(</span><span class=\"n\">Context</span> <span class=\"n\">context</span><span class=\"o\">,</span> <span class=\"nd\">@Nullable</span> <span class=\"n\">AttributeSet</span> <span class=\"n\">attrs</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kd\">super</span><span class=\"o\">(</span><span class=\"n\">context</span><span class=\"o\">,</span> <span class=\"n\">attrs</span><span class=\"o\">);</span>\n        <span class=\"n\">mPaint</span><span class=\"o\">.</span><span class=\"na\">setStrokeWidth</span><span class=\"o\">(</span><span class=\"mi\">20</span><span class=\"o\">);</span>\n        <span class=\"n\">mPaint</span><span class=\"o\">.</span><span class=\"na\">setStyle</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">STROKE</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">onTouchEvent</span><span class=\"o\">(</span><span class=\"n\">MotionEvent</span> <span class=\"n\">event</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"k\">switch</span> <span class=\"o\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"na\">getActionMasked</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n            <span class=\"k\">case</span> <span class=\"n\">MotionEvent</span><span class=\"o\">.</span><span class=\"na\">ACTION_DOWN</span><span class=\"o\">:</span>\n                <span class=\"n\">mPath</span><span class=\"o\">.</span><span class=\"na\">reset</span><span class=\"o\">();</span>\n                <span class=\"n\">mPath</span><span class=\"o\">.</span><span class=\"na\">moveTo</span><span class=\"o\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"na\">getX</span><span class=\"o\">(),</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"na\">getY</span><span class=\"o\">());</span>\n                <span class=\"k\">break</span><span class=\"o\">;</span>\n            <span class=\"k\">case</span> <span class=\"n\">MotionEvent</span><span class=\"o\">.</span><span class=\"na\">ACTION_MOVE</span><span class=\"o\">:</span>\n                <span class=\"n\">mPath</span><span class=\"o\">.</span><span class=\"na\">lineTo</span><span class=\"o\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"na\">getX</span><span class=\"o\">(),</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"na\">getY</span><span class=\"o\">());</span>\n                <span class=\"k\">break</span><span class=\"o\">;</span>\n            <span class=\"k\">case</span> <span class=\"n\">MotionEvent</span><span class=\"o\">.</span><span class=\"na\">ACTION_CANCEL</span><span class=\"o\">:</span>\n            <span class=\"k\">case</span> <span class=\"n\">MotionEvent</span><span class=\"o\">.</span><span class=\"na\">ACTION_UP</span><span class=\"o\">:</span>\n                <span class=\"k\">break</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n        <span class=\"n\">postInvalidate</span><span class=\"o\">();</span>\n        <span class=\"k\">return</span> <span class=\"kc\">true</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">protected</span> <span class=\"kt\">void</span> <span class=\"nf\">onDraw</span><span class=\"o\">(</span><span class=\"n\">Canvas</span> <span class=\"n\">canvas</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n        <span class=\"kd\">super</span><span class=\"o\">.</span><span class=\"na\">onDraw</span><span class=\"o\">(</span><span class=\"n\">canvas</span><span class=\"o\">);</span>\n        <span class=\"c1\">// 绘制原始路径</span>\n        <span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">save</span><span class=\"o\">();</span>\n        <span class=\"n\">mPaint</span><span class=\"o\">.</span><span class=\"na\">setColor</span><span class=\"o\">(</span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"na\">BLACK</span><span class=\"o\">);</span>\n        <span class=\"n\">mPaint</span><span class=\"o\">.</span><span class=\"na\">setPathEffect</span><span class=\"o\">(</span><span class=\"kc\">null</span><span class=\"o\">);</span>\n        <span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawPath</span><span class=\"o\">(</span><span class=\"n\">mPath</span><span class=\"o\">,</span> <span class=\"n\">mPaint</span><span class=\"o\">);</span>\n        <span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">restore</span><span class=\"o\">();</span>\n\n        <span class=\"c1\">// 绘制带有效果的路径</span>\n        <span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">save</span><span class=\"o\">();</span>\n        <span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">getHeight</span><span class=\"o\">()</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"o\">);</span>\n        <span class=\"n\">mPaint</span><span class=\"o\">.</span><span class=\"na\">setColor</span><span class=\"o\">(</span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"na\">RED</span><span class=\"o\">);</span>\n        <span class=\"n\">mPaint</span><span class=\"o\">.</span><span class=\"na\">setPathEffect</span><span class=\"o\">(</span><span class=\"n\">mPathEffect</span><span class=\"o\">);</span>\n        <span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawPath</span><span class=\"o\">(</span><span class=\"n\">mPath</span><span class=\"o\">,</span> <span class=\"n\">mPaint</span><span class=\"o\">);</span>\n        <span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">restore</span><span class=\"o\">();</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre> \n</div> \n<h4 id=\"282-dashpatheffect\">2.8.2 DashPathEffect</h4> \n<p>DashPathEffect 用于实现虚线效果(适用于 STROKE 或 FILL_AND_STROKE 样式)。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// intervals：必须为偶数，用于控制显示和隐藏的长度。</span>\n<span class=\"c1\">// phase：相位。</span>\n<span class=\"n\">DashPathEffect</span><span class=\"o\">(</span><span class=\"kt\">float</span> <span class=\"n\">intervals</span><span class=\"o\">[],</span> <span class=\"kt\">float</span> <span class=\"n\">phase</span><span class=\"o\">)</span>\n</code></pre> \n</div> \n<table> \n <thead> \n  <tr> \n   <th>参数</th> \n   <th>简介</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>intervals[]</td> \n   <td>间隔，用于控制虚线显示长度和隐藏长度，它必须为偶数(且至少为 2 个)，按照[显示长度，隐藏长度，显示长度，隐藏长度]的顺序来显示。</td> \n  </tr> \n  <tr> \n   <td>phase</td> \n   <td>相位(和正余弦函数中的相位类似，周期为intervals长度总和)，也可以简单的理解为偏移量。</td> \n  </tr> \n </tbody> \n</table> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"n\">Path</span> <span class=\"n\">path_dash</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Path</span><span class=\"o\">();</span>\n<span class=\"n\">path_dash</span><span class=\"o\">.</span><span class=\"na\">lineTo</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1720</span><span class=\"o\">);</span>\n\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">save</span><span class=\"o\">();</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(</span><span class=\"mi\">980</span><span class=\"o\">,</span> <span class=\"mi\">100</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setPathEffect</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">DashPathEffect</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"kt\">float</span><span class=\"o\">[]{</span><span class=\"mi\">200</span><span class=\"o\">,</span> <span class=\"mi\">100</span><span class=\"o\">},</span> <span class=\"mi\">0</span><span class=\"o\">));</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawPath</span><span class=\"o\">(</span><span class=\"n\">path_dash</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">restore</span><span class=\"o\">();</span>\n\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">save</span><span class=\"o\">();</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(</span><span class=\"mi\">400</span><span class=\"o\">,</span> <span class=\"mi\">100</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setPathEffect</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">DashPathEffect</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"kt\">float</span><span class=\"o\">[]{</span><span class=\"mi\">200</span><span class=\"o\">,</span> <span class=\"mi\">100</span><span class=\"o\">},</span> <span class=\"mi\">100</span><span class=\"o\">));</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawPath</span><span class=\"o\">(</span><span class=\"n\">path_dash</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">restore</span><span class=\"o\">();</span>\n</code></pre> \n</div> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-dash-effect3.png\" alt=\"paint-dash-effect3\" /></p> \n<p><strong>如上图所示，虚线效果是根据 intervals[] 中的数值周期显示的，而 phase 则用于控制相位差(偏移量)。</strong></p> \n<p><strong>注意：intervals[] 中是允许设置多组数据的，每两个为一组，第一个表示显示长度，第二个表示隐藏长度。</strong></p> \n<blockquote> \n <p>DashPathEffect 使用起来比较简单，但是也有人拿来玩一些特殊效果，例如这篇文章：<a href=\"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0907/3429.html\">使用DashPathEffect绘制一条动画曲线</a>。 不过这篇文章中实现的效果也可以使用 PathMeasure 的截取功能来实现，通过截取不同长度的 Path 来实现动画效果。</p> \n</blockquote> \n<h4 id=\"283-pathdashpatheffect\">2.8.3 PathDashPathEffect</h4> \n<p>这个也是实现类似虚线效果，只不过这个虚线中显示的部分可以指定为一个 Path(适用于 STROKE 或 FILL_AND_STROKE 样式)。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// shape: Path 图形</span>\n<span class=\"c1\">// advance: 图形占据长度</span>\n<span class=\"c1\">// phase: 相位差</span>\n<span class=\"c1\">// style: 转角样式</span>\n<span class=\"n\">PathDashPathEffect</span><span class=\"o\">(</span><span class=\"n\">Path</span> <span class=\"n\">shape</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">advance</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">phase</span><span class=\"o\">,</span> <span class=\"n\">PathDashPathEffect</span><span class=\"o\">.</span><span class=\"na\">Style</span> <span class=\"n\">style</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><strong>注意：参数中的 shape 只能是 FILL 模式。</strong></p> \n<p>PathDashPathEffect 允许使用一个 Path 图形作为显示效果，如下：</p> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-pash-dash-effect.png\" alt=\"paint-pash-dash-effect\" /></p> \n<p><strong>注意：参数中的shape(Path)只能是 FILL 模式，即便画笔是 STROKE 样式，shape 也只会是 FILL。</strong></p> \n<p>上图中分割线示例代码：</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 画笔初始设置</span>\n<span class=\"n\">Paint</span> <span class=\"n\">paint</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Paint</span><span class=\"o\">();</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStyle</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">STROKE</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setAntiAlias</span><span class=\"o\">(</span><span class=\"kc\">true</span><span class=\"o\">);</span>\n\n<span class=\"n\">RectF</span> <span class=\"n\">rectF</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">RectF</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">50</span><span class=\"o\">,</span> <span class=\"mi\">50</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 方形</span>\n<span class=\"n\">Path</span> <span class=\"n\">rectPath</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Path</span><span class=\"o\">();</span>\n<span class=\"n\">rectPath</span><span class=\"o\">.</span><span class=\"na\">addRect</span><span class=\"o\">(</span><span class=\"n\">rectF</span><span class=\"o\">,</span> <span class=\"n\">Path</span><span class=\"o\">.</span><span class=\"na\">Direction</span><span class=\"o\">.</span><span class=\"na\">CW</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 圆形 椭圆</span>\n<span class=\"n\">Path</span> <span class=\"n\">ovalPath</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Path</span><span class=\"o\">();</span>\n<span class=\"n\">ovalPath</span><span class=\"o\">.</span><span class=\"na\">addOval</span><span class=\"o\">(</span><span class=\"n\">rectF</span><span class=\"o\">,</span> <span class=\"n\">Path</span><span class=\"o\">.</span><span class=\"na\">Direction</span><span class=\"o\">.</span><span class=\"na\">CW</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 子弹形状</span>\n<span class=\"n\">Path</span> <span class=\"n\">bulletPath</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Path</span><span class=\"o\">();</span>\n<span class=\"n\">bulletPath</span><span class=\"o\">.</span><span class=\"na\">lineTo</span><span class=\"o\">(</span><span class=\"n\">rectF</span><span class=\"o\">.</span><span class=\"na\">centerX</span><span class=\"o\">(),</span> <span class=\"n\">rectF</span><span class=\"o\">.</span><span class=\"na\">top</span><span class=\"o\">);</span>\n<span class=\"n\">bulletPath</span><span class=\"o\">.</span><span class=\"na\">addArc</span><span class=\"o\">(</span><span class=\"n\">rectF</span><span class=\"o\">,</span> <span class=\"o\">-</span><span class=\"mi\">90</span><span class=\"o\">,</span> <span class=\"mi\">180</span><span class=\"o\">);</span>\n<span class=\"n\">bulletPath</span><span class=\"o\">.</span><span class=\"na\">lineTo</span><span class=\"o\">(</span><span class=\"n\">rectF</span><span class=\"o\">.</span><span class=\"na\">left</span><span class=\"o\">,</span> <span class=\"n\">rectF</span><span class=\"o\">.</span><span class=\"na\">bottom</span><span class=\"o\">);</span>\n<span class=\"n\">bulletPath</span><span class=\"o\">.</span><span class=\"na\">lineTo</span><span class=\"o\">(</span><span class=\"n\">rectF</span><span class=\"o\">.</span><span class=\"na\">left</span><span class=\"o\">,</span> <span class=\"n\">rectF</span><span class=\"o\">.</span><span class=\"na\">top</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 星星形状</span>\n<span class=\"n\">PathMeasure</span> <span class=\"n\">pathMeasure</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">PathMeasure</span><span class=\"o\">(</span><span class=\"n\">ovalPath</span><span class=\"o\">,</span> <span class=\"kc\">false</span><span class=\"o\">);</span>\n<span class=\"kt\">float</span> <span class=\"n\">length</span> <span class=\"o\">=</span> <span class=\"n\">pathMeasure</span><span class=\"o\">.</span><span class=\"na\">getLength</span><span class=\"o\">();</span>\n<span class=\"kt\">float</span> <span class=\"n\">split</span> <span class=\"o\">=</span> <span class=\"n\">length</span> <span class=\"o\">/</span> <span class=\"mi\">5</span><span class=\"o\">;</span>\n<span class=\"kt\">float</span><span class=\"o\">[]</span> <span class=\"n\">starPos</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">float</span><span class=\"o\">[</span><span class=\"mi\">10</span><span class=\"o\">];</span>\n<span class=\"kt\">float</span><span class=\"o\">[]</span> <span class=\"n\">pos</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">float</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">];</span>\n<span class=\"kt\">float</span><span class=\"o\">[]</span> <span class=\"n\">tan</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"kt\">float</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">];</span>\n<span class=\"k\">for</span> <span class=\"o\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"o\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"mi\">5</span><span class=\"o\">;</span> <span class=\"n\">i</span><span class=\"o\">++)</span> <span class=\"o\">{</span>\n    <span class=\"n\">pathMeasure</span><span class=\"o\">.</span><span class=\"na\">getPosTan</span><span class=\"o\">(</span><span class=\"n\">split</span> <span class=\"o\">*</span> <span class=\"n\">i</span><span class=\"o\">,</span> <span class=\"n\">pos</span><span class=\"o\">,</span> <span class=\"n\">tan</span><span class=\"o\">);</span>\n    <span class=\"n\">starPos</span><span class=\"o\">[</span><span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"mi\">0</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">pos</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">];</span>\n    <span class=\"n\">starPos</span><span class=\"o\">[</span><span class=\"n\">i</span> <span class=\"o\">*</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"o\">]</span> <span class=\"o\">=</span> <span class=\"n\">pos</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">];</span>\n<span class=\"o\">}</span>\n<span class=\"n\">Path</span> <span class=\"n\">starPath</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Path</span><span class=\"o\">();</span>\n<span class=\"n\">starPath</span><span class=\"o\">.</span><span class=\"na\">moveTo</span><span class=\"o\">(</span><span class=\"n\">starPos</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">],</span> <span class=\"n\">starPos</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]);</span>\n<span class=\"n\">starPath</span><span class=\"o\">.</span><span class=\"na\">lineTo</span><span class=\"o\">(</span><span class=\"n\">starPos</span><span class=\"o\">[</span><span class=\"mi\">4</span><span class=\"o\">],</span> <span class=\"n\">starPos</span><span class=\"o\">[</span><span class=\"mi\">5</span><span class=\"o\">]);</span>\n<span class=\"n\">starPath</span><span class=\"o\">.</span><span class=\"na\">lineTo</span><span class=\"o\">(</span><span class=\"n\">starPos</span><span class=\"o\">[</span><span class=\"mi\">8</span><span class=\"o\">],</span> <span class=\"n\">starPos</span><span class=\"o\">[</span><span class=\"mi\">9</span><span class=\"o\">]);</span>\n<span class=\"n\">starPath</span><span class=\"o\">.</span><span class=\"na\">lineTo</span><span class=\"o\">(</span><span class=\"n\">starPos</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">],</span> <span class=\"n\">starPos</span><span class=\"o\">[</span><span class=\"mi\">3</span><span class=\"o\">]);</span>\n<span class=\"n\">starPath</span><span class=\"o\">.</span><span class=\"na\">lineTo</span><span class=\"o\">(</span><span class=\"n\">starPos</span><span class=\"o\">[</span><span class=\"mi\">6</span><span class=\"o\">],</span> <span class=\"n\">starPos</span><span class=\"o\">[</span><span class=\"mi\">7</span><span class=\"o\">]);</span>\n<span class=\"n\">starPath</span><span class=\"o\">.</span><span class=\"na\">lineTo</span><span class=\"o\">(</span><span class=\"n\">starPos</span><span class=\"o\">[</span><span class=\"mi\">0</span><span class=\"o\">],</span> <span class=\"n\">starPos</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]);</span>\n<span class=\"n\">Matrix</span> <span class=\"n\">matrix</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Matrix</span><span class=\"o\">();</span>\n<span class=\"n\">matrix</span><span class=\"o\">.</span><span class=\"na\">postRotate</span><span class=\"o\">(-</span><span class=\"mi\">90</span><span class=\"o\">,</span> <span class=\"n\">rectF</span><span class=\"o\">.</span><span class=\"na\">centerX</span><span class=\"o\">(),</span> <span class=\"n\">rectF</span><span class=\"o\">.</span><span class=\"na\">centerY</span><span class=\"o\">());</span>\n<span class=\"n\">starPath</span><span class=\"o\">.</span><span class=\"na\">transform</span><span class=\"o\">(</span><span class=\"n\">matrix</span><span class=\"o\">);</span>\n\n\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(</span><span class=\"mi\">360</span><span class=\"o\">,</span> <span class=\"mi\">100</span><span class=\"o\">);</span>\n<span class=\"c1\">// 绘制分割线 - 方形</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">100</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setPathEffect</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">PathDashPathEffect</span><span class=\"o\">(</span><span class=\"n\">rectPath</span><span class=\"o\">,</span> <span class=\"n\">rectF</span><span class=\"o\">.</span><span class=\"na\">width</span><span class=\"o\">()</span> <span class=\"o\">*</span> <span class=\"mf\">1.5f</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">PathDashPathEffect</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">TRANSLATE</span><span class=\"o\">));</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawLine</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1200</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 绘制分割线 - 圆形</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">100</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setPathEffect</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">PathDashPathEffect</span><span class=\"o\">(</span><span class=\"n\">ovalPath</span><span class=\"o\">,</span> <span class=\"n\">rectF</span><span class=\"o\">.</span><span class=\"na\">width</span><span class=\"o\">()</span> <span class=\"o\">*</span> <span class=\"mf\">1.5f</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">PathDashPathEffect</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">TRANSLATE</span><span class=\"o\">));</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawLine</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1200</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 绘制分割线 - 子弹型</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">100</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setPathEffect</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">PathDashPathEffect</span><span class=\"o\">(</span><span class=\"n\">bulletPath</span><span class=\"o\">,</span> <span class=\"n\">rectF</span><span class=\"o\">.</span><span class=\"na\">width</span><span class=\"o\">()</span> <span class=\"o\">*</span> <span class=\"mf\">1.5f</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">PathDashPathEffect</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">TRANSLATE</span><span class=\"o\">));</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawLine</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1200</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n\n<span class=\"c1\">// 绘制分割线 - 星型</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">translate</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">100</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setPathEffect</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">PathDashPathEffect</span><span class=\"o\">(</span><span class=\"n\">starPath</span><span class=\"o\">,</span> <span class=\"n\">rectF</span><span class=\"o\">.</span><span class=\"na\">width</span><span class=\"o\">()</span> <span class=\"o\">*</span> <span class=\"mf\">1.5f</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">PathDashPathEffect</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">TRANSLATE</span><span class=\"o\">));</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawLine</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1200</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><strong>PathDashPathEffect.Style</strong></p> \n<p>PathDashPathEffect 的最后一个参数是 PathDashPathEffect.Style，这个参数用于处理 Path 图形在转角处的样式。</p> \n<table> \n <thead> \n  <tr> \n   <th>Style</th> \n   <th>简介</th> \n  </tr> \n </thead> \n <tbody> \n  <tr> \n   <td>TRANSLATE</td> \n   <td>在转角处对图形平移。</td> \n  </tr> \n  <tr> \n   <td>ROTATE</td> \n   <td>在转角处对图形旋转。</td> \n  </tr> \n  <tr> \n   <td>MORPH</td> \n   <td>在转角处对图形变形。</td> \n  </tr> \n </tbody> \n</table> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-pash-dash-effect3.png\" alt=\"paint-pash-dash-effect3\" /></p> \n<h4 id=\"284-discretepatheffect\">2.8.4 DiscretePathEffect</h4> \n<p>DiscretePathEffect 可以让 Path 产生随机偏移效果。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// segmentLength: 分段长度</span>\n<span class=\"c1\">// deviation: 偏移距离</span>\n<span class=\"n\">DiscretePathEffect</span><span class=\"o\">(</span><span class=\"kt\">float</span> <span class=\"n\">segmentLength</span><span class=\"o\">,</span> <span class=\"kt\">float</span> <span class=\"n\">deviation</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-discrete-effect.png\" alt=\"paint-discrete-effect\" /></p> \n<blockquote> \n <p>至今尚未见过这种效果的应用场景。</p> \n</blockquote> \n<h4 id=\"285-sumpatheffect\">2.8.5 SumPathEffect</h4> \n<p>SumPathEffect 用于合并两种效果，它相当于两种效果都绘制一遍。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 两种效果相加</span>\n<span class=\"n\">SumPathEffect</span><span class=\"o\">(</span><span class=\"n\">PathEffect</span> <span class=\"n\">first</span><span class=\"o\">,</span> <span class=\"n\">PathEffect</span> <span class=\"n\">second</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-sum-effect-0349877.png\" alt=\"paint-sum-effect-0349877\" /></p> \n<h4 id=\"286-composepatheffect\">2.8.6 ComposePathEffect</h4> \n<p>ComposePathEffect 也是合并两种效果，只不过先应用一种效果后，再次叠加另一种效果，因此<strong>交换参数最终得到的效果是不同的</strong>。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 构造一个 PathEffect, 其效果是首先应用 innerpe 再应用 outerpe (如: outer(inner(path)))。</span>\n<span class=\"n\">ComposePathEffect</span><span class=\"o\">(</span><span class=\"n\">PathEffect</span> <span class=\"n\">outerpe</span><span class=\"o\">,</span> <span class=\"n\">PathEffect</span> <span class=\"n\">innerpe</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-compose-effect.png\" alt=\"paint-compose-effect\" /></p> \n<h3 id=\"29-getfillpath\">2.9 getFillPath</h3> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 根据原始Path(src)获取预处理后的Path(dst)</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">getFillPath</span><span class=\"o\">(</span><span class=\"n\">Path</span> <span class=\"n\">src</span><span class=\"o\">,</span> <span class=\"n\">Path</span> <span class=\"n\">dst</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p>在 PathEffect 一开始有这样一句介绍：“<strong>PathEffect 在绘制之前修改几何路径</strong>… ” 这句话表示的意思是，我们在绘制内容时，会在绘制之前对这些内容进行处理，最终进行绘制的内容实际上是经过处理的，而不是原始的。</p> \n<p>事实上，我们所有绘制的图形，包括线条，矩形，Path 等内容，由于存在线条宽度，填充模式，线帽等不同的设置，在绘制之前都是需要进行预处理的。</p> \n<p><strong>Q: 我们能不能拿到预处理后的图形呢？</strong></p> \n<p>A: 答案是可以的，但是我们只能拿到 Path 预处理后的内容。</p> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/paint-getfillpath.png\" alt=\"paint-getfillpath\" /></p> \n<p>如上图，我们使用一个圆弧形状的 Path，设置画笔为描边，绘制出来就是第一个图形的效果。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"n\">Path</span> <span class=\"n\">arcPath</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Path</span><span class=\"o\">();</span>\n<span class=\"n\">arcPath</span><span class=\"o\">.</span><span class=\"na\">addArc</span><span class=\"o\">(</span><span class=\"k\">new</span> <span class=\"n\">RectF</span><span class=\"o\">(</span><span class=\"mi\">100</span><span class=\"o\">,</span> <span class=\"mi\">100</span><span class=\"o\">,</span> <span class=\"mi\">500</span><span class=\"o\">,</span> <span class=\"mi\">500</span><span class=\"o\">),</span> <span class=\"mi\">30</span><span class=\"o\">,</span> <span class=\"mi\">300</span><span class=\"o\">);</span>\n\n<span class=\"n\">Paint</span> <span class=\"n\">paint</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Paint</span><span class=\"o\">();</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStyle</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">STROKE</span><span class=\"o\">);</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawPath</span><span class=\"o\">(</span><span class=\"n\">arcPath</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p>将画笔设置为描边模式，较粗的描边效果，线帽效果为 Round 后绘制出来就是第二个图形的效果。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"n\">Paint</span> <span class=\"n\">paint</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Paint</span><span class=\"o\">();</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStyle</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">STROKE</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStrokeCap</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Cap</span><span class=\"o\">.</span><span class=\"na\">ROUND</span><span class=\"o\">);</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">setStrokeWidth</span><span class=\"o\">(</span><span class=\"mi\">100</span><span class=\"o\">);</span>\n\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawPath</span><span class=\"o\">(</span><span class=\"n\">arcPath</span><span class=\"o\">,</span> <span class=\"n\">paint</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p>如果通过 paint 的 getFillPath 获取处理后的 Path，然后绘制出来就是第三种图形的样式。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"n\">Path</span> <span class=\"n\">borderPath</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Path</span><span class=\"o\">();</span>\n<span class=\"n\">paint</span><span class=\"o\">.</span><span class=\"na\">getFillPath</span><span class=\"o\">(</span><span class=\"n\">arcPath</span><span class=\"o\">,</span> <span class=\"n\">borderPath</span><span class=\"o\">);</span>\t<span class=\"c1\">// getFillPath</span>\n\n<span class=\"c1\">// 测试画笔，注意设置为 STROKE</span>\n<span class=\"n\">Paint</span> <span class=\"n\">testPaint</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Paint</span><span class=\"o\">();</span>\n<span class=\"n\">testPaint</span><span class=\"o\">.</span><span class=\"na\">setStyle</span><span class=\"o\">(</span><span class=\"n\">Paint</span><span class=\"o\">.</span><span class=\"na\">Style</span><span class=\"o\">.</span><span class=\"na\">STROKE</span><span class=\"o\">);</span>\n<span class=\"n\">testPaint</span><span class=\"o\">.</span><span class=\"na\">setStrokeWidth</span><span class=\"o\">(</span><span class=\"mi\">2</span><span class=\"o\">);</span>\n<span class=\"n\">testPaint</span><span class=\"o\">.</span><span class=\"na\">setAntiAlias</span><span class=\"o\">(</span><span class=\"kc\">true</span><span class=\"o\">);</span>\n<span class=\"c1\">// 绘制通过 getFillPath 获取到的 Path</span>\n<span class=\"n\">canvas</span><span class=\"o\">.</span><span class=\"na\">drawPath</span><span class=\"o\">(</span><span class=\"n\">borderPath</span><span class=\"o\">,</span> <span class=\"n\">testPaint</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><strong>Q: 可是我们拿到预处理后的 Path 有什么作用呢？</strong></p> \n<p>A: 尽管通常情况下我们用不到，但在一些特殊情况下还是有些作用的，可以通过下面的一个实例了解。</p> \n<p>在我前段时间开源的一个库里面，需要实现下面这样的效果，一个弧形的 SeekBbar。</p> \n<p><img src=\"http://www.gcssloop.com/assets/customview/paint/arcseekbar-shadow.gif\" alt=\"arcseekbar-shadow\" /></p> \n<p>如上图，是一个非常粗的圆弧，有一个白色的描边，这个白色的描边效果就可以通过 getFillPath 轻松实现。</p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"c1\">// 通过 getFillPath 来获得圆弧的实际区域, 存储到 mBorderPath 中</span>\n<span class=\"n\">mArcPaint</span><span class=\"o\">.</span><span class=\"na\">getFillPath</span><span class=\"o\">(</span><span class=\"n\">mSeekPath</span><span class=\"o\">,</span> <span class=\"n\">mBorderPath</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p>直接用 getFillPath 获取到这个粗圆弧的边缘，存储到 mBorderPath 中，把 mBorderPath 用白色画笔绘制出来就可以实现上图中的描边效果啦。</p> \n<p>并且，用户的点击事件也需要进行一些限制，只有用户点击到圆弧上的时候才能触发进度变化，而点击其余部分则不处理，这里可以利用 getFillPath 和 Region 来实现点击区域限定。</p> \n<p><strong>关于使用 Region 判断点击区域可以参考 ：<a href=\"http://www.gcssloop.com/customview/touch-matrix-region\">特殊控件的事件处理方案</a></strong></p> \n<div class=\"language-java highlighter-rouge\">\n <pre class=\"highlight\"><code><span class=\"n\">Path</span> <span class=\"n\">mSeekPath</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\t<span class=\"c1\">// 圆弧 Path。</span>\n<span class=\"n\">Path</span> <span class=\"n\">mBorderPath</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\t<span class=\"c1\">// 圆弧 Path 的边缘。</span>\n<span class=\"n\">Paint</span> <span class=\"n\">mArcPaint</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\t<span class=\"c1\">// 画笔，设置好 Style，Cap, StrokeWidth。</span>\n<span class=\"n\">Region</span> <span class=\"n\">mArcRegion</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\t<span class=\"c1\">// 用户点击区域</span>\n\n<span class=\"c1\">// 通过 getFillPath 来获得圆弧的实际区域, 存储到 mBorderPath 中</span>\n<span class=\"n\">mArcPaint</span><span class=\"o\">.</span><span class=\"na\">getFillPath</span><span class=\"o\">(</span><span class=\"n\">mSeekPath</span><span class=\"o\">,</span> <span class=\"n\">mBorderPath</span><span class=\"o\">);</span>\n<span class=\"c1\">// 将实际区域赋值给 Region</span>\n<span class=\"n\">mArcRegion</span><span class=\"o\">.</span><span class=\"na\">setPath</span><span class=\"o\">(</span><span class=\"n\">mBorderPath</span><span class=\"o\">,</span> <span class=\"k\">new</span> <span class=\"n\">Region</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"n\">w</span><span class=\"o\">,</span> <span class=\"n\">h</span><span class=\"o\">));</span>\n\n<span class=\"c1\">// 使用 Region 判断点击是否处于 Region 区域中</span>\n<span class=\"n\">mArcRegion</span><span class=\"o\">.</span><span class=\"na\">contains</span><span class=\"o\">(</span><span class=\"n\">x</span><span class=\"o\">,</span> <span class=\"n\">y</span><span class=\"o\">);</span>\n</code></pre> \n</div> \n<p><strong>更多的细节可以去开源库 <a href=\"https://github.com/GcsSloop/arc-seekbar\">ArcSeekBar</a> 中查看。</strong></p> \n<p><strong>ArcSeekBar: <a href=\"https://github.com/GcsSloop/arc-seekbar\">https://github.com/GcsSloop/arc-seekbar</a></strong></p> \n<h2 id=\"3-结语\">3. 结语</h2> \n<p>在 Android 绘图之中，Paint 是相当重要的组成部分，由于 Paint 内容十分繁杂，本文也只能介绍其中一部分内容，关于画笔图像优化，叠加模式，文本处理等相关内容会放到后续的文章中进行介绍。</p> \n<h2 id=\"about-me\">About Me</h2> \n<h3 id=\"作者微博-gcssloop\">作者微博: <a href=\"http://weibo.com/GcsSloop\" target=\"_blank\">@GcsSloop</a></h3> \n<p><a href=\"http://www.gcssloop.com/info/about\" target=\"_blank\"><img src=\"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/gcs_banner.jpg?gcssloop\" width=\"300\" style=\"display:inline;\" /></a></p> \n<h2 id=\"参考文章\">参考文章</h2> \n<ul> \n <li><a href=\"https://developer.android.com/reference/android/graphics/Paint\">Android · Paint</a></li> \n <li><a href=\"https://hencoder.com/ui-1-2/\">HenCoder: 自定义 View 1-2 Paint 详解</a></li> \n <li><a href=\"https://skia.org/user/api/SkPaint_Reference\">SkPaint_Reference</a></li> \n <li><a href=\"http://www.curious-creature.com/2013/12/21/android-recipe-4-path-tracing/\">Android Recipe #4, path tracing</a></li> \n <li><a href=\"https://medium.com/androiddevelopers/a-better-underline-for-android-90ba3a2e4fb\">A better underline for Android</a></li> \n</ul>","descriptionType":"text/html","publishedDate":"Tue, 23 Oct 2018 16:00:00 +0000","feedId":32069,"bgimg":"http://www.gcssloop.com/assets/customview/paint/paint-stroke-0.png","linkMd5":"63c7dc7cc5730b9c0b9889cb8fafc47f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn36@2020_2/2020/09/06/21-02-59-287_6f30d4386182e361.webp","destWidth":1200,"destHeight":675,"sourceBytes":143622,"destBytes":26604,"author":"","articleImgCdnMap":{"http://www.gcssloop.com/assets/customview/paint/paint-stroke-0.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn36@2020_2/2020/09/06/21-02-59-287_6f30d4386182e361.webp","http://www.gcssloop.com/assets/customview/paint/paint-stroke-1.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn92@2020_3/2020/09/06/21-03-03-570_47286683467a86ae.webp","http://www.gcssloop.com/assets/customview/paint/paint-stroke-2.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn84@2020_5/2020/09/06/21-03-02-500_a5d0291452cc7cc1.webp","http://www.gcssloop.com/assets/customview/paint/paint-stroke-3.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn100@2020_3/2020/09/06/21-03-02-620_5f3539102ce85f6a.webp","http://www.gcssloop.com/assets/customview/paint/paint-style.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn40@2020_2/2020/09/06/21-03-03-828_5e729846dee7af6a.webp","http://www.gcssloop.com/assets/customview/paint/paint-cap.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn47@2020_6/2020/09/06/21-03-03-688_deff6cb7b9bf4b43.webp","http://www.gcssloop.com/assets/customview/paint/paint-join-1.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn7@2020_2/2020/09/06/21-03-02-276_b0931a5729cbffca.webp","http://www.gcssloop.com/assets/customview/paint/paint-join-2.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn44@2020_2/2020/09/06/21-03-02-272_2323cae53822c2ab.webp","http://www.gcssloop.com/assets/customview/paint/paint-corner-effect.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn59@2020_1/2020/09/06/21-03-03-169_131d69d35b44841a.webp","http://www.gcssloop.com/assets/customview/paint/paint-corcer-effect-1.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn95@2020_2/2020/09/06/21-03-03-582_a2da4c155bb2804e.webp","http://www.gcssloop.com/assets/customview/paint/paint-corcer-effect-2.gif":null,"http://www.gcssloop.com/assets/customview/paint/paint-dash-effect3.png":null,"http://www.gcssloop.com/assets/customview/paint/paint-pash-dash-effect.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn80@2020_6/2020/09/06/21-03-03-400_9bedc518757a2178.webp","http://www.gcssloop.com/assets/customview/paint/paint-pash-dash-effect3.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn88@2020_1/2020/09/06/21-03-02-553_89109486c38b3109.webp","http://www.gcssloop.com/assets/customview/paint/paint-discrete-effect.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn51@2020_2/2020/09/06/21-03-03-247_7c39526dc4fab8b2.webp","http://www.gcssloop.com/assets/customview/paint/paint-sum-effect-0349877.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn63@2020_2/2020/09/06/21-03-02-380_1059dea638f150a7.webp","http://www.gcssloop.com/assets/customview/paint/paint-compose-effect.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn68@2020_1/2020/09/06/21-03-02-253_8b03b35eac61c0e7.webp","http://www.gcssloop.com/assets/customview/paint/paint-getfillpath.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn75@2020_1/2020/09/06/21-03-03-462_3d52404f72d36a4b.webp","http://www.gcssloop.com/assets/customview/paint/arcseekbar-shadow.gif":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn11@2020_2/2020/09/06/21-03-04-651_8f6f9794aa5bd4b9.webp","http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/gcs_banner.jpg?gcssloop":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn56@2020_2/2020/09/06/21-03-01-061_775db0567ddc3bb8.webp"},"publishedOrCreatedDate":1599426165004}],"record":{"createdTime":"2020-09-07 05:02:45","updatedTime":"2020-09-07 05:02:45","feedId":32069,"fetchDate":"Sun, 06 Sep 2020 21:02:45 +0000","fetchMs":2026,"handleMs":6001,"totalMs":32801,"newArticles":0,"totalArticles":51,"status":1,"type":0,"ip":"3f76bfce463c20accbc12751bc5b603e","hostName":"europe61*","requestId":"5fede4b84dcf49b998ed994c7bc2cce1_32069","contentType":"text/xml; charset=utf-8","totalBytes":590584,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":20,"articlesImgsGithubTotal":18,"successGithubMap":{"myreaderx25":1,"myreaderx8":1,"myreaderx27":1,"myreaderx16":1,"myreaderx10":1,"myreaderx4":1,"myreaderx3":1,"myreaderx22":1,"myreaderx11":1,"myreaderx12":1,"myreaderx2":1,"myreaderx24":1,"myreaderx1":1,"myreaderx30":1,"myreaderx31":1,"myreaderx5oss":1,"myreaderx18":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}},"feed":{"createdTime":"2020-09-07 02:54:30","updatedTime":"2020-09-07 02:54:30","id":32069,"name":"GcsSloop","url":"http://www.gcssloop.com/feed.xml","subscriber":100,"website":null,"icon":"http://www.gcssloop.com/favicon.ico","icon_jsdelivr":null,"description":"嗨，我是 GcsSloop，一名来自2.5次元的魔法师，Android自定义View系列文章作者，非著名程序员。","weekly":null,"link":"http://www.gcssloop.com"},"noPictureArticleList":[{"createdTime":"2020-09-07 05:03:08","updatedTime":"2020-09-07 05:03:08","id":null,"feedId":32069,"linkMd5":"63c7dc7cc5730b9c0b9889cb8fafc47f"}],"tmpCommonImgCdnBytes":26604,"tmpBodyImgCdnBytes":563980,"tmpBgImgCdnBytes":0,"extra4":{"start":1599426156111,"total":0,"statList":[{"spend":2892,"msg":"获取xml内容"},{"spend":6001,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":8771,"msg":"正文链接上传到cdn"}]},"extra5":20,"extra6":20,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-dash-effect3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"sourceBytes":37568,"destBytes":19786,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3033,"convertSpendMs":30,"createdTime":"2020-09-07 05:03:00","host":"us-004*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn4/contents/2020/09/06/21-03-03-251_996e9b6035f4ed1e.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 21:03:03 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["EABC:311E:105C20C:27B2063:5F554E85"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599426437"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn4/contents/2020/09/06/21-03-03-251_996e9b6035f4ed1e.webp","historyStatusCode":[],"spendMs":45},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.7 KB","destSize":"19.3 KB","compressRate":"52.7%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-corcer-effect-2.gif","sourceStatusCode":200,"destWidth":847,"destHeight":480,"sourceBytes":23134,"destBytes":33120,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":5560,"convertSpendMs":1289,"createdTime":"2020-09-07 05:03:00","host":"us-036*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn71/contents/2020/09/06/21-03-04-538_1083c1a1b12388a0.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 21:03:04 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["ADB4:121D:BBD1D4:1BEE59E:5F554E82"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599426441"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn71/contents/2020/09/06/21-03-04-538_1083c1a1b12388a0.webp","historyStatusCode":[],"spendMs":46},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.6 KB","destSize":"32.3 KB","compressRate":"143.2%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-dash-effect3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"sourceBytes":37568,"destBytes":19786,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":2896,"convertSpendMs":29,"createdTime":"2020-09-07 05:03:03","host":"us-020*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn4/contents/2020/09/06/21-03-06-227_996e9b6035f4ed1e.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 21:03:06 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["EA3A:16FC:BC318D:1AB8971:5F554E85"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599426437"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn4/contents/2020/09/06/21-03-06-227_996e9b6035f4ed1e.webp","historyStatusCode":[],"spendMs":43},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.7 KB","destSize":"19.3 KB","compressRate":"52.7%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-corcer-effect-2.gif","sourceStatusCode":200,"destWidth":847,"destHeight":480,"sourceBytes":23134,"destBytes":33120,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3036,"convertSpendMs":1157,"createdTime":"2020-09-07 05:03:05","host":"europe-58*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn71/contents/2020/09/06/21-03-08-639_1083c1a1b12388a0.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 21:03:08 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CF12:59C5:E762D81:117A8327:5F554E89"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599426441"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn71/contents/2020/09/06/21-03-08-639_1083c1a1b12388a0.webp","historyStatusCode":[],"spendMs":270},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"22.6 KB","destSize":"32.3 KB","compressRate":"143.2%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-032.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-58.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-028.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-024.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-020.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-54.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe21.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-036.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-004.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-016.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-040.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-stroke-0.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn36@2020_2/2020/09/06/21-02-59-287_6f30d4386182e361.webp","sourceBytes":143622,"destBytes":26604,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":5673,"convertSpendMs":29,"createdTime":"2020-09-07 05:02:54","host":"us-016*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f,63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"140.3 KB","destSize":"26 KB","compressRate":"18.5%"},{"code":1,"isDone":false,"source":"http://gcsblog.oss-cn-shanghai.aliyuncs.com/blog/gcs_banner.jpg?gcssloop","sourceStatusCode":200,"destWidth":500,"destHeight":167,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn56@2020_2/2020/09/06/21-03-01-061_775db0567ddc3bb8.webp","sourceBytes":16786,"destBytes":9238,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":1645,"convertSpendMs":7,"createdTime":"2020-09-07 05:03:00","host":"us-020*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.4 KB","destSize":"9 KB","compressRate":"55%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-compose-effect.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn68@2020_1/2020/09/06/21-03-02-253_8b03b35eac61c0e7.webp","sourceBytes":39603,"destBytes":15940,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3016,"convertSpendMs":25,"createdTime":"2020-09-07 05:03:00","host":"europe-58*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.7 KB","destSize":"15.6 KB","compressRate":"40.2%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-join-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn44@2020_2/2020/09/06/21-03-02-272_2323cae53822c2ab.webp","sourceBytes":91595,"destBytes":38134,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3208,"convertSpendMs":38,"createdTime":"2020-09-07 05:03:00","host":"europe67*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"89.4 KB","destSize":"37.2 KB","compressRate":"41.6%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-join-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn7@2020_2/2020/09/06/21-03-02-276_b0931a5729cbffca.webp","sourceBytes":73520,"destBytes":24760,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3294,"convertSpendMs":39,"createdTime":"2020-09-07 05:03:00","host":"europe67*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"71.8 KB","destSize":"24.2 KB","compressRate":"33.7%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-sum-effect-0349877.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn63@2020_2/2020/09/06/21-03-02-380_1059dea638f150a7.webp","sourceBytes":39373,"destBytes":15720,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3321,"convertSpendMs":28,"createdTime":"2020-09-07 05:03:00","host":"europe21*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.5 KB","destSize":"15.4 KB","compressRate":"39.9%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-stroke-3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn100@2020_3/2020/09/06/21-03-02-620_5f3539102ce85f6a.webp","sourceBytes":86334,"destBytes":24770,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3341,"convertSpendMs":28,"createdTime":"2020-09-07 05:03:00","host":"us-016*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"84.3 KB","destSize":"24.2 KB","compressRate":"28.7%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-pash-dash-effect3.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn88@2020_1/2020/09/06/21-03-02-553_89109486c38b3109.webp","sourceBytes":71960,"destBytes":27808,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3422,"convertSpendMs":35,"createdTime":"2020-09-07 05:03:00","host":"europe63*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"70.3 KB","destSize":"27.2 KB","compressRate":"38.6%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-stroke-2.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn84@2020_5/2020/09/06/21-03-02-500_a5d0291452cc7cc1.webp","sourceBytes":62141,"destBytes":21348,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3569,"convertSpendMs":27,"createdTime":"2020-09-07 05:03:00","host":"europe-25*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"60.7 KB","destSize":"20.8 KB","compressRate":"34.4%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-discrete-effect.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn51@2020_2/2020/09/06/21-03-03-247_7c39526dc4fab8b2.webp","sourceBytes":63477,"destBytes":26650,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3854,"convertSpendMs":28,"createdTime":"2020-09-07 05:03:00","host":"us-032*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"62 KB","destSize":"26 KB","compressRate":"42%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-corner-effect.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn59@2020_1/2020/09/06/21-03-03-169_131d69d35b44841a.webp","sourceBytes":73664,"destBytes":37984,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3877,"convertSpendMs":29,"createdTime":"2020-09-07 05:03:00","host":"us-008*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"71.9 KB","destSize":"37.1 KB","compressRate":"51.6%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-pash-dash-effect.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn80@2020_6/2020/09/06/21-03-03-400_9bedc518757a2178.webp","sourceBytes":68644,"destBytes":35858,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":3674,"convertSpendMs":33,"createdTime":"2020-09-07 05:03:00","host":"us-012*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"67 KB","destSize":"35 KB","compressRate":"52.2%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-getfillpath.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn75@2020_1/2020/09/06/21-03-03-462_3d52404f72d36a4b.webp","sourceBytes":73090,"destBytes":23974,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4046,"convertSpendMs":53,"createdTime":"2020-09-07 05:03:00","host":"us-024*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"71.4 KB","destSize":"23.4 KB","compressRate":"32.8%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-stroke-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn92@2020_3/2020/09/06/21-03-03-570_47286683467a86ae.webp","sourceBytes":60921,"destBytes":20754,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4102,"convertSpendMs":47,"createdTime":"2020-09-07 05:03:00","host":"us-040*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.5 KB","destSize":"20.3 KB","compressRate":"34.1%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-corcer-effect-1.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn95@2020_2/2020/09/06/21-03-03-582_a2da4c155bb2804e.webp","sourceBytes":60294,"destBytes":18626,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4135,"convertSpendMs":74,"createdTime":"2020-09-07 05:03:00","host":"us-028*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"58.9 KB","destSize":"18.2 KB","compressRate":"30.9%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-cap.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn47@2020_6/2020/09/06/21-03-03-688_deff6cb7b9bf4b43.webp","sourceBytes":85268,"destBytes":35544,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4241,"convertSpendMs":29,"createdTime":"2020-09-07 05:03:00","host":"us-54*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"83.3 KB","destSize":"34.7 KB","compressRate":"41.7%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/paint-style.png","sourceStatusCode":200,"destWidth":1200,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn40@2020_2/2020/09/06/21-03-03-828_5e729846dee7af6a.webp","sourceBytes":124557,"destBytes":32780,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":4411,"convertSpendMs":29,"createdTime":"2020-09-07 05:03:00","host":"us-004*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"121.6 KB","destSize":"32 KB","compressRate":"26.3%"},{"code":1,"isDone":false,"source":"http://www.gcssloop.com/assets/customview/paint/arcseekbar-shadow.gif","sourceStatusCode":200,"destWidth":300,"destHeight":529,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn11@2020_2/2020/09/06/21-03-04-651_8f6f9794aa5bd4b9.webp","sourceBytes":355379,"destBytes":154092,"targetWebpQuality":75,"feedId":32069,"totalSpendMs":5086,"convertSpendMs":360,"createdTime":"2020-09-07 05:03:00","host":"us-54*","referer":"http://www.gcssloop.com/customview/paint-base","linkMd5ListStr":"63c7dc7cc5730b9c0b9889cb8fafc47f","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"347 KB","destSize":"150.5 KB","compressRate":"43.4%"}],"successGithubMap":{"myreaderx25":1,"myreaderx8":1,"myreaderx27":1,"myreaderx16":1,"myreaderx10":1,"myreaderx4":1,"myreaderx3":1,"myreaderx22":1,"myreaderx11":1,"myreaderx12":1,"myreaderx2":1,"myreaderx24":1,"myreaderx1":1,"myreaderx30":1,"myreaderx31":1,"myreaderx5oss":1,"myreaderx18":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}}