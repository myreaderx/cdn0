{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-13 22:01:22","updatedTime":"2020-10-13 22:01:22","title":"动态爬虫神器-requests_html初探","link":"https://thief.one/2019/08/16/2/","description":"<p> \n <blockquote class=\"blockquote-center\">\n   会在何处见到你，莫非前尘已注定 \n </blockquote><br>　　今天凑时间研究了下requests_html模块，它是requests模块作者开发的另一款爬虫神器。此模块主要结合了xpath网页源码获取功能，以及pyppeteer网页动态渲染功能。后者方便我们获取js动态渲染的源代码，而前者方便从源代码中获取想要的内容。<br><a id=\"more\"></a></br></br></p> \n<h3 id=\"模块下载安装\"><a href=\"https://thief.one/2019/08/16/2/#模块下载安装\" class=\"headerlink\" title=\"模块下载安装\"></a>模块下载安装</h3> \n<figure class=\"highlight bash\"> \n <table> \n  <tr> \n   <td class=\"gutter\"><pre>\n     \n     <div class=\"line\">\n      \n      1\n     \n     </div></pre></td> \n   <td class=\"code\"><pre>\n     \n     <div class=\"line\">\n      \n      pip install requests-html\n     \n     </div></pre></td> \n  </tr> \n </table> \n</figure> \n<p>注意目前只支持python3.6版本</p> \n<h3 id=\"模块基础用法\"><a href=\"https://thief.one/2019/08/16/2/#模块基础用法\" class=\"headerlink\" title=\"模块基础用法\"></a>模块基础用法</h3> \n<figure class=\"highlight bash\"> \n <table> \n  <tr> \n   <td class=\"gutter\"><pre>\n     \n     <div class=\"line\">\n      \n      1\n     \n     </div>\n     \n     <div class=\"line\">\n      \n      2\n     \n     </div>\n     \n     <div class=\"line\">\n      \n      3\n     \n     </div>\n     \n     <div class=\"line\">\n      \n      4\n     \n     </div>\n     \n     <div class=\"line\">\n      \n      5\n     \n     </div>\n     \n     <div class=\"line\">\n      \n      6\n     \n     </div>\n     \n     <div class=\"line\">\n      \n      7\n     \n     </div></pre></td> \n   <td class=\"code\"><pre>\n     \n     <div class=\"line\">\n      \n      from requests_html import HTMLSession\n     \n     </div>\n     \n     <div class=\"line\"></div>\n     \n     <div class=\"line\">\n      \n      url  = \n      \n      <span class=\"string\">\"http://sec.didichuxing.com/present\"</span>\n     \n     </div>\n     \n     <div class=\"line\"></div>\n     \n     <div class=\"line\">\n      \n      session = HTMLSession()\n     \n     </div>\n     \n     <div class=\"line\">\n      \n      r = session.get(url)\n     \n     </div>\n     \n     <div class=\"line\">\n      \n      <span class=\"built_in\">print</span>(r.html.html)  \n      \n      <span class=\"comment\"># 输出网页源码</span>\n     \n     </div></pre></td> \n  </tr> \n </table> \n</figure> \n<p>其他response方法<br> \n  <figure class=\"highlight bash\"> \n   <table> \n    <tr> \n     <td class=\"gutter\"><pre>\n       \n       <div class=\"line\">\n        \n        1\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        2\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        3\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        4\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        5\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        6\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        7\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        8\n       \n       </div></pre></td> \n     <td class=\"code\"><pre>\n       \n       <div class=\"line\">\n        \n        <span class=\"built_in\">print</span>(r.html.url) \n        \n        <span class=\"comment\"># 输出当前url</span>\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        <span class=\"built_in\">print</span>(r.html.links) \n        \n        <span class=\"comment\"># 输入页面中的link（原生样式）</span>\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        <span class=\"built_in\">print</span>(r.html.absolute_links) \n        \n        <span class=\"comment\"># 输入页面中的link（绝对链接）</span>\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        <span class=\"built_in\">print</span>(r.html)\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        <span class=\"built_in\">print</span>(r.html.text) \n        \n        <span class=\"comment\"># 输出源码中的字符</span>\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        <span class=\"built_in\">print</span>(r.html.html) \n        \n        <span class=\"comment\"># 输出源码</span>\n       \n       </div>\n       \n       <div class=\"line\"></div>\n       \n       <div class=\"line\">\n        \n        <span class=\"built_in\">print</span>(dir(r.html)) \n        \n        <span class=\"comment\"># 输入所有方法，可查看所有response方法</span>\n       \n       </div></pre></td> \n    </tr> \n   </table> \n  </figure></br></p> \n<h3 id=\"动态渲染页面\"><a href=\"https://thief.one/2019/08/16/2/#动态渲染页面\" class=\"headerlink\" title=\"动态渲染页面\"></a>动态渲染页面</h3> \n<p>requests-html模块提供了render()方法，用于动态渲染网页。当第一次执行render方法时，会自动下载Chromium（无头浏览器）到~/.pyppeteer/目录下，如下图所示：<br><img src=\"https://thief.one/upload_image/20190816_1/1.jpg\" alt=\"\"><br>使用非常简单，只需要在response中调用render方法：<br> \n     <figure class=\"highlight bash\"> \n      <table> \n       <tr> \n        <td class=\"gutter\"><pre>\n          \n          <div class=\"line\">\n           \n           1\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           2\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           3\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           4\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           5\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           6\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           7\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           8\n          \n          </div></pre></td> \n        <td class=\"code\"><pre>\n          \n          <div class=\"line\">\n           \n           from requests_html import HTMLSession\n          \n          </div>\n          \n          <div class=\"line\"></div>\n          \n          <div class=\"line\">\n           \n           url  = \n           \n           <span class=\"string\">\"http://sec.didichuxing.com/present\"</span>\n          \n          </div>\n          \n          <div class=\"line\"></div>\n          \n          <div class=\"line\">\n           \n           session = HTMLSession()\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           r = session.get(url)\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           r.html.render() \n           \n           <span class=\"comment\"># 动态渲染页面</span>\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           <span class=\"built_in\">print</span>(r.html.html) \n           \n           <span class=\"comment\"># 输出源码</span>\n          \n          </div></pre></td> \n       </tr> \n      </table> \n     </figure></br></br></img></br></p> \n<h4 id=\"实例演示\"><a href=\"https://thief.one/2019/08/16/2/#实例演示\" class=\"headerlink\" title=\"实例演示\"></a>实例演示</h4> \n<p>这里以<em><a href=\"http://sec.didichuxing.com/present\" target=\"_blank\" rel=\"external\">http://sec.didichuxing.com/present</a></em> 网站为例，可以先利用浏览器查看网页源码：<br><img src=\"https://thief.one/upload_image/20190816_1/2.jpg\" alt=\"\"><br>从上图中可以看到，此网页内容主要为js动态渲染而来，我们先尝试不用动态渲染的方式获取网页源码<br> \n     <figure class=\"highlight bash\"> \n      <table> \n       <tr> \n        <td class=\"gutter\"><pre>\n          \n          <div class=\"line\">\n           \n           1\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           2\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           3\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           4\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           5\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           6\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           7\n          \n          </div></pre></td> \n        <td class=\"code\"><pre>\n          \n          <div class=\"line\">\n           \n           from requests_html import HTMLSession\n          \n          </div>\n          \n          <div class=\"line\"></div>\n          \n          <div class=\"line\">\n           \n           url  = \n           \n           <span class=\"string\">\"http://sec.didichuxing.com/present\"</span>\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           session = HTMLSession()\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           r = session.get(url)\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           <span class=\"comment\"># r.html.render() # 动态渲染页面</span>\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           <span class=\"built_in\">print</span>(r.html.html)\n          \n          </div></pre></td> \n       </tr> \n      </table> \n     </figure></br></br></img></br></p> \n<p>输出：<br><img src=\"https://thief.one/upload_image/20190816_1/3.jpg\" alt=\"\"><br>然后加上render方法<br> \n     <figure class=\"highlight bash\"> \n      <table> \n       <tr> \n        <td class=\"gutter\"><pre>\n          \n          <div class=\"line\">\n           \n           1\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           2\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           3\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           4\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           5\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           6\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           7\n          \n          </div></pre></td> \n        <td class=\"code\"><pre>\n          \n          <div class=\"line\">\n           \n           from requests_html import HTMLSession\n          \n          </div>\n          \n          <div class=\"line\"></div>\n          \n          <div class=\"line\">\n           \n           url  = \n           \n           <span class=\"string\">\"http://sec.didichuxing.com/present\"</span>\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           session = HTMLSession()\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           r = session.get(url)\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           r.html.render() \n           \n           <span class=\"comment\"># 动态渲染页面</span>\n          \n          </div>\n          \n          <div class=\"line\">\n           \n           <span class=\"built_in\">print</span>(r.html.html)\n          \n          </div></pre></td> \n       </tr> \n      </table> \n     </figure></br></br></img></br></p> \n<p>输出：<br><img src=\"https://thief.one/upload_image/20190816_1/4.jpg\" alt=\"\" /></br></p> \n<p>可以看到网页上的内容被动态渲染出来了，简直方便。</p> \n<h3 id=\"异步\"><a href=\"https://thief.one/2019/08/16/2/#异步\" class=\"headerlink\" title=\"异步\"></a>异步</h3> \n<p>request_html同样支持异步，具体使用方法：<br> \n  <figure class=\"highlight bash\"> \n   <table> \n    <tr> \n     <td class=\"gutter\"><pre>\n       \n       <div class=\"line\">\n        \n        1\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        2\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        3\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        4\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        5\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        6\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        7\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        8\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        9\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        10\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        11\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        12\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        13\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        14\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        15\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        16\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        17\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        18\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        19\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        20\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        21\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        22\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        23\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        24\n       \n       </div></pre></td> \n     <td class=\"code\"><pre>\n       \n       <div class=\"line\">\n        \n        &gt;&gt;&gt; from requests_html import AsyncHTMLSession\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        &gt;&gt;&gt; asession = AsyncHTMLSession()\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        &gt;&gt;&gt; async def get_pythonorg():\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        ...     r = await asession.get(\n        \n        <span class=\"string\">'https://python.org/'</span>)\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        ...     \n        \n        <span class=\"built_in\">return</span> r\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        ...\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        &gt;&gt;&gt; async def get_reddit():\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        ...    r = await asession.get(\n        \n        <span class=\"string\">'https://reddit.com/'</span>)\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        ...    \n        \n        <span class=\"built_in\">return</span> r\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        ...\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        &gt;&gt;&gt; async def get_google():\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        ...    r = await asession.get(\n        \n        <span class=\"string\">'https://google.com/'</span>)\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        ...    \n        \n        <span class=\"built_in\">return</span> r\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        ...\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        &gt;&gt;&gt; results = asession.run(get_pythonorg, get_reddit, get_google)\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        &gt;&gt;&gt; results \n        \n        <span class=\"comment\"># check the requests all returned a 200 (success) code</span>\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        [&lt;Response [200]&gt;, &lt;Response [200]&gt;, &lt;Response [200]&gt;]\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        &gt;&gt;&gt; \n        \n        <span class=\"comment\"># Each item in the results list is a response object and can be interacted with as such</span>\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        &gt;&gt;&gt; \n        \n        <span class=\"keyword\">for</span> result \n        \n        <span class=\"keyword\">in</span> results:\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        ...     \n        \n        <span class=\"built_in\">print</span>(result.html.url)\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        ...\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        https://www.python.org/\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        https://www.google.com/\n       \n       </div>\n       \n       <div class=\"line\">\n        \n        https://www.reddit.com/\n       \n       </div></pre></td> \n    </tr> \n   </table> \n  </figure></br></p> \n<p>更多使用文档，请移步：<a href=\"https://github.com/psf/requests-html\" target=\"_blank\" rel=\"external\">https://github.com/psf/requests-html</a><br>说明：关于requests_html模块暂时没有研究太多，日后用到了再补充！！！</br></p>","descriptionType":"html","publishedDate":"Fri, 16 Aug 2019 07:00:18 +0000","feedId":27333,"bgimg":"https://thief.one/upload_image/20190816_1/1.jpg","linkMd5":"366a1cae5b95ed4f6de30d086b6bed83","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn81@2020_1/2020/10/13/14-01-29-721_cf5fefcb2e5376f0.webp","destWidth":2388,"destHeight":452,"sourceBytes":143937,"destBytes":61284,"author":"","articleImgCdnMap":{"https://thief.one/upload_image/20190816_1/1.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn81@2020_1/2020/10/13/14-01-29-721_cf5fefcb2e5376f0.webp","https://thief.one/upload_image/20190816_1/2.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn86@2020_6/2020/10/13/14-01-37-751_5eeae1b6446ff9d7.webp","https://thief.one/upload_image/20190816_1/3.jpg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn93@2020_4/2020/10/13/14-01-41-118_996ca4d58fd51a38.webp","https://thief.one/upload_image/20190816_1/4.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn90@2020_1/2020/10/13/14-01-43-886_66aedc655e0d897f.webp"},"publishedOrCreatedDate":1602597682317}],"record":{"createdTime":"2020-10-13 22:01:22","updatedTime":"2020-10-13 22:01:22","feedId":27333,"fetchDate":"Tue, 13 Oct 2020 14:01:22 +0000","fetchMs":1862,"handleMs":48,"totalMs":25241,"newArticles":0,"totalArticles":20,"status":1,"type":0,"ip":"51ac9e637da291781441027dafcaab71","hostName":"us-014*","requestId":"ae0cc6b8346d45418cbc243f2102de95_27333","contentType":"text/xml","totalBytes":773924,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":4,"articlesImgsGithubTotal":4,"successGithubMap":{"myreaderx25":1,"myreaderx8":1,"myreaderx21":1,"myreaderx30":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:41:03","updatedTime":"2020-09-07 04:42:17","id":27333,"name":"nmask's Blog","url":"http://thief.one/atom.xml","subscriber":119,"website":null,"icon":"https://thief.one/favicon.ico?v=5.0.1","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx65/cdn65@2020_3/2020/09/06/20-42-16-656_d66c2c37227536f6.ico","description":"所谓博客，都是孤芳自赏","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":61284,"tmpBodyImgCdnBytes":712640,"tmpBgImgCdnBytes":0,"extra4":{"start":1602597679954,"total":0,"statList":[{"spend":2315,"msg":"获取xml内容"},{"spend":48,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":14292,"msg":"正文链接上传到cdn"}]},"extra5":4,"extra6":4,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{"https://thief.one/2019/08/16/2/_#模块基础用法":"https://thief.one/2019/08/16/2/#模块基础用法","https://thief.one/2019/08/16/2/_#实例演示":"https://thief.one/2019/08/16/2/#实例演示","https://thief.one/2019/08/16/2/_#模块下载安装":"https://thief.one/2019/08/16/2/#模块下载安装","https://thief.one/2019/08/16/2/_#动态渲染页面":"https://thief.one/2019/08/16/2/#动态渲染页面","https://thief.one/2019/08/16/2/_#异步":"https://thief.one/2019/08/16/2/#异步"},"extra111_proxyServerAndStatMap":{"http://us-036.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-024.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-011.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://thief.one/upload_image/20190816_1/1.jpg","sourceStatusCode":200,"destWidth":2388,"destHeight":452,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn81@2020_1/2020/10/13/14-01-29-721_cf5fefcb2e5376f0.webp","sourceBytes":143937,"destBytes":61284,"targetWebpQuality":75,"feedId":27333,"totalSpendMs":6416,"convertSpendMs":48,"createdTime":"2020-10-13 22:01:24","host":"europe-58*","referer":"https://thief.one/2019/08/16/2/","linkMd5ListStr":"366a1cae5b95ed4f6de30d086b6bed83,366a1cae5b95ed4f6de30d086b6bed83","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"140.6 KB","destSize":"59.8 KB","compressRate":"42.6%"},{"code":1,"isDone":false,"source":"https://thief.one/upload_image/20190816_1/2.jpg","sourceStatusCode":200,"destWidth":3214,"destHeight":730,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn86@2020_6/2020/10/13/14-01-37-751_5eeae1b6446ff9d7.webp","sourceBytes":288709,"destBytes":117422,"targetWebpQuality":75,"feedId":27333,"totalSpendMs":7932,"convertSpendMs":89,"createdTime":"2020-10-13 22:01:30","host":"us-036*","referer":"https://thief.one/2019/08/16/2/","linkMd5ListStr":"366a1cae5b95ed4f6de30d086b6bed83","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"281.9 KB","destSize":"114.7 KB","compressRate":"40.7%"},{"code":1,"isDone":false,"source":"https://thief.one/upload_image/20190816_1/3.jpg","sourceStatusCode":200,"destWidth":2200,"destHeight":1350,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn93@2020_4/2020/10/13/14-01-41-118_996ca4d58fd51a38.webp","sourceBytes":633123,"destBytes":230202,"targetWebpQuality":75,"feedId":27333,"totalSpendMs":11463,"convertSpendMs":244,"createdTime":"2020-10-13 22:01:30","host":"us-011*","referer":"https://thief.one/2019/08/16/2/","linkMd5ListStr":"366a1cae5b95ed4f6de30d086b6bed83","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"618.3 KB","destSize":"224.8 KB","compressRate":"36.4%"},{"code":1,"isDone":false,"source":"https://thief.one/upload_image/20190816_1/4.jpg","sourceStatusCode":200,"destWidth":2190,"destHeight":1326,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn90@2020_1/2020/10/13/14-01-43-886_66aedc655e0d897f.webp","sourceBytes":1000656,"destBytes":365016,"targetWebpQuality":75,"feedId":27333,"totalSpendMs":14251,"convertSpendMs":201,"createdTime":"2020-10-13 22:01:30","host":"us-024*","referer":"https://thief.one/2019/08/16/2/","linkMd5ListStr":"366a1cae5b95ed4f6de30d086b6bed83","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"977.2 KB","destSize":"356.5 KB","compressRate":"36.5%"}],"successGithubMap":{"myreaderx25":1,"myreaderx8":1,"myreaderx21":1,"myreaderx30":1},"failGithubMap":{}}