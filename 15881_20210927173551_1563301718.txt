{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-09-28 01:33:49","updatedTime":"2021-09-28 01:33:49","title":"Python in Visual Studio Code – September 2021 Release","link":"https://devblogs.microsoft.com/python/?p=8674","description":"<p>We are pleased to announce that the September 2021 release of the Python Extension for Visual Studio Code is now available. You can <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-python.python\">download the Python extension</a> from the Marketplace, or install it directly from the extension gallery in Visual Studio Code. If you already have the Python extension installed, you can also get the latest update by restarting Visual Studio Code. You can learn more about  <a href=\"https://code.visualstudio.com/docs/python/python-tutorial\">Python support in Visual Studio Code</a> in the documentation.</p>\n<p>In this release we closed <a href=\"https://github.com/microsoft/vscode-python/issues?q=is%3Aissue+milestone%3A%22August+2021%22+is%3Aclosed\">80 issues</a>, and it includes:</p>\n<ul>\n<li>A rich Python editing experience in the browser</li>\n<li>Revamped testing interface</li>\n<li>New button for running and debugging files on the editor</li>\n<li>An update regarding the Microsoft Python Language Server’s end of life, as well as for Python 2.7 IntelliSense support.</li>\n</ul>\n<p>If you’re interested, you can check the full list of improvements in our <a href=\"https://github.com/Microsoft/vscode-python/blob/master/CHANGELOG.md\">changelog</a>.</p>\n<h1 id=\"a-rich-python-editing-experience-in-the-browser-via-github-dev\">A rich Python editing experience (in the browser!) via github.dev</h1>\n<p>We are delighted to announce that as of this release you can enjoy the performant editing experience of Pylance in the browser via <a href=\"https://github.dev/\">github.dev</a>. If you are unfamiliar with github.dev, you can head over to any repo, pull request, or file on GitHub and hit ‘.’ on your keyboard (or change the URL to github.dev) to give it a shot!</p>\n<p>We’ve added support for the core editing features you might want when exploring a new codebase or making minor edits to your Python code. These features include:</p>\n<ul>\n<li><a href=\"https://devblogs.microsoft.com/python/pylance-has-reached-stable/#semantic-colorization\">Semantic highlighting</a></li>\n<li>Completions for built-ins, Pylance’s bundled stubs, locally defined symbols in the current file, and symbols in open files</li>\n<li>Syntax errors</li>\n<li><a href=\"https://devblogs.microsoft.com/python/pylance-has-reached-stable/#code-navigation\">Code navigation</a></li>\n<li>Outline support</li>\n<li><a href=\"https://devblogs.microsoft.com/python/pylance-has-reached-stable/#function-signature-help-with-parameter-and-return-type-information\">Function signature help</a></li>\n<li><a href=\"https://devblogs.microsoft.com/python/pylance-has-reached-stable/#contextual-document-highlighting\">Contextual document highlighting</a></li>\n</ul>\n<p>You can check out Dan Taylor giving <a href=\"https://www.youtube.com/watch?v=ujxj1YX7PWM\">a demo on the Python Bytes podcast</a> of this new experience if you’d like!</p>\n<p>We’re excited for you to give this new experience a try and welcome any feedback on the <a href=\"https://github.com/microsoft/pylance-release\">Pylance issue tracker.</a></p>\n<p>Although running Python code in the browser isn’t yet supported, you can do so in a Jupyter notebook with the <a href=\"https://marketplace.visualstudio.com/items?itemName=joyceerhl.vscode-pyolite\">vscode-pyolite extension</a> (in preview), made by one of our team members!</p>\n<h1 id=\"revamped-testing-interface\">Revamped Testing Interface</h1>\n<p>We’re excited to announce that we have revamped the look of our Python testing features by utilizing the built-in test explorer in VS Code. You can now enjoy a more stable UI experience for test discovery, navigation and status rendering, as well as new features such as test search, run a selection of tests, rerun last executed test, and more. With this change alone, <a href=\"https://github.com/microsoft/vscode-python/issues?page=1&#38;q=is%3Aissue+label%3Aarea-testing+milestone%3A%22August+2021%22+is%3Aclosed\">we have closed 55 issues</a> on our GitHub repo!</p>\n<h2 id=\"test-configuration\"><span style=\"font-family: 'Segoe UI',sans-serif;\">Test configuration </span></h2>\n<p>Once the Python extension activates, you will see the Test Explorer on the activity bar. If you haven’t configured the testing features, you will see an option to do so on the welcome view:</p>\n<p><a href=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-ConfigureTests.png\"><img class=\"aligncenter wp-image-8675 size-medium\" src=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-ConfigureTests-230x300.png\" alt=\"Configure Python tests button on the test explorer view\" width=\"230\" height=\"300\" srcset=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-ConfigureTests-230x300.png 230w, https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-ConfigureTests.png 607w\" sizes=\"(max-width: 230px) 100vw, 230px\" /></a></p>\n<h2 id=\"test-discovery\"><span style=\"font-family: 'Segoe UI',sans-serif;\">Test discovery </span></h2>\n<p>Once the testing features are configured, the Python extension attempt to discover tests. Once they’re discovered, you will see your tests listed on the test explorer:</p>\n<p><a href=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-TestsDiscovered.png\"><img class=\"aligncenter wp-image-8680 size-medium\" src=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-TestsDiscovered-240x300.png\" alt=\"Tests displayed on the test explorer once they are discovered\" width=\"240\" height=\"300\" srcset=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-TestsDiscovered-240x300.png 240w, https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-TestsDiscovered.png 622w\" sizes=\"(max-width: 240px) 100vw, 240px\" /></a></p>\n<p>Tests are now discovered automatically by default whenever you add, delete, or update any python file in the workspace. You can disable that functionality by changing the &#8220;python.testing.autoTestDiscoverOnSaveEnabled&#8221; setting to “false”.</p>\n<h2 id=\"test-navigation\"><span style=\"font-family: 'Segoe UI',sans-serif;\">Test Navigation</span></h2>\n<p>You can navigate to test methods or files through the test explorer by clicking on “Go to Test” icon that shows when you hover over or click on a test item. But now you can also navigate to the test on the test explorer from the editor, by right-clicking on the gutter decoration and selecting “Reveal in Test Explorer”.</p>\n<p><a href=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-TestNavigation.gif\"><img class=\"aligncenter size-full wp-image-8679\" src=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-TestNavigation.gif\" alt=\"Navigating to tests from the test explorer and from the editor\" width=\"1561\" height=\"1110\" /></a></p>\n<h2 id=\"run-and-debug-tests\"><span style=\"font-family: 'Segoe UI',sans-serif;\">Run and debug tests </span></h2>\n<p>Although we’ve retired the code lenses, there are still more options for you to run and debug your tests:</p>\n<h3 id=\"the-test-explorer\"><strong>The test explorer</strong></h3>\n<p>By hovering over the test items on the test explorer and clicking on the corresponding icons, as well as through the icons on the top right of the test explorer to run and debug all of the discovered tests. And now you can also run a selection of tests by Ctrl + clicking (or Cmd + Clicking if you’re on macOS) the ones you’d like to run in the explorer, and then clicking on the run icon for one of the tests in the selection:</p>\n<p><a href=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-RunTestsThroughExplorer.gif\"><img class=\"aligncenter size-full wp-image-8678\" src=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-RunTestsThroughExplorer.gif\" alt=\"Running tests through the test explorer\" width=\"1561\" height=\"1110\" /></a></p>\n<h3 id=\"the-editor\"><strong>The editor</strong></h3>\n<p>Although we’ve retired the code lenses, you can still run and debug tests in the editor by clicking on the gutter decorations. You can also right-click on them to debug the tests instead (and you can even change the default behaviour what clicking on the decorators will do to through the &#8220;testing.defaultGutterClickAction&#8221; setting).</p>\n<p><a href=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-RunTestsThroughEditor.gif\"><img class=\"aligncenter size-full wp-image-8677\" src=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-RunTestsThroughEditor.gif\" alt=\"Running tests through the gutter decorations on theeditor\" width=\"1561\" height=\"1110\" /></a></p>\n<p>To configure the debugger for tests, you can specify &#8220;purpose&#8221;: [&#8220;debug-test&#8221;] in the launch.json file in the .vscode folder from your workspace.</p>\n<p>For example, the configuration below in the launch.json file disables the justMyCode setting for debugging tests:</p>\n<pre class=\"prettyprint\">{\n    \"name\": \"Python: Current File\",\n    \"type\": \"python\",\n    \"request\": \"launch\",\n    \"program\": \"${file}\",\n    \"console\": \"integratedTerminal\",\n    \"justMyCode\": false,\n    \"purpose\": [\"debug-test\"]\n}</pre>\n<h3 id=\"commands\"><strong>Commands</strong></h3>\n<p>We now have new commands that can be particularly helpful when you’re creating or modifying tests. We often want to run the same test method a couple of times when we’re creating it. To make that simpler and more accessible, you can use the “Test: Run Test at Cursor” command to run the method where you have the cursor at in the editor (and you can even <a href=\"https://code.visualstudio.com/docs/getstarted/keybindings#_keyboard-shortcuts-editor\">add a keyboard shortcut</a> for it so you can more easily do so!). Similarly, you can run the “Test: Rerun last run” command if you want to run the only last test you have executed.</p>\n<p>Because we’re leveraging VS Code’s new <a href=\"https://code.visualstudio.com/api/extension-guides/testing\">testing API</a>, a few of our testing commands have changed. If you are used to our old test commands or have key-bindings set up for them, <a href=\"https://code.visualstudio.com/docs/python/testing#_test-commands\">you can reference our documentation</a> to see what the corresponding new commands are.</p>\n<h1 id=\"new-button-for-running-and-debugging-files-on-the-editor\">New button for running and debugging files on the editor</h1>\n<p>We improved our “run button” on the editor to also include debugging files as an option. When you click on the icon it will run your active Python file in the terminal by default, but you can click on the down-arrow to change the action to debug it instead:</p>\n<p><a href=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-RunAndDebugIcon.gif\"><img class=\"aligncenter size-full wp-image-8676\" src=\"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-RunAndDebugIcon.gif\" alt=\"Running and debugging using the new icons on the top right of the editor\" width=\"1708\" height=\"1074\" /></a></p>\n<p>You can also customize the action for what the debug icon does by creating a launch.json file and adding “purpose” : [“debug-in-terminal”] to your Python configuration.</p>\n<p>For example, the configuration below enables stepping into non-user code when debugging through the debug icon on the editor:</p>\n<pre class=\"prettyprint\">{\n    \"name\": \"Python: Current File - Editor Button\",\n    \"type\": \"python\",\n    \"request\": \"launch\",\n    \"program\": \"${file}\",\n    \"console\": \"integratedTerminal\",\n    \"justMyCode\": false,\n    \"purpose\": [\"debug-in-terminal\"]\n}</pre>\n<p>One thing to note is that this will only work for debugging files through the debug icon on the editor – it will not work when starting the debugger through the Run and Debug view or through F5.</p>\n<h1 id=\"limited-intellisense-support-for-python-2-7-starting-in-october-2021\">Limited IntelliSense support for Python 2.7 starting in October 2021</h1>\n<p>Our IntelliSense support for Python 2.7 users comes from <a href=\"https://github.com/davidhalter/jedi/releases/tag/v0.17.2\">Jedi 0.17</a>, which came out over a year ago and is the last release of Jedi that supported Python 2.7.  Since that time, we have begun using (and contributing to) <a href=\"https://github.com/pappasam/jedi-language-server\">jedi-language-server</a>, which puts Jedi behind <a href=\"https://microsoft.github.io/language-server-protocol/\">LSP</a>. This has given Jedi users better performance, refactoring and code navigation capabilities, but is only available for Jedi 0.18.</p>\n<p>Starting with the 2021.10 of the Python extension, we will only offer support for Jedi 0.18 and higher, and no longer ship support for Jedi 0.17. We will also be removing support for ctags and rope at the same time.</p>\n<p>You can check <a href=\"https://github.com/microsoft/vscode-python/wiki/Limited-support-for-Python-2.7\">our wiki page</a> to learn more about the reason behind it and what you can do if you’re still using Python 2.7 in VS Code.</p>\n<h1 id=\"microsoft-python-language-server-end-of-life-november-2021\">Microsoft Python Language Server end of life November 2021</h1>\n<p>In the June 2020 release, <a href=\"https://devblogs.microsoft.com/python/announcing-pylance-fast-feature-rich-language-support-for-python-in-visual-studio-code/\">we announced our team’s investment in Pylance</a>, a new more performant and feature-rich Python language server, and the eventual deprecation of our legacy language server, the Microsoft Python Language Server Since this announcement, our team has <a href=\"https://devblogs.microsoft.com/python/python-in-visual-studio-code-may-2021-release/\">worked hard to improve language server support</a> in both Pylance and the open-source language server, <a href=\"https://github.com/pappasam/jedi-language-server\">Jedi</a>.</p>\n<p>With Pylance now as the default language support for Python for Visual Studio Code, almost all of our users have switched to our new language server. <strong>As such, the Microsoft Python Language Server will reach end of life with the November </strong><strong>release of the Python in Visual Studio Code extension. </strong>After deprecation, the <a href=\"https://github.com/microsoft/python-language-server\">Microsoft Python Language Server repository</a> will be marked as archived. This will still allow you to fork and build upon the language server’s codebase if you’d like.</p>\n<p>If you are still using this language server (your python.languageServer setting is set to “Microsoft”), you will now see a prompt asking you to choose a new language server – Pylance (recommended; default) or Jedi (open-source). Upon selection, your python.languageServer setting will be appropriately updated in your settings.json to reflect your choice. If at any point you want to try something new, you can do that by <a href=\"https://devblogs.microsoft.com/python/python-in-visual-studio-code-may-2021-release/#configuring-your-language-server\">updating your settings.</a> If by the November release you have not yet selected a new language server, your language server will automatically flip to the default language support for Python in Visual Studio Code – Pylance.</p>\n<p>We’d like to thank all our Microsoft Python Language Server users for their feedback and support over the last couple of years. Your input helped shape what we believe is the best language support for Python in Visual Studio Code ever.</p>\n<h1 id=\"other-changes-and-enhancements\">Other Changes and Enhancements</h1>\n<p>We have also added small enhancements and fixed issues requested by users that should improve your experience working with Python in Visual Studio Code. Some notable changes include:</p>\n<ul>\n<li>Improved display of interpreters list (<a href=\"https://github.com/microsoft/vscode-python/issues/16971\">#16971</a>)</li>\n<li>Removed support for nose (<a href=\"https://github.com/microsoft/vscode-python/issues/16371\">#16371</a>)</li>\n<li>Magic cells on Python notebooks no longer cause an error in Pylance (<a href=\"https://github.com/microsoft/vscode-python/issues/17058\">#17058</a>)</li>\n</ul>\n<p>And huge thanks to this month’s contributors:</p>\n<ul>\n<li><a href=\"https://github.com/FiftysixTimes7\">FiftysixTimes7</a>: Updated Simplified Chinese translation (<a href=\"https://github.com/Microsoft/vscode-python/issues/16916\">#16916</a>)</li>\n<li><a href=\"https://github.com/bigjools\">JulianEdwards</a>: Fix for unittest discovery (<a href=\"https://github.com/Microsoft/vscode-python/issues/16593\">#16593</a>)</li>\n<li><a href=\"https://github.com/cdce8p\">Marc Mueller</a>: Fix environment sorting for the Python: Select Interpreter (<a href=\"https://github.com/Microsoft/vscode-python/issues/16893\">#16893</a>)</li>\n</ul>\n<p>Be sure to <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-python.python\">download the Python extension</a> for Visual Studio Code now to try out the above improvements. If you run into any problems or have suggestions, <a href=\"https://github.com/microsoft/vscode-python/issues/new/choose\">please file an issue</a> on the <a href=\"https://github.com/Microsoft/vscode-python\">Python VS Code GitHub</a> page.</p>\n<p>&#160;</p>\n<p>&#160;</p>\n<p>The post <a rel=\"nofollow\" href=\"https://devblogs.microsoft.com/python/python-in-visual-studio-code-september-2021-release/\">Python in Visual Studio Code – September 2021 Release</a> appeared first on <a rel=\"nofollow\" href=\"https://devblogs.microsoft.com/python\">Python</a>.</p>\n","descriptionType":"html","publishedDate":"Thu, 02 Sep 2021 18:52:43 +0000","feedId":15881,"bgimg":"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-ConfigureTests-230x300.png","linkMd5":"de3b826fc0f225ee5986cdc69e7485ca","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn95@2020_2/2021/09/27/17-33-49-227_940f9f8a7d5669e3.webp","destWidth":230,"destHeight":300,"sourceBytes":19529,"destBytes":4684,"author":"Savannah Ostrowski","articleImgCdnMap":{"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-ConfigureTests-230x300.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn95@2020_2/2021/09/27/17-33-49-227_940f9f8a7d5669e3.webp","https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-TestsDiscovered-240x300.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn2@2020_4/2021/09/27/17-33-49-545_c17943483ea9ea01.webp","https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-TestNavigation.gif":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn8@2020_6/2021/09/27/17-34-06-753_9cb6f53f3a54f892.webp","https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-RunTestsThroughExplorer.gif":null,"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-RunTestsThroughEditor.gif":null,"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-RunAndDebugIcon.gif":null},"publishedOrCreatedDate":1632764029060}],"record":{"createdTime":"2021-09-28 01:33:49","updatedTime":"2021-09-28 01:33:49","feedId":15881,"fetchDate":"Mon, 27 Sep 2021 17:33:49 +0000","fetchMs":166,"handleMs":11,"totalMs":122102,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"f306b40366a93aa712f78b685bea0f01","hostName":"us-004*","requestId":"2b33bfae2f4b4eb8b5194dc3e37a559a_15881","contentType":"application/rss+xml; charset=UTF-8","totalBytes":1953460,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":6,"articlesImgsGithubTotal":3,"successGithubMap":{"myreaderx6":1,"myreaderx1":1,"myreaderx":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:11:38","updatedTime":"2020-09-07 02:37:07","id":15881,"name":"Python","url":"https://blogs.msdn.microsoft.com/pythonengineering/feed/","subscriber":211,"website":null,"icon":"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2018/10/Microsoft-Favicon.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn46@2020_6/2020/09/06/18-37-02-513_6321c1b6478d4b23.png","description":"Read the latest updates about all things Python at Microsoft","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-09-28 01:35:50","updatedTime":"2021-09-28 01:35:50","id":null,"feedId":15881,"linkMd5":"de3b826fc0f225ee5986cdc69e7485ca"}],"tmpCommonImgCdnBytes":4684,"tmpBodyImgCdnBytes":1948776,"tmpBgImgCdnBytes":0,"extra4":{"start":1632764028881,"total":0,"statList":[{"spend":168,"msg":"获取xml内容"},{"spend":11,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":121490,"msg":"正文链接上传到cdn"}]},"extra5":6,"extra6":3,"extra7ImgCdnFailResultVector":[null,null,null,null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-23.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://us-039.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-010.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe61.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-011.herokuapp.com/":{"failCount":2,"successCount":1,"resultList":[200,null,null]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-ConfigureTests-230x300.png","sourceStatusCode":200,"destWidth":230,"destHeight":300,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn95@2020_2/2021/09/27/17-33-49-227_940f9f8a7d5669e3.webp","sourceBytes":19529,"destBytes":4684,"targetWebpQuality":75,"feedId":15881,"totalSpendMs":420,"convertSpendMs":6,"createdTime":"2021-09-28 01:33:49","host":"us-035*","referer":"https://devblogs.microsoft.com/python/?p=8674","linkMd5ListStr":"de3b826fc0f225ee5986cdc69e7485ca,de3b826fc0f225ee5986cdc69e7485ca","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.1 KB","destSize":"4.6 KB","compressRate":"24%"},{"code":1,"isDone":false,"source":"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-TestsDiscovered-240x300.png","sourceStatusCode":200,"destWidth":240,"destHeight":300,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn2@2020_4/2021/09/27/17-33-49-545_c17943483ea9ea01.webp","sourceBytes":21557,"destBytes":5744,"targetWebpQuality":75,"feedId":15881,"totalSpendMs":302,"convertSpendMs":6,"createdTime":"2021-09-28 01:33:49","host":"us-011*","referer":"https://devblogs.microsoft.com/python/?p=8674","linkMd5ListStr":"de3b826fc0f225ee5986cdc69e7485ca","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.1 KB","destSize":"5.6 KB","compressRate":"26.6%"},{"code":1,"isDone":false,"source":"https://devblogs.microsoft.com/python/wp-content/uploads/sites/12/2021/09/September2021-TestNavigation.gif","sourceStatusCode":200,"destWidth":1561,"destHeight":1110,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn8@2020_6/2021/09/27/17-34-06-753_9cb6f53f3a54f892.webp","sourceBytes":2780743,"destBytes":1943032,"targetWebpQuality":75,"feedId":15881,"totalSpendMs":18130,"convertSpendMs":16843,"createdTime":"2021-09-28 01:33:49","host":"europe-23*","referer":"https://devblogs.microsoft.com/python/?p=8674","linkMd5ListStr":"de3b826fc0f225ee5986cdc69e7485ca","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.7 MB","destSize":"1.9 MB","compressRate":"69.9%"}],"successGithubMap":{"myreaderx6":1,"myreaderx1":1,"myreaderx":1},"failGithubMap":{}}