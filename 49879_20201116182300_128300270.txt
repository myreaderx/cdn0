{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-11-17 02:22:36","updatedTime":"2020-11-17 02:22:36","title":" Graph Convolutional Neural Networks for Web-Scale Recommender Systems (KDD 2018) 読んだ","link":"https://repose.hatenadiary.jp/entry/2018/09/20/095326","description":"<p><a href=\"http://www.kdd.org/kdd2018/accepted-papers/view/graph-convolutional-neural-networks-for-web-scale-recommender-systems\">KDD 2018 | Graph Convolutional Neural Networks for Web-Scale Recommender Systems</a><br />\n著者に Jure Keskovec がいる．<br />\n<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/Pinterest\">Pinterest</a> における推薦にて node の embedding を graph convolution で学習する推薦手法 PinSage を提案している．タイトルだけ読むとそのように思えるけれど，<strong>実際には Graph Convolutional Network で行われるような Graph Fourier変換にもとづく畳み込みを行っていない．</strong>この点を誤解しているまたはまともに読んでない人しかいないのではないかと思う (footnote 1 で however, the architecture we employ does not directly approximate a spectral graph convolution と言及もしている)．</p>\n\n<div class=\"section\">\n    <h4>PinSage における Graph Convolution</h4>\n    \n<div class=\"section\">\n    <h5>Convolution</h5>\n    <p>今，次のような関数を考える (論文中ではこの操作を Convolution と呼んでいる)．論文中の Algorithm 1 の説明では <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=h\" alt=\"h\"/> と <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=z\" alt=\"z\"/> が未定義の状態で登場していて完全に意味不明なので論文の主張に沿って正しいと思われるコードを書く．</p>\n<pre class=\"code lang-python\" data-lang=\"python\" data-unlink><span class=\"synComment\"># node u に対する畳込みを得る関数</span>\n<span class=\"synComment\"># z_u  : u の現在の畳み込み表現</span>\n<span class=\"synComment\"># z_neighbors : u の近傍ノードの畳み込み表現の集合</span>\n<span class=\"synComment\"># alpha : 近傍ノードの重み</span>\n<span class=\"synComment\"># Q, q : importance_pooling に渡す前のパラメタ</span>\n<span class=\"synComment\"># W, w : 最後の ReLU に渡す前のパラメタ</span>\n<span class=\"synStatement\">def</span> <span class=\"synIdentifier\">covolve</span>(u, z_u, z_neighbors, alpha):\n    n_u = importance_pooling(ReLU(Q * z_neighbors + q), alpha)\n    z_u_new = ReLU(W * concat(z_u, n_u) + w)\n    <span class=\"synStatement\">return</span> normalize(z_u_new)\n\n<span class=\"synComment\"># vectors を element-wise に weights で重み付けして平均を取る pooling 関数</span>\n<span class=\"synStatement\">def</span> <span class=\"synIdentifier\">importance_pooling</span>(vectors, weights):\n    i, j = vectors.shape\n    ret = [ ]\n    <span class=\"synStatement\">for</span> dim <span class=\"synStatement\">in</span> j:\n        ret[dim] = np.mean(vectors[dim, pos] * weights[pos] <span class=\"synStatement\">for</span> pos <span class=\"synStatement\">in</span> <span class=\"synIdentifier\">range</span>(i))\n\n    <span class=\"synStatement\">return</span> ret\n</pre><p>何をやっているかというと，ある node <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=u\" alt=\"u\"/> に対する embedding をその近傍にある node の embedding をまとめて pooling し，現在の embedding と concat した上で ReLU に通している．これを深さ <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=K\" alt=\"K\"/> まで繰り返し適用する (論文中では <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=k\" alt=\"k\"/> 回目の繰り返しにて得られる embedding を <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=h%5E%7B%28k%29%7D\" alt=\"h^{(k)}\"/> と表現している)．思ったよりシンプル．</p><p><del>ここだけ読むとシンプルな話でいいわけですが，論文冒頭では「 node <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=u\" alt=\"u\"/> には visual や texual な feature が付与されている」「この手法ではそれら feature を使って embedding を学習する」と書いてある．しかし上記のコードにはそれら feature に対する言及がない．\"We start with input node features and then learn neural networks that transform and aggregate features over the graph to compute the node embeddings\" と書いてはあるがその後の記述を読むと embedding のことを feature と呼んでいて正直に言って全く理解できない．</del><br />\n<a href=\"http://blog.hatena.ne.jp/another16javac/\">id:another16javac</a> さんから「GraphSAGE  <a href=\"https://arxiv.org/abs/1706.02216\">[1706.02216] Inductive Representation Learning on Large Graphs</a> が参考になる」というコメントをいただき読んだところ <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=h%5E%7B0%7D\" alt=\"h^{0}\"/> を特徴量 <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=x\" alt=\"x\"/> で初期化しているのでここで使うという話だった．そしてこの論文もよく読むと algorithm 2 で同様に <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=h%5E%7B0%7D\" alt=\"h^{0}\"/> を <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=x\" alt=\"x\"/> で初期化していた．恥ずかしい．</p>\n\n</div>\n<div class=\"section\">\n    <h5>細かいテクニック</h5>\n    \n<ul>\n<li>Pixie で行ったように <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=u\" alt=\"u\"/> から始まる<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%E9%A5%F3%A5%C0%A5%E0%A5%A6%A5%A9%A1%BC%A5%AF\">ランダムウォーク</a>による訪問回数が上位の node を近傍として用いる．また，この時の訪問回数を重み <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=%5Calpha\" alt=\"\\alpha\"/> として用いる． Pixie ではこの時の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%E9%A5%F3%A5%C0%A5%E0%A5%A6%A5%A9%A1%BC%A5%AF\">ランダムウォーク</a>に用いる遷移行列を node の特徴量を謎の関数に通して重み付けしていたが，まさかこれが上記の疑問に相当する?</li>\n<li>学習はクエリ <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=q\" alt=\"q\"/> と正例 <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=i\" alt=\"i\"/> のペア <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=%28q%2C%20i%29\" alt=\"(q, i)\"/> が与えられていると考え，負例のペアより正例のペアの embedding の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%C6%E2%C0%D1\">内積</a>が大きくなるように学習する．</li>\n<li>またこの時，負例は negative sampling するわけですが uniform にやるとほとんど関係ない負例ばかり出てきて関数が収束しない．そこで <img src=\"https://chart.apis.google.com/chart?cht=tx&chl=q\" alt=\"q\"/> に似ているが正例ではない負例 を hard negative item として選ぶ．また，学習の際には epoch ごとに hard negative item を段階的に増やす curriculum training を行う．</li>\n<li>学習は <a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/MapReduce\">MapReduce</a>． d2.8xlarge の<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9\">インスタンス</a>を 378 台並べて<a class=\"keyword\" href=\"http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF\">クラスタ</a>を作る．</li>\n</ul><p>Graph の convolve は分かるけどどうやって特徴量を有効活用したのかわからない．</p>\n\n</div>\n</div>","descriptionType":"html","publishedDate":"Thu, 20 Sep 2018 00:53:26 +0000","feedId":49879,"bgimg":"https://chart.apis.google.com/chart?cht=tx&chl=h","linkMd5":"f66407bf50514d9060347d44c61b36eb","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn48@2020_4/2020/11/16/18-22-37-646_0edc242330412084.webp","destWidth":10,"destHeight":14,"sourceBytes":363,"destBytes":220,"author":"repose","enclosureType":"","enclosureUrl":"https://chart.apis.google.com/chart?cht=tx&chl=h","articleImgCdnMap":{"https://chart.apis.google.com/chart?cht=tx&chl=h":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn48@2020_4/2020/11/16/18-22-37-646_0edc242330412084.webp","https://chart.apis.google.com/chart?cht=tx&chl=z":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn68@2020_1/2020/11/16/18-22-38-661_35c604d2bb63cda5.webp","https://chart.apis.google.com/chart?cht=tx&chl=u":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn72@2020_4/2020/11/16/18-22-40-193_c7cbba828e6c45c6.webp","https://chart.apis.google.com/chart?cht=tx&chl=K":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn88@2020_6/2020/11/16/18-22-38-524_0ffdc44e8f78fc7d.webp","https://chart.apis.google.com/chart?cht=tx&chl=k":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn84@2020_5/2020/11/16/18-22-38-675_0a444d73e2fab666.webp","https://chart.apis.google.com/chart?cht=tx&chl=h%5E%7B%28k%29%7D":"https://cdn.jsdelivr.net/gh/myreaderx/cdn56@2020_6/2020/11/16/18-22-59-739_ed24e1cd5f81e5c5.webp","https://chart.apis.google.com/chart?cht=tx&chl=h%5E%7B0%7D":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn51@2020_2/2020/11/16/18-22-38-626_b1d63290ee665a27.webp","https://chart.apis.google.com/chart?cht=tx&chl=x":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn64@2020_1/2020/11/16/18-22-38-538_0989509d0d0adcf8.webp","https://chart.apis.google.com/chart?cht=tx&chl=%5Calpha":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn59@2020_4/2020/11/16/18-22-50-546_706a047ef5ea5493.webp","https://chart.apis.google.com/chart?cht=tx&chl=q":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn76@2020_3/2020/11/16/18-22-38-531_8ba1a58bbcf9b148.webp","https://chart.apis.google.com/chart?cht=tx&chl=i":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn80@2020_2/2020/11/16/18-22-38-740_e6187acdfaf6aaae.webp","https://chart.apis.google.com/chart?cht=tx&chl=%28q%2C%20i%29":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn92@2020_3/2020/11/16/18-22-40-454_2d33d75df10f8486.webp"},"publishedOrCreatedDate":1605550956994}],"record":{"createdTime":"2020-11-17 02:22:36","updatedTime":"2020-11-17 02:22:36","feedId":49879,"fetchDate":"Mon, 16 Nov 2020 18:22:36 +0000","fetchMs":2827,"handleMs":5494,"totalMs":32143,"newArticles":0,"totalArticles":30,"status":1,"type":0,"ip":"af32bc2b950854f7e62e0df470d818c9","hostName":"us-021*","requestId":"490014e732094767a7a3074139db8426_49879","contentType":"application/atom+xml; charset=utf-8","totalBytes":2984,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":12,"articlesImgsGithubTotal":12,"successGithubMap":{"myreaderx25":1,"myreaderx15":1,"myreaderx16":1,"myreaderx27":1,"myreaderx10":1,"myreaderx21":1,"myreaderx4":1,"myreaderx2":1,"myreaderx1":1,"myreaderx24":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 03:54:31","updatedTime":"2020-11-16 18:38:01","id":49879,"name":"糞糞糞ネット弁慶","url":"http://d.hatena.ne.jp/repose/rss","subscriber":64,"website":null,"icon":"https://repose.hatenadiary.jp/favicon.ico","icon_jsdelivr":null,"description":"読んだ論文についてメモを書きます．趣味の話は http://repose.hatenablog.com","weekly":null,"link":"https://repose.hatenadiary.jp"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":220,"tmpBodyImgCdnBytes":2764,"tmpBgImgCdnBytes":0,"extra4":{"start":1605550948493,"total":0,"statList":[{"spend":3007,"msg":"获取xml内容"},{"spend":5494,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":22166,"msg":"正文链接上传到cdn"}]},"extra5":12,"extra6":12,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-018.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=h","sourceStatusCode":200,"destWidth":10,"destHeight":14,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn48@2020_4/2020/11/16/18-22-37-646_0edc242330412084.webp","sourceBytes":363,"destBytes":220,"targetWebpQuality":75,"feedId":49879,"totalSpendMs":1455,"convertSpendMs":11,"createdTime":"2020-11-17 02:22:37","host":"us-023*","referer":"https://repose.hatenadiary.jp/entry/2018/09/20/095326","linkMd5ListStr":"f66407bf50514d9060347d44c61b36eb,f66407bf50514d9060347d44c61b36eb","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"363 B","destSize":"220 B","compressRate":"60.6%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=K","sourceStatusCode":200,"destWidth":16,"destHeight":14,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn88@2020_6/2020/11/16/18-22-38-524_0ffdc44e8f78fc7d.webp","sourceBytes":467,"destBytes":240,"targetWebpQuality":75,"feedId":49879,"totalSpendMs":792,"convertSpendMs":3,"createdTime":"2020-11-17 02:22:38","host":"us-031*","referer":"https://repose.hatenadiary.jp/entry/2018/09/20/095326","linkMd5ListStr":"f66407bf50514d9060347d44c61b36eb","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"467 B","destSize":"240 B","compressRate":"51.4%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=q","sourceStatusCode":200,"destWidth":9,"destHeight":13,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn76@2020_3/2020/11/16/18-22-38-531_8ba1a58bbcf9b148.webp","sourceBytes":348,"destBytes":174,"targetWebpQuality":75,"feedId":49879,"totalSpendMs":842,"convertSpendMs":3,"createdTime":"2020-11-17 02:22:38","host":"us-002*","referer":"https://repose.hatenadiary.jp/entry/2018/09/20/095326","linkMd5ListStr":"f66407bf50514d9060347d44c61b36eb,f66407bf50514d9060347d44c61b36eb","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"348 B","destSize":"174 B","compressRate":"50%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=x","sourceStatusCode":200,"destWidth":10,"destHeight":10,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn64@2020_1/2020/11/16/18-22-38-538_0989509d0d0adcf8.webp","sourceBytes":328,"destBytes":192,"targetWebpQuality":75,"feedId":49879,"totalSpendMs":855,"convertSpendMs":3,"createdTime":"2020-11-17 02:22:38","host":"us-039*","referer":"https://repose.hatenadiary.jp/entry/2018/09/20/095326","linkMd5ListStr":"f66407bf50514d9060347d44c61b36eb,f66407bf50514d9060347d44c61b36eb","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"328 B","destSize":"192 B","compressRate":"58.5%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=h%5E%7B0%7D","sourceStatusCode":200,"destWidth":19,"destHeight":18,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn51@2020_2/2020/11/16/18-22-38-626_b1d63290ee665a27.webp","sourceBytes":520,"destBytes":314,"targetWebpQuality":75,"feedId":49879,"totalSpendMs":955,"convertSpendMs":6,"createdTime":"2020-11-17 02:22:38","host":"us-010*","referer":"https://repose.hatenadiary.jp/entry/2018/09/20/095326","linkMd5ListStr":"f66407bf50514d9060347d44c61b36eb,f66407bf50514d9060347d44c61b36eb","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"520 B","destSize":"314 B","compressRate":"60.4%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=k","sourceStatusCode":200,"destWidth":10,"destHeight":14,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn84@2020_5/2020/11/16/18-22-38-675_0a444d73e2fab666.webp","sourceBytes":366,"destBytes":208,"targetWebpQuality":75,"feedId":49879,"totalSpendMs":970,"convertSpendMs":2,"createdTime":"2020-11-17 02:22:38","host":"us-53*","referer":"https://repose.hatenadiary.jp/entry/2018/09/20/095326","linkMd5ListStr":"f66407bf50514d9060347d44c61b36eb","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"366 B","destSize":"208 B","compressRate":"56.8%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=z","sourceStatusCode":200,"destWidth":9,"destHeight":10,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn68@2020_1/2020/11/16/18-22-38-661_35c604d2bb63cda5.webp","sourceBytes":267,"destBytes":164,"targetWebpQuality":75,"feedId":49879,"totalSpendMs":986,"convertSpendMs":30,"createdTime":"2020-11-17 02:22:38","host":"us-027*","referer":"https://repose.hatenadiary.jp/entry/2018/09/20/095326","linkMd5ListStr":"f66407bf50514d9060347d44c61b36eb","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"267 B","destSize":"164 B","compressRate":"61.4%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=i","sourceStatusCode":200,"destWidth":6,"destHeight":14,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn80@2020_2/2020/11/16/18-22-38-740_e6187acdfaf6aaae.webp","sourceBytes":260,"destBytes":190,"targetWebpQuality":75,"feedId":49879,"totalSpendMs":1064,"convertSpendMs":4,"createdTime":"2020-11-17 02:22:38","host":"europe65*","referer":"https://repose.hatenadiary.jp/entry/2018/09/20/095326","linkMd5ListStr":"f66407bf50514d9060347d44c61b36eb","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"260 B","destSize":"190 B","compressRate":"73.1%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=u","sourceStatusCode":200,"destWidth":10,"destHeight":10,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn72@2020_4/2020/11/16/18-22-40-193_c7cbba828e6c45c6.webp","sourceBytes":319,"destBytes":200,"targetWebpQuality":75,"feedId":49879,"totalSpendMs":2553,"convertSpendMs":10,"createdTime":"2020-11-17 02:22:38","host":"us-014*","referer":"https://repose.hatenadiary.jp/entry/2018/09/20/095326","linkMd5ListStr":"f66407bf50514d9060347d44c61b36eb,f66407bf50514d9060347d44c61b36eb,f66407bf50514d9060347d44c61b36eb","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"319 B","destSize":"200 B","compressRate":"62.7%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%28q%2C%20i%29","sourceStatusCode":200,"destWidth":30,"destHeight":19,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn92@2020_3/2020/11/16/18-22-40-454_2d33d75df10f8486.webp","sourceBytes":906,"destBytes":456,"targetWebpQuality":75,"feedId":49879,"totalSpendMs":2716,"convertSpendMs":4,"createdTime":"2020-11-17 02:22:38","host":"us-018*","referer":"https://repose.hatenadiary.jp/entry/2018/09/20/095326","linkMd5ListStr":"f66407bf50514d9060347d44c61b36eb","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"906 B","destSize":"456 B","compressRate":"50.3%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=%5Calpha","sourceStatusCode":200,"destWidth":11,"destHeight":10,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn59@2020_4/2020/11/16/18-22-50-546_706a047ef5ea5493.webp","sourceBytes":334,"destBytes":204,"targetWebpQuality":75,"feedId":49879,"totalSpendMs":12889,"convertSpendMs":2,"createdTime":"2020-11-17 02:22:38","host":"europe61*","referer":"https://repose.hatenadiary.jp/entry/2018/09/20/095326","linkMd5ListStr":"f66407bf50514d9060347d44c61b36eb","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"334 B","destSize":"204 B","compressRate":"61.1%"},{"code":1,"isDone":false,"source":"https://chart.apis.google.com/chart?cht=tx&chl=h%5E%7B%28k%29%7D","sourceStatusCode":200,"destWidth":26,"destHeight":19,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn56@2020_6/2020/11/16/18-22-59-739_ed24e1cd5f81e5c5.webp","sourceBytes":836,"destBytes":422,"targetWebpQuality":75,"feedId":49879,"totalSpendMs":21962,"convertSpendMs":2,"createdTime":"2020-11-17 02:22:38","host":"europe-23*","referer":"https://repose.hatenadiary.jp/entry/2018/09/20/095326","linkMd5ListStr":"f66407bf50514d9060347d44c61b36eb","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"836 B","destSize":"422 B","compressRate":"50.5%"}],"successGithubMap":{"myreaderx25":1,"myreaderx15":1,"myreaderx16":1,"myreaderx27":1,"myreaderx10":1,"myreaderx21":1,"myreaderx4":1,"myreaderx2":1,"myreaderx1":1,"myreaderx24":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{}}