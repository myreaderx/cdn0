{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-11-16 17:46:20","updatedTime":"2020-11-16 17:46:20","title":"time.gif","link":"https://hookrace.net/blog/time.gif","description":"<p>This is an endless GIF that always shows the current time in UTC:</p> \n<!--more--> \n<p><img src=\"https://hookrace.net/time.gif\" alt=\"time.gif (reload if it fails)\" /></p> \n<p><a href=\"https://github.com/def-/time.gif\">Source Code</a></p> \n<p>(From reports it doesn’t seem to work on Safari, other browsers should be fine.)</p> \n<p>time.gif is written in Haskell and works by dynamically generating each frame of the GIF and slowly feeding them over the HTTP connection.</p> \n<p>There is no guarantee that this GIF shows a reasonable time and this is just for fun anyway, so better don’t build your next project based on the time from this GIF. If my server is overloaded, you can try compiling it yourself and run it locally.</p> \n<p>Update: Optimized, runs at less than 1% CPU with 500 simultaneous connections open, LZW encoding reduces bandwidth from 4 KB/s to 300 B/s.</p> \n<figure class=\"highlight\">\n <pre><code class=\"language-haskell\" data-lang=\"haskell\"><span class=\"c1\">-- Wait for incoming connections and start delivering a GIF to them</span>\n<span class=\"n\">loop</span> <span class=\"o\">::</span> <span class=\"kt\">Int</span> <span class=\"o\">-&gt;</span> <span class=\"kt\">FrameSignal</span> <span class=\"o\">-&gt;</span> <span class=\"kt\">Socket</span> <span class=\"o\">-&gt;</span> <span class=\"kt\">IO</span> <span class=\"nb\">()</span>\n<span class=\"n\">loop</span> <span class=\"n\">delay</span> <span class=\"n\">frameSignal</span> <span class=\"n\">sock</span> <span class=\"o\">=</span> <span class=\"kr\">do</span>\n  <span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"kr\">_</span><span class=\"p\">)</span> <span class=\"o\">&lt;-</span> <span class=\"n\">accept</span> <span class=\"n\">sock</span>\n\n  <span class=\"n\">forkIO</span> <span class=\"o\">$</span> <span class=\"n\">body</span> <span class=\"n\">conn</span>\n  <span class=\"n\">loop</span> <span class=\"n\">delay</span> <span class=\"n\">frameSignal</span> <span class=\"n\">sock</span>\n\n  <span class=\"kr\">where</span>\n    <span class=\"n\">body</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"kr\">do</span>\n      <span class=\"n\">f</span> <span class=\"o\">&lt;-</span> <span class=\"n\">receiveMSignal</span> <span class=\"n\">frameSignal</span>\n      <span class=\"n\">sendAll</span> <span class=\"n\">c</span> <span class=\"o\">$</span> <span class=\"n\">msg</span> <span class=\"o\">$</span> <span class=\"n\">initialFrame</span> <span class=\"p\">(</span><span class=\"n\">delay</span> <span class=\"p\">`</span><span class=\"n\">div</span><span class=\"p\">`</span> <span class=\"mi\">10000</span><span class=\"p\">)</span> <span class=\"n\">f</span>\n      <span class=\"n\">nextFrame</span> <span class=\"n\">c</span>\n\n    <span class=\"n\">nextFrame</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"kr\">do</span>\n      <span class=\"n\">f</span> <span class=\"o\">&lt;-</span> <span class=\"n\">receiveMSignal</span> <span class=\"n\">frameSignal</span>\n      <span class=\"n\">sendAll</span> <span class=\"n\">c</span> <span class=\"o\">$</span> <span class=\"n\">frame</span> <span class=\"p\">(</span><span class=\"n\">delay</span> <span class=\"p\">`</span><span class=\"n\">div</span><span class=\"p\">`</span> <span class=\"mi\">10000</span><span class=\"p\">)</span> <span class=\"n\">f</span>\n      <span class=\"n\">nextFrame</span> <span class=\"n\">c</span>\n\n    <span class=\"n\">msg</span> <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"kt\">B</span><span class=\"o\">.</span><span class=\"n\">intercalate</span> <span class=\"s\">\"</span><span class=\"se\">\\r\\n</span><span class=\"s\">\"</span>\n      <span class=\"p\">[</span> <span class=\"s\">\"HTTP/1.0 200 OK\"</span>\n      <span class=\"p\">,</span> <span class=\"s\">\"Server: gifstream/0.1\"</span>\n      <span class=\"p\">,</span> <span class=\"s\">\"Content-Type: image/gif\"</span>\n      <span class=\"p\">,</span> <span class=\"s\">\"Content-Transfer-Encoding: binary\"</span>\n      <span class=\"p\">,</span> <span class=\"s\">\"Cache-Control: no-cache\"</span>\n      <span class=\"p\">,</span> <span class=\"s\">\"Cache-Control: no-store\"</span>\n      <span class=\"p\">,</span> <span class=\"s\">\"Cache-Control: no-transform\"</span>\n      <span class=\"p\">,</span> <span class=\"s\">\"\"</span>\n      <span class=\"p\">,</span> <span class=\"n\">content</span>\n      <span class=\"p\">]</span></code></pre>\n</figure> \n<p>This is cannibalized from <a href=\"https://github.com/def-/gifstream\">gifstream</a>, which lets you play snake and have people watch a GIF livestream. It was actually created as a Christmas exercise for students of the Programming Paradigms course at KIT.</p> \n<p><img src=\"https://raw.githubusercontent.com/def-/gifstream/master/snake.gif\" alt=\"snake\" /></p> \n<p>Discuss on <a href=\"https://news.ycombinator.com/item?id=14996715\">Hacker News</a></p>","descriptionType":"html","feedId":23327,"bgimg":"https://hookrace.net/time.gif","linkMd5":"06d0b572183d96dbb807142f592f3a6b","author":"","articleImgCdnMap":{"https://hookrace.net/time.gif":null,"https://raw.githubusercontent.com/def-/gifstream/master/snake.gif":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn62@2020_6/2020/11/16/09-53-24-748_36ba3d362710038a.webp"},"publishedOrCreatedDate":1605519980704}],"record":{"createdTime":"2020-11-16 17:46:20","updatedTime":"2020-11-16 17:46:20","feedId":23327,"fetchDate":"Mon, 16 Nov 2020 09:46:20 +0000","fetchMs":510,"handleMs":66,"totalMs":544892,"newArticles":0,"totalArticles":34,"status":1,"type":0,"ip":"10453b4ea40236af920fff4f414aa727","hostName":"us-033*","requestId":"5f5551b228a24a25ab64e585eb32ae75_23327","contentType":"text/xml; charset=UTF-8","totalBytes":42972,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":2,"articlesImgsGithubTotal":1,"successGithubMap":{"myreaderx12":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:30:06","updatedTime":"2020-09-07 04:22:32","id":23327,"name":"HookRace Blog","url":"https://hookrace.net/blog/feed/","subscriber":141,"website":null,"icon":"https://hookrace.net/public/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx64/cdn59@2020_4/2020/09/06/20-22-32-023_8e8dd0441687ee39.png","description":"","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-11-16 17:55:24","updatedTime":"2020-11-16 17:55:24","id":null,"feedId":23327,"linkMd5":"06d0b572183d96dbb807142f592f3a6b"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":42972,"tmpBgImgCdnBytes":0,"extra4":{"start":1605519979953,"total":0,"statList":[{"spend":685,"msg":"获取xml内容"},{"spend":66,"msg":"解释文章"},{"spend":120785,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":121419,"msg":"正文链接上传到cdn"}]},"extra5":2,"extra6":1,"extra7ImgCdnFailResultVector":[null,null,null,null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-001.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://europe64.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://raw.githubusercontent.com/def-/gifstream/master/snake.gif","sourceStatusCode":200,"destWidth":128,"destHeight":128,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn62@2020_6/2020/11/16/09-53-24-748_36ba3d362710038a.webp","sourceBytes":142817,"destBytes":42972,"targetWebpQuality":75,"feedId":23327,"totalSpendMs":2223,"convertSpendMs":1122,"createdTime":"2020-11-16 17:53:23","host":"us-001*","referer":"https://hookrace.net/blog/time.gif","linkMd5ListStr":"06d0b572183d96dbb807142f592f3a6b","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"139.5 KB","destSize":"42 KB","compressRate":"30.1%"}],"successGithubMap":{"myreaderx12":1},"failGithubMap":{}}