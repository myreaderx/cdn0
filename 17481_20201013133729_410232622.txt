{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-13 21:36:13","updatedTime":"2020-10-13 21:36:13","title":"浅谈RASP技术攻防之实战[代码实现篇]","link":"https://www.03sec.com/3239.shtml","description":"<ul> \n <li><a href=\"https://www.03sec.com/3239.shtml#toc_0\">概述</a></li> \n <li><a href=\"https://www.03sec.com/3239.shtml#toc_1\">简易版RASP实现</a><br /> \n  <ul> \n   <li><a href=\"https://www.03sec.com/3239.shtml#toc_2\">创建入口类</a></li> \n   <li><a href=\"https://www.03sec.com/3239.shtml#toc_3\">创建Transform</a></li> \n   <li><a href=\"https://www.03sec.com/3239.shtml#toc_4\">build Agent配置</a></li> \n   <li><a href=\"https://www.03sec.com/3239.shtml#toc_5\">创建ClassVisitor类</a></li> \n   <li><a href=\"https://www.03sec.com/3239.shtml#toc_6\">对ProcessBuilder（命令执行）类进行hook用户执行的命令</a><br /> \n    <ul> \n     <li><a href=\"https://www.03sec.com/3239.shtml#toc_7\">使用transform对类名进行过滤</a></li> \n     <li><a href=\"https://www.03sec.com/3239.shtml#toc_8\">创建测试环境</a></li> \n     <li><a href=\"https://www.03sec.com/3239.shtml#toc_9\">拿到用户所执行的命令</a></li> \n     <li><a href=\"https://www.03sec.com/3239.shtml#toc_10\">复写visitMethod方法</a></li> \n     <li><a href=\"https://www.03sec.com/3239.shtml#toc_11\">测试hook用户执行的命令参数是否拿到</a></li> \n    </ul></li> \n  </ul></li> \n <li><a href=\"https://www.03sec.com/3239.shtml#toc_12\">总结</a></li> \n <li><a href=\"https://www.03sec.com/3239.shtml#toc_13\">参考</a></li> \n</ul>\n<h2 id=\"toc_0\">概述</h2>\n<p>本篇主要讲了简易版RASP实现，所有的环境都可以参考前一篇文章《<a href=\"\">浅谈RASP技术攻防之实战[环境配置篇]</a>》，再次说明，本文只起到抛砖引玉的作用，仅供参考，文笔不好，大家轻拍。关于其中涉及到的ASM等知识，大家可以来我的博客[<a href=\"https://www.03sec.com\">Sky's自留地</a>]进行查找相关的文章，笔者目前就职于《安百科技》，欢迎大家一起来探讨RASP攻防技术。</p>\n<blockquote>\n <p>浅谈RASP技术攻防之实战[环境配置篇] 和 浅谈RASP技术攻防之实战[代码实现篇]中的代码已经上传到github，地址为：<a href=\"https://github.com/iiiusky/java_rasp_example\">java_rasp_example</a></p>\n</blockquote>\n<p>关于 ASM 中不同类不同方法之间的关系图如下<br /><img src=\"http://mweb.03sec.com/15548628970807.jpg\" alt=\"\" /></p>\n<h2 id=\"toc_1\">简易版RASP实现</h2>\n<h3 id=\"toc_2\">创建入口类</h3>\n<p>在<code>cn.org.javaweb.agent</code>包下新建一个类。<br />内容如下：</p>\n<pre><code class=\"language-text\">/*\n * Copyright sky 2019-04-03 Email:sky@03sec.com.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage cn.org.javaweb.agent;\n\nimport java.lang.instrument.Instrumentation;\n\n/**\n * @author sky\n */\npublic class Agent {\n\n    public static void premain(String agentArgs, Instrumentation inst) {\n        inst.addTransformer(new AgentTransform());\n    }\n}\n</code></pre>\n<h3 id=\"toc_3\">创建Transform</h3>\n<p>然后我们再新建一个<code>AgentTransform</code>类，该类需要实现<code>ClassFileTransformer</code>的方法，内容如下:</p>\n<pre><code class=\"language-text\">/*\n * Copyright sky 2019-04-03 Email:sky@03sec.com.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage cn.org.javaweb.agent;\n\nimport java.lang.instrument.ClassFileTransformer;\nimport java.lang.instrument.IllegalClassFormatException;\nimport java.security.ProtectionDomain;\n\n/**\n * @author sky\n */\npublic class AgentTransform implements ClassFileTransformer {\n\n    /**\n     * @param loader\n     * @param className\n     * @param classBeingRedefined\n     * @param protectionDomain\n     * @param classfileBuffer\n     * @return\n     * @throws IllegalClassFormatException\n     */\n    @Override\n    public byte[] transform(ClassLoader loader, String className,\n                            Class&lt;?&gt; classBeingRedefined, ProtectionDomain protectionDomain,\n                            byte[] classfileBuffer) throws IllegalClassFormatException {\n\n        className = className.replace(\"/\", \".\");\n\n        System.out.println(\"Load class:\" + className);\n        return classfileBuffer;\n    }\n\n\n}\n</code></pre>\n<h3 id=\"toc_4\">build Agent配置</h3>\n<p>点击右上角的<code>agent[clean,intall]</code>进行build。<br /><img src=\"http://mweb.03sec.com/15543463293561.jpg\" alt=\"\" style=\"width:1627px;\" /><br />由上图可见我们的包的位置为</p>\n<pre><code class=\"language-text\">/Volumes/Data/code/work/JavawebAgent/agent/target/agent.jar\n</code></pre>\n<p>将改包的位置记录下来，然后点开tomcat配置(这边没有对idea如何配置tomcat进行讲解，不会的可以自行百度|谷歌)</p>\n<p><img src=\"http://mweb.03sec.com/15543466398517.jpg\" alt=\"\" style=\"width:1232px;\" /></p>\n<p>在VM options处填写以下内容：</p>\n<pre><code class=\"language-text\">-Dfile.encoding=UTF-8\n-noverify\n-Xbootclasspath/p:/Volumes/Data/code/work/JavawebAgent/agent/target/agent.jar\n-javaagent:/Volumes/Data/code/work/JavawebAgent/agent/target/agent.jar\n</code></pre>\n<p>其中<code>/Volumes/Data/code/work/JavawebAgent/agent/target/agent.jar</code>的路径为你在上一步编译出来的agent的路径，注意替换。</p>\n<p>这时候我们在启动tomcat，就可以看到我们在<code>AgentTransform</code>中写的打印包名已经生效了，如下图:<br /><img src=\"http://mweb.03sec.com/15543467988658.jpg\" alt=\"\" style=\"width:1255px;\" /><br />上图红框区域为tomcat启动的时候加载的所有类名。然后我们打开浏览器查看web是否正常。<br /><img src=\"http://mweb.03sec.com/15543468808171.jpg\" alt=\"\" style=\"width:676px;\" /></p>\n<p>可以看到web也正常启动了。</p>\n<h3 id=\"toc_5\">创建ClassVisitor类</h3>\n<p>然后我们新建一个TestClassVisitor类，需要继承ClassVisitor类并且实现Opcodes类，代码如下</p>\n<pre><code class=\"language-text\">/*\n * Copyright sky 2019-04-03 Email:sky@03sec.com.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage cn.org.javaweb.agent;\n\nimport org.objectweb.asm.ClassVisitor;\nimport org.objectweb.asm.MethodVisitor;\nimport org.objectweb.asm.Opcodes;\n\n\n/**\n * @author sky\n */\npublic class TestClassVisitor extends ClassVisitor implements Opcodes {\n\n    public TestClassVisitor(ClassVisitor cv) {\n        super(Opcodes.ASM5, cv);\n    }\n\n    @Override\n    public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {\n        MethodVisitor mv = super.visitMethod(access, name, desc, signature, exceptions);\n\n        System.out.println(name + \"方法的描述符是：\" + desc);\n        return mv;\n    }\n}\n\n</code></pre>\n<h3 id=\"toc_6\">对ProcessBuilder（命令执行）类进行hook用户执行的命令</h3>\n<h4 id=\"toc_7\">使用transform对类名进行过滤</h4>\n<p>然后回到<code>AgentTransform</code>中，对<code>transform</code>方法的内容进行修改，transform方法代码如下：</p>\n<pre><code class=\"language-text\">public byte[] transform(ClassLoader loader, String className,\n                            Class&lt;?&gt; classBeingRedefined, ProtectionDomain protectionDomain,\n                            byte[] classfileBuffer) throws IllegalClassFormatException {\n\n        className = className.replace(\"/\", \".\");\n\n        try {\n            if (className.contains(\"ProcessBuilder\")) {\n                System.out.println(\"Load class: \" + className);\n\n                ClassReader  classReader  = new ClassReader(classfileBuffer);\n                ClassWriter  classWriter  = new ClassWriter(classReader, ClassWriter.COMPUTE_MAXS);\n                ClassVisitor classVisitor = new TestClassVisitor(classWriter);\n\n                classReader.accept(classVisitor, ClassReader.EXPAND_FRAMES);\n\n                classfileBuffer = classWriter.toByteArray();\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return classfileBuffer;\n    }\n</code></pre>\n<p>简单介绍一下代码块内容</p>\n<p>首先判断类名是否包含<code>ProcessBuilder</code>,如果包含则使用<code>ClassReader</code>对字节码进行读取，然后新建一个<code>ClassWriter</code>进行对<code>ClassReader</code>读取的字节码进行拼接，然后在新建一个我们自定义的<code>ClassVisitor</code>对类的触发事件进行hook，在然后调用<code>classReader</code>的<code>accept</code>方法,最后给<code>classfileBuffer</code>重新赋值修改后的字节码。</p>\n<p>可能看起来比较绕，但是如果学会使用以后就比较好理解了。</p>\n<h4 id=\"toc_8\">创建测试环境</h4>\n<p>我们在tomcat中新建一个jsp，用来调用命令执行，代码如下：</p>\n<pre><code class=\"language-text\">&lt;%@ page import=\"java.io.InputStream\" %&gt;\n&lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %&gt;\n&lt;pre&gt;\n&lt;%\n    Process process = Runtime.getRuntime().exec(request.getParameter(\"cmd\"));\n    InputStream in = process.getInputStream();\n    int a = 0;\n    byte[] b = new byte[1024];\n\n    while ((a = in.read(b)) != -1) {\n        out.println(new String(b, 0, a));\n    }\n\n    in.close();\n%&gt;\n&lt;/pre&gt;\n</code></pre>\n<p>可以看到就是一个简单的执行命令的代码;下面我们对就此更改过的内容进行build，看一下会输出点什么。<br /><img src=\"http://mweb.03sec.com/15543497623895.jpg\" alt=\"\" style=\"width:1211px;\" /></p>\n<p>biuld完成，启动tomcat。<br /><img src=\"http://mweb.03sec.com/15543498060864.jpg\" alt=\"\" style=\"width:1317px;\" /><br />访问</p>\n<pre><code class=\"language-text\">http://localhost:8080/cmd.jsp?cmd=whoami\n</code></pre>\n<p>可以看到已经成功执行命令，我们回到idea里面的控制台看一下输出了什么。<br /><img src=\"http://mweb.03sec.com/15543499232566.jpg\" alt=\"\" style=\"width:907px;\" /><br />通过上图可以完整的看到一个执行命令所调用的所有调用链。</p>\n<pre><code class=\"language-text\">Load class: java.lang.ProcessBuilder\n&lt;init&gt;方法的描述符是：(Ljava/util/List;)V\n&lt;init&gt;方法的描述符是：([Ljava/lang/String;)V\ncommand方法的描述符是：(Ljava/util/List;)Ljava/lang/ProcessBuilder;\ncommand方法的描述符是：([Ljava/lang/String;)Ljava/lang/ProcessBuilder;\ncommand方法的描述符是：()Ljava/util/List;\nenvironment方法的描述符是：()Ljava/util/Map;\nenvironment方法的描述符是：([Ljava/lang/String;)Ljava/lang/ProcessBuilder;\ndirectory方法的描述符是：()Ljava/io/File;\ndirectory方法的描述符是：(Ljava/io/File;)Ljava/lang/ProcessBuilder;\nredirects方法的描述符是：()[Ljava/lang/ProcessBuilder$Redirect;\nredirectInput方法的描述符是：(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;\nredirectOutput方法的描述符是：(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;\nredirectError方法的描述符是：(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;\nredirectInput方法的描述符是：(Ljava/io/File;)Ljava/lang/ProcessBuilder;\nredirectOutput方法的描述符是：(Ljava/io/File;)Ljava/lang/ProcessBuilder;\nredirectError方法的描述符是：(Ljava/io/File;)Ljava/lang/ProcessBuilder;\nredirectInput方法的描述符是：()Ljava/lang/ProcessBuilder$Redirect;\nredirectOutput方法的描述符是：()Ljava/lang/ProcessBuilder$Redirect;\nredirectError方法的描述符是：()Ljava/lang/ProcessBuilder$Redirect;\ninheritIO方法的描述符是：()Ljava/lang/ProcessBuilder;\nredirectErrorStream方法的描述符是：()Z\nredirectErrorStream方法的描述符是：(Z)Ljava/lang/ProcessBuilder;\nstart方法的描述符是：()Ljava/lang/Process;\n&lt;clinit&gt;方法的描述符是：()V\nLoad class: java.lang.ProcessBuilder$NullInputStream\n&lt;init&gt;方法的描述符是：()V\nread方法的描述符是：()I\navailable方法的描述符是：()I\n&lt;clinit&gt;方法的描述符是：()V\nLoad class: java.lang.ProcessBuilder$NullOutputStream\n&lt;init&gt;方法的描述符是：()V\nwrite方法的描述符是：(I)V\n&lt;clinit&gt;方法的描述符是：()V\n</code></pre>\n<h4 id=\"toc_9\">拿到用户所执行的命令</h4>\n<p>接下来我们看看尝试一下能否拿到所执行的命令<br />新建一个名为<code>ProcessBuilderHook</code>的类，然后在类中新建一个名字为<code>start</code>的静态方法，完整代码如下：</p>\n<pre><code class=\"language-text\">/*\n * Copyright sky 2019-04-04 Email:sky@03sec.com.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\npackage cn.org.javaweb.agent;\n\nimport java.util.Arrays;\nimport java.util.List;\n\n/**\n * @author sky\n */\npublic class ProcessBuilderHook {\n\n    public static void start(List&lt;String&gt; commands) {\n        String[] commandArr = commands.toArray(new String[commands.size()]);\n        System.out.println(Arrays.toString(commandArr));\n    }\n}\n</code></pre>\n<p>这个方法干啥用的我们一会在说，先看下面。</p>\n<h4 id=\"toc_10\">复写visitMethod方法</h4>\n<p>打开<code>TestClassVisitor</code>，对<code>visitMethod</code>方法进行更改。具体代码如下：</p>\n<pre><code class=\"language-text\">@Override\n    public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {\n        MethodVisitor mv = super.visitMethod(access, name, desc, signature, exceptions);\n\n        if (\"start\".equals(name) &amp;&amp; \"()Ljava/lang/Process;\".equals(desc)) {\n            System.out.println(name + \"方法的描述符是：\" + desc);\n\n            return new AdviceAdapter(Opcodes.ASM5, mv, access, name, desc) {\n                @Override\n                public void visitCode() {\n\n                    mv.visitVarInsn(ALOAD, 0);\n                    mv.visitFieldInsn(GETFIELD, \"java/lang/ProcessBuilder\", \"command\", \"Ljava/util/List;\");\n                    mv.visitMethodInsn(INVOKESTATIC, \"cn/org/javaweb/agent/ProcessBuilderHook\", \"start\", \"(Ljava/util/List;)V\", false);\n\n                    super.visitCode();\n                }\n            };\n        }\n        return mv;\n    }\n</code></pre>\n<p>给大家解释下新增加的代码，从if判断开始</p>\n<p>判断传入进来的<em>方法名</em>是否为<code>start</code>以及<em>方法描述符</em>是否为<code>()Ljava/lang/Process;</code>,如果是的话就新建一个<code>AdviceAdapter</code>方法，并且复写<code>visitCode</code>方法，对其字节码进行修改，</p>\n<pre><code class=\"language-text\">mv.visitVarInsn(ALOAD, 0);\n</code></pre>\n<p>拿到栈顶上的<code>this</code></p>\n<pre><code class=\"language-text\">mv.visitFieldInsn(GETFIELD, \"java/lang/ProcessBuilder\", \"command\", \"Ljava/util/List;\");\n</code></pre>\n<p>拿到<code>this</code>里面的<code>command</code></p>\n<pre><code class=\"language-text\">mv.visitMethodInsn(INVOKESTATIC, \"cn/org/javaweb/agent/ProcessBuilderHook\", \"start\", \"(Ljava/util/List;)V\", false);\n</code></pre>\n<p>然后调用我们上面新建的<code>ProcessBuilderHook</code>类中的<code>start</code>方法,将上面拿到的<code>this.command</code>压入我们方法。</p>\n<p><code>ProcessBuilderHook</code>类的作用就是让这部分进行调用，然后转移就可以转入到我们的逻辑代码了。</p>\n<p>我们再次编译一下，然后启动tomcat，访问<code>cmd.jsp</code>看看.</p>\n<h4 id=\"toc_11\">测试hook用户执行的命令参数是否拿到</h4>\n<p>访问</p>\n<pre><code class=\"language-text\">http://localhost:8080/cmd.jsp?cmd=ls%20-la\n</code></pre>\n<p><img src=\"http://mweb.03sec.com/15543528786729.jpg\" alt=\"\" style=\"width:707px;\" /></p>\n<p>可以看到已经将当前目录下的内容打印了出来。<br />我们到idea中看看控制台输出了什么。<br /><img src=\"http://mweb.03sec.com/15543527290384.jpg\" alt=\"\" style=\"width:613px;\" /></p>\n<p>可以看到我们输入的命令</p>\n<pre><code class=\"language-text\">[whoami]\n</code></pre>\n<p>已经输出出来了，到此为止，我们拿到了要执行的命令.</p>\n<h2 id=\"toc_12\">总结</h2>\n<p>对于拿到要执行的命令以后怎么做，是需要拦截还是替换还是告警，这边就需要大家自己去实现了。当然，如果要实现拦截功能，还需要注意要获取当前请求中的的response，不然无法对response进行复写，也无法对其进行拦截。这边给大家提供一个思路，对应拦截功能，大家可以去hook请求相关的类，然后在危险hook点结合http请求上下文进行拦截请求。</p>\n<p>对于其他攻击点的拦截，可以参考百度开源的<a href=\"https://rasp.baidu.com/doc/hacking/architect/hook.html#java-server\">OpenRasp</a>进行编写hook点。</p>\n<p>如需在Java中实现RASP技术，笔者建议好好了解一下ASM，这样对以后JAVA的运行机制也会有一定的了解，方便以后调试以及写代码。</p>\n<h2 id=\"toc_13\">参考</h2>\n<ul> \n <li><a href=\"https://rasp.baidu.com/doc/hacking/architect/hook.html#java-server\">https://rasp.baidu.com/doc/hacking/architect/hook.html#java-server</a></li> \n <li><a href=\"https://github.com/anbai-inc/javaweb-codereview\">https://github.com/anbai-inc/javaweb-codereview</a></li> \n <li><a href=\"https://static.javadoc.io/org.ow2.asm/asm/5.2/org/objectweb/asm/ClassReader.html\">https://static.javadoc.io/org.ow2.asm/asm/5.2/org/objectweb/asm/ClassReader.html</a></li> \n <li><a href=\"http://www.blogjava.net/vanadies10/archive/2011/02/23/344899.html\">http://www.blogjava.net/vanadies10/archive/2011/02/23/344899.html</a></li> \n <li><a href=\"http://www.blogjava.net/DLevin/archive/2014/06/25/414292.html\">http://www.blogjava.net/DLevin/archive/2014/06/25/414292.html</a></li> \n</ul>\n<p>\n <hr /></p>\n<details> \n <p><summary>ps:</summary></p> \n <blockquote:0170> \n  <p:0169>\n   本文首发先知\n   <br />\n  </p:0169>\n </blockquote:0170>\n</details>\n<p><br /> </p>","descriptionType":"html","publishedDate":"Tue, 09 Apr 2019 18:07:15 +0000","feedId":17481,"bgimg":"http://mweb.03sec.com/15548628970807.jpg","linkMd5":"986b70ca848941d2b05390400d1fbfe7","destWidth":1118,"destHeight":1047,"sourceBytes":490144,"destBytes":149308,"author":"sky","articleImgCdnMap":{"http://mweb.03sec.com/15548628970807.jpg":null,"http://mweb.03sec.com/15543463293561.jpg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn49@2020_3/2020/10/13/13-36-22-867_078c2570953a2eca.webp","http://mweb.03sec.com/15543466398517.jpg":null,"http://mweb.03sec.com/15543467988658.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn61@2020_4/2020/10/13/13-36-25-070_63889c1a0bf3873a.webp","http://mweb.03sec.com/15543468808171.jpg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn38@2020_6/2020/10/13/13-36-20-229_b50a1f5468d21903.webp","http://mweb.03sec.com/15543497623895.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn66@2020_4/2020/10/13/13-36-20-393_b3108d8299fd491e.webp","http://mweb.03sec.com/15543498060864.jpg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn67@2020_5/2020/10/13/13-36-21-683_fd131c3c9e7b1d22.webp","http://mweb.03sec.com/15543499232566.jpg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn58@2020_5/2020/10/13/13-36-21-063_b7866e08245d2d9d.webp","http://mweb.03sec.com/15543528786729.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn39@2020_2/2020/10/13/13-37-28-068_d24483402915bd8d.webp","http://mweb.03sec.com/15543527290384.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn45@2020_4/2020/10/13/13-36-22-550_abf792a4664ca12f.webp"},"publishedOrCreatedDate":1602596173602}],"record":{"createdTime":"2020-10-13 21:36:13","updatedTime":"2020-10-13 21:36:13","feedId":17481,"fetchDate":"Tue, 13 Oct 2020 13:36:13 +0000","fetchMs":901,"handleMs":19,"totalMs":76870,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"c95099efafc17f9e0beaf843cecd5c56","hostName":"us-022*","requestId":"f99cc8190e8c45a9b767cba04dd0a3c1_17481","contentType":"application/rss+xml; charset=UTF-8","totalBytes":1090394,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":10,"articlesImgsGithubTotal":8,"successGithubMap":{"myreaderx7":1,"myreaderx16":1,"myreaderx6":1,"myreaderx33":1,"myreaderx3":1,"myreaderx12":1,"myreaderx13":1,"myreaderx5oss":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}},"feed":{"createdTime":"2020-09-07 02:15:15","updatedTime":"2020-09-07 02:46:57","id":17481,"name":"Sky's自留地","url":"http://www.03sec.com/feed/","subscriber":190,"website":null,"icon":"https://www.javaweb.org.cn/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn19@2020_2/2020/09/06/18-46-48-768_fc452aa9340bbf5b.ico","description":"关注互联网安全，关注安全&攻击技术。","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-10-13 21:37:29","updatedTime":"2020-10-13 21:37:29","id":null,"feedId":17481,"linkMd5":"986b70ca848941d2b05390400d1fbfe7"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":1090394,"tmpBgImgCdnBytes":0,"extra4":{"start":1602596172292,"total":0,"statList":[{"spend":1291,"msg":"获取xml内容"},{"spend":19,"msg":"解释文章"},{"spend":1,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":71372,"msg":"正文链接上传到cdn"}]},"extra5":10,"extra6":10,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://mweb.03sec.com/15548628970807.jpg","sourceStatusCode":200,"destWidth":1118,"destHeight":1047,"sourceBytes":490144,"destBytes":149308,"targetWebpQuality":75,"feedId":17481,"totalSpendMs":3886,"convertSpendMs":113,"createdTime":"2020-10-13 21:36:13","host":"us-025*","referer":"https://www.03sec.com/3239.shtml","linkMd5ListStr":"986b70ca848941d2b05390400d1fbfe7,986b70ca848941d2b05390400d1fbfe7","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn31/contents/2020/10/13/13-36-17-460_7b05987b23480be4.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Tue, 13 Oct 2020 13:36:17 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9AB6:3C2B:2BDCD46:49462F0:5F85AD3A"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602597414"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn31/contents/2020/10/13/13-36-17-460_7b05987b23480be4.webp","historyStatusCode":[],"spendMs":76},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"478.7 KB","destSize":"145.8 KB","compressRate":"30.5%"},{"code":1,"isDone":false,"source":"http://mweb.03sec.com/15548628970807.jpg","sourceStatusCode":200,"destWidth":1118,"destHeight":1047,"sourceBytes":490144,"destBytes":149308,"targetWebpQuality":75,"feedId":17481,"totalSpendMs":234,"convertSpendMs":103,"createdTime":"2020-10-13 21:36:17","host":"us-025*","referer":"https://www.03sec.com/3239.shtml","linkMd5ListStr":"986b70ca848941d2b05390400d1fbfe7,986b70ca848941d2b05390400d1fbfe7","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn31/contents/2020/10/13/13-36-17-723_7b05987b23480be4.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Tue, 13 Oct 2020 13:36:17 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9AA8:424A:296C6EC:43B4C0C:5F85AD51"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602597414"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn31/contents/2020/10/13/13-36-17-723_7b05987b23480be4.webp","historyStatusCode":[],"spendMs":58},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"478.7 KB","destSize":"145.8 KB","compressRate":"30.5%"},{"code":1,"isDone":false,"source":"http://mweb.03sec.com/15543466398517.jpg","sourceStatusCode":200,"destWidth":2464,"destHeight":1778,"sourceBytes":504962,"destBytes":95688,"targetWebpQuality":75,"feedId":17481,"totalSpendMs":3817,"convertSpendMs":468,"createdTime":"2020-10-13 21:36:17","host":"us-030*","referer":"https://www.03sec.com/3239.shtml","linkMd5ListStr":"986b70ca848941d2b05390400d1fbfe7","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn54/contents/2020/10/13/13-36-21-475_590cb50317d19b0a.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Tue, 13 Oct 2020 13:36:21 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["931A:0AA0:2C419D:858841:5F85AD55"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602597413"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn54/contents/2020/10/13/13-36-21-475_590cb50317d19b0a.webp","historyStatusCode":[],"spendMs":162},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"493.1 KB","destSize":"93.4 KB","compressRate":"18.9%"},{"code":1,"isDone":false,"source":"http://mweb.03sec.com/15543466398517.jpg","sourceStatusCode":200,"destWidth":2464,"destHeight":1778,"sourceBytes":504962,"destBytes":95688,"targetWebpQuality":75,"feedId":17481,"totalSpendMs":445,"convertSpendMs":196,"createdTime":"2020-10-13 21:36:21","host":"us-55*","referer":"https://www.03sec.com/3239.shtml","linkMd5ListStr":"986b70ca848941d2b05390400d1fbfe7","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn54/contents/2020/10/13/13-36-21-897_590cb50317d19b0a.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Tue, 13 Oct 2020 13:36:21 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C95C:1C3C:2869B3E:442BB5B:5F85AD55"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1602597413"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn54/contents/2020/10/13/13-36-21-897_590cb50317d19b0a.webp","historyStatusCode":[],"spendMs":66},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"493.1 KB","destSize":"93.4 KB","compressRate":"18.9%"},null],"extra10_invalidATagHrefValue":{"https://www.03sec.com/3239.shtml_#toc_10":"https://www.03sec.com/3239.shtml#toc_10","https://www.03sec.com/3239.shtml_#toc_12":"https://www.03sec.com/3239.shtml#toc_12","https://www.03sec.com/3239.shtml_#toc_11":"https://www.03sec.com/3239.shtml#toc_11","https://www.03sec.com/3239.shtml_#toc_13":"https://www.03sec.com/3239.shtml#toc_13","https://www.03sec.com/3239.shtml_#toc_9":"https://www.03sec.com/3239.shtml#toc_9","https://www.03sec.com/3239.shtml_#toc_8":"https://www.03sec.com/3239.shtml#toc_8","https://www.03sec.com/3239.shtml_#toc_5":"https://www.03sec.com/3239.shtml#toc_5","https://www.03sec.com/3239.shtml_#toc_4":"https://www.03sec.com/3239.shtml#toc_4","https://www.03sec.com/3239.shtml_#toc_7":"https://www.03sec.com/3239.shtml#toc_7","https://www.03sec.com/3239.shtml_#toc_6":"https://www.03sec.com/3239.shtml#toc_6","https://www.03sec.com/3239.shtml_#toc_1":"https://www.03sec.com/3239.shtml#toc_1","https://www.03sec.com/3239.shtml_#toc_0":"https://www.03sec.com/3239.shtml#toc_0","https://www.03sec.com/3239.shtml_#toc_3":"https://www.03sec.com/3239.shtml#toc_3","https://www.03sec.com/3239.shtml_#toc_2":"https://www.03sec.com/3239.shtml#toc_2"},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-001.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://mweb.03sec.com/15543468808171.jpg","sourceStatusCode":200,"destWidth":1352,"destHeight":444,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn38@2020_6/2020/10/13/13-36-20-229_b50a1f5468d21903.webp","sourceBytes":51434,"destBytes":8730,"targetWebpQuality":75,"feedId":17481,"totalSpendMs":3242,"convertSpendMs":14,"createdTime":"2020-10-13 21:36:17","host":"europe-25*","referer":"https://www.03sec.com/3239.shtml","linkMd5ListStr":"986b70ca848941d2b05390400d1fbfe7","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.2 KB","destSize":"8.5 KB","compressRate":"17%"},{"code":1,"isDone":false,"source":"http://mweb.03sec.com/15543497623895.jpg","sourceStatusCode":200,"destWidth":2422,"destHeight":672,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn66@2020_4/2020/10/13/13-36-20-393_b3108d8299fd491e.webp","sourceBytes":339076,"destBytes":114564,"targetWebpQuality":75,"feedId":17481,"totalSpendMs":3619,"convertSpendMs":78,"createdTime":"2020-10-13 21:36:17","host":"us-55*","referer":"https://www.03sec.com/3239.shtml","linkMd5ListStr":"986b70ca848941d2b05390400d1fbfe7","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"331.1 KB","destSize":"111.9 KB","compressRate":"33.8%"},{"code":1,"isDone":false,"source":"http://mweb.03sec.com/15543499232566.jpg","sourceStatusCode":200,"destWidth":1814,"destHeight":1208,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn58@2020_5/2020/10/13/13-36-21-063_b7866e08245d2d9d.webp","sourceBytes":622507,"destBytes":216794,"targetWebpQuality":75,"feedId":17481,"totalSpendMs":4305,"convertSpendMs":109,"createdTime":"2020-10-13 21:36:17","host":"us-017*","referer":"https://www.03sec.com/3239.shtml","linkMd5ListStr":"986b70ca848941d2b05390400d1fbfe7","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"607.9 KB","destSize":"211.7 KB","compressRate":"34.8%"},{"code":1,"isDone":false,"source":"http://mweb.03sec.com/15543498060864.jpg","sourceStatusCode":200,"destWidth":2634,"destHeight":604,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn67@2020_5/2020/10/13/13-36-21-683_fd131c3c9e7b1d22.webp","sourceBytes":105084,"destBytes":19938,"targetWebpQuality":75,"feedId":17481,"totalSpendMs":4749,"convertSpendMs":38,"createdTime":"2020-10-13 21:36:17","host":"europe-56*","referer":"https://www.03sec.com/3239.shtml","linkMd5ListStr":"986b70ca848941d2b05390400d1fbfe7","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"102.6 KB","destSize":"19.5 KB","compressRate":"19%"},{"code":1,"isDone":false,"source":"http://mweb.03sec.com/15543527290384.jpg","sourceStatusCode":200,"destWidth":1226,"destHeight":564,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn45@2020_4/2020/10/13/13-36-22-550_abf792a4664ca12f.webp","sourceBytes":138451,"destBytes":42950,"targetWebpQuality":75,"feedId":17481,"totalSpendMs":5993,"convertSpendMs":22,"createdTime":"2020-10-13 21:36:17","host":"europe64*","referer":"https://www.03sec.com/3239.shtml","linkMd5ListStr":"986b70ca848941d2b05390400d1fbfe7","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"135.2 KB","destSize":"41.9 KB","compressRate":"31%"},{"code":1,"isDone":false,"source":"http://mweb.03sec.com/15543463293561.jpg","sourceStatusCode":200,"destWidth":3254,"destHeight":1498,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn49@2020_3/2020/10/13/13-36-22-867_078c2570953a2eca.webp","sourceBytes":835411,"destBytes":258196,"targetWebpQuality":75,"feedId":17481,"totalSpendMs":6138,"convertSpendMs":243,"createdTime":"2020-10-13 21:36:17","host":"us-52*","referer":"https://www.03sec.com/3239.shtml","linkMd5ListStr":"986b70ca848941d2b05390400d1fbfe7","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"815.8 KB","destSize":"252.1 KB","compressRate":"30.9%"},{"code":1,"isDone":false,"source":"http://mweb.03sec.com/15543467988658.jpg","sourceStatusCode":200,"destWidth":2510,"destHeight":1404,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn61@2020_4/2020/10/13/13-36-25-070_63889c1a0bf3873a.webp","sourceBytes":721276,"destBytes":226816,"targetWebpQuality":75,"feedId":17481,"totalSpendMs":8401,"convertSpendMs":152,"createdTime":"2020-10-13 21:36:17","host":"us-005*","referer":"https://www.03sec.com/3239.shtml","linkMd5ListStr":"986b70ca848941d2b05390400d1fbfe7","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"704.4 KB","destSize":"221.5 KB","compressRate":"31.4%"},{"code":1,"isDone":false,"source":"http://mweb.03sec.com/15543528786729.jpg","sourceStatusCode":200,"destWidth":1414,"destHeight":1314,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn39@2020_2/2020/10/13/13-37-28-068_d24483402915bd8d.webp","sourceBytes":574946,"destBytes":202406,"targetWebpQuality":75,"feedId":17481,"totalSpendMs":1231,"convertSpendMs":100,"createdTime":"2020-10-13 21:37:27","host":"us-52*","referer":"https://www.03sec.com/3239.shtml","linkMd5ListStr":"986b70ca848941d2b05390400d1fbfe7","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"561.5 KB","destSize":"197.7 KB","compressRate":"35.2%"}],"successGithubMap":{"myreaderx7":1,"myreaderx16":1,"myreaderx6":1,"myreaderx33":1,"myreaderx3":1,"myreaderx12":1,"myreaderx13":1,"myreaderx5oss":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}}