{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-13 05:34:12","updatedTime":"2020-10-13 05:34:12","title":"Zigfrid – A Passive RFID Fuzzer.","link":"http://z4ziggy.wordpress.com/?p=701","description":"<div></div>\n<div></div>\n<p>Zigfrid is the end result of my RFID tinkering. Since I will most definitely forget most things described here in the (very) near future, I share this for those few who might find it interesting. Please be warned: This is not a toy. It is completely unreliable, untested, malicious tool, which can and will cause elevators to stop or even shut down immediately, locks to jam, hackers get jailed, and other weird RFID phenomenons. Ok, you get the idea, lets move on.</p>\n<hr />\n<p>I guess I watched too many movies as a kid, and craved myself one of those futuristic-looking RFID &#8220;master keys&#8221; which opens all doors [with a few flashing leds for a more attractive effect], but as I grew older and learned there isn&#8217;t one I decided to try and build one for myself. I ended up with a tiny passive device consisting an ATtiny85 AVR, an antenna (coil), and 1 capacitor, with no need for external power. It&#8217;s so tiny, it can fit in a common chewing gum and glued next to any RF reader to fuzz away.</p>\n<p>My RFID adventures began with a cheap 20$ <a href=\"https://www.amazon.com/s/ref=nb_sb_noss?url=search-alias%3Daps&#38;field-keywords=Handheld+RFID+Reader%2FCopier\" target=\"_blank\" rel=\"noopener\">Handheld RFID Reader/Copier</a> &#8211; a simple battery-powered device with 2 buttons controlling the read &#38; write functions of it&#8217;s PCB, which uses an obscure chip labeled with the mysterious &#8220;F300 ET94 242+&#8221; which later found to be based on a more popular chip <a href=\"https://www.silabs.com/Support%20Documents/TechnicalDocs/C8051F30x.pdf\" target=\"_blank\" rel=\"noopener\">C8051F300</a>. I hacked the PCB and connected it via it&#8217;s pins to my Arduino and later to my <a href=\"http://dangerousprototypes.com/docs/Bus_Pirate\" target=\"_blank\" rel=\"noopener\">BusPirate</a> in the hope of getting something on it&#8217;s serial line via the RX &#38; TX pins &#8211; (and maybe later to alter it?) for vain &#8211; only a random bits every a few reads was letting me know I&#8217;m looking at it all wrong. And I was.</p>\n<div></div>\n<div>\n<figure data-shortcode=\"caption\" id=\"attachment_726\" aria-describedby=\"caption-attachment-726\" style=\"width: 5312px\" class=\"wp-caption aligncenter\"><img data-attachment-id=\"726\" data-permalink=\"https://z4ziggy.wordpress.com/2017/07/21/zigfrid-a-passive-rfid-fuzzer/handheld-rfid-reader_copier/\" data-orig-file=\"https://z4ziggy.files.wordpress.com/2017/07/handheld-rfid-reader_copier.jpg\" data-orig-size=\"5312,2988\" data-comments-opened=\"1\" data-image-meta=\"{&#34;aperture&#34;:&#34;0&#34;,&#34;credit&#34;:&#34;&#34;,&#34;camera&#34;:&#34;&#34;,&#34;caption&#34;:&#34;&#34;,&#34;created_timestamp&#34;:&#34;0&#34;,&#34;copyright&#34;:&#34;&#34;,&#34;focal_length&#34;:&#34;0&#34;,&#34;iso&#34;:&#34;0&#34;,&#34;shutter_speed&#34;:&#34;0&#34;,&#34;title&#34;:&#34;&#34;,&#34;orientation&#34;:&#34;0&#34;}\" data-image-title=\"Handheld RFID Reader_Copier\" data-image-description=\"\" data-medium-file=\"https://z4ziggy.files.wordpress.com/2017/07/handheld-rfid-reader_copier.jpg?w=300\" data-large-file=\"https://z4ziggy.files.wordpress.com/2017/07/handheld-rfid-reader_copier.jpg?w=1000\" class=\" size-full wp-image-726 aligncenter\" src=\"https://z4ziggy.files.wordpress.com/2017/07/handheld-rfid-reader_copier.jpg?w=1000\" alt=\"Handheld RFID Reader_Copier\" srcset=\"https://z4ziggy.files.wordpress.com/2017/07/handheld-rfid-reader_copier.jpg?w=1000 1000w, https://z4ziggy.files.wordpress.com/2017/07/handheld-rfid-reader_copier.jpg?w=2000 2000w, https://z4ziggy.files.wordpress.com/2017/07/handheld-rfid-reader_copier.jpg?w=150 150w, https://z4ziggy.files.wordpress.com/2017/07/handheld-rfid-reader_copier.jpg?w=300 300w, https://z4ziggy.files.wordpress.com/2017/07/handheld-rfid-reader_copier.jpg?w=768 768w, https://z4ziggy.files.wordpress.com/2017/07/handheld-rfid-reader_copier.jpg?w=1024 1024w\" sizes=\"(max-width: 1000px) 100vw, 1000px\"   /><figcaption id=\"caption-attachment-726\" class=\"wp-caption-text\">A failed attempt to communicate with the C8051F300 using Arduino.</figcaption></figure>\n</div>\n<p>I continued looking at other directions and stumbled upon this <a href=\"https://github.com/samyk/magspoof\" target=\"_blank\" rel=\"noopener\">Magspoof</a> (by <a href=\"https://samy.pl/\" target=\"_blank\" rel=\"noopener\">SamyK</a>) <a href=\"http://www.idogendel.com/whitebyte/archives/4296\" target=\"_blank\" rel=\"noopener\">article</a> (Hebrew only) and among it&#8217;s <a href=\"http://www.idogendel.com/whitebyte/archives/4296#comment-3337\" target=\"_blank\" rel=\"noopener\">comments</a> I found my answer &#8211; <a href=\"http://scanlime.org/2008/09/using-an-avr-as-an-rfid-tag/\" target=\"_blank\" rel=\"noopener\">AVRFID</a>, a project originated way back in 2008 by the media artist/hacker <a href=\"http://www.misc.name/about\">Micah Elizabeth Scott</a> who published this project &#8211; an AVR with hardcoded <a href=\"https://www.digchip.com/datasheets/parts/datasheet/147/EM4102.php\">EM4102</a> tag id, using the RF frequency for it&#8217;s power supply, thus making the AVR completely passive with no need for external battery. Some <a href=\"http://scanlime.org/2012/12/avr-rfid-optimized-and-ported-to-c/\" target=\"_blank\" rel=\"noopener\">upgrades</a> &#38; <a href=\"https://trmm.net/AVR_RFID\" target=\"_blank\" rel=\"noopener\">forks</a> has been made since, so I decided to try my luck with this approach, and check if I can adjust the project to my requirements and build a simple RFID fuzzer.</p>\n<div>According to Micah:</div>\n<pre>*   This is a very weak power source, and the AVR typically gets little\n*   over a volt of Vcc. As a result, most of the AVR's oscillators won't\n*   start. We can, however, use the carrier wave itself as a clock as well.\n*   This also makes the software easy, since the instruction clock is also\n*   the RF clock. We're already clamping the coil voltage into something\n*   resembles a square wave, so this makes a good external clock source.\n</pre>\n<p>This looked promising.</p>\n<p>After flashing the AVR and setting lfuse to 0xC0 to use an external clock, I&#8217;ve put it against the RF reader expecting to see any result &#8211; but nothing happened. I will save you the time &#38; frustration I had for over a few (!!) weeks &#8211; I tried different combinations of capacitors &#38; antennas, but nothing worked, I simply didn&#8217;t get any response from my RF reader (actually, RF readers &#8211; I tried several different types of 125khz RFID readers, including <a href=\"https://store.ryscc.com/\" target=\"_blank\" rel=\"noopener\">proxmark3</a>, all ended with same poor results), and during those weeks I found at least <a href=\"https://teslaui.wordpress.com/2012/11/29/avrfid-tag-1/\" target=\"_blank\" rel=\"noopener\">two</a> <a href=\"http://dimme.net/rfid-tag-emulation-with-an-avr/\" target=\"_blank\" rel=\"noopener\">other</a> successful attempts of other individuals who were able to accomplish a working AVRFID without any problem, which only contributed tremendously to my frustration. I finally bought a small <a href=\"http://wiki.seeedstudio.com/wiki/DSO_Nano_v3\" target=\"_blank\" rel=\"noopener\">nano-scope</a> to assist me with my debugging, and boy, did that help. I finally was able to visually see in real-time what was happening on the AVR with different antennas &#38; capacitors combo, and with some little tweaks (and initially adding a battery source just to boost successful readings) I was able to finally have my own passive AVRFID working to my amusement.</p>\n<blockquote><p><em>Some notes regarding the capacitors:</em></p>\n<ul>\n<li>The capacitor is dependent on your antenna (coil). You will have to do some calculations or use trial &#38; error approach with different capacitors combo to get best results with your antenna.</li>\n</ul>\n<ul>\n<li>Using a curtain capacitors combo might initiate a DoS attack on the reader which will prevent legitimate tags from being read correctly after placing it against a reader only once. A hard reset to the reader will be required to resume work. Just FYI.</li>\n</ul>\n</blockquote>\n<div></div>\n<div>\n<figure data-shortcode=\"caption\" id=\"attachment_729\" aria-describedby=\"caption-attachment-729\" style=\"width: 4032px\" class=\"wp-caption aligncenter\"><img data-attachment-id=\"729\" data-permalink=\"https://z4ziggy.wordpress.com/2017/07/21/zigfrid-a-passive-rfid-fuzzer/playground/\" data-orig-file=\"https://z4ziggy.files.wordpress.com/2017/07/playground.jpg\" data-orig-size=\"4032,3024\" data-comments-opened=\"1\" data-image-meta=\"{&#34;aperture&#34;:&#34;0&#34;,&#34;credit&#34;:&#34;&#34;,&#34;camera&#34;:&#34;&#34;,&#34;caption&#34;:&#34;&#34;,&#34;created_timestamp&#34;:&#34;0&#34;,&#34;copyright&#34;:&#34;&#34;,&#34;focal_length&#34;:&#34;0&#34;,&#34;iso&#34;:&#34;0&#34;,&#34;shutter_speed&#34;:&#34;0&#34;,&#34;title&#34;:&#34;&#34;,&#34;orientation&#34;:&#34;0&#34;}\" data-image-title=\"playground\" data-image-description=\"\" data-medium-file=\"https://z4ziggy.files.wordpress.com/2017/07/playground.jpg?w=300\" data-large-file=\"https://z4ziggy.files.wordpress.com/2017/07/playground.jpg?w=1000\" class=\" size-full wp-image-729 aligncenter\" src=\"https://z4ziggy.files.wordpress.com/2017/07/playground.jpg?w=1000\" alt=\"playground.png\" srcset=\"https://z4ziggy.files.wordpress.com/2017/07/playground.jpg?w=1000 1000w, https://z4ziggy.files.wordpress.com/2017/07/playground.jpg?w=2000 2000w, https://z4ziggy.files.wordpress.com/2017/07/playground.jpg?w=150 150w, https://z4ziggy.files.wordpress.com/2017/07/playground.jpg?w=300 300w, https://z4ziggy.files.wordpress.com/2017/07/playground.jpg?w=768 768w, https://z4ziggy.files.wordpress.com/2017/07/playground.jpg?w=1024 1024w\" sizes=\"(max-width: 1000px) 100vw, 1000px\"   /><figcaption id=\"caption-attachment-729\" class=\"wp-caption-text\">Zigfrid playground.</figcaption></figure>\n</div>\n<div></div>\n<div></div>\n<p>Same as the original AVRFID, I started with a simple 1mH inductor to act as antenna which works better than most antennas I have tried later on, albeit with one big caveat &#8211; you must place it in a curtain angle over the RF reader antenna, which is a major drawback. Among my endless trials to extend the RF range I even tried scraping the antenna out of an RFID tag but the wires are so delicate and that failed miserably. I settled with removing the antenna out of a 125khz RFID module and soldered it to the AVR; If you plan to wire your own antenna DIY style, remember it requires calculations of the coil thickness, tolerance, rounds, etc. &#8211; all the useless headache I wanted to avoid. As Micah &#38; others had mentioned, it is essential to add a small capacitor to improve stability &#38; AVR performance. Your results will vary depending on the RF reader &#38; your antennas (both the RF reader and the AVR) and the capacitors should be changed accordingly (eg, trial &#38; error style).</p>\n<p>The software part took me much more than I planned nor wanted, but it was a fun journey never the less. Everything was new to me, from AVR assembly language to RFID/em41xx format, so I had to take it step by step. I began with learning the original macro assembly code Micah had written so I kept the &#8220;<a href=\"http://www.atmel.com/images/Atmel-0856-AVR-Instruction-Set-Manual.pdf\" target=\"_blank\" rel=\"noopener\">AVR Instruction set</a>&#8221; manual opened. After understanding her code logic (she writes beautiful code thus making it much easier and enjoyable read) I immediately jumped into the water and began coding my own version of the EM41xx part in pure AVR assembly. All went fine until I reached the last 10% of the code, at which that point I&#8217;ve decided my logic is at false and I have to start over. I did it over a few times, and by the 3rd iteration I was confident enough at my AVR assembly skills to conclude this is completely the wrong approach. I then went with a C program with some inline assembly, expecting it to work like a charm, but it didn&#8217;t ofcourse, no matter what I tried. I used the nano-scope to check what was going on and I quickly learned nothing is being sent. Oh my.</p>\n<div>\n<div><img class=\" aligncenter\" src=\"https://ci3.googleusercontent.com/proxy/k9V5bQKZsttJOnoxOoLtu2rnHnyAOVnaYIw_fvOs4Q_kETgFUMEceuZlLpIQddFPved5lMnUMNIS2ZCyeBNNE4IWQSIxe4io3Raqtuq8w005ERupabN0B9HC0O1xTBZCmVpI-NvaSiYwcwU=s0-d-e1-ft#http://rs289.pbsrc.com/albums/ll224/SmokeJumperFirearms/SMILEYS/BANGHEADDESK.gif~c200\" width=\"200\" height=\"200\" /></div>\n</div>\n<div></div>\n<div></div>\n<div></div>\n<p>Took me a while and lots of banging my head against the wall to figure out what was wrong (debugging AVR with external clock is not an easy task as one might think) and eventually I figured out all those tiny bugs and even better &#8211; how to fix them. Hooray, I had a working C program able to send a list of known IDs using a simple state machine. I now wanted something better, and ofcourse, I decided to write a new version, this time using <a href=\"http://ee-classes.usc.edu/ee459/library/documents/avr_intr_vectors/\">interrupts</a>, only because I thought it&#8217;s more &#8216;appropriate&#8217; to this kind of project. My final design is a C program which does all the boring work of setting up a buffer to be sent, increment a 32bit number with 8 bit registers, and leaves only the time-critical parts to assembly &#8211; sending Manchester encoded zeros &#38; ones in nice &#38; clean cycles. The code is also highly optimized (less than 500 code bytes) but won&#8217;t fit ATtiny10 because of the data buffer (64 bytes long, twice as what ATtiny10 provides) and I was too lazy to optimize any further, so only ATtiny85 and above are supported atm.</p>\n<div>\n<figure data-shortcode=\"caption\" id=\"attachment_732\" aria-describedby=\"caption-attachment-732\" style=\"width: 5312px\" class=\"wp-caption aligncenter\"><img data-attachment-id=\"732\" data-permalink=\"https://z4ziggy.wordpress.com/2017/07/21/zigfrid-a-passive-rfid-fuzzer/flash-buspirate/\" data-orig-file=\"https://z4ziggy.files.wordpress.com/2017/07/flash-buspirate.jpg\" data-orig-size=\"5312,2988\" data-comments-opened=\"1\" data-image-meta=\"{&#34;aperture&#34;:&#34;0&#34;,&#34;credit&#34;:&#34;&#34;,&#34;camera&#34;:&#34;&#34;,&#34;caption&#34;:&#34;&#34;,&#34;created_timestamp&#34;:&#34;0&#34;,&#34;copyright&#34;:&#34;&#34;,&#34;focal_length&#34;:&#34;0&#34;,&#34;iso&#34;:&#34;0&#34;,&#34;shutter_speed&#34;:&#34;0&#34;,&#34;title&#34;:&#34;&#34;,&#34;orientation&#34;:&#34;0&#34;}\" data-image-title=\"flash buspirate\" data-image-description=\"\" data-medium-file=\"https://z4ziggy.files.wordpress.com/2017/07/flash-buspirate.jpg?w=300\" data-large-file=\"https://z4ziggy.files.wordpress.com/2017/07/flash-buspirate.jpg?w=1000\" class=\" size-full wp-image-732 aligncenter\" src=\"https://z4ziggy.files.wordpress.com/2017/07/flash-buspirate.jpg?w=1000\" alt=\"flash buspirate.png\" srcset=\"https://z4ziggy.files.wordpress.com/2017/07/flash-buspirate.jpg?w=1000 1000w, https://z4ziggy.files.wordpress.com/2017/07/flash-buspirate.jpg?w=2000 2000w, https://z4ziggy.files.wordpress.com/2017/07/flash-buspirate.jpg?w=150 150w, https://z4ziggy.files.wordpress.com/2017/07/flash-buspirate.jpg?w=300 300w, https://z4ziggy.files.wordpress.com/2017/07/flash-buspirate.jpg?w=768 768w, https://z4ziggy.files.wordpress.com/2017/07/flash-buspirate.jpg?w=1024 1024w\" sizes=\"(max-width: 1000px) 100vw, 1000px\"   /><figcaption id=\"caption-attachment-732\" class=\"wp-caption-text\">Flashing the ATtiny85 with BusPirate.</figcaption></figure>\n</div>\n<p>While I was doing all the debugging, I had to reflash the AVR every time. Since we are disabling the internal AVR clock, we must supply the AVR with an external clock signal when programming &#8211; luckily BusPirate supports this and latest <a href=\"http://www.nongnu.org/avrdude/\" target=\"_blank\" rel=\"noopener\">avrdude</a> (6.3) also supports this in binary mode (was ASCII-mode-only pre 6.3) so everything should be painless. To flash the AVR we&#8217;re using the &#8220;-x cpufreq=125&#8221; parameter to simulate the external clock while reflashing it, otherwise you have to provide your own external clock when you&#8217;ll try to reprogram your AVR. The pinout connections is same from <a href=\"https://trmm.net/AVR_RFID#Flashing_the_RFID\" target=\"_blank\" rel=\"noopener\">Trammell Hudson</a>, I just corrected the Gnd wire:</p>\n<div style=\"text-align:center;\">\n<div style=\"display:inline-block;\">\n<pre class=\"brush: plain; gutter: false; title: ; notranslate\">\n\n                        +-------+\n    White/white   Reset |1  v  8| Vcc   Red\n    Blue/Blue     Xtal1 |2     7| SCK   Purple/green\n                  Xtal2 |3     6| MISO  Black/Black\n    Brown         Gnd   |4     5| MOSI  Gray/Yellow\n                        +-------+\n</pre>\n</div>\n</div>\n<div></div>\n<p>And there you go. You should end up with a nice, tiny, passive fuzzer which fits in the palm of your hand. You can now hide it in a chewing gum and glue it to the reader.</p>\n<hr />\n<p>I&#8217;m <a href=\"https://github.com/z4ziggy/zigfrid\">releasing</a> Zigfrid as a POC only &#8211; it can/should be enhanced to try some (possible) overflows in RFID readers, and of-course fuzz some &#8220;Administrator&#8221; tags by filling tag-ID with 0xFF, Nulls, etc. As for this public release, I decided to keep with the KISS approach and only use 32bit incremental, but why not increment all 40bit of the EM41xx tag ID? or fuzz HID readers? Let your imagination run free. The final code supports a led on PIN5 for debugging purposes and to provide the &#8220;flashing led effect&#8221; (a red led is recommended since it requires less amperage). If you prefer to keep it in stealth mode, simply don&#8217;t connect a led. One major drawback with my current design is other tags or interruptions may interfere with our fuzzer while it&#8217;s working, thus making it highly likely for the AVR to restart itself which will cause the entire fuzzing process to start from the beginning. Maybe a future version should save the numbers in the EEPROM every xx increments to fix this. Also, adding Manchester reading support (something like <a href=\"http://www.serasidis.gr/circuits/RFID_reader/125kHz_RFID_reader.htm\">this</a>) will turn Zigfrid into a passive sniffer &#8211; might be worth the hassle.</p>\n<p>Finally, a demo of Zigfrid in action:</p>\n<div class=\"jetpack-video-wrapper\"><iframe class='youtube-player' type='text/html' width='1000' height='563' src='https://www.youtube.com/embed/OeffJOjDXMI?version=3&#038;rel=1&#038;fs=1&#038;autohide=2&#038;showsearch=0&#038;showinfo=1&#038;iv_load_policy=1&#038;wmode=transparent' allowfullscreen='true' style='border:0;'></iframe></div>\n<div></div>\n<blockquote><p><em>Some coding notes:</em></p>\n<ul>\n<li>Using PROGMEM attribute on your variables requires changing the assembly instructions used to access those variables (eg, from &#8220;LD&#8221; to &#8220;LPM&#8221;) or use pgm_read_byte() when in C. You can also <a href=\"http://blog.mon.im/2014/11/modifying-avr-progmem-at-runtime.html\">modify PROGMEM</a> area, but this is discouraged.</li>\n</ul>\n<ul>\n<li>&#8220;-nostdlib&#8221; flag shaves off all the gcc extra wrappers, including the part which copies the data section, thus make all your array values play hide &#38; seek with you (spoiler: they&#8217;re not there unless you copy them manually __do_copy_data() style).</li>\n</ul>\n<ul>\n<li>&#8220;-nostdlib&#8221; flag will cause your main() function to travel to a random space instead of zero (which is where the AVR loads the initial code from). You can instruct the linker to set it&#8217;s loading address to zero using all kinda tricks, my chosen one is &#8220;__attribute__((section(&#8220;.vectors&#8221;)))&#8221; which places the function in the &#8220;vectors&#8221; section (which begins at zero).</li>\n</ul>\n<ul>\n<li>&#8220;-nostdlib&#8221; flag also removes the &#8220;interrupt jump table&#8221; so you will have to provide one yourself using a linker script or in the code.</li>\n</ul>\n</blockquote>\n<hr />\n<p>For more RFID hacks check <a href=\"http://www.cnblogs.com/shangdawei/p/4834188.html\" target=\"_blank\" rel=\"noopener\">this</a> site which seems to archive most of them.</p>\n<p>[Edit: Useful links]</p>\n<p><a href=\"http://wiki.yobi.be/wiki/RFID\">http://wiki.yobi.be/wiki/RFID</a></p>\n<p><a href=\"http://www.t4f.org/category/projects/open-rfid-tag/\">http://www.t4f.org/category/projects/open-rfid-tag/</a></p>\n<p><a href=\"http://www.instructables.com/id/RFID-Emulator-How-to-Clone-RFID-Card-Tag-/\">http://www.instructables.com/id/RFID-Emulator-How-to-Clone-RFID-Card-Tag-/</a></p>\n<p><a href=\"http://ficara.altervista.org/atmel_avr.php\">http://ficara.altervista.org/atmel_avr.php</a></p>\n<p>&#160;</p>\n","descriptionType":"html","publishedDate":"Fri, 21 Jul 2017 23:08:25 +0000","feedId":40270,"bgimg":"https://z4ziggy.files.wordpress.com/2017/07/zigfrid.png","linkMd5":"60eb293d339d2277c9c24dcd2b682624","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn75@2020_3/2020/10/12/21-34-13-315_813abf2ce5781ee7.webp","destWidth":1280,"destHeight":1344,"sourceBytes":728896,"destBytes":67104,"author":"z4ziggy","articleImgCdnMap":{"https://z4ziggy.files.wordpress.com/2017/07/handheld-rfid-reader_copier.jpg?w=1000":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn88@2020_2/2020/10/12/21-34-13-552_0c53c60e904a53dc.webp","https://z4ziggy.files.wordpress.com/2017/07/playground.jpg?w=1000":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn91@2020_3/2020/10/12/21-34-13-504_b96ba781973cd2e1.webp","https://ci3.googleusercontent.com/proxy/k9V5bQKZsttJOnoxOoLtu2rnHnyAOVnaYIw_fvOs4Q_kETgFUMEceuZlLpIQddFPved5lMnUMNIS2ZCyeBNNE4IWQSIxe4io3Raqtuq8w005ERupabN0B9HC0O1xTBZCmVpI-NvaSiYwcwU=s0-d-e1-ft#http://rs289.pbsrc.com/albums/ll224/SmokeJumperFirearms/SMILEYS/BANGHEADDESK.gif~c200":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","https://z4ziggy.files.wordpress.com/2017/07/flash-buspirate.jpg?w=1000":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn79@2020_1/2020/10/12/21-34-13-347_1b03bc0392ba5bdd.webp"},"publishedOrCreatedDate":1602538452871}],"record":{"createdTime":"2020-10-13 05:34:12","updatedTime":"2020-10-13 05:34:12","feedId":40270,"fetchDate":"Mon, 12 Oct 2020 21:34:12 +0000","fetchMs":389,"handleMs":10,"totalMs":40922,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"aa5b771909b552db8ae765322bbc0947","hostName":"europe-25*","requestId":"ad80d87397a648bd91534d2bdcfd938c_40270","contentType":"application/rss+xml; charset=UTF-8","totalBytes":273784,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":4,"articlesImgsGithubTotal":4,"successGithubMap":{"myreaderx22":1,"myreaderx3":1,"myreaderx12":1,"myreaderx19":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 03:20:10","updatedTime":"2020-09-07 05:36:26","id":40270,"name":"Ziggy's of the world","url":"https://z4ziggy.wordpress.com/feed/","subscriber":80,"website":null,"icon":"https://secure.gravatar.com/blavatar/53645dfa06080e4d289df72cb1da1d48?s=96&d=https%3A%2F%2Fs0.wp.com%2Fi%2Fbuttonw-com.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn6@2020_3/2020/09/06/21-36-20-428_2175f468f965697d.jpg","description":"geeks, computers, and bread","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":273784,"tmpBgImgCdnBytes":0,"extra4":{"start":1602538452469,"total":0,"statList":[{"spend":392,"msg":"获取xml内容"},{"spend":10,"msg":"解释文章"},{"spend":1402,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":40519,"msg":"正文链接上传到cdn"}]},"extra5":4,"extra6":4,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://ci3.googleusercontent.com/proxy/k9V5bQKZsttJOnoxOoLtu2rnHnyAOVnaYIw_fvOs4Q_kETgFUMEceuZlLpIQddFPved5lMnUMNIS2ZCyeBNNE4IWQSIxe4io3Raqtuq8w005ERupabN0B9HC0O1xTBZCmVpI-NvaSiYwcwU=s0-d-e1-ft#http://rs289.pbsrc.com/albums/ll224/SmokeJumperFirearms/SMILEYS/BANGHEADDESK.gif~c200","sourceStatusCode":404,"sourceBytes":0,"destBytes":0,"feedId":40270,"totalSpendMs":20196,"convertSpendMs":0,"createdTime":"2020-10-13 05:34:12","host":"europe61*","referer":"http://z4ziggy.wordpress.com/?p=701","linkMd5ListStr":"60eb293d339d2277c9c24dcd2b682624","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://ci3.googleusercontent.com/proxy/k9V5bQKZsttJOnoxOoLtu2rnHnyAOVnaYIw_fvOs4Q_kETgFUMEceuZlLpIQddFPved5lMnUMNIS2ZCyeBNNE4IWQSIxe4io3Raqtuq8w005ERupabN0B9HC0O1xTBZCmVpI-NvaSiYwcwU=s0-d-e1-ft#http://rs289.pbsrc.com/albums/ll224/SmokeJumperFirearms/SMILEYS/BANGHEADDESK.gif~c200","sourceStatusCode":404,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","sourceBytes":0,"destBytes":0,"feedId":40270,"totalSpendMs":20125,"convertSpendMs":0,"createdTime":"2020-10-13 05:34:33","host":"us-027*","referer":"http://z4ziggy.wordpress.com/?p=701","linkMd5ListStr":"60eb293d339d2277c9c24dcd2b682624","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-039.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe61.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[404]},"http://us-027.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,404]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://z4ziggy.files.wordpress.com/2017/07/zigfrid.png","sourceStatusCode":200,"destWidth":1280,"destHeight":1344,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn75@2020_3/2020/10/12/21-34-13-315_813abf2ce5781ee7.webp","sourceBytes":728896,"destBytes":67104,"targetWebpQuality":75,"feedId":40270,"totalSpendMs":1222,"convertSpendMs":107,"createdTime":"2020-10-13 05:34:13","host":"us-011*","referer":"http://z4ziggy.wordpress.com/?p=701","linkMd5ListStr":"60eb293d339d2277c9c24dcd2b682624","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"711.8 KB","destSize":"65.5 KB","compressRate":"9.2%"},{"code":1,"isDone":false,"source":"https://z4ziggy.files.wordpress.com/2017/07/playground.jpg?w=1000","sourceStatusCode":200,"destWidth":1000,"destHeight":750,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn91@2020_3/2020/10/12/21-34-13-504_b96ba781973cd2e1.webp","sourceBytes":119918,"destBytes":119918,"feedId":40270,"totalSpendMs":1468,"convertSpendMs":0,"createdTime":"2020-10-13 05:34:12","host":"us-027*","referer":"http://z4ziggy.wordpress.com/?p=701","linkMd5ListStr":"60eb293d339d2277c9c24dcd2b682624","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"117.1 KB","destSize":"117.1 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://z4ziggy.files.wordpress.com/2017/07/handheld-rfid-reader_copier.jpg?w=1000","sourceStatusCode":200,"destWidth":1000,"destHeight":562,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn88@2020_2/2020/10/12/21-34-13-552_0c53c60e904a53dc.webp","sourceBytes":86978,"destBytes":86978,"feedId":40270,"totalSpendMs":1440,"convertSpendMs":0,"createdTime":"2020-10-13 05:34:13","host":"us-039*","referer":"http://z4ziggy.wordpress.com/?p=701","linkMd5ListStr":"60eb293d339d2277c9c24dcd2b682624","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"84.9 KB","destSize":"84.9 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://z4ziggy.files.wordpress.com/2017/07/flash-buspirate.jpg?w=1000","sourceStatusCode":200,"destWidth":1000,"destHeight":562,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn79@2020_1/2020/10/12/21-34-13-347_1b03bc0392ba5bdd.webp","sourceBytes":66888,"destBytes":66888,"feedId":40270,"totalSpendMs":1605,"convertSpendMs":0,"createdTime":"2020-10-13 05:34:12","host":"europe-23*","referer":"http://z4ziggy.wordpress.com/?p=701","linkMd5ListStr":"60eb293d339d2277c9c24dcd2b682624","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65.3 KB","destSize":"65.3 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://ci3.googleusercontent.com/proxy/k9V5bQKZsttJOnoxOoLtu2rnHnyAOVnaYIw_fvOs4Q_kETgFUMEceuZlLpIQddFPved5lMnUMNIS2ZCyeBNNE4IWQSIxe4io3Raqtuq8w005ERupabN0B9HC0O1xTBZCmVpI-NvaSiYwcwU=s0-d-e1-ft#http://rs289.pbsrc.com/albums/ll224/SmokeJumperFirearms/SMILEYS/BANGHEADDESK.gif~c200","sourceStatusCode":404,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn0@2020_1/404.jpg","sourceBytes":0,"destBytes":0,"feedId":40270,"totalSpendMs":20125,"convertSpendMs":0,"createdTime":"2020-10-13 05:34:33","host":"us-027*","referer":"http://z4ziggy.wordpress.com/?p=701","linkMd5ListStr":"60eb293d339d2277c9c24dcd2b682624","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[404],"sourceSize":"0","destSize":"0"}],"successGithubMap":{"myreaderx22":1,"myreaderx3":1,"myreaderx12":1,"myreaderx19":1},"failGithubMap":{}}