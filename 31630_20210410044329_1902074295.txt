{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-04-10 12:42:24","updatedTime":"2021-04-10 12:42:24","title":"Ruby 3でprivate/public/protectedとattr_*アクセサを1行で書けるようになった","link":"https://techracho.bpsinc.jp/?p=104703","description":"<div style=\"margin: 5px 5% 10px 5%;\">\n <img src=\"https://techracho.bpsinc.jp/wp-content/uploads/2021/03/ruby3_private_attr_accessors_eyecatch-min-768x461.png\" width=\"768\" height=\"461\" title=\"\" alt=\"\" />\n</div>\n<div>\n <p><a href=\"https://www.amazon.co.jp/WEB-DB-PRESS-Vol-121-%E7%AC%B9%E7%94%B0/dp/4297119609?_encoding=UTF8&amp;pd_rd_i=4297119609&amp;pd_rd_r=2c57bc2e-2c03-42f4-aa83-83dec8e4f59f&amp;pd_rd_w=qxQRx&amp;pd_rd_wg=Vmalc&amp;pf_rd_p=cb2cef9d-b0a3-4b58-a575-45abfc5e07e8&amp;pf_rd_r=HWCH7D7SCF9D2ANQN0SR&amp;psc=1&amp;refRID=HWCH7D7SCF9D2ANQN0SR&amp;linkCode=li2&amp;tag=aketeorekaneg-22&amp;linkId=756592e070b5a0f55fdbd24b73dcdb85&amp;language=ja_JP&amp;ref_=as_li_ss_il\" target=\"_blank\" rel=\"noopener noreferrer external\" data-wpel-link=\"external\"><img border=\"0\" src=\"https://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=4297119609&amp;Format=_SL160_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=aketeorekaneg-22&amp;language=ja_JP\" /></a><img src=\"https://ir-jp.amazon-adsystem.com/e/ir?t=aketeorekaneg-22&amp;language=ja_JP&amp;l=li2&amp;o=9&amp;a=4297119609\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /></p> \n <p>WEB+DB PRESS Vol.121の「特集 Ruby 3」を読んでいて、「その他の追加機能」に以下がありました。</p> \n <ul> \n  <li><code>private attr_reader :foo</code>のようにシンボルを書けるようになった</li> \n  <li><code>private</code>がシンボルの配列を受け取れるようになった</li> \n </ul> \n <p>1つ目はともかく2つ目がよくわからなかったので調べてみました。</p> \n <div class=\"comment\"> \n  <p><span class=\"comment-title\">注</span></p> \n  <p>RubyのModuleにある可視性変更用の<code>private</code>/<code>public</code>/<code>protected</code>メソッドを本記事では「アクセス制御メソッド」と総称します。</p> \n  <p>また、RubyのModuleにある<code>attr_accessor</code>/<code>attr_reader</code>/<code>attr_writer</code>を本記事では「アクセサメソッド」と総称します。アクセサメソッドで定義されるメソッドについて、便宜上「ゲッター」「セッター」というJavaの用語も使っています。</p> \n </div> \n <h2>Ruby 3.0で改善された点</h2> \n <ul> \n  <li><a href=\"https://bugs.ruby-lang.org/issues/17314\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\">Feature #17314: Provide a way to declare visibility of attributes defined by attr* methods in a single expression - Ruby master - Ruby Issue Tracking System<span class=\"wpel-icon wpel-image wpel-icon-19\"></span></a></li> \n </ul> \n <p>結論から言うと、Ruby 3.0からは以下のように書けるようになりました。</p> \n <pre><code class=\"ruby\">class Foo\n  private attr_accessor :foo, :bar\n# ここから下はpublic\nend\n</code></pre> \n <ul> \n  <li>たとえばprivateなアクセサメソッドが欲しい場合なら、<code>private attr_accessor</code>にシンボルまたは文字列を渡す形で1行に書けるようになった</li> \n  <li>引数ありのアクセサメソッドはその行にだけ効くので、その後<code>public</code>で解除しなくてもよい</li> \n  <li>それによって<code>private attr_accessor</code>をクラスの冒頭に簡潔に書けるようになった</li> \n </ul> \n <p>さらにありがたい改修も含まれています。</p> \n <ul> \n  <li><code>attr_accessor</code>/<code>attr_reader</code>/<code>attr_writer</code>にシンボル（文字列でもよい）を渡すと、それぞれのアクセサメソッドに応じて適切なゲッター/セッターメソッドをシンボルの配列で返すようになった</li> \n </ul> \n <p>具体的にはこうです。</p> \n <pre><code class=\"ruby\"># Ruby 3.0.0\nclass Foo\n  @@accessor = attr_accessor :foo, :bar\n  @@reader   = attr_reader   :baz, :bam\n  @@writer   = attr_writer   :hoge, :huga\n  def accessor\n    p @@accessor\n  end\n  def reader\n    p @@reader\n  end\n  def writer\n    p @@writer\n  end\nend\n\n\nFoo.new.accessor  #=&gt; [:foo, :foo=, :bar, :bar=]\n\nFoo.new.reader    #=&gt; [:baz, :bam]\n\nFoo.new.writer    #=&gt;  [:hoge=, :huga=]\n</code></pre> \n <p>つまり、<code>attr_accessor</code>の場合はゲッターとセッター、<code>attr_reader</code>の場合はゲッターだけ、<code>attr_writer</code>の場合はセッターだけを、シンボルの配列で返すようになりました。</p> \n <p>従来は、アクセサメソッドを定義した後にアクセス制御をかけようとすると、以下のように<code>:foo</code>や<code>:foo=</code>を毎回自分で指定しなければならず、ついつい<code>:foo=</code>のセッターを書き忘れてしまったりしました。</p> \n <pre><code class=\"ruby\"># Ruby 2.7.2まで\nclass Foo\n  attr_accessor :foo, :bar\n  private :foo, :foo=, :bar, :bar=\nend\n</code></pre> \n <p>なお、上のような書き方は、アクセサメソッドを<code>private</code>で保護しながら、クラス内のインスタンス変数にアクセサメソッド経由でアクセスする方法です。クラス内で<code>@</code>を書かずにインスタンス変数にアクセスできるので、この書き方を好む人もいるそうです。</p> \n <p>参考: <a href=\"https://normalse.hatenablog.jp/entry/2016/08/21/013100\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\">Rubyのインスタンス変数の直接参照について - 雑草SEの備忘録<span class=\"wpel-icon wpel-image wpel-icon-19\"></span></a></p> \n <p>Ruby 3.0では、それと同じことを以下のように1行で簡潔に書けるようになったわけです。地味にありがたい機能です。</p> \n <pre><code class=\"ruby\">class Foo\n  private attr_accessor :foo, :bar\nend\n</code></pre> \n <h2>Ruby 2.7.2まではどうだったか</h2> \n <p>クラス内のアクセス制御メソッドは、引数を与えればその引数にだけアクセス制御が効きますが、引数なしだと以後の行すべてに効きます。</p> \n <p>以下のように、1行の中で<code>private</code>などのアクセス制御メソッドに続けて<code>attr_*</code>などのアクセサメソッドを書くとエラーになります。書けそうなのに書けなかったんですね。</p> \n <pre><code class=\"ruby\">class Foo\n  private attr_accessor :foo, :bar # TypeError (nil is not a symbol nor a string)\n    def debug\n      @aa\n   end\nend\n</code></pre> \n <p>これを回避するには、たとえば<code>private</code>などのアクセス制御メソッドと、<code>attr_*</code>を別の行に書く必要がありました。</p> \n <p>アクセス制御メソッドはクラスの冒頭に書きたいところですが、以下のように冒頭で<code>private</code>を使った場合、以後の行を<code>private</code>のままにしたくなければその後<code>public</code>を呼んで、以後のアクセス制御を解除する必要がありました。</p> \n <pre><code class=\"ruby\">class Foo\n  private\n  attr_accessor :foo, :bar\n  public\n\n  def debug\n    @aa\n   end\nend\n</code></pre> \n <p><code>public</code>を呼びたくない場合は<code>private</code>とアクセス制御メソッドをクラスの末尾に書くことになりますが、そうすると<code>attr_*</code>をクラスの冒頭に置けません。</p> \n <pre><code class=\"ruby\">class Foo\n  def debug\n    @aa\n  end\n\n  private\n  attr_accessor :foo, :bar\nend\n</code></pre> \n <p>いずれにしろ1行では書けませんでした。</p> \n <h3>アクセサメソッドは<code>nil</code>を返していた</h3> \n <ul> \n  <li><a href=\"https://docs.ruby-lang.org/ja/2.7.0/method/Module/i/attr_reader.html\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"><code>Module#attr_reader</code> (Ruby 2.7.0 リファレンスマニュアル)<span class=\"wpel-icon wpel-image wpel-icon-19\"></span></a></li> \n  <li><a href=\"https://docs.ruby-lang.org/ja/2.7.0/method/Module/i/attr_writer.html\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"><code>Module#attr_writer</code> (Ruby 2.7.0 リファレンスマニュアル)<span class=\"wpel-icon wpel-image wpel-icon-19\"></span></a></li> \n  <li><a href=\"https://docs.ruby-lang.org/ja/2.7.0/method/Module/i/attr_accessor.html\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"><code>Module#attr_accessor</code> (Ruby 2.7.0 リファレンスマニュアル)<span class=\"wpel-icon wpel-image wpel-icon-19\"></span></a></li> \n </ul> \n <p><code>attr_accessor</code>、<code>attr_reader</code>、<code>attr_writer</code>は従来<code>nil</code>を返していました。<code>public</code>や<code>private</code>などと1行内で組み合わせる利用法は想定されていなかったのだろうと想像しました。</p> \n <pre><code class=\"ruby\"># Ruby 2.7.2\nclass Foo\n  @@accessor = attr_accessor :foo, :bar\n  @@reader   = attr_reader   :baz, :bam\n  @@writer   = attr_writer   :hoge, :huga\n  def accessor\n    p @@accessor\n  end\n  def reader\n    p @@reader\n  end\n  def writer\n    p @@writer\n  end\nend\n\n\nFoo.new.accessor  #=&gt; nil\n\nFoo.new.reader     #=&gt; nil\n\nFoo.new.writer      #=&gt; nil\n</code></pre> \n <p>なお、Rubyには<code>attr</code>という短いアクセサメソッドも一応あり、Ruby 1.9以降は<code>attr_reader</code>と同等ですが、<code>attr</code>はRuboCopで怒られます。</p> \n <p>参考: <a href=\"https://techracho.bpsinc.jp/hachi8833/2017_03_07/36256#5-11\" data-wpel-link=\"internal\" target=\"_self\">5-11【統一】<code>attr</code>は原則使わない: Rubyスタイルガイドを読む: クラスとモジュール（2）クラス設計・アクセサ・ダックタイピングなど</a></p> \n <h3>アクセス制御メソッドはシンボルを配列で受け取れなかった</h3> \n <ul> \n  <li><a href=\"https://docs.ruby-lang.org/ja/2.7.0/method/Module/i/private.html\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"><code>Module#private</code> (Ruby 2.7.0 リファレンスマニュアル)<span class=\"wpel-icon wpel-image wpel-icon-19\"></span></a></li> \n  <li><a href=\"https://docs.ruby-lang.org/ja/2.7.0/method/Module/i/public.html\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"><code>Module#public</code> (Ruby 2.7.0 リファレンスマニュアル)<span class=\"wpel-icon wpel-image wpel-icon-19\"></span></a></li> \n  <li><a href=\"https://docs.ruby-lang.org/ja/2.7.0/method/Module/i/protected.html\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"><code>Module#protected</code> (Ruby 2.7.0 リファレンスマニュアル)<span class=\"wpel-icon wpel-image wpel-icon-19\"></span></a></li> \n </ul> \n <p>Ruby 2.7.2までは、<code>private</code>/<code>public</code>/<code>protected</code>には文字列かシンボルしか渡せませんでした。以下のように配列を渡すとエラーになりました。</p> \n <pre><code class=\"ruby\"># Ruby 2.7.2\nclass Foo\n  def foo\n    \"foo\"\n  end\n  def bar\n    \"bar\"\n  end\n  private [:foo, :bar] # TypeError ([:foo, :bar] is not a symbol nor a string)\nend\n</code></pre> \n <h2>その他</h2> \n <p><a href=\"https://bugs.ruby-lang.org/issues/17314#note-15\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\">#17314のコメント<span class=\"wpel-icon wpel-image wpel-icon-19\"></span></a>を見ると、シンボルの配列を受け取れるようにする改修は元々<code>public</code>/<code>protected</code>/<code>private</code>を対象としていたのが、結果として<code>private_class_method</code>と<code>public_class_method</code>とトップレベルの<code>private</code>と<code>private</code>でも同じことができるようになっていたことがマージ後にわかったそうです。</p> \n <pre><code class=\"ruby\"># #17314#17より\nclass Foo\n  def self.foo; end\n  def self.bar; end\n  private_class_method [:foo, :bar] # No error\nend\n</code></pre> \n <pre><code class=\"ruby\"># #17314#17より\ndef foo = nil\ndef bar = nil\n\nprivate [:foo, :bar]\npublic [:foo, :bar]\n</code></pre> \n <h2>関連記事</h2> \n <blockquote class=\"wp-embedded-content\" data-secret=\"lQKIVEjTio\">\n  <p><a href=\"https://techracho.bpsinc.jp/hachi8833/2020_12_28/101768\" data-wpel-link=\"internal\" target=\"_self\">Ruby: 文字列リテラル同士はスペース文字で結合される</a></p>\n </blockquote> \n <p><iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" title=\"“Ruby: 文字列リテラル同士はスペース文字で結合される” — TechRacho\" src=\"https://techracho.bpsinc.jp/hachi8833/2020_12_28/101768/embed#?secret=lQKIVEjTio\" data-secret=\"lQKIVEjTio\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe></p> \n</div>","descriptionType":"html","publishedDate":"Thu, 08 Apr 2021 09:32:53 +0000","feedId":31630,"bgimg":"https://techracho.bpsinc.jp/wp-content/uploads/2021/03/ruby3_private_attr_accessors_eyecatch-min-768x461.png","linkMd5":"a03905a56dc4b33f66f7106c448a2133","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn66@2020_2/2021/04/10/04-42-27-529_c8f8b20f08106b73.webp","destWidth":768,"destHeight":461,"sourceBytes":120707,"destBytes":25780,"author":"hachi8833","enclosureType":"image/jpg","enclosureUrl":"https://techracho.bpsinc.jp/wp-content/uploads/2021/03/ruby3_private_attr_accessors_eyecatch-min.png","articleImgCdnMap":{"https://techracho.bpsinc.jp/wp-content/uploads/2021/03/ruby3_private_attr_accessors_eyecatch-min-768x461.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn66@2020_2/2021/04/10/04-42-27-529_c8f8b20f08106b73.webp","https://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=4297119609&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=aketeorekaneg-22&language=ja_JP":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn69@2020_1/2021/04/10/04-42-28-425_dffe9929bc92762e.webp","https://ir-jp.amazon-adsystem.com/e/ir?t=aketeorekaneg-22&language=ja_JP&l=li2&o=9&a=4297119609":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn73@2020_4/2021/04/10/04-43-28-920_58d5440d3b6fefb6.webp"},"publishedOrCreatedDate":1618029744975}],"record":{"createdTime":"2021-04-10 12:42:24","updatedTime":"2021-04-10 12:42:24","feedId":31630,"fetchDate":"Sat, 10 Apr 2021 04:42:24 +0000","fetchMs":2026,"handleMs":14,"totalMs":67207,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"0f088374e81fa2eb0822242f463bca57","hostName":"us-025*","requestId":"3a5679c3493641bb8ec0d38d02edd121_31630","contentType":"application/rss+xml; charset=UTF-8","totalBytes":34382,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":3,"articlesImgsGithubTotal":3,"successGithubMap":{"myreaderx6":1,"myreaderx24":1,"myreaderx29":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:53:13","updatedTime":"2020-09-07 05:01:09","id":31630,"name":"TechRacho","url":"https://techracho.bpsinc.jp/feed","subscriber":102,"website":null,"icon":"https://techracho.bpsinc.jp/wp-content/uploads/2017/09/cropped-techracho_official_icon-1-32x32.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx62/cdn38@2020_6/2020/09/06/21-01-00-957_6f5f6b2c40d7c621.png","description":"Ruby on Rails システム開発情報サイト - BPS株式会社","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":25780,"tmpBodyImgCdnBytes":8602,"tmpBgImgCdnBytes":0,"extra4":{"start":1618029742036,"total":0,"statList":[{"spend":2925,"msg":"获取xml内容"},{"spend":14,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":1,"msg":"修正封面图上传失败重新上传"},{"spend":61472,"msg":"正文链接上传到cdn"}]},"extra5":3,"extra6":3,"extra7ImgCdnFailResultVector":[null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-013.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://techracho.bpsinc.jp/wp-content/uploads/2021/03/ruby3_private_attr_accessors_eyecatch-min-768x461.png","sourceStatusCode":200,"destWidth":768,"destHeight":461,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn66@2020_2/2021/04/10/04-42-27-529_c8f8b20f08106b73.webp","sourceBytes":120707,"destBytes":25780,"targetWebpQuality":75,"feedId":31630,"totalSpendMs":2163,"convertSpendMs":21,"createdTime":"2021-04-10 12:42:25","host":"us-038*","referer":"https://techracho.bpsinc.jp/?p=104703","linkMd5ListStr":"a03905a56dc4b33f66f7106c448a2133,a03905a56dc4b33f66f7106c448a2133","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"117.9 KB","destSize":"25.2 KB","compressRate":"21.4%"},{"code":1,"isDone":false,"source":"https://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&ASIN=4297119609&Format=_SL160_&ID=AsinImage&MarketPlace=JP&ServiceVersion=20070822&WS=1&tag=aketeorekaneg-22&language=ja_JP","sourceStatusCode":200,"destWidth":113,"destHeight":160,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn69@2020_1/2021/04/10/04-42-28-425_dffe9929bc92762e.webp","sourceBytes":9142,"destBytes":8530,"targetWebpQuality":75,"feedId":31630,"totalSpendMs":886,"convertSpendMs":10,"createdTime":"2021-04-10 12:42:27","host":"us-026*","referer":"https://techracho.bpsinc.jp/?p=104703","linkMd5ListStr":"a03905a56dc4b33f66f7106c448a2133","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.9 KB","destSize":"8.3 KB","compressRate":"93.3%"},{"code":1,"isDone":false,"source":"https://ir-jp.amazon-adsystem.com/e/ir?t=aketeorekaneg-22&language=ja_JP&l=li2&o=9&a=4297119609","sourceStatusCode":200,"destWidth":1,"destHeight":1,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn73@2020_4/2021/04/10/04-43-28-920_58d5440d3b6fefb6.webp","sourceBytes":42,"destBytes":72,"targetWebpQuality":75,"feedId":31630,"totalSpendMs":830,"convertSpendMs":7,"createdTime":"2021-04-10 12:43:28","host":"us-026*","referer":"https://techracho.bpsinc.jp/?p=104703","linkMd5ListStr":"a03905a56dc4b33f66f7106c448a2133","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42 B","destSize":"72 B","compressRate":"171.4%"}],"successGithubMap":{"myreaderx6":1,"myreaderx24":1,"myreaderx29":1},"failGithubMap":{}}