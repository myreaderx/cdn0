{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-05 15:05:09","updatedTime":"2020-09-05 15:05:09","title":"读数据中台笔记整理(200904)","link":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7Ga11IHmc1c\" TARGET=\"_blank\"><img SRC=\"http://s13.sinaimg.cn/mw690/001l8XD7zy7Ga11IHmc1c&#38;690\" NAME=\"image_operate_31691599176748342\" /></A>\n<div><br /></DIV>\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这本书《数据中台-让数据用起来》是我和中台战略一起购买的另外一本中台方面的书，今天读完前面4个小章节，并对整个书籍内容做了下泛读，整体质量还是不错，但是比中台战略要偏技术化点，适合数据规划和数据架构师阅读。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在读一本书的时候，我始终在强调其一你要抓住最核心的概念模型，其二你要对对比解析搞清楚和其它概念的区别。类似数据中台来说，首先你要搞清楚的就是数据中台的概念和定义，其次就是要搞清楚数据中台和业务中台的区别，和传统的大数据平台，BI了数据仓库的区别。只有把这些搞清楚了你对数据中台的概念才能够有一个完整的理解和掌握。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先我们看下这本书给数据中台的一个定义：</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n数据中台是一套可持续的让企业的数据用起来的机制，是一种战略选择和组织形式，是依据企业特有的业务模式和组织架构，通过有形的产品和实施方法论支撑，构建的一套持续不断的把数据变成资产并服务于业务的机制。数据来源于业务并反哺业务，不断的迭代循环，实现数据可间，可用和可运营。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这里面最核心的就是将数据变化为资产并服务于业务的机制，数据来源于业务并反哺业务。我们基于这个核心内容可以进一步抽象下数据中台对核心的定义，我个人理解和定义如下：</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n数据中台本质是一个能够实现跨域数据融合，并在数据融合后对数据进行整合加工和分析，提供增值的数据服务能力给业务使用的一个平台。在我这个概念里面多强调了两点，一个是实现跨域数据融合，一个是提供增值的数据API服务能力给业务使用。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n书籍里面提到了书籍中台四个方面的关键能力：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n书籍中台需要具备<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">数据汇聚整合，数据加工提纯，数据服务可视化，数据价值</SPAN>变现4个核心能力，让企业员工，客户，伙伴能够方便的应用数据。而这个里面的数据提纯加工对应的是数据资产管理的核心内容，即数据中台必须通过连通全域数据，通过统一的数据标准和质量体系，建设提纯加工后的标准数据资产体系，以满足企业业务对数据的需求。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n数据中台和其它概念的关键差异分析</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; height: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/2026b1fb9e994342a9bab7ed68cd7702?from=pc\" IMG_WIDTH=\"727\" IMG_HEIGHT=\"491\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_27271599176759704\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据中台和业务中台的关系</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我们先看下书里面的一些解释即：</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n业务中台更加偏向于业务流程管控，将业务流程中的共性服务能力抽象出来，形成通用服务能力。而数据中台则是抽象数据能力的共性，形成统一的数据服务能力。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于上面这个解释不足够准确，为什么呢？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因为业务中台本身也会抽象数据共性提供数据服务能力，类似业务中台的供应商中心，客户中心本身也提供数据服务能力。那么时间最大的差异点在哪里呢？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即我们前面提到的，数据中台是实现业务中台核心共享数据的跨域整合，再通过加工后提供整合后的数据服务能力。这里面有两个重点，即：<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">第一数据要跨域整合，第二数据要加工处理后再提供增值服务能力</SPAN>，这个加工可能简单的汇总表，也可能是复制的底层数据模型和智能分析算法。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务中台重点是业务数据化，而数据中台重点是数据业务化</SPAN>，数据来源于业务并反哺业务。就建设和支撑层面来说我原来也总结过，即业务中台是基础业务能力支撑，必须要有，数据中台是增值能力支撑，刚开始没有也不会影响到业务本身的运作。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n再简单来说，以电商平台来举例，业务中台关键功能缺失导致的是业务流程走不下去，在业务协同上出现问题。而数据中台能力缺失导致的是没能够为用户提供增值服务，让用户顺带多买点东西。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n两者的联系，书里面有一句总结还是比较准确，即数据中台和业务中台本身是相辅相成的，业务中台中沉淀的业务数据进入到数据中台进行体系化加工，再以服务化的方式支撑业务中台上的应用，而这些应用产生的新数据又重新流转到数据中台，形成循环不息的数据闭环。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据中台和数据仓库和大数据平台</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/5347ba3e58524b2ca3ad694ecb518af1?from=pc\" IMG_WIDTH=\"659\" IMG_HEIGHT=\"477\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于数据中台和数据仓库的区别，书里面的总结比较到位。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n即数据仓库的主要场景是支持管理决策和业务分析，而数据中台则是将数据服务化之后提供给业务系统，目标是数据能力渗透到各个业务环节，不限于决策分析类应用场景。数据中台持续不断的将数据进行资产化，价值化并应用到业务，而且关注数据价值的运营。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这里面的关键区别就在于数据中台能力要服务于业务系统准实时协同需要。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n为了准实时，一方面你会看到数据中台架构上实际上是包括了大数据平台的核心架构和分布式存储内容，同时还包括了大数据平台中的实时计算和流处理能力。其次，为了将能力提供给业务系统，往往数据中台整体架构上一定会体现一个统一的数据服务能力开放层，这个在传统的数据仓库或大数据平台上是没有的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据中台和BI数据仓库有重合，也有交集。相同的就是整个数据采集集成，数据存储，数据模型构建，数据开发和分析，这些都需要。差异点在于数据中台需要有统一的数据服务能力开放层，提供给业务使用，而弱化了传统BI里面的数据分析和报表展现层。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n所以我们首先搞清楚数据中台是为增值业务需求服务，BI平台为管理经营决策服务。这使得两者在数据模型构建，数据开放和提供策略上有差异，但是核心的技术平台能力则是相同的。即你可以基于Hadoop整个技术框架体系来构建数据中台，也可以用来构建BI数据仓库。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据中台的业务赋能</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n简单总结就是：<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">业务数据化，数据资产化，资产服务化，服务业务化，业务智能化持续赋能业务闭环。</SPAN>数据中台作为整个企业各个业务所需数据服务的提供方，通过自身的平台能力和业务对数据的不断滋养（业务数据化），会形成一套高效可靠的数据资产体系和数据服务能力（数据资产化和资产服务化）。这样当面对市场变化，需要构建新的前台应用的时候，数据中台能够迅速的提供数据服务能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据中台要求整个企业共用一个数据技术平台，共建数据体系，共享数据服务能力。数据中台的目标是实现企业经营的数据化，精细化，智能化，本质是建立一套可持续让企业数据用起来的机制。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n数据中台的建设</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; height: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/d5d14875108e4da4ae3dfd0f2080400a?from=pc\" IMG_WIDTH=\"727\" IMG_HEIGHT=\"438\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于数据中台的建设，实际上我们要看到两个方面的内容：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n单纯的数据技术平台的建设</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据内容和数据资产的建设</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我刚才说了单纯的数据技术平台还可以用于BI分析，技术平台能力本身就是相通的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于技术平台我们要考虑就是数据采集集成，数据存储，数据处理加工和计算，数据分析各个层面的技术工具和组件。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于数据内容的建设，实际上包括了四个方面的内容，书里面总结如下：</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n技术体系</SPAN>（包括大数据存储计算技术和数据中台工具技术组件）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据体系</SPAN>（围绕数据模型为核心，并围绕数据资产全生命周期展开）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务体系</SPAN>（通过数据中台的服务组件能力，将数据变为服务）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n运营体系</SPAN>（将数据服务作为可运营的商品一样，来构建一套运营服务和管理体系）</LI>\n</OL>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n数据中台的架构</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/1670d8b39d7949209cf1ff101b6e1bad?from=pc\" IMG_WIDTH=\"767\" IMG_HEIGHT=\"639\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于数据中台架构后面还要单独写文章详细描述，从书里面给出的架构图我们可以看到基本模式都是一样的，即最底层是数据基础设施和数据技术平台。再往上分别是数据汇集，数据开发，数据体系，数据资产管理，数据服务几个大模块的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n所以我们先看下整个数据中台架构里面大模块分法上的一些思路。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据汇聚和数据开发</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个分开为两个大模块是合理的，即数据汇聚仅仅只复制数据集成的事情，比如我们常说的数据采集，ETL方面的事情。而数据开发即是数据采集过来后还需要对数据进行加工处理，比如形成宽表或汇总表，基于数据分析算法进行数据汇聚计算形成新的数据结果等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据资产管理和数据体系</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先我们可以看到数据资产管理即我们常说的数据全生命周期管理，类似我们原来谈MDM主数据管理经常谈到的元数据管理，数据标准，数据质量管理，数据安全，数据创建变更全生命周期流程管理等都在该模块能够看到。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于数据体系是否理解为不同的数据应用域，书里面提到的数据体系包括了贴源数据，统一数仓，标签数据和应用数据。可以看到数据本身分层，数据也可以分数据域。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n从全生命周期如何看数据？</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果从数据全生命周期来看，实际上我们可以看到可以分为数据的入库过程，数据的存储和模型构建，数据的对外能力提供过程。对于数据的入库包括了数据汇聚，数据开发；对于数据的存储包括了数据模型和数据体系，对于数据对外能力提供包括了数据服务层构建。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而实际的数据全生命周期管理刚好应该是贯通前面几个阶段的一个完整管理和管控流程。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n上面这个图可以看做是书籍里面的一个配图，给出了数据中台的整体结构，在上面一篇文章里面我也谈到了整个数据中台包括了数据汇聚，数据研发，数据指标体系，数据资产管理和数据服务体系几大块的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在谈之前还是重新回顾下数据中台的定义，即：</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n数据中台是将数据转变为资产并服务于业务的机制。稍微再扩展下这句话就是实现跨越数据的汇聚和融合，并对数据进行加工处理形成有价值的数据资产，再将数据资产以服务化的方式开放出去满足业务需求。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在简单点来看，从整个数据的生命周期，数据中台包括三个方面的内容。</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据入库的过程（数据的采集，数据的汇聚）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据的存储和加工过程（数据的存储，加工和开发，数据模型，算法，过程调度）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据的开放过程（构建完整的数据资产和指标体系，并形成数据服务对外开放)</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n以上就是一个完整的数据中台内容。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n数据中台底层技术架构</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/e7a2f493c0ee42219c28f240f1111ce5?from=pc\" IMG_WIDTH=\"768\" IMG_HEIGHT=\"361\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当我们在谈数据中台的技术架构的时候，一个无法绕开的还是基于Hadoop的大数据平台和技术架构体系，如下为当前Hadoop\n2.0的一个标准技术架构图。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n先在网上摘录了一段比较Hadoop2.0和1.0的主要区别和改进点如下：</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\nHadoop2.0和1.0最大的区别点就在于增加了YARN集群资源管理系统这一层，YARN是一个资源管理系统，负责集群资源管理和调度，MapReduce则是运行在YARN上的离线处理框架。改进点主要还是对1.0架构中类似NameNode，JobTracker的单节点扩展能力进行提升。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n1、针对Hadoop1.0单NameNode制约HDFS的扩展性问题，提出HDFS\nFederation，它让多个NameNode分管不同的目录进而实现访问隔离和横向扩展，同时彻底解决了NameNode单点故障问题；</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n2、针对Hadoop1.0中的MapReduce在扩展性和多框架支持等方面的不足，它将JobTracker中的资源管理和作业控制分开，分别由ResourceManager（负责所有应用程序的资源分配）和ApplicationMaster（负责管理一个应用程序）实现，即引入了资源管理框架Yarn。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n3、Yarn作为Hadoop2.0中的资源管理系统，它是一个通用的资源管理模块，可为各类应用程序进行资源管理和调度，不仅限于MapReduce一种框架，也可以为其他框架使用，如Tez、Spark、Storm等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n以上区别参考：https://www.jianshu.com/p/23e2634ce1f9</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n为何重新提到Hadoop，可以看到在构建整个数据中台的时候，我们会用到<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">数据采集框架，数据存储框架（文件存储，结构化数据库，非结构化数据库，内存数据库），数据计算框架（批计算，流计算，实时即席查询计算），数据分析框架</SPAN>这四大类的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而实际上上面这四块的内容在Hadoop完整框架体系里面都包括，在搭建完整的大数据平台后，你可以基于实际的业务场景需求来选择使用不同的技术工具和组件来解决问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此如果单纯从技术层面来看，你会发现在构建数据中台的时候确实是需要一个技术平台，能够实现数据从采集集成，到存储，到加工处理，到能力开放的全生命周期管理能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于以上的思考，我们看到实际的构想完全可以是基于Hadoop的底层大数据框架，来构建一个覆盖数据全生命周期管控加治理的平台。这个平台除了Hadoop外还需要做一些外围其它开源工具的集成，基于数据使用场景和需求的定制开放，实现数据能力开放和数据运营。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即底层技术平台下沉，在上层构建一个面向数据全生命周期的管控治理平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据汇聚和存储</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先谈下数据汇聚和集成，实际上包括了多方面的内容，具体为传统的结构化数据库间的数据集成和交换，这个类似传统的ETL工具，但是在大数据场景下增加了结构化和非结构化数据之间的集成和对接。比如结构化数据之间汇聚到HDFS分布式存储等这种场景。当然在这个过程中结构化数据库间的传统ETL集成仍然存在，这个类似DataX这种工具是完全包含的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这个过程中我们看到有要给分支，就是数据库数据的实时采集和处理，类似数据库同步复制技术，在Mysql里面有类似BinLog日志的同步复制，对于Oracle等结构化数据库也有类似商用产品来完成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n除了这个外比较常见的就是日志的采集和处理，类似Flume工具来完成日志的采集和处理。对于基于日志的分析查询系统，当前主流又有ELK的开源整合解决方案。对于Elasticsearch除了本身强调的全文检索和查询能力外，本身也提供了对日志的分布式存储能力，对应的还有类似Solr的解决方案等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n还有一个重要的分支就是互联网数据采集和网页爬虫，比如常说的Nutch，现在各种开源的网页爬虫软件和工具集很多，特别是基于Python的网页爬虫更是发展相当迅速。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n离线数据交换和实时数据交换</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n离线数据交换是针对数据时效要求低，吞吐量大的场景，解决大规模数据的批量迁移问题。而对于这种数据集成实际上我们看当前的各种开源实现，主流的可扩展思路都是构建三类灵活配置的插件，即数据读取插件，数据写入插件，数据交换核心模块。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于实时数据交换主要是负责把数据库，日志，爬虫等数据实时接入到Kafka, Hive,\nOracle等存储中，便于后续实时计算或提供给业务查询分析使用。实时同步两个核心业务，数据订阅服务，数据消费服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据汇聚是数据中台建设的第一个环节，其主要目的是打破企业数据的物理孤岛，形成一个统一的数据中心，为后续数据资产的价值挖掘提供原始材料。即数据汇聚目标就是建立一个大的数据共享中心，同时为了方便后续弹性扩展，这个数据中心应该是一个分布式的ODS数据共享中心。数据集成和汇聚是后续数据开发，数据分析的前提。通过前面内容我们也可以看到数据集成需要考虑的两个关键内容，一个是数据本身的类型，一个是数据集成的实时还是非实时要求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据开发</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据开发涉及到的产品能力主要包括三个方面的内容，分别是离线开发，实时开发和算法开发。</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n离线开发：</SPAN>离线数据加工发布和运维，数据分析，在线查询，即席查询</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n实时开发：</SPAN>数据的实时接入和实时处理，简化数据流处理的加工过程</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n算法开发：</SPAN>类似回归，聚类，人工智能，机器学习等算法的开发和应用，挖掘数据价值</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据计算的四种类型</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n将计算能力根据应用场景抽象为四种类型，包括了批计算，流计算，在线查询和即席查询。对于批计算主要是MapReduce框架进行，对于流计算主要是类似通过Storm\n,Spark\nStreaming框架来实现等。而对于在线查询往往基于内存数据库，或者基于Elasticsearch，Solr来实现。对于即席查询采用类似MPP数据库，Impala等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于在线查询和即席查询对数据实时性要求最高，而对于批计算往往更好应对大数据量需求，数据在中间过程也可以落地而不是必须全部在内存里面完成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n实时开发</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n要看到在构建数据中台的时候，实时开发是一个重点。随着数据应用场景的不断丰富，企业对于数据价值反馈到业务中的时效性要求也越来越高，很早就有人提出一个概念即数据的价值在于数据的在线化。对于实时开发和计算具备如下三个关键特点。</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n实时且无边界的数据流.(数据流按时间发生顺序被实时的消费和订阅）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n持续且高效的运算</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n流式且实时的数据集成</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于Storm，Spark Streaming，Apache\nFlink构建的一站式，高性能实时大数据处理能力，广泛适用于实时ETL，实时报表，监控预警，在线系统等多种场景。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n数据中台的数据体系建设</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/f02c82b35b8b48818cd5c1aaf0c2ff2d?from=pc\" IMG_WIDTH=\"754\" IMG_HEIGHT=\"453\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在谈数据中台的时候，我们一般会谈两个方面的关键内容，一个是数据中台的技术架构，你可以看到前面谈到的数据汇聚和数据开发更多是偏围绕Hadoop体系的中台技术架构；第二个关键内容就是数据本身的内容架构，数据在存储的时候整个数据内容，数据模型，数据标准究竟应该是如何的？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此数据中台数据体系是在全域原始数据的基础上，进行标准定义和分层建模，数据体系建设最终呈现的结果是一套完整，规范，准确的数据体系，可以方便支持数据应用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n中台的数据体系建设应该具备如下特征</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n覆盖全域数据（覆盖所有的业务过程域）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n结构层次清晰（数据应该是分层的）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据准确一致(命名，粒度，计算口径，模型等）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n性能提升和降低成本</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在数据中台的数据体系架构里面，书里面将整个数据体系从下到上分为了四层。</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n贴源数据ODS层</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n统一数据仓库DW层</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n标签数据TDM层</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n应用数据ADS层</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我们对这个分层再做一下理解和解释。首先你可以看到从下到上是即是从系统-&#62;业务域-》跨越的一个层层聚合和整合的一个过程；其次就是在整个数据聚合和整合的过程中，数据来源的业务域的边界本身会越来越模糊，同时数据由于不断的汇聚和聚合，数据本身粒度会越来越粗。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个粗粒度如何理解？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n比如我们对客户做分析，最终到顶层你可能只得到一个长期优质VIP客户的结论。但是支撑这个结论，我们在底层采集了大量的数据，经过维度分析，标签计算分析做了大量的工作才完成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在我们传统的BI和数据仓库设计里面，我们经常说的只有三个内容，即ODS库，DW库，维度建模的数据模型，而<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">在整个数据中台的数据体系里面增加了标签数据层和应用数据层</SPAN>，也可以更好的看到这两个层次的增加更多的都是为了业务应用提供服务的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于标签数据层，我们再来看下解释，即是面向对象建模，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">对跨业务板块，跨数据域的特定对象数据进行整合</SPAN>，通过ID-Mapping把各个业务板块，各个业务过程中的同一对象数据的数据打通，形成对象的全域标签体系。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n举个例子来说你要建立客户的标签体系，客户的标签会来源于客户的静态属性信息，同时更多的是来源于动态的行为数据信息，而这些行为包括了注册登录，商品挑选，实际采购发生，支付，商品评价等诸多的业务域和业务模块，要建立完整的客户标签，那么这些业务域数据必须打通并建立关联映射。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n对贴源数据层理解</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于书里面谈到的贴源数据层你直接理解为传统的ODS库本身是没有问题的。贴源数据层重点就是将企业已有各个业务系统中的数据抽取和集成到一起，形成全量的业务数据。面对业务中台架构模式下，就是需要对所有业务中台对应的业务数据库进行数据采集和集成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意当前主流的方式已经从ETL变化为ELT，即只负责最简单的数据抽取和装载，没有复杂的数据映射和转换动作，当我们看类似DataX这种工具的时候你也可以看到这个特点，变得更加轻量同时性能也更高。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果要说贴源数据层和传统ODS库的区别，那么贴源数据层仅仅做数据的汇聚和整合，并不具备传统意义上的ODS的如下功能，即数据交换，实时性，报表等功能。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n对标签数据层的理解</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对应数据仓库层这篇文章不详细展开，只谈下标签数据层。首先我们能够看到就是标签数据层是围绕一个关键对象进行的分析和建模，而且这个动作是完全跨越进行的，数据粒度更粗更抽象，但是能够发挥的数据价值往往却越大。因为标签层真正整合了跨域的数据，包括静态数据和动态数据，同时在数据之间建立了关联，同时通过各种算法对数据进一步加工和聚合。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n标签数据层是面向对象建模，把一个对象各种标识打通归一，把跨业务板块数据域的对象数据在同一个粒度基础上，组织起来打到对象上。标签数据层建设，一方面让数据变得可阅读与理解方便业务使用，另一方面通过标签类目体系将标签组织排布，以一种适用性更好的组织方式来匹配未来变化的业务场景需求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于标签对象，实际上我们看到主要分为三类，即人，物，关系。对于关系本身有可能是人和人，人和物，物和物都有可能。当然也可以从静态和动态层面来理解，有静态属性类标签，有动态行为类标签，比如采购，支付等就是动态行为类标签。而实际上你可以看到很多关系信息的产生往往也来源于动态行为标签。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于标签本身的分类，又可以分为基础属性类标签，统计类标签和用户画像。还有一种说法感觉更好，就是基础属性类标签，统计类标签，算法类标签。我们拿一个客户相关的标签来举例。</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n基础属性类：</SPAN>年龄段，区域，性别，婚姻状况，年收入段</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n统计类标签：</SPAN>活跃度，客单价，最常购买商品类别，复购率</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n算法类标签：</SPAN>消费偏好，消费价值，用户画像类特征(类似潮流达人，宅家一族等）</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从这个也可以看到，统计类标签往往都来源于动态的关系类数据的分析，但是这些关系类数据分析最终又会关联到具体商品的类目属性上面。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n标签和用户画像</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/6625a5c80d024cd0b7627c7ace1ab5b0?from=pc\" IMG_WIDTH=\"718\" IMG_HEIGHT=\"486\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当从标签谈到用户画像的时候，原来有一个概念我一直没太理解清楚，今天重新进行了下理解。首先我们看下用户画像，实际上你可以看到两种场景的用户画像。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n场景一：对用户张三进行用户画像 （结果可能是潮流一族，爱尝鲜，数码玩家等）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n场景二：对晚上购买啤酒类商品的用户群画像 （结果可能是单身男，IT，加班族等）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n人物群体 - 人 - 关系 - 物 - 物群体</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在前面讲的三个关键对象基础上，我们做下扩展就变成了五大对象，即增加了人物群体和物品群体两个群体对象。有了群体对象我们就有了基于标签设计进行数据聚合的基础。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我前面为啥聚两个场景，实际上你可以看到刚好是聚合的两个端，当我们对单个特定用户画像的时候你可以看到往往对对商品群体进行聚合分析和处理，是在物品这端。当对物品的购买意向进行用户群画像的时候可以看到是在用户群体这段进行聚合，最终得到一个抽象的结果。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那么在场景一我们能否给出用户维度的画像，比如得出张三是单身的画像。而这个就是我们说的大数据里面的关联类分析，比如网上购买啤酒行为和用户的单身属性之间往往具有强关联，当具备这种强关联的时候，我们可以给张三打一个单身的标签。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n数据资产管理和数据服务体系建设</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; height: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/17599624bc63499c8a20ca796356f79b?from=pc\" IMG_WIDTH=\"728\" IMG_HEIGHT=\"400\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n企业经营沉淀的数据是企业的核心资产，资产一定有价值体现，即数据经过应用会产生价值，这个价值一方面是直接支撑业务运作，一方面是支撑管理决策。因此在看数据资产的关键特征的时候也看到，其一是数据是企业用拥有和控制，其二是数据能够带来未来经济利益。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据资产管理功能面临的挑战</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n缺乏统一的数据视图</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据基础薄弱</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据应用不足</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据价值难以估算</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n缺乏安全的数据环境</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据管理浮于表面</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于这些问题而提出了数据资产的管理目标主要包括了四个方面，即可见，可懂，可用和可运营。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据资产在整个数据中台里面承上启下，即数据先通过数据汇聚集成，数据开发后形成数据资产，然后再将数据资产以服务的方式开放出去为数据应用服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从这本书的逻辑框架结构出发，当我们在谈数据资产管理的时候，一定会考虑和上一个章节数据指标体系之间的关系，一开始总感觉两者是重复的，但是详细看了内容后基本梳理清楚两者的关系。即数据资产管理你可以更多理解为动态的管理过程，即数据管控和治理过程，但是对于数据资产静态结构呈现是如何的，分层是如何的？这个问题则是在数据指标体系里面解释的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即数据资产管理更多是数据动态管控治理维度，而数据指标体系是静态结构维度。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据治理的理论体系</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n国际数据管理协会DAMA从数据治理生命周期角度对数据资产的管理行使权和控制的活动(规则，监控和执行)进行了重点研究。定义了数据治理，数据架构管理，数据开发，数据操作管理，数据安全，参考数据和主数据管理，数据仓库和商务智能管理，文档和内容管理，元数据管理，数据质量管理这十个领域。以及目标和原则，活动，主要交付物，角色和职责，技术，实践和方法，组织和文化等7个环境因素。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nCMMI提到的DMM模型是由五大核心过程域和一套支撑流程组成。五大核心过程域包括了数据管理战略，数据治理，平台和架构，数据运营，数据质量。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在我国也给出了DCMM的数据管理成熟度模型。DCMM充分结合了大数据特点和国内数据治理现状，形成了数据战略，数据治理，数据架构，数据标准，数据质量，数据安全，数据应用，数据生命周期8个核心领域和28个过程域，重点关注数据的管理过程和方法。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据资产管理和数据治理的关系</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据治理是对数据资产管理行使权力和控制活动的集合。传统的数据治理内容通常包括了数据标准管理，元数据管理，数据质量管理，数据安全管理，数据生命周期管理。而数据资产管理在传统的数据治理的基础上增加了数据价值管理，数据共享管理等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到，数据资产管理实际核心就是数据全生命周期管理，你需要管理数据如何形成资产的过程，同时又需要管理数据如何形成服务共享支撑应用的过程。同时在这个过程中还存在大量的横切，即安全，质量，标准等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据资产管理你可以看到实际并没有太去强调数据集成后的，数据深层次开发和分析建模，更多的是在强调形成统一数据视图服务能力并为应用提供服务。而在数据资产管理我们看到的数据标准体系，元数据管理，数据质量管理等内容你会发现和我们常说的MDM主数据管理是完全相同的。而主数据管理核心目标仍然是形成共享的数据视图，并共享开放给业务应用使用，是为业务协同服务而不是为管理决策服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这不得不又重新让我们思考数据资产管理和MDM主数据管理是什么关系？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这里我们假设一个例子来理解下。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n还是以电商平台来举例，存在有用户中心，订单中心，配速中心，支付中心等多个微服务。那么这个时候对于用户信息的完整视图可能存在两种情况。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">1.\n全部在用户中心完成维护并共享</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.\n基本信息在用户中心，地址信息在配送中心，银行账号信息在支付中心</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于情况一我们看到用户中心本身就需要自己完成主数据管理需要的一些关键职能，包括元数据管理，数据质量管理，数据服务能力开放等。但是要主要用户中心仍然是业务中台的一部分内容。而对于情况二可以看到，要提供完整数据视图必须进行数据汇聚，这个就到了数据中台，至少要在ODS层完成这个事情，这时候也不需要太多复杂的数仓建模，直接开放ODS库能力为服务即可。但是我们看到你仍然需要进行数据安全，数据质量管理，而这些管理就需要在数据中台具备这样的能力。同时数据中台也具备了MDM应该具备的部分能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于以上思考可以看到</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n当大部分基础数据的统一视图能力本身就能够在业务中台单个微服务提供的时候，主数据管理职能基本都可以在业务中台就完成，反之则需要在数据中台完成。</SPAN>建议是在数据中台的数据资产体系的贴源ODS层增加一个统一数据视图，即这部分往往是对多个贴源ODS表的进一步整合，形成完整的统一数据视图和数据服务能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意，在数据标准里面提到了参考数据，在我们原来谈的时候经常会将参考数据作为主数据的一部分，而现在将参考数据从主数据里面拿出。参考数据是用于将其他数据进行分类或目录整编的数据，可以简单的理解为数据字典。而对于主数据管理也再列下我们经常谈到的核心管理内容。</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n主数据相关标准和规范设计</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n主数据建模</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n主数据梳理和集成</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n主数据质量管理</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n建立灵活的主数据共享服务</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n建立主数据维护流程（创建，变更，废弃等）</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实际上大的主数据管理概念是包括了元数据管理，数据质量管理的，书里面单独分开描述也可以。而对于书里面的8.7.9提到的生命周期管理内容，个人感觉是很狭隘的一个理解，即只是将数据分为不可恢复，可恢复来谈了数据存储的生命周期。实际上数据生命周期管理是一个对数据完整的从产生，集成，变更，废弃，删除完整过程的管理，里面既包括了自动化流程，也包括了人工流程。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据服务体系的建设</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n要注意一点，对于数据中台和数据仓库的区别，其中有一个关键点，就是数据中台会将数据能力以数据服务的方式开放出去，直接满足业务应用的需求。而不仅仅是用于上层的数据报表和数据分析决策。数据服务体系本身就是将数据变为一种服务能力，通过数据服务让数据参与到业务之中，激活整个数据中台，这也是数据中台的价值所在。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据服务是对数据进行计算逻辑的封装（过滤查询，多维分析和算法推理等计算逻辑），生成API服务，上层数据应用可对接数据服务API，让数据快速应用到业务场景之中。数据服务是数据中台能力的出口，是支持数据应用的重要支撑。数据服务本身可以分为三类</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n基础数据服务</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n标签画像服务</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n算法模型服务</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到对于标签画像和算法模型服务，都需要经过内部大量的算法计算后给出，实际已经不是获取原始的基础数据，而是获取通过原始基础数据加工和计算的结果，是更加粗粒度的数据。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我们再看下总体架构图里面的数据服务体系这层的内容，实际上类似数据服务总线，数据服务网关，数据服务的能力开放平台。即核心还是实现对数据服务的全生命周期管理，包括输入的注册接入，数据的订购消费，数据安全，数据流控等各方面的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据服务的核心价值主要包括四点</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n确保数据在业务层的全域流通</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n降低数据接口的重复建设</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n保障数据获取的及时性和稳定高效</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n使能数据能力扩展</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其中对于确保数据在业务层全域流通是一个核心价值所在。数据服务可以对数据中台的全量数据进行封装透出，让中台的数据支撑数据业务，加速数据业务化的流程；数据业务产生的反馈数据可以回流到数据中台中，不断优化现有的数据服务，让数据在业务中持续流动。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据服务本身的实时性和不落地性</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在谈ESB服务总线或API网关的时候，实际上我们始终面临一个问题就是对于大量的类似对数据库表的查询类服务是否要接入到网关来统一管理，其典型特点就是不符合服务的粗粒度特征，同时数据量大，并发量大，每次打的数据获取量本身也对总线造成巨大的压力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实际上我们重新来回顾这个问题可以看到，数据服务本身的开放本身应该是一种实时查询类服务，而不是为了给你查询到数据落地到本地的服务，实时用实时查，那么数据查询类服务完全可以按照应用逻辑层API接口的设计思路进行，即数据服务本身也可以做成分页服务模式解决大数据量的问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n只要数据服务不用于数据集成和同步，那么网关就没有大的性能压力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果将数据服务获取的数据又落地到业务中台的各个微服务模块，那么可以看到这就是一种边界和职责不清的表现，即业务中台一定不关注数据汇聚的问题，对于数据汇聚，包括汇聚后能力的提供只能在数据中台完成。即使你可能会发现通过调用远程的数据服务API接口来是实现功能的时候造成的开发复杂度增加和分布式事务管理难度，也得通过其他方式去解决。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即满足数据一致性和时效性-》带了分布式事务和强耦合的问题-》通过业务应用层去解决问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n智能应用是数据应用的核心组成部分，是从数据洞察到业务创新的重要支撑。智能应用结合数据建模和人工智能等多种技术，从数据中提取，挖掘，获取有揭示性和可操作性的信息。对于我们常见的人脸识别，图像比对，智能驾驶，语义分析等都可以纳入到智能应用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当然我们也可以看到，智能应用的API服务接口看起来像是一个业务能力接口的，但是我们要理解实际是数据服务API能力接口，其原因就是在需要一个强大的数据中台或大数据平台，再加上算法模型才能够提供得出我们需要的这些API能力。</P>\n<br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Thu, 03 Sep 2020 23:44:45 +0000","feedId":4798,"bgimg":"http://s13.sinaimg.cn/mw690/001l8XD7zy7Ga11IHmc1c&690","linkMd5":"2cefd40cff375855dea828eefa1194b0","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn52@2020_5/2020/09/05/07-05-12-382_1f382897d1f41ec2.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s13.sinaimg.cn/mw690/001l8XD7zy7Ga11IHmc1c&690":"https://cdn.jsdelivr.net/gh/myreaderx/cdn52@2020_5/2020/09/05/07-05-12-382_1f382897d1f41ec2.webp","https://p3-tt.byteimg.com/origin/pgc-image/2026b1fb9e994342a9bab7ed68cd7702?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn72@2020_5/2020/09/05/07-05-13-676_af6280131296234c.webp","https://p1-tt.byteimg.com/origin/pgc-image/5347ba3e58524b2ca3ad694ecb518af1?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn75@2020_3/2020/09/05/07-05-13-590_01f9baf8fa011f4b.webp","https://p6-tt.byteimg.com/origin/pgc-image/d5d14875108e4da4ae3dfd0f2080400a?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn32@2020_4/2020/09/05/07-05-19-145_7550edda72c34652.webp","https://p6-tt.byteimg.com/origin/pgc-image/1670d8b39d7949209cf1ff101b6e1bad?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn48@2020_4/2020/09/05/07-05-15-589_fe12f16024b54ce7.webp","https://p3-tt.byteimg.com/origin/pgc-image/e7a2f493c0ee42219c28f240f1111ce5?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn28@2020_3/2020/09/05/07-05-13-598_a4f0df0549cf9baa.webp","https://p3-tt.byteimg.com/origin/pgc-image/f02c82b35b8b48818cd5c1aaf0c2ff2d?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn24@2020_1/2020/09/05/07-05-14-923_52fc504cc1721b1c.webp","https://p6-tt.byteimg.com/origin/pgc-image/6625a5c80d024cd0b7627c7ace1ab5b0?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn68@2020_3/2020/09/05/07-05-16-621_23bbe867a5c7ace8.webp","https://p3-tt.byteimg.com/origin/pgc-image/17599624bc63499c8a20ca796356f79b?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx/cdn64@2020_1/2020/09/05/07-05-14-934_952279c3da4c82d0.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn8@2020_6/2020/09/05/07-05-15-434_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1599289509750},{"createdTime":"2020-09-05 15:05:09","updatedTime":"2020-09-05 15:05:09","title":"业务系统组件化开发概述和技术架构设计(200902)","link":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7G7vwB6bi8c\" TARGET=\"_blank\"><img SRC=\"http://s13.sinaimg.cn/mw690/001l8XD7zy7G7vwB6bi8c&#38;690\" NAME=\"image_operate_35291599040111953\" /></A>\n<div><br /></DIV>\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n今天介绍下组件化开发方面的内容，在前面我讲解微服务的时候就已经谈到，实际上微服务本身就是传统的业务系统组件化开发的一个升级。懂得基础的组件化开发和技术架构设计是也是过渡到当前主流的微服务架构思想的基础。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); margin-top: 28px !important;\">\n组件化开发概述</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n在这里先介绍和说明下基于组件化开发带来的优势。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n首先，原有到系统级的粗粒度控制细化到了组件级别的细粒度控制，一个复杂系统的构建就是组件最终集成后的一个结果。每个组件都自己独立的版本，组件可以独立编译、独立打包和部署；</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n其次，产品组件化后可以真正实现完整意义上的按组件进行产品配置和销售，用户可以选择购买哪些组件，组件之间可以灵活的进行组装。另外，包括诸如配置管理、开发、测试、打包、发布完全控制到组件层面，会带来其它很多好处，如果一个组件进行小版本升级，提供给外部的接口没有任何变动，其它组件完全可以不用做任何测试。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n组件化开发思路在SOA之前已经有成熟的组件化开发方法，只是在SOA出现后，SOA咨询、需求分析、设计实现方法论进一步融入到组件化开发中。各种底层基础技术框架的发展和完善，为组件化开发提供了根据完整的支持，推动组件化开发的发展，特别是在B/S架构下的组件化开发。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n回到软件生命周期，我们再来阐述下组件化开发的核心思路和逻辑。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务建模和业务组件阶段</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/db670ce7ff054fc08058a1e34695b8a5?from=pc\" IMG_WIDTH=\"775\" IMG_HEIGHT=\"477\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n流程驱动IT以及SOA思想的进一步融合，再次改变原有的组件开发重点关注技术组件层面的问题。业务建模阶段重点包括了业务架构和数据架构，其导入点仍然是端到端流程分析为主线导入。业务架构分析重点就是形成业务组件，也可以叫业务模块。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n在这里重点还是业务组件的形成，要知道业务组件来源于流程分析和流程分解。业务组件本身就是高度内聚的多个业务功能的一个集合，业务组件之间本身就是松耦合，业务组件通过交互和集成可以完成一个更大的端到端流程。业务组件的识别仍然回归传统的流程分析加面向结构下面的CRUD矩阵分析等方法来分析高内聚性。矩阵分析包括了业务功能和业务数据之间的CRUD关系，也包括了业务功能和业务功能之间本身的关联和依赖性分析。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n对于粗粒度的数据建模我们把它划归到业务建模阶段，该阶段的数据建模偏概念模型，后续在设计阶段再转化到物理模型和数据实体组件。同时该阶段的数据建模需要梳理出业务和流程中核心的基础主数据和核心业务单据，分析业务单据关联映射关系，协助前面谈到的CRUD矩阵分析。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n在这个阶段最终需要输出的涉及到组件层面的产出物包括软件系统的业务组件，每个业务组件包含的业务功能或叫业务用例。整个业务系统中的业务实体，业务实体关系图等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n软件需求阶段</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/55957de9094446b1bc9ede8e1a665b6a?from=pc\" IMG_WIDTH=\"878\" IMG_HEIGHT=\"549\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n在这个阶段不做详细的说明，但是我们仍然需要理顺整个关系，即首先形成业务组件，业务组件是大的业务模块。业务组件下面有业务用例，这里的业务用例通过进一步的需求分析和开发，将业务用例转换为系统用例，然后对每一个系统用例进行详细的描述。业务流程-》业务组件-》系统用例是一个从上向下，逐层展开的一个分析过程。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n在传统的用例建模中，我们没太关注用例之间的交互，而将其延后到设计和实现阶段去完成。现在来看该工作需要提前，即从全系统来看，首先完成对业务组件之间交互的描述，对交互点和交互场景进行详细说明。在细化进入到一个业务组件内部后，需要对系统用例之间的相互调用进行描述。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n对于数据层面则在软件需求阶段进一步细化，从概念模型阶段过渡到逻辑模型阶段，进一步细化业务功能为系统操作，分析系统操作和数据对象之间的关系。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n系统建模和技术组件阶段</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/e617fe22c7eb48ac8472b1fc652b7655?from=pc\" IMG_WIDTH=\"863\" IMG_HEIGHT=\"460\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n这个阶段即传统的架构设计阶段，我们仍然是组件化开发的一个重点，这里的系统建模和架构设计重点都变化为功能性架构。但是前面业务建模阶段已经有前期的积累。如果是业务建模阶段是系统分析的话，那么系统建模阶段是系统设计。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n系统建模阶段第一个重点是要实现从业务组件到技术组件的细化。在前述对SOA的分析中我们提到业务组件、服务组件和技术组件。在这里我们只谈业务组件和技术组件，并弱化服务组件的概念。首先，进入了架构分层后，一个业务组件可能需要拆分为多个技术组件，包括数据层组件、逻辑层组件、UI层组件、数据实体组件等。其次，在该阶段我们会引入很多的纯技术层面的组件，这些技术层面组件和业务完全无关而和平台非功能性架构有关，如安全、异常、日志等相关组件等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务组件本身符合高内聚性，转换到技术组件后仍然需要符合高内聚性，技术组件之间其一不允许出现相互交叉调用；其二整个调用关系应该是从上层往下层调用。纵向看是UI组件-&#62;逻辑层组件-&#62;数据层组件调用关系；而横向看则是同层之间的各个技术组件之间存在相互调用关系。按照组件最大化复用原则，优先考虑UI组件复用，其次考虑逻辑层复用，最后才考虑数据层复用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n根据前面分析可以很明显的看到在系统建模阶段关于组件分析和设计的几个重点内容：其一是业务组件转换为技术组件，并按层分解；其二是根据业务交互，用例交互分析组件之间的调用关系。这些调用关系就是组件间的接口，通过业务和流程分析的方法来找到接口，转到相关组件的接口设计上，组件之间的调用只能通过接口，组件内部完全黑盒；其三是数据建模和设计，将前面数据建模分析内容转换为数据实体组件，数据实体组件只含数据实体，实现控制类和实体类的分离。这样数据实体类容易变化为下层可以被多个逻辑层技术组件引用的组件。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n这个阶段在传统的架构设计文档上，可以看到需要输出的内容包括了业务组件-&#62;技术组件的对应清单，组件调用关系和依赖关系图，组件接口设计文档和接口清单，可复用组件抽取和分析，组件包视图和部署视图，整个应用系统的组件化后的产品结构视图和配置项清单等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n实现阶段</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n实现阶段我们关注的问题是一个技术平台或框架支持组件化开发、测试和部署。传统的B/S架构开发我们比较难以解决的问题是UI层内容的独立打包和部署，而当前在新的微服务架构和前后端分离开发框架下，已经可以完全做到前端和后端单独打包和部署。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n可以单独对组件进行自动化的单元测试，当某个组件有变化的时候，可以单独对变化的组件进行版本升级，单独对变化组件进行部署。整个产品的版本由应用系统管理到里面的每个组件，这些都将是发生变化的点。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); margin-top: 28px !important;\">\n业务架构设计</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务架构设计是定义和识别业务组件的基础。对于业务架构的设计需要遵循企业架构方法论中业务流程分析思路，借鉴IBM的CBM组件化的业务模型建模思路。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务架构是一个纯粹意义上的业务概念，只关心具体的业务域和业务功能。业务架构可以看做由多个高内聚、低耦合的业务组件构成，因此在业务架构完成后基本就确定了业务组件的划分方法和粒度等问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务组件的划分需要和业务架构图对应，可以将业务架构图中的每个业务模块识别和定义为一个业务组件，也可以根据高内聚、低耦合准则将多个业务模块合并为一个业务组件。以采购管理业务域为例，经过前期的流程分析和业务交互矩阵分析，得出如下的业务架构图：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n进一步基于业务高内聚的思想，可以将采购管理业务划分为招投标管理、采购管理、基础数据管理、采购绩效分析等多个业务组件并指导后续的组件设计和开发。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n比如我们基于价值链已经看到供应链跨越流程，那么我们可以对供应链流程进行梳理。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/9f7d7126946c45c7b1f5422e4a616971?from=pc\" IMG_WIDTH=\"841\" IMG_HEIGHT=\"586\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n梳理完后你会发现，输出的职能带流程图中的大阶段刚好就是你业务架构里面的业务域或业务单元。或者流程图中的业务活动刚好就是你业务架构分解到最底层的业务功能模块。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n即当我们流程分析到最底层后，我们就可以抽象输出一个最底层的业务架构图。比如对应供应链和采购管理，我们可以输出到最底层的业务架构图或业务组件图。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/ecd81c4c8f634ed38f763d3baeb163bc?from=pc\" IMG_WIDTH=\"978\" IMG_HEIGHT=\"519\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); margin-top: 28px !important;\">\n逻辑架构设计</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/b72d0fbe1b9f42e4ac7ddbcea50aa3ac?from=pc\" IMG_WIDTH=\"773\" IMG_HEIGHT=\"472\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n对于应用层的逻辑架构仍然参考平台+服务+应用分层的思路，对于新平台架构下应用必须结合平台层和服务能力才能组装成为一个传统的完整应用。对于应用层而言，其中仍然分为数据层、业务逻辑层和展现层的三层架构模式：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据层</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n数据层主要包括了对于主数据等共享数据的访问和读取，也包括了对业务组件模块自己私有数据的CRUD操作。数据层可以直接调用DaaS服务层能力操作底层数据库，也可以直接调用封装后的领域数据服务能力查询和访问数据。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务逻辑层</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务逻辑层和传统业务逻辑层最大的区别是体现了SOA服务化的思想。即对于业务流程和功能的业务实现是通过平台层提供的技术服务和业务服务能力进行组合和组装实现的。这既可以通过传统的代码开发和服务调用来实现，也可以通过类似BPEL设计和建模工具等可视化的进行灵活配置和实现。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n前端展现层</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n展现层主要是各种前端和界面实现技术，包括了JSP，HTML和现在主流的VUE,\nReact框架等。展现层通过调用逻辑层的服务能力进行数据的存取和业务规则的实现，同时也包括了界面集成技术实现多个业务组件的界面集成。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); margin-top: 28px !important;\">\n技术架构设计</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/379398d6b1ec48119aa4695cdea28b3a?from=pc\" IMG_WIDTH=\"706\" IMG_HEIGHT=\"518\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n对于应用技术架构设计，主要还是参考传统的分层架构模式，结合SOA和组件化思想进行调整，其中重点是业务逻辑层和Web层两方面的内容的细化：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务逻辑层</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务逻辑层本质是提供业务服务能力的服务组件层，其中包括了数据访问层，内部的技术组件，内部的服务接入软总线，外部的服务代理实现服务接入和服务发布。业务逻辑层最终的业务能力将以内部软总线的方式提供给Web层使用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nWeb容器层和界面展现</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n该层的重点是实现标准的MVC模式。对于来自前端界面应用的请求信息先经过控制器处理后转给模型处理再进行视图层面输出，以实现界面显示和数据处理的分离。如通过Java的Struts框架来实现标准的MVC模式等。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); margin-top: 28px !important;\">\n集成架构设计</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/22a6e32ba7734ff8a00bb312c96272e5?from=pc\" IMG_WIDTH=\"772\" IMG_HEIGHT=\"422\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务组件以 Web 服务的方式提供接口，通过企业服务总线连接。业务组件内部为了实现高可复用性和高效性，采用基于 OSGi\n内部软总线标准进行构建模块，实现内部模块之间的松耦合。即在业务组件内部基于 OSGi\n标准进行模块化设计，将业务组件进一步分解为松耦合的模块（Bundle），使得业务组件本身更加灵活。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n基于 OSGi\n标准，业务组件内部的模块通过一个具有动态加载类功能的微内核连接，统一管理各个模块。为了便于管理，将不同模块之间的类接口采用服务注册的方式进行管理，具有类动态加载功能的微内核和类接口管理组成类总线（JCB）的基本功能；为了更好的实现重用，有些模块是共用的，比如数据访问模块、日志管理模块等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务软总线</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n实现一个业务组件内部的服务注册、调用和服务管理，一般采用比较轻量的如OSGi标准来实现。软总线机制可以保证业务组件内部的进一步松耦合设计。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 1em; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify;\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n注：在当前微服务架构下，我们看到实际上组件之间的接口集成，已经不再需要类似OSGI这种内部软总线，而是直接采用去中心化的服务注册中心来完成集成工作。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务组件和技术组件</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n服务组件是业务组件中唯一和外部进行交互的接口组件，包括了服务消费和服务调用均在服务组件完成。技术组件为服务组件的具体实现，内部功能的业务规则实现等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务代理</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n服务代理包括了服务消费代理和服务发布代理。业务组件本身要消费外部的服务，包括技术服务、流程服务和其它业务组件提供的业务服务，这些通过服务消费代理来完成。同时业务组件本身也需要向外部其它业务组件提供可复用的业务服务能力，因此需要将内部的服务接口进一步通过服务发布代理，发布为外部可访问的业务服务并注册到外部ESB服务总线上。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); margin-top: 28px !important;\">\n组件间整体框架集成</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/57700ec5bbef4b56ac5fb39b2822e4c5?from=pc\" IMG_WIDTH=\"776\" IMG_HEIGHT=\"487\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务组件本身就是一个能够提供独立业务价值能力的小应用系统。组件的集成包括了组件的纵向集成和横向集成。组件的纵向集成即和PaaS平台技术服务能力的集成，通过集成后形成一个完整的应用。横向集成则是流程驱动的业务组件之间通过业务服务的横向协同和集成，通过横向集成加上和外层应用框架和门户的集成后，多个业务组件将构成传统的完整业务系统。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n应用框架集成</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/5a394bd8ddb24a168d655b1c3275a47e?from=pc\" IMG_WIDTH=\"776\" IMG_HEIGHT=\"462\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_56081599040112919\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n在企业私有云PaaS平台的建设过程中，虽然基于平台+应用和SOA组件化架构思想真正实现了高复用和对业务的灵活应变能力，但是一个传统完整的业务系统已经被分解到了平台，服务和应用多个层面的技术组件，业务组件和服务中。因此这些分散的组件如何最终集成和还原为一个传统意义上完整的业务系统将成为应用集成必须考虑的重点内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n结合实践经验，最好方式是通过门户+外层应用框架来实现总体的集成，具体参考：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n以上图为例来看一个完整的业务系统。除了白色部分外，其余的组成部分都应该是有平台层统一规划建设和提供。应用外层框架和组件动态装载是重新还原一个传统意义上的业务系统的集成。应用外层框架首先是需要和门户进行集成，实现基本的统一认证和单点登录；其次是读取系统管理的基本参数和配置信息，实现外层界面和菜单资源等的装载和初始化；最后是根据应用配置文件灵活的对PaaS平台层的技术组件（系统管理，流程引擎），应用层的业务组件进行动态装载。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n应用外层UI界面框架需要基于可重用，可配置的思想独立开发，该框架是一个包括了菜单描述文件，页面描述文件，工具栏描述文件，页面布局描述文件组成一个基本的页面框架，具体说明如下。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/dea352ead6184d6fbf3b6a15f73fa1eb?from=pc\" IMG_WIDTH=\"774\" IMG_HEIGHT=\"395\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\" NAME=\"image_operate_73421599040169539\" /></DIV>\n<div><br /></DIV>\n<br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Wed, 02 Sep 2020 09:46:57 +0000","feedId":4798,"bgimg":"http://s13.sinaimg.cn/mw690/001l8XD7zy7G7vwB6bi8c&690","linkMd5":"3b7d142d5e96c3a26cb01ce30cb9df2c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn44@2020_1/2020/09/05/07-05-11-972_4b23fe6a2f984860.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s13.sinaimg.cn/mw690/001l8XD7zy7G7vwB6bi8c&690":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn44@2020_1/2020/09/05/07-05-11-972_4b23fe6a2f984860.webp","https://p6-tt.byteimg.com/origin/pgc-image/db670ce7ff054fc08058a1e34695b8a5?from=pc":null,"https://p6-tt.byteimg.com/origin/pgc-image/55957de9094446b1bc9ede8e1a665b6a?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn71@2020_6/2020/09/05/07-05-16-640_e1dfe6a7d1644a66.webp","https://p1-tt.byteimg.com/origin/pgc-image/e617fe22c7eb48ac8472b1fc652b7655?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn56@2020_2/2020/09/05/07-05-13-607_5372be4b0e4ac9cf.webp","https://p1-tt.byteimg.com/origin/pgc-image/9f7d7126946c45c7b1f5422e4a616971?from=pc":null,"https://p3-tt.byteimg.com/origin/pgc-image/ecd81c4c8f634ed38f763d3baeb163bc?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn10@2020_1/2020/09/05/07-05-15-335_d5ef342edcabfe22.webp","https://p6-tt.byteimg.com/origin/pgc-image/b72d0fbe1b9f42e4ac7ddbcea50aa3ac?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn12@2020_6/2020/09/05/07-05-24-229_6c5b5abd547cdd81.webp","https://p6-tt.byteimg.com/origin/pgc-image/379398d6b1ec48119aa4695cdea28b3a?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn15@2020_2/2020/09/05/07-05-46-488_4cc3e3b8f4e7affd.webp","https://p6-tt.byteimg.com/origin/pgc-image/22a6e32ba7734ff8a00bb312c96272e5?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn51@2020_4/2020/09/05/07-05-17-062_0d85a82aee78c330.webp","https://p1-tt.byteimg.com/origin/pgc-image/57700ec5bbef4b56ac5fb39b2822e4c5?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn36@2020_3/2020/09/05/07-05-13-443_9c750d36f56c4b5a.webp","https://p6-tt.byteimg.com/origin/pgc-image/5a394bd8ddb24a168d655b1c3275a47e?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn67@2020_5/2020/09/05/07-05-31-595_05ddd80ba8af9614.webp","https://p3-tt.byteimg.com/origin/pgc-image/dea352ead6184d6fbf3b6a15f73fa1eb?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn7@2020_4/2020/09/05/07-05-13-699_b22434a36c015e66.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn8@2020_6/2020/09/05/07-05-15-434_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1599289509732},{"createdTime":"2020-09-05 15:05:09","updatedTime":"2020-09-05 15:05:09","title":"从物联网云平台架构设计到开放生态建设(200903)","link":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7G8A8l7f61c\" TARGET=\"_blank\"><img SRC=\"http://s13.sinaimg.cn/mw690/001l8XD7zy7G8A8l7f61c&#38;690\" NAME=\"image_operate_99161599098307747\" /></A>\n<div><br /></DIV>\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n今天整理下我最近2到3年对物联网云平台，智慧家庭和物联网开放生态体系建设方面的文章。实际上我们看到从传统的软件云平台到物联网云平台构建，整体思路虽然一致，但是仍然存在较大的差异，特别是在软硬件环境的整合上面。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n物联网PaaS云平台概述</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/8e0ae80af1154e51af260cf032a23804?from=pc\" IMG_WIDTH=\"673\" IMG_HEIGHT=\"445\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于物联网云平台可以先参考下机智云或氦氪科技两家的IOT云服务平台的一下参考介绍。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n传统硬件升级为智能硬件，会在已有的近端控制，已有的传感器信息采集能力上增加远程控制和信息采集能力。常见的在传统硬件上增加wifi模组，4G或GPRS，Zigbee等远程控制能力芯片。同时增加对设备的远程控制APP应用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n一个设备的智能化升级并不一定就需要网关，而对于一个涉及到多个智能硬件组成的完整解决方案（例如智慧安防）则一定会涉及到服务网关这个硬件设备</SPAN>。这个网关不仅仅是很好解决了安全隔离的问题，同时更加重要的是实现了<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">多硬件Drvier层API能力的聚合</SPAN>，只有在聚合后才能够更好的实现<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">多个智能设备之间的联动和协同</SPAN>，转发和路由等能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在整个IOT大生态环境下，单个智能硬件本身能发挥的价值会越来越小，而更加重要的是硬件和硬件之间的链接，通过这种链接后衍生了各种基于业务和需求场景的增值类物联网应用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个最简单的智能硬件，需要有<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">APP应用，公有云端Server和服务提供，升级了智慧硬件芯片的硬件</SPAN>这三个部分的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n把这个思考清楚后就可以看到一个物联网的PaaS平台应该是：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n硬件+软件能力聚合的一个平台</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n简单的说就是在将一个传统硬件升级为一个智能硬件的过程中，平台层提供了更多的硬件+软件层面的服务能力帮助你快速的完成一个硬件的升级改造。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n从硬件层面：</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n提供本地化的开发环境，开发包等，协助你完成Driver驱动和驱动能力的暴露。即首先你在接入一个硬件的时候，首先你要注册一个硬件设备ID，同时再将这硬件的Drvier层能力注册和发布出来。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n从软件层面：</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我们需要开发一个控制类APP或应用类的APP，那么平台需要提供一些开发框架和环境，开发工具包，同时更加重要的是提供平台层共性和标准技术能力，这个技术能力包括了安全，数据库和缓存服务，消息，存储，CT能力调用等。提供这些技术服务能力的目的很简单，让我们能够更加快速的开发和构建自己的APP应用。技术服务+Driver层暴露的API服务，两者结合起来才能构建一个完整应用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个好的物联网PaaS平台一定是包括了开发平台和运行平台两方面能力提供，首先是提供开发环境，框架和工具，协助快速开发和本地化调测，其次是提供运行平台能够将开发完成服务或应用进行托管和部署。同时在整个过程中我们需要提供DevOps的完整一体化从开发态到运行态（本身又包括了测试环境和生产环境）的迁移能力。再进一步，我们还可以提供运维阶段的运维监控，数据统计和分析接口和能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n传统的软件PaaS平台强调的是APPID，而物联网PaaS平台关注的是设备ID，而APP本身归属到设备上。传统的软件PaaS平台不会太关注服务的单独注册和发布，服务的管理，而物联网PaaS平台则必须包括服务API的全生命周期管理能力。服务API是衔接硬件Driver和智慧应用APP间的重要桥梁。即物联网PaaS平台必须包括了类似OpenAPI平台，云服务总线或微服务网关等的相关能力并进行了整合。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n物联网云平台和传统软件云平台区别</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/d626e8284f5d4a4aaacead7a25043847?from=pc\" IMG_WIDTH=\"760\" IMG_HEIGHT=\"535\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于物联网云平台暂时没有找到一个权威标准的定义，但是可以将其简单理解为实现物联网应用从传统的客户端转移到云端统一集成和管理的平台。物联网云平台和传统的软件云平台一个最大的区别就是物联网应用不是单纯的软件，而是软件+硬件设备的结合，正是由于该原因，云平台必须提供设备层的接入和资源管控能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网软件平台最关键的功能：设备管理、集成、安全性、数据收集协议、分析类型以及支持可视化，有个网站对主流的物联网云平台做个一个对比可以参考上图。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到，其中集成方式以Http\nRest接口服务为主流，同时对于设备信息采集和消息处理以MQTT为主流。当前对于阿里云，百度，中国移动，包括类似京东，乐视，还有机智云等都推出由自己的物联网云平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于这些物联网云平台可以看到核心仍然是提供两方面的能力：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n设备和Driver层API的快速接入，设备性能数据采集和监控</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n物联网应用APP的设计，开发，测试，发布，管理全部云化能力</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网云平台本身<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">不仅仅提供硬件资源池的Driver相关API的聚合能力，同时还提供对于应用层业务服务和内容服务的聚合能力</SPAN>，这也是和传统云平台的一个区别。传统的软件云平台只涉及到软件APP和云平台两个部分的内容，而对于物联网云平台则涉及到<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">云平台，移动APP，物联网设备三者之间的协同和互动</SPAN>，这也是两个云平台之间的一个差别。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于一个真实的物联网应用场景，对于在设备端往往是一组设备的管理而不是单个，同时在设备端还需要具备离线和近场的管理能力。正是由于这个原因，往往在一个物联网云平台的协同架构中，在设备端还会增加一个物联网的网关，做设备资源类的API能力的聚合，近场的控制，简单的控制组合等操作。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于两者的区别可以再看下百度IoT云平台的一个架构图，如下：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/f955e5f5396b415490f94a0e3b12acf6?from=pc\" IMG_WIDTH=\"758\" IMG_HEIGHT=\"542\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在百度IoT框架中，IoT设备启动后要注册到百度IoT云。设备注册成功后，云端将设备管理起来。在设备活跃状态下，云端可以向设备端下发监控命令，设备端也可以主动向云端上报数据。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从这个图可以看到物联网云平台在传统IaaS和PaaS软件服务的基础上，增加了IoT的PaaS平台服务能力，在百度整体架构图里面又将其分为两个框，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一个是和硬件设备接入相关的PaaS层服务能力，一个是和移动APP软件接入相关的PaaS层服务能力。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这里，对于<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">设备的注册，接入，固件Driver的下发和升级，设备信息采集，性能监控，设备认证和安全等都是和物联网场景应用相关的一些能力，这也是物联网云平台和传统云平台不同的一个地方。</SPAN>同时我们也看到一个物联网云平台一定会提供对Open\nAPI接口的统一管理和监控能力，这本身就是一个轻量的服务总线，也是物联网云平台必须要提供的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n以上内容都搞清楚后，我们基本就把物联网云平台和传统云平台的区别搞明白了。再简单点来说就是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">物联网云平台需要同时提供资源层（设备接入）和应用服务层（APP+OpenAPI)全部云端管控和治理能力。</SPAN></P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n物联网云平台关键功能组件</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/dfic-imagehandler/a5935c6c-5f91-4418-8b94-261b2210c094?from=pc\" IMG_WIDTH=\"1023\" IMG_HEIGHT=\"682\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n物联网网关</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我经常会谈到API网关，也曾经谈过智慧家庭里面的网关设备，但是没有专门谈过物联网网关，实际上对于智慧家庭网关本身也是属于物联网网关的范畴。对于物联网网关，首先还是参考下百度百科给出的一个基础定义，具体如下：</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n物联网网关，作为一个新的名词，在未来的物联网时代将会扮演非常重要的角色，它将成为连接感知网络与传统通信网络的纽带。作为网关设备，物联网网关可以实现感知网络与通信网络，以及不同类型感知网络之间的协议转换．既可以实现广域互联．也可以实现局域互联。此外物联网网关还需要具备设备管理功能，运营商通过物联网网关设备可以管理底层的各感知节点，了解各节点的相关信息，并实现远程控制。图l示意性地给出了以物联网网关构建的物联网典型拓扑。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这里面强调了一个关键重点，即物联网网关来实现感知网络和通信网络的互联，但是感知网络存在多种不同的协议，比如Lonworks、ZigBee、\n6LowPAN、RUBEE等，那么要实现这种互联网，网关就必须具备协议转换能力。同时网关有两个重点，就是既实现广域互联，同时在广域互联网不可用的时候，往往可以通过网关来实现局域网互联，即近端的相互交互和协同。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/ccc666542ae04a3d9cf251c3b6e2de5e?from=pc\" IMG_WIDTH=\"813\" IMG_HEIGHT=\"443\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于物联网网关的功能，主要包括：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n1.广泛的接入能力</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n目前用于近程通信的技术标准很多，仅常见的WSNs技术就包括Lonworks、ZigBee、\n6LowPAN、RUBEE等。各类技术主要针对某一应用展开，之间缺乏兼容性和体系规划。现在国内、外已经在展开针对物联网网关进行标准化工作，如3GPP、传感器工作组，实现各种通信技术标准的互联互通。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n2.可管理能力</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n强大的管理能力，对于任何大型网络都是必不可少的。首先要对网关进行管理，如注册管理、权限管理、状态监管等。网关实现子网内的节点的管理，如获取节点的标识、状态、属性、能量等，以及远程实现唤醒、控制、诊断、升级和维护等。由于子网的技术标准不同，协议的复杂性不同，所以网关具有的管理性能力不同。提出基于模块化物联网网关方式来管理不同的感知网络、不同的应用，保证能够使用统一的管理接口技术对末梢网络节点进行统一管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n3.协议转换能力</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从不同的感知网络到接入网络的协议转换、将下层的标准格式的数据统一封装、保证不同的感知网络的协议能够变成统一的数据和信令；将上层下发的数据包解析成感知层协议可以识别的信令和控制指令。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这些基本的网关能力总结都没有问题，但是对于物联网网关，其中一个关键的核心就是网关本身是实现感知层和通信层的唯一入口和出口渠道。外部只需要和网关打交道即可，而网关来调度和管控下面接入和注册的各种类型的感知设备。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此网关有一个关键能力，类似API网关，即对于感知层各种感知设备提供的不同类型的协议的接入和适配，同时在协议接入后能够转化为标准的接口协议和通信层交互，对于实时的接口可以采用类似Http\nRest接口，而对于消息集成可以采用类似标准的MQTT消息等。这也是我们原来谈智慧家庭的时候经常会谈到的物联网网关更多的是硬件层的Drvier\nAPI的注册和接入，包括后续的管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网网关一般在架构和实现的过程中会提供一个硬件设备来完成，这个设备来实现协议转换，路由，转发，自动注册管理，接口的北向和南向集成能力。这个网关一般是部署在局域网端的一个设备，对于整体的云架构来说，只需要这个网关设备和云端进行交互即可。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在前面我有文章谈到过边缘计算，可以看到对于边缘计算的最终落地，完全可以在物联网网关层来实现，即进一步提高物联网网关的存储和计算能力。一方面是实现自动采集数据在网关层本地采集后，经过二次加工再采集上传到云端，一方面是云端的关键计算规则和逻辑下发到网关层，支持在网关层来实现本地化的计算。而这也将成为网关层能力的一个关键扩展。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n物联网设备模型</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/7acaebdde3d04ba1878a5f3b71a5151c?from=pc\" IMG_WIDTH=\"754\" IMG_HEIGHT=\"462\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网系统的基础架构模型，即云+app+端集成架构。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n云平台：部署在云端的物联网应用程序，除后台管理外核心是实现数据信息的采集和控制</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n端：即我们常说的近端侧物联网设备，包括物联网设备的近端组网和物联网硬件网关</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n应用APP：方便我们对物联网智慧设备进行管理的APP应用和服务平台</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而实际上整个模型里面我们讨论最多的就是近端的组网和联动能力，近端的计算和存储能力。因此会涉及到两个关键，一个就是近端的硬件网关设备，一个就是具备计算和存储能力的边缘计算设备。相对而言，对于云平台和app应用来说并没有太大的变化。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于云平台端，一定会涉及到一个物联网管理平台，实现对用户，设备等基础数据的管理，因此这篇文章来思考下一个后端的管理平台应该如何抽象一个通用的模型。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于一个物联网运营平台来说，最基本的该模型应该是一个支持多租户架构的模型，每个租户能够完全实现应用权限，数据方面的资源隔离能力。在这个明确后我们再来看模型的抽象，初步来看，我准备从位置模型，设备模型，组织模型，权限模型几个方面来分开谈。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n位置和基础设施模型</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到该模型是基于GIS地理信息拓展的一个多层树状模型结构。从最顶端的行政区域模型，再到区域分类-&#62;基础设施楼宇-&#62;分层分单元-&#62;具体的房间号-&#62;房内区域。这个层次模型应该要做到相当灵活的可配置能力，简单来说我们推要给智慧校园项目和一个智慧公寓项目两者之间应该是有差异的，但是核心的基于GIS地图和位置信息拓展本身是不变的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即针对我们实际运营的项目，我们应该去构建这么一个模型，究竟要建几层你自己去定义，每层类别应该扩展哪些熟悉你也自己去定义。这样才可能具备足够的灵活和可配置能力。为何需要这个模型，因为最终的物联网设备我们需要知道究竟安装和部署在哪里的，即设备最终需要和位置模型进行关联，这样设备才具备了位置属性。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n组织人员模型</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n组织人员模型实际上和我们传统业务系统中的模型相似，即这里有两个业务对象，一个是组织结构，一个是人员，人员最终是挂接在组织结构下面的。要分多租户，那么租户就应该是组织结构树的最顶层。组织结构树本身也是树状结构模型，可以做到灵活的多层扩展，层次结构本身也没有限制。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n人员最终是挂接在某个组织节点下面，形成人员和组织之间的关系。方便后续的业务功能和数据授权操作。同时也方便对平台的人员和用户进行分组管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在智慧家庭的应用里面，我们看到还有一个常规的组织结构模型里面没有的概念，即家庭模型，首先你有一个家庭的概念，家庭里面有多个人，实际上在家庭里面的设备是可以被家庭里面的多个人共享和管控的。因此家庭聚合层实际上是在组织模型里面必须具备的一个组织节点层。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n设备模型</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n设备模型实际上是我们谈到最重要的一个模型，因为各类设备的参数属性配置都不应用，但是针对所有设备有有一些通有的基础配置。因此设备模型本身应该是一个基础配置+扩展配置模式的，对于扩展配置可以做到灵活扩展，自定义属性，按需配置。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其次设备模型里面还需要包括两种关系模型</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n设备和子设备：类似父子结构，而且我们需要管理到子设备，但是子设备不能脱离父设备</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n设备组合：一套组合的设备，既可以独立存在，也可以形成组合提供更强大的功能</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这两种设备关系也需要在我们进行设备模型建模的时候统一考虑。要意识到设备模型本身不仅仅是简单的设备基础元数据管理，更是要用于后续的设备接入，注册，设备能力提供，数据采集，监控等一系列动作。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n整体说明</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n设备属于某一个位置，同时人员本身属于某一个组织，同时位置和组织本身之间也有关联关系。人员操控设备，人员和设备之间本身又建立关联和拥有关系。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n物联网云平台-能力聚合和开放</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/dfic-imagehandler/85321af1-bb48-4233-93ce-a229f3bf5fb8?from=pc\" IMG_WIDTH=\"1023\" IMG_HEIGHT=\"724\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n前面谈到，对于物联网云平台可以看到核心仍然是提供两方面的能力：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n设备和Driver层API的快速接入， 设备性能数据采集和监控</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n物联网应用APP的设计， 开发， 测试， 发布， 管理全部云化能力</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网云平台本身不仅仅提供硬件资源池的Driver相关API的聚合能力， 同时还提供对于应用层业务服务和内容服务的聚合能力，\n这也是和传统云平台的一个区别。 传统的软件云平台只涉及到软件APP和云平台两个部分的内容， 而对于物联网云平台则涉及到云平台，\n移动APP， 物联网设备三者之间的协同和互动， 这也是两个云平台之间的一个差别。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n今天重点谈下整个物联网云平台架构中的服务能力聚合层，在一个完整的物联网端到端应用里面，可以看到能力聚合层起到关键的承上启下的作用。即物联网的能力聚合层核心作用就是将底层各种物联网云平台或硬件Driver层，硬件网关层的能力聚合起来，然后统一开放给上层的业务应用使用。或者将将硬件层的能力通过适配和接入后，转变为标准的软件接口服务，并以能力开放，比如OpenAPI接口的方式暴露给上层。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而这种接口服务能力的开放本身又涉及到北向接口和南向接口两个方面的内容：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n1. 北向接口：采集硬件层的设备状态，熟悉，健康指标等信息。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n2. 南向接口：对设备的各种控制信息，Driver更新等通过南向接口服务，写入到设备层。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那这个时候做上层业务系统就简单了，不需要去关注复杂的硬件层接口，而只需要使用标准的软件API接口服务即可。而这个时候的能力聚合和接口能力开放类似标准的OpenAPI平台或微服务网关的能力。简单来说就是这个服务聚合网关需要的关键能力就是：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n服务的接入和注册，服务代理和发布，服务安全和访问控制，服务运行监控，消息管理(MQTT)，流量控制，其次包括了最基本的服务元数据。如果是一个可运营的服务能力开放平台，那么就还需要多租户管理，服务订购，产品和订单管理，计费管理等方面的能力。即在能力服务本身标准化后，服务本身也就是产品，是可以发布出去进行订购供外部业务系统消费，并进行计费的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从物联网大生态来说，那么物联网的服务能力聚合平台一定不是简单的接入和聚合硬件和网关Driver层的能力，更加重要的是聚合外围周边生态的软件服务能力。而这些软件服务能力本身包括了围绕硬件层设备的增值服务提供(安装，维修），也包括了内容提供（音乐，视频，食品配送）等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n从最简单的服务能力聚合转变到物联网厚PaaS平台能力提供</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个服务能力聚合平台，发展演进到后面就会越做越厚，核心的原因还是我们前面经常谈到的，你在实际应用场景实现过程中，会发现很多共性的内容，而这些共性内容按云平台的思路都应该是下沉的，即共性能力下沉然后以服务能力的方式向外暴露接口。而对这种共性能力本身又包括了技术共性能力和业务共性能力，业务共性和垂直行业类应用密切相关。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n技术平台：</SPAN>技术平台解决技术共性能力，技术共性包括了典型的4A基础能力，流程引擎，地图，搜索，消息，缓存，文件等，这些能力和业务无关，可以在技术平台统一规划和提供。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务平台：</SPAN>类似于基于垂直行业业务中台的概念，这类共性能力往往基于不同的垂直业务领域单独规划设计，将关键的业务场景和流程中的抽象业务模型提取出来，下沉到业务中台数据模型中，形成共性化的业务接口服务能力后再向上层应用开放。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n所有技术平台和业务平台中的各个组件完全可以按照微服务架构思想进行设计，每一个组件就是一个相对独立，高度自治的微服务模块，可以进行独立的设计，开发和部署运维。对于这种组件最终提供的接口服务能力也是接入和注册到服务聚合平台。也就是说对于技术+业务平台，和服务聚合平台之间本身也是一种松耦合的关系。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n将物联网能力聚合平台按OpenAPI平台的思路来做，这个OpenAPI平台将成为整个物联网生态里面承上启下的重要纽带，同时开发相应的自服务门户和流程，包括服务的自助接入和订购，真正形成一个围绕整个生态链上下游以聚合为核心的能力平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n物联网云平台整体架构重新思考</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/8bb0cc5093a04c75a5a5e591cde7b827?from=pc\" IMG_WIDTH=\"937\" IMG_HEIGHT=\"525\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n近期会对物联网云平台进行重新思考，首先还是要对整体架构做进一步的梳理。实际上在18年有不少的文章已经谈到了物联网云平台，包括和传统的软件云平台的差别等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在重构物联网云平台整体思路的时候，有些关键点简要总结如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n构建一个技术平台容易，但是基于物联网的业务和应用场景来构建一个运营服务平台，或者说构建一个完整的生态则相对难，不仅仅需要技术能力，还需要对业务的深入理解能力，最外围资源的整合能力。构建生态需要的更多的是开放心态，服务化驱动，系统思考。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网云平台核心点还是在硬件Driver层的能力接入，即不仅仅是软件能力，也包括了硬件能力接入，而硬件能力最终又转变为软件类的协议和接口，和软件完成协同和控制。所以当我们将物联网云平台的时候，一定是软件+硬件融合的一个生态环境。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n同时当我们将物联网云平台提升到一个业务运营和服务平台的时候，这个时候就不仅仅是技术平台，更加重要的就是物联网厂家下的硬件，软件应用，内容服务等各种服务能力的接口抽象和服务能力聚合。即物联网云平台不再单纯是技术平台，而是具备了强大的业务能力和内容服务提供能力的物联网业务中台。而作为这个业务中台面向客户和用户的延伸，则可以是一个泛电商平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n泛电商平台核心是电商平台，但是将围绕物联网智慧硬件构建一个完整的电商生态，一个是前端的客户关系管理和地推销售，一个是后端的装维和售后服务。电商本身提供产品和服务，而这个产品则是物联网智慧硬件，物联网应用软件，而服务则是各种基于物联网软硬件的内容服务和增值服务能力。一切围绕物联网生态展开。这个生态将具备极强的外围扩展能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n常规的容器云PaaS，技术中台仍然是物联网云平台的关键内容，这些内容支撑智能硬件从接入到运行到后续运维监控的全生命周期流程。而设备和软件最终上线运行后，将转变为电商平台可以销售的产品或服务。同时电商平台完成产品销售，本地化的安装服务后，将形成真正在线运行的智能产品。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n手机APP端+智能产品和网关+公有云服务中心三者本身又形成一个完整的闭环运作流程。而从公有云数据中心本身完成数据采集和处理后，为后续构建增值服务的大数据分析运营中心提供基础。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n物联网开放平台整体子系统划分</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网发展的三个阶段，即连接-感知-智能，\n第一阶段是设备接入，大量的内置了WiFi，ZigBee，蓝牙，RFID等的智能终端设备被制造出来并连接入围。第二阶段是设备状态被感知，并产生海量数据，形成物联网大数据，也是我们一直强调的数据形成积累是走向第三阶段基础；第三阶段对产生的数据进行分析和机器学习，形成初始的人工智能能力，实现用户和商业价值。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网应用领域相对广泛，比如智慧城市和智慧家庭，车联网，企业资产管理，工业互联网，能源互联网和泛在电力物联网，智能建筑，智慧农业，智慧物流等。物联网应用种类繁多，市场需求巨大。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n平台模式是企业主导的经营模式，而生态体系是建立在该模式基础上的企业网络化协同整体图景。Apple和Google的发展思路揭示了搭建开放平台，在此基础上建立生态体系，从而获得巨大成功。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而实际上我们看到真正的重点在于首先平台往往更多是技术层面的内容，而生态体系则涉及到诸多的外围合作伙伴的参与和业务层面内容的提供。平台更多提供的是资源和技术层面的能力，而生态提供的是业务，内容和服务能力。平台提供商和生态提供商本身可以分离，各发挥优势。比如我们可以基于阿里的物联网云平台，构建上层的物联网细分领域的生态体系等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网平台型生态中的用户类型包括平台提供商，设备供应商，应用提供商，内容和服务能力提供商，运营商，最终用户等，相互之间形成一个完整的覆盖物联网硬件产品全生命周期的生态体系。特别要注意物联网能力开放平台包括了硬件设备开发商和软件应用开发商，硬件设备开发商实现智能设备的开发和接入，软件商实现应用，内容和服务的提供。两者可以分离，也可以是同一个厂商。但是对于涉及到诸多物联网设备硬件大集成厂商，设备组合联动的，一般都为独立的集成类开发商来完成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网开放平台应用产品分类-应用类产品，设备类产品，通道类产品，托管资源类产品，功能组件类产品，服务API类产品。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n物联网开放平台总体架构</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/58e38994e58949aa8cdf1eef35cfa832?from=pc\" IMG_WIDTH=\"730\" IMG_HEIGHT=\"389\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网开放平台主要是面向物联网整个生态体系中的所有角色提供物联网设备和应用的快速开发，部署，能力开放，计费结算，服务运营能力的平台。可以将物联网开放平台划分为六大子平台分别为<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">设备管理平台(DMP)，连接管理平台(CMP)，应用使能平台(AEP)，资源管理平台(RMP)，业务分析平台(BAP)和应用中心平台(ACP)。</SPAN>这个分发为作者的一个分发参考，非标准分法。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n设备管理平台：</SPAN>对物联网终端的远程监控，设置调整，软件升级，系统升级，故障排查，生命周期管理等，同时还可以实时提供网关和应用状态监控告警反馈。而要做到这些，有两个关键点，一个就是设备模型的抽象，一个就是对设备接口的抽象，这两个是能够实现对设备全生命周期管理的基础。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n设备接入过程，比如当前的智慧家庭里面的各种智能设备，一般在家庭WiFi网络下可以实现设备的自发现，在自发现设备后再通过API接口实现在互联网云平台的设备注册和接入，设备注册接入后设备管理平台即可以通过相关的接口API对设备进行各种管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n设备一般需要同时提供北向接口和南向接口，北向接口实现数据和状态的采集，而南向接口实现云端对设备的状态控制。注意在有物联网网关的场景下，设备一般会先注册接入网关，而不是直接接入到云端平台，这个时候就需要建立设备和网关之间的关系连接。同时云端平台也间接通过网关来实现对设备的管理和控制。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n连接管理平台：</SPAN>一般应用于运营商网络上，实现对物联网连接配置和故障管理，保证终端联网通道稳定，网络资源用量管理，连接资费管理等。在这本书里面讲的连接管理平台更多是和运营商相关的，而实际上即使无运营商介入也存在连接管理平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n应用使能平台：</SPAN>提供应用开发和统一数据存储两大功能的PaaS平台，架构在CMP平台之上，这个和我们通常说的软件PaaS平台是一致的。一般的PaaS平台能力服务层包括数据中心，应用开发测试运行环境，原子服务和能力中心，能力开放API，开发社区，以及安全管理和运营管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意物联网的应用使能平台和传统的PaaS平台最大区别就是增加了和物联网智能设备和终端的联动，否则无法完成一个完整的开发测试工作，因此你首先要进行设备的注册和发现，设备的接入，然后才可能让你的设备能够和你的应用之间形成联动并进行测试验证。这是和传统软件PaaS平台最大的区别，也因此设备管理平台实际上物联网PaaS平台不可分的一部分。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n资源管理平台：</SPAN>对应常说的软件云平台里面的IaaS资源池</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n应用中心平台：该平台为开发者，应用提供商，能力提供商，设备厂商等提供功能组件，能力，应用服务，通道资源，托管资源，商品的发布展示销售，业务营销，计费结算，客户服务。可以理解为是一个产品最终入库上架后的后生命周期管理平台，类似一个物联网电商平台+运营平台+售后服务平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务分析平台：</SPAN>包含基础大数据分析服务和机器学习两大功能</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n和传统的软件能力开放平台的区别，我们可以看到传统软件PaaS平台一般为两者联动，即软件用户或APP和云端SaaS应用的联动，而在物联网能力开放平台下变成了三者联动，即软件用户APP，云SaaS应用，终端的智能设备三者之间的联动。从子系统层面物联网能力开放平台在传统的PaaS平台基础上增加了设备管理平台和连接平台，其核心关键还是设备管理平台和传统PaaS平台间的集成和协同。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网能力开放平台和能力聚合，真正实现物联网整体生态系统中的软硬件一体化，资源内容服务一体化，物联网设备前后生命周期一体化，物联网设备和应用研发，运营和最终的运维管控的一体化。因此基于上面的各个子系统可以看到，设备管理平台和应用使能平台实现软硬件一体化，再加上应用中心平台后实现研发运营交付一体化。这是相对不容易的事情。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n物联网开发生态和万物互联</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在前面谈物联网云平台的整体框架的时候，实际上一直就在思考不仅仅是整体架构框架的重构，更加重要的是基于业务需求和业务场景对整体生态体系的重构。即通过物联网云平台做为关键的技术能力支撑，泛电商平台做为关键的业务和服务能力支撑来重构整个物联网业务生态链。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个生态链即需要实现从需求到最终产品交付使用的横向流程贯通，同时又需要实现纵向的从硬件设备层到云平台再到电商应用和APP终端的纵向打通。而所有的外围生态都是围绕横向和纵向业务，数据和流程的全面贯通而展开。既实现了内部的完全整合，又通过服务聚合和能力开放来实现更大外围生态。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n前面一直在谈万物互联。<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一方面是物物连接，一方面是物人连接，同时也包括传统软件应用中的人和人的连接。所有的连接都基于场景驱动，通过连接产生了直接的价值，同时通过连接形成大量的数据积累产生后续的大数据分析价值。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此物联网生态也可以讲是一个<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">连接生态</SPAN>，而这种连接除了我们常规谈到的软硬件技术，协议和应用外。更加重要的是人工智能，即万物互联是第一，物化智能是第二，没有智能的连接和应用无法灵活的匹配需求和场景，也无法带来更大的增值服务价值。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/a921c88444d14b35963cb7ae101d3220?from=pc\" IMG_WIDTH=\"706\" IMG_HEIGHT=\"335\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于以上关键思路，我们来看需要考虑的关键点如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n构建面向外围智能设备厂商的，覆盖从设备接入，运行，运营和运维管控的全生命周期支撑平台。这个核心仍然是物联网云平台，这个云平台本身也是物联网云能力开放平台，更加体现了面向设备厂商的自服务能力，设备厂商基于平台提供的标准规范，开发框架，基础插件，标准接口定义，接入流程，测试流程就能够快速的完成自己设备的改造和快速接入。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n构建面向智慧平台大B企业的端到端运营平台，云平台完成最终的智能设备接入和上架，而运营平台完成最终智能设备的推广销售，后续的装维上线，上线的完整产品运营和管控。从大B企业到最终的C端客户，从设备订购到最终的安装上线，到后续的运行运维，实现完整的全生命周期管理流程。也实现整体运营平台的端到端管理能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n构建面向最终的C端客户的从需求到交付的端到端支撑平台，核心仍然是前面谈到的泛电商平台，提供智能设备，应用，内容，服务多方面的增值服务能力。覆盖客户从需求到消费使用的端到端流程，并形成完整闭环。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n构建基于云平台+服务聚合开放+泛电商形成的外围生态连接平台，其中外围生态包括了智能设备制造商，软件应用开发商，内容提供商，第三方增长服务提供商，金融和支付，第三方物流等。该生态的整合一个关键就是服务聚合和能力开放，开放的能力又支撑外围更多的合作伙伴接入。其次，就是我们看到这个生态里面有三类产品，本身又是一个逐步演进和深入服务的关键。先是智能设备，其次是智慧应用，再次是基于智慧设备和应用提供的各类内容服务和增值服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n产品-&#62;应用-&#62;内容，从智慧硬件产品，再到最终的内容和增值服务，将智慧产品从最简单的智能控制功能转化到内容服务提供，才是可持续发展的运营思路。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n构建从建设过渡到运营后期的大数据分析增值服务能力平台。平台真正开始运营后，那么一定能够实际的采集到用户使用智能硬件产品的行为数据，消费习惯数据，而这些数据经过大数据采集，数据处理和分析后，形成上层的大数据分析平台。通过大数据分析一方面是为第三方提供增值服务能力，一方面是通过大数据分析来改善我们前面的硬件接入上线，电商产品运营和针对性营销的整个流程。使得整个平台能够保持持续优化和改进。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n万物互联和数据赋能</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/b7b4dfc494cb448a9d98563c25df9b08?from=pc\" IMG_WIDTH=\"755\" IMG_HEIGHT=\"440\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于万物互联，里面重要的有三点：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n连接-万物互联：物物连接，物人连接，硬件和软件的连接，线上和线下的连接都可以纳入</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n智能-数据驱动：连接后不是物本身智能了，而是积累的数据通过分析后具备了智能</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n需求-场景驱动：做任何事情我们都需要有需求驱动，需求一定要依附于实际的用户场景</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在百度搜索，我们可以看下对万物互联的一个解释</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n万物互联（IoE）定义为将人，流程，数据和事物结合一起使得网络连接变得更加相关，更有价值。万物互联将信息转化为行动，给企业，个人和国家创造新的功能，并带来更加丰富的体验和前所未有的经济发展机遇。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这个解释里面除了谈到的人和物外，还增加了流程和数据，而流程可以理解为前面谈到的关键业务需求和场景驱动，而数据则是真正的为人工智能和分析决策服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n万物互联仅仅是第一步，数据赋能才是真正的价值体现。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n接着我们还是先谈下万物互联里面的一些核心</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n第一个要谈的就是连接</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个连接大家很容易理解，首先要由物，然后还要由网络，最终就能够形成连接。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个物本身就包括了人，事物两个方面。人和人，人和事物，事物和事物之间都可以产生连接。而事物本身又包括两个方面，其一是移动事物，类似货车，飞机，贴了条码标签的物品；一种就是静态基础设施事物，类似我们谈到的家庭设备，地下管线等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而连接核心是网络，包括现在的5G网络和低功耗广域网（LPWAN），能够实现物联网的部分应用需求。目前全球主流技术标准有两个，一是华为主导的NB-IoT，另一个是国外厂商主导的LoRa。万物互联，就一定涉及到数据随时随地的采集和传输，而这就需要高性能高可靠的网络支撑，而这也是为何说5G技术的发展本身是对万物互联的一个巨大支撑。特别是对于实时的视频图像采集和快速决策分析等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在整个连接里面还有一个关键对象，就是我们常说的物联网采集设备，传感设备等。通过物联网传感设备让物本身具备了可感知的人化能力。但是要注意我们的目标仍然是事物本身，而不是物联网设备，传感设备仅仅是一个辅助我们万物互联实现的一个工具罢了。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n第二谈下流程和业务场景驱动</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在原来我谈SOA架构咨询和接口服务识别的时候，经常会谈到跨系统交互的端到端业务流程，其原因就是接口本身不是无缘无故就产生的，接口本身是为了满足跨系统交互的业务流程服务的，是跨系统交付的业务流程产生了对接口的需求，产生了对业务系统连接的需求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n简单的说就是，这种连接本身是有业务流程和需求场景支撑的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在现在的万物互联定义里面增加流程，是相当大的一个进步，即任何一个连接我们都要去思考为何需要存在，这个连接究竟是为哪个业务流程和需求场景服务。不要为了连接而连接，连接本身不是目的，而连接最终产生业务价值才是目的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这也是我们在做物联网应用和运营服务的时候必须要考虑的点，就是一定是业务和需求场景驱动，去考虑为了满足业务流程和业务场景的需求，究竟需要形成哪些连接，采集哪些数据等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n最后谈下数据赋能</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于物联网和万物互联，连接本身不是目的，通过连接满足业务需求，实现业务价值是目的。而这个业务价值的实现本身又包括两个方面：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n低层次价值：实时的满足业务协同的需要，比如完成业务流转，业务控制等流程。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n高层次价值：基于数据分析给出最佳辅助决策，或者能够完全实现人工智能自动化处理。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而我们这里谈的数据赋能更多的就是指让数据发挥高层次价值，单个数据往往只能体现低层次价值，而大量数据的积累形成大数据后就能够帮助我们进行人工智能和辅助决策。因为只有足够多的数据我们才能够完全我们的机器学习和模型的训练，使我们的决策模型具备更高的准确度。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n大数据本身已经提出了很多年，但是人工智能发展明显延后，其原因主要还是体现在网络本身的发展上，数据采集和处理需要有强大的网络支撑，其次就是人工智能本身就需要前期多年的数据积累参与训练，这本身也有一个过程，而最近1到2年，我们也看到物联网人工智能发展的相当快速，因为所有的前提条件都已经具备。</P>\n<br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Thu, 03 Sep 2020 01:56:26 +0000","feedId":4798,"bgimg":"http://s13.sinaimg.cn/mw690/001l8XD7zy7G8A8l7f61c&690","linkMd5":"bad4bc5aeaae88a99d04d793afebeb20","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn47@2020_2/2020/09/05/07-05-12-008_44c9fafbcd31740b.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s13.sinaimg.cn/mw690/001l8XD7zy7G8A8l7f61c&690":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn47@2020_2/2020/09/05/07-05-12-008_44c9fafbcd31740b.webp","https://p6-tt.byteimg.com/origin/pgc-image/8e0ae80af1154e51af260cf032a23804?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn44@2020_3/2020/09/05/07-05-16-545_0815adc5db68d35c.webp","https://p3-tt.byteimg.com/origin/pgc-image/d626e8284f5d4a4aaacead7a25043847?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn100@2020_3/2020/09/05/07-05-13-752_076db7b5126438b9.webp","https://p6-tt.byteimg.com/origin/pgc-image/f955e5f5396b415490f94a0e3b12acf6?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn87@2020_6/2020/09/05/07-05-15-729_5c4ae71ee48de6fa.webp","https://p1-tt.byteimg.com/origin/dfic-imagehandler/a5935c6c-5f91-4418-8b94-261b2210c094?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn83@2020_6/2020/09/05/07-05-13-706_f196ad20d63ba639.webp","https://p1-tt.byteimg.com/origin/pgc-image/ccc666542ae04a3d9cf251c3b6e2de5e?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn59@2020_5/2020/09/05/07-05-13-629_b236deda0d4c1658.webp","https://p6-tt.byteimg.com/origin/pgc-image/7acaebdde3d04ba1878a5f3b71a5151c?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn95@2020_6/2020/09/05/07-05-18-274_3972f180fa5a23e9.webp","https://p6-tt.byteimg.com/origin/dfic-imagehandler/85321af1-bb48-4233-93ce-a229f3bf5fb8?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn63@2020_3/2020/09/05/07-05-18-350_c72df8cd600f3ea5.webp","https://p3-tt.byteimg.com/origin/pgc-image/8bb0cc5093a04c75a5a5e591cde7b827?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn3@2020_3/2020/09/05/07-05-18-409_d6085a75016a68e0.webp","https://p3-tt.byteimg.com/origin/pgc-image/58e38994e58949aa8cdf1eef35cfa832?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn75@2020_1/2020/09/05/07-05-13-759_e6dc7c1a9734a1b1.webp","https://p6-tt.byteimg.com/origin/pgc-image/a921c88444d14b35963cb7ae101d3220?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn88@2020_5/2020/09/05/07-05-19-615_636c320e27f3928e.webp","https://p1-tt.byteimg.com/origin/pgc-image/b7b4dfc494cb448a9d98563c25df9b08?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn91@2020_3/2020/09/05/07-05-13-403_5c4a49398dbf927a.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn8@2020_6/2020/09/05/07-05-15-434_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1599289509749},{"createdTime":"2020-09-05 15:05:09","updatedTime":"2020-09-05 15:05:09","title":"谈DDD领域驱动设计和建模(200905)","link":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7GbDXZLIY48\" TARGET=\"_blank\"><img SRC=\"http://s9.sinaimg.cn/mw690/001l8XD7zy7GbDXZLIY48&#38;690\" NAME=\"image_operate_77871599265221723\" /></A><br />\n<br />\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n今天谈下领域驱动设计方面的内容，其中部分内容来源于《领域驱动设计:软件核心复杂性应对之道》书籍的读书笔记整理。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"font-family:\">我前面谈了很多关于中台，SOA和微服务的文章，实际上你可以看到中台层对外和对前台提供的服务更多就应该是粗粒度的领域服务能力，如果中台最终只提供书籍对象的CRUD类API接口服务，那么根本就谈不上中台的共性业务服务能力下沉。</SPAN></DIV>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n领域驱动设计概述</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/6431794b5b284ca2bf72c38af478462a?from=pc\" IMG_WIDTH=\"825\" IMG_HEIGHT=\"535\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n什么是领域驱动设计（DDD）</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n2004年著名建模专家Eric Evans发表了他最具影响力的书籍:《Domain-Driven Design &#8211;Tackling\nComplexity in the Heart of\nSoftware》(中文译名：领域驱动设计—软件核心复杂性应对之道)，书中提出了“领域驱动设计(简称 DDD)”的概念。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域驱动设计事实上是针对OOAD的一个扩展和延伸，DDD基于面向对象分析与设计技术，对技术架构进行了分层规划，同时对每个类进行了策略和类型的划分。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域模型是领域驱动的核心。采用DDD的设计思想，业务逻辑不再集中在几个大型的类上，而是由大量相对小的领域对象(类)组成，这些类具备自己的状态和行为，每个类是相对完整的独立体，并与现实领域的业务对象映射。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域模型就是由这样许多的细粒度的类组成。基于领域驱动的设计，保证了系统的可维护性、扩展性和复用性，在处理复杂业务逻辑方面有着先天的优势。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n领域驱动设计的特点</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域驱动的核心应用场景就是解决复杂业务的设计问题，其特点与这一核心主题息息相关：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n01-分层架构与职责划分</SPAN>：领域驱动设计很好的遵循了关注点分离的原则，提出了成熟、清晰的分层架构。同时对领域对象进行了明确的策略和职责划分，让领域对象和现实世界中的业务形成良好的映射关系，为领域专家与开发人员搭建了沟通的桥梁。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n02-复用：</SPAN>在领域驱动设计中，领域对象是核心，每个领域对象都是一个相对完整的内聚的业务对象描述，所以可以形成直接的复用。同时设计过程是基于领域对象而不是基于数据库的Schema，所以整个设计也是可以复用的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n领域驱动设计的分层架构</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n下面我们简单介绍一下领域驱动设计的分层架构和构成要素，这部分内容在Eric\nEvans的书中有非常详尽的描述，想要详细了解的，最好去读原版书籍。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n下面这张图是该书中著名的分层架构图，如下：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/6a36f6bc53eb4ea795e029f2bb4d73c8?from=pc\" IMG_WIDTH=\"760\" IMG_HEIGHT=\"445\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n整个架构分为四层，其核心就是领域层（Domain），具体描述如下：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n用户界面/展现层：</SPAN>负责向用户展现信息以及解释用户命令。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n应用层：</SPAN>很薄的一层,用来协调应用的活动。它不包含业务逻辑。它不保留业务对象的状态,但它保有应用任务的进度状态。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n领域层：</SPAN>本层包含关于领域的信息。这是业务软件的核心所在。在这里保留业务对象的状态,对业务对象和它们状态的持久化被委托给了基础设施层。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n基础设施层：</SPAN>本层作为其他层的支撑库存在。它提供了层间的通信,实现对业务对象的持久化,包含对用户界面层的支撑库等作用。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于领域在这里我更愿意将其理解为业务领域，领域的表现是一系列存在相关关联和依赖关系的业务实体对象表现出现的业务行为的一个合集。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n传统的用例驱动往往我们会先分析会有哪些业务行为和业务操作，再来分析这些行为操作的承载对象，如RUP中的实体类控制类等。领域驱动的方法则可能是尽快<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">先找出核心的业务实体对象，再通过交互分析来分析对象应该展现出来的行为</SPAN>。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在解耦的层面我们看到两个层面的解耦：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n第一个层面是业务操作和业务实体的解耦</SPAN>，这也是传统的SOA的一个思想，在领域建模里面可以看到分解为业务服务，实体对象和值对象等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n第二个层面则是应用功能，服务能力，基础设施三层的解耦</SPAN>，在领域驱动设计的分层架构中则将其分解为了应用层，领域层，基础设施层。基础设施层提供资源层和持久化的能力，领域层提供业务服务能力，而应用层仅仅处理能力的协同，状态保存，服务的编排问题等。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/110c115668fc4a9abf8907c16febe725?from=pc\" IMG_WIDTH=\"676\" IMG_HEIGHT=\"505\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_29361599265232047\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域驱动设计中领域层的构建可以是整个系统构建的核心，通过领域层的构建再拓展到持久化层和界面展现层。领域模型完全基于面向对象思路构建，因此完全可以兼顾底层是关系型数据库还是NoSQL数据库来持久化。而且领域模型的持久化好像专门就是为适合NoSQL数据库而设计。对于界面展现层相同的道理，领域层只是提供和暴露业务服务，具体业务服务如何交互，协同和展现并不是关键。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个完整的领域层<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">应该包括了实体对象，值对象，主域模型类，业务服务类</SPAN>几个关键的类。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实体对象有唯一的标识符，需要持久化，对应现实中的业务对象，而值对象无唯一标识符，仅仅关注它拥有的一组属性。实体对象本身会表现出对应到行为，而值对象仅仅是属性的结合。在多个实体对象上层可能还要构建主域层对象，程度跨多个实体对象的操作组合。而对于业务服务仅仅是能力通过接口方式的暴露。一方面是实现应用层到领域层的协同，一方面是实现多个domain主域间的协同。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于领域层，在大型系统构建过程中可以是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">首先进行全局的领域层建模再划分为多个domain域，形成业务组件或模块。也可以首先进行业务主体域的划分，然后再分解下去后识别每个业务域里面的实体对象和表现行为。</SPAN>组件划分思路需要引入到大型领域层的构建。即领域层也会组件化和模块化。业务服务即需要考虑模块内，也需要考虑模块间协同。在这里可以看到是领域层本身进行模块化后引入的，对业务服务的能力进行了扩展。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域驱动设计让我们在分析和构建一个应用系统的时候，真正的转正核心矛盾，即领域对象和行为表现，而不是太多的关注基础设施和持久化机制，不去关心前台的展现层技术等。因为只有领域层这块在各种技术架构中是完全可以复用的，也是业务系统的核心。我们谈业务架构驱动应用架构，而业务架构核心内容就应该体现到应用架构的领域层模型中。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n领域模型关键对象和UML彩色建模</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域驱动设计实质是业务场景和实体驱动的设计，有关注业务场景和流程，分析，识别和抽象业务对象，进一步分析对象间的创建，关联，逻辑和服务。注意领域模型和多层架构和技术关联很小，更多的是关注概念模型和业务逻辑，因此抛开了多层架构和框架本身，先研究领域模型再由内而外过渡到数据层和界面层，以及多层的集成。按照Eric的表述，将领域中的组成角色分为五种：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n实体（Entity）：</SPAN>拥有唯一标识的对象。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n值对象（Value Object）：</SPAN>没有唯一标识的对象。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n工厂（Factory）：</SPAN>定义创建实体的方法。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n资源库（Repository）：</SPAN>管理实体的集合并封装其持久化过程。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务（Service）：</SPAN>实现不能指派或封装在一个单一对象上的操作。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于实体很容易理解，也就是业务对象，通过业务场景分析和识别的业务对象。而值对象更多的是属性集合，值对象是没有行为的，类似于结构体。这个是实体和值对象最主要的区别。书里面举了一个例子，Customer是一个实体，有具体的行为；而Address地址信息包括了街道，省份，区域等各种信息且都属于地址内容，可以抽象为一个值对象，而地址本身是没有任何行为的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于实体，在UML彩色建模里面分了四种不同的类型：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/3fe857bee1954f64996ce28bfee28648?from=pc\" IMG_WIDTH=\"688\" IMG_HEIGHT=\"280\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n1. Party, Place, Thing</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nParty: 事件的参与方，例如某人人、某组织等</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nPlace: 事件的发生地，例如仓库、零售店铺</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n应当是指事件中具体的物品，比如客户的购买事件中，thing可能不是指订单（order），而是订单中具体的物品，例如图书、衣服等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n2. Role</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n角色，对party, place, thing的参与行为、方式的抽象。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n3. Moment-Interval</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n指业务的活动、对象等，因业务需要和法律原因等需要操作、记录、追踪的东西，例如销售、订单、预定、航班、会议、行程等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n4. Description</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对某一类型事物的额外描述数据，例如产品有各种基本属性，但各种类型的产品差异比较大，比如做电子商务系统时，图书、服装、眼镜等不同类型的商品，在前台购买流程、后端订单处理流程、财务记账处理、库存管理方式、售后服务原则等各方面都会存在比较大的差异，这些差异按照产品类型设计成产品的额外描述属性，这些被称为description。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到UML彩色建模本身就是对领域驱动设计思想的一个实践，特别是对于实体进行了细分，将事物和业务互动实体，操作者都进行了分离。这个分离本身有一个巨大的好处，就是通过Color为不同的颜色，通过颜色的识别让静态的领域模型增加了动态性的信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n资源库（Repository）的作用是管理实体的集合，并封装其持久化过程，这里面说明了资源库管理实体对象的全生命周期。注意对实体对象生命周期管理的很多行为和操作已经不在实体类中，而是在资源库中，资源库转变为一个操作类和类实例化后持久化的一个结合。而这里让我感到疑惑的点仍然在在领域建模的初期可以关注类之间的关系和聚合，但是不能过早过渡到资源库分析，即从静态领域建模过渡到动态行为分析。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n服务简单点讲就是接口，在做领域分析的时候会发现有些领域很难映射到对象，拥有属性和暴露行为，这个时候就应该识别为服务。服务一个重要作用仍然是屏蔽领域逻辑内部复杂性，体现高内聚，松耦合的思想。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意SOA方法论里面很重要的一点仍然是业务和流程驱动IT和架构，业务架构和模型在先，而技术架构和模型在后，SOA从业务入手的重点正式流程和业务实体两个重要内容，而我们识别，分析流程的目的仍然在于通过流程分析识别业务实体和交互关系，所以将领域驱动设计的一些思路融入到SOA的系统分析和设计中可以更好的和SOA业务建模阶段结合。业务分析师关注业务和流程，技术架构师关注实体识别和涉及事务，接口等。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n领域模型-实体对象和值对象</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; height: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/3f3a80375e924262ab045dd99d8c661c?from=pc\" IMG_WIDTH=\"841\" IMG_HEIGHT=\"570\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于实体Entity和值对象Value\nObject是领域驱动设计里面两个重要的模型对象。所以有必要对两者的关系和区别进行理解。以下部分内容直接引用自《领域驱动设计》一书相关内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先对于实体Entity，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">实体核心是用唯一的标识符来定义，而不是通过属性来定义</SPAN>。即即使属性完全相同也可能是两个不同的对象。同时实体本身有状态的，实体又演进的生命周期，实体本身会体现出相关的业务行为，业务行为会实体属性或状态造成影响和改变。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n真正的现实世界，每个事物都一定会有唯一的标识，关键点是我们实际的业务场景和需求是否需要管理到唯一标识。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n书里面举了一个例子，当我们发放的门票上有座位号的时候，座位需要作为独立的实体，座位号是唯一的标识。而当先到先座模式下，我们只关心剩余座位数，那么座位号并不是唯一标识。这跟我们的业务需求有关。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个对象不由属性来定义，那么看人这个对象，身份证号是属性，其实也是对于人的唯一标识。不考虑本身身份证号的位数升级，一个身份证号会跟随你一辈子。但是对于人我们一般仍然会作为实体Entity来看待，因为人有状态，有对象演进的生命周期，会主动产生各种行为。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于企业内信息系统，很多时候我们把员工工卡号作为唯一标识来使用，但是要意识到工卡号只是人员的一个属性。虽然工卡号本身不会出现两个重复的，但是该属性仍然可能演变，如果将工卡号作为唯一标识和ID，那么在该属性变化时候所有其余关联对象都将受到影响。从这个层面来看，一个唯一的内码ID才是可信的唯一标识。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而对于值对象Value Object，它<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">用于描述领域的某个方面本身没有概念标识的对象</SPAN>，值对象被实例化后只是提供值或叫设计元素，我们只关心这些设计元素是什么？而不关心这些设计元素是谁。书里面谈到颜色，数字是常见的值对象。<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">这种对象无状态，本身不产生行为，不存在生命周期演进。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"font-family:\">如果从值对象本身无状态，不可变，并且不分配具体的标识层面来看。那么值对象可以仅仅理解为实际的Entity对象的一个属性集合而已。该值对象附属在一个实际的实体对象上面。值对象本身不存在一个独立的生命周期，也一般不会产生独立的行为。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n值对象往往可能是多个属性的聚合，本身无唯一标识，多个属性最终形成的一个结果值</SPAN>，而这个结果值往往又依附在一个实际的实体Entity上面。那么如果从这个概念来说，值对象往往不会单独进行持久化，或形成数据库设计的一张数据表。另外一种情况，对于简单的数据字典类对象，是否考虑作为值对象，这种对象需要持久化，如纳税属性，物料类型，它们设计到数据字典中取值，这个数据字典无状态，无自己的生命周期，是可以作为值对象来处理的。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n领域模型-聚合和聚合根</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; height: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/1e3b05c456fc4053a4ea5beba7be1e5f?from=pc\" IMG_WIDTH=\"826\" IMG_HEIGHT=\"424\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_33191599265281923\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n聚合和聚合根是领域模型里面很重要的一个概念，其实我们在从真实世界对业务对象进行识别和概念建模的时候，关注的就是聚合根，这才是我们真正要管理的业务对象。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个对象可能有多个层次，也可能有多个子实体，但是这些子实体都不可能孤立存在，它们必须依附于一个聚合根存在，它们和根节点具有同样的生命周期。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这些对象可能在领域建模的时候会分解到多个Entity或Value\nObject，但是一定要意识到实际的聚合在哪里？我们真正关注的业务对象实体究竟有哪些？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n为什么如此强调领域模型，强调聚合根的概念，因此我们在关注领域模型的时候将有助于我们打破原有的关系型数据库的思维模式，转化为对象和领域的思维模式。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到领域建模和聚合根的思路正是既适合于关系型数据库，也适合NoSql数据库的建模思路。因为在NoSQL持久化的时候，我们看到采购订单就是一个对象，其它明细和关联信息都是这个对象下的子实体信息，采购订单应该作为一个对象整体进行查询和存储，我们并不关心NoSQL会如何去存储这个对象。让我们正在关注领域对象，而不是去关心如何持久化。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n聚合Aggregate就是一组相关对象的集合</SPAN>，我们把它作为数据修改和访问的单元。每个聚合都会有一个聚合根和聚合的边界Boundary，边界定义了在一个聚合里面内部应该有哪些实体，哪些子实体对象。定义边界的原因是我们期望对一个聚合的访问是通过聚合根点进行的，聚合里面的子实体对外界是完全封闭的。对于外部对象不应该去访问到一个聚合边界里面的子实体。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在一些场景下，对于一个聚合的访问，我们往往只需要查询到头信息，而不关心具体的子实体信息，这个有点类似于传统O/R\nMapping里面的惰性加载。在这里也必须要考虑到。在实现和设计聚合的时候，需要考虑到这种场景，即根据需要来加载一个完整聚合中的实体和子实体，以满足性能的需要。如何对应关系型数据库，对一个聚合实际的新增变更处理则可能涉及到多个数据表的多次操作，而这已经是仓储接口和仓储实现需要考虑的问题。现在对一个聚合的一次操作一定应该在一个完整的事务里面，以保障实际的事务完整性要求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n按实际对象分析思路，在<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">领域模型中的领域对象分析应该按照从顶向下的思路进行展开，如果这样的话首先识别到的就是聚合根对象，然后再考虑对聚合根对象进行展开</SPAN>，在聚合根对象的展开过程中进一步细化子实体之间的关联和依赖关系。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n领域模型-规格模式</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于Specification模式是在第九章讲解将隐式概念转变为显式概念的时候讲到的，首先为何会单独剥离规格类，书里面的最重要解释就是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">对于业务规则通常不适合作为entity或value\nobject本身的职责，而且规则的变化和组合也会掩盖领域对象的基本含义</SPAN>。但是如果将规则移出领域层，那么结果会更加糟糕，因为领域代码本身就不再很好的表达业务模型了。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于Specification模式的主要应用场景书里面谈到三点，即：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n验证对象，检验对象本身是否满足某些业务要求</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n从集合中选择符合特定业务规则的对象或对象子集</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n指定在创建新对象的时候必须要满足某种业务要求</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果从以上几点来看的话，对于规格模式可以更多的看做是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">对业务实现过程中业务规则的单独剥离，放到独立的规格类来实现，主要就是处理业务规则</SPAN>。在谈到这里的时候我们再回顾下领域模型中的几个特定对象：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n实体（Entity）：</SPAN>拥有唯一标识的对象。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n值对象（Value Object）：</SPAN>没有唯一标识的对象。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n工厂（Factory）：</SPAN>定义创建实体的方法。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n资源库（Repository）：</SPAN>管理实体的集合并封装其持久化过程。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务（Service）：</SPAN>实现不能指派或封装在一个单一对象上的操作。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果基于这些核心对象来看，需要增加一些对整个领域模型和模式使用的一些分析。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于最简单的业务对象的业务操作，比如就一个单表用户信息的维护，这种场景下Repository对象下的实体CRUD方法已经够用，但是还是要通过Service对象进一步封装再暴露为服务接口。只有对于复杂对象的时候才启用聚合和工厂模式，这从减轻架构的复杂性上是可以的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于Service对象中的每一个方法最好都是对应明确的业务方法，这些业务方法往往是对应到业务系统前台具体的业务功能或业务操作的。如一个转账操作可以是service层的一个方法，但是在转账操作的实现过程中需要判断用户账户是否有效，用户是否有欠款，那么这些就是业务规则。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于业务规则不需要暴露为Service对象中的具体方法，在不考虑Specification模式的时候可以将具体的业务规则直接写到Service方法里面，但是可以看到会导致Service对象变重，而对于Service对象更多应该只是下层对象的方法调用和方法组合。因此才会出现将业务规则单独抽取为独立的方法，同时新增加一个规则类类存储这些规则和方法。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这样处理后，整个逻辑和思路和常见的SOA架构方法论就能够更好的对应和映射，即：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n实体和仓储类：</SPAN>更多的是承载对象的CRUD数据操作，不承载过多的业务规则。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n规格类：</SPAN>承载业务规则，是在实体和仓储类外的业务规则和逻辑校验实现等。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nService类：</SPAN>对上面两类对象中方法的调用和组合，本身并没有太多的业务和规则实现。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果按照这种方法来实现，那么Service中的方法更多都可以转化为后期的BPEL服务编排方式来实现。另外对于规则类是否可以直接访问DAO层，在书里面是可以的，即这部分规则实现是不走实体和仓储类的。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n领域模型-工厂和仓储</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先为什么需要工厂Factory，因为有了聚合的概念，很多时候我们需要创建Aggregate整个聚合，创建过程很复杂，如果我们把这个创建职责分配给聚合里面的任何一个Entity来说都是不合适的，一个是暴露了聚合内部的结构破坏了边界，一个是聚合内的实体承担了本身不应该自己承担的职责。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此应该<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">将创建复杂对象的实例和聚合的职责转移给一个单独的对象</SPAN>，这个对象本身在领域模型中可能没有职责，但是它仍然是领域模型的一部分。提供一个封装所有复杂装配操作的接口，而且这个接口应该不需要客户引用要被实例化的对象的具体类。在创建Aggregate的时候要把它作为一个整体，并确保它满足固定规则。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而设计模式里面的工厂模式，则强调的是工厂提供一个公共的接口，可以根据我们的需求灵活的返回不同的实现该接口的对象实例。对象的创建和实例化由工厂来完成，而不是简单的由对象的构造函数完成。而实际领域模型里面的Factory往往并没有这么复杂，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">仅仅是接管复杂聚合对象的创建和实例化而已</SPAN>。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于简单的Entity，或者本身不存在聚合的时候是不需要再加上Factory类的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于仓储Repository需要说明两个方面的内容。<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一个是解决持久化的问题，一个是对数据层做屏蔽，</SPAN>避免应用或展现层直接跳过领域层对数据库进行操作而使领域模型最终无用。在有了Repository后，我们不再关心对象的存储和访问操作，而将重心真正转移到领域模型本身。或者叫使应用程序和领域设计与持久化技术解耦。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于工厂和仓储的关系，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">工厂负责对象生命周期的开始，而仓储负责对象生命周期的中间或结束。</SPAN>当对象驻留在内存或对象数据库的时候很好理解。但是至少有一部分数据会持久化存在到类似关系型数据库或文件中，这样检索出来的数据就必须重建为对象形式。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于工厂和仓储的协同，有些理解和书上有些不一致。个人理解<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">工厂不仅仅应该关注复杂对象的创建，同时也应该关注复杂对象的保存。工厂不负责对象的持久化，工厂将持久化职责委托到仓储来完成。</SPAN>仓储不应该直接和应用层打交道，对于整个领域层来说。和应用层打交道的是Service接口，而和持久化层打交道的是Repository接口而已。和书里面理解最大的差异就是Repository没有保留给Client，也不是Repository委托Factory来重建对象。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n举一个场景来说，根据订单号获取一个聚合复杂对象采购订单，对采购订单进行修改后再进行保存。这个时候和持久化层存在两次交互，第一次是数据的读取，第二次是修改后数据的存入。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于数据读取，到领域层则是Factory需要实例化一个聚合对象并返回应用层。而Factory将该工作分解到聚合里美的每一个子实体，子实体通过Repository接口获取到ResultSet并进行OR转换后返回，Factory将拿到的所有实例化对象进行聚合返回一个完整的聚合对象实例。对于数据存储，仍然应该是Factory接管该操作，然后对数据进行分解后分别调用聚合中的每一个实体的仓储接口本身的保存方法，对数据进行持久化，在Factory层进行完整的事务控制并返回结果。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n领域服务层的构建</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/a68fc4def9b64b0d82236185ae3ee2a7?from=pc\" IMG_WIDTH=\"595\" IMG_HEIGHT=\"366\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_5361599265304000\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在当前的领域分层架构中没有服务层的概念，在领域层和应用层都有服务，可以将服务层进一步抽取出来，服务层即向应用层提供所有的服务能力。这个服务能力不仅仅是原子服务能力，也包括了组合服务能力。对于服务层提供的服务能力，由服务层控制事务。对于进一步的服务编排，则在应用层进行完成，如果完全基于SOA参考架构，则在上面还会有BPM或BPEL层，重点是对原子服务进行组装和编排。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在领域建模中的整体思路中，我们做两个层面的理解：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n其一是领域模型层重点是隔离传统的数据表并抽象为领域对象；</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n其二将应用层和领域模型层解耦，模型层提供的能力是以领域服务的方式暴露。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于最贫血的领域服务层，就是一个DAL层封装的服务化，即只提供数据库表CRUD能力的服务化，在这种情况下基本满足所有的业务处理和应用需求，但是领域服务层没有任何领域逻辑，也没有领域对象的转换。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而我们这种需要的领域服务主要包括三个方面的内容：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n其一是领域对象识别，然后将领域对象的类似CRUD操作暴露为服务；</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n其二是对于核心的业务规则的识别，将业务规则识别为业务服务；</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n其三是组合服务，根据业务场景需要将几个原子服务组合为一个更大的服务。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域对象我前面已经谈到过，领域对象是具有完整相同的生命周期的对象，领域对象中的各个子对象不能脱离主对象独立存在。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在领域对象识别中必须要首先识别核心的实体对象，再根据实体对象的属性需求来识别值对象，领域对象识别清楚了再根据业务场景的需求考虑领域对象的能力暴露。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域对象中有一个核心就是将数据库表对象转化为领域对象，并将领域对象的能力暴露为粗粒度的服务，即数据库的CRUD能力转换为了对象的生命周期操作能力。但是在这种分析模式下容易遗漏业务规则转换为业务服务部分的能力需求，这类业务服务往往需要在对象关联依赖和真实业务场景和用例活动中才能够识别。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"font-family:\">在引入了领域对象层和领域服务层后，需要对传统的分层架构进行调整。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先是引入领域对象，对原有的数据库表对象进行第一层抽象，数据接口转换为对象接口；其次是对原有的展现层和逻辑层进行解耦，引入领域服务层，在领域服务层需要承载业务逻辑，但是又不是完全承载；初步思考的是原有的业务逻辑层的内容有1/3左右划分到应用层；而2/3左右能够下沉到领域服务层。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域服务层贫血很多时候可以追溯到原有分层架构中本身的业务逻辑层就贫血，业务逻辑层逻辑都放到应用层和数据库存储过程中，自然转换到领域建模中也存在贫血的问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域对象服务中的领域对象本身就是多个数据表的汇聚，所有对象服务可以解决对象级的事务问题，如订单保存中头和明细的操作严格控制在一个事务里面。但是对于领域服务层的组合服务仍可能存在分布式事务的问题，在这里还是建议基于BASE模式思路进行操作。还有一个方式就是对于组合服务而言，不用直接对原子服务进行组合，而是对原子服务下层的对象级操作API进行组合，这样即方便启用数据库层或逻辑层的事务进行事务控制。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n基于领域驱动思路下业务系统构建</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; height: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/0140607e90c44ce58f3073d5af0effa9?from=pc\" IMG_WIDTH=\"923\" IMG_HEIGHT=\"650\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_39771599265206997\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在前面已经谈到，对于贫血的领域层，主要体现在两个方面，一个是没有领域业务对象的概念（领域模型中的聚合根），一个是没有明确的粗粒度的业务规则逻辑处理层。在这种情况下，原有的业务逻辑层变化为仅仅是DAL层的一个简单封装或通道，实际的业务处理全部转化到action层或dal层进行了处理，导致无法真正提炼一个业务模块真正应该具备的领域服务能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n粗粒度的领域服务提供包括两个方面，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一个是完整的领域业务对象提供的数据服务，一个是处理业务规则和逻辑用的业务服务。</SPAN>在领域驱动设计中，前者部分在仓储模型中完成，后者在service中完成。这里要注意DDD里面的service，和我们基于SOA分析和设计中的服务层仍然还是有差别，所有的共性的，应该提供给应用层访问的粗粒度的能力都应该抽象为服务层的服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在当前的领域分层架构中没有服务层的概念，在领域层和应用层都有服务，可以将服务层进一步抽取出来，服务层即向应用层提供所有的服务能力。这个服务能力不仅仅是原子服务能力，也包括了组合服务能力。对于服务层提供的服务能力，由服务层控制事务。对于进一步的服务编排，则在应用层进行完成，如果完全基于SOA参考架构，则在上面还会有BPM或BPEL层，重点是对原子服务进行组装和编排。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实体要考虑两个层面，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一个是完全的data\nentity，一个含操作的entity</SPAN>，为了考虑在SOA架构中的数据和操作分离，建议还是采用完全的data\nentity实体，这个时候这种实体可以进一步作为跨层传输的DTO对象。而对于原有的DAO层，也不仅仅是实现数据的持久化，很多OR-Mapping操作也会在该层完成。数据层关注的是数据对象即和数据库一一映射的表，而领域层关注的是领域对象（可能涉及多张强聚合的表）；数据层最终关心的是数据对象的持久化，而领域层关心的是业务对象全生命周期的管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在考虑了数据和操作分离后，对于聚合根的业务对象应该有一个专门的业务对象类，来处理所有和业务对象属性，状态变化相关的操作，即控制业务对象完整的数据和生命周期。而service类本身不应该对数据进行任何cud操作，service类的所有操作都应该转入到业务对象类中进行处理。在这种模式下service类目的仅仅是处理业务规则和逻辑，最终处理结果的落地仍然通过业务对象类来完成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n业务系统的构建，不是简单的横向分层，还包括了纵向的分业务模块和业务组件。在领域驱动设计里面没有太多的对这两块结合的描述。在这里要注意两个方面的内容，一个是每一个业务组件都会向上层提供领域服务能力，第二每一个业务组件也会向其它业务组件提供领域服务能力。</P>\n</DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Sat, 05 Sep 2020 00:16:40 +0000","feedId":4798,"bgimg":"http://s9.sinaimg.cn/mw690/001l8XD7zy7GbDXZLIY48&690","linkMd5":"7f43f3fc4b8cd82e267e2e8effe1ba65","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn56@2020_1/2020/09/05/07-05-12-368_5fe50238fd2baf1b.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s9.sinaimg.cn/mw690/001l8XD7zy7GbDXZLIY48&690":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn56@2020_1/2020/09/05/07-05-12-368_5fe50238fd2baf1b.webp","https://p1-tt.byteimg.com/origin/pgc-image/6431794b5b284ca2bf72c38af478462a?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn60@2020_2/2020/09/05/07-05-14-182_7be27bd5c7e8d7c8.webp","https://p3-tt.byteimg.com/origin/pgc-image/6a36f6bc53eb4ea795e029f2bb4d73c8?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn3@2020_4/2020/09/05/07-05-13-745_9a764fc4f229ee14.webp","https://p1-tt.byteimg.com/origin/pgc-image/110c115668fc4a9abf8907c16febe725?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn79@2020_3/2020/09/05/07-05-13-382_2d362c47db18256f.webp","https://p1-tt.byteimg.com/origin/pgc-image/3fe857bee1954f64996ce28bfee28648?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn79@2020_4/2020/09/05/07-05-14-577_efb4a6643ac8ee93.webp","https://p6-tt.byteimg.com/origin/pgc-image/3f3a80375e924262ab045dd99d8c661c?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn91@2020_3/2020/09/05/07-06-14-804_b2be74cf6f19637c.webp","https://p3-tt.byteimg.com/origin/pgc-image/1e3b05c456fc4053a4ea5beba7be1e5f?from=pc":null,"https://p1-tt.byteimg.com/origin/pgc-image/a68fc4def9b64b0d82236185ae3ee2a7?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn100@2020_6/2020/09/05/07-05-14-264_c5c905759c2baae4.webp","https://p1-tt.byteimg.com/origin/pgc-image/0140607e90c44ce58f3073d5af0effa9?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn19@2020_3/2020/09/05/07-05-13-682_410d20cb83f4d9f6.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn8@2020_6/2020/09/05/07-05-15-434_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1599289509731}],"record":{"createdTime":"2020-09-05 15:05:09","updatedTime":"2020-09-05 15:05:09","feedId":4798,"fetchDate":"Sat, 05 Sep 2020 07:05:09 +0000","fetchMs":1800,"handleMs":102,"totalMs":71812,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"5c42297a66e1fc12647663a9d2091c77","hostName":"us-022*","requestId":"d650e6a2178c48548a1ecb8618404f0b_4798","contentType":"text/xml; charset=utf-8","totalBytes":1381792,"bgimgsTotal":4,"bgimgsGithubTotal":4,"articlesImgsTotal":43,"articlesImgsGithubTotal":40,"successGithubMap":{"myreaderx8":1,"myreaderx15":1,"myreaderx7":1,"myreaderx16":2,"myreaderx6":2,"myreaderx4":2,"myreaderx32":1,"myreaderx10":1,"myreaderx33":2,"myreaderx3":1,"myreaderx11":1,"myreaderx12":2,"myreaderx2":1,"myreaderx1":1,"myreaderx13":1,"myreaderx30":2,"myreaderx31":2,"myreaderx18":1,"myreaderx19":1,"myreaderx":2,"myreaderx25":1,"myreaderx27":2,"myreaderx21":2,"myreaderx22":1,"myreaderx24":2,"myreaderx5oss":2,"myreaderx29":2},"failGithubMap":{"myreaderx14":1,"myreaderx23":2}},"feed":{"createdTime":"2020-08-25 04:29:54","updatedTime":"2020-09-01 11:00:05","id":4798,"name":"人月神话的BLOG","url":"http://blog.sina.com.cn/rss/cmmi.xml","subscriber":null,"website":null,"icon":"http://blog.sina.com.cn/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn72@2020_5/2020/09/01/02-56-27-777_08bc756793a1bd4b.ico","description":"","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-09-05 15:06:17","updatedTime":"2020-09-05 15:06:17","id":null,"feedId":4798,"linkMd5":"3b7d142d5e96c3a26cb01ce30cb9df2c"},{"createdTime":"2020-09-05 15:06:17","updatedTime":"2020-09-05 15:06:17","id":null,"feedId":4798,"linkMd5":"7f43f3fc4b8cd82e267e2e8effe1ba65"}],"tmpCommonImgCdnBytes":9616,"tmpBodyImgCdnBytes":1372176,"tmpBgImgCdnBytes":0,"extra4":{"start":1599289505545,"total":0,"statList":[{"spend":4126,"msg":"获取xml内容"},{"spend":102,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":64121,"msg":"正文链接上传到cdn"}]},"extra5":43,"extra6":43,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/1e3b05c456fc4053a4ea5beba7be1e5f?from=pc","sourceStatusCode":200,"destWidth":826,"destHeight":424,"sourceBytes":22250,"destBytes":14848,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":473,"convertSpendMs":34,"createdTime":"2020-09-05 15:05:13","host":"us-031*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn95/contents/2020/09/05/07-05-13-686_4811de2fac73dde5.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:05:13 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D716:575F:E89E0:2892CB:5F53389C"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291956"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn95/contents/2020/09/05/07-05-13-686_4811de2fac73dde5.webp","historyStatusCode":[],"spendMs":52},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.7 KB","destSize":"14.5 KB","compressRate":"66.7%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/1e3b05c456fc4053a4ea5beba7be1e5f?from=pc","sourceStatusCode":200,"destWidth":826,"destHeight":424,"sourceBytes":22250,"destBytes":14848,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":118,"convertSpendMs":15,"createdTime":"2020-09-05 15:05:13","host":"us-031*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn95/contents/2020/09/05/07-05-13-830_4811de2fac73dde5.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:05:13 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["D716:575F:E89E3:2894D3:5F5338A9"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291956"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn95/contents/2020/09/05/07-05-13-830_4811de2fac73dde5.webp","historyStatusCode":[],"spendMs":38},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.7 KB","destSize":"14.5 KB","compressRate":"66.7%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/9f7d7126946c45c7b1f5422e4a616971?from=pc","sourceStatusCode":200,"destWidth":841,"destHeight":586,"sourceBytes":50132,"destBytes":34964,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1295,"convertSpendMs":25,"createdTime":"2020-09-05 15:05:13","host":"europe-57*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn83/contents/2020/09/05/07-05-14-309_fbb256b46f798553.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:05:14 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E34A:BAC3:17ECC9FE:1CE5CF80:5F5338A1"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291956"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn83/contents/2020/09/05/07-05-14-309_fbb256b46f798553.webp","historyStatusCode":[],"spendMs":349},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49 KB","destSize":"34.1 KB","compressRate":"69.7%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/9f7d7126946c45c7b1f5422e4a616971?from=pc","sourceStatusCode":200,"destWidth":841,"destHeight":586,"sourceBytes":50132,"destBytes":34964,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":147,"convertSpendMs":23,"createdTime":"2020-09-05 15:05:14","host":"us-014*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn83/contents/2020/09/05/07-05-14-816_fbb256b46f798553.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:05:14 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E350:66DE:1149E1A:1C71197:5F5338AA"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291956"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn83/contents/2020/09/05/07-05-14-816_fbb256b46f798553.webp","historyStatusCode":[],"spendMs":51},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49 KB","destSize":"34.1 KB","compressRate":"69.7%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/db670ce7ff054fc08058a1e34695b8a5?from=pc","sourceStatusCode":200,"destWidth":775,"destHeight":477,"sourceBytes":47922,"destBytes":30592,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3828,"convertSpendMs":27,"createdTime":"2020-09-05 15:05:13","host":"us-006*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn39/contents/2020/09/05/07-05-17-059_2a9f3513dac2976a.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:05:17 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A748:4771:3CF9D7:89E884:5F5338AA"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291951"],"x-ratelimit-used":["62"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn39/contents/2020/09/05/07-05-17-059_2a9f3513dac2976a.webp","historyStatusCode":[],"spendMs":46},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.8 KB","destSize":"29.9 KB","compressRate":"63.8%"},null,{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/db670ce7ff054fc08058a1e34695b8a5?from=pc","sourceStatusCode":200,"destWidth":775,"destHeight":477,"sourceBytes":47922,"destBytes":30592,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3828,"convertSpendMs":27,"createdTime":"2020-09-05 15:05:13","host":"us-006*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn39/contents/2020/09/05/07-05-17-059_2a9f3513dac2976a.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:05:17 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A748:4771:3CF9D7:89E884:5F5338AA"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291951"],"x-ratelimit-used":["62"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn39/contents/2020/09/05/07-05-17-059_2a9f3513dac2976a.webp","historyStatusCode":[],"spendMs":46},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.8 KB","destSize":"29.9 KB","compressRate":"63.8%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-018.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-023.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://s13.sinaimg.cn/mw690/001l8XD7zy7G8A8l7f61c&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn47@2020_2/2020/09/05/07-05-12-008_44c9fafbcd31740b.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2954,"convertSpendMs":17,"createdTime":"2020-09-05 15:05:09","host":"us-027*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20,bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"http://s13.sinaimg.cn/mw690/001l8XD7zy7G7vwB6bi8c&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn44@2020_1/2020/09/05/07-05-11-972_4b23fe6a2f984860.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3010,"convertSpendMs":25,"createdTime":"2020-09-05 15:05:09","host":"us-039*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c,3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"http://s9.sinaimg.cn/mw690/001l8XD7zy7GbDXZLIY48&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn56@2020_1/2020/09/05/07-05-12-368_5fe50238fd2baf1b.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3309,"convertSpendMs":11,"createdTime":"2020-09-05 15:05:09","host":"us-002*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65,7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"http://s13.sinaimg.cn/mw690/001l8XD7zy7Ga11IHmc1c&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn52@2020_5/2020/09/05/07-05-12-382_1f382897d1f41ec2.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3408,"convertSpendMs":10,"createdTime":"2020-09-05 15:05:09","host":"us-014*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0,2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/110c115668fc4a9abf8907c16febe725?from=pc","sourceStatusCode":200,"destWidth":676,"destHeight":505,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn79@2020_3/2020/09/05/07-05-13-382_2d362c47db18256f.webp","sourceBytes":60158,"destBytes":50810,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1034,"convertSpendMs":17,"createdTime":"2020-09-05 15:05:13","host":"us-014*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"58.7 KB","destSize":"49.6 KB","compressRate":"84.5%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/b7b4dfc494cb448a9d98563c25df9b08?from=pc","sourceStatusCode":200,"destWidth":755,"destHeight":440,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn91@2020_3/2020/09/05/07-05-13-403_5c4a49398dbf927a.webp","sourceBytes":77746,"destBytes":73204,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1036,"convertSpendMs":41,"createdTime":"2020-09-05 15:05:13","host":"us-53*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"75.9 KB","destSize":"71.5 KB","compressRate":"94.2%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/57700ec5bbef4b56ac5fb39b2822e4c5?from=pc","sourceStatusCode":200,"destWidth":776,"destHeight":487,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn36@2020_3/2020/09/05/07-05-13-443_9c750d36f56c4b5a.webp","sourceBytes":56735,"destBytes":32236,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1053,"convertSpendMs":19,"createdTime":"2020-09-05 15:05:13","host":"us-018*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.4 KB","destSize":"31.5 KB","compressRate":"56.8%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/5347ba3e58524b2ca3ad694ecb518af1?from=pc","sourceStatusCode":200,"destWidth":659,"destHeight":477,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn75@2020_3/2020/09/05/07-05-13-590_01f9baf8fa011f4b.webp","sourceBytes":52007,"destBytes":39892,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1200,"convertSpendMs":22,"createdTime":"2020-09-05 15:05:13","host":"us-006*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.8 KB","destSize":"39 KB","compressRate":"76.7%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/ccc666542ae04a3d9cf251c3b6e2de5e?from=pc","sourceStatusCode":200,"destWidth":813,"destHeight":443,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn59@2020_5/2020/09/05/07-05-13-629_b236deda0d4c1658.webp","sourceBytes":21800,"destBytes":14292,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1192,"convertSpendMs":11,"createdTime":"2020-09-05 15:05:13","host":"us-010*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.3 KB","destSize":"14 KB","compressRate":"65.6%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/6a36f6bc53eb4ea795e029f2bb4d73c8?from=pc","sourceStatusCode":200,"destWidth":760,"destHeight":445,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn3@2020_4/2020/09/05/07-05-13-745_9a764fc4f229ee14.webp","sourceBytes":26887,"destBytes":19008,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1318,"convertSpendMs":21,"createdTime":"2020-09-05 15:05:13","host":"us-006*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.3 KB","destSize":"18.6 KB","compressRate":"70.7%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/0140607e90c44ce58f3073d5af0effa9?from=pc","sourceStatusCode":200,"destWidth":923,"destHeight":650,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn19@2020_3/2020/09/05/07-05-13-682_410d20cb83f4d9f6.webp","sourceBytes":78600,"destBytes":39882,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1310,"convertSpendMs":20,"createdTime":"2020-09-05 15:05:13","host":"us-002*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"76.8 KB","destSize":"38.9 KB","compressRate":"50.7%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/dea352ead6184d6fbf3b6a15f73fa1eb?from=pc","sourceStatusCode":200,"destWidth":774,"destHeight":395,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn7@2020_4/2020/09/05/07-05-13-699_b22434a36c015e66.webp","sourceBytes":72730,"destBytes":54490,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1334,"convertSpendMs":39,"createdTime":"2020-09-05 15:05:13","host":"us-039*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"71 KB","destSize":"53.2 KB","compressRate":"74.9%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/2026b1fb9e994342a9bab7ed68cd7702?from=pc","sourceStatusCode":200,"destWidth":727,"destHeight":491,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn72@2020_5/2020/09/05/07-05-13-676_af6280131296234c.webp","sourceBytes":58598,"destBytes":40060,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1360,"convertSpendMs":40,"createdTime":"2020-09-05 15:05:13","host":"us-039*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"57.2 KB","destSize":"39.1 KB","compressRate":"68.4%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/e7a2f493c0ee42219c28f240f1111ce5?from=pc","sourceStatusCode":200,"destWidth":768,"destHeight":361,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn28@2020_3/2020/09/05/07-05-13-598_a4f0df0549cf9baa.webp","sourceBytes":33918,"destBytes":23694,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1349,"convertSpendMs":26,"createdTime":"2020-09-05 15:05:13","host":"us-53*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.1 KB","destSize":"23.1 KB","compressRate":"69.9%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/58e38994e58949aa8cdf1eef35cfa832?from=pc","sourceStatusCode":200,"destWidth":730,"destHeight":389,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn75@2020_1/2020/09/05/07-05-13-759_e6dc7c1a9734a1b1.webp","sourceBytes":37391,"destBytes":27622,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1385,"convertSpendMs":35,"createdTime":"2020-09-05 15:05:13","host":"us-027*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.5 KB","destSize":"27 KB","compressRate":"73.9%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/dfic-imagehandler/a5935c6c-5f91-4418-8b94-261b2210c094?from=pc","sourceStatusCode":200,"destWidth":1023,"destHeight":682,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn83@2020_6/2020/09/05/07-05-13-706_f196ad20d63ba639.webp","sourceBytes":140274,"destBytes":51620,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1376,"convertSpendMs":24,"createdTime":"2020-09-05 15:05:13","host":"us-002*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"137 KB","destSize":"50.4 KB","compressRate":"36.8%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/d626e8284f5d4a4aaacead7a25043847?from=pc","sourceStatusCode":200,"destWidth":760,"destHeight":535,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn100@2020_3/2020/09/05/07-05-13-752_076db7b5126438b9.webp","sourceBytes":77282,"destBytes":64802,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1364,"convertSpendMs":34,"createdTime":"2020-09-05 15:05:13","host":"us-018*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"75.5 KB","destSize":"63.3 KB","compressRate":"83.9%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/6431794b5b284ca2bf72c38af478462a?from=pc","sourceStatusCode":200,"destWidth":825,"destHeight":535,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn60@2020_2/2020/09/05/07-05-14-182_7be27bd5c7e8d7c8.webp","sourceBytes":39979,"destBytes":25934,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1902,"convertSpendMs":14,"createdTime":"2020-09-05 15:05:13","host":"europe65*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39 KB","destSize":"25.3 KB","compressRate":"64.9%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/e617fe22c7eb48ac8472b1fc652b7655?from=pc","sourceStatusCode":200,"destWidth":863,"destHeight":460,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn56@2020_2/2020/09/05/07-05-13-607_5372be4b0e4ac9cf.webp","sourceBytes":75579,"destBytes":43368,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":1292,"convertSpendMs":20,"createdTime":"2020-09-05 15:05:13","host":"us-023*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"73.8 KB","destSize":"42.4 KB","compressRate":"57.4%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/a68fc4def9b64b0d82236185ae3ee2a7?from=pc","sourceStatusCode":200,"destWidth":595,"destHeight":366,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn100@2020_6/2020/09/05/07-05-14-264_c5c905759c2baae4.webp","sourceBytes":35488,"destBytes":24840,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2133,"convertSpendMs":19,"createdTime":"2020-09-05 15:05:13","host":"europe-23*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.7 KB","destSize":"24.3 KB","compressRate":"70%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/3fe857bee1954f64996ce28bfee28648?from=pc","sourceStatusCode":200,"destWidth":688,"destHeight":280,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn79@2020_4/2020/09/05/07-05-14-577_efb4a6643ac8ee93.webp","sourceBytes":35971,"destBytes":26566,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2232,"convertSpendMs":10,"createdTime":"2020-09-05 15:05:13","host":"europe69*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"35.1 KB","destSize":"25.9 KB","compressRate":"73.9%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/17599624bc63499c8a20ca796356f79b?from=pc","sourceStatusCode":200,"destWidth":728,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn64@2020_1/2020/09/05/07-05-14-934_952279c3da4c82d0.webp","sourceBytes":42744,"destBytes":29296,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2599,"convertSpendMs":21,"createdTime":"2020-09-05 15:05:13","host":"europe-23*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"41.7 KB","destSize":"28.6 KB","compressRate":"68.5%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/f02c82b35b8b48818cd5c1aaf0c2ff2d?from=pc","sourceStatusCode":200,"destWidth":754,"destHeight":453,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn24@2020_1/2020/09/05/07-05-14-923_52fc504cc1721b1c.webp","sourceBytes":62605,"destBytes":49642,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2790,"convertSpendMs":18,"createdTime":"2020-09-05 15:05:13","host":"europe65*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"61.1 KB","destSize":"48.5 KB","compressRate":"79.3%"},{"code":1,"isDone":false,"source":"http://simg.sinajs.cn/blog7style/images/special/1265.gif","sourceStatusCode":200,"destWidth":20,"destHeight":12,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn8@2020_6/2020/09/05/07-05-15-434_66e9c83d813b7958.webp","sourceBytes":2095,"destBytes":2844,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2964,"convertSpendMs":7,"createdTime":"2020-09-05 15:05:13","host":"europe-56*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0,3b7d142d5e96c3a26cb01ce30cb9df2c,bad4bc5aeaae88a99d04d793afebeb20,7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2 KB","destSize":"2.8 KB","compressRate":"135.8%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/ecd81c4c8f634ed38f763d3baeb163bc?from=pc","sourceStatusCode":200,"destWidth":978,"destHeight":519,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn10@2020_1/2020/09/05/07-05-15-335_d5ef342edcabfe22.webp","sourceBytes":65063,"destBytes":46992,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3209,"convertSpendMs":27,"createdTime":"2020-09-05 15:05:13","host":"europe-57*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"63.5 KB","destSize":"45.9 KB","compressRate":"72.2%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/1670d8b39d7949209cf1ff101b6e1bad?from=pc","sourceStatusCode":200,"destWidth":767,"destHeight":639,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn48@2020_4/2020/09/05/07-05-15-589_fe12f16024b54ce7.webp","sourceBytes":57345,"destBytes":40092,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3383,"convertSpendMs":21,"createdTime":"2020-09-05 15:05:13","host":"europe-57*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56 KB","destSize":"39.2 KB","compressRate":"69.9%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/f955e5f5396b415490f94a0e3b12acf6?from=pc","sourceStatusCode":200,"destWidth":758,"destHeight":542,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn87@2020_6/2020/09/05/07-05-15-729_5c4ae71ee48de6fa.webp","sourceBytes":33374,"destBytes":25850,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":3645,"convertSpendMs":16,"createdTime":"2020-09-05 15:05:13","host":"europe65*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.6 KB","destSize":"25.2 KB","compressRate":"77.5%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/55957de9094446b1bc9ede8e1a665b6a?from=pc","sourceStatusCode":200,"destWidth":878,"destHeight":549,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn71@2020_6/2020/09/05/07-05-16-640_e1dfe6a7d1644a66.webp","sourceBytes":44175,"destBytes":29124,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":4168,"convertSpendMs":49,"createdTime":"2020-09-05 15:05:13","host":"us-018*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43.1 KB","destSize":"28.4 KB","compressRate":"65.9%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/8e0ae80af1154e51af260cf032a23804?from=pc","sourceStatusCode":200,"destWidth":673,"destHeight":445,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn44@2020_3/2020/09/05/07-05-16-545_0815adc5db68d35c.webp","sourceBytes":38144,"destBytes":30640,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":4232,"convertSpendMs":14,"createdTime":"2020-09-05 15:05:13","host":"europe69*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.2 KB","destSize":"29.9 KB","compressRate":"80.3%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/6625a5c80d024cd0b7627c7ace1ab5b0?from=pc","sourceStatusCode":200,"destWidth":718,"destHeight":486,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn68@2020_3/2020/09/05/07-05-16-621_23bbe867a5c7ace8.webp","sourceBytes":65615,"destBytes":56834,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":4405,"convertSpendMs":20,"createdTime":"2020-09-05 15:05:13","host":"europe61*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"64.1 KB","destSize":"55.5 KB","compressRate":"86.6%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/22a6e32ba7734ff8a00bb312c96272e5?from=pc","sourceStatusCode":200,"destWidth":772,"destHeight":422,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn51@2020_4/2020/09/05/07-05-17-062_0d85a82aee78c330.webp","sourceBytes":40041,"destBytes":28226,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":4625,"convertSpendMs":14,"createdTime":"2020-09-05 15:05:13","host":"us-035*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39.1 KB","destSize":"27.6 KB","compressRate":"70.5%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/7acaebdde3d04ba1878a5f3b71a5151c?from=pc","sourceStatusCode":200,"destWidth":754,"destHeight":462,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn95@2020_6/2020/09/05/07-05-18-274_3972f180fa5a23e9.webp","sourceBytes":39062,"destBytes":30474,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":5852,"convertSpendMs":17,"createdTime":"2020-09-05 15:05:13","host":"us-010*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.1 KB","destSize":"29.8 KB","compressRate":"78%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/dfic-imagehandler/85321af1-bb48-4233-93ce-a229f3bf5fb8?from=pc","sourceStatusCode":200,"destWidth":1023,"destHeight":724,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn63@2020_3/2020/09/05/07-05-18-350_c72df8cd600f3ea5.webp","sourceBytes":219842,"destBytes":116472,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":6124,"convertSpendMs":52,"createdTime":"2020-09-05 15:05:13","host":"us-53*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"214.7 KB","destSize":"113.7 KB","compressRate":"53%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/8bb0cc5093a04c75a5a5e591cde7b827?from=pc","sourceStatusCode":200,"destWidth":937,"destHeight":525,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn3@2020_3/2020/09/05/07-05-18-409_d6085a75016a68e0.webp","sourceBytes":79008,"destBytes":49832,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":6241,"convertSpendMs":24,"createdTime":"2020-09-05 15:05:13","host":"europe61*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"77.2 KB","destSize":"48.7 KB","compressRate":"63.1%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/d5d14875108e4da4ae3dfd0f2080400a?from=pc","sourceStatusCode":200,"destWidth":727,"destHeight":438,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn32@2020_4/2020/09/05/07-05-19-145_7550edda72c34652.webp","sourceBytes":39827,"destBytes":26704,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":6697,"convertSpendMs":18,"createdTime":"2020-09-05 15:05:13","host":"us-031*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.9 KB","destSize":"26.1 KB","compressRate":"67%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/a921c88444d14b35963cb7ae101d3220?from=pc","sourceStatusCode":200,"destWidth":706,"destHeight":335,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn88@2020_5/2020/09/05/07-05-19-615_636c320e27f3928e.webp","sourceBytes":29222,"destBytes":25448,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":7178,"convertSpendMs":18,"createdTime":"2020-09-05 15:05:13","host":"us-035*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.5 KB","destSize":"24.9 KB","compressRate":"87.1%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/b72d0fbe1b9f42e4ac7ddbcea50aa3ac?from=pc","sourceStatusCode":200,"destWidth":773,"destHeight":472,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn12@2020_6/2020/09/05/07-05-24-229_6c5b5abd547cdd81.webp","sourceBytes":60766,"destBytes":42144,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":11867,"convertSpendMs":20,"createdTime":"2020-09-05 15:05:13","host":"us-027*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.3 KB","destSize":"41.2 KB","compressRate":"69.4%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/5a394bd8ddb24a168d655b1c3275a47e?from=pc","sourceStatusCode":200,"destWidth":776,"destHeight":462,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn67@2020_5/2020/09/05/07-05-31-595_05ddd80ba8af9614.webp","sourceBytes":51055,"destBytes":29388,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":19221,"convertSpendMs":23,"createdTime":"2020-09-05 15:05:13","host":"us-031*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49.9 KB","destSize":"28.7 KB","compressRate":"57.6%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/379398d6b1ec48119aa4695cdea28b3a?from=pc","sourceStatusCode":200,"destWidth":706,"destHeight":518,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn15@2020_2/2020/09/05/07-05-46-488_4cc3e3b8f4e7affd.webp","sourceBytes":47801,"destBytes":32560,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":4052,"convertSpendMs":16,"createdTime":"2020-09-05 15:05:43","host":"us-014*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.7 KB","destSize":"31.8 KB","compressRate":"68.1%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/3f3a80375e924262ab045dd99d8c661c?from=pc","sourceStatusCode":200,"destWidth":841,"destHeight":570,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn91@2020_3/2020/09/05/07-06-14-804_b2be74cf6f19637c.webp","sourceBytes":37137,"destBytes":27294,"targetWebpQuality":75,"feedId":4798,"totalSpendMs":2366,"convertSpendMs":18,"createdTime":"2020-09-05 15:06:13","host":"europe61*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.3 KB","destSize":"26.7 KB","compressRate":"73.5%"}],"successGithubMap":{"myreaderx8":1,"myreaderx15":1,"myreaderx7":1,"myreaderx16":2,"myreaderx6":2,"myreaderx4":2,"myreaderx32":1,"myreaderx10":1,"myreaderx33":2,"myreaderx3":1,"myreaderx11":1,"myreaderx12":2,"myreaderx2":1,"myreaderx1":1,"myreaderx13":1,"myreaderx30":2,"myreaderx31":2,"myreaderx18":1,"myreaderx19":1,"myreaderx":2,"myreaderx25":1,"myreaderx27":2,"myreaderx21":2,"myreaderx22":1,"myreaderx24":2,"myreaderx5oss":2,"myreaderx29":2},"failGithubMap":{"myreaderx14":1,"myreaderx23":2}}