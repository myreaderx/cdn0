{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2021-07-15 01:38:56","updatedTime":"2021-07-15 01:38:56","title":"面试：TCP协议经典十五连问！","link":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGRlStMPArOeP2x89l2YcloLKOHaMP94aQ9veAWnUXBLn8BdRaWgVCXA/0?wx_fmt=jpeg?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n                    \n                    \n                    <section data-tool=\"mdnice编辑器\" data-website=\"https://www.mdnice.com\" style=\"font-size: 16px;color: black;padding-right: 10px;padding-left: 10px;line-height: 1.6;letter-spacing: 0px;word-break: break-word;text-align: left;font-family: PingFangSC-Light;\" data-mpa-powered-by=\"yiban.io\"><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>前言<span style=\"display: none;\"></span></h3><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">TCP协议是大厂面试必问的知识点。整理了15道非常经典的TCP面试题，希望大家都找到理想的offer呀</p><p style=\"text-align: center;\"><img class=\"rich_pages js_insertlocalimg\" data-ratio=\"0.43359375\" data-s=\"300,640\" data-type=\"png\" data-w=\"1280\" style=\"max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGxBVM3XODd9eIjfSptS5K8bMHMwxCVqV4vVeyBcib25mRBFqCqADN14g/640?wx_fmt=png\"></p><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\"><strong style=\"font-weight: border;color: #0e88eb;\"></strong></section><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>1.  讲下TCP三次握手流程<span style=\"display: none;\"></span></h3><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"1.3748326639892905\" data-type=\"png\" data-w=\"747\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZG0Pq4BlibjdTLTmxf0o7Dic18o8iaDKONvjpp5ompia6JicOricF3puAobTFg/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">开始客户端和服务器都处于CLOSED状态，然后服务端开始监听某个端口，进入LISTEN状态</p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">第一次握手(SYN=1, seq=x)，发送完毕后，客户端进入 SYN_SEND 状态</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">第二次握手(SYN=1, ACK=1, seq=y, ACKnum=x+1)， 发送完毕后，服务器端进入 SYN_RCVD 状态。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">第三次握手(ACK=1，ACKnum=y+1)，发送完毕后，客户端进入 ESTABLISHED 状态，当服务器端接收到这个包时,也进入 ESTABLISHED 状态，TCP 握手，即可以开始数据传输。</section></li></ul><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>2.TCP握手为什么是三次，不能是两次？不能是四次？<span style=\"display: none;\"></span></h3><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">TCP握手为什么是三次呢？为了方便理解，我们以谈恋爱为例子：两个人能走到一起，最重要的事情就是相爱，就是<strong style=\"font-weight: border;color: #0e88eb;\">我爱你，并且我知道，你也爱我</strong>，接下来我们以此来模拟三次握手的过程：</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"2.2149122807017543\" data-type=\"png\" data-w=\"456\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZG5M6jAQ1axxMc24zo24lmzQicjWQNF4d9YEBWrkH5vibn3j0Ov7GYafrg/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\"><strong style=\"font-weight: border;color: #0e88eb;\">为什么握手不能是两次呢？</strong></p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">如果只有两次握手，女孩子可能就不知道，她的那句<strong style=\"font-weight: border;color: #0e88eb;\">我也爱你</strong>，男孩子是否<strong style=\"font-weight: border;color: #0e88eb;\">收到</strong>，恋爱关系就不能愉快展开。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\"><strong style=\"font-weight: border;color: #0e88eb;\">为什么握手不能是四次呢？</strong></p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">因为握手不能是四次呢？因为三次已经够了，三次已经能让双方都知道：你爱我，我也爱你。而四次就多余了。</p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>3. 讲下TCP四次挥手过程<span style=\"display: none;\"></span></h3><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"1.0821643286573146\" data-type=\"png\" data-w=\"998\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGVRl1TbwY0QiaUE1N2W4Oic8rbJr52cZTb6WWICr6p9ibuibw8DPLddTTPw/640?wx_fmt=png\"></figure><ol data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">第一次挥手(FIN=1，seq=u)，发送完毕后，客户端进入FIN_WAIT_1 状态</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">第二次挥手(ACK=1，ack=u+1,seq =v)，发送完毕后，服务器端进入CLOSE_WAIT 状态，客户端接收到这个确认包之后，进入 FIN_WAIT_2 状态</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">第三次挥手(FIN=1，ACK1,seq=w,ack=u+1)，发送完毕后，服务器端进入LAST_ACK 状态，等待来自客户端的最后一个ACK。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">第四次挥手(ACK=1，seq=u+1,ack=w+1)，客户端接收到来自服务器端的关闭请求，发送一个确认包，并进入 TIME_WAIT状态，<strong style=\"font-weight: border;color: #0e88eb;\">等待了某个固定时间（两个最大段生命周期，2MSL，2 Maximum Segment Lifetime）之后</strong>，没有收到服务器端的 ACK ，认为服务器端已经正常关闭连接，于是自己也关闭连接，进入 CLOSED 状态。服务器端接收到这个确认包之后，关闭连接，进入 CLOSED 状态。</section></li></ol><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>4. TCP挥手为什么需要四次呢？<span style=\"display: none;\"></span></h3><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">举个例子吧!</p><blockquote data-tool=\"mdnice编辑器\" style=\"border-width: initial;border-style: none;border-color: initial;font-size: 0.9em;overflow: auto;margin-bottom: 20px;margin-top: 20px;padding-top: 10px;padding-right: 10px;padding-bottom: 10px;line-height: 1.8;border-radius: 0px 0px 10px 10px;color: rgb(14, 136, 235);background: rgb(255, 255, 255);box-shadow: rgb(132, 161, 168) 0px 10px 15px;\"><span style=\"font-size: 4em;font-family: Arial, serif;line-height: 1em;font-weight: 700;\">★</span><p style=\"padding-top: 8px;padding-bottom: 8px;letter-spacing: 0.2em;word-spacing: 0.1em;line-height: 26px;font-size: 15px;display: inline;\">小明和小红打电话聊天，通话差不多要结束时，小红说“我没啥要说的了”，小明回答“我知道了”。但是小明可能还会有要说的话，小红不能要求小明跟着自己的节奏结束通话，于是小明可能又叽叽歪歪说了一通，最后小明说“我说完了”，小红回答“知道了”，这样通话才算结束。</p><span style=\"float: right;font-size: 3em;line-height: 1em;\">”</span></blockquote><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"1.7050243111831442\" data-type=\"png\" data-w=\"617\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGc8wnIlVOcXLia5iaTT3au4uibFBS1lSW5Zdic2xLtKJzId4zBwE7s3TnjQ/640?wx_fmt=png\"></figure><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>5. TIME-WAIT 状态为什么需要等待 2MSL<span style=\"display: none;\"></span></h3><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"1.1179540709812108\" data-type=\"png\" data-w=\"958\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGcmrVMle4KZubY5Tciae8HO8wnpzPUZthmTXY8PpmoYjZ4FXC9ibRz0ug/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">2MSL，2 Maximum Segment Lifetime，即两个最大段生命周期</p><blockquote data-tool=\"mdnice编辑器\" style=\"border-width: initial;border-style: none;border-color: initial;font-size: 0.9em;overflow: auto;margin-bottom: 20px;margin-top: 20px;padding-top: 10px;padding-right: 10px;padding-bottom: 10px;line-height: 1.8;border-radius: 0px 0px 10px 10px;color: rgb(14, 136, 235);background: rgb(255, 255, 255);box-shadow: rgb(132, 161, 168) 0px 10px 15px;\"><span style=\"font-size: 4em;font-family: Arial, serif;line-height: 1em;font-weight: 700;\">★</span><ul style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;color: black;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">1个 MSL 保证四次挥手中主动关闭方最后的 ACK 报文能最终到达对端</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">1个 MSL 保证对端没有收到 ACK 那么进行重传的 FIN 报文能够到达</section></li></ul><span style=\"float: right;font-size: 3em;line-height: 1em;\">”</span></blockquote><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>6.TCP 和 UDP 的区别<span style=\"display: none;\"></span></h3><ol data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">TCP面向连接（（如打电话要先拨号建立连接）;UDP是无连接的，即发送数据之前不需要建立连接。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">TCP要求安全性，提供可靠的服务，通过TCP连接传送的数据，不丢失、不重复、安全可靠。而UDP尽最大努力交付，即不保证可靠交付。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">TCP是点对点连接的，UDP一对一，一对多，多对多都可以</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">TCP传输效率相对较低,而UDP传输效率高，它适用于对高速传输和实时性有较高的通信或广播通信。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">TCP适合用于网页，邮件等;UDP适合用于视频，语音广播等</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">TCP面向字节流，UDP面向报文</section></li></ol><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>7. TCP报文首部有哪些字段，说说其作用<span style=\"display: none;\"></span></h3><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"0.43208191126279866\" data-type=\"png\" data-w=\"1465\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGwoic656sZhv2TiaWBoaZtibN0ZzXdY7oJn0RUzjhKpa8KavmicSzQCYVOA/640?wx_fmt=png\"></figure><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\"><strong style=\"font-weight: border;color: #0e88eb;\">16位端口号</strong>：源端口号，主机该报文段是来自哪里；目标端口号，要传给哪个上层协议或应用程序</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\"><strong style=\"font-weight: border;color: #0e88eb;\">32位序号</strong>：一次TCP通信（从TCP连接建立到断开）过程中某一个传输方向上的字节流的每个字节的编号。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\"><strong style=\"font-weight: border;color: #0e88eb;\">32位确认号</strong>：用作对另一方发送的tcp报文段的响应。其值是收到的TCP报文段的序号值加1。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\"><strong style=\"font-weight: border;color: #0e88eb;\">4位头部长度</strong>：表示tcp头部有多少个32bit字（4字节）。因为4位最大能标识15，所以TCP头部最长是60字节。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\"><strong style=\"font-weight: border;color: #0e88eb;\">6位标志位</strong>：URG(紧急指针是否有效)，ACk（表示确认号是否有效），PSH（缓冲区尚未填满），RST（表示要求对方重新建立连接），SYN（建立连接消息标志接），FIN（表示告知对方本端要关闭连接了）</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\"><strong style=\"font-weight: border;color: #0e88eb;\">16位窗口大小</strong>：是TCP流量控制的一个手段。这里说的窗口，指的是接收通告窗口。它告诉对方本端的TCP接收缓冲区还能容纳多少字节的数据，这样对方就可以控制发送数据的速度。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\"><strong style=\"font-weight: border;color: #0e88eb;\">16位校验和</strong>：由发送端填充，接收端对TCP报文段执行CRC算法以检验TCP报文段在传输过程中是否损坏。注意，这个校验不仅包括TCP头部，也包括数据部分。这也是TCP可靠传输的一个重要保障。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\"><strong style=\"font-weight: border;color: #0e88eb;\">16位紧急指针</strong>：一个正的偏移量。它和序号字段的值相加表示最后一个紧急数据的下一字节的序号。因此，确切地说，这个字段是紧急指针相对当前序号的偏移，不妨称之为紧急偏移。TCP的紧急指针是发送端向接收端发送紧急数据的方法。</section></li></ul><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>8. TCP 是如何保证可靠性的<span style=\"display: none;\"></span></h3><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"1.0267175572519085\" data-type=\"png\" data-w=\"262\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGSRYLIwibtYjcDd7A7uajIibwxETrKPjGcO5FwnnH1eib3LcmexoYownyQ/640?wx_fmt=png\"></figure><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">首先，TCP的连接是基于<strong style=\"font-weight: border;color: #0e88eb;\">三次握手</strong>，而断开则是<strong style=\"font-weight: border;color: #0e88eb;\">四次挥手</strong>。确保连接和断开的可靠性。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">其次，TCP的可靠性，还体现在<strong style=\"font-weight: border;color: #0e88eb;\">有状态</strong>;TCP会记录哪些数据发送了，哪些数据被接受了，哪些没有被接受，并且保证数据包按序到达，保证数据传输不出差错。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">再次，TCP的可靠性，还体现在<strong style=\"font-weight: border;color: #0e88eb;\">可控制</strong>。它有报文校验、ACK应答、<strong style=\"font-weight: border;color: #0e88eb;\">超时重传(发送方)</strong>、失序数据重传（接收方）、丢弃重复数据、流量控制（滑动窗口）和拥塞控制等机制。</section></li></ul><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>9. TCP 重传机制<span style=\"display: none;\"></span></h3><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;\"><span style=\"display: none;\"></span>超时重传<span style=\"display: none;\"></span></h4><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">TCP 为了实现可靠传输，实现了重传机制。最基本的重传机制，就是<strong style=\"font-weight: border;color: #0e88eb;\">超时重传</strong>，即在发送数据报文时，设定一个定时器，每间隔一段时间，没有收到对方的ACK确认应答报文，就会重发该报文。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">这个间隔时间，一般设置为多少呢？我们先来看下什么叫<strong style=\"font-weight: border;color: #0e88eb;\">RTT（Round-Trip Time，往返时间）</strong>。</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"0.7700680272108843\" data-type=\"png\" data-w=\"735\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGQeePs2NCSbIdvl997a7mWGHUWic5kGghXVFpRNPwYtOggZytGywNMaw/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">RTT就是，一个数据包从发出去到回来的时间，即<strong style=\"font-weight: border;color: #0e88eb;\">数据包的一次往返时间</strong>。超时重传时间，就是Retransmission Timeout ，简称<strong style=\"font-weight: border;color: #0e88eb;\">RTO</strong>。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\"><strong style=\"font-weight: border;color: #0e88eb;\">RTO设置多久呢？</strong></p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">如果RTO比较小，那很可能数据都没有丢失，就重发了，这会导致网络阻塞，会导致更多的超时出现。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">如果RTO比较大，等到花儿都谢了还是没有重发，那效果就不好了。</section></li></ul><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">一般情况下，RTO略大于RTT，效果是最好的。一些小伙伴会问，超时时间有没有计算公式呢?有的！有个标准方法算RTO的公式，也叫<strong style=\"font-weight: border;color: #0e88eb;\">Jacobson / Karels 算法</strong>。我们一起来看下计算RTO的公式</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\"><strong style=\"font-weight: border;color: #0e88eb;\">1. 先计算SRTT（计算平滑的RTT）</strong></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;\"><span style=\"display: block;background: url(\" https: no-repeat rgb></span><code style=\"overflow-x: auto;padding: 16px;color: #abb2bf;display: -webkit-box;font-family: Operator Mono, Consolas, Monaco, Menlo, monospace;font-size: 12px;-webkit-overflow-scrolling: touch;padding-top: 15px;background: #282c34;border-radius: 5px;\">SRTT = (1 - α) * SRTT + α * RTT  //求 SRTT 的加权平均<br></code></pre><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\"><strong style=\"font-weight: border;color: #0e88eb;\">2. 再计算RTTVAR (round-trip time variation)</strong></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;\"><span style=\"display: block;background: url(\" https: no-repeat rgb></span><code style=\"overflow-x: auto;padding: 16px;color: #abb2bf;display: -webkit-box;font-family: Operator Mono, Consolas, Monaco, Menlo, monospace;font-size: 12px;-webkit-overflow-scrolling: touch;padding-top: 15px;background: #282c34;border-radius: 5px;\">RTTVAR = (1 - β) * RTTVAR + β * (|RTT - SRTT|) //计算 SRTT 与真实值的差距<br></code></pre><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\"><strong style=\"font-weight: border;color: #0e88eb;\">3. 最终的RTO</strong></p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;\"><span style=\"display: block;background: url(\" https: no-repeat rgb></span><code style=\"overflow-x: auto;padding: 16px;color: #abb2bf;display: -webkit-box;font-family: Operator Mono, Consolas, Monaco, Menlo, monospace;font-size: 12px;-webkit-overflow-scrolling: touch;padding-top: 15px;background: #282c34;border-radius: 5px;\">RTO = µ * SRTT + ∂ * RTTVAR  =  SRTT + 4·RTTVAR  <br></code></pre><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">其中，<code style=\"font-size: 14px;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all>α = 0.125，β = 0.25， μ = 1，∂ = 4</code>，这些参数都是大量结果得出的最优参数。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">但是，超时重传会有这些缺点：</p><blockquote data-tool=\"mdnice编辑器\" style=\"border-width: initial;border-style: none;border-color: initial;font-size: 0.9em;overflow: auto;margin-bottom: 20px;margin-top: 20px;padding-top: 10px;padding-right: 10px;padding-bottom: 10px;line-height: 1.8;border-radius: 0px 0px 10px 10px;color: rgb(14, 136, 235);background: rgb(255, 255, 255);box-shadow: rgb(132, 161, 168) 0px 10px 15px;\"><span style=\"font-size: 4em;font-family: Arial, serif;line-height: 1em;font-weight: 700;\">★</span><ul style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;color: black;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">当一个报文段丢失时，会等待一定的超时周期然后才重传分组，增加了端到端的时延。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">当一个报文段丢失时，在其等待超时的过程中，可能会出现这种情况：其后的报文段已经被接收端接收但却迟迟得不到确认，发送端会认为也丢失了，从而引起不必要的重传，既浪费资源也浪费时间。</section></li></ul><span style=\"float: right;font-size: 3em;line-height: 1em;\">”</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">并且，TCP有个策略，就是超时时间间隔会加倍。超时重传需要<strong style=\"font-weight: border;color: #0e88eb;\">等待很长时间</strong>。因此，还可以使用<strong style=\"font-weight: border;color: #0e88eb;\">快速重传</strong>机制。</p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;\"><span style=\"display: none;\"></span>快速重传<span style=\"display: none;\"></span></h4><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\"><strong style=\"font-weight: border;color: #0e88eb;\">快速重传</strong>机制，它不以时间驱动，而是以数据驱动。它基于接收端的反馈信息来引发重传。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">一起来看下快速重传流程：</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"1.4597014925373135\" data-type=\"png\" data-w=\"670\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGu7I5I3EJZTdlJMGMxibIkYquScTY5XibRicykIrEHAp7qBag50qH7I4UA/640?wx_fmt=png\"><figcaption style=\"margin-top: 5px;text-align: center;color: rgb(136, 136, 136);font-size: 12px;\">快速重传流程</figcaption></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">发送端发送了 1，2，3，4，5,6 份数据:</p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">第一份 Seq=1 先送到了，于是就 Ack 回 2；</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">第二份 Seq=2 也送到了，假设也正常，于是ACK 回 3；</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">第三份 Seq=3 由于网络等其他原因，没送到；</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">第四份 Seq=4 也送到了，但是因为Seq3没收到。所以ACK回3；</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">后面的 Seq=4,5的也送到了，但是ACK还是回复3，因为Seq=3没收到。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">发送端连着收到三个重复冗余ACK=3的确认（实际上是4个，但是前面一个是正常的ACK，后面三个才是重复冗余的），便知道哪个报文段在传输过程中丢失了，于是在定时器过期之前，重传该报文段。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">最后，接收到收到了 Seq3，此时因为 Seq=4，5，6都收到了，于是ACK回7.</section></li></ul><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">但<strong style=\"font-weight: border;color: #0e88eb;\">快速重传</strong>还可能会有个问题：ACK只向发送端告知最大的有序报文段，到底是哪个报文丢失了呢？<strong style=\"font-weight: border;color: #0e88eb;\">并不确定</strong>！那到底该重传多少个包呢？</p><blockquote data-tool=\"mdnice编辑器\" style=\"border-width: initial;border-style: none;border-color: initial;font-size: 0.9em;overflow: auto;margin-bottom: 20px;margin-top: 20px;padding-top: 10px;padding-right: 10px;padding-bottom: 10px;line-height: 1.8;border-radius: 0px 0px 10px 10px;color: rgb(14, 136, 235);background: rgb(255, 255, 255);box-shadow: rgb(132, 161, 168) 0px 10px 15px;\"><span style=\"font-size: 4em;font-family: Arial, serif;line-height: 1em;font-weight: 700;\">★</span><p style=\"padding-top: 8px;padding-bottom: 8px;letter-spacing: 0.2em;word-spacing: 0.1em;line-height: 26px;font-size: 15px;display: inline;\">是重传 Seq3 呢？还是重传 Seq3、Seq4、Seq5、Seq6 呢？因为发送端并不清楚这三个连续的 ACK3 是谁传回来的。</p><span style=\"float: right;font-size: 3em;line-height: 1em;\">”</span></blockquote><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;\"><span style=\"display: none;\"></span>带选择确认的重传（SACK）<span style=\"display: none;\"></span></h4><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">为了解决快速重传的问题：<strong style=\"font-weight: border;color: #0e88eb;\">应该重传多少个包</strong>? TCP提供了<strong style=\"font-weight: border;color: #0e88eb;\">SACK方法</strong>（带选择确认的重传，Selective Acknowledgment）。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\"><strong style=\"font-weight: border;color: #0e88eb;\">SACK机制</strong>就是，在快速重传的基础上，接收端返回最近收到的报文段的序列号范围，这样发送端就知道接收端哪些数据包没收到，酱紫就很清楚该重传哪些数据包啦。SACK标记是加在TCP头部<strong style=\"font-weight: border;color: #0e88eb;\">选项</strong>字段里面的。</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"0.831496062992126\" data-type=\"png\" data-w=\"1270\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGtnwicDafN34ibW12dBjvVgUdnEnDibWKkLBiafdjHnr0UNzZKIIMDoVsLA/640?wx_fmt=png\"><figcaption style=\"margin-top: 5px;text-align: center;color: rgb(136, 136, 136);font-size: 12px;\">SACK机制</figcaption></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">如上图中，发送端收到了三次同样的ACK=30的确认报文，于是就会触发快速重发机制，通过SACK信息发现只有<code style=\"font-size: 14px;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all>30~39</code>这段数据丢失，于是重发时就只选择了这个<code style=\"font-size: 14px;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all>30~39</code>的TCP报文段进行重发。</p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;\"><span style=\"display: none;\"></span>D-SACK<span style=\"display: none;\"></span></h4><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">D-SACK，即Duplicate SACK（重复SACK），在SACK的基础上做了一些扩展，，主要用来告诉发送方，有哪些数据包自己重复接受了。DSACK的目的是帮助发送方判断，是否发生了包失序、ACK丢失、包重复或伪重传。让TCP可以更好的做网络流控。来看个图吧：</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"0.7698945349952061\" data-type=\"png\" data-w=\"1043\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGRtETx7uS0rZNAIqvXqYLECxCEfyVPHamAJns9OBWXKO541eJau81pA/640?wx_fmt=png\"><figcaption style=\"margin-top: 5px;text-align: center;color: rgb(136, 136, 136);font-size: 12px;\">D-SACK简要流程</figcaption></figure><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>10. 聊聊TCP的滑动窗口<span style=\"display: none;\"></span></h3><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">TCP 发送一个数据，需要收到确认应答，才会发送下一个数据。这样有个缺点，就是效率会比较低。</p><blockquote data-tool=\"mdnice编辑器\" style=\"border-width: initial;border-style: none;border-color: initial;font-size: 0.9em;overflow: auto;margin-bottom: 20px;margin-top: 20px;padding-top: 10px;padding-right: 10px;padding-bottom: 10px;line-height: 1.8;border-radius: 0px 0px 10px 10px;color: rgb(14, 136, 235);background: rgb(255, 255, 255);box-shadow: rgb(132, 161, 168) 0px 10px 15px;\"><span style=\"font-size: 4em;font-family: Arial, serif;line-height: 1em;font-weight: 700;\">★</span><p style=\"padding-top: 8px;padding-bottom: 8px;letter-spacing: 0.2em;word-spacing: 0.1em;line-height: 26px;font-size: 15px;display: inline;\">这就好像我们面对面聊天，你说完一句，我应答后，你才会说下一句。那么，如果我在忙其他事情，没有能够及时回复你。你说完一句后，要等到我忙完回复你，你才说下句，这显然很不现实。</p><span style=\"float: right;font-size: 3em;line-height: 1em;\">”</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">为了解决这个问题，TCP引入了<strong style=\"font-weight: border;color: #0e88eb;\">窗口</strong>，它是操作系统开辟的一个缓存空间。窗口大小值表示无需等待确认应答，而可以继续发送数据的最大值。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">TCP头部有个字段叫win，也即那个<strong style=\"font-weight: border;color: #0e88eb;\">16位的窗口大小</strong>，它告诉对方本端的TCP接收缓冲区还能容纳多少字节的数据，这样对方就可以控制发送数据的速度，从而达到<strong style=\"font-weight: border;color: #0e88eb;\">流量控制</strong>的目的。</p><blockquote data-tool=\"mdnice编辑器\" style=\"border-width: initial;border-style: none;border-color: initial;font-size: 0.9em;overflow: auto;margin-bottom: 20px;margin-top: 20px;padding-top: 10px;padding-right: 10px;padding-bottom: 10px;line-height: 1.8;border-radius: 0px 0px 10px 10px;color: rgb(14, 136, 235);background: rgb(255, 255, 255);box-shadow: rgb(132, 161, 168) 0px 10px 15px;\"><span style=\"font-size: 4em;font-family: Arial, serif;line-height: 1em;font-weight: 700;\">★</span><p style=\"padding-top: 8px;padding-bottom: 8px;letter-spacing: 0.2em;word-spacing: 0.1em;line-height: 26px;font-size: 15px;display: inline;\">通俗点讲，就是接受方每次收到数据包，在发送确认报文的时候，同时告诉发送方，自己的缓存区还有多少空余空间，缓冲区的空余空间，我们就称之为接受窗口大小。这就是win。</p><span style=\"float: right;font-size: 3em;line-height: 1em;\">”</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">TCP 滑动窗口分为两种: 发送窗口和接收窗口。<strong style=\"font-weight: border;color: #0e88eb;\">发送端的滑动窗口</strong>包含四大部分，如下：</p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">已发送且已收到ACK确认</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">已发送但未收到ACK确认</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">未发送但可以发送</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">未发送也不可以发送</section></li></ul><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"0.4685082872928177\" data-type=\"png\" data-w=\"1810\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZG7FI6BmVNTicvXlsjU0DXQicF0LRXu1LhQfQmhiaDiaZkzYOGBACZrOmajQ/640?wx_fmt=png\"></figure><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">虚线矩形框，就是发送窗口。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">SND.WND: 表示发送窗口的大小,上图虚线框的格子数就是14个。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">SND.UNA: 一个绝对指针，它指向的是已发送但未确认的第一个字节的序列号。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">SND.NXT：下一个发送的位置，它指向未发送但可以发送的第一个字节的序列号。</section></li></ul><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">接收方的滑动窗口包含三大部分，如下：</p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">已成功接收并确认</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">未收到数据但可以接收</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">未收到数据并不可以接收的数据</section></li></ul><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"0.49445983379501385\" data-type=\"png\" data-w=\"1444\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGHzPUrqkRRleVEhkggqZlicf5ecE8ArgrSGLVoJTpWbjibUDp0iaxhp6Kg/640?wx_fmt=png\"></figure><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">虚线矩形框，就是接收窗口。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">REV.WND: 表示接收窗口的大小,上图虚线框的格子就是9个。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">REV.NXT:下一个接收的位置，它指向未收到但可以接收的第一个字节的序列号。</section></li></ul><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>11. 聊聊TCP的流量控制<span style=\"display: none;\"></span></h3><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">TCP三次握手，发送端和接收端进入到ESTABLISHED状态，它们即可以愉快地传输数据啦。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">但是发送端不能疯狂地向接收端发送数据，因为接收端接收不过来的话，接收方只能把处理不过来的数据存在缓存区里。如果缓存区都满了，发送方还在疯狂发送数据的话，接收方只能把收到的数据包丢掉，这就浪费了网络资源啦。</p><blockquote data-tool=\"mdnice编辑器\" style=\"border-width: initial;border-style: none;border-color: initial;font-size: 0.9em;overflow: auto;margin-bottom: 20px;margin-top: 20px;padding-top: 10px;padding-right: 10px;padding-bottom: 10px;line-height: 1.8;border-radius: 0px 0px 10px 10px;color: rgb(14, 136, 235);background: rgb(255, 255, 255);box-shadow: rgb(132, 161, 168) 0px 10px 15px;\"><span style=\"font-size: 4em;font-family: Arial, serif;line-height: 1em;font-weight: 700;\">★</span><p style=\"padding-top: 8px;padding-bottom: 8px;letter-spacing: 0.2em;word-spacing: 0.1em;line-height: 26px;font-size: 15px;display: inline;\">TCP 提供一种机制可以让发送端根据接收端的实际接收能力控制发送的数据量，这就是<strong>流量控制</strong>。</p><span style=\"float: right;font-size: 3em;line-height: 1em;\">”</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">TCP通过滑动窗口来控制流量，我们看下流量控制的<strong style=\"font-weight: border;color: #0e88eb;\">简要流程</strong>吧：</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">首先双方三次握手，初始化各自的窗口大小，均为 400 个字节。</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"1.1306584362139918\" data-type=\"png\" data-w=\"972\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGQib57JdYribwbrX2jQofvNhqfIb5vKNxnWvhvvPWOVrhJkF21brtQoRg/640?wx_fmt=png\"><figcaption style=\"margin-top: 5px;text-align: center;color: rgb(136, 136, 136);font-size: 12px;\">TCP的流量控制</figcaption></figure><ol data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">假如当前发送方给接收方发送了200个字节，那么，发送方的<code style=\"font-size: 14px;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all>SND.NXT</code>会右移200个字节，也就是说当前的可用窗口减少了200 个字节。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">接受方收到后，放到缓冲队列里面，REV.WND =400-200=200字节，所以win=200字节返回给发送方。接收方会在 ACK 的报文首部带上缩小后的滑动窗口200字节</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">发送方又发送200字节过来，200字节到达，继续放到缓冲队列。不过这时候，由于大量负载的原因，接受方处理不了这么多字节，只能处理100字节，剩余的100字节继续放到缓冲队列。这时候，REV.WND = 400-200-100=100字节，即win=100返回发送方。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">发送方继续干活，发送100字节过来，这时候，接受窗口win变为0。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">发送方停止发送，开启一个定时任务，每隔一段时间，就去询问接受方，直到win大于0，才继续开始发送。</section></li></ol><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>12. TCP的拥塞控制<span style=\"display: none;\"></span></h3><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">拥塞控制是<strong style=\"font-weight: border;color: #0e88eb;\">作用于网络的，防止过多的数据包注入到网络中，避免出现网络负载过大的情况</strong>。它的目标主要是最大化利用网络上瓶颈链路的带宽。它跟<strong style=\"font-weight: border;color: #0e88eb;\">流量控制</strong>又有什么区别呢？流量控制是作用于接收者的，根据<strong style=\"font-weight: border;color: #0e88eb;\">接收端的实际接收能力控制发送速度</strong>，防止分组丢失的。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">我们可以把网络链路比喻成一根水管，如果我们想最大化利用网络来传输数据，那就是尽快让水管达到最佳充满状态。</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"0.49889135254988914\" data-type=\"png\" data-w=\"451\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGU26ZdoeQFhWIKBHMy2RypR82LyaDeCBvDCebiavq67EsPicrw7SUyXqg/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">发送方维护一个<strong style=\"font-weight: border;color: #0e88eb;\">拥塞窗口cwnd（congestion window）</strong> 的变量，用来估算在一段时间内这条链路（水管）可以承载和运输的数据（水）的数量。它大小代表着网络的拥塞程度，并且是动态变化的，但是为了达到最大的传输效率，我们该如何知道这条水管的运送效率是多少呢？</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">一个比较简单的方法就是不断增加传输的水量，直到水管快要爆裂为止（对应到网络上就是发生丢包），用 TCP 的描述就是：</p><blockquote data-tool=\"mdnice编辑器\" style=\"border-width: initial;border-style: none;border-color: initial;font-size: 0.9em;overflow: auto;margin-bottom: 20px;margin-top: 20px;padding-top: 10px;padding-right: 10px;padding-bottom: 10px;line-height: 1.8;border-radius: 0px 0px 10px 10px;color: rgb(14, 136, 235);background: rgb(255, 255, 255);box-shadow: rgb(132, 161, 168) 0px 10px 15px;\"><span style=\"font-size: 4em;font-family: Arial, serif;line-height: 1em;font-weight: 700;\">★</span><p style=\"padding-top: 8px;padding-bottom: 8px;letter-spacing: 0.2em;word-spacing: 0.1em;line-height: 26px;font-size: 15px;display: inline;\">只要网络中没有出现拥塞，拥塞窗口的值就可以再增大一些，以便把更多的数据包发送出去，但只要网络出现拥塞，拥塞窗口的值就应该减小一些，以减少注入到网络中的数据包数。</p><span style=\"float: right;font-size: 3em;line-height: 1em;\">”</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">实际上，拥塞控制主要有这几种常用算法</p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">慢启动</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">拥塞避免</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">拥塞发生</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">快速恢复</section></li></ul><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;\"><span style=\"display: none;\"></span>慢启动算法<span style=\"display: none;\"></span></h4><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">慢启动算法，表面意思就是，别急慢慢来。它表示TCP建立连接完成后，一开始不要发送大量的数据，而是先探测一下网络的拥塞程度。由小到大逐渐增加拥塞窗口的大小，如果没有出现丢包，<strong style=\"font-weight: border;color: #0e88eb;\">每收到一个ACK，就将拥塞窗口cwnd大小就加1（单位是MSS）</strong>。<strong style=\"font-weight: border;color: #0e88eb;\">每轮次</strong>发送窗口增加一倍，呈指数增长，如果出现丢包，拥塞窗口就减半，进入拥塞避免阶段。</p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">TCP连接完成，初始化cwnd = 1，表明可以传一个MSS单位大小的数据。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">每当收到一个ACK，cwnd就加一;</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">每当过了一个RTT，cwnd就增加一倍; 呈指数让升</section></li></ul><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"1.4644628099173553\" data-type=\"png\" data-w=\"605\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGmU5eDc1GSRA9dGhUQ7wAlSfScVZTIQ5nMpT5tt1yy5hncjdITVjPVA/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">为了防止cwnd增长过大引起网络拥塞，还需设置一个<strong style=\"font-weight: border;color: #0e88eb;\">慢启动阀值ssthresh</strong>（slow start threshold）状态变量。当<code style=\"font-size: 14px;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all>cwnd</code>到达该阀值后，就好像水管被关小了水龙头一样，减少拥塞状态。即当<strong style=\"font-weight: border;color: #0e88eb;\">cwnd &gt;ssthresh</strong>时，进入了<strong style=\"font-weight: border;color: #0e88eb;\">拥塞避免</strong>算法。</p><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;\"><span style=\"display: none;\"></span>拥塞避免算法<span style=\"display: none;\"></span></h4><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">一般来说，慢启动阀值ssthresh是65535字节，<code style=\"font-size: 14px;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: \" operator mono consolas monaco menlo monospace break-all>cwnd</code>到达<strong style=\"font-weight: border;color: #0e88eb;\">慢启动阀值</strong>后</p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">每收到一个ACK时，cwnd = cwnd + 1/cwnd</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">当每过一个RTT时，cwnd = cwnd + 1</section></li></ul><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">显然这是一个线性上升的算法，避免过快导致网络拥塞问题。</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"0.8820403825717322\" data-type=\"png\" data-w=\"941\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGrQYZvMcSZIk3pwEL9FeUYTrYH4C2bLQg1tBCbBuiaUKSoYoREKlTmvQ/640?wx_fmt=png\"></figure><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;\"><span style=\"display: none;\"></span>拥塞发生<span style=\"display: none;\"></span></h4><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">当网络拥塞发生<strong style=\"font-weight: border;color: #0e88eb;\">丢包</strong>时，会有两种情况：</p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">RTO超时重传</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">快速重传</section></li></ul><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">如果是发生了<strong style=\"font-weight: border;color: #0e88eb;\">RTO超时重传</strong>，就会使用拥塞发生算法</p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">慢启动阀值sshthresh =  cwnd /2</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">cwnd 重置为 1</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">进入新的慢启动过程</section></li></ul><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"0.6193433895297249\" data-type=\"png\" data-w=\"1127\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGPUlKNDfgN0zClaaCHC4G47K2WjaG2zWcM40qfnbbOSxnIafLiag54LA/640?wx_fmt=png\"></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">这真的是<strong style=\"font-weight: border;color: #0e88eb;\">辛辛苦苦几十年，一朝回到解放前</strong>。其实还有更好的处理方式，就是<strong style=\"font-weight: border;color: #0e88eb;\">快速重传</strong>。发送方收到3个连续重复的ACK时，就会快速地重传，不必等待<strong style=\"font-weight: border;color: #0e88eb;\">RTO超时</strong>再重传。</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"1.4597014925373135\" data-type=\"png\" data-w=\"670\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGFficdJJibJibMF4xUticsiao021epYczwBOTCXIayKhiaxPlKBictXBJ4TPjw/640?wx_fmt=png\"><figcaption style=\"margin-top: 5px;text-align: center;color: rgb(136, 136, 136);font-size: 12px;\">image.png</figcaption></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">慢启动阀值ssthresh 和 cwnd 变化如下：</p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">拥塞窗口大小 cwnd = cwnd/2</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">慢启动阀值 ssthresh = cwnd</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">进入快速恢复算法</section></li></ul><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;\"><span style=\"display: none;\"></span>快速恢复<span style=\"display: none;\"></span></h4><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">快速重传和快速恢复算法一般同时使用。快速恢复算法认为，还有3个重复ACK收到，说明网络也没那么糟糕，所以没有必要像RTO超时那么强烈。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">正如前面所说，进入快速恢复之前，cwnd 和 sshthresh已被更新：</p><pre data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;\"><span style=\"display: block;background: url(\" https: no-repeat rgb></span><code style=\"overflow-x: auto;padding: 16px;color: #abb2bf;display: -webkit-box;font-family: Operator Mono, Consolas, Monaco, Menlo, monospace;font-size: 12px;-webkit-overflow-scrolling: touch;padding-top: 15px;background: #282c34;border-radius: 5px;\">- cwnd = cwnd /2<br>- sshthresh = cwnd<br></code></pre><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">然后，真正的快速算法如下：</p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">cwnd = sshthresh  + 3</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">重传重复的那几个ACK（即丢失的那几个数据包）</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">如果再收到重复的 ACK，那么 cwnd = cwnd +1</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">如果收到新数据的 ACK 后, cwnd = sshthresh。因为收到新数据的 ACK，表明恢复过程已经结束，可以再次进入了拥塞避免的算法了。</section></li></ul><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"0.6173260572987722\" data-type=\"png\" data-w=\"1466\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGiciauRKKExmPljVhfoGVhgg9ZlUQQGSINQdPZEmQon7VnkMic3dCZCYAA/640?wx_fmt=png\"></figure><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>13. 半连接队列和 SYN Flood 攻击的关系<span style=\"display: none;\"></span></h3><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">TCP进入三次握手前，服务端会从<strong style=\"font-weight: border;color: #0e88eb;\">CLOSED</strong>状态变为<strong style=\"font-weight: border;color: #0e88eb;\">LISTEN</strong>状态,同时在内部创建了两个队列：半连接队列（SYN队列）和全连接队列（ACCEPT队列）。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">什么是<strong style=\"font-weight: border;color: #0e88eb;\">半连接队列（SYN队列）</strong> 呢? 什么是<strong style=\"font-weight: border;color: #0e88eb;\">全连接队列（ACCEPT队列）</strong> 呢？回忆下TCP三次握手的图：</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"1.3748326639892905\" data-type=\"png\" data-w=\"747\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGI2nOg1Itlj3yibLy1YFtO4DaHNkoqY9R7jkqVonmiagLIAPQLgyeX8oQ/640?wx_fmt=png\"><figcaption style=\"margin-top: 5px;text-align: center;color: rgb(136, 136, 136);font-size: 12px;\">三次握手</figcaption></figure><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">TCP三次握手时，客户端发送SYN到服务端，服务端收到之后，便回复<strong style=\"font-weight: border;color: #0e88eb;\">ACK和SYN</strong>，状态由<strong style=\"font-weight: border;color: #0e88eb;\">LISTEN变为SYN_RCVD</strong>，此时这个连接就被推入了<strong style=\"font-weight: border;color: #0e88eb;\">SYN队列</strong>，即半连接队列。</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">当客户端回复ACK, 服务端接收后，三次握手就完成了。这时连接会等待被具体的应用取走，在被取走之前，它被推入ACCEPT队列，即全连接队列。</section></li></ul><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">SYN Flood是一种典型的DoS (Denial of Service，拒绝服务) 攻击，它在短时间内，伪造<strong style=\"font-weight: border;color: #0e88eb;\">不存在的IP地址</strong>,向服务器大量发起SYN报文。当服务器回复SYN+ACK报文后，不会收到ACK回应报文，导致服务器上建立大量的半连接半连接队列满了，这就无法处理正常的TCP请求啦。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">主要有 <strong style=\"font-weight: border;color: #0e88eb;\">syn cookie</strong>和<strong style=\"font-weight: border;color: #0e88eb;\">SYN Proxy防火墙</strong>等方案应对。</p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\"><p style=\"padding-top: 8px;padding-bottom: 8px;color: black;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;word-spacing: 0.1em;\"><strong style=\"font-weight: border;color: #0e88eb;\">syn cookie</strong>：在收到SYN包后，服务器根据一定的方法，以数据包的源地址、端口等信息为参数计算出一个cookie值作为自己的SYNACK包的序列号，回复SYN+ACK后，服务器并不立即分配资源进行处理，等收到发送方的ACK包后，重新根据数据包的源地址、端口计算该包中的确认序列号是否正确，如果正确则建立连接，否则丢弃该包。</p></section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\"><p style=\"padding-top: 8px;padding-bottom: 8px;color: black;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;word-spacing: 0.1em;\"><strong style=\"font-weight: border;color: #0e88eb;\">SYN Proxy防火墙</strong>：服务器防火墙会对收到的每一个SYN报文进行代理和回应，并保持半连接。等发送方将ACK包返回后，再重新构造SYN包发到服务器，建立真正的TCP连接。</p></section></li></ul><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>14. Nagle 算法与延迟确认<span style=\"display: none;\"></span></h3><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;\"><span style=\"display: none;\"></span>Nagle算法<span style=\"display: none;\"></span></h4><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">如果发送端疯狂地向接收端发送很小的包，比如就1个字节，那么亲爱的小伙伴，你们觉得会有什么问题呢？</p><blockquote data-tool=\"mdnice编辑器\" style=\"border-width: initial;border-style: none;border-color: initial;font-size: 0.9em;overflow: auto;margin-bottom: 20px;margin-top: 20px;padding-top: 10px;padding-right: 10px;padding-bottom: 10px;line-height: 1.8;border-radius: 0px 0px 10px 10px;color: rgb(14, 136, 235);background: rgb(255, 255, 255);box-shadow: rgb(132, 161, 168) 0px 10px 15px;\"><span style=\"font-size: 4em;font-family: Arial, serif;line-height: 1em;font-weight: 700;\">★</span><p style=\"padding-top: 8px;padding-bottom: 8px;letter-spacing: 0.2em;word-spacing: 0.1em;line-height: 26px;font-size: 15px;display: inline;\">TCP/IP协议中，无论发送多少数据，总是要在数据前面加上协议头，同时，对方接收到数据，也需要发送ACK表示确认。为了尽可能的利用网络带宽，TCP总是希望尽可能的发送足够大的数据。<strong>Nagle算法</strong>就是为了尽可能发送大块数据，避免网络中充斥着许多小数据块。</p><span style=\"float: right;font-size: 3em;line-height: 1em;\">”</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">Nagle算法的基本定义是：<strong style=\"font-weight: border;color: #0e88eb;\">任意时刻，最多只能有一个未被确认的小段</strong>。所谓“小段”，指的是小于MSS尺寸的数据块，所谓“未被确认”，是指一个数据块发送出去后，没有收到对方发送的ACK确认该数据已收到。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">Nagle算法的实现规则：</p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">如果包长度达到MSS，则允许发送；</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">如果该包含有FIN，则允许发送；</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">设置了TCP_NODELAY选项，则允许发送；</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">未设置TCP_CORK选项时，若所有发出去的小数据包（包长度小于MSS）均被确认，则允许发送；</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">上述条件都未满足，但发生了超时（一般为200ms），则立即发送。</section></li></ul><h4 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;\"><span style=\"display: none;\"></span>延迟确认<span style=\"display: none;\"></span></h4><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">如果接受方刚接收到发送方的数据包，在很短很短的时间内，又接收到第二个包。那么请问接收方是一个一个地回复好点，还是合并一起回复好呢？</p><blockquote data-tool=\"mdnice编辑器\" style=\"border-width: initial;border-style: none;border-color: initial;font-size: 0.9em;overflow: auto;margin-bottom: 20px;margin-top: 20px;padding-top: 10px;padding-right: 10px;padding-bottom: 10px;line-height: 1.8;border-radius: 0px 0px 10px 10px;color: rgb(14, 136, 235);background: rgb(255, 255, 255);box-shadow: rgb(132, 161, 168) 0px 10px 15px;\"><span style=\"font-size: 4em;font-family: Arial, serif;line-height: 1em;font-weight: 700;\">★</span><p style=\"padding-top: 8px;padding-bottom: 8px;letter-spacing: 0.2em;word-spacing: 0.1em;line-height: 26px;font-size: 15px;display: inline;\">接收方收到数据包后，如果暂时没有数据要发给对端，它可以等一段时再确认（Linux上默认是40ms）。如果这段时间刚好有数据要传给对端，ACK就随着数据传输，而不需要单独发送一次ACK。如果超过时间还没有数据要发送，也发送ACK，避免对端以为丢包。</p><span style=\"float: right;font-size: 3em;line-height: 1em;\">”</span></blockquote><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">但是有些场景不能延迟确认，比如发现了<strong style=\"font-weight: border;color: #0e88eb;\">乱序包</strong>、<strong style=\"font-weight: border;color: #0e88eb;\">接收到了大于一个 frame 的报文，且需要调整窗口大小</strong>等。</p><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">一般情况下，<strong style=\"font-weight: border;color: #0e88eb;\">Nagle算法和延迟确认</strong>不能一起使用，Nagle算法意味着延迟发，<strong style=\"font-weight: border;color: #0e88eb;\">延迟确认</strong>意味着延迟接收，酱紫就会造成更大的延迟，会产生性能问题。</p><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;color: rgb(14, 136, 235);\"><span style=\"display: none;\"></span>15. TCP的粘包和拆包<span style=\"display: none;\"></span></h3><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\">TCP是面向流，没有界限的一串数据。TCP底层并不了解上层业务数据的具体含义，它会根据TCP缓冲区的实际情况进行包的划分，所以在业务上认为，一<strong style=\"font-weight: border;color: #0e88eb;\">个完整的包可能会被TCP拆分成多个包进行发送</strong>，<strong style=\"font-weight: border;color: #0e88eb;\">也有可能把多个小的包封装成一个大的数据包发送</strong>，这就是所谓的TCP粘包和拆包问题。</p><figure data-tool=\"mdnice编辑器\" style=\"margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;\"><img data-ratio=\"0.7573073516386183\" data-type=\"png\" data-w=\"1129\" style=\"border-radius: 0px 0px 5px 5px; display: block; margin: 20px auto; width: 85%; height: 100%; object-fit: contain; box-shadow: rgb(132, 161, 168) 0px 10px 15px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZG54k9yjr7f5bwo57gkkh89MnVanhgiaeibYsSiaKSY7wHMfXhsFXzzxGGw/640?wx_fmt=png\"><figcaption style=\"margin-top: 5px;text-align: center;color: rgb(136, 136, 136);font-size: 12px;\">TCP的粘包和拆包</figcaption></figure><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\"><strong style=\"font-weight: border;color: #0e88eb;\">为什么会产生粘包和拆包呢?</strong></p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">要发送的数据小于TCP发送缓冲区的大小，TCP将多次写入缓冲区的数据一次发送出去，将会发生粘包；</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">接收数据端的应用层没有及时读取接收缓冲区中的数据，将发生粘包；</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">要发送的数据大于TCP发送缓冲区剩余空间大小，将会发生拆包；</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">待发送数据大于MSS（最大报文长度），TCP在传输前将进行拆包。即TCP报文长度-TCP头部长度&gt;MSS。</section></li></ul><p data-tool=\"mdnice编辑器\" style=\"padding-top: 8px;padding-bottom: 8px;margin: 10px;line-height: 1.75;letter-spacing: 0.2em;font-size: 15px;word-spacing: 0.1em;\"><strong style=\"font-weight: border;color: #0e88eb;\">解决方案：</strong></p><ul data-tool=\"mdnice编辑器\" style=\"margin-top: 8px;margin-bottom: 8px;padding-left: 25px;\" class=\"list-paddingleft-2\"><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">发送端将每个数据包封装为固定长度</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">在数据尾部增加特殊字符进行分割</section></li><li><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\">将数据分为两部分，一部分是头部，一部分是内容体；其中头部结构大小固定，且有一个字段声明内容体的大小。</section></li></ul><h3 data-tool=\"mdnice编辑器\" style=\"margin-top: 30px;margin-bottom: 15px;font-weight: bold;font-size: 18px;font-family: PingFangSC-Light;text-align: left;white-space: normal;color: rgb(14, 136, 235);\"><span style=\"display: block;\">参考资料</span></h3><section data-tool=\"mdnice编辑器\" style=\"color: rgb(0, 0, 0);font-family: PingFangSC-Light;font-size: 16px;text-align: left;white-space: normal;\"><span style=\"display: flex;\"><span style=\"width: 55.7969px;background-image: none;background-position: initial;background-size: initial;background-repeat: initial;background-attachment: initial;background-origin: initial;background-clip: initial;font-size: 12.8px;opacity: 0.6;line-height: 26px;font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, \" pingfang sc cambria cochin georgia times new roman serif>[1]</span><p style=\"letter-spacing: 0.2em;word-spacing: 0.1em;display: inline;font-size: 14px;width: 502.188px;line-height: 26px;word-break: break-all;\">TCP 的那些事儿（下）: <em style=\"letter-spacing: 0.3em;color: rgb(8, 42, 113);font-size: 12px;\">https://coolshell.cn/articles/11609.html</em></p></span><span style=\"display: flex;\"><span style=\"width: 55.7969px;background-image: none;background-position: initial;background-size: initial;background-repeat: initial;background-attachment: initial;background-origin: initial;background-clip: initial;font-size: 12.8px;opacity: 0.6;line-height: 26px;font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, \" pingfang sc cambria cochin georgia times new roman serif>[2]</span><p style=\"letter-spacing: 0.2em;word-spacing: 0.1em;display: inline;font-size: 14px;width: 502.188px;line-height: 26px;word-break: break-all;\">面试头条你需要懂的 TCP 拥塞控制原理: <em style=\"letter-spacing: 0.3em;color: rgb(8, 42, 113);font-size: 12px;\">https://zhuanlan.zhihu.com/p/76023663</em></p></span><span style=\"display: flex;\"><span style=\"width: 55.7969px;background-image: none;background-position: initial;background-size: initial;background-repeat: initial;background-attachment: initial;background-origin: initial;background-clip: initial;font-size: 12.8px;opacity: 0.6;line-height: 26px;font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, \" pingfang sc cambria cochin georgia times new roman serif>[3]</span><p style=\"letter-spacing: 0.2em;word-spacing: 0.1em;display: inline;font-size: 14px;width: 502.188px;line-height: 26px;word-break: break-all;\">30张图解：TCP 重传、滑动窗口、流量控制、拥塞控制发愁: <em style=\"letter-spacing: 0.3em;color: rgb(8, 42, 113);font-size: 12px;\">https://zhuanlan.zhihu.com/p/133307545</em></p></span><span style=\"display: flex;\"><span style=\"width: 55.7969px;background-image: none;background-position: initial;background-size: initial;background-repeat: initial;background-attachment: initial;background-origin: initial;background-clip: initial;font-size: 12.8px;opacity: 0.6;line-height: 26px;font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, \" pingfang sc cambria cochin georgia times new roman serif>[4]</span><p style=\"letter-spacing: 0.2em;word-spacing: 0.1em;display: inline;font-size: 14px;width: 502.188px;line-height: 26px;word-break: break-all;\">TCP协议灵魂之问，巩固你的网路底层基础: <em style=\"letter-spacing: 0.3em;color: rgb(8, 42, 113);font-size: 12px;\">https://juejin.cn/post/6844904070889603085</em></p></span><span style=\"display: flex;\"><span style=\"width: 55.7969px;background-image: none;background-position: initial;background-size: initial;background-repeat: initial;background-attachment: initial;background-origin: initial;background-clip: initial;font-size: 12.8px;opacity: 0.6;line-height: 26px;font-family: ptima-Regular, Optima, PingFangSC-light, PingFangTC-light, \" pingfang sc cambria cochin georgia times new roman serif>[5]</span><p style=\"letter-spacing: 0.2em;word-spacing: 0.1em;display: inline;font-size: 14px;width: 502.188px;line-height: 26px;word-break: break-all;\">TCP粘包和拆包: <em style=\"letter-spacing: 0.3em;color: rgb(8, 42, 113);font-size: 12px;\">https://blog.csdn.net/ailunlee/article/details/95944377</em></p></span></section><section style=\"margin-top: 5px;margin-bottom: 5px;line-height: 26px;color: rgb(1, 1, 1);font-size: 15px;\"><br></section><p style=\"white-space: normal;text-align: center;\"><span style=\"font-size: 15px;color: rgb(136, 136, 136);\">- EOF -</span></p><section donone=\"shifuMouseDownCard('shifu_c_030')\" label=\"Copyright Reserved by PLAYHUDONG.\" style=\"margin-top: 1em;margin-bottom: 1em;white-space: normal;text-align: start;max-width: 100%;caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);border-width: 0px;border-style: initial;border-color: initial;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><section style=\"margin-left: 1em;max-width: 100%;line-height: 1.4;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"padding: 3px 8px;max-width: 100%;border-radius: 4px;color: rgb(255, 255, 255);background-color: rgb(255, 105, 31);font-family: inherit;text-align: inherit;text-decoration: inherit;font-size: 16px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">推荐阅读</span>  <span style=\"margin-left: 4px;padding: 3px 8px;max-width: 100%;border-radius: 1.2em;color: rgb(255, 255, 255);line-height: 1.2;background-color: rgb(204, 204, 204);font-family: inherit;text-align: inherit;text-decoration: inherit;border-color: rgb(249, 110, 87);font-size: 12px;box-sizing: border-box !important;overflow-wrap: break-word !important;\">点击标题可跳转</span></section><section style=\"margin-top: -11px;padding: 22px 16px 16px;max-width: 100%;border-width: 1px;border-style: solid;border-color: rgb(255, 105, 31);color: rgb(51, 51, 51);font-size: 1em;font-family: inherit;text-align: inherit;text-decoration: inherit;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><p style=\"max-width: 100%;min-height: 1em;line-height: 2em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"text-decoration: underline;font-size: 13px;\">1、<a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651496964&amp;idx=2&amp;sn=2061774f781d783071ea2cf9f6b2ca19&amp;chksm=bd25ce7b8a52476d782a033f8337f5358d5ba989bd651f08929636242991057e01526482ef1d&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">批处理框架 Spring Batch 这么强，你会用吗？</a></span></p><p style=\"max-width: 100%;min-height: 1em;line-height: 2em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"text-decoration: underline;font-size: 13px;\">2、<a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651496952&amp;idx=1&amp;sn=0cbfeb2f6771e9dc290eecb5e020df5e&amp;chksm=bd25cd878a52449130e2b6fca04f29e9234fc50911c48de1fb21743bdd64f34b933b687090c5&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">Java必会的工具库，让你的代码量减少90%</a></span></p><p style=\"max-width: 100%;min-height: 1em;line-height: 2em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><span style=\"text-decoration: underline;font-size: 13px;\">3、<a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651496946&amp;idx=1&amp;sn=85f3190dd5cb19a7dd5b8046a90a9f7a&amp;chksm=bd25cd8d8a52449b5b3c4833e96d8e731c86d51fc7a34d001139bd734a34cd4e92785af31c61&amp;scene=21#wechat_redirect\" data-itemshowtype=\"0\" tab=\"innerlink\" data-linktype=\"2\">ELK 处理 Spring Boot 日志，妙！</a></span></p></section></section><p style=\"white-space: normal;caret-color: rgb(0, 0, 0);color: rgb(0, 0, 0);text-align: start;max-width: 100%;min-height: 1em;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><br></p><p style=\"white-space: normal;text-align: center;\"><span style=\"max-width: 100%;font-size: 14px;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">看完本文有收获？请转发分享给更多人</span><br></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><strong style=\"max-width: 100%;color: rgb(255, 169, 0);box-sizing: border-box !important;overflow-wrap: break-word !important;\">关注「ImportNew」，提升Java技能</strong></p><p style=\"white-space: normal;max-width: 100%;min-height: 1em;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);text-align: center;box-sizing: border-box !important;overflow-wrap: break-word !important;\"><img data-ratio=\"0.9166666666666666\" data-s=\"300,640\" data-type=\"jpeg\" data-w=\"600\" width=\"auto\" style=\"box-sizing: border-box !important; overflow-wrap: break-word !important; visibility: visible !important; width: 600px !important; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg\"></p><p style=\"white-space: normal;text-align: right;\"><span style=\"font-size: 14px;\"></span><span style=\"max-width: 100%;font-family: -apple-system-font, system-ui, \" helvetica neue sc sans gb yahei ui arial sans-serif center break-word border-box>点赞和在看就是最大的支持</span><span style=\"max-width: 100%;font-family: -apple-system-font, system-ui, \" helvetica neue sc sans gb yahei ui arial sans-serif center break-word border-box>❤️</span></p><section data-tool=\"mdnice编辑器\"><span style=\"display: flex;\"><p style=\"letter-spacing: 0.2em;word-spacing: 0.1em;display: inline;font-size: 14px;width: 90%;line-height: 26px;word-break: break-all;\"><em style=\"letter-spacing: 0.3em;color: rgb(8, 42, 113);font-size: 12px;\"></em></p></span></section></section>\n                </div>\n\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MjM5NzMyMjAwMA==&amp;mid=2651496972&amp;idx=2&amp;sn=a1df5da5dca8611ea34765988824ecad&amp;chksm=bd25ce738a5247650ceef552bf932251b9b73065c472593d0086066fa0fcca0b907ef2862ebd&amp;scene=0#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/11757/FQhSBvCs6N\"></div></div>","descriptionType":"html","publishedDate":"Wed, 14 Jul 2021 03:30:00 +0000","feedId":2521,"bgimg":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGRlStMPArOeP2x89l2YcloLKOHaMP94aQ9veAWnUXBLn8BdRaWgVCXA/0?wx_fmt=jpeg?imageView2/1/w/600","linkMd5":"2219d4549dbf95446026c39d9794fa8b","destWidth":960,"destHeight":408,"sourceBytes":64529,"destBytes":52026,"author":"","articleImgCdnMap":{"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGRlStMPArOeP2x89l2YcloLKOHaMP94aQ9veAWnUXBLn8BdRaWgVCXA/0?wx_fmt=jpeg?imageView2/1/w/600":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGxBVM3XODd9eIjfSptS5K8bMHMwxCVqV4vVeyBcib25mRBFqCqADN14g/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZG0Pq4BlibjdTLTmxf0o7Dic18o8iaDKONvjpp5ompia6JicOricF3puAobTFg/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZG5M6jAQ1axxMc24zo24lmzQicjWQNF4d9YEBWrkH5vibn3j0Ov7GYafrg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn88@2020_6/2021/07/14/17-41-09-513_a5282893e310330b.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGVRl1TbwY0QiaUE1N2W4Oic8rbJr52cZTb6WWICr6p9ibuibw8DPLddTTPw/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGc8wnIlVOcXLia5iaTT3au4uibFBS1lSW5Zdic2xLtKJzId4zBwE7s3TnjQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn61@2020_6/2021/07/14/17-39-49-400_e5e5894ab9fe70ff.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGcmrVMle4KZubY5Tciae8HO8wnpzPUZthmTXY8PpmoYjZ4FXC9ibRz0ug/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGwoic656sZhv2TiaWBoaZtibN0ZzXdY7oJn0RUzjhKpa8KavmicSzQCYVOA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn35@2020_1/2021/07/14/17-40-09-088_ff708de9fe3e012f.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGSRYLIwibtYjcDd7A7uajIibwxETrKPjGcO5FwnnH1eib3LcmexoYownyQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn39@2020_4/2021/07/14/17-40-07-174_32eef2d63d357e6e.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGQeePs2NCSbIdvl997a7mWGHUWic5kGghXVFpRNPwYtOggZytGywNMaw/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn49@2020_5/2021/07/14/17-39-55-161_07cce07458eee7f2.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGu7I5I3EJZTdlJMGMxibIkYquScTY5XibRicykIrEHAp7qBag50qH7I4UA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn71@2020_5/2021/07/14/17-40-09-601_f2fae786f5ee76e1.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGtnwicDafN34ibW12dBjvVgUdnEnDibWKkLBiafdjHnr0UNzZKIIMDoVsLA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn4@2020_3/2021/07/14/17-41-46-999_f823e93de6885903.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGRtETx7uS0rZNAIqvXqYLECxCEfyVPHamAJns9OBWXKO541eJau81pA/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZG7FI6BmVNTicvXlsjU0DXQicF0LRXu1LhQfQmhiaDiaZkzYOGBACZrOmajQ/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGHzPUrqkRRleVEhkggqZlicf5ecE8ArgrSGLVoJTpWbjibUDp0iaxhp6Kg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn60@2020_1/2021/07/14/17-40-12-967_780cbd0fcfa14102.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGQib57JdYribwbrX2jQofvNhqfIb5vKNxnWvhvvPWOVrhJkF21brtQoRg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn92@2020_3/2021/07/14/17-40-11-554_edc70ae472f3efb9.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGU26ZdoeQFhWIKBHMy2RypR82LyaDeCBvDCebiavq67EsPicrw7SUyXqg/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn26@2020_6/2021/07/14/17-40-14-327_18c9d9e8ee0d23c4.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGmU5eDc1GSRA9dGhUQ7wAlSfScVZTIQ5nMpT5tt1yy5hncjdITVjPVA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn41@2020_4/2021/07/14/17-41-14-448_5ff5877a609c9289.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGrQYZvMcSZIk3pwEL9FeUYTrYH4C2bLQg1tBCbBuiaUKSoYoREKlTmvQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn56@2020_4/2021/07/14/17-39-55-711_b116d9d48d02d39d.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGPUlKNDfgN0zClaaCHC4G47K2WjaG2zWcM40qfnbbOSxnIafLiag54LA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn79@2020_6/2021/07/14/17-40-01-419_af5d086b606caaf9.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGFficdJJibJibMF4xUticsiao021epYczwBOTCXIayKhiaxPlKBictXBJ4TPjw/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn17@2020_2/2021/07/14/17-41-03-611_f1bd95eb46938200.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGiciauRKKExmPljVhfoGVhgg9ZlUQQGSINQdPZEmQon7VnkMic3dCZCYAA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn82@2020_4/2021/07/14/17-41-45-789_5c9955803079f544.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGI2nOg1Itlj3yibLy1YFtO4DaHNkoqY9R7jkqVonmiagLIAPQLgyeX8oQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn68@2020_5/2021/07/14/17-40-57-087_437f6aba530ecf22.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZG54k9yjr7f5bwo57gkkh89MnVanhgiaeibYsSiaKSY7wHMfXhsFXzzxGGw/640?wx_fmt=png":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn48@2020_2/2021/07/14/17-39-58-754_f93d0239d4369c75.webp","http://www.jintiankansha.me/rss_static/11757/FQhSBvCs6N":null},"publishedOrCreatedDate":1626284336327}],"record":{"createdTime":"2021-07-15 01:38:56","updatedTime":"2021-07-15 01:38:56","feedId":2521,"fetchDate":"Wed, 14 Jul 2021 17:38:56 +0000","fetchMs":574,"handleMs":17,"totalMs":203487,"newArticles":0,"totalArticles":5,"status":1,"type":0,"ip":"bc1eecef1292254c09de6c1e66b750f3","hostName":"europe64*","requestId":"51caf95487064cd6b78546822f68f150_2521","contentType":"application/rss+xml","totalBytes":463076,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":26,"articlesImgsGithubTotal":17,"successGithubMap":{"myreaderx25":1,"myreaderx7":1,"myreaderx16":1,"myreaderx10":1,"myreaderx21":1,"myreaderx4":1,"myreaderx32":1,"myreaderx33":1,"myreaderx22":1,"myreaderx2":1,"myreaderx1":1,"myreaderx13":1,"myreaderx24":1,"myreaderx30":1,"myreaderx29":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}},"feed":{"createdTime":"2020-08-24 21:31:41","updatedTime":"2020-09-01 10:09:47","id":2521,"name":"ImportNew","url":"http://feedmaker.kindle4rss.com/feeds/importnew.weixin.xml","subscriber":null,"website":null,"icon":"http://www.sogou.com/images/logo/new/favicon.ico?v=4","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn9@2020_3/2020/09/01/02-08-31-388_d24121c9beed1de6.ico","description":"伯乐在线旗下账号，专注Java技术分享，包括Java基础技术、进阶技能、架构设计和Java技术领域动态等。","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2021-07-15 01:42:18","updatedTime":"2021-07-15 01:42:18","id":null,"feedId":2521,"linkMd5":"2219d4549dbf95446026c39d9794fa8b"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":463076,"tmpBgImgCdnBytes":0,"extra4":{"start":1626284335387,"total":0,"statList":[{"spend":923,"msg":"获取xml内容"},{"spend":17,"msg":"解释文章"},{"spend":1,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":153286,"msg":"正文链接上传到cdn"}]},"extra5":26,"extra6":20,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGRlStMPArOeP2x89l2YcloLKOHaMP94aQ9veAWnUXBLn8BdRaWgVCXA/0?wx_fmt=jpeg?imageView2/1/w/600","sourceStatusCode":200,"destWidth":960,"destHeight":408,"sourceBytes":64529,"destBytes":52026,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":21127,"convertSpendMs":15,"createdTime":"2021-07-15 01:38:56","host":"us-002*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b,2219d4549dbf95446026c39d9794fa8b","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn79/contents/2021/07/14/17-39-17-705_4b8f7de6f71e6af4.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Wed, 14 Jul 2021 17:39:17 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["BE76:279D:51573A1:1006B786:60EF2145"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1626287606"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn79/contents/2021/07/14/17-39-17-705_4b8f7de6f71e6af4.webp","historyStatusCode":[],"spendMs":38},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"63 KB","destSize":"50.8 KB","compressRate":"80.6%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGRlStMPArOeP2x89l2YcloLKOHaMP94aQ9veAWnUXBLn8BdRaWgVCXA/0?wx_fmt=jpeg?imageView2/1/w/600","sourceStatusCode":200,"destWidth":960,"destHeight":408,"sourceBytes":64529,"destBytes":52026,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":27733,"convertSpendMs":16,"createdTime":"2021-07-15 01:39:17","host":"us-002*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b,2219d4549dbf95446026c39d9794fa8b","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn79/contents/2021/07/14/17-39-45-502_4b8f7de6f71e6af4.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Wed, 14 Jul 2021 17:39:45 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["C9B0:8736:7A0CA9:F52E63:60EF2161"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1626287606"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn79/contents/2021/07/14/17-39-45-502_4b8f7de6f71e6af4.webp","historyStatusCode":[],"spendMs":50},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"63 KB","destSize":"50.8 KB","compressRate":"80.6%"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/FQhSBvCs6N","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":439,"convertSpendMs":0,"createdTime":"2021-07-15 01:39:45","host":"us-013*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZG0Pq4BlibjdTLTmxf0o7Dic18o8iaDKONvjpp5ompia6JicOricF3puAobTFg/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":945,"convertSpendMs":0,"createdTime":"2021-07-15 01:39:45","host":"europe70*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","extra23historyStatusCode":[403,403],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGQeePs2NCSbIdvl997a7mWGHUWic5kGghXVFpRNPwYtOggZytGywNMaw/640?wx_fmt=png","sourceStatusCode":403,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":909,"convertSpendMs":0,"createdTime":"2021-07-15 01:39:45","host":"us-006*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","extra22GetBytesInfo":"2、Referer字段 ： http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","extra23historyStatusCode":[403,403],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/11757/FQhSBvCs6N","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":477,"convertSpendMs":0,"createdTime":"2021-07-15 01:39:46","host":"us-015*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZG0Pq4BlibjdTLTmxf0o7Dic18o8iaDKONvjpp5ompia6JicOricF3puAobTFg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":747,"destHeight":1027,"sourceBytes":66572,"destBytes":23270,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":22229,"convertSpendMs":41,"createdTime":"2021-07-15 01:39:46","host":"us-008*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn2/contents/2021/07/14/17-40-09-167_4d79ef7d25352432.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Wed, 14 Jul 2021 17:40:09 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["927E:4D35:70B8F6:FAB171:60EF2179"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1626287620"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn2/contents/2021/07/14/17-40-09-167_4d79ef7d25352432.webp","historyStatusCode":[],"spendMs":52},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65 KB","destSize":"22.7 KB","compressRate":"35%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZG0Pq4BlibjdTLTmxf0o7Dic18o8iaDKONvjpp5ompia6JicOricF3puAobTFg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":747,"destHeight":1027,"sourceBytes":66572,"destBytes":23270,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":25167,"convertSpendMs":36,"createdTime":"2021-07-15 01:40:09","host":"us-037*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn2/contents/2021/07/14/17-40-34-365_4d79ef7d25352432.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Wed, 14 Jul 2021 17:40:34 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9830:3DAD:5B7240:10E4993:60EF2192"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1626287620"],"x-ratelimit-resource":["core"],"x-ratelimit-used":["60"],"x-xss-protection":["0"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn2/contents/2021/07/14/17-40-34-365_4d79ef7d25352432.webp","historyStatusCode":[],"spendMs":95},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65 KB","destSize":"22.7 KB","compressRate":"35%"},null,null,null,null,{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGI2nOg1Itlj3yibLy1YFtO4DaHNkoqY9R7jkqVonmiagLIAPQLgyeX8oQ/640?wx_fmt=png","sourceStatusCode":0,"sourceBytes":0,"destBytes":0,"feedId":2521,"totalSpendMs":60219,"convertSpendMs":0,"createdTime":"2021-07-15 01:39:45","host":"us-022*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[0],"sourceSize":"0","destSize":"0"},null,null,null,null,null,null,null,null,null,null,null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-037.herokuapp.com/":{"failCount":2,"successCount":2,"resultList":[200,200,null,null]},"http://us-002.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-015.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://europe70.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://us-038.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[null,null]},"http://europe69.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://europe-23.herokuapp.com/":{"failCount":2,"successCount":0,"resultList":[null,null]},"http://europe21.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-22.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-029.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://us-013.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://europe65.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-005.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]},"http://us-022.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[0]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-030.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-026.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-006.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[403]},"http://us-010.herokuapp.com/":{"failCount":1,"successCount":2,"resultList":[200,200,null]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGc8wnIlVOcXLia5iaTT3au4uibFBS1lSW5Zdic2xLtKJzId4zBwE7s3TnjQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":617,"destHeight":1052,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn61@2020_6/2021/07/14/17-39-49-400_e5e5894ab9fe70ff.webp","sourceBytes":25795,"destBytes":25836,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":3770,"convertSpendMs":16,"createdTime":"2021-07-15 01:39:45","host":"us-034*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25.2 KB","destSize":"25.2 KB","compressRate":"100.2%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGQeePs2NCSbIdvl997a7mWGHUWic5kGghXVFpRNPwYtOggZytGywNMaw/640?wx_fmt=png","sourceStatusCode":200,"destWidth":735,"destHeight":566,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn49@2020_5/2021/07/14/17-39-55-161_07cce07458eee7f2.webp","sourceBytes":35770,"destBytes":14326,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":8388,"convertSpendMs":16,"createdTime":"2021-07-15 01:39:47","host":"us-009*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.9 KB","destSize":"14 KB","compressRate":"40.1%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGrQYZvMcSZIk3pwEL9FeUYTrYH4C2bLQg1tBCbBuiaUKSoYoREKlTmvQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":941,"destHeight":830,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn56@2020_4/2021/07/14/17-39-55-711_b116d9d48d02d39d.webp","sourceBytes":24572,"destBytes":25504,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":10400,"convertSpendMs":21,"createdTime":"2021-07-15 01:39:45","host":"europe69*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24 KB","destSize":"24.9 KB","compressRate":"103.8%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/2A8tXicCG8ylbWIGfdoDED35IRRySQZTXUkJ1eop9MHApzFibKnOo0diboXpl0rmS5mH78YJhsWQv0dhv718A6kUA/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":600,"destHeight":550,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn48@2020_2/2021/07/14/17-39-58-754_f93d0239d4369c75.webp","sourceBytes":37143,"destBytes":31608,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":13144,"convertSpendMs":11,"createdTime":"2021-07-15 01:39:45","host":"us-005*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.3 KB","destSize":"30.9 KB","compressRate":"85.1%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGPUlKNDfgN0zClaaCHC4G47K2WjaG2zWcM40qfnbbOSxnIafLiag54LA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":669,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn79@2020_6/2021/07/14/17-40-01-419_af5d086b606caaf9.webp","sourceBytes":57312,"destBytes":30956,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":15950,"convertSpendMs":93,"createdTime":"2021-07-15 01:39:45","host":"us-037*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56 KB","destSize":"30.2 KB","compressRate":"54%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGSRYLIwibtYjcDd7A7uajIibwxETrKPjGcO5FwnnH1eib3LcmexoYownyQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":262,"destHeight":269,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn39@2020_4/2021/07/14/17-40-07-174_32eef2d63d357e6e.webp","sourceBytes":55339,"destBytes":7966,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":21584,"convertSpendMs":6,"createdTime":"2021-07-15 01:39:45","host":"us-029*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"54 KB","destSize":"7.8 KB","compressRate":"14.4%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGwoic656sZhv2TiaWBoaZtibN0ZzXdY7oJn0RUzjhKpa8KavmicSzQCYVOA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":467,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn35@2020_1/2021/07/14/17-40-09-088_ff708de9fe3e012f.webp","sourceBytes":60230,"destBytes":19280,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":23715,"convertSpendMs":23,"createdTime":"2021-07-15 01:39:45","host":"europe65*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"58.8 KB","destSize":"18.8 KB","compressRate":"32%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGu7I5I3EJZTdlJMGMxibIkYquScTY5XibRicykIrEHAp7qBag50qH7I4UA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":670,"destHeight":978,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn71@2020_5/2021/07/14/17-40-09-601_f2fae786f5ee76e1.webp","sourceBytes":111303,"destBytes":34176,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":24336,"convertSpendMs":31,"createdTime":"2021-07-15 01:39:45","host":"us-010*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"108.7 KB","destSize":"33.4 KB","compressRate":"30.7%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGQib57JdYribwbrX2jQofvNhqfIb5vKNxnWvhvvPWOVrhJkF21brtQoRg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":972,"destHeight":1099,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn92@2020_3/2021/07/14/17-40-11-554_edc70ae472f3efb9.webp","sourceBytes":134147,"destBytes":44068,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":25959,"convertSpendMs":62,"createdTime":"2021-07-15 01:39:45","host":"us-55*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"131 KB","destSize":"43 KB","compressRate":"32.9%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGHzPUrqkRRleVEhkggqZlicf5ecE8ArgrSGLVoJTpWbjibUDp0iaxhp6Kg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":534,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn60@2020_1/2021/07/14/17-40-12-967_780cbd0fcfa14102.webp","sourceBytes":119729,"destBytes":37070,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":27365,"convertSpendMs":29,"createdTime":"2021-07-15 01:39:45","host":"us-033*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"116.9 KB","destSize":"36.2 KB","compressRate":"31%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGU26ZdoeQFhWIKBHMy2RypR82LyaDeCBvDCebiavq67EsPicrw7SUyXqg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":451,"destHeight":225,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn26@2020_6/2021/07/14/17-40-14-327_18c9d9e8ee0d23c4.webp","sourceBytes":41512,"destBytes":7884,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":28768,"convertSpendMs":14,"createdTime":"2021-07-15 01:39:45","host":"us-014*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"40.5 KB","destSize":"7.7 KB","compressRate":"19%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGI2nOg1Itlj3yibLy1YFtO4DaHNkoqY9R7jkqVonmiagLIAPQLgyeX8oQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":747,"destHeight":1027,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn68@2020_5/2021/07/14/17-40-57-087_437f6aba530ecf22.webp","sourceBytes":59569,"destBytes":23574,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":10919,"convertSpendMs":23,"createdTime":"2021-07-15 01:40:46","host":"us-55*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"58.2 KB","destSize":"23 KB","compressRate":"39.6%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGFficdJJibJibMF4xUticsiao021epYczwBOTCXIayKhiaxPlKBictXBJ4TPjw/640?wx_fmt=png","sourceStatusCode":200,"destWidth":670,"destHeight":978,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn17@2020_2/2021/07/14/17-41-03-611_f1bd95eb46938200.webp","sourceBytes":101226,"destBytes":34516,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":15412,"convertSpendMs":56,"createdTime":"2021-07-15 01:40:48","host":"us-014*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"98.9 KB","destSize":"33.7 KB","compressRate":"34.1%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZG5M6jAQ1axxMc24zo24lmzQicjWQNF4d9YEBWrkH5vibn3j0Ov7GYafrg/640?wx_fmt=png","sourceStatusCode":200,"destWidth":456,"destHeight":1010,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn88@2020_6/2021/07/14/17-41-09-513_a5282893e310330b.webp","sourceBytes":61084,"destBytes":19124,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":21724,"convertSpendMs":18,"createdTime":"2021-07-15 01:40:48","host":"us-010*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.7 KB","destSize":"18.7 KB","compressRate":"31.3%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGmU5eDc1GSRA9dGhUQ7wAlSfScVZTIQ5nMpT5tt1yy5hncjdITVjPVA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":605,"destHeight":886,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn41@2020_4/2021/07/14/17-41-14-448_5ff5877a609c9289.webp","sourceBytes":94375,"destBytes":31206,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":26282,"convertSpendMs":28,"createdTime":"2021-07-15 01:40:48","host":"us-008*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"92.2 KB","destSize":"30.5 KB","compressRate":"33.1%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGiciauRKKExmPljVhfoGVhgg9ZlUQQGSINQdPZEmQon7VnkMic3dCZCYAA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":667,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn82@2020_4/2021/07/14/17-41-45-789_5c9955803079f544.webp","sourceBytes":125479,"destBytes":31672,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":57579,"convertSpendMs":41,"createdTime":"2021-07-15 01:40:48","host":"us-009*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"122.5 KB","destSize":"30.9 KB","compressRate":"25.2%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/PoF8jo1PmpwwTDZWIWFC9LakSgxrYMZGtnwicDafN34ibW12dBjvVgUdnEnDibWKkLBiafdjHnr0UNzZKIIMDoVsLA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":898,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn4@2020_3/2021/07/14/17-41-46-999_f823e93de6885903.webp","sourceBytes":187241,"destBytes":44310,"targetWebpQuality":75,"feedId":2521,"totalSpendMs":58787,"convertSpendMs":39,"createdTime":"2021-07-15 01:40:48","host":"us-033*","referer":"http://weixin.sogou.com/weixin?type=2&query=ImportNew+%E9%9D%A2%E8%AF%95%EF%BC%9ATCP%E5%8D%8F%E8%AE%AE%E7%BB%8F%E5%85%B8%E5%8D%81%E4%BA%94%E8%BF%9E%E9%97%AE%EF%BC%81","linkMd5ListStr":"2219d4549dbf95446026c39d9794fa8b","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"182.9 KB","destSize":"43.3 KB","compressRate":"23.7%"}],"successGithubMap":{"myreaderx25":1,"myreaderx7":1,"myreaderx16":1,"myreaderx10":1,"myreaderx21":1,"myreaderx4":1,"myreaderx32":1,"myreaderx33":1,"myreaderx22":1,"myreaderx2":1,"myreaderx1":1,"myreaderx13":1,"myreaderx24":1,"myreaderx30":1,"myreaderx29":1,"myreaderx19":1,"myreaderx":1},"failGithubMap":{"myreaderx14":1,"myreaderx23":1}}