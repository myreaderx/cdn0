{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-14 11:17:48","updatedTime":"2020-10-14 11:17:48","title":"FFmpeg笔记","link":"https://blog.ykqmain.com/ffmpeg/","description":"<p>Mac上面音频转换可以使用<a href=\"https://tmkk.undo.jp/xld/index_e.html\" target=\"_blank\" rel=\"noopener\">XLD</a>，视频转换可以使用<a href=\"https://handbrake.fr/\" target=\"_blank\" rel=\"noopener\">HandBrake</a>。</p>\n<p>我只是<strong>偶尔</strong>需要使用视频转换功能，想要<strong>强大、免费</strong>的工具，非<a href=\"https://www.ffmpeg.org\" target=\"_blank\" rel=\"noopener\">FFmpeg</a>莫属，正好可以折腾一下。这玩意是真的复杂，也确实强大，必须写一篇博客记录，以备使用时查询。</p>\n<p>运行环境：<br>\n  <figure class=\"highlight css\">\n   <table>\n    <tr>\n     <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br /></br></pre></td>\n     <td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">macOS</span> 10<span class=\"selector-class\">.14</span><span class=\"selector-class\">.6</span></span><br><span class=\"line\"><span class=\"selector-tag\">ffmpeg</span>: <span class=\"selector-tag\">stable</span> 4<span class=\"selector-class\">.2</span><span class=\"selector-class\">.2</span></span><br /></br></pre></td>\n    </tr>\n   </table>\n  </figure></br></p>\n<h2 id=\"一、在Mac上安装FFmpeg\"><a href=\"https://blog.ykqmain.com/ffmpeg/#一、在Mac上安装FFmpeg\" class=\"headerlink\" title=\"一、在Mac上安装FFmpeg\"></a>一、在Mac上安装FFmpeg</h2>\n<p>这里是<a href=\"https://trac.ffmpeg.org/wiki/CompilationGuide/macOS\" target=\"_blank\" rel=\"noopener\">官方文档</a>，里面提到了安装FFmpeg的三种方法：</p>\n<ol>\n <li><p><a href=\"https://brew.sh\" target=\"_blank\" rel=\"noopener\">Homebrew</a></p></li>\n <li><p>直接下载<a href=\"https://www.ffmpeg.org/download.html#build-mac\" target=\"_blank\" rel=\"noopener\">静态版本</a>的FFmpeg</p>\n  <ul>\n   <li>优点：直接运行使用</li>\n   <li>缺点：手动升级，可能不包含所需的所有编码器或过滤器</li>\n  </ul></li>\n <li><p>自己编译，下载源码，运行<code>./configure</code>，进行<code>make</code>和<code>make install</code></p>\n  <ul>\n   <li>优点：貌似没有优点，可能能够体会一把自己掌握的控制感</li>\n   <li>缺点：需要手动设置配置选项，还需要自己安装第三方库</li>\n  </ul></li>\n</ol>\n<p>第3种方法不推荐。第2种方法可以考虑，下载之后移到<code>/usr/local/bin</code>就可以使用，需要升级就手动下载新版，覆盖原来的即可。还需要注意，这可能是个“基础版”的FFmpeg，不包含某些高级功能。</p>\n<p>在 Mac 上，凡是跟命令行相关的包，推荐统一用Homebrew，便于管理和更新。首先需要安装Xcode和命令行工具<code>xcode-select --install</code>，然后安装<a href=\"https://brew.sh\" target=\"_blank\" rel=\"noopener\">Homebrew</a>。</p>\n<p><strong>注意：</strong>如果使用<del><code>brew install ffmpeg</code></del>安装，得到的也是一个“基础版”的FFmpeg，基础版和高级版所包含库的区别：<br><img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/ffmpeg/1.png!sy\" alt=\"\" /></br></p>\n<p><strong>下面是Homebrew安装FFmpeg的过程：</strong>，“高级版”的FFmpeg，Homebrew官方不提供，需要用到第三方<a href=\"https://github.com/homebrew-ffmpeg/homebrew-ffmpeg\" target=\"_blank\" rel=\"noopener\">homebrew-ffmpeg</a></p>\n<ol>\n <li><p><strong>完全安装</strong></p>\n  <ul>\n   <li><code>brew tap homebrew-ffmpeg/ffmpeg</code></li>\n   <li><code>brew install homebrew-ffmpeg/ffmpeg/ffmpeg</code></li>\n  </ul></li>\n <li><p>选项安装</p>\n  <ul>\n   <li>查看选项 <code>brew options homebrew-ffmpeg/ffmpeg/ffmpeg</code></li>\n   <li>安装 <code>brew install homebrew-ffmpeg/ffmpeg/ffmpeg --with-&lt;option1&gt; --with-&lt;option2&gt; ...</code></li>\n  </ul></li>\n <li><p>更新</p>\n  <ul>\n   <li><code>brew update &amp;&amp; brew upgrade homebrew-ffmpeg/ffmpeg/ffmpeg</code></li>\n  </ul></li>\n</ol>\n<p><br /></p>\n<p>安装成功截图，<br><img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/ffmpeg/2.png!sy\" alt=\"\" /></br></p>\n<p><br /></p>\n<h2 id=\"二、FFmpeg的常见用法\"><a href=\"https://blog.ykqmain.com/ffmpeg/#二、FFmpeg的常见用法\" class=\"headerlink\" title=\"二、FFmpeg的常见用法\"></a>二、FFmpeg的常见用法</h2>\n<p>首先是<a href=\"https://ffmpeg.org/ffmpeg.html\" target=\"_blank\" rel=\"noopener\">官方文档</a>，有啥不懂的基本能找到答案，就是成本有点高。</p>\n<p>ffmpeg通用语法格式：</p>\n<p><code>ffmpeg [全局选项] {[输入文件参数] -i 输入文件} ... {[输出文件参数] 输出文件} ...</code></p>\n<ul>\n <li><code>ffmpeg -formats</code> 支持的格式</li>\n <li><code>ffmpeg -codecs</code> 支持的编码</li>\n <li><code>ffmpeg -encoders</code> 支持的编码器<br><br /></br></li>\n</ul>\n<ol>\n <li><p>获取媒体文件信息</p>\n  <ol>\n   <li><p><code>ffmpeg -i video.mp4</code> 详细信息</p></li>\n   <li><p><code>ffmpeg -i video.mp4 -hide_banner</code> 省略FFmpeg细节，仅显示媒体信息</p></li>\n  </ol>\n  <ul>\n   <li><strong>注意：</strong>文件名有空格或者特殊字符，使用双引号<code>\" \"</code>将文件名包起来<br><img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/ffmpeg/3.png!sy\" alt=\"\"><br><br /></br></img></br></li>\n  </ul></li>\n <li><p>视频转换</p>\n  <ol>\n   <li><p>从flv转到mp4</p>\n    <ul>\n     <li><code>ffmpeg -i input.flv -c copy output.mp4</code></li>\n    </ul></li>\n   <li><p>从GIF转mp4</p>\n    <ul>\n     <li><code>ffmpeg -i 1.gif -vf scale=600:-2,format=yuv420p out.mp4</code><br><br /></br></li>\n    </ul></li>\n  </ol></li>\n <li><p>剪切</p></li>\n</ol>\n<ul>\n <li><code>ffmpeg -i input.mp4 -ss 00:01:30 -to 00:10:00 -c copy output.mp4</code><br><br /></br></li>\n <li><code>-ss</code> 开始时间</li>\n <li><code>-to</code> 结束时间</li>\n <li><code>-t</code> 持续时间</li>\n <li><code>-c copy</code> 直接复制，不经过重新编码，这样比较快<br><br /></br></li>\n</ul>\n<ol start=\"4\">\n <li>合并</li>\n</ol>\n<p>创建<code>1.txt</code>，所有的文件都应该是相同的格式（相同的编码），所有文件的路径应该逐个列出：<br>\n  <figure class=\"highlight gradle\">\n   <table>\n    <tr>\n     <td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br /></br></br></br></pre></td>\n     <td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">file</span> <span class=\"regexp\">/Users/y</span>ang<span class=\"regexp\">/Desktop/</span>part1.mp4</span><br><span class=\"line\"><span class=\"keyword\">file</span> <span class=\"regexp\">/Users/y</span>ang<span class=\"regexp\">/Desktop/</span>part2.mp4</span><br><span class=\"line\"><span class=\"keyword\">file</span> <span class=\"regexp\">/Users/y</span>ang<span class=\"regexp\">/Desktop/</span>part3.mp4</span><br><span class=\"line\"><span class=\"keyword\">file</span> <span class=\"regexp\">/Users/y</span>ang<span class=\"regexp\">/Desktop/</span>part4.mp4</span><br /></br></br></br></pre></td>\n    </tr>\n   </table>\n  </figure></br></p>\n<p>然后拼接所有文件：<br><code>ffmpeg -f concat -i 1.txt -c copy output.mp4</code><br><br /></br></br></p>\n<ol start=\"5\">\n <li>视频提取音频</li>\n</ol>\n<ul>\n <li><code>ffmpeg -i input.mp4 -vn -c:a copy output.aac</code></li>\n <li><code>ffmpeg -i input.mp4 -vn -ar 44100 -ab 320 -ac 2 -f mp3 output.mp3</code><br><br /></br></li>\n <li><code>-vn</code> 在输出文件中移除视频流</li>\n <li><code>-c:a copy</code> 不改变编码，直接拷贝</li>\n <li><code>-ar</code> 设置输出音频频率，常用 22050 Hz, 44100 Hz, 48000 Hz</li>\n <li><code>-ab</code> 设置音频比特率，常用 128 kbps, 160 kbps, 192 kbps, 256 kbps, 320 kbps</li>\n <li><code>-ac</code> 设置音频通道数目</li>\n <li><code>-f</code> 输出文件格式<br><br /></br></li>\n</ul>\n<ol start=\"6\">\n <li>截图</li>\n</ol>\n<ul>\n <li><code>ffmpeg -i input.mp4 -ss 00:01:29 -t 00:00:05 -vf fps=1 /Users/yang/Desktop/output-%d.png</code></li>\n <li><p>从<code>00:01:29</code>开始，每隔1秒截一张图，持续<code>00:00:05</code>秒，输出到桌面</p></li>\n <li><p><code>ffmpeg -i input.mp4 -ss 00:00:14 -t 00:00:01 -y output-%d.png</code></p></li>\n <li><p>从<code>00:00:14</code>开始截图，1秒内所有帧</p></li>\n <li><p><code>ffmpeg -i input -ss 00:01:30 -vframes 1 output.png</code></p></li>\n <li>截取<code>00:01:30</code>的那1帧<br><br /></br></li>\n</ul>\n<ol start=\"7\">\n <li>倍速</li>\n</ol>\n<ul>\n <li><code>ffmpeg -i input.mkv -filter_complex \"[0:v]setpts=0.8*PTS[v];[0:a]atempo=1.25[a]\" -map \"[v]\" -map \"[a]\" output.mkv</code></li>\n <li><p>1.25倍</p></li>\n <li><p><code>ffmpeg -i input.mkv -filter_complex \"[0:v]setpts=0.5*PTS[v];[0:a]atempo=2.0[a]\" -map \"[v]\" -map \"[a]\" output.mkv</code></p></li>\n <li>2倍<br><br /></br></li>\n</ul>\n<p><strong>持续更新常用命令当作备忘录……</strong></p>\n<p><br><br /></br></p>","descriptionType":"html","publishedDate":"Thu, 27 Feb 2020 16:00:00 +0000","feedId":34049,"bgimg":"https://ianna.oss-cn-hangzhou.aliyuncs.com/ffmpeg/1.png!sy","linkMd5":"69e2dcb9c5a28e9cf7226332408e768e","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn6@2020_4/2020/10/14/03-17-55-974_610963d2ee8b48fd.webp","destWidth":2164,"destHeight":1576,"sourceBytes":1238623,"destBytes":293218,"author":"","articleImgCdnMap":{"https://ianna.oss-cn-hangzhou.aliyuncs.com/ffmpeg/1.png!sy":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn6@2020_4/2020/10/14/03-17-55-974_610963d2ee8b48fd.webp","https://ianna.oss-cn-hangzhou.aliyuncs.com/ffmpeg/2.png!sy":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn56@2020_2/2020/10/14/03-18-13-832_92c09ffe2d795c04.webp","https://ianna.oss-cn-hangzhou.aliyuncs.com/ffmpeg/3.png!sy":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn57@2020_5/2020/10/14/03-18-03-618_eb6faa49f437b8f1.webp"},"publishedOrCreatedDate":1602645468506}],"record":{"createdTime":"2020-10-14 11:17:48","updatedTime":"2020-10-14 11:17:48","feedId":34049,"fetchDate":"Wed, 14 Oct 2020 03:17:48 +0000","fetchMs":738,"handleMs":28,"totalMs":27726,"newArticles":0,"totalArticles":40,"status":1,"type":0,"ip":"8f41f8a56dca4331062af167bd7997ff","hostName":"europe68*","requestId":"2ca22e75ff93464f8922b1a6fecfe37a_34049","contentType":"application/xml","totalBytes":773126,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":3,"articlesImgsGithubTotal":3,"successGithubMap":{"myreaderx2":1,"myreaderx1":1,"myreaderx30":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 03:00:24","updatedTime":"2020-09-07 05:10:02","id":34049,"name":"iAnna","url":"http://blog.ykqmain.com/atom.xml","subscriber":94,"website":null,"icon":"https://blog.ykqmain.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn82@2020_4/2020/09/06/21-09-43-962_4ccf5fd1b2f3f906.ico","description":"Life & Technology","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":293218,"tmpBodyImgCdnBytes":479908,"tmpBgImgCdnBytes":0,"extra4":{"start":1602645467701,"total":0,"statList":[{"spend":777,"msg":"获取xml内容"},{"spend":28,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":18278,"msg":"正文链接上传到cdn"}]},"extra5":3,"extra6":3,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{"https://blog.ykqmain.com/ffmpeg/_#一、在Mac上安装FFmpeg":"https://blog.ykqmain.com/ffmpeg/#一、在Mac上安装FFmpeg","https://blog.ykqmain.com/ffmpeg/_#二、FFmpeg的常见用法":"https://blog.ykqmain.com/ffmpeg/#二、FFmpeg的常见用法"},"extra111_proxyServerAndStatMap":{"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-58.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://ianna.oss-cn-hangzhou.aliyuncs.com/ffmpeg/1.png!sy","sourceStatusCode":200,"destWidth":2164,"destHeight":1576,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn6@2020_4/2020/10/14/03-17-55-974_610963d2ee8b48fd.webp","sourceBytes":1238623,"destBytes":293218,"targetWebpQuality":75,"feedId":34049,"totalSpendMs":8447,"convertSpendMs":506,"createdTime":"2020-10-14 11:17:48","host":"us-011*","referer":"https://blog.ykqmain.com/ffmpeg/","linkMd5ListStr":"69e2dcb9c5a28e9cf7226332408e768e,69e2dcb9c5a28e9cf7226332408e768e","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"2、Referer字段 ： https://blog.ykqmain.com/ffmpeg/","extra23historyStatusCode":[403,200],"sourceSize":"1.2 MB","destSize":"286.3 KB","compressRate":"23.7%"},{"code":1,"isDone":false,"source":"https://ianna.oss-cn-hangzhou.aliyuncs.com/ffmpeg/3.png!sy","sourceStatusCode":200,"destWidth":2164,"destHeight":1576,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn57@2020_5/2020/10/14/03-18-03-618_eb6faa49f437b8f1.webp","sourceBytes":1007219,"destBytes":216178,"targetWebpQuality":75,"feedId":34049,"totalSpendMs":8101,"convertSpendMs":212,"createdTime":"2020-10-14 11:17:57","host":"europe-57*","referer":"https://blog.ykqmain.com/ffmpeg/","linkMd5ListStr":"69e2dcb9c5a28e9cf7226332408e768e","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"2、Referer字段 ： https://blog.ykqmain.com/ffmpeg/","extra23historyStatusCode":[403,200],"sourceSize":"983.6 KB","destSize":"211.1 KB","compressRate":"21.5%"},{"code":1,"isDone":false,"source":"https://ianna.oss-cn-hangzhou.aliyuncs.com/ffmpeg/2.png!sy","sourceStatusCode":200,"destWidth":2164,"destHeight":1576,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn56@2020_2/2020/10/14/03-18-13-832_92c09ffe2d795c04.webp","sourceBytes":1197569,"destBytes":263730,"targetWebpQuality":75,"feedId":34049,"totalSpendMs":18252,"convertSpendMs":363,"createdTime":"2020-10-14 11:17:57","host":"europe-58*","referer":"https://blog.ykqmain.com/ffmpeg/","linkMd5ListStr":"69e2dcb9c5a28e9cf7226332408e768e","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"2、Referer字段 ： https://blog.ykqmain.com/ffmpeg/","extra23historyStatusCode":[403,200],"sourceSize":"1.1 MB","destSize":"257.5 KB","compressRate":"22%"}],"successGithubMap":{"myreaderx2":1,"myreaderx1":1,"myreaderx30":1},"failGithubMap":{}}