{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-19 12:08:27","updatedTime":"2020-10-19 12:08:27","title":"如何使用 WebAssembly 和 JS 构建高性能应用程序","link":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%C2%A0WebAssembly%C2%A0%E5%92%8C%C2%A0JS%C2%A0%E6%9E%84%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F","description":"<div><div><div id=\"media\" class=\"rich_media_thumb_wrp\">\n\n            <img class=\"rich_media_thumb\" src=\"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6MdSQ3rPIcZnG3DIR00ZiaroJQXKoaUcCyukelumYPT9OIRCMIfMY8WA?imageView2/1/w/600\">\n        </div>\n    \n\n    \n\n    <div class=\"rich_media_content\" id=\"js_content\">\n                    \n\n                    \n\n                    \n                    \n                    <section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\" data-mpa-powered-by=\"yiban.io\"><section style=\"text-align: left;\">\n\t\t<img data-ratio=\"0.6666666666666666\" data-type=\"jpeg\" data-w=\"1920\" style=\"width: 100%; border-radius: 4px; margin-bottom: 25px; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6y9OYllrInNTFbldvm0aUAw3MyYHicnjgCFRPbVqFBw7OOq9fk8WGkLw/640?wx_fmt=jpeg\">\n\t</section><section style=\"font-size: 14px;color: rgb(145, 145, 145);text-align: left;line-height: 1em;margin-top: 13px;padding-left: 14px;\">\n\t\t作者 | Mahdhi Rezvi\t</section><section style=\"font-size: 14px;color: rgb(145, 145, 145);text-align: left;line-height: 1em;margin-top: 13px;padding-left: 14px;\">\n\t\t译者 | 王强\t</section><section style=\"font-size: 14px;color: rgb(145, 145, 145);text-align: left;line-height: 1em;margin-top: 13px;padding-left: 14px;\">\n\t\t策划 | 李俊辰\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">本文最初发布于 Medium 网站，经原作者授权由 InfoQ 中文站翻译并分享。</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">自计算机发明以来，原生应用程序的性能有了巨大的提升。相比之下，由于 JavaScript 最初并不是为提高速度而构建的，因此 Web 应用程序的运行速度曾经相当缓慢。但是，由于浏览器之间的激烈竞争以及 JavaScript 引擎（例如 V8）的迅速发展，JavaScript 在机器上的运行速度也变得非常快了。但是它仍然无法在速度上击败原生应用程序。这主要是由于 JavaScript 代码必须经过多个流程才能生成机器代码。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: center;\"><img data-ratio=\"0.2758333333333333\" data-type=\"jpeg\" data-w=\"1200\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6JTU7vIFSk7J8ktL4Q53CTicSvCAu9SuqzIjt1lhcrWWyqC5Uhq7rIjw/640?wx_fmt=jpeg\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">JS 引擎花费的平均时间</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">随着 WebAssembly 的引入，现代 Web 为我们所知的一切都有望迎来变革。这项技术快如闪电。在这篇文章文章中，我们就来看一下什么是 WebAssembly，以及如何将它与 JavaScript 集成以构建高性能应用程序。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>什么是 WebAssembly？</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">在深入了解 WebAssembly 之前，我们先来看一下什么是 Assembly。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">汇编（Assembly）是一种底层编程语言，与 CPU 架构的机器级指令有着非常紧密的联系。换句话说，它离机器可理解的代码（称为机器代码）只差一个转换过程。这种转换过程称为 <strong style=\"text-align: left;\">汇编</strong>。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">顾名思义，<strong style=\"text-align: left;\">WebAssembly</strong> 可以理解为 Web 的汇编。它是一种类似于汇编语言的底层语言，有着紧凑的二进制格式，使你能够以接近原生的速度运行 Web 应用程序。它还为 C、C++ 和 Rust 等语言提供了编译目标，从而使客户端应用程序能够以接近原生的性能运行在 Web 上。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">此外，WebAssembly 被设计为与 JavaScript 并存，而不是替代后者。使用 WebAssembly JavaScript API，你可以在两种语言之间来回交换代码，而不会出现任何问题。这样，你就可以获得同时具备 WebAssembly 的功能和性能，以及 JavaScript 的多功能和适应性的应用程序。这打开了一个 Web 应用程序的全新世界，我们可以在 Web 上运行很多原本不准备用于 Web 的代码和功能。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>它带来了什么变化</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Lin Clark 预测，2017 年推出的 WebAssembly 可能会让 Web 开发产业迎来全新的拐点。上一个拐点来自现代浏览器中引入的 JIT 编译，其使 JavaScript 的速度提高了近 10 倍。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: center;\"><img data-ratio=\"0.5733333333333334\" data-type=\"png\" data-w=\"1200\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6TVdrShyUqGxpFCJyj4ZWYoWCYibyibaXuBCrByYiceKibQpdRhPGQnLOVA/640?wx_fmt=png\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">JavaScript 性能</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">如果对比 WebAssembly 与 JavaScript 的编译过程，你会注意到前者剥离了几个步骤，剩下的都被缩减了。下图是两种语言编译过程的直观对比。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: center;\"><img data-ratio=\"0.4058333333333333\" data-type=\"png\" data-w=\"1200\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6GZqV1ZMlGnYib7pkAbxRDp4CTGINvSIJGgKIOgDEEzAicTc53d9icgkWQ/640?wx_fmt=png\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">WebAssembly 与传统 Web 应用程序编译过程的近似对比</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">仔细对比两者，你会注意到 WebAssembly 中的重优化部分已被完全剥离。这主要是因为：编译器无需对 WebAssembly 代码做任何假设，因为数据类型之类的东西在代码中是显式展现的。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">但 JavaScript 不是这样，因为 JIT 应该为运行代码做出假设，如果假设失败，则应重优化代码。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>如何获取 WebAssembly 代码</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">WebAssembly 是一项伟大的技术，但是你该如何使用它的力量呢？</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">你有几种方法可用。</p><ul class=\"list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">从头开始编写 WebAssembly 代码——除非你非常了解它的基础知识，否则完全不建议这样做。</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">从 C 编译为 WebAssembly</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">从 C++ 编译为 WebAssembly</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">从 Rust 编译为 WebAssembly</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">使用 AssemblyScript 将 Typescript 的一个严格变体编译为 WebAssembly。对于不熟悉 C/C++ 或 Rust 的 Web 开发人员来说，这是一个不错的选项。</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">Wasm 还支持更多语言选项，后文会提到。</p></li></ul><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">此外，还有 Emscripten 和 WebAssembly Studio 之类的工具可以帮助你完成上述过程。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>JS 的 WebAssembly API</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">为了充分利用 WebAssembly 的功能，我们必须将其与 JavaScript 代码集成在一起。这可以在 JavaScript WebAssembly API 的帮助下完成。</p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>模块编译和实例化</span>\n\t</section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;text-align: left;\">WebAssembly 代码位于.wasm 文件中。该文件应编译为针对底层机器的机器码。你可以使用 WebAssembly.compile 方法来编译 WebAssembly 模块。收到已编译的模块后，可以使用 WebAssembly.instantiate 方法实例化已编译的模块。另外，你也可以将获取.wasm 文件获得的数组缓存传递到 WebAssembly.instantiate 方法中。这也可以，因为实例化方法有两个重载。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 21px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">let</span> exports;<br mpa-from-tpl=\"t\">fetch(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'sample.wasm'</span>).then(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 79px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 57px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">response</span> =&gt;</span><br mpa-from-tpl=\"t\">  response.arrayBuffer();<br mpa-from-tpl=\"t\">).then(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">bytes</span> =&gt;</span><br mpa-from-tpl=\"t\">  WebAssembly.instantiate(bytes);<br mpa-from-tpl=\"t\">).then(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 73px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">results</span> =&gt;</span> {<br mpa-from-tpl=\"t\">  exports = results.instance.exports;<br mpa-from-tpl=\"t\">});</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">上述方法的缺点之一是这些方法不能直接访问字节码，因此在编译 / 实例化 wasm 模块之前，需要采取额外的步骤将响应转换为 ArrayBuffer。<br></p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;text-align: left;\">相比之下，我们可以使用 WebAssembly.compileStreaming/WebAssembly.instantiateStreaming 方法来实现上述功能，其优点是可以直接访问字节码，而无需将响应转换为 ArrayBuffer。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 21px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">let</span> exports;<br mpa-from-tpl=\"t\">WebAssembly.instantiateStreaming(fetch(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'sample.wasm'</span>))<br mpa-from-tpl=\"t\">.then(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">obj</span> =&gt;</span> {<br mpa-from-tpl=\"t\">  exports = obj.instance.exports;<br mpa-from-tpl=\"t\">})</code></pre></section><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;text-align: left;\">应注意，WebAssembly.instantiate 和 WebAssembly.instantiateStreaming 会返回实例以及已编译的模块，这些实例可用于快速启动模块的实例。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 21px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">let</span> exports;<br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 21px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">let</span> compiledModule;<br mpa-from-tpl=\"t\">WebAssembly.instantiateStreaming(fetch(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'sample.wasm'</span>))<br mpa-from-tpl=\"t\">.then(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">obj</span> =&gt;</span> {<br mpa-from-tpl=\"t\">  exports = obj.instance.exports;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 174px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">//access compiled module</span><br mpa-from-tpl=\"t\">  compiledModule = obj.module;<br mpa-from-tpl=\"t\">})</code></pre></section><section style=\"text-align: center;\"><span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>导入对象</span>\n\t<br></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">实例化 WebAssembly 模块实例时，可以选择传递一个导入对象，该对象将包含要导入到新创建的模块实例中的值。它们可以是 4 种类型。</p><ul class=\"list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">全局变量值</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">函数</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">memory</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">table</p></li></ul><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">导入对象可以视为提供给模块实例以帮助其完成任务的工具。如果未提供导入对象，则编译器将分配默认值。</p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>全局变量</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">WebAssembly 允许你创建可从 JavaScript 和 WebAssembly 模块访问的全局变量实例。你可以导入 / 导出这些变量，并在一个或多个 WebAssembly 模块实例中使用它们。</p><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;margin-bottom: 15px;\">你可以使用 WebAssembly.Global() 构造器创建一个全局实例。<br mpa-from-tpl=\"t\"></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">global</span> = <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">new</span> WebAssembly.<span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">Global</span>({<br mpa-from-tpl=\"t\">    value: <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'i64'</span>,<br mpa-from-tpl=\"t\">    mutable: <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">true</span><br mpa-from-tpl=\"t\">}, <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">20</span>);</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">全局构造器接收两个参数。<br></p><ul class=\"list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">一个对象，包含描述全局变量的数据类型和可变性的属性。允许的数据类型为 i32、i64、f32 或 f64。</p></li><li><section style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;margin-bottom: 20px;\"><span style=\"color: rgb(63, 63, 63);text-align: justify;\">实际变量的初始值。</span><span style=\"color: rgb(63, 63, 63);text-align: justify;\">此值应为参数 1 中提到的类型。</span><span style=\"color: rgb(63, 63, 63);text-align: justify;\">例如，如果你声明类型为 i32，则变量应为 32 位整数。</span><span style=\"color: rgb(63, 63, 63);text-align: justify;\">同样，如果你声明类型为 f64，则变量应为 64 位浮点数。</span></section></li></ul><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">global</span> = <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">new</span> WebAssembly.Global({<br mpa-from-tpl=\"t\">    <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">value</span>: <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'i64'</span>,<br mpa-from-tpl=\"t\">    mutable: <span style=\"color: rgb(86, 182, 194);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(86, 182, 194);font-weight: 400;font-style: normal;\">true</span><br mpa-from-tpl=\"t\">}, <span style=\"color: rgb(209, 154, 102);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(209, 154, 102);font-weight: 400;font-style: normal;\">20</span>);<br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 21px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">let</span> importObject = {<br mpa-from-tpl=\"t\">    js: {<br mpa-from-tpl=\"t\">        <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">global</span><br mpa-from-tpl=\"t\">    }<br mpa-from-tpl=\"t\">};<br mpa-from-tpl=\"t\">WebAssembly.instantiateStreaming(fetch(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">'global.wasm'</span>), importObject)</code></pre></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\"><strong style=\"text-align: left;\">全局实例应传递到 importObject 上，以便在 WebAssembly 模块实例中访问它。</strong><br></p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>Memory</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">在实例化时，WebAssembly 模块将需要分配一个 memory 对象。该 memory 对象应与 importObject 一起传递。如果没能这样做，则 JIT 编译器将使用默认值自动创建一个 memory 对象并将其附加到实例。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">附加到模块实例的 memory 对象只是一个 ArrayBuffer。只需使用索引值，即可轻松访问 memory。此外，由于它是简单的 ArrayBuffer，因此可以简单地在 JavaScript 和 WebAssembly 之间传递和共享值。</p><section style=\"text-align: center;\">\n\t\t<span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>Table</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">WebAssembly Table 是一个可调整大小的数组，位于 WebAssembly 的 memory 之外。该 Table 的值都是函数引用。尽管这听起来很像 WebAssembly memory，但它们是不同的，主要区别在于 Memory 数组是原始字节，而 Table 数组是引用。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">引入 Table 主要是为了提高安全性。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">你可以使用 set()、grow() 和 get() 方法来操作 Table。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>    演示    </span></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">在这个演示中，我将使用 WebAssembly Studio 应用程序将一个 C 文件编译为.wasm。你可以在这里查看演示：</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://webassembly.studio/?f=wne209a6cxq</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">我创建了一个函数来计算 wasm 文件中一个数字的幂。我将必要的值传递给函数，并在 JavaScript 中接收输出。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">同样，我在 wasm 中进行了一些字符串操作。需要注意 wasm 没有字符串类型，因此它用的是 ASCII 值。返回到 JavaScript 的值将指向存储输出的 memory 位置。由于 memory 对象是 ArrayBuffer，因此我要进行迭代，直到收到字符串中的所有字符为止。</p>\n\t\t<section style=\"text-align: center;margin-bottom: 25px;\"><span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>JavaScript 文件<br mpa-from-tpl=\"t\"></span></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 21px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">let</span> exports;<br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 21px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">let</span> buffer;<br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 614px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 614px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">async</span>(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 0px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"></span>) =&gt; {<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">let</span> response = <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">await</span> fetch(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 130px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">'../out/main.wasm'</span>);<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">let</span> results = <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">await</span> WebAssembly.instantiate(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 202px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">await</span> response.arrayBuffer(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 0px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"></span>)</span>);<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">//or</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(92, 99, 112);background: rgba(0, 0, 0, 0);display: inline;width: 600px;text-decoration: none solid rgb(92, 99, 112);font-weight: 400;font-style: italic;\">// let results = await WebAssembly.instantiateStreaming(fetch('../out/main.wasm'));</span><br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">let</span> instance = results.instance;<br mpa-from-tpl=\"t\">  exports = instance.exports;<br mpa-from-tpl=\"t\">  buffer = <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">new</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">Uint8Array</span>(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 151px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">exports.memory.buffer</span>);<br mpa-from-tpl=\"t\">  findPower(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">5,3</span>);<br mpa-from-tpl=\"t\"><br mpa-from-tpl=\"t\">  printHelloWorld(<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 0px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"></span>);<br mpa-from-tpl=\"t\"><br mpa-from-tpl=\"t\">}</span>)<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span>;<br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">const</span> <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">findPower</span> = (<span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 137px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">base = 0, power = 0</span>) =&gt;</span> {<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">console</span>.log(exports.power(base,power));<br mpa-from-tpl=\"t\">}<br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">const</span> printHelloWorld = <span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span> =&gt;</span> {<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">let</span> pointer = exports.helloWorld();<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">let</span> str = <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"\"</span>;<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">for</span>(<span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 22px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">let</span> i = pointer;buffer[i];i++){<br mpa-from-tpl=\"t\">    str += <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">String</span>.fromCharCode(buffer[i]);<br mpa-from-tpl=\"t\">  }<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">console</span>.log(str);<br mpa-from-tpl=\"t\">}</code></pre></section>\n\t\t<section style=\"text-align: center;margin-bottom: 25px;\"><span style=\"display: inline-block;height: 38px;line-height: 42px;color: rgb(60, 112, 198);background-image: url(\" https: left center no-repeat initial>C 文件<br mpa-from-tpl=\"t\"></span></section><section data-mpa-preserve-tpl-color=\"t\" data-mpa-template=\"t\" mpa-preserve=\"t\" mpa-from-tpl=\"t\"><pre style=\"margin:0;padding:0;border-radius:none;background:none;\"><code style=\"border-radius: 4px;font-size: 0.85em;margin: 0px 0.15em;background: rgb(40, 44, 52);color: rgb(171, 178, 191);display: block;padding: 5.95px;overflow-x: auto;white-space: nowrap;\"><span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 419px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">#<span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">define</span> WASM_EXPORT __attribute__((visibility(<span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 65px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"default\"</span>)))</span><br mpa-from-tpl=\"t\"><span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 123px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">#<span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 51px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">include</span> <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 58px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\"><math.h></math.h></span></span><br mpa-from-tpl=\"t\"><br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 339px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">WASM_EXPORT<br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">double</span> <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 36px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">power</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 246px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">(<span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">double</span> number,<span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 43px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">double</span> power_value)</span> </span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> <span style=\"color: rgb(230, 192, 123);background: rgba(0, 0, 0, 0);display: inline;width: 21px;text-decoration: none solid rgb(230, 192, 123);font-weight: 400;font-style: normal;\">pow</span>(number,power_value);<br mpa-from-tpl=\"t\">}<br mpa-from-tpl=\"t\"><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 130px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">WASM_EXPORT<br mpa-from-tpl=\"t\"><span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 29px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">char</span>* <span style=\"color: rgb(97, 174, 238);background: rgba(0, 0, 0, 0);display: inline;width: 72px;text-decoration: none solid rgb(97, 174, 238);font-weight: 400;font-style: normal;\">helloWorld</span><span style=\"color: rgb(171, 178, 191);background: rgba(0, 0, 0, 0);display: inline;width: 15px;text-decoration: none solid rgb(171, 178, 191);font-weight: 400;font-style: normal;\">()</span></span>{<br mpa-from-tpl=\"t\">  <span style=\"color: rgb(198, 120, 221);background: rgba(0, 0, 0, 0);display: inline;width: 44px;text-decoration: none solid rgb(198, 120, 221);font-weight: 400;font-style: normal;\">return</span> <span style=\"color: rgb(152, 195, 121);background: rgba(0, 0, 0, 0);display: inline;width: 94px;text-decoration: none solid rgb(152, 195, 121);font-weight: 400;font-style: normal;\">\"hello world\"</span>;<br mpa-from-tpl=\"t\">}<span style=\"color: rgb(60, 112, 198);text-align: center;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;font-size: 16px;\"></span></code></pre></section><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>    用例    </span></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">WebAssembly 的诞生带来了很多全新的机遇。</p><ul class=\"list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\"><strong style=\"text-align: left;\">能够在 Web 环境中使用以 C/C++ 等语言编写的现有库 / 代码。</strong></p></li></ul><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">例如，如果你无法找到实现某些功能的 JavaScript 库，则必须从头开始编写并实现自己的库。但如果你可以找到实现相同功能，但使用不同语言编写的库，则可以使用 WebAssembly 的能力在 Web 应用程序中运行它。这是一项重大突破，因为从开发人员的角度来看，它将节省大量时间。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Squoosh 应用使用 WebAssembly 来实现其 QR 和图像检测功能。这样一来，即使在较旧的浏览器上，它们也能以接近原生的速度支持这些功能。此外，eBay 将其原生应用程序的 C++ 库编译为 WebAssembly，从而在 Web 应用程序中实现了条形码扫描功能。</p><ul class=\"list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\"><strong style=\"text-align: left;\">无需修改代码，就能在 Web 上运行用 C、C++、Rust 等语言编写的完全原生应用程序，性能表现也接近原生水平。</strong></p></li></ul><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">诸如 AutoCAD、QT 甚至谷歌地球之类的应用程序都可以在几乎不修改代码库的情况下以接近原生的性能运行在 Web 上，多亏了 Web Assembly 的强大力量。</p><ul class=\"list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\"><strong style=\"text-align: left;\">即使你找到了用 JavaScript 编写的类似库，也可以使用以 C、C++ 或 Rust 等语言编写的库，因为 WebAssembly 代码速度飞快，并能提供更好的质量。</strong></p></li></ul><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">谷歌团队将来自 C 和 C++ 等不同语言的编码器编译到了他们的 Squoosh 应用中，并替换掉了常规的编解码器（如 JPEG -&gt; MozJPEG）。这些替代品缩小了文件体积，而不会牺牲图像的视觉质量。</p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>支持的语言</span>\n\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">WebAssembly 支持不仅限于 C、C++ 和 Rust。许多开发人员也在努力纳入对其他语言的支持。以下是当前支持的语言列表。</p><ul class=\"list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">C/C++</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Rust</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">AssemblyScript（类似 TypeScript 的语法）</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">C#</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">F#</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Go</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Kotlin</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Swift</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">D</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Pascal</p></li><li><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">Zig</p></li></ul><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>    批评    </span></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">WebAssembly 允许在已编译的二进制文件中执行，因此带来了许多安全性质疑。甚至无需什么 trace 也可以利用这些漏洞，而且它们确实很难发现。尽管 WebAssembly 也有自己的安全特性，但我个人认为这方面仍需进一步改进。因为引入了那么多新功能，防病毒工具和 URL 过滤之类的传统防护技术根本无法提供全面保护。这意味着常规浏览器在未来会更加脆弱。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">关于这些问题的更多信息可以参考以下文章。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://www.virusbulletin.com/virusbulletin/2018/10/dark-side-webassembly/</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://securityboulevard.com/2020/01/research-more-worries-with-wasm-3/</span></p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://webassembly.org/docs/security/</span></p><section style=\"text-align: center;font-size: 20px;\">\n\t\t<span style=\"height: 65px;line-height: 95px;color: rgb(60, 112, 198);border-bottom: 2px solid rgb(27, 95, 160);background-image: url(\" https: no-repeat initial inline-block>    结论    </span></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">有人猜测 WebAssembly 将取代 JavaScript，但我必须说这是完全错误的。创建 WebAssembly 是为了与 JavaScript 共存，而不是替代它。此外，调试 JavaScript 比 WebAssembly 容易一些，并且在 Wasm 中没有 JavaScript 的那种自由气氛。</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;text-align: left;\">大家都对它寄予厚望，可以肯定地说 WebAssembly 能够为一系列应用铺平道路，惊艳世人。</p><section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\"><blockquote style=\"margin-top: 0px;margin-bottom: 0px;padding-top: 0px;padding-left: 0px;border-left: none;\"><p style=\"font-size: 16px;white-space: pre-line;line-height: 1.75em;margin-top: 27px;padding-right: 20px;padding-left: 20px;color: rgb(91, 172, 235);\">“没人能肯定地说这些性能改进可以催生怎样的应用。但以史为鉴，我们可以对此满怀期待。”</p><span style=\"display: block;clear: both;\"></span></blockquote><blockquote style=\"margin-top: 0px;margin-bottom: 0px;padding-top: 0px;padding-left: 0px;border-left: none;\"><p style=\"font-size: 16px;white-space: pre-line;line-height: 1.75em;padding-right: 20px;padding-left: 20px;color: rgb(91, 172, 235);text-align: right;margin-top: 12px;\">—— Lin Clark</p><span style=\"display: block;clear: both;\"></span></blockquote></section><section style=\"color: rgb(63, 63, 63);font-size: 16px;font-family: Avenir, -apple-system-font, 微软雅黑, sans-serif;\"><section style=\"text-align: left;margin-top: 30px;margin-left: 8px;color: rgb(60, 112, 198);\"><span style=\"display: inline-block;width: 15px;height: 15px;margin-right: 10px;background-image: url(\" https: center no-repeat initial></span>\n\t\t延伸阅读</section></section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><span style=\"color: rgb(136, 136, 136);font-size: 14px;\">https://blog.bitsrc.io/a-complete-introduction-to-webassembly-and-its-javascript-api-3474a9845206</span></p><section style=\"text-align: left;margin-top: 30px;margin-left: 8px;color: rgb(60, 112, 198);\"><span style=\"display: inline-block;width: 15px;height: 15px;margin-right: 10px;background-image: url(\" https: center no-repeat initial></span>\n\t\t活动推荐\t</section><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\">“最重视开发者体验”的开源社区 Milvus，会用什么玩法引爆“嗨趴”？10 月 17 日，Milvus 将举办第一届 Milvus Community Conf 2020，为社区赋能。在这里，你能深入了解向量搜索，也能和大师“谈笑风生”，还有神秘好礼有吃有拿，<strong>扫描二维码</strong>或点击<strong>阅读原文</strong>立即报名吧，坐席有限先到先得！</p><p style=\"white-space: pre-line;padding-top: 23px;padding-right: 8px;padding-left: 8px;color: rgb(74, 74, 74);line-height: 1.75em;\"><img data-ratio=\"0.52625\" data-type=\"jpeg\" data-w=\"800\" style=\"width: 100%; max-width: 600px\" src=\"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6zTmzT6s8pHDqA5yqibxiaz1wz7UNwhmexnD6kiaGlPvIWPNBHgnupGGiag/640?wx_fmt=jpeg\"></p></section>\n                </div>\n\n    \n        <br>\n        <div id=\"js_toobar3\" class=\"rich_media_tool\">\n            <a target=\"_blank\" href=\"https://www.bagevent.com/event/6822638?bag_track=gongzhonghao\" id=\"js_view_source\" class=\"media_tool_meta meta_primary\">阅读原文</a>\n        </div>\n    \n    <br>\n\n    \n        <a target=\"_blank\" href=\"http://mp.weixin.qq.com/s?__biz=MzUxMzcxMzE5Ng==&amp;mid=2247502259&amp;idx=1&amp;sn=0fbf11c909a03ecb9eb52a7103180f13&amp;chksm=f9527cf0ce25f5e6f8ff84e2e44635a11c864f47a92018dda1f7d38139959dc95355aa69e64b&amp;scene=0#rd\" style=\"color: blue\" class=\"media_tool_meta meta_primary\">原文</a>\n        <br>\n    \n\n    \n\n    <img alt=\"\" width=\"1px\" height=\"1px\" class=\"\" style=\"width:1px;height:1px;display:none\" src=\"http://www.jintiankansha.me/rss_static/19192/pq028YKNAs\"></div></div>","descriptionType":"html","publishedDate":"Wed, 14 Oct 2020 07:30:00 +0000","feedId":2775,"bgimg":"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6MdSQ3rPIcZnG3DIR00ZiaroJQXKoaUcCyukelumYPT9OIRCMIfMY8WA?imageView2/1/w/600","linkMd5":"dd4ccdcec6596b1bea7687b52b91016a","destWidth":600,"destHeight":545,"sourceBytes":101102,"destBytes":106310,"author":"","articleImgCdnMap":{"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6MdSQ3rPIcZnG3DIR00ZiaroJQXKoaUcCyukelumYPT9OIRCMIfMY8WA?imageView2/1/w/600":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6y9OYllrInNTFbldvm0aUAw3MyYHicnjgCFRPbVqFBw7OOq9fk8WGkLw/640?wx_fmt=jpeg":null,"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6JTU7vIFSk7J8ktL4Q53CTicSvCAu9SuqzIjt1lhcrWWyqC5Uhq7rIjw/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn69@2020_2/2020/10/19/04-08-36-417_0bc02e059f075189.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6TVdrShyUqGxpFCJyj4ZWYoWCYibyibaXuBCrByYiceKibQpdRhPGQnLOVA/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn65@2020_4/2020/10/19/04-08-36-874_6a1cbaa3a7c78c50.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6GZqV1ZMlGnYib7pkAbxRDp4CTGINvSIJGgKIOgDEEzAicTc53d9icgkWQ/640?wx_fmt=png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn73@2020_6/2020/10/19/04-08-57-767_90186aaa9fbabe74.webp","http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6zTmzT6s8pHDqA5yqibxiaz1wz7UNwhmexnD6kiaGlPvIWPNBHgnupGGiag/640?wx_fmt=jpeg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn61@2020_3/2020/10/19/04-08-45-573_1841e32ff92d595f.webp","http://www.jintiankansha.me/rss_static/19192/pq028YKNAs":null},"publishedOrCreatedDate":1603080507709}],"record":{"createdTime":"2020-10-19 12:08:27","updatedTime":"2020-10-19 12:08:27","feedId":2775,"fetchDate":"Mon, 19 Oct 2020 04:08:27 +0000","fetchMs":197,"handleMs":13,"totalMs":125774,"newArticles":0,"totalArticles":5,"status":1,"type":0,"ip":"6adc9ee180e15d93daf6364a5c318f90","hostName":"us-036*","requestId":"e404038fb56c4e60aa2210734a64ea6e_2775","contentType":"application/rss+xml","totalBytes":77982,"bgimgsTotal":1,"bgimgsGithubTotal":0,"articlesImgsTotal":7,"articlesImgsGithubTotal":4,"successGithubMap":{"myreaderx8":1,"myreaderx21":1,"myreaderx3":1,"myreaderx1":1},"failGithubMap":{"myreaderx14":1}},"feed":{"createdTime":"2020-08-24 21:31:44","updatedTime":"2020-09-01 10:14:55","id":2775,"name":"前端之巅","url":"http://feedmaker.kindle4rss.com/feeds/frontshow.weixin.xml","subscriber":null,"website":null,"icon":"http://www.sogou.com/images/logo/new/favicon.ico?v=4","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn48@2020_6/2020/09/01/02-14-41-796_d24121c9beed1de6.ico","description":"InfoQ大前端技术社群：囊括前端、移动、Node全栈一线技术，紧跟业界发展步伐。","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-10-19 12:10:33","updatedTime":"2020-10-19 12:10:33","id":null,"feedId":2775,"linkMd5":"dd4ccdcec6596b1bea7687b52b91016a"}],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":77982,"tmpBgImgCdnBytes":0,"extra4":{"start":1603080507354,"total":0,"statList":[{"spend":342,"msg":"获取xml内容"},{"spend":13,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":121831,"msg":"正文链接上传到cdn"}]},"extra5":7,"extra6":6,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6MdSQ3rPIcZnG3DIR00ZiaroJQXKoaUcCyukelumYPT9OIRCMIfMY8WA?imageView2/1/w/600","sourceStatusCode":200,"destWidth":600,"destHeight":545,"sourceBytes":101102,"destBytes":106310,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":1871,"convertSpendMs":22,"createdTime":"2020-10-19 12:08:27","host":"europe61*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%C2%A0WebAssembly%C2%A0%E5%92%8C%C2%A0JS%C2%A0%E6%9E%84%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F","linkMd5ListStr":"dd4ccdcec6596b1bea7687b52b91016a,dd4ccdcec6596b1bea7687b52b91016a","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn55/contents/2020/10/19/04-08-29-165_3be3c044f97b0176.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 19 Oct 2020 04:08:29 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B444:4F32:1AE16150:1F11622C:5F8D113C"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1603083851"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn55/contents/2020/10/19/04-08-29-165_3be3c044f97b0176.webp","historyStatusCode":[],"spendMs":450},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"98.7 KB","destSize":"103.8 KB","compressRate":"105.2%"},{"code":1,"isDone":false,"source":"http://img.100weidu.com/mmbiz_jpg/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6MdSQ3rPIcZnG3DIR00ZiaroJQXKoaUcCyukelumYPT9OIRCMIfMY8WA?imageView2/1/w/600","sourceStatusCode":200,"destWidth":600,"destHeight":545,"sourceBytes":101102,"destBytes":106310,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":1571,"convertSpendMs":22,"createdTime":"2020-10-19 12:08:29","host":"europe61*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%C2%A0WebAssembly%C2%A0%E5%92%8C%C2%A0JS%C2%A0%E6%9E%84%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F","linkMd5ListStr":"dd4ccdcec6596b1bea7687b52b91016a,dd4ccdcec6596b1bea7687b52b91016a","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn55/contents/2020/10/19/04-08-30-804_3be3c044f97b0176.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Mon, 19 Oct 2020 04:08:31 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B444:4F32:1AE16347:1F11635C:5F8D113D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1603083851"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn55/contents/2020/10/19/04-08-30-804_3be3c044f97b0176.webp","historyStatusCode":[],"spendMs":454},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"98.7 KB","destSize":"103.8 KB","compressRate":"105.2%"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/19192/pq028YKNAs","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":730,"convertSpendMs":0,"createdTime":"2020-10-19 12:08:31","host":"us-54*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%C2%A0WebAssembly%C2%A0%E5%92%8C%C2%A0JS%C2%A0%E6%9E%84%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F","linkMd5ListStr":"dd4ccdcec6596b1bea7687b52b91016a","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"http://www.jintiankansha.me/rss_static/19192/pq028YKNAs","sourceStatusCode":405,"sourceBytes":0,"destBytes":0,"feedId":2775,"totalSpendMs":706,"convertSpendMs":0,"createdTime":"2020-10-19 12:08:32","host":"us-021*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%C2%A0WebAssembly%C2%A0%E5%92%8C%C2%A0JS%C2%A0%E6%9E%84%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F","linkMd5ListStr":"dd4ccdcec6596b1bea7687b52b91016a","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[405],"sourceSize":"0","destSize":"0"},null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-54.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://us-021.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[405]},"http://us-003.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe66.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://us-015.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-040.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-027.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,null]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6JTU7vIFSk7J8ktL4Q53CTicSvCAu9SuqzIjt1lhcrWWyqC5Uhq7rIjw/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":1080,"destHeight":298,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn69@2020_2/2020/10/19/04-08-36-417_0bc02e059f075189.webp","sourceBytes":17621,"destBytes":11986,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":5889,"convertSpendMs":13,"createdTime":"2020-10-19 12:08:31","host":"us-015*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%C2%A0WebAssembly%C2%A0%E5%92%8C%C2%A0JS%C2%A0%E6%9E%84%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F","linkMd5ListStr":"dd4ccdcec6596b1bea7687b52b91016a","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.2 KB","destSize":"11.7 KB","compressRate":"68%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6TVdrShyUqGxpFCJyj4ZWYoWCYibyibaXuBCrByYiceKibQpdRhPGQnLOVA/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":619,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn65@2020_4/2020/10/19/04-08-36-874_6a1cbaa3a7c78c50.webp","sourceBytes":17496,"destBytes":18330,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":6428,"convertSpendMs":18,"createdTime":"2020-10-19 12:08:31","host":"us-027*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%C2%A0WebAssembly%C2%A0%E5%92%8C%C2%A0JS%C2%A0%E6%9E%84%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F","linkMd5ListStr":"dd4ccdcec6596b1bea7687b52b91016a","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.1 KB","destSize":"17.9 KB","compressRate":"104.8%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_jpg/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6zTmzT6s8pHDqA5yqibxiaz1wz7UNwhmexnD6kiaGlPvIWPNBHgnupGGiag/640?wx_fmt=jpeg","sourceStatusCode":200,"destWidth":800,"destHeight":421,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn61@2020_3/2020/10/19/04-08-45-573_1841e32ff92d595f.webp","sourceBytes":49777,"destBytes":35996,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":15133,"convertSpendMs":14,"createdTime":"2020-10-19 12:08:31","host":"us-040*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%C2%A0WebAssembly%C2%A0%E5%92%8C%C2%A0JS%C2%A0%E6%9E%84%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F","linkMd5ListStr":"dd4ccdcec6596b1bea7687b52b91016a","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48.6 KB","destSize":"35.2 KB","compressRate":"72.3%"},{"code":1,"isDone":false,"source":"http://img2.jintiankansha.me/get?src=http://mmbiz.qpic.cn/mmbiz_png/XIibZ0YbvibkXXiblWHSpiaN2KmR0L6gSyx6GZqV1ZMlGnYib7pkAbxRDp4CTGINvSIJGgKIOgDEEzAicTc53d9icgkWQ/640?wx_fmt=png","sourceStatusCode":200,"destWidth":1080,"destHeight":438,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn73@2020_6/2020/10/19/04-08-57-767_90186aaa9fbabe74.webp","sourceBytes":13998,"destBytes":11670,"targetWebpQuality":75,"feedId":2775,"totalSpendMs":27249,"convertSpendMs":27,"createdTime":"2020-10-19 12:08:31","host":"us-003*","referer":"http://weixin.sogou.com/weixin?type=2&query=%E5%89%8D%E7%AB%AF%E4%B9%8B%E5%B7%85+%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%C2%A0WebAssembly%C2%A0%E5%92%8C%C2%A0JS%C2%A0%E6%9E%84%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F","linkMd5ListStr":"dd4ccdcec6596b1bea7687b52b91016a","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"13.7 KB","destSize":"11.4 KB","compressRate":"83.4%"}],"successGithubMap":{"myreaderx8":1,"myreaderx21":1,"myreaderx3":1,"myreaderx1":1},"failGithubMap":{"myreaderx14":1}}