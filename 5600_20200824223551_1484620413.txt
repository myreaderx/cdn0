{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-08-25 06:34:38","updatedTime":"2020-08-25 06:34:38","title":"SVM支持向量机","link":"https://zhuanlan.zhihu.com/p/21481541","description":"<p><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/52c8d933d79140e2fb6710994a5d581d_r.jpg\"></p>本文从概念和一些算法细节上介绍Support Vector Machine支持向量机的原理和功能。通过对比Logistic Regression，期望对SVM有一个快速的入门介绍。实现代码可参考：<a href=\"https://github.com/wrymax/machine-learning-assignments/tree/master/week7/machine-learning-ex6/ex6\" data-editable=\"true\" data-title=\"SVM示例\">SVM示例</a>，在Matlab / Octave中加载，执行ex6和ex6_spam即可。<b>1) 目的和场景</b>SVM是一种经典的机器学习算法，主要解决数据分类问题。原理是基于训练大量已有的数据和已知的分类情况，计算出一个预测模型。然后可以在模型上跑新的数据，从而判断新数据应当归于哪一类。SVM适用于线性和非线性的场景。SVM的典型使用场景如：\n<ol><li>房价估算<ol><li>根据过去十年来房价和房屋面积、卧室数量、当地消费水平等等各种因素数据，将房屋分为「豪宅」、「中等」、「经济型住房」、「贫民窟」等几类；</li><li>使用SVM训练这些数据得出一个模型，可以用来预测在新的条件下，某个住房可以被划归到哪种分类，价值区间多少。</li></ol></li><li>垃圾邮件分类器：<ol><li>获取可疑的spam email关键词列表，例如：Buy、now等（实际Spam Corpus可以参考使用<a href=\"https://spamassassin.apache.org/publiccorpus/\" data-editable=\"true\" data-title=\"Apache Spam Assassin\">Apache Spam Assassin</a>）；</li><li>收集大量的spam和非spam邮件数据，将其中包含的可疑spam关键词找出并标记在特征向量中，用SVM训练这些数据，得出一个模型，用来判断一封新的邮件是否为一个垃圾邮件。</li></ol></li></ol><b>2) 核心思路</b>2.1 SVM的思路可以由Logistic Regression演变而来，依然是通过Gradient Descent计算CostFunction的全局极小值，得到theta矩阵，作为分类模型。\n如图：\n<img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/31d0113a2e3d05cc56d4044a8d37e828.jpg\" data-rawwidth=\"620\" data-rawheight=\"337\">2.2 SVM和Logistic Regression的不同之处：\n<ol><li>把LR中的Sigmoid函数 <equation>log(h_{\\theta }(x) ) = log(g(z))</equation> 被修改为上图中的函数 <equation>cost_{0} (z)</equation> 和 <equation>cost_{1} (z)</equation> 其中<equation>z = \\theta^{T}X </equation><ol><li>当分类结果 y = 1 时，期望z &gt;= 1，此时<equation>cost_{1} (z)</equation> = 0，总体cost function达到最小</li><li>当分类结果 y = 0 时，期望z &lt;= -1，此时<equation>cost_{0} (z)</equation> = 0，总体cost function达到最小</li></ol></li><li>关于Regularisation参数C：<ol><li>Logistic Regression在cost function的后半部分上乘以一个lambda（一个较小的值，例如0.03）</li><li>SVM在cost function的前半部分乘以一个较大的C（可以理解为1 / lambda，例如1, 100, 1000）</li></ol></li></ol>2.3 Kernel 核函数\n<ol><li>SVM引入Kernel的概念，将<equation>z = \\theta^{T}X </equation>中的X变为一个f = g(x)，形式变为：<equation>z = \\theta^{T} f</equation></li><li>最常见的Kernel<ol><li>Linear Kernel 线性核<ol><li>实际上就是不使用Kernel，直接使用<equation>\\theta^{T} X</equation>作为cost function的自变量</li></ol></li><li>Gaussian Kernel 高斯核<ol><li>对X套用高斯函数，如下图</li><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/5cdc926f1d45540203539c5b8a905eb9.png\" data-rawwidth=\"3636\" data-rawheight=\"1996\"><li>图例参数说明<ol><li>「l」是「landmark」的缩写，在实际编程中，直接把training set放置到landmark位置上即可</li><li>高斯核函数 f 实际上计算了x和某个landmark l之间的近似度，这个近似度用欧氏距离来描述（计算向量内积）</li><li><equation>\\sigma </equation>用于控制高斯核的陡峭程度，<equation>\\sigma </equation>越大，函数越平滑</li></ol></li></ol></li><li>其他核函数<ol><li>Polynomial Kernel</li><li>String Kernel</li><li>chi-square kernel</li><li>histogram kernel</li><li>intersection kernel</li><li>根据Ng的说法，这些看起来很屌，但他自己基本没怎么用过… 大多数情况下，都是用Gaussian Kernel</li></ol></li></ol></li></ol>2.4 Logistic Regression、SVM和神经网络的使用场景对比\n假设 n 为特征的数量，m为训练集的数量\n<ol><li>当n比m大得多时，如n = 10000，m = 1000，建议使用Logistic Regression，或者SVM + 线性核</li><li>如果n很小，m不大不小，例如n = 1 ~1000, m = 10 ~ 10000，建议使用SVM + 高斯核</li><li>如果n很小，m很大，例如n = 1 ~1000, m = 50000+，建议添加更多的特征，然后使用Logistic Regression，或者SVM + 线性核</li><li>各种情况下，神经网络都工作的不错，但是比SVM训练的速度慢一些</li></ol><b>3) 实践中的一些注意事项\n</b><ol><li>需要通过多次交叉检验来确定合适的regularisation参数C和高斯核参数<equation>\\sigma </equation>，方法：<ol><li>设定一组备选的C和<equation>\\sigma </equation>，用他们两两组合循环训练SVM model</li><li>用训练好的model跑Cross Validation数据集，计算errors</li><li>找出errors最低的一组C和sigma</li></ol></li><li>几个好用的SVM工具包<ol><li>liblinear</li><li>libsvm</li></ol></li></ol><img rel=\"noreferrer\" src=\"https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21481541&pixel&useReferer\"/>","descriptionType":"text/html","publishedDate":"Mon, 04 Jul 2016 12:39:20 +0000","feedId":5600,"bgimg":"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/52c8d933d79140e2fb6710994a5d581d_r.jpg","linkMd5":"5fb6d860b7711557f660e8f92dbc3fb9","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn27@2020_4/2020/08/24/22-34-42-859_5b559608b9deb92b.webp","destWidth":600,"destHeight":330,"sourceBytes":54549,"destBytes":39552,"author":"王若愚","articleImgCdnMap":{"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/52c8d933d79140e2fb6710994a5d581d_r.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn27@2020_4/2020/08/24/22-34-42-859_5b559608b9deb92b.webp","https://images.weserv.nl/?url=ssl:pic1.zhimg.com/31d0113a2e3d05cc56d4044a8d37e828.jpg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn67@2020_2/2020/08/24/22-35-41-990_ccc7c90372721d36.webp","https://images.weserv.nl/?url=ssl:pic2.zhimg.com/5cdc926f1d45540203539c5b8a905eb9.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn64@2020_6/2020/08/24/22-35-50-071_43b536c33ad7f16b.webp","https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21481541&pixel&useReferer":null},"publishedOrCreatedDate":1598308478516},{"createdTime":"2020-08-25 06:34:38","updatedTime":"2020-08-25 06:34:38","title":"应用机器学习算法的一些具体建议","link":"https://zhuanlan.zhihu.com/p/21449423","description":"<p><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/01d6654b5392b00f4e777791d7e80c48_r.jpg\"></p>本文来自于学习Ng的Machine Learning课程笔记。学习时用英文记录，写本文时加上了部分中文解释，尽可能的口语化了。另外部分名词可能翻译的不太对，如果您发现了请不吝指正，谢谢。具体实现代码请参考：<a href=\"https://github.com/wrymax/machine-learning-assignments/tree/master/week6/machine-learning-ex5/ex5\" class=\"\">https://github.com/wrymax/machine-learning-assignments/tree/master/week6/machine-learning-ex5/ex5</a>使用Matlab / Octave加载，运行ex5即可。本文主要指出了一些机器学习实践中的技巧，coding前必备。Let's get started.<b>关键名词：</b><ol><li>训练数据集 Training Set</li><li>训练数据集的代价函数 Jtrain(theta)</li><li>交叉验证数据集 Cross Validation</li><li>交叉验证数据集的代价函数 Jcv(theta)</li><li>测试数据集 Test</li><li>测试数据集的代价函数 Jtest(theta)</li><li>预测误差、代价 error（代价函数的计算结果）</li><li>偏差 Bias</li><li>特征多样性、方差 Variance</li><li>欠拟合 Under-Fitting</li><li>过拟合 Over-Fitting</li><li>正则化 Regularisation </li><li>查准率 Precision</li><li>召回率 Recall</li><li>F值 F Score</li></ol><p><b>核心概念</b></p><ol><li><b>Machine Learning Diagnostic 机器学习诊断</b><ol><li>To get better avenue, you may:<ol><li>Collect larger training examples 收集更多的训练数据 =&gt; 解决overfitting</li><li>Get additional features 获得和使用额外的特征 =&gt; 解决high bias</li><li>Add polynomial features 添加多项式特征 =&gt; 解决high bias</li><li>Reduce features 减少特征 =&gt; 解决overfitting</li><li>Increase lambda 增大lambda =&gt; 解决overfitting</li><li>Decrease lambda =&gt; 解决underfitting</li></ol></li><li>However, it may takes you 6 month to train data, and nothing to gain.</li><li>Machine Learning Diagnostic is: 机器学习诊断思路如下：<ol><li>A test that you can run to gain insight what is / isn’t working with a learning algorithm, and gain guidance as to how best to improve its performance. 这是一种测试方法，你可以据此尝试并改进算法的性能</li><li>It takes time to implement. 这得花点时间。。</li><li>It sometimes rule out certain courses of action (changes to your learning algorithm) as being unlikely to improve its performance significantly. 有可能这并没有什么卵用</li></ol></li><li>Training/Testing Procedure 训练/测试过程<ol><li>Split dataset into 7:3, 70% of which is going to be the training set, 30% of which is going to be the testing set. 切分数据集：70%作为训练数据，30%作为测试数据</li><li>Learn parameter theta from training data. 使用训练数据习得你需要的theta</li><li>Compute test set error: 使用刚刚训练出来的Cost Function来跑一下测试数据集，得到测试数据集的误差<ol><li>Jtest(theta) = CostFunction(training_data) =&gt; the square deviation equation </li></ol></li></ol></li></ol></li><li><b>Model Selection and Train/Validation/Test Sets 模型选择与训练/校验/测试数据集</b><ol><li>Degree of Polynomial 多项式级数（一个我们需要关注的指标），这个东西就是下图中的「d」</li><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/4a1f050207306becba5c5573957d0625.png\" data-rawwidth=\"3796\" data-rawheight=\"2060\"><li>如上图，我们从d = 1到d = 10，分别用test数据集计算Cost Function，然后选取一个最优化的d（上图中选择了d = 5），后面几部讲了具体怎么实施这个过程</li><li>Evaluating your hypothesis 评估你的预测函数<ol><li>Training Set - 60% of data set 把60%的数据设置为训练数据集</li><li>Cross Validation Set (CV) - 20% of data set 把20%的数据设置为交叉验证数据集</li><li>Test Set - 20% of data set 把20%的数据设置为测试数据集</li></ol></li><li>Use Validation Set to select the model 使用交叉验证数据集来选择模型<ol><li>Compute cost function J(theta) by CV in different degrees</li><li>Choose the minimal one as the target degree, as below, d = 4</li><li>Estimate generalisation erro for test set Jtest(theta(4))</li><li>以上这段英文就是步骤1 - 3了</li></ol></li></ol></li><li><b>Bias vs. Variance 偏差 vs. 特征多样性（or方差？）</b><ol><li>Bias =&gt; 特征值以外的代价函数偏差<ol><li>High Bias =&gt; high lambda =&gt; Under-fitting</li></ol></li><li>Variance =&gt; 特征多样性<ol><li>High Variance =&gt; low lambda =&gt; Overfitting</li></ol></li><li>Diagnosing Bias vs. Variance 诊断：偏差高低和特征值大小<ol><li>Set coordinates of (degree_of_polynomial_d, error); 设置一个横轴为特征数量（多项式维度）d，纵轴为预测误差error的坐标系</li><li>Train the 60% data set, draw a curve which will converge when d goes bigger; 用60%的数据集作为训练集合，计算J(theta)，当多项式维度d（特征数）增大时，error会减少，向0收敛</li><li>Run prediction with Cross-Validation-Set by trained model, there will be an overfitting point, after which Jcv(theta) will continuously arise. 使用从训练集中获得的模型，计算交叉验证数据集的预测误差，会发现过拟合问题。</li><li>如下图：</li><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/d1a6d5dfd58b7cdbd0410487a5596c4f.png\" data-rawwidth=\"3744\" data-rawheight=\"2000\"></ol></li><li><b>Question 问题来了...</b><ol><li>How can we figure out it is suffered from <b>Bias</b>, or from <b>Variance</b>? 我们如何知道模型的问题出在偏差还是特征多样性上？<ol><li>Bias =&gt; Underfitting, as on the left part of the diagram 偏差往往和欠拟合相关，如图左半部分，特征数过少<ol><li>Jtraining(theta) will be high 训练集的代价函数error会很大</li><li>Jcv(theta) ≈ Jtraining(theta) 交叉验证的代价函数error约等于训练集，也很大</li></ol></li><li>Variance =&gt; Overfitting, as on the right part of the diagram 特征多样性往往和过拟合相关，如图右半部分，特征数量过多<ol><li>Jtraining(theta) will be low 训练集的代价函数error越来越低</li><li>Jcv(theta) &gt;&gt;( much higher than ) Jtraining(theta) 交叉验证数据集的代价函数error在经过一个极小值后开始上升，最终远大于训练集的错误。这是典型的过拟合特征：对新数据的fitting性能非常差。</li></ol></li></ol></li><li>如下图：<img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/a0db6ba0b74fd2185a95d4ff0974c079.png\" data-rawwidth=\"3788\" data-rawheight=\"1920\"></li></ol></li><li>Choosing the regularisation parameter lambda 选择正则化参数lambda<ol><li>Try lambda from small to large, like 从小到大，尝试lambda<ol><li>0</li><li>0.01</li><li>0.02</li><li>0.04</li><li>0.08</li><li>...</li><li>10</li></ol></li><li>Pick up best fitting lambda of Cross-Validation cost function, say Theta(5) 选择一个对交叉验证数据集的代价函数拟合最好的lambda值，例如theta(5)</li><li>Compute J(theta) by the test data set 计算测试数据集的代价函数</li><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/2d7c1a31ce3a19e9aadc47c4ac0b73aa.png\" data-rawwidth=\"3764\" data-rawheight=\"2024\"></ol></li></ol></li><li><b>Bias/Variance as a function of the regularisation parameter lambda 以lambda为参数的偏差/方差函数</b><ol><li>When lambda is 0 当lambda为0时<ol><li>you can fit the training set relatively well, since there is no regularisation. 训练集会拟合的相对不错，因为没有做任何的正则化</li></ol></li><li>When lambda is small 当lambda很小时<ol><li>You get a small value of Jtrain 训练集的预测误差也很小</li></ol></li><li>When lambda goes large 当lambda变大时<ol><li>The bias becomes larger, so Jtrain goes much larger 偏差越来越大，训练集的预测误差会显著增大</li></ol></li><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/b473417172cd29c59f9a5655c6889a16.png\" data-rawwidth=\"3820\" data-rawheight=\"2016\"></ol></li><li><b>Learning Curves 学习曲线</b><ol><li>When training set number 「m」grows<ol><li>It is much harder to fit, so training error grows 训练集增大，代价函数越来越难拟合所有的数据集，error会增大</li><li>As examples grows, it does better at generalising to new examples, so Cross-Validation error decreases 训练集增大时，代价函数归纳新元素的性能会更好，因此cross-validation的错误率会下降</li><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/c92244a19933e73a4ed2dc2a8d93911f.jpg\" data-rawwidth=\"620\" data-rawheight=\"326\"></ol></li><li>High Bias 高偏差的情况<ol><li>High Bias means low Variance, so h(theta) would a low-dimensional function, which cannot fit all the dataset well 高偏差代表预测多项式的维度过低，因此很难预测整个数据集</li><li>When m is small, Jcv is high and Jtrain is low, while both of them will converge to similar value when dataset grows large enough 当数据集的总数很小时，交叉验证集的预测误差很大，训练数据集的预测误差很小；但当m越来越大，两者将越来越接近</li><li>Both the error of Jcv and Jtrain would be fairly HIGH 交叉验证和训练数据集的J都会很大</li><li>Conclusion 结论<ol><li>If a learning algorithm is suffering from high bias, getting more training data will not(by itself) help much 当学习算法存在高偏差问题时，训练更多的数据无法解决问题（J会收敛于一个很高的错误值，不再下降）</li><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/a2561bd221232925c4625490b7ba316f.jpg\" data-rawwidth=\"620\" data-rawheight=\"330\"></ol></li></ol></li><li>High Variance 高特征多样性的情况<ol><li>High Variance means low lambda and the polynomial hypothesis function has many many features 高特征多样性说明正则化参数lambda很小，此外预测多项式有非常多的特征</li><li>When m is small 当训练数据量m很小时<ol><li>Jtrain is small; as m grows up, Jtrain becomes larger too, but the training set error would still be pretty low 训练集的J也很小；但是当训练数据越来越多时，由于预测函数的维度过高，拟合开始变得困难，Jtrain逐渐上升，但是仍然是一个非常小的数值</li><li>Jcv is large; as m grows up, Jtrain becomes smaller and coverage to a value similar with Jtrain 交叉验证数据集的J很大（高特征多样性带来的过拟合会导致预测函数对样本外的数据点预测偏差很大）；当m增大时，Jcv会逐渐下降</li><li>The indicative diagnostic that we have a high variance problem 我们遇到高特征多样性问题的一个象征性指标：<ol><li>With m becomes larger, there is a large gap between the training error and cross-validation error 随着m增大，训练数据集的预测误差和交叉验证数据集的预测误差之间会存在一个很大的空白</li></ol></li></ol></li><li>Conclusion 结论<ol><li>If learning algorithm is suffering from high variance, getting moe training data is likely to help 当学习算法存在高特征多样性为题是，使用更多的训练数据可能会有帮助</li></ol></li><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/ffe4cfa386a14c901823696c246575f3.jpg\" data-rawwidth=\"620\" data-rawheight=\"330\"></ol></li></ol></li><li><b>Deciding what to try next (revisited) 决定下一步做什么</b><ol><li>When debugging a learning algorithm, you find your model makes unacceptably large errors in its prediction, what to do next? 当调试一个学习算法时，你发现你的预测模型得出了不可接受的高误差，下一步该怎么办？<ol><li>Get more training examples 使用更多的训练数据<ol><li>When Jcv is much higher than Jtrain, it fixes high variance 当Jcv比Jtrain大的多时，它可以解决高特征多样性的问题</li></ol></li><li>Try smaller sets of features 尝试减少特征数量<ol><li>It fixes high variance problem too 减少一部分用处不大的特征可以解决高特征多样性的问题</li></ol></li><li>Try getting additional features 尝试使用额外的特征<ol><li>Maybe the model is under-fitting (high bias), try additional features can make the model fitting training set better 高误差也有可能是因为特征数量太少了，因此使用额外的特征可以解决高偏差的问题</li></ol></li><li>Try adding polynomial features 尝试添加多项式特征 (x1 * x1, x2 * x2, x1 * x2, etc)<ol><li>Which also solves high bias problem 也是可以解决高偏差的问题（欠拟合）</li></ol></li><li>Try decreasing lambda 尝试降低正则化参数lambda<ol><li>Which also solves high bias problem 也是可以解决高偏差的问题（欠拟合）</li></ol></li><li>Try increasing lambda 尝试增加正则化参数lambda<ol><li>Which also solves high variance problem 也是可以解决高特征数量的问题（过拟合）</li></ol></li></ol></li><li>Neural Networks and overfitting 神经网络与过拟合<ol><li>Small neural network 小型神经网络<ol><li>fewer parameters, more prone to under-fitting 网络层数少、神经元数量少，更易导致欠拟合</li><li>Computationally cheaper 计算资源消耗少</li></ol></li><li>Large neural network 大型神经网络<ol><li>Type1. few layers, lot of units 类型1：层数少，每层的神经元多</li><li>Type2. few units, lot of layers 类型2：层数多，每层的神经元少</li><li>more parameters, more prone to over-fitting 参数多，更易导致过拟合</li><li>Computationally more expensive 计算资源消耗多</li><li>Use regularisation to address overfitting 使用正则化来解决过拟合问题</li><li>Try one layer, two layers and three layers.. and compute Jcv(theta) to decide how many layers you will use 尝试1层、2层、3层… 并计算交叉验证代价函数，据此来选择最合适的神经网络层数</li></ol></li></ol></li></ol></li></ol><b>Machine Learning System Design 机器学习系统设计</b><b>（本段中楼主懒癌发作不想打字。。。直接贴Ng的截图了）</b><ol><li>Building a Spam Classifier 构建一个垃圾邮件分类器<ol><li>Prioritising What to Work On <img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/230490f942998f0541070e26c91f0dfa.png\" data-rawwidth=\"1832\" data-rawheight=\"838\"></li><li>Recommended Approach 推荐的方法<img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/5c6966a18a75ba8633f77780dbaf382e.png\" data-rawwidth=\"1756\" data-rawheight=\"722\"><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/81a7af0b71a42cf0752b0ef9784ac2ab.png\" data-rawwidth=\"3636\" data-rawheight=\"1872\"></li></ol></li><li>Handling Skewed Data 处理歪曲/偏斜的数据<ol><li>Error Metrics for Skewed Data 歪曲数据的错误度量方法<ol><li>查准率 Precision<ol><li>Precision = TruePositive / (No. of predicted positive)</li><li>No. of predicted positive = TruePositive + FalsePositive</li></ol></li><li>召回率 Recall<ol><li>Recall = TruePositive / (No. of actual positive)</li><li>No. of actual positive = TruePositive + FalseNegative</li></ol></li></ol></li><li>Trading off Precision and Recall 权衡查准率和召回率<ol><li>High Precision and Low Recall: Suppose we want to predict y = 1 only if very confident <ol><li>Predict 1 if h(x) &gt;= 0.9</li><li>Predict 0 if h(x) &lt; 0.9</li></ol></li><li>High Recall and Low Precision: Suppose we want to predict y = 0 only if very confident<ol><li>Predict 1 if h(x) &gt;= 0.3</li><li>Predict 0 if h(x) &lt; 0.3</li></ol></li><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/490a48d1d7c4c3ddb1c507066c99301c.png\" data-rawwidth=\"3788\" data-rawheight=\"2020\"><li>F Score F值<ol><li>For making a decision which pair of Precision and Recall is better</li><li>Measure P and R on the <b>cross validation set</b>, and choose the value of threshold which maximises F score, as below</li><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/8c912d6f5472417b4bf5a45724cc3108.png\" data-rawwidth=\"3756\" data-rawheight=\"1952\"></ol></li></ol></li></ol></li><li>Using Large Data Sets 使用大数据集<ol><li>首先问自己两个问题：</li><ol><li>Question1: Can a human expert accurately predict y from given features x?  人类砖家使用目前的特征指标，能否准确预测出结果？<ol><li>e.g. Can a realtor predict the housing price simply based on housing sizes? 例如：一个房地产经纪人是否能仅仅基于房屋面积预测出房价？</li></ol></li><li>Question2: Can we get a large training set to train with many features? 我们能不能搞到更多的数据来训练如此多的特征？</li></ol><li>如果可以，那么：</li><ol><li>Use a learning algorithm with many parameters ( many features / many hidden layers )  多设置一些特征，或者神经网络中的隐藏层</li><li>Use a very large training set 尽量多的使用训练数据</li></ol></ol></li></ol><img rel=\"noreferrer\" src=\"https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21449423&pixel&useReferer\"/>","descriptionType":"text/html","publishedDate":"Wed, 29 Jun 2016 14:15:41 +0000","feedId":5600,"bgimg":"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/01d6654b5392b00f4e777791d7e80c48_r.jpg","linkMd5":"77332f65f0466345a2be85306d3f7227","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn31@2020_3/2020/08/24/22-34-39-647_9ddbccbae257cbf2.webp","destWidth":650,"destHeight":366,"sourceBytes":70698,"destBytes":47626,"author":"王若愚","articleImgCdnMap":{"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/01d6654b5392b00f4e777791d7e80c48_r.jpg":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn31@2020_3/2020/08/24/22-34-39-647_9ddbccbae257cbf2.webp","https://images.weserv.nl/?url=ssl:pic3.zhimg.com/4a1f050207306becba5c5573957d0625.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn6@2020_2/2020/08/24/22-35-43-825_ad2f34ac1fd42d14.webp","https://images.weserv.nl/?url=ssl:pic4.zhimg.com/d1a6d5dfd58b7cdbd0410487a5596c4f.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn66@2020_1/2020/08/24/22-35-44-873_fd1bcba62e648d09.webp","https://images.weserv.nl/?url=ssl:pic1.zhimg.com/a0db6ba0b74fd2185a95d4ff0974c079.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn84@2020_5/2020/08/24/22-35-43-435_6b3759472ee7b670.webp","https://images.weserv.nl/?url=ssl:pic2.zhimg.com/2d7c1a31ce3a19e9aadc47c4ac0b73aa.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn57@2020_1/2020/08/24/22-35-44-696_9a4b1467fb67b32f.webp","https://images.weserv.nl/?url=ssl:pic3.zhimg.com/b473417172cd29c59f9a5655c6889a16.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn52@2020_5/2020/08/24/22-35-43-975_fe28b891d745a77e.webp","https://images.weserv.nl/?url=ssl:pic4.zhimg.com/c92244a19933e73a4ed2dc2a8d93911f.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn92@2020_6/2020/08/24/22-35-42-776_48a232931685e397.webp","https://images.weserv.nl/?url=ssl:pic1.zhimg.com/a2561bd221232925c4625490b7ba316f.jpg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn9@2020_1/2020/08/24/22-35-42-324_cef97b7cefc4a727.webp","https://images.weserv.nl/?url=ssl:pic2.zhimg.com/ffe4cfa386a14c901823696c246575f3.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn37@2020_2/2020/08/24/22-35-42-474_bb84b987a7463019.webp","https://images.weserv.nl/?url=ssl:pic3.zhimg.com/230490f942998f0541070e26c91f0dfa.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn26@2020_3/2020/08/24/22-35-42-537_d9c03a83d8b0ab7a.webp","https://images.weserv.nl/?url=ssl:pic4.zhimg.com/5c6966a18a75ba8633f77780dbaf382e.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn1@2020_3/2020/08/24/22-35-42-824_8c5abe9c5b9e169e.webp","https://images.weserv.nl/?url=ssl:pic1.zhimg.com/81a7af0b71a42cf0752b0ef9784ac2ab.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn14@2020_1/2020/08/24/22-35-44-892_2fbdfea20c88da6d.webp","https://images.weserv.nl/?url=ssl:pic2.zhimg.com/490a48d1d7c4c3ddb1c507066c99301c.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn21@2020_2/2020/08/24/22-35-43-700_3c205a9fc6cce5e9.webp","https://images.weserv.nl/?url=ssl:pic3.zhimg.com/8c912d6f5472417b4bf5a45724cc3108.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn49@2020_3/2020/08/24/22-35-42-797_251320dfb0a45c70.webp","https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21449423&pixel&useReferer":null},"publishedOrCreatedDate":1598308478516},{"createdTime":"2020-08-25 06:34:38","updatedTime":"2020-08-25 06:34:38","title":"100行Python为Prisma化的图片恢复原始色彩","link":"https://zhuanlan.zhihu.com/p/21836208","description":"<p><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/4791027d7e93c79278d616f3dae224c7_r.jpg\"></p><p>首先感谢评论区中多位图像大牛指出的问题，代码并未把一张图片加上Prisma的效果，而是一个类似于Prisma的后处理。文章和标题都已作修改，如发现其他问题，欢迎指教，谢谢。</p><p>----------------- 正文分割线 -----------------</p><p>图像被<a href=\"https://deepart.io/\" data-editable=\"true\" data-title=\"Deepart\">Deepart</a>等类似Prisma的工具处理后，可以加上各种风格。但可能存在一个问题，即原始图片的颜色也丢失了，例如：</p><p>纽约夜景图片 --</p><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/2d0076cdfc1d57db127997bfde942fbd.jpg\" data-rawwidth=\"600\" data-rawheight=\"338\"><p>毕加索风格图片 --</p><p><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/ba14b947b225d9e5c59520a814376944.jpg\" data-rawwidth=\"1179\" data-rawheight=\"1536\">合成图片 --</p><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/0d4e420fbb6aa742a7873ac3b0a6913c.jpg\" data-rawwidth=\"600\" data-rawheight=\"338\"><p>合成后的图片中，原始图片的颜色丢失掉了，下面有一个简单的办法，可以将合成图片的样式与原始图片的色彩合成，让图片既具有毕加索的风格，又保留原图的颜色。</p><p>--- <a href=\"https://github.com/pavelgonchar/color-independent-style-transfer\" data-editable=\"true\" data-title=\"源代码传送门\" class=\"\">Github传送门</a> ---</p><p>效果如下：</p><p>重新处理后的毕加索风格纽约夜景图片 --<img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/4791027d7e93c79278d616f3dae224c7.jpg\" data-rawwidth=\"600\" data-rawheight=\"338\"></p><p>--- 下面是代码和注释 ---</p><p>首先加载以下库：</p><pre><code lang=\"python\">import skimage.io\nimport tensorflow as tf\nfrom tensorflow.python.framework import ops, dtypes\nimport numpy as np\nfrom matplotlib import pyplot as plt\n</code></pre><p>定义一些常量：</p><pre><code lang=\"python\">flags = tf.app.flags\nFLAGS = flags.FLAGS\n\n\"\"\" minsk.jpg是原始图片文件(338 * 600) \"\"\"\nflags.DEFINE_string('original', 'New_York_night.jpg', 'Original Image')\n\"\"\" tmp_950_color.jpg是包含某种风格的图片文件(338 * 600) \"\"\"\nflags.DEFINE_string('styled', 'New_York_night_picasso.jpg', 'Styled Image')\n\n\"\"\" Tensor占位符，后面用Feed来计算 \"\"\"\noriginal = tf.placeholder(\"float\", [1, 338, 600, 3])\nstyled = tf.placeholder(\"float\", [1, 338, 600, 3])\n</code></pre><p>定义互转RGB和YUV格式的方法：</p><pre><code lang=\"python\">def rgb2yuv(rgb):\n    \"\"\"\n    Convert RGB image into YUV https://en.wikipedia.org/wiki/YUV\n    \"\"\"\n    rgb2yuv_filter = tf.constant(\n        [[[[0.299, -0.169, 0.499],\n           [0.587, -0.331, -0.418],\n            [0.114, 0.499, -0.0813]]]])\n    rgb2yuv_bias = tf.constant([0., 0.5, 0.5])\n\n    temp = tf.nn.conv2d(rgb, rgb2yuv_filter, [1, 1, 1, 1], 'SAME')\n    temp = tf.nn.bias_add(temp, rgb2yuv_bias)\n\n    return temp\n\n\ndef yuv2rgb(yuv):\n    \"\"\"\n    Convert YUV image into RGB https://en.wikipedia.org/wiki/YUV\n    \"\"\"\n    yuv = tf.mul(yuv, 255)\n    yuv2rgb_filter = tf.constant(\n        [[[[1., 1., 1.],\n           [0., -0.34413999, 1.77199996],\n            [1.40199995, -0.71414, 0.]]]])\n    yuv2rgb_bias = tf.constant([-179.45599365, 135.45983887, -226.81599426])\n    temp = tf.nn.conv2d(yuv, yuv2rgb_filter, [1, 1, 1, 1], 'SAME')\n    temp = tf.nn.bias_add(temp, yuv2rgb_bias)\n    temp = tf.maximum(temp, tf.zeros(temp.get_shape(), dtype=tf.float32))\n    temp = tf.minimum(temp, tf.mul(\n        tf.ones(temp.get_shape(), dtype=tf.float32), 255))\n    temp = tf.div(temp, 255)\n    return temp\n</code></pre><p>定义拼接图像的方法，可以把两张图片水平连接起来：</p><pre><code lang=\"python\">def concat_images(imga, imgb):\n    \"\"\"\n    Combines two color image ndarrays side-by-side.\n    \"\"\"\n    ha, wa = imga.shape[:2]\n    hb, wb = imgb.shape[:2]\n    max_height = np.max([ha, hb])\n    total_width = wa + wb\n    new_img = np.zeros(shape=(max_height, total_width, 3), dtype=np.float32)\n    new_img[:ha, :wa] = imga\n    new_img[:hb, wa:wa + wb] = imgb\n    return new_img</code></pre><p>准备就绪，开始主要流程。</p><p>在TensorFlow的Session开始前，首先定义一些必要的Operation和Tensor</p><pre><code lang=\"python\">\"\"\" 把含有风格的图像styled转换成yuv格式的灰度图styled_grayscale_yuv \"\"\"\nstyled_grayscale = tf.image.rgb_to_grayscale(styled)\nstyled_grayscale_rgb = tf.image.grayscale_to_rgb(styled_grayscale)\nstyled_grayscale_yuv = rgb2yuv(styled_grayscale_rgb)\n\n\"\"\" 把需要添加风格的原始图像转换成yuv格式original_yuv \"\"\"\noriginal_yuv = rgb2yuv(original)\n\n\"\"\" \n组合图像：\n1. styled_grayscale_yuv的Y分量\n2. original_yuv的U分量\n3. original_yuv的V分量\n\"\"\"\ncombined_yuv = tf.concat(3, [tf.split(3, 3, styled_grayscale_yuv)[0], tf.split(3, 3, original_yuv)[1], tf.split(3, 3, original_yuv)[2]])\n\n\"\"\" 转换成RGB格式 \"\"\"\ncombined_rbg = yuv2rgb(combined_yuv)\n\n\"\"\" 初始化 \"\"\"\ninit = tf.initialize_all_variables()\n</code></pre><p>然后正式开始Session，完成Operations：</p><pre><code lang=\"python\">with tf.Session() as sess:\n    sess.run(tf.initialize_all_variables())\n\n    \"\"\" 读取需要添加风格的原始图片 \"\"\"\n    original_image = skimage.io.imread(FLAGS.original) / 255.0\n    original_image = original_image.reshape((1, 338, 600, 3))\n\n    \"\"\" 读取含有风格的图片 \"\"\"\n    styled_image = skimage.io.imread(FLAGS.styled) / 255.0\n    styled_image = styled_image.reshape((1, 338, 600, 3))\n\n    \"\"\" 为原始图片添加上风格 \"\"\"\n    combined_rbg_ = sess.run(combined_rbg, feed_dict={original: original_image, styled: styled_image})\n\n    \"\"\" 拼接几幅图片并保存，做个对比 \"\"\"\n    summary_image = concat_images(original_image.reshape((338, 600, 3)), styled_image.reshape((338, 600, 3)))\n    summary_image = concat_images(summary_image, combined_rbg_[0])\n    plt.imsave(\"results.jpg\", summary_image)\n</code></pre><img rel=\"noreferrer\" src=\"https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21836208&pixel&useReferer\"/>","descriptionType":"text/html","publishedDate":"Tue, 02 Aug 2016 18:13:56 +0000","feedId":5600,"bgimg":"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/4791027d7e93c79278d616f3dae224c7_r.jpg","linkMd5":"927dd660cb5ed8a706db668532b11e1d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn15@2020_1/2020/08/24/22-34-39-112_6a32991fe6aa8545.webp","destWidth":600,"destHeight":338,"sourceBytes":38396,"destBytes":22548,"author":"王若愚","articleImgCdnMap":{"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/4791027d7e93c79278d616f3dae224c7_r.jpg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn15@2020_1/2020/08/24/22-34-39-112_6a32991fe6aa8545.webp","https://images.weserv.nl/?url=ssl:pic1.zhimg.com/2d0076cdfc1d57db127997bfde942fbd.jpg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn29@2020_3/2020/08/24/22-35-41-400_2eb1668cd28c0f0f.webp","https://images.weserv.nl/?url=ssl:pic2.zhimg.com/ba14b947b225d9e5c59520a814376944.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn59@2020_1/2020/08/24/22-35-41-876_32ea1fe4bb0fb48f.webp","https://images.weserv.nl/?url=ssl:pic3.zhimg.com/0d4e420fbb6aa742a7873ac3b0a6913c.jpg":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn49@2020_5/2020/08/24/22-35-42-674_2984fd9599fc867b.webp","https://images.weserv.nl/?url=ssl:pic4.zhimg.com/4791027d7e93c79278d616f3dae224c7.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn41@2020_6/2020/08/24/22-35-41-677_16b7f84940bdc2e2.webp","https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21836208&pixel&useReferer":null},"publishedOrCreatedDate":1598308478516},{"createdTime":"2020-08-25 06:34:38","updatedTime":"2020-08-25 06:34:38","title":"神经网络的学习 / 训练过程","link":"https://zhuanlan.zhihu.com/p/21381359","description":"<p><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/17db6ca9a6df9e33f302b13568e97dda_r.jpg\"></p>以下为部分学习笔记。<p>具体实现代码参考: <a href=\"https://github.com/wrymax/machine-learning-assignments/tree/master/week5/machine-learning-ex4/ex4\">https://github.com/wrymax/machine-learning-assignments/tree/master/week5/machine-learning-ex4/ex4</a></p><ol><li><b>Cost Function 代价函数</b><ol><li>Important Parameters:<ol><li>L =&gt; Total number of layers in network</li><li>Sl =&gt; Number of units ( not counting bias unit ) in layer l</li><li>As below, L = 4, S1 = 3, S2 = 5, S4 = SL = 4<img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/f168eae6991fd9681da794b9fc3e0b12.png\" data-rawwidth=\"626\" data-rawheight=\"342\"></li></ol></li><li>Two Classification Methods<ol><li>Binary Classification 二元分类<ol><li>y = 0 or 1</li><li>SL = K = 1 ( One output unit )</li></ol></li><li>Multi-class Classification 多元分类<ol><li>y is logical vectors, which uses 1 to denote the class</li><li>SL = K, K &gt;= 3 ( K output units )</li></ol></li><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/62e9dc13f799ec5ec0cb8df167179063.png\" data-rawwidth=\"1890\" data-rawheight=\"992\"></ol></li><li>The Cost Function<ol><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/70270b37927da2357329ae77eef65d6a.png\" data-rawwidth=\"1854\" data-rawheight=\"1038\"><li>J(theta) sum up the cost function in logistic regression of ALL Layers.</li><li>Regularisation sum up all Theta elements between each two layers.</li></ol></li></ol></li><li><b>Back Propagation 向后传播</b><ol><li>Compute Gradient 用于计算梯度( CostFunction对Theta的偏微分 )<img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/eba219186b9387a30205698194cc0ffe.png\" data-rawwidth=\"1894\" data-rawheight=\"1014\"></li><li>Algorithm 算法解释<img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/d750e6a3a3cf8706181b653b3efe3d22.png\" data-rawwidth=\"1894\" data-rawheight=\"1032\"></li></ol></li><li><b>Back Propagation in Practice 向后传播实践技巧</b><ol><li>Learning Algorithm 学习算法<ol><li>initialTheta</li><li>costFunction</li></ol></li><li>Unrolling Parameters 展开参数<ol><li>Change matrices into vectors </li><li>Change vectors into matrices</li></ol></li><li>Gradient Checking 梯度检查<ol><li>Use numerical estimate method to compute derivatives</li><li>Pros:<ol><li>It can check is derivatives are correct</li></ol></li><li>Cons:<ol><li>It is super slow. </li><li>When you make sure back propagation gives similar values as gradient, just turn off it.</li><li>Be sure to disable gradient checking code before training your classifier. Or the training process would be super slow.</li></ol></li></ol></li><li>Random Initialisation 随机初始化<ol><li>“Zero Initialisation\" does not work in neural network.</li><li>Random Initialisation: Symmetry breaking</li></ol></li><li>Put things together<ol><li>Training a neural network<ol><li>Pick a network architecture<ol><li>Number of input units: Dimension of features x(i)</li><li>Number of output units: Number of Classes</li><li>Layers:<ol><li>Number of layers</li><li>Units in each layer<ol><li>Same units number in each layer</li><li>Usually the more units the better</li></ol></li></ol></li></ol></li><li>Randomly initialise weights<ol><li>Small values near zero</li></ol></li><li>Implement forward propagation to get prediction for any x(i)</li><li>Implement code to compote cose function J(theta)</li><li>Implement backprop to compute partial derivatives of J(theta)<ol><li>for i = 1:m<ol><li>Perform forward propagation and back-propagation using example (x(i), y(i))</li><li>Get activations a(l) and delta(l) for l = 2,…,L</li></ol></li></ol></li></ol></li></ol></li></ol></li></ol><img rel=\"noreferrer\" src=\"https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21381359&pixel&useReferer\"/>","descriptionType":"text/html","publishedDate":"Mon, 20 Jun 2016 00:26:30 +0000","feedId":5600,"bgimg":"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/17db6ca9a6df9e33f302b13568e97dda_r.jpg","linkMd5":"f67a4b4afda48baa5ae15ac1dd03b5f9","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn20@2020_3/2020/08/24/22-34-39-011_2407bbba4c1f78a4.webp","destWidth":640,"destHeight":290,"sourceBytes":60806,"destBytes":53812,"author":"王若愚","articleImgCdnMap":{"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/17db6ca9a6df9e33f302b13568e97dda_r.jpg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn20@2020_3/2020/08/24/22-34-39-011_2407bbba4c1f78a4.webp","https://images.weserv.nl/?url=ssl:pic4.zhimg.com/f168eae6991fd9681da794b9fc3e0b12.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn37@2020_4/2020/08/24/22-35-42-630_11f09d1f3df202f0.webp","https://images.weserv.nl/?url=ssl:pic1.zhimg.com/62e9dc13f799ec5ec0cb8df167179063.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn82@2020_2/2020/08/24/22-35-42-984_702d967b41f8a841.webp","https://images.weserv.nl/?url=ssl:pic2.zhimg.com/70270b37927da2357329ae77eef65d6a.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn72@2020_5/2020/08/24/22-35-42-998_e926dbe33fa62c75.webp","https://images.weserv.nl/?url=ssl:pic3.zhimg.com/eba219186b9387a30205698194cc0ffe.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn53@2020_3/2020/08/24/22-35-43-402_0ff3a7a4846ef4cd.webp","https://images.weserv.nl/?url=ssl:pic4.zhimg.com/d750e6a3a3cf8706181b653b3efe3d22.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn17@2020_6/2020/08/24/22-35-42-730_736fe99b3138c078.webp","https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21381359&pixel&useReferer":null},"publishedOrCreatedDate":1598308478516},{"createdTime":"2020-08-25 06:34:38","updatedTime":"2020-08-25 06:34:38","title":"非监督学习算法--K均值聚类","link":"https://zhuanlan.zhihu.com/p/21558539","description":"<p><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/729eb965e0ada616d3cd58adcc4c7013_r.png\"></p>本文介绍最常见的非监督学习算法「K均值(K-means)」，思路和仿真主要参考Ng的课程「Machine Learning」以及课程作业的Matlab的实现。<p><a href=\"https://github.com/wrymax/machine-learning-assignments/tree/master/week8/machine-learning-ex7/ex7\" data-editable=\"true\" data-title=\"猛戳下载本文Matlab实现\" class=\"\">猛戳下载本文Matlab实现</a>，其中ex7.m包含了k-means的代码，ex7_pca.m包含了PCA的代码。</p><p>以下是正文。</p><p><b>K-means的意义和使用场景：</b></p><p>在无任何先验分类知识的情况下，自动发现数据集的分类。例如：</p><ol><li>在大量文本中发现隐含的话题；</li><li>发现图像中包含的颜色种类；</li><li>从销售数据中发现不同特征顾客的分类。</li></ol><p>👇下面简述算法步骤、仿真以及算法中的问题 👇</p><p><b>1.1 算法步骤</b></p><ul><li>假设希望将训练数据集<equation>x^{(i)} (i = 1, 2, 3,..., m)</equation>分为K类；</li><li>在<equation>x^{(i)} (i = 1, 2, 3,..., m)</equation>中，随机选择K个作为初始分类的图心(centroids) <equation>\\mu _{1}, \\mu _{2}, \\mu _{3},..., \\mu _{K}</equation>；</li><li>遍历<equation>x^{(i)}</equation>，计算出和每个<equation>x</equation>距离最近的图心<equation>\\mu ^{(i)}</equation>，记录当前<equation>x</equation>属于第<equation>i</equation>类；</li><li>遍历K种分类，分别计算上一步中，划归其中的所有<equation>x</equation>点的中心点，将该点设置为本分类中心的图心；</li><li>迭代上两步，直到图心位置收敛。</li></ul><p><b>1.2 Matlab仿真：K-means过程</b></p><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/87d35141e80060aea0eecb2f094454a6.jpg\" data-rawwidth=\"570\" data-rawheight=\"493\"><p>                                         (我做了个gif动图，可能需要戳一下它才会动起来)</p><p><b>1.3 随机初始化 Random Initialisation </b></p><p>由于初始的图心是随机选择的，K-means可能陷入局部最优而导致最终的图心无法收敛到合适的位置。可以使用随机初始化来解决这个问题：</p><ul><li>多次运行K-means算法，计算<equation>c^{(1)},..., c^{(m)}, \\mu _{1},..., \\mu _{k}</equation>；</li><li>计算Cost Function <equation>J = (c^{(1)},..., c^{(m)}, \\mu _{1},..., \\mu _{k})</equation>，函数代表了聚类的失真程度；</li><li>选择J最小的那一组初始化以及最终的计算结果。</li></ul><p><b>1.4 选择聚类数量</b></p><ul><li>使用「肘方法」Elbow Method</li><ul><li>逐渐增加K，并分别计算Cost Function J，寻找J较小的K，如图：</li><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/392ddcffe91d6e90c0316e0e5e5cb47d.jpg\" data-rawwidth=\"620\" data-rawheight=\"321\"><li>理论上，当分类数量K增大时，J将逐渐变小；</li><li>但也可能陷入局部最优的问题，导致k增大时，J反而增大。此时需要重新随机初始化后再次计算。</li></ul><li>Ng推荐的办法：向自己提问「我为什么要使用K-means」？充分理解聚类的需求以及聚类后能向下游贡献什么东西，往往能从中发现真正合适的聚类数量。例如下图：</li><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/deee28966bfec9af3579e48b3118f7c4.jpg\" data-rawwidth=\"620\" data-rawheight=\"329\"><li>横轴为衣服店顾客的身高，纵轴为顾客的体重。当你理解了顾客可能分为「S、M、L」三类，或者「XS、S、M、L、XL」五类时，最终选择的分类数量可能比较make sense，而不是完全依赖Cost Function算出一个10类或者4类，最终并没有太大实际意义。</li></ul><p><b>1.5 实践：使用K-means压缩图像</b></p><p>思路：</p><ul><li>对一个RGB图像执行K-means算法，寻找能描述图像的16种主要颜色分类；</li><li>将每个像素点聚类到这16种颜色分类中，并分别替换为对应分类的颜色；</li><li>对每个像素使用颜色的索引来代替3维的RGB亮度值，由此可以将图像的大小压缩到<equation>\\frac{1}{6}</equation></li></ul><p>仿真图：</p><p><img rel=\"noreferrer\" src=\"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/037cf01978ec1bedb8ae69ebf5505221.jpg\" data-rawwidth=\"620\" data-rawheight=\"342\">代码在文章开始处的Github链接中，执行ex7即可观测到结果。</p><p>如需转载，请附上原链接，谢谢。</p><img rel=\"noreferrer\" src=\"https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21558539&pixel&useReferer\"/>","descriptionType":"text/html","publishedDate":"Mon, 11 Jul 2016 17:31:53 +0000","feedId":5600,"bgimg":"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/729eb965e0ada616d3cd58adcc4c7013_r.png","linkMd5":"5e3e4f602093f618166a925e4426c108","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn23@2020_6/2020/08/24/22-35-40-212_06cd6a8539c89d68.webp","destWidth":800,"destHeight":379,"sourceBytes":85311,"destBytes":30760,"author":"王若愚","articleImgCdnMap":{"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/729eb965e0ada616d3cd58adcc4c7013_r.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn23@2020_6/2020/08/24/22-35-40-212_06cd6a8539c89d68.webp","https://images.weserv.nl/?url=ssl:pic1.zhimg.com/87d35141e80060aea0eecb2f094454a6.jpg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn88@2020_5/2020/08/24/22-35-41-865_bec16968609013ad.webp","https://images.weserv.nl/?url=ssl:pic2.zhimg.com/392ddcffe91d6e90c0316e0e5e5cb47d.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn45@2020_6/2020/08/24/22-35-41-383_f4e1be870197f2a8.webp","https://images.weserv.nl/?url=ssl:pic3.zhimg.com/deee28966bfec9af3579e48b3118f7c4.jpg":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn61@2020_1/2020/08/24/22-35-41-776_61b94eccc407c296.webp","https://images.weserv.nl/?url=ssl:pic4.zhimg.com/037cf01978ec1bedb8ae69ebf5505221.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn56@2020_3/2020/08/24/22-35-42-078_851c9b040e987e66.webp","https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21558539&pixel&useReferer":null},"publishedOrCreatedDate":1598308478516}],"record":{"createdTime":"2020-08-25 06:34:38","updatedTime":"2020-08-25 06:34:38","feedId":5600,"fetchDate":"Mon, 24 Aug 2020 22:34:38 +0000","fetchMs":221,"handleMs":3559,"totalMs":76826,"newArticles":0,"totalArticles":5,"status":1,"type":0,"ip":"52.30.217.135","hostName":"europe-23.herokuapp.com","requestId":"fc2068550bb74878a6203e4823e6ff9d_5600","contentType":"text/plain; charset=utf-8","totalBytes":2767252,"bgimgsTotal":5,"bgimgsGithubTotal":5,"articlesImgsTotal":38,"articlesImgsGithubTotal":33,"successGithubMap":{"myreaderx8":1,"myreaderx14":1,"myreaderx15":1,"myreaderx7":2,"myreaderx6":2,"myreaderx16":1,"myreaderx10":1,"myreaderx32":1,"myreaderx33":1,"myreaderx11":1,"myreaderx3":1,"myreaderx2":1,"myreaderx12":2,"myreaderx1":1,"myreaderx30":2,"myreaderx31":2,"myreaderx18":1,"myreaderx19":1,"myreaderx":1,"myreaderx25":2,"myreaderx27":1,"myreaderx21":2,"myreaderx22":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:30:13","updatedTime":"2020-08-25 04:30:13","id":5600,"name":"程序员山居笔记 - 知乎专栏","url":"https://raw.githubusercontent.com/RickyWong33/Machine_Learning_RSS/master/zhihu/zhuanlan/AI/coding-future.xml","subscriber":null,"website":null,"icon":"https://zhuanlan.zhihu.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx64/cdn86@2020_1/2020/08/24/22-34-37-646_9fb0a0e3250d9d0e.ico","description":"主要和编程、算法有关，希望未来能有闲情逸致加上高级扯淡的内容。","weekly":null,"link":"https://zhuanlan.zhihu.com"},"noPictureArticleList":[{"createdTime":"2020-08-25 06:35:51","updatedTime":"2020-08-25 06:35:51","id":null,"feedId":5600,"linkMd5":"5fb6d860b7711557f660e8f92dbc3fb9"},{"createdTime":"2020-08-25 06:35:51","updatedTime":"2020-08-25 06:35:51","id":null,"feedId":5600,"linkMd5":"77332f65f0466345a2be85306d3f7227"},{"createdTime":"2020-08-25 06:35:51","updatedTime":"2020-08-25 06:35:51","id":null,"feedId":5600,"linkMd5":"927dd660cb5ed8a706db668532b11e1d"},{"createdTime":"2020-08-25 06:35:51","updatedTime":"2020-08-25 06:35:51","id":null,"feedId":5600,"linkMd5":"f67a4b4afda48baa5ae15ac1dd03b5f9"},{"createdTime":"2020-08-25 06:35:51","updatedTime":"2020-08-25 06:35:51","id":null,"feedId":5600,"linkMd5":"5e3e4f602093f618166a925e4426c108"}],"tmpCommonImgCdnBytes":194298,"tmpBodyImgCdnBytes":2572954,"tmpBgImgCdnBytes":0,"extra4":{"start":1598308474734,"total":0,"statList":[{"spend":223,"msg":"获取xml内容"},{"spend":3559,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":10495,"msg":"正文链接上传到cdn"}]},"extra5":38,"extra6":38,"extra7ImgCdnFailResultVector":[null,{"code":1,"isDone":false,"source":"https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21836208&pixel&useReferer","sourceStatusCode":503,"sourceBytes":0,"destBytes":0,"feedId":5600,"totalSpendMs":123,"convertSpendMs":0,"createdTime":"2020-08-25 06:35:41","host":"europe68*","referer":"https://zhuanlan.zhihu.com/p/21836208","linkMd5ListStr":"927dd660cb5ed8a706db668532b11e1d","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[503],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21558539&pixel&useReferer","sourceStatusCode":503,"sourceBytes":0,"destBytes":0,"feedId":5600,"totalSpendMs":48,"convertSpendMs":0,"createdTime":"2020-08-25 06:35:41","host":"us-002*","referer":"https://zhuanlan.zhihu.com/p/21558539","linkMd5ListStr":"5e3e4f602093f618166a925e4426c108","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[503],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21449423&pixel&useReferer","sourceStatusCode":503,"sourceBytes":0,"destBytes":0,"feedId":5600,"totalSpendMs":68,"convertSpendMs":0,"createdTime":"2020-08-25 06:35:41","host":"us-038*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[503],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21481541&pixel&useReferer","sourceStatusCode":503,"sourceBytes":0,"destBytes":0,"feedId":5600,"totalSpendMs":89,"convertSpendMs":0,"createdTime":"2020-08-25 06:35:41","host":"us-018*","referer":"https://zhuanlan.zhihu.com/p/21481541","linkMd5ListStr":"5fb6d860b7711557f660e8f92dbc3fb9","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[503],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21836208&pixel&useReferer","sourceStatusCode":503,"sourceBytes":0,"destBytes":0,"feedId":5600,"totalSpendMs":100,"convertSpendMs":0,"createdTime":"2020-08-25 06:35:41","host":"us-040*","referer":"https://zhuanlan.zhihu.com/p/21836208","linkMd5ListStr":"927dd660cb5ed8a706db668532b11e1d","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[503],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21558539&pixel&useReferer","sourceStatusCode":503,"sourceBytes":0,"destBytes":0,"feedId":5600,"totalSpendMs":88,"convertSpendMs":0,"createdTime":"2020-08-25 06:35:41","host":"us-55*","referer":"https://zhuanlan.zhihu.com/p/21558539","linkMd5ListStr":"5e3e4f602093f618166a925e4426c108","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[503],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21449423&pixel&useReferer","sourceStatusCode":503,"sourceBytes":0,"destBytes":0,"feedId":5600,"totalSpendMs":59,"convertSpendMs":0,"createdTime":"2020-08-25 06:35:41","host":"us-022*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[503],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21481541&pixel&useReferer","sourceStatusCode":503,"sourceBytes":0,"destBytes":0,"feedId":5600,"totalSpendMs":103,"convertSpendMs":0,"createdTime":"2020-08-25 06:35:41","host":"us-036*","referer":"https://zhuanlan.zhihu.com/p/21481541","linkMd5ListStr":"5fb6d860b7711557f660e8f92dbc3fb9","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[503],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21381359&pixel&useReferer","sourceStatusCode":503,"sourceBytes":0,"destBytes":0,"feedId":5600,"totalSpendMs":2069,"convertSpendMs":0,"createdTime":"2020-08-25 06:35:41","host":"us-014*","referer":"https://zhuanlan.zhihu.com/p/21381359","linkMd5ListStr":"f67a4b4afda48baa5ae15ac1dd03b5f9","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[503],"sourceSize":"0","destSize":"0"},{"code":1,"isDone":false,"source":"https://ga-beacon.appspot.com/UA-41015557-4/page-name?dt=https://zhuanlan.zhihu.com/p/21381359&pixel&useReferer","sourceStatusCode":503,"sourceBytes":0,"destBytes":0,"feedId":5600,"totalSpendMs":73,"convertSpendMs":0,"createdTime":"2020-08-25 06:35:43","host":"us-51*","referer":"https://zhuanlan.zhihu.com/p/21381359","linkMd5ListStr":"f67a4b4afda48baa5ae15ac1dd03b5f9","extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[503],"sourceSize":"0","destSize":"0"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-037.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe68.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[503,200]},"http://us-002.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[503]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-52.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-038.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[503]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe21.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-018.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[503,200]},"http://us-55.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[503]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-022.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[503,200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-030.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-036.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[503]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-51.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,503]},"http://us-014.herokuapp.com/":{"failCount":1,"successCount":1,"resultList":[200,503]},"http://us-040.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[503]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/4791027d7e93c79278d616f3dae224c7_r.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":338,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn15@2020_1/2020/08/24/22-34-39-112_6a32991fe6aa8545.webp","sourceBytes":38396,"destBytes":22548,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":1270,"convertSpendMs":10,"createdTime":"2020-08-25 06:34:38","host":"us-001*","referer":"https://zhuanlan.zhihu.com/p/21836208","linkMd5ListStr":"927dd660cb5ed8a706db668532b11e1d,927dd660cb5ed8a706db668532b11e1d","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.5 KB","destSize":"22 KB","compressRate":"58.7%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/17db6ca9a6df9e33f302b13568e97dda_r.jpg","sourceStatusCode":200,"destWidth":640,"destHeight":290,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn20@2020_3/2020/08/24/22-34-39-011_2407bbba4c1f78a4.webp","sourceBytes":60806,"destBytes":53812,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":1711,"convertSpendMs":14,"createdTime":"2020-08-25 06:34:38","host":"europe63*","referer":"https://zhuanlan.zhihu.com/p/21381359","linkMd5ListStr":"f67a4b4afda48baa5ae15ac1dd03b5f9,f67a4b4afda48baa5ae15ac1dd03b5f9","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.4 KB","destSize":"52.6 KB","compressRate":"88.5%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/01d6654b5392b00f4e777791d7e80c48_r.jpg","sourceStatusCode":200,"destWidth":650,"destHeight":366,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn31@2020_3/2020/08/24/22-34-39-647_9ddbccbae257cbf2.webp","sourceBytes":70698,"destBytes":47626,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":1854,"convertSpendMs":23,"createdTime":"2020-08-25 06:34:38","host":"us-017*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227,77332f65f0466345a2be85306d3f7227","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"69 KB","destSize":"46.5 KB","compressRate":"67.4%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/52c8d933d79140e2fb6710994a5d581d_r.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":330,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn27@2020_4/2020/08/24/22-34-42-859_5b559608b9deb92b.webp","sourceBytes":54549,"destBytes":39552,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":5238,"convertSpendMs":22,"createdTime":"2020-08-25 06:34:38","host":"us-029*","referer":"https://zhuanlan.zhihu.com/p/21481541","linkMd5ListStr":"5fb6d860b7711557f660e8f92dbc3fb9,5fb6d860b7711557f660e8f92dbc3fb9","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"53.3 KB","destSize":"38.6 KB","compressRate":"72.5%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/729eb965e0ada616d3cd58adcc4c7013_r.png","sourceStatusCode":200,"destWidth":800,"destHeight":379,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn23@2020_6/2020/08/24/22-35-40-212_06cd6a8539c89d68.webp","sourceBytes":85311,"destBytes":30760,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":880,"convertSpendMs":20,"createdTime":"2020-08-25 06:35:40","host":"us-017*","referer":"https://zhuanlan.zhihu.com/p/21558539","linkMd5ListStr":"5e3e4f602093f618166a925e4426c108,5e3e4f602093f618166a925e4426c108","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"83.3 KB","destSize":"30 KB","compressRate":"36.1%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/392ddcffe91d6e90c0316e0e5e5cb47d.jpg","sourceStatusCode":200,"destWidth":620,"destHeight":321,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn45@2020_6/2020/08/24/22-35-41-383_f4e1be870197f2a8.webp","sourceBytes":16681,"destBytes":11350,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":1321,"convertSpendMs":8,"createdTime":"2020-08-25 06:35:41","host":"europe-56*","referer":"https://zhuanlan.zhihu.com/p/21558539","linkMd5ListStr":"5e3e4f602093f618166a925e4426c108","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.3 KB","destSize":"11.1 KB","compressRate":"68%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/2d0076cdfc1d57db127997bfde942fbd.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":338,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn29@2020_3/2020/08/24/22-35-41-400_2eb1668cd28c0f0f.webp","sourceBytes":32705,"destBytes":25924,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":1384,"convertSpendMs":13,"createdTime":"2020-08-25 06:35:41","host":"europe-60*","referer":"https://zhuanlan.zhihu.com/p/21836208","linkMd5ListStr":"927dd660cb5ed8a706db668532b11e1d","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.9 KB","destSize":"25.3 KB","compressRate":"79.3%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/4791027d7e93c79278d616f3dae224c7.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":338,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn41@2020_6/2020/08/24/22-35-41-677_16b7f84940bdc2e2.webp","sourceBytes":38396,"destBytes":22548,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":1203,"convertSpendMs":24,"createdTime":"2020-08-25 06:35:41","host":"us-014*","referer":"https://zhuanlan.zhihu.com/p/21836208","linkMd5ListStr":"927dd660cb5ed8a706db668532b11e1d","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.5 KB","destSize":"22 KB","compressRate":"58.7%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/deee28966bfec9af3579e48b3118f7c4.jpg","sourceStatusCode":200,"destWidth":620,"destHeight":329,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn61@2020_1/2020/08/24/22-35-41-776_61b94eccc407c296.webp","sourceBytes":36915,"destBytes":24512,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":1320,"convertSpendMs":10,"createdTime":"2020-08-25 06:35:41","host":"us-018*","referer":"https://zhuanlan.zhihu.com/p/21558539","linkMd5ListStr":"5e3e4f602093f618166a925e4426c108","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36 KB","destSize":"23.9 KB","compressRate":"66.4%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/87d35141e80060aea0eecb2f094454a6.jpg","sourceStatusCode":200,"destWidth":570,"destHeight":493,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn88@2020_5/2020/08/24/22-35-41-865_bec16968609013ad.webp","sourceBytes":35717,"destBytes":17844,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":1610,"convertSpendMs":11,"createdTime":"2020-08-25 06:35:41","host":"us-51*","referer":"https://zhuanlan.zhihu.com/p/21558539","linkMd5ListStr":"5e3e4f602093f618166a925e4426c108","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.9 KB","destSize":"17.4 KB","compressRate":"50%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/31d0113a2e3d05cc56d4044a8d37e828.jpg","sourceStatusCode":200,"destWidth":620,"destHeight":337,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn67@2020_2/2020/08/24/22-35-41-990_ccc7c90372721d36.webp","sourceBytes":29885,"destBytes":19390,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":1606,"convertSpendMs":12,"createdTime":"2020-08-25 06:35:41","host":"us-037*","referer":"https://zhuanlan.zhihu.com/p/21481541","linkMd5ListStr":"5fb6d860b7711557f660e8f92dbc3fb9","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.2 KB","destSize":"18.9 KB","compressRate":"64.9%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/037cf01978ec1bedb8ae69ebf5505221.jpg","sourceStatusCode":200,"destWidth":620,"destHeight":342,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn56@2020_3/2020/08/24/22-35-42-078_851c9b040e987e66.webp","sourceBytes":38771,"destBytes":24624,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":1593,"convertSpendMs":25,"createdTime":"2020-08-25 06:35:41","host":"us-009*","referer":"https://zhuanlan.zhihu.com/p/21558539","linkMd5ListStr":"5e3e4f602093f618166a925e4426c108","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.9 KB","destSize":"24 KB","compressRate":"63.5%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/ffe4cfa386a14c901823696c246575f3.jpg","sourceStatusCode":200,"destWidth":620,"destHeight":330,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn37@2020_2/2020/08/24/22-35-42-474_bb84b987a7463019.webp","sourceBytes":26235,"destBytes":16324,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":2043,"convertSpendMs":31,"createdTime":"2020-08-25 06:35:41","host":"us-026*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25.6 KB","destSize":"15.9 KB","compressRate":"62.2%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/a2561bd221232925c4625490b7ba316f.jpg","sourceStatusCode":200,"destWidth":620,"destHeight":330,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn9@2020_1/2020/08/24/22-35-42-324_cef97b7cefc4a727.webp","sourceBytes":27380,"destBytes":18178,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":2281,"convertSpendMs":14,"createdTime":"2020-08-25 06:35:41","host":"europe-56*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.7 KB","destSize":"17.8 KB","compressRate":"66.4%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/ba14b947b225d9e5c59520a814376944.jpg","sourceStatusCode":200,"destWidth":1179,"destHeight":1536,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn59@2020_1/2020/08/24/22-35-41-876_32ea1fe4bb0fb48f.webp","sourceBytes":268412,"destBytes":186268,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":2338,"convertSpendMs":77,"createdTime":"2020-08-25 06:35:41","host":"europe21*","referer":"https://zhuanlan.zhihu.com/p/21836208","linkMd5ListStr":"927dd660cb5ed8a706db668532b11e1d","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"262.1 KB","destSize":"181.9 KB","compressRate":"69.4%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/f168eae6991fd9681da794b9fc3e0b12.png","sourceStatusCode":200,"destWidth":626,"destHeight":342,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn37@2020_4/2020/08/24/22-35-42-630_11f09d1f3df202f0.webp","sourceBytes":247749,"destBytes":28712,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":2154,"convertSpendMs":13,"createdTime":"2020-08-25 06:35:41","host":"us-006*","referer":"https://zhuanlan.zhihu.com/p/21381359","linkMd5ListStr":"f67a4b4afda48baa5ae15ac1dd03b5f9","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"241.9 KB","destSize":"28 KB","compressRate":"11.6%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/c92244a19933e73a4ed2dc2a8d93911f.jpg","sourceStatusCode":200,"destWidth":620,"destHeight":326,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn92@2020_6/2020/08/24/22-35-42-776_48a232931685e397.webp","sourceBytes":25164,"destBytes":16270,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":2356,"convertSpendMs":17,"createdTime":"2020-08-25 06:35:41","host":"us-029*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.6 KB","destSize":"15.9 KB","compressRate":"64.7%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/0d4e420fbb6aa742a7873ac3b0a6913c.jpg","sourceStatusCode":200,"destWidth":600,"destHeight":338,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn49@2020_5/2020/08/24/22-35-42-674_2984fd9599fc867b.webp","sourceBytes":36826,"destBytes":20428,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":2370,"convertSpendMs":18,"createdTime":"2020-08-25 06:35:41","host":"us-026*","referer":"https://zhuanlan.zhihu.com/p/21836208","linkMd5ListStr":"927dd660cb5ed8a706db668532b11e1d","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36 KB","destSize":"19.9 KB","compressRate":"55.5%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/d750e6a3a3cf8706181b653b3efe3d22.png","sourceStatusCode":200,"destWidth":1894,"destHeight":1032,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn17@2020_6/2020/08/24/22-35-42-730_736fe99b3138c078.webp","sourceBytes":846947,"destBytes":90718,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":2397,"convertSpendMs":70,"createdTime":"2020-08-25 06:35:41","host":"us-022*","referer":"https://zhuanlan.zhihu.com/p/21381359","linkMd5ListStr":"f67a4b4afda48baa5ae15ac1dd03b5f9","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"827.1 KB","destSize":"88.6 KB","compressRate":"10.7%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/5c6966a18a75ba8633f77780dbaf382e.png","sourceStatusCode":200,"destWidth":1756,"destHeight":722,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn1@2020_3/2020/08/24/22-35-42-824_8c5abe9c5b9e169e.webp","sourceBytes":532485,"destBytes":79412,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":2479,"convertSpendMs":50,"createdTime":"2020-08-25 06:35:41","host":"us-006*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"520 KB","destSize":"77.6 KB","compressRate":"14.9%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/230490f942998f0541070e26c91f0dfa.png","sourceStatusCode":200,"destWidth":1832,"destHeight":838,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn26@2020_3/2020/08/24/22-35-42-537_d9c03a83d8b0ab7a.webp","sourceBytes":589345,"destBytes":87878,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":2848,"convertSpendMs":167,"createdTime":"2020-08-25 06:35:41","host":"europe-22*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"575.5 KB","destSize":"85.8 KB","compressRate":"14.9%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/62e9dc13f799ec5ec0cb8df167179063.png","sourceStatusCode":200,"destWidth":1890,"destHeight":992,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn82@2020_2/2020/08/24/22-35-42-984_702d967b41f8a841.webp","sourceBytes":920981,"destBytes":103752,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":2681,"convertSpendMs":80,"createdTime":"2020-08-25 06:35:41","host":"us-030*","referer":"https://zhuanlan.zhihu.com/p/21381359","linkMd5ListStr":"f67a4b4afda48baa5ae15ac1dd03b5f9","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"899.4 KB","destSize":"101.3 KB","compressRate":"11.3%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/70270b37927da2357329ae77eef65d6a.png","sourceStatusCode":200,"destWidth":1854,"destHeight":1038,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn72@2020_5/2020/08/24/22-35-42-998_e926dbe33fa62c75.webp","sourceBytes":705677,"destBytes":79940,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":2749,"convertSpendMs":155,"createdTime":"2020-08-25 06:35:41","host":"us-025*","referer":"https://zhuanlan.zhihu.com/p/21381359","linkMd5ListStr":"f67a4b4afda48baa5ae15ac1dd03b5f9","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"689.1 KB","destSize":"78.1 KB","compressRate":"11.3%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/8c912d6f5472417b4bf5a45724cc3108.png","sourceStatusCode":200,"destWidth":3756,"destHeight":1952,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn49@2020_3/2020/08/24/22-35-42-797_251320dfb0a45c70.webp","sourceBytes":2081491,"destBytes":156156,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":3189,"convertSpendMs":277,"createdTime":"2020-08-25 06:35:41","host":"europe64*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2 MB","destSize":"152.5 KB","compressRate":"7.5%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/eba219186b9387a30205698194cc0ffe.png","sourceStatusCode":200,"destWidth":1894,"destHeight":1014,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn53@2020_3/2020/08/24/22-35-43-402_0ff3a7a4846ef4cd.webp","sourceBytes":1131667,"destBytes":114292,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":3112,"convertSpendMs":116,"createdTime":"2020-08-25 06:35:41","host":"us-52*","referer":"https://zhuanlan.zhihu.com/p/21381359","linkMd5ListStr":"f67a4b4afda48baa5ae15ac1dd03b5f9","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.1 MB","destSize":"111.6 KB","compressRate":"10.1%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/a0db6ba0b74fd2185a95d4ff0974c079.png","sourceStatusCode":200,"destWidth":3788,"destHeight":1920,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn84@2020_5/2020/08/24/22-35-43-435_6b3759472ee7b670.webp","sourceBytes":2616503,"destBytes":196810,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":3771,"convertSpendMs":594,"createdTime":"2020-08-25 06:35:41","host":"europe63*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.5 MB","destSize":"192.2 KB","compressRate":"7.5%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/b473417172cd29c59f9a5655c6889a16.png","sourceStatusCode":200,"destWidth":3820,"destHeight":2016,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn52@2020_5/2020/08/24/22-35-43-975_fe28b891d745a77e.webp","sourceBytes":1870399,"destBytes":143868,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":3698,"convertSpendMs":575,"createdTime":"2020-08-25 06:35:41","host":"us-021*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.8 MB","destSize":"140.5 KB","compressRate":"7.7%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/490a48d1d7c4c3ddb1c507066c99301c.png","sourceStatusCode":200,"destWidth":3788,"destHeight":2020,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn21@2020_2/2020/08/24/22-35-43-700_3c205a9fc6cce5e9.webp","sourceBytes":2843679,"destBytes":222744,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":3089,"convertSpendMs":351,"createdTime":"2020-08-25 06:35:41","host":"us-010*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.7 MB","destSize":"217.5 KB","compressRate":"7.8%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic3.zhimg.com/4a1f050207306becba5c5573957d0625.png","sourceStatusCode":200,"destWidth":3796,"destHeight":2060,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn6@2020_2/2020/08/24/22-35-43-825_ad2f34ac1fd42d14.webp","sourceBytes":3033783,"destBytes":236168,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":4304,"convertSpendMs":336,"createdTime":"2020-08-25 06:35:41","host":"europe68*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.9 MB","destSize":"230.6 KB","compressRate":"7.8%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/2d7c1a31ce3a19e9aadc47c4ac0b73aa.png","sourceStatusCode":200,"destWidth":3764,"destHeight":2024,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn57@2020_1/2020/08/24/22-35-44-696_9a4b1467fb67b32f.webp","sourceBytes":2406799,"destBytes":176586,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":4448,"convertSpendMs":381,"createdTime":"2020-08-25 06:35:41","host":"us-030*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.3 MB","destSize":"172.4 KB","compressRate":"7.3%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic1.zhimg.com/81a7af0b71a42cf0752b0ef9784ac2ab.png","sourceStatusCode":200,"destWidth":3636,"destHeight":1872,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn14@2020_1/2020/08/24/22-35-44-892_2fbdfea20c88da6d.webp","sourceBytes":2193592,"destBytes":194210,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":4670,"convertSpendMs":335,"createdTime":"2020-08-25 06:35:41","host":"us-034*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.1 MB","destSize":"189.7 KB","compressRate":"8.9%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic4.zhimg.com/d1a6d5dfd58b7cdbd0410487a5596c4f.png","sourceStatusCode":200,"destWidth":3744,"destHeight":2000,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn66@2020_1/2020/08/24/22-35-44-873_fd1bcba62e648d09.webp","sourceBytes":1732657,"destBytes":132470,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":4719,"convertSpendMs":201,"createdTime":"2020-08-25 06:35:41","host":"us-006*","referer":"https://zhuanlan.zhihu.com/p/21449423","linkMd5ListStr":"77332f65f0466345a2be85306d3f7227","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.7 MB","destSize":"129.4 KB","compressRate":"7.6%"},{"code":1,"isDone":false,"source":"https://images.weserv.nl/?url=ssl:pic2.zhimg.com/5cdc926f1d45540203539c5b8a905eb9.png","sourceStatusCode":200,"destWidth":3636,"destHeight":1996,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn64@2020_6/2020/08/24/22-35-50-071_43b536c33ad7f16b.webp","sourceBytes":2504291,"destBytes":125578,"targetWebpQuality":75,"feedId":5600,"totalSpendMs":10442,"convertSpendMs":268,"createdTime":"2020-08-25 06:35:41","host":"europe-59*","referer":"https://zhuanlan.zhihu.com/p/21481541","linkMd5ListStr":"5fb6d860b7711557f660e8f92dbc3fb9","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.4 MB","destSize":"122.6 KB","compressRate":"5%"}],"successGithubMap":{"myreaderx8":1,"myreaderx14":1,"myreaderx15":1,"myreaderx7":2,"myreaderx6":2,"myreaderx16":1,"myreaderx10":1,"myreaderx32":1,"myreaderx33":1,"myreaderx11":1,"myreaderx3":1,"myreaderx2":1,"myreaderx12":2,"myreaderx1":1,"myreaderx30":2,"myreaderx31":2,"myreaderx18":1,"myreaderx19":1,"myreaderx":1,"myreaderx25":2,"myreaderx27":1,"myreaderx21":2,"myreaderx22":1,"myreaderx24":1,"myreaderx5oss":1,"myreaderx29":1},"failGithubMap":{}}