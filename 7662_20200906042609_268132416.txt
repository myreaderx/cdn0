{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-06 12:24:59","updatedTime":"2020-09-06 12:24:59","title":"谈新IT背景下的CIO角色定位和知识体系构建(200829)","link":"http://blog.sina.com.cn/s/blog_493a84550102z909.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7G0SReQdJ43\" TARGET=\"_blank\"><img SRC=\"http://s4.sinaimg.cn/mw690/001l8XD7zy7G0SReQdJ43&#38;690\" NAME=\"image_operate_23291598681301467\" /></A>\n<div><br /></DIV>\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于企业CIO岗位角色定位，在网上有很多的文章都谈到，自己博客在前面也谈到过CIO应该有的知识技能储备和在新IT架构下的角色转型升级，今天再结合新IT背景来谈下CIO角色定位。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先我们还是简单总结下CIO应该具备的知识技能储备，要做好企业CIO不是一件容易的事情，往往需要<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">业务，技术和管理三方面的能力储备</SPAN>，体现的是一个综合能力，各方面都需要均衡而不要出现明显的短板，只有这样你才能够更好的胜任这个岗位。</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务储备：</SPAN>企业核心价值链，包括研发，供应链，财务，市场营销核心业务线知识</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n技术储备：</SPAN>信息技术知识的基础储备，包括IT基础设施，软件工程，ITIL运维和管控治理</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n管理储备：</SPAN>最基础的是项目管理储备，更加重要的是对人的管理，管理机制建立</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n什么是新IT背景？</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n简单来说就是新的业务需求和目标下对IT新的要求，简单来说就是IT需要更加灵活，敏捷，能够快速的响应和支撑业务，同时能够更加高效，更加自动化以实现低成本运作。而我们谈到的微服务架构，DevOps等都是新IT背景下的支撑技术。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于企业内的IT部门，特别是要意识到IT即服务的道理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即使是对内部企业员工，IT部门支撑和提供的业务系统最终提供的还是IT服务能力，那我们评估的仍然是用户对IT服务提供本身的满意度，IT服务本身对业务的支撑和敏捷响应程度。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n企业CIO需要不断思考的就是如何更好更加高效更加低成本的为企业提供各种IT服务能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n让专业的人来做专业的事</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于传统企业来说，企业高层领导包括CIO往往更加强调购买服务器，购买软件或者自己开发软件来满足和支撑企业的业务。简单来说就是企业每年的IT预算花费出去了，企业内没有点IT服务器资产或软件留下来往往都感觉到心里是空唠唠的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而在新IT背景下，IT即服务，资源和软件本身不是价值，只有它们提供的有价值的服务才最终产生价值。因此我们一定要转变思维，让专业的公司，专业的人来帮助企业提供专业化的服务能力。有好的IaaS服务提供商，有好的SaaS应用软件，我们要大胆去尝试，真正去践行软件即服务的思想。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n你会发现在规模经济下，使用软件即服务模式，企业往往会有更少的试错成本，前期建设成本，后续管理和运维成本，在成本考量上反而也是最低的。特别是在当前IT人员本身人力成本越来越高的情况下。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务驱动而非技术驱动</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n虽然我经常会谈到微服务架构，DevOps支撑过程，容器云PaaS平台等，但是我仍然要强调的是CIO思考意识里面一定是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">业务目标驱动，而非新技术驱动</SPAN>。不仅仅是企业的CIO，包括企业的研发项目经理，核心架构人员也要意识到业务驱动，而非技术驱动，技术是为业务服务的，不要为了技术而技术。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我们上任何一个新技术都需要想明白究竟带来哪些业务价值，否则就不要盲目上。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我们实施微服务架构和模块化也是同样的道理，这个本身是有明确的业务价值的，就是能够更加快速敏捷的响应业务变化。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n比如一线业务部门计划推出一项新的业务，需要一个APP应用来支撑，在传统IT架构模式下我们可能需要2个月才能够上线这个小系统，但是新IT架构下你可能两周就能够快速上线。原来业务一个需要变更最快都要1个月完成，但是新IT架构下能够1到2周就能完成快速交付。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n或者说我们在使用系统中遇到的问题，原来处理起来很慢，现在可以2小时内快速处理。我们原来使用的功能，原来觉得响应和性能都很差，现在新的版本使用起来速度很快等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这些都是业务能够实际感受到的，就是新IT架构带来的业务价值。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n真正为企业留下有价值的IT资产积累</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个企业的CIO需要思考在职的多年究竟为企业留下了什么？是一堆已经过时的服务器资源和已经难以维护无法扩展的IT系统，还是其它？企业每年投的IT预算除了支撑企业业务正常运行外，还能够留下哪些有价值的东西？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n什么叫有价值的IT资产？</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n简单来说，有价值的IT资产本身一定是可以显性化沉淀下来的，帮助后人持续收益的资产。比如我们常说的一个好的软件研发过程，IT部门管理架构和管理体系设计，一套技术标准等。这些本身是有价值的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而对于IT系统来说，这个IT系统本身是可以持续迭代升级的，是可扩展的，是容易运维的，那么这个IT系统本身就能够持续创造价值。其次，如果这个IT系统通过多年运行沉淀下来的数据还能够拿出来进一步做数据分析，辅助企业生产运营决策，那么这个价值就更大。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nIT系统本身是没有价值的，及时提供的IT服务有价值，事后形成的数据有价值。这也是在我博客很早的文章就提到的，企业CIO要有数据管理和数据运营意识的一个原因。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n对于CIO工作重点的思考</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; height: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/5df74eccf37d4fb3bee77331c6905750?from=pc\" IMG_WIDTH=\"768\" IMG_HEIGHT=\"510\" ALT=\"谈新IT背景下的CIO角色定位和专业知识体系构建\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这里主要针对中大型企业有专门的IT部门和独立开发运维团队的情况，对于这种企业的CIO，核心的一些思考点在哪里，和常规软件企业又有哪些差异？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于企业IT部门是成本中心，在开源节流上，利润中心的重要性和关注度还是远远高于成本中心，这也是很多企业IT部门往往不受重视的原因，CIO本身也没有太多的决策权，在本身没有太多独立开发能力时候更多仅仅是一个运维中心的角色。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那么对于一个大中型企业的CIO，核心的思考应该包括哪些内容？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n将IT价值显性化表达</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n思考的重点首先还是IT价值的显性化，即如何让业务部门管理，执行各层人员感受到通过信息化规划，建设和实施，切实带来了工作效率的提升，业务价值能力的提升。业务上的一些流程优化，好的管理举措等如何能够通过IT系统更好的固化和高效执行。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于IT价值的显性化最需要考虑的仍然是两大方面：<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一个是成本降低，一个是业务敏捷性的增强。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这两点往往都很难完全量化评估，但是又不能全部定性分析。谈到提升就一定有比较，即IT类应用实施前后的比较，业务绩效的KPI通过分解后，有一部分即是IT系统所带来的贡献。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n同时随着企业管理的精细化，更多管理需要业务运作数据来支撑，以方便进行业务分析和管控，而这些也是IT系统发挥价值的一个重点，业务管控分解的业务KPI和绩效分析，最终落到各个IT系统随时随地的采集数据并汇总，以提供业务分析之用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n企业的IT系统规划和建设，很容易犯的毛病就是盲目的照搬其它企业的最佳实践而忽视了自身的业务背景和管控需求，或者说在业务能力不足的时候上了大而全的IT系统，期待通过IT系统来倒退业务变革是相当不现实的做法。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n将IT应用以服务方式提供，做好内部运营工作</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其次，IT部门是一个服务部门，企业内的各个业务部门就是客户，那么IT建设的系统如何在内部做好运营以提升客户满意度就相当关键了。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于运营本身包括两个方面的内容，其一是IT类系统在内部的推广和宣传，其二是IT系统内部的运维服务。即使是服务内部客户，IT部门建设的系统也应该像一个完整的产品样，需要考虑在内部如何策划和营销，如何解决系统刚开始实施一系列的问题，很多重要IT系统往往一开始是高层强制推，但是如果业务部门消极抵制也很难真正达到效果。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n所以很多时候IT部门应该和业务管理部门在一个战线上，要借业务部门之力进行联合策划和产品推广。运维服务就更加重要了，内部的IT服务热线，问题管理和跟踪解决闭环，内部服务满意度评估等，唯一需要考虑的就是为内部客户提供真正高可用性的IT系统。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n再次，对于信息化规划，我们一直在谈的重点就是业务驱动IT，通过IT建设来实现业务价值和能力提升，但是现实情况往往更多的还是业务和IT脱节，IT对整个业务价值链的支撑出现断点或问题。要么是业务人员不懂IT，要么是IT人员不熟悉业务，对于大中型企业的内部IT，一定要培养既熟悉业务，又熟悉IT的系统分析员或叫业务分析和建模人员。这类人员往往需要比业务人员更加熟悉端到端的业务，不一定要精通到每个业务细节，但是必须要能够更好的审视全局。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n业务部门和IT部门人员都朝前走一步，包括形成跨部门的虚拟运作团队，成立专门的流程&#38;IT部门，都可以较好的解决这个问题。而我们常说的基于EA企业架构的信息化规划，正好也是将业务和IT，流程和数据进一步很好的融合的表现。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n提升IT国产能力成熟度</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n最后，作为内部的IT部门，自身的管理能力和团队成熟度提升就相当重要了，在这里面涉及到产品规划，CMMI，软件工程，IT项目管理，ITIL或Cobit等多方面的知识和方法体系。一个成熟的IT部门一定不是疲于奔命的应对业务需求，而是应该逐步形成按产品规划，版本研发和实施，部署运维，需求和问题管理等一整套的方法进行运转。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n很多非IT类企业的信息化部门，往往较少接触到IPD或CMMI，IT项目管理等一整套的业界做法，而是自己闭门造车。而实际情况是IT管理发展到现在已经相当成熟，需要的是借鉴他人经验，再结合自身实际情况进行裁剪，逐步推荐内部IT管理和流程的规范化。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n如何去搭建CIO的技术知识体系</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从年初，我们开始今年的IT专业技能培训知识体系规划和培训工作开展。其中包括了类似沟通，写作，PPT制作呈现，个人知识管理等软技能方面，也包括了专业知识技能方面。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而对于专业技能方面的知识体系结构，感觉企业CIO也可以作为一个参考借鉴。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于专业技能培训，按照当前通用的分法，仍然是分为业务，技术，管理和三个方面的内容。对于团队成员来说分岗位角色不同应该分开组织进行培训，但是三者之间本身又相互又融合。比如做业务的人员，本身也应该对技术基础知识有所了解，而业务和技术人员本身又应该了解通用的项目管理，流程管理等方面。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n按照CMMI的知识体系可以看到，分为了支撑过程域，软件工程和技术域，项目管理域，按照公司单个产品线本身又分为了售前，需求，项目经理，技术开发，测试，实施等不同的岗位角色。因此对于专业技能培训必须是结合公司实际的产品线和岗位角色情况来组织和安排。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n管理和过程类培训</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/fdedfb82d5d149b5a5b97af548203931?from=pc\" IMG_WIDTH=\"946\" IMG_HEIGHT=\"580\" ALT=\"谈新IT背景下的CIO角色定位和专业知识体系构建\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个是偏通用的专业技能，这里面的重点实际是两个，一个是IT项目管理，一个是流程管理，这两个是基础的基础，你可以看到实际你工作的开展协同基本都会用到这两方面的知识。然后再到具体过程域来说，增加软件工程或CMMI的知识体系培训内容。即：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">1.\nIT项目管理培训</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.\n流程管理和流程分析方法培训</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">3.\n软件工程基础培训</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">4.\nCMMI基础培训</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">5.\nScrum敏捷研发管理和敏捷开发方法培训</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务基础知识培训</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于业务基础知识来说，对于类似我们做SOA平台类产品来说，更多的并不需要对和细致的业务做了解，仅仅是围绕企业的核心价值链，对核心业务有所了解即可。那么企业的核心价值链和支撑业务有哪些？简单来说即包括了供应链管理，生产，研发，市场营销，财务，人力资源等。因此我们的培训可以围绕这些展开。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">1.\n企业价值链管理和核心企业端到端流程介绍</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.\nERP基础知识和核心业务模块介绍</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">3.\n供应链管理和业务介绍</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">4.\n研发生命周期管理和核心业务介绍</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">5.\n生产管理和智能制造</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">6.\n财务域核心知识和业务介绍</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">7.\n市场和客户管理管理核心业务知识介绍</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">8.\n人力资源管理</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n技术和研发类知识培训</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于技术和研发类培训，实际上我们看到整个思路很清晰，即围绕软件研发生命周期展开即可，当然还需要对该生命周期进行扩展，在前期增加售前方案内容，在后续增加运维方面内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">1.\n产品规划和高效产品研发</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.\n软件生命周期管理</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.1\n需求分析和需求开发方法培训（交互设计，易用性）</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.2\n软件架构设计</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.3\n数据库设计</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.4\n概要设计和详细设计基础</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.5\n标准开发框架和开发方法培训</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.6\n编码规范培训</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.7\n测试方法和流程，测试工具培训</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.8\n技术类问题分析和排查</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">3.\n新知识和技术</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">3.1\n微服务类培训(基础，开发框架，主流技术，网关，熔断，安全，服务链监控）</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">3.2\nDevOps基础知识培训</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">3.3\n容器和PaaS技术培训</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">3.4\n核心技术类中间件培训（缓存，消息，元原生相关技术中间件，前端技术等）</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">4.\n运维类培训</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">4.1\nLinux日常操作和运维</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">4.2\n数据库和中间件运维</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">4.3\n运维工具和运维自动化</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">4.4\nITIL运维流程和体系</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nIT规划和咨询类培训</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/e23395a1be0044c39b238acfb9732f59?from=pc\" IMG_WIDTH=\"849\" IMG_HEIGHT=\"478\" ALT=\"谈新IT背景下的CIO角色定位和专业知识体系构建\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于IT规划和咨询我单独列一类出来，主要还是这部分相对独立，同时涉及到业务和技术，管理多方面的内容，包括也涉及到我前面提到的大量软技能的内容，要做好IT咨询本身不容易。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于IT规划知识体系，我原来做过整理，参考本文贴图，参考业界IT规划的参考模型和框架，结合IT规划方法论和实施，重新整理了IT规划知识体系。对于横轴主要考虑IT规划的方法论和步骤，具体包括了参考模型，调研阶段，差异分析和匹配，目标架构，实施策略和管控治理六个方面的内容；对于纵轴包括了IT基础设施，业务基础设施，业务流程，数据，技术体系，应用系统，集成架构七个方面的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n横向包括了IT规划和咨询项目的完整阶段和流程。纵向包括了完整的IT规划和企业架构应该包括了内容。对于原有zachman框架的匹配分析为，去掉了时间和动机，增加了业务流程，技术和集成三个维度。对于zachman横向原来分为目标/范围、业务模型、系统模型、技术模型、详细表达、运行功能。其中将技术模型转化为横向，并增加了实施策略和管控机制。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">1.\n流程管理和ARIS建模</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.\n企业架构规划（可以围绕Togaf框架展开）</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.1\n业务架构和流程建模</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.2\n数据架构</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.3\n应用架构</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.4\n技术架构（技术架构，运维架构)</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.5\n组合规划和实施演进</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">3.\n业务基础（供应链，财务，研发，生产制造，市场营销，人力资源)</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">4.\n技术基础（云计算，SOA，微服务，中台，ITIL，CMMI，软件工程等）</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">5.\n工具基础（咨询工具箱，分析方法等）</P>\n<br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Sat, 29 Aug 2020 06:07:43 +0000","feedId":7662,"bgimg":"http://s4.sinaimg.cn/mw690/001l8XD7zy7G0SReQdJ43&690","linkMd5":"a60b47a7adc8e9ddf3fddbcb97e9b34c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn94@2020_3/2020/09/06/04-25-02-345_10778d6d8c5726ac.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s4.sinaimg.cn/mw690/001l8XD7zy7G0SReQdJ43&690":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn94@2020_3/2020/09/06/04-25-02-345_10778d6d8c5726ac.webp","https://p6-tt.byteimg.com/origin/pgc-image/5df74eccf37d4fb3bee77331c6905750?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn76@2020_6/2020/09/06/04-25-09-829_1f5e09d257b0cf65.webp","https://p1-tt.byteimg.com/origin/pgc-image/fdedfb82d5d149b5a5b97af548203931?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn100@2020_2/2020/09/06/04-25-07-744_6714594fda761184.webp","https://p6-tt.byteimg.com/origin/pgc-image/e23395a1be0044c39b238acfb9732f59?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn12@2020_6/2020/09/06/04-25-11-705_227f6c36073af67a.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn96@2020_4/2020/09/06/04-25-07-613_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1599366299500},{"createdTime":"2020-09-06 12:24:59","updatedTime":"2020-09-06 12:24:59","title":"读数据中台笔记整理(200904)","link":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7Ga11IHmc1c\" TARGET=\"_blank\"><img SRC=\"http://s13.sinaimg.cn/mw690/001l8XD7zy7Ga11IHmc1c&#38;690\" NAME=\"image_operate_31691599176748342\" /></A>\n<div><br /></DIV>\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这本书《数据中台-让数据用起来》是我和中台战略一起购买的另外一本中台方面的书，今天读完前面4个小章节，并对整个书籍内容做了下泛读，整体质量还是不错，但是比中台战略要偏技术化点，适合数据规划和数据架构师阅读。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在读一本书的时候，我始终在强调其一你要抓住最核心的概念模型，其二你要对对比解析搞清楚和其它概念的区别。类似数据中台来说，首先你要搞清楚的就是数据中台的概念和定义，其次就是要搞清楚数据中台和业务中台的区别，和传统的大数据平台，BI了数据仓库的区别。只有把这些搞清楚了你对数据中台的概念才能够有一个完整的理解和掌握。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先我们看下这本书给数据中台的一个定义：</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n数据中台是一套可持续的让企业的数据用起来的机制，是一种战略选择和组织形式，是依据企业特有的业务模式和组织架构，通过有形的产品和实施方法论支撑，构建的一套持续不断的把数据变成资产并服务于业务的机制。数据来源于业务并反哺业务，不断的迭代循环，实现数据可间，可用和可运营。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这里面最核心的就是将数据变化为资产并服务于业务的机制，数据来源于业务并反哺业务。我们基于这个核心内容可以进一步抽象下数据中台对核心的定义，我个人理解和定义如下：</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n数据中台本质是一个能够实现跨域数据融合，并在数据融合后对数据进行整合加工和分析，提供增值的数据服务能力给业务使用的一个平台。在我这个概念里面多强调了两点，一个是实现跨域数据融合，一个是提供增值的数据API服务能力给业务使用。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n书籍里面提到了书籍中台四个方面的关键能力：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n书籍中台需要具备<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">数据汇聚整合，数据加工提纯，数据服务可视化，数据价值</SPAN>变现4个核心能力，让企业员工，客户，伙伴能够方便的应用数据。而这个里面的数据提纯加工对应的是数据资产管理的核心内容，即数据中台必须通过连通全域数据，通过统一的数据标准和质量体系，建设提纯加工后的标准数据资产体系，以满足企业业务对数据的需求。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n数据中台和其它概念的关键差异分析</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; height: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/2026b1fb9e994342a9bab7ed68cd7702?from=pc\" IMG_WIDTH=\"727\" IMG_HEIGHT=\"491\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_27271599176759704\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据中台和业务中台的关系</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我们先看下书里面的一些解释即：</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n业务中台更加偏向于业务流程管控，将业务流程中的共性服务能力抽象出来，形成通用服务能力。而数据中台则是抽象数据能力的共性，形成统一的数据服务能力。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于上面这个解释不足够准确，为什么呢？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因为业务中台本身也会抽象数据共性提供数据服务能力，类似业务中台的供应商中心，客户中心本身也提供数据服务能力。那么时间最大的差异点在哪里呢？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即我们前面提到的，数据中台是实现业务中台核心共享数据的跨域整合，再通过加工后提供整合后的数据服务能力。这里面有两个重点，即：<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">第一数据要跨域整合，第二数据要加工处理后再提供增值服务能力</SPAN>，这个加工可能简单的汇总表，也可能是复制的底层数据模型和智能分析算法。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务中台重点是业务数据化，而数据中台重点是数据业务化</SPAN>，数据来源于业务并反哺业务。就建设和支撑层面来说我原来也总结过，即业务中台是基础业务能力支撑，必须要有，数据中台是增值能力支撑，刚开始没有也不会影响到业务本身的运作。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n再简单来说，以电商平台来举例，业务中台关键功能缺失导致的是业务流程走不下去，在业务协同上出现问题。而数据中台能力缺失导致的是没能够为用户提供增值服务，让用户顺带多买点东西。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n两者的联系，书里面有一句总结还是比较准确，即数据中台和业务中台本身是相辅相成的，业务中台中沉淀的业务数据进入到数据中台进行体系化加工，再以服务化的方式支撑业务中台上的应用，而这些应用产生的新数据又重新流转到数据中台，形成循环不息的数据闭环。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据中台和数据仓库和大数据平台</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/5347ba3e58524b2ca3ad694ecb518af1?from=pc\" IMG_WIDTH=\"659\" IMG_HEIGHT=\"477\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于数据中台和数据仓库的区别，书里面的总结比较到位。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n即数据仓库的主要场景是支持管理决策和业务分析，而数据中台则是将数据服务化之后提供给业务系统，目标是数据能力渗透到各个业务环节，不限于决策分析类应用场景。数据中台持续不断的将数据进行资产化，价值化并应用到业务，而且关注数据价值的运营。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这里面的关键区别就在于数据中台能力要服务于业务系统准实时协同需要。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n为了准实时，一方面你会看到数据中台架构上实际上是包括了大数据平台的核心架构和分布式存储内容，同时还包括了大数据平台中的实时计算和流处理能力。其次，为了将能力提供给业务系统，往往数据中台整体架构上一定会体现一个统一的数据服务能力开放层，这个在传统的数据仓库或大数据平台上是没有的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据中台和BI数据仓库有重合，也有交集。相同的就是整个数据采集集成，数据存储，数据模型构建，数据开发和分析，这些都需要。差异点在于数据中台需要有统一的数据服务能力开放层，提供给业务使用，而弱化了传统BI里面的数据分析和报表展现层。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n所以我们首先搞清楚数据中台是为增值业务需求服务，BI平台为管理经营决策服务。这使得两者在数据模型构建，数据开放和提供策略上有差异，但是核心的技术平台能力则是相同的。即你可以基于Hadoop整个技术框架体系来构建数据中台，也可以用来构建BI数据仓库。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据中台的业务赋能</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n简单总结就是：<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">业务数据化，数据资产化，资产服务化，服务业务化，业务智能化持续赋能业务闭环。</SPAN>数据中台作为整个企业各个业务所需数据服务的提供方，通过自身的平台能力和业务对数据的不断滋养（业务数据化），会形成一套高效可靠的数据资产体系和数据服务能力（数据资产化和资产服务化）。这样当面对市场变化，需要构建新的前台应用的时候，数据中台能够迅速的提供数据服务能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据中台要求整个企业共用一个数据技术平台，共建数据体系，共享数据服务能力。数据中台的目标是实现企业经营的数据化，精细化，智能化，本质是建立一套可持续让企业数据用起来的机制。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n数据中台的建设</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; height: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/d5d14875108e4da4ae3dfd0f2080400a?from=pc\" IMG_WIDTH=\"727\" IMG_HEIGHT=\"438\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于数据中台的建设，实际上我们要看到两个方面的内容：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n单纯的数据技术平台的建设</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据内容和数据资产的建设</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我刚才说了单纯的数据技术平台还可以用于BI分析，技术平台能力本身就是相通的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于技术平台我们要考虑就是数据采集集成，数据存储，数据处理加工和计算，数据分析各个层面的技术工具和组件。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于数据内容的建设，实际上包括了四个方面的内容，书里面总结如下：</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n技术体系</SPAN>（包括大数据存储计算技术和数据中台工具技术组件）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据体系</SPAN>（围绕数据模型为核心，并围绕数据资产全生命周期展开）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务体系</SPAN>（通过数据中台的服务组件能力，将数据变为服务）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n运营体系</SPAN>（将数据服务作为可运营的商品一样，来构建一套运营服务和管理体系）</LI>\n</OL>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n数据中台的架构</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/1670d8b39d7949209cf1ff101b6e1bad?from=pc\" IMG_WIDTH=\"767\" IMG_HEIGHT=\"639\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于数据中台架构后面还要单独写文章详细描述，从书里面给出的架构图我们可以看到基本模式都是一样的，即最底层是数据基础设施和数据技术平台。再往上分别是数据汇集，数据开发，数据体系，数据资产管理，数据服务几个大模块的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n所以我们先看下整个数据中台架构里面大模块分法上的一些思路。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据汇聚和数据开发</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个分开为两个大模块是合理的，即数据汇聚仅仅只复制数据集成的事情，比如我们常说的数据采集，ETL方面的事情。而数据开发即是数据采集过来后还需要对数据进行加工处理，比如形成宽表或汇总表，基于数据分析算法进行数据汇聚计算形成新的数据结果等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据资产管理和数据体系</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先我们可以看到数据资产管理即我们常说的数据全生命周期管理，类似我们原来谈MDM主数据管理经常谈到的元数据管理，数据标准，数据质量管理，数据安全，数据创建变更全生命周期流程管理等都在该模块能够看到。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于数据体系是否理解为不同的数据应用域，书里面提到的数据体系包括了贴源数据，统一数仓，标签数据和应用数据。可以看到数据本身分层，数据也可以分数据域。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n从全生命周期如何看数据？</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果从数据全生命周期来看，实际上我们可以看到可以分为数据的入库过程，数据的存储和模型构建，数据的对外能力提供过程。对于数据的入库包括了数据汇聚，数据开发；对于数据的存储包括了数据模型和数据体系，对于数据对外能力提供包括了数据服务层构建。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而实际的数据全生命周期管理刚好应该是贯通前面几个阶段的一个完整管理和管控流程。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n上面这个图可以看做是书籍里面的一个配图，给出了数据中台的整体结构，在上面一篇文章里面我也谈到了整个数据中台包括了数据汇聚，数据研发，数据指标体系，数据资产管理和数据服务体系几大块的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在谈之前还是重新回顾下数据中台的定义，即：</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n数据中台是将数据转变为资产并服务于业务的机制。稍微再扩展下这句话就是实现跨越数据的汇聚和融合，并对数据进行加工处理形成有价值的数据资产，再将数据资产以服务化的方式开放出去满足业务需求。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在简单点来看，从整个数据的生命周期，数据中台包括三个方面的内容。</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据入库的过程（数据的采集，数据的汇聚）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据的存储和加工过程（数据的存储，加工和开发，数据模型，算法，过程调度）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据的开放过程（构建完整的数据资产和指标体系，并形成数据服务对外开放)</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n以上就是一个完整的数据中台内容。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n数据中台底层技术架构</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/e7a2f493c0ee42219c28f240f1111ce5?from=pc\" IMG_WIDTH=\"768\" IMG_HEIGHT=\"361\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当我们在谈数据中台的技术架构的时候，一个无法绕开的还是基于Hadoop的大数据平台和技术架构体系，如下为当前Hadoop\n2.0的一个标准技术架构图。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n先在网上摘录了一段比较Hadoop2.0和1.0的主要区别和改进点如下：</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\nHadoop2.0和1.0最大的区别点就在于增加了YARN集群资源管理系统这一层，YARN是一个资源管理系统，负责集群资源管理和调度，MapReduce则是运行在YARN上的离线处理框架。改进点主要还是对1.0架构中类似NameNode，JobTracker的单节点扩展能力进行提升。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n1、针对Hadoop1.0单NameNode制约HDFS的扩展性问题，提出HDFS\nFederation，它让多个NameNode分管不同的目录进而实现访问隔离和横向扩展，同时彻底解决了NameNode单点故障问题；</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n2、针对Hadoop1.0中的MapReduce在扩展性和多框架支持等方面的不足，它将JobTracker中的资源管理和作业控制分开，分别由ResourceManager（负责所有应用程序的资源分配）和ApplicationMaster（负责管理一个应用程序）实现，即引入了资源管理框架Yarn。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n3、Yarn作为Hadoop2.0中的资源管理系统，它是一个通用的资源管理模块，可为各类应用程序进行资源管理和调度，不仅限于MapReduce一种框架，也可以为其他框架使用，如Tez、Spark、Storm等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n以上区别参考：https://www.jianshu.com/p/23e2634ce1f9</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n为何重新提到Hadoop，可以看到在构建整个数据中台的时候，我们会用到<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">数据采集框架，数据存储框架（文件存储，结构化数据库，非结构化数据库，内存数据库），数据计算框架（批计算，流计算，实时即席查询计算），数据分析框架</SPAN>这四大类的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而实际上上面这四块的内容在Hadoop完整框架体系里面都包括，在搭建完整的大数据平台后，你可以基于实际的业务场景需求来选择使用不同的技术工具和组件来解决问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此如果单纯从技术层面来看，你会发现在构建数据中台的时候确实是需要一个技术平台，能够实现数据从采集集成，到存储，到加工处理，到能力开放的全生命周期管理能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于以上的思考，我们看到实际的构想完全可以是基于Hadoop的底层大数据框架，来构建一个覆盖数据全生命周期管控加治理的平台。这个平台除了Hadoop外还需要做一些外围其它开源工具的集成，基于数据使用场景和需求的定制开放，实现数据能力开放和数据运营。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即底层技术平台下沉，在上层构建一个面向数据全生命周期的管控治理平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据汇聚和存储</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先谈下数据汇聚和集成，实际上包括了多方面的内容，具体为传统的结构化数据库间的数据集成和交换，这个类似传统的ETL工具，但是在大数据场景下增加了结构化和非结构化数据之间的集成和对接。比如结构化数据之间汇聚到HDFS分布式存储等这种场景。当然在这个过程中结构化数据库间的传统ETL集成仍然存在，这个类似DataX这种工具是完全包含的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这个过程中我们看到有要给分支，就是数据库数据的实时采集和处理，类似数据库同步复制技术，在Mysql里面有类似BinLog日志的同步复制，对于Oracle等结构化数据库也有类似商用产品来完成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n除了这个外比较常见的就是日志的采集和处理，类似Flume工具来完成日志的采集和处理。对于基于日志的分析查询系统，当前主流又有ELK的开源整合解决方案。对于Elasticsearch除了本身强调的全文检索和查询能力外，本身也提供了对日志的分布式存储能力，对应的还有类似Solr的解决方案等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n还有一个重要的分支就是互联网数据采集和网页爬虫，比如常说的Nutch，现在各种开源的网页爬虫软件和工具集很多，特别是基于Python的网页爬虫更是发展相当迅速。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n离线数据交换和实时数据交换</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n离线数据交换是针对数据时效要求低，吞吐量大的场景，解决大规模数据的批量迁移问题。而对于这种数据集成实际上我们看当前的各种开源实现，主流的可扩展思路都是构建三类灵活配置的插件，即数据读取插件，数据写入插件，数据交换核心模块。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于实时数据交换主要是负责把数据库，日志，爬虫等数据实时接入到Kafka, Hive,\nOracle等存储中，便于后续实时计算或提供给业务查询分析使用。实时同步两个核心业务，数据订阅服务，数据消费服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据汇聚是数据中台建设的第一个环节，其主要目的是打破企业数据的物理孤岛，形成一个统一的数据中心，为后续数据资产的价值挖掘提供原始材料。即数据汇聚目标就是建立一个大的数据共享中心，同时为了方便后续弹性扩展，这个数据中心应该是一个分布式的ODS数据共享中心。数据集成和汇聚是后续数据开发，数据分析的前提。通过前面内容我们也可以看到数据集成需要考虑的两个关键内容，一个是数据本身的类型，一个是数据集成的实时还是非实时要求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据开发</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据开发涉及到的产品能力主要包括三个方面的内容，分别是离线开发，实时开发和算法开发。</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n离线开发：</SPAN>离线数据加工发布和运维，数据分析，在线查询，即席查询</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n实时开发：</SPAN>数据的实时接入和实时处理，简化数据流处理的加工过程</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n算法开发：</SPAN>类似回归，聚类，人工智能，机器学习等算法的开发和应用，挖掘数据价值</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据计算的四种类型</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n将计算能力根据应用场景抽象为四种类型，包括了批计算，流计算，在线查询和即席查询。对于批计算主要是MapReduce框架进行，对于流计算主要是类似通过Storm\n,Spark\nStreaming框架来实现等。而对于在线查询往往基于内存数据库，或者基于Elasticsearch，Solr来实现。对于即席查询采用类似MPP数据库，Impala等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于在线查询和即席查询对数据实时性要求最高，而对于批计算往往更好应对大数据量需求，数据在中间过程也可以落地而不是必须全部在内存里面完成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n实时开发</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n要看到在构建数据中台的时候，实时开发是一个重点。随着数据应用场景的不断丰富，企业对于数据价值反馈到业务中的时效性要求也越来越高，很早就有人提出一个概念即数据的价值在于数据的在线化。对于实时开发和计算具备如下三个关键特点。</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n实时且无边界的数据流.(数据流按时间发生顺序被实时的消费和订阅）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n持续且高效的运算</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n流式且实时的数据集成</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于Storm，Spark Streaming，Apache\nFlink构建的一站式，高性能实时大数据处理能力，广泛适用于实时ETL，实时报表，监控预警，在线系统等多种场景。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n数据中台的数据体系建设</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/f02c82b35b8b48818cd5c1aaf0c2ff2d?from=pc\" IMG_WIDTH=\"754\" IMG_HEIGHT=\"453\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在谈数据中台的时候，我们一般会谈两个方面的关键内容，一个是数据中台的技术架构，你可以看到前面谈到的数据汇聚和数据开发更多是偏围绕Hadoop体系的中台技术架构；第二个关键内容就是数据本身的内容架构，数据在存储的时候整个数据内容，数据模型，数据标准究竟应该是如何的？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此数据中台数据体系是在全域原始数据的基础上，进行标准定义和分层建模，数据体系建设最终呈现的结果是一套完整，规范，准确的数据体系，可以方便支持数据应用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n中台的数据体系建设应该具备如下特征</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n覆盖全域数据（覆盖所有的业务过程域）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n结构层次清晰（数据应该是分层的）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据准确一致(命名，粒度，计算口径，模型等）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n性能提升和降低成本</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在数据中台的数据体系架构里面，书里面将整个数据体系从下到上分为了四层。</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n贴源数据ODS层</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n统一数据仓库DW层</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n标签数据TDM层</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n应用数据ADS层</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我们对这个分层再做一下理解和解释。首先你可以看到从下到上是即是从系统-&#62;业务域-》跨越的一个层层聚合和整合的一个过程；其次就是在整个数据聚合和整合的过程中，数据来源的业务域的边界本身会越来越模糊，同时数据由于不断的汇聚和聚合，数据本身粒度会越来越粗。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个粗粒度如何理解？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n比如我们对客户做分析，最终到顶层你可能只得到一个长期优质VIP客户的结论。但是支撑这个结论，我们在底层采集了大量的数据，经过维度分析，标签计算分析做了大量的工作才完成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在我们传统的BI和数据仓库设计里面，我们经常说的只有三个内容，即ODS库，DW库，维度建模的数据模型，而<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">在整个数据中台的数据体系里面增加了标签数据层和应用数据层</SPAN>，也可以更好的看到这两个层次的增加更多的都是为了业务应用提供服务的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于标签数据层，我们再来看下解释，即是面向对象建模，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">对跨业务板块，跨数据域的特定对象数据进行整合</SPAN>，通过ID-Mapping把各个业务板块，各个业务过程中的同一对象数据的数据打通，形成对象的全域标签体系。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n举个例子来说你要建立客户的标签体系，客户的标签会来源于客户的静态属性信息，同时更多的是来源于动态的行为数据信息，而这些行为包括了注册登录，商品挑选，实际采购发生，支付，商品评价等诸多的业务域和业务模块，要建立完整的客户标签，那么这些业务域数据必须打通并建立关联映射。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n对贴源数据层理解</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于书里面谈到的贴源数据层你直接理解为传统的ODS库本身是没有问题的。贴源数据层重点就是将企业已有各个业务系统中的数据抽取和集成到一起，形成全量的业务数据。面对业务中台架构模式下，就是需要对所有业务中台对应的业务数据库进行数据采集和集成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意当前主流的方式已经从ETL变化为ELT，即只负责最简单的数据抽取和装载，没有复杂的数据映射和转换动作，当我们看类似DataX这种工具的时候你也可以看到这个特点，变得更加轻量同时性能也更高。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果要说贴源数据层和传统ODS库的区别，那么贴源数据层仅仅做数据的汇聚和整合，并不具备传统意义上的ODS的如下功能，即数据交换，实时性，报表等功能。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n对标签数据层的理解</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对应数据仓库层这篇文章不详细展开，只谈下标签数据层。首先我们能够看到就是标签数据层是围绕一个关键对象进行的分析和建模，而且这个动作是完全跨越进行的，数据粒度更粗更抽象，但是能够发挥的数据价值往往却越大。因为标签层真正整合了跨域的数据，包括静态数据和动态数据，同时在数据之间建立了关联，同时通过各种算法对数据进一步加工和聚合。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n标签数据层是面向对象建模，把一个对象各种标识打通归一，把跨业务板块数据域的对象数据在同一个粒度基础上，组织起来打到对象上。标签数据层建设，一方面让数据变得可阅读与理解方便业务使用，另一方面通过标签类目体系将标签组织排布，以一种适用性更好的组织方式来匹配未来变化的业务场景需求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于标签对象，实际上我们看到主要分为三类，即人，物，关系。对于关系本身有可能是人和人，人和物，物和物都有可能。当然也可以从静态和动态层面来理解，有静态属性类标签，有动态行为类标签，比如采购，支付等就是动态行为类标签。而实际上你可以看到很多关系信息的产生往往也来源于动态行为标签。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于标签本身的分类，又可以分为基础属性类标签，统计类标签和用户画像。还有一种说法感觉更好，就是基础属性类标签，统计类标签，算法类标签。我们拿一个客户相关的标签来举例。</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n基础属性类：</SPAN>年龄段，区域，性别，婚姻状况，年收入段</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n统计类标签：</SPAN>活跃度，客单价，最常购买商品类别，复购率</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n算法类标签：</SPAN>消费偏好，消费价值，用户画像类特征(类似潮流达人，宅家一族等）</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从这个也可以看到，统计类标签往往都来源于动态的关系类数据的分析，但是这些关系类数据分析最终又会关联到具体商品的类目属性上面。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n标签和用户画像</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/6625a5c80d024cd0b7627c7ace1ab5b0?from=pc\" IMG_WIDTH=\"718\" IMG_HEIGHT=\"486\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当从标签谈到用户画像的时候，原来有一个概念我一直没太理解清楚，今天重新进行了下理解。首先我们看下用户画像，实际上你可以看到两种场景的用户画像。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n场景一：对用户张三进行用户画像 （结果可能是潮流一族，爱尝鲜，数码玩家等）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n场景二：对晚上购买啤酒类商品的用户群画像 （结果可能是单身男，IT，加班族等）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n人物群体 - 人 - 关系 - 物 - 物群体</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在前面讲的三个关键对象基础上，我们做下扩展就变成了五大对象，即增加了人物群体和物品群体两个群体对象。有了群体对象我们就有了基于标签设计进行数据聚合的基础。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我前面为啥聚两个场景，实际上你可以看到刚好是聚合的两个端，当我们对单个特定用户画像的时候你可以看到往往对对商品群体进行聚合分析和处理，是在物品这端。当对物品的购买意向进行用户群画像的时候可以看到是在用户群体这段进行聚合，最终得到一个抽象的结果。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那么在场景一我们能否给出用户维度的画像，比如得出张三是单身的画像。而这个就是我们说的大数据里面的关联类分析，比如网上购买啤酒行为和用户的单身属性之间往往具有强关联，当具备这种强关联的时候，我们可以给张三打一个单身的标签。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n数据资产管理和数据服务体系建设</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; height: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/17599624bc63499c8a20ca796356f79b?from=pc\" IMG_WIDTH=\"728\" IMG_HEIGHT=\"400\" ALT=\"读《数据中台-让数据用起来》笔记整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n企业经营沉淀的数据是企业的核心资产，资产一定有价值体现，即数据经过应用会产生价值，这个价值一方面是直接支撑业务运作，一方面是支撑管理决策。因此在看数据资产的关键特征的时候也看到，其一是数据是企业用拥有和控制，其二是数据能够带来未来经济利益。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据资产管理功能面临的挑战</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n缺乏统一的数据视图</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据基础薄弱</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据应用不足</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据价值难以估算</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n缺乏安全的数据环境</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据管理浮于表面</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于这些问题而提出了数据资产的管理目标主要包括了四个方面，即可见，可懂，可用和可运营。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据资产在整个数据中台里面承上启下，即数据先通过数据汇聚集成，数据开发后形成数据资产，然后再将数据资产以服务的方式开放出去为数据应用服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从这本书的逻辑框架结构出发，当我们在谈数据资产管理的时候，一定会考虑和上一个章节数据指标体系之间的关系，一开始总感觉两者是重复的，但是详细看了内容后基本梳理清楚两者的关系。即数据资产管理你可以更多理解为动态的管理过程，即数据管控和治理过程，但是对于数据资产静态结构呈现是如何的，分层是如何的？这个问题则是在数据指标体系里面解释的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即数据资产管理更多是数据动态管控治理维度，而数据指标体系是静态结构维度。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据治理的理论体系</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n国际数据管理协会DAMA从数据治理生命周期角度对数据资产的管理行使权和控制的活动(规则，监控和执行)进行了重点研究。定义了数据治理，数据架构管理，数据开发，数据操作管理，数据安全，参考数据和主数据管理，数据仓库和商务智能管理，文档和内容管理，元数据管理，数据质量管理这十个领域。以及目标和原则，活动，主要交付物，角色和职责，技术，实践和方法，组织和文化等7个环境因素。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nCMMI提到的DMM模型是由五大核心过程域和一套支撑流程组成。五大核心过程域包括了数据管理战略，数据治理，平台和架构，数据运营，数据质量。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在我国也给出了DCMM的数据管理成熟度模型。DCMM充分结合了大数据特点和国内数据治理现状，形成了数据战略，数据治理，数据架构，数据标准，数据质量，数据安全，数据应用，数据生命周期8个核心领域和28个过程域，重点关注数据的管理过程和方法。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据资产管理和数据治理的关系</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据治理是对数据资产管理行使权力和控制活动的集合。传统的数据治理内容通常包括了数据标准管理，元数据管理，数据质量管理，数据安全管理，数据生命周期管理。而数据资产管理在传统的数据治理的基础上增加了数据价值管理，数据共享管理等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到，数据资产管理实际核心就是数据全生命周期管理，你需要管理数据如何形成资产的过程，同时又需要管理数据如何形成服务共享支撑应用的过程。同时在这个过程中还存在大量的横切，即安全，质量，标准等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据资产管理你可以看到实际并没有太去强调数据集成后的，数据深层次开发和分析建模，更多的是在强调形成统一数据视图服务能力并为应用提供服务。而在数据资产管理我们看到的数据标准体系，元数据管理，数据质量管理等内容你会发现和我们常说的MDM主数据管理是完全相同的。而主数据管理核心目标仍然是形成共享的数据视图，并共享开放给业务应用使用，是为业务协同服务而不是为管理决策服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这不得不又重新让我们思考数据资产管理和MDM主数据管理是什么关系？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这里我们假设一个例子来理解下。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n还是以电商平台来举例，存在有用户中心，订单中心，配速中心，支付中心等多个微服务。那么这个时候对于用户信息的完整视图可能存在两种情况。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">1.\n全部在用户中心完成维护并共享</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.\n基本信息在用户中心，地址信息在配送中心，银行账号信息在支付中心</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于情况一我们看到用户中心本身就需要自己完成主数据管理需要的一些关键职能，包括元数据管理，数据质量管理，数据服务能力开放等。但是要主要用户中心仍然是业务中台的一部分内容。而对于情况二可以看到，要提供完整数据视图必须进行数据汇聚，这个就到了数据中台，至少要在ODS层完成这个事情，这时候也不需要太多复杂的数仓建模，直接开放ODS库能力为服务即可。但是我们看到你仍然需要进行数据安全，数据质量管理，而这些管理就需要在数据中台具备这样的能力。同时数据中台也具备了MDM应该具备的部分能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于以上思考可以看到</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n当大部分基础数据的统一视图能力本身就能够在业务中台单个微服务提供的时候，主数据管理职能基本都可以在业务中台就完成，反之则需要在数据中台完成。</SPAN>建议是在数据中台的数据资产体系的贴源ODS层增加一个统一数据视图，即这部分往往是对多个贴源ODS表的进一步整合，形成完整的统一数据视图和数据服务能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意，在数据标准里面提到了参考数据，在我们原来谈的时候经常会将参考数据作为主数据的一部分，而现在将参考数据从主数据里面拿出。参考数据是用于将其他数据进行分类或目录整编的数据，可以简单的理解为数据字典。而对于主数据管理也再列下我们经常谈到的核心管理内容。</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n主数据相关标准和规范设计</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n主数据建模</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n主数据梳理和集成</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n主数据质量管理</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n建立灵活的主数据共享服务</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n建立主数据维护流程（创建，变更，废弃等）</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实际上大的主数据管理概念是包括了元数据管理，数据质量管理的，书里面单独分开描述也可以。而对于书里面的8.7.9提到的生命周期管理内容，个人感觉是很狭隘的一个理解，即只是将数据分为不可恢复，可恢复来谈了数据存储的生命周期。实际上数据生命周期管理是一个对数据完整的从产生，集成，变更，废弃，删除完整过程的管理，里面既包括了自动化流程，也包括了人工流程。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据服务体系的建设</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n要注意一点，对于数据中台和数据仓库的区别，其中有一个关键点，就是数据中台会将数据能力以数据服务的方式开放出去，直接满足业务应用的需求。而不仅仅是用于上层的数据报表和数据分析决策。数据服务体系本身就是将数据变为一种服务能力，通过数据服务让数据参与到业务之中，激活整个数据中台，这也是数据中台的价值所在。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据服务是对数据进行计算逻辑的封装（过滤查询，多维分析和算法推理等计算逻辑），生成API服务，上层数据应用可对接数据服务API，让数据快速应用到业务场景之中。数据服务是数据中台能力的出口，是支持数据应用的重要支撑。数据服务本身可以分为三类</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n基础数据服务</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n标签画像服务</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n算法模型服务</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到对于标签画像和算法模型服务，都需要经过内部大量的算法计算后给出，实际已经不是获取原始的基础数据，而是获取通过原始基础数据加工和计算的结果，是更加粗粒度的数据。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我们再看下总体架构图里面的数据服务体系这层的内容，实际上类似数据服务总线，数据服务网关，数据服务的能力开放平台。即核心还是实现对数据服务的全生命周期管理，包括输入的注册接入，数据的订购消费，数据安全，数据流控等各方面的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n数据服务的核心价值主要包括四点</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n确保数据在业务层的全域流通</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n降低数据接口的重复建设</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n保障数据获取的及时性和稳定高效</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n使能数据能力扩展</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其中对于确保数据在业务层全域流通是一个核心价值所在。数据服务可以对数据中台的全量数据进行封装透出，让中台的数据支撑数据业务，加速数据业务化的流程；数据业务产生的反馈数据可以回流到数据中台中，不断优化现有的数据服务，让数据在业务中持续流动。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据服务本身的实时性和不落地性</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在谈ESB服务总线或API网关的时候，实际上我们始终面临一个问题就是对于大量的类似对数据库表的查询类服务是否要接入到网关来统一管理，其典型特点就是不符合服务的粗粒度特征，同时数据量大，并发量大，每次打的数据获取量本身也对总线造成巨大的压力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实际上我们重新来回顾这个问题可以看到，数据服务本身的开放本身应该是一种实时查询类服务，而不是为了给你查询到数据落地到本地的服务，实时用实时查，那么数据查询类服务完全可以按照应用逻辑层API接口的设计思路进行，即数据服务本身也可以做成分页服务模式解决大数据量的问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n只要数据服务不用于数据集成和同步，那么网关就没有大的性能压力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果将数据服务获取的数据又落地到业务中台的各个微服务模块，那么可以看到这就是一种边界和职责不清的表现，即业务中台一定不关注数据汇聚的问题，对于数据汇聚，包括汇聚后能力的提供只能在数据中台完成。即使你可能会发现通过调用远程的数据服务API接口来是实现功能的时候造成的开发复杂度增加和分布式事务管理难度，也得通过其他方式去解决。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即满足数据一致性和时效性-》带了分布式事务和强耦合的问题-》通过业务应用层去解决问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n智能应用是数据应用的核心组成部分，是从数据洞察到业务创新的重要支撑。智能应用结合数据建模和人工智能等多种技术，从数据中提取，挖掘，获取有揭示性和可操作性的信息。对于我们常见的人脸识别，图像比对，智能驾驶，语义分析等都可以纳入到智能应用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当然我们也可以看到，智能应用的API服务接口看起来像是一个业务能力接口的，但是我们要理解实际是数据服务API能力接口，其原因就是在需要一个强大的数据中台或大数据平台，再加上算法模型才能够提供得出我们需要的这些API能力。</P>\n<br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Thu, 03 Sep 2020 23:44:45 +0000","feedId":7662,"bgimg":"http://s13.sinaimg.cn/mw690/001l8XD7zy7Ga11IHmc1c&690","linkMd5":"2cefd40cff375855dea828eefa1194b0","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn18@2020_2/2020/09/06/04-25-02-989_1f382897d1f41ec2.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s13.sinaimg.cn/mw690/001l8XD7zy7Ga11IHmc1c&690":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn18@2020_2/2020/09/06/04-25-02-989_1f382897d1f41ec2.webp","https://p3-tt.byteimg.com/origin/pgc-image/2026b1fb9e994342a9bab7ed68cd7702?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn33@2020_1/2020/09/06/04-25-05-797_af6280131296234c.webp","https://p1-tt.byteimg.com/origin/pgc-image/5347ba3e58524b2ca3ad694ecb518af1?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn60@2020_4/2020/09/06/04-25-04-212_01f9baf8fa011f4b.webp","https://p6-tt.byteimg.com/origin/pgc-image/d5d14875108e4da4ae3dfd0f2080400a?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn51@2020_4/2020/09/06/04-25-07-018_7550edda72c34652.webp","https://p6-tt.byteimg.com/origin/pgc-image/1670d8b39d7949209cf1ff101b6e1bad?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn84@2020_2/2020/09/06/04-26-06-606_fe12f16024b54ce7.webp","https://p3-tt.byteimg.com/origin/pgc-image/e7a2f493c0ee42219c28f240f1111ce5?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn47@2020_6/2020/09/06/04-25-04-314_a4f0df0549cf9baa.webp","https://p3-tt.byteimg.com/origin/pgc-image/f02c82b35b8b48818cd5c1aaf0c2ff2d?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn43@2020_1/2020/09/06/04-25-04-807_52fc504cc1721b1c.webp","https://p6-tt.byteimg.com/origin/pgc-image/6625a5c80d024cd0b7627c7ace1ab5b0?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn30@2020_6/2020/09/06/04-25-10-557_23bbe867a5c7ace8.webp","https://p3-tt.byteimg.com/origin/pgc-image/17599624bc63499c8a20ca796356f79b?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn21@2020_4/2020/09/06/04-25-06-541_952279c3da4c82d0.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn96@2020_4/2020/09/06/04-25-07-613_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1599366299498},{"createdTime":"2020-09-06 12:24:59","updatedTime":"2020-09-06 12:24:59","title":"业务系统组件化开发概述和技术架构设计(200902)","link":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7G7vwB6bi8c\" TARGET=\"_blank\"><img SRC=\"http://s13.sinaimg.cn/mw690/001l8XD7zy7G7vwB6bi8c&#38;690\" NAME=\"image_operate_35291599040111953\" /></A>\n<div><br /></DIV>\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n今天介绍下组件化开发方面的内容，在前面我讲解微服务的时候就已经谈到，实际上微服务本身就是传统的业务系统组件化开发的一个升级。懂得基础的组件化开发和技术架构设计是也是过渡到当前主流的微服务架构思想的基础。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); margin-top: 28px !important;\">\n组件化开发概述</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n在这里先介绍和说明下基于组件化开发带来的优势。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n首先，原有到系统级的粗粒度控制细化到了组件级别的细粒度控制，一个复杂系统的构建就是组件最终集成后的一个结果。每个组件都自己独立的版本，组件可以独立编译、独立打包和部署；</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n其次，产品组件化后可以真正实现完整意义上的按组件进行产品配置和销售，用户可以选择购买哪些组件，组件之间可以灵活的进行组装。另外，包括诸如配置管理、开发、测试、打包、发布完全控制到组件层面，会带来其它很多好处，如果一个组件进行小版本升级，提供给外部的接口没有任何变动，其它组件完全可以不用做任何测试。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n组件化开发思路在SOA之前已经有成熟的组件化开发方法，只是在SOA出现后，SOA咨询、需求分析、设计实现方法论进一步融入到组件化开发中。各种底层基础技术框架的发展和完善，为组件化开发提供了根据完整的支持，推动组件化开发的发展，特别是在B/S架构下的组件化开发。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n回到软件生命周期，我们再来阐述下组件化开发的核心思路和逻辑。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务建模和业务组件阶段</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/db670ce7ff054fc08058a1e34695b8a5?from=pc\" IMG_WIDTH=\"775\" IMG_HEIGHT=\"477\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n流程驱动IT以及SOA思想的进一步融合，再次改变原有的组件开发重点关注技术组件层面的问题。业务建模阶段重点包括了业务架构和数据架构，其导入点仍然是端到端流程分析为主线导入。业务架构分析重点就是形成业务组件，也可以叫业务模块。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n在这里重点还是业务组件的形成，要知道业务组件来源于流程分析和流程分解。业务组件本身就是高度内聚的多个业务功能的一个集合，业务组件之间本身就是松耦合，业务组件通过交互和集成可以完成一个更大的端到端流程。业务组件的识别仍然回归传统的流程分析加面向结构下面的CRUD矩阵分析等方法来分析高内聚性。矩阵分析包括了业务功能和业务数据之间的CRUD关系，也包括了业务功能和业务功能之间本身的关联和依赖性分析。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n对于粗粒度的数据建模我们把它划归到业务建模阶段，该阶段的数据建模偏概念模型，后续在设计阶段再转化到物理模型和数据实体组件。同时该阶段的数据建模需要梳理出业务和流程中核心的基础主数据和核心业务单据，分析业务单据关联映射关系，协助前面谈到的CRUD矩阵分析。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n在这个阶段最终需要输出的涉及到组件层面的产出物包括软件系统的业务组件，每个业务组件包含的业务功能或叫业务用例。整个业务系统中的业务实体，业务实体关系图等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n软件需求阶段</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/55957de9094446b1bc9ede8e1a665b6a?from=pc\" IMG_WIDTH=\"878\" IMG_HEIGHT=\"549\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n在这个阶段不做详细的说明，但是我们仍然需要理顺整个关系，即首先形成业务组件，业务组件是大的业务模块。业务组件下面有业务用例，这里的业务用例通过进一步的需求分析和开发，将业务用例转换为系统用例，然后对每一个系统用例进行详细的描述。业务流程-》业务组件-》系统用例是一个从上向下，逐层展开的一个分析过程。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n在传统的用例建模中，我们没太关注用例之间的交互，而将其延后到设计和实现阶段去完成。现在来看该工作需要提前，即从全系统来看，首先完成对业务组件之间交互的描述，对交互点和交互场景进行详细说明。在细化进入到一个业务组件内部后，需要对系统用例之间的相互调用进行描述。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n对于数据层面则在软件需求阶段进一步细化，从概念模型阶段过渡到逻辑模型阶段，进一步细化业务功能为系统操作，分析系统操作和数据对象之间的关系。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n系统建模和技术组件阶段</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/e617fe22c7eb48ac8472b1fc652b7655?from=pc\" IMG_WIDTH=\"863\" IMG_HEIGHT=\"460\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n这个阶段即传统的架构设计阶段，我们仍然是组件化开发的一个重点，这里的系统建模和架构设计重点都变化为功能性架构。但是前面业务建模阶段已经有前期的积累。如果是业务建模阶段是系统分析的话，那么系统建模阶段是系统设计。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n系统建模阶段第一个重点是要实现从业务组件到技术组件的细化。在前述对SOA的分析中我们提到业务组件、服务组件和技术组件。在这里我们只谈业务组件和技术组件，并弱化服务组件的概念。首先，进入了架构分层后，一个业务组件可能需要拆分为多个技术组件，包括数据层组件、逻辑层组件、UI层组件、数据实体组件等。其次，在该阶段我们会引入很多的纯技术层面的组件，这些技术层面组件和业务完全无关而和平台非功能性架构有关，如安全、异常、日志等相关组件等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务组件本身符合高内聚性，转换到技术组件后仍然需要符合高内聚性，技术组件之间其一不允许出现相互交叉调用；其二整个调用关系应该是从上层往下层调用。纵向看是UI组件-&#62;逻辑层组件-&#62;数据层组件调用关系；而横向看则是同层之间的各个技术组件之间存在相互调用关系。按照组件最大化复用原则，优先考虑UI组件复用，其次考虑逻辑层复用，最后才考虑数据层复用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n根据前面分析可以很明显的看到在系统建模阶段关于组件分析和设计的几个重点内容：其一是业务组件转换为技术组件，并按层分解；其二是根据业务交互，用例交互分析组件之间的调用关系。这些调用关系就是组件间的接口，通过业务和流程分析的方法来找到接口，转到相关组件的接口设计上，组件之间的调用只能通过接口，组件内部完全黑盒；其三是数据建模和设计，将前面数据建模分析内容转换为数据实体组件，数据实体组件只含数据实体，实现控制类和实体类的分离。这样数据实体类容易变化为下层可以被多个逻辑层技术组件引用的组件。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n这个阶段在传统的架构设计文档上，可以看到需要输出的内容包括了业务组件-&#62;技术组件的对应清单，组件调用关系和依赖关系图，组件接口设计文档和接口清单，可复用组件抽取和分析，组件包视图和部署视图，整个应用系统的组件化后的产品结构视图和配置项清单等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n实现阶段</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n实现阶段我们关注的问题是一个技术平台或框架支持组件化开发、测试和部署。传统的B/S架构开发我们比较难以解决的问题是UI层内容的独立打包和部署，而当前在新的微服务架构和前后端分离开发框架下，已经可以完全做到前端和后端单独打包和部署。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n可以单独对组件进行自动化的单元测试，当某个组件有变化的时候，可以单独对变化的组件进行版本升级，单独对变化组件进行部署。整个产品的版本由应用系统管理到里面的每个组件，这些都将是发生变化的点。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); margin-top: 28px !important;\">\n业务架构设计</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务架构设计是定义和识别业务组件的基础。对于业务架构的设计需要遵循企业架构方法论中业务流程分析思路，借鉴IBM的CBM组件化的业务模型建模思路。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务架构是一个纯粹意义上的业务概念，只关心具体的业务域和业务功能。业务架构可以看做由多个高内聚、低耦合的业务组件构成，因此在业务架构完成后基本就确定了业务组件的划分方法和粒度等问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务组件的划分需要和业务架构图对应，可以将业务架构图中的每个业务模块识别和定义为一个业务组件，也可以根据高内聚、低耦合准则将多个业务模块合并为一个业务组件。以采购管理业务域为例，经过前期的流程分析和业务交互矩阵分析，得出如下的业务架构图：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n进一步基于业务高内聚的思想，可以将采购管理业务划分为招投标管理、采购管理、基础数据管理、采购绩效分析等多个业务组件并指导后续的组件设计和开发。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n比如我们基于价值链已经看到供应链跨越流程，那么我们可以对供应链流程进行梳理。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/9f7d7126946c45c7b1f5422e4a616971?from=pc\" IMG_WIDTH=\"841\" IMG_HEIGHT=\"586\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n梳理完后你会发现，输出的职能带流程图中的大阶段刚好就是你业务架构里面的业务域或业务单元。或者流程图中的业务活动刚好就是你业务架构分解到最底层的业务功能模块。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n即当我们流程分析到最底层后，我们就可以抽象输出一个最底层的业务架构图。比如对应供应链和采购管理，我们可以输出到最底层的业务架构图或业务组件图。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/ecd81c4c8f634ed38f763d3baeb163bc?from=pc\" IMG_WIDTH=\"978\" IMG_HEIGHT=\"519\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); margin-top: 28px !important;\">\n逻辑架构设计</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/b72d0fbe1b9f42e4ac7ddbcea50aa3ac?from=pc\" IMG_WIDTH=\"773\" IMG_HEIGHT=\"472\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n对于应用层的逻辑架构仍然参考平台+服务+应用分层的思路，对于新平台架构下应用必须结合平台层和服务能力才能组装成为一个传统的完整应用。对于应用层而言，其中仍然分为数据层、业务逻辑层和展现层的三层架构模式：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n数据层</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n数据层主要包括了对于主数据等共享数据的访问和读取，也包括了对业务组件模块自己私有数据的CRUD操作。数据层可以直接调用DaaS服务层能力操作底层数据库，也可以直接调用封装后的领域数据服务能力查询和访问数据。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务逻辑层</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务逻辑层和传统业务逻辑层最大的区别是体现了SOA服务化的思想。即对于业务流程和功能的业务实现是通过平台层提供的技术服务和业务服务能力进行组合和组装实现的。这既可以通过传统的代码开发和服务调用来实现，也可以通过类似BPEL设计和建模工具等可视化的进行灵活配置和实现。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n前端展现层</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n展现层主要是各种前端和界面实现技术，包括了JSP，HTML和现在主流的VUE,\nReact框架等。展现层通过调用逻辑层的服务能力进行数据的存取和业务规则的实现，同时也包括了界面集成技术实现多个业务组件的界面集成。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); margin-top: 28px !important;\">\n技术架构设计</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/379398d6b1ec48119aa4695cdea28b3a?from=pc\" IMG_WIDTH=\"706\" IMG_HEIGHT=\"518\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n对于应用技术架构设计，主要还是参考传统的分层架构模式，结合SOA和组件化思想进行调整，其中重点是业务逻辑层和Web层两方面的内容的细化：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务逻辑层</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务逻辑层本质是提供业务服务能力的服务组件层，其中包括了数据访问层，内部的技术组件，内部的服务接入软总线，外部的服务代理实现服务接入和服务发布。业务逻辑层最终的业务能力将以内部软总线的方式提供给Web层使用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nWeb容器层和界面展现</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n该层的重点是实现标准的MVC模式。对于来自前端界面应用的请求信息先经过控制器处理后转给模型处理再进行视图层面输出，以实现界面显示和数据处理的分离。如通过Java的Struts框架来实现标准的MVC模式等。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); margin-top: 28px !important;\">\n集成架构设计</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/22a6e32ba7734ff8a00bb312c96272e5?from=pc\" IMG_WIDTH=\"772\" IMG_HEIGHT=\"422\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务组件以 Web 服务的方式提供接口，通过企业服务总线连接。业务组件内部为了实现高可复用性和高效性，采用基于 OSGi\n内部软总线标准进行构建模块，实现内部模块之间的松耦合。即在业务组件内部基于 OSGi\n标准进行模块化设计，将业务组件进一步分解为松耦合的模块（Bundle），使得业务组件本身更加灵活。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n基于 OSGi\n标准，业务组件内部的模块通过一个具有动态加载类功能的微内核连接，统一管理各个模块。为了便于管理，将不同模块之间的类接口采用服务注册的方式进行管理，具有类动态加载功能的微内核和类接口管理组成类总线（JCB）的基本功能；为了更好的实现重用，有些模块是共用的，比如数据访问模块、日志管理模块等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务软总线</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n实现一个业务组件内部的服务注册、调用和服务管理，一般采用比较轻量的如OSGi标准来实现。软总线机制可以保证业务组件内部的进一步松耦合设计。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 1em; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify;\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n注：在当前微服务架构下，我们看到实际上组件之间的接口集成，已经不再需要类似OSGI这种内部软总线，而是直接采用去中心化的服务注册中心来完成集成工作。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务组件和技术组件</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n服务组件是业务组件中唯一和外部进行交互的接口组件，包括了服务消费和服务调用均在服务组件完成。技术组件为服务组件的具体实现，内部功能的业务规则实现等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务代理</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n服务代理包括了服务消费代理和服务发布代理。业务组件本身要消费外部的服务，包括技术服务、流程服务和其它业务组件提供的业务服务，这些通过服务消费代理来完成。同时业务组件本身也需要向外部其它业务组件提供可复用的业务服务能力，因此需要将内部的服务接口进一步通过服务发布代理，发布为外部可访问的业务服务并注册到外部ESB服务总线上。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); margin-top: 28px !important;\">\n组件间整体框架集成</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/57700ec5bbef4b56ac5fb39b2822e4c5?from=pc\" IMG_WIDTH=\"776\" IMG_HEIGHT=\"487\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n业务组件本身就是一个能够提供独立业务价值能力的小应用系统。组件的集成包括了组件的纵向集成和横向集成。组件的纵向集成即和PaaS平台技术服务能力的集成，通过集成后形成一个完整的应用。横向集成则是流程驱动的业务组件之间通过业务服务的横向协同和集成，通过横向集成加上和外层应用框架和门户的集成后，多个业务组件将构成传统的完整业务系统。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n应用框架集成</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/5a394bd8ddb24a168d655b1c3275a47e?from=pc\" IMG_WIDTH=\"776\" IMG_HEIGHT=\"462\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_56081599040112919\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n在企业私有云PaaS平台的建设过程中，虽然基于平台+应用和SOA组件化架构思想真正实现了高复用和对业务的灵活应变能力，但是一个传统完整的业务系统已经被分解到了平台，服务和应用多个层面的技术组件，业务组件和服务中。因此这些分散的组件如何最终集成和还原为一个传统意义上完整的业务系统将成为应用集成必须考虑的重点内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n结合实践经验，最好方式是通过门户+外层应用框架来实现总体的集成，具体参考：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n以上图为例来看一个完整的业务系统。除了白色部分外，其余的组成部分都应该是有平台层统一规划建设和提供。应用外层框架和组件动态装载是重新还原一个传统意义上的业务系统的集成。应用外层框架首先是需要和门户进行集成，实现基本的统一认证和单点登录；其次是读取系统管理的基本参数和配置信息，实现外层界面和菜单资源等的装载和初始化；最后是根据应用配置文件灵活的对PaaS平台层的技术组件（系统管理，流程引擎），应用层的业务组件进行动态装载。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n应用外层UI界面框架需要基于可重用，可配置的思想独立开发，该框架是一个包括了菜单描述文件，页面描述文件，工具栏描述文件，页面布局描述文件组成一个基本的页面框架，具体说明如下。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word;\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/dea352ead6184d6fbf3b6a15f73fa1eb?from=pc\" IMG_WIDTH=\"774\" IMG_HEIGHT=\"395\" ALT=\"业务系统组件化开发概述和技术架构设计\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\" NAME=\"image_operate_73421599040169539\" /></DIV>\n<div><br /></DIV>\n<br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Wed, 02 Sep 2020 09:46:57 +0000","feedId":7662,"bgimg":"http://s13.sinaimg.cn/mw690/001l8XD7zy7G7vwB6bi8c&690","linkMd5":"3b7d142d5e96c3a26cb01ce30cb9df2c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn90@2020_1/2020/09/06/04-25-01-516_4b23fe6a2f984860.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s13.sinaimg.cn/mw690/001l8XD7zy7G7vwB6bi8c&690":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn90@2020_1/2020/09/06/04-25-01-516_4b23fe6a2f984860.webp","https://p6-tt.byteimg.com/origin/pgc-image/db670ce7ff054fc08058a1e34695b8a5?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn67@2020_6/2020/09/06/04-26-07-838_2a9f3513dac2976a.webp","https://p6-tt.byteimg.com/origin/pgc-image/55957de9094446b1bc9ede8e1a665b6a?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn43@2020_1/2020/09/06/04-25-06-605_e1dfe6a7d1644a66.webp","https://p1-tt.byteimg.com/origin/pgc-image/e617fe22c7eb48ac8472b1fc652b7655?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn100@2020_2/2020/09/06/04-25-05-131_5372be4b0e4ac9cf.webp","https://p1-tt.byteimg.com/origin/pgc-image/9f7d7126946c45c7b1f5422e4a616971?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn79@2020_1/2020/09/06/04-25-04-245_fbb256b46f798553.webp","https://p3-tt.byteimg.com/origin/pgc-image/ecd81c4c8f634ed38f763d3baeb163bc?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn16@2020_6/2020/09/06/04-25-07-982_d5ef342edcabfe22.webp","https://p6-tt.byteimg.com/origin/pgc-image/b72d0fbe1b9f42e4ac7ddbcea50aa3ac?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn32@2020_5/2020/09/06/04-25-06-387_6c5b5abd547cdd81.webp","https://p6-tt.byteimg.com/origin/pgc-image/379398d6b1ec48119aa4695cdea28b3a?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn35@2020_3/2020/09/06/04-25-07-809_4cc3e3b8f4e7affd.webp","https://p6-tt.byteimg.com/origin/pgc-image/22a6e32ba7734ff8a00bb312c96272e5?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn96@2020_2/2020/09/06/04-25-06-726_0d85a82aee78c330.webp","https://p1-tt.byteimg.com/origin/pgc-image/57700ec5bbef4b56ac5fb39b2822e4c5?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn59@2020_3/2020/09/06/04-25-03-989_9c750d36f56c4b5a.webp","https://p6-tt.byteimg.com/origin/pgc-image/5a394bd8ddb24a168d655b1c3275a47e?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn39@2020_5/2020/09/06/04-26-05-547_05ddd80ba8af9614.webp","https://p3-tt.byteimg.com/origin/pgc-image/dea352ead6184d6fbf3b6a15f73fa1eb?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx/cdn26@2020_2/2020/09/06/04-25-04-738_b22434a36c015e66.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn96@2020_4/2020/09/06/04-25-07-613_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1599366299498},{"createdTime":"2020-09-06 12:24:59","updatedTime":"2020-09-06 12:24:59","title":"ESB企业服务总线功能，需求和核心架构分析(200831)","link":"http://blog.sina.com.cn/s/blog_493a84550102z90f.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7G3Hbujon53\" TARGET=\"_blank\"><img SRC=\"http://s4.sinaimg.cn/mw690/001l8XD7zy7G3Hbujon53&#38;690\" NAME=\"image_operate_92831598834537522\" /></A>\n<div><br /></DIV>\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于ESB企业服务总线方面，我准备近期整理几篇文章进行分享。当前虽然在微服务架构下大家讨论更多的是微服务和API网关，但是对于传统业务系统，包括传统企业在进行IT架构转型过程中，为了兼容遗留IT系统，往往仍然需要采用ESB服务总线进行集成和适配。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nESB企业服务总线核心功能概述</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/02bbe8f70ece46f4a0892c63b01f64bf?from=pc\" IMG_WIDTH=\"611\" IMG_HEIGHT=\"461\" ALT=\"ESB企业服务总线功能，需求和核心架构分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nESB是企业服务总线（Enterprise Service Bus）的缩写，是中间件技术与Web\nService等技术结合的产物，也是SOA系统中的核心基础设施。ESB就是一个服务的中介，形成服务使用者-&#62;ESB服务Proxy-&#62;服务提供者的生物链，中介的作用在不同应用中各有不同：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n解耦中介\n：</SPAN>客户对实际服务提供者的身份、物理位置、传输协议和接口定义都是不知道也不关心的，交互集成代码提取到了业务逻辑之外，由ESB平台进行中央的宣告式定义。ESB平台实现协议转换\n(WebService，Http，JMS...)，消息转换 (转换、充实、过滤)，消息路由\n(同步/异步、发布/订阅、基于内容路由、分支与聚合...)。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务中介 ：</SPAN>ESB平台作为中介提供服务交互中的基础服务。ESB平台实现SLA\n(可靠性保证，负载均衡，流量控制，缓存，事务控制，加密传输)，服务管理监控\n(异常处理，服务调用及消息数据记录，系统及服务的状态监控，ESB配置管理)，统一安全管理 (这个有点理想主义)。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务编排 ：</SPAN>多个服务进行编排形成新的服务。ESB支持一个直观的形式定义新组合服务的流程(工作流、BPEL 或\n代码级编排)。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从上面可以看到ESB的基本功能仍然是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">数据传输，消息协议转化，路由</SPAN>三大核心功能。有这三大核心功能也可以看到在进行异构系统的整合时候往往根据需要ESB提供这些功能。没有ESB时候也可以实现SOA，比如借助SCA和BPEL来实现SOA，当时却很难实现消息协议转化和动态路由。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nESB在发展过程中有从原有的消息中间件转化为ESB产品的，这类消息中间件和数据总线产品在原有的EAI企业应用集成中应用比较多。而SOA根据强调了基于服务的集成，以Web\nService服务为基本的管理单元。一个服务的定位是关于如何把业务逻辑表现成为一组相互独立的，自描述的且能互操作的实体。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/ac7bf64a73cb48eaa11856f3d0bb3f7f?from=pc\" IMG_WIDTH=\"845\" IMG_HEIGHT=\"477\" ALT=\"ESB企业服务总线功能，需求和核心架构分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于SOA关注的是服务全生命周期，通过服务实现业务价值。而ESB关注的是服务中介和服务的集成，是SOA的基础设施。SOA有两个核心组件<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">，一个是ESB，一个是BPEL</SPAN>，而ESB是基础设施，BPEL是业务流程驱动下服务的集成和整合。离开了SOA，ESB将失去它所连接的服务，而仅仅是一个总线，同时也将变得毫无价值。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\nBobby做了一个比喻：路是没有任何价值的，除非你利用它把一个东西从一个地方移到另外一个地方。而离开SOA，ESB就像一个没人使用的道路。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n做SOA的事情不要先上来建立一个大而全的ESB，相反是关注你的业务问题，找到用SOA的方法来解决业务上的需求，在解决这个问题的过程当中，你会看到一系列的业务服务。这些业务服务是会产生业务价值的。它可以灵活地组装，动态地解决你变化的业务需求。这是它的价值，只有这样才能使你的业务敏捷起来，随需应变起来。而在服务的组装过程中，你再去考虑利用ESB来把他们连接起来。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/e36b0377617b4770b5d8abddd8700b83?from=pc\" IMG_WIDTH=\"595\" IMG_HEIGHT=\"449\" ALT=\"ESB企业服务总线功能，需求和核心架构分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">ESB\n需要某种形式的服务路由目录（service routing directory）来路由服务请求。然而，SOA\n可能还有单独的业务服务目录（business service\ndirectory），其最基本的形式可能是设计时服务目录，用于在组织的整个开发活动中实现服务的重用。Web\n服务远景在业务服务目录和服务路由目录的角色中都放置了一个 UDDI 目录，因而使得可以动态发现和调用服务。这样的目录可以视为 ESB\n的一部分；然而，在这样的解决方案变得普遍之前，业务服务目录可能与 ESB 是分离的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n标准的 ESB 功能</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/3d7c63be716941c4aa3a61858f37a1b8?from=pc\" IMG_WIDTH=\"796\" IMG_HEIGHT=\"893\" ALT=\"ESB企业服务总线功能，需求和核心架构分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n上面的许多功能既可以使用专有技术实现，也可以通过利用开放标准实现。然而，使用不同的技术来实现 ESB\n可能会使它们的性能、可伸缩性和可靠性这些特性显著不同，同时 ESB\n功能和所支持的开放标准也会有所不同。由于这些原因，再加上最近制订和正在兴起的一些相关标准，当今实现 ESB\n的许多关键决策都涉及到成熟的专有技术和不成熟的开放标准之间的权衡。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n支持 SOA 的最低功能的 ESB 实现</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果在前面确定的功能中只有一部分和大多数 SOA 场景相关，我们可能会问：实现 ESB\n所需的一组最低功能由什么构成？为此，考虑最被普遍认同的 ESB 定义的原理：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nESB 是一种逻辑体系结构组件，它提供与 SOA 的原则保持一致的集成基础架构。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nSOA 原则需要使用与实现无关的的接口、强调位置透明性和可互操作性的通信协议、相对粗粒度和封装可重用功能的服务定义。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nESB 可以作为分布式的异构基础架构进行实现。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nESB 提供了管理服务基础架构的方法和在分布式异构环境中进行操作的功能。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此最低配置的 ESB 功能至少应该包括如下：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/be111f4a7f2745ce8a5a25a3ccd3dcba?from=pc\" IMG_WIDTH=\"796\" IMG_HEIGHT=\"237\" ALT=\"ESB企业服务总线功能，需求和核心架构分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n请注意这些最低功能并不需要使用特别的技术，比如 EAI 中间件、Web 服务、J2EE 或\nXML。这些技术的使用非常接近也非常符合需求，但是不必强制要求使用它们。相反，最低功能几乎只需简单地使用 SOAP/HTTP 和\nWSDL 就可以实现（当然不是所有的情况都这样）：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nURL 寻址和现有的 HTTP 和 DNS 基础架构提供了一个具有路由服务总线Bus。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nSOAP/HTTP 支持请求-响应（Request-Response）通信规范。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nHTTP 传输协议被广泛地使用。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nSOAP 和 WSDL 是开放、与实现无关的服务通信和连接模型。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n然而，这些 SOAP/HTTP 和 WSDL 的基本应用只是点到点（point-to-point）的集成，并不能实现一些 ESB\n需要的关键功能：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n目前还没有用于控制服务寻址和命名的管理功能。服务名称通过每个适配器单独进行控制的，服务路由控制则分散在由服务客户端调用的地址、HTTP\n基础架构和分配给适配器的服务名称之间。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n虽然这种方法依赖于实现细节，但是它往往并不能使服务实现的替代变得简单；服务请求者代码（也可能是开发工具生成的）通常通过特定地址\n的特定协议直接绑定到具体的服务提供者实现。如果想要用另一个服务实现来替代原来的服务实现，就需要修改应用程序代码并重新部署这些代码。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当然，在许多甚至是大多数情形中往往需要其他的功能，并且这种需要变得越来越常见。特别地，不管是现在还是以后，下面的需求类型可能会导致更复杂高级的技术的使用：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n服务质量和服务级别功能。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n高级 SOA 概念，例如服务编排、目录、转换等等。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n按需操作环境需求，比如管理与自治功能以及基础架构智能功能。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n跨越具有不同所有权的多个网络、多个协议以及多个域的真正意义上的异步操作。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n当前API网关和OpenAPI平台和传统ESB对比</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n简单来说API网关就是将所有的微服务提供的API接口服务能力全部汇聚进来，统一接入进行管理，也正是通过统一拦截，就可以通过网关实现对API接口的安全，日志，限流熔断等共性需求。如果再简单说下，通过网关实现了几个关键能力。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n内部的微服务对外部访问来说位置透明，外部应用只需和网关交互</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n统一拦截接口服务，实现安全，日志，限流熔断等需求</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从这里，我们就可以看到API网关和传统架构里面的ESB总线是类似的，这些关键能力本身也是ESB服务总线的能力，但是ESB服务总线由于要考虑遗留系统的接入，因此增加了：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n大量适配器实现对遗留系统的遗留接口适配，多协议转换能力</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n进行数据的复制映射，路由等能力</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于两者，我原来做过一个简单的对比，大家可以参考。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/86de56265f9344c4a9c4b84ae2acfe1a?from=pc\" IMG_WIDTH=\"726\" IMG_HEIGHT=\"398\" ALT=\"ESB企业服务总线功能，需求和核心架构分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nESB总线的功能需求分析</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/4dd6ae7e300d41c891668b71c0f90c24?from=pc\" IMG_WIDTH=\"704\" IMG_HEIGHT=\"428\" ALT=\"ESB企业服务总线功能，需求和核心架构分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n关于ESB总线的功能需求，在这里仅仅对核心功能需求进行整理如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务目录和元数据管理</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nESB总线平台管控应该提供完整的服务目录库，可以通过多个维度对服务目录进行浏览和查询，同时ESB服务总线需要通过数据存储对服务元数据、配置、策略进行统一管理，对于每次服务调用均需要产生服务实例日志信息。对于服务元数据本身包括了服务的编码，名称，类型，版本等基础信息，同时也包括了服务消息输入和消息输出的详细格式信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务注册和服务接入</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n通过服务接入功能，将服务提供方系统开发的服务接入到服务总线上并发布出来，供其它业务系统调用，服务接入也即服务注册和服务封装功能，需要提供简单易用的服务接入操作功能界面，支持手工接入，也支持批量一键接入。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n动态路由和静态路由</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n系统需要提供服务动态路或静态路由功能，对于静态路由主要是可以配置和定义静态路由表，服务消费基于路由表进行路由。对于动态路由即可以灵活的配置基于服务消费时候的消息输入参数进行动态的服务路由。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n消息传输</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n需提供消息传输的基本功能：服务使用方先调用注册发布在服务共享平台上的服务并以消息形式传入服务调用请求，平台将接收到的调用请求转发给服务提供方，服务提供方完成操作后先将服务响应消息传递给平台，再由平台将服务响应转发给服务使用方，整个过程都是通过消息进行传输。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n异步分发和消息发布订阅</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在实际业务场景中，经常出现“一对多”的情况，ESB平台需要支持异步分发功能，只需在平台中配置异步分发服务，即可实现异步分发功能。同时也支持1对多的消息发布订阅功能。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n协议和消息转换</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于已经上线稳定运行的重要功能，这些功能使用的数据交换协议可能有很多种，需解决不同的协议的对接，服务共享平台必须支持协议转换功能，服务共享平台需支持在大部分标准协议间进行转换，包括JMS、HTTP(S)、TCP、FTP、POP3/SMTP等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n为了统一控制及更好地进行日志管理，服务共享平台需要为每一次交易产生的日志编号，需要在消息流中插入一个唯一编号，此时需要用到消息转换功能。因此服务共享平台需要提供消息转换能力，支持在消息传输过程中对消息进行操纵及转换，包括消息元素新增、替换及删除。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n遗留系统适配器</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n各业务系统开发的服务需要接入并发布到服务共享平台上，采用的技术可能是Webservice、HTTP、HTTPS、FTP等，服务共享平台必须提供各种标准适配器，能够将按业界开放标准开发的服务注册到平台上。所以平台必须提供各种标准适配器，可以将按照标准协议开发的服务适配接入到平台上，其中包括了数据库，FTP，MQ，JMS，大数据，平面文件，商用ERP套件等各种适配器。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务请求过滤及流量控制</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n服务共享平台需要支持按预定义的规则对服务调用请求进行过滤，对于未允许使用服务的调用请求可以过滤，从而保证服务数据安全；平台还需要支持对服务进行流量控制，支持对服务分配流程配额，对于超出流量配额的调用进行限制，从而避免某些大流量调用影响整个平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n开发工具及语言支持</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n服务共享平台必须支持cxf、axis、python\nsoapbox、xfire、.net等服务开发框架、工具及语言，只需根据预先定义的服务契约进行开发，即可顺利接入平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务监控和运行统计</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n服务共享平台必须支持服务监控，可以方便地监控到服务状态，通过详细的输入输出日志，可以快速定位到运行异常服务原因。服务运行统计包括了服务运行次数，运行时长，运行并发量，运行异常错误等多维度的服务运行统计数据信息。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nESB总线核心架构分析</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/39b44d4361cd43bd85767342ac53cd9f?from=pc\" IMG_WIDTH=\"692\" IMG_HEIGHT=\"329\" ALT=\"ESB企业服务总线功能，需求和核心架构分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于对开源ESB产品的研究，以及对Oracle和Tibco的ESB总线产品的实施经验积累，对ESB总线的核心产品架构有了进一步的清晰认识，将ESB的核心架构整理为上图，上图中看到的内容也是作为一款完整的ESB服务总线产品所必须要具备的功能。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先整个架构体系里面分为三个组件或子系统，即<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">偏开发态的设计器，偏运行态的ESB核心引擎和SOA治理管控平台</SPAN>三个方面的内容。以上三者组合和集成形成一款完整的ESB服务总线产品。对于三者之间的关系可以简单的描述为：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nESB总线引擎和服务运行环境</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先对于ESB总线引擎是一个完全相对独立的内容，即常说的ESB的Server端，一个完整的ESB引擎一般都会集成消息中间件的能力。类似ServiceMix的ESB可以看到核心是基于OSGI运行框架下的ActiveMQ+CXF组件来实现基础核心功能。没有设计器和管控平台，引擎也可以独立部署和运行，即可以自己写代码或写配置文件，将开发好的服务包部署到ESB引擎环境里面。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个ESB引擎本身也需要部署在application\nserver里面，即引擎可以部署在类似weblogic,jboss或tomcat等各种中间件容器中。而对于很多开源的ESB可以看到引擎本身已经集成了更加轻量的Jetty作为服务运行容器。对于单独的引擎应该是不需要DB数据库的，即ESB服务运行的log日志审计可以存储在服务端的log日志文件中，只有当安装了管控平台后，我们可以在server上部署代理，准实时的将运行日志信息采集和存储或db数据库。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nESB设计器和服务开发环境</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/f141ca54d34c4c87b39eb382325a9c5d?from=pc\" IMG_WIDTH=\"833\" IMG_HEIGHT=\"410\" ALT=\"ESB企业服务总线功能，需求和核心架构分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其次是ESB设计器，设计器是属于开发和设计态的一个内容，重点则是对http，rest，已经服务+DB，消息等各种内容进行集成。当前类似talend和mule等都提供了很强大的服务设计器能力。即我们常说的服务代理，http和soap服务集成，数据库适配，路由，消息集成和适配，分支和条件判断，异常处理，任务作业，组合服务等都是设计器需要支撑的核心能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n设计器设计完成后的内容可以导出为部署包，对于部署包则可以部署到ESB服务引擎中。当前的做法主要有两种，一种是在设计器中本身就提供连接到服务器进行远程和自动部署的能力，另外一种做法则是在SOA管控平台里面提供服务部署和管控的能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n设计器往往是给服务开发和设计人员使用，目的是为了简化服务的开发和封装，提升开发效率，一个开放的架构模式最好的方式就是脱离了设计器仍然可以通过其他手工方式进行服务的开发和封装，而不是被设计器绑定。而对于设计器本身的输出，一种是转化为了普通的java代码，还有一种方式是设计器的输出为xml配置文件。可以看到对于xml配置文件这种方式更加方便和解耦，在设计器产生部署包或测试运行的时候，设计器端首先是读取xml配置文件的内容再动态生成和部署服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nSOA管理治理-覆盖SOA全生命周期</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/253326d310074ffdb362154d742acf66?from=pc\" IMG_WIDTH=\"823\" IMG_HEIGHT=\"501\" ALT=\"ESB企业服务总线功能，需求和核心架构分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_73051598834509505\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n最后一个内容是SOA管控平台，主要的作用是实现服务的全生命周期管理，包括服务的元数据管理，服务目录库，服务的申请，服务的开通和鉴权，服务运行日志审计和监控，服务运行分析，服务预警，服务SLA等各种功能。即SOA管控平台提升了对ESB引擎本身的管控和治理能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n管控平台本身也是相对独立的内容，可以看到对于管控平台和ESB引擎本身是彻底解耦的，即如果实施了管控平台，则只需要在ESB引擎上启动管控代理和相关的配置参数，在这种模式下ESB引擎本身运行态的运行信息即可以准实时的采集到管控平台中进行存储和统计分析。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当然，对于管控平台产品的服务权限管控，服务动态路由设置，服务流量控制等内容，也会影响到ESB引擎在运行态的运行。而通常ESB总线的做法则是对于log日志，安全，流量控制等都是ESB总线的inbound和outbound上的可插拔式的拦截器，通过这种组件动态装载和配置启用的模式来彻底实现管控平台和ESB引擎的解耦。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于ESB总线产品本身也应该是符合SOA架构的，即需要实现组件化和服务化，实现服务组件本身的动态加载和热部署，当前类似servicemix在这点上的做法是值得借鉴的，即基于karaf+osgi模式来实现一个组件化的运行框架和环境，极大的方便后了整个运行态的动态管控能力。</P>\n<br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Mon, 31 Aug 2020 00:40:42 +0000","feedId":7662,"bgimg":"http://s4.sinaimg.cn/mw690/001l8XD7zy7G3Hbujon53&690","linkMd5":"6ef7634890dbcefea165a4efd34bc3d5","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn85@2020_1/2020/09/06/04-25-02-568_a9baa0e2034a2104.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s4.sinaimg.cn/mw690/001l8XD7zy7G3Hbujon53&690":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn85@2020_1/2020/09/06/04-25-02-568_a9baa0e2034a2104.webp","https://p1-tt.byteimg.com/origin/pgc-image/02bbe8f70ece46f4a0892c63b01f64bf?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn12@2020_2/2020/09/06/04-25-05-153_9b15974ef2643910.webp","https://p3-tt.byteimg.com/origin/pgc-image/ac7bf64a73cb48eaa11856f3d0bb3f7f?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn4@2020_1/2020/09/06/04-25-04-428_9f1f8da717112a41.webp","https://p1-tt.byteimg.com/origin/pgc-image/e36b0377617b4770b5d8abddd8700b83?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn88@2020_1/2020/09/06/04-25-07-412_200b07d9c992e0aa.webp","https://p3-tt.byteimg.com/origin/pgc-image/3d7c63be716941c4aa3a61858f37a1b8?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn11@2020_2/2020/09/06/04-25-04-835_973c4cc71902e1fe.webp","https://p1-tt.byteimg.com/origin/pgc-image/be111f4a7f2745ce8a5a25a3ccd3dcba?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn27@2020_2/2020/09/06/04-25-05-536_4369ccffdaf0ee9b.webp","https://p1-tt.byteimg.com/origin/pgc-image/86de56265f9344c4a9c4b84ae2acfe1a?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn55@2020_3/2020/09/06/04-25-06-286_a0b3ebffd799cc29.webp","https://p1-tt.byteimg.com/origin/pgc-image/4dd6ae7e300d41c891668b71c0f90c24?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn55@2020_5/2020/09/06/04-25-04-181_81d72878eb27f119.webp","https://p1-tt.byteimg.com/origin/pgc-image/39b44d4361cd43bd85767342ac53cd9f?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn47@2020_2/2020/09/06/04-25-04-856_9294a67ca3fbd470.webp","https://p6-tt.byteimg.com/origin/pgc-image/f141ca54d34c4c87b39eb382325a9c5d?from=pc":null,"https://p6-tt.byteimg.com/origin/pgc-image/253326d310074ffdb362154d742acf66?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn91@2020_2/2020/09/06/04-25-07-729_9b144576c01ae445.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn96@2020_4/2020/09/06/04-25-07-613_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1599366299502},{"createdTime":"2020-09-06 12:24:59","updatedTime":"2020-09-06 12:24:59","title":"从物联网云平台架构设计到开放生态建设(200903)","link":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7G8A8l7f61c\" TARGET=\"_blank\"><img SRC=\"http://s13.sinaimg.cn/mw690/001l8XD7zy7G8A8l7f61c&#38;690\" NAME=\"image_operate_99161599098307747\" /></A>\n<div><br /></DIV>\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n今天整理下我最近2到3年对物联网云平台，智慧家庭和物联网开放生态体系建设方面的文章。实际上我们看到从传统的软件云平台到物联网云平台构建，整体思路虽然一致，但是仍然存在较大的差异，特别是在软硬件环境的整合上面。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n物联网PaaS云平台概述</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/8e0ae80af1154e51af260cf032a23804?from=pc\" IMG_WIDTH=\"673\" IMG_HEIGHT=\"445\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于物联网云平台可以先参考下机智云或氦氪科技两家的IOT云服务平台的一下参考介绍。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n传统硬件升级为智能硬件，会在已有的近端控制，已有的传感器信息采集能力上增加远程控制和信息采集能力。常见的在传统硬件上增加wifi模组，4G或GPRS，Zigbee等远程控制能力芯片。同时增加对设备的远程控制APP应用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n一个设备的智能化升级并不一定就需要网关，而对于一个涉及到多个智能硬件组成的完整解决方案（例如智慧安防）则一定会涉及到服务网关这个硬件设备</SPAN>。这个网关不仅仅是很好解决了安全隔离的问题，同时更加重要的是实现了<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">多硬件Drvier层API能力的聚合</SPAN>，只有在聚合后才能够更好的实现<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">多个智能设备之间的联动和协同</SPAN>，转发和路由等能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在整个IOT大生态环境下，单个智能硬件本身能发挥的价值会越来越小，而更加重要的是硬件和硬件之间的链接，通过这种链接后衍生了各种基于业务和需求场景的增值类物联网应用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个最简单的智能硬件，需要有<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">APP应用，公有云端Server和服务提供，升级了智慧硬件芯片的硬件</SPAN>这三个部分的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n把这个思考清楚后就可以看到一个物联网的PaaS平台应该是：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n硬件+软件能力聚合的一个平台</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n简单的说就是在将一个传统硬件升级为一个智能硬件的过程中，平台层提供了更多的硬件+软件层面的服务能力帮助你快速的完成一个硬件的升级改造。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n从硬件层面：</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n提供本地化的开发环境，开发包等，协助你完成Driver驱动和驱动能力的暴露。即首先你在接入一个硬件的时候，首先你要注册一个硬件设备ID，同时再将这硬件的Drvier层能力注册和发布出来。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n从软件层面：</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我们需要开发一个控制类APP或应用类的APP，那么平台需要提供一些开发框架和环境，开发工具包，同时更加重要的是提供平台层共性和标准技术能力，这个技术能力包括了安全，数据库和缓存服务，消息，存储，CT能力调用等。提供这些技术服务能力的目的很简单，让我们能够更加快速的开发和构建自己的APP应用。技术服务+Driver层暴露的API服务，两者结合起来才能构建一个完整应用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个好的物联网PaaS平台一定是包括了开发平台和运行平台两方面能力提供，首先是提供开发环境，框架和工具，协助快速开发和本地化调测，其次是提供运行平台能够将开发完成服务或应用进行托管和部署。同时在整个过程中我们需要提供DevOps的完整一体化从开发态到运行态（本身又包括了测试环境和生产环境）的迁移能力。再进一步，我们还可以提供运维阶段的运维监控，数据统计和分析接口和能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n传统的软件PaaS平台强调的是APPID，而物联网PaaS平台关注的是设备ID，而APP本身归属到设备上。传统的软件PaaS平台不会太关注服务的单独注册和发布，服务的管理，而物联网PaaS平台则必须包括服务API的全生命周期管理能力。服务API是衔接硬件Driver和智慧应用APP间的重要桥梁。即物联网PaaS平台必须包括了类似OpenAPI平台，云服务总线或微服务网关等的相关能力并进行了整合。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n物联网云平台和传统软件云平台区别</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/d626e8284f5d4a4aaacead7a25043847?from=pc\" IMG_WIDTH=\"760\" IMG_HEIGHT=\"535\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于物联网云平台暂时没有找到一个权威标准的定义，但是可以将其简单理解为实现物联网应用从传统的客户端转移到云端统一集成和管理的平台。物联网云平台和传统的软件云平台一个最大的区别就是物联网应用不是单纯的软件，而是软件+硬件设备的结合，正是由于该原因，云平台必须提供设备层的接入和资源管控能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网软件平台最关键的功能：设备管理、集成、安全性、数据收集协议、分析类型以及支持可视化，有个网站对主流的物联网云平台做个一个对比可以参考上图。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到，其中集成方式以Http\nRest接口服务为主流，同时对于设备信息采集和消息处理以MQTT为主流。当前对于阿里云，百度，中国移动，包括类似京东，乐视，还有机智云等都推出由自己的物联网云平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于这些物联网云平台可以看到核心仍然是提供两方面的能力：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n设备和Driver层API的快速接入，设备性能数据采集和监控</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n物联网应用APP的设计，开发，测试，发布，管理全部云化能力</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网云平台本身<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">不仅仅提供硬件资源池的Driver相关API的聚合能力，同时还提供对于应用层业务服务和内容服务的聚合能力</SPAN>，这也是和传统云平台的一个区别。传统的软件云平台只涉及到软件APP和云平台两个部分的内容，而对于物联网云平台则涉及到<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">云平台，移动APP，物联网设备三者之间的协同和互动</SPAN>，这也是两个云平台之间的一个差别。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于一个真实的物联网应用场景，对于在设备端往往是一组设备的管理而不是单个，同时在设备端还需要具备离线和近场的管理能力。正是由于这个原因，往往在一个物联网云平台的协同架构中，在设备端还会增加一个物联网的网关，做设备资源类的API能力的聚合，近场的控制，简单的控制组合等操作。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于两者的区别可以再看下百度IoT云平台的一个架构图，如下：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/f955e5f5396b415490f94a0e3b12acf6?from=pc\" IMG_WIDTH=\"758\" IMG_HEIGHT=\"542\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在百度IoT框架中，IoT设备启动后要注册到百度IoT云。设备注册成功后，云端将设备管理起来。在设备活跃状态下，云端可以向设备端下发监控命令，设备端也可以主动向云端上报数据。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从这个图可以看到物联网云平台在传统IaaS和PaaS软件服务的基础上，增加了IoT的PaaS平台服务能力，在百度整体架构图里面又将其分为两个框，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一个是和硬件设备接入相关的PaaS层服务能力，一个是和移动APP软件接入相关的PaaS层服务能力。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这里，对于<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">设备的注册，接入，固件Driver的下发和升级，设备信息采集，性能监控，设备认证和安全等都是和物联网场景应用相关的一些能力，这也是物联网云平台和传统云平台不同的一个地方。</SPAN>同时我们也看到一个物联网云平台一定会提供对Open\nAPI接口的统一管理和监控能力，这本身就是一个轻量的服务总线，也是物联网云平台必须要提供的内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n以上内容都搞清楚后，我们基本就把物联网云平台和传统云平台的区别搞明白了。再简单点来说就是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">物联网云平台需要同时提供资源层（设备接入）和应用服务层（APP+OpenAPI)全部云端管控和治理能力。</SPAN></P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n物联网云平台关键功能组件</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/dfic-imagehandler/a5935c6c-5f91-4418-8b94-261b2210c094?from=pc\" IMG_WIDTH=\"1023\" IMG_HEIGHT=\"682\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n物联网网关</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n我经常会谈到API网关，也曾经谈过智慧家庭里面的网关设备，但是没有专门谈过物联网网关，实际上对于智慧家庭网关本身也是属于物联网网关的范畴。对于物联网网关，首先还是参考下百度百科给出的一个基础定义，具体如下：</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n物联网网关，作为一个新的名词，在未来的物联网时代将会扮演非常重要的角色，它将成为连接感知网络与传统通信网络的纽带。作为网关设备，物联网网关可以实现感知网络与通信网络，以及不同类型感知网络之间的协议转换．既可以实现广域互联．也可以实现局域互联。此外物联网网关还需要具备设备管理功能，运营商通过物联网网关设备可以管理底层的各感知节点，了解各节点的相关信息，并实现远程控制。图l示意性地给出了以物联网网关构建的物联网典型拓扑。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这里面强调了一个关键重点，即物联网网关来实现感知网络和通信网络的互联，但是感知网络存在多种不同的协议，比如Lonworks、ZigBee、\n6LowPAN、RUBEE等，那么要实现这种互联网，网关就必须具备协议转换能力。同时网关有两个重点，就是既实现广域互联，同时在广域互联网不可用的时候，往往可以通过网关来实现局域网互联，即近端的相互交互和协同。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/ccc666542ae04a3d9cf251c3b6e2de5e?from=pc\" IMG_WIDTH=\"813\" IMG_HEIGHT=\"443\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于物联网网关的功能，主要包括：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n1.广泛的接入能力</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n目前用于近程通信的技术标准很多，仅常见的WSNs技术就包括Lonworks、ZigBee、\n6LowPAN、RUBEE等。各类技术主要针对某一应用展开，之间缺乏兼容性和体系规划。现在国内、外已经在展开针对物联网网关进行标准化工作，如3GPP、传感器工作组，实现各种通信技术标准的互联互通。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n2.可管理能力</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n强大的管理能力，对于任何大型网络都是必不可少的。首先要对网关进行管理，如注册管理、权限管理、状态监管等。网关实现子网内的节点的管理，如获取节点的标识、状态、属性、能量等，以及远程实现唤醒、控制、诊断、升级和维护等。由于子网的技术标准不同，协议的复杂性不同，所以网关具有的管理性能力不同。提出基于模块化物联网网关方式来管理不同的感知网络、不同的应用，保证能够使用统一的管理接口技术对末梢网络节点进行统一管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n3.协议转换能力</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从不同的感知网络到接入网络的协议转换、将下层的标准格式的数据统一封装、保证不同的感知网络的协议能够变成统一的数据和信令；将上层下发的数据包解析成感知层协议可以识别的信令和控制指令。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这些基本的网关能力总结都没有问题，但是对于物联网网关，其中一个关键的核心就是网关本身是实现感知层和通信层的唯一入口和出口渠道。外部只需要和网关打交道即可，而网关来调度和管控下面接入和注册的各种类型的感知设备。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此网关有一个关键能力，类似API网关，即对于感知层各种感知设备提供的不同类型的协议的接入和适配，同时在协议接入后能够转化为标准的接口协议和通信层交互，对于实时的接口可以采用类似Http\nRest接口，而对于消息集成可以采用类似标准的MQTT消息等。这也是我们原来谈智慧家庭的时候经常会谈到的物联网网关更多的是硬件层的Drvier\nAPI的注册和接入，包括后续的管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网网关一般在架构和实现的过程中会提供一个硬件设备来完成，这个设备来实现协议转换，路由，转发，自动注册管理，接口的北向和南向集成能力。这个网关一般是部署在局域网端的一个设备，对于整体的云架构来说，只需要这个网关设备和云端进行交互即可。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在前面我有文章谈到过边缘计算，可以看到对于边缘计算的最终落地，完全可以在物联网网关层来实现，即进一步提高物联网网关的存储和计算能力。一方面是实现自动采集数据在网关层本地采集后，经过二次加工再采集上传到云端，一方面是云端的关键计算规则和逻辑下发到网关层，支持在网关层来实现本地化的计算。而这也将成为网关层能力的一个关键扩展。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n物联网设备模型</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/7acaebdde3d04ba1878a5f3b71a5151c?from=pc\" IMG_WIDTH=\"754\" IMG_HEIGHT=\"462\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网系统的基础架构模型，即云+app+端集成架构。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n云平台：部署在云端的物联网应用程序，除后台管理外核心是实现数据信息的采集和控制</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n端：即我们常说的近端侧物联网设备，包括物联网设备的近端组网和物联网硬件网关</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n应用APP：方便我们对物联网智慧设备进行管理的APP应用和服务平台</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而实际上整个模型里面我们讨论最多的就是近端的组网和联动能力，近端的计算和存储能力。因此会涉及到两个关键，一个就是近端的硬件网关设备，一个就是具备计算和存储能力的边缘计算设备。相对而言，对于云平台和app应用来说并没有太大的变化。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于云平台端，一定会涉及到一个物联网管理平台，实现对用户，设备等基础数据的管理，因此这篇文章来思考下一个后端的管理平台应该如何抽象一个通用的模型。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于一个物联网运营平台来说，最基本的该模型应该是一个支持多租户架构的模型，每个租户能够完全实现应用权限，数据方面的资源隔离能力。在这个明确后我们再来看模型的抽象，初步来看，我准备从位置模型，设备模型，组织模型，权限模型几个方面来分开谈。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n位置和基础设施模型</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到该模型是基于GIS地理信息拓展的一个多层树状模型结构。从最顶端的行政区域模型，再到区域分类-&#62;基础设施楼宇-&#62;分层分单元-&#62;具体的房间号-&#62;房内区域。这个层次模型应该要做到相当灵活的可配置能力，简单来说我们推要给智慧校园项目和一个智慧公寓项目两者之间应该是有差异的，但是核心的基于GIS地图和位置信息拓展本身是不变的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n即针对我们实际运营的项目，我们应该去构建这么一个模型，究竟要建几层你自己去定义，每层类别应该扩展哪些熟悉你也自己去定义。这样才可能具备足够的灵活和可配置能力。为何需要这个模型，因为最终的物联网设备我们需要知道究竟安装和部署在哪里的，即设备最终需要和位置模型进行关联，这样设备才具备了位置属性。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n组织人员模型</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n组织人员模型实际上和我们传统业务系统中的模型相似，即这里有两个业务对象，一个是组织结构，一个是人员，人员最终是挂接在组织结构下面的。要分多租户，那么租户就应该是组织结构树的最顶层。组织结构树本身也是树状结构模型，可以做到灵活的多层扩展，层次结构本身也没有限制。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n人员最终是挂接在某个组织节点下面，形成人员和组织之间的关系。方便后续的业务功能和数据授权操作。同时也方便对平台的人员和用户进行分组管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在智慧家庭的应用里面，我们看到还有一个常规的组织结构模型里面没有的概念，即家庭模型，首先你有一个家庭的概念，家庭里面有多个人，实际上在家庭里面的设备是可以被家庭里面的多个人共享和管控的。因此家庭聚合层实际上是在组织模型里面必须具备的一个组织节点层。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n设备模型</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n设备模型实际上是我们谈到最重要的一个模型，因为各类设备的参数属性配置都不应用，但是针对所有设备有有一些通有的基础配置。因此设备模型本身应该是一个基础配置+扩展配置模式的，对于扩展配置可以做到灵活扩展，自定义属性，按需配置。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其次设备模型里面还需要包括两种关系模型</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n设备和子设备：类似父子结构，而且我们需要管理到子设备，但是子设备不能脱离父设备</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n设备组合：一套组合的设备，既可以独立存在，也可以形成组合提供更强大的功能</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这两种设备关系也需要在我们进行设备模型建模的时候统一考虑。要意识到设备模型本身不仅仅是简单的设备基础元数据管理，更是要用于后续的设备接入，注册，设备能力提供，数据采集，监控等一系列动作。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n整体说明</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n设备属于某一个位置，同时人员本身属于某一个组织，同时位置和组织本身之间也有关联关系。人员操控设备，人员和设备之间本身又建立关联和拥有关系。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n物联网云平台-能力聚合和开放</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/dfic-imagehandler/85321af1-bb48-4233-93ce-a229f3bf5fb8?from=pc\" IMG_WIDTH=\"1023\" IMG_HEIGHT=\"724\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n前面谈到，对于物联网云平台可以看到核心仍然是提供两方面的能力：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n设备和Driver层API的快速接入， 设备性能数据采集和监控</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n物联网应用APP的设计， 开发， 测试， 发布， 管理全部云化能力</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网云平台本身不仅仅提供硬件资源池的Driver相关API的聚合能力， 同时还提供对于应用层业务服务和内容服务的聚合能力，\n这也是和传统云平台的一个区别。 传统的软件云平台只涉及到软件APP和云平台两个部分的内容， 而对于物联网云平台则涉及到云平台，\n移动APP， 物联网设备三者之间的协同和互动， 这也是两个云平台之间的一个差别。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n今天重点谈下整个物联网云平台架构中的服务能力聚合层，在一个完整的物联网端到端应用里面，可以看到能力聚合层起到关键的承上启下的作用。即物联网的能力聚合层核心作用就是将底层各种物联网云平台或硬件Driver层，硬件网关层的能力聚合起来，然后统一开放给上层的业务应用使用。或者将将硬件层的能力通过适配和接入后，转变为标准的软件接口服务，并以能力开放，比如OpenAPI接口的方式暴露给上层。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而这种接口服务能力的开放本身又涉及到北向接口和南向接口两个方面的内容：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n1. 北向接口：采集硬件层的设备状态，熟悉，健康指标等信息。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n2. 南向接口：对设备的各种控制信息，Driver更新等通过南向接口服务，写入到设备层。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n那这个时候做上层业务系统就简单了，不需要去关注复杂的硬件层接口，而只需要使用标准的软件API接口服务即可。而这个时候的能力聚合和接口能力开放类似标准的OpenAPI平台或微服务网关的能力。简单来说就是这个服务聚合网关需要的关键能力就是：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n服务的接入和注册，服务代理和发布，服务安全和访问控制，服务运行监控，消息管理(MQTT)，流量控制，其次包括了最基本的服务元数据。如果是一个可运营的服务能力开放平台，那么就还需要多租户管理，服务订购，产品和订单管理，计费管理等方面的能力。即在能力服务本身标准化后，服务本身也就是产品，是可以发布出去进行订购供外部业务系统消费，并进行计费的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n从物联网大生态来说，那么物联网的服务能力聚合平台一定不是简单的接入和聚合硬件和网关Driver层的能力，更加重要的是聚合外围周边生态的软件服务能力。而这些软件服务能力本身包括了围绕硬件层设备的增值服务提供(安装，维修），也包括了内容提供（音乐，视频，食品配送）等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n从最简单的服务能力聚合转变到物联网厚PaaS平台能力提供</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个服务能力聚合平台，发展演进到后面就会越做越厚，核心的原因还是我们前面经常谈到的，你在实际应用场景实现过程中，会发现很多共性的内容，而这些共性内容按云平台的思路都应该是下沉的，即共性能力下沉然后以服务能力的方式向外暴露接口。而对这种共性能力本身又包括了技术共性能力和业务共性能力，业务共性和垂直行业类应用密切相关。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n技术平台：</SPAN>技术平台解决技术共性能力，技术共性包括了典型的4A基础能力，流程引擎，地图，搜索，消息，缓存，文件等，这些能力和业务无关，可以在技术平台统一规划和提供。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务平台：</SPAN>类似于基于垂直行业业务中台的概念，这类共性能力往往基于不同的垂直业务领域单独规划设计，将关键的业务场景和流程中的抽象业务模型提取出来，下沉到业务中台数据模型中，形成共性化的业务接口服务能力后再向上层应用开放。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n所有技术平台和业务平台中的各个组件完全可以按照微服务架构思想进行设计，每一个组件就是一个相对独立，高度自治的微服务模块，可以进行独立的设计，开发和部署运维。对于这种组件最终提供的接口服务能力也是接入和注册到服务聚合平台。也就是说对于技术+业务平台，和服务聚合平台之间本身也是一种松耦合的关系。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n将物联网能力聚合平台按OpenAPI平台的思路来做，这个OpenAPI平台将成为整个物联网生态里面承上启下的重要纽带，同时开发相应的自服务门户和流程，包括服务的自助接入和订购，真正形成一个围绕整个生态链上下游以聚合为核心的能力平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n物联网云平台整体架构重新思考</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/8bb0cc5093a04c75a5a5e591cde7b827?from=pc\" IMG_WIDTH=\"937\" IMG_HEIGHT=\"525\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n近期会对物联网云平台进行重新思考，首先还是要对整体架构做进一步的梳理。实际上在18年有不少的文章已经谈到了物联网云平台，包括和传统的软件云平台的差别等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在重构物联网云平台整体思路的时候，有些关键点简要总结如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n构建一个技术平台容易，但是基于物联网的业务和应用场景来构建一个运营服务平台，或者说构建一个完整的生态则相对难，不仅仅需要技术能力，还需要对业务的深入理解能力，最外围资源的整合能力。构建生态需要的更多的是开放心态，服务化驱动，系统思考。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网云平台核心点还是在硬件Driver层的能力接入，即不仅仅是软件能力，也包括了硬件能力接入，而硬件能力最终又转变为软件类的协议和接口，和软件完成协同和控制。所以当我们将物联网云平台的时候，一定是软件+硬件融合的一个生态环境。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n同时当我们将物联网云平台提升到一个业务运营和服务平台的时候，这个时候就不仅仅是技术平台，更加重要的就是物联网厂家下的硬件，软件应用，内容服务等各种服务能力的接口抽象和服务能力聚合。即物联网云平台不再单纯是技术平台，而是具备了强大的业务能力和内容服务提供能力的物联网业务中台。而作为这个业务中台面向客户和用户的延伸，则可以是一个泛电商平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n泛电商平台核心是电商平台，但是将围绕物联网智慧硬件构建一个完整的电商生态，一个是前端的客户关系管理和地推销售，一个是后端的装维和售后服务。电商本身提供产品和服务，而这个产品则是物联网智慧硬件，物联网应用软件，而服务则是各种基于物联网软硬件的内容服务和增值服务能力。一切围绕物联网生态展开。这个生态将具备极强的外围扩展能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n常规的容器云PaaS，技术中台仍然是物联网云平台的关键内容，这些内容支撑智能硬件从接入到运行到后续运维监控的全生命周期流程。而设备和软件最终上线运行后，将转变为电商平台可以销售的产品或服务。同时电商平台完成产品销售，本地化的安装服务后，将形成真正在线运行的智能产品。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n手机APP端+智能产品和网关+公有云服务中心三者本身又形成一个完整的闭环运作流程。而从公有云数据中心本身完成数据采集和处理后，为后续构建增值服务的大数据分析运营中心提供基础。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n物联网开放平台整体子系统划分</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网发展的三个阶段，即连接-感知-智能，\n第一阶段是设备接入，大量的内置了WiFi，ZigBee，蓝牙，RFID等的智能终端设备被制造出来并连接入围。第二阶段是设备状态被感知，并产生海量数据，形成物联网大数据，也是我们一直强调的数据形成积累是走向第三阶段基础；第三阶段对产生的数据进行分析和机器学习，形成初始的人工智能能力，实现用户和商业价值。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网应用领域相对广泛，比如智慧城市和智慧家庭，车联网，企业资产管理，工业互联网，能源互联网和泛在电力物联网，智能建筑，智慧农业，智慧物流等。物联网应用种类繁多，市场需求巨大。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n平台模式是企业主导的经营模式，而生态体系是建立在该模式基础上的企业网络化协同整体图景。Apple和Google的发展思路揭示了搭建开放平台，在此基础上建立生态体系，从而获得巨大成功。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而实际上我们看到真正的重点在于首先平台往往更多是技术层面的内容，而生态体系则涉及到诸多的外围合作伙伴的参与和业务层面内容的提供。平台更多提供的是资源和技术层面的能力，而生态提供的是业务，内容和服务能力。平台提供商和生态提供商本身可以分离，各发挥优势。比如我们可以基于阿里的物联网云平台，构建上层的物联网细分领域的生态体系等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网平台型生态中的用户类型包括平台提供商，设备供应商，应用提供商，内容和服务能力提供商，运营商，最终用户等，相互之间形成一个完整的覆盖物联网硬件产品全生命周期的生态体系。特别要注意物联网能力开放平台包括了硬件设备开发商和软件应用开发商，硬件设备开发商实现智能设备的开发和接入，软件商实现应用，内容和服务的提供。两者可以分离，也可以是同一个厂商。但是对于涉及到诸多物联网设备硬件大集成厂商，设备组合联动的，一般都为独立的集成类开发商来完成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网开放平台应用产品分类-应用类产品，设备类产品，通道类产品，托管资源类产品，功能组件类产品，服务API类产品。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n物联网开放平台总体架构</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/58e38994e58949aa8cdf1eef35cfa832?from=pc\" IMG_WIDTH=\"730\" IMG_HEIGHT=\"389\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网开放平台主要是面向物联网整个生态体系中的所有角色提供物联网设备和应用的快速开发，部署，能力开放，计费结算，服务运营能力的平台。可以将物联网开放平台划分为六大子平台分别为<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">设备管理平台(DMP)，连接管理平台(CMP)，应用使能平台(AEP)，资源管理平台(RMP)，业务分析平台(BAP)和应用中心平台(ACP)。</SPAN>这个分发为作者的一个分发参考，非标准分法。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n设备管理平台：</SPAN>对物联网终端的远程监控，设置调整，软件升级，系统升级，故障排查，生命周期管理等，同时还可以实时提供网关和应用状态监控告警反馈。而要做到这些，有两个关键点，一个就是设备模型的抽象，一个就是对设备接口的抽象，这两个是能够实现对设备全生命周期管理的基础。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n设备接入过程，比如当前的智慧家庭里面的各种智能设备，一般在家庭WiFi网络下可以实现设备的自发现，在自发现设备后再通过API接口实现在互联网云平台的设备注册和接入，设备注册接入后设备管理平台即可以通过相关的接口API对设备进行各种管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n设备一般需要同时提供北向接口和南向接口，北向接口实现数据和状态的采集，而南向接口实现云端对设备的状态控制。注意在有物联网网关的场景下，设备一般会先注册接入网关，而不是直接接入到云端平台，这个时候就需要建立设备和网关之间的关系连接。同时云端平台也间接通过网关来实现对设备的管理和控制。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n连接管理平台：</SPAN>一般应用于运营商网络上，实现对物联网连接配置和故障管理，保证终端联网通道稳定，网络资源用量管理，连接资费管理等。在这本书里面讲的连接管理平台更多是和运营商相关的，而实际上即使无运营商介入也存在连接管理平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n应用使能平台：</SPAN>提供应用开发和统一数据存储两大功能的PaaS平台，架构在CMP平台之上，这个和我们通常说的软件PaaS平台是一致的。一般的PaaS平台能力服务层包括数据中心，应用开发测试运行环境，原子服务和能力中心，能力开放API，开发社区，以及安全管理和运营管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意物联网的应用使能平台和传统的PaaS平台最大区别就是增加了和物联网智能设备和终端的联动，否则无法完成一个完整的开发测试工作，因此你首先要进行设备的注册和发现，设备的接入，然后才可能让你的设备能够和你的应用之间形成联动并进行测试验证。这是和传统软件PaaS平台最大的区别，也因此设备管理平台实际上物联网PaaS平台不可分的一部分。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n资源管理平台：</SPAN>对应常说的软件云平台里面的IaaS资源池</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n应用中心平台：该平台为开发者，应用提供商，能力提供商，设备厂商等提供功能组件，能力，应用服务，通道资源，托管资源，商品的发布展示销售，业务营销，计费结算，客户服务。可以理解为是一个产品最终入库上架后的后生命周期管理平台，类似一个物联网电商平台+运营平台+售后服务平台。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务分析平台：</SPAN>包含基础大数据分析服务和机器学习两大功能</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n和传统的软件能力开放平台的区别，我们可以看到传统软件PaaS平台一般为两者联动，即软件用户或APP和云端SaaS应用的联动，而在物联网能力开放平台下变成了三者联动，即软件用户APP，云SaaS应用，终端的智能设备三者之间的联动。从子系统层面物联网能力开放平台在传统的PaaS平台基础上增加了设备管理平台和连接平台，其核心关键还是设备管理平台和传统PaaS平台间的集成和协同。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n物联网能力开放平台和能力聚合，真正实现物联网整体生态系统中的软硬件一体化，资源内容服务一体化，物联网设备前后生命周期一体化，物联网设备和应用研发，运营和最终的运维管控的一体化。因此基于上面的各个子系统可以看到，设备管理平台和应用使能平台实现软硬件一体化，再加上应用中心平台后实现研发运营交付一体化。这是相对不容易的事情。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n物联网开发生态和万物互联</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在前面谈物联网云平台的整体框架的时候，实际上一直就在思考不仅仅是整体架构框架的重构，更加重要的是基于业务需求和业务场景对整体生态体系的重构。即通过物联网云平台做为关键的技术能力支撑，泛电商平台做为关键的业务和服务能力支撑来重构整个物联网业务生态链。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个生态链即需要实现从需求到最终产品交付使用的横向流程贯通，同时又需要实现纵向的从硬件设备层到云平台再到电商应用和APP终端的纵向打通。而所有的外围生态都是围绕横向和纵向业务，数据和流程的全面贯通而展开。既实现了内部的完全整合，又通过服务聚合和能力开放来实现更大外围生态。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n前面一直在谈万物互联。<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一方面是物物连接，一方面是物人连接，同时也包括传统软件应用中的人和人的连接。所有的连接都基于场景驱动，通过连接产生了直接的价值，同时通过连接形成大量的数据积累产生后续的大数据分析价值。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此物联网生态也可以讲是一个<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">连接生态</SPAN>，而这种连接除了我们常规谈到的软硬件技术，协议和应用外。更加重要的是人工智能，即万物互联是第一，物化智能是第二，没有智能的连接和应用无法灵活的匹配需求和场景，也无法带来更大的增值服务价值。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/a921c88444d14b35963cb7ae101d3220?from=pc\" IMG_WIDTH=\"706\" IMG_HEIGHT=\"335\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n基于以上关键思路，我们来看需要考虑的关键点如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n构建面向外围智能设备厂商的，覆盖从设备接入，运行，运营和运维管控的全生命周期支撑平台。这个核心仍然是物联网云平台，这个云平台本身也是物联网云能力开放平台，更加体现了面向设备厂商的自服务能力，设备厂商基于平台提供的标准规范，开发框架，基础插件，标准接口定义，接入流程，测试流程就能够快速的完成自己设备的改造和快速接入。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n构建面向智慧平台大B企业的端到端运营平台，云平台完成最终的智能设备接入和上架，而运营平台完成最终智能设备的推广销售，后续的装维上线，上线的完整产品运营和管控。从大B企业到最终的C端客户，从设备订购到最终的安装上线，到后续的运行运维，实现完整的全生命周期管理流程。也实现整体运营平台的端到端管理能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n构建面向最终的C端客户的从需求到交付的端到端支撑平台，核心仍然是前面谈到的泛电商平台，提供智能设备，应用，内容，服务多方面的增值服务能力。覆盖客户从需求到消费使用的端到端流程，并形成完整闭环。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n构建基于云平台+服务聚合开放+泛电商形成的外围生态连接平台，其中外围生态包括了智能设备制造商，软件应用开发商，内容提供商，第三方增长服务提供商，金融和支付，第三方物流等。该生态的整合一个关键就是服务聚合和能力开放，开放的能力又支撑外围更多的合作伙伴接入。其次，就是我们看到这个生态里面有三类产品，本身又是一个逐步演进和深入服务的关键。先是智能设备，其次是智慧应用，再次是基于智慧设备和应用提供的各类内容服务和增值服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n产品-&#62;应用-&#62;内容，从智慧硬件产品，再到最终的内容和增值服务，将智慧产品从最简单的智能控制功能转化到内容服务提供，才是可持续发展的运营思路。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n构建从建设过渡到运营后期的大数据分析增值服务能力平台。平台真正开始运营后，那么一定能够实际的采集到用户使用智能硬件产品的行为数据，消费习惯数据，而这些数据经过大数据采集，数据处理和分析后，形成上层的大数据分析平台。通过大数据分析一方面是为第三方提供增值服务能力，一方面是通过大数据分析来改善我们前面的硬件接入上线，电商产品运营和针对性营销的整个流程。使得整个平台能够保持持续优化和改进。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n万物互联和数据赋能</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/b7b4dfc494cb448a9d98563c25df9b08?from=pc\" IMG_WIDTH=\"755\" IMG_HEIGHT=\"440\" ALT=\"从物联网云平台架构设计到能力聚合和开放生态建设\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于万物互联，里面重要的有三点：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n连接-万物互联：物物连接，物人连接，硬件和软件的连接，线上和线下的连接都可以纳入</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n智能-数据驱动：连接后不是物本身智能了，而是积累的数据通过分析后具备了智能</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n需求-场景驱动：做任何事情我们都需要有需求驱动，需求一定要依附于实际的用户场景</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在百度搜索，我们可以看下对万物互联的一个解释</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n万物互联（IoE）定义为将人，流程，数据和事物结合一起使得网络连接变得更加相关，更有价值。万物互联将信息转化为行动，给企业，个人和国家创造新的功能，并带来更加丰富的体验和前所未有的经济发展机遇。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这个解释里面除了谈到的人和物外，还增加了流程和数据，而流程可以理解为前面谈到的关键业务需求和场景驱动，而数据则是真正的为人工智能和分析决策服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n万物互联仅仅是第一步，数据赋能才是真正的价值体现。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n接着我们还是先谈下万物互联里面的一些核心</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n第一个要谈的就是连接</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个连接大家很容易理解，首先要由物，然后还要由网络，最终就能够形成连接。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个物本身就包括了人，事物两个方面。人和人，人和事物，事物和事物之间都可以产生连接。而事物本身又包括两个方面，其一是移动事物，类似货车，飞机，贴了条码标签的物品；一种就是静态基础设施事物，类似我们谈到的家庭设备，地下管线等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而连接核心是网络，包括现在的5G网络和低功耗广域网（LPWAN），能够实现物联网的部分应用需求。目前全球主流技术标准有两个，一是华为主导的NB-IoT，另一个是国外厂商主导的LoRa。万物互联，就一定涉及到数据随时随地的采集和传输，而这就需要高性能高可靠的网络支撑，而这也是为何说5G技术的发展本身是对万物互联的一个巨大支撑。特别是对于实时的视频图像采集和快速决策分析等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在整个连接里面还有一个关键对象，就是我们常说的物联网采集设备，传感设备等。通过物联网传感设备让物本身具备了可感知的人化能力。但是要注意我们的目标仍然是事物本身，而不是物联网设备，传感设备仅仅是一个辅助我们万物互联实现的一个工具罢了。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n第二谈下流程和业务场景驱动</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在原来我谈SOA架构咨询和接口服务识别的时候，经常会谈到跨系统交互的端到端业务流程，其原因就是接口本身不是无缘无故就产生的，接口本身是为了满足跨系统交互的业务流程服务的，是跨系统交付的业务流程产生了对接口的需求，产生了对业务系统连接的需求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n简单的说就是，这种连接本身是有业务流程和需求场景支撑的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在现在的万物互联定义里面增加流程，是相当大的一个进步，即任何一个连接我们都要去思考为何需要存在，这个连接究竟是为哪个业务流程和需求场景服务。不要为了连接而连接，连接本身不是目的，而连接最终产生业务价值才是目的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这也是我们在做物联网应用和运营服务的时候必须要考虑的点，就是一定是业务和需求场景驱动，去考虑为了满足业务流程和业务场景的需求，究竟需要形成哪些连接，采集哪些数据等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n最后谈下数据赋能</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于物联网和万物互联，连接本身不是目的，通过连接满足业务需求，实现业务价值是目的。而这个业务价值的实现本身又包括两个方面：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n低层次价值：实时的满足业务协同的需要，比如完成业务流转，业务控制等流程。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n高层次价值：基于数据分析给出最佳辅助决策，或者能够完全实现人工智能自动化处理。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而我们这里谈的数据赋能更多的就是指让数据发挥高层次价值，单个数据往往只能体现低层次价值，而大量数据的积累形成大数据后就能够帮助我们进行人工智能和辅助决策。因为只有足够多的数据我们才能够完全我们的机器学习和模型的训练，使我们的决策模型具备更高的准确度。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n大数据本身已经提出了很多年，但是人工智能发展明显延后，其原因主要还是体现在网络本身的发展上，数据采集和处理需要有强大的网络支撑，其次就是人工智能本身就需要前期多年的数据积累参与训练，这本身也有一个过程，而最近1到2年，我们也看到物联网人工智能发展的相当快速，因为所有的前提条件都已经具备。</P>\n<br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Thu, 03 Sep 2020 01:56:26 +0000","feedId":7662,"bgimg":"http://s13.sinaimg.cn/mw690/001l8XD7zy7G8A8l7f61c&690","linkMd5":"bad4bc5aeaae88a99d04d793afebeb20","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn97@2020_1/2020/09/06/04-25-02-426_44c9fafbcd31740b.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s13.sinaimg.cn/mw690/001l8XD7zy7G8A8l7f61c&690":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn97@2020_1/2020/09/06/04-25-02-426_44c9fafbcd31740b.webp","https://p6-tt.byteimg.com/origin/pgc-image/8e0ae80af1154e51af260cf032a23804?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn72@2020_2/2020/09/06/04-25-06-919_0815adc5db68d35c.webp","https://p3-tt.byteimg.com/origin/pgc-image/d626e8284f5d4a4aaacead7a25043847?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn16@2020_2/2020/09/06/04-25-06-995_076db7b5126438b9.webp","https://p6-tt.byteimg.com/origin/pgc-image/f955e5f5396b415490f94a0e3b12acf6?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn75@2020_2/2020/09/06/04-25-09-770_5c4ae71ee48de6fa.webp","https://p1-tt.byteimg.com/origin/dfic-imagehandler/a5935c6c-5f91-4418-8b94-261b2210c094?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn71@2020_6/2020/09/06/04-25-06-486_f196ad20d63ba639.webp","https://p1-tt.byteimg.com/origin/pgc-image/ccc666542ae04a3d9cf251c3b6e2de5e?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn7@2020_6/2020/09/06/04-25-05-147_b236deda0d4c1658.webp","https://p6-tt.byteimg.com/origin/pgc-image/7acaebdde3d04ba1878a5f3b71a5151c?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn16@2020_5/2020/09/06/04-25-09-317_3972f180fa5a23e9.webp","https://p6-tt.byteimg.com/origin/dfic-imagehandler/85321af1-bb48-4233-93ce-a229f3bf5fb8?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn35@2020_4/2020/09/06/04-25-10-323_c72df8cd600f3ea5.webp","https://p3-tt.byteimg.com/origin/pgc-image/8bb0cc5093a04c75a5a5e591cde7b827?from=pc":null,"https://p3-tt.byteimg.com/origin/pgc-image/58e38994e58949aa8cdf1eef35cfa832?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx/cdn42@2020_3/2020/09/06/04-25-07-105_e6dc7c1a9734a1b1.webp","https://p6-tt.byteimg.com/origin/pgc-image/a921c88444d14b35963cb7ae101d3220?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn88@2020_2/2020/09/06/04-25-07-192_636c320e27f3928e.webp","https://p1-tt.byteimg.com/origin/pgc-image/b7b4dfc494cb448a9d98563c25df9b08?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn79@2020_4/2020/09/06/04-25-06-536_5c4a49398dbf927a.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn96@2020_4/2020/09/06/04-25-07-613_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1599366299499},{"createdTime":"2020-09-06 12:24:59","updatedTime":"2020-09-06 12:24:59","title":"谈DDD领域驱动设计和建模(200905)","link":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7GbDXZLIY48\" TARGET=\"_blank\"><img SRC=\"http://s9.sinaimg.cn/mw690/001l8XD7zy7GbDXZLIY48&#38;690\" NAME=\"image_operate_77871599265221723\" /></A><br />\n<br />\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n今天谈下领域驱动设计方面的内容，其中部分内容来源于《领域驱动设计:软件核心复杂性应对之道》书籍的读书笔记整理。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"font-family:\">我前面谈了很多关于中台，SOA和微服务的文章，实际上你可以看到中台层对外和对前台提供的服务更多就应该是粗粒度的领域服务能力，如果中台最终只提供书籍对象的CRUD类API接口服务，那么根本就谈不上中台的共性业务服务能力下沉。</SPAN></DIV>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n领域驱动设计概述</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/6431794b5b284ca2bf72c38af478462a?from=pc\" IMG_WIDTH=\"825\" IMG_HEIGHT=\"535\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n什么是领域驱动设计（DDD）</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n2004年著名建模专家Eric Evans发表了他最具影响力的书籍:《Domain-Driven Design &#8211;Tackling\nComplexity in the Heart of\nSoftware》(中文译名：领域驱动设计—软件核心复杂性应对之道)，书中提出了“领域驱动设计(简称 DDD)”的概念。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域驱动设计事实上是针对OOAD的一个扩展和延伸，DDD基于面向对象分析与设计技术，对技术架构进行了分层规划，同时对每个类进行了策略和类型的划分。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域模型是领域驱动的核心。采用DDD的设计思想，业务逻辑不再集中在几个大型的类上，而是由大量相对小的领域对象(类)组成，这些类具备自己的状态和行为，每个类是相对完整的独立体，并与现实领域的业务对象映射。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域模型就是由这样许多的细粒度的类组成。基于领域驱动的设计，保证了系统的可维护性、扩展性和复用性，在处理复杂业务逻辑方面有着先天的优势。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n领域驱动设计的特点</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域驱动的核心应用场景就是解决复杂业务的设计问题，其特点与这一核心主题息息相关：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n01-分层架构与职责划分</SPAN>：领域驱动设计很好的遵循了关注点分离的原则，提出了成熟、清晰的分层架构。同时对领域对象进行了明确的策略和职责划分，让领域对象和现实世界中的业务形成良好的映射关系，为领域专家与开发人员搭建了沟通的桥梁。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n02-复用：</SPAN>在领域驱动设计中，领域对象是核心，每个领域对象都是一个相对完整的内聚的业务对象描述，所以可以形成直接的复用。同时设计过程是基于领域对象而不是基于数据库的Schema，所以整个设计也是可以复用的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n领域驱动设计的分层架构</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n下面我们简单介绍一下领域驱动设计的分层架构和构成要素，这部分内容在Eric\nEvans的书中有非常详尽的描述，想要详细了解的，最好去读原版书籍。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n下面这张图是该书中著名的分层架构图，如下：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/6a36f6bc53eb4ea795e029f2bb4d73c8?from=pc\" IMG_WIDTH=\"760\" IMG_HEIGHT=\"445\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n整个架构分为四层，其核心就是领域层（Domain），具体描述如下：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n用户界面/展现层：</SPAN>负责向用户展现信息以及解释用户命令。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n应用层：</SPAN>很薄的一层,用来协调应用的活动。它不包含业务逻辑。它不保留业务对象的状态,但它保有应用任务的进度状态。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n领域层：</SPAN>本层包含关于领域的信息。这是业务软件的核心所在。在这里保留业务对象的状态,对业务对象和它们状态的持久化被委托给了基础设施层。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n基础设施层：</SPAN>本层作为其他层的支撑库存在。它提供了层间的通信,实现对业务对象的持久化,包含对用户界面层的支撑库等作用。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于领域在这里我更愿意将其理解为业务领域，领域的表现是一系列存在相关关联和依赖关系的业务实体对象表现出现的业务行为的一个合集。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n传统的用例驱动往往我们会先分析会有哪些业务行为和业务操作，再来分析这些行为操作的承载对象，如RUP中的实体类控制类等。领域驱动的方法则可能是尽快<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">先找出核心的业务实体对象，再通过交互分析来分析对象应该展现出来的行为</SPAN>。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在解耦的层面我们看到两个层面的解耦：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n第一个层面是业务操作和业务实体的解耦</SPAN>，这也是传统的SOA的一个思想，在领域建模里面可以看到分解为业务服务，实体对象和值对象等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n第二个层面则是应用功能，服务能力，基础设施三层的解耦</SPAN>，在领域驱动设计的分层架构中则将其分解为了应用层，领域层，基础设施层。基础设施层提供资源层和持久化的能力，领域层提供业务服务能力，而应用层仅仅处理能力的协同，状态保存，服务的编排问题等。</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/110c115668fc4a9abf8907c16febe725?from=pc\" IMG_WIDTH=\"676\" IMG_HEIGHT=\"505\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_29361599265232047\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域驱动设计中领域层的构建可以是整个系统构建的核心，通过领域层的构建再拓展到持久化层和界面展现层。领域模型完全基于面向对象思路构建，因此完全可以兼顾底层是关系型数据库还是NoSQL数据库来持久化。而且领域模型的持久化好像专门就是为适合NoSQL数据库而设计。对于界面展现层相同的道理，领域层只是提供和暴露业务服务，具体业务服务如何交互，协同和展现并不是关键。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个完整的领域层<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">应该包括了实体对象，值对象，主域模型类，业务服务类</SPAN>几个关键的类。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实体对象有唯一的标识符，需要持久化，对应现实中的业务对象，而值对象无唯一标识符，仅仅关注它拥有的一组属性。实体对象本身会表现出对应到行为，而值对象仅仅是属性的结合。在多个实体对象上层可能还要构建主域层对象，程度跨多个实体对象的操作组合。而对于业务服务仅仅是能力通过接口方式的暴露。一方面是实现应用层到领域层的协同，一方面是实现多个domain主域间的协同。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于领域层，在大型系统构建过程中可以是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">首先进行全局的领域层建模再划分为多个domain域，形成业务组件或模块。也可以首先进行业务主体域的划分，然后再分解下去后识别每个业务域里面的实体对象和表现行为。</SPAN>组件划分思路需要引入到大型领域层的构建。即领域层也会组件化和模块化。业务服务即需要考虑模块内，也需要考虑模块间协同。在这里可以看到是领域层本身进行模块化后引入的，对业务服务的能力进行了扩展。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域驱动设计让我们在分析和构建一个应用系统的时候，真正的转正核心矛盾，即领域对象和行为表现，而不是太多的关注基础设施和持久化机制，不去关心前台的展现层技术等。因为只有领域层这块在各种技术架构中是完全可以复用的，也是业务系统的核心。我们谈业务架构驱动应用架构，而业务架构核心内容就应该体现到应用架构的领域层模型中。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n领域模型关键对象和UML彩色建模</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域驱动设计实质是业务场景和实体驱动的设计，有关注业务场景和流程，分析，识别和抽象业务对象，进一步分析对象间的创建，关联，逻辑和服务。注意领域模型和多层架构和技术关联很小，更多的是关注概念模型和业务逻辑，因此抛开了多层架构和框架本身，先研究领域模型再由内而外过渡到数据层和界面层，以及多层的集成。按照Eric的表述，将领域中的组成角色分为五种：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n实体（Entity）：</SPAN>拥有唯一标识的对象。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n值对象（Value Object）：</SPAN>没有唯一标识的对象。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n工厂（Factory）：</SPAN>定义创建实体的方法。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n资源库（Repository）：</SPAN>管理实体的集合并封装其持久化过程。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务（Service）：</SPAN>实现不能指派或封装在一个单一对象上的操作。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于实体很容易理解，也就是业务对象，通过业务场景分析和识别的业务对象。而值对象更多的是属性集合，值对象是没有行为的，类似于结构体。这个是实体和值对象最主要的区别。书里面举了一个例子，Customer是一个实体，有具体的行为；而Address地址信息包括了街道，省份，区域等各种信息且都属于地址内容，可以抽象为一个值对象，而地址本身是没有任何行为的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于实体，在UML彩色建模里面分了四种不同的类型：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/3fe857bee1954f64996ce28bfee28648?from=pc\" IMG_WIDTH=\"688\" IMG_HEIGHT=\"280\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n1. Party, Place, Thing</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nParty: 事件的参与方，例如某人人、某组织等</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nPlace: 事件的发生地，例如仓库、零售店铺</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n应当是指事件中具体的物品，比如客户的购买事件中，thing可能不是指订单（order），而是订单中具体的物品，例如图书、衣服等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n2. Role</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n角色，对party, place, thing的参与行为、方式的抽象。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n3. Moment-Interval</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n指业务的活动、对象等，因业务需要和法律原因等需要操作、记录、追踪的东西，例如销售、订单、预定、航班、会议、行程等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n4. Description</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对某一类型事物的额外描述数据，例如产品有各种基本属性，但各种类型的产品差异比较大，比如做电子商务系统时，图书、服装、眼镜等不同类型的商品，在前台购买流程、后端订单处理流程、财务记账处理、库存管理方式、售后服务原则等各方面都会存在比较大的差异，这些差异按照产品类型设计成产品的额外描述属性，这些被称为description。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到UML彩色建模本身就是对领域驱动设计思想的一个实践，特别是对于实体进行了细分，将事物和业务互动实体，操作者都进行了分离。这个分离本身有一个巨大的好处，就是通过Color为不同的颜色，通过颜色的识别让静态的领域模型增加了动态性的信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n资源库（Repository）的作用是管理实体的集合，并封装其持久化过程，这里面说明了资源库管理实体对象的全生命周期。注意对实体对象生命周期管理的很多行为和操作已经不在实体类中，而是在资源库中，资源库转变为一个操作类和类实例化后持久化的一个结合。而这里让我感到疑惑的点仍然在在领域建模的初期可以关注类之间的关系和聚合，但是不能过早过渡到资源库分析，即从静态领域建模过渡到动态行为分析。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n服务简单点讲就是接口，在做领域分析的时候会发现有些领域很难映射到对象，拥有属性和暴露行为，这个时候就应该识别为服务。服务一个重要作用仍然是屏蔽领域逻辑内部复杂性，体现高内聚，松耦合的思想。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意SOA方法论里面很重要的一点仍然是业务和流程驱动IT和架构，业务架构和模型在先，而技术架构和模型在后，SOA从业务入手的重点正式流程和业务实体两个重要内容，而我们识别，分析流程的目的仍然在于通过流程分析识别业务实体和交互关系，所以将领域驱动设计的一些思路融入到SOA的系统分析和设计中可以更好的和SOA业务建模阶段结合。业务分析师关注业务和流程，技术架构师关注实体识别和涉及事务，接口等。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n领域模型-实体对象和值对象</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; height: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/3f3a80375e924262ab045dd99d8c661c?from=pc\" IMG_WIDTH=\"841\" IMG_HEIGHT=\"570\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于实体Entity和值对象Value\nObject是领域驱动设计里面两个重要的模型对象。所以有必要对两者的关系和区别进行理解。以下部分内容直接引用自《领域驱动设计》一书相关内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先对于实体Entity，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">实体核心是用唯一的标识符来定义，而不是通过属性来定义</SPAN>。即即使属性完全相同也可能是两个不同的对象。同时实体本身有状态的，实体又演进的生命周期，实体本身会体现出相关的业务行为，业务行为会实体属性或状态造成影响和改变。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n真正的现实世界，每个事物都一定会有唯一的标识，关键点是我们实际的业务场景和需求是否需要管理到唯一标识。</P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n书里面举了一个例子，当我们发放的门票上有座位号的时候，座位需要作为独立的实体，座位号是唯一的标识。而当先到先座模式下，我们只关心剩余座位数，那么座位号并不是唯一标识。这跟我们的业务需求有关。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个对象不由属性来定义，那么看人这个对象，身份证号是属性，其实也是对于人的唯一标识。不考虑本身身份证号的位数升级，一个身份证号会跟随你一辈子。但是对于人我们一般仍然会作为实体Entity来看待，因为人有状态，有对象演进的生命周期，会主动产生各种行为。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于企业内信息系统，很多时候我们把员工工卡号作为唯一标识来使用，但是要意识到工卡号只是人员的一个属性。虽然工卡号本身不会出现两个重复的，但是该属性仍然可能演变，如果将工卡号作为唯一标识和ID，那么在该属性变化时候所有其余关联对象都将受到影响。从这个层面来看，一个唯一的内码ID才是可信的唯一标识。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而对于值对象Value Object，它<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">用于描述领域的某个方面本身没有概念标识的对象</SPAN>，值对象被实例化后只是提供值或叫设计元素，我们只关心这些设计元素是什么？而不关心这些设计元素是谁。书里面谈到颜色，数字是常见的值对象。<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">这种对象无状态，本身不产生行为，不存在生命周期演进。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"font-family:\">如果从值对象本身无状态，不可变，并且不分配具体的标识层面来看。那么值对象可以仅仅理解为实际的Entity对象的一个属性集合而已。该值对象附属在一个实际的实体对象上面。值对象本身不存在一个独立的生命周期，也一般不会产生独立的行为。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n值对象往往可能是多个属性的聚合，本身无唯一标识，多个属性最终形成的一个结果值</SPAN>，而这个结果值往往又依附在一个实际的实体Entity上面。那么如果从这个概念来说，值对象往往不会单独进行持久化，或形成数据库设计的一张数据表。另外一种情况，对于简单的数据字典类对象，是否考虑作为值对象，这种对象需要持久化，如纳税属性，物料类型，它们设计到数据字典中取值，这个数据字典无状态，无自己的生命周期，是可以作为值对象来处理的。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n领域模型-聚合和聚合根</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; height: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/1e3b05c456fc4053a4ea5beba7be1e5f?from=pc\" IMG_WIDTH=\"826\" IMG_HEIGHT=\"424\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_33191599265281923\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n聚合和聚合根是领域模型里面很重要的一个概念，其实我们在从真实世界对业务对象进行识别和概念建模的时候，关注的就是聚合根，这才是我们真正要管理的业务对象。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一个对象可能有多个层次，也可能有多个子实体，但是这些子实体都不可能孤立存在，它们必须依附于一个聚合根存在，它们和根节点具有同样的生命周期。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这些对象可能在领域建模的时候会分解到多个Entity或Value\nObject，但是一定要意识到实际的聚合在哪里？我们真正关注的业务对象实体究竟有哪些？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n为什么如此强调领域模型，强调聚合根的概念，因此我们在关注领域模型的时候将有助于我们打破原有的关系型数据库的思维模式，转化为对象和领域的思维模式。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到领域建模和聚合根的思路正是既适合于关系型数据库，也适合NoSql数据库的建模思路。因为在NoSQL持久化的时候，我们看到采购订单就是一个对象，其它明细和关联信息都是这个对象下的子实体信息，采购订单应该作为一个对象整体进行查询和存储，我们并不关心NoSQL会如何去存储这个对象。让我们正在关注领域对象，而不是去关心如何持久化。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n聚合Aggregate就是一组相关对象的集合</SPAN>，我们把它作为数据修改和访问的单元。每个聚合都会有一个聚合根和聚合的边界Boundary，边界定义了在一个聚合里面内部应该有哪些实体，哪些子实体对象。定义边界的原因是我们期望对一个聚合的访问是通过聚合根点进行的，聚合里面的子实体对外界是完全封闭的。对于外部对象不应该去访问到一个聚合边界里面的子实体。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在一些场景下，对于一个聚合的访问，我们往往只需要查询到头信息，而不关心具体的子实体信息，这个有点类似于传统O/R\nMapping里面的惰性加载。在这里也必须要考虑到。在实现和设计聚合的时候，需要考虑到这种场景，即根据需要来加载一个完整聚合中的实体和子实体，以满足性能的需要。如何对应关系型数据库，对一个聚合实际的新增变更处理则可能涉及到多个数据表的多次操作，而这已经是仓储接口和仓储实现需要考虑的问题。现在对一个聚合的一次操作一定应该在一个完整的事务里面，以保障实际的事务完整性要求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n按实际对象分析思路，在<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">领域模型中的领域对象分析应该按照从顶向下的思路进行展开，如果这样的话首先识别到的就是聚合根对象，然后再考虑对聚合根对象进行展开</SPAN>，在聚合根对象的展开过程中进一步细化子实体之间的关联和依赖关系。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n领域模型-规格模式</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于Specification模式是在第九章讲解将隐式概念转变为显式概念的时候讲到的，首先为何会单独剥离规格类，书里面的最重要解释就是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">对于业务规则通常不适合作为entity或value\nobject本身的职责，而且规则的变化和组合也会掩盖领域对象的基本含义</SPAN>。但是如果将规则移出领域层，那么结果会更加糟糕，因为领域代码本身就不再很好的表达业务模型了。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于Specification模式的主要应用场景书里面谈到三点，即：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n验证对象，检验对象本身是否满足某些业务要求</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n从集合中选择符合特定业务规则的对象或对象子集</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n指定在创建新对象的时候必须要满足某种业务要求</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果从以上几点来看的话，对于规格模式可以更多的看做是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">对业务实现过程中业务规则的单独剥离，放到独立的规格类来实现，主要就是处理业务规则</SPAN>。在谈到这里的时候我们再回顾下领域模型中的几个特定对象：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n实体（Entity）：</SPAN>拥有唯一标识的对象。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n值对象（Value Object）：</SPAN>没有唯一标识的对象。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n工厂（Factory）：</SPAN>定义创建实体的方法。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n资源库（Repository）：</SPAN>管理实体的集合并封装其持久化过程。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n服务（Service）：</SPAN>实现不能指派或封装在一个单一对象上的操作。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果基于这些核心对象来看，需要增加一些对整个领域模型和模式使用的一些分析。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于最简单的业务对象的业务操作，比如就一个单表用户信息的维护，这种场景下Repository对象下的实体CRUD方法已经够用，但是还是要通过Service对象进一步封装再暴露为服务接口。只有对于复杂对象的时候才启用聚合和工厂模式，这从减轻架构的复杂性上是可以的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于Service对象中的每一个方法最好都是对应明确的业务方法，这些业务方法往往是对应到业务系统前台具体的业务功能或业务操作的。如一个转账操作可以是service层的一个方法，但是在转账操作的实现过程中需要判断用户账户是否有效，用户是否有欠款，那么这些就是业务规则。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于业务规则不需要暴露为Service对象中的具体方法，在不考虑Specification模式的时候可以将具体的业务规则直接写到Service方法里面，但是可以看到会导致Service对象变重，而对于Service对象更多应该只是下层对象的方法调用和方法组合。因此才会出现将业务规则单独抽取为独立的方法，同时新增加一个规则类类存储这些规则和方法。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这样处理后，整个逻辑和思路和常见的SOA架构方法论就能够更好的对应和映射，即：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n实体和仓储类：</SPAN>更多的是承载对象的CRUD数据操作，不承载过多的业务规则。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n规格类：</SPAN>承载业务规则，是在实体和仓储类外的业务规则和逻辑校验实现等。</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nService类：</SPAN>对上面两类对象中方法的调用和组合，本身并没有太多的业务和规则实现。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果按照这种方法来实现，那么Service中的方法更多都可以转化为后期的BPEL服务编排方式来实现。另外对于规则类是否可以直接访问DAO层，在书里面是可以的，即这部分规则实现是不走实体和仓储类的。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n领域模型-工厂和仓储</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先为什么需要工厂Factory，因为有了聚合的概念，很多时候我们需要创建Aggregate整个聚合，创建过程很复杂，如果我们把这个创建职责分配给聚合里面的任何一个Entity来说都是不合适的，一个是暴露了聚合内部的结构破坏了边界，一个是聚合内的实体承担了本身不应该自己承担的职责。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此应该<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">将创建复杂对象的实例和聚合的职责转移给一个单独的对象</SPAN>，这个对象本身在领域模型中可能没有职责，但是它仍然是领域模型的一部分。提供一个封装所有复杂装配操作的接口，而且这个接口应该不需要客户引用要被实例化的对象的具体类。在创建Aggregate的时候要把它作为一个整体，并确保它满足固定规则。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而设计模式里面的工厂模式，则强调的是工厂提供一个公共的接口，可以根据我们的需求灵活的返回不同的实现该接口的对象实例。对象的创建和实例化由工厂来完成，而不是简单的由对象的构造函数完成。而实际领域模型里面的Factory往往并没有这么复杂，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">仅仅是接管复杂聚合对象的创建和实例化而已</SPAN>。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于简单的Entity，或者本身不存在聚合的时候是不需要再加上Factory类的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于仓储Repository需要说明两个方面的内容。<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一个是解决持久化的问题，一个是对数据层做屏蔽，</SPAN>避免应用或展现层直接跳过领域层对数据库进行操作而使领域模型最终无用。在有了Repository后，我们不再关心对象的存储和访问操作，而将重心真正转移到领域模型本身。或者叫使应用程序和领域设计与持久化技术解耦。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于工厂和仓储的关系，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">工厂负责对象生命周期的开始，而仓储负责对象生命周期的中间或结束。</SPAN>当对象驻留在内存或对象数据库的时候很好理解。但是至少有一部分数据会持久化存在到类似关系型数据库或文件中，这样检索出来的数据就必须重建为对象形式。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于工厂和仓储的协同，有些理解和书上有些不一致。个人理解<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">工厂不仅仅应该关注复杂对象的创建，同时也应该关注复杂对象的保存。工厂不负责对象的持久化，工厂将持久化职责委托到仓储来完成。</SPAN>仓储不应该直接和应用层打交道，对于整个领域层来说。和应用层打交道的是Service接口，而和持久化层打交道的是Repository接口而已。和书里面理解最大的差异就是Repository没有保留给Client，也不是Repository委托Factory来重建对象。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n举一个场景来说，根据订单号获取一个聚合复杂对象采购订单，对采购订单进行修改后再进行保存。这个时候和持久化层存在两次交互，第一次是数据的读取，第二次是修改后数据的存入。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于数据读取，到领域层则是Factory需要实例化一个聚合对象并返回应用层。而Factory将该工作分解到聚合里美的每一个子实体，子实体通过Repository接口获取到ResultSet并进行OR转换后返回，Factory将拿到的所有实例化对象进行聚合返回一个完整的聚合对象实例。对于数据存储，仍然应该是Factory接管该操作，然后对数据进行分解后分别调用聚合中的每一个实体的仓储接口本身的保存方法，对数据进行持久化，在Factory层进行完整的事务控制并返回结果。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n领域服务层的构建</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/a68fc4def9b64b0d82236185ae3ee2a7?from=pc\" IMG_WIDTH=\"595\" IMG_HEIGHT=\"366\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_5361599265304000\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在当前的领域分层架构中没有服务层的概念，在领域层和应用层都有服务，可以将服务层进一步抽取出来，服务层即向应用层提供所有的服务能力。这个服务能力不仅仅是原子服务能力，也包括了组合服务能力。对于服务层提供的服务能力，由服务层控制事务。对于进一步的服务编排，则在应用层进行完成，如果完全基于SOA参考架构，则在上面还会有BPM或BPEL层，重点是对原子服务进行组装和编排。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在领域建模中的整体思路中，我们做两个层面的理解：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n其一是领域模型层重点是隔离传统的数据表并抽象为领域对象；</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n其二将应用层和领域模型层解耦，模型层提供的能力是以领域服务的方式暴露。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于最贫血的领域服务层，就是一个DAL层封装的服务化，即只提供数据库表CRUD能力的服务化，在这种情况下基本满足所有的业务处理和应用需求，但是领域服务层没有任何领域逻辑，也没有领域对象的转换。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n而我们这种需要的领域服务主要包括三个方面的内容：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n其一是领域对象识别，然后将领域对象的类似CRUD操作暴露为服务；</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n其二是对于核心的业务规则的识别，将业务规则识别为业务服务；</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n其三是组合服务，根据业务场景需要将几个原子服务组合为一个更大的服务。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域对象我前面已经谈到过，领域对象是具有完整相同的生命周期的对象，领域对象中的各个子对象不能脱离主对象独立存在。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在领域对象识别中必须要首先识别核心的实体对象，再根据实体对象的属性需求来识别值对象，领域对象识别清楚了再根据业务场景的需求考虑领域对象的能力暴露。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域对象中有一个核心就是将数据库表对象转化为领域对象，并将领域对象的能力暴露为粗粒度的服务，即数据库的CRUD能力转换为了对象的生命周期操作能力。但是在这种分析模式下容易遗漏业务规则转换为业务服务部分的能力需求，这类业务服务往往需要在对象关联依赖和真实业务场景和用例活动中才能够识别。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"font-family:\">在引入了领域对象层和领域服务层后，需要对传统的分层架构进行调整。</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先是引入领域对象，对原有的数据库表对象进行第一层抽象，数据接口转换为对象接口；其次是对原有的展现层和逻辑层进行解耦，引入领域服务层，在领域服务层需要承载业务逻辑，但是又不是完全承载；初步思考的是原有的业务逻辑层的内容有1/3左右划分到应用层；而2/3左右能够下沉到领域服务层。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域服务层贫血很多时候可以追溯到原有分层架构中本身的业务逻辑层就贫血，业务逻辑层逻辑都放到应用层和数据库存储过程中，自然转换到领域建模中也存在贫血的问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n领域对象服务中的领域对象本身就是多个数据表的汇聚，所有对象服务可以解决对象级的事务问题，如订单保存中头和明细的操作严格控制在一个事务里面。但是对于领域服务层的组合服务仍可能存在分布式事务的问题，在这里还是建议基于BASE模式思路进行操作。还有一个方式就是对于组合服务而言，不用直接对原子服务进行组合，而是对原子服务下层的对象级操作API进行组合，这样即方便启用数据库层或逻辑层的事务进行事务控制。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n基于领域驱动思路下业务系统构建</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; height: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/0140607e90c44ce58f3073d5af0effa9?from=pc\" IMG_WIDTH=\"923\" IMG_HEIGHT=\"650\" ALT=\"谈DDD领域驱动设计和建模\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_39771599265206997\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在前面已经谈到，对于贫血的领域层，主要体现在两个方面，一个是没有领域业务对象的概念（领域模型中的聚合根），一个是没有明确的粗粒度的业务规则逻辑处理层。在这种情况下，原有的业务逻辑层变化为仅仅是DAL层的一个简单封装或通道，实际的业务处理全部转化到action层或dal层进行了处理，导致无法真正提炼一个业务模块真正应该具备的领域服务能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n粗粒度的领域服务提供包括两个方面，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一个是完整的领域业务对象提供的数据服务，一个是处理业务规则和逻辑用的业务服务。</SPAN>在领域驱动设计中，前者部分在仓储模型中完成，后者在service中完成。这里要注意DDD里面的service，和我们基于SOA分析和设计中的服务层仍然还是有差别，所有的共性的，应该提供给应用层访问的粗粒度的能力都应该抽象为服务层的服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在当前的领域分层架构中没有服务层的概念，在领域层和应用层都有服务，可以将服务层进一步抽取出来，服务层即向应用层提供所有的服务能力。这个服务能力不仅仅是原子服务能力，也包括了组合服务能力。对于服务层提供的服务能力，由服务层控制事务。对于进一步的服务编排，则在应用层进行完成，如果完全基于SOA参考架构，则在上面还会有BPM或BPEL层，重点是对原子服务进行组装和编排。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实体要考虑两个层面，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一个是完全的data\nentity，一个含操作的entity</SPAN>，为了考虑在SOA架构中的数据和操作分离，建议还是采用完全的data\nentity实体，这个时候这种实体可以进一步作为跨层传输的DTO对象。而对于原有的DAO层，也不仅仅是实现数据的持久化，很多OR-Mapping操作也会在该层完成。数据层关注的是数据对象即和数据库一一映射的表，而领域层关注的是领域对象（可能涉及多张强聚合的表）；数据层最终关心的是数据对象的持久化，而领域层关心的是业务对象全生命周期的管理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在考虑了数据和操作分离后，对于聚合根的业务对象应该有一个专门的业务对象类，来处理所有和业务对象属性，状态变化相关的操作，即控制业务对象完整的数据和生命周期。而service类本身不应该对数据进行任何cud操作，service类的所有操作都应该转入到业务对象类中进行处理。在这种模式下service类目的仅仅是处理业务规则和逻辑，最终处理结果的落地仍然通过业务对象类来完成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n业务系统的构建，不是简单的横向分层，还包括了纵向的分业务模块和业务组件。在领域驱动设计里面没有太多的对这两块结合的描述。在这里要注意两个方面的内容，一个是每一个业务组件都会向上层提供领域服务能力，第二每一个业务组件也会向其它业务组件提供领域服务能力。</P>\n</DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Sat, 05 Sep 2020 00:16:40 +0000","feedId":7662,"bgimg":"http://s9.sinaimg.cn/mw690/001l8XD7zy7GbDXZLIY48&690","linkMd5":"7f43f3fc4b8cd82e267e2e8effe1ba65","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn21@2020_3/2020/09/06/04-25-02-090_5fe50238fd2baf1b.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s9.sinaimg.cn/mw690/001l8XD7zy7GbDXZLIY48&690":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn21@2020_3/2020/09/06/04-25-02-090_5fe50238fd2baf1b.webp","https://p1-tt.byteimg.com/origin/pgc-image/6431794b5b284ca2bf72c38af478462a?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn31@2020_6/2020/09/06/04-25-03-964_7be27bd5c7e8d7c8.webp","https://p3-tt.byteimg.com/origin/pgc-image/6a36f6bc53eb4ea795e029f2bb4d73c8?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn91@2020_6/2020/09/06/04-25-07-244_9a764fc4f229ee14.webp","https://p1-tt.byteimg.com/origin/pgc-image/110c115668fc4a9abf8907c16febe725?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn48@2020_3/2020/09/06/04-25-06-553_2d362c47db18256f.webp","https://p1-tt.byteimg.com/origin/pgc-image/3fe857bee1954f64996ce28bfee28648?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn72@2020_1/2020/09/06/04-25-04-190_efb4a6643ac8ee93.webp","https://p6-tt.byteimg.com/origin/pgc-image/3f3a80375e924262ab045dd99d8c661c?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn99@2020_3/2020/09/06/04-26-05-920_b2be74cf6f19637c.webp","https://p3-tt.byteimg.com/origin/pgc-image/1e3b05c456fc4053a4ea5beba7be1e5f?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn83@2020_2/2020/09/06/04-25-06-929_4811de2fac73dde5.webp","https://p1-tt.byteimg.com/origin/pgc-image/a68fc4def9b64b0d82236185ae3ee2a7?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn19@2020_5/2020/09/06/04-25-04-261_c5c905759c2baae4.webp","https://p1-tt.byteimg.com/origin/pgc-image/0140607e90c44ce58f3073d5af0effa9?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn39@2020_1/2020/09/06/04-25-04-224_410d20cb83f4d9f6.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn96@2020_4/2020/09/06/04-25-07-613_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1599366299496},{"createdTime":"2020-09-06 12:24:59","updatedTime":"2020-09-06 12:24:59","title":"北京DevOps大会资料学习整理(200828)","link":"http://blog.sina.com.cn/s/blog_493a84550102z904.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7FZG6wgf9cb\" TARGET=\"_blank\"><img SRC=\"http://s12.sinaimg.cn/mw690/001l8XD7zy7FZG6wgf9cb&#38;690\" NAME=\"image_operate_16761598616900707\" /></A><br />\n<br />\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n今天整理下去年北京DevOps大会的资料学习情况供大家参考。从我们拿到的资料来看，对于企业内部的微服务架构，DevOps和容器化实践等，对于金融行业，电信运营商仍然是走在前面。也就是原来信息化比较强的大型集团型企业往往在传统IT架构转型的时候也走在前面，而相对来说很多传统行业，大型的制造企业等转型较慢，或者刚开始进入初步的尝试阶段。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n招商银行规模化DevOps落地实践</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/70fdf12f667f44e5b1adf116938c1390?from=pc\" IMG_WIDTH=\"1021\" IMG_HEIGHT=\"335\" ALT=\"北京DevOps大会资料学习整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nDevOps简单来说是开发运维一体化，即实现开发，运维和质量管控三者的统一。DevOps不仅仅是工具技术，更是一种软件工程和研发文化，其目标是缩短开发周期，提高部署频率并可靠的发布，与业务目标一致。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意交付周期并不是越短越好，同时交付周期本身不仅仅是DevOps支撑工具链和持续集成效率，同时最重要的是开发效率，开发人员效率上不去交付周期也缩短不了。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实际上对于企业内部的中小项目，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">比较好的是做到对于Bug修复1到2天交付上线，对于小变更一周内交付上线，对于大变更2周内交付上线</SPAN>。企业信息化软件项目不要和互联网很多APP项目做比较，很多互联网软件项目每天都在不断发版本，在企业信息化上看并不是最佳实践，更多的是应该对相关的需求范围变更进行控制。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n要做到快速交付，除了开发效率，DevOps工具链和自动化支持，另外就是一定要<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">对原有系统进行微服务架构化拆分，将单体应用转为微服务架构模式</SPAN>，通过松耦合和组件化降低每次发布对整个业务系统的影响。即通过组件化后每次发布应该只部署变动的组件和模块，而其它组件仍然应该保持在不变状态。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到最早的DevOps实践都是从<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">自动构建，持续集成，自动化测试，自动部署</SPAN>等开始。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n系统化的DevOps过程改进和建设往往会参考CMMI评估模式，即你首先应该搞清楚DevOps成熟度模型，同时结合当前企业实践现状分析当前你所处的位置，然后再制定具体的改进目标和方向，这个时候有了明确的目标后你才知道应该如何一步步达成目标。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nDevOps实践里面一定会涉及到以下几个方面的内容：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n一个就是DevOps支撑工具链的建设。</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n一个是研发项目管理和沟通协同平台。</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n一个是容器化技术和自动部署。</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意在这里我们先没谈微服务架构，可以理解为微服务架构和拆分不是DevOps实践一开始就必须具备的内容。研发项目管理涉及到版本规划，需求提交，研发任务分配，功能开发，单元测试，测试和Bug修改，最终版本极限和发布等关键内容。而这些内容需要和DevOps平台进行协同和紧密配合。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于招行的DevOps实践基本也体现在自动化编译构建，代码静态检查，自动化单元测试，自动部署，环境迁移，镜像和制品库管理，这些都和我们常说的标准的DevOps实践没有太大的区别。同时在DevOps实践推进过程中一定要注意的就是<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">建立DevOps度量体系</SPAN>，否则你实施DevOps后究竟效率提升了多少，质量提升了多少等就根本无法量化，无法用数据说话。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n整体来看招行的技术资料没有太多亮点，也没有实质性的比较值得一说的最佳实践。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n北京移动业务支撑系统DevOps实践</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于运营商基本走在了DevOps推动和实践的前列，包括微服务架构和容器化技术的融合实践，走在最前面的应该是中国联通的研究院和B域集中化建设过程中的DevOps推进，而我们本身也在做移动项目，当前移动集中化在推进过程中已经开始将DevOps支撑和微服务架构纳入到技术规范和招标要求中。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n但是整体来看，集团层面的DevOps推进还是比省公司慢，对于省公司侧很多年前就已经开始了容器化技术和DevOps的落地实践。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n传统企业IT架构和开发运维存在的问题分析</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n系统架构：新老系统并行，多种架构并行，多种硬件设施</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n开发模式：多种开发模式，多职能部门交叉管理，缺乏统一标准</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n发布环境：多环境部署，多发布工具，自动化程度低</SPAN></LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n标准API：接口多样化，缺少标准API集成困难</SPAN></LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意DevOps不是新东西，而是对已有的CMMI，研发项目管理，ITIL，敏捷开发和持续集成很多已有的研发过程管理思想的集成和融合。以高质量，高效率，高可用的业务快速交付为最终目标，是唯一可以覆盖从需求到运维全过程的完整体系。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于北京移动的DevOps的落地实施可以看到，最终重要的还是有三个关键实施阶段，首先还是应该建立DevOps体系，组织团队，并且评估当前的成熟度并分析差距，制定改进目标；其次是构建DevOps支撑工具链和支撑体系，最后才是选择项目进行DevOps落地实践并持续优化改进。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在DevOps成熟模型持续交付域本身又涉及到七个关键维度。<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">即配置管理，构建和持续集成，测试管理，部署与发布，环境管理，数据管理，度量与反馈。</SPAN>对于数据管理为何要单独拿出做为一个维度，待后面进行分析。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于支撑工具链要分为两大部分，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">一个是敏捷项目管理平台，一个是DevOps支撑平台</SPAN></P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n敏捷项目管理平台：</SPAN>重点是需求，版本，任务，缺陷，沟通协同</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nDevOps支撑平台：</SPAN>重点是版本，构建，部署包和镜像，流水线，环境和环境迁移</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这两部分都属于支撑工具链的内容，同时两部分内容本身还需要紧密协同。对于两者需要紧密协同和自动化的点，这个将在后面专门写一篇文章来进一步说明。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在整个私有云PaaS平台和体系构建中，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">将DevOps变成PaaS体系中的Dev-for-Operation层</SPAN>。对于北京移动的DevOps具体实践，简单的归纳总结为如下几点：</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n敏捷方法论：</SPAN>采用Scrum敏捷项目管理方法论，结合用户故事和敏捷看板管理</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n需求：</SPAN>采用User Story需求条目化，实现需求的端到端全生命周期管理</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n工程实践：</SPAN>静态代码检查，自动化部署流水线，端到端混合场景测试，分层测试自动化</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n环境工具：</SPAN>多版本分支管理，数据库持续集成，自动化测试数据管理和生成</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n整个实践里面我们还是看到诸多亮点，包括了<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">和Scrum敏捷方法论的融合，需求端到端管理和闭环，数据库脚本的持续集成和管控，自动化测试数据的生成和管理</SPAN>，这些实践总结和提炼都来源于最终的业务和技术需求。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这也是我自己也一直在强调的地方，即我们在DevOps推进过程中，会发现整个研发项目管理流程，需求流程，持续集成流程中会出现流程和协同上的断点，会出现未闭合情况，而这些都需要我们通过相关的管理标准和支撑工具集去完善和持续改进。你没有真正去落地实践，你往往就不会发现这些问题。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nDevOps标准认证评估权威指南及案例解读</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; height: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/54c0e55043084186bda685148092871e?from=pc\" IMG_WIDTH=\"704\" IMG_HEIGHT=\"397\" ALT=\"北京DevOps大会资料学习整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n主管单位：</SPAN>工信部中国信息通信研究院（国家级智库，可信云等出品单位）</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n联合发起：</SPAN>OSCAR 联盟、DevOps时代社区、高效运维社区</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n起草单位：</SPAN>中国信息通信研究院、DevOps时代社区、高效运维社区、BATJ、中国移动、中国电信、中国银行、中国太平洋保险集团等</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n目前进展：工信部和联合国ITU-T正式立项，2018年6月29发布全量送审稿</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于DevOps成熟度模型可以看到核心能力域分为三块，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">敏捷开发管理，持续交付和技术运营</SPAN>三个部分。对于敏捷开发管理和持续交付在前面都有介绍。对于持续运营，可以看到更多的是偏ITIL方面的内容，具体包括了监控管理，事件和变更管理，容量和成本管理，高可用管理，连续性管理，用户体验管理几个维度。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n三级要求：在组织内全面推行DevOps实践并贯穿软件全生命周期获得整体效率提升</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n四级要求：在组织内全面落地DevOps并可按需交付用户价值达到整体效率最优化</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在介绍材料里面提到<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">企业普遍的弱项在于自动化测试，数据管理，数据库的持续集成</SPAN>上，而从三级到四级，实际对四级的展望主要包括了如下内容：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n每天可按需多次发布上线，上线操作可由开发团队完成</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n变更前置时间：从代码提交到发布上线小时级</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n周期时间：从需求提出到发布上线2周内</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n平均故障修复时间：线上服务故障时1小时内能恢复服务</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n变更失败率：线上变更导致服务不可用、服务降级或紧急修复的比例低于10%</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n高度且全面的自动化、平台服务化作为组织能力的基础不仅仅需要持续交付的能力达到4级，开发管理、技术运营也都达到3级~4级才有可能，DevOps是体系能力，需要开发、测试、运维的全链路能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意在CMMI成熟度模型里面的四级强调的可管理级，这个DevOps成熟度的四级和CMMI四级还是有差异。DevOps成熟度的四级更多强调的是类似发布周期，故障修复实际，变更失败率等量化的度量指标能否达到，如果能够达到即可以说达到了四级水平。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n敏捷研发管理域</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/c38629a718eb404eb6b6e72e6265cb92?from=pc\" IMG_WIDTH=\"739\" IMG_HEIGHT=\"490\" ALT=\"北京DevOps大会资料学习整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n研发团队效能提升，那么就涉及到团队效能和个人效能，而团队效能和个人效能最终又体现在项目本身的效能KPI指标上面的，因此如何围绕项目，团队，个人建立度量指标体系和可视化的看板，是进行效能提升的一个关键。首先你要知道你当前所处的位置，并建立目标，你才知道如何去改进和找方法达到目标。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n研发文化建设很重要，一个是工程师技术文化，一个是团队文化。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n要改善个人效能，那么首先你要知道你的时间究竟花在哪里了？首先要有日志记录的习惯，类似很早以前就谈过的个人时间记录和个人软件过程改进等。你一天发现开发效率很低，既可能是你本身开发熟练度不够，也可能是你开发过程过程中被开会，电话等打断的时间太多。而这些都只有你记录了时间，才谈得上后面的分析。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n除了提升我们自己的生产率水平，提升质量并减少返工外。减少等待是我们改进效能的另外一个关键点，编译构建等待，测试等待，部署等待都，而对于DevOps持续交付和自动化是有助于我们减少过程等待的。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n研发效能提升</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n数据驱动：分层度量，效能大盘，兵力分布，辅助决策</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n流程优化：产品闭环，研发实践，工单协同</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n工具支撑：研发协同平台，持续交付平台，测试平台，架构中台</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n文化驱动：技术工程师文化，团队文化，企业文化，敏捷文化</LI>\n</OL>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n技术运营域</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/e6ac21c4caa8436e9ce6b239553cacd7?from=pc\" IMG_WIDTH=\"772\" IMG_HEIGHT=\"385\" ALT=\"北京DevOps大会资料学习整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n研发运维管理现状和关键痛点</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n业务需求-需求交付时间难度量，需求规划不合理</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n运维层面-部署包无法统一管理，失败率高，部署时间长，恢复时间长</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n开发层面-交付过程割裂，依赖包存在安全隐患</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n测试层面-缺乏测试标准，自动化测试程度低</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n实际上我们看到当一个版本上线后，后续都是迭代版本或变更版本的上线，我们在持续交付和集成过程中关键要解决的还是对于变更的需求如何规划变更版本，如何实现持续交付，如何做好过程中的代码分支管理，如何做好多团队协作，如何做好持续集成和环境迁移等一系列问题。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在前面几篇文章已经讲到，在整个DevOps能力成熟度模型和标准体系里面，除了项目和开发管理，持续交付，测试管理外，还有一个就是技术运营域。其中技术运营域本身重心又在IT运营和IT系统持续自动化运维上。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nDevOps关键要素：</SPAN>价值流，部署流水线，版本控制，自动化配置管理</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nDevOps强调效率：</SPAN>持续集成，持续部署，持续交付</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nBizOps应用运维关注的是产品部署发布后的运行态，而应用运维本身从上到下又包括了运行业务系统，部署包容器，中间件，数据库，操作系统，IT基础设施。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n你也可以理解为从上到下从应用层，到服务层，到中间件平台层，到最终的IT基础设施资源层。而且各层各组件之间相互影响和制约。而从最早的IT资源网管监控，到中间件数据库监控，再到APM应用性能监控，则是一个从底朝上的监控顺序。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nBizOps应用运维的关键原则</SPAN></P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n运维从立项开始，交付从需求开发: 即项目一开始就需要关注其是否具备可运维性</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n非功能性需求决定了系统生命力： 日志，容量，流控，安全，高性能，高可用，高扩展</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n运维要有串联整个技术栈能力：流程-》应用-》中间件数据库-》操作系统-》IT基础设施</LI>\n</OL>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\n理解：应用运维应该具备两个层面的串联和追溯能力，其一是在某个应用功能出现明显性能问题的时候，能够快速的分析出具体的代码问题，Sql问题或资源本身的能力问题。其二就是当某一个资源出现明显的性能负荷或瓶颈的时候，能够快速的锁定到具体是哪一个应用功能不合理的处理逻辑或代码问题导致。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n所有应用，中间件或资源的问题最终都会体现最终用户对业务系统的使用感受。一个优秀的应用运维应该是事先能够发现问题并提前解决，而不是等用户已经暴露反馈问题后再查找原因。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nBizOps应用运维遵循IT服务管理规范</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n1.知识管理体系，基于生产运营各项工作积累的知识、文章与文档等全生命周期管理，构建嵌入各大IT服务流程与活动。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n2.IT服务流程，专注于业务连续性的流程、规范、管理办法和事项。是一种重点化的ITIL，以业务连续性驱动的一系列流程管理活动。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n3.工具与平台，自动化部署发布流程实现，多维度的监控体系工具，业务流程与应用可视化，组件标准化与平台化等，提供技术与工具链支撑。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nIT运维服务和技术运营</SPAN></P>\n<blockquote STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 1em 0px; padding: 0px 0px 0px 16px; border-top: none; border-right: none; border-bottom: none; border-left: 4px solid rgb(232, 232, 232); border-image: initial; quotes: none; position: relative; font-size: 16px; line-height: 1.5; color: rgb(112, 112, 112); background: rgb(255, 255, 255); border-radius: 4px; text-align: justify; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\">\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px;\">\nGarter认为（IT Ser vice Management，ITSM\n）是一套通过服务级别协议（SLA）来保证IT服务质量的协同流程，它融合了系统开发管理、网络管理、变更管理、资产管理、问题管理等许多流程的理论和实践。ITSM以客户和服务为导向，典型的系统有“CRM系统、ERP系统、决策支持系统和知识管理系统等”。</P>\n</BLOCKQUOTE>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n技术运营管理过程是技术运营能力建设的一个过程，包括监控管理、事件与变更管理、配置管理、容量与成本管理、高可用管理、业务连续性管理、用户体验管理等，它以业务为中心，交付稳定、安全、高效的技术运营服务，构建业界领先的技术运营能力，支撑企业的持续发展和战略成功。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n上面两个概念还是很模糊，个人理解技术运营强调业务目标和保障业务连续性没有问题，但是技术运营重点是运维贯彻整个IT研发生命周期，从立项和需求运维就接入确保IT软件产品具备可运营和可持续运维能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其次就是技术运营是一个主动发现，主动监控，主动发起自我优化调整的过程，而不是简单额自动化运维。这种自我优化一方面是运维架构体系，运维工具支撑的优化，另外就是将可运维作为关键的非功能性需求反馈给软件产品进行后续的版本迭代优化。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n注意，在DevOps标准体系技术运营里面增加了用户体验管理域，其中包括了业务认知管理和体验管理，在于将用户体验进一步标准化。不解决用户问题就不是做用户体验，运维基于技术服务业务，解决业务问题，更像基于技术优化用户场景，赋能业务场景。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看下业务认知管理三级需要达到的水平如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n1.具备能主动挖掘用户痛点需求的产品能力，并能以用户单场景化系统性解决问题</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n2.能够联动内部产品、客服等团队,丰富统一的用户体验类的知识管理系统</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n3.团队定期产品岗培训,主动优化团队考核及创新性团队管理模式</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n搭建一个统一的DevOps支撑平台的核心目标</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/3a8c5a9c51584a3aa61e6b9339c01ffd?from=pc\" IMG_WIDTH=\"759\" IMG_HEIGHT=\"438\" ALT=\"北京DevOps大会资料学习整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n变更可控：全生命周期流程贯通，透明、可控、可跟踪、可追溯</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n任务自助：标准化环境，统一工具平台，自助可视化配置，降低流水线学习成本与使用成本</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n内建质量：质量门禁嵌入流水线，不接受质量缺陷、不制造质量缺陷、不放过质量缺陷</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n度量改进：全方位度量数据收集，可视化观察，迭代优化持续改进</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nDevOps实践最终还是强调的业务价值目标的实现，但是业务价值目标最终要落到项目，团队和个人目标上面。基于这个思路，实际上我们可以设计项目，团队，个人的三个层面的仪表盘和KPI看板。一个人可以属于多个团队，一个团队本身也可以复制多个项目。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n仪表盘和功能看板的设计，实际上是我们整个DevOps持续交付过程效能可视化的一个关键。数据可视化的基础是标准化，其中包括了工具标准化，规范标准化和流程标准化。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n对产品项目</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n1.实时、清晰的度量研发进度、质量、风险，助力研发目标精确达成</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n2.实现软件开发的标准化，并提升版本质量</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n3.提升开发效率，快速迭代上线。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n对团队</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n1.识别团队现状和水平</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n2.团队间，团队不同时期对比分析，发现问题，持续改进</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n对个人</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n1.清晰工作分配和进展</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n2.识别个体水平和问题，帮助个人成长</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n其它实践分析摘录</H1>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; height: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<br STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box;\" />\n</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/ad271e1645d447219aab45aefaf0e313?from=pc\" IMG_WIDTH=\"737\" IMG_HEIGHT=\"416\" ALT=\"北京DevOps大会资料学习整理\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n静态代码检查</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n静态代码漏斗扫描，当前有开源免费产品，也有商用收费产品。当时当前开源免费产品往往存在误报率较高，难以进行深入分析问题（只覆盖数据流、逻辑流等）。实际上我们看到，对于代码静态检查应该包括两个方面的内容，一个是代码规范性检查，一个是代码安全漏洞检查。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n开源免费：FindBugs/FindSecBugs, SonarQube, Google CodeSearchDiggity</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n商用收费：RIPS; CodeSonar; Fortify</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n代码安全加密问题，比如我们公司会采用商用的文档安全工具来实现代码安全加密，在公司环境里面是明文，在服务器也是明文，但是拷贝出公司环境代码变成密文。但是一定要注意在使用代码安全后，直接对我们本地代码的编译和构建效率造成了影响。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n基于二进制包的DevOps落地实践</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个不是新鲜东西，相反，这个应该是持续集成和DevOps中最基本的要求。简单来说就是只在开发测试环境进行构建编译，编译构建完成的二进制部署包在后续的SIT，UAT和生产环境进行环境迁移和动态部署。而不需要在后续环境重复打包。只有这样才能够确保我们最终测试完成的构建版本，就是发布到生产环境的版本。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n要做到这点，那么我们每次的版本构建都需要有详细的版本号和构建版本号，同时对于测试通过的版本能够有明确的基线版本信息。我们最终管理的是镜像仓库的里面的部署镜像，并对镜像在各个环境进行迁移。镜像在各个环境迁移只需要对外部的配置文件进行修改，而不需要对整个项目进行重新构建。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n持续集成，配合微服务架构组件化后，我们必须形成一张各个组件模块在各个环境的版本信息的追踪矩阵表，这追踪矩阵表可以清楚的看到当前各个组件在各个环境的最新版本信息。已经版本在各个环境的迁移信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nJFrog Artifactory</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在软件项目开发中，一个项目常常依赖于大量的外部库，而这些外部库又在不断的进行版本更新，特别是在当前微服务开发越来越流行的情况下，一个服务依赖于多个服务，如何管理依赖库以及依赖版本，确保开发有序进行呢？</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nArtifactory是一款二进制存储管理工具，用来管理构建构建工具（如：gradle）等所依赖的二进制仓库，以方便管理第三方库和发布目标版本库，从而提高软件开发效率。它提供大量的插件以利于和不同工具之间的整合，内部使用权限管理更加安全，并支持高并发等等特性。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n业务应用和非功能性容器分离</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这是一个很重要的概念和实践，在前面我们接收ServiceMesh的时候就谈到了Sidecar的概念，而这个思路完全可以映射到我们的容器中。将容器分为init容器和Sidecar容器两个部分的内容。对于Sidecar容器重点实现部署的微服务模块的非功能性需求，实现维护，日志收集，性能检测，代理等关键能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nServerless无服务器架构</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n无服务器架构是一种包含第三方“后端即服务”（BaaS）服务的应用程序设计方式，和/或包括（FaaS）平台上的托管临时容器中运行的自定义代码。\n此类体系结构消除了对传统的始终在线服务器的大部分需求。\n这可以显着降低的运维成本，复杂性以及减少项目的上线准备时间，代价是增加了对供应商依赖性和相对不成熟支持服务的依赖。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n无服务器可以描述一个”富客户端 +\n第三方云托管应用程序和服务的”的应用程序。这些“富客户端”应用程序一般是移动应用程序，使用庞大的云端数据库或SSO服务（Auth0，AWS\nCognito等）。这些类型的服务以前被描述为“后端即服务”。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nServerless无服务器架构的特点</P>\n<ol START=\"1\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n无需管理&#63972;服务器&#64056;或者服务器&#64056;进程</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n根据负载自动扩缩容</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n按精确用&#63870;付费</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n关注功能而非容量</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n与生俱来的高可用性</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n以函数维度按需执行代码</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n拥抱第三方服务</LI>\n</OL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n说了上面这些可能还是不好理解，简单来说就是在在 Serverless无服务器架构\n下，更加是基于事件和函数编程无状态，并基于第三方能力。你如何要开发一个APP应用，那么这个应用本身你是不需要部署服务器端的，你需要的一些服务器端能力全部来自于第三方云平台的能力提供。其中包括了安全认证，数据存储，各种技术服务能力等。</P>\n</DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Fri, 28 Aug 2020 12:14:15 +0000","feedId":7662,"bgimg":"http://s12.sinaimg.cn/mw690/001l8XD7zy7FZG6wgf9cb&690","linkMd5":"5b9b2300f518c6120323b9fe374b2fa8","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn2@2020_6/2020/09/06/04-25-02-332_0afb0bf2b4828e10.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s12.sinaimg.cn/mw690/001l8XD7zy7FZG6wgf9cb&690":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn2@2020_6/2020/09/06/04-25-02-332_0afb0bf2b4828e10.webp","https://p3-tt.byteimg.com/origin/pgc-image/70fdf12f667f44e5b1adf116938c1390?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn25@2020_5/2020/09/06/04-25-05-732_5092859e5a7b8543.webp","https://p1-tt.byteimg.com/origin/pgc-image/54c0e55043084186bda685148092871e?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn59@2020_2/2020/09/06/04-25-07-589_a8b3d37b0e8eb559.webp","https://p3-tt.byteimg.com/origin/pgc-image/c38629a718eb404eb6b6e72e6265cb92?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn88@2020_6/2020/09/06/04-25-05-561_24c2d00b9dacba91.webp","https://p6-tt.byteimg.com/origin/pgc-image/e6ac21c4caa8436e9ce6b239553cacd7?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn51@2020_6/2020/09/06/04-25-10-429_78a780c8f18d35d1.webp","https://p1-tt.byteimg.com/origin/pgc-image/3a8c5a9c51584a3aa61e6b9339c01ffd?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn63@2020_4/2020/09/06/04-25-05-374_4cb9d9a560ead854.webp","https://p1-tt.byteimg.com/origin/pgc-image/ad271e1645d447219aab45aefaf0e313?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn3@2020_6/2020/09/06/04-25-07-652_b05f9a08d45f270b.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn96@2020_4/2020/09/06/04-25-07-613_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1599366299501},{"createdTime":"2020-09-06 12:24:59","updatedTime":"2020-09-06 12:24:59","title":"锻炼记录(200906)","link":"http://blog.sina.com.cn/s/blog_493a84550102z92b.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7Gddyub267e\" TARGET=\"_blank\"><img SRC=\"http://s15.sinaimg.cn/mw690/001l8XD7zy7Gddyub267e&#38;690\" NAME=\"image_operate_19851599350693803\" /></A>\n<div><br /></DIV>\n<div>\n本周跑满7天，跑步总距离42km，配速559，整体跑步距离比前面几周都有所增长，配速基本还是维持在6分钟左右较慢的速度。四川最近入秋后天气凉爽，早起跑步整体舒适度比原来好了很多。</DIV>\n<div><br /></DIV>\n<div>\n由于受邀请参加9月12-13日的华南CIO大会，因此最近1到2周自己都在准备大会用到的演讲PPT材料，主题就是平台+应用，传统企业的微服务架构改造。由于大会采用黑色底的模板，因此对原有的PPT整体调整会比较大，这也是自己这么多年来第一次系统的调整和配色黑色底的模板。</DIV>\n<div><br /></DIV>\n<div>最近研究SOA和云原生应用，对于SOA产品规划有了新的认识，其中最主要的是两点。</DIV>\n<div><br /></DIV>\n<div>1. API网关将逐步取代ESB总线的位置，个人理解最佳的API网关还是基于Go语言实现</DIV>\n<div>2. 在去中心化的架构趋势下，API网关本身也会逐步被替代，主流将是ServiceMesh下的微服务治理</DIV>\n<div><br /></DIV>\n<div>\n在前面我谈云原生解决方案和DevOps的时候就谈到，在实施DevOps和容器云的时候，是最适合和Istio等微服务治理框架融合的。这个Sidecar代理我们完全可以在容器自动化部署的过程中自动配置下去，实现对API接口服务的统一拦截和管理能力。</DIV>\n<div><br /></DIV>\n<div>\n其次，对于Severless无服务器化架构，个人认为短期很难有大的发展，或者说整个发展应该分为关键的两个步骤来分阶段演进。</DIV>\n<div><br /></DIV>\n<div>1. 首先将传统业务系统中比较重的开发框架，开发技术平台等全部替代掉和云化提供</DIV>\n<div>2. 实现业务功能的FaaS化</DIV>\n<div><br /></DIV>\n<div>\n特别是对于第2点业务功能的函数化不是短期就能够实现的，太理想，只能是针对特定的一些简单业务场景才可能。但是将业务系统中的技术平台，技术服务能力提供全部迁移大云平台服务提供则是完全可能的。<br />\n</DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Sat, 05 Sep 2020 23:55:12 +0000","feedId":7662,"bgimg":"http://s15.sinaimg.cn/mw690/001l8XD7zy7Gddyub267e&690","linkMd5":"15c305f79d60cded14fbc829e720d669","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn14@2020_4/2020/09/06/04-25-02-251_344c7dba53733a06.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s15.sinaimg.cn/mw690/001l8XD7zy7Gddyub267e&690":"https://cdn.jsdelivr.net/gh/myreaderx/cdn14@2020_4/2020/09/06/04-25-02-251_344c7dba53733a06.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn96@2020_4/2020/09/06/04-25-07-613_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1599366299495},{"createdTime":"2020-09-06 12:24:59","updatedTime":"2020-09-06 12:24:59","title":"开源ESB对比分析(200901)","link":"http://blog.sina.com.cn/s/blog_493a84550102z90n.html","description":"<a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7G5hFWjJJ3f\" TARGET=\"_blank\"><img SRC=\"http://s16.sinaimg.cn/mw690/001l8XD7zy7G5hFWjJJ3f&#38;690\" NAME=\"image_operate_14601598919659730\" /></A>\n<div><br /></DIV>\n<div>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n今天整理下原来写过的开源ESB服务总线产品的简单使用和对比分析。当前微服务架构和去中心化趋势下，虽然ESB服务总线现在大家提起的比较少了，但是对于传统企业仍然是主流的解决数据和应用集成的中间件平台。由于这篇文章是对历史内容的一个整理，有些开源软件版本可能还是比较老的一个版本，特此说明。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nMule ESB产品试用</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/daf0fa01133e4d5182e34eb4b64b6ada?from=pc\" IMG_WIDTH=\"697\" IMG_HEIGHT=\"412\" ALT=\"开源ESB服务总线产品试用和对比分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于Mule的新版本产品，特别是http组件和datamapper组件，还有就是SOAP消息组件。这也导致网上很多关于用mule\nesb来实现简单的SOAP WebService代理服务的例子都无法正常运行。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在整个mule esb的功能测试中，<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">整体感觉是mule当前在http消息流的处理上相对优秀，包括http消息流和FTP，SOAP，Database，外部Java代码，MQ集成等</SPAN>，这些访问都能够很好的进行处理。但是如果是单纯的SOAP服务的发布和设计，SOAP+DB的组合实现起来相对麻烦，有很多Talend\nESB很容易实现的场景当前在Mule ESB中仍然没有跑通。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n简单的WebService代理服务的实现例子</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">1.\n拖入Http Connector组件，配置基本的path和端口信息。这里没有太特别的地方。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.\n拖入CXF组件，设置为Proxy Service类型，在Advance地方要引入已经导入到项目中的wsdl文件。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n--设置该组件的namespace，端口号信息，SOAP类型改为1.2 payload类型为envelope</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">3.\n拖入CXF组件，设置为Proxy Client类型，该组件本身不需要再做任何额外的配置。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">4.\n拖入http组件，注意是放在process里面，自动即为一个http Request组件，处理SOAP请求转发</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n--设置host信息，本地的话为0.0.0.0，path信息，访问ws的路径信息，method类型为post</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n处理完以上配置后一个ws代理就可以完全跑通，并可以通过soapui进行测试。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在proxy代理服务的实现过程中，尝试了以前版本的通过spring的wsproxyService组件，通过http简单请求转发，通过webservice\ncomsumer组件配合cxf组件来实现代理，以上方式均没有尝试通过。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在前面一篇文章里面曾经谈到过，mule最近出现的版本升级导致了历史版本很多功能无法跑通同时需要迁移。同时在当前最新的版本中对soap服务的支持能力仍然不是特别方便，下面是近期研究的一些内容总结。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n通过web service consumer组件来实现proxy服务代理</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/98df1a96322e40ffa187281a8c90437d?from=pc\" IMG_WIDTH=\"689\" IMG_HEIGHT=\"474\" ALT=\"开源ESB服务总线产品试用和对比分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n前面已经谈到过通过CXF组件配合Http\nEndpoint简单的来实现服务代理，但是这种代理的实现模式可以看到很难对输入的内容进行加工，包括在输入和输出内容之间进行映射。而通过consumer组件则可以很方便的实现这些扩展能力。对于刚场景大家容易想到的就是简单的将原有的http\nendpoint节点替换为consumer组件即可以跑通，但是实际情况相对来说复杂的多，具体在该服务配置的时候需要注意的点包括</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\na.需要增加dom to xml组件，即将cxf代理服务组件的输出首先转换为xml结构信息</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nb.增加了一个transform组件，对于input，我们采用了xml例子来新生产schema即一个完整的soap\nrequest，包括了envenlop和body，因为proxy输出的内容是含了信封的，而实际服务调用需要的是不需要信封。因此进行一次转换后再输出。(这个经过了多次Debug才发现有该问题)，同时注意可以将debug到的xml数据结构单独保持处理，作为shema信息再导入，方便后面映射。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nSOAP WebService+DB适配</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/229cbbc14bbd472d87560e101663d423?from=pc\" IMG_WIDTH=\"698\" IMG_HEIGHT=\"505\" ALT=\"开源ESB服务总线产品试用和对比分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这也是经常会遇到的场景，该场景本身有包括了两种，一种是对于查询服务，即将SOAP的输入信息作为查询条件，然后根据查询条件去查询数据库，最后将数据库的查询结果通过xml结构返回。另外一种场景即对于导入服务，即将输入信息作为插入到数据库表的记录信息，通过DB适配然后导入到数据库中。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于查询类服务注意在实现的时候仍然需要通过CXF节点，将节点的类型要设置为proxy\nService属性。对于该CXF节点可以收下导入一个wsdl文件到项目里面，然后节点引用该Schema信息后发表一个本地的代理服务。对于服务获取调用请求后，由于CXF节点本身没有Schema自动敏感获取的能力。因此在实现的时候还是需要将CXF节点的内容通过dom\nto xml转换，然后再连接Database节点。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在Database节点连接后，对于Sql语句需要采用参数化查询的模式来实现，在http+DB的例子中可以看到通过脚本很容易获取http请求里面的参数内容。对于SOAP输入消息模式下则需要通过XPATH语句来获取xml里面的节点输入内容。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在查询情况下Database的输出结果是数据敏感的，即组件可以自动的获取到Shema信息方便我们去做数据映射处理，在Database节点后仍然拖入Transform节点，节点的目标需要引用本身WSDl文件的response信息，然后对数据库的查询输出和wsdl输出之间进行数据映射即可。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n通过http请求然后转发去调用SOAP Webservice</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n该场景测试OK，对于http请求如果是json格式，还可以将json样例数据导入后形成dataSense的shema结构，该结构可以和WebService\nconsumer的xsd结构进行dataMapping。处理请求相对方便。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n通过http请求然后触发数据库查询操作</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n该场景测试OK，特别是对于http请求的输入参数，可以在Database组件中进行参数化查询和配置。对于Database本身的输出信息也是Datasense的，即可以获取到具体的schema信息方便后续处理。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n直接在mule环境里面开发一个soap webservice并发布</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n该场景OK，对于简单的webserice我们可以直接编写相关的接口类和实现类，并在CXF组件中配置实现。对于较为复杂的结构，可以采用ws-service类型，同时将外部的wsdl文件导入后自动生成CXF相关的结构和代理类。具体的实现即可以通过java代码实现。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在该场景测试中注意自动生成没有实现类，要通过cxf框架命令行生成后再导入。其次就是在cxf组件后面需要拖入一个java组件，该java组件的class配置为刚才的接口实现类。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n部署和管控</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在mule\n项目里面，对于设计完成的服务可以右键export会导出一个.zip压缩包。然后将压缩包拷贝到mule_server的apps目录下，每隔5秒mule会自动进行部署。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于mule服务端的启动，可以运行mule_server/bin/mule.bat启动mule的服务器端。对于企业版本mule是提供了MMC管理控制台，如果安装了管控平台，则可以将mule直接部署到管控平台的server里面。对于mule的管理端可以通过http://localhost:8585/mmc-3.7.0登录，用户名和密码都是admin。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n简单总结</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n整体来说mule\nesb仍然是一款优秀的开源ESB产品，当前主要有社区版和企业版，对于企业版在管控和高可用性上面提供了更多的支持。mule当前在中国没有设置办事处，对于在国内的推广仍然缓慢。如果是更多基于http消费和调用来进行业务和数据的集成，特别是类似open\napi开放平台的构建，采用mule esb是很不错的一个解决方案。而对于soap服务集成，DB集成能力相对来说talend\nESB更加强大。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nTalend ESB服务总线研究</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/b1ace25daff742f4862a16b66f0a68c5?from=pc\" IMG_WIDTH=\"694\" IMG_HEIGHT=\"382\" ALT=\"开源ESB服务总线产品试用和对比分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n由于查找支持Camel的前端设计器插件，比较偶然的留意到了Talent\nESB这款开源产品，最近这几天一直在进行该产品的使用，由于配套的文档和使用手册相对齐全，很多实际在ESB服务集成中常遇到的集成场景都可以很好的实现，Talent整个开源生态线多个产品获得过10大优秀开源产品大奖，确实是诸多值得学习和借鉴之处。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n下面对近期研究和验证的一些场景做一下简单记录：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nSOAP WebService的简单服务代理</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这是ESB封装经常会使用到的一个功能，即对提供对原始Web\nService服务的proxy代理服务。对于这个功能当前产品支持的很好，具体的操作主要如下。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">a.\n首先是新建立一个Web Service，注意可以直接导入本地或远程WSDL文件生成Schema信息.</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">b.\n将WebSerice分配到一个新建的Job作业上，会自动在设计器中生成Request和Response节点。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">c.\n增加XmlMap节点，增加ESBConsumer节点，Consumer即访问服务的原始地址信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">d.\n在XmlMap数据映射设计器上进行数据映射，注意需要手工导入WSDL的Schema文件信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">e.\n可以在节点之间拖入tLogRow节点进行输入和输出内容的Log日志记录。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个简单的例子可以看到对于ProxyService，数据映射，log日志记录，WSDL\nSchem元数据管理都已经得到了很好的支持。在设计完成的组件上面可以直接通过运行按钮进行服务运行和测试。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nWebService+DB适配数据插入</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n由于Talend最早本身就是做ETL工具的，可以看到对于ETL相关能力的支持相对强大，基本涵盖了所有常见主流数据的数据查询，数据插入和更新的相关适配器。对于核心操作如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">a.\n首先是新建立一个Web Service，注意可以直接导入本地或远程WSDL文件生成Schema信息.</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">b.\n将WebSerice分配到一个新建的Job作业上，会自动在设计器中生成Request和Response节点。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">c.\n增加tMysqlOutput节点，并在WS-Request阶段和该节点之间增XMLMap数据映射节点进行数据映射。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">d.\n对tMysqlOutput进行数据连接和表的配置，配置完成后可以编辑和统计数据库架构信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于DB插入的场景考虑的另外一个重点是由于tMysqlOutput本身没有明确的输出，那么就存在如何将WS-Response节点进行输出的赋值问题。我们实际的场景往往是如果数据处理和插入成功，则将输出参数的Flag信息设置为True，否则设置为False。对于这样一个场景的实现我们采用了通过tAssert和tAssertCatch节点相互配合的方式来实现。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">a.\n在tMysqlOuput组件运行成功的时候可以触发断言</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">b.\n增加tAssertCatch节点同时捕捉断言和Java异常信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">c.\n在tAssertCatch节点和WS-Response节点之间增加tXMLMap数据映射，将结果信息输出到Response节点。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nWebService+DB查询结合</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个结合其实最主要的是需要通过WebService传入的参数来实现DB的动态参数化查询，在实现该场景的时候由于tMysqlInput节点本身不支持结构化参数定义和映射。因此需要考虑用其它方式实现。具体为：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">a.\n首先是新建立一个Web Service，注意可以直接导入本地或远程WSDL文件生成Schema信息.</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">b.\n将WebSerice分配到一个新建的Job作业上，会自动在设计器中生成Request和Response节点。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">c.\n增加tMysqlInput节点，并进行数据库连接和查询语句的配置。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">d.\n增加tJavaRow节点，并在WS-Request阶段和该节点之间增XMLMap数据映射，将输入赋值到Java变量中。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">e.\n增加全局变量定义，并将Java变量的值赋到全局变量中。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">f.\n增加一个组件运行OK的触发器连接到tMysqlInput节点，即前面赋值成功才触发。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">g.\n在tMysqlInput节点和Response节点之间进行数据映射，通过tXMLMap节点进行。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">h.\n主要在Map设计器上面输出需要选择All-in-One，loop节点需要选择对，否则产生多个Reponse而报错。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这个场景的实现中，我们使用了全局变量和参数定义赋值，触发器的使用。可以看到能够很好的实现上面的参数化通过服务来触发DB数据库的查询操作。也看到在整个服务设计中平台具备的扩展能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nWebSerice中的Json对象处理</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n相关场景就是可以Request请求收到的是结构化的输出和输出信息，但是最终Reponse时候需要将信息组合成一个完整的Json串输出。对于这种场景平台也能够很好的处理，即通过tWriteJsonField节点来实现。在该节点中可以自己定义完整的Json对象格式，然后通过XmlMap和Request信息进行映射。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于设计完成的服务部署也很方便，即首先在WebService上进行导出操作，可以导出为.kar扩展名的部署包，然后将将部署包拷贝到container的deploy目录下即可以完成部署操作。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n对Http Rest API接口的接入和适配能力</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/ccdd87a529b245ae853c90147d100afe?from=pc\" IMG_WIDTH=\"695\" IMG_HEIGHT=\"432\" ALT=\"开源ESB服务总线产品试用和对比分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在对mule产品研究的时候说到过mule对http类消息请求，对json格式的shema化和映射都做的相当不错，在这点上面Talend基本具备同样的能力，即Talend对Http\nRest消息服务的处理能力不弱于mule，同时对soap webservice和DB又提供了更加强大的支持能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于Http Rest的支持我们主要测试和验证了如下场景：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n通过http rest请求查询数据库并将数据库的查询结果通过xml格式返回</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n该集成场景的实现相当简单，主要涉及到使用restRequest，mysqlinput和xmlMap相关组件。在restRequest组件中我们可以设置相应的endpoint端点地址，同时设置rest\napi信息中的flow，对于每一个flow的定义我们可以详细的设置参数信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n使用tFLowtoIterate节点，这个是相当有用的一个节点，要注意到对于restRequest输入的参数信息我们需要获取到并且能够传递到mysqlInput节点。该组件的作用就是将flow的参数变量信息读取出来并存储到全局变量中，那么在mysql节点进行配置的时候就可以采用该全局变量信息，比如我们在Flow中定义了From输入参数，则可以通过\nglobalMap.get(\"Flow.from\")访问到该参数值信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n拖入Mysql节点对数据库信息进行配置，然后根据前面的访问参数编写参数化查询sql信息。然后我们可以进一步拖入xmlMap节点，将mysql的数据库查询信息map到一个xml结构，作为RestResponse节点的输出。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n通过http rest+post方式来导入或插入数据到mysql的数据库中</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n该集成场景在实现过程中有些曲折，最主要的原因还是对于post的输入文档结构格式没有完全了解清楚。在该例子的实现中仍然需要使用request节点，然后增加一个flow信息，对于flow的方式要修改为POST方式。对于该flow我们需要定义一个变量，该变量的类型为document，该变量必须要命名为body，前面命名为其它名字都导致了后续处理xml结构信息时候出现错误。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n将request节点连接到xmlMap节点，在左侧我们手工的增加子节点和子节点元素节点来构造xml树结构，主要由于是可以一次Post多条数据，因此需要对Row的节点设置为loop属性。将xmlMap节点连接到mysqlOutput节点，对于mysqlOutput节点即连接到数据库的一张数据库表，可以通过在mysql节点中点击同步列，刷新xml右侧的schema结构到mysql中。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nCamel相关集成场景测试</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于该测试，主要参考Talend提供的集成手册进行，主要对File，ActiveMQ，CXF，HTTP，JavaAPI进行了测试，经过测试整体感觉虽然Camel具备了足够的扩展性和高性能，但是在实际的集成场景中如果期望通过灵活可配置的方式来实现集成，那么Camel集成方式仍然存在大量的不足。特别是在Schema信息的获取和数据映射，对soap\nwebservice的支撑能力上面。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当然如果更多的是对Http请求的处理，消息中间件的集成，那么采用camel提供的集成组件完全足够。在对Camel组件的测试过程中我们发现，通过拖入两个cxf组件就很容易的实现了传统的web\nservice服务请求代理功能。但是如果希望像Integration中对wsdl中的shema进行读取和映射，就相当困难。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于Talent\nESB本身也提供相关的监控能力，其核心是SAM数据日志采集和监控，首先需要配置相关的数据库资源池和数据信息，对于服务的运行态参数需要设置为Use\nSAM，即对于服务运行的数据输入和输出信息会全部log到数据库的Event事件日志表中。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n整个平台还有很多功能没有仔细研究，但是基本可以看到该平台能够很好的满足当前业务和数据集成中出现的各种常见场景。通过该ESB本身还支持和Camel的集成，支持bigData大数据集成能力，可以算得上一款功能相当完善的ESB服务总线产品。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nWSO2ESB总线简单使用</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/f6dbabd6c0914f97a78bca84cce01511?from=pc\" IMG_WIDTH=\"696\" IMG_HEIGHT=\"322\" ALT=\"开源ESB服务总线产品试用和对比分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n前面对主流开源的Mule，Talend，Fuse等都进行了简单的场景测试和验证，对于WSO2由于下载的原因一直没有进行简单的使用，今天从百度网盘下载到WSO-ESB的最新版本，进行了简单的安装和使用。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nWSO2ESB是一个为企业准备的完全成熟的ESB。WSO2ESB是建立在Apache Synapse项目基础上的。Apache\nSynapse是使用Apache\nAxis2创建的。对于WSO2前面也有文章提到过，拥有足够完整的产品线，包括完整的PaaS平台产品，同时具备足够的开源性和轻量集成服务能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于产品的安装相当比较简单，在运行前首先还是需要配置好JDK\n1.7以上版本和相应的JAVA_HOME和Path路径设置。完成后将ESB压缩包解压到某一个目录，运行wso2server.bat即可，具体简单说明如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">1.\nExtract the wso2esb-4.9.0.zip and go to the extracted directory</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">2.\nRun the wso2server.sh or wso2server.bat as appropriate</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">3.\nPoint your favourite browser to</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n--&#62;https://localhost:9443/carbon</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">4.\nUse the following username and password to login</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n--&#62;username : admin password : admin</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于服务端运行后访问到具体的管控界面，进行一个简单的服务代理测试。可以看到WSO2提供了多种常用的服务代理模板可以供选择，如果是最简单的基于WSDL服务代理，那直接选择WSDL\nBased Proxy即可，当然我们也可以选择Custom\nProxy以进一步熟悉整个服务过程的配置。下面对核心的几个步骤进行简单说明：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n1. 定义代理服务</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n自己定义一个代理服务的名称，注意需要选择wsdl资源文件，建议最好选择本地仓储库中的资源文件，因此可以先将我们本地的wsdl文件拷贝到Reposity目录下面，然后输入具体访问地址，例如：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nfile:repository/samples/test1.wsdl</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其次对于发布服务可以支持http和https，如果本地测试建议只选http进行服务的发布。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n2. 定义inSequence配置信息</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这里我们选择define\ninline，同时选择创建，这时候会显示可供选择的多种endpoint的列表信息，在这里我们选择address\nendpoint，输入我们实际访问的原始服务地址并验证即可。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n3. 定义outSequence配置信息</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于outSequence配置基本是同样的方法，我们需要选择define\ninline，同时创建一个send节点处理，具体的位置在设计器上面的core-send即可以选择到。定位完成后保存关闭。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n经过以上三个步骤基本就完成了一个最简单的proxy服务代理的配置。在这里补充再说明几点如下</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于Proxy服务默认是没有进行log日志的，因此如果需要进行Log日志记录，则需要在定义Sequence\ninline的时候，在设计器上面增加log节点，当增加log节点后即可以对服务消息进行日志记录。如果需要对输入和输出都进行日志记录，则需要在inSequence和outSequence都增加log信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于进行了日志记录后，可以转到monitor监控Tab中，在system\nlogs中就可以看到详细的log日志记录。当代理的服务较多的时候，我们可以在定义代理服务的时候输入Service\nGroup属性，即可以对服务进行分组管理，在服务列表里面会按Service Group进行分组显示。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于服务本身的路由功能在WSO里面实现起来还是比较简单，需要在设计器中增加Swith和Case节点进行最终服务目标点Endpoint的路由。具体的路由判断规则采用XPath语句进行解析。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\nCamel规则引擎和ServiceMix服务总线</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/a2f1761ea00442d3947c9fb493586e4e?from=pc\" IMG_WIDTH=\"834\" IMG_HEIGHT=\"447\" ALT=\"开源ESB服务总线产品试用和对比分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于近期对于开源ESB产品的研究和分析，结合原有自研的轻量ESB产品以及对大型ESB商业套件多年产品实施的经验分析，准备对公司已有自主研发的轻量ESB产品进行一次大的产品改造。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在前面一篇ESB核心产品功能架构的文章里面已经提到，业界常见的ESB产品主要包括了三个核心部分的内容，即ESB服务设计器，ESB底层引擎和ESB管控治理平台三方面的内容。而实际上里面最重要的还是ESB底层核心引擎，业界主流的产品主要包括了两种实现标准，一种是类似Oracle和IBM的商业ESB产品里面基于SCA/SDO标准体系来实现，其更加体现了服务为重点，一种是类似ServiceMix，WSO2等产品则基于JBI标准来实现，更多的体现消息为主。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nCamel规则引擎</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/62c108a5fda146a3bb85ea58e92ad556?from=pc\" IMG_WIDTH=\"647\" IMG_HEIGHT=\"407\" ALT=\"开源ESB服务总线产品试用和对比分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在这次的底层ESB核心引擎选择上，初步考虑基于Camel来扩展ESB底层核心引擎。或者也也可以说是基于开源的ServiceMix来进行相应的扩展。Camel是一款优秀的规则引擎产品，特别是其对企业EIP集成模式的完全支持，同时对大量外部开源产品的集成，包括CXF，ActiceMQ，JavaBean，FTP，Http，DB数据库等，这些都使得Camel是一个具备足够扩展性和定制能力的可选引擎。虽然对于Camel当前还没有相应的设计器，但是类似Talend，Fuse已经发布有相应的基于Camel的可视化设计器，我们也可以完全开发自己的设计器，前面也有文章谈到过基于Eclipse\nGMF插件进行设计器的开发等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于基于Camel的ESB底层引擎，基于ESB场景的集成服务场景做一些说明：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/4c240fe20d4a4cd68d7e099eae76ada7?from=pc\" IMG_WIDTH=\"928\" IMG_HEIGHT=\"523\" ALT=\"开源ESB服务总线产品试用和对比分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n1. 最常见的proxy service功能的实现</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到Camel实现最简单的Proxy\nService是相当简单的，其核心能力还是通过CXF组件来实现。对于最简单的代理我们不需要生产相应的Service类，仅仅是请求转发。在CXF框架使用中，可以通过CXF自带的拦截器和Log组件来增加对输入和输出消息体的Log能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n2. 在proxy Service的实现过程中需要增加Mapping映射能力</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n举个简单的场景来说，如果Camel通过CXF发布的代理WebService的Schema和我们需要调用的原生WebService之间的shema不一致，那么我们就需要对消息的结构进行映射处理。在Camel里面本身Mapping能力是相当弱的。在实现的过程中主要有两种方式可以考虑，其一是通过XSLT来实现消息体本身的转换，其重点是对于Route传递的消息格式通过XSLT模板文件进行转换和映射；其二是可以考虑通过Camel集成的Dozer组件来实现映射，其核心是通过CXF框架生成出来的Java类对象之间数据结构进行映射。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n3. 消息中间件能力和消息本身的发布订阅等</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到Camel本身对消息中间件和消息队列能力的集成是相当完善的，其既支持基于JMS实现的ActiceMQ，也支持基于AMQP高级消息队列实现的RabbitMQ等。我们在ESB集成中遇到有消息发送和接收，1对N的消息发布订阅等场景的时候，两种组件都可以选择使用。如果是需要一个高性能的分布式消息发布订阅系统，我们还可以使用kafka组件，可以看到在Camel\n2.13版本后已经完全集成了现在使用广泛的kafka消息中间件。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n4. 对于集成过程中的路由，分支和判断能力实现</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n这个不用细讲，Camel本质就是规则引擎，可以看到在Camel里面实现相应的条件路由，分支判断等相当简单。在这部分不是简单的Choice组件和实现代码，看Camel参考手册里面可以看到Camel有大量的Processor组件可以协助我们完成相关的工作，比如split，filter，enrich，loop等。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n5. 对于Http Rest服务的集成和服务代理等</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n可以看到在Camel里面专门提供了CXFRS组件来实现对rest服务的集成和服务代理能力，整个实现起来相当方便。同时Camel本身也提供了Rest和RestLet两个Rest服务相关的组件，对于Rest组件主要在Camel路由节点中可以将Rest定义为相应的Endpoint端点服务，而对于RestLet组件则其本身就可以用来发布Rest服务或消费Rest服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n6. 对于FTP和文件的适配能力</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在Camel里面有专门的File组件和Ftp组件，要实现对FTP服务器或文件目录的集成是相当容易的事情。例如我们可以通过这些组件实现从特定的FTP服务器或文件目录中读取文件，也可以用来将我们最终的消息流持久化到具体的文件中。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n7. 对于DB的适配能力已经WS+DB场景实现</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在Camel里面可以看到有不少的DB相关的组件，包括JDBC，SQL组件，也包括了Camel对Hibernate，IBatis等O/R\nMapping框架的集成。但是我们也看到，这些都是通用的数据库访问组件，不像Talend这些产品对于DB适配有很强的支撑能力。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n如果要实现WS+DB的场景，不管是适配到数据库的查询服务还是插入数据到数据库中的导入服务，我们在前端都可以采用CXF框架来实现对消息输入的获取，也可以在后端通过DB组件适配来实现数据库数据的查询或写入。但是其中关键点还是Mapping能力，即服务本身的Schema和数据库本身的查询和插入Sql语句数据项之间的映射。如果没有这种映射，那么对于这种场景我们都会涉及到要单独编写代码或相应的配置文件才能实现。而在类似Mule或Talend\nESB工具里面可以看到，这些场景基本都可以通过设计器在前端动态配置完成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n为了扩展Camel这方面的能力，初步考虑的思路即自己对数据库的查询或导入进行封装，将其封装为独立的Java\nBean对象，然后在Route的路由节点中增加Endpoint连接到我们自己的Java\nBean类上面。基于这种方式需要做的工作就是定义相应的Mapping\nXML文件，对于不同的场景我们要修改的仅仅是这个配置文件就能够实现不同的数据查询或数据导入服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n8.对于大数据本身的服务集成能力</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在Oracle里面有专门的ODI来实现大数据服务集成，即可以理解为WS+ETL的组合模式。而在Camel里面，由于Camel本身有的足够的开放性，我们可以将自己开发的ETL\nJAVA组件定义的标准的Java Bean再集成到Camel\nRoute设计里面。初步考虑可以将淘宝开源的DataX进行适当改造后集成到Camel里面以实现大数据集成。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\nServiceMix服务总线</SPAN></P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p1-tt.byteimg.com/origin/pgc-image/d46c7b95325848709486de51438d585a?from=pc\" IMG_WIDTH=\"639\" IMG_HEIGHT=\"370\" ALT=\"开源ESB服务总线产品试用和对比分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nApache ServiceMix是小巧的开源集成容器，它结合了Apache\nActiveMQ、Camel、CXF和Karaf的特性和功能到一个强大的运行平台，你可以用它构建属于自己的集成解决方案。它提供了一个由OSGI技术支持的全面的企业预备ESB。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n其主要特性（features）包括：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n基于Apache ActiveMQ的可靠消息</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n基于Apache Camel的消息、路由和EIP（Enterprise Integration Patterns）</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n基于Apache CXF的WS-*和RESTful web服务</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\n由Apache Karaf技术支持的基于OSGI的服务运行环境。</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n通过另外可安装的特性（features），ServiceMix也支持：</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nActiviti的BPM引擎</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nApache OpenJPA的完整的JPA支持</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nApache Aries的XA事务管理</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n仍旧支持JBI标准（在ServiceMix 3.x系列之后已废弃），通过Apache ServiceMix NMR来支持，Apache\nServiceMix NMR包含了丰富的Event、Messaging和Audit API。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n构建ServiceMix应用方式主要有OSGI Blueprint，OSGI声明式服务和Spring\nDM（legacy）。可以看到对于一些常见的基础标准常见，直接使用Bludeprint配置文件即可以完成配置。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nServiceMix的官方网站地址为：http://servicemix.apache.org/ 。\n其下载和安装部署也相对简单，在下载完成后，可以直接通过QuickStart里面的例子对ServiceMix的基础功能进行熟悉，以最简单的两个文件目录文件集成传输为例来进行说明如下：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n首先是需要编写BluePrint.xml的配置文件，具体如下：</P>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p3-tt.byteimg.com/origin/pgc-image/cb0f744d5ea347f2928b7f429b3e6e4a?from=pc\" IMG_WIDTH=\"629\" IMG_HEIGHT=\"276\" ALT=\"开源ESB服务总线产品试用和对比分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n由于ServiceMix本身是基于OSGI和Karaf的组件化热部署框架，因此在配置文件开发完成后，只需要将该配置文件拷贝到Deploy目录下即可以完成该文件路由服务的部署。在部署完成后的服务运行后，我们将文件拷贝到camel/input目录下，可以看到文件会被传输和包括到output目录下。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于具体部署的日志和状态可以通过 log:display 命令进行显示。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于ServiceMix本身也提供另一个简单WebConsole端，可以通过：</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n&#62;&#62;features:install webconsole</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n进行Console管理端的安装，安装完成后通过 http://localhost:8181/system/console\n地址访问，以smx/smx进行登录，登录后可以看到当前安装的组件本身的状态，可以查询总线运行相关的服务日志信息。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n当前ServiceMix的版本为6.1版本，虽然仍然有对JBI规范的支持，但是也可以看到其核心已经转换为Camel，ActiveMQ和CXF三个核心开源组件的集成。同时基于Karaf实现的OSGI运行环境和容器。Karaf作为一款成熟而且优秀的OSGi运行环境以及容器已经被诸多Apache项目作为基础容器。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于ServiceMix本身由于重点是在ESB服务运行引擎和开源组件的集成，因此可以看到在SOA治理管控，可视化的服务设计和开发方面都相对欠缺。而且当前ServiceMix相关的文档资料极少，实际在企业应用的场景也不多，如果要学习ServiceMix其核心需要学习的内容还是基于Camel的集成，消息中间件和CXF服务化框架，这三者本身是ServiceMix的基础。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n对于服务开发中存在的个性化规则和逻辑的处理，ServiceMix提供了足够的开放性和灵活性，可以通过Eclipse环境进行plugin插件开发，开发完成的插件可以直接部署到deploy目录中。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n在JBOSS Fuse ESB被红帽收购了做了较大的整合和商用化，即推出了JBOSS FUSE ESB引擎和基于JBOSS\nDeveloper\nEditon的服务可视化设计和开发。该ESB引擎本身仍然是基于Camel底层的可视化设计和实现，通过设计器的协助可以更加快速和高效的配置和开发ESB服务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nESB在JAVA领域主要有两种标准，一种是Sun提供的JBI业务集成规范，一个则是由BEA和IBM提出的SCA/SDO标准。可以看到对IBM和Oracle的ESB平台基本采用的是SCA/SDO的标准。而对于开源的ESB如ServiceMix，JBOSS\nESB等更多则是基于JBI规范进行实现。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<span STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-weight: 700; margin: 0px; padding: 0px; border: 0px;\">\n简单说明下OSGI和JBI规范</SPAN></P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nOSGi(Open Services Gateway Initiative,开放服务网关协议)提供了一个面向服务组件的编程模型，基于\nOSGi 编程，具有模块化，标准化，面向服务，动态性，易复用，易扩展，易部署等诸多优点。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nOSGi 带来了规范化的模块划分，低耦合的模块间关系，统一的模块开发方式，可动态插拔的模块管理环境。开发 OSGi\n应用程序的第一步是在需求分析的基础上进行精心的模块划分，模块划分的原则是尽量保持单个模块的独立性，使模块与模块之间的耦合降到最小，每一个模块暴露给其它模块的信息最少，尽量让模块之间使用\nOSGi 框架提供的服务注册机制来通信。一般可采用一个模块一个 Bundle 的方式，并为每一个 Bundle 在 Eclipse\n环境中建立一个 Project 来进行开发，由于模块与模块之间的耦合很小，各个 Bundle\n之间并不会像传统的开发方式中的各模块之间那样存在纠缠不清的包和类的引用关系，因此大部分Bundle的开发工作可以并行进行而不会互相影响。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nJBI的本质是一种服务总线思想。JBI的目标是创建一个用于各种Java组件服务集成的运行环境。JBI容器以一种可插拔的方式集成不同类型的服务，而不是通过编写客户端代码来实现服务的集成。目前流行的服务容器有Servlet容器、EJB容器、JMS容器。</P>\n<ul STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 20px 30px; padding: 0px; list-style-position: outside; list-style-image: initial; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nServlet容器只能处理以HTTP/SOAP协议传输的消息（接收与响应）；</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nEJB容器只能处理RMI协议传输的消息；</LI>\n<li STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; list-style: inherit;\">\nJMS容器则处理的是JMS协议传输的消息；</LI>\n</UL>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n它们之间无法进行通讯，如果想集成上面不同类型的容器服务，则必须有一种能融合以上不同容器的\n新容器出现。JBI就是基于解决这种问题的思路出现的，JBI提供了各种各样的容器绑定组件（Binding\nComponent,称BC）,BC专门负责接收各种各样的传输协议的消息与发送请收消息给外部容器。当然JBI还提供其它的功能，要不这纯属一种代理\n了，就没什么意义；</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\nJBI提供处理各种业务的组件（即Service\nEngines组件，称SE）的消息，比如接收到HTTP的消息后需要转发给外部组件EJB，则需要SE组件来进行转换（更准确的说是Transform\nSE组件）。其实BC与SE之间是无法直接通信的，所有的消息都是通过传输通道（Deliver\nChannel）传送到NMR（Normalized Message Router），再由NMR通过DC将信息转到SE或BC的。</P>\n<h1 STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; font-size: 1.5em; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding: 0px; border: 0px; position: relative; line-height: 1.33333; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" BACKGROUND-COLOR:=\"\" MARGIN-TOP:=\"\">\n对比分析总结</H1>\n<div STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); overflow-wrap: break-word; font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n<img SRC=\"https://p6-tt.byteimg.com/origin/pgc-image/bbbf36c563074fcf8af0b29089fbe2dd?from=pc\" IMG_WIDTH=\"693\" IMG_HEIGHT=\"889\" ALT=\"开源ESB服务总线产品试用和对比分析\" INLINE=\"0\" STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 10px auto; padding: 0px; max-width: 100%; display: block;\" NAME=\"image_operate_36211598919663494\" />\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px;\">\n&#160;</P>\n</DIV>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n一般来说，由于ESB产品属于SOA这个更大概念的范畴，因此，在实施SOA项目时，会需要其它产品或组件的支持，比如BPM产品、规则引擎产品、服务注册产品。在比较大规模的SOA项目中，几乎总要用到上述几类产品之一或全部。但是开源的ESB肯定是无法提供如此丰富的产品线，在复杂的应用场景下，开源ESB需要与其它的产品或项目进行配合才能完成任务。</P>\n<p STYLE=\"-webkit-tap-highlight-color: transparent; box-sizing: border-box; margin: 16px 0px; padding: 0px; border: 0px; color: rgb(34, 34, 34); font-family:\" PINGFANG=\"\" SANS=\"\" MICRO=\"\" FONT-SIZE:=\"\" BACKGROUND-COLOR:=\"\">\n因此，专有的商业套件，从功能的完备性、维护、管控等角度来看，肯定是涵盖面最全的，如果一定要选择开源ESB，那么Mule或ServiceMix是可以考虑的比较成熟的选择，但是自行开发组件的工作量是必不可少。</P>\n<br /></DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Tue, 01 Sep 2020 00:19:30 +0000","feedId":7662,"bgimg":"http://s16.sinaimg.cn/mw690/001l8XD7zy7G5hFWjJJ3f&690","linkMd5":"6e00b5bb1bd68bb9979a1d7932e60575","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn5@2020_3/2020/09/06/04-25-01-769_e37cbd4ab9e445bb.webp","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s16.sinaimg.cn/mw690/001l8XD7zy7G5hFWjJJ3f&690":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn5@2020_3/2020/09/06/04-25-01-769_e37cbd4ab9e445bb.webp","https://p1-tt.byteimg.com/origin/pgc-image/daf0fa01133e4d5182e34eb4b64b6ada?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn80@2020_2/2020/09/06/04-25-05-985_e684a9e9ef3848ef.webp","https://p6-tt.byteimg.com/origin/pgc-image/98df1a96322e40ffa187281a8c90437d?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn75@2020_2/2020/09/06/04-25-06-706_5bcaeb5bc6d7a4b6.webp","https://p6-tt.byteimg.com/origin/pgc-image/229cbbc14bbd472d87560e101663d423?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn68@2020_6/2020/09/06/04-25-06-597_e1b06f239e08bb44.webp","https://p3-tt.byteimg.com/origin/pgc-image/b1ace25daff742f4862a16b66f0a68c5?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn55@2020_4/2020/09/06/04-25-04-185_0d9b5aed8304de35.webp","https://p6-tt.byteimg.com/origin/pgc-image/ccdd87a529b245ae853c90147d100afe?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn7@2020_4/2020/09/06/04-25-06-996_3ba172d8df21b700.webp","https://p1-tt.byteimg.com/origin/pgc-image/f6dbabd6c0914f97a78bca84cce01511?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn67@2020_1/2020/09/06/04-25-06-361_220c340900976c83.webp","https://p1-tt.byteimg.com/origin/pgc-image/a2f1761ea00442d3947c9fb493586e4e?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn84@2020_4/2020/09/06/04-25-04-180_40d0b1286b8780ae.webp","https://p3-tt.byteimg.com/origin/pgc-image/62c108a5fda146a3bb85ea58e92ad556?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn63@2020_3/2020/09/06/04-25-04-715_eb1b335dcf7cdce3.webp","https://p3-tt.byteimg.com/origin/pgc-image/4c240fe20d4a4cd68d7e099eae76ada7?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn63@2020_3/2020/09/06/04-25-07-191_670d542725653c6a.webp","https://p1-tt.byteimg.com/origin/pgc-image/d46c7b95325848709486de51438d585a?from=pc":null,"https://p3-tt.byteimg.com/origin/pgc-image/cb0f744d5ea347f2928b7f429b3e6e4a?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn51@2020_4/2020/09/06/04-25-04-365_c13e6348e54e4be8.webp","https://p6-tt.byteimg.com/origin/pgc-image/bbbf36c563074fcf8af0b29089fbe2dd?from=pc":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn92@2020_3/2020/09/06/04-25-10-399_0348884d4f285d21.webp","http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn96@2020_4/2020/09/06/04-25-07-613_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1599366299501},{"createdTime":"2020-09-06 12:24:59","updatedTime":"2020-09-06 12:24:59","title":"锻炼记录(200830)","link":"http://blog.sina.com.cn/s/blog_493a84550102z90a.html","description":"<div><a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7G283BzsR11\" TARGET=\"_blank\"><img SRC=\"http://s2.sinaimg.cn/mw690/001l8XD7zy7G283BzsR11&#38;690\" NAME=\"image_operate_18761598750895889\" /></A></DIV>\n<div><br /></DIV>\n<div>\n本周跑满7天，跑步总距离34.5km，配速555，明天是8月的最后一天，也就是跑完明天后自己完成了今年的连续不间断6个月跑。而且到下周末后，自己也将完成自己的1年的蛋奶素实践。</DIV>\n<div><br /></DIV>\n<div>\n本周去西昌出差，顺带在西昌邛海和湿地公园逛了下，由于住的民宿而且在梦回湿地公园边上，因此早上出门跑步很方便，从住的地方跑到青龙寺来回差不多6到7km的距离。清晨的邛海秋高气爽，空气清新，气温不到20度，已经微微有一丝凉意。一路上鸟语花香，路边的小广播还播着楞严经的佛经诵读，难得的一种惬意的感受，什么也不用去想，真正的做到放空自己。</DIV>\n<div><br /></DIV>\n<div><a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7G297KMEme6\" TARGET=\"_blank\"><img SRC=\"http://s7.sinaimg.cn/mw690/001l8XD7zy7G297KMEme6&#38;690\" NAME=\"image_operate_87011598750917726\" /></A><br />\n<br /></DIV>\n<div>\n这次去西昌，第一次走雅西高速，印象最深的就是泥巴山隧道，长度超过了10km，印象里面是自己走的最长的隧道。其次就是双螺旋隧道，自己去的时候开车没太多感觉，回程的时候特意留意了下这个隧道。其次就是经常看视频感觉雅西高速很险，但是实际开车在路上还是完全感受不到这种危险，只要不超速开仔细点，基本也没有任何难度，唯一还是要注意的就是长下坡尽量控制车速，不要频繁踩刹车，必要的话可以切换到手动挡或通过定速巡航来控制车速。</DIV>\n<div><br /></DIV>\n<div>\n自己1年的蛋奶素饮食快要结束，在这一年的时间，跑量和配速都同比下降了差不多20%左右，但是跑步的频率并没有下降。而实际这一年时间自己的体重反而增加了6斤左右，这其中两个原因，一个是晚上本身没有刻意控制饮食，其次就是不吃肉和米饭和面条的摄入量明显增加，而这些主食的热量反而很高。</DIV>\n<div><br /></DIV>\n<div>最近Gartner发布了中国2020 ICT技术成熟度曲线，如下图：</DIV>\n<div><br /></DIV>\n<div><a HREF=\"http://album.sina.com.cn/pic/001l8XD7zy7G28hZCxV77\" TARGET=\"_blank\"><img SRC=\"http://s8.sinaimg.cn/mw690/001l8XD7zy7G28hZCxV77&#38;690\" NAME=\"image_operate_80591598750920191\" /></A></DIV>\n<div><br /></DIV>\n<div>\n从这个图也可以看到，我们当前关注的DevOps，云原生，微服务，中台，容器云正好是当前技术的主流热点，也是逐步走向技术成熟的阶段。当然如果按照当前主流的万物互联的思路，即还需要加上物联网和边缘计算，AI人工智能，5G几个关键的技术储备，而这些刚好也在上图有所体现。</DIV><br /><img src=\"http://simg.sinajs.cn/blog7style/images/special/1265.gif\">&#160;","descriptionType":"text/html","publishedDate":"Sun, 30 Aug 2020 00:54:09 +0000","feedId":7662,"bgimg":"http://s2.sinaimg.cn/mw690/001l8XD7zy7G283BzsR11&690","linkMd5":"e4e27742a2dc9a5044db0f53c81daa3e","destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"author":"人月神话","articleImgCdnMap":{"http://s2.sinaimg.cn/mw690/001l8XD7zy7G283BzsR11&690":null,"http://s7.sinaimg.cn/mw690/001l8XD7zy7G297KMEme6&690":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn8@2020_3/2020/09/06/04-25-08-535_f8db4615452431a0.webp","http://s8.sinaimg.cn/mw690/001l8XD7zy7G28hZCxV77&690":null,"http://simg.sinajs.cn/blog7style/images/special/1265.gif":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn96@2020_4/2020/09/06/04-25-07-613_66e9c83d813b7958.webp"},"publishedOrCreatedDate":1599366299499}],"record":{"createdTime":"2020-09-06 12:24:59","updatedTime":"2020-09-06 12:24:59","feedId":7662,"fetchDate":"Sun, 06 Sep 2020 04:24:59 +0000","fetchMs":2070,"handleMs":3170,"totalMs":76775,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"b2be3c55cb19b5d073c0077eda58a224","hostName":"us-025*","requestId":"4c18d02c6b0f4f4ba2b77f78adaf4e99_7662","contentType":"text/xml; charset=utf-8","totalBytes":2491014,"bgimgsTotal":10,"bgimgsGithubTotal":9,"articlesImgsTotal":82,"articlesImgsGithubTotal":77,"successGithubMap":{"myreaderx8":2,"myreaderx15":3,"myreaderx7":3,"myreaderx6":3,"myreaderx16":2,"myreaderx4":3,"myreaderx10":3,"myreaderx32":3,"myreaderx33":3,"myreaderx3":3,"myreaderx11":2,"myreaderx2":3,"myreaderx12":3,"myreaderx13":3,"myreaderx1":3,"myreaderx30":3,"myreaderx31":3,"myreaderx18":3,"myreaderx19":3,"myreaderx":3,"myreaderx25":3,"myreaderx27":3,"myreaderx21":3,"myreaderx22":3,"myreaderx24":2,"myreaderx5oss":3,"myreaderx29":3},"failGithubMap":{"myreaderx14":3,"myreaderx23":2}},"feed":{"createdTime":"2020-08-25 04:33:49","updatedTime":"2020-09-01 09:22:18","id":7662,"name":"人月神话的BLOG","url":"http://blog.sina.com.cn/rss/1228571733.xml","subscriber":null,"website":null,"icon":"http://blog.sina.com.cn/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx61/cdn92@2020_4/2020/09/06/04-24-58-668_08bc756793a1bd4b.ico","description":"","weekly":null,"link":"http://blog.sina.com.cn"},"noPictureArticleList":[{"createdTime":"2020-09-06 12:26:08","updatedTime":"2020-09-06 12:26:08","id":null,"feedId":7662,"linkMd5":"6ef7634890dbcefea165a4efd34bc3d5"},{"createdTime":"2020-09-06 12:26:08","updatedTime":"2020-09-06 12:26:08","id":null,"feedId":7662,"linkMd5":"bad4bc5aeaae88a99d04d793afebeb20"},{"createdTime":"2020-09-06 12:26:08","updatedTime":"2020-09-06 12:26:08","id":null,"feedId":7662,"linkMd5":"6e00b5bb1bd68bb9979a1d7932e60575"},{"createdTime":"2020-09-06 12:26:08","updatedTime":"2020-09-06 12:26:08","id":null,"feedId":7662,"linkMd5":"e4e27742a2dc9a5044db0f53c81daa3e"}],"tmpCommonImgCdnBytes":21636,"tmpBodyImgCdnBytes":2469378,"tmpBgImgCdnBytes":0,"extra4":{"start":1599366291893,"total":0,"statList":[{"spend":4439,"msg":"获取xml内容"},{"spend":3170,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":64809,"msg":"正文链接上传到cdn"}]},"extra5":82,"extra6":82,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"http://s2.sinaimg.cn/mw690/001l8XD7zy7G283BzsR11&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1585,"convertSpendMs":11,"createdTime":"2020-09-06 12:24:59","host":"us-028*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90a.html","linkMd5ListStr":"e4e27742a2dc9a5044db0f53c81daa3e,e4e27742a2dc9a5044db0f53c81daa3e","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn10/contents/2020/09/06/04-25-01-078_a1082fb5b1b002d2.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 04:25:01 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E8F6:3910:4D26AC:B4A86A:5F546495"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599368345"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn10/contents/2020/09/06/04-25-01-078_a1082fb5b1b002d2.webp","historyStatusCode":[],"spendMs":55},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"http://s2.sinaimg.cn/mw690/001l8XD7zy7G283BzsR11&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":74,"convertSpendMs":11,"createdTime":"2020-09-06 12:25:01","host":"us-028*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90a.html","linkMd5ListStr":"e4e27742a2dc9a5044db0f53c81daa3e,e4e27742a2dc9a5044db0f53c81daa3e","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn10/contents/2020/09/06/04-25-01-166_a1082fb5b1b002d2.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 04:25:01 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E8F6:3910:4D26B3:B4AA53:5F54649D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599368345"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn10/contents/2020/09/06/04-25-01-166_a1082fb5b1b002d2.webp","historyStatusCode":[],"spendMs":54},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/d46c7b95325848709486de51438d585a?from=pc","sourceStatusCode":200,"destWidth":639,"destHeight":370,"sourceBytes":30962,"destBytes":21316,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":108,"convertSpendMs":13,"createdTime":"2020-09-06 12:25:05","host":"us-029*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90n.html","linkMd5ListStr":"6e00b5bb1bd68bb9979a1d7932e60575","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn4/contents/2020/09/06/04-25-05-120_0211562f41d9559d.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 04:25:05 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E6E2:31C2:183C93F:29CFA8B:5F5464A1"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599368346"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn4/contents/2020/09/06/04-25-05-120_0211562f41d9559d.webp","historyStatusCode":[],"spendMs":43},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.2 KB","destSize":"20.8 KB","compressRate":"68.8%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/d46c7b95325848709486de51438d585a?from=pc","sourceStatusCode":200,"destWidth":639,"destHeight":370,"sourceBytes":30962,"destBytes":21316,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":170,"convertSpendMs":12,"createdTime":"2020-09-06 12:25:05","host":"us-51*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90n.html","linkMd5ListStr":"6e00b5bb1bd68bb9979a1d7932e60575","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn4/contents/2020/09/06/04-25-05-236_0211562f41d9559d.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 04:25:05 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E406:477A:102983C:1AFCDD5:5F5464A1"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599368346"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn4/contents/2020/09/06/04-25-05-236_0211562f41d9559d.webp","historyStatusCode":[],"spendMs":102},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.2 KB","destSize":"20.8 KB","compressRate":"68.8%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/8bb0cc5093a04c75a5a5e591cde7b827?from=pc","sourceStatusCode":200,"destWidth":937,"destHeight":525,"sourceBytes":79008,"destBytes":49832,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1590,"convertSpendMs":23,"createdTime":"2020-09-06 12:25:03","host":"europe-24*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn24/contents/2020/09/06/04-25-05-131_d6085a75016a68e0.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 04:25:05 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["ADFC:B3A1:13D86FE8:17FC126B:5F54649F"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599368345"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn24/contents/2020/09/06/04-25-05-131_d6085a75016a68e0.webp","historyStatusCode":[],"spendMs":355},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"77.2 KB","destSize":"48.7 KB","compressRate":"63.1%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/8bb0cc5093a04c75a5a5e591cde7b827?from=pc","sourceStatusCode":200,"destWidth":937,"destHeight":525,"sourceBytes":79008,"destBytes":49832,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":568,"convertSpendMs":24,"createdTime":"2020-09-06 12:25:05","host":"us-55*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn24/contents/2020/09/06/04-25-06-058_d6085a75016a68e0.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 04:25:06 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E7F0:3846:878A1F:12F61DD:5F54648F"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599368345"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn24/contents/2020/09/06/04-25-06-058_d6085a75016a68e0.webp","historyStatusCode":[],"spendMs":46},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"77.2 KB","destSize":"48.7 KB","compressRate":"63.1%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/f141ca54d34c4c87b39eb382325a9c5d?from=pc","sourceStatusCode":200,"destWidth":833,"destHeight":410,"sourceBytes":31436,"destBytes":22370,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":4091,"convertSpendMs":15,"createdTime":"2020-09-06 12:25:03","host":"us-033*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90f.html","linkMd5ListStr":"6ef7634890dbcefea165a4efd34bc3d5","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn96/contents/2020/09/06/04-25-07-925_ebe160d06cf3ab34.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 04:25:07 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["AB50:311E:CD6180:1EEC19A:5F5464A0"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599368346"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn96/contents/2020/09/06/04-25-07-925_ebe160d06cf3ab34.webp","historyStatusCode":[],"spendMs":45},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.7 KB","destSize":"21.8 KB","compressRate":"71.2%"},{"code":1,"isDone":false,"source":"http://s8.sinaimg.cn/mw690/001l8XD7zy7G28hZCxV77&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":2522,"convertSpendMs":10,"createdTime":"2020-09-06 12:25:05","host":"europe-22*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90a.html","linkMd5ListStr":"e4e27742a2dc9a5044db0f53c81daa3e","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn38/contents/2020/09/06/04-25-07-846_14c0b4e937503d93.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 04:25:07 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9BB6:B506:1A130259:1F7E84A8:5F54648D"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599368345"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn38/contents/2020/09/06/04-25-07-846_14c0b4e937503d93.webp","historyStatusCode":[],"spendMs":144},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"http://s8.sinaimg.cn/mw690/001l8XD7zy7G28hZCxV77&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":229,"convertSpendMs":10,"createdTime":"2020-09-06 12:25:08","host":"europe-22*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90a.html","linkMd5ListStr":"e4e27742a2dc9a5044db0f53c81daa3e","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn38/contents/2020/09/06/04-25-08-153_14c0b4e937503d93.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 04:25:08 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["9BB6:B506:1A1302D9:1F7EAB92:5F5464A3"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599368345"],"x-ratelimit-used":["61"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn38/contents/2020/09/06/04-25-08-153_14c0b4e937503d93.webp","historyStatusCode":[],"spendMs":147},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/f141ca54d34c4c87b39eb382325a9c5d?from=pc","sourceStatusCode":200,"destWidth":833,"destHeight":410,"sourceBytes":31436,"destBytes":22370,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":5586,"convertSpendMs":18,"createdTime":"2020-09-06 12:25:08","host":"us-034*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90f.html","linkMd5ListStr":"6ef7634890dbcefea165a4efd34bc3d5","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx23/cdn96/contents/2020/09/06/04-25-14-057_ebe160d06cf3ab34.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 69189253.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 04:25:14 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["E112:4C68:627760:FCBB0F:5F5464AA"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599368346"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx23/cdn96/contents/2020/09/06/04-25-14-057_ebe160d06cf3ab34.webp","historyStatusCode":[],"spendMs":110},"base64UserPassword":null,"token":"df0b9******************************93a6e"},"githubUser":"myreaderx23","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"30.7 KB","destSize":"21.8 KB","compressRate":"71.2%"},null,null,null,null],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://europe-56.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-037.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-024.herokuapp.com/":{"failCount":1,"successCount":2,"resultList":[200,200,null]},"http://us-020.herokuapp.com/":{"failCount":1,"successCount":2,"resultList":[200,200,null]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe21.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-004.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-008.herokuapp.com/":{"failCount":2,"successCount":1,"resultList":[200,null,null]},"http://europe-22.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-016.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-029.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-018.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-24.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-021.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://s13.sinaimg.cn/mw690/001l8XD7zy7G7vwB6bi8c&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn90@2020_1/2020/09/06/04-25-01-516_4b23fe6a2f984860.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":2799,"convertSpendMs":11,"createdTime":"2020-09-06 12:24:59","host":"us-023*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c,3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"http://s16.sinaimg.cn/mw690/001l8XD7zy7G5hFWjJJ3f&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn5@2020_3/2020/09/06/04-25-01-769_e37cbd4ab9e445bb.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":3030,"convertSpendMs":22,"createdTime":"2020-09-06 12:24:59","host":"us-040*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90n.html","linkMd5ListStr":"6e00b5bb1bd68bb9979a1d7932e60575,6e00b5bb1bd68bb9979a1d7932e60575","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"http://s9.sinaimg.cn/mw690/001l8XD7zy7GbDXZLIY48&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn21@2020_3/2020/09/06/04-25-02-090_5fe50238fd2baf1b.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":3315,"convertSpendMs":9,"createdTime":"2020-09-06 12:24:59","host":"europe66*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65,7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"http://s15.sinaimg.cn/mw690/001l8XD7zy7Gddyub267e&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn14@2020_4/2020/09/06/04-25-02-251_344c7dba53733a06.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":3475,"convertSpendMs":15,"createdTime":"2020-09-06 12:24:59","host":"us-015*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z92b.html","linkMd5ListStr":"15c305f79d60cded14fbc829e720d669,15c305f79d60cded14fbc829e720d669","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"http://s4.sinaimg.cn/mw690/001l8XD7zy7G0SReQdJ43&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn94@2020_3/2020/09/06/04-25-02-345_10778d6d8c5726ac.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":3714,"convertSpendMs":10,"createdTime":"2020-09-06 12:24:59","host":"us-011*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z909.html","linkMd5ListStr":"a60b47a7adc8e9ddf3fddbcb97e9b34c,a60b47a7adc8e9ddf3fddbcb97e9b34c","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"http://s12.sinaimg.cn/mw690/001l8XD7zy7FZG6wgf9cb&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn2@2020_6/2020/09/06/04-25-02-332_0afb0bf2b4828e10.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":3618,"convertSpendMs":11,"createdTime":"2020-09-06 12:24:59","host":"europe62*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z904.html","linkMd5ListStr":"5b9b2300f518c6120323b9fe374b2fa8,5b9b2300f518c6120323b9fe374b2fa8","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"http://s13.sinaimg.cn/mw690/001l8XD7zy7G8A8l7f61c&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn97@2020_1/2020/09/06/04-25-02-426_44c9fafbcd31740b.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":3628,"convertSpendMs":10,"createdTime":"2020-09-06 12:24:59","host":"europe-24*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20,bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"http://s4.sinaimg.cn/mw690/001l8XD7zy7G3Hbujon53&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn85@2020_1/2020/09/06/04-25-02-568_a9baa0e2034a2104.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":3801,"convertSpendMs":21,"createdTime":"2020-09-06 12:24:59","host":"us-036*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90f.html","linkMd5ListStr":"6ef7634890dbcefea165a4efd34bc3d5,6ef7634890dbcefea165a4efd34bc3d5","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"http://s13.sinaimg.cn/mw690/001l8XD7zy7Ga11IHmc1c&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn18@2020_2/2020/09/06/04-25-02-989_1f382897d1f41ec2.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":4311,"convertSpendMs":18,"createdTime":"2020-09-06 12:24:59","host":"us-003*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0,2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/6431794b5b284ca2bf72c38af478462a?from=pc","sourceStatusCode":200,"destWidth":825,"destHeight":535,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn31@2020_6/2020/09/06/04-25-03-964_7be27bd5c7e8d7c8.webp","sourceBytes":39979,"destBytes":25934,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":939,"convertSpendMs":20,"createdTime":"2020-09-06 12:25:03","host":"us-033*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39 KB","destSize":"25.3 KB","compressRate":"64.9%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/57700ec5bbef4b56ac5fb39b2822e4c5?from=pc","sourceStatusCode":200,"destWidth":776,"destHeight":487,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn59@2020_3/2020/09/06/04-25-03-989_9c750d36f56c4b5a.webp","sourceBytes":56735,"destBytes":32236,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1003,"convertSpendMs":19,"createdTime":"2020-09-06 12:25:03","host":"us-033*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"55.4 KB","destSize":"31.5 KB","compressRate":"56.8%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/4dd6ae7e300d41c891668b71c0f90c24?from=pc","sourceStatusCode":200,"destWidth":704,"destHeight":428,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn55@2020_5/2020/09/06/04-25-04-181_81d72878eb27f119.webp","sourceBytes":38782,"destBytes":22896,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1136,"convertSpendMs":22,"createdTime":"2020-09-06 12:25:03","host":"us-55*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90f.html","linkMd5ListStr":"6ef7634890dbcefea165a4efd34bc3d5","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.9 KB","destSize":"22.4 KB","compressRate":"59%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/b1ace25daff742f4862a16b66f0a68c5?from=pc","sourceStatusCode":200,"destWidth":694,"destHeight":382,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn55@2020_4/2020/09/06/04-25-04-185_0d9b5aed8304de35.webp","sourceBytes":40138,"destBytes":31528,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1147,"convertSpendMs":25,"createdTime":"2020-09-06 12:25:03","host":"us-024*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90n.html","linkMd5ListStr":"6e00b5bb1bd68bb9979a1d7932e60575","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39.2 KB","destSize":"30.8 KB","compressRate":"78.5%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/3fe857bee1954f64996ce28bfee28648?from=pc","sourceStatusCode":200,"destWidth":688,"destHeight":280,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn72@2020_1/2020/09/06/04-25-04-190_efb4a6643ac8ee93.webp","sourceBytes":35971,"destBytes":26566,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1175,"convertSpendMs":10,"createdTime":"2020-09-06 12:25:03","host":"us-51*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"35.1 KB","destSize":"25.9 KB","compressRate":"73.9%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/a2f1761ea00442d3947c9fb493586e4e?from=pc","sourceStatusCode":200,"destWidth":834,"destHeight":447,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn84@2020_4/2020/09/06/04-25-04-180_40d0b1286b8780ae.webp","sourceBytes":84334,"destBytes":47352,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1181,"convertSpendMs":26,"createdTime":"2020-09-06 12:25:03","host":"us-004*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90n.html","linkMd5ListStr":"6e00b5bb1bd68bb9979a1d7932e60575","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"82.4 KB","destSize":"46.2 KB","compressRate":"56.1%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/9f7d7126946c45c7b1f5422e4a616971?from=pc","sourceStatusCode":200,"destWidth":841,"destHeight":586,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn79@2020_1/2020/09/06/04-25-04-245_fbb256b46f798553.webp","sourceBytes":50132,"destBytes":34964,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1187,"convertSpendMs":31,"createdTime":"2020-09-06 12:25:03","host":"us-016*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49 KB","destSize":"34.1 KB","compressRate":"69.7%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/0140607e90c44ce58f3073d5af0effa9?from=pc","sourceStatusCode":200,"destWidth":923,"destHeight":650,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn39@2020_1/2020/09/06/04-25-04-224_410d20cb83f4d9f6.webp","sourceBytes":78600,"destBytes":39882,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1223,"convertSpendMs":20,"createdTime":"2020-09-06 12:25:03","host":"us-029*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"76.8 KB","destSize":"38.9 KB","compressRate":"50.7%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/a68fc4def9b64b0d82236185ae3ee2a7?from=pc","sourceStatusCode":200,"destWidth":595,"destHeight":366,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn19@2020_5/2020/09/06/04-25-04-261_c5c905759c2baae4.webp","sourceBytes":35488,"destBytes":24840,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1300,"convertSpendMs":17,"createdTime":"2020-09-06 12:25:03","host":"us-024*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"34.7 KB","destSize":"24.3 KB","compressRate":"70%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/e7a2f493c0ee42219c28f240f1111ce5?from=pc","sourceStatusCode":200,"destWidth":768,"destHeight":361,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn47@2020_6/2020/09/06/04-25-04-314_a4f0df0549cf9baa.webp","sourceBytes":33918,"destBytes":23694,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1320,"convertSpendMs":30,"createdTime":"2020-09-06 12:25:03","host":"us-004*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.1 KB","destSize":"23.1 KB","compressRate":"69.9%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/5347ba3e58524b2ca3ad694ecb518af1?from=pc","sourceStatusCode":200,"destWidth":659,"destHeight":477,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn60@2020_4/2020/09/06/04-25-04-212_01f9baf8fa011f4b.webp","sourceBytes":52007,"destBytes":39892,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1383,"convertSpendMs":40,"createdTime":"2020-09-06 12:25:03","host":"us-012*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.8 KB","destSize":"39 KB","compressRate":"76.7%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/ac7bf64a73cb48eaa11856f3d0bb3f7f?from=pc","sourceStatusCode":200,"destWidth":845,"destHeight":477,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn4@2020_1/2020/09/06/04-25-04-428_9f1f8da717112a41.webp","sourceBytes":55140,"destBytes":43044,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1463,"convertSpendMs":27,"createdTime":"2020-09-06 12:25:03","host":"us-008*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90f.html","linkMd5ListStr":"6ef7634890dbcefea165a4efd34bc3d5","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"53.8 KB","destSize":"42 KB","compressRate":"78.1%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/cb0f744d5ea347f2928b7f429b3e6e4a?from=pc","sourceStatusCode":200,"destWidth":629,"destHeight":276,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn51@2020_4/2020/09/06/04-25-04-365_c13e6348e54e4be8.webp","sourceBytes":28731,"destBytes":25336,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1505,"convertSpendMs":11,"createdTime":"2020-09-06 12:25:03","host":"us-037*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90n.html","linkMd5ListStr":"6e00b5bb1bd68bb9979a1d7932e60575","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.1 KB","destSize":"24.7 KB","compressRate":"88.2%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/62c108a5fda146a3bb85ea58e92ad556?from=pc","sourceStatusCode":200,"destWidth":647,"destHeight":407,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn63@2020_3/2020/09/06/04-25-04-715_eb1b335dcf7cdce3.webp","sourceBytes":32039,"destBytes":24288,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1747,"convertSpendMs":21,"createdTime":"2020-09-06 12:25:03","host":"europe-25*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90n.html","linkMd5ListStr":"6e00b5bb1bd68bb9979a1d7932e60575","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.3 KB","destSize":"23.7 KB","compressRate":"75.8%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/f02c82b35b8b48818cd5c1aaf0c2ff2d?from=pc","sourceStatusCode":200,"destWidth":754,"destHeight":453,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn43@2020_1/2020/09/06/04-25-04-807_52fc504cc1721b1c.webp","sourceBytes":62605,"destBytes":49642,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1893,"convertSpendMs":31,"createdTime":"2020-09-06 12:25:03","host":"us-016*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"61.1 KB","destSize":"48.5 KB","compressRate":"79.3%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/39b44d4361cd43bd85767342ac53cd9f?from=pc","sourceStatusCode":200,"destWidth":692,"destHeight":329,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn47@2020_2/2020/09/06/04-25-04-856_9294a67ca3fbd470.webp","sourceBytes":57717,"destBytes":36152,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1937,"convertSpendMs":13,"createdTime":"2020-09-06 12:25:03","host":"europe-59*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90f.html","linkMd5ListStr":"6ef7634890dbcefea165a4efd34bc3d5","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56.4 KB","destSize":"35.3 KB","compressRate":"62.6%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/ccc666542ae04a3d9cf251c3b6e2de5e?from=pc","sourceStatusCode":200,"destWidth":813,"destHeight":443,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn7@2020_6/2020/09/06/04-25-05-147_b236deda0d4c1658.webp","sourceBytes":21800,"destBytes":14292,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":930,"convertSpendMs":29,"createdTime":"2020-09-06 12:25:05","host":"us-016*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.3 KB","destSize":"14 KB","compressRate":"65.6%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/02bbe8f70ece46f4a0892c63b01f64bf?from=pc","sourceStatusCode":200,"destWidth":611,"destHeight":461,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn12@2020_2/2020/09/06/04-25-05-153_9b15974ef2643910.webp","sourceBytes":38487,"destBytes":26436,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":920,"convertSpendMs":19,"createdTime":"2020-09-06 12:25:05","host":"us-004*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90f.html","linkMd5ListStr":"6ef7634890dbcefea165a4efd34bc3d5","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.6 KB","destSize":"25.8 KB","compressRate":"68.7%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/dea352ead6184d6fbf3b6a15f73fa1eb?from=pc","sourceStatusCode":200,"destWidth":774,"destHeight":395,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn26@2020_2/2020/09/06/04-25-04-738_b22434a36c015e66.webp","sourceBytes":72730,"destBytes":54490,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":2011,"convertSpendMs":20,"createdTime":"2020-09-06 12:25:03","host":"europe-25*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"71 KB","destSize":"53.2 KB","compressRate":"74.9%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/e617fe22c7eb48ac8472b1fc652b7655?from=pc","sourceStatusCode":200,"destWidth":863,"destHeight":460,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn100@2020_2/2020/09/06/04-25-05-131_5372be4b0e4ac9cf.webp","sourceBytes":75579,"destBytes":43368,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1024,"convertSpendMs":19,"createdTime":"2020-09-06 12:25:05","host":"us-51*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"73.8 KB","destSize":"42.4 KB","compressRate":"57.4%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/3d7c63be716941c4aa3a61858f37a1b8?from=pc","sourceStatusCode":200,"destWidth":796,"destHeight":893,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn11@2020_2/2020/09/06/04-25-04-835_973c4cc71902e1fe.webp","sourceBytes":86938,"destBytes":64366,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":2166,"convertSpendMs":37,"createdTime":"2020-09-06 12:25:03","host":"europe-59*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90f.html","linkMd5ListStr":"6ef7634890dbcefea165a4efd34bc3d5","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"84.9 KB","destSize":"62.9 KB","compressRate":"74%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/be111f4a7f2745ce8a5a25a3ccd3dcba?from=pc","sourceStatusCode":200,"destWidth":796,"destHeight":237,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn27@2020_2/2020/09/06/04-25-05-536_4369ccffdaf0ee9b.webp","sourceBytes":33085,"destBytes":21244,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":886,"convertSpendMs":10,"createdTime":"2020-09-06 12:25:05","host":"us-55*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90f.html","linkMd5ListStr":"6ef7634890dbcefea165a4efd34bc3d5","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.3 KB","destSize":"20.7 KB","compressRate":"64.2%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/3a8c5a9c51584a3aa61e6b9339c01ffd?from=pc","sourceStatusCode":200,"destWidth":759,"destHeight":438,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn63@2020_4/2020/09/06/04-25-05-374_4cb9d9a560ead854.webp","sourceBytes":300702,"destBytes":36026,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":2566,"convertSpendMs":21,"createdTime":"2020-09-06 12:25:03","host":"us-020*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z904.html","linkMd5ListStr":"5b9b2300f518c6120323b9fe374b2fa8","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"293.7 KB","destSize":"35.2 KB","compressRate":"12%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/c38629a718eb404eb6b6e72e6265cb92?from=pc","sourceStatusCode":200,"destWidth":739,"destHeight":490,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn88@2020_6/2020/09/06/04-25-05-561_24c2d00b9dacba91.webp","sourceBytes":336660,"destBytes":39930,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1624,"convertSpendMs":134,"createdTime":"2020-09-06 12:25:04","host":"us-012*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z904.html","linkMd5ListStr":"5b9b2300f518c6120323b9fe374b2fa8","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"328.8 KB","destSize":"39 KB","compressRate":"11.9%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/2026b1fb9e994342a9bab7ed68cd7702?from=pc","sourceStatusCode":200,"destWidth":727,"destHeight":491,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn33@2020_1/2020/09/06/04-25-05-797_af6280131296234c.webp","sourceBytes":58598,"destBytes":40060,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1275,"convertSpendMs":18,"createdTime":"2020-09-06 12:25:05","host":"us-009*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"57.2 KB","destSize":"39.1 KB","compressRate":"68.4%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/70fdf12f667f44e5b1adf116938c1390?from=pc","sourceStatusCode":200,"destWidth":1021,"destHeight":335,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn25@2020_5/2020/09/06/04-25-05-732_5092859e5a7b8543.webp","sourceBytes":54505,"destBytes":45164,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1427,"convertSpendMs":19,"createdTime":"2020-09-06 12:25:05","host":"us-034*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z904.html","linkMd5ListStr":"5b9b2300f518c6120323b9fe374b2fa8","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"53.2 KB","destSize":"44.1 KB","compressRate":"82.9%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/daf0fa01133e4d5182e34eb4b64b6ada?from=pc","sourceStatusCode":200,"destWidth":697,"destHeight":412,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn80@2020_2/2020/09/06/04-25-05-985_e684a9e9ef3848ef.webp","sourceBytes":52821,"destBytes":39434,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":2968,"convertSpendMs":13,"createdTime":"2020-09-06 12:25:03","host":"us-037*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90n.html","linkMd5ListStr":"6e00b5bb1bd68bb9979a1d7932e60575","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"51.6 KB","destSize":"38.5 KB","compressRate":"74.7%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/f6dbabd6c0914f97a78bca84cce01511?from=pc","sourceStatusCode":200,"destWidth":696,"destHeight":322,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn67@2020_1/2020/09/06/04-25-06-361_220c340900976c83.webp","sourceBytes":31741,"destBytes":19976,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1162,"convertSpendMs":14,"createdTime":"2020-09-06 12:25:06","host":"us-53*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90n.html","linkMd5ListStr":"6e00b5bb1bd68bb9979a1d7932e60575","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31 KB","destSize":"19.5 KB","compressRate":"62.9%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/86de56265f9344c4a9c4b84ae2acfe1a?from=pc","sourceStatusCode":200,"destWidth":726,"destHeight":398,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn55@2020_3/2020/09/06/04-25-06-286_a0b3ebffd799cc29.webp","sourceBytes":61941,"destBytes":41894,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1236,"convertSpendMs":16,"createdTime":"2020-09-06 12:25:05","host":"us-014*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90f.html","linkMd5ListStr":"6ef7634890dbcefea165a4efd34bc3d5","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"60.5 KB","destSize":"40.9 KB","compressRate":"67.6%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/dfic-imagehandler/a5935c6c-5f91-4418-8b94-261b2210c094?from=pc","sourceStatusCode":200,"destWidth":1023,"destHeight":682,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn71@2020_6/2020/09/06/04-25-06-486_f196ad20d63ba639.webp","sourceBytes":140274,"destBytes":51620,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1320,"convertSpendMs":54,"createdTime":"2020-09-06 12:25:06","host":"us-031*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"137 KB","destSize":"50.4 KB","compressRate":"36.8%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/b7b4dfc494cb448a9d98563c25df9b08?from=pc","sourceStatusCode":200,"destWidth":755,"destHeight":440,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn79@2020_4/2020/09/06/04-25-06-536_5c4a49398dbf927a.webp","sourceBytes":77746,"destBytes":73204,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1210,"convertSpendMs":43,"createdTime":"2020-09-06 12:25:06","host":"us-006*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"75.9 KB","destSize":"71.5 KB","compressRate":"94.2%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/110c115668fc4a9abf8907c16febe725?from=pc","sourceStatusCode":200,"destWidth":676,"destHeight":505,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn48@2020_3/2020/09/06/04-25-06-553_2d362c47db18256f.webp","sourceBytes":60158,"destBytes":50810,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1217,"convertSpendMs":18,"createdTime":"2020-09-06 12:25:06","host":"us-039*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"58.7 KB","destSize":"49.6 KB","compressRate":"84.5%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/b72d0fbe1b9f42e4ac7ddbcea50aa3ac?from=pc","sourceStatusCode":200,"destWidth":773,"destHeight":472,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn32@2020_5/2020/09/06/04-25-06-387_6c5b5abd547cdd81.webp","sourceBytes":60766,"destBytes":42144,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":3599,"convertSpendMs":23,"createdTime":"2020-09-06 12:25:03","host":"europe63*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.3 KB","destSize":"41.2 KB","compressRate":"69.4%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/17599624bc63499c8a20ca796356f79b?from=pc","sourceStatusCode":200,"destWidth":728,"destHeight":400,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn21@2020_4/2020/09/06/04-25-06-541_952279c3da4c82d0.webp","sourceBytes":42744,"destBytes":29296,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":2309,"convertSpendMs":16,"createdTime":"2020-09-06 12:25:05","host":"europe-56*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"41.7 KB","destSize":"28.6 KB","compressRate":"68.5%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/55957de9094446b1bc9ede8e1a665b6a?from=pc","sourceStatusCode":200,"destWidth":878,"destHeight":549,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn43@2020_1/2020/09/06/04-25-06-605_e1dfe6a7d1644a66.webp","sourceBytes":44175,"destBytes":29124,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":3645,"convertSpendMs":21,"createdTime":"2020-09-06 12:25:03","host":"europe21*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43.1 KB","destSize":"28.4 KB","compressRate":"65.9%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/98df1a96322e40ffa187281a8c90437d?from=pc","sourceStatusCode":200,"destWidth":689,"destHeight":474,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn75@2020_2/2020/09/06/04-25-06-706_5bcaeb5bc6d7a4b6.webp","sourceBytes":41142,"destBytes":28128,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":3773,"convertSpendMs":29,"createdTime":"2020-09-06 12:25:03","host":"europe-59*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90n.html","linkMd5ListStr":"6e00b5bb1bd68bb9979a1d7932e60575","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"40.2 KB","destSize":"27.5 KB","compressRate":"68.4%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/22a6e32ba7734ff8a00bb312c96272e5?from=pc","sourceStatusCode":200,"destWidth":772,"destHeight":422,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn96@2020_2/2020/09/06/04-25-06-726_0d85a82aee78c330.webp","sourceBytes":40041,"destBytes":28226,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":2779,"convertSpendMs":15,"createdTime":"2020-09-06 12:25:05","host":"europe63*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"39.1 KB","destSize":"27.6 KB","compressRate":"70.5%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/229cbbc14bbd472d87560e101663d423?from=pc","sourceStatusCode":200,"destWidth":698,"destHeight":505,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn68@2020_6/2020/09/06/04-25-06-597_e1b06f239e08bb44.webp","sourceBytes":44843,"destBytes":31590,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":3945,"convertSpendMs":18,"createdTime":"2020-09-06 12:25:03","host":"europe63*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90n.html","linkMd5ListStr":"6e00b5bb1bd68bb9979a1d7932e60575","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"43.8 KB","destSize":"30.8 KB","compressRate":"70.4%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/8e0ae80af1154e51af260cf032a23804?from=pc","sourceStatusCode":200,"destWidth":673,"destHeight":445,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn72@2020_2/2020/09/06/04-25-06-919_0815adc5db68d35c.webp","sourceBytes":38144,"destBytes":30640,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":3990,"convertSpendMs":15,"createdTime":"2020-09-06 12:25:03","host":"europe21*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.2 KB","destSize":"29.9 KB","compressRate":"80.3%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/6a36f6bc53eb4ea795e029f2bb4d73c8?from=pc","sourceStatusCode":200,"destWidth":760,"destHeight":445,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn91@2020_6/2020/09/06/04-25-07-244_9a764fc4f229ee14.webp","sourceBytes":26887,"destBytes":19008,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1609,"convertSpendMs":15,"createdTime":"2020-09-06 12:25:06","host":"us-035*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"26.3 KB","destSize":"18.6 KB","compressRate":"70.7%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/58e38994e58949aa8cdf1eef35cfa832?from=pc","sourceStatusCode":200,"destWidth":730,"destHeight":389,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn42@2020_3/2020/09/06/04-25-07-105_e6dc7c1a9734a1b1.webp","sourceBytes":37391,"destBytes":27622,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":2683,"convertSpendMs":14,"createdTime":"2020-09-06 12:25:05","host":"europe-60*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.5 KB","destSize":"27 KB","compressRate":"73.9%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/d5d14875108e4da4ae3dfd0f2080400a?from=pc","sourceStatusCode":200,"destWidth":727,"destHeight":438,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn51@2020_4/2020/09/06/04-25-07-018_7550edda72c34652.webp","sourceBytes":39827,"destBytes":26704,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":4236,"convertSpendMs":14,"createdTime":"2020-09-06 12:25:03","host":"europe67*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.9 KB","destSize":"26.1 KB","compressRate":"67%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/d626e8284f5d4a4aaacead7a25043847?from=pc","sourceStatusCode":200,"destWidth":760,"destHeight":535,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn16@2020_2/2020/09/06/04-25-06-995_076db7b5126438b9.webp","sourceBytes":77282,"destBytes":64802,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":3007,"convertSpendMs":23,"createdTime":"2020-09-06 12:25:05","host":"europe67*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"75.5 KB","destSize":"63.3 KB","compressRate":"83.9%"},{"code":1,"isDone":false,"source":"http://simg.sinajs.cn/blog7style/images/special/1265.gif","sourceStatusCode":200,"destWidth":20,"destHeight":12,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn96@2020_4/2020/09/06/04-25-07-613_66e9c83d813b7958.webp","sourceBytes":2095,"destBytes":2844,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1751,"convertSpendMs":6,"createdTime":"2020-09-06 12:25:06","host":"us-022*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z92b.html","linkMd5ListStr":"a60b47a7adc8e9ddf3fddbcb97e9b34c,2cefd40cff375855dea828eefa1194b0,3b7d142d5e96c3a26cb01ce30cb9df2c,6ef7634890dbcefea165a4efd34bc3d5,bad4bc5aeaae88a99d04d793afebeb20,7f43f3fc4b8cd82e267e2e8effe1ba65,5b9b2300f518c6120323b9fe374b2fa8,e4e27742a2dc9a5044db0f53c81daa3e,6e00b5bb1bd68bb9979a1d7932e60575,15c305f79d60cded14fbc829e720d669","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2 KB","destSize":"2.8 KB","compressRate":"135.8%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/54c0e55043084186bda685148092871e?from=pc","sourceStatusCode":200,"destWidth":704,"destHeight":397,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn59@2020_2/2020/09/06/04-25-07-589_a8b3d37b0e8eb559.webp","sourceBytes":158608,"destBytes":23002,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":2372,"convertSpendMs":46,"createdTime":"2020-09-06 12:25:06","host":"us-002*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z904.html","linkMd5ListStr":"5b9b2300f518c6120323b9fe374b2fa8","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"154.9 KB","destSize":"22.5 KB","compressRate":"14.5%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/ccdd87a529b245ae853c90147d100afe?from=pc","sourceStatusCode":200,"destWidth":695,"destHeight":432,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn7@2020_4/2020/09/06/04-25-06-996_3ba172d8df21b700.webp","sourceBytes":48371,"destBytes":41182,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":4398,"convertSpendMs":17,"createdTime":"2020-09-06 12:25:03","host":"europe21*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90n.html","linkMd5ListStr":"6e00b5bb1bd68bb9979a1d7932e60575","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"47.2 KB","destSize":"40.2 KB","compressRate":"85.1%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/a921c88444d14b35963cb7ae101d3220?from=pc","sourceStatusCode":200,"destWidth":706,"destHeight":335,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn88@2020_2/2020/09/06/04-25-07-192_636c320e27f3928e.webp","sourceBytes":29222,"destBytes":25448,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":4400,"convertSpendMs":13,"createdTime":"2020-09-06 12:25:03","host":"europe67*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"28.5 KB","destSize":"24.9 KB","compressRate":"87.1%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/4c240fe20d4a4cd68d7e099eae76ada7?from=pc","sourceStatusCode":200,"destWidth":928,"destHeight":523,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn63@2020_3/2020/09/06/04-25-07-191_670d542725653c6a.webp","sourceBytes":63944,"destBytes":40738,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":2288,"convertSpendMs":21,"createdTime":"2020-09-06 12:25:06","host":"europe65*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90n.html","linkMd5ListStr":"6e00b5bb1bd68bb9979a1d7932e60575","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"62.4 KB","destSize":"39.8 KB","compressRate":"63.7%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/1e3b05c456fc4053a4ea5beba7be1e5f?from=pc","sourceStatusCode":200,"destWidth":826,"destHeight":424,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn83@2020_2/2020/09/06/04-25-06-929_4811de2fac73dde5.webp","sourceBytes":22250,"destBytes":14848,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1731,"convertSpendMs":22,"createdTime":"2020-09-06 12:25:06","host":"europe69*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"21.7 KB","destSize":"14.5 KB","compressRate":"66.7%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/e36b0377617b4770b5d8abddd8700b83?from=pc","sourceStatusCode":200,"destWidth":595,"destHeight":449,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn88@2020_1/2020/09/06/04-25-07-412_200b07d9c992e0aa.webp","sourceBytes":34160,"destBytes":23794,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1883,"convertSpendMs":13,"createdTime":"2020-09-06 12:25:06","host":"europe-57*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90f.html","linkMd5ListStr":"6ef7634890dbcefea165a4efd34bc3d5","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"33.4 KB","destSize":"23.2 KB","compressRate":"69.7%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/fdedfb82d5d149b5a5b97af548203931?from=pc","sourceStatusCode":200,"destWidth":946,"destHeight":580,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn100@2020_2/2020/09/06/04-25-07-744_6714594fda761184.webp","sourceBytes":87111,"destBytes":44928,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1996,"convertSpendMs":20,"createdTime":"2020-09-06 12:25:06","host":"us-010*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z909.html","linkMd5ListStr":"a60b47a7adc8e9ddf3fddbcb97e9b34c","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"85.1 KB","destSize":"43.9 KB","compressRate":"51.6%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/379398d6b1ec48119aa4695cdea28b3a?from=pc","sourceStatusCode":200,"destWidth":706,"destHeight":518,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn35@2020_3/2020/09/06/04-25-07-809_4cc3e3b8f4e7affd.webp","sourceBytes":47801,"destBytes":32560,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":4785,"convertSpendMs":24,"createdTime":"2020-09-06 12:25:03","host":"us-51*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.7 KB","destSize":"31.8 KB","compressRate":"68.1%"},{"code":1,"isDone":false,"source":"https://p1-tt.byteimg.com/origin/pgc-image/ad271e1645d447219aab45aefaf0e313?from=pc","sourceStatusCode":200,"destWidth":737,"destHeight":416,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn3@2020_6/2020/09/06/04-25-07-652_b05f9a08d45f270b.webp","sourceBytes":26055,"destBytes":24484,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1758,"convertSpendMs":11,"createdTime":"2020-09-06 12:25:06","host":"europe-23*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z904.html","linkMd5ListStr":"5b9b2300f518c6120323b9fe374b2fa8","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"25.4 KB","destSize":"23.9 KB","compressRate":"94%"},{"code":1,"isDone":false,"source":"https://p3-tt.byteimg.com/origin/pgc-image/ecd81c4c8f634ed38f763d3baeb163bc?from=pc","sourceStatusCode":200,"destWidth":978,"destHeight":519,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn16@2020_6/2020/09/06/04-25-07-982_d5ef342edcabfe22.webp","sourceBytes":65063,"destBytes":46992,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":1461,"convertSpendMs":48,"createdTime":"2020-09-06 12:25:07","host":"us-027*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"63.5 KB","destSize":"45.9 KB","compressRate":"72.2%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/253326d310074ffdb362154d742acf66?from=pc","sourceStatusCode":200,"destWidth":823,"destHeight":501,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn91@2020_2/2020/09/06/04-25-07-729_9b144576c01ae445.webp","sourceBytes":64936,"destBytes":41144,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":3934,"convertSpendMs":24,"createdTime":"2020-09-06 12:25:04","host":"europe-25*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90f.html","linkMd5ListStr":"6ef7634890dbcefea165a4efd34bc3d5","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"63.4 KB","destSize":"40.2 KB","compressRate":"63.4%"},{"code":1,"isDone":false,"source":"http://s7.sinaimg.cn/mw690/001l8XD7zy7G297KMEme6&690","sourceStatusCode":200,"destWidth":360,"destHeight":360,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn8@2020_3/2020/09/06/04-25-08-535_f8db4615452431a0.webp","sourceBytes":7092,"destBytes":2404,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":2113,"convertSpendMs":9,"createdTime":"2020-09-06 12:25:07","host":"europe61*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90a.html","linkMd5ListStr":"e4e27742a2dc9a5044db0f53c81daa3e","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"6.9 KB","destSize":"2.3 KB","compressRate":"33.9%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/7acaebdde3d04ba1878a5f3b71a5151c?from=pc","sourceStatusCode":200,"destWidth":754,"destHeight":462,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn16@2020_5/2020/09/06/04-25-09-317_3972f180fa5a23e9.webp","sourceBytes":39062,"destBytes":30474,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":6257,"convertSpendMs":16,"createdTime":"2020-09-06 12:25:03","host":"us-037*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"38.1 KB","destSize":"29.8 KB","compressRate":"78%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/f955e5f5396b415490f94a0e3b12acf6?from=pc","sourceStatusCode":200,"destWidth":758,"destHeight":542,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn75@2020_2/2020/09/06/04-25-09-770_5c4ae71ee48de6fa.webp","sourceBytes":33374,"destBytes":25850,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":4524,"convertSpendMs":17,"createdTime":"2020-09-06 12:25:06","host":"us-018*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.6 KB","destSize":"25.2 KB","compressRate":"77.5%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/5df74eccf37d4fb3bee77331c6905750?from=pc","sourceStatusCode":200,"destWidth":768,"destHeight":510,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn76@2020_6/2020/09/06/04-25-09-829_1f5e09d257b0cf65.webp","sourceBytes":45829,"destBytes":32050,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":6773,"convertSpendMs":28,"createdTime":"2020-09-06 12:25:03","host":"us-029*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z909.html","linkMd5ListStr":"a60b47a7adc8e9ddf3fddbcb97e9b34c","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"44.8 KB","destSize":"31.3 KB","compressRate":"69.9%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/e6ac21c4caa8436e9ce6b239553cacd7?from=pc","sourceStatusCode":200,"destWidth":772,"destHeight":385,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn51@2020_6/2020/09/06/04-25-10-429_78a780c8f18d35d1.webp","sourceBytes":38526,"destBytes":27318,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":5475,"convertSpendMs":15,"createdTime":"2020-09-06 12:25:05","host":"us-027*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z904.html","linkMd5ListStr":"5b9b2300f518c6120323b9fe374b2fa8","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"37.6 KB","destSize":"26.7 KB","compressRate":"70.9%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/bbbf36c563074fcf8af0b29089fbe2dd?from=pc","sourceStatusCode":200,"destWidth":693,"destHeight":889,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn92@2020_3/2020/09/06/04-25-10-399_0348884d4f285d21.webp","sourceBytes":102957,"destBytes":83414,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":7469,"convertSpendMs":34,"createdTime":"2020-09-06 12:25:03","host":"us-55*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z90n.html","linkMd5ListStr":"6e00b5bb1bd68bb9979a1d7932e60575","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"100.5 KB","destSize":"81.5 KB","compressRate":"81%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/6625a5c80d024cd0b7627c7ace1ab5b0?from=pc","sourceStatusCode":200,"destWidth":718,"destHeight":486,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn30@2020_6/2020/09/06/04-25-10-557_23bbe867a5c7ace8.webp","sourceBytes":65615,"destBytes":56834,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":6154,"convertSpendMs":39,"createdTime":"2020-09-06 12:25:05","host":"us-021*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"64.1 KB","destSize":"55.5 KB","compressRate":"86.6%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/dfic-imagehandler/85321af1-bb48-4233-93ce-a229f3bf5fb8?from=pc","sourceStatusCode":200,"destWidth":1023,"destHeight":724,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn35@2020_4/2020/09/06/04-25-10-323_c72df8cd600f3ea5.webp","sourceBytes":219842,"destBytes":116472,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":7567,"convertSpendMs":34,"createdTime":"2020-09-06 12:25:03","host":"us-020*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91e.html","linkMd5ListStr":"bad4bc5aeaae88a99d04d793afebeb20","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"214.7 KB","destSize":"113.7 KB","compressRate":"53%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/e23395a1be0044c39b238acfb9732f59?from=pc","sourceStatusCode":200,"destWidth":849,"destHeight":478,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn12@2020_6/2020/09/06/04-25-11-705_227f6c36073af67a.webp","sourceBytes":72544,"destBytes":57388,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":5363,"convertSpendMs":27,"createdTime":"2020-09-06 12:25:07","host":"us-039*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z909.html","linkMd5ListStr":"a60b47a7adc8e9ddf3fddbcb97e9b34c","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"70.8 KB","destSize":"56 KB","compressRate":"79.1%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/5a394bd8ddb24a168d655b1c3275a47e?from=pc","sourceStatusCode":200,"destWidth":776,"destHeight":462,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn39@2020_5/2020/09/06/04-26-05-547_05ddd80ba8af9614.webp","sourceBytes":51055,"destBytes":29388,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":2504,"convertSpendMs":30,"createdTime":"2020-09-06 12:26:04","host":"europe63*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"49.9 KB","destSize":"28.7 KB","compressRate":"57.6%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/3f3a80375e924262ab045dd99d8c661c?from=pc","sourceStatusCode":200,"destWidth":841,"destHeight":570,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn99@2020_3/2020/09/06/04-26-05-920_b2be74cf6f19637c.webp","sourceBytes":37137,"destBytes":27294,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":2775,"convertSpendMs":25,"createdTime":"2020-09-06 12:26:03","host":"us-021*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z923.html","linkMd5ListStr":"7f43f3fc4b8cd82e267e2e8effe1ba65","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"36.3 KB","destSize":"26.7 KB","compressRate":"73.5%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/1670d8b39d7949209cf1ff101b6e1bad?from=pc","sourceStatusCode":200,"destWidth":767,"destHeight":639,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn84@2020_2/2020/09/06/04-26-06-606_fe12f16024b54ce7.webp","sourceBytes":57345,"destBytes":40092,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":3525,"convertSpendMs":22,"createdTime":"2020-09-06 12:26:04","host":"europe-56*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z91o.html","linkMd5ListStr":"2cefd40cff375855dea828eefa1194b0","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"56 KB","destSize":"39.2 KB","compressRate":"69.9%"},{"code":1,"isDone":false,"source":"https://p6-tt.byteimg.com/origin/pgc-image/db670ce7ff054fc08058a1e34695b8a5?from=pc","sourceStatusCode":200,"destWidth":775,"destHeight":477,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn67@2020_6/2020/09/06/04-26-07-838_2a9f3513dac2976a.webp","sourceBytes":47922,"destBytes":30592,"targetWebpQuality":75,"feedId":7662,"totalSpendMs":4680,"convertSpendMs":27,"createdTime":"2020-09-06 12:26:03","host":"us-002*","referer":"http://blog.sina.com.cn/s/blog_493a84550102z918.html","linkMd5ListStr":"3b7d142d5e96c3a26cb01ce30cb9df2c","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"46.8 KB","destSize":"29.9 KB","compressRate":"63.8%"}],"successGithubMap":{"myreaderx8":2,"myreaderx15":3,"myreaderx7":3,"myreaderx6":3,"myreaderx16":2,"myreaderx4":3,"myreaderx10":3,"myreaderx32":3,"myreaderx33":3,"myreaderx3":3,"myreaderx11":2,"myreaderx2":3,"myreaderx12":3,"myreaderx13":3,"myreaderx1":3,"myreaderx30":3,"myreaderx31":3,"myreaderx18":3,"myreaderx19":3,"myreaderx":3,"myreaderx25":3,"myreaderx27":3,"myreaderx21":3,"myreaderx22":3,"myreaderx24":2,"myreaderx5oss":3,"myreaderx29":3},"failGithubMap":{"myreaderx14":3,"myreaderx23":2}}