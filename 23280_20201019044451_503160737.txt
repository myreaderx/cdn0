{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-19 12:44:35","updatedTime":"2020-10-19 12:44:35","title":"再见，可视化！你好，Pandas！","link":"https://segmentfault.com/a/1190000037492026","description":"<p><img src=\"https://segmentfault.com/img/bVcHtyf\" alt=\"image\" title=\"image\" /></p>\n<blockquote>\n 来源：\n <a href=\"https://mp.weixin.qq.com/s/QKGi7bO3mpCWmsFEwuFFTw\" rel=\"nofollow noreferrer\">Python数据科学</a>\n <br>作者：东哥起飞</br>\n</blockquote>\n<p>用<code>Python</code>做数据分析离不开<code>pandas</code>，<code>pnadas</code>更多的承载着处理和变换数据的角色，<code>pands</code>中也内置了可视化的操作，但效果很糙。</p>\n<p>因此，大家在用Python做数据分析时，正常的做法是用先<code>pandas</code>先进行数据处理，然后再用<code>Matplotlib</code>、<code>Seaborn</code>、<code>Plotly</code>、<code>Bokeh</code>等对<code>dataframe</code>或者<code>series</code>进行可视化操作。</p>\n<p>但是说实话，每个可视化包都有自己独特的方法和函数，经常忘，这是让我一直很头疼的地方。</p>\n<p>好消息来了！从最新的<code>pandas</code>版本0.25.3开始，不再需要上面的操作了，数据处理和可视化完全可以用<code>pandas</code>一个就全部搞定。</p>\n<p><code>pandas</code>现在可以使用<code>Plotly</code>、<code>Bokeh</code>作为可视化的backend，直接实现交互性操作，无需再单独使用可视化包了。</p>\n<p>下面我们一起看看如何使用。</p>\n<h2>1. 激活backend</h2>\n<p>在<code>import</code>了<code>pandas</code>之后，直接使用下面这段代码激活backend，比如下面要激活<code>plotly</code>。</p>\n<pre><code class=\"python\">pd.options.plotting.backend = 'plotly'</code></pre>\n<p>目前，<code>pandas</code>的backend支持以下几个可视化包。</p>\n<ul>\n <li>Plotly</li>\n <li>Holoviews</li>\n <li>Matplotlib</li>\n <li>Pandas_bokeh</li>\n <li>Hyplot</li>\n</ul>\n<h2>2. Plotly backend</h2>\n<p><code>Plotly</code>的好处是，它基于<code>Javascript</code>版本的库写出来的，因此生成的Web可视化图表，可以显示为<code>HTML</code>文件或嵌入基于Python的Web应用程序中。</p>\n<p>下面看下如何用<code>plotly</code>作为<code>pandas</code>的backend进行可视化。</p>\n<p>如果还没安装<code>Plotly</code>，则需要安装它<code>pip intsall plotly</code>。如果是在<code>Jupyterlab</code>中使用<code>Plotly</code>，那还需要执行几个额外的安装步骤来显示可视化效果。</p>\n<p>首先，安装<code>IPywidgets</code>。</p>\n<pre><code class=\"python\">pip install jupyterlab \"ipywidgets&gt;=7.5\"</code></pre>\n<p>然后运行此命令以安装<code>Plotly</code>扩展。</p>\n<pre><code class=\"python\">jupyter labextension install jupyterlab-plotly@4.8.1</code></pre>\n<p>示例选自openml.org的的数据集，链接如下：</p>\n<blockquote>\n 数据链接：\n <a href=\"https://www.openml.org/d/187\" rel=\"nofollow noreferrer\">https://www.openml.org/d/187</a>\n</blockquote>\n<p>这个数据也是<code>Scikit-learn</code>中的样本数据，所以也可以使用以下代码将其直接导入。</p>\n<pre><code class=\"python\">import pandas as pd\nimport numpy as np\n\nfrom sklearn.datasets import fetch_openml\n\npd.options.plotting.backend = 'plotly'\n\nX,y = fetch_openml(\"wine\", version=1, as_frame=True, return_X_y=True)\ndata = pd.concat([X,y], axis=1)\ndata.head()</code></pre>\n<p>该数据集是葡萄酒相关的，包含葡萄酒类型的许多功能和相应的标签。数据集的前几行如下所示。</p>\n<p><img src=\"https://segmentfault.com/img/bVcHtw4\" alt=\"image\" title=\"image\" /></p>\n<p>下面使用<code>Plotly backend</code>探索一下数据集。</p>\n<p>绘图方式与正常使用<code>Pandas</code>内置的绘图操作几乎相同，只是现在以丰富的<code>Plotly</code>显示可视化效果。</p>\n<p>下面的代码绘制了数据集中两个要素之间的关系。</p>\n<pre><code class=\"python\">fig = data[['Alcohol', 'Proline']].plot.scatter(y='Alcohol', x='Proline')\nfig.show()</code></pre>\n<p><img src=\"https://segmentfault.com/img/bVcHtw5\" alt=\"image\" title=\"image\" /></p>\n<p>如果将鼠标悬停在图表上，可以选择将图表下载为高质量的图像文件。<br><img src=\"https://segmentfault.com/img/bVcHtw7\" alt=\"image\" title=\"image\" /></br></p>\n<p>我们可以结合<code>Pandas</code>的<code>groupby</code>函数创建一个条形图，总结各类之间Hue的均值差异。</p>\n<pre><code class=\"python\">data[['Hue','class']].groupby(['class']).mean().plot.bar()</code></pre>\n<p><img src=\"https://segmentfault.com/img/bVcHtxf\" alt=\"image\" title=\"image\" /></p>\n<p>将<code>class</code>添加到我们刚才创建的散点图中。通过<code>Plotly</code>可以轻松地为每个类应用不同的颜色，以便直观地看到分类。</p>\n<pre><code class=\"python\">fig = data[['Hue', 'Proline', 'class']].plot.scatter(x='Hue', y='Proline', color='class', title='Proline and Hue by wine class')\nfig.show()</code></pre>\n<p><img src=\"https://segmentfault.com/img/bVcHtxm\" alt=\"image\" title=\"image\" /></p>\n<h2>3. Bokeh backend</h2>\n<p><code>Bokeh</code>是另一个Python可视化包，也可提供丰富的交互式可视化效果。<code>Bokeh</code>还具有<code>streaming API</code>，可以为比如金融市场等流数据创建实时可视化。</p>\n<p><code>pandas-Bokeh</code>的GitHub链接如下：</p>\n<blockquote>\n <a href=\"https://github.com/PatrikHlobil/Pandas-Bokeh\" rel=\"nofollow noreferrer\">https://github.com/PatrikHlob...</a>\n</blockquote>\n<p>老样子，用pip安装即可，<code>pip install pandas-bokeh</code>。</p>\n<p>为了在<code>Jupyterlab</code>中显示<code>Bokeh</code>可视化效果，还需要安装两个新的扩展。</p>\n<pre><code class=\"python\">jupyter labextension install @jupyter-widgets/jupyterlab-manager\njupyter labextension install @bokeh/jupyter_bokeh</code></pre>\n<p>下面我们使用<code>Bokeh backend</code>重新创建刚刚<code>plotly</code>实现的的散点图。</p>\n<pre><code class=\"python\">pd.options.plotting.backend = 'pandas_bokeh'\n\nimport pandas_bokeh\nfrom bokeh.io import output_notebook\nfrom bokeh.plotting import figure, show\n\noutput_notebook()\np1 = data.plot_bokeh.scatter(x='Hue', \n                              y='Proline', \n                              category='class', \n                              title='Proline and Hue by wine class',\n                              show_figure=False)\nshow(p1)</code></pre>\n<p>关键语句就一行代码，非常快捷，交互式效果如下。</p>\n<p><img src=\"https://segmentfault.com/img/bVcHtxo\" alt=\"image\" title=\"image\" /></p>\n<p><code>Bokeh</code>还具有<code>plot_grid</code>函数，可以为多个图表创建类似于仪表板的布局，下面在网格布局中创建了四个图表。</p>\n<pre><code class=\"python\">output_notebook()\n\np1 = data.plot_bokeh.scatter(x='Hue', \n                              y='Proline', \n                              category='class', \n                              title='Proline and Hue by wine class',\n                              show_figure=False)\n\np2 = data[['Hue','class']].groupby(['class']).mean().plot.bar(title='Mean Hue per Class')\n\ndf_hue = pd.DataFrame({\n    'class_1': data[data['class'] == '1']['Hue'],\n    'class_2': data[data['class'] == '2']['Hue'],\n    'class_3': data[data['class'] == '3']['Hue']},\n    columns=['class_1', 'class_2', 'class_3'])\n\np3 = df_hue.plot_bokeh.hist(title='Distribution per Class: Hue')\n\ndf_proline = pd.DataFrame({\n    'class_1': data[data['class'] == '1']['Proline'],\n    'class_2': data[data['class'] == '2']['Proline'],\n    'class_3': data[data['class'] == '3']['Proline']},\n    columns=['class_1', 'class_2', 'class_3'])\n\np4 = df_proline.plot_bokeh.hist(title='Distribution per Class: Proline')\n\npandas_bokeh.plot_grid([[p1, p2], \n                        [p3, p4]], plot_width=450)</code></pre>\n<p>可以看到，可视化的部分都是在<code>pandas</code>的<code>dataframe</code>基础上一行代码搞定，最后<code>plot_grid</code>完成布局。<br><img src=\"https://segmentfault.com/img/bVcHtxp\" alt=\"image\" title=\"image\" /></br></p>\n<h2>4. 总结</h2>\n<p>在内置的<code>Pandas</code>绘图功能增加多个第三方可视化backend，大大增强了<code>pandas</code>用于数据可视化的功能，今后可能真的不需再去学习众多可视化操作了，<strong>使用pandas也可以一击入魂！</strong></p>\n<hr>\n <p><strong>原创不易，来波点赞支持。</strong></p>\n <p>本篇首发于我的原创公众号：<strong>Python数据科学</strong>，欢迎关注。<br>个人网站：<a href=\"http://www.datadeepin.com/\" rel=\"nofollow noreferrer\">http://www.datadeepin.com/</a></br></p>\n</hr>","descriptionType":"html","publishedDate":"Fri, 16 Oct 2020 00:00:00 +0000","feedId":23280,"bgimg":"https://segmentfault.com/img/bVcHtyf","linkMd5":"448b2ccd20c42e0c06e83e3ae1a658d0","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn58@2020_1/2020/10/19/04-44-45-946_2a04e2a1a840bfa7.webp","destWidth":711,"destHeight":313,"sourceBytes":7244,"destBytes":7244,"author":"Python数据科学","articleImgCdnMap":{"https://segmentfault.com/img/bVcHtyf":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn58@2020_1/2020/10/19/04-44-45-946_2a04e2a1a840bfa7.webp","https://segmentfault.com/img/bVcHtw4":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn86@2020_1/2020/10/19/04-44-49-515_63df3ccc7f92b6e7.webp","https://segmentfault.com/img/bVcHtw5":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn80@2020_4/2020/10/19/04-44-49-716_cd813a2d055680e2.webp","https://segmentfault.com/img/bVcHtw7":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn77@2020_2/2020/10/19/04-44-49-526_baf2814db8ec2f25.webp","https://segmentfault.com/img/bVcHtxf":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn61@2020_2/2020/10/19/04-44-50-841_bb52dacdeb08e0f3.webp","https://segmentfault.com/img/bVcHtxm":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn66@2020_3/2020/10/19/04-44-49-497_95097bb6fa7c0d38.webp","https://segmentfault.com/img/bVcHtxo":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn74@2020_6/2020/10/19/04-44-49-897_cc831d3af424faa9.webp","https://segmentfault.com/img/bVcHtxp":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn69@2020_4/2020/10/19/04-44-49-932_a62b45d0fa84a38f.webp"},"publishedOrCreatedDate":1603082675330}],"record":{"createdTime":"2020-10-19 12:44:35","updatedTime":"2020-10-19 12:44:35","feedId":23280,"fetchDate":"Mon, 19 Oct 2020 04:44:35 +0000","fetchMs":2810,"handleMs":5363,"totalMs":25402,"newArticles":0,"totalArticles":50,"status":1,"type":0,"ip":"f80c7bd81200785c5e1521e0fff25478","hostName":"us-034*","requestId":"64835ceae938482e89f3a29908869afc_23280","contentType":"application/atom+xml; charset=UTF-8","totalBytes":746362,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":8,"articlesImgsGithubTotal":8,"successGithubMap":{"myreaderx8":1,"myreaderx25":1,"myreaderx7":1,"myreaderx16":1,"myreaderx32":1,"myreaderx2":1,"myreaderx12":1,"myreaderx13":1},"failGithubMap":{}},"feed":{"createdTime":"2020-09-07 02:29:58","updatedTime":"2020-09-07 13:26:29","id":23280,"name":"SegmentFault 最新的文章","url":"https://segmentfault.com/feeds/blogs","subscriber":142,"website":null,"icon":"https://segmentfault.com/favicon.ico","icon_jsdelivr":null,"description":"","weekly":null,"link":"https://segmentfault.com"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":7244,"tmpBodyImgCdnBytes":739118,"tmpBgImgCdnBytes":0,"extra4":{"start":1603082666205,"total":0,"statList":[{"spend":3762,"msg":"获取xml内容"},{"spend":5363,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":4678,"msg":"正文链接上传到cdn"}]},"extra5":8,"extra6":8,"extra7ImgCdnFailResultVector":[],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-54.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-003.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-015.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-040.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://segmentfault.com/img/bVcHtyf","sourceStatusCode":200,"destWidth":711,"destHeight":313,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn58@2020_1/2020/10/19/04-44-45-946_2a04e2a1a840bfa7.webp","sourceBytes":7244,"destBytes":7244,"feedId":23280,"totalSpendMs":6188,"convertSpendMs":0,"createdTime":"2020-10-19 12:44:40","host":"europe62*","referer":"https://segmentfault.com/a/1190000037492026","linkMd5ListStr":"448b2ccd20c42e0c06e83e3ae1a658d0,448b2ccd20c42e0c06e83e3ae1a658d0","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"7.1 KB","destSize":"7.1 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/bVcHtxm","sourceStatusCode":200,"destWidth":800,"destHeight":308,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn66@2020_3/2020/10/19/04-44-49-497_95097bb6fa7c0d38.webp","sourceBytes":15538,"destBytes":15538,"feedId":23280,"totalSpendMs":3373,"convertSpendMs":0,"createdTime":"2020-10-19 12:44:46","host":"us-027*","referer":"https://segmentfault.com/a/1190000037492026","linkMd5ListStr":"448b2ccd20c42e0c06e83e3ae1a658d0","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"15.2 KB","destSize":"15.2 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/bVcHtw4","sourceStatusCode":200,"destWidth":800,"destHeight":91,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn86@2020_1/2020/10/19/04-44-49-515_63df3ccc7f92b6e7.webp","sourceBytes":14388,"destBytes":14388,"feedId":23280,"totalSpendMs":3395,"convertSpendMs":0,"createdTime":"2020-10-19 12:44:46","host":"us-031*","referer":"https://segmentfault.com/a/1190000037492026","linkMd5ListStr":"448b2ccd20c42e0c06e83e3ae1a658d0","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"14.1 KB","destSize":"14.1 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/bVcHtw7","sourceStatusCode":200,"destWidth":742,"destHeight":738,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn77@2020_2/2020/10/19/04-44-49-526_baf2814db8ec2f25.webp","sourceBytes":8818,"destBytes":8818,"feedId":23280,"totalSpendMs":3424,"convertSpendMs":0,"createdTime":"2020-10-19 12:44:46","host":"us-54*","referer":"https://segmentfault.com/a/1190000037492026","linkMd5ListStr":"448b2ccd20c42e0c06e83e3ae1a658d0","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"8.6 KB","destSize":"8.6 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/bVcHtw5","sourceStatusCode":200,"destWidth":800,"destHeight":318,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn80@2020_4/2020/10/19/04-44-49-716_cd813a2d055680e2.webp","sourceBytes":16914,"destBytes":16914,"feedId":23280,"totalSpendMs":3649,"convertSpendMs":0,"createdTime":"2020-10-19 12:44:46","host":"us-53*","referer":"https://segmentfault.com/a/1190000037492026","linkMd5ListStr":"448b2ccd20c42e0c06e83e3ae1a658d0","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"16.5 KB","destSize":"16.5 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/bVcHtxp","sourceStatusCode":200,"destWidth":800,"destHeight":707,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn69@2020_4/2020/10/19/04-44-49-932_a62b45d0fa84a38f.webp","sourceBytes":51308,"destBytes":51308,"feedId":23280,"totalSpendMs":3955,"convertSpendMs":0,"createdTime":"2020-10-19 12:44:46","host":"us-015*","referer":"https://segmentfault.com/a/1190000037492026","linkMd5ListStr":"448b2ccd20c42e0c06e83e3ae1a658d0","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"50.1 KB","destSize":"50.1 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/bVcHtxo","sourceStatusCode":200,"destWidth":600,"destHeight":372,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn74@2020_6/2020/10/19/04-44-49-897_cc831d3af424faa9.webp","sourceBytes":627458,"destBytes":627458,"feedId":23280,"totalSpendMs":4123,"convertSpendMs":0,"createdTime":"2020-10-19 12:44:46","host":"us-003*","referer":"https://segmentfault.com/a/1190000037492026","linkMd5ListStr":"448b2ccd20c42e0c06e83e3ae1a658d0","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"612.8 KB","destSize":"612.8 KB","compressRate":"100%"},{"code":1,"isDone":false,"source":"https://segmentfault.com/img/bVcHtxf","sourceStatusCode":200,"destWidth":800,"destHeight":299,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn61@2020_2/2020/10/19/04-44-50-841_bb52dacdeb08e0f3.webp","sourceBytes":4694,"destBytes":4694,"feedId":23280,"totalSpendMs":4665,"convertSpendMs":0,"createdTime":"2020-10-19 12:44:46","host":"us-040*","referer":"https://segmentfault.com/a/1190000037492026","linkMd5ListStr":"448b2ccd20c42e0c06e83e3ae1a658d0","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"4.6 KB","destSize":"4.6 KB","compressRate":"100%"}],"successGithubMap":{"myreaderx8":1,"myreaderx25":1,"myreaderx7":1,"myreaderx16":1,"myreaderx32":1,"myreaderx2":1,"myreaderx12":1,"myreaderx13":1},"failGithubMap":{}}