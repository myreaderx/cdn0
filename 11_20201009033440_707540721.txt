{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Using Security Definer to Monitor PostgreSQL 9.6 or Earlier Using Percona Monitoring and Management","link":"https://www.percona.com/blog/?p=64742","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"security definer postgresql\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-71422\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql-300x168.png\" alt=\"security definer postgresql\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />I have previously written a blog post on the detailed steps involved in <a target=\"_blank\" href=\"https://www.percona.com/blog/2019/10/29/monitoring-postgresql-databases-using-percona-monitoring-management/\">enabling PostgreSQL monitoring using PMM</a>. In that post, you could see me talking about the role: <a target=\"_blank\" href=\"https://www.postgresql.org/docs/current/default-roles.html\">pg_monitor</a> that can be granted to monitoring users. The <pre class=\"crayon-plain-tag\">pg_monitor</pre> role restricts a monitoring user from accessing user data but only grants access to statistic views needed for monitoring. The following are the simple steps to create a monitoring user for using <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Percona Monitoring and Management</a> (PMM).</p><pre class=\"crayon-plain-tag\">CREATE USER pmm_user WITH ENCRYPTED PASSWORD 'secret'; \nGRANT pg_monitor to pmm_user;</pre><p>However, this feature is only available from PostgreSQL 10. So, let&#8217;s discuss how to deal with the previous releases such as PostgreSQL 9.6 or earlier.</p>\n<p>One of the easiest methods is to grant <pre class=\"crayon-plain-tag\">SUPERUSER</pre> role to the monitoring user. But, granting the SUPERUSER access may not work in all the environments as it has the privileges to access, modify, and alter the database objects. For that reason, we could use <a target=\"_blank\" href=\"https://www.postgresql.org/docs/9.6/sql-createfunction.html\"><pre class=\"crayon-plain-tag\">SECURITY DEFINER</pre></a> to safely grant access to selected statistics views. Let us first understand the difference between a <pre class=\"crayon-plain-tag\">security invoker</pre> and a <pre class=\"crayon-plain-tag\">security definer</pre> in PostgreSQL functions.</p>\n<h2>Security Invoker vs Security Definer in PostgreSQL</h2>\n<h3>Security Invoker</h3>\n<p>When you execute a function in PostgreSQL, it is executed using the privileges of the <strong>user calling it</strong>. So, if the calling user does not have access to select a specific table, then, the SQL statements on that table may fail, so the execution of the function fails.</p>\n<h3>Security Definer</h3>\n<p>When you execute a function in PostgreSQL using SECURITY DEFINER, it is executed by the privileges of the <strong>user who created it</strong>. Even if the calling user does not have access to the database objects being queried in the function, the function execution succeeds when the user who created the function has the required privileges on those database objects.</p>\n<h4>Statistic views accessed by PMM that need access using a security definer:</h4>\n<p>To enable PostgreSQL monitoring using PMM, you should be granting access to some of the views being accessed by PMM as of today.</p>\n<ol>\n<li>pg_stat_activity</li>\n<li>pg_stat_statements</li>\n</ol>\n<p>We shall now see the steps involved in creating a monitoring user (<pre class=\"crayon-plain-tag\">pmm_user</pre>) who should be given indirect access to the above-mentioned views.</p>\n<p><strong>Step 1:</strong> Create the monitoring user and the schema in which the functions and views can be created.</p><pre class=\"crayon-plain-tag\">CREATE USER pmm_user WITH ENCRYPTED PASSWORD 'secret';\nCREATE SCHEMA pmm AUTHORIZATION pmm_user;\nALTER USER pmm_user SET SEARCH_PATH TO pmm, pg_catalog;</pre><p><strong><br />\nStep 2: </strong>Create the functions to access the views being accessed by PMM, as a SUPERUSER. Make sure to specify <pre class=\"crayon-plain-tag\">SECURITY DEFINER</pre> so that the user calling this function can use the superuser role to access the data from the views: <pre class=\"crayon-plain-tag\">pg_stat_activity</pre> and <pre class=\"crayon-plain-tag\">pg_stat_statements</pre>.</p><pre class=\"crayon-plain-tag\">CREATE OR REPLACE FUNCTION pmm.get_pg_stat_activity() RETURNS SETOF pg_stat_activity AS\n$$ SELECT * FROM pg_catalog.pg_stat_activity; $$\nLANGUAGE sql\nVOLATILE\nSECURITY DEFINER;\n\nGRANT EXECUTE ON FUNCTION pmm.get_pg_stat_activity() TO pmm_user;\n\n-- The Following function needs to be created when you need QAN (Query Analytics) with PMM. \n\nCREATE OR REPLACE FUNCTION pmm.get_pg_stat_statements() RETURNS SETOF pg_stat_statements AS\n$$ SELECT * FROM public.pg_stat_statements; $$\nLANGUAGE sql\nVOLATILE\nSECURITY DEFINER;\n\nGRANT EXECUTE ON FUNCTION pmm.get_pg_stat_statements() TO pmm_user;</pre><p>While creating the last function <pre class=\"crayon-plain-tag\">pmm.get_pg_stat_statements()</pre>, it assumes that the extension <pre class=\"crayon-plain-tag\">pg_stat_statements</pre> has been created in the <pre class=\"crayon-plain-tag\">public</pre> schema. If you have specified another schema while creating this extension, please specify the appropriate schema prefix instead of <pre class=\"crayon-plain-tag\">public</pre>.</p>\n<p><strong><br />\nStep 3:</strong> Create views with the same name as the original views in the <pre class=\"crayon-plain-tag\">pmm</pre> schema. Then, grant the SELECT access on the newly created view to the monitoring user.</p><pre class=\"crayon-plain-tag\">CREATE VIEW pmm.pg_stat_activity AS\nSELECT * FROM pmm.get_pg_stat_activity();\n\nCREATE VIEW pmm.pg_stat_statements AS\nSELECT * FROM pmm.get_pg_stat_statements();\n\nGRANT SELECT ON pmm.pg_stat_activity TO pmm_user;\nGRANT SELECT ON pmm.pg_stat_statements TO pmm_user;</pre><p>So, when you connect to postgres using the monitoring user <pre class=\"crayon-plain-tag\">pmm_user</pre>, you would automatically query the view <pre class=\"crayon-plain-tag\">pg_stat_activity</pre> in the <pre class=\"crayon-plain-tag\">pmm</pre> schema, that is calling the function <pre class=\"crayon-plain-tag\">pmm.get_pg_stat_activity()</pre> using <pre class=\"crayon-plain-tag\">SUPERUSER</pre> privileges but not the <pre class=\"crayon-plain-tag\">pg_catalog.pg_stat_activity</pre>Â  view. This is because we have set the <pre class=\"crayon-plain-tag\">search_path</pre> of the <pre class=\"crayon-plain-tag\">pmm_user</pre> to <pre class=\"crayon-plain-tag\">pmm, pg_catalog</pre> in Step 1. If the view it is trying to access is not present in the <pre class=\"crayon-plain-tag\">pmm</pre> schema, it looks for that view in the <pre class=\"crayon-plain-tag\">pg_catalog</pre> schema.</p>\n<p>Your monitoring user for <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Percona Monitoring and Management</a> is successfully created once the above three steps are completed.</p>\n<hr />\n<p>Our white paper &#8220;Why Choose PostgreSQL?&#8221; looks at the features and benefits of PostgreSQL and presents some practical usage examples. We also examine how PostgreSQL can be useful for companies looking to migrate from Oracle.</p>\n<p style=\"text-align: center;\"><a target=\"_blank\" class=\"btn btn-primary btn-lg\" href=\"https://www.percona.com/resources/white-papers/why-choose-postgresql?utm_source=blog&#038;utm_medium=download&#038;utm_campaign=definer&#038;utm_content=whitepaper\">Download PDF</a></p>\n","descriptionType":"html","publishedDate":"Tue, 22 Sep 2020 13:45:02 +0000","feedId":11,"bgimg":"","linkMd5":"b3da2eb4e2e2094327f2448308e4bbb1","bgimgJsdelivr":"","metaImg":"","author":"Avinash Vallarapu","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn33@2020_4/2020/10/09/03-32-44-987_9b9115c43916ffbe.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn40@2020_5/2020/10/09/03-32-59-938_2b8e0ab91171a03b.webp"},"publishedOrCreatedDate":1602214352595},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"5 Cool Features in Percona Monitoring and Management You Should Try!","link":"https://www.percona.com/blog/?p=71318","description":"<img width=\"200\" height=\"113\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-200x113.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Cool Features in Percona Monitoring and Management\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-200x113.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-300x169.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-1024x576.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-1536x864.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-2048x1152.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-367x206.png 367w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><b><a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\"><img loading=\"lazy\" class=\"alignright size-medium wp-image-71488\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-300x169.png\" alt=\"Cool Features in Percona Monitoring and Management\" width=\"300\" height=\"169\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-300x169.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-1024x576.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-200x113.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-1536x864.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-2048x1152.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-367x206.png 367w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Percona Monitoring and Management</a> (PMM)</b><span> is a free and open-source platform for managing and monitoring MySQL, MongoDB, and PostgreSQL databases, along with Load Balancing tools like ProxySQL.Â </span><span>It is also </span><a target=\"_blank\" href=\"https://www.percona.com/blog/2020/01/03/pmm-2-2-released-with-full-support-for-amazon-rds-and-aurora/\"><span>âcloud readyâ</span></a><span>, meaning it has support for monitoring DBaaS (Amazon RDS, Aurora, and more). You can run PMM in your own environment for maximum security and reliability. The biggest strength of PMM is that it is highly customizable, which we will see later in this blog.</span></p>\n<p><span>The PMM 2 release introduces a number of enhancements and additional features. Here are some improvements and features which I think are cool!</span></p>\n<h2><b>1. New Security Threat Tool</b></h2>\n<p><span>The new Security Threat tool has the goal to advise PMM users on security-related database problems they might have on their databases.Â </span></p>\n<ul>\n<li><span>As PMM already has a reach into databases for performance monitoring, it makes sense for it to monitor database security as well. This tool will notify about any users without a password on the servers, MongoDB authentication disabled, MySQL/Mongo new versions available, and more.</span></li>\n<li><span>For enabling this feature, go over the <code>Failed security checks</code> panel on PMM Homepage and click on Security Threat tool, enable it, and &#8216;Apply changes&#8217;.</span></li>\n<li><span>Once enabled, the box shows a count of the number of failed checks. These will be divided as Critical, Major, Trivial.</span></li>\n<li><span>For example, in the image, the Security threat tool is enabled so we can see the result of the checks:</span></li>\n</ul>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71319 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/sec.png\" alt=\"\" width=\"512\" height=\"263\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/sec.png 512w, https://www.percona.com/blog/wp-content/uploads/2020/09/sec-300x154.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/sec-200x103.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/sec-450x231.png 450w, https://www.percona.com/blog/wp-content/uploads/2020/09/sec-367x189.png 367w\" sizes=\"(max-width: 512px) 100vw, 512px\" /></p>\n<ul>\n<li><span>After clicking over these checks, we can see more details, as below for the one Critical and one Major failed check. Resolve these as per preference to secure your database.</span></li>\n</ul>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71357 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-5.15.58-PM-1024x262.png\" alt=\"\" width=\"900\" height=\"230\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-5.15.58-PM-1024x262.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-5.15.58-PM-300x77.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-5.15.58-PM-200x51.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-5.15.58-PM-1536x393.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-5.15.58-PM-2048x524.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-5.15.58-PM-367x94.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<h2><b>2. Labeling</b></h2>\n<p><span>Labeling helps to easily group instances and review these groups together.Â  You do this by tagging the servers with Standard or Custom labels.</span></p>\n<ul>\n<li><span>Some of the standard labels available are Environments, Clusters, Replication Sets, Region.</span></li>\n<li><span>This can be configured while adding the server under monitoring with pmm-admin using flags <code>--environment=''</code>,<code>--cluster=''</code>, <code>replication_set=''</code> and so on.</span></li>\n<li><span>You can also have custom labels by specifying a Key-Value pair using the flagÂ  &#8211;custom-labels=&#8217;Key=Value&#8217;.Â  For example, custom labels can be set as &#8216;DC=Asia&#8217; or &#8216;Role=Reporting&#8217;, &#8216;Role=OLTP&#8217; or anything as per your topology.</span></li>\n<li><span>These labels can be used in filtering in QAN as well.</span></li>\n</ul>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71358 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-4.58.35-PM-1024x161.png\" alt=\"\" width=\"900\" height=\"142\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-4.58.35-PM-1024x161.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-4.58.35-PM-300x47.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-4.58.35-PM-200x31.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-4.58.35-PM-1536x241.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-4.58.35-PM-2048x321.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-4.58.35-PM-367x58.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<ul>\n<li><span>Important events related to the application can now be marked with <code>Annotations</code>. Some events in the application like upgrades, patches, may impact the database. Annotations visualize these events on each dashboard of the PMM Server so that you can correlate any performance changes on the database with these events.</span></li>\n<li><span>Annotations can be added with <code>pmm-admin annotate &#60;--tags&#62;</code> command on PMM Client, and passing it text which explains what event the annotation should represent. Below is an example where we can see an event, &#8216;Upgrade to v1.2&#8217; represented as a vertical dotted line on the graph.</span></li>\n</ul>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71345 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-14-at-7.51.10-PM.png\" alt=\"\" width=\"939\" height=\"361\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-14-at-7.51.10-PM.png 939w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-14-at-7.51.10-PM-300x115.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-14-at-7.51.10-PM-200x77.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-14-at-7.51.10-PM-367x141.png 367w\" sizes=\"(max-width: 939px) 100vw, 939px\" /></p>\n<h2><b>3. Query Analytics (QAN)</b></h2>\n<p><span>QAN helps to ensure database queries are executed as expected, in the shortest time possible. You can identify queries causing problems and review detailed metrics related to those queries here.</span></p>\n<ul>\n<li><span>With the new and improved QAN dashboard, you can now add multiple columns to the Query Analytics table with the <code>Add column</code> button, which will also show you the list of columns available. These are tagged with Service names &#8211; MySQL, MongoDB, PostgreSQL. Columns can be sorted in ascending or descending order.</span></li>\n<li><span>Some of the examples for additional columns are &#8211; Query Count with errors, InnoDB IO read ops, No Index Used(MySQL), Docs Scanned, Returned (MongoDB), Shared Blocks Read, Written, Dirtied (PostgreSQL).</span></li>\n<li><span>The query activity can now be visualized from multiple dimensions, not just the query pattern. As shown in the image, query count and load can also be viewed for Database, User, Client Hosts, etc. This will help to identify an increase in traffic from a particular user or a host, for example.</span></li>\n</ul>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71402 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/qanff-min.gif\" alt=\"\" width=\"726\" height=\"318\" /></p>\n<ul>\n<li>With the new release of PMM 2.10, you now have a <code>Search by</code> bar beside the dimensions as seen in the above image. It gives you the flexibility to limit the view of queries containing only the specified keywords entered in the search bar. The <code>Search by</code> can be used for other dimensions as well, like database, username.</li>\n<li><span>Hovering over the sparkline now shows the load and timestamp for that particular time under the cursor.</span></li>\n</ul>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71401 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/load1.gif\" alt=\"\" width=\"436\" height=\"270\" /></p>\n<ul>\n<li><span>The improvements will help to look for users causing the most activity, busiest schema, most active incoming client hosts, and of course problematic queries.</span></li>\n</ul>\n<h2><b>4. New Filter Panel for QAN</b></h2>\n<p><img loading=\"lazy\" class=\"wp-image-71399 alignleft\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/filter1.gif\" alt=\"\" width=\"161\" height=\"332\" /></p>\n<p><span>The new Filter Panel for the QAN dashboard allows you to see all your labels and gives the capability to select multiple items for filtering.</span></p>\n<ul>\n<li><span>The Filter Panel helps filtering servers with standard or custom labels likeÂ  Environment, Clusters, individual nodes for faster troubleshooting.</span></li>\n<li><span>Filters are listed as per category in the Filter panel &#8211; Service type, Cluster, Replication Set, database, and even users.</span></li>\n<li><span>Selecting one reduces the overview list to those items matching the filter.</span></li>\n<li><span>Together with the QAN improvements mentioned before and this filter panel, you can identify users, servers that are experiencing unexpected traffic or load across a logical grouping of servers.</span></li>\n</ul>\n<h5></h5>\n<p>&#160;</p>\n<p>&#160;</p>\n<h2><b>5. Easily Remove Services or Nodes From the PMM Inventory Dashboard</b></h2>\n<p><span>The PMM Inventory dashboard lists all Nodes, Agents, and Services that are registered against the PMM Server.</span></p>\n<ul>\n<li><span>Now, you can easily remove a service, node, or agent from this dashboard directly, unlike older versions. To remove a node/service, go to the <code>PMM Inventory</code> under the PMM tab in the top right corner.</span></li>\n<li><span>On the page, there are separate tabs for Service, Agents, and Nodes. Select the tab you wish to remove from, then select the name of the service or node as required.Â  For example, here, I wish to delete the <code>db2node-mysql</code> service monitoring. So, I just checked the relevant box and clicked <code>Delete</code> in the right corner and got the confirmation message, clicked on Force mode, and done!</span></li>\n</ul>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71360 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot_del-1024x332.png\" alt=\"\" width=\"900\" height=\"292\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot_del-1024x332.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot_del-300x97.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot_del-200x65.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot_del-1536x498.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot_del-2048x664.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot_del-367x119.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<ul>\n<li><span>This will stop the monitoring of the service and its name will no longer appear under the list of monitored services. This can be verified from the command line after logging in to the server and executing <code>pmm-admin list</code>. The mysqld_exporter process would no longer be running.</span></li>\n<li><span>We can also add and modify instances with PMM API. It eases deployments of large fleets of servers through scripting against the Administrative API.</span></li>\n</ul>\n<p><span>Along with this, you can also customize your PMM and extend the list of available metrics. Check out below Percona blogs by Daniel GuzmÃ¡n Burgos, Carlos Salguero, and Vadim Yalovets on these cool customizations!</span></p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/blog/2018/08/28/extend-metrics-for-percona-monitoring-and-management-without-modifying-code/\">Extend Metrics for PMM with textfile collectors</a><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/2019/03/12/pmms-custom-queries-in-action-adding-a-graph-for-innodb-mutex-waits/\">PMMâs Custom Queries in Action</a><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/2020/06/10/running-custom-queries-in-percona-monitoring-and-management/\">Running Custom MySQL Queries in PMM2</a><br />\n<a target=\"_blank\" href=\"https://www.percona.com/blog/2019/12/19/grafana-plugins-and-percona-monitoring-and-management/\">Grafana Plugins and PMM</a></p>\n<h3><b>Takeaways</b></h3>\n<p><span>PMM is a best-of-breed open source database monitoring and management solution which helps you focus on optimizing database performance with better observability in a secure way.</span></p>\n<p><span>For PMM install instructions, see</span> <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-monitoring-and-management/2.x/install/index-server.html#pmm-deploying-server\"><span>Installing PMM Server</span></a><span> and</span><a target=\"_blank\" href=\"https://www.percona.com/doc/percona-monitoring-and-management/2.x/install/index-client.html#pmm-deploying-client\"> <span>Installing PMM client</span></a><span>.</span></p>\n<p><span>For a full list of new features and bug fixes included in PMMv2, see our</span> <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-monitoring-and-management/2.x/release-notes/index.html\"><span>release notes</span></a><span> and for more information on Percona Monitoring and Management, visit our</span> <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\"><span>PMM webpage</span></a><span>.</span></p>\n","descriptionType":"html","publishedDate":"Wed, 23 Sep 2020 15:37:53 +0000","feedId":11,"bgimg":"","linkMd5":"e2713cf10d85a6c05027188a7e171d12","bgimgJsdelivr":"","metaImg":"","author":"Rituja Borse","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-200x113.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn17@2020_4/2020/10/09/03-32-33-429_77e916898c59d689.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-300x169.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn92@2020_4/2020/10/09/03-32-48-516_b47841620191445b.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/sec.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn57@2020_5/2020/10/09/03-32-45-354_0c9015af36398f7b.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-5.15.58-PM-1024x262.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn47@2020_1/2020/10/09/03-32-33-772_2361365307ace921.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-4.58.35-PM-1024x161.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn48@2020_2/2020/10/09/03-32-59-942_17f8a4c012522e39.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-14-at-7.51.10-PM.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn27@2020_5/2020/10/09/03-32-48-731_287e714160997cd0.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/qanff-min.gif":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn99@2020_5/2020/10/09/03-32-42-893_5e0bb74d24b1076b.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/load1.gif":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn68@2020_6/2020/10/09/03-33-27-171_94acd7693c3caf76.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/filter1.gif":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn80@2020_4/2020/10/09/03-33-09-925_04ca44867b7a8bfb.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot_del-1024x332.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn7@2020_6/2020/10/09/03-32-48-204_15a7202645f119af.webp"},"publishedOrCreatedDate":1602214352592},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Grab Your Percona Swag â For Free!","link":"https://www.percona.com/blog/?p=71779","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Swag-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Percona Swag\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Swag-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Swag-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Swag-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Swag-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Swag.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" />\n<p>Would you like to get the latest in Percona gear 100% free, shipped to you anywhere in the world? Maybe that sounds too good to be true, but itâs true!&nbsp; Itâs easy and takes as little as 20 minutes to earn your swag. Here are some examples of the swag items you can claim:</p> \n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71780 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/for-blog-6-and-2-lines-1024x672.jpg\" alt=\"Percona Swag\" width=\"900\" height=\"591\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/for-blog-6-and-2-lines-1024x672.jpg 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/for-blog-6-and-2-lines-300x197.jpg 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/for-blog-6-and-2-lines-200x131.jpg 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/for-blog-6-and-2-lines-367x241.jpg 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/for-blog-6-and-2-lines-560x367.jpg 560w, https://www.percona.com/blog/wp-content/uploads/2020/10/for-blog-6-and-2-lines.jpg 1047w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p> \n<p>So whatâs the catch? Percona software products are now listed on four online software directories, but our listings are too new to have accumulated many user reviews. We need reviews!</p> \n<p>So our offer is simple. You write one review, you pick one Percona swag item. You write two reviews, you pick two. Seven reviews, pick seven pieces of swag, our limit. But you must post your reviews by November 15, 2020!</p> \n<p>Any meaningful review earns swag, be it positive, negative, or mixed. Write whatever you believe; only write something! Thereâs no swag for a review that gives a rating but says nothing at all or nothing meaningful, so make those reviews count!</p> \n<p>Hereâs where to post reviews:</p> \n<table> \n <tbody> \n  <tr> \n   <td><b><i>Product</i></b></td> \n   <td><b><i>Capterra&nbsp;&nbsp;</i></b></td> \n   <td><b><i>G2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</i></b></td> \n   <td><b><i>TrustRadius&nbsp;&nbsp;</i></b></td> \n   <td><b><i>SourceForge</i></b></td> \n  </tr> \n  <tr> \n   <td><span>Percona Monitoring and Management</span></td> \n   <td><a target=\"_blank\" href=\"https://reviews.capterra.com/new/203166\"><span>Capterra</span></a></td> \n   <td><a target=\"_blank\" href=\"https://www.g2.com/products/percona-monitoring-and-management-pmm/take_survey\"><span>G2</span></a></td> \n   <td><a target=\"_blank\" href=\"https://www.trustradius.com/welcome/percona-monitoring-and-management-pmm\"><span>TrustRadius</span></a></td> \n   <td><a target=\"_blank\" href=\"https://sourceforge.net/software/product/Percona-Monitoring-and-Management/reviews/new\"><span>SourceForge</span></a></td> \n  </tr> \n  <tr> \n   <td><span>Percona Server For MySQL</span></td> \n   <td><a target=\"_blank\" href=\"https://reviews.capterra.com/new/133993\"><span>Capterra</span></a></td> \n   <td><a target=\"_blank\" href=\"https://www.g2.com/products/percona-server/take_survey\"><span>G2</span></a></td> \n   <td><a target=\"_blank\" href=\"https://www.trustradius.com/welcome/percona-server-for-mysql\"><span>TrustRadius</span></a></td> \n   <td><a target=\"_blank\" href=\"https://sourceforge.net/software/product/Percona-Server/reviews/new\"><span>SourceForge</span></a></td> \n  </tr> \n  <tr> \n   <td><span>Percona XtraDB Cluster</span></td> \n   <td><a target=\"_blank\" href=\"https://reviews.capterra.com/new/203955\"><span>Capterra</span></a></td> \n   <td><a target=\"_blank\" href=\"https://www.g2.com/products/percona-xtradb-cluster-pxc/take_survey\"><span>G2</span></a></td> \n   <td><a target=\"_blank\" href=\"https://www.trustradius.com/welcome/percona-xtradb-cluster\"><span>TrustRadius</span></a></td> \n   <td><a target=\"_blank\" href=\"https://sourceforge.net/software/product/Percona-XtraDB-Cluster/reviews/new\"><span>SourceForge</span></a></td> \n  </tr> \n  <tr> \n   <td><span>Percona XtraBackup</span></td> \n   <td><a target=\"_blank\" href=\"https://reviews.capterra.com/new/205293\"><span>Capterra</span></a></td> \n   <td><a target=\"_blank\" href=\"https://www.g2.com/products/percona-xtrabackup-for-mysql/take_survey\"><span>G2</span></a></td> \n   <td><a target=\"_blank\" href=\"https://www.trustradius.com/welcome/percona-xtrabackup\"><span>TrustRadius</span></a></td> \n   <td><a target=\"_blank\" href=\"https://sourceforge.net/software/product/Percona-XtraBackup/reviews/new\"><span>SourceForge</span></a></td> \n  </tr> \n  <tr> \n   <td><span>Percona Distribution for PostgreSQL</span></td> \n   <td><span>n/a</span></td> \n   <td><a target=\"_blank\" href=\"https://www.g2.com/products/percona-distribution-for-postgresql/take_survey\"><span>G2</span></a></td> \n   <td><a target=\"_blank\" href=\"https://www.trustradius.com/welcome/percona-distribution-for-postgresql\"><span>TrustRadius</span></a></td> \n   <td><a target=\"_blank\" href=\"https://sourceforge.net/software/product/Percona-Distribution-for-PostgreSQL/reviews/new\"><span>SourceForge</span></a></td> \n  </tr> \n  <tr> \n   <td><span>Percona Backup for MongoDB</span></td> \n   <td><span>n/a</span></td> \n   <td><a target=\"_blank\" href=\"https://www.g2.com/products/percona-backup-for-mongodb/take_survey\"><span>G2</span></a></td> \n   <td><a target=\"_blank\" href=\"https://www.trustradius.com/welcome/percona-backup-for-mongodb\"><span>TrustRadius</span></a></td> \n   <td><a target=\"_blank\" href=\"https://sourceforge.net/software/product/Percona-Backup-for-MongoDB/reviews/new\"><span>SourceForge</span></a></td> \n  </tr> \n  <tr> \n   <td><span>Percona Server for MongoDB</span></td> \n   <td><span>n/a</span></td> \n   <td><span>n/a</span></td> \n   <td><a target=\"_blank\" href=\"https://www.trustradius.com/welcome/percona-server-for-mongodb\"><span>TrustRadius</span></a></td> \n   <td><a target=\"_blank\" href=\"https://sourceforge.net/software/product/Percona-Server-for-MongoDB/reviews/new\"><span>SourceForge</span></a></td> \n  </tr> \n  <tr> \n   <td><span>Percona Kubernetes Operator for Percona XtraDB Cluster</span></td> \n   <td><span>n/a</span></td> \n   <td><a target=\"_blank\" href=\"https://www.g2.com/products/percona-kubernetes-operator-for-percona-xtradb-cluster/take_survey\"><span>G2</span></a></td> \n   <td><a target=\"_blank\" href=\"https://www.trustradius.com/welcome/percona-kubernetes-operator-for-mysql-and-mongodb\"><span>TrustRadius</span></a></td> \n   <td><a target=\"_blank\" href=\"https://sourceforge.net/software/product/Percona-Kubernetes-Operator/reviews/new\"><span>SourceForge</span></a></td> \n  </tr> \n </tbody> \n</table> \n<p>You can review several different products and post them on one site, or you can write one product review and post it on multiple sites.&nbsp; Or post any combination of reviews, up to a max of seven.&nbsp; The more reviews you post, the more the swag delivered to your home address for free, courtesy of Percona.</p> \n<p>To claim your swag, write to &lt;<a target=\"_blank\" href=\"mailto:community-team@percona.com\">community-team@percona.com</a>&gt;.&nbsp; Include:</p> \n<ul> \n <li>Links to each review you posted.</li> \n <li>Your postal mailing address.</li> \n <li>Your phone number (for delivery use only, never for marketing)</li> \n</ul> \n<p>For t-shirt orders, also state:</p> \n<ul> \n <li>Color (White, Black, or Blue)</li> \n <li>Size (Small, Medium, Large, or Extra Large)</li> \n</ul> \n<p>Itâs that simple! Start writing now!</p>","descriptionType":"html","publishedDate":"Mon, 05 Oct 2020 20:00:27 +0000","feedId":11,"bgimg":"","linkMd5":"930ee78de81f572e76bd3b615318cd6e","bgimgJsdelivr":"","metaImg":"","author":"Daniil Bazhenov","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Swag-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn3@2020_4/2020/10/09/03-33-02-846_574f61c64cb005ad.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/for-blog-6-and-2-lines-1024x672.jpg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn88@2020_4/2020/10/09/03-32-46-289_e581ba7c3ffc3340.webp"},"publishedOrCreatedDate":1602214352602},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"PostgreSQL 13 New Feature: dropdb âforce","link":"https://www.percona.com/blog/?p=71559","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/postgresql-dropdb-force-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"postgresql dropdb --force\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/postgresql-dropdb-force-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/postgresql-dropdb-force-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/postgresql-dropdb-force-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/postgresql-dropdb-force-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/postgresql-dropdb-force.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p>There have been many big features added to PostgreSQL 13, like Parallel Vacuum, de-duplication of indexes, etc., and a complete list can be found at <a target=\"_blank\" href=\"https://www.postgresql.org/docs/13/release-13.html\">PostgreSQL 13 release notes</a>. Along with the big features, there are also small ones added, including dropdb &#8211;force.</p>\n<h2>Dropdb &#8211;force</h2>\n<p>A new command-line option is added to dropdb command, and a similar SQL option âFORCEâ is also added in DROP DATABASE. Using the option -f or &#8211;force with dropdb command or FORCE with DROP DATABASEÂ to drop the database, it will terminate all existing connections with the database. Similarly, DROP DATABASE FORCE will do the same.</p>\n<p>In the first terminal, create a test database and a database test, and connect to the database.</p><pre class=\"crayon-plain-tag\">vagrant@vagrant:~$ createdb test;\nvagrant@vagrant:~$ psql test\npsql (13.0)\nType \"help\" for help.</pre><p>In the second terminal, try to drop the test database and you will get the error message that the test database is being used by another user.</p><pre class=\"crayon-plain-tag\">vagrant@vagrant:/usr/local/pgsql.13/bin$ psql postgres\npsql (13.0)\nType \"help\" for help.\npostgres=# drop database test;\nERROR:Â  database \"test\" is being accessed by other users\nDETAIL:Â  There is 1 other session using the database.</pre><p>Now try the same command with the FORCE option. You will see that the database is dropped successfully.</p><pre class=\"crayon-plain-tag\">postgres=# drop database test WITH ( FORCE );\nDROP DATABASE</pre><p>Note: you can also use the command line <strong>dropdb test -f</strong>.</p>\n<p>The session on the first terminal will be terminated.</p><pre class=\"crayon-plain-tag\">test=# \\d\nFATAL:Â  terminating connection due to administrator command\nserver closed the connection unexpectedly\nThis probably means the server terminated abnormally\nbefore or while processing the request.\nThe connection to the server was lost. Attempting reset: Failed.\n!?&#62;Â </pre><p>Looking for more info on other PostgreSQL 13 changes? Check out Ibrar&#8217;s previous post, <a target=\"_blank\" href=\"https://www.percona.com/blog/2020/09/30/postgresql_fdw-authentication-changes-in-postgresql-13/\">Postgresql_fdw Authentication Changes in PostgreSQL 13</a>!</p>\n","descriptionType":"html","publishedDate":"Thu, 01 Oct 2020 15:58:38 +0000","feedId":11,"bgimg":"","linkMd5":"db3a93ddc9fb66523605abcb70568a6b","bgimgJsdelivr":"","metaImg":"","author":"Ibrar Ahmed","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/09/postgresql-dropdb-force-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn68@2020_4/2020/10/09/03-32-38-780_1433a261480c5c88.webp"},"publishedOrCreatedDate":1602214352597},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Keynote Speakers for Percona Live ONLINE Have Been Announced!","link":"https://www.percona.com/blog/?p=71733","description":"<img width=\"200\" height=\"120\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/PerconaLiveOnline2020-Keynotes-200x120.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"PerconaLiveOnline2020 Keynotes\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/PerconaLiveOnline2020-Keynotes-200x120.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/PerconaLiveOnline2020-Keynotes-300x180.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/PerconaLiveOnline2020-Keynotes-367x220.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/PerconaLiveOnline2020-Keynotes.png 1024w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-71739\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/PerconaLiveOnline2020-Keynotes-300x180.png\" alt=\"PerconaLiveOnline2020 Keynotes\" width=\"300\" height=\"180\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/PerconaLiveOnline2020-Keynotes-300x180.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/PerconaLiveOnline2020-Keynotes-200x120.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/PerconaLiveOnline2020-Keynotes-367x220.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/PerconaLiveOnline2020-Keynotes.png 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" />We are excited to share the great lineup of speakers from the open source database community who will be spotlighting key technological, industry, and social topics throughout the event, including talks specific to MySQL, PostgreSQL, and MongoDB to close out our 28-hour Percona Live ONLINE event.</p>\n<p style=\"text-align: center;\"><a target=\"_blank\" class=\"btn btn-primary btn-lg\" href=\"https://www.percona.com/live/conferences\">View the Full Agenda and Register Now!</a></p>\n<h3>Opening Keynotes</h3>\n<p>Tuesday, October 20 (Starting at 10:00 am ET)</p>\n<p><img loading=\"lazy\" class=\"alignleft size-thumbnail wp-image-71746\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-150x150.jpg\" alt=\"Peter Zaitsev\" width=\"150\" height=\"150\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-150x150.jpg 150w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-300x300.jpg 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-32x32.jpg 32w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-128x128.jpg 128w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-560x560.jpg 560w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-367x367.jpg 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-85x85.jpg 85w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-50x50.jpg 50w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar.jpg 626w\" sizes=\"(max-width: 150px) 100vw, 150px\" /></p>\n<p><a target=\"_blank\" href=\"https://sched.co/eouq\">Why Public Database as a Service is Prime for Open Source Disruption</a></p>\n<p><strong>Peter Zaitsev</strong>, <a target=\"_blank\" href=\"https://www.percona.com/\">Percona</a></p>\n<p>Percona&#8217;s CEO and Co-Founder, Peter Zaitsev, will explore the trends around public DBaaS and give his opinion on how we need to disrupt the current trends to keep open source open and provide users with quality alternative DBaaS solutions.</p>\n<p>&#160;</p>\n<p><a target=\"_blank\" href=\"https://sched.co/eout\"><img loading=\"lazy\" class=\"alignleft size-thumbnail wp-image-71747\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-1-150x150.jpg\" alt=\"bruce Momjian\" width=\"150\" height=\"150\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-1-150x150.jpg 150w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-1-32x32.jpg 32w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-1-128x128.jpg 128w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-1-85x85.jpg 85w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-1-50x50.jpg 50w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-1.jpg 196w\" sizes=\"(max-width: 150px) 100vw, 150px\" />The Democratization of Databases</a></p>\n<p><strong>Bruce Momjian</strong>, <a target=\"_blank\" href=\"https://www.enterprisedb.com/\">EnterpriseDB</a></p>\n<p>Democratic governments have a long history of success, albeit with some setbacks. This talk explains how democratic principles underpin the success of the open source relational database, PostgreSQL.</p>\n<p>&#160;</p>\n<p><img loading=\"lazy\" class=\"alignleft size-thumbnail wp-image-71750\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Karen-Ambrose-150x150.jpg\" alt=\"Karen Ambrose\" width=\"150\" height=\"150\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Karen-Ambrose-150x150.jpg 150w, https://www.percona.com/blog/wp-content/uploads/2020/10/Karen-Ambrose-300x300.jpg 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Karen-Ambrose-32x32.jpg 32w, https://www.percona.com/blog/wp-content/uploads/2020/10/Karen-Ambrose-128x128.jpg 128w, https://www.percona.com/blog/wp-content/uploads/2020/10/Karen-Ambrose-367x367.jpg 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Karen-Ambrose-85x85.jpg 85w, https://www.percona.com/blog/wp-content/uploads/2020/10/Karen-Ambrose-50x50.jpg 50w, https://www.percona.com/blog/wp-content/uploads/2020/10/Karen-Ambrose.jpg 404w\" sizes=\"(max-width: 150px) 100vw, 150px\" /><a target=\"_blank\" href=\"https://sched.co/eouw\">The Technological Response to a Global Pandemic â The Francis Crick Institute COVID19 Consortium Diagnostic Pipeline</a></p>\n<p><strong>Karen Ambrose</strong>, <a target=\"_blank\" href=\"https://www.crick.ac.uk/\">Crick Institute</a></p>\n<p>Karen will share the work involved in setting the Francis Crick Institute up as a COVID19 testing facility, highlighting the technological journey to support the testing efforts and the considerations taken into account in relation to data governance, the importance of data auditing throughout the pipeline, and the progress to date.</p>\n<p>&#160;</p>\n<p><a target=\"_blank\" href=\"https://sched.co/eouz\">Organizing For Your Ethical Principles</a><a target=\"_blank\" href=\"https://sched.co/eouz\"><img loading=\"lazy\" class=\"alignleft wp-image-71755 size-medium\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-02-at-1.37.21-PM-153x300.png\" alt=\"\" width=\"153\" height=\"300\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-02-at-1.37.21-PM-153x300.png 153w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-02-at-1.37.21-PM-522x1024.png 522w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-02-at-1.37.21-PM-76x150.png 76w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-02-at-1.37.21-PM-367x721.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-02-at-1.37.21-PM.png 626w\" sizes=\"(max-width: 153px) 100vw, 153px\" /></a></p>\n<p><strong>Emily Gorcenski</strong>, <a target=\"_blank\" href=\"https://www.thoughtworks.com/careers/germany\">ThoughtWorks Germany</a></p>\n<p>and</p>\n<p><strong>Liz Fong-Jones</strong>, <a target=\"_blank\" href=\"https://www.honeycomb.io/\">Honeycomb.io</a></p>\n<p>Engineers of all kinds must ensure their work serves the publicÂ good. A service that reliably harms, exacerbates injustices, or excludes marginalized groups is not a service worth building and maintaining. Learn how to effectively accomplish change in your working conditions or your employer&#8217;s products through grassroots employee advocacy.</p>\n<p>&#160;</p>\n<p>&#160;</p>\n<p><img loading=\"lazy\" class=\"alignleft size-thumbnail wp-image-71757\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-2-1-150x150.jpg\" alt=\"Sugu Sougoumarane\" width=\"150\" height=\"150\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-2-1-150x150.jpg 150w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-2-1-300x300.jpg 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-2-1-32x32.jpg 32w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-2-1-128x128.jpg 128w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-2-1-560x560.jpg 560w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-2-1-367x367.jpg 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-2-1-85x85.jpg 85w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-2-1-50x50.jpg 50w, https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-2-1.jpg 712w\" sizes=\"(max-width: 150px) 100vw, 150px\" /></p>\n<p><a target=\"_blank\" href=\"https://sched.co/eov2\">The Cloud is Inevitable</a></p>\n<p><strong>Sugu Sougoumarane</strong>, <a target=\"_blank\" href=\"https://www.planetscale.com/\">PlanetScale</a></p>\n<p>There is a reason why the cloud is gaining popularity. On one hand, the software is growing and getting more complex. In contrast, the computing power of a single machine has more or less maxed out. The only way to keep growing is by distributing our software across machines. It is only a matter of time before this requirement starts to affect the databases. For many, it already has.</p>\n<h3></h3>\n<h3>Technology Keynotes</h3>\n<p>Wednesday, October 21 (Starting at 11:00 am ET)</p>\n<p><a target=\"_blank\" href=\"https://sched.co/eov8\"><img loading=\"lazy\" class=\"alignleft size-thumbnail wp-image-71758\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/FreÌdeÌric-Descamp-150x150.jpg\" alt=\"FrÃ©dÃ©ric Descamp\" width=\"150\" height=\"150\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/FreÌdeÌric-Descamp-150x150.jpg 150w, https://www.percona.com/blog/wp-content/uploads/2020/10/FreÌdeÌric-Descamp-300x300.jpg 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/FreÌdeÌric-Descamp-32x32.jpg 32w, https://www.percona.com/blog/wp-content/uploads/2020/10/FreÌdeÌric-Descamp-128x128.jpg 128w, https://www.percona.com/blog/wp-content/uploads/2020/10/FreÌdeÌric-Descamp-560x560.jpg 560w, https://www.percona.com/blog/wp-content/uploads/2020/10/FreÌdeÌric-Descamp-367x367.jpg 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/FreÌdeÌric-Descamp.jpg 631w, https://www.percona.com/blog/wp-content/uploads/2020/10/FreÌdeÌric-Descamp-85x85.jpg 85w, https://www.percona.com/blog/wp-content/uploads/2020/10/FreÌdeÌric-Descamp-50x50.jpg 50w\" sizes=\"(max-width: 150px) 100vw, 150px\" />The State of The Dolphin</a></p>\n<p><strong>FrÃ©dÃ©ric Descamps</strong>, <a target=\"_blank\" href=\"https://www.oracle.com/index.html\">Oracle</a></p>\n<p>&#160;</p>\n<p>&#160;</p>\n<p>&#160;</p>\n<p><img loading=\"lazy\" class=\"alignleft size-thumbnail wp-image-71762\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Kimberly-Wilkins-150x150.jpg\" alt=\"Kimberly Wilkins\" width=\"150\" height=\"150\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Kimberly-Wilkins-150x150.jpg 150w, https://www.percona.com/blog/wp-content/uploads/2020/10/Kimberly-Wilkins-300x300.jpg 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Kimberly-Wilkins-32x32.jpg 32w, https://www.percona.com/blog/wp-content/uploads/2020/10/Kimberly-Wilkins-128x128.jpg 128w, https://www.percona.com/blog/wp-content/uploads/2020/10/Kimberly-Wilkins-367x367.jpg 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Kimberly-Wilkins-494x496.jpg 494w, https://www.percona.com/blog/wp-content/uploads/2020/10/Kimberly-Wilkins-85x85.jpg 85w, https://www.percona.com/blog/wp-content/uploads/2020/10/Kimberly-Wilkins-50x50.jpg 50w, https://www.percona.com/blog/wp-content/uploads/2020/10/Kimberly-Wilkins.jpg 496w\" sizes=\"(max-width: 150px) 100vw, 150px\" /><a target=\"_blank\" href=\"https://sched.co/eov5\">The State of MongoDB, Itâs Open Source Community, and Where Percona Is Going with It</a></p>\n<p><strong>Kimberly Wilkins</strong>, <a target=\"_blank\" href=\"https://www.percona.com/\">Percona</a></p>\n<p>&#160;</p>\n<p>&#160;</p>\n<p>&#160;</p>\n<p><a target=\"_blank\" href=\"https://sched.co/eov4\"><img loading=\"lazy\" class=\"alignleft size-thumbnail wp-image-71763\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Magnus-Hagander-150x150.jpg\" alt=\"Magnus Hagander\" width=\"150\" height=\"150\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Magnus-Hagander-150x150.jpg 150w, https://www.percona.com/blog/wp-content/uploads/2020/10/Magnus-Hagander-32x32.jpg 32w, https://www.percona.com/blog/wp-content/uploads/2020/10/Magnus-Hagander-128x128.jpg 128w, https://www.percona.com/blog/wp-content/uploads/2020/10/Magnus-Hagander-85x85.jpg 85w, https://www.percona.com/blog/wp-content/uploads/2020/10/Magnus-Hagander-50x50.jpg 50w, https://www.percona.com/blog/wp-content/uploads/2020/10/Magnus-Hagander.jpg 195w\" sizes=\"(max-width: 150px) 100vw, 150px\" />Postgres 13</a></p>\n<p><strong>Magnus Hagander</strong>, Consultant</p>\n<p>&#160;</p>\n<p>&#160;</p>\n<p>&#160;</p>\n<p><b>Donât miss out â view the full abstracts and agenda, and </b><a target=\"_blank\" href=\"https://www.percona.com/live/conferences\"><b>register for free today</b></a><b>! Or, </b><a target=\"_blank\" href=\"http://per.co.na/perconaliveonlineslack\"><b>join the Slack Channel</b></a><b> to start networking with hundreds of your peers in advance and during the event.</b></p>\n<p style=\"text-align: center;\"><a target=\"_blank\" class=\"btn btn-primary btn-lg\" href=\"https://www.percona.com/live/conferences\">View the Full Agenda and Register Now!</a></p>\n","descriptionType":"html","publishedDate":"Fri, 02 Oct 2020 18:54:50 +0000","feedId":11,"bgimg":"","linkMd5":"12fd98fc372130810ce822f7b3d5534f","bgimgJsdelivr":"","metaImg":"","author":"Bronwyn Campbell","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/PerconaLiveOnline2020-Keynotes-200x120.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn87@2020_4/2020/10/09/03-33-02-366_dd54c09d09087e1d.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/PerconaLiveOnline2020-Keynotes-300x180.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn28@2020_6/2020/10/09/03-32-48-598_5f6faf9f219e7ffe.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-150x150.jpg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn48@2020_6/2020/10/09/03-32-44-114_304d4823e872a5ed.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-1-150x150.jpg":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn72@2020_4/2020/10/09/03-32-45-332_134638ea413a49a3.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Karen-Ambrose-150x150.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn28@2020_2/2020/10/09/03-32-42-459_f9948a2591d4cab9.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-02-at-1.37.21-PM-153x300.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn31@2020_1/2020/10/09/03-33-20-317_d632b6bfc4d771a3.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-2-1-150x150.jpg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn64@2020_4/2020/10/09/03-32-42-745_52d2090367cfdb96.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/FreÌdeÌric-Descamp-150x150.jpg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn23@2020_2/2020/10/09/03-33-02-867_307b3f9f09950a86.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Kimberly-Wilkins-150x150.jpg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn99@2020_1/2020/10/09/03-32-47-171_b7b047c2c489b426.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Magnus-Hagander-150x150.jpg":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn95@2020_2/2020/10/09/03-32-38-692_4c42ecabb0df21fa.webp"},"publishedOrCreatedDate":1602214352605},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Our Approach to Percona Monitoring and Management Upgrade Testing","link":"https://www.percona.com/blog/?p=71698","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Percona Monitoring and Management Upgrade\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><span><img loading=\"lazy\" class=\"alignright size-medium wp-image-71918\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade-300x168.png\" alt=\"Percona Monitoring and Management Upgrade\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Hey Community! This is my first blog post so let me introduce myself. My name is Vasyl Yurkovych. I am a QA Automation Engineer at Percona and I have solid experience in software testing.Â </span></p>\n<p><span>Software quality is one of the main focuses of Percona so we put a lot of energy into it (hopefully so you donât have to!). Our biggest challenge in testing isnât necessarily running the routines against the current version, but the fact that users can decide to upgrade at any time, from pretty much any supported version.Â  So Iâd like to share with you our upgrade testing approach for <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Percona Monitoring and Management</a> (PMM) in hopes that this might be useful to others who create software that users install!</span></p>\n<p><span>PMM is released every month and our users do not reinstall each new version &#8211; they just perform the upgrade operation when thereâs a compelling feature or fix. Also, these PMM instances are not âemptyâ; they are full of various settings, monitored DBs, etc.,Â  all of which need to be preserved.</span></p>\n<p><span>Taking into account all of that, we want to make sure that:Â </span></p>\n<ul>\n<li><span>the user will not suffer after the upgrade and will enjoy the new version of PMM</span></li>\n<li><span>userâs instances will still be under monitoring without missing vital data during the upgrade</span></li>\n<li><span>settings will be preserved</span></li>\n<li><span>new features will work as expected</span></li>\n</ul>\n<p><span>We decided to automate this process and select critical automation scenarios to execute. They were split into 3 stages: Pre Upgrade, Upgrade, and Post Upgrade.</span></p>\n<h2>Pre Upgrade (UI and API Scenarios)</h2>\n<ol>\n<li><span>âFillâ PMM with monitored instances. We add each supported DB type for monitoring. Along with this, we ensure that the monitoring status of each added instance is âRUNNINGâ. For these scenarios, we use corresponding PMM API endpoints.</span></li>\n<li><span>Apply custom Settings.</span></li>\n<li><span>Check that the Upgrade widget at the Home Dashboard is present and contains an Update button, the available version of PMM is correct and Whatâs new link is there.</span></li>\n</ol>\n<h2>Upgrade</h2>\n<ol>\n<li><span>To fully simulate a user&#8217;s behavior we use the UI upgrade option.</span></li>\n</ol>\n<h2>Post Upgrade (UI Scenarios Only)</h2>\n<ol>\n<li><span>After the upgrade itself was successful we check that the Upgrade widget at the Home Dashboard indicates that the PMM has the latest version.</span></li>\n<li><span>Also, we check the PMM Inventory to confirm that all the previously monitored DB instances exist and have âRUNNINGâ statuses.</span></li>\n<li><span>We check that Query Analytics Dashboard has corresponding DB filters (filters only exist when the DB specific queries exist).</span></li>\n<li><span>We confirm that all our custom Settings were properly upgraded and remain intact.</span></li>\n</ol>\n<p><img loading=\"lazy\" class=\"alignright wp-image-71699 size-medium\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/job-e1601647562137-168x300.png\" alt=\"\" width=\"168\" height=\"300\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/job-e1601647562137-168x300.png 168w, https://www.percona.com/blog/wp-content/uploads/2020/10/job-e1601647562137-84x150.png 84w, https://www.percona.com/blog/wp-content/uploads/2020/10/job-e1601647562137-367x655.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/job-e1601647562137.png 533w\" sizes=\"(max-width: 168px) 100vw, 168px\" /></p>\n<p><span>Also, we test upgrades from the older PMM versions, so we created a CI job that runs on the weekends and during the release testing phase. This gives us the ability to check the upgrade from any available version to the latest one. All we have to do is to specify the version we want to upgrade from. Check out this screenshot as an example of a failed upgrade.</span></p>\n<p><span>Currently, we use this approach for testing Docker-based PMM Server upgrade, because PMM docker images are most commonly used. </span><span>But we plan to implement the same upgrad</span><span>e job for OVF and AMI based PMM-Server soon.Â </span></p>\n<p><span>This is the final piece of our upgrade testing approach which alerts us immediately if some version has a problem upgrading to the latest one and allows us to react at the same time.</span></p>\n<p><span>While this may seem an obvious tactic to ensure software quality, itâs amazing how often weâll discover something that only impacts a single version.Â Â </span></p>\n<p><span>You are now safe to upgrade your <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\" target=\"_blank\" rel=\"noopener\">Percona Monitoring and Management</a>Â version, as PMM CI is watching your back!</span></p>\n","descriptionType":"html","publishedDate":"Wed, 07 Oct 2020 13:46:08 +0000","feedId":11,"bgimg":"","linkMd5":"20ce31feec65a119e40ff052d6654c36","bgimgJsdelivr":"","metaImg":"","author":"Vasyl Yurkovych","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn80@2020_4/2020/10/09/03-32-33-424_6e0c04d60fc31ed3.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn15@2020_1/2020/10/09/03-33-03-385_14efe46568db2730.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/job-e1601647562137-168x300.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn75@2020_5/2020/10/09/03-32-50-368_d5a38fafb59ac314.webp"},"publishedOrCreatedDate":1602214352580},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"3 Features I Love in Percona Monitoring and Management 2.10","link":"https://www.percona.com/blog/?p=71532","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Percona-Monitoring-and-Management-2.10-features-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Percona Monitoring and Management 2.10 features\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Percona-Monitoring-and-Management-2.10-features-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/Percona-Monitoring-and-Management-2.10-features-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/Percona-Monitoring-and-Management-2.10-features-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/Percona-Monitoring-and-Management-2.10-features-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/Percona-Monitoring-and-Management-2.10-features.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Percona Monitoring and Management 2.10</a> shipped a few days ago and while it is a minor release, it introduces some features which I absolutely love. In this blog post, I will talk about those features &#8211; what they are and why they are worth loving. ð</p>\n<h2>1. Query Search</h2>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71551 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/image3.gif\" alt=\"\" width=\"1910\" height=\"930\" /></p>\n<p>This is a great feature if you have many queries and you want to find a particular query or set of queries quickly.Â  Want to find which <strong>DELETE</strong> queries cause the most load on the database?Â  Or maybe queries which access a particular table or column? You got it!</p>\n<h2>2. Crosshair in Query Analytics</h2>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71538 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/2.gif\" alt=\"PMM Crosshair in Query Analytics\" width=\"1910\" height=\"930\" /></p>\n<p>While Grafana has had the Crosshair feature for ages, it was not available in Query Analytics until now.Â  When looking at multiple time series, this is a super helpful feature to visually align multiple data points corresponding to the same point in time.</p>\n<p>Crosshair does not only work in the query view, but also in the metrics view, where it is especially helpful. Some of the metrics can be very volatile, so having the Crosshair view to see how events align is super helpful.</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71539 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/3.gif\" alt=\"Crosshair in Query Analytics PMM\" width=\"1910\" height=\"930\" /></p>\n<h2>3. System Information</h2>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71536 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/LAST.gif\" alt=\"PMM System Information\" width=\"1910\" height=\"930\" /></p>\n<p>Percona Monitoring and Management captures thousands of metrics about system configuration and operation parameters.Â  In some cases, though, it is more helpful to see the system configuration information on the same page, for example as <strong>pt-summary</strong> from <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-toolkit\">Percona Toolkit</a>. This is exactly what this new feature does &#8211; integrating pt-summary output into the Node Summary dashboard in Percona Monitoring and Management.</p>\n<p><strong>Which one of those features do you like best?Â </strong></p>\n<p>Whatever feature it is, you can check it out in action on our <a target=\"_blank\" href=\"https://pmmdemo.percona.com/\">Percona Monitoring and Management Demo site</a> or learn more information about <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Percona Monitoring and Management</a> including how to easily install or upgrade it.</p>\n","descriptionType":"html","publishedDate":"Mon, 28 Sep 2020 15:47:53 +0000","feedId":11,"bgimg":"","linkMd5":"60df5abe4b34547075223bc3e76d36af","bgimgJsdelivr":"","metaImg":"","author":"Peter Zaitsev","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/09/Percona-Monitoring-and-Management-2.10-features-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn36@2020_6/2020/10/09/03-32-33-026_f296b69a13737853.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/image3.gif":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn55@2020_1/2020/10/09/03-32-48-156_b707c388cda91f5b.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/2.gif":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn19@2020_1/2020/10/09/03-34-39-176_b33486162155e120.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/3.gif":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn12@2020_5/2020/10/09/03-33-12-461_e24eb9aeefb23b00.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/LAST.gif":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn63@2020_2/2020/10/09/03-32-59-844_01e4634237cd5fac.webp"},"publishedOrCreatedDate":1602214352584},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Rate Limit (Throttle) for MySQL with ProxySQL","link":"https://www.percona.com/blog/?p=71673","description":"<img width=\"200\" height=\"120\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Rate-Limit-Throttle-for-MySQL-with-ProxySQL-200x120.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Rate Limit (Throttle) for MySQL with ProxySQL\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Rate-Limit-Throttle-for-MySQL-with-ProxySQL-200x120.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Rate-Limit-Throttle-for-MySQL-with-ProxySQL-300x180.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Rate-Limit-Throttle-for-MySQL-with-ProxySQL-367x220.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Rate-Limit-Throttle-for-MySQL-with-ProxySQL.png 1024w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-71696\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Rate-Limit-Throttle-for-MySQL-with-ProxySQL-300x180.png\" alt=\"Rate Limit (Throttle) for MySQL with ProxySQL\" width=\"300\" height=\"180\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Rate-Limit-Throttle-for-MySQL-with-ProxySQL-300x180.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Rate-Limit-Throttle-for-MySQL-with-ProxySQL-200x120.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Rate-Limit-Throttle-for-MySQL-with-ProxySQL-367x220.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Rate-Limit-Throttle-for-MySQL-with-ProxySQL.png 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Maybe one of the more âobscureâ operations when dealing with replica lag, or, in general, when one needs to control writes to the database, is the Rate limit. It&#8217;s also lately one of the most popular conversations around the community.</p>\n<p>But what is it? In plain words: holding up queries for a while, giving air to the replicas to breath and catch up. Something similar to the Galeraâs Flow Control mechanism, although flow control, when it kicks in, stops all the writes while the nodes catch up. With a throttle no write is stopped, just delayed.</p>\n<p>There are several ways to do this. A popular tool is <a target=\"_blank\" href=\"https://github.com/github/freno\" target=\"_blank\" rel=\"noopener\">Freno</a>Â but this is also something that can be achieved with ProxySQL. Letâs see how.</p>\n<h2>Delay</h2>\n<p>ProxySQL has a variable called <a target=\"_blank\" href=\"https://github.com/sysown/proxysql/wiki/Global-variables#mysql-default_query_delay\" target=\"_blank\" rel=\"noopener\">âmysql-default_query_delayâ</a>Â  that is pretty self-explanatory. It will add a delay, in milliseconds, to all the queries passing through ProxySQL.</p>\n<p>Now, the trick is to monitor the replica lag and apply the delay. Something that in this case is solved with a small bash script:</p><pre class=\"crayon-plain-tag\">#/bin/bash\n\nset -o pipefail\n\nproxysqlhost=127.0.0.1\nproxysqladmport=6032\nproxysqluser=admin\nproxysqlpass=admin\n\nreplicahost=mysql2\nreplicauser=pmm\nreplicapass=pmm\n\nlagThreshold=3\n\n\nfunction check_lag() {\n         lag=$(mysql -h$replicahost -u$replicauser -p$replicapass -e \"SHOW SLAVE STATUS\\G\" | grep  \"Seconds_Behind_Master\" | awk -F\\: '{print $2}' 2&#62;&#38;1)\n}\n\nfunction modifyProxysqlVariable () {\n        out=$(mysql -u$proxysqluser -p$proxysqlpass -h$proxysqlhost -P6032 -e\"set mysql-default_query_delay = $delay ; LOAD MYSQL VARIABLES TO RUNTIME;\" 2&#62;&#38;1)\n        echo $out\n}\n\nfunction destructor () {\n        delay=0\n        modifyProxysqlVariable\n        echo \"bye\"\n}\n\ntrap destructor EXIT INT TERM\n\nwhile true; do\n\n        check_lag\n        echo $lag\n        if [ $lag -ge $lagThreshold ]; then\n                delay=1\n                modifyProxysqlVariable\n        elif [ $lag -eq 0 ]; then\n                delay=0\n                modifyProxysqlVariable\n        fi\n        sleep 0.001\ndone</pre><p>Replica lag will be monitored on a loop, and when it&#8217;s bigger than the threshold, 1mS of delay will be added overall. And after lag is under control, the delay is removed.</p>\n<p>For testing purposes, I have set up a basic Primary/Replica environment, running with sysbench on high concurrency setup to make the replica lag on purpose. I collected some graphs with <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Percona Monitoring and Management</a>,Â  and hereâs how it looks:</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71679 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.49.54-1024x159.png\" alt=\"Rate Limit MySQL\" width=\"900\" height=\"140\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.49.54-1024x159.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.49.54-300x47.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.49.54-200x31.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.49.54-1536x238.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.49.54-2048x318.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.49.54-367x57.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>The above graph shows the lag constantly growing until the script starts to run and the replica eventually catches up. Fantastic! Until you see the Questions graphs and it looks veryâ¦.flat</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71678 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.16-1024x314.png\" alt=\"throttle MySQL\" width=\"900\" height=\"276\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.16-1024x314.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.16-300x92.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.16-200x61.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.16-1536x472.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.16-2048x629.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.16-367x113.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>So what happened is that until the lag reached the threshold (in this case, 3 seconds) all the traffic was delayed. Once the lag is under control, traffic is back but not at 100% since the throttle script continues to run. So it maintains the replica up to date at a cost of rate-limiting the writes.</p>\n<p><img loading=\"lazy\" class=\"aligncenter size-large wp-image-71677\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.27-1024x314.png\" alt=\"\" width=\"900\" height=\"276\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.27-1024x314.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.27-300x92.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.27-200x61.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.27-1536x471.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.27-2048x628.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.27-367x113.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>And the above graph shows the same (questions) but from the ProxySQL dashboard perspective.</p>\n<p>Now, whatâs the alternative?</p>\n<h2>Delay on Rules</h2>\n<p>ProxySQL query rules can be set with delays per rule. Since the idea is to add less overhead, a good approach is to check which query rule is the least used and see if by adding a delay to it we can control the lag.</p><pre class=\"crayon-plain-tag\">Admin&#62; SELECT hits, mysql_query_rules.rule_id, match_digest, match_pattern, replace_pattern, cache_ttl, apply, delay FROM mysql_query_rules NATURAL JOIN stats.stats_mysql_query_rules ORDER BY mysql_query_rules.rule_id;\n+-----------+---------+--------------+-----------------------+-----------------+-----------+-------+-------+\n| hits      | rule_id | match_digest | match_pattern         | replace_pattern | cache_ttl | apply | delay |\n+-----------+---------+--------------+-----------------------+-----------------+-----------+-------+-------+\n| 0         | 1       | NULL         | ^SELECT .* FOR UPDATE | NULL            | NULL      | 0     | NULL  |\n| 609897074 | 2       | NULL         | ^SELECT .*            | NULL            | NULL      | 0     | NULL  |\n| 87128148  | 3       | NULL         | ^UPDATE .*            | NULL            | NULL      | 0     | 0     |\n| 43561905  | 4       | NULL         | ^INSERT .*            | NULL            | NULL      | 0     | 0     |\n| 43562935  | 5       | NULL         | ^DELETE .*            | NULL            | NULL      | 0     | 0     |\n| 0         | 6       | NULL         | ^REPLACE .*           | NULL            | NULL      | 0     | NULL  |\n+-----------+---------+--------------+-----------------------+-----------------+-----------+-------+-------+\n6 rows in set (0.01 sec)</pre><p>From that query, we can see that the rule with id 5, the one that routes the DELETEs, is the least used from all the rules that hit the Primary.</p>\n<p>We just need to make a small adjustment to the script to modify the mysql_query_rules table, by adding a proper function. The full script with the modification looks like this:</p><pre class=\"crayon-plain-tag\">#/bin/bash\n\nset -o pipefail\n\nproxysqlhost=127.0.0.1\nproxysqladmport=6032\nproxysqluser=admin\nproxysqlpass=admin\n\nreplicahost=mysql2\nreplicauser=pmm\nreplicapass=pmm\n\nlagThreshold=3\n\nruleId=5\n\nfunction destructor () {\n        delay=0\n        modifyRuleDelay\n        echo \"bye\"\n}\n\nfunction check_lag() {\n         lag=$(mysql -h$replicahost -u$replicauser -p$replicapass -e \"SHOW SLAVE STATUS\\G\" | grep  \"Seconds_Behind_Master\" | awk -F\\: '{print $2}' 2&#62;&#38;1)\n}\n\nfunction modifyRuleDelay () {\n        out=$(mysql -u$proxysqluser -p$proxysqlpass -h$proxysqlhost -P6032 -e\"update mysql_query_rules set delay = $delay where rule_id = $ruleId ; LOAD MYSQL QUERY RULES TO RUNTIME;\" 2&#62;&#38;1)\n}\n\ntrap destructor EXIT INT TERM\n\nwhile true; do\n\n        check_lag\n        echo $lag\n        if [ $lag -ge $lagThreshold ]; then\n                delay=1\n                modifyRuleDelay\n        elif [ $lag -eq 0 ]; then\n                delay=0\n                modifyRuleDelay\n        fi\n        sleep 0.001\ndone</pre><p>Now, running the script we can see that the same behavior happens. Lag is controlled:</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71676 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.45-1024x158.png\" alt=\"rate limit for Proxsql\" width=\"900\" height=\"139\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.45-1024x158.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.45-300x46.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.45-200x31.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.45-1536x238.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.45-2048x317.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.45-367x57.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>What about the Questions? Well, now the drop is not complete, and some traffic can still be routed and when the replica catches up, the behavior is the same as a small reduction, being that the cost of keeping the lag controlled.</p>\n<p><img loading=\"lazy\" class=\"aligncenter size-large wp-image-71675\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.01-1024x320.png\" alt=\"\" width=\"900\" height=\"281\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.01-1024x320.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.01-300x94.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.01-200x62.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.01-1536x479.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.01-2048x639.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.01-367x115.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>ProxySQL reports the same.</p>\n<p><img loading=\"lazy\" class=\"aligncenter size-large wp-image-71674\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.11-1024x314.png\" alt=\"\" width=\"900\" height=\"276\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.11-1024x314.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.11-300x92.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.11-200x61.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.11-1536x472.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.11-2048x629.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.11-367x113.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>Now, we have talked about controlling lag but pretty much any status variable can be monitored. Perhaps your issues are with contention (Threads_running) or with IO-bound issues (InnoDB checkpoint age). Regardless of the variable, rate limit can be achievable with ProxySQL.</p>\n","descriptionType":"html","publishedDate":"Fri, 02 Oct 2020 13:46:28 +0000","feedId":11,"bgimg":"","linkMd5":"c765556f8b3146550729d5a39e108f89","bgimgJsdelivr":"","metaImg":"","author":"Daniel GuzmÃ¡n Burgos","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Rate-Limit-Throttle-for-MySQL-with-ProxySQL-200x120.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn51@2020_2/2020/10/09/03-33-03-443_37f871ef10a6ba17.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Rate-Limit-Throttle-for-MySQL-with-ProxySQL-300x180.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn39@2020_1/2020/10/09/03-33-18-816_cd429822640a2545.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.49.54-1024x159.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn36@2020_4/2020/10/09/03-32-49-043_5da30452fc1b5359.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.16-1024x314.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn76@2020_1/2020/10/09/03-33-00-459_d694d986a5f19f47.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.27-1024x314.png":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn92@2020_2/2020/10/09/03-32-42-970_fb94f862a9ee90a8.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.45-1024x158.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn83@2020_6/2020/10/09/03-32-33-819_c0bb30245edaa6df.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.01-1024x320.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn52@2020_5/2020/10/09/03-32-49-851_1182a2787d74e178.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.11-1024x314.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn60@2020_1/2020/10/09/03-32-49-874_819bcd56ff54a529.webp"},"publishedOrCreatedDate":1602214352586},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"MySQL 101: Tuning MySQL After Upgrading Memory","link":"https://www.percona.com/blog/?p=70341","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory-200x112.jpg\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Tuning MySQL After Upgrading Memory\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory-200x112.jpg 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory-300x168.jpg 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory-1024x572.jpg 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory-367x205.jpg 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory.jpg 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-71583\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory-300x168.jpg\" alt=\"Tuning MySQL After Upgrading Memory\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory-300x168.jpg 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory-1024x572.jpg 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory-200x112.jpg 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory-367x205.jpg 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory.jpg 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />In this post, we will discuss what to do when you add more memory to your instance. Adding memory to a server where MySQL is running is common practice when scaling resources.</p>\n<h3>First, Some Context</h3>\n<p>Scaling resources is just adding more resources to your environment, and this can be split in two main ways: vertical scaling and horizontal scaling.</p>\n<p>Vertical scaling is increasing hardware capacity for a given instance, thus having a more powerful server, while horizontal scaling is adding more servers, a pretty standard approach for load balancing and sharding.</p>\n<p>As traffic grows, working datasets are getting bigger, and thus we start to suffer because the data that doesn&#8217;t fit into memory has to be retrieved from disk. This is a costly operation, even with modern NVME drives, so at some point, we will need to deal with either of the scaling solutions we mentioned.</p>\n<p>In this case, we will discuss adding more RAM, which is usually the fastest and easiest way to scale hardware vertically, and also having more memory is probably the main benefit for MySQL.</p>\n<h3>How to Calculate Memory Utilization</h3>\n<p>First of all, we need to be clear about what variables allocate memory during MySQL operations, and we will cover only commons ones as there are a bunch of them. Also, we need to know that some variables will allocate memory globally, and others will do a per-thread allocation.</p>\n<p>For the sake of simplicity, we will cover this topic considering the usage of the standard storage engine: <strong>InnoDB</strong>.</p>\n<p>We have globally allocated variables:</p>\n<p><strong><em>key_buffer_size</em></strong>: MyISAM setting should be set to 8-16M, and anything above that is just wrong because we shouldn&#8217;t use MyISAM tables unless for a particular reason. A typical scenario is MyISAM being used by system tables only, which are small (this is valid for versions up to 5.7), and in MySQL 8 system tables were migrated to the InnoDB engine. So the impact of this variable is negligible.</p>\n<p><strong><em>query_cache_size</em></strong>: 0 is default and removed in 8.0, so we won&#8217;t consider it.</p>\n<p><strong><em>innodb_buffer_pool_size</em></strong>: which is the cache where InnoDB places pages to perform operations. The bigger, the better. ð</p>\n<p>Of course, there are others, but their impact is minimal when running with defaults.</p>\n<p>Also, there are other variables that are allocated on each thread (or open connection):<br />\n<em>read_buffer_size</em>, <em>read_rnd_buffer_size</em>, <em>sort_buffer_size</em>, <em>join_buffer_size</em> and <em>tmp_table_size</em>, and few others. All of them, by default, work very well as allocation is small and efficient. Hence, the main potential issue becomes where we allocate many connections that can hold these buffers for some time and add extra memory pressure. The ideal situation is to control how many connections are being opened (and used) and try to reduce that number to a sufficient number that doesn&#8217;t hurt the application.</p>\n<p>But let&#8217;s not lose the focus, we have more memory, and we need to know how to tune it properly to make the best usage.</p>\n<p>The most memory-impacting setting we need to focus on is <em>innodb_buffer_pool_size,</em> as this is where almost all magic happens and is usually the more significant memory consumer. There is an old rule of thumb that says, &#8220;size of this setting should be set around 75% of available memory&#8221;, and some cloud vendors setup this value to <em>total_memory*0.75</em>.</p>\n<p>I said &#8220;old&#8221; because that rule was good when running instances with 8G or 16G of RAM was common, so allocating roughly 6G out of 8G or 13G out of 16G used to be logical.</p>\n<p>But what if we run into an instance with 100G or even 200G? It&#8217;s not uncommon to see this type of hardware nowadays, so we will use 80G out of 100G or 160G out of 200G? Meaning, will we avoid allocating something between 20G to 40G of memory and leave that for filesystem cache operations? While these filesystem operations are not useless, I don&#8217;t see OS needing more than 4G-8G for this purpose on a dedicated DB. Also, it is recommended to use the O_DIRECT flushing method for InnoDB to bypass the filesystem cache.</p>\n<h3>Example</h3>\n<p>Now that we understand the primary variables allocating memory let&#8217;s check a good use case I&#8217;m currently working on. Assuming this system:</p><pre class=\"crayon-plain-tag\">$ free -m\n      total      used     free    shared    buff/cache    available\nMem: 385625    307295    40921         4         37408        74865</pre><p>So roughly 380G of RAM, a nice amount of memory. Now let&#8217;s check what is the maximum potential allocation considering max used connections.<br />\n<em><br />\n*A little disclaimer here, while this query is not entirely accurate and thus it can diverge from real results, we can have a sense of what is potentially going to be allocated, and we can take advantage of performance_schema database, but this may require enabling some instruments disabled by default:</em></p><pre class=\"crayon-plain-tag\">mysql &#62; show global status like 'max_used_connections';\n+----------------------+-------+\n| Variable_name        | Value |\n+----------------------+-------+\n| Max_used_connections |    67 |\n+----------------------+-------+\n1 row in set (0.00 sec)</pre><p>So with a maximum of 67 connections used, we can get:</p><pre class=\"crayon-plain-tag\">mysql &#62; SELECT ( @@key_buffer_size\n-&#62; + @@innodb_buffer_pool_size\n-&#62; + 67 * (@@read_buffer_size\n-&#62; + @@read_rnd_buffer_size\n-&#62; + @@sort_buffer_size\n-&#62; + @@join_buffer_size\n-&#62; + @@tmp_table_size )) / (1024*1024*1024) AS MAX_MEMORY_GB;\n+---------------+\n| MAX_MEMORY_GB |\n+---------------+\n| 316.4434      |\n+---------------+\n1 row in set (0.00 sec)</pre><p>So far, so good, we are within memory ranges, now let&#8217;s see how big the <em>innodb_buffer_pool_size</em> is and if it is well sized:</p><pre class=\"crayon-plain-tag\">mysql &#62; SELECT (@@innodb_buffer_pool_size) / (1024*1024*1024) AS BUFFER_POOL_SIZE;\n+------------------+\n| BUFFER_POOL_SIZE |\n+------------------+\n| 310.0000         |\n+------------------+\n1 row in set (0.01 sec)</pre><p>So the buffer pool is 310G, roughly 82% of total memory, and total usage so far was around 84% which leaves us around 60G of memory not being used. Well, being used by filesystem cache, which, in the end, is not used by InnoDB.</p>\n<p>Ok now, let&#8217;s get to the point, how to properly configure memory to be used effectively by MySQL. From pt-mysql-summary we know that the buffer pool is fully filled:</p><pre class=\"crayon-plain-tag\">Buffer Pool Size | 310.0G\nBuffer Pool Fill | 100%</pre><p>Does this mean we need more memory? Maybe, so let&#8217;s check how many disk operations we have in an instance we know with a working dataset that doesn&#8217;t fit in memory (the very reason why we increased memory size) using with this command:</p><pre class=\"crayon-plain-tag\">mysqladmin -r -i 1 -c 60 extended-status | egrep \"Innodb_buffer_pool_read_requests|Innodb_buffer_pool_reads\"\n| Innodb_buffer_pool_read_requests | 99857480858|\n| Innodb_buffer_pool_reads         | 598600690  |\n| Innodb_buffer_pool_read_requests | 274985     |\n| Innodb_buffer_pool_reads         | 1602       |\n| Innodb_buffer_pool_read_requests | 267139     |\n| Innodb_buffer_pool_reads         | 1562       |\n| Innodb_buffer_pool_read_requests | 270779     |\n| Innodb_buffer_pool_reads         | 1731       |\n| Innodb_buffer_pool_read_requests | 287594     |\n| Innodb_buffer_pool_reads         | 1567       |\n| Innodb_buffer_pool_read_requests | 282786     |\n| Innodb_buffer_pool_reads         | 1754       |</pre><p><em>Innodb_buffer_pool_read_requests</em>: page reads satisfied from memory (good)<br />\n<em>Innodb_buffer_pool_reads</em>: page reads from disk (bad)</p>\n<p>As you may notice, we still get some reads from the disk, and we want to avoid them, so let&#8217;s increase the buffer pool size to 340G (90% of total memory) and check again:</p><pre class=\"crayon-plain-tag\">mysqladmin -r -i 1 -c 60 extended-status | egrep \"Innodb_buffer_pool_read_requests|Innodb_buffer_pool_reads\"\n| Innodb_buffer_pool_read_requests | 99937722883 |\n| Innodb_buffer_pool_reads         | 599056712   |\n| Innodb_buffer_pool_read_requests | 293642      |\n| Innodb_buffer_pool_reads         | 1           |\n| Innodb_buffer_pool_read_requests | 296248      |\n| Innodb_buffer_pool_reads         | 0           |\n| Innodb_buffer_pool_read_requests | 294409      |\n| Innodb_buffer_pool_reads         | 0           |\n| Innodb_buffer_pool_read_requests | 296394      |\n| Innodb_buffer_pool_reads         | 6           |\n| Innodb_buffer_pool_read_requests | 303379      |\n| Innodb_buffer_pool_reads         | 0           |</pre><p>Now we are barely going to disk, and IO pressure was released; this makes us happy &#8211;Â  right?</p>\n<h3>Summary</h3>\n<p>If you increase the memory size of a server, you mostly need to focus on <em>innodb_buffer_pool_size,</em> as this is the most critical variable to tune. Allocating 90% to 95% of total available memory on big systems is not bad at all, as OS requires only a few GB to run correctly, and a few more for memory swap should be enough to run without problems.</p>\n<p>Also, check your maximum connections required (and used,) as this is a common mistake causing memory issues, and if you need to run with 1000 connections opened, then allocating 90% of the memory of the buffer pool may not be possible, and some additional actions may be required (i.e., adding a proxy layer or a connection pool).</p>\n<p>From MySQL 8, we have a new variable called <a target=\"_blank\" href=\"https://dev.mysql.com/doc/refman/8.0/en/innodb-dedicated-server.html\">innodb_dedicated_server</a>, which will auto-calculate the memory allocation. While this variable is really useful for an initial approach, it may under-allocate some memory in systems with more than 4G of RAM as it sets the buffer pool size = (detected server memory * 0.75), so in a 200G server, we have only 150 for the buffer pool.</p>\n<h3>Conclusion</h3>\n<p>Vertical scaling is the easiest and fastest way to improve performance, and it is also cheaper &#8211; but not magical. Tuning variables properly requires analysis and understanding of how memory is being used. This post focused on the essential variables to consider when tuning memory allocation, specifically innodb_buffer_pool_size and max_connections. Don&#8217;t over-tune when it&#8217;s not necessary and be cautious of how these two affect your systems.</p>\n","descriptionType":"html","publishedDate":"Wed, 30 Sep 2020 15:04:44 +0000","feedId":11,"bgimg":"","linkMd5":"45265ba0e2a6922e43c81dc4ea7f16a4","bgimgJsdelivr":"","metaImg":"","author":"Francisco Bordenave","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory-200x112.jpg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn72@2020_1/2020/10/09/03-32-48-651_229209bf79312d57.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory-300x168.jpg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn32@2020_6/2020/10/09/03-32-38-694_4f77a5846097c14b.webp"},"publishedOrCreatedDate":1602214352601},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Webinar October 14: Percona, AWS, & ScienceLogic â Converting DBaaS to a Fully Managed Solution","link":"https://www.percona.com/blog/?p=71453","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Converting DBaaS to a Fully Managed Solution\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-71501\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution-300x168.png\" alt=\"Converting DBaaS to a Fully Managed Solution\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Database-as-a-service (DBaaS) can be thought of as a platform that can be used to manage an organizationâs database environment(s). One of the most well known DBaaS platforms is Aurora powered by AWS.</p>\n<p>In this webinar, Ananias Tsalouchidis, Senior MySQL DBA at Percona,Â  will discuss how Percona can convert your DBaaS to a fully-managed solution ensuring that Aurora is properly optimized for better application performance, creating proper architecture and design, achieving better monitoring and troubleshooting, and performing other mission-critical platform operations.</p>\n<p>Weâll be joined by Richard Chart, Chief Scientist at ScienceLogic, who will discuss the hands-on implications of working with Percona and utilizing our technology to support their growing needs. In addition, weâll be joined by technical experts Vijay Karumajji and Aditya Samant, MySQL Specialist Solutions Architects from AWS, whoâll touch base on the many benefits of Aurora.</p>\n<p>Please join <strong>Ananias Tsalouchidis</strong>, <strong>Richard Chart</strong>, <b> Vijay Karumajji, </b>and<b> Aditya Samant </b>on <strong>Wednesday, October 14, 2020, at 1:00 pm EDT</strong> for the webinar <strong>&#8220;Percona, AWS, &#38; ScienceLogic &#8211; Converting DBaaS to a Fully Managed Solution</strong>&#8220;.</p>\n<p style=\"text-align: center;\"><a target=\"_blank\" class=\"btn btn-primary btn-lg\" href=\"https://attendee.gotowebinar.com/register/7369967477138385163?source=blog\">Register for Webinar</a></p>\n<p>If you can&#8217;t attend, <a target=\"_blank\" href=\"https://attendee.gotowebinar.com/register/7369967477138385163?source=blog\">sign up anyway</a> and we&#8217;ll send you the slides and recording afterward.</p>\n","descriptionType":"html","publishedDate":"Thu, 24 Sep 2020 13:40:15 +0000","feedId":11,"bgimg":"","linkMd5":"59cf142d1bc9013419d273b2f0b5d977","bgimgJsdelivr":"","metaImg":"","author":"David Quilty","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn6@2020_2/2020/10/09/03-32-47-009_7f2996b3dba7dbdf.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn35@2020_5/2020/10/09/03-32-47-801_2c3a90c9895ad51f.webp"},"publishedOrCreatedDate":1602214352584},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"How to Find Query Slowdowns Using Percona Monitoring and Management","link":"https://www.percona.com/blog/?p=71807","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Query-Slowdowns-Using-Percona-Monitoring-and-Management-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Query Slowdowns Using Percona Monitoring and Management\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Query-Slowdowns-Using-Percona-Monitoring-and-Management-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Query-Slowdowns-Using-Percona-Monitoring-and-Management-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Query-Slowdowns-Using-Percona-Monitoring-and-Management-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Query-Slowdowns-Using-Percona-Monitoring-and-Management-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Query-Slowdowns-Using-Percona-Monitoring-and-Management.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p>Visibility is a blessing, and with databases, visibility is a must. Thatâs true not only for metrics but for the queries themselves. Having info on all the stats around query execution is priceless, and <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Percona Monitoring and Management</a> (PMM) offers that in the form of the Query Analytics dashboard (QAN).</p>\n<p>But where to start? QAN helps you with that by calculating the query profile. What is the profile? It&#8217;s a rank of queries, ordered by Load, so it is easy to spot the heaviest queries hitting your database. The Load is defined as the âAverage Active Queriesâ but can also be defined as a mix of Query Execution Time Plus Query count. In other words, all the time the query was alive and kicking.</p>\n<p>The Profile in PMM 2.10.0 looks like this:</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71808 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-05-at-10.46.16-1024x334.png\" alt=\"percona monitoring and management\" width=\"900\" height=\"294\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-05-at-10.46.16-1024x334.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-05-at-10.46.16-300x98.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-05-at-10.46.16-200x65.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-05-at-10.46.16-1536x502.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-05-at-10.46.16-2048x669.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-05-at-10.46.16-367x120.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>The purpose of this profile is to facilitate the task of finding the queries that are worth improving, or at least the ones that will have a bigger impact on the performance when optimized.</p>\n<p>However, how do you know that a slow query has been always slow or it has come down the road from good performance to painfully slow? Thatâs where the graph on the âLoadâ column comes handy.</p>\n<p>Thereâs a method for doing this. The first step is to have a wide view. That means: check a time range long enough so you can see patterns. Personally, I like to check the last 7 days.</p>\n<p>The second step is to find irregularities like spikes or increasing patterns. For example, in the above profile, we can see that the âSHOW BINARY LOGSâ command is the top #4 of queries adding more load to the database. In this case, it&#8217;s because the binlogs are not being purged, so every day there are more and more binlog files to read and that adds to the executing time. But the amount of times that the âSHOW BINARY LOGSâ query is executed remains the same.</p>\n<p>Another query with an âanomalyâ in the load graph is the top #3 one. Letâs isolate it and see what happened:</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71809 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-09-30-at-21.23.08-1024x572.png\" alt=\"Query Analytics dashboard percona\" width=\"900\" height=\"503\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-09-30-at-21.23.08-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-09-30-at-21.23.08-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-09-30-at-21.23.08-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-09-30-at-21.23.08-1536x858.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-09-30-at-21.23.08-2048x1144.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-09-30-at-21.23.08-367x205.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>The third step will be to reduce the time to a range involving the event so we can isolate it even more:</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71833 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.29.21-1024x488.png\" alt=\"Query Analytics dashboard percona monitoring and management\" width=\"900\" height=\"429\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.29.21-1024x488.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.29.21-300x143.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.29.21-200x95.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.29.21-1536x732.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.29.21-2048x975.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.29.21-367x175.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>The event happened between 8 AM and 9 AM. To discard or confirm that is an isolated event only related to this query, letâs see again all the queries running at that same moment.</p>\n<p><img loading=\"lazy\" class=\"size-large wp-image-71834 aligncenter\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.37.31-1024x275.png\" alt=\"\" width=\"900\" height=\"242\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.37.31-1024x275.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.37.31-300x81.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.37.31-200x54.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.37.31-1536x413.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.37.31-2048x550.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.37.31-367x99.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>So this is a generic situation, common to several queries. Most likely it was an event with the server that made queries to stall.</p>\n<p>By looking at the threads graph, we can confirm that hypothesis:</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71835 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.38.49-1024x287.png\" alt=\"MySQL Active Client Threads\" width=\"900\" height=\"252\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.38.49-1024x287.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.38.49-300x84.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.38.49-200x56.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.38.49-1536x430.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.38.49-2048x574.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.38.49-367x103.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>After some digging, the source cause was detected to be a Disk problem:</p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71836 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.39.57-1024x583.png\" alt=\"Query Analytics dashboard disk latency\" width=\"900\" height=\"512\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.39.57-1024x583.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.39.57-300x171.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.39.57-200x114.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.39.57-1536x875.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.39.57-2048x1166.png 2048w, https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.39.57-367x209.png 367w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p>It&#8217;s confirmed that it is not an issue with the query itself, so no need to âoptimizeâ due to this spike.</p>\n<p>In conclusion, with the new QAN dashboard available since PMM 2.10.0, finding query slowdowns is easier thanks to the Load graph that can give us context pretty fast.</p>\n<p>Try <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Percona Monitoring and Management</a> today, for free!</p>\n","descriptionType":"html","publishedDate":"Wed, 07 Oct 2020 15:37:14 +0000","feedId":11,"bgimg":"","linkMd5":"92a22ad930aeea29f866ef7ca9895077","bgimgJsdelivr":"","metaImg":"","author":"Daniel GuzmÃ¡n Burgos","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Query-Slowdowns-Using-Percona-Monitoring-and-Management-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn60@2020_2/2020/10/09/03-32-45-641_9021b47bf99a29bb.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-05-at-10.46.16-1024x334.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn12@2020_4/2020/10/09/03-33-00-184_f0dc665386e62cbb.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-09-30-at-21.23.08-1024x572.png":"https://cdn.jsdelivr.net/gh/myreaderx/cdn19@2020_5/2020/10/09/03-32-55-872_bbffab9d13cb5229.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.29.21-1024x488.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn63@2020_3/2020/10/09/03-32-44-748_b42159ca3586fb4a.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.37.31-1024x275.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn51@2020_3/2020/10/09/03-33-03-687_7b3515170155b4a7.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.38.49-1024x287.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn44@2020_1/2020/10/09/03-33-02-808_e9e3e1995e70c70a.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.39.57-1024x583.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn56@2020_5/2020/10/09/03-32-55-844_ccbc0337439f320c.webp"},"publishedOrCreatedDate":1602214352580},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Webinar October 27: Disaster Recovery and High Availability â The Concepts, The Mistakes, and How To Properly Plan For Failure","link":"https://www.percona.com/blog/?p=71923","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Percona Disaster Recovery and High Availability\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-71926\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability-300x168.png\" alt=\"Percona Disaster Recovery and High Availability\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Any good system must be built to expect the unexpected. None are perfect and at some point, something WILL happen to render the system non-operational causing failure.</p>\n<p>Join <span class=\"c-message__sender c-message_kit__sender\" data-qa=\"message_sender\" data-stringify-type=\"replace\" data-stringify-text=\"Dimitri Vanoverbeke\">Dimitri Vanoverbeke</span>, Senior Percona Engineer, as he discusses the concepts of High Availability, Disaster Recovery, common missteps that happen along the way, and how to ultimately prepare for failure.</p>\n<p>Please join <strong><span class=\"c-message__sender c-message_kit__sender\" data-qa=\"message_sender\" data-stringify-type=\"replace\" data-stringify-text=\"Dimitri Vanoverbeke\">Dimitri Vanoverbeke </span></strong>on <strong>Tuesday, October 27th, at 1 pm EDT</strong> for his webinar <strong>&#8220;Disaster Recovery and High Availability &#8211; The Concepts, The Mistakes, and How To Properly Plan For Failure</strong>&#8220;.</p>\n<p style=\"text-align: center;\"><a target=\"_blank\" class=\"btn btn-primary btn-lg\" href=\"https://attendee.gotowebinar.com/register/974194100516663312?source=blog\">Register for Webinar</a></p>\n<p>If you can&#8217;t attend, <a target=\"_blank\" href=\"https://attendee.gotowebinar.com/register/974194100516663312?source=blog\">sign up anyway</a> and we&#8217;ll send you the slides and recording afterward.</p>\n","descriptionType":"html","publishedDate":"Wed, 07 Oct 2020 14:36:43 +0000","feedId":11,"bgimg":"","linkMd5":"d44952a88ea58cd753431adb75587088","bgimgJsdelivr":"","metaImg":"","author":"David Quilty","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn23@2020_3/2020/10/09/03-32-49-041_432c8ec674c03222.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn3@2020_5/2020/10/09/03-32-59-903_77da4c440e2ee42c.webp"},"publishedOrCreatedDate":1602214352580},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"New MongoDB Exporter Released with Percona Monitoring and Management 2.10.0","link":"https://www.percona.com/blog/?p=70811","description":"<img width=\"200\" height=\"105\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-200x105.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"MongoDB Exporter Percona Monitoring and Management\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-1024x536.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-1140x595.png 1140w, https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-367x192.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-71419\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-300x157.png\" alt=\"MongoDB Exporter Percona Monitoring and Management\" width=\"300\" height=\"157\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-1024x536.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-1140x595.png 1140w, https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-367x192.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />With <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Percona Monitoring and Management (PMM) 2.10.0</a>, Percona is releasing a new MongoDB exporter for Prometheus. It is a complete rewrite from scratch with a totally new approach to collect and expose metrics from MongoDB diagnostic commands.</p>\n<p>The MongoDB exporter in the 0.11.x branch exposes only a static list of handpicked metrics with custom names and labels. The new exporter uses a totally different approach: it exposes ALL available metrics returned by MongoDB internal diagnostic commands and the metric naming (or renaming) follows concrete rules that apply the same for all metrics.</p>\n<p>For example, if we run <pre class=\"crayon-plain-tag\">db.getSiblingDB('admin').runCommand({\"getDiagnosticData\": 1});</pre>Â the command returns a structure that looks like this:</p><pre class=\"crayon-plain-tag\">{\nÂ Â Â Â Â \"data\" : {\nÂ Â Â Â Â Â Â Â Â \"start\" : ISODate(\"2020-08-23T22:25:26Z\"),\nÂ Â Â Â Â Â Â Â Â \"serverStatus\" : {\nÂ Â Â Â Â Â Â Â Â Â Â Â Â \"start\" : ISODate(\"2020-08-23T22:25:26Z\"),\nÂ Â Â Â Â Â Â Â Â Â Â Â Â \"host\" : \"f9cd25606ada\",\nÂ Â Â Â Â Â Â Â Â Â Â Â Â \"version\" : \"4.2.8\",\nÂ Â Â Â Â Â Â Â Â Â Â Â Â \"process\" : \"mongod\",\nÂ Â Â Â Â Â Â Â Â Â Â Â Â \"pid\" : NumberLong(1),\nÂ Â Â Â Â Â Â Â Â Â Â Â Â \"uptime\" : 186327,\nÂ Â Â Â Â Â Â Â Â Â Â Â Â \"uptimeMillis\" : NumberLong(186327655),\nÂ Â Â Â Â Â Â Â Â Â Â Â Â \"uptimeEstimate\" : NumberLong(186327),\nÂ Â Â Â Â Â Â Â Â Â Â Â Â \"localTime\" : ISODate(\"2020-08-23T22:25:26Z\"),\nÂ Â Â Â Â Â Â Â Â Â Â Â Â \"asserts\" : {\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"regular\" : 0,\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"warning\" : 0,\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"msg\" : 0,\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"user\" : 62,\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"rollovers\" : 0\nÂ Â Â Â Â Â Â Â Â Â Â Â Â },\nÂ Â Â Â Â Â Â Â Â Â Â Â Â \"connections\" : {\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"current\" : 25,\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"available\" : 838835,\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"totalCreated\" : 231,\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"active\" : 1\nÂ Â Â Â Â Â Â Â Â Â Â Â Â },\nÂ Â Â Â Â Â Â Â Â Â Â Â Â \"electionMetrics\" : {\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"stepUpCmd\" : {\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"called\" : NumberLong(0),\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"successful\" : NumberLong(0)\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â },\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"priorityTakeover\" : {\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"called\" : NumberLong(0),\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"successful\" : NumberLong(0)\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â },\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"catchUpTakeover\" : {\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"called\" : NumberLong(0),\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â \"successful\" : NumberLong(0)\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â },</pre><p>In the new exporter, the approach to expose all metrics is to traverse the result of the diagnostic commands like <pre class=\"crayon-plain-tag\">getDiagnosticData</pre>looking for values to expose. In this case, we have <pre class=\"crayon-plain-tag\">serverStatus</pre>, inside it we found <pre class=\"crayon-plain-tag\">asserts</pre>Â and inside asserts there are metrics to expose (because they are numbers): <pre class=\"crayon-plain-tag\">regular</pre>, <pre class=\"crayon-plain-tag\">warning</pre>, <pre class=\"crayon-plain-tag\">msg</pre>, <pre class=\"crayon-plain-tag\">user</pre>, and <pre class=\"crayon-plain-tag\">rollovers</pre>. In this method of metric gathering, the metric name is the composition of the metrics keys we had to follow, for example, it will produce a metric like this: <pre class=\"crayon-plain-tag\">serverStatus_asserts_user</pre>:<pre class=\"crayon-plain-tag\">62</pre>.</p>\n<p>If we open the web interface for the exporter at http://localhost:9216, we won&#8217;t find that metric I just mentioned. Why? Because to make the metric names shorter and to be able to group some metrics under the same name, the new exporter implements a metric name prefix rename and we are converting some metric suffixes to labels.</p>\n<h2>Prefix Renaming Table</h2>\n<p>The string <pre class=\"crayon-plain-tag\">mongodb_</pre> is prepended to all metrics as the Prometheus job name. Unlike &#60; v2.0 mongodb_exporter, there won&#8217;t be <pre class=\"crayon-plain-tag\">mongod</pre>Â vs. <pre class=\"crayon-plain-tag\">mongos</pre>Â in the job name.</p>\n<table style=\"border: 1px solid black; border-collapse: collapse; float: left;\" width=\"80%\">\n<tbody>\n<tr>\n<th>Metric Prefix</th>\n<th>New Prefix</th>\n</tr>\n<tr>\n<td>serverStatus.wiredTiger.transaction</td>\n<td>ss_wt_txn</td>\n</tr>\n<tr>\n<td>serverStatus.wiredTiger</td>\n<td>ss_wt</td>\n</tr>\n<tr>\n<td>serverStatus</td>\n<td>ss</td>\n</tr>\n<tr>\n<td>replSetGetStatus</td>\n<td>rs</td>\n</tr>\n<tr>\n<td>systemMetrics</td>\n<td>sys</td>\n</tr>\n<tr>\n<td>local.oplog.rs.stats.wiredTiger</td>\n<td>oplog_stats_wt</td>\n</tr>\n<tr>\n<td>local.oplog.rs.stats</td>\n<td>oplog_stats</td>\n</tr>\n<tr>\n<td>collstats_storage.wiredTiger</td>\n<td>collstats_storage_wt</td>\n</tr>\n<tr>\n<td>collstats_storage.indexDetails</td>\n<td>collstats_storage_idx</td>\n</tr>\n<tr>\n<td>collStats.storageStats</td>\n<td>collstats_storage</td>\n</tr>\n<tr>\n<td>collStats.latencyStats</td>\n<td>collstats_latency</td>\n</tr>\n</tbody>\n</table>\n<p>Prefix labeling table:</p>\n<table style=\"border: 1px solid black;\">\n<tbody>\n<tr style=\"background-color: #f5f5f5;\">\n<th>Metric Prefix</th>\n<th>New Prefix</th>\n</tr>\n<tr>\n<td>collStats.storageStats.indexDetails.</td>\n<td>index_name</td>\n</tr>\n<tr>\n<td>globalLock.activeQueue.</td>\n<td>count_type</td>\n</tr>\n<tr>\n<td>globalLock.locks.</td>\n<td>lock_type</td>\n</tr>\n<tr>\n<td>serverStatus.asserts.</td>\n<td>assert_type</td>\n</tr>\n<tr>\n<td>serverStatus.connections.</td>\n<td>conn_type</td>\n</tr>\n<tr>\n<td>serverStatus.globalLock.currentQueue.</td>\n<td>count_type</td>\n</tr>\n<tr>\n<td>serverStatus.metrics.commands.</td>\n<td>cmd_name</td>\n</tr>\n<tr>\n<td>serverStatus.metrics.cursor.open.</td>\n<td>csr_type</td>\n</tr>\n<tr>\n<td>serverStatus.metrics.document.</td>\n<td>doc_op_type</td>\n</tr>\n<tr>\n<td>serverStatus.opLatencies.</td>\n<td>op_type</td>\n</tr>\n<tr>\n<td>serverStatus.opReadConcernCounters.</td>\n<td>concern_type</td>\n</tr>\n<tr>\n<td>serverStatus.opcounters.</td>\n<td>legacy_op_type</td>\n</tr>\n<tr>\n<td>serverStatus.opcountersRepl.</td>\n<td>legacy_op_type</td>\n</tr>\n<tr>\n<td>serverStatus.transactions.commitTypes.</td>\n<td>commit_type</td>\n</tr>\n<tr>\n<td>serverStatus.wiredTiger.concurrentTransactions.</td>\n<td>txn_rw_type</td>\n</tr>\n<tr>\n<td>serverStatus.wiredTiger.perf.</td>\n<td>perf_bucket</td>\n</tr>\n<tr>\n<td>systemMetrics.disks.</td>\n<td>device_name</td>\n</tr>\n</tbody>\n</table>\n<p>Because of the metric renaming and labeling, we will find that the metric <pre class=\"crayon-plain-tag\">serverStatus.asserts</pre> .<pre class=\"crayon-plain-tag\">&#60;<strong>metric</strong>&#62;</pre>Â  will become <pre class=\"crayon-plain-tag\">ss_asserts</pre>Â  and the metric name will be used as a label:</p><pre class=\"crayon-plain-tag\"># HELP mongodb_ss_asserts serverStatus.asserts.\n# TYPE mongodb_ss_asserts untyped\nmongodb_ss_asserts{assert_type=\"msg\"} 0\nmongodb_ss_asserts{assert_type=\"regular\"} 0\nmongodb_ss_asserts{assert_type=\"rollovers\"} 0\nmongodb_ss_asserts{assert_type=\"user\"} 62\nmongodb_ss_asserts{assert_type=\"warning\"} 0</pre><p></p>\n<h2>Advantages Of The New Exporter</h2>\n<p>Since the new exporter will automatically collect all available metrics, it is now possible to collect new metrics in the PMM dashboards and as new MongoDB versions expose new metrics, they will automatically become available without the need to manually add metrics and upgrade the exporter. Also, since there are clear rules for metric renaming and how labels are created, metric names are more consistent even when new metrics are added.</p>\n<h2>How It Works</h2>\n<p>As mentioned previously, this new exporter exposes all metrics by traversing the JSON output of each MongoDB diagnostic command.<br />\nThose commands are:</p>\n<p><pre class=\"crayon-plain-tag\">{\"getDiagnosticData\": 1}</pre> which includes:<br />\nserverStatus<br />\nreplSetGetStatus (will be fetched separately if MongoDB &#60;= v3.6)<br />\nOplog collection stats<br />\nOS system metrics:<br />\nMemory<br />\nCPU<br />\nDisk usage<br />\nnetstat<br />\nvmstat</p>\n<p><pre class=\"crayon-plain-tag\">{\"replSetGetStatus\": 1}</pre><br />\n<pre class=\"crayon-plain-tag\">{\"serverStatus\": 1}</pre></p>\n<p>and it is possible also to specify database.collections pairs lists to get stats for collections usage and indexes by running these commands for each collection:<br />\n<pre class=\"crayon-plain-tag\">{\"$collStats\": {\"latencyStats\": {\"histograms\": true}}}</pre><br />\n<pre class=\"crayon-plain-tag\">{\"indexStats\"}</pre></p>\n<h2>Enabling Compatibility Mode</h2>\n<p>The new exporter has a parameter, <pre class=\"crayon-plain-tag\">--compatible-mode</pre> , which enables a special compatibility mode. In this mode, the old exporter metrics are also exposed along with the new metrics. This way, existing dashboards should work without requiring any change, and it is the default mode in PMM 2.10.0.</p>\n<p>Example: in compatibility mode, all metrics having the <pre class=\"crayon-plain-tag\">mongodb_ss_wt_txn_transaction_checkpoint</pre>Â  prefix and the <pre class=\"crayon-plain-tag\">min_time_msecs</pre>Â  or <pre class=\"crayon-plain-tag\">max_time_msecs</pre>Â Â suffix like</p><pre class=\"crayon-plain-tag\"># HELP mongodb_ss_wt_txn_transaction_checkpoint_min_time_msecs serverStatus.wiredTiger.transaction.\n# TYPE mongodb_ss_wt_txn_transaction_checkpoint_min_time_msecs untyped\nmongodb_ss_wt_txn_transaction_checkpoint_min_time_msecs 14</pre><p>will be also exposed using the old naming convention as</p><pre class=\"crayon-plain-tag\"># HELP mongodb_mongod_wiredtiger_transactions_checkpoint_milliseconds mongodb_mongod_wiredtiger_transactions_checkpoint_milliseconds\n# TYPE mongodb_mongod_wiredtiger_transactions_checkpoint_milliseconds untyped\nmongodb_mongod_wiredtiger_transactions_checkpoint_milliseconds{type=\"max\"} 71\nmongodb_mongod_wiredtiger_transactions_checkpoint_milliseconds{type=\"min\"} 14</pre><p>and the suffix is used as a label.</p>\n<h2>Debugging</h2>\n<p>When starting the exporter with <pre class=\"crayon-plain-tag\">--debug</pre>, it will output the result of each diagnostic command to the standard error. This makes it easier to check the values returned by each command to verify the metric renaming and values.</p>\n<h2>Releases</h2>\n<p>This exporter is going to be released as part of PMM starting with version 2.10.0 and will also be released as an independent exporter in the <a target=\"_blank\" href=\"https://github.com/percona/mongodb_exporter/releases\">repo&#8217;s release page</a>.</p>\n<p>Currently, the exporter resides in the <pre class=\"crayon-plain-tag\">v0.20.0</pre>Â  branch and the old exporter is in the master branch but, exporter <pre class=\"crayon-plain-tag\">v0.11</pre>Â  will be moved to the <pre class=\"crayon-plain-tag\">main</pre>Â branch and <pre class=\"crayon-plain-tag\">master</pre> branch will be used for the new exporter code.</p>\n<h2>How to Contribute</h2>\n<h3>Using the Makefile</h3>\n<p>In the main directory, there is a <pre class=\"crayon-plain-tag\">Makefile</pre> to help you with development and testing tasks. Use make without parameters to get help. These are the available options:</p>\n<table style=\"border: 1px solid black;\">\n<tbody>\n<tr style=\"background-color: #f5f5f5;\">\n<th>Command</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>init</td>\n<td>Install linters</td>\n</tr>\n<tr>\n<td>build</td>\n<td>Build the binaries</td>\n</tr>\n<tr>\n<td>format</td>\n<td>Format source code</td>\n</tr>\n<tr>\n<td>check</td>\n<td>Run checks/linters</td>\n</tr>\n<tr>\n<td>check-license</td>\n<td>Check license in headers.</td>\n</tr>\n<tr>\n<td>help</td>\n<td>Display this help message.</td>\n</tr>\n<tr>\n<td>test</td>\n<td>Run all tests (need to start the sandbox first)</td>\n</tr>\n<tr>\n<td>test-cluster</td>\n<td>Starts MongoDB test cluster. Use env var TEST_MONGODB_IMAGE to set flavor and version.</td>\n</tr>\n<tr>\n<td></td>\n<td>Example: TEST_MONGODB_IMAGE=mongo:3.6 make test-cluster</td>\n</tr>\n<tr>\n<td>test-cluster-clean</td>\n<td>Stops MongoDB test cluster</td>\n</tr>\n</tbody>\n</table>\n<h3>Initializing the Development Environment</h3>\n<p>First, you need to have Go and Docker installed on your system, and then in order to install tools to format, test, and build the exporter, you need to run this command:</p><pre class=\"crayon-plain-tag\">make init</pre><p>It will install <pre class=\"crayon-plain-tag\">goimports</pre>, <pre class=\"crayon-plain-tag\">goreleaser</pre>, <pre class=\"crayon-plain-tag\">golangci-lint</pre>, and <pre class=\"crayon-plain-tag\">reviewdog</pre>.</p>\n<h3>Testing</h3>\n<h3>Starting the Sandbox</h3>\n<p>The testing sandbox starts in MongoDB instances as follows:</p>\n<ul>\n<li>3 instances for shard 1 at ports 17001, 17002, 17003</li>\n<li>3 instances for shard 2 at ports 17004, 17005, 17006</li>\n<li>3 config servers at ports 17007, 17008, 17009</li>\n<li>1 mongos server at port 17000</li>\n<li>1 stand-alone instance at port 27017</li>\n</ul>\n<p>All instances are currently running without user and password so, for example, to connect to the mongos, you can just use:</p><pre class=\"crayon-plain-tag\">mongo mongodb://127.0.0.1:17001/admin</pre><p>The sandbox can be started using the provided <pre class=\"crayon-plain-tag\">Makefile</pre>Â using: <pre class=\"crayon-plain-tag\">make test-cluster</pre>Â  and it can be stopped using <pre class=\"crayon-plain-tag\">make test-cluster-clean</pre>.</p>\n<h3>Running Tests</h3>\n<p>To run the unit tests, just run <pre class=\"crayon-plain-tag\">make test</pre>.</p>\n<h3>Formating Code</h3>\n<p>Before submitting code, please run make format to format the code according to the standards.</p>\n<h3>Known Issues</h3>\n<ul>\n<li>Replicaset lag sometimes shows strange values.</li>\n<li>Elements that use next metrics have been removed from dashboards:<br />\nmongodb_mongod_rocksdb_*<br />\nmongodb_mongod_locks_time_locked_global_microseconds_total<br />\nmongodb_mongod_durability_time_milliseconds_sum<br />\nmongodb_mongod_durability_time_milliseconds_count</li>\n</ul>\n<p>So, these dashboards have been updated:</p>\n<ul>\n<li>dashboard &#8220;MongoDB RocksDB Details&#8221; &#8211;&#62; removed dashboard completely</li>\n<li>dashboard &#8220;MongoDB MMAPv1 Details&#8221;, element &#8220;MMAPv1 Journaling Time&#8221; &#8211;&#62; remove element on the dashboard</li>\n<li>dashboard &#8220;MongoDB MMAPv1 Details&#8221;, element &#8220;MMAPv1 Lock Ratios&#8221;, parameter &#8220;Lock (pre-3.2 only)&#8221; &#8211;&#62; removed chart on the element on the dashboard</li>\n</ul>\n<h3>Final Thoughts</h3>\n<p>This new exporter shouldn&#8217;t affect any existing dashboard since the compatibility mode exposes all old-style metrics along with the new ones. We deprecated only a few metrics that were already meaningless because they are only valid and exposed for old MongoDB versions like mongodb_mongod_global_lock_ratio and mongodb_version_info.</p>\n<p>At Percona, we built this new MongoDB exporter with the idea in mind of having an exporter capable of exposing all available metrics, with no hard-coded metrics and not tied to any particular MongoDB version. We would like to encourage users to help us by using this version and providing feedback. We also accept (and encourage) code fixes and improvements.</p>\n<p><em>Also, learn more about the new <a target=\"_blank\" href=\"https://www.percona.com/blog/2020/09/16/percona-customer-portal-and-your-new-free-user-account/\">Percona Customer Portal</a> rolling out s<span>tarting with the 2.10.0 release of Percona Monitoring and Management.</span></em></p>\n","descriptionType":"html","publishedDate":"Tue, 22 Sep 2020 15:40:16 +0000","feedId":11,"bgimg":"","linkMd5":"d3fedc1703eb28c323a30acf393250e6","bgimgJsdelivr":"","metaImg":"","author":"Carlos Salguero","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-200x105.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn19@2020_4/2020/10/09/03-32-48-648_7494eaa0f10042f9.webp","https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-300x157.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn96@2020_5/2020/10/09/03-32-43-518_eaba24ab429019b9.webp"},"publishedOrCreatedDate":1602214352616},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"The Criticality of a Kubernetes Operator for Databases","link":"https://www.percona.com/blog/?p=71009","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Importance of Kubernetes Operators for Databases\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-71959\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases-300x168.png\" alt=\"Importance of Kubernetes Operators for Databases\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />As a Solutions Engineer at Percona, one of my responsibilities is to support our customers as they investigate new and emerging technologies. This affords me the opportunity to speak to many current and new customers who partner with Percona. The topic of Kubernetes is becoming more popular as companies are investigating and adopting this technology. The issue most companies are encountering is architecting a stateful database that doesnât fall victim to an environment tuned for ephemeral workloads. This obviously introduces a level of complexity as to how to run a stateful database in an inherently stateless world, as databases are not natively designed for that.</p>\n<p>To make your life easier, as a part of the <a target=\"_blank\" href=\"https://www.percona.com/software/percona-kubernetes-operators\">Percona Cloud-Native Autonomous Database Initiative</a>, our engineering teams have built two Kubernetes Operators:<a target=\"_blank\" href=\"https://www.percona.com/doc/kubernetes-operator-for-pxc/index.html\"> Percona Kubernetes Operator for Percona XtraDB Cluster</a> and<a target=\"_blank\" href=\"https://www.percona.com/doc/kubernetes-operator-for-psmongodb/index.html\"> Percona Kubernetes Operator for Percona Server for MongoDB</a>, which allows for Kubernetes Pods to be destroyed, moved, or created with no impact to the application. To see an overview of Kubernetes, you can read this previous blog of mine <a target=\"_blank\" href=\"https://www.percona.com/blog/2020/05/07/introduction-to-percona-kubernetes-operator-for-percona-xtradb-cluster/\">Introduction to Percona Kubernetes Operator for Percona XtraDB Cluster</a> that covers this topic. It&#8217;s common for companies new to Kubernetes to attempt to run their databases in Kubernetes the same way they would in a traditional environment. But, this is not advised as it introduces the possibility of data loss and it is not recommended for production workloads. Why is this dangerous and how has Percona solved this?</p>\n<h2>Appropriate Workloads for Kubernetes</h2>\n<p>Kubernetes is <strong>not</strong> the answer for everyone. It&#8217;s even not the answer for most people. Do not be misled into thinking that moving a database into Kubernetes is going to solve any of your problems. Before you consider moving your database into Kubernetes, ensure the rest of your application is cloud-native and can be used with Kubernetes. Moving your database to Kubernetes should happen <strong>after</strong> you have started both elastic vertical and horizontal scale and need to orchestrate it to control costs.</p>\n<p>As more companies are moving to Kubernetes something has to happen to the legacy workloads. Oftentimes we see a lift and shift mentality into Kubernetes, which can be dangerous or cause more work than expected. We have seen two primary ideal use cases for moving database workloads to Kubernetes: Microservices and Unified Abstraction Layer.</p>\n<p>Monolithic, large datasets can prohibit some of Kubernetes&#8217; strong points: self-healing and availability. This can be an issue due to the time it takes to physically transmit data to a new Pod instance as it joins the database cluster. If your dataset is too large, this process is slow due to physical limitations and prohibits performance and the availability of your database. Microservices are a great fit due to the relatively smaller datasets, which allows Kubernetes automation to work well with the dataset size. <span><br />\n</span><span><br />\n</span>Companies looking to take full advantage of cloud-native applications and databases can be a really good fit for Kubernetes as well. If you truly want the ability to deploy and run your databases anywhere utilizing the concept of a Unified Abstraction Layer, Kubernetes is a great option. You can move your databases to anywhere that is running Kubernetes and know it will work.</p>\n<p>We talked about large unsharded datasets and the limitations Kubernetes presents when handling them, but we should mention a few more workloads better suited for traditional platforms. Applications with a throughput sensitivity may not do well on Kubernetes, or they may not be cost-effective to do so. Kubernetes is fundamentally designed for container orchestration and is not designed to handle highly performant databases that require low latency. This may be possible to achieve, but at what cost? This applies to highly performant distributed applications as well. Lowest latency across all nodes is not a core tenant of Kubernetes, so ensure you have planned and tested against this before you move everything over to Kubernetes.</p>\n<h2>Pods Are Cattle, Not Pets</h2>\n<p>If youâre not familiar with Pets vs Cattle, itâs a DevOps concept that differentiates deployment methodologies of unique servers that require attention when issues arise (pets) versus the ability to replace a server with a copy if issues arise (cattle). Due to the nature of how Kubernetes operates, Pods can be destroyed, spun up, and moved at any time due to factors outside of the applicationâs control, much like how cattle are treated. Kubernetes uses a<a target=\"_blank\" href=\"https://kubernetes.io/docs/concepts/scheduling-eviction/kube-scheduler/\"> scheduler</a>, which by design, can destroy and recreate Pods to meet the configuration needs of your Kubernetes Cluster. This is great for stateless applications as any failure in the application will result in a Pod containing the application being destroyed and recreated, eliminating the need for human interaction, and greatly speeding up the process to a resolution. This isnât ideal for databases as you donât want your database to suddenly stop working, halt the application, and introduce the potential for lost or corrupted data. One of the tools Kubernetes can utilize to help combat this is called Stateful Sets. These help by keeping a Pod&#8217;s identity assigned to it as it is destroyed and re-created. This helps facilitate stateful workloads, but how does this come into play with high availability and utilizing the automation aspects of Kubernetes?</p>\n<h2>Databases Are Pets, Not Cattle</h2>\n<p>Databases by design need to keep their identity, information, and most importantly their data safe and accessible at all times. They are the backbones of the application as they are the source of truth an application relies on for normal processing. Any errors in their operations will quickly stop an application from functioning. <em>They are important,</em> to say the least. How can we safely run databases in Kubernetes and still ensure we have highly available database deployments? By using Stateful Sets and Persistent Volumes we can maintain data integrity, but we need an additional set of hands to take on database administrator tasks such as ensuring failover happens, database members are recovered, and re-join the highly available architecture, along with other technology-specific functions. Fortunately, Kubernetes is extensible and has Operators, which aims to automate the key task of a human operator who is managing a service or set of services.</p>\n<h2>Automation, Automation, Automation</h2>\n<p>We know the complexities of running a database (safely) in Kubernetes and some of the concepts used to help bridge the gaps between automation and traditional human functions. With the help of Percona&#8217;s Kubernetes Operators, we can safely run databases the way they were intended to run. Percona&#8217;s Kubernetes Operators are able to automate tasks that are usually done by a database administrator such as:</p>\n<ul>\n<li>Fully automated deployments with strict consistency and no single point of failure</li>\n<li>Automated scaling with the ability to change the size parameter to add or remove members of a Cluster or Replica-Set</li>\n<li>Fully automated backups and restores</li>\n<li>Fully automated self-healing by automatically recovering from the failure of a single Cluster or Replica-Set member.</li>\n<li>Automatically manage system users on password rotation</li>\n<li>Simplified updates</li>\n</ul>\n<h2>Always Use a Kubernetes Operator</h2>\n<p>With the complexities of running a highly available database environment and the inherent dangers introduced by using the dynamic Kubernetes environment, an Operator should always be used when deploying databases in Kubernetes. Fortunately, Percona has already solved this by providing <a target=\"_blank\" href=\"https://www.percona.com/doc/kubernetes-operator-for-pxc/index.html\">Percona Kubernetes Operator for Percona XtraDB Cluster</a> and<a target=\"_blank\" href=\"https://www.percona.com/doc/kubernetes-operator-for-psmongodb/index.html\"> Percona Kubernetes Operator for Percona Server for MongoDB</a>. Percona provides full support for databases running in Kubernetes with the Percona Operators. If you are interested in learning more or obtaining <a target=\"_blank\" href=\"https://www.percona.com/services/support/contact\">support</a> or<a target=\"_blank\" href=\"https://www.percona.com/services/consulting\"> professional services</a> to maximize your database deployments, please reach out to us.</p>\n","descriptionType":"html","publishedDate":"Thu, 08 Oct 2020 16:40:57 +0000","feedId":11,"bgimg":"","linkMd5":"14808a214b54168cdf9405bdae7aa632","bgimgJsdelivr":"","metaImg":"","author":"Stephen Thorn","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn71@2020_2/2020/10/09/03-33-02-871_4c7ad00387f4d322.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn84@2020_3/2020/10/09/03-32-55-533_f0a7e79160a853ec.webp"},"publishedOrCreatedDate":1602214352583},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"PostgreSQL Configuration Changes You Need to Make Post-Installation","link":"https://www.percona.com/blog/?p=71427","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"PostgreSQL Configuration Changes\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-71521\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes-300x168.png\" alt=\"PostgreSQL Configuration Changes\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />So you&#8217;ve installed postgres onto your machine, and you want to start working with it.</p>\n<p>How?</p>\n<p>The key to understanding the post-installation procedure is to realize that it &#8220;depends&#8221;.</p>\n<ul>\n<li>It &#8220;depends&#8221; on the OS i.e. MSWindows vs Linux.</li>\n<li>It &#8220;depends&#8221; on the flavor of Linux i.e. Debian vs RedHat.</li>\n<li>It &#8220;depends&#8221; if it&#8217;s a package install or from source code.</li>\n</ul>\n<p>Let&#8217;s start by working with the most basic steps common to all installs and we&#8217;ll break it down further from there.</p>\n<p>A successfully installed postgres, no matter the version, is characterized by the following:</p>\n<ol>\n<li>a newly created <em>datacluster</em> is present</li>\n<li>a configuration file <em>pg_hba.conf </em>is to be edited</li>\n<li>a configuration file <em>postgresql.conf </em>is to be edited</li>\n</ol>\n<p>There are other configuration files but we&#8217;ll work with these.</p>\n<p>For the purposes of discussion let&#8217;s further assume you&#8217;ve started up the cluster and postgres is running on the host. Here&#8217;s an example of what you can see when you run a utility, such as <strong>netstat</strong>,Â  that reports the network connections:</p>\n<pre class=\"crayon-plain-tag\">$netstat -tlnp\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address   Foreign Address  State     PID/Program name\ntcp     0      0    127.0.0.1:5432  0.0.0.0:*        LISTEN     27929/postgres</pre>\n<p>The first thing is to look at is the &#8220;Local Address&#8221;. Notice how it says <strong>127.0.0.1:5432</strong>. Okay, so that means that the server is currently listening on the localhost on port 5432. But you want <strong>0.0.0.0:5432</strong> otherwise remote connections cannot be accepted. With an editor, open up file pg_hba.conf and look at the &#8220;default&#8221; rules. Keep in mind that the configuration file can be located in one of several locations, we&#8217;ll cover that later.</p>\n<p><span style=\"color: #ff0000;\">ATTENTION: Setting the Address (CIDR) to 0.0.0.0 is for connectivity purposes only. As soon as you know everything works you should restrict this to as few permitted connections as possible. This is not something you should do on a production machine.</span></p>\n<p>The actual &#8220;rules&#8221; per line can vary from one type of postgres installation to another. The good news is that RedHat/Centos look alike and all Debian/Ubuntu have their own similar styles too. The relevant settings are at the bottom of the file as all else above is commented documentation.</p>\n<pre class=\"crayon-plain-tag\"># TYPE Â DATABASE Â Â Â Â Â Â Â USER Â Â Â Â Â Â Â Â Â Â Â ADDRESS Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â METHOD\n# \"local\" is for Unix domain socket connections only\nlocal Â Â all Â Â Â Â Â Â Â Â Â Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â   peer\n# IPv4 local connections:\nhost Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â 127.0.0.1/32 Â Â Â Â Â Â Â Â Â Â  md5\n# IPv6 local connections:\nhost Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â ::1/128 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  peer\n# Allow replication connections from localhost, by a user with the\n# replication privilege.\nlocal Â Â replication Â Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â peer\nhost Â Â Â replication Â Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â 127.0.0.1/32 Â Â Â Â Â Â Â Â Â Â Â md5\nhost Â Â Â replication Â Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â ::1/128 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â md5</pre>\n<p>Look at the first line, where TYPE is &#8220;local&#8221;. So long as you can log in locally, via UNIX DOMAIN SOCKETS, and sudo as the superuser, postgres is the default, you can access your service without a password.</p>\n<p><strong>METHOD</strong> should be <strong>peer</strong> but if it uses something else, like <strong>md5, </strong>you&#8217;ll need to change the string. Alternatively, if you feel particularly trustful of the other user accounts on the host, you can use the METHOD <strong>trust</strong> permitting free access to all locally logged-in UNIX accounts.</p>\n<pre class=\"crayon-plain-tag\"># ATTENTION:\n# the service must be reloaded for any edits to pg_hba.conf to take effect\n#\n$sudo su - postgres\n$psql -c \"select 'hello world' as greetings\"\ngreetings\n-------------\nhello world</pre>\n<p>Looking at the second line one sees that TYPE is <strong>IPV4</strong>. This rule, as well as the rule for TYPE <strong>IPv6</strong>, prevents localhost logins unless one knows the password:</p>\n<pre class=\"crayon-plain-tag\">$psql -h localhost -c \"select 'hello world' as greetings\"\nPassword for user postgres:</pre>\n<p>So let&#8217;s fix this by assigning a password to ROLE postgres by logging via UNIX DOMAIN SOCKETS since we already permit logins by METHOD <strong>peer:</strong></p>\n<pre class=\"crayon-plain-tag\">--\n-- example invocation, change the password to something real\n--\nALTER ROLE postgres WITH PASSWORD 'mypassword';</pre>\n<p><strong><em>TIP: edits to pg_hba.conf requires the service to reload the file i.e. SIGHUP</em></strong></p>\n<p>Now that we&#8217;ve had connectivity for localhost connections, we&#8217;re using an IP v4 socket for this example, we can now proceed to address remote connections.</p>\n<p>You&#8217;re going to need to add another rule which should be placed after the localhost rule:</p>\n<pre class=\"crayon-plain-tag\">host all all 0.0.0.0/0 md5</pre>\n<p>And here&#8217;s a line you can write for IPV6:</p>\n<pre class=\"crayon-plain-tag\">host all all ::0/0 md5</pre>\n<p><strong><em>TIP: The demonstrated example rules let everybody connect to the host. A knowledge of <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#:~:text=Carl%2DHerbert%20Rokitansky.-,CIDR%20notation,traditionally%20called%20the%20network%20mask\">CIDR</a> is key to enforcing network security.</em></strong></p>\n<p>Keeping in mind that your system will be unique, here&#8217;s what the <strong>pg_hba.conf</strong> should start to look like:</p>\n<pre class=\"crayon-plain-tag\"># TYPE Â DATABASE Â Â Â Â Â Â Â USER Â Â Â Â Â Â Â Â Â Â Â ADDRESS Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â METHOD\n# \"local\" is for Unix domain socket connections only\nlocal Â Â all Â Â Â Â Â Â Â Â Â Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â peer\n# IPv4 local connections:\nhost Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â 127.0.0.1/32 Â Â Â Â Â Â Â Â Â Â Â md5\nhost Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â 0.0.0.0/0 Â Â Â Â Â Â Â Â Â Â Â    md5\n# IPv6 local connections:\nhost Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â ::1/128 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  md5\nhost Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â ::0/0 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â   md5\n# Allow replication connections from localhost, by a user with the\n# replication privilege.\nlocal Â Â replication Â Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â peer\nhost Â Â Â replication Â Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â 127.0.0.1/32 Â Â Â Â Â Â Â Â Â Â Â md5\nhost Â Â Â replication Â Â Â Â all Â Â Â Â Â Â Â Â Â Â Â Â ::1/128 Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â md5</pre>\n<p>You&#8217;re almost there!</p>\n<p>Now that you&#8217;ve added a password to the superuser and updated the configuration file <strong>pg_hba.conf</strong>, it&#8217;s time to visit another configuration file <strong>postgresql.conf</strong>.</p>\n<p>Locate the file and edit runtime parameter <strong>listen_addresses</strong>. The default setting prohibits remote connections. Resetting the value either to a nic&#8217;s IP address or just using the wild card will make it accessible.</p>\n<p><strong><em>TIP: As postgres, execute the following in a psql session in order to locate your configuration files.</em></strong></p>\n<pre class=\"crayon-plain-tag\">select distinct sourcefile from pg_settings;</pre>\n<p>For those people feeling fancy, one can bind the postgres service to more than one IP address as a comma-separated list:</p>\n<pre class=\"crayon-plain-tag\">listen_addresses = '*'\n#listen_addresses = 'localhost' # what IP address(es) to listen on;\n                                # comma-separated list of addresses;\n                                # defaults to 'localhost'; use '*' for all\n                                # (change requires restart)</pre>\n<p>An alternate method updating the runtime parameters can also be accomplished using the SQL statement:</p>\n<pre class=\"crayon-plain-tag\">postgres=# ALTER SYSTEM SET listen_addresses = '*';\nALTER SYSTEM</pre>\n<p>The final step, restarting the service, is where we start splitting hairs again:</p>\n<ul>\n<li>Redhat distributions require dataclusters to be manually created before they can be administered.</li>\n<li>PostgreSQL Debian distributions, including Ubuntu, automatically creates and starts up the datacluster.</li>\n</ul>\n<p>Systemd:</p>\n<ul>\n<li>Redhat/Centos:\n<pre class=\"crayon-plain-tag\">/usr/pgsql-11/bin/postgresql-12-setup initdb</pre>\n<pre class=\"crayon-plain-tag\">systemctl start|stop postgresql-12</pre>\n</li>\n<li>Debian/Ubuntu:\n<pre class=\"crayon-plain-tag\">systemctl restart postgresql</pre>\n</li>\n</ul>\n<p>Debian derived Linux Distributions include a collection of command-line utilities in order to administer the PostgreSQL service:</p>\n<pre class=\"crayon-plain-tag\"># example CLI\n#\npg_ctlcluster<br />Usage: /usr/bin/pg_ctlcluster &#60;version&#62; &#60;cluster&#62; &#60;action&#62; [-- &#60;pg_ctl options&#62;]</pre>\n<pre class=\"crayon-plain-tag\"># restarting postgres version 12 on a Debian derived distribution\npg_ctlcluster 12 main restart</pre>\n<p>After a successful service restart you should get something similar to the following:</p>\n<pre class=\"crayon-plain-tag\">Active Internet connections (only servers)\nProto Recv-Q Send-Q  Local Address    Foreign Address  State   PID/Program name\ntcp     0      0      0.0.0.0:5432    0.0.0.0:*        LISTEN  27929/postgres</pre>\n<p>And finally, the remote connectivity test:</p>\n<pre class=\"crayon-plain-tag\">#\n# THE REMOTE LOGIN\n#\npsql 'host=myhost user=postgres password=mypassword' -c \"select 'hello world' as greeetings \"</pre>\n<p>Then there&#8217;s replication, but that&#8217;s another blog altogether.</p>\n<p>That&#8217;s it for now!</p>\n<hr />\n<p>Our white paper &#8220;Why Choose PostgreSQL?&#8221; looks at the features and benefits of PostgreSQL and presents some practical usage examples. We also examine how PostgreSQL can be useful for companies looking to migrate from Oracle.</p>\n<p style=\"text-align: center;\"><a target=\"_blank\" class=\"btn btn-primary btn-lg\" href=\"https://www.percona.com/resources/white-papers/why-choose-postgresql?utm_source=blog&#38;utm_medium=download&#38;utm_campaign=config&#38;utm_content=whitepaper\">Download PDF</a></p>","descriptionType":"html","publishedDate":"Tue, 29 Sep 2020 15:37:43 +0000","feedId":11,"bgimg":"","linkMd5":"c16e1109b67211aad591ae1fbf8b6863","bgimgJsdelivr":"","metaImg":"","author":"Robert Bernier","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn75@2020_4/2020/10/09/03-32-46-379_bfa47a8008b92d44.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn16@2020_4/2020/10/09/03-33-02-461_91d9677f1cada267.webp"},"publishedOrCreatedDate":1602214352607},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"MySQL 101: Troubleshooting MySQL with Percona Monitoring and Management","link":"https://www.percona.com/blog/?p=71788","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"MySQL 101 Troubleshoot with percona monitoring and management\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><span><a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\"><img loading=\"lazy\" class=\"alignright size-medium wp-image-71948\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management-300x168.png\" alt=\"MySQL 101 Troubleshoot with percona monitoring and management\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Percona Monitoring and Management (PMM)</a> is a free and open source platform for managing and monitoring MySQL, MongoDB, and PostgreSQL databases. In this blog, we will look at troubleshooting MySQL issues and performance bottlenecks with the help of PMM.</span></p>\n<p><span>We can start troubleshooting MySQL after selecting the appropriate server or cluster from the PMM dashboard. There are many aspects to check which should get priority depending on the issue you are facing.</span></p>\n<p><span>Things to look at:</span></p>\n<h2><span>OS:</span></h2>\n<p><a target=\"_blank\" href=\"https://pmmdemo.percona.com/graph/d/node-cpu/cpu-utilization-details?orgId=1&#38;from=now-12h&#38;to=now&#38;var-interval=$__auto_interval_interval&#38;var-node_name=app1&#38;var-service_name=All&#38;var-environment=All&#38;var-cluster=All&#38;var-replication_set=All&#38;var-database=All&#38;var-node_type=All&#38;var-service_type=All&#38;var-username=All&#38;var-schema=All&#38;var-node_id=%2Fnode_id%2Fe12ba1fd-e2d2-44fa-943d-cd19ee35addd&#38;refresh=1m\"><b>CPU Usage:</b></a></p>\n<p><span>Check to see if there is a spike or gradual increase in the CPU usage on the database server other than the normal pattern. If so, you can check the timeframe of the spike or starting point of the increasing load and review the database connections/thread details from the MySQL dashboard for that time interval.</span></p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71789 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/cpu.png\" alt=\"MySQL CPU usage\" width=\"919\" height=\"336\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/cpu.png 919w, https://www.percona.com/blog/wp-content/uploads/2020/10/cpu-300x110.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/cpu-200x73.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/cpu-367x134.png 367w\" sizes=\"(max-width: 919px) 100vw, 919px\" /></p>\n<p><a target=\"_blank\" href=\"https://pmmdemo.percona.com/graph/d/node-instance-summary/node-summary?orgId=1&#38;from=now-12h&#38;to=now&#38;var-interval=$__auto_interval_interval&#38;var-region=All&#38;var-node_type=All&#38;var-node_name=app1&#38;var-service_name=All&#38;var-database=All&#38;var-service_type=All&#38;var-environment=All&#38;var-cluster=All&#38;var-replication_set=All&#38;var-username=All&#38;var-schema=All&#38;refresh=1m\"><b>CPU Saturation Metrics and Max Core Usage:</b></a></p>\n<p><span>This is an important metric as it shows the saturation level of the CPU with normalized CPU load. Normalized CPU Load is very helpful for understanding when the CPU is overloaded. An overloaded CPU causes response times to increase and performance to degrade.</span></p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71791 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/cpu2.png\" alt=\"CPU Saturation Metrics and Max Core Usage\" width=\"650\" height=\"297\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/cpu2.png 650w, https://www.percona.com/blog/wp-content/uploads/2020/10/cpu2-300x137.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/cpu2-200x91.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/cpu2-367x168.png 367w\" sizes=\"(max-width: 650px) 100vw, 650px\" /></p>\n<p><a target=\"_blank\" href=\"https://pmmdemo.percona.com/graph/d/node-disk/disk-details?orgId=1&#38;from=now-12h&#38;to=now&#38;var-interval=$__auto_interval_interval&#38;var-node_name=app1&#38;var-service_name=All&#38;var-environment=All&#38;var-cluster=All&#38;var-replication_set=All&#38;var-database=All&#38;var-node_type=All&#38;var-service_type=All&#38;var-username=All&#38;var-schema=All&#38;refresh=1m\"><b>Disk latency/ Disk IO utilization:</b></a></p>\n<p><span>Check to see if there is any latency observed for the disk. If you see the Disk IO utilization reach 100%, this will cause latency in queries as Disk would not be able to perform the read/writes, causing a gradual pile up of queries and hence the spike. The issue might be with the underlying disk or hardware.</span></p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71792 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/disk.png\" alt=\"Disk latency/ Disk IO utilization\" width=\"658\" height=\"307\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/disk.png 658w, https://www.percona.com/blog/wp-content/uploads/2020/10/disk-300x140.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/disk-200x93.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/disk-367x171.png 367w\" sizes=\"(max-width: 658px) 100vw, 658px\" /></p>\n<p><a target=\"_blank\" href=\"https://pmmdemo.percona.com/graph/d/node-memory/memory-details?orgId=1&#38;from=now-12h&#38;to=now&#38;var-interval=$__auto_interval_interval&#38;var-node_name=app1&#38;var-device=All&#38;var-username=All&#38;var-mountpoint=All&#38;refresh=1m\"><b>Memory Utilization:</b></a></p>\n<p><span>Any sudden change in memory usage consumption could indicate some process hogging the memory, for example, the Mysql process, if many concurrent queries or any long-running queries are in progress. We can see any increase when any backup job or a scheduled batch job is in progress on the server as well.</span></p>\n<p><a target=\"_blank\" href=\"https://pmmdemo.percona.com/graph/d/node-network/network-details?orgId=1&#38;from=now-12h&#38;to=now&#38;var-interval=$__auto_interval_interval&#38;var-node_name=app1&#38;var-service_name=All&#38;var-environment=All&#38;var-cluster=All&#38;var-replication_set=All&#38;var-database=All&#38;var-node_type=All&#38;var-service_type=All&#38;var-username=All&#38;var-schema=All&#38;refresh=1m\"><b>Network Details:</b></a></p>\n<p><span>Check the Inbound and Outbound Network traffic for the duration of the issue for any sudden dip which would point to some network problems.</span></p>\n<h2><span>MySQL:</span></h2>\n<p><a target=\"_blank\" href=\"https://pmmdemo.percona.com/graph/d/mysql-instance-summary/mysql-instance-summary?orgId=1&#38;from=now-12h&#38;to=now&#38;refresh=1m&#38;var-interval=$__auto_interval_interval&#38;var-environment=All&#38;var-node_name=ps8&#38;var-crop_host=ps8&#38;var-service_name=ps8-mysql&#38;var-region=&#38;var-cluster=MySQLCluster1&#38;var-node_id=%2Fnode_id%2Ff43f105a-acce-489d-8615-b34962ec3956&#38;var-agent_id=%2Fagent_id%2F08fde5cd-1df9-46ef-b435-5a460faa9e22&#38;var-service_id=%2Fservice_id%2F15b9de50-8b34-42ba-85fd-17b19460198b&#38;var-az=mex1&#38;var-node_type=generic&#38;var-node_model=&#38;var-replication_set=MySQLReplSet1&#38;var-version=8.0.19-10&#38;var-service_type=All&#38;var-database=All&#38;var-username=All&#38;var-schema=All\"><b>MySQL Client Thread Activity / MySQL Connections:</b></a></p>\n<p><span>If the issue at hand is for a large number of running threads or a connection spike, you can check the graphs of MySQL Connections and MySQL thread activity and get the timeframe when these connections start increasing. More details about the threads (or queries running) can be seen from Innodb dashboards. As mentioned previously, a spike in Disk IO utilization reaching 100% can also cause connections to pile up. Hence, it is important to check all aspects before coming to any conclusion.</span></p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71793 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/cli.png\" alt=\"MySQL Client Thread Activity / MySQL Connections\" width=\"641\" height=\"316\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/cli.png 641w, https://www.percona.com/blog/wp-content/uploads/2020/10/cli-300x148.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/cli-200x99.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/cli-367x181.png 367w\" sizes=\"(max-width: 641px) 100vw, 641px\" /></p>\n<p><a target=\"_blank\" href=\"https://pmmdemo.percona.com/graph/d/mysql-instance-summary/mysql-instance-summary?orgId=1&#38;from=now-12h&#38;to=now&#38;refresh=1m&#38;var-interval=$__auto_interval_interval&#38;var-environment=All&#38;var-node_name=ps8&#38;var-crop_host=ps8&#38;var-service_name=ps8-mysql&#38;var-region=&#38;var-cluster=MySQLCluster1&#38;var-node_id=%2Fnode_id%2Ff43f105a-acce-489d-8615-b34962ec3956&#38;var-agent_id=%2Fagent_id%2F08fde5cd-1df9-46ef-b435-5a460faa9e22&#38;var-service_id=%2Fservice_id%2F15b9de50-8b34-42ba-85fd-17b19460198b&#38;var-az=mex1&#38;var-node_type=generic&#38;var-node_model=&#38;var-replication_set=MySQLReplSet1&#38;var-version=8.0.19-10&#38;var-service_type=All&#38;var-database=All&#38;var-username=All&#38;var-schema=All\"><b>MySQL Slow Queries:</b></a></p>\n<p><span>If there were queries that were performing slow, this would be reported in the MySQL slow queries graph. This could be due to old queries performing slowly due to multiple concurrent queries, underlying disk load, or newly introduced queries that need analysis and optimization. Look at the timeframe involved and further check the slow logs and QAN to get the exact queries.</span></p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71794 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/slow.png\" alt=\"MySQL Slow Queries\" width=\"657\" height=\"316\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/slow.png 657w, https://www.percona.com/blog/wp-content/uploads/2020/10/slow-300x144.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/slow-200x96.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/slow-367x177.png 367w\" sizes=\"(max-width: 657px) 100vw, 657px\" /></p>\n<p><a target=\"_blank\" href=\"https://pmmdemo.percona.com/graph/d/mysql-instance-summary/mysql-instance-summary?orgId=1&#38;from=now-12h&#38;to=now&#38;refresh=1m&#38;var-interval=$__auto_interval_interval&#38;var-environment=All&#38;var-node_name=ps8&#38;var-crop_host=ps8&#38;var-service_name=ps8-mysql&#38;var-region=&#38;var-cluster=MySQLCluster1&#38;var-node_id=%2Fnode_id%2Ff43f105a-acce-489d-8615-b34962ec3956&#38;var-agent_id=%2Fagent_id%2F08fde5cd-1df9-46ef-b435-5a460faa9e22&#38;var-service_id=%2Fservice_id%2F15b9de50-8b34-42ba-85fd-17b19460198b&#38;var-az=mex1&#38;var-node_type=generic&#38;var-node_model=&#38;var-replication_set=MySQLReplSet1&#38;var-version=8.0.19-10&#38;var-service_type=All&#38;var-database=All&#38;var-username=All&#38;var-schema=All\"><b>MySQL Aborted Connections:</b></a></p>\n<p><span>If there were a large number of users or threads unable to establish a connection to the server this would be reported by a spike in aborted connections.</span></p>\n<h2><span>InnoDB Metrics:</span></h2>\n<p><a target=\"_blank\" href=\"https://pmmdemo.percona.com/graph/d/mysql-innodb/mysql-innodb-details?orgId=1&#38;from=now-12h&#38;to=now&#38;var-interval=$__auto_interval_interval&#38;var-environment=All&#38;var-node_name=ps8&#38;var-crop_host=ps8&#38;var-service_name=ps8-mysql&#38;var-region=&#38;var-cluster=MySQLCluster1&#38;var-node_id=%2Fnode_id%2Ff43f105a-acce-489d-8615-b34962ec3956&#38;var-agent_id=%2Fagent_id%2F08fde5cd-1df9-46ef-b435-5a460faa9e22&#38;var-service_id=%2Fservice_id%2F15b9de50-8b34-42ba-85fd-17b19460198b&#38;var-az=mex1&#38;var-node_type=generic&#38;var-node_model=&#38;var-replication_set=MySQLReplSet1&#38;var-version=8.0.19-10&#38;var-service_type=All&#38;var-database=All&#38;var-username=All&#38;var-schema=All&#38;refresh=1m\"><b>InnoDB Transactions:</b></a></p>\n<p><span>This metric will show the graph of History List Length on the server, which is basically &#8216;undo logs&#8217; created to keep a consistent state of data for any particular connection. An increase in HLL over time is caused due to long-running transactions on the server. If you see a gradual increase in HLL, look at your server and check <code>show engine innodb status\\G</code>. Look for the culprit query/transaction and try to kill it if it&#8217;s not truly needed. While not an immediate issue, an increase in HLL can hamper the performance of a server if the value is in the millions and still increasing.</span></p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71795 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/hll.png\" alt=\"InnoDB Transactions\" width=\"659\" height=\"300\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/hll.png 659w, https://www.percona.com/blog/wp-content/uploads/2020/10/hll-300x137.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/hll-200x91.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/hll-367x167.png 367w\" sizes=\"(max-width: 659px) 100vw, 659px\" /></p>\n<p><a target=\"_blank\" href=\"https://pmmdemo.percona.com/graph/d/mysql-innodb/mysql-innodb-details?orgId=1&#38;from=now-12h&#38;to=now&#38;var-interval=$__auto_interval_interval&#38;var-environment=All&#38;var-node_name=ps8&#38;var-crop_host=ps8&#38;var-service_name=ps8-mysql&#38;var-region=&#38;var-cluster=MySQLCluster1&#38;var-node_id=%2Fnode_id%2Ff43f105a-acce-489d-8615-b34962ec3956&#38;var-agent_id=%2Fagent_id%2F08fde5cd-1df9-46ef-b435-5a460faa9e22&#38;var-service_id=%2Fservice_id%2F15b9de50-8b34-42ba-85fd-17b19460198b&#38;var-az=mex1&#38;var-node_type=generic&#38;var-node_model=&#38;var-replication_set=MySQLReplSet1&#38;var-version=8.0.19-10&#38;var-service_type=All&#38;var-database=All&#38;var-username=All&#38;var-schema=All&#38;refresh=1m\"><b>InnoDB Row Operations:</b></a></p>\n<p><span>When you see a spike in thread activity, you should check here next to get more details about the threads running.Â  Spike in reads/inserts/deletes? You will get details about each of the row operations and their count, which will help you understand what kind of queries were running on the server and find the particular job that is responsible for thi</span><span>s.</span></p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71796 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/inn.png\" alt=\"InnoDB Row Operations\" width=\"697\" height=\"295\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/inn.png 697w, https://www.percona.com/blog/wp-content/uploads/2020/10/inn-300x127.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/inn-200x85.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/inn-367x155.png 367w\" sizes=\"(max-width: 697px) 100vw, 697px\" /></p>\n<p><a target=\"_blank\" href=\"https://pmmdemo.percona.com/graph/d/mysql-innodb/mysql-innodb-details?orgId=1&#38;from=now-12h&#38;to=now&#38;var-interval=$__auto_interval_interval&#38;var-environment=All&#38;var-node_name=ps8&#38;var-crop_host=ps8&#38;var-service_name=ps8-mysql&#38;var-region=&#38;var-cluster=MySQLCluster1&#38;var-node_id=%2Fnode_id%2Ff43f105a-acce-489d-8615-b34962ec3956&#38;var-agent_id=%2Fagent_id%2F08fde5cd-1df9-46ef-b435-5a460faa9e22&#38;var-service_id=%2Fservice_id%2F15b9de50-8b34-42ba-85fd-17b19460198b&#38;var-az=mex1&#38;var-node_type=generic&#38;var-node_model=&#38;var-replication_set=MySQLReplSet1&#38;var-version=8.0.19-10&#38;var-service_type=All&#38;var-database=All&#38;var-username=All&#38;var-schema=All&#38;refresh=1m\"><b>InnoDb Locking</b><span> &#62; </span><b>InnoDB Row Lock Time:</b></a></p>\n<p><span>Row Lock Waits indicates how many times a transaction waited on a row lock per second. </span><span>Row Lock Wait Load is a rolling 5 minute average of Row Lock Waits. </span><span>Average Row Lock Wait Time is the row lock wait time divided by the number of row locks.</span></p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71797 size-full\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/row.png\" alt=\"InnoDb Locking &#62; InnoDB Row Lock Time\" width=\"646\" height=\"291\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/row.png 646w, https://www.percona.com/blog/wp-content/uploads/2020/10/row-300x135.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/row-200x90.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/row-367x165.png 367w\" sizes=\"(max-width: 646px) 100vw, 646px\" /></p>\n<p><a target=\"_blank\" href=\"https://pmmdemo.percona.com/graph/d/mysql-innodb/mysql-innodb-details?orgId=1&#38;from=now-12h&#38;to=now&#38;var-interval=$__auto_interval_interval&#38;var-environment=All&#38;var-node_name=ps8&#38;var-crop_host=ps8&#38;var-service_name=ps8-mysql&#38;var-region=&#38;var-cluster=MySQLCluster1&#38;var-node_id=%2Fnode_id%2Ff43f105a-acce-489d-8615-b34962ec3956&#38;var-agent_id=%2Fagent_id%2F08fde5cd-1df9-46ef-b435-5a460faa9e22&#38;var-service_id=%2Fservice_id%2F15b9de50-8b34-42ba-85fd-17b19460198b&#38;var-az=mex1&#38;var-node_type=generic&#38;var-node_model=&#38;var-replication_set=MySQLReplSet1&#38;var-version=8.0.19-10&#38;var-service_type=All&#38;var-database=All&#38;var-username=All&#38;var-schema=All&#38;refresh=1m\"><b>InnoDB Logging &#62; InnoDB Log file usage Hourly:</b></a></p>\n<p><span>If there is an increase in writes on the server, we can see an increase in the log file usage hourly and it would show the size in GB on how much data was written to the ib_logfiles before being sent to disk.</span></p>\n<h2><span>Performance Schema Details:</span></h2>\n<p><a target=\"_blank\" href=\"https://pmmdemo.percona.com/graph/d/mysql-performance-schema/mysql-performance-schema-details?orgId=1&#38;from=now-12h&#38;to=now&#38;refresh=1m&#38;var-interval=$__auto_interval_interval&#38;var-node_name=ps8&#38;var-service_name=ps8-mysql&#38;var-version=8.0.19-10&#38;var-crop_service=ps8-mysql&#38;var-crop_host=ps8&#38;var-environment=All&#38;var-cluster=All&#38;var-replication_set=All&#38;var-database=All&#38;var-node_type=All&#38;var-service_type=All&#38;var-username=All&#38;var-schema=All\"><b>PS File IO (Events):</b></a></p>\n<p><span>This dashboard will provide details on the wait IO for various events as shown in the image:</span></p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71798 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/perf1-1024x178.png\" alt=\"PS File IO (Events)\" width=\"900\" height=\"156\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/perf1-1024x178.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/perf1-300x52.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/perf1-200x35.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/perf1-1536x267.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/10/perf1-367x64.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/perf1.png 1847w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p><a target=\"_blank\" href=\"https://pmmdemo.percona.com/graph/d/mysql-performance-schema/mysql-performance-schema-details?orgId=1&#38;from=now-12h&#38;to=now&#38;refresh=1m&#38;var-interval=$__auto_interval_interval&#38;var-node_name=ps8&#38;var-service_name=ps8-mysql&#38;var-version=8.0.19-10&#38;var-crop_service=ps8-mysql&#38;var-crop_host=ps8&#38;var-environment=All&#38;var-cluster=All&#38;var-replication_set=All&#38;var-database=All&#38;var-node_type=All&#38;var-service_type=All&#38;var-username=All&#38;var-schema=All\"><b>PS File IO (Load):</b></a></p>\n<p><span>Similar to events, this will display the load corresponding to the event.</span></p>\n<h2><span>QAN:</span></h2>\n<p><a target=\"_blank\" href=\"https://pmmdemo.percona.com/graph/d/pmm-qan/pmm-query-analytics?var-environment=All&#38;var-cluster=All&#38;var-replication_set=All&#38;var-database=All&#38;var-schema=All&#38;var-node_name=ps8&#38;var-service_name=ps8-mysql&#38;var-username=All&#38;var-service_type=All&#38;var-node_type=All&#38;var-interval=$__auto_interval_interval&#38;columns=%5B%22load%22,%22num_queries%22,%22query_time%22%5D&#38;group_by=queryid&#38;order_by=-load&#38;from=now-12h&#38;to=now&#38;totals=false&#38;details_tab=details\"><b>PMM Query Analytics:</b></a></p>\n<p><span>The Query Analytics dashboard shows how queries are executed and where they spend their time. To get more information out of QAN you should have QAN prerequisites enabled. </span><span>Select the timeframe and check for the slow queries that caused most of the load. Most probably these are the queries that you need to optimize to avoid any further issues.</span></p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71799 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/qan1-1024x382.png\" alt=\"PMM Query Analytics\" width=\"900\" height=\"336\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/qan1-1024x382.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/qan1-300x112.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/qan1-200x75.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/qan1-1536x573.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/10/qan1-367x137.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/qan1.png 1572w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p><span>Danielâs blog on <a target=\"_blank\" href=\"https://www.percona.com/blog/2020/10/07/how-to-find-query-slowdowns-using-percona-monitoring-and-management/\">How to find query slowdowns using PMM</a> will help you troubleshoot better with QAN.</span></p>\n<p><span>For more details on MySQL Troubleshooting and Performance Optimizations, you can check our CEO Peter Zaitsevâs webinar on </span><a target=\"_blank\" href=\"https://www.percona.com/resources/videos/mysql-troubleshooting-and-performance-optimization-pmm\"><span>MySQL Troubleshooting and Performance Optimization with PMM</span></a><span>.</span></p>\n","descriptionType":"html","publishedDate":"Thu, 08 Oct 2020 14:29:56 +0000","feedId":11,"bgimg":"","linkMd5":"10fd7718418737d7948ad9056b32e856","bgimgJsdelivr":"","metaImg":"","author":"Rituja Borse","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn7@2020_3/2020/10/09/03-33-03-893_668271a9cbd3ad71.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn47@2020_6/2020/10/09/03-32-55-532_3c7b14984def0ef5.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/cpu.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn44@2020_3/2020/10/09/03-32-50-299_a4d4812f7a153ec5.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/cpu2.png":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn84@2020_5/2020/10/09/03-32-51-372_57bd57e1a166a5cd.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/disk.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn4@2020_2/2020/10/09/03-33-19-019_927ce85b04262495.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/cli.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn99@2020_2/2020/10/09/03-32-48-972_025aed50e6a5f5b1.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/slow.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn11@2020_3/2020/10/09/03-32-47-565_53fcd1ee749232b8.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/hll.png":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn10@2020_1/2020/10/09/03-32-53-228_d6f29c18bf8f6a42.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/inn.png":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn7@2020_4/2020/10/09/03-32-39-921_a034971d9c40119d.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/row.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn55@2020_5/2020/10/09/03-32-45-291_e5b78152398bd38e.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/perf1-1024x178.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn16@2020_5/2020/10/09/03-32-41-734_80de608d6b566190.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/qan1-1024x382.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn95@2020_3/2020/10/09/03-32-46-558_b7d2997eb439dd2c.webp"},"publishedOrCreatedDate":1602214352595},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Postgresql_fdw Authentication Changes in PostgreSQL 13","link":"https://www.percona.com/blog/?p=71546","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Postgresql_fdw-Authentication-Changes-in-PostgreSQL-13-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Postgresql_fdw Authentication Changes in PostgreSQL 13\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Postgresql_fdw-Authentication-Changes-in-PostgreSQL-13-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/Postgresql_fdw-Authentication-Changes-in-PostgreSQL-13-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/Postgresql_fdw-Authentication-Changes-in-PostgreSQL-13-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/Postgresql_fdw-Authentication-Changes-in-PostgreSQL-13-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/Postgresql_fdw-Authentication-Changes-in-PostgreSQL-13.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p>PostgreSQL 13 is released with some cool features, such as index enhancement, partition enhancements, and many others. Along with these enhancements, there are some security-related enhancements that require some explanation. There are two major ones: one is related to libpq and the other is related to postgres_fdw. As it is known that <a target=\"_blank\" href=\"https://www.postgresql.org/docs/current/static/postgres-fdw.html\">postgres_fdw</a>Â  is considered to be a âreference implementationâ for other foreign data wrappers, all other foreign data wrappers follow their footsteps in development.Â  This is a community-supported foreign-data wrapper. The blog will explain the security changes in postgresq_fdw.</p>\n<h3>1 &#8211; The superuser can permit the non-superusers to establish a password-less connection on postgres_fdw</h3>\n<p>Previously, only the superuser can establish a password-less connection with PostgreSQL using postgres_fdw. No other password-less authentication method was allowed. It had been observed that in some cases there is no password required, so it does not make sense to have that limitation. Therefore, PostgreSQL 13 introduced a new option (password_required) where superusers can give permission to non-superusers to use a password-less connection on postgres_fdw.</p><pre class=\"crayon-plain-tag\">postgres=# CREATE EXTENSION postgres_fdw;\nCREATE EXTENSION\n\npostgres=# CREATE SERVER postgres_svr FOREIGN DATA WRAPPER postgres_fdw OPTIONS (dbname 'postgres');\nCREATE SERVER\n\npostgres=# CREATE FORIENG TABLE foo_for(a INT) SERVER postgres_svr OPTIONS(table_name 'foo');\nCREATE FOREIGN TABLE\n\npostgres=# create user MAPPING FOR vagrant SERVER postgres_svr;\nCREATE USER MAPPING\npostgres=# SELECT * FROM foo_for;\nÂ aÂ \n---\nÂ 1\nÂ 2\nÂ 3\n(3 rows)</pre><p>When we perform the same query from a non-superuser, then we will get this error message:</p>\n<p><strong>ERROR:Â  password is required</strong><br />\n<strong>DETAIL:Â  Non-superusers must provide a password in the user mapping</strong></p><pre class=\"crayon-plain-tag\">postgres=# CREATE USER nonsup;\nCREATE ROLE\n\npostgres=# create user MAPPING FOR nonsup SERVER postgres_svr;\nCREATE USER MAPPING\n\npostgres=# grant ALL ON foo_for TO nonsup;\nGRANT\n\nvagrant@vagrant:/work/data$ psql postgres -U nonsup;\npsql (13.0)\nType \"help\" for help.\n\npostgres=&#62; SELECT * FROM foo_for;\n2020-09-28 13:00:02.798 UTC [16702] ERROR:Â  password is required\n2020-09-28 13:00:02.798 UTC [16702] DETAIL:Â  Non-superusers must provide a password in the user mapping.\n2020-09-28 13:00:02.798 UTC [16702] STATEMENT:Â  SELECT * FROM foo_for;\nERROR:Â  password is required\nDETAIL:Â  Non-superusers must provide a password in the user mapping.</pre><p>Now perform the same query from non-superuser after setting the new parameter password_required &#8216;false&#8217; while creating the user mapping.</p><pre class=\"crayon-plain-tag\">vagrant@vagrant:/work/data$ psql postgres\npsql (13.0)\nType \"help\" for help.\n\npostgres=# DROP USER MAPPING FOR nonsup SERVER postgres_svr;\nDROP USER MAPPING\n\npostgres=# CREATE USER MAPPING FOR nonsup SERVER postgres_svr OPTIONS(password_required 'false');\nCREATE USER MAPPING\n\nvagrant@vagrant:/work/data$ psql postgres -U nonsup;\npsql (13.0)\nType \"help\" for help.\n\npostgres=&#62; SELECT * FROM foo_for;\nÂ aÂ \n---\nÂ 1\nÂ 2\nÂ 3\n(3 rows)</pre><p></p>\n<h3>2 &#8211; Authentication via an SSL certificate</h3>\n<p>A new option is provided to use an SSL certificate for authentication in postgres_fdw. To achieve this, the two new options added to use that feature are sslkey and sslcert.</p>\n<p>Before performing this task we need to configure SSL for server and client. There are many blogs available (<a target=\"_blank\" href=\"https://www.enterprisedb.com/postgres-tutorials/how-enable-ssl-authentication-edb-postgres-advanced-server\">How to Enable SSL authentication for an EDB Postgres Advanced Server</a> and <a target=\"_blank\" href=\"https://www.howtoforge.com/postgresql-ssl-certificates\">SSL Certificates For PostgreSQL</a>) to setup SSL for PostgreSQL, and this blog tries to configure SSL with minimum requirements.</p>\n<h4>Step 1: Generate Key in $PGDATA</h4>\n<p></p><pre class=\"crayon-plain-tag\">vagrant@vagrant$Â  openssl genrsa -des3 -out server.key 1024\nGenerating RSA private key, 1024 bit long modulus (2 primes)\n.+++++\n..................+++++\ne is 65537 (0x010001)\nEnter pass phrase for server.key:\nVerifying - Enter pass phrase for server.key:\n\n\nvagrant@vagrant$ openssl rsa -in server.key -out server.key\nEnter pass phrase for server.key:\nwriting RSA key</pre><p></p>\n<h4>Step 2:Â  Change the mode of the server.key</h4>\n<p></p><pre class=\"crayon-plain-tag\">vagrant@vagrant$Â  chmod og-rwx server.key</pre><p></p>\n<h4>Step 3: Generate the certificate</h4>\n<p></p><pre class=\"crayon-plain-tag\">vagrant@vagrant$ openssl req -new -key server.key -days 3650 -out server.crt -x509\n-----\nCountry Name (2 letter code) [AU]:PK\nState or Province Name (full name) [Some-State]:ISB\nLocality Name (eg, city) []:Islamabad\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Percona\nOrganizational Unit Name (eg, section) []:Dev\nCommon Name (e.g. server FQDN or YOUR name) []:localhost\nEmail Address []:ibrar.ahmad@gmail.com\n\n\nvagrant@vagrant$ cp server.crt root.crt</pre><p>Now we need to generate the client certificate.</p>\n<h4>Step 4: Generate aÂ Client key</h4>\n<p></p><pre class=\"crayon-plain-tag\">vagrant@vagrant$ openssl genrsa -des3 -out /tmp/postgresql.key 1024\nGenerating RSA private key, 1024 bit long modulus (2 primes)\n..........................+++++\n.....................................................+++++\ne is 65537 (0x010001)\nEnter pass phrase for /tmp/postgresql.key:\nVerifying - Enter pass phrase for /tmp/postgresql.key:\n\n\n\nvagrant@vagrant$ openssl rsa -in /tmp/postgresql.key -out /tmp/postgresql.key\nEnter pass phrase for /tmp/postgresql.key:\nwriting RSA key\n\n\nvagrant@vagrant$ openssl req -new -key /tmp/postgresql.key -outÂ \n-----\nCountry Name (2 letter code) [AU]:PK\nState or Province Name (full name) [Some-State]:ISB\nLocality Name (eg, city) []:Islamabad\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Percona\nOrganizational Unit Name (eg, section) []:Dev\nCommon Name (e.g. server FQDN or YOUR name) []:127.0.0.1\nEmail Address []:ibrar.ahmad@gmail.com\n\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:pakistan\nAn optional company name []:PerconaÂ </pre><p></p>\n<h4>Step 5:Â  Copy root.crt to the client</h4>\n<p></p><pre class=\"crayon-plain-tag\">vagrant@vagrant$ cp data5555/root.crt /tmp/</pre><p></p>\n<h4>Step 6: Test the connection using a certificate</h4>\n<p></p><pre class=\"crayon-plain-tag\">vagrant@vagrant$ psql 'host=localhost port=5555 dbname=postgres user=ibrar sslmode=verify-full sslcert=/tmp/postgresql.crt sslkey=/tmp/postgresql.key sslrootcert=/tmp/root.crt'\npsql (13.0)\nSSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off)\nType \"help\" for help.\npostgres=&#62; \\q</pre><p>Now we are ready, and we can create a foreign server in PostgreSQL with certificates.</p><pre class=\"crayon-plain-tag\">postgres=# CREATE server postgres_ssl_svr foreign data wrapper postgres_fdw options (dbname 'postgres', host 'localhost', port '5555', sslcert '/tmp/postgresql.crt', sslkey '/tmp/postgresql.key', sslrootcert '/tmp/root.crt');\nCREATE SERVER\n\npostgres=# create user MAPPING FOR vagrant SERVER postgres_ssl_svr;\nCREATE USER MAPPING\n\npostgres=# create foreign table foo_ssl_for(a int) server postgres_ssl_svr options(table_name 'foo');\nCREATE FOREIGN TABLE</pre><p>Now we are ready and set to query a foreign table by postgres_fdw using certificate authentication.</p><pre class=\"crayon-plain-tag\">postgres=# select * from foo_ssl_for;\n\nÂ aÂ \n---\nÂ 1\nÂ 2\nÂ 3\n(3 rows)</pre><p><strong><em>Note:Â  Only superusers can modify user mappings options </em><em><code class=\"literal\">sslcert</code> </em>and <em><code class=\"literal\">sslkey</code> </em><em>settings.</em></strong></p>\n<hr />\n<p>Our white paper &#8220;<strong>Why Choose PostgreSQL?</strong>&#8221; looks at the features and benefits of PostgreSQL and presents some practical usage examples. We also examine how PostgreSQL can be useful for companies looking to migrate from Oracle.</p>\n<p style=\"text-align: center;\"><a target=\"_blank\" class=\"btn btn-primary btn-lg\" href=\"https://www.percona.com/resources/white-papers/why-choose-postgresql?utm_source=blog&#38;utm_medium=download&#38;utm_campaign=auth&#38;utm_content=whitepaper\">Download PDF</a></p>\n","descriptionType":"html","publishedDate":"Wed, 30 Sep 2020 18:30:32 +0000","feedId":11,"bgimg":"","linkMd5":"0b8bf2cc3e7343afaccc87c85c7452ef","bgimgJsdelivr":"","metaImg":"","author":"Ibrar Ahmed","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/09/Postgresql_fdw-Authentication-Changes-in-PostgreSQL-13-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn39@2020_6/2020/10/09/03-32-49-954_1cab28bc62f3852a.webp"},"publishedOrCreatedDate":1602214352597},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Diagnosing and Fixing âMySQL Server Has Gone Awayâ Messages","link":"https://www.percona.com/blog/?p=71106","description":"<img width=\"200\" height=\"105\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-200x105.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"MySQL Server Has Gone Away\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-1024x536.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-1140x595.png 1140w, https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-367x192.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><span><img loading=\"lazy\" class=\"alignright size-medium wp-image-71496\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-300x157.png\" alt=\"MySQL Server Has Gone Away\" width=\"300\" height=\"157\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-1024x536.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-1140x595.png 1140w, https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-367x192.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />We all like when error messages are descriptive and give a clear idea about what is happening; however, there are some cases when a few possible reasons lay behind one error message. &#8220;MySQL server has gone away&#8221; is one of them. Most of the cases when the error occurs are <a target=\"_blank\" href=\"https://dev.mysql.com/doc/refman/5.7/en/gone-away.html\">described in MySQL documentation</a></span><span>, but it can get tricky. And here, I&#8217;d like to talk about &#8220;tricky&#8221;.</span></p>\n<p><span>There are only a few major cases when this happens:</span></p>\n<h3>1. MySQL Thread Was Killed by an Administrator or a Utility Such as pt-kill</h3>\n<p><span>The manual intervention is likely to be intermittent and, as it is a one-time thing in certain situations (e.g., a bad long-running query), probably would be known to a DBA. Pt-kill might be less noticeable, as it is often left running as a workaround to prevent those bad long queries from taxing system </span><span>resources. Checking the system processlist should bring the commands to the surface:</span></p><pre class=\"crayon-plain-tag\">$ ps xauf | grep pt-kill\ntaras 6069 0.1 0.1 111416 29452 pts/29 S+ 10:57 0:00 | | \\_ perl /usr/bin/pt-kill --interval 1s --busy-time 5s --match-info (SELECT) h=127.0.0.1 --print --kill\ntaras 6913 0.0 0.0 21532 1112 pts/30 S+ 11:00 0:00 | \\_ grep --color=auto pt-kill</pre><p><span>A very convenient way is to use the <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-server/LATEST/management/audit_log_plugin.html\">audit plugin</a> available for <a target=\"_blank\" href=\"https://www.percona.com/software/mysql-database/percona-server\">Percona Server for MySQL </a></span><span>to determine where the kill command came from:</span></p><pre class=\"crayon-plain-tag\">&#60;AUDIT_RECORD&#62;\n  &#60;NAME&#62;Query&#60;/NAME&#62;\n  &#60;RECORD&#62;624484743_2020-06-30T17:38:14&#60;/RECORD&#62;\n  &#60;TIMESTAMP&#62;2020-06-30T17:57:35 UTC&#60;/TIMESTAMP&#62;\n  &#60;COMMAND_CLASS&#62;kill&#60;/COMMAND_CLASS&#62;\n  &#60;CONNECTION_ID&#62;17&#60;/CONNECTION_ID&#62;\n  &#60;STATUS&#62;0&#60;/STATUS&#62;\n  &#60;SQLTEXT&#62;KILL QUERY 16&#60;/SQLTEXT&#62;\n  &#60;USER&#62;taras[taras] @ localhost []&lt;/USER&#62;\n  &#60;HOST&#62;localhost&#60;/HOST&#62;\n  &#60;OS_USER&#62;&#60;/OS_USER&#62;\n  &#60;IP&#62;&#60;/IP&#62;\n  &#60;DB&#62;&#60;/DB&#62;\n&#60;/AUDIT_RECORD&#62;</pre><p><span>It shows the hostname, user, and time when the connection got killed.</span></p>\n<h3>2. Big Data Chunk Transfer</h3>\n<p><span>For example, when using BLOB fields to store binary data in a table or there is an INSERT statement containing a lot of rows. It may happen when using the MySQL CLI client (one of the cases being loading an SQL dump), or it can happen within an application when it tries to store the BLOB data (for example, from a file upload).</span></p>\n<p><span>There is a limit MySQL imposes on the amount of data that can be transmitted per query, and the <em>max_allowed_packet</em> variable defines it.</span></p>\n<p><span>So, in both cases, we need to determine which table the data is being written to, for instance, grepping the SQL file for INSERT INTO statements and implementing logging on the application end. This way, the statement will be stored along with the error that prevented it from completing. A partial statement can be captured (as BLOBs could be a burden to log), but as long as there is a table name, it is possible to check the table structure and see if it does contain binary data.</span></p>\n<p><span>Example of an INSERT statement with binary data (truncated):</span></p><pre class=\"crayon-plain-tag\">INSERT INTO t1 VALUES (1, x'89504....82â)</pre><p><span>To allow for a larger query execution, the variable needs to be adjusted:</span></p><pre class=\"crayon-plain-tag\">SET GLOBAL max_allowed_packet = 128M ;</pre><p><span>The variable can be set per session or globally, depending on the use case.</span></p>\n<h3>3. The Connection Was Closed by Timeout</h3>\n<p><span>It is trivial, but applications can be reusing already-established connections. During the time of inactivity or lower traffic, it is possible some connections will not be used for a while and closed on the MySQL end. It is traced best with the application logging; if there is an event that happened in the evening followed by a period of inactivity and then the error in the morning, it is very likely that MySQL closed the connection.</span></p><pre class=\"crayon-plain-tag\">mysql&#62; SET SESSION wait_timeout = 5 ;\nQuery OK, 0 rows affected (0.00 sec)</pre><p>Wait for 5 seconds:</p><pre class=\"crayon-plain-tag\">mysql&#62; select 1 ;\nERROR 2006 (HY000): MySQL server has gone away\nNo connection. Trying to reconnect...\nConnection id: 16\nCurrent database: *** NONE ***\n\n+---+\n| 1 |\n+---+\n| 1 |\n+---+\n1 row in set (0.01 sec)</pre><p><span>Usually, the connection is re-established, and the application continues normal operations; yet it is always possible to extend the timeout in MySQL configuration:</span></p><pre class=\"crayon-plain-tag\">SET GLOBAL wait_timeout = 57600 ;</pre><p><span>The default value for the variable is 28800 seconds (8 hours), which is enough in most cases.</span></p>\n<p><span>Also, closing connections cleanly from an application end, after a period of inactivity, eliminates this problem.</span></p>\n<h3>4. MySQL Server Has Actually Gone Away</h3>\n<p><span>This one is probably the worst possible scenario when MySQL crashes on a query or due to some other reason, e.g., the OOM killer killed the process. However, it can be caused by a clean restart, too.</span></p>\n<p><span>In this case, one should check MySQL uptime and the logs, MySQL error log, and syslog. Those should indicate whether the server restart occurred and if there was an error leading to the restart.</span></p>\n<p><span>In case the server did crash, it is time to find the actual cause. Check the bug tracker, as the issue might have been reported and possibly fixed already; upgrade MySQL if needed. In case it was a clean restart, check if auto-updates are enabled or if someone else restarted the service interactively (yes, lack of communication is a thing too).</span></p>\n","descriptionType":"html","publishedDate":"Fri, 25 Sep 2020 18:13:51 +0000","feedId":11,"bgimg":"","linkMd5":"92e7770edc3d27a875cd72f5b96812a5","bgimgJsdelivr":"","metaImg":"","author":"Taras Onishchuk","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-200x105.png":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn51@2020_1/2020/10/09/03-32-40-523_2477d083d14e246c.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-300x157.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn15@2020_1/2020/10/09/03-32-32-977_39dc760957840223.webp"},"publishedOrCreatedDate":1602214352603},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Exciting and New Features in MariaDB 10.5","link":"https://www.percona.com/blog/?p=71688","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"New Features in MariaDB 10.5\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><span><img loading=\"lazy\" class=\"alignright size-medium wp-image-71709\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5-300x168.png\" alt=\"New Features in MariaDB 10.5\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" /><a target=\"_blank\" href=\"https://mariadb.com/products/mariadb-platform/\">MariaDB 10.5</a> was released in June 2020 and it will be supported until June 2025. This is the current stable version and comes with more exciting new features. In this blog, I am going to explain the new and exciting features involved in MariaDB 10.5.Â </span></p>\n<ul>\n<li><span>Amazon S3 engine</span></li>\n<li><span>Column Store</span></li>\n<li><span>INET 6 data type</span></li>\n<li><span>Binaries name changed to mariadb</span></li>\n<li><span>More granular privileges</span></li>\n<li><span>Galera with full GTID support</span></li>\n<li><span>InnoDB refactoring</span></li>\n</ul>\n<h2>Amazon S3 Engine</h2>\n<p><span>S3 engine is a nice feature in MariaDB 10.5. Now, you can directly move your table from a local device to Amazon S3 using the ALTER. Still, your data is accessible from MariaDB clients using the standard SQL commands. This is a great solution to those who are looking to archive data for future references at a low cost. I have written a </span><span>blog</span><span> about this feature &#8211; <a target=\"_blank\" href=\"https://www.percona.com/blog/2020/07/17/mariadb-s3-engine-implementation-and-benchmarking/\">MariaDB S3 Engine: Implementation and Benchmarking</a> &#8211; which has more insights on this.Â </span></p><pre class=\"crayon-plain-tag\">#Installation\n\nMariaDB [(none)]&gt; install soname 'ha_s3';\nQuery OK, 0 rows affected (0.000 sec)\n\nMariaDB [(none)]&gt; select * from information_schema.engines where engine = 's3'\\G\n*************************** 1. row ***************************\nÂ Â Â Â Â Â ENGINE: S3\nÂ Â Â Â Â SUPPORT: YES\nÂ Â Â Â Â COMMENT: Read only table stored in S3. Created by running ALTER TABLE table_name ENGINE=s3\nTRANSACTIONS: NO\nÂ Â Â Â Â Â Â Â Â Â XA: NO\nÂ Â SAVEPOINTS: NO\n1 row in set (0.000 sec)\n\n#Implementation\n\nMariaDB [s3_test]&gt; alter table percona_s3 engine=s3;\nQuery OK, 0 rows affected (1.934 sec)Â Â Â Â Â Â Â Â Â Â Â Â Â Â \nRecords: 0Â  Duplicates: 0Â  Warnings: 0</pre><p></p>\n<ul>\n<li><span>The S3 engine tables are completely read-only.</span></li>\n<li><span>COUNT(*) is pretty fast on s3 engine tables.</span></li>\n</ul>\n<h2>ColumnStore</h2>\n<p><span>MariaDB ColumnStore 1.5 is available with MariaDB 10.5 community server. It brings a high-performance, open source, distributed, SQL compatible analytics solution. Before MariaDB 10.5, ColumnStore was available as a separate fork of MariaDB. But with MariaDB 10.5, ColumnStore is now completely integrated. All you need to do is install the package for ColumnStore &#8220;MariaDB-columnstore-engine.x86_64&#8221;.</span></p><pre class=\"crayon-plain-tag\">[root@mariadb ~]# yum list installed | grep -i columnstore\nMariaDB-columnstore-engine.x86_64 Â  10.5.5-1.el7.centos Â  Â  Â  Â  @mariadb-main\n\nMariaDB [jesus]&gt; select plugin_name,plugin_status,plugin_library,plugin_version from information_schema.plugins where plugin_name like 'columnstore%';Â \n+---------------------+---------------+-------------------+----------------+\n| plugin_name Â  Â  Â  Â  | plugin_status | plugin_libraryÂ  Â  | plugin_version |\n+---------------------+---------------+-------------------+----------------+\n| Columnstore Â  Â  Â  Â  | ACTIVEÂ  Â  Â  Â  | ha_columnstore.so | 1.5Â  Â  Â  Â  Â  Â  |\n| COLUMNSTORE_COLUMNS | ACTIVEÂ  Â  Â  Â  | ha_columnstore.so | 1.5Â  Â  Â  Â  Â  Â  |\n| COLUMNSTORE_TABLESÂ  | ACTIVEÂ  Â  Â  Â  | ha_columnstore.so | 1.5Â  Â  Â  Â  Â  Â  |\n| COLUMNSTORE_FILES Â  | ACTIVEÂ  Â  Â  Â  | ha_columnstore.so | 1.5Â  Â  Â  Â  Â  Â  |\n| COLUMNSTORE_EXTENTS | ACTIVEÂ  Â  Â  Â  | ha_columnstore.so | 1.5Â  Â  Â  Â  Â  Â  |\n+---------------------+---------------+-------------------+----------------+\n5 rows in set (0.002 sec)\n\nMariaDB [jesus]&gt; create table hercules(id int, name varchar(16)) engine = ColumnStore;\nQuery OK, 0 rows affected (0.503 sec)\n\nMariaDB [jesus]&gt; show create table hercules\\G\n*************************** 1. row ***************************\nÂ Â Â Â Â Â Â Table: hercules\nCreate Table: CREATE TABLE `hercules` (\nÂ Â `id` int(11) DEFAULT NULL,\nÂ Â `name` varchar(16) DEFAULT NULL\n) ENGINE=Columnstore DEFAULT CHARSET=latin1\n1 row in set (0.000 sec)</pre><p><span>MariaDB ColumnStore 1.5 comes with two .xml utilities, which greatly helps with configuration management.</span></p>\n<ul>\n<li><span>mcsGetConfig : Used to display the current configurations</span></li>\n<li><span>mcsSetConfig : Used to change the configuration</span></li>\n</ul>\n<p></p><pre class=\"crayon-plain-tag\">[root@mariadb vagrant]# mcsGetConfig -a | grep CrossEngineSupport.Pass\nCrossEngineSupport.Password =Â \n[root@mariadb vagrant]# mcsSetConfig CrossEngineSupport Password \"hercules7sakthi\"\n[root@mariadb vagrant]# mcsGetConfig -a | grep CrossEngineSupport.Pass\nCrossEngineSupport.Password = hercules7sakthi</pre><p></p>\n<h2>INET6 Data Type</h2>\n<p><span>Usually, INET6 refers to the IPv6 family.</span></p>\n<ul>\n<li><span>INET6 data type is introduced to store the IPv6 addresses.</span></li>\n<li><span>INET6 data type also can be used to store the IPv4 addresses assuming conventional mapping of IPv4 addresses into IPv6 addresses.</span></li>\n<li><span>Internally storage engine see the INET6 as BINARY(16) and clients see the INET6 as CHAR(39)</span></li>\n<li><span>Values are stored as a 16-byte fixed-length binary string</span></li>\n</ul>\n<p><b>Example:</b></p><pre class=\"crayon-plain-tag\">MariaDB [jesus]&gt; create table inet6test (id int primary key auto_increment, ipaddresses INET6);\nQuery OK, 0 rows affected (0.005 sec)\n\nMariaDB [jesus]&gt; insert into inet6test (ipaddresses) values ('2001:0db8:85b3:0000:0000:8a2e:0370:7334');\nQuery OK, 1 row affected (0.001 sec)\n\nMariaDB [jesus]&gt; insert into inet6test (ipaddresses) values ('::172.28.128.12');\nQuery OK, 1 row affected (0.002 sec)\n\nMariaDB [jesus]&gt; select * from inet6test;\n+----+------------------------------+\n| id | ipaddressesÂ  Â  Â  Â  Â  Â  Â  Â  Â  |\n+----+------------------------------+\n|Â  1 | 2001:db8:85b3::8a2e:370:7334 |\n|Â  2 | ::172.28.128.12Â  Â  Â  Â  Â  Â  Â  |\n+----+------------------------------+\n2 rows in set (0.000 sec)</pre><p></p>\n<h2>Binaries Name Changed to mariadb</h2>\n<p><span>All binaries are now changed to âmariadbâ from âmysqlâ, with symlinks for the corresponding mysql command.</span></p>\n<p><b>Example:</b></p>\n<ul>\n<li><span>âmysqlâ is now âmariadbâ</span></li>\n<li><span>âmysqldumpâ is now âmariadb-dumpâ</span></li>\n<li><span>âmysqldâ is now âmariadbdâ</span></li>\n<li><span>âmysqld_safeâ is now âmariadbd-safeâ</span></li>\n</ul>\n<p><span>Using âmariadbâ client:</span></p><pre class=\"crayon-plain-tag\">[root@mariadb ~]# mariadb -e \"select @@version, @@version_comment\"\n+----------------+-------------------+\n| @@versionÂ  Â  Â  | @@version_comment |\n+----------------+-------------------+\n| 10.5.5-MariaDB | MariaDB ServerÂ  Â  |\n+----------------+-------------------+</pre><p><span>Using âmariadb-dumpâ:</span></p><pre class=\"crayon-plain-tag\">[root@mariadb ~]# mariadb-dump mysql &#62; mysql.sql\n[root@mariadb ~]# less mysql.sql | head -n5\n-- MariaDB dump 10.17Â  Distrib 10.5.5-MariaDB, for Linux (x86_64)\n--\n-- Host: localhostÂ  Â  Database: mysql\n-- ------------------------------------------------------\n-- Server version 10.5.5-MariaDB</pre><p><span>MariaDB server startup via systemd service will be started using the mariadbd binary. This is applicable for mariadbd-safe wrapper script as well. Even when called via the mysqld_safe symlink, it will start the actual server process as mariadbd, not mysqld.</span></p>\n<p><b>Example:</b></p>\n<p><span>Using startup service:</span></p><pre class=\"crayon-plain-tag\">[root@mariadb ~]# service mysql start\nRedirecting to /bin/systemctl start mysql.service\n[root@mariadb ~]# ps -ef | grep -i mysql\nmysql Â  Â  9002 Â  Â  1Â  1 01:23 ?Â  Â  Â  Â  00:00:00 /usr/sbin/mariadbd\nrootÂ  Â  Â  9021Â  8938Â  0 01:23 pts/0Â  Â  00:00:00 grep --color=auto -i mysql</pre><p><span>Using mariadbd-safe:</span></p><pre class=\"crayon-plain-tag\">[root@mariadb ~]# mariadbd-safe --user=mysql &#38;\n[root@mariadb ~]# 200806 01:30:43 mysqld_safe Logging to '/var/lib/mysql/mariadb.err'.\n200806 01:30:43 mysqld_safe Starting mariadbd daemon with databases from /var/lib/mysql\n[root@mariadb ~]#Â \n[root@mariadb ~]# ps -ef | grep -i mysql\nrootÂ  Â  Â  9088Â  8938Â  0 01:30 pts/0Â  Â  00:00:00 /bin/sh /bin/mariadbd-safe --user=mysql\nmysql Â  Â  9162Â  9088Â  1 01:30 pts/0Â  Â  00:00:00 //sbin/mariadbd --basedir=/ --datadir=/var/lib/mysql --plugin-dir=//lib64/mysql/plugin --user=mysql --log-error=/var/lib/mysql/mariadb.err --pi</pre><p><span>Using mysqld_safe:</span></p><pre class=\"crayon-plain-tag\">[root@mariadb ~]# mysqld_safe --user=mysql &#38;\n[root@mariadb ~]# 200806 01:31:40 mysqld_safe Logging to '/var/lib/mysql/mariadb.err'.\n200806 01:31:40 mysqld_safe Starting mariadbd daemon with databases from /var/lib/mysql\n[root@mariadb ~]# ps -ef | grep -i mysql\nrootÂ  Â  Â  9179Â  8938Â  0 01:31 pts/0Â  Â  00:00:00 /bin/sh /bin/mysqld_safe --user=mysql\nmysql Â  Â  9255Â  9179Â  0 01:31 pts/0Â  Â  00:00:00 //sbin/mariadbd --basedir=/ --datadir=/var/lib/mysql --plugin-dir=//lib64/mysql/plugin --user=mysql --log-error=/var/lib/mysql/mariadb.err --pid-file=mariadb.pid</pre><p><span>From the above examples, you can see that all the MariaDB server startup is using the âmariadbdâ.</span></p>\n<h2>More Granular Privileges</h2>\n<p><span>Privileges are more granular now. SUPER privilege is split now with more small privileges, similar to MySQL 8 dynamic privileges.Â  Security-wise this is a very good implementation to avoid unwanted privileges allocation to users.</span></p>\n<ul>\n<li><b>BINLOG ADMIN </b><span>&#8211; Enables administration of the binary log, including the PURGE BINARY LOGS</span></li>\n<li><b>BINLOG REPLAY</b><span> &#8211; Enables replaying the binary log with the BINLOG statement</span></li>\n<li><b>CONNECTION ADMIN</b><span> &#8211; Enables administering connection resource limit options. This includes ignoring the limits specified by max_connections, max_user_connections, and max_password_errors</span></li>\n<li><b>FEDERATED ADMIN </b><span>&#8211; Execute CREATE SERVER, ALTER SERVER, and DROP SERVER statements. Added in MariaDB 10.5.2.</span></li>\n<li><b>READ_ONLY ADMIN</b><span> &#8211; User can set the read_only system variable and allows the user to perform write operations, even when the read_only option is active. Added in MariaDB 10.5.2.</span></li>\n<li><b>REPLICATION MASTER ADMIN</b><span> &#8211; Permits administration of primary servers, including the SHOW REPLICA HOSTS statement, and setting the gtid_binlog_state, gtid_domain_id, master_verify_checksum, and server_id system variables. Added in MariaDB 10.5.2.</span></li>\n<li><b>REPLICATION SLAVE ADMIN</b><span> &#8211; Permits administering replica servers, including START SLAVE, STOP SLAVE, CHANGE MASTER, SHOW SLAVE STATUS, SHOW RELAYLOG EVENTS statements (new in MariaDB 10.5.2).</span></li>\n<li><b>SET USER</b><span> &#8211; Enables setting the DEFINER when creating triggers, views, stored functions, and stored procedures (new in MariaDB 10.5.2).</span></li>\n</ul>\n<p><span>And:</span></p>\n<ul>\n<li><span>âREPLICATION CLIENTâ is renamed to âBINLOG MONITORâ</span></li>\n<li><span>âSHOW MASTER STATUSâ command is now renamed to âSHOW BINLOG STATUSâ</span></li>\n</ul>\n<p></p><pre class=\"crayon-plain-tag\">MariaDB [jesus]&gt; show binlog status;\n+-------------+----------+--------------+------------------+\n| FileÂ  Â  Â  Â  | Position | Binlog_Do_DB | Binlog_Ignore_DB |\n+-------------+----------+--------------+------------------+\n| herc.000003 |Â  Â  Â  525 |Â  Â  Â  Â  Â  Â  Â  |Â  Â  Â  Â  Â  Â  Â  Â  Â  |\n+-------------+----------+--------------+------------------+\n1 row in set (0.000 sec)</pre><p></p>\n<h2>Galera With Full GTID Support</h2>\n<p><span>Galera is now completely supported with GTID from MariaDB 10.5. It will greatly help the cluster + Async replication environment. With this feature, all nodes in a cluster will have the same GTID for replicated events originating from the cluster.</span></p>\n<p><span>MariaDB 10.5 also has the new SESSION variable âwsrep_gtid_seq_noâ. With this variable, we can manually update the WSREP GTID sequence number in the cluster ( like gtid_seq_no for non WSREP transactions ).</span></p><pre class=\"crayon-plain-tag\">MariaDB [jesus]&gt; show variables like 'wsrep_gtid_seq_no';Â Â Â Â Â Â Â Â \n+-------------------+-------+\n| Variable_name Â  Â  | Value |\n+-------------------+-------+\n| wsrep_gtid_seq_no | 0 Â  Â  |\n+-------------------+-------+\n1 row in set (0.001 sec)</pre><p></p>\n<h2>InnoDB Refactoring</h2>\n<p><span>There are some notable changes in InnoDB engine, which makes MariaDB more divergent from MySQL.</span></p>\n<ul>\n<li><span>Innodb_buffer_pool_instance is </span><a target=\"_blank\" href=\"https://jira.mariadb.org/browse/MDEV-15058\"><span>deprecated</span></a><span> on MariaDB 10.5.0 and will be removed on <a target=\"_blank\" href=\"https://mariadb.com/kb/en/mariadb-1060-release-notes/\">MariaDB 10.6.0</a>. So the server will have a single buffer pool Instance. At Percona, Vadim made a benchmark on innodb_buffer_pool_instances with different thresholds. The benchmark was done with MySQL 8, you can find the results here: <a target=\"_blank\" href=\"https://www.percona.com/blog/2020/08/13/how-many-innodb_buffer_pool_instances-do-you-need-in-mysql-8/\">How Many innodb_buffer_pool_instances Do You Need in MySQL 8?</a> and <a target=\"_blank\" href=\"https://www.percona.com/blog/2020/08/14/part-two-how-many-innodb_buffer_pool_instances-do-you-need-in-mysql-8-with-a-cpu-bound-workload/\">Part Two: How Many innodb_buffer_pool_instances Do You Need in MySQL 8 With a CPU-Bound Workload?</a>.</span><span>Â </span></li>\n<li><span>InnoDB thread pool is </span><a target=\"_blank\" href=\"https://jira.mariadb.org/browse/MDEV-16264\"><span>implemented</span></a><span> for background threads.</span></li>\n<li><span>âbuf_page_t::newest_modificationâ is </span><a target=\"_blank\" href=\"https://jira.mariadb.org/browse/MDEV-21132\"><span>removed</span></a><span>.</span></li>\n<li><span>ârecv_sys_t::addr_hashâ is </span><a target=\"_blank\" href=\"https://jira.mariadb.org/browse/MDEV-19586\"><span>replaced</span></a><span> with âstd::mapâ</span></li>\n</ul>\n<p><span>Apart from this, MariaDB 10.5 has more improvements on the following topics as well.</span></p>\n<ul>\n<li><span>INFORMATION_SCHEMA</span></li>\n<li><span>PERFORMANCE_SCHEMA</span></li>\n<li><span>JSON</span></li>\n<li><span>Query Optimizer</span></li>\n<li><span>Binary logs with more metadata</span></li>\n</ul>\n<p><span>I am looking forward to experimenting with the new MariaDB 10.5 features and how they are going to help in the production environments. I am also planning to write blogs on some of these topics, so stay tuned!Â </span></p>\n<p><em>Your mission-critical applications depend on your MariaDB database environment. What happens if your database goes down? <a target=\"_blank\" href=\"https://www.percona.com/services/support/mariadb-support\">Contact Percona MariaDB Database Support!</a> Percona is the premier support provider for open source databases, including MariaDB, the most well-known fork of MySQL.</em></p>\n","descriptionType":"html","publishedDate":"Fri, 02 Oct 2020 15:24:09 +0000","feedId":11,"bgimg":"","linkMd5":"b0005d3adc7cce2b1b4e268fa1e0126a","bgimgJsdelivr":"","metaImg":"","author":"Sri Sakthivel","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn80@2020_4/2020/10/09/03-33-02-461_6ac3ea4a622482a5.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn79@2020_6/2020/10/09/03-32-46-524_89bfad42accc0c1c.webp"},"publishedOrCreatedDate":1602214352599},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Using Security Threat Tool and Alertmanager in Percona Monitoring and Management","link":"https://www.percona.com/blog/?p=71225","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"security threat tool percona monitoring and management\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><span><img loading=\"lazy\" class=\"alignright wp-image-71574 size-medium\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management-300x168.png\" alt=\"security threat tool percona monitoring and management\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />With version </span><a target=\"_blank\" href=\"https://www.percona.com/doc/percona-monitoring-and-management/2.x/release-notes/2.9.1.html\"><span>2.9.1</span></a><span> of </span><a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\"><span>Percona Monitoring and Management</span></a><span> (PMM) we delivered some new improvements to its </span><a target=\"_blank\" href=\"https://www.percona.com/doc/percona-monitoring-and-management/2.x/platform/stt.html\"><span>Security Threat Tool</span></a><span> (STT).</span></p>\n<p><span>Aside from an updated user interface, you now have the ability to run STT checks manually at any time, instead of waiting for the normal 24 hours check cycle. This can be useful if, for example, you want to see an alert gone after you fixed it. Moreover, you can now also temporarily mute (for 24 hours) some alerts you may want to work on later.</span></p>\n<p><img loading=\"lazy\" class=\"aligncenter wp-image-71226 size-large\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/HE-Query-Analytics-1024x613.png\" alt=\"\" width=\"900\" height=\"539\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/HE-Query-Analytics-1024x613.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/HE-Query-Analytics-300x180.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/HE-Query-Analytics-200x120.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/HE-Query-Analytics-1536x920.png 1536w, https://www.percona.com/blog/wp-content/uploads/2020/09/HE-Query-Analytics-367x220.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/HE-Query-Analytics.png 1904w\" sizes=\"(max-width: 900px) 100vw, 900px\" /></p>\n<p><span>But how do these actions work?</span></p>\n<h2>Alertmanager</h2>\n<p><span>In a </span><a target=\"_blank\" href=\"https://www.percona.com/blog/2020/06/29/security-threat-tool-design-in-percona-monitoring-and-management/\"><span>previous article,</span></a><span> we briefly explained how the STT back end publishes alerts to </span><a target=\"_blank\" href=\"https://prometheus.io/docs/alerting/latest/alertmanager/\"><span>Alertmanager</span></a><span> so they appear in the STT section of PMM.</span></p>\n<p>Now, before we uncover the details of that, please bear in mind that<strong> PMM&#8217;s built-in Alertmanager is still under development.</strong> <strong>We do not recommend you use it directly for your own needs</strong>, at least not for now.</p>\n<p><span>With that out of the way, let&#8217;s see the details of the interaction with Alertmanager.</span></p>\n<p><span>To retrieve the current alerts, the interface calls an </span><a target=\"_blank\" href=\"https://petstore.swagger.io/?url=https://raw.githubusercontent.com/prometheus/alertmanager/master/api/v2/openapi.yaml\"><span>Alertmanagerâs API</span></a><span>, filtering for non-silenced alerts:</span></p><pre class=\"crayon-plain-tag\">GET /alertmanager/api/v2/alerts?silenced=false[...]</pre><p><span>This call returns a list of active alerts, which looks like this:</span></p><pre class=\"crayon-plain-tag\">[\n  {\n    \"annotations\": {\n      \"description\": \"MongoDB admin password does not meet the complexity requirement\",\n      \"summary\": \"MongoDB password is weak\"\n    },\n    \"endsAt\": \"2020-09-30T14:39:03.575Z\",\n    \"startsAt\": \"2020-04-20T12:08:48.946Z\",\n    \"labels\": {\n      \"service_name\": \"mongodb-inst-rpl-1\",\n      \"severity\": \"warning\",\n      ...\n    },\n    ...\n  },\n  ...\n]</pre><p><span>Active alerts have a <pre class=\"crayon-plain-tag\">startsAt</pre> </span><span>timestamp at the current time or in the past, while the <pre class=\"crayon-plain-tag\">endsAt</pre></span><span>Â timestamp is in the future. The other properties contain descriptions and the severity of the issue the alert is about. <pre class=\"crayon-plain-tag\">labels</pre></span><span>, in particular, uniquely identify a specific alert and are used by Alertmanager to deduplicate alerts. (There are also other âmetaâ properties, but they are out of the scope of this article.)</span></p>\n<h3>Force Check</h3>\n<p><span>Clicking on âRun DB checksâ will trigger an API call to the PMM server, which will execute the checks workflow on the PMM back end (you can read more about it </span><a target=\"_blank\" href=\"https://www.percona.com/blog/2020/06/29/security-threat-tool-design-in-percona-monitoring-and-management/\"><span>here</span></a><span>). At the end of that workflow, alerts are sent to Alertmanager through a </span><span>POST</span><span> call to the same endpoint used to retrieve active alerts. The call payload has the same structure as shown above.</span></p>\n<p><span>Note that while you could create alerts manually this way, that</span><span>âs highly discouraged, since it could negatively impact STT alerts. If you want to define your own rules for Alertmanager, PMM can integrate with an external Alertmanager, independent of STT. You can read more in <a target=\"_blank\" href=\"https://www.percona.com/blog/2020/02/21/percona-monitoring-and-management-meet-prometheus-alertmanger/\">Percona Monitoring and Management, Meet Prometheus Alertmanager</a></span><span>.</span></p>\n<h3>Silences</h3>\n<p><span>Alertmanager has the concept of </span><a target=\"_blank\" href=\"https://prometheus.io/docs/alerting/latest/alertmanager/#silences\"><span>Silences</span></a><span>. To temporarily mute an alert, the front end generates a âsilenceâ payload starting from the metadata of the alert the user wants to mute and calls the </span><a target=\"_blank\" href=\"https://petstore.swagger.io/?url=https://raw.githubusercontent.com/prometheus/alertmanager/master/api/v2/openapi.yaml#/silence/postSilences\"><span>silence API on Alertmanager</span></a><span>:</span></p><pre class=\"crayon-plain-tag\">POST /alertmanager/api/v2/silences</pre><p><span>An example of a silence payload:</span></p><pre class=\"crayon-plain-tag\">{\n  \"matchers\": [\n    { \"name\": \"service_name\", \"value\": \"mongodb-inst-rpl-1\", \"isRegex\": false },\n    { \"name\": \"severity\", \"value\": \"warning\", \"isRegex\": false },\n    ...\n  ],\n  \"startsAt\": \"2020-09-14T20:24:15Z\",\n  \"endsAt\": \"2020-09-15T20:24:15Z\",\n  \"createdBy\": \"someuser\",\n  \"comment\": \"reason for this silence\",\n  \"id\": \"a-silence-id\"\n}</pre><p><span>As a confirmation of success, this API call will return a <pre class=\"crayon-plain-tag\">silenceID</pre></span><span>:</span></p><pre class=\"crayon-plain-tag\">{ \"silenceID\": \"1fcaae42-ec92-4272-ab6b-410d98534dfc\" }</pre><p>&#160;</p>\n<h2>Conclusion</h2>\n<p>From this quick overview, you can hopefully understand how simple it is for us to deliver security checks. Alertmanager helps us a lot in simplifying the final stage of delivering security checks to you in a reliable way. It allows us to focus more on the checks we deliver and the way you can interact with them.</p>\n<p>We&#8217;re constantly improving our Security Threat Tool, adding more checks and features to help you protect your organization&#8217;s valuable data. While we&#8217;ll try to make our checks as comprehensive as possible, we know that you might have very specific needs. That&#8217;s why for the future we plan to make STT even more flexible, adding scheduling of checks (since some need to run more/less frequently than others), disabling of checks, and even the ability to let you add your own checks! Keep following the latest releases as we continue to iterate on STT.</p>\n<p>For now, let us know in the comments: what other checks or features would you like to see in STT? We love to hear your feedback!</p>\n<p>Check out our <a target=\"_blank\" href=\"https://pmmdemo.percona.com/\" target=\"_blank\" rel=\"noopener\">Percona Monitoring and Management Demo site</a> or download <a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\" target=\"_blank\" rel=\"noopener\">Percona Monitoring and Management</a> today and give it a try!</p>\n","descriptionType":"html","publishedDate":"Tue, 29 Sep 2020 18:01:48 +0000","feedId":11,"bgimg":"","linkMd5":"de35e9c1666fdd4ef9ff677cb177e6bf","bgimgJsdelivr":"","metaImg":"","author":"Nicola Lamacchia","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn44@2020_1/2020/10/09/03-32-47-778_d11cb84aeacd177d.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn24@2020_6/2020/10/09/03-32-43-518_2c5fbe968aa58036.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/HE-Query-Analytics-1024x613.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn11@2020_6/2020/10/09/03-32-41-226_5ccc56acc1d6462f.webp"},"publishedOrCreatedDate":1602214352588},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Dangerous Edge Case Warning for Percona Toolkit and pt-online-schema-change","link":"https://www.percona.com/blog/?p=71620","description":"<img width=\"200\" height=\"105\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-200x105.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Percona Toolkit and pt-online-schema-change\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-1024x536.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-1140x595.png 1140w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-367x192.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-71943\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-300x157.png\" alt=\"Percona Toolkit and pt-online-schema-change\" width=\"300\" height=\"157\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-1024x536.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-1140x595.png 1140w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-367x192.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Recently I was dealing with an unexpected issue raised by our Support customer, in which data became inconsistent after a schema change was applied.</p>\n<p>After some investigation, it turned out that affected tables had a special word in the comments of some columns, which triggered an already known (and fixed) issue with the TableParser.pm library of Percona Toolkit.Â  The problem is that the customer was using an outdated Toolkit version, where <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-toolkit/LATEST/pt-online-schema-change.html\"><strong>pt-online-schema-change</strong></a> was using that buggy parser.</p>\n<p>This <strong>bug applies only to Percona Toolkit versions up to 3.0.10</strong>, so if you have already 3.0.11 or newer installed, you can skip the rest of this post as these are no longer affected.</p>\n<p>I am writing this post to warn every user of pt-online-schema-change who has not upgraded the toolkit, as the problem is <strong>potentially very dangerous and can lead to the silent loss of data.Â </strong></p>\n<p>The problem can manifest in two ways. The first one, although confusing, is not really dangerous as the operation is canceled. It happens when the columns with culprit comments do not allow NULL values. For example:</p><pre class=\"crayon-plain-tag\">CREATE TABLE `test_not_null` (\n`id` int NOT NULL,\n`add_id` int NOT NULL COMMENT 'my generated test case',\nPRIMARY KEY (`id`)\n) ENGINE=InnoDB;</pre><p>Schema change operation on this one will look like this:</p><pre class=\"crayon-plain-tag\">$ ./pt-online-schema-change-3.0.10 u=msandbox,p=msandbox,h=localhost,S=/tmp/mysql_sandbox5735.sock,D=test,t=test_not_null --print --alter \"engine=InnoDB\" --execute\n(...)\nAltering `test`.`test_not_null`...\nCreating new table...\nCREATE TABLE `test`.`_test_not_null_new` (\n`id` int(11) NOT NULL,\n`add_id` int(11) NOT NULL COMMENT 'my generated test case',\nPRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\nCreated new table test._test_not_null_new OK.\nAltering new table...\nALTER TABLE `test`.`_test_not_null_new` engine=InnoDB\nAltered `test`.`_test_not_null_new` OK.\n2020-09-30T21:25:22 Creating triggers...\n2020-09-30T21:25:22 Created triggers OK.\n2020-09-30T21:25:22 Copying approximately 3 rows...\nINSERT LOW_PRIORITY IGNORE INTO `test`.`_test_not_null_new` (`id`) SELECT `id` FROM `test`.`test_not_null` LOCK IN SHARE MODE /*pt-online-schema-change 1438 copy table*/\n2020-09-30T21:25:22 Dropping triggers...\nDROP TRIGGER IF EXISTS `test`.`pt_osc_test_test_not_null_del`\nDROP TRIGGER IF EXISTS `test`.`pt_osc_test_test_not_null_upd`\nDROP TRIGGER IF EXISTS `test`.`pt_osc_test_test_not_null_ins`\n2020-09-30T21:25:22 Dropped triggers OK.\n2020-09-30T21:25:22 Dropping new table...\nDROP TABLE IF EXISTS `test`.`_test_not_null_new`;\n2020-09-30T21:25:22 Dropped new table OK.\n`test`.`test_not_null` was not altered.\n2020-09-30T21:25:22 Error copying rows from `test`.`test_not_null` to `test`.`_test_not_null_new`: 2020-09-30T21:25:22 <strong>Copying rows caused a MySQL error 1364:</strong>\nLevel: Warning\nCode: 1364\nMessage: Field 'add_id' doesn't have a default value\nQuery: INSERT LOW_PRIORITY IGNORE INTO `test`.`_test_not_null_new` (`id`) SELECT `id` FROM `test`.`test_not_null` LOCK IN SHARE MODE /*pt-online-schema-change 1438 copy table*/</pre><p>So the reason for the failed operation may be unclear, but at least no data gets damaged. A much worse result happens when the column with comment allows nulls:</p><pre class=\"crayon-plain-tag\">CREATE TABLE `test_null` (\n`id` int NOT NULL,\n`add_id` int DEFAULT NULL COMMENT 'my generated test case',\nPRIMARY KEY (`id`)\n) ENGINE=InnoDB;\n\nmysql [localhost:5735] {msandbox} (test) &#62; select * from test_null;\n+----+--------+\n| id | add_id |\n+----+--------+\n| 1  |      1 |\n| 2  |      2 |\n| 3  |      3 |\n+----+--------+\n3 rows in set (0.01 sec)</pre><p>For this one, the schema change command <strong>runs without any errors:</strong></p><pre class=\"crayon-plain-tag\">$ ./pt-online-schema-change-3.0.10 u=msandbox,p=msandbox,h=localhost,S=/tmp/mysql_sandbox5735.sock,D=test,t=test_null --print --alter \"engine=InnoDB\" --execute\n(...)\nAltering `test`.`test_null`...\nCreating new table...\nCREATE TABLE `test`.`_test_null_new` (\n`id` int(11) NOT NULL,\n`add_id` int(11) DEFAULT NULL COMMENT 'my generated test case',\nPRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=latin1\nCreated new table test._test_null_new OK.\nAltering new table...\nALTER TABLE `test`.`_test_null_new` engine=InnoDB\nAltered `test`.`_test_null_new` OK.\n2020-09-30T21:28:11 Creating triggers...\n2020-09-30T21:28:11 Created triggers OK.\n2020-09-30T21:28:11 Copying approximately 3 rows...\nINSERT LOW_PRIORITY IGNORE INTO `test`.`_test_null_new` (`id`) SELECT `id` FROM `test`.`test_null` LOCK IN SHARE MODE /*pt-online-schema-change 3568 copy table*/\n2020-09-30T21:28:11 Copied rows OK.\n2020-09-30T21:28:11 Analyzing new table...\n2020-09-30T21:28:11 Swapping tables...\nRENAME TABLE `test`.`test_null` TO `test`.`_test_null_old`, `test`.`_test_null_new` TO `test`.`test_null`\n2020-09-30T21:28:11 Swapped original and new tables OK.\n2020-09-30T21:28:11 Dropping old table...\nDROP TABLE IF EXISTS `test`.`_test_null_old`\n2020-09-30T21:28:11 Dropped old table `test`.`_test_null_old` OK.\n2020-09-30T21:28:11 Dropping triggers...\nDROP TRIGGER IF EXISTS `test`.`pt_osc_test_test_null_del`\nDROP TRIGGER IF EXISTS `test`.`pt_osc_test_test_null_upd`\nDROP TRIGGER IF EXISTS `test`.`pt_osc_test_test_null_ins`\n2020-09-30T21:28:11 Dropped triggers OK.\nSuccessfully altered `test`.`test_null`.</pre><p>But&#8230; the table data is not the same after:</p><pre class=\"crayon-plain-tag\">mysql [localhost:5735] {msandbox} (test) &#62; select * from test_null;\n+----+--------+\n| id | add_id |\n+----+--------+\n|  1 |   NULL |\n|  2 |   NULL |\n|  3 |   NULL |\n+----+--------+\n3 rows in set (0.00 sec)</pre><p>Summarizing, it is essential to make sure you are using the <a target=\"_blank\" href=\"https://www.percona.com/downloads/percona-toolkit/LATEST/\">up to date Percona Toolkit</a>, especially the pt-online-schema-change tool, to avoid potential disaster. The current latest stable release, as of when I am writing the post, is version 3.2.1, and the fixed version for this particular bug, 3.0.11, was released in July 2018.</p>\n<h3>References:</h3>\n<p><a target=\"_blank\" href=\"https://www.percona.com/doc/percona-toolkit/3.0/release_notes.html\">https://www.percona.com/doc/percona-toolkit/3.0/release_notes.html</a><br />\n<a target=\"_blank\" href=\"https://jira.percona.com/browse/PT-1570\">https://jira.percona.com/browse/PT-1570</a></p>\n<p>&#160;</p>\n","descriptionType":"html","publishedDate":"Thu, 08 Oct 2020 13:40:07 +0000","feedId":11,"bgimg":"","linkMd5":"450fe1278c7015ad9d60e062d834470c","bgimgJsdelivr":"","metaImg":"","author":"PrzemysÅaw Malkowski","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-200x105.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn14@2020_4/2020/10/09/03-32-52-958_2ba3a61618e7cc3f.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-300x157.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn7@2020_4/2020/10/09/03-32-38-266_561860dcb62431ae.webp"},"publishedOrCreatedDate":1602214352580},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Various Ways to Perform Schema Upgrades with Percona XtraDB Cluster","link":"https://www.percona.com/blog/?p=71784","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Perform Schema Upgrades with Percona XtraDB Cluster\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><span><img loading=\"lazy\" class=\"alignright size-medium wp-image-71819\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster-300x168.png\" alt=\"Perform Schema Upgrades with Percona XtraDB Cluster\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Schema changes are the big challenges in Galera replication. So, it is recommended to understand the schema changes operation for everyone who uses the <a target=\"_blank\" href=\"https://www.percona.com/software/mysql-database/percona-xtradb-cluster\">Percona XtraDB Cluster</a> (PXB)/Galera clusters. In this blog, I am going to explain the operation and impact of the various schema changes methods used in the PXB/Galera cluster.</span></p>\n<ul>\n<li><span>Schema changes with âwsrep_OSU_method = TOIâ</span></li>\n<li><span>Schema changes with âwsrep_OSU_method = RSUâ</span></li>\n<li><span>Schema changes with âONLINE ALGORITHMSâ</span></li>\n<li><span>Schema changes with âpt-oscâ</span></li>\n<li><span>Schema changes with âgh-ostâ</span></li>\n</ul>\n<p><span>For testing:</span></p>\n<ul>\n<li><span>I have configured the 3-node Percona Xtradb Cluster (8.0.19).</span></li>\n<li><span>Executing read/write load using the sysbench.</span></li>\n</ul>\n<p></p><pre class=\"crayon-plain-tag\">mysql&#62; select @@wsrep_cluster_address\\G\n*************************** 1. row ***************************\n@@wsrep_cluster_address: gcomm://pxc81,pxc82,pxc83\n1 row in set (0.00 sec)\n\nmysql&#62; select @@version, @@version_comment\\G\n*************************** 1. row ***************************\nÂ Â Â Â Â Â Â Â @@version: 8.0.19-10\n@@version_comment: Percona XtraDB Cluster (GPL), Release rel10, Revision 727f180, WSREP version 26.4.3\n1 row in set (0.00 sec)</pre><p></p>\n<h2>What is the Impact of Schema Changes in Clusters?</h2>\n<ul>\n<li><span>By default (TOI), all the nodes in the cluster will be pause during the ALTER process. Because the ALTER needs to be replicated on all the nodes. If the ALTER is big it will affect the performance and could be the cause of the downtime.</span></li>\n<li><span>Rollback is not possible on schema upgrade.Â </span></li>\n<li><span>You canât kill the ALTER query immediately during the operation. So, your application may need to wait until the ALTER completion.Â </span></li>\n</ul>\n<p></p><pre class=\"crayon-plain-tag\">mysql&#62; pager grep alter\nPAGER set to 'grep alter'\n\nmysql&#62; show processlist;\n| 19 | rootÂ  Â  Â  Â  Â  Â  | localhost | schema_changes | Query Â  | Â  18 | altering table Â  Â  Â  Â  Â  | alter table sbtest1 add index idx_c(c) | Â  Â  Â  Â  0 | Â  Â  Â  Â  Â  Â  0 |\n7 rows in set (0.00 sec)\n\nmysql&#62; kill 19;\nERROR 1095 (HY000): You are not owner of thread 19</pre><p></p>\n<ul>\n<li><span>MDLs are set only on one node. Not across all the nodes in the cluster. So, you need additional control over this.Â </span></li>\n</ul>\n<h2>Schema Changes with âwsrep_OSU_method = TOIâ</h2>\n<p><i><span>TOI: Total Order Isolation</span></i></p>\n<ul>\n<li><span>TOI is the default method ( wsrep_OSU_method = TOI ) for schema changes.</span></li>\n<li><span>DDL statements are processed in the same order with regard to other transactions in each node.Â </span></li>\n<li><span>The full cluster will be blocked/locked during the DDL operation.Â </span></li>\n<li><span>This guarantees data consistency.</span></li>\n</ul>\n<p></p><pre class=\"crayon-plain-tag\">mysql&#62; select @@wsrep_OSU_method\\G\n*************************** 1. row ***************************\n@@wsrep_OSU_method: TOI\n1 row in set (0.00 sec)</pre><p><b>Example:</b></p>\n<p><span>I am going to run the below ALTER on âpxc81â.</span></p><pre class=\"crayon-plain-tag\">alter table sbtest1 add index idx_c(c)</pre><p><span>After initiating the ALTER on pxc81, My processlist states the COMMIT and UPDATE ( from sysbench ) statements are paused. Only ALTER is in progress. The COMMIT and UPDATE will be resumed once the ALTER is completed.</span></p><pre class=\"crayon-plain-tag\">| 17 | rootÂ  Â  Â  Â  Â  Â  | localhost | schema_changes | Execute |Â  Â  Â  15 | closing tables Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  | COMMIT Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  | Â  Â  Â  Â  0 | Â  Â  Â  Â  Â  Â  0 |\n| 17 | rootÂ  Â  Â  Â  Â  Â  | localhost | schema_changes | Execute |Â  Â  Â  15 | updating Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  | UPDATE sbtest1 SET c='91668836759-30934071579-18064439108-53267873872-79461377960-32104006456-143369 | Â  Â  Â  Â  0 | Â  Â  Â  Â  Â  Â  1 |\n| 24 | rootÂ  Â  Â  Â  Â  Â  | localhost | schema_changes | Query Â  |Â  Â  Â  15 | altering table Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  | alter table sbtest1 add index idx_c(c) | Â  Â  Â  Â  0 | Â  Â  Â  Â  Â  Â  0 |</pre><p><span>But, still, the SELECT statement can be run with âwsrep_sync_wait != 1â because &#8220;wsrep_sync_wait = 1&#8221; needs the casualty checks from other nodes. So, it will fail.Â Â </span></p>\n<p><strong>SELECT with âwsrep_sync_wait=1â</strong></p><pre class=\"crayon-plain-tag\">|Â  1 | system user Â  Â  | Â  Â  Â  Â  Â  | schema_changes | Query Â  | Â  Â  0 | altering table Â  Â  Â  Â  | alter table sbtest1 add index idx_c(c) | Â  Â  Â  Â  0 | Â  Â  Â  Â  Â  Â  0 |\n| 15 | rootÂ  Â  Â  Â  Â  Â  | localhost | schema_changes | Query Â  |Â  Â  40 | starting Â  Â  Â  Â  Â  Â  Â  | select * from sbtest1 where id=1 Â  Â  Â  | Â  Â  Â  Â  0 | Â  Â  Â  Â  Â  Â  0 |\n\nmysql&#62; select * from sbtest1 where id=1;\nERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction</pre><p><span>TOI can be the right choice for quick operations.</span></p>\n<ul>\n<li><span>CREATE STATEMENTS</span></li>\n<li><span>RENAME INDEX</span></li>\n<li><span>RENAME TABLE</span></li>\n<li><span>DROP INDEX</span></li>\n<li><span>ALGORITHM=INSTANT</span></li>\n</ul>\n<h2>Schema Changes with âwsrep_OSU_method = RSUâ</h2>\n<p><i><span>RSU &#8211; Rolling Schema Upgrade</span></i></p>\n<ul>\n<li><span>In this method, DDL statements will not replicate across the cluster nodes. Need to execute the DDL individually on all nodes.</span></li>\n<li><span>The node which is executing the DDL will desync from the cluster group. The other nodes in the cluster are still operational and receive the application connections.</span></li>\n<li><span>Once the node executes the DDL, it will start to apply the missing writesets.</span></li>\n<li><span>In this method, the important thing is the WRITEs should not be performed on that particular table until the schema upgrade completes on all the nodes. Users should be very clear on this because the failure will break the cluster and the data may be unrecoverable.Â </span></li>\n<li><span>Gcache should be good enough to store the writesets.</span></li>\n</ul>\n<p><b>Example:</b></p>\n<p><span>At pxc82, I am going to execute the ALTER.</span></p>\n<p><em>Session 1: (setting up the value to RSU &#8211; session-level)Â </em></p><pre class=\"crayon-plain-tag\">mysql&#62; set wsrep_OSU_method=RSU;\nQuery OK, 0 rows affected (0.09 sec)</pre><p><em><span>Session 2: (checking the node status)</span></em></p><pre class=\"crayon-plain-tag\">mysql&#62; show global status where Variable_name like 'wsrep_local_recv_queue' or Variable_name like 'wsrep_local_state_comment';\n+---------------------------+--------+\n| Variable_name Â  Â  Â  Â  Â  Â  | ValueÂ  |\n+---------------------------+--------+\n| wsrep_local_recv_queueÂ  Â  | 0Â  Â  Â  |\n| wsrep_local_state_comment | Synced |\n+---------------------------+--------+\n2 rows in set (0.00 sec)</pre><p><em><span>Session 1: (executing the ALTER )</span></em></p><pre class=\"crayon-plain-tag\">mysql&#62; alter table sbtest1 add index idx_c(c);</pre><p><em><span>Session 2: (checking again the node status )</span></em></p>\n<p><span>Here the node went to Donor/Desynced state once the ALTER started. You can see the queue also keeps increasing.</span></p><pre class=\"crayon-plain-tag\">mysql&#62; nopager;Â  show global status where Variable_name like 'wsrep_local_recv_queue' or Variable_name like 'wsrep_local_state_comment';\nPAGER set to stdout\n+---------------------------+----------------+\n| Variable_name Â  Â  Â  Â  Â  Â  | ValueÂ  Â  Â  Â  Â  |\n+---------------------------+----------------+\n| wsrep_local_recv_queueÂ  Â  | 2053 Â  Â  Â  Â  Â  |\n| wsrep_local_state_comment | Donor/Desynced |\n+---------------------------+----------------+\n2 rows in set (0.21 sec)</pre><p><em><span>Session 1: (ALTER completed)</span></em></p><pre class=\"crayon-plain-tag\">mysql&#62; alter table sbtest1 add index idx_c(c);\nQuery OK, 0 rows affected (2 min 6.52 sec)\nRecords: 0Â  Duplicates: 0Â  Warnings: 0</pre><p><em><span>Session 2: (Node synced to cluster)</span></em></p><pre class=\"crayon-plain-tag\">mysql&#62; show global status where Variable_name like 'wsrep_local_recv_queue' or Variable_name like 'wsrep_local_state_comment';\n+---------------------------+--------+\n| Variable_name Â  Â  Â  Â  Â  Â  | ValueÂ  |\n+---------------------------+--------+\n| wsrep_local_recv_queueÂ  Â  | 0Â  Â  Â  |\n| wsrep_local_state_comment | Synced |\n+---------------------------+--------+\n2 rows in set (0.00 sec)</pre><p><span>This step needs to be executed in pxc81 and pxc83 as well. After completing on all nodes, we are good to allow the WRITEs for that table.Â </span></p>\n<p><span>The RSU method is not truly disruption-free, as there are few bugs reported regarding RSU. Users should be very clear and careful about executing the RSU for schema updates:</span></p>\n<p><a target=\"_blank\" href=\"https://jira.percona.com/browse/PXC-2620\"><span>https://jira.percona.com/browse/PXC-2620</span></a></p>\n<p><a target=\"_blank\" href=\"https://jira.percona.com/browse/PXC-2293\"><span>https://jira.percona.com/browse/PXC-2293</span></a></p>\n<p><a target=\"_blank\" href=\"https://jira.percona.com/browse/PXC-1980\"><span>https://jira.percona.com/browse/PXC-1980</span></a></p>\n<h2>Schema Changes with âONLINE ALGORITHMSâ</h2>\n<p><span>So far, we have 3 algorithms,</span></p>\n<ul>\n<li><span>INPLACE</span></li>\n<li><span>COPY</span></li>\n<li><span>INSTANT</span></li>\n</ul>\n<p><b>With TOI:</b></p>\n<p><span>âALGORITHM = INPLACE / COPYâ still pauses the cluster during the operation. Galera doesnât allow transactions when an ALTER TABLE statement is run. So if you are using TOI, any ALTER TABLE will block all transactions on all nodes.</span></p><pre class=\"crayon-plain-tag\">| 17 | rootÂ  Â  Â  Â  Â  Â  | localhost | schema_changes | Execute |Â  Â  Â  12 | closing tables Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  | COMMIT Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  | Â  Â  Â  Â  0 | Â  Â  Â  Â  Â  Â  0 |\n| 18 | rootÂ  Â  Â  Â  Â  Â  | localhost | schema_changes | Execute |Â  Â  Â  12 | closing tables Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  | COMMIT Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  | Â  Â  Â  Â  0 | Â  Â  Â  Â  Â  Â  0 |\n| 32 | rootÂ  Â  Â  Â  Â  Â  | localhost | schema_changes | Query Â  |Â  Â  Â  13 | altering table Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  | alter table sbtest1 add index idx_c(c), algorithm=inplace,</pre><p><span>âALGORITHM=INSTANTâ is supported and faster in TOI.</span></p><pre class=\"crayon-plain-tag\">mysql&#62; alter table sbtest1 add column test_Ins int , algorithm=instant;\nQuery OK, 0 rows affected (0.24 sec)\nRecords: 0Â  Duplicates: 0Â  Warnings: 0 lock=none</pre><p><b>With RSU:</b></p>\n<p><span>âALGORITHM = INPLACE/COPYâ is still not beneficial on RSU. It pauses the Galera replication and takes the node to Desync.Â </span></p><pre class=\"crayon-plain-tag\">mysql&#62; show processlist;\n| 62 | rootÂ  Â  Â  Â  Â  Â  | localhost | schema_changes | Query Â  |Â  Â  51 | altering table Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  | alter table sbtest1 add index idx_c(c), algorithm=inplace, lock=none | Â  Â  Â  Â  0 | Â  Â  Â  Â  Â  Â  0 |\n5 rows in set (0.06 sec)\n\nmysql&#62; nopager;Â  show global status where Variable_name like 'wsrep_local_recv_queue' or Variable_name like 'wsrep_local_state_comment';\nPAGER set to stdout\n+---------------------------+----------------+\n| Variable_name Â  Â  Â  Â  Â  Â  | ValueÂ  Â  Â  Â  Â  |\n+---------------------------+----------------+\n| wsrep_local_recv_queueÂ  Â  | 7335 Â  Â  Â  Â  Â  |\n| wsrep_local_state_comment | Donor/Desynced |\n+---------------------------+----------------+\n2 rows in set (0.03 sec)</pre><p><span>âALGORITHM=INSTANTâ is supported and faster in RSU. But, still, you can use TOI to avoid the additional work.</span></p><pre class=\"crayon-plain-tag\">mysql&#62; alter table sbtest1 add column test_Inss int , algorithm=instant;\nQuery OK, 0 rows affected (0.19 sec)\nRecords: 0Â  Duplicates: 0Â  Warnings: 0\n\nmysql&#62; select @@wsrep_OSU_method;\n+--------------------+\n| @@wsrep_OSU_method |\n+--------------------+\n| RSUÂ  Â  Â  Â  Â  Â  Â  Â  |\n+--------------------+\n1 row in set (0.02 sec)</pre><p><span>I would suggest using the âALGORITHM = INSTANT &#8221; with TOI wherever you can. But, make sure you have the MySQL 8.x + version. Unfortunately, &#8220;ALGORITHM=INSTANT&#8221; currently only supports adding new columns.Â </span></p>\n<h2>Schema Changes with âpt-oscâ</h2>\n<p><i><span>pt-osc : Percona-online-schema-change</span></i></p>\n<p><span>Personally, I like this approach very much and use this mostly in production environments. Pt-osc provides non-blocking schema upgrades on all nodes in one shot. This should be used with the TOI method. The action flow will be like this:</span></p>\n<ul>\n<li><span>Create a new table â_tablename_newâ with the required modification</span></li>\n<li><span>Creates triggers for update the modified rows (insert / update / delete)</span></li>\n<li><span>Copy the records from the original table to the new table using chunk operation.</span></li>\n<li><span>Once the copy is completed, it will swap the table ( original â _old, _new â original ) and drop the triggers and old table. Direct DDLs ( RENAME TABLE, DROP TABLE ) will be used for this operation ( wsrep_OSU_method=TOI ).Â </span></li>\n</ul>\n<p><span>For the below ALTER,Â </span></p>\n<p><em><span>alter table schema_changes.sbtest1 add index idx_test_Ins(test_Ins);</span></em></p>\n<p><span>Pt-osc flow in SQL syntax:</span></p><pre class=\"crayon-plain-tag\">Creating new table...\nCREATE TABLE `schema_changes`.`_sbtest1_new` (\nÂ Â `id` int NOT NULL AUTO_INCREMENT,\nÂ Â `k` int NOT NULL DEFAULT '0',\nÂ Â `c` char(120) NOT NULL DEFAULT '',\nÂ Â `pad` char(60) NOT NULL DEFAULT '',\nÂ Â `test_Ins` int DEFAULT NULL,\nÂ Â PRIMARY KEY (`id`),\nÂ Â KEY `k_1` (`k`)\n) ENGINE=InnoDB AUTO_INCREMENT=20400335 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci\nCreated new table schema_changes._sbtest1_new OK.\nAltering new table...\nALTER TABLE `schema_changes`.`_sbtest1_new` add index idx_test_Ins(test_Ins)\nAltered `schema_changes`.`_sbtest1_new` OK.\nNot creating triggers because this is a dry run.\nNot copying rows because this is a dry run.\nINSERT LOW_PRIORITY IGNORE INTO `schema_changes`.`_sbtest1_new` (`id`, `k`, `c`, `pad`, `test_ins`) SELECT `id`, `k`, `c`, `pad`, `test_ins` FROM `schema_changes`.`sbtest1` FORCE INDEX(`PRIMARY`) WHERE ((`id` &#62;= ?)) AND ((`id` &#60;= ?)) LOCK IN SHARE MODE /*pt-online-schema-change 9253 copy nibble*/\nSELECT /*!40001 SQL_NO_CACHE */ `id` FROM `schema_changes`.`sbtest1` FORCE INDEX(`PRIMARY`) WHERE ((`id` &#62;= ?)) ORDER BY `id` LIMIT ?, 2 /*next chunk boundary*/\nNot swapping tables because this is a dry run.\nNot dropping old table because this is a dry run.\nNot dropping triggers because this is a dry run.\nDROP TRIGGER IF EXISTS `schema_changes`.`pt_osc_schema_changes_sbtest1_del`\nDROP TRIGGER IF EXISTS `schema_changes`.`pt_osc_schema_changes_sbtest1_upd`\nDROP TRIGGER IF EXISTS `schema_changes`.`pt_osc_schema_changes_sbtest1_ins`\n2020-09-30T08:31:17 Dropping new table...\nDROP TABLE IF EXISTS `schema_changes`.`_sbtest1_new`;\n2020-09-30T08:31:17 Dropped new table OK.</pre><p><span>Pt-osc provides several options to perform the effective operations.Â  You can control the connections, active threads, load, chunk size etc ..</span></p>\n<p><span>For Galera, we have the option </span><b>â&#8211;max-flow-ctrlâ</b><span>. The option will check the average time cluster spent pausing for FC and make the tool pause if it goes over the percentage indicated in the option. By default, the tool will not check the FC.</span></p><pre class=\"crayon-plain-tag\">[root@pxc81 log]# less /bin/pt-online-schema-changeÂ  | grep -i pausing\nÂ Â Â Â Â Â Â Â Â print STDERR \"Pausing because PXC Flow Control is active\\n\";\nÂ Â Â Â Â Â Â Â Â print STDERR \"Pausing because \"</pre><p><span>To make the schema changes on FOREIGN KEY tables, I would suggest using the âalter-foreign-keys-method = rebuild_constraintsâ. This helps to maintain the consistency of the schema and its relations. In this approach, before dropping the old table, it runs ALTER on all the child tables to drop existing FK and re-add new FK constraints that points to the columns from the new table. Again, adding and dropping the FOREIGN KEY will be the direct ALTER using TOI.</span></p>\n<h2>Schema changes with âgh-ostâ</h2>\n<p><span>Gh-ost is doing a similar approach like âpt-oscâ. It also helps to do the non-blocking ALTERs on all cluster nodes in one shot. The main difference is gh-ost is triggerless. Gh-ost uses the binary log to track the changes. So you need the following variables and thresholds to perform the gh-ost operation.Â </span></p><pre class=\"crayon-plain-tag\">log-bin=sakthi-bin\nbinlog-format=ROW\nlog-slave-updates=ON</pre><p><span>The flow will be like,</span></p>\n<ul>\n<li><span>Creates gh-ost table with the required modifications</span></li>\n<li><span>Copy the records from the original table to the new table using chunk operation.</span></li>\n<li><span>Apply the live changes by reading the DML events from binary logs.</span></li>\n<li><span>Once the binary log events are applied, it will swap the tables ( original &#8211;&#62; _old, gh-ost &#8211;&#62; original ) and drop the old table.</span></li>\n</ul>\n<p><b>Example:</b></p><pre class=\"crayon-plain-tag\">[root@pxc81 schema_changes]# gh-ost --alter=\"add index idx_test_Inss(test_Ins)\" --database=schema_changes --table=sbtest1 --user=root --password=Jesus@7sakthI --allow-on-master --execute\n[2020/09/30 09:40:56] [info] binlogsyncer.go:133 create BinlogSyncer with config {99999 mysql 127.0.0.1 3306 rootÂ  Â  false false &#60;nil&#62; false UTC true 0 0s 0s 0 false}\n[2020/09/30 09:40:56] [info] binlogsyncer.go:354 begin to sync binlog from position (binlog.000027, 196850993)\n[2020/09/30 09:40:56] [info] binlogsyncer.go:203 register slave for master server 127.0.0.1:3306\n[2020/09/30 09:40:56] [info] binlogsyncer.go:723 rotate to (binlog.000027, 196850993)\n# Migrating `schema_changes`.`sbtest1`; Ghost table is `schema_changes`.`_sbtest1_gho`\n# Migrating pxc81:3306; inspecting pxc81:3306; executing on pxc81\n# Migration started at Wed Sep 30 09:40:56 +0000 2020\n# chunk-size: 1000; max-lag-millis: 1500ms; dml-batch-size: 10; max-load: ; critical-load: ; nice-ratio: 0.000000\n# throttle-additional-flag-file: /tmp/gh-ost.throttleÂ \n# Serving on unix socket: /tmp/gh-ost.schema_changes.sbtest1.sock\nCopy: 0/6563240 0.0%; Applied: 0; Backlog: 0/1000; Time: 0s(total), 0s(copy); streamer: binlog.000027:196853401; Lag: 0.02s, State: migrating; ETA: N/A\nCopy: 0/6563240 0.0%; Applied: 0; Backlog: 0/1000; Time: 1s(total), 1s(copy); streamer: binlog.000027:196858195; Lag: 0.01s, State: migrating; ETA: N/A\nCopy: 22000/6563240 0.3%; Applied: 0; Backlog: 0/1000; Time: 2s(total), 2s(copy); streamer: binlog.000027:201067135; Lag: 0.01s, State: migrating; ETA: 9m58s\n\n.......\n\nCopy: 5682000/6563240 86.6%; Applied: 0; Backlog: 0/1000; Time: 16m10s(total), 16m10s(copy); streamer: binlog.000028:213168607; Lag: 0.01s, State: migrating; ETA: 2m30s\nCopy: 6563000/6563240 100.0%; Applied: 0; Backlog: 0/1000; Time: 20m20s(total), 20m20s(copy); streamer: binlog.000028:382677405; Lag: 0.01s, State: migrating; ETA: 0s</pre><p><span>Gh-ost also provides several options to perform effective operations.Â  You can control the connections, active threads, load, chunk size, etc.</span></p>\n<p><span>But unfortunately, â&#8211;max-flow-ctlâ option is not available in gh-ost.Â </span></p>\n<h2>Conclusion</h2>\n<p><span>So, finally, I would say,</span></p>\n<ul>\n<li><span>Always use the direct ALTER with TOI for the metadata changes and INSTANT ALTERs.</span></li>\n<li><span>Use pt-online-schema-change with TOI and use the optimal flow control thresholds for InnoDB tables.</span></li>\n<li><span>Schedule pt-online-schema-change operation in off-peak hours for FOREIGN KEY tables.</span></li>\n<li><span>If you use RSU, never forget that you need to execute the ALTER on all nodes individually and you should block the WRITEs for that particular table. Make sure, your Gcache size is good enough to hold the writesets.</span></li>\n<li><span>If you are concerned with triggers, you can use the gh-ost to make the ALTERs.</span><span><br />\n</span></li>\n</ul>\n","descriptionType":"html","publishedDate":"Tue, 06 Oct 2020 13:00:44 +0000","feedId":11,"bgimg":"","linkMd5":"4505f13126ecb4731f638a2890af8614","bgimgJsdelivr":"","metaImg":"","author":"Sri Sakthivel","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn83@2020_6/2020/10/09/03-32-44-114_3f189353650da531.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn67@2020_5/2020/10/09/03-32-59-941_2f0c188fe26f9f65.webp"},"publishedOrCreatedDate":1602214352615},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"How to Use CHECK Constraint in MySQL 8","link":"https://www.percona.com/blog/?p=70993","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"CHECK Constraint MySQL 8\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-71743\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8-300x168.png\" alt=\"CHECK Constraint MySQL 8\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Hello everyone, in this little post we will review a new feature in MySQL 8.</p>\n<h2>What is &#8220;CHECK Constraint&#8221;?</h2>\n<p>This is a new feature to specify a condition to check the value before INSERT or UPDATE into a row. The constraint could return an error if the result of a search condition is FALSE for any row of the table (but not if the result is UNKNOWN or TRUE).</p>\n<p>This feature starts working on MySQL 8.0.16, and in previous versions, we could create it, but it doesn&#8217;t work, meaning the syntax is supported but it is not working,</p>\n<p><strong>There are some rules to keep in mind&#8230;</strong></p>\n<p>&#8211; AUTO_INCREMENT columns are not permitted<br />\n&#8211; Refer to another column in another table is not permitted<br />\n&#8211; Stored functions and user-defined functions are not permitted (you can not call a function or any user-defined functions)<br />\n&#8211; Stored procedure and function parameters are not permitted (you cannot call a procedure and function parameters)<br />\n&#8211; Subqueries are not permitted<br />\n&#8211; Columns used in foreign key for the next actions (ON UPDATE, ON DELETE) are not permitted<br />\n&#8211; This CHECK is evaluated for the next statements INSERT, UPDATE, REPLACE, LOAD DATA, and LOAD XML. Also, CHECK constraint is evaluated for INSERT IGNORE, UPDATE IGNORE, LOAD DATA &#8230; IGNORE, and LOAD XML &#8230; IGNORE. For those statements, a warning occurs if a constraint evaluates to FALSE. The insert or update is skipped.</p>\n<h2>Let&#8217;s See Some Examples</h2>\n<p>I created the next table to test thisÂ functionality. This is super easy as you can see in examples:</p><pre class=\"crayon-plain-tag\">CREATE TABLE users (\nid int not null auto_increment,\nfirstname varchar(50) not null,\nlastname varchar(50) not null,\nage TINYINT unsigned not null CONSTRAINT `check_1` CHECK (age &#62; 15),\ngender ENUM('M', 'F') not null,\nprimary key (id)\n) engine = innodb;</pre><p>In this simple test, we can write or update rows only if the &#8220;age&#8221; column value is more than 15.</p>\n<p>Let&#8217;s see an example trying to INSERT rows with the &#8220;age&#8221; column less than 15:</p><pre class=\"crayon-plain-tag\">mysql&#62; INSERT INTO users SET firstname = 'Name1', lastname = 'LastName1', age = 10, gender = 'M';\nERROR 3819 (HY000): Check constraint 'check_1' is violated.</pre><p>To DROP, use the next example:</p><pre class=\"crayon-plain-tag\">ALTER TABLE users DROP CHECK check_1;</pre><p>Let&#8217;s see another example adding more logic into it. I altered the table with the next CHECKs:</p><pre class=\"crayon-plain-tag\">ALTER TABLE users\nADD CONSTRAINT gender_male\nCHECK (\n    CASE\n        WHEN gender = 'M'\n        THEN\n            CASE\n                WHEN age &#62;= 21\n                THEN 1\n                ELSE 0\n            END\n        ELSE 1\n    END = 1\n);\n\nALTER TABLE users\nADD CONSTRAINT gender_female\nCHECK (\n    CASE\n        WHEN gender = 'F'\n            THEN\n                CASE\n                    WHEN age &#62;= 18\n                    THEN 1\n                    ELSE 0\n                END\n        ELSE 1\n    END = 1\n);</pre><p>We added more logic, and now it depends on the &#8220;<strong>gender</strong>&#8221; and &#8220;<strong>age</strong>&#8221; columns. A CHECK constraint is satisfied if, and only if, the specified condition evaluates to TRUE or UNKNOWN(for NULL column value) for the row of the table. The constraint is violated otherwise.</p>\n<p>Let see an example from the previous logic.</p><pre class=\"crayon-plain-tag\">mysql&#62; INSERT INTO users SET firstname = 'Name2', lastname = 'LastName2', age = 10, gender = 'F';\nERROR 3819 (HY000): Check constraint 'gender_female' is violated.\n\nmysql&#62; INSERT INTO users SET firstname = 'Name3', lastname = 'LastName3', age = 10, gender = 'M';\nERROR 3819 (HY000): Check constraint 'gender_male' is violated.</pre><p>As you can see in the ERROR message, MySQL is showing the CHECK constraint name. This is good to use from the application source code to debug the error and to know from which CHECK is failing.</p>\n<p>Finally, this is the table structure:</p><pre class=\"crayon-plain-tag\">CREATE TABLE `users` (\n`id` int(11) NOT NULL AUTO_INCREMENT,\n`firstname` varchar(50) NOT NULL,\n`lastname` varchar(50) NOT NULL,\n`age` tinyint(3) unsigned NOT NULL,\n`gender` enum('M','F') NOT NULL,\nPRIMARY KEY (`id`),\nCONSTRAINT `gender_female` CHECK (((case when (`gender` = 'F') then (case when (`age` &#62; 18) then 1 else 0 end) else 1 end) = 1)),\nCONSTRAINT `gender_male` CHECK (((case when (`gender` = 'M') then (case when (`age` &#62; 21) then 1 else 0 end) else 1 end) = 1))\n) ENGINE=InnoDB AUTO_INCREMENT=4;</pre><p>We can add more logic in the table using this feature, but from my previous experience as a programmer, I don&#8217;t recommend adding logic in the tables because it is difficult to find or debug errors unless you do not have access to the application code.</p>\n","descriptionType":"html","publishedDate":"Fri, 02 Oct 2020 18:23:09 +0000","feedId":11,"bgimg":"","linkMd5":"464fd0b474658a00c9ae453a7ea3c9f5","bgimgJsdelivr":"","metaImg":"","author":"Walter Garcia","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn4@2020_3/2020/10/09/03-32-32-977_545a0395e3b0e21c.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn43@2020_6/2020/10/09/03-32-33-423_24db46f3f4ecaaf4.webp"},"publishedOrCreatedDate":1602214352588},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Webinar October 12: Percona Server for MongoDB â A Solid and Compatible Alternative to MongoDB","link":"https://www.percona.com/blog/?p=71641","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Percona Server MongoDB Italian Webinar\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p data-pm-slice=\"1 1 []\"><strong><em><img loading=\"lazy\" class=\"alignright size-medium wp-image-71651\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar-300x168.png\" alt=\"Percona Server MongoDB Italian Webinar\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />This webinar will be delivered in Italian.</em></strong></p>\n<p>MongoDB is the most used document-oriented database but some of the more requested features are available only in the Enterprise version. <a target=\"_blank\" href=\"https://www.percona.com/software/mongodb/percona-server-for-mongodb\">Percona Server for MongoDB</a> (PSMDB) is an alternative to MongoDB with its open source, solid, and 100% compatible server. In this webinar, in Italian, you will learn about PSMDB and our Italian financial customer, Fabrick, will discuss its experience with Percona Support Services.</p>\n<p>Please join <strong>Corrado Pandiani, Sr Consultant, </strong>and<strong> Maurizio La Plagia Head, of IT PFM &#38; Smart Banking at Fabrick, </strong>on <strong>Monday, October 12, 2020, </strong>at<strong> 9 am EDT/ 3 pm CET</strong>Â for the webinar <strong>&#8220;Percona Server for MongoDB: A Solid and Compatible Alternative to MongoDB</strong>&#8220;.</p>\n<p style=\"text-align: center;\"><a target=\"_blank\" class=\"btn btn-primary btn-lg\" href=\"https://attendee.gotowebinar.com/register/4827697582293078796?source=blog\">Register for Webinar</a></p>\n<p>If you can&#8217;t attend, <a target=\"_blank\" href=\"https://attendee.gotowebinar.com/register/4827697582293078796?source=blog\">sign up anyway</a> and we&#8217;ll send you the slides and recording afterward.</p>\n","descriptionType":"html","publishedDate":"Thu, 01 Oct 2020 14:19:56 +0000","feedId":11,"bgimg":"","linkMd5":"b8ed523b7adf2647b17fa3deec108410","bgimgJsdelivr":"","metaImg":"","author":"David Quilty","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn56@2020_2/2020/10/09/03-32-49-829_7b97e8b73e77625f.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn63@2020_6/2020/10/09/03-32-50-674_ac8b485306f48c32.webp"},"publishedOrCreatedDate":1602214352603},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"New Features in Percona Monitoring and Management 2.10, Updated Percona Distribution for MongoDB: Release Roundup September 28, 2020","link":"https://www.percona.com/blog/?p=71245","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Release-Roundup-September-28-2020-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Release Roundup September 28, 2020\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Release-Roundup-September-28-2020-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/Release-Roundup-September-28-2020-300x169.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/Release-Roundup-September-28-2020-367x206.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/Release-Roundup-September-28-2020.png 712w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><h2><img loading=\"lazy\" class=\"alignright size-medium wp-image-71509\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Release-Roundup-September-28-2020-300x169.png\" alt=\"Release Roundup September 28, 2020\" width=\"300\" height=\"169\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/Release-Roundup-September-28-2020-300x169.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/Release-Roundup-September-28-2020-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/Release-Roundup-September-28-2020-367x206.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/Release-Roundup-September-28-2020.png 712w\" sizes=\"(max-width: 300px) 100vw, 300px\" />It&#8217;s release roundup time here at Percona!</h2>\n<p>Our Release Roundups <span class=\"s1\">showcase the latest software updates, tools, and features to help you manage and deploy our software, with</span> highlights and critical information, as well as links to the full release notes and direct links to the software or service itself.</p>\n<p>Today&#8217;s post includes those releases and updates that have come out since September 14, 2020, featuring the new Percona Monitoring and Management 2.10.0 and an updated Percona Distribution for MongoDB 4.4.1.</p>\n<h2>Percona XtraDB Cluster 5.6.49-28.42</h2>\n<p>On September 15, 2020, <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-xtradb-cluster/5.6/release-notes/Percona-XtraDB-Cluster-5.6.49-28.42.html\">Percona XtraDB Cluster 5.6.49-28.42</a> was released. Minimize unexpected downtime and data loss with the most stable, scalable, secure, and highly available open source MySQL database on the market. An improvement in this release is the enhancement of the SST documentation to include a warning about the use of command-line parameters.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/downloads/Percona-XtraDB-Cluster-56/\">Download Percona XtraDB Cluster 5.6.49-28.42</a></p>\n<p>&#160;</p>\n<h2>Percona Monitoring and Management 2.10.0</h2>\n<p>On September 16, 2020, <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-monitoring-and-management/2.x/release-notes/2.10.0.html\">Percona Monitoring and Management 2.10.0</a> was released. It is a free and open-source platform for managing and monitoring MySQL, MongoDB, and PostgreSQL performance. There are many new features, improvements, and bug fixes in this release, including a new MongoDB exporter, the arrival of Grafana 7, and the return of a PMM1 functionality, which enabled a user to see the results of pt-summary output on the PMM user interface.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Download Percona Monitoring and Management 2.10.0</a></p>\n<p>&#160;</p>\n<h2>Percona Monitoring and Management 2.10.1</h2>\n<p><a target=\"_blank\" href=\"https://www.percona.com/doc/percona-monitoring-and-management/2.x/release-notes/2.10.1.html\">Percona Monitoring and Management 2.10.1</a> was released on September 23, 2020. It fixed a bug where the new MongoDB exporter has higher CPU usage compared with the old one.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/software/database-tools/percona-monitoring-and-management\">Download Percona Monitoring and Management 2.10.1</a></p>\n<p>&#160;</p>\n<h2>Percona XtraDB Cluster 5.7.31-31.45</h2>\n<p>On September 24, 2020, we released <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-xtradb-cluster/5.7/release-notes/Percona-XtraDB-Cluster-5.7.31-31.45.html\">Percona XtraDB Cluster 5.7.31-31.45</a>. An improvement in this release enhances SST documentation to include a warning about the use of command-line parameters, and several bugs were fixed, including the modification of wsrep_row_upd_check_foreign_constraints() to remove the check for DELETE and a fix of directory creation in build-binary.sh.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/downloads/Percona-XtraDB-Cluster-57/LATEST/\">Download Percona XtraDB Cluster 5.7.31-31.45</a></p>\n<p>&#160;</p>\n<h2>Percona Server for MongoDB 4.4.1-2</h2>\n<p>September 24, 2020, also saw the release of <a target=\"_blank\" href=\"https://percona.com/doc/percona-server-for-mongodb/4.4/release_notes/4.4.1-2.html\">Percona Server for MongoDB 4.4.1-2</a>, an enhanced, open source, and highly-scalable database that is a fully-compatible, drop-in replacement for MongoDB 4.4.1 Community Edition. Several bugs were fixed in this version, including LDAP authentication randomly failing with the âBad parameter to an ldap routineâ message in the log and <code class=\"docutils literal\"><span class=\"pre\">mongosh</span></code> unable to authenticate LDAP user.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/downloads/percona-server-mongodb-LATEST/\">Download Percona Server for MongoDB 4.4.1-2</a></p>\n<p>&#160;</p>\n<h2>Percona Distribution for MongoDB 4.4.1</h2>\n<p><a target=\"_blank\" href=\"https://www.percona.com/doc/percona-distribution-for-mongodb/4.4/release-notes-v4.4.1.html\">Percona Distribution for MongoDB 4.4.1</a> was released on September 24, 2020. It includes is a collection of solutions to run and operate your MongoDB efficiently with the data being consistently backed up. This release is based on Percona Server for MongoDBÂ 4.4.1-2 andÂ Percona Backup for MongoDBÂ 1.3.1.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/downloads/percona-distribution-mongodb-LATEST/\">Download Percona Distribution for MongoDB 4.4.1</a></p>\n<p>&#160;</p>\n<p>That&#8217;s it for this roundup, and be sure to <a target=\"_blank\" href=\"https://twitter.com/Percona\" target=\"_blank\" rel=\"&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;&#34;noopener&#34; noopener noreferrer\">follow us on Twitter</a> to stay up-to-date on the most recent releases! Percona is a leader in providing best-of-breed enterprise-class support, consulting, managed services, training, and software for MySQL, MongoDB, PostgreSQL, MariaDB, and other open source databases in on-premises and cloud environments.</p>\n<hr />\n<p>We understand that choosing open source software for your business can be a potential minefield. You need to select the best available options, which fully support and adapt to your changing needs. Choosing the right open source software can allow you access to enterprise-level features, without the associated costs.</p>\n<p>In our white paper, we discuss the key features that make open source software attractive, and why Percona&#8217;s software might be the best option for your business.</p>\n<p style=\"text-align: center;\"><a target=\"_blank\" class=\"btn btn-primary btn-lg\" href=\"https://www.percona.com/resources/white-papers/when-percona-software-right-choice?utm_source=blog&#38;utm_medium=download&#38;utm_campaign=roundup&#38;utm_content=whitepaper\" rel=\"noopener\">Download: When is Percona Software the Right Choice?</a></p>\n","descriptionType":"html","publishedDate":"Mon, 28 Sep 2020 13:34:24 +0000","feedId":11,"bgimg":"","linkMd5":"2fb9b6ca30e573fa11c890d9ceb666b9","bgimgJsdelivr":"","metaImg":"","author":"David Quilty","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/09/Release-Roundup-September-28-2020-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn71@2020_5/2020/10/09/03-32-33-021_a8876499a392243d.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/Release-Roundup-September-28-2020-300x169.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn87@2020_4/2020/10/09/03-32-39-871_4790eabe59d1479e.webp"},"publishedOrCreatedDate":1602214352603},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Deploying Percona Kubernetes Operators with OpenEBS Local Storage","link":"https://www.percona.com/blog/?p=71661","description":"<img width=\"200\" height=\"120\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Deploying-Percona-Kubernetes-Operators-with-OpenEBS-Local-Storage-200x120.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"Deploying Percona Kubernetes Operators with OpenEBS Local Storage\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Deploying-Percona-Kubernetes-Operators-with-OpenEBS-Local-Storage-200x120.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Deploying-Percona-Kubernetes-Operators-with-OpenEBS-Local-Storage-300x180.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Deploying-Percona-Kubernetes-Operators-with-OpenEBS-Local-Storage-367x220.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Deploying-Percona-Kubernetes-Operators-with-OpenEBS-Local-Storage.png 1024w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-71669\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Deploying-Percona-Kubernetes-Operators-with-OpenEBS-Local-Storage-300x180.png\" alt=\"Deploying Percona Kubernetes Operators with OpenEBS Local Storage\" width=\"300\" height=\"180\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/10/Deploying-Percona-Kubernetes-Operators-with-OpenEBS-Local-Storage-300x180.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/10/Deploying-Percona-Kubernetes-Operators-with-OpenEBS-Local-Storage-200x120.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/10/Deploying-Percona-Kubernetes-Operators-with-OpenEBS-Local-Storage-367x220.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/10/Deploying-Percona-Kubernetes-Operators-with-OpenEBS-Local-Storage.png 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Network volumes in Kubernetes provide great flexibility, but still, nothing beats local volumes from direct-attached storage in the sense of database performance.</p>\n<p>I want to explore ways to deploy both <a target=\"_blank\" href=\"https://www.percona.com/software/percona-kubernetes-operators\">Percona Kubernetes Operators</a> (<strong>Percona Kubernetes Operator for Percona XtraDB Cluster</strong> and <strong>Percona Kubernetes Operator for Percona Server for MongoDB</strong>) using local volumes, both on the bare-metal deployments or in cloud deployments.</p>\n<h3>Simple Ways</h3>\n<p>There are two ways available out of the box to deploy using local storage, which you can use immediately.</p>\n<p>You can specify in cluster deployment yaml volume specification, using either hostPath:</p><pre class=\"crayon-plain-tag\">volumeSpec:\n      hostPath:\n        path: /data\n        type: Directory</pre><p><span>Or <pre class=\"crayon-plain-tag\">emptyDir</pre>Â </span><span>Â </span><span>(which will be equal somewhat to ephemeral storage in EC2):</span></p><pre class=\"crayon-plain-tag\">volumeSpec:\n      emptyDir: {}</pre><p>While this will work, it is a very rigid way to force local storage, and it is not really the âKubernetes wayâ, as we will lose the capability to manage data volumes.Â  We want to see a more uniform way with Persistent Volumes and Persistent Volumes Claims.</p>\n<h2>Persistent Volumes</h2>\n<p>Recognizing limitations with hostPath and emptyDir, Kubernetes introduced <a target=\"_blank\" href=\"https://kubernetes.io/blog/2019/04/04/kubernetes-1.14-local-persistent-volumes-ga/\">Local Persistent Volumes</a>.</p>\n<p>Unfortunately, while this will work for the simple deployment of single pods, it does not work with dynamically created volumes which we need for Operators. We need the support of <a target=\"_blank\" href=\"https://kubernetes.io/docs/concepts/storage/dynamic-provisioning/\">Dynamic Volume Provisioning</a>.</p>\n<p>There are several projects to combine Dynamic Volume Provisioning with Local Persistent Volumes, but I did not have much success with them, and the only project which worked for me is <a target=\"_blank\" href=\"https://openebs.io/\">OpenEBS</a>.</p>\n<p>OpenEBS provides much more than just Local Persistent Volumes, but in this blog, I want to touch only OpenEBS Local PV Hostpath.</p>\n<h2>OpenEBS Local PV Hostpath</h2>\n<p>This is actually quite simple, and this is what I like about OpenEBS. First, we will define storage classes:</p>\n<p>For the local nvme storage:</p><pre class=\"crayon-plain-tag\">apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: localnvme\n  annotations:\n    openebs.io/cas-type: local\n    cas.openebs.io/config: |\n      - name: StorageType\n        value: hostpath\n      - name: BasePath\n        value: /data/openebs\nprovisioner: openebs.io/local\nreclaimPolicy: Delete\nvolumeBindingMode: WaitForFirstConsumer</pre><p>And for the local ssd:</p><pre class=\"crayon-plain-tag\">apiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: localssd\n  annotations:\n    openebs.io/cas-type: local\n    cas.openebs.io/config: |\n      - name: StorageType\n        value: hostpath\n      - name: BasePath\n        value: /mnt/data/ebs\nprovisioner: openebs.io/local\nreclaimPolicy: Delete\nvolumeBindingMode: WaitForFirstConsumer</pre><p>And after that we can deploy Operators using StorageClass, for exampleÂ  in cluster deployment yaml:</p><pre class=\"crayon-plain-tag\">volumeSpec:\n      persistentVolumeClaim:\n        storageClassName: localnvme\n        accessModes: [ \"ReadWriteOnce\" ]\n        resources:\n          requests:\n            storage: 200Gi</pre><p>The cluster will be deployed using localnvme StorageClass, and using space on /data/openebs.</p>\n<p><span>Now we can observe used volumes with </span><span>kubectl get pv:</span></p><pre class=\"crayon-plain-tag\">NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                        STORAGECLASS       REASON   AGE\npvc-325e11ff-9082-432c-b484-c0c7a3d1c949   200Gi      RWO            Delete           Bound    pxc/datadir-cluster2-pxc-2   localssd                    2d18h\npvc-3f940d14-8363-450e-a238-a9ff09bee5bc   200Gi      RWO            Delete           Bound    pxc/datadir-cluster3-pxc-1   localnvme                   43h\npvc-421cbf46-73a6-45f1-811e-1fca279fe22d   200Gi      RWO            Delete           Bound    pxc/datadir-cluster2-pxc-1   localssd                    2d18h\npvc-53ee7345-bc53-4808-97d6-2acf728a57d7   200Gi      RWO            Delete           Bound    pxc/datadir-cluster3-pxc-0   localnvme                   43h\npvc-b98eca4a-03b0-4b5f-a152-9b45a35767c6   200Gi      RWO            Delete           Bound    pxc/datadir-cluster2-pxc-0   localssd                    2d18h\npvc-fbe499a9-ecae-4196-b29e-c4d35d69b381   200Gi      RWO            Delete           Bound    pxc/datadir-cluster3-pxc-2   localnvme                   43h</pre><p>There we can see data volumes from two deployed clusters. OpenEBS Local PV Hostpath is now my go-to method to deploy clusters with the local storage.</p>\n","descriptionType":"html","publishedDate":"Thu, 01 Oct 2020 18:52:35 +0000","feedId":11,"bgimg":"","linkMd5":"a2681b1089c4deb8274d1f2abe4a2a5f","bgimgJsdelivr":"","metaImg":"","author":"Vadim Tkachenko","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/10/Deploying-Percona-Kubernetes-Operators-with-OpenEBS-Local-Storage-200x120.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn32@2020_6/2020/10/09/03-32-42-927_4af81a93d0ab36a8.webp","https://www.percona.com/blog/wp-content/uploads/2020/10/Deploying-Percona-Kubernetes-Operators-with-OpenEBS-Local-Storage-300x180.png":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn67@2020_1/2020/10/09/03-32-33-984_3fe168175bca41fa.webp"},"publishedOrCreatedDate":1602214352587},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"Webinar October 7: BPFTrace â Dtrace Replacement on Linux","link":"https://www.percona.com/blog/?p=71285","description":"<img width=\"200\" height=\"112\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux-200x112.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"BPFTrace - Dtrace Replacement on Linux\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-71592\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux-300x168.png\" alt=\"BPFTrace - Dtrace Replacement on Linux\" width=\"300\" height=\"168\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux-300x168.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux-1024x572.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux-200x112.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux-367x205.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />Join Peter Zaitsev, Percona CEO, as he discusses BPFTrace and DTrace on Linux.</p>\n<p>While eBPF was included in Linux kernel for quite a few years, it lacked a good âfront endâ to complete Dtrace functionality in the Linux ecosystem. In this presentation, Peter will look into BPFTrace as a capable Dtrace replacement. He will also demonstrate how you can develop your own tools and utilities using BPFTrace as well as how you can use the tools from BPFTrace collection to get great insights into Linux Operations.</p>\n<p>Please join <strong>Peter Zaitsev</strong> on <strong>Wednesday, October 7, 2020, at 11:30 am EDT</strong> for his webinar <strong>&#8220;BPFTrace &#8211; Dtrace Replacement on Linux</strong>&#8220;.</p>\n<p style=\"text-align: center;\"><a target=\"_blank\" class=\"btn btn-primary btn-lg\" href=\"https://register.gotowebinar.com/register/5517997370024238094?source=blog\">Register for Webinar</a></p>\n<p>If you can&#8217;t attend, <a target=\"_blank\" href=\"https://register.gotowebinar.com/register/5517997370024238094?source=blog\">sign up anyway</a> and we&#8217;ll send you the slides and recording afterward.</p>\n","descriptionType":"html","publishedDate":"Wed, 23 Sep 2020 13:33:27 +0000","feedId":11,"bgimg":"","linkMd5":"907844008d99e336ff485647c4e62862","bgimgJsdelivr":"","metaImg":"","author":"David Quilty","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux-200x112.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn60@2020_4/2020/10/09/03-33-02-451_54b6e7c6e7642e4b.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux-300x168.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn75@2020_4/2020/10/09/03-33-20-022_0552ae6fe5e72770.webp"},"publishedOrCreatedDate":1602214352600},{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","title":"MongoDB 101: 5 Configuration Options That Impact Security (And How to Set Them)","link":"https://www.percona.com/blog/?p=71384","description":"<img width=\"200\" height=\"105\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-200x105.png\" class=\"webfeedsFeaturedVisual wp-post-image\" alt=\"MongoDB Security\" loading=\"lazy\" style=\"display: block; margin-bottom: 5px; clear:both;max-width: 100%;\" link_thumbnail=\"\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-1024x536.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-1140x595.png 1140w, https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-367x192.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security.png 1200w\" sizes=\"(max-width: 200px) 100vw, 200px\" /><p><img loading=\"lazy\" class=\"alignright size-medium wp-image-71390\" src=\"https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-300x157.png\" alt=\"MongoDB Security\" width=\"300\" height=\"157\" srcset=\"https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-300x157.png 300w, https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-1024x536.png 1024w, https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-200x105.png 200w, https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-1140x595.png 1140w, https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-367x192.png 367w, https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security.png 1200w\" sizes=\"(max-width: 300px) 100vw, 300px\" />As with any database platform, MongoDB security is of paramount importance to keeping your data safe.Â  MongoDB and other data platforms like Redis and Elasticsearch are often in the news for data breaches because of misconfigured settings in the database.Â  So how do you keep you and your companyâs data from being compromised and from becoming another statistic?</p>\n<p>Weâll show you five configuration options, as well as others that are required to go along with them, for your MongoDB deployment that will help keep your data secure while allowing use by users and applications with least-privileged access using modern authentication methods, keeping your data encrypted on disk and over the wire, and to see who is accessing your data as well. These configuration options are across the following areas in security: authentication, authorization, encryption, and auditing.</p>\n<h2>MongoDB Security Overview</h2>\n<p>MongoDB security is composed of four main areas of focus, authentication (who), authorization(what), encryption (how), and auditing (when).Â  This section is intended to give you a high-level overview of the different security focus areas for MongoDB.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/doc/percona-server-for-mongodb/LATEST/enable-auth.html\">Authentication</a> is how you identify yourself to MongoDB.Â  There are many ways to authenticate oneself to a MongoDB database, from standard username and password using the SCRAM (Salted Challenge Response Authentication Mechanism) protocol, certificate-based authentication to tying into an identity management solution such as LDAP (Lightweight Directory Access Protocol), Active Directory and Kerberos.</p>\n<p>Authorization is how MongoDB determines what you, as an authenticated user, can do.Â  MongoDB supports authorization using the RBAC (Role-Based Access Control) method.Â  MongoDB lets you create roles which are groupings of privileges that any user granted that role can do.Â  MongoDB comes with a comprehensive set of <a target=\"_blank\" href=\"https://docs.mongodb.com/manual/reference/built-in-roles\">built-in roles</a> as well as giving you the flexibility to create your own custom roles.Â  Common roles like read-only and write are there of course, but also ones useful for monitoring any node, backup and restore, and user administration. Additionally, MongoDB also supports <a target=\"_blank\" href=\"https://www.percona.com/blog/2020/04/24/percona-server-for-mongodb-ldap-enhancements-user-to-dn-mapping/\">LDAP authorization</a> which allows you to sync LDAP groups with roles to simplify management.</p>\n<p>Encryption is how your data can be encrypted while in flight (Transport) and while on disk (At Rest). Â  Transport encryption keeps your data encrypted while it is sent to and from your application to MongoDB.Â  MongoDB supports TLS/SSL encryption for data in-flight using x.509 Certificates, and here&#8217;s an example of <a target=\"_blank\" href=\"https://www.percona.com/blog/2018/05/31/mongodb-deploy-replica-set-with-transport-encryption-part-3/\">setting up Transport Encryption</a>.Â  <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-server-for-mongodb/LATEST/data_at_rest_encryption.html\">Encryption at Rest</a> keeps your data safe from an external party who might get a copy of your data files as theyâll be completely unreadable in their encrypted form.</p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/doc/percona-server-for-mongodb/auditing.html\">Auditing</a> shows you when users connected, when privileges were changed, various admin events, users attempt something they shouldn&#8217;t, etc. based on filter criteria you can set.Â  This is helpful in compliance situations where you have to be able to show who was on the database at what time, what privileges they had, when privileges were changed, etc.</p>\n<p><strong>Tip:</strong> Donât confuse auditing as a way to track users&#8217; activities in real-time, but rather think of it as a way to create a tamper-proof, append-only log file that you can go back to that shows what was happening and by whom during a specific time.</p>\n<p><strong>Tip:</strong>Â  Auditing is an expensive operation and will impact performance, be sure that youâre getting value from it and your IT Compliance team is able to actively use it, before setting it up.</p>\n<h2>Configuration Options</h2>\n<p>So while knowing the important areas of MongoDB Security is great, how do we ensure they are enabled or set up correctly?Â  And which ones are the most important?Â  Weâll now go through 5 configuration options that will help you secure your MongoDB environment!Â  Weâll also list some required configuration options that will work in conjunction with our 5 most important configuration options to keep your data safe.Â  Weâll break these configuration options into their security focus areas.</p>\n<p>MongoDB uses a configuration file in the YAML file format. Â  The configuration file is usually found in the following <a target=\"_blank\" href=\"https://docs.mongodb.com/manual/reference/configuration-options/#configuration-file\">locations</a>, depending on your Operating System:</p>\n<h3>DEFAULT CONFIGURATION FILE</h3>\n<ul>\n<li>On Linux, a default /etc/mongod.conf configuration file is included when using a package manager to install MongoDB.</li>\n<li>On Windows, a default &#60;install directory&#62;/bin/mongod.cfg configuration file is included during the installation.</li>\n<li>On macOS, a default /usr/local/etc/mongod.conf configuration file is included when installing from MongoDBâs official Homebrew tap.</li>\n</ul>\n<h3>Authentication:</h3>\n<p>Our first configuration option, <a target=\"_blank\" href=\"https://docs.mongodb.com/manual/reference/configuration-options/#security.authorization\">security.authorization</a>, is perhaps the most important for enabling security on your MongoDB Deployment.Â  This configuration option not only enforces MongoDB using authentication so that a user must at least login using credentials but it also simultaneously engages role-based access control which limits what a user can do.</p><pre class=\"crayon-plain-tag\">security:\nÂ  authorization: enabled</pre><p>&#160;</p>\n<p><strong>Tip:</strong>Â  If you set this configuration option up before creating a user in MongoDB, you could use the <a target=\"_blank\" href=\"https://docs.mongodb.com/manual/core/security-users/#localhost-exception\">localhost exception</a> in order to create your first user.Â  This is especially helpful in cases of automation or other situations where you want to have all your configuration options configured only once and then come in and add users.</p>\n<p>There are several other authentication configuration options that are required for your MongoDB deployment:</p>\n<ul>\n<li>security.clusterAuthMode &#8211; The authentication mode used between replica set or sharded cluster nodes to authenticate.Â  This will typically be either keyFile or x509.Â  Acceptable values are:\n<ul>\n<li>keyFile &#8211; default, only accepts keyfiles</li>\n<li>x509 &#8211; uses only x509 certificates for cluster authentication</li>\n<li>sendKeyFile &#8211; only used when transitioning from keyFile to x509 certificate authentication. Â  Accepts keyFiles and x509 certificates</li>\n<li>sendX509 &#8211; only used when transitioning from x509 certificate authentication to keyFile authentication. Â  Accepts x509 certificates and keyFiles</li>\n</ul>\n</li>\n<li>security.keyFile &#8211; sets the destination of the keyFile if using keyFile based authentication.Â  Note that the user MongoDB is running as must have read-only or read/write level permissions on the keyfile, with no permissions granted to other users.</li>\n</ul>\n<h3>Authorization:</h3>\n<p>The security.authorization configuration option that enabled authentication is also the most important configuration option for setting up authorization since it also gives us roles that allow us to authorize users to have specific permissions. Â  While there are some authorization configuration options for the inbuilt authorization system, most of the options are useful for integrating LDAP or other external authentication mechanisms with your roles.Â  Read more about <a target=\"_blank\" href=\"https://docs.mongodb.com/manual/core/security-ldap-external/\">setting up LDAP Authorization</a>, as well as a great blog post discussing <a target=\"_blank\" href=\"https://www.percona.com/blog/2020/04/24/percona-server-for-mongodb-ldap-enhancements-user-to-dn-mapping/\">how to set it up</a>.</p>\n<h3>Encryption:</h3>\n<p><a target=\"_blank\" href=\"https://www.percona.com/blog/2019/07/30/network-transport-encryption-for-mongodb/\">Transport Encryption</a> ensures that your data is encrypted between your application and the database, it also can be used to encrypt data between members of your replica set and sharded cluster.Â  The most important configuration option here is <a target=\"_blank\" href=\"https://docs.mongodb.com/manual/reference/configuration-options/#net.tls.mode\">net.tls.mode</a>. This configuration option is new in MongoDB 4.2, previous to MongoDB 4.2, this configuration option is named <a target=\"_blank\" href=\"https://docs.mongodb.com/manual/reference/configuration-options/#net.ssl.mode\">net.ssl.mode</a>. Â  This configuration option decides how strictly you want to enforce TLS encryption. Â  The options for this configuration option are:</p>\n<ul>\n<li>Disabled &#8211; signifies that there is no encryption whatsoever.</li>\n<li>requireTLS &#8211; signifies that all traffic, regardless of origin, is encrypted.Â  requireTLS is the most secure setting for this configuration option.</li>\n<li>allowTLS &#8211; signifies that there is no encryption going on between members of the replica set or sharded cluster, but the DB server will accept both encrypted and non-encrypted traffic from the application hosts.Â  Only used for transitioning between disabled to requireTLS in a rolling restart fashion.</li>\n<li>preferTLS &#8211; signifies that there is encryption going on between members of the replica set or sharded cluster and that the DB server will accept both encrypted and non-encrypted traffic from the application hosts. Only used for transitioning between disabled to requireTLS in a rolling restart fashion.</li>\n</ul>\n<p></p><pre class=\"crayon-plain-tag\">net:\nÂ  tls:\nÂ  Â  mode: requireTL</pre><p>&#160;</p>\n<p>Additional required configuration options for transport encryption are:</p>\n<ul>\n<li>net.tls.certificateKeyFile &#8211; location of the .pem file with the certificate and itâs key to be used for application connections.Â  Note that the user MongoDB is running as must have read permissions on this file.</li>\n<li>net.tls.clusterFile &#8211; location of the .pem file used for transport encryption between replica set or cluster members. Â  Note that the user MongoDB is running as must have read permissions on this file.</li>\n<li>net.tls.CAFile &#8211; location of the .pem file with the root certificate chain from the Certificate Authority.Â  Note that the user MongoDB is running as must have read permissions on this file.</li>\n</ul>\n<p><a target=\"_blank\" href=\"https://www.percona.com/doc/percona-server-for-mongodb/LATEST/data_at_rest_encryption.html#data-at-rest-encryption\">Data at Rest Encryption</a> ensures that your data canât be read by someone who steals your databaseâs data files unless they also steal the key.Â  This prevents someone from reading your MongoDB data files at the file system level.Â  Here the most important configuration option is <a target=\"_blank\" href=\"https://docs.mongodb.com/manual/reference/configuration-options/index.html#security.enableEncryption\">security.enableEncryption</a>.</p><pre class=\"crayon-plain-tag\">security:\nÂ Â enableEncryption: true</pre><p>Additional required configuration options for Data At Rest Encryption are:</p>\n<ul>\n<li>security.encryptionCipherMode &#8211; form of encryption to use, options are AES256-CBC and AES256-GCM</li>\n</ul>\n<p><strong><a target=\"_blank\" href=\"https://www.percona.com/software/mongodb/percona-server-for-mongodb\">Percona Server for MongoDB</a> Specific Configuration Options:</strong></p>\n<p>Percona Server for MongoDB has integration with HashiCorp Vault for secret management for your Data at Rest Encryption. Read the <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-server-for-mongodb/LATEST/data_at_rest_encryption.html#data-at-rest-encryption\">documentation for Vault</a> and <a target=\"_blank\" href=\"https://www.percona.com/blog/2020/04/21/using-vault-to-store-the-master-key-for-data-at-rest-encryption-on-percona-server-for-mongodb/\">Using Vault to Store the Master Key for Data at Rest Encryption on Percona Server for MongoDB.</a></p>\n<p>Important configuration options for the Vault Integration are:</p>\n<ul>\n<li>security.vault.serverName &#8211; server name that your vault server is on</li>\n<li>Security.vault.port &#8211; port for vault connectivity</li>\n<li>security.vault.tokenFile &#8211; location of file with vault token</li>\n<li>Security.vault.secret &#8211; location for secrets, since these are set up per node, this should have a distinguishing characteristic such as node name in it</li>\n<li>security.vault.serverCAFile &#8211; location of CAFile (Certificate Authority) on your local mongodb node</li>\n<li>security.vault.rotateMasterKey &#8211; only used to rotate the master key</li>\n</ul>\n<p><strong>MongoDB Enterprise Specific Data At Rest Encryption Configuration Options:</strong></p>\n<p>Currently, MongoDB Enterprise does not have Vault Integration for Encryption at rest except in MongoDB Atlas.Â  MongoDB Enterprise does support the KMIP protocol and you can integrate MongoDB with any Key Management tool that utilizes the KMIP protocol.Â  Documentation can be found <a target=\"_blank\" href=\"https://docs.mongodb.com/manual/tutorial/configure-encryption/#key-manager\">here</a>.</p>\n<p>Important configuration options to support Key Management through the KMIP protocol are:</p>\n<ul>\n<li>security.kmip.serverName &#8211; server name where your Key Management tool resides</li>\n<li>security.kmip.port &#8211; port for your key management tool</li>\n<li>security.kmip.serverCAfile &#8211; path on your MongoDB hosts of a CA file (Certificate Authority) for secure connection to your Key Management Tool</li>\n<li>security.kmip.clientCertificateFile &#8211; path to the client certificate used for authentication to your Key Management tool</li>\n<li>security.kmip.rotateMasterKey &#8211; only used to rotate the master key</li>\n</ul>\n<h3>Auditing:</h3>\n<p><a target=\"_blank\" href=\"https://www.percona.com/doc/percona-server-for-mongodb/auditing.html\">Auditing</a> allows IT Security Compliance teams to track and log activities that are run against the MongoDB database.Â  There are several important auditing configuration options for MongoDB,Â  <a target=\"_blank\" href=\"https://docs.mongodb.com/manual/reference/configuration-options/index.html#auditLog.filter\">auditLog.filter</a> is the most important as it decides what exactly you are setting up in your auditing log.</p><pre class=\"crayon-plain-tag\">auditLog:\nÂ  filter:Â  { &#60;field1&#62;: &#60;expression1&#62;, ... }</pre><p>&#160;</p>\n<p>For example, if we only wanted to have an audit log entry created every time someone created or removed a collection, we would set the auditLog.Filter as such:</p><pre class=\"crayon-plain-tag\">auditLog:\nÂ Â filter: { atype: { $in: [ \"createCollection\", \"dropCollection\" ] } }</pre><p>&#160;</p>\n<p>If we wanted to audit everyone with a specific role, we could set the auditFilter as such:</p><pre class=\"crayon-plain-tag\">auditLog:\nÂ Â filter:{ roles: { role: \"readWrite\", db: \"appdb\" } }</pre><p>&#160;</p>\n<p>Additional required configuration options for auditing are:</p>\n<ul>\n<li>auditLog.destination &#8211; whether the audit log will be written to a file, to the console, or to the syslog</li>\n<li>auditLog.path &#8211; if outputting to a file, the destination directory, and file name of the audit log. Â  Note that the user MongoDB runs as must have read and write permissions to this directory.</li>\n<li>auditLog.format &#8211; the format the audit log is output to, options are JSON and BSON, with JSON being the more commonly used format.</li>\n</ul>\n<p>Finally, while auditing is important to track and log activity in your database, including accessing PII or other sensitive data, you donât want to expose PII in your auditing or other log files.Â  To accomplish this you must set up <a target=\"_blank\" href=\"https://www.percona.com/doc/percona-server-for-mongodb/LATEST/log-redaction.html\">log redaction</a> on your MongoDB Replica Set or Sharded Cluster. Â  The important configuration option for log redaction is <a target=\"_blank\" href=\"https://docs.mongodb.com/manual/reference/configuration-options/index.html#security.redactClientLogData\">security.redactClientLogData</a>. Â  Acceptable values for this configuration option are true and false.</p><pre class=\"crayon-plain-tag\">security:\nÂ  redactClientLogData: true</pre><p></p>\n<h2>Summary</h2>\n<p>In this blog post, weâve gone over five important MongoDB configuration options to ensure you have a more secure MongoDB deployment as well as some other configuration options that help the five keep your data secure.Â  We hope that these configuration options will help you build more secure MongoDB deployments and avoid being a statistic of a data breach. Â  Thanks for reading!</p>\n<h4>Additional Resources:</h4>\n<p><a target=\"_blank\" href=\"https://www.percona.com/blog/2020/08/10/securing-mongodb-top-five-security-concerns/\">MongoDB Top Five Security Concerns</a></p>\n<p><a target=\"_blank\" href=\"https://www.percona.com/blog/2020/07/08/on-demand-webinar-securing-mongodb/\"><span>Securing MongoDB Webinar</span></a></p>\n<hr />\n<p>Our latest resource, <strong>Using Open Source Software to Ensure the Security of Your MongoDB Database</strong>, documents how to deploy a secure, enterprise-grade, MongoDB deployment without worrying about license fees, giving organizations the flexibility to deploy consistent models across their entire infrastructure.</p>\n<p style=\"text-align: center;\"><a target=\"_blank\" class=\"btn btn-primary btn-lg\" href=\"https://www.percona.com/resources/white-papers/using-open-source-software-to-ensure-security-of-your-mongodb-database?utm_source=blog&#38;utm_medium=download&#38;utm_campaign=101&#38;utm_content=whitepaper\">Download &#8220;Using Open Source Software to Ensure the Security of Your MongoDB Database&#8221;</a></p>\n","descriptionType":"html","publishedDate":"Mon, 21 Sep 2020 18:03:40 +0000","feedId":11,"bgimg":"","linkMd5":"a27b86d00475d186fb5e0d4e119565f5","bgimgJsdelivr":"","metaImg":"","author":"Mike Grayson","articleImgCdnMap":{"https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-200x105.png":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn91@2020_5/2020/10/09/03-32-55-527_9ed334497e9c9fe2.webp","https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-300x157.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn20@2020_3/2020/10/09/03-32-44-936_3324da35bc25562f.webp"},"publishedOrCreatedDate":1602214352598}],"record":{"createdTime":"2020-10-09 11:32:32","updatedTime":"2020-10-09 11:32:32","feedId":11,"fetchDate":"Fri, 09 Oct 2020 03:32:32 +0000","fetchMs":282,"handleMs":698,"totalMs":128730,"newArticles":0,"totalArticles":40,"status":1,"type":0,"ip":"3b520398b65f82a2a83818c2716ca970","hostName":"us-029*","requestId":"79a0c6104435405888e5a718c9a1f03a_11","contentType":"application/rss+xml; charset=UTF-8","totalBytes":8403640,"bgimgsTotal":0,"bgimgsGithubTotal":0,"articlesImgsTotal":96,"articlesImgsGithubTotal":96,"successGithubMap":{"myreaderx14":3,"myreaderx8":2,"myreaderx7":3,"myreaderx15":3,"myreaderx16":4,"myreaderx6":3,"myreaderx4":4,"myreaderx10":4,"myreaderx32":3,"myreaderx11":4,"myreaderx33":3,"myreaderx3":4,"myreaderx12":4,"myreaderx2":2,"myreaderx13":3,"myreaderx1":3,"myreaderx30":3,"myreaderx31":4,"myreaderx18":4,"myreaderx19":4,"myreaderx":3,"myreaderx25":3,"myreaderx27":3,"myreaderx21":4,"myreaderx22":3,"myreaderx23":4,"myreaderx24":2,"myreaderx5oss":4,"myreaderx29":3},"failGithubMap":{}},"feed":{"createdTime":"2020-05-30 17:21:38","updatedTime":"2020-09-01 09:23:03","id":11,"name":"Percona Database Performance Blog","url":"https://www.percona.com/blog/feed/","subscriber":null,"website":null,"icon":"https://www.percona.com/blog/wp-content/uploads/2018/09/percona-32x32.png","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn89@2020_6/2020/09/01/01-23-01-358_b72bb3b39c378fe6.png","description":"","weekly":null,"link":null},"noPictureArticleList":[],"tmpCommonImgCdnBytes":0,"tmpBodyImgCdnBytes":8403640,"tmpBgImgCdnBytes":0,"extra4":{"start":1602214351575,"total":0,"statList":[{"spend":350,"msg":"è·åxmlåå®¹"},{"spend":698,"msg":"è§£éæç« "},{"spend":3,"msg":"ä¸ä¼ å°é¢å¾å°cdn"},{"spend":2,"msg":"ä¿®æ­£å°é¢å¾ä¸ä¼ å¤±è´¥éæ°ä¸ä¼ "},{"spend":127575,"msg":"æ­£æé¾æ¥ä¸ä¼ å°cdn"}]},"extra5":96,"extra6":96,"extra7ImgCdnFailResultVector":[null],"extra10_invalidATagHrefValue":{"https://www.percona.com/blog/?p=71779_mailto:community-team@percona.com":"mailto:community-team@percona.com"},"extra111_proxyServerAndStatMap":{"http://us-037.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe63.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-028.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-024.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-011.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-020.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://europe21.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-004.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-033.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-003.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-008.herokuapp.com/":{"failCount":0,"successCount":7,"resultList":[200,200,200,200,200,200,200]},"http://us-016.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-012.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-013.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-55.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://europe-58.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-25.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-001.herokuapp.com/":{"failCount":1,"successCount":0,"resultList":[null]},"http://europe-59.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe67.herokuapp.com/":{"failCount":0,"successCount":6,"resultList":[200,200,200,200,200,200]},"http://us-51.herokuapp.com/":{"failCount":0,"successCount":5,"resultList":[200,200,200,200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn4@2020_3/2020/10/09/03-32-32-977_545a0395e3b0e21c.webp","sourceBytes":16084,"destBytes":4392,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1010,"convertSpendMs":28,"createdTime":"2020-10-09 11:32:32","host":"us-004*","referer":"https://www.percona.com/blog/?p=70993","linkMd5ListStr":"464fd0b474658a00c9ae453a7ea3c9f5","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4.3 KB","compressRate":"27.3%","sourceSize":"15.7 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-300x157.png","sourceStatusCode":200,"destWidth":300,"destHeight":157,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn15@2020_1/2020/10/09/03-32-32-977_39dc760957840223.webp","sourceBytes":21279,"destBytes":8628,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1060,"convertSpendMs":6,"createdTime":"2020-10-09 11:32:32","host":"us-004*","referer":"https://www.percona.com/blog/?p=71106","linkMd5ListStr":"92e7770edc3d27a875cd72f5b96812a5","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"8.4 KB","compressRate":"40.5%","sourceSize":"20.8 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/Release-Roundup-September-28-2020-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn71@2020_5/2020/10/09/03-32-33-021_a8876499a392243d.webp","sourceBytes":42562,"destBytes":5148,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1087,"convertSpendMs":6,"createdTime":"2020-10-09 11:32:32","host":"us-037*","referer":"https://www.percona.com/blog/?p=71245","linkMd5ListStr":"2fb9b6ca30e573fa11c890d9ceb666b9","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"5 KB","compressRate":"12.1%","sourceSize":"41.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/Percona-Monitoring-and-Management-2.10-features-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn36@2020_6/2020/10/09/03-32-33-026_f296b69a13737853.webp","sourceBytes":21220,"destBytes":5998,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1075,"convertSpendMs":11,"createdTime":"2020-10-09 11:32:32","host":"us-037*","referer":"https://www.percona.com/blog/?p=71532","linkMd5ListStr":"60df5abe4b34547075223bc3e76d36af","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"5.9 KB","compressRate":"28.3%","sourceSize":"20.7 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-200x113.png","sourceStatusCode":200,"destWidth":200,"destHeight":113,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn17@2020_4/2020/10/09/03-32-33-429_77e916898c59d689.webp","sourceBytes":21137,"destBytes":5204,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1572,"convertSpendMs":51,"createdTime":"2020-10-09 11:32:32","host":"us-012*","referer":"https://www.percona.com/blog/?p=71318","linkMd5ListStr":"e2713cf10d85a6c05027188a7e171d12","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"5.1 KB","compressRate":"24.6%","sourceSize":"20.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/CHECK-Constraint-MySQL-8-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn43@2020_6/2020/10/09/03-32-33-423_24db46f3f4ecaaf4.webp","sourceBytes":27302,"destBytes":7486,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1530,"convertSpendMs":61,"createdTime":"2020-10-09 11:32:32","host":"us-012*","referer":"https://www.percona.com/blog/?p=70993","linkMd5ListStr":"464fd0b474658a00c9ae453a7ea3c9f5","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"7.3 KB","compressRate":"27.4%","sourceSize":"26.7 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn80@2020_4/2020/10/09/03-32-33-424_6e0c04d60fc31ed3.webp","sourceBytes":15707,"destBytes":4846,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1662,"convertSpendMs":57,"createdTime":"2020-10-09 11:32:32","host":"us-012*","referer":"https://www.percona.com/blog/?p=71698","linkMd5ListStr":"20ce31feec65a119e40ff052d6654c36","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4.7 KB","compressRate":"30.9%","sourceSize":"15.3 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-5.15.58-PM-1024x262.png","sourceStatusCode":200,"destWidth":1024,"destHeight":262,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn47@2020_1/2020/10/09/03-32-33-772_2361365307ace921.webp","sourceBytes":135003,"destBytes":12516,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1910,"convertSpendMs":17,"createdTime":"2020-10-09 11:32:32","host":"europe-25*","referer":"https://www.percona.com/blog/?p=71318","linkMd5ListStr":"e2713cf10d85a6c05027188a7e171d12","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"12.2 KB","compressRate":"9.3%","sourceSize":"131.8 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.45-1024x158.png","sourceStatusCode":200,"destWidth":1024,"destHeight":158,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn83@2020_6/2020/10/09/03-32-33-819_c0bb30245edaa6df.webp","sourceBytes":99720,"destBytes":7782,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2029,"convertSpendMs":12,"createdTime":"2020-10-09 11:32:32","host":"europe-25*","referer":"https://www.percona.com/blog/?p=71673","linkMd5ListStr":"c765556f8b3146550729d5a39e108f89","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"7.6 KB","compressRate":"7.8%","sourceSize":"97.4 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Deploying-Percona-Kubernetes-Operators-with-OpenEBS-Local-Storage-300x180.png","sourceStatusCode":200,"destWidth":300,"destHeight":180,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn67@2020_1/2020/10/09/03-32-33-984_3fe168175bca41fa.webp","sourceBytes":39374,"destBytes":8294,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1309,"convertSpendMs":7,"createdTime":"2020-10-09 11:32:33","host":"us-004*","referer":"https://www.percona.com/blog/?p=71661","linkMd5ListStr":"a2681b1089c4deb8274d1f2abe4a2a5f","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"8.1 KB","compressRate":"21.1%","sourceSize":"38.5 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-300x157.png","sourceStatusCode":200,"destWidth":300,"destHeight":157,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn7@2020_4/2020/10/09/03-32-38-266_561860dcb62431ae.webp","sourceBytes":21022,"destBytes":7910,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1391,"convertSpendMs":73,"createdTime":"2020-10-09 11:32:37","host":"us-009*","referer":"https://www.percona.com/blog/?p=71620","linkMd5ListStr":"450fe1278c7015ad9d60e062d834470c","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"7.7 KB","compressRate":"37.6%","sourceSize":"20.5 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Magnus-Hagander-150x150.jpg","sourceStatusCode":200,"destWidth":150,"destHeight":150,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn95@2020_2/2020/10/09/03-32-38-692_4c42ecabb0df21fa.webp","sourceBytes":4758,"destBytes":2872,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1574,"convertSpendMs":5,"createdTime":"2020-10-09 11:32:38","host":"europe-59*","referer":"https://www.percona.com/blog/?p=71733","linkMd5ListStr":"12fd98fc372130810ce822f7b3d5534f","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"2.8 KB","compressRate":"60.4%","sourceSize":"4.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/postgresql-dropdb-force-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn68@2020_4/2020/10/09/03-32-38-780_1433a261480c5c88.webp","sourceBytes":14668,"destBytes":4116,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1829,"convertSpendMs":5,"createdTime":"2020-10-09 11:32:38","host":"europe-59*","referer":"https://www.percona.com/blog/?p=71559","linkMd5ListStr":"db3a93ddc9fb66523605abcb70568a6b","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4 KB","compressRate":"28.1%","sourceSize":"14.3 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory-300x168.jpg","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn32@2020_6/2020/10/09/03-32-38-694_4f77a5846097c14b.webp","sourceBytes":12844,"destBytes":8638,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1854,"convertSpendMs":8,"createdTime":"2020-10-09 11:32:38","host":"europe-59*","referer":"https://www.percona.com/blog/?p=70341","linkMd5ListStr":"45265ba0e2a6922e43c81dc4ea7f16a4","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"8.4 KB","compressRate":"67.3%","sourceSize":"12.5 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/inn.png","sourceStatusCode":200,"destWidth":697,"destHeight":295,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn7@2020_4/2020/10/09/03-32-39-921_a034971d9c40119d.webp","sourceBytes":28719,"destBytes":17150,"targetWebpQuality":75,"feedId":11,"totalSpendMs":983,"convertSpendMs":16,"createdTime":"2020-10-09 11:32:39","host":"us-012*","referer":"https://www.percona.com/blog/?p=71788","linkMd5ListStr":"10fd7718418737d7948ad9056b32e856","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"16.7 KB","compressRate":"59.7%","sourceSize":"28 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/Release-Roundup-September-28-2020-300x169.png","sourceStatusCode":200,"destWidth":300,"destHeight":169,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn87@2020_4/2020/10/09/03-32-39-871_4790eabe59d1479e.webp","sourceBytes":86606,"destBytes":10840,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1978,"convertSpendMs":7,"createdTime":"2020-10-09 11:32:39","host":"europe63*","referer":"https://www.percona.com/blog/?p=71245","linkMd5ListStr":"2fb9b6ca30e573fa11c890d9ceb666b9","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"10.6 KB","compressRate":"12.5%","sourceSize":"84.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/MySQL-Server-Has-Gone-Away-200x105.png","sourceStatusCode":200,"destWidth":200,"destHeight":105,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn51@2020_1/2020/10/09/03-32-40-523_2477d083d14e246c.webp","sourceBytes":14072,"destBytes":4786,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1604,"convertSpendMs":5,"createdTime":"2020-10-09 11:32:39","host":"europe63*","referer":"https://www.percona.com/blog/?p=71106","linkMd5ListStr":"92e7770edc3d27a875cd72f5b96812a5","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4.7 KB","compressRate":"34%","sourceSize":"13.7 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/HE-Query-Analytics-1024x613.png","sourceStatusCode":200,"destWidth":1024,"destHeight":613,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn11@2020_6/2020/10/09/03-32-41-226_5ccc56acc1d6462f.webp","sourceBytes":247159,"destBytes":32374,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2573,"convertSpendMs":34,"createdTime":"2020-10-09 11:32:39","host":"europe-25*","referer":"https://www.percona.com/blog/?p=71225","linkMd5ListStr":"de35e9c1666fdd4ef9ff677cb177e6bf","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"31.6 KB","compressRate":"13.1%","sourceSize":"241.4 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/perf1-1024x178.png","sourceStatusCode":200,"destWidth":1024,"destHeight":178,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn16@2020_5/2020/10/09/03-32-41-734_80de608d6b566190.webp","sourceBytes":212003,"destBytes":26748,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2827,"convertSpendMs":15,"createdTime":"2020-10-09 11:32:40","host":"europe63*","referer":"https://www.percona.com/blog/?p=71788","linkMd5ListStr":"10fd7718418737d7948ad9056b32e856","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"26.1 KB","compressRate":"12.6%","sourceSize":"207 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Karen-Ambrose-150x150.jpg","sourceStatusCode":200,"destWidth":150,"destHeight":150,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn28@2020_2/2020/10/09/03-32-42-459_f9948a2591d4cab9.webp","sourceBytes":5211,"destBytes":3490,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1606,"convertSpendMs":4,"createdTime":"2020-10-09 11:32:41","host":"europe21*","referer":"https://www.percona.com/blog/?p=71733","linkMd5ListStr":"12fd98fc372130810ce822f7b3d5534f","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"3.4 KB","compressRate":"67%","sourceSize":"5.1 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Deploying-Percona-Kubernetes-Operators-with-OpenEBS-Local-Storage-200x120.png","sourceStatusCode":200,"destWidth":200,"destHeight":120,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn32@2020_6/2020/10/09/03-32-42-927_4af81a93d0ab36a8.webp","sourceBytes":17403,"destBytes":4380,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1140,"convertSpendMs":5,"createdTime":"2020-10-09 11:32:42","host":"us-004*","referer":"https://www.percona.com/blog/?p=71661","linkMd5ListStr":"a2681b1089c4deb8274d1f2abe4a2a5f","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4.3 KB","compressRate":"25.2%","sourceSize":"17 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-2-1-150x150.jpg","sourceStatusCode":200,"destWidth":150,"destHeight":150,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn64@2020_4/2020/10/09/03-32-42-745_52d2090367cfdb96.webp","sourceBytes":4102,"destBytes":2584,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1970,"convertSpendMs":6,"createdTime":"2020-10-09 11:32:41","host":"europe21*","referer":"https://www.percona.com/blog/?p=71733","linkMd5ListStr":"12fd98fc372130810ce822f7b3d5534f","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"2.5 KB","compressRate":"63%","sourceSize":"4 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.27-1024x314.png","sourceStatusCode":200,"destWidth":1024,"destHeight":314,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn92@2020_2/2020/10/09/03-32-42-970_fb94f862a9ee90a8.webp","sourceBytes":204989,"destBytes":14374,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2127,"convertSpendMs":19,"createdTime":"2020-10-09 11:32:42","host":"europe21*","referer":"https://www.percona.com/blog/?p=71673","linkMd5ListStr":"c765556f8b3146550729d5a39e108f89","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"14 KB","compressRate":"7%","sourceSize":"200.2 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn24@2020_6/2020/10/09/03-32-43-518_2c5fbe968aa58036.webp","sourceBytes":68530,"destBytes":13388,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1310,"convertSpendMs":9,"createdTime":"2020-10-09 11:32:43","host":"us-028*","referer":"https://www.percona.com/blog/?p=71225","linkMd5ListStr":"de35e9c1666fdd4ef9ff677cb177e6bf","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"13.1 KB","compressRate":"19.5%","sourceSize":"66.9 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-300x157.png","sourceStatusCode":200,"destWidth":300,"destHeight":157,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn96@2020_5/2020/10/09/03-32-43-518_eaba24ab429019b9.webp","sourceBytes":30853,"destBytes":9676,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1394,"convertSpendMs":13,"createdTime":"2020-10-09 11:32:43","host":"us-028*","referer":"https://www.percona.com/blog/?p=70811","linkMd5ListStr":"d3fedc1703eb28c323a30acf393250e6","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"9.4 KB","compressRate":"31.4%","sourceSize":"30.1 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/qanff-min.gif","sourceStatusCode":200,"destWidth":726,"destHeight":318,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn99@2020_5/2020/10/09/03-32-42-893_5e0bb74d24b1076b.webp","sourceBytes":2541524,"destBytes":2842952,"targetWebpQuality":75,"feedId":11,"totalSpendMs":9342,"convertSpendMs":7381,"createdTime":"2020-10-09 11:32:35","host":"us-037*","referer":"https://www.percona.com/blog/?p=71318","linkMd5ListStr":"e2713cf10d85a6c05027188a7e171d12","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"2.7 MB","compressRate":"111.9%","sourceSize":"2.4 MB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn83@2020_6/2020/10/09/03-32-44-114_3f189353650da531.webp","sourceBytes":20925,"destBytes":5048,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1283,"convertSpendMs":13,"createdTime":"2020-10-09 11:32:43","host":"us-020*","referer":"https://www.percona.com/blog/?p=71784","linkMd5ListStr":"4505f13126ecb4731f638a2890af8614","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4.9 KB","compressRate":"24.1%","sourceSize":"20.4 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-150x150.jpg","sourceStatusCode":200,"destWidth":150,"destHeight":150,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn48@2020_6/2020/10/09/03-32-44-114_304d4823e872a5ed.webp","sourceBytes":5567,"destBytes":3992,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1146,"convertSpendMs":10,"createdTime":"2020-10-09 11:32:43","host":"us-020*","referer":"https://www.percona.com/blog/?p=71733","linkMd5ListStr":"12fd98fc372130810ce822f7b3d5534f","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"3.9 KB","compressRate":"71.7%","sourceSize":"5.4 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.29.21-1024x488.png","sourceStatusCode":200,"destWidth":1024,"destHeight":488,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn63@2020_3/2020/10/09/03-32-44-748_b42159ca3586fb4a.webp","sourceBytes":237199,"destBytes":21582,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1046,"convertSpendMs":44,"createdTime":"2020-10-09 11:32:44","host":"us-037*","referer":"https://www.percona.com/blog/?p=71807","linkMd5ListStr":"92a22ad930aeea29f866ef7ca9895077","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"21.1 KB","compressRate":"9.1%","sourceSize":"231.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-300x157.png","sourceStatusCode":200,"destWidth":300,"destHeight":157,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn20@2020_3/2020/10/09/03-32-44-936_3324da35bc25562f.webp","sourceBytes":19170,"destBytes":8572,"targetWebpQuality":75,"feedId":11,"totalSpendMs":954,"convertSpendMs":6,"createdTime":"2020-10-09 11:32:44","host":"us-020*","referer":"https://www.percona.com/blog/?p=71384","linkMd5ListStr":"a27b86d00475d186fb5e0d4e119565f5","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"8.4 KB","compressRate":"44.7%","sourceSize":"18.7 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn33@2020_4/2020/10/09/03-32-44-987_9b9115c43916ffbe.webp","sourceBytes":46422,"destBytes":6518,"targetWebpQuality":75,"feedId":11,"totalSpendMs":992,"convertSpendMs":13,"createdTime":"2020-10-09 11:32:44","host":"us-002*","referer":"https://www.percona.com/blog/?p=64742","linkMd5ListStr":"b3da2eb4e2e2094327f2448308e4bbb1","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"6.4 KB","compressRate":"14%","sourceSize":"45.3 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/avatar-1-150x150.jpg","sourceStatusCode":200,"destWidth":150,"destHeight":150,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn72@2020_4/2020/10/09/03-32-45-332_134638ea413a49a3.webp","sourceBytes":5616,"destBytes":3666,"targetWebpQuality":75,"feedId":11,"totalSpendMs":968,"convertSpendMs":5,"createdTime":"2020-10-09 11:32:45","host":"us-012*","referer":"https://www.percona.com/blog/?p=71733","linkMd5ListStr":"12fd98fc372130810ce822f7b3d5534f","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"3.6 KB","compressRate":"65.3%","sourceSize":"5.5 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/row.png","sourceStatusCode":200,"destWidth":646,"destHeight":291,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn55@2020_5/2020/10/09/03-32-45-291_e5b78152398bd38e.webp","sourceBytes":19275,"destBytes":14566,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1627,"convertSpendMs":9,"createdTime":"2020-10-09 11:32:44","host":"europe-58*","referer":"https://www.percona.com/blog/?p=71788","linkMd5ListStr":"10fd7718418737d7948ad9056b32e856","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"14.2 KB","compressRate":"75.6%","sourceSize":"18.8 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/sec.png","sourceStatusCode":200,"destWidth":512,"destHeight":263,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn57@2020_5/2020/10/09/03-32-45-354_0c9015af36398f7b.webp","sourceBytes":50699,"destBytes":11514,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1736,"convertSpendMs":9,"createdTime":"2020-10-09 11:32:44","host":"europe-59*","referer":"https://www.percona.com/blog/?p=71318","linkMd5ListStr":"e2713cf10d85a6c05027188a7e171d12","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"11.2 KB","compressRate":"22.7%","sourceSize":"49.5 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Query-Slowdowns-Using-Percona-Monitoring-and-Management-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn60@2020_2/2020/10/09/03-32-45-641_9021b47bf99a29bb.webp","sourceBytes":19229,"destBytes":4454,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1598,"convertSpendMs":9,"createdTime":"2020-10-09 11:32:44","host":"us-028*","referer":"https://www.percona.com/blog/?p=71807","linkMd5ListStr":"92a22ad930aeea29f866ef7ca9895077","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4.3 KB","compressRate":"23.2%","sourceSize":"18.8 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/for-blog-6-and-2-lines-1024x672.jpg","sourceStatusCode":200,"destWidth":1024,"destHeight":672,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn88@2020_4/2020/10/09/03-32-46-289_e581ba7c3ffc3340.webp","sourceBytes":68201,"destBytes":41978,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1036,"convertSpendMs":25,"createdTime":"2020-10-09 11:32:46","host":"us-028*","referer":"https://www.percona.com/blog/?p=71779","linkMd5ListStr":"930ee78de81f572e76bd3b615318cd6e","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"41 KB","compressRate":"61.6%","sourceSize":"66.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn75@2020_4/2020/10/09/03-32-46-379_bfa47a8008b92d44.webp","sourceBytes":19036,"destBytes":5566,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1517,"convertSpendMs":4,"createdTime":"2020-10-09 11:32:45","host":"europe-25*","referer":"https://www.percona.com/blog/?p=71427","linkMd5ListStr":"c16e1109b67211aad591ae1fbf8b6863","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"5.4 KB","compressRate":"29.2%","sourceSize":"18.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn79@2020_6/2020/10/09/03-32-46-524_89bfad42accc0c1c.webp","sourceBytes":21241,"destBytes":7684,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1517,"convertSpendMs":6,"createdTime":"2020-10-09 11:32:45","host":"europe63*","referer":"https://www.percona.com/blog/?p=71688","linkMd5ListStr":"b0005d3adc7cce2b1b4e268fa1e0126a","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"7.5 KB","compressRate":"36.2%","sourceSize":"20.7 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/qan1-1024x382.png","sourceStatusCode":200,"destWidth":1024,"destHeight":382,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn95@2020_3/2020/10/09/03-32-46-558_b7d2997eb439dd2c.webp","sourceBytes":223963,"destBytes":38688,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1065,"convertSpendMs":28,"createdTime":"2020-10-09 11:32:46","host":"us-004*","referer":"https://www.percona.com/blog/?p=71788","linkMd5ListStr":"10fd7718418737d7948ad9056b32e856","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"37.8 KB","compressRate":"17.3%","sourceSize":"218.7 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn6@2020_2/2020/10/09/03-32-47-009_7f2996b3dba7dbdf.webp","sourceBytes":30561,"destBytes":4976,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1049,"convertSpendMs":6,"createdTime":"2020-10-09 11:32:46","host":"us-003*","referer":"https://www.percona.com/blog/?p=71453","linkMd5ListStr":"59cf142d1bc9013419d273b2f0b5d977","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4.9 KB","compressRate":"16.3%","sourceSize":"29.8 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Kimberly-Wilkins-150x150.jpg","sourceStatusCode":200,"destWidth":150,"destHeight":150,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn99@2020_1/2020/10/09/03-32-47-171_b7b047c2c489b426.webp","sourceBytes":4713,"destBytes":2986,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1622,"convertSpendMs":6,"createdTime":"2020-10-09 11:32:46","host":"europe67*","referer":"https://www.percona.com/blog/?p=71733","linkMd5ListStr":"12fd98fc372130810ce822f7b3d5534f","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"2.9 KB","compressRate":"63.4%","sourceSize":"4.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/slow.png","sourceStatusCode":200,"destWidth":657,"destHeight":316,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn11@2020_3/2020/10/09/03-32-47-565_53fcd1ee749232b8.webp","sourceBytes":26180,"destBytes":15692,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1004,"convertSpendMs":10,"createdTime":"2020-10-09 11:32:47","host":"us-020*","referer":"https://www.percona.com/blog/?p=71788","linkMd5ListStr":"10fd7718418737d7948ad9056b32e856","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"15.3 KB","compressRate":"59.9%","sourceSize":"25.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/security-threat-tool-percona-monitoring-and-management-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn44@2020_1/2020/10/09/03-32-47-778_d11cb84aeacd177d.webp","sourceBytes":34127,"destBytes":6782,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1686,"convertSpendMs":5,"createdTime":"2020-10-09 11:32:47","host":"europe67*","referer":"https://www.percona.com/blog/?p=71225","linkMd5ListStr":"de35e9c1666fdd4ef9ff677cb177e6bf","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"6.6 KB","compressRate":"19.9%","sourceSize":"33.3 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/Converting-DBaaS-to-a-Fully-Managed-Solution-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn35@2020_5/2020/10/09/03-32-47-801_2c3a90c9895ad51f.webp","sourceBytes":57999,"destBytes":9782,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1812,"convertSpendMs":15,"createdTime":"2020-10-09 11:32:47","host":"europe67*","referer":"https://www.percona.com/blog/?p=71453","linkMd5ListStr":"59cf142d1bc9013419d273b2f0b5d977","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"9.6 KB","compressRate":"16.9%","sourceSize":"56.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/image3.gif","sourceStatusCode":200,"destWidth":1910,"destHeight":930,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn55@2020_1/2020/10/09/03-32-48-156_b707c388cda91f5b.webp","sourceBytes":282855,"destBytes":196176,"targetWebpQuality":75,"feedId":11,"totalSpendMs":4455,"convertSpendMs":3153,"createdTime":"2020-10-09 11:32:44","host":"us-020*","referer":"https://www.percona.com/blog/?p=71532","linkMd5ListStr":"60df5abe4b34547075223bc3e76d36af","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"191.6 KB","compressRate":"69.4%","sourceSize":"276.2 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/PerconaLiveOnline2020-Keynotes-300x180.png","sourceStatusCode":200,"destWidth":300,"destHeight":180,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn28@2020_6/2020/10/09/03-32-48-598_5f6faf9f219e7ffe.webp","sourceBytes":97098,"destBytes":13988,"targetWebpQuality":75,"feedId":11,"totalSpendMs":938,"convertSpendMs":9,"createdTime":"2020-10-09 11:32:48","host":"us-037*","referer":"https://www.percona.com/blog/?p=71733","linkMd5ListStr":"12fd98fc372130810ce822f7b3d5534f","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"13.7 KB","compressRate":"14.4%","sourceSize":"94.8 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot_del-1024x332.png","sourceStatusCode":200,"destWidth":1024,"destHeight":332,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn7@2020_6/2020/10/09/03-32-48-204_15a7202645f119af.webp","sourceBytes":227184,"destBytes":16634,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2402,"convertSpendMs":44,"createdTime":"2020-10-09 11:32:47","host":"europe67*","referer":"https://www.percona.com/blog/?p=71318","linkMd5ListStr":"e2713cf10d85a6c05027188a7e171d12","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"16.2 KB","compressRate":"7.3%","sourceSize":"221.9 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-14-at-7.51.10-PM.png","sourceStatusCode":200,"destWidth":939,"destHeight":361,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn27@2020_5/2020/10/09/03-32-48-731_287e714160997cd0.webp","sourceBytes":50943,"destBytes":17414,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1004,"convertSpendMs":25,"createdTime":"2020-10-09 11:32:48","host":"us-016*","referer":"https://www.percona.com/blog/?p=71318","linkMd5ListStr":"e2713cf10d85a6c05027188a7e171d12","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"17 KB","compressRate":"34.2%","sourceSize":"49.7 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/Cool-Features-in-Percona-Monitoring-and-Management-300x169.png","sourceStatusCode":200,"destWidth":300,"destHeight":169,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn92@2020_4/2020/10/09/03-32-48-516_b47841620191445b.webp","sourceBytes":42176,"destBytes":9800,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1184,"convertSpendMs":13,"createdTime":"2020-10-09 11:32:48","host":"us-016*","referer":"https://www.percona.com/blog/?p=71318","linkMd5ListStr":"e2713cf10d85a6c05027188a7e171d12","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"9.6 KB","compressRate":"23.2%","sourceSize":"41.2 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/Tuning-MySQL-After-Upgrading-Memory-200x112.jpg","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn72@2020_1/2020/10/09/03-32-48-651_229209bf79312d57.webp","sourceBytes":7861,"destBytes":5112,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1586,"convertSpendMs":4,"createdTime":"2020-10-09 11:32:48","host":"europe67*","referer":"https://www.percona.com/blog/?p=70341","linkMd5ListStr":"45265ba0e2a6922e43c81dc4ea7f16a4","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"5 KB","compressRate":"65%","sourceSize":"7.7 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.49.54-1024x159.png","sourceStatusCode":200,"destWidth":1024,"destHeight":159,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn36@2020_4/2020/10/09/03-32-49-043_5da30452fc1b5359.webp","sourceBytes":109685,"destBytes":9330,"targetWebpQuality":75,"feedId":11,"totalSpendMs":980,"convertSpendMs":17,"createdTime":"2020-10-09 11:32:48","host":"us-012*","referer":"https://www.percona.com/blog/?p=71673","linkMd5ListStr":"c765556f8b3146550729d5a39e108f89","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"9.1 KB","compressRate":"8.5%","sourceSize":"107.1 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn23@2020_3/2020/10/09/03-32-49-041_432c8ec674c03222.webp","sourceBytes":28320,"destBytes":4558,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1509,"convertSpendMs":5,"createdTime":"2020-10-09 11:32:48","host":"europe-59*","referer":"https://www.percona.com/blog/?p=71923","linkMd5ListStr":"d44952a88ea58cd753431adb75587088","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4.5 KB","compressRate":"16.1%","sourceSize":"27.7 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/cli.png","sourceStatusCode":200,"destWidth":641,"destHeight":316,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn99@2020_2/2020/10/09/03-32-48-972_025aed50e6a5f5b1.webp","sourceBytes":35491,"destBytes":20396,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1253,"convertSpendMs":12,"createdTime":"2020-10-09 11:32:48","host":"us-016*","referer":"https://www.percona.com/blog/?p=71788","linkMd5ListStr":"10fd7718418737d7948ad9056b32e856","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"19.9 KB","compressRate":"57.5%","sourceSize":"34.7 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/08/MongoDB-Exporter-Percona-Monitoring-and-Management-200x105.png","sourceStatusCode":200,"destWidth":200,"destHeight":105,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn19@2020_4/2020/10/09/03-32-48-648_7494eaa0f10042f9.webp","sourceBytes":19870,"destBytes":4764,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2194,"convertSpendMs":4,"createdTime":"2020-10-09 11:32:48","host":"europe21*","referer":"https://www.percona.com/blog/?p=70811","linkMd5ListStr":"d3fedc1703eb28c323a30acf393250e6","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4.7 KB","compressRate":"24%","sourceSize":"19.4 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn56@2020_2/2020/10/09/03-32-49-829_7b97e8b73e77625f.webp","sourceBytes":29765,"destBytes":4888,"targetWebpQuality":75,"feedId":11,"totalSpendMs":879,"convertSpendMs":5,"createdTime":"2020-10-09 11:32:49","host":"us-016*","referer":"https://www.percona.com/blog/?p=71641","linkMd5ListStr":"b8ed523b7adf2647b17fa3deec108410","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4.8 KB","compressRate":"16.4%","sourceSize":"29.1 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.01-1024x320.png","sourceStatusCode":200,"destWidth":1024,"destHeight":320,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn52@2020_5/2020/10/09/03-32-49-851_1182a2787d74e178.webp","sourceBytes":195001,"destBytes":19834,"targetWebpQuality":75,"feedId":11,"totalSpendMs":965,"convertSpendMs":23,"createdTime":"2020-10-09 11:32:49","host":"us-028*","referer":"https://www.percona.com/blog/?p=71673","linkMd5ListStr":"c765556f8b3146550729d5a39e108f89","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"19.4 KB","compressRate":"10.2%","sourceSize":"190.4 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.51.11-1024x314.png","sourceStatusCode":200,"destWidth":1024,"destHeight":314,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn60@2020_1/2020/10/09/03-32-49-874_819bcd56ff54a529.webp","sourceBytes":123207,"destBytes":13890,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1000,"convertSpendMs":20,"createdTime":"2020-10-09 11:32:49","host":"us-004*","referer":"https://www.percona.com/blog/?p=71673","linkMd5ListStr":"c765556f8b3146550729d5a39e108f89","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"13.6 KB","compressRate":"11.3%","sourceSize":"120.3 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/Postgresql_fdw-Authentication-Changes-in-PostgreSQL-13-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn39@2020_6/2020/10/09/03-32-49-954_1cab28bc62f3852a.webp","sourceBytes":14226,"destBytes":4666,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1695,"convertSpendMs":5,"createdTime":"2020-10-09 11:32:49","host":"europe-25*","referer":"https://www.percona.com/blog/?p=71546","linkMd5ListStr":"0b8bf2cc3e7343afaccc87c85c7452ef","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4.6 KB","compressRate":"32.8%","sourceSize":"13.9 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/job-e1601647562137-168x300.png","sourceStatusCode":200,"destWidth":168,"destHeight":300,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn75@2020_5/2020/10/09/03-32-50-368_d5a38fafb59ac314.webp","sourceBytes":31256,"destBytes":4658,"targetWebpQuality":75,"feedId":11,"totalSpendMs":966,"convertSpendMs":6,"createdTime":"2020-10-09 11:32:50","host":"us-020*","referer":"https://www.percona.com/blog/?p=71698","linkMd5ListStr":"20ce31feec65a119e40ff052d6654c36","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4.5 KB","compressRate":"14.9%","sourceSize":"30.5 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/cpu.png","sourceStatusCode":200,"destWidth":919,"destHeight":336,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn44@2020_3/2020/10/09/03-32-50-299_a4d4812f7a153ec5.webp","sourceBytes":51339,"destBytes":24076,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1819,"convertSpendMs":13,"createdTime":"2020-10-09 11:32:49","host":"europe63*","referer":"https://www.percona.com/blog/?p=71788","linkMd5ListStr":"10fd7718418737d7948ad9056b32e856","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"23.5 KB","compressRate":"46.9%","sourceSize":"50.1 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Server-MongoDB-Italian-Webinar-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn63@2020_6/2020/10/09/03-32-50-674_ac8b485306f48c32.webp","sourceBytes":58406,"destBytes":9564,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1665,"convertSpendMs":8,"createdTime":"2020-10-09 11:32:49","host":"europe67*","referer":"https://www.percona.com/blog/?p=71641","linkMd5ListStr":"b8ed523b7adf2647b17fa3deec108410","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"9.3 KB","compressRate":"16.4%","sourceSize":"57 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/cpu2.png","sourceStatusCode":200,"destWidth":650,"destHeight":297,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn84@2020_5/2020/10/09/03-32-51-372_57bd57e1a166a5cd.webp","sourceBytes":33523,"destBytes":21366,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1722,"convertSpendMs":10,"createdTime":"2020-10-09 11:32:50","host":"europe21*","referer":"https://www.percona.com/blog/?p=71788","linkMd5ListStr":"10fd7718418737d7948ad9056b32e856","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"20.9 KB","compressRate":"63.7%","sourceSize":"32.7 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Toolkit-and-pt-online-schema-change-200x105.png","sourceStatusCode":200,"destWidth":200,"destHeight":105,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn14@2020_4/2020/10/09/03-32-52-958_2ba3a61618e7cc3f.webp","sourceBytes":13894,"destBytes":4188,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1024,"convertSpendMs":16,"createdTime":"2020-10-09 11:32:52","host":"us-011*","referer":"https://www.percona.com/blog/?p=71620","linkMd5ListStr":"450fe1278c7015ad9d60e062d834470c","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4.1 KB","compressRate":"30.1%","sourceSize":"13.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/hll.png","sourceStatusCode":200,"destWidth":659,"destHeight":300,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn10@2020_1/2020/10/09/03-32-53-228_d6f29c18bf8f6a42.webp","sourceBytes":14284,"destBytes":9312,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1243,"convertSpendMs":73,"createdTime":"2020-10-09 11:32:52","host":"us-010*","referer":"https://www.percona.com/blog/?p=71788","linkMd5ListStr":"10fd7718418737d7948ad9056b32e856","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"9.1 KB","compressRate":"65.2%","sourceSize":"13.9 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.39.57-1024x583.png","sourceStatusCode":200,"destWidth":1024,"destHeight":583,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn56@2020_5/2020/10/09/03-32-55-844_ccbc0337439f320c.webp","sourceBytes":389424,"destBytes":37792,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1783,"convertSpendMs":301,"createdTime":"2020-10-09 11:32:54","host":"us-51*","referer":"https://www.percona.com/blog/?p=71807","linkMd5ListStr":"92a22ad930aeea29f866ef7ca9895077","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"36.9 KB","compressRate":"9.7%","sourceSize":"380.3 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/MongoDB-Security-200x105.png","sourceStatusCode":200,"destWidth":200,"destHeight":105,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn91@2020_5/2020/10/09/03-32-55-527_9ed334497e9c9fe2.webp","sourceBytes":12416,"destBytes":3722,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1633,"convertSpendMs":119,"createdTime":"2020-10-09 11:32:54","host":"us-51*","referer":"https://www.percona.com/blog/?p=71384","linkMd5ListStr":"a27b86d00475d186fb5e0d4e119565f5","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"3.6 KB","compressRate":"30%","sourceSize":"12.1 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-09-30-at-21.23.08-1024x572.png","sourceStatusCode":200,"destWidth":1024,"destHeight":572,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn19@2020_5/2020/10/09/03-32-55-872_bbffab9d13cb5229.webp","sourceBytes":169193,"destBytes":26966,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1915,"convertSpendMs":369,"createdTime":"2020-10-09 11:32:54","host":"us-51*","referer":"https://www.percona.com/blog/?p=71807","linkMd5ListStr":"92a22ad930aeea29f866ef7ca9895077","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"26.3 KB","compressRate":"15.9%","sourceSize":"165.2 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn84@2020_3/2020/10/09/03-32-55-533_f0a7e79160a853ec.webp","sourceBytes":29536,"destBytes":10952,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1738,"convertSpendMs":110,"createdTime":"2020-10-09 11:32:54","host":"us-51*","referer":"https://www.percona.com/blog/?p=71009","linkMd5ListStr":"14808a214b54168cdf9405bdae7aa632","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"10.7 KB","compressRate":"37.1%","sourceSize":"28.8 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn47@2020_6/2020/10/09/03-32-55-532_3c7b14984def0ef5.webp","sourceBytes":43547,"destBytes":9576,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2027,"convertSpendMs":88,"createdTime":"2020-10-09 11:32:54","host":"us-51*","referer":"https://www.percona.com/blog/?p=71788","linkMd5ListStr":"10fd7718418737d7948ad9056b32e856","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"9.4 KB","compressRate":"22%","sourceSize":"42.5 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Disaster-Recovery-and-High-Availability-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn3@2020_5/2020/10/09/03-32-59-903_77da4c440e2ee42c.webp","sourceBytes":52822,"destBytes":8610,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1493,"convertSpendMs":33,"createdTime":"2020-10-09 11:32:59","host":"us-55*","referer":"https://www.percona.com/blog/?p=71923","linkMd5ListStr":"d44952a88ea58cd753431adb75587088","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"8.4 KB","compressRate":"16.3%","sourceSize":"51.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Perform-Schema-Upgrades-with-Percona-XtraDB-Cluster-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn67@2020_5/2020/10/09/03-32-59-941_2f0c188fe26f9f65.webp","sourceBytes":35280,"destBytes":9200,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1717,"convertSpendMs":44,"createdTime":"2020-10-09 11:32:59","host":"us-55*","referer":"https://www.percona.com/blog/?p=71784","linkMd5ListStr":"4505f13126ecb4731f638a2890af8614","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"9 KB","compressRate":"26.1%","sourceSize":"34.5 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/Screenshot-2020-09-12-at-4.58.35-PM-1024x161.png","sourceStatusCode":200,"destWidth":1024,"destHeight":161,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn48@2020_2/2020/10/09/03-32-59-942_17f8a4c012522e39.webp","sourceBytes":72749,"destBytes":10642,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2007,"convertSpendMs":85,"createdTime":"2020-10-09 11:32:59","host":"us-55*","referer":"https://www.percona.com/blog/?p=71318","linkMd5ListStr":"e2713cf10d85a6c05027188a7e171d12","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"10.4 KB","compressRate":"14.6%","sourceSize":"71 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/security-definer-postgresql-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn40@2020_5/2020/10/09/03-32-59-938_2b8e0ab91171a03b.webp","sourceBytes":97310,"destBytes":13954,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1473,"convertSpendMs":48,"createdTime":"2020-10-09 11:32:59","host":"us-55*","referer":"https://www.percona.com/blog/?p=64742","linkMd5ListStr":"b3da2eb4e2e2094327f2448308e4bbb1","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"13.6 KB","compressRate":"14.3%","sourceSize":"95 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-05-at-10.46.16-1024x334.png","sourceStatusCode":200,"destWidth":1024,"destHeight":334,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn12@2020_4/2020/10/09/03-33-00-184_f0dc665386e62cbb.webp","sourceBytes":248511,"destBytes":38468,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2140,"convertSpendMs":88,"createdTime":"2020-10-09 11:32:59","host":"us-55*","referer":"https://www.percona.com/blog/?p=71807","linkMd5ListStr":"92a22ad930aeea29f866ef7ca9895077","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"37.6 KB","compressRate":"15.5%","sourceSize":"242.7 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/LAST.gif","sourceStatusCode":200,"destWidth":1910,"destHeight":930,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn63@2020_2/2020/10/09/03-32-59-844_01e4634237cd5fac.webp","sourceBytes":2539540,"destBytes":2223788,"targetWebpQuality":75,"feedId":11,"totalSpendMs":11419,"convertSpendMs":9714,"createdTime":"2020-10-09 11:32:49","host":"us-016*","referer":"https://www.percona.com/blog/?p=71532","linkMd5ListStr":"60df5abe4b34547075223bc3e76d36af","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"2.1 MB","compressRate":"87.6%","sourceSize":"2.4 MB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-01-at-14.50.16-1024x314.png","sourceStatusCode":200,"destWidth":1024,"destHeight":314,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn76@2020_1/2020/10/09/03-33-00-459_d694d986a5f19f47.webp","sourceBytes":212062,"destBytes":19782,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1202,"convertSpendMs":101,"createdTime":"2020-10-09 11:33:00","host":"us-55*","referer":"https://www.percona.com/blog/?p=71673","linkMd5ListStr":"c765556f8b3146550729d5a39e108f89","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"19.3 KB","compressRate":"9.3%","sourceSize":"207.1 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.38.49-1024x287.png","sourceStatusCode":200,"destWidth":1024,"destHeight":287,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn44@2020_1/2020/10/09/03-33-02-808_e9e3e1995e70c70a.webp","sourceBytes":105214,"destBytes":17564,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2136,"convertSpendMs":115,"createdTime":"2020-10-09 11:33:01","host":"us-033*","referer":"https://www.percona.com/blog/?p=71807","linkMd5ListStr":"92a22ad930aeea29f866ef7ca9895077","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"17.2 KB","compressRate":"16.7%","sourceSize":"102.7 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Importance-of-Kubernetes-Operators-for-Databases-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn71@2020_2/2020/10/09/03-33-02-871_4c7ad00387f4d322.webp","sourceBytes":16556,"destBytes":4690,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1812,"convertSpendMs":280,"createdTime":"2020-10-09 11:33:02","host":"us-033*","referer":"https://www.percona.com/blog/?p=71009","linkMd5ListStr":"14808a214b54168cdf9405bdae7aa632","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4.6 KB","compressRate":"28.3%","sourceSize":"16.2 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Monitoring-and-Management-Upgrade-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn15@2020_1/2020/10/09/03-33-03-385_14efe46568db2730.webp","sourceBytes":27908,"destBytes":8648,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1060,"convertSpendMs":61,"createdTime":"2020-10-09 11:33:03","host":"us-033*","referer":"https://www.percona.com/blog/?p=71698","linkMd5ListStr":"20ce31feec65a119e40ff052d6654c36","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"8.4 KB","compressRate":"31%","sourceSize":"27.3 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Rate-Limit-Throttle-for-MySQL-with-ProxySQL-200x120.png","sourceStatusCode":200,"destWidth":200,"destHeight":120,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn51@2020_2/2020/10/09/03-33-03-443_37f871ef10a6ba17.webp","sourceBytes":17047,"destBytes":3718,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1292,"convertSpendMs":28,"createdTime":"2020-10-09 11:33:03","host":"us-033*","referer":"https://www.percona.com/blog/?p=71673","linkMd5ListStr":"c765556f8b3146550729d5a39e108f89","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"3.6 KB","compressRate":"21.8%","sourceSize":"16.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/MySQL-101-Troubleshoot-with-percona-monitoring-and-management-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn7@2020_3/2020/10/09/03-33-03-893_668271a9cbd3ad71.webp","sourceBytes":24868,"destBytes":5170,"targetWebpQuality":75,"feedId":11,"totalSpendMs":1233,"convertSpendMs":173,"createdTime":"2020-10-09 11:33:03","host":"us-033*","referer":"https://www.percona.com/blog/?p=71788","linkMd5ListStr":"10fd7718418737d7948ad9056b32e856","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"5 KB","compressRate":"20.8%","sourceSize":"24.3 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/FreÌdeÌric-Descamp-150x150.jpg","sourceStatusCode":200,"destWidth":150,"destHeight":150,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn23@2020_2/2020/10/09/03-33-02-867_307b3f9f09950a86.webp","sourceBytes":5299,"destBytes":3568,"targetWebpQuality":75,"feedId":11,"totalSpendMs":3408,"convertSpendMs":319,"createdTime":"2020-10-09 11:33:00","host":"us-008*","referer":"https://www.percona.com/blog/?p=71733","linkMd5ListStr":"12fd98fc372130810ce822f7b3d5534f","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"3.5 KB","compressRate":"67.3%","sourceSize":"5.2 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/PostgreSQL-Configuration-Changes-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn16@2020_4/2020/10/09/03-33-02-461_91d9677f1cada267.webp","sourceBytes":32348,"destBytes":10322,"targetWebpQuality":75,"feedId":11,"totalSpendMs":2366,"convertSpendMs":92,"createdTime":"2020-10-09 11:33:01","host":"us-008*","referer":"https://www.percona.com/blog/?p=71427","linkMd5ListStr":"c16e1109b67211aad591ae1fbf8b6863","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"10.1 KB","compressRate":"31.9%","sourceSize":"31.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/New-Features-in-MariaDB-10.5-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn80@2020_4/2020/10/09/03-33-02-461_6ac3ea4a622482a5.webp","sourceBytes":12793,"destBytes":4076,"targetWebpQuality":75,"feedId":11,"totalSpendMs":3536,"convertSpendMs":94,"createdTime":"2020-10-09 11:33:00","host":"us-008*","referer":"https://www.percona.com/blog/?p=71688","linkMd5ListStr":"b0005d3adc7cce2b1b4e268fa1e0126a","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4 KB","compressRate":"31.9%","sourceSize":"12.5 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/PerconaLiveOnline2020-Keynotes-200x120.png","sourceStatusCode":200,"destWidth":200,"destHeight":120,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn87@2020_4/2020/10/09/03-33-02-366_dd54c09d09087e1d.webp","sourceBytes":46577,"destBytes":7366,"targetWebpQuality":75,"feedId":11,"totalSpendMs":3033,"convertSpendMs":59,"createdTime":"2020-10-09 11:33:00","host":"us-008*","referer":"https://www.percona.com/blog/?p=71733","linkMd5ListStr":"12fd98fc372130810ce822f7b3d5534f","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"7.2 KB","compressRate":"15.8%","sourceSize":"45.5 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn60@2020_4/2020/10/09/03-33-02-451_54b6e7c6e7642e4b.webp","sourceBytes":30311,"destBytes":5048,"targetWebpQuality":75,"feedId":11,"totalSpendMs":3082,"convertSpendMs":32,"createdTime":"2020-10-09 11:33:00","host":"us-008*","referer":"https://www.percona.com/blog/?p=71285","linkMd5ListStr":"907844008d99e336ff485647c4e62862","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"4.9 KB","compressRate":"16.7%","sourceSize":"29.6 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-06-at-8.37.31-1024x275.png","sourceStatusCode":200,"destWidth":1024,"destHeight":275,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn51@2020_3/2020/10/09/03-33-03-687_7b3515170155b4a7.webp","sourceBytes":237045,"destBytes":32726,"targetWebpQuality":75,"feedId":11,"totalSpendMs":4659,"convertSpendMs":217,"createdTime":"2020-10-09 11:33:00","host":"us-008*","referer":"https://www.percona.com/blog/?p=71807","linkMd5ListStr":"92a22ad930aeea29f866ef7ca9895077","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"32 KB","compressRate":"13.8%","sourceSize":"231.5 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Percona-Swag-200x112.png","sourceStatusCode":200,"destWidth":200,"destHeight":112,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn3@2020_4/2020/10/09/03-33-02-846_574f61c64cb005ad.webp","sourceBytes":23950,"destBytes":5732,"targetWebpQuality":75,"feedId":11,"totalSpendMs":3217,"convertSpendMs":195,"createdTime":"2020-10-09 11:33:00","host":"us-008*","referer":"https://www.percona.com/blog/?p=71779","linkMd5ListStr":"930ee78de81f572e76bd3b615318cd6e","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"5.6 KB","compressRate":"23.9%","sourceSize":"23.4 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/filter1.gif","sourceStatusCode":200,"destWidth":298,"destHeight":614,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn80@2020_4/2020/10/09/03-33-09-925_04ca44867b7a8bfb.webp","sourceBytes":4699342,"destBytes":1245958,"targetWebpQuality":75,"feedId":11,"totalSpendMs":8547,"convertSpendMs":4882,"createdTime":"2020-10-09 11:33:02","host":"us-033*","referer":"https://www.percona.com/blog/?p=71318","linkMd5ListStr":"e2713cf10d85a6c05027188a7e171d12","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"1.2 MB","compressRate":"26.5%","sourceSize":"4.5 MB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/3.gif","sourceStatusCode":200,"destWidth":1910,"destHeight":930,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn12@2020_5/2020/10/09/03-33-12-461_e24eb9aeefb23b00.webp","sourceBytes":257285,"destBytes":203694,"targetWebpQuality":75,"feedId":11,"totalSpendMs":29090,"convertSpendMs":26136,"createdTime":"2020-10-09 11:32:44","host":"us-013*","referer":"https://www.percona.com/blog/?p=71532","linkMd5ListStr":"60df5abe4b34547075223bc3e76d36af","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"198.9 KB","compressRate":"79.2%","sourceSize":"251.3 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Rate-Limit-Throttle-for-MySQL-with-ProxySQL-300x180.png","sourceStatusCode":200,"destWidth":300,"destHeight":180,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn39@2020_1/2020/10/09/03-33-18-816_cd429822640a2545.webp","sourceBytes":35759,"destBytes":7380,"targetWebpQuality":75,"feedId":11,"totalSpendMs":5101,"convertSpendMs":114,"createdTime":"2020-10-09 11:33:15","host":"us-024*","referer":"https://www.percona.com/blog/?p=71673","linkMd5ListStr":"c765556f8b3146550729d5a39e108f89","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"7.2 KB","compressRate":"20.6%","sourceSize":"34.9 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/disk.png","sourceStatusCode":200,"destWidth":658,"destHeight":307,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn4@2020_2/2020/10/09/03-33-19-019_927ce85b04262495.webp","sourceBytes":19211,"destBytes":11664,"targetWebpQuality":75,"feedId":11,"totalSpendMs":5925,"convertSpendMs":401,"createdTime":"2020-10-09 11:33:15","host":"us-024*","referer":"https://www.percona.com/blog/?p=71788","linkMd5ListStr":"10fd7718418737d7948ad9056b32e856","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"11.4 KB","compressRate":"60.7%","sourceSize":"18.8 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/BPFTrace-Dtrace-Replacement-on-Linux-300x168.png","sourceStatusCode":200,"destWidth":300,"destHeight":168,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn75@2020_4/2020/10/09/03-33-20-022_0552ae6fe5e72770.webp","sourceBytes":59843,"destBytes":9990,"targetWebpQuality":75,"feedId":11,"totalSpendMs":6599,"convertSpendMs":828,"createdTime":"2020-10-09 11:33:15","host":"us-024*","referer":"https://www.percona.com/blog/?p=71285","linkMd5ListStr":"907844008d99e336ff485647c4e62862","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"9.8 KB","compressRate":"16.7%","sourceSize":"58.4 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/10/Screen-Shot-2020-10-02-at-1.37.21-PM-153x300.png","sourceStatusCode":200,"destWidth":153,"destHeight":300,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn31@2020_1/2020/10/09/03-33-20-317_d632b6bfc4d771a3.webp","sourceBytes":94987,"destBytes":10398,"targetWebpQuality":75,"feedId":11,"totalSpendMs":6693,"convertSpendMs":1138,"createdTime":"2020-10-09 11:33:15","host":"us-024*","referer":"https://www.percona.com/blog/?p=71733","linkMd5ListStr":"12fd98fc372130810ce822f7b3d5534f","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"10.2 KB","compressRate":"10.9%","sourceSize":"92.8 KB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/load1.gif","sourceStatusCode":200,"destWidth":436,"destHeight":270,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn68@2020_6/2020/10/09/03-33-27-171_94acd7693c3caf76.webp","sourceBytes":1905133,"destBytes":469334,"targetWebpQuality":75,"feedId":11,"totalSpendMs":12893,"convertSpendMs":5416,"createdTime":"2020-10-09 11:33:15","host":"us-024*","referer":"https://www.percona.com/blog/?p=71318","linkMd5ListStr":"e2713cf10d85a6c05027188a7e171d12","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"458.3 KB","compressRate":"24.6%","sourceSize":"1.8 MB"},{"code":1,"isDone":false,"source":"https://www.percona.com/blog/wp-content/uploads/2020/09/2.gif","sourceStatusCode":200,"destWidth":1910,"destHeight":930,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn19@2020_1/2020/10/09/03-34-39-176_b33486162155e120.webp","sourceBytes":272529,"destBytes":217910,"targetWebpQuality":75,"feedId":11,"totalSpendMs":8033,"convertSpendMs":6793,"createdTime":"2020-10-09 11:34:32","host":"us-037*","referer":"https://www.percona.com/blog/?p=71532","linkMd5ListStr":"60df5abe4b34547075223bc3e76d36af","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1ãæ²¡æRefererå­æ®µ","extra23historyStatusCode":[200],"destSize":"212.8 KB","compressRate":"80%","sourceSize":"266.1 KB"}],"successGithubMap":{"myreaderx14":3,"myreaderx8":2,"myreaderx7":3,"myreaderx15":3,"myreaderx16":4,"myreaderx6":3,"myreaderx4":4,"myreaderx10":4,"myreaderx32":3,"myreaderx11":4,"myreaderx33":3,"myreaderx3":4,"myreaderx12":4,"myreaderx2":2,"myreaderx13":3,"myreaderx1":3,"myreaderx30":3,"myreaderx31":4,"myreaderx18":4,"myreaderx19":4,"myreaderx":3,"myreaderx25":3,"myreaderx27":3,"myreaderx21":4,"myreaderx22":3,"myreaderx23":4,"myreaderx24":2,"myreaderx5oss":4,"myreaderx29":3},"failGithubMap":{}}