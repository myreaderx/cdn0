{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-08-25 05:49:36","updatedTime":"2020-08-25 05:49:36","title":"Github based Comment System, and the Death of Independent Blog?","link":"http://freemind.pluskid.org/technology/github-based-comment-system-and-the-death-of-independent-blog","description":"<p>之前收到一些关于 Disqus 在国内加载较慢或者有时干脆无法访问的反馈，于是抽空研究了一下一些其他评论系统，发现现在（unsurprisingly）类似的系统似乎也没几个了，调查过程中不禁有些感触，于是想顺便写下来。</p> \n<p>我在 2012 年之前都是用 Wordpress 平台写博客的，之后为了更高的可定制性（显示数学公式、生成 PDF 文档）于是用 pandoc 等工具手工搭了现在这个博客系统，使用静态页面生成的方式，这样不仅在 host 博客页面的时候非常轻便简洁，需要对网站进行备份的时候也极其便利（比如更早年的博客我虽然没有再用了，但是即使只是想要保持一个只读的网站，也必须要在服务器上运行完整的 Wordpress 系统才行）。静态网页的主要弱点当然就是无法 host 动态内容——比如用户留言。好在早些年静态博客流行，出现了一批专门支持用户留言的第三方服务，我在博客里采用 Disqus 现在已经变成了一个比较老牌的服务提供商。不过据说 Disqus 在国内时常是出于无法访问的状态。</p> \n<!--more--> \n<p>说实话我对于某些机构对互联网的干预导致无法访问就需要对已经运行得比较好的系统进行迁移是比较反感的。而且工作以后花在个人博客上的时间也比以前少了很多，我自己也时常在自问自己仍然继续写博客的目的是什么，或者说原本的初衷是什么。不过如果有比较简单的方法能让博客访问更容易一些，那我也很乐意去尝试一下。总之我粗略地调查了一下，发现国内早些年间出现的各种类似于 Disqus 的服务（比如“多说”）现在基本都已经挂掉了，国外现在另外两个看起来比较靠谱的 alternative 是 <a href=\"https://commento.io/\">commento</a> 和 <a href=\"https://talk.hyvor.com/\">Hyvor Talk</a>。不过在导入 Disqus 已有评论的过程中多少都有一些信息丢失，而且难保这些服务过一阵子自己会挂掉，或者又变得无法在国内访问之类的。</p> \n<p>然后我发现有一批比较有创意的系统，把 github issue 变成了博客评论系统。因为 github 的 issue 本身就是和 blog 评论很类似的功能，而且 github 提供了 API 可以对 issue comments 进行操作，于是就可以做一个系统，把每一篇 blog 文章当做一个 issue，而 issue 下面的评论则可以作为博客评论显示在文章下面。我看到的几个目前还在维护的项目，一个是 <a href=\"https://vssue.js.org/\">Vssue</a>，基于 Vue 做的系统，功能比较强大，支持 github、gitlab 以及 BitBuccket 等不同的后端。另一个是 <a href=\"https://github.com/gitalk/gitalk\">gitalk</a>，只支持 github。我这里使用的是 <a href=\"https://utteranc.es/\">utteranc.es</a>，也是只支持 github，并且看起来比较 barebone，不过最轻便，配置起来也简单，就用这个了。由于 github issue 的 comment 系统不支持 thread 回复之类的，而且必须要用 github 账号登陆才能评论，所以干脆就让两个系统并存了：Disqus 依然是主要的评论系统，但是如果无法加载的话就可以使用下面基于 github 的评论系统。</p> \n<p>其实评论系统从博客起源以来一直是一个软肋，早期的博客系统通常是内置评论留言系统，不过要做好一个留言系统其实不是一件很容易的事情：最简单的模式是允许用户自己填写名字、邮箱等作为留言者身份，但是这样很容易被 spam bot 给滥用，几种常见的解决方案一是在后台进行自动垃圾评论过滤（就连 Disqus 这种老牌的服务也有挺多误判的情况）；二是各种奇形怪状的验证码系统；三是采用必须登录才能留言的方式，这意味着还需要做用户系统（注册、邮箱验证、密码恢复、修改头像之类的），如果本身并不是多用户的平台的话，这还是挺多额外的工作量的，并且如果每个博客系统都有自己的用户系统的话，对于想要留言的用户来说也会比较头疼。到后来各种博客平台开始变得臃肿，自己搭建个人博客开始流行之后，出现了各种小巧轻便的博客平台，比如可以生成静态 HTML 网页，或者甚至通过 <a href=\"https://pages.github.com/\">github pages</a> 自动发布等等，留言评论系统渐渐独立成为单独的模块，像 Disqus 之类的系统被广泛采用，不过到博客没落的今天，当初的各种类似的系统如今还留下的也没有几个了，似乎现在还能见到的比较有内容的讨论大都是有人将博客链接贴到其他以讨论为主的网站（Hacker News 或者 Reddit）之后大家在那里的讨论。</p> \n<p>博客的广泛流行起来应该 <a href=\"https://en.wikipedia.org/wiki/RSS\">RSS</a> 功不可没——原本需要去各种不同的博客网站查看内容、检查是否有新文章之类的，现在通过 RSS 订阅不仅可以方便地获取更新，而且在一个统一的 RSS Reader 里就能查看来自所有已订阅的博客。但是 RSS 的流行也将博客系统在留言评论方面的不便性更强烈地暴露出来，因为 RSS 并不提供留言和评论方面的支持，如果需要留言，还需要再进入原来的网站，然后又回到了刚才的各种留言系统的问题。其实如果能将社区共享和讨论的功能和 RSS 结合起来，应该是挺不错的一种解决方案，不过如果没有通用标准的话，估计也会变成各家互不兼容的平台，对用户来说一样头疼。不过现实是这样的系统发展出来之前，博客就已经没落了。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/blog-google-trend.png\" style=\"width: 75%;\"> \n  <div class=\"caption\">\n    Google Trends 给出的 2004 年到现在 blog 和另外两个相关搜索词的搜索频率的发展趋势。 \n  </div> </img>\n</div> \n<p>虽然在互联网发展的大潮流中博客没落的原因千丝万缕，要列举的话可能还是有一些比较重要的因素吧。除了在鼓励用户参与和社区成长的留言和讨论系统的天生缺陷方面的原因之外，另一个原因大概是商业化吧。我没有把自己的博客当做赚钱的工具，拒绝商业化地交换链接和广告投放，不过从整个体系的可持续性发展来看，健康的商业价值也许是必不可少的吧。早期的互联网，应该有许多出于兴趣和热情的参与者，大家热衷于建立自己的网站，以及互相链接，后来互联网大规模兴起，吸引众多资金和资源，虽然互联网泡沫破灭让很多人破了产，但是互联网平台在后泡沫时代依然是亨受青睐的（像 Facebook 和 Twitter 这些成功案例都是在互联网泡沫之后出现的）。我感觉早期大家可能还在摸索各种不同的商业化模式，亦或者是对新技术和概念的狂热（就像现在的 AI 狂热一样）导致不需要真正有商业模式就能比较容易拉到投资，所以感觉在十多年前的互联网里兴起的各种平台都主要以积累更多的用户量为主，总之先有了用户量，其他的都好说。而一转眼到现在，似乎互联网主要的商业化模式大致都收敛到了“广告”，所以一切阻碍广告投放的因素都渐渐淹没在历史的洪流中。首当其冲的当然是基于 RSS 的内容订阅系统，由于用户可以直接通过 RSS 获取博客的完整内容，所以就不需要访问博客网站，所以博客平台就没有办法投放广告了。这导致有些平台开始只提供一个段落的内容，全文需要跳转才能访问，然后有些客户端开始提供（可能也是收费的）全文抓取功能，争斗之间用户的体验也越来越差，博客内容和阅读平台也都相继关闭。</p> \n<p>另一个冲击来自于社交媒体的兴起（见上面的 Google Trends 图）。感觉个人博客除了少数有特定主题之外，大部分人都是写自己生活为主，事实上早期身边的小伙伴很多都在写博客，由此了解互相生活中发生的有趣的事，其实也是社交网络的初始形态。后来各种形式的社交网络兴起，就吃掉了这部分的功能——不论是从内容创建者还是消费者来说，社交网络用起来都更容易一些（例如之前提到的评论系统的缺陷，在成熟的社交网络平台上就都不再是问题）。和社交媒体同时兴起的还有移动互联网，我在 2012 年来美国读 PhD 的时候有了第一台 iPhone，并且当时到了一个新的环境一切都很新奇，几乎每天都会拍一些（现在看起来很无关紧要的）照片发到社交网络上，我印象非常深刻的是当时的室友有一天晃着手里的 iPhone 跟我说，I don’t think I need a computer anymore。我当时的反应和我现在的态度一样，认为移动设备主要长处在于 media consumption，除此之外大部分电脑能做的事情手机或者平板都还做不了或者做起来很痛苦，然而这些年我自己也越来越意识到的一点是：虽然如此，使用移动设备访问互联网的频率已经大大超过了通过电脑上网的频率，毕竟如果只是顺手搜索一个东西，或者看一下社交网络之类的，用手机真的方便太多了，即便触屏打字不方便，屏幕也小很多，但是还是比打开电脑要容易很多。从总体来看，可能世界上拥有一个（比如安卓智能）手机的人数大概比拥有一台电脑的人数要多很多。下图（<a href=\"https://www.broadbandsearch.net/blog/mobile-desktop-internet-usage-statistics/\">来源</a>）是 2013 年到 2019 年之间移动设备占互联网访问流量的份额。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/internet-traffic-mobile-share.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>社交媒体和移动互联网的发展带来的不止是方便快捷，同时也迅速地让信息洪流无限放大——我的博客的副标题这些年来一直是“We are drowning in information and starving for knowledge”，可见我自己也一直被这样的问题困扰。信息过载带来的各种各样的问题已经有点超出本文的主题了，所以这里就不多说了，对于博客的影响而言，就是人们不论是在内容创建还是内容消费方面都变得更加短平快，加速了博客的消亡。此外，移动互联网作为一块新鲜肉，在各大平台争食的过程中也出现了各种“平台锁定用户”、“互相屏蔽互不兼容”的情况，这似乎在当前的中国互联网环境中尤其明显，之前还看到有人戏称现在国内的互联网是“互不联网”。这跟博客公开地分享的初衷（？）也已经相去甚远了。</p> \n<p>另外，让我们自己能切身体会的影响因素可能还是原本圈子的起落，比如某一个朋友圈子或者技术话题圈子，随着大家的兴趣转移，或者把时间投入到工作、家庭中之后，就渐渐地从原来的圈子消失了。导致我们能切身地感觉到周围博客内容的逐渐消逝（这样的起落同时也在各种社交媒体中能见到）。</p> \n<p>不过其实也并不是什么悲伤的事情啦。说得好听一点是天下无不散的宴席，说得客观一点其实就是世界是一直在变化的，技术也会一直经历发展、变革。有一些东西会逐渐消失在历史洪流中，而另一些会进化成不同的形式继续存在，直到下一次变革。就博客而言，虽然前面说了这么多，但是其实所谓的个人博客的消亡，其实主要还是一种大众现象的消亡，博客不再是一种流行，但是博客这种内容分享的形式仍然继续存在着，并且留存下来的通常都是一些主题比较明确的博客（本博客的主题是什么来着？？），时常能看到很有趣的内容，比如几个很随机的最近碰到的博客：<a href=\"https://os.phil-opp.com/\">Writing an OS in Rust</a>、<a href=\"https://myrtle.ai/learn/how-to-train-your-resnet/\">How to Train Your ResNet</a> 等等。至于我自己，如果有什么我觉得值得分享的东西，也还是会继续发上来啦。虽然好像没有很认真地思考过这个问题，但是我觉得我写博客的初衷一方面是在分享和记录我自己的生活，另一方面其实也是一种非常有效地帮助我整理和思考的工具。从读者的角度来说（从访问统计和我收到的各种反馈来看），似乎我的博客里比较偏技术的部分更有用，这样来说这个博客这两年偏技术的内容减少也显得有些“注水”的趋势，但是其实从我的角度来说，无非是反应了我生活的不同阶段，比如我在写 SVM 系列博客的时候，其实就是在整理我自己学习 SVM 的笔记的阶段，而最近几年技术博客写得比较少一方面是我自己的知识面变得更加狭窄和专业，对技术内容的要求也变高了，如果是我觉得在专业上有用的东西可能会直接以论文或者 tech report 而不是博客的形式写出来，反过来如果我觉得没有太多用或者我自己也没有搞太懂的东西，就更没必要写博客了；另一方面我的课余生活的文化内容在这几年丰富了很多，所以课余学习和整理一些和科研离得较远或者自己不是太了解的东西的时间变少了许多。但是说不定我在未来的某个时候对自己的时间规划更有效率了呢？亦或者我突然下决心仔细学习一下某个不太了解的技术课题了呢？亦或者我以后只能写点贫嘴的文了呢？哈哈，未来就是各种不确定，才让人充满期待啊。</p>","descriptionType":"text/html","publishedDate":"Sun, 21 Jun 2020 00:00:00 +0000","feedId":3969,"bgimg":"http://freemind.pluskid.org/att/2020/blog-google-trend.png","linkMd5":"c811b50c2829c46c33b225e47930c71f","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn38@2020_6/2020/08/24/21-49-59-451_212bec6c9e9f4d2c.webp","destWidth":1076,"destHeight":802,"sourceBytes":93879,"destBytes":36508,"author":"","articleImgCdnMap":{"http://freemind.pluskid.org/att/2020/blog-google-trend.png":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn38@2020_6/2020/08/24/21-49-59-451_212bec6c9e9f4d2c.webp","http://freemind.pluskid.org/att/2020/internet-traffic-mobile-share.jpg":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn31@2020_3/2020/08/24/21-50-17-931_e6cfeba9d0355767.webp"},"publishedOrCreatedDate":1598305776897},{"createdTime":"2020-08-25 05:49:36","updatedTime":"2020-08-25 05:49:36","title":"Server Side Math Rendering","link":"http://freemind.pluskid.org/technology/server-side-math-rendering","description":"<p>现在使用 <a href=\"https://www.mathjax.org/\">MathJaX</a> 直接在浏览器里显示数学公式已经非常方便了，基本上只要在 HTML header 里插入两句引用一下 MathJaX 的 CDN，然后在页面里的 LaTeX 公式就会被自动转化为数学公式显示。运作方式是 MathJaX 作为 Javascript 在客户端浏览器里运行，寻找 HTML 文档里的 LaTeX 表达式，然后将其转化为公式（通过 HTML 或者 SVG 排版的方式）显示出来。不过客户端渲染有一些小问题就是每次用户打开都要重新渲染，取决于用户的网速、系统运行 JS 的速度等等，可能渲染速度会不太一样，而且后期渲染会导致 HTML 文档布局变化等等。所以有时候考虑在 server 端预渲染是一个不错的选择。</p> \n<!--more--> \n<p>在 MathJaX 出现之前一般 server 端的渲染是基于真实的 LaTeX 的，就是直接运行 LaTeX 编译出 dvi 文件，然后用 <code>dvipng</code> 之类的工具转化为图片格式，插入到 HTML 文档中。这种方式的好处是和 LaTeX 完全兼容，坏处一个是需要运行 shell 去调用 LaTeX，如果是用户输入的文本的话可能有一定安全隐患，而且对 server 负担可能也有点大，当然最重要的还是 png 这类的图片格式显示的公式特别是在 inline 的时候不能很好地和周围的文本对齐，经常会很难看。</p> \n<p>另一个就是把 MathJaX 在 server 端预先渲染成 SVG 格式。实际上我这个博客里之前的公式一直是这样显示的，这样可以整个页面静态加载，即使客户端禁用了 Javascript 也能显示，再复杂一些也许可以做到在支持 SVG 的 RSS Reader 里也能直接显示公式。我使用的是一个叫做 <a href=\"https://github.com/agrbin/svgtex\">svgtex</a> 的工具。它的运行方式是通过 <a href=\"https://phantomjs.org/\">PhantomJS</a> 在 server 端跑起 MathJaX 来，然后在一个端口监听，你可以通过发送 HTTP 请求到该端口，输入 LaTeX 的公式，它就会调用 MathJaX 进行渲染，然后把渲染的结果（SVG 格式）发送回来。由于我的博客是编译成静态页面的，所以我直接做了一个简单的后期处理，拿到 SVG 之后替换掉 LaTeX 公式文本内嵌到 HTML 中即可（因为 SVG 其实是文本格式），我用类似于下面这一段代码来做后期处理：</p> \n<div class=\"highlight\"> \n <pre class=\"prettyprint lang-text linenums\">\n  <ol class=\"linenums\" start=\"1\">\n   <li class=\"L0\"><span class=\"line-content\"><span class=\"nb\">require</span> <span class=\"s1\">'uri'</span></span></li>\n   <li class=\"L1\"><span class=\"line-content\"><span class=\"nb\">require</span> <span class=\"s1\">'net/http'</span></span></li>\n   <li class=\"L2\"><span class=\"line-content\"></span></li>\n   <li class=\"L3\"><span class=\"line-content\"><span class=\"k\">def</span> <span class=\"nf\">tex2svg_impl</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"p\">,</span> <span class=\"nb\">display</span><span class=\"o\">=</span><span class=\"kp\">false</span><span class=\"p\">)</span></span></li>\n   <li class=\"L4\"><span class=\"line-content\">  <span class=\"c1\"># undo some preprocessing done by pandoc</span></span></li>\n   <li class=\"L5\"><span class=\"line-content\">  <span class=\"nb\">require</span> <span class=\"s1\">'cgi'</span></span></li>\n   <li class=\"L6\"><span class=\"line-content\">  <span class=\"n\">math</span> <span class=\"o\">=</span> <span class=\"no\">CGI</span><span class=\"o\">.</span><span class=\"n\">unescapeHTML</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"p\">)</span></span></li>\n   <li class=\"L7\"><span class=\"line-content\"></span></li>\n   <li class=\"L8\"><span class=\"line-content\">  <span class=\"n\">uri</span> <span class=\"o\">=</span> <span class=\"no\">URI</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:16000'</span><span class=\"p\">)</span></span></li>\n   <li class=\"L9\"><span class=\"line-content\"></span></li>\n   <li class=\"L0\"><span class=\"line-content\">  <span class=\"n\">http</span> <span class=\"o\">=</span> <span class=\"no\">Net</span><span class=\"o\">::</span><span class=\"no\">HTTP</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">uri</span><span class=\"o\">.</span><span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">uri</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">)</span></span></li>\n   <li class=\"L1\"><span class=\"line-content\">  <span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"no\">Net</span><span class=\"o\">::</span><span class=\"no\">HTTP</span><span class=\"o\">::</span><span class=\"no\">Post</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">uri</span><span class=\"o\">.</span><span class=\"n\">request_uri</span><span class=\"p\">)</span></span></li>\n   <li class=\"L2\"><span class=\"line-content\">  <span class=\"k\">if</span> <span class=\"nb\">display</span></span></li>\n   <li class=\"L3\"><span class=\"line-content\">    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"s1\">'\\displaystyle{'</span> <span class=\"o\">+</span> <span class=\"n\">math</span> <span class=\"o\">+</span> <span class=\"s1\">'}'</span></span></li>\n   <li class=\"L4\"><span class=\"line-content\">  <span class=\"k\">else</span></span></li>\n   <li class=\"L5\"><span class=\"line-content\">    <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"n\">math</span></span></li>\n   <li class=\"L6\"><span class=\"line-content\">  <span class=\"k\">end</span></span></li>\n   <li class=\"L7\"><span class=\"line-content\"></span></li>\n   <li class=\"L8\"><span class=\"line-content\">  <span class=\"n\">http</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">body</span></span></li>\n   <li class=\"L9\"><span class=\"line-content\"><span class=\"k\">end</span></span></li>\n   <li class=\"L0\"><span class=\"line-content\"></span></li>\n   <li class=\"L1\"><span class=\"line-content\"><span class=\"n\">desc</span> <span class=\"s2\">\"convert MathJaX formula to embeded SVG\"</span></span></li>\n   <li class=\"L2\"><span class=\"line-content\"><span class=\"n\">task</span> <span class=\"ss\">:tex2svg</span> <span class=\"k\">do</span></span></li>\n   <li class=\"L3\"><span class=\"line-content\">  <span class=\"nb\">require</span> <span class=\"s1\">'find'</span></span></li>\n   <li class=\"L4\"><span class=\"line-content\"></span></li>\n   <li class=\"L5\"><span class=\"line-content\">  <span class=\"c1\"># currently do not support rss.xml, because</span></span></li>\n   <li class=\"L6\"><span class=\"line-content\">  <span class=\"c1\"># 1. pandoc do HTML escape, which is escaped again in XML, making</span></span></li>\n   <li class=\"L7\"><span class=\"line-content\">  <span class=\"c1\">#    it difficult to unescape</span></span></li>\n   <li class=\"L8\"><span class=\"line-content\">  <span class=\"c1\"># 2. the SVG image is displayed as crazily full page-width images</span></span></li>\n   <li class=\"L9\"><span class=\"line-content\">  <span class=\"c1\">#    in Firefox RSS view</span></span></li>\n   <li class=\"L0\"><span class=\"line-content\">  <span class=\"no\">Find</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s1\">'compiled-production'</span><span class=\"p\">)</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">path</span><span class=\"o\">|</span></span></li>\n   <li class=\"L1\"><span class=\"line-content\">    <span class=\"k\">if</span> <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"sr\">/html\\Z/</span><span class=\"p\">)</span></span></li>\n   <li class=\"L2\"><span class=\"line-content\">      <span class=\"nb\">puts</span> <span class=\"n\">path</span></span></li>\n   <li class=\"L3\"><span class=\"line-content\">      <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"no\">File</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span></span></li>\n   <li class=\"L4\"><span class=\"line-content\">      <span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">gsub!</span> <span class=\"sr\">/&lt;span class=\"math[^\"]*\"&gt;(.*?)&lt;\\/span&gt;/m</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">match</span><span class=\"o\">|</span></span></li>\n   <li class=\"L5\"><span class=\"line-content\">        <span class=\"c1\"># strip \\( \\) or \\[ \\]</span></span></li>\n   <li class=\"L6\"><span class=\"line-content\">        <span class=\"n\">math</span> <span class=\"o\">=</span> <span class=\"vg\">$1</span><span class=\"o\">[</span><span class=\"mi\">2</span><span class=\"o\">.</span><span class=\"n\">.</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"o\">]</span></span></li>\n   <li class=\"L7\"><span class=\"line-content\">        <span class=\"k\">if</span> <span class=\"vg\">$1</span><span class=\"o\">[</span><span class=\"mi\">1</span><span class=\"o\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'('</span></span></li>\n   <li class=\"L8\"><span class=\"line-content\">          <span class=\"s1\">'&lt;span style=\"font-size:100%; display:inline-block;\"&gt;'</span> <span class=\"o\">+</span></span></li>\n   <li class=\"L9\"><span class=\"line-content\">            <span class=\"n\">tex2svg_impl</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"p\">)</span> <span class=\"o\">+</span></span></li>\n   <li class=\"L0\"><span class=\"line-content\">            <span class=\"s1\">'&lt;/span&gt;'</span></span></li>\n   <li class=\"L1\"><span class=\"line-content\">        <span class=\"k\">else</span></span></li>\n   <li class=\"L2\"><span class=\"line-content\">          <span class=\"s1\">'&lt;span class=\"svg-math-block\"&gt;'</span> <span class=\"o\">+</span></span></li>\n   <li class=\"L3\"><span class=\"line-content\">            <span class=\"n\">tex2svg_impl</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"p\">,</span> <span class=\"kp\">true</span><span class=\"p\">)</span> <span class=\"o\">+</span></span></li>\n   <li class=\"L4\"><span class=\"line-content\">            <span class=\"s1\">'&lt;/span&gt;'</span></span></li>\n   <li class=\"L5\"><span class=\"line-content\">        <span class=\"k\">end</span></span></li>\n   <li class=\"L6\"><span class=\"line-content\">      <span class=\"k\">end</span></span></li>\n   <li class=\"L7\"><span class=\"line-content\"></span></li>\n   <li class=\"L8\"><span class=\"line-content\">      <span class=\"no\">File</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">f</span><span class=\"o\">|</span></span></li>\n   <li class=\"L9\"><span class=\"line-content\">        <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">)</span></span></li>\n   <li class=\"L0\"><span class=\"line-content\">      <span class=\"k\">end</span></span></li>\n   <li class=\"L1\"><span class=\"line-content\">    <span class=\"k\">end</span></span></li>\n   <li class=\"L2\"><span class=\"line-content\">  <span class=\"k\">end</span></span></li>\n   <li class=\"L3\"><span class=\"line-content\"><span class=\"k\">end</span></span></li>\n  </ol></pre> \n</div> \n<p>不过我的 Blog 代码也是很多年前写的了，最近换新电脑的时候做系统迁移才发现原来 PhantomJS 都已经停止开发了，然后 svgtex 也已经 depreciated 了……不过 svgtex 有一个后继者叫做 <a href=\"https://github.com/wikimedia/mathoid\">mathoid</a>，看了一下现在已经是 Wikimedia 的项目了，看来 Wikipedia 现在已经是用这个在做 server 端渲染了，居然一直都没有注意到。</p> \n<p>这个 mathoid 最开始是从 svgtex fork 出来的，使用方法基本差不多，不过不再依赖于 PhantomJS，而是基于 node.js。但是我对 node.js 并不是很熟悉，感觉 setup 又会有多一套系统需要维护，由于我现在写 blog 的频率并不高，生成博客的代码维护则更是几乎没有在跟进，这次在修理 <a href=\"https://github.com/rack/rack\">Rack</a> 更新之后出现的问题花了很久，发现我都几乎不太会写 Ruby 代码了，越发意识到这种没有积极维护的系统还是依赖越少，功能越简单越好，而且 server side 渲染对我来说其实并不是一定要有的功能，所以最后干脆又切换回了直接使用 MathJaX 的 CDN 在客户端渲染的方式。</p> \n<p>不过换回去之前想把这个解决方案在这里分享一下，有可能以后会有用，而且之前也有人问过我 blog 里的公式是怎么显示的，因为右键并不会弹出 MathJaX 的菜单哈哈。不过这里还值得一提的是一个后来出现的叫做 <a href=\"https://katex.org/\">KaTeX</a> 的 MathJaX 的竞争者，它是直接支持 server 端渲染的，如果你有一个 server 端 javascript 系统（比如 node.js），可以直接这样渲染：</p> \n<div class=\"highlight\"> \n <pre class=\"prettyprint lang-text\"><span class=\"kd\">var</span> <span class=\"nx\">html</span> <span class=\"o\">=</span> <span class=\"nx\">katex</span><span class=\"p\">.</span><span class=\"nx\">renderToString</span><span class=\"p\">(</span><span class=\"s2\">\"c = \\\\pm\\\\sqrt{a^2 + b^2}\"</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"nx\">throwOnError</span><span class=\"o\">:</span> <span class=\"kc\">false</span>\n<span class=\"p\">});</span>\n<span class=\"c1\">// '&lt;span class=\"katex\"&gt;...&lt;/span&gt;'</span>\n</pre> \n</div> \n<p>当然 KaTeX 和 MathJaX 相比各有优缺点，KaTeX 的优势是速度比 MathJaX 快很多（虽然 MathJaX 对于普通使用来说已经不慢了），不过相比就是支持的 TeX 命令可能没有后者那么全，虽然这些年来已经改进了很多了，不过似乎有些复杂的公式显示还是和 MathJaX 渲染的结果有一些差距。网上有一些比较详细的比较，比如 <a href=\"https://www.intmath.com/cg5/katex-mathjax-comparison.php\">这个页面</a>，具体用哪个还是看自己的需求啦。</p>","descriptionType":"text/html","publishedDate":"Sun, 09 Feb 2020 00:00:00 +0000","feedId":3969,"bgimg":"","linkMd5":"b3fa91b3ac3a5597f7cb34e6ddd80b65","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598305776898},{"createdTime":"2020-08-25 05:49:36","updatedTime":"2020-08-25 05:49:36","title":"Work From Home Remote Connection Kit","link":"http://freemind.pluskid.org/technology/work-from-home-remote-connection-kit","description":"<p>随着美国 COVID-19 单日新增病例超过 66666 例，早日能够正常回到 office 上班的愿景就越来越渺茫了，于是把精力放在了改善在家工作的舒适程度上。这里记录和分享一些远程连接相关的工具和小 tip，希望对大家 work from home 也有一些帮助。</p> \n<!--more--> \n<h2 id=\"远程连接断线重连\">远程连接断线重连</h2> \n<p>远程连接的基本工具 SSH 相信大家都时不时会用到，不过在 WFH 的过程中每天都会大量用到的情况下，了解一些小 tip 还是会让使用过程愉悦很多。使用 SSH 最常碰到的麻烦事就是网络断开了，比如中午吃个饭电脑休眠了，再唤醒电脑的时候原来的 SSH 连接就很有可能不好使了。这个时候有可能会碰到下面一些情况。</p> \n<p>网络断开了，但是 SSH 还没有发现这一点，处于无响应的状态，按 Ctrl+C 之类的什么键都没有反应，如果等待一段时间 SSH 发现网络断开了，会自动退出，这个时候可以重新连接，但是如果不想等待，似乎只有关掉终端窗口或者 tab（或者 kill 掉本地打开 SSH 的那个 shell）这些办法。起始还有一个简单的办法，就是按一下回车键，然后输入 <code>~.</code>，SSH 就会立即断开。这里用到了 SSH 的 escape 命令，详细可以参考 <a href=\"https://linux.die.net/man/1/ssh\">ssh 文档</a>的 Escape Characters 一小节，除了断开连接之外，还能做很多其他事情，比如我们之后会讲到的打开 tunnel。</p> \n<p>SSH 连接断开了，但是终端现在处于非常奇怪的状态，比如切换窗口或者 tab 的时候会不停地发出 beep 的声音，或者是在终端上答应出一些奇怪的诸如 <code>^[[I^[[O^[[I^[[O</code> 之类的字符串。这通常是因为在远程连接那边的某些程序（比如 tmux 或者 VIM）开启了鼠标事件或者焦点切换事件的 reporting，但是由于网络连接中断导致 SSH 连接断开了，所以没有正常关闭这些事件的汇报，可以通过 reset 的方式来恢复终端的正常状态——在 iTerm2 下面可以使用 <code>Cmd+R</code> 来实现。</p> \n<p>最好的状态是 SSH 正常断开了，终端也没有进入奇怪的状态，这个时候只要重新连接 SSH 就可以了。不过重新连上去之后你会发现原来运行的命令由于 SSH 的断开也同时被 kill 掉了（包括通过 <code>&amp;</code> 放在后台运行的进程），可能你的编辑器没有正常退出，文件没有保存，或者程序跑到一半挂掉等等，总之非常麻烦。好在这个已经是多年以来大家都会碰到的问题了，有许多工具可以帮忙解决。</p> \n<p>第一类工具是从断线重连的角度来解决问题的，最简单的工具可能就是 <a href=\"https://www.harding.motd.ca/autossh/\">autossh</a>，功能上类似于维护一个 while 循环，如果发现 ssh 断开了就自动重新连接，但是没有其他的功能，比如你在远程 server 上运行的程序如果 ssh 中途断开了，程序也会跟着终止运行。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/mosh.png\" style=\"width: 100%;\"> </img> \n</div> \n<p>更加高级一点的工具是 <a href=\"https://mosh.org/\">Mosh: the mobile shell</a>，我在之前的<a href=\"http://freemind.pluskid.org/misc/mosh-the-mobile-shell/\">一篇博客中也安利过 mosh</a>，之前上学的时候一直用它。Mosh 特别适合于在笔记本上使用，它除了有基本的断线重连功能（通过特殊协议和 server 上的 mosh 服务器通讯，所以网络断开之后服务器上运行起来的程序也不会终止运行），还支持诸如“漫游”之类的功能：比如说你在家里通过 mosh 连上了服务器，然后让笔记本休眠了，跑去咖啡店通过咖啡店的 wifi 再连上网（这时你的 ip 等各种网络参数都变了），会发现你的 connection 又自动恢复了，之前打开的程序也还在。</p> \n<p>mosh 底层还是使用 SSH，但是它有一些自己的 protocol 来做 bookkeeping，需要同时在客户端和服务器上安装 mosh 才能运作，如果服务器上没有 root 权限的话也可以只安装在自己的 home 目录。不过如果所处的网络环境有一些特殊的配置，比如比较严格的防火墙，或者自动代理之类的，针对 SSH 本身做了优化，但是并没有专门针对 mosh 的 communication 进行支持，可能 mosh 就无法使用了，这也是我工作之后没有再经常用 mosh 的原因之一。此外 mosh 还有一些其他的功能限制，比较重要的一个就是<a href=\"https://github.com/mobile-shell/mosh/issues/337\">不支持端口映射</a>。SSH 的端口映射是一个非常有用的工具，这个我们下面也会详细介绍。另一个看起来跟 mosh 比较类似的工具叫做 <a href=\"https://eternalterminal.dev/\">Eternal Terminal</a>，看起来功能似乎更强大一些，还支持 tmux control mode（这个等下也会提到），不过我自己并没有用过。</p> \n<p>另一类解决办法是通过 server 端的 session 管理来实现，允许网络连接随便断开，断开之后只要手工重新连接就好了，但是提供一种方式可以让用户断开连接之后之前的程序还能继续运行，并且重新连接之后还能恢复到之前的工作环境。由于不需要在网络协议之类的地方做过多修改，因此兼容性很强，凡是支持 SSH 的环境基本上都能用。比较老牌的工具是 <a href=\"https://www.gnu.org/software/screen/\">GNU Screen</a>，我只在很久以前用过，现在主要用一个稍微新一点的叫做 <a href=\"https://github.com/tmux/tmux/wiki\">tmux</a> 的工具。这类 Session 管理工具不仅能让你的程序在网络连接断开之后继续运行，而且还能开启多个“窗口”（见下图，虽然在这个 UI 里看起来更像多个 tab），能够方便地来回切换，比如非常常见的 workflow 就是 SSH 到服务器上之后需要开一个 tab 来写程序，另一个 tab 用来运行命令之类的。当然，如果需要的话，也可以进行分屏等高级操作。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/tmux.png\" style=\"width: 100%;\"> </img> \n</div> \n<p>网络重新连接之后，可以 attach 到原来的 session，就会又回到这里，原来的 tab 也都还在，命令行历史这些也都还保存着，甚至还能回滚看到之前的 shell 命令输出的结果。因为网上可以找到很多很好的 tmux 的介绍和 tutorial，我这里只简单介绍一下我的 workflow。tmux 直接运行在 server 端，大部分系统都能直接通过相应的包管理器安装，安装好之后可以做一些基本的配置，放在 <code>~/.tmux.conf</code> 文件里，我的配置文件如上图所示，我用了 <a href=\"https://github.com/tmux-plugins/tpm\">Tmux Plugin Manager (tpm)</a>，所以还需要根据 tpm 网站上的安装指南安装一下 tpm（git clone 一下）。除此之外主要的配置一个是增大回滚 buffer（会占用更多内存），让我可以看到更多的命令行输出历史，还有就是设置 <code>prefix</code> 为 <code>Ctrl-l</code>（默认好像是 <code>Ctrl-a</code>）。</p> \n<p>配置好之后就可以直接运行 <code>tmux</code> 启动了。如果使用 tpm 配置了插件，那第一次启动的时候插件还没有正常安装，需要在 tmux 里按 <code>prefix + I</code> 来安装配置文件里指定的插件。tmux 几乎所有的命令都是通过 <code>prefix</code> 来执行的，比如 <code>prefix + c</code> 是创建一个新的 window（tab），按法是先同时按下 <code>Ctrl</code> 和 <code>l</code>（或者任何你自己指定的 prefix 组合键），放开之后再 <code>c</code>。我比较常用的命令是：</p> \n<ul> \n <li><code>c</code>：创建新窗口。</li> \n <li><code>0-9</code> 数字：跳转到某个指定窗口；空格键跳转到前一个窗口；<code>p</code>、<code>n</code> 跳转到左边或者右边窗口。</li> \n <li><code>[</code>：进入滚屏模式，可以通过方向键或者 <code>PageUp</code>、<code>PageDown</code> 键滚动屏幕查看之前命令行输出历史。在这个模式里还可以按 <code>ctrl-s</code> 来进行搜索。</li> \n <li><code>:</code>：进入命令模式，可以执行复杂的 tmux 命令（比如写在 tmux 配置文件里的那些指令）。</li> \n <li><code>d</code>：detach 当前 session，退回之前的 shell。</li> \n</ul> \n<p>网络断开等原因导致 tmux 退出的时候 session 也可以自动 detach，下一次再 SSH 连回服务端的时候就可以运行 <code>tmux a</code> 来 attach 到之前的 session，所有的窗口会恢复如初，非常简单也非常好用。如果需要的话，也可以创建不同的 session，通过不同的名字来区分，详细可以参考 tmux 的文档。另外还有一个小帖士是，tmux 可以运行多个 client 同时连接到一个 session 上，有时候可能你在另一台电脑上连上了或者你之前网络无响应之后程序没有及时退出导致的残留 client，会有几个不同的 client 连到同一个 session 上，如果几个 client 各自的终端窗口大小不一样，就会出现不一致的情况，有可能你会看到屏幕上只显示一小块区域，其他的全是白点（另外的 client 窗口比较小），或者是超出屏幕范围的内容直接被截断了（另外的 client 窗口比较大），这个时候可以通过 <code>prefix + D</code> 来强制 detach 其他的 client。</p> \n<h2 id=\"远程代码编辑\">远程代码编辑</h2> \n<p>远程代码编辑最简单的方式就是直接在 SSH 之后在 server 端启动一个终端文本编辑器，比如 VIM、Emacs 或者甚至 nano 之类的。我一直比较不喜欢在终端里运行编辑器（包括在本地的终端），虽然现在似乎有一些办法可以让鼠标、剪切板之类的也能和终端程序互动，但是在 SSH 套 tmux 再套编辑器的情况下有时候情况就很混乱了，最麻烦的就是需要复制或者粘贴超过一行的代码的时候了。另外就是取决于网络的质量，远程代码编辑会卡卡的，如果网络 latency 比较大，网速再快也是无济于事的。所以我通常只在做一些小修小改的时候才会直接在服务器上打开编辑器。</p> \n<p>另一种做法就是在本地编辑，然后把代码同步到服务器上，我在上学的时候知道有人是直接通过 Dropbox 之类的工具来自动同步的。好处是不需要自己麻烦什么，坏处主要是你也不知道 Dropbox 什么时候同步完成了，比如你在 debug 的时候修改了一个东西，然后现在到 server 上去运行，如果你运行的时候最新的代码还没同步过去，那可能就会非常 confusing。相对比较容易掌控一点的做法是手动同步，有人通过 git 来同步，我觉得有点不太合适，除了麻烦很多之外还会导致 git repo 里出现很多细碎的 commits，比如在 debug 的时候可能甚至会出现许多无法编译或运行的代码被 push 进去。比较合适的工具是用 <a href=\"https://rsync.samba.org/\">rsync</a> 通过 SSH 来传输文件，能够增量只同步修改过的文件，也不需要专门在服务端安装什么程序。如果觉得在本地编辑完之后手工 rsync 一下太麻烦的话，也可以再多加一个 automation，通过监视本地某个文件夹内的文件变化来自动触发 rsync，这样在编辑器里保存文件的时候同步就自动完成了。在各个系统下都有许多工具可以用来监视文件系统变化，下面是用跨平台的 <a href=\"https://github.com/emcrisostomo/fswatch\">fswatch</a> 作为一个例子：</p> \n<div class=\"highlight\"> \n <pre class=\"prettyprint lang-text\">fswatch -o <span class=\"nb\">local</span>-dir <span class=\"p\">|</span> <span class=\"k\">while</span> <span class=\"nb\">read </span>f<span class=\"p\">;</span> <span class=\"k\">do</span> \n    rsync -azP <span class=\"nb\">local</span>-dir/ server:path/to/remote/dir\n<span class=\"k\">done</span>\n</pre> \n</div> \n<p>有一个小帖士就是在使用 rsync 的时候，指定目录路径的时候末尾加不加 <code>/</code> 会代表不同的意思（“该目录”还是“该目录的内容”），我不太能记住哪个是哪个，所以一般保存一段我知道可用的命令行，在不同的情况下修改一下就可以用。如果想搞清楚可以直接参考官方文档，或者找一下网上其他专门介绍这个的博客文章（比如<a href=\"http://qdosmsq.dunbar-it.co.uk/blog/2013/02/rsync-to-slash-or-not-to-slash/\">这篇</a>）。</p> \n<p>第三个选项是直接使用 web based editor 在线编辑远程文件，有的公司可能整体部署了开源的或者甚至自己开发的 online IDE 给员工使用，这样通常是最方便的，因为所有东西都配置和集成好了。如果需要自己搞的话，可能需要对服务端有比较大的控制权限，总之听起来好像有点麻烦，我没有这个需求也就没有尝试过。不过这里有一个小 hack：<a href=\"https://jupyter.org/\">Jupyter Notebook</a> 其实是可以直接打开 Python 文件进行在线编辑的（可能其他 Jupyter 支持的语言的代码文件也可以），所以一个临时解决方法是在服务端运行一个 Jupyter notebook，然后通过 SSH 隧道（后面会讲）进行端口映射，这样就能在本地打开远程的代码进行编辑了。至于更完整的解决方案，这里只贴一个看上去还不错的（似乎是基于 Visual Studio Code 的）开源项目 <a href=\"https://theia-ide.org/\">Theia</a>，和一个<a href=\"https://github.com/styfle/awesome-online-ide\">在线编辑器资源列表合集</a>供大家参考。2020.07.13 Update: ZT 在评论里推荐了 <a href=\"https://github.com/cdr/code-server\">code-server</a>，基本上就是一个 web 版的 VS Code，试了一下，下载对应的预编译包基本上直接解压就可以使用了（可以结合 SSH 隧道），非常方便。</p> \n<p>还有一个选项是 SSHFS 远程文件系统，我个人不是很喜欢这个方法，感觉是在条件不允许的情况下提供一种无缝衔接的假象，编辑器之类的都会将远程文件当作本地文件来对待，这样连接如果突然中断的话，程序有可能会崩溃或者卡死，文件会处于什么样的状态也非常不确定。</p> \n<p>最后就是直接使用编辑器的远程编辑功能了。VIM 可以通过 netrw 之类的插件直接打开远程文件进行编辑，Emacs 也有一个很强大的 <a href=\"https://www.gnu.org/software/tramp/\">TRAMP (Transparent Remote (file) Access, Multiple Protocol)</a> 系统。我在本科的时候用过 TRAMP，至少那个时候还没有觉得特别“Transparent”，比如有时保存文件的时候还是会卡一阵，可能因为（当时）Emacs 没有异步功能吧。我最近发现 Visual Studio Code 有一个 <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh\">Remote - SSH</a> 扩展，尝试了一下非常好用，比我多年前记忆中的 Emacs 下的远程编辑系统好用太多了，直接打开 server 端的一个目录或者项目，之后就跟本地操作几乎没有任何区别。如果网络断掉了编辑器也不会进入莫名其妙的诡异状态，而是会自动禁用所有操作，然后提供按钮可以重新尝试建立连接（重新联网之后使用），或者退出编辑器。和其他诸如终端之类的扩展也能互相兼容。另外我发现 VS Code 还有其他不少高质量的扩展，易用性比其他编辑器要好很多，同时又不像完整 IDE 那么臃肿，速度也还不错。不过 VS Code 上的 VIM 模拟器也是我用过的最差的，虽然功能看起来比较全，但是经常会进入一些莫名其妙的状态（比如你 somehow 既按了 VIM 的 u 来 undo，又按了 Cmd+Z 之类的），会导致代码丢失之类的，非常糟糕，这也是我一直没有把 VS Code 当作主要编辑器的原因。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/vscode.png\" style=\"width: 100%;\"> </img> \n</div> \n<p>总之，我现在的情况是：如果是小文件一次性编辑，就直接在服务端打开终端文件编辑器；如果是要写很多代码或者编辑很多文件的话，所在的环境有配置好在线编辑器就用那个，否则的话会用 VS Code 连过去。</p> \n<h2 id=\"ssh-multiplexing\">SSH Multiplexing</h2> \n<p><a href=\"https://en.wikibooks.org/wiki/OpenSSH/Cookbook/Multiplexing\">SSH Multiplexing</a>它允许 SSH 重复利用一个已经 authenticate 过的连接来建立多个 session，这样比如你已经有一个 active 的 SSH connection 的情况下，如果再运行 scp 之类的命令就可以重复利用已经有的连接，所以即使系统要求 two factor authentication 之类的复杂验证步骤也不会每次都触发。使用方法就是在本地 SSH 的配置文件 <code>~/.ssh/config</code> 里加入</p> \n<div class=\"highlight\"> \n <pre class=\"prettyprint lang-text\"><span class=\"err\">Match</span> <span class=\"err\">host</span> <span class=\"err\">my-server.my-domain.com</span>\n  <span class=\"err\">ControlMaster</span> <span class=\"err\">auto</span>\n  <span class=\"err\">ControlPath</span> <span class=\"err\">~/.ssh/ctrl-%C</span>\n  <span class=\"err\">ControlPersist</span> <span class=\"err\">yes</span>\n</pre> \n</div> \n<p>这样第二次 ssh、scp 之类的时候就可以不用重复认证了。</p> \n<h2 id=\"ssh-隧道和端口映射\">SSH 隧道和端口映射</h2> \n<p>SSH 另一个常用功能就是通过 SSH 隧道建立端口映射。在高层网络协议中一个 Domain Name（或者 ip address）加上一个端口组合在一起唯一确定了一个服务的“地址”。我们平时在连接网络服务的时候通常都不需要输入端口，是因为常见的服务都有默认的端口，比如通过浏览器浏览网页的时候会使用 HTTP 服务默认的 80 端口，通过 SSH 连接服务器的时候会使用默认的 SSH 服务端口 22，等等。端口映射简单地来说就是通过 SSH 建立一个隧道将 SSH 连接一头的一个端口和另一头的一个端口“等价”起来。</p> \n<p>其中最常用的一种端口映射是 Local Forward，可以在 SSH 连接的时候通过如下命令行参数指定：</p> \n<div class=\"highlight\"> \n <pre class=\"prettyprint lang-text\">ssh -L 8080:localhost:80 ssh.server.com\n</pre> \n</div> \n<p>其中第一个 8080 是指客户端的 8080 端口，之后的 <code>localhost:80</code> 需要在服务器端的上下文中解释，所以这里虽然是 <code>localhost</code> 但是其实是指服务器自己，所以并不是指客户端。建立好端口映射之后，在客户端上连接（比如在浏览器中打开）<code>localhost:8080</code> （注意这时的 localhost 是在客户端的上下文中解释的，所以也就是客户端自己），这个时候所有通讯会通过 SSH 隧道和服务器进行连接，对客户端而言，其结果相当于直接连上了服务器（这个例子中是 <code>ssh.server.com</code>）的 80 端口）。为什么要绕这么大一个弯，而不直接连接服务器的 80 端口呢？因为很多时候服务器是在防火墙背后的，可能除了可以通过某种方式能建立一个 SSH 连接之外其他端口都被防火墙阻隔，但是如果通过 SSH 隧道连接的话，实际上这个连接是从 SSH 服务器本身发出来的，在我们的例子中其实就是服务器本机连接本机，所以通常都不会被防火墙阻隔。除此之外，端口映射的目标主机也不一定非要是 SSH 服务器本机。例如下面的简图所示，假设每个机器有三个端口，机器 ssh.client 通过 SSH 连接到 ssh.server（的端口 1），并通过 <code>-L 2:main.server:3</code> 建立端口映射。这个时候如果 main.client 去连接 ssh.client 的端口 2，对于 main.client 来说，其结果好比直接连上了 main.server 的端口 3，虽然 main.server 处于防火墙之内。在一开始的例子里 ssh.server 和 main.server 是同一台机器，ssh.client 和 main.client 也是同一台机器。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/ssh-tunnel.png\" style=\"width: 70%;\"> </img> \n</div> \n<p>和 Local Forward 相对应的还有一种叫做 Remote Forward，语法是类似的，通过 <code>-R 8080:localhost:80</code> 命令行参数来实现，这样在连接 SSH 服务器的 8080 端口的时候，就好比瞬移到了 SSH 客户端机器然后连接其 <code>localhost:80</code> 一样。听起来有点复杂，那这些 SSH 隧道在实际中能做什么事情呢？</p> \n<p>听起来有点复杂，实际中的用处主要是用来绕过防火墙（正向映射）或者访问私有局域网（反向映射）。例如我们现在通过 SSH 连接到一个服务器，想要复制一个文件回客户端，正常的做法是回到客户端另外开启一个终端，然后通过 scp 再次建立 SSH 连接来复制文件，如果路径比较长的话，输入起来比较麻烦（毕竟涉及到远程路径的时候命令行自动补全也不好用了）。这个时候我们可以从服务端运行 scp 反向连回客户端来推送文件，不过通常我们的客户端可能在私有子网中（例如家庭 WIFI）无法直接访问，这个时候就可以通过反向端口映射来实现。类似于下面这样的，dollar sign 前面的信息表示我当前所在的机器的 hostname 和当前路径：</p> \n<div class=\"highlight\"> \n <pre class=\"prettyprint lang-text\">ssh.client ~<span class=\"nv\">$ </span>ssh -R 2222:localhost:22 ssh.server\nssh.server ~<span class=\"nv\">$ </span><span class=\"nb\">cd </span>some/complex/path\nssh.server ~/some/complex/path<span class=\"nv\">$ </span>scp -P <span class=\"m\">2222</span> file localhost:\n</pre> \n</div> \n<p>这样就算客户端机在一个私有子网内也可以正常反向 scp 了，当然客户端机器必须配置好允许 SSH 连接（MacOS 默认是关闭的），如果想省去每次输入密码的话，也可以将服务器端的 SSH public key 加入客户端机器的 <code>~/.ssh/authorized_keys</code> 里，让连接更方便。</p> \n<p>正向端口映射的常见用途是比如你在服务器上运行了一个 Jupyter Notebook 之类的程序（假设启动在端口 8888），但是你的服务器又在防火墙之内，你就可以通过把客户端的某个端口（比如 9999）映射到服务器的 <code>localhost:8888</code> 端口上，然后就可以在客户端的浏览器里通过 <code>localhost:9999</code> 访问了。</p> \n<p>如果有很多常用的端口映射，可以直接写到 ssh 的配置文件里：</p> \n<div class=\"highlight\"> \n <pre class=\"prettyprint lang-text\"><span class=\"err\">Match</span> <span class=\"err\">host</span> <span class=\"err\">my-server.my-domain.com</span>\n  <span class=\"c1\"># Jupyter Notebook</span>\n  <span class=\"err\">LocalForward</span> <span class=\"err\">8888</span> <span class=\"err\">localhost:8888</span>\n  <span class=\"c1\"># Tensorboard</span>\n  <span class=\"err\">LocalForward</span> <span class=\"err\">6006</span> <span class=\"err\">localhost:6006</span>\n</pre> \n</div> \n<p>不过这样有一个麻烦是每次建立新的 SSH 连接的时候都会尝试做端口映射，但是如果端口已经（被前一个 SSH）占用了，就会打印出端口映射失败的信息。还有一个方便的做法是在已经有的 SSH 连接上新增隧道。前面我们有提到过 SSH 的 escape command，在 SSH 连接里按回车，然后输入 <code>~C</code> 就可以进入命令模式，在这里输入诸如 <code>-L 8888:localhost:8888</code> 之类的命令就可以在已有的 SSH session 里建立新的隧道，不过如果你开启了 SSH Multiplexing 的话，就不支持这么搞了。</p> \n<h2 id=\"tmux--cc\">tmux -CC</h2> \n<p>最后想提一下的是 tmux 有一个叫做 control mode 的东西，可以通过 <code>-CC</code> 命令行参数来启动，比如原来 attach 到已有的 session 的命令 <code>tmux a</code> 现在变成 <code>tmux -CC a</code>。Control mode 可以让支持的终端接管 tmux 的 tab UI，例如下图是 <a href=\"https://www.iterm2.com/\">iTerm2</a> 接管之前展示过的 tmux session 之后的样子。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/tmux-cc.png\" style=\"width: 100%;\"> </img> \n</div> \n<p>值得注意的是 tmux 是运行在 SSH 连接的服务器上的，使用 control mode 之后它们看起来像本地终端的 tab 了，为了避免混淆你可以设置 iTerm2 让他在开启 tmux 窗口的时候使用 tmux profile，这样通过设置 tmux profile 下的颜色和字体，就可以很方便地区分本地终端和远程终端了。让 iTerm2 接管的好处除了看起来比较好看之外，主要就是可以直接使用 native GUI 的操作来切换、新建和关闭 tab，而且现在可以直接通过鼠标回滚查看命令行历史了，不需要用 tmux 的奇怪的 <code>prefix + [</code> 快捷键再慢慢 <code>PageUp</code> 的方式来回滚了。不过尴尬的是据我所知目前为止支持 tmux 的 control mode 的终端好像只有 Mac 下的 iTerm2 这一个。</p> \n<p>以上就是我的 WFH 远程连接工具箱和小贴士，祝大家 WFH 顺利！😃</p>","descriptionType":"text/html","publishedDate":"Sun, 12 Jul 2020 00:00:00 +0000","feedId":3969,"bgimg":"http://freemind.pluskid.org/att/2020/mosh.png","linkMd5":"9d099b06fca65190cefedebcd617e83a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn26@2020_1/2020/08/24/21-50-00-542_8e1950c950e499e9.webp","destWidth":2548,"destHeight":538,"sourceBytes":162515,"destBytes":82368,"author":"","articleImgCdnMap":{"http://freemind.pluskid.org/att/2020/mosh.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn26@2020_1/2020/08/24/21-50-00-542_8e1950c950e499e9.webp","http://freemind.pluskid.org/att/2020/tmux.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn64@2020_1/2020/08/24/21-50-15-438_faffba8ce95e08a2.webp","http://freemind.pluskid.org/att/2020/vscode.png":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn27@2020_5/2020/08/24/21-50-15-489_ec4458b799683ff3.webp","http://freemind.pluskid.org/att/2020/ssh-tunnel.png":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn72@2020_1/2020/08/24/21-50-14-818_0802d6a1d8b00c8e.webp","http://freemind.pluskid.org/att/2020/tmux-cc.png":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn23@2020_4/2020/08/24/21-50-16-108_e46d196a230f1508.webp"},"publishedOrCreatedDate":1598305776898},{"createdTime":"2020-08-25 05:49:36","updatedTime":"2020-08-25 05:49:36","title":"Arduino and Procreate Art Keyboard","link":"http://freemind.pluskid.org/technology/arduino-and-procreate-art-keyboard","description":"<p>疫情宅家琢磨好玩的东西改善自己的课余生活和心理健康的时候偶然发现了 <a href=\"https://www.arduino.cc/\">Arduino</a> 这个东西。作为软件出生的人来说比较常听到的是 <a href=\"https://www.raspberrypi.org/\">Raspberry Pi</a>，这个东西其实就是一个比较小比较便宜的电脑板子，里面有一个完整的 Linux 系统，一方面来讲它的功能更强大，就是电脑能做的它都能做，但另一方面似乎也让它觉得有点鸡肋，比如如果家里已经有电脑了，为啥要用它？也许做一些简易机器人或者小车子之类的时候会比较有用，但是我看网上介绍的一些常见的 Raspberry Pi 的 project，诸如做一个家庭的媒体服务器之类的，如果家里已经有台式机或者空余电脑的话，就比较牵强。当然，也许它的主要目的不是有多大的实用价值，而是让大家能动手去玩，起到学习、玩耍和提升兴趣之类的。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/arduino.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>相比起来，Arduino 是一个更加底层的东西，并没有一个完整的操作系统跑在里面，所以做简单的事情 overhead 没有那么大，而且没有 USB 供电的时候用普通的 5V 电池就能驱动。此外定制的过程除了编程之外，还需要通过面包板用线把不同的针脚接起来，或者甚至直接用焊锡焊起来，对我来说是比 Linux 编程更加未知的领域，所以听起来更好玩一些。</p> \n<!--more--> \n<p>上图是三个 Arduino 板子（其中有两个已经做成了蓝牙小键盘加上了按钮）和一些乱入物件的体积对比。Arduino 板子的类型比 Raspberry Pi 要多很多，不过如果作为入门上手的话，在亚马逊或者其他很多网站上都能买到各种不同的 starter kit，提供板子和相应的各种小零件（线啊、LED 小灯、面包板、各种 sensor、按钮之类的），并且会附送一个包含几十个入门项目的 tutorial 文档和相应的 code，让你上手了解操作流程，以及可以用板子来做些什么事情之类的。比如我入手的 starter kit 里有湿度计、加速度计、超声波距离探测之类的 sensor，还有小马达、摇杆按钮、红外遥控器之类的输入设备。</p> \n<p>Arduino 板子有一些针脚可以提供数字或者模拟信号的输入和输出，用面包板或者直接插线的方式把板子跟 sensor、以及输入和输出设备接起来，然后就可以通过写程序来读取 sensor 或者输入设备的数据，进行处理之后再通过输出设备给出反馈了。虽然 Arduino 不是像 Raspberry Pi 那样有整个操作系统，但是它是一个 microcontroller，并不需要写像 Verilog 那种程序，如果用 Arduino IDE 的话，基本上可以用 C++ 来写程序。例如下面一段代码：</p> \n<div class=\"highlight\"> \n <pre class=\"prettyprint lang-text linenums\">\n  <ol class=\"linenums\" start=\"1\">\n   <li class=\"L0\"><span class=\"line-content\"><span class=\"c1\">// Define Pins</span></span></li>\n   <li class=\"L1\"><span class=\"line-content\"><span class=\"cp\">#define BLUE 3</span></span></li>\n   <li class=\"L2\"><span class=\"line-content\"><span class=\"cp\">#define GREEN 5</span></span></li>\n   <li class=\"L3\"><span class=\"line-content\"><span class=\"cp\">#define RED 6</span></span></li>\n   <li class=\"L4\"><span class=\"line-content\"></span></li>\n   <li class=\"L5\"><span class=\"line-content\"><span class=\"kt\">void</span> <span class=\"nf\">setup</span><span class=\"p\">()</span></span></li>\n   <li class=\"L6\"><span class=\"line-content\"><span class=\"p\">{</span></span></li>\n   <li class=\"L7\"><span class=\"line-content\">    <span class=\"n\">pinMode</span><span class=\"p\">(</span><span class=\"n\">RED</span><span class=\"p\">,</span> <span class=\"n\">OUTPUT</span><span class=\"p\">);</span></span></li>\n   <li class=\"L8\"><span class=\"line-content\">    <span class=\"n\">pinMode</span><span class=\"p\">(</span><span class=\"n\">GREEN</span><span class=\"p\">,</span> <span class=\"n\">OUTPUT</span><span class=\"p\">);</span></span></li>\n   <li class=\"L9\"><span class=\"line-content\">    <span class=\"n\">pinMode</span><span class=\"p\">(</span><span class=\"n\">BLUE</span><span class=\"p\">,</span> <span class=\"n\">OUTPUT</span><span class=\"p\">);</span></span></li>\n   <li class=\"L0\"><span class=\"line-content\">    <span class=\"n\">digitalWrite</span><span class=\"p\">(</span><span class=\"n\">RED</span><span class=\"p\">,</span> <span class=\"n\">HIGH</span><span class=\"p\">);</span></span></li>\n   <li class=\"L1\"><span class=\"line-content\">    <span class=\"n\">digitalWrite</span><span class=\"p\">(</span><span class=\"n\">GREEN</span><span class=\"p\">,</span> <span class=\"n\">LOW</span><span class=\"p\">);</span></span></li>\n   <li class=\"L2\"><span class=\"line-content\">    <span class=\"n\">digitalWrite</span><span class=\"p\">(</span><span class=\"n\">BLUE</span><span class=\"p\">,</span> <span class=\"n\">LOW</span><span class=\"p\">);</span></span></li>\n   <li class=\"L3\"><span class=\"line-content\"><span class=\"p\">}</span></span></li>\n  </ol></pre> \n</div> \n<p>展示了如何控制一个彩色 LED 灯，把 LED 灯代表红绿蓝输入的三个针脚分别接到程序中常量指定的 pin 上（把接地的针脚也接到板子的 ground 那里），然后在 <code>setup</code> 函数中设置好三个 pin 为输出模式，就可以通过 <code>digitalWrite</code> 写入使 LED 显示红色。板子在初始化的时候调用 <code>setup</code> 函数，之后会不停地调用 <code>loop</code> 函数，在 <code>loop</code> 函数里就可以写一个循环来更新 LED 灯的颜色（用 <code>analogWrite</code> 可以写入 0 到 255 之间的颜色值，三原色组合起来就可以形成很多种不同的颜色），或者查询某些接到板子上的按钮或者 sensor 的状态来设置 LED 灯的颜色之类的。</p> \n<p>总之具体做什么玩意就看自己的想象力了，对于熟悉软件开发的人来说，可能这种混合程序和接线的方式更有种“动手玩”的感觉。不过总体来说还是玩的成分更大一些，如果真的要做出比较实用的东西，感觉还是相当费劲的。</p> \n<p>不过最开始下决心玩一玩 Arduino 其实也是基于一个比较实际的需求：Procreate Art Keyboard。<a href=\"https://procreate.art/\">Procreate</a> 是一个非常棒的 iOS 上的绘画 app，配合 Apple Pencil 使用简直是最棒的体验，当然其强大和灵活性方面还和桌面电脑上的重量级程序还有一点差距，但是 iPad 随手拿起来就可以开始画，和电脑要接数位板，一大堆线，还要启动程序之类的相比就太无阻力了。但是 iOS 是一个比较新并且非常封闭的系统，所以其灵活性非常有限。</p> \n<p>在绘画（或者其他相关的诸如照片处理、视频编辑之类）相关的工作流程里有一个非常重要的元素就是快捷键：比如在笔刷、橡皮、选择工具之间快速切换，快速调整笔刷大小、透明度，快速取色、选色等等，对于绘画流程的流畅程度影响很大。在使用电脑进行绘画的时候有很多辅助工具可以选择，比如老牌的 Wacom ExpressKey（下图左上）有按钮可以触发快捷键，也有旋钮可以触发连续值改变（比如笔刷大小），可以针对不同的软件分别定制；比较新颖的也有 Surface Dial（下图右上），硬件上就是一个 dial，但是配合软件实现也有非常高的可定制性，不过 Surface 弃用 Wacom 开始用自己的压感笔技术之后许多年一直没有改进，写字记笔记还可以，画画感觉就不是特别胜任。下图右下是 Razer Tartarus V2 单手键盘。特别是 Razer 的单手键盘，本身是设计来给电脑游戏玩家用的，但是由于桌面操作系统的开放性，导致很强的可定制性，于是各种不同的设备和程序都可以结合起来使用，比如这里我们就可以通过定制单手键盘的按键来映射到 Photoshop 或者其他绘画程序所使用的快捷键上来实现想要的功能。此外，桌面操作系统还允许有诸如 AutoHotkey 之类的程序来对快捷键做更高的定制，比如根据上下文来判断触发什么样的行为。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/shortcut-keys.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>相比之下 iOS 简直是封闭系统之典范，比如时至今日外接键盘仍然是无法使用第三方输入法的。回到画画的问题上，iOS 的强项是触屏，各种 Art App 其实也都提供了触屏的“快捷键”，比如 Procreate 在触屏左边有两个 slider 可以分别调整笔刷的大小和透明度，也有一个快捷键按钮，可以有一些可定制功能，比如按下的时候就可以用笔进行取色，还有一些快捷手势，比如两个指头 tap 就是 undo。听上去很美好，但是实际使用的时候触屏按键问题多多，按键没有反馈还是小事，主要的问题是触屏按键经常会失灵，我猜测应该是 palm rejection 功能导致的，因为系统一方面希望用户可以在画画的时候把手放在屏幕上，而不会误把手掌当做手指 tap 而出发“快捷键”功能，所以会对一些被认为是 false alarm 的 tap 有抑制作用。实际上整个 palm rejection 功能虽然已经比较厉害了，但是只要还没有到 100% 精确的程度，就总会有 annoy 用户的地方，除了会让“快捷按键”经常失灵无法按出来之外，还会不时错误地由于手掌而出发快捷按键，即使戴上了上图左下那样的“Art Glove”遮住小指、无名指和下面那部分手掌能很大程度上解决误触发的问题，但是由于系统没有提供完全禁用 palm rejection 功能的选项，所以“无法触发”的问题依然存在。</p> \n<p>总之基于触摸屏的快捷键虽然潜力很大——因为不受硬件按钮形状的控制，可以提供任意复杂形状和功能的 UI，但是目前的可用性还有相当大的改进空间，所以如果有一个硬件的快捷键盘能在 iOS 上使用的话，会很大地提升绘画的愉悦程度。当然，显而易见地，上面提到的各种产品，以及其他各种诸如 ClipStudio Tabmate 之类的第三方产品没有一个是能在 iOS 上用的。</p> \n<p>这就是用 Arduino 手工制作 Art Keyboard 的动机了，虽然 iOS 系统限制很大，想和 app 通讯基本只能单向发送简单的按键和组合键，但是也算勉强够用把。当然毫无 Arduino 经验的我也不会想到可以做这种东西，还是看到 Procreate 论坛上一个叫 Jorge Verdugo 的网友发了一个帖子展示了一下<a href=\"https://folio.procreate.art/discussions/11/29/28104\">他自己 DIY 的 keyboard</a>。跟确切地来说应该是一个 remote 一样的东西，可以单手拿着操作。</p> \n<p>使用的 Arduino 板子是 <a href=\"https://www.adafruit.com/product/3406\">Adafruit Feather nRF52832</a>，这是一个带蓝牙功能的板子，所以可以通过蓝牙和 iPad 连接起来，而不用接线。供电可以使用普通的电池，不过如果使用可充电电池的话，接好电池之后就可以用板子上自带的 micro USB 接口进行充电。其实原理上非常简单，输入是一些按钮，按钮连到 Arduino 的输入 pin，板子监听到特定的按键之后，将定制的键盘组合键通过蓝牙发送到 iOS。其中最复杂的部分大概还是在于按钮了。首先，最直接的连接方式是每个按钮连接板子的一个 pin，但是这样 pin 的数目必须跟按钮一样多才行，比较常用的办法是将按钮线路排布成一个矩阵，每一行和每一列分别占用一个 pin，然后行列组合出可以接一个开关（按钮），通过查看第 <code>i</code> 行和第 <code>j</code> 列是否接通，就可以解码出第 <code>(i,j)</code> 个按钮是否被按下，这样 2N 个 pin 就可以处理 N*N 个按钮。详情可以参考 Wikipedia 的 <a href=\"https://en.wikipedia.org/wiki/Keyboard_matrix_circuit\">Keyboard matrix circuit</a> 和这个 <a href=\"https://www.baldengineer.com/arduino-keyboard-matrix-tutorial.html\">Arduino 9x9 Keyboard Matrix Tutorial</a>。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/art-keyboard.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>即使通过矩阵编码的方式可以减少 pin 使用数量，但是布线其实更加复杂，如果完全用线来接估计会绕成一团，为了让做出来的设备还能保持手持大小，就需要跟高效的布线方式。这里之前那位 DIY 网友做了一个 PCB 板子——工作原理很简单，就是做一个和 Arduino 板子规格匹配的一个电路板，外部的 pin 可以和 Arduino 板子直接配对连起来，然后板子上根据标准规格的按钮大小实现设计好布局，哪里放哪个按钮，然后提供按钮连接的针脚，最后设计好板子内部的电路布线，使你插上按钮并把电路板和 Arduino 板子连在一起之后，按钮们在逻辑上是按照矩阵排列的方式连到 Arduino 的——当然，原理虽然听起来简单，但是实际操作我也不知道怎么搞，用什么软件来设计 PCB 电路板，如何调试测试，设计好图纸之后去哪里订购实际的板子之类的……好在 Jorge 有提供 <a href=\"https://gumroad.com/jorgeverdugo#NrSZj\">他自己做的板子供购买</a>，同时还提供了代码，不过他并没有开源，我就不贴代码了，搞清楚蓝牙、键盘等相关的 API 函数之后其实是很简单的代码。</p> \n<p>做出来的键盘（或者说遥控器）如上图，一个是“大号”的，按键比较多，一个是迷你版（图中被拆成两半了），按键比较少，但是因为电池是贴在下面的，所以也更厚一些。整个制作过程其实是很好玩的，因为 Jorge 给的 instruction 其实很不详细，而我有几乎毫无电路板的经验，包括买哪种按钮，什么样的针脚头，什么样的电池等等都不太清楚。到出售电子元件的网站上一看，真是惊呆了，简直有成千上万种按钮，好在似乎有几种固定的标准，所以大小和针脚形状都差不多。电池也是最后随便买了个相机的充电电池，用一根 Arduino 的电池线直接把正负极用焊锡接上。</p> \n<p>至于焊锡，这是整个制作过程中让我最头大的部分，虽然大学金工实习课上焊过电焊，但应该不太一样吧……总之我在网上看了一些视频，买了焊枪、焊锡这些玩意，最后……还是靠 N 帮忙了。不过以前听人说焊板子，我一直以为焊板子是用焊枪直接在板子上画一个电路布线出来，原来只是把针脚连起来啊，瞬间觉得简单了很多倍，不过手抖的我还是很不喜欢搞这个玩意。下图左：N 在焊针脚；中：旧菜板改装的焊接工作台；右：安装按钮中。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/soldering.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>最后一大一小两个键盘遥控器都顺利完成，在尝试将程序上传到板子上的时候还碰到了一些额外的困难，不过软件方面的 debug 我比较擅长，总之最后查阅了一些文档和蛛丝马迹之后，安装了某几个特定版本的驱动，再配合上“连续 reset 两次的 trick”之类的诡异方法最后还是搞定了。连上 iPad 的蓝牙的时候是非常激动人心的！Work like a charm 可能还不至于，但是至少是 work as expected。不完美的其实主要是一些小地方了，那些小按钮元件的按键手感并没有特别好，而且没有滑轮之类的可以用来改变连续值（比如笔刷大小）的输入控件（当然，即使有，也由于 iOS 和 procrete 本身的限制，目前还没有办法实现这样的功能）。最严重的问题还是 Procreate 本身，UI 上的 slider 改变笔刷大小是 log scale 的，但是通过键盘快捷键改变笔刷大小却是 linear scale 的，比较不能接受。想象一下如果你要以 1% 的线性增量将笔刷从 5% 的大小增加到 50% 的大小要按多少下按钮，反过来如果选择使用 10% 的增量，则无法选择小于 10% 的笔刷大小。总之还不是特别完美，但是目前来说还是比较够用的。而且制作过程还是比较 exciting 的，虽然现在还想不到还能用 Arduino 做一些其他什么玩意（也许可以做定制的电脑键盘之类的），但是感觉也算是打开了新世界的大门。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/art-keyboard-painting.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>最后贴两张近期的 Procreate 画：一张是临摹，另一张是静物（虽然两张都是在做完键盘遥控器之前画的）。😃</p>","descriptionType":"text/html","publishedDate":"Sat, 13 Jun 2020 00:00:00 +0000","feedId":3969,"bgimg":"http://freemind.pluskid.org/att/2020/arduino.jpg","linkMd5":"2bd57eeb87581e61ef730b94385e923a","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn34@2020_2/2020/08/24/21-49-59-922_d1dda178292ad11b.webp","destWidth":2000,"destHeight":1023,"sourceBytes":734750,"destBytes":238670,"author":"","articleImgCdnMap":{"http://freemind.pluskid.org/att/2020/arduino.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn34@2020_2/2020/08/24/21-49-59-922_d1dda178292ad11b.webp","http://freemind.pluskid.org/att/2020/shortcut-keys.jpg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn36@2020_4/2020/08/24/21-50-22-035_2521fa966c21f593.webp","http://freemind.pluskid.org/att/2020/art-keyboard.jpg":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn47@2020_3/2020/08/24/21-50-15-967_19bcd5a909d20c5b.webp","http://freemind.pluskid.org/att/2020/soldering.jpg":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn95@2020_5/2020/08/24/21-50-23-479_c01f9eb6a816af2c.webp","http://freemind.pluskid.org/att/2020/art-keyboard-painting.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn80@2020_1/2020/08/24/21-50-19-097_deee5704cbc77b93.webp"},"publishedOrCreatedDate":1598305776897},{"createdTime":"2020-08-25 05:49:36","updatedTime":"2020-08-25 05:49:36","title":"Climbing towards NLU: On Meaning, Form, and Understanding in the Age of Data","link":"http://freemind.pluskid.org/machine-learning/climbing-towards-nlu-on-meaning-form-and-understanding-in-the-age-of-data","description":"<p>今天介绍一篇最近看到的<a href=\"https://www.aclweb.org/anthology/2020.acl-main.463/\">论文</a>，两位作者分别是华盛顿大学 Linguistics 系的 Emily M. Bender 和萨尔大学语言科学与技术（Language Science and Technology）系的 Alexander Koller。从作者的院系大概可以猜到这篇论文并不是跑很多实验提出很 fancy 的模型或者打破了很多 state-of-the-art 性能的论文，不过这篇论文得到了今年 ACL 的 Best Theme Paper，虽然不是很 technical 所以读起来比较容易，但是其实讨论的问题和观点都挺有意思的。</p> \n<p>从标题可以看到，这篇论文主要探讨的问题是 NLU（自然语言理解），NLU 在最初 AI 开始作为一个问题研究时就具有重要地位，著名的<a href=\"https://en.wikipedia.org/wiki/Turing_test\">图灵测试</a>就是一种让人和算法进行“对话”的实验：看人是否能够意识到跟自己对话的另一端是机器而不是一个人，从而来断定机器是否具有了“智能”。取决于被测试的人是否是语言或者人工智能方面的专家，图灵测试有可能会很困难或者很容易，非常早期就有一些程序，例如 <a href=\"https://en.wikipedia.org/wiki/ELIZA\">ELIZA</a>，通过非常简单的语法变换来对你进行各种反问，成功地让一些人觉得和这个“心理医生”对话非常有帮助（Emacs 里也有一个类似的程序，通过 <code>M-x doctor</code> 可以访问到）。到今天，基于各种超大型神经网络的文本生成模型能做到各种比简单的语法词法替换复杂很多倍的事情。比如最近火遍大江南北的 GPT-3 在开放了 API 之后被大家玩出了各种新花样，有<a href=\"https://www.gwern.net/GPT-3\">用 GPT-3 写诗歌文章的</a>，有让 GPT-3 帮忙写代码的，当然还有<a href=\"http://lacker.io/ai/2020/07/06/giving-gpt-3-a-turing-test.html\">让 GPT-3 做图灵测试的</a>，更多的例子可以参见这个 <a href=\"https://github.com/elyase/awesome-gpt3\">awesome gpt-3</a> 的列表。</p> \n<p>如果早期基于简单规则变换的“心理医生”能骗过一些未经过专门训练的人并不会让我们认为这样的模型具备了真正的智能的话，那么今天能够让绝大多数人都感到惊叹的 GPT-3 这样的模型又如何呢？这大概是一时半会也争论不出结果的问题。这篇论文也没有尝试去跳通用智能这个大坑，而是探讨一个更加容易明确定义和论证的话题：在自然语言处理中什么是一个句子的“意思（meaning）”，以及怎么样算是对一个句子“理解”了。论文对这些概念给出了定义，并通过一些 thought experiment 来论证普通的语言模型的训练方法（例如 GPT-3 之类的）由于只使用语言的“form”，在原则上无法训练出能够掌握语言的“meaning”的模型来。</p> \n<!--more--> \n<p><a href=\"https://en.wikipedia.org/wiki/Language_model\">语言模型</a>通常是指一个语言里的所有序列（句子）的一个概率分布模型 <span class=\"math inline\">\\(P(w_1w_2\\cdots w_m)\\)</span>，其中 <span class=\"math inline\">\\(w_1\\)</span> 到 <span class=\"math inline\">\\(w_m\\)</span> 都是属于这个语言的词汇表（vocabulary）里的“词”——或者可以叫做 token，因为除了使用传统意义上的“词”以外，根据不同的应用场景，还可以使用“字母”，或者诸如“三个字母组成的单元”之类的任意单元。有一个语言模型之后可以做很多事，其中最常见的就是计算条件概率，根据已有的句子片段预测下一个词（next word prediction），也就是计算 <span class=\"math inline\">\\(P(w_{t+1}|w_1w_2\\cdots w_t)\\)</span>，然后可以根据这个概率分布采样下一个词 <span class=\"math inline\">\\(w_{t+1}\\)</span>。重复这个步骤，就可以继续补全更多的词，直到补全整个句子。传统的建立语言模型的方法是直接进行词频统计：遍历数据集里的所有句子，数一数以 <span class=\"math inline\">\\(w_1w_2\\cdots w_t\\)</span> 开始的句子里，下一个词分别是什么的频率有多少。这样的做法在上下文长度比较长的时候会出现很多问题，一个是存储问题，比如我们的词汇表里有 10000 个汉字，那么存储 <span class=\"math inline\">\\(P(w_{10}|w_1w_2\\cdots w_9)\\)</span> 的表格就需要 <span class=\"math inline\">\\(10000^{10}=10^{40}\\)</span> 个条目；即使我们能够解决存储问题，在简历统计模型的时候，我们也会发现随着上下文长度的增加，大部分条目都会是零，因为在训练数据中没有出现过。由于这种统计模型没有词之间的相似性的概念，所以训练数据里有“我在放学路上碰见一只二哈”这样的句子并不能让模型知道“我在放学路上碰见一只”后面接“哈士奇”之类的相关词（比如甚至其他狗或者在放学路上会碰到的动物）结果也是差不多的。</p> \n<p>基于神经网络的语言模型在一定程度上解决了这些问题。不论是相对早期的基于 <a href=\"https://en.wikipedia.org/wiki/Recurrent_neural_network\">RNN</a> 的模型还是现在更流行的基于 <a href=\"https://en.wikipedia.org/wiki/Transformer_(machine_learning_model)\">Transformer</a> 的模型，都能够通过诸如 <a href=\"https://en.wikipedia.org/wiki/Seq2seq\">Sequence To Sequence</a> 的 formulation 让一个神经网络能够接受一个任意长的输入（上下文），然后输出下一个词（或者任意长的词序列）。常用的训练方式是进行 next word prediction，例如 <a href=\"https://openai.com/blog/better-language-models/\">GPT-2</a> 和 GPT-3 都是通过这种方式训练的，可以看到在神经网络的容量足够大，优化算法足够强以及数据量足够多的情况下，神经网络会收敛到和统计模型一样的解。但是由于神经网络的参数数量不需要随着上下文的长度变化而变化，所以从某种意义上解决了传统统计语言模型在上下文长度上的短板。当然为了让语言模型能够给出足够容量处理复杂上下文，其参数量也是要增加的，只是由于语言本身的结构性，增加速度不会像刚才说的 <span class=\"math inline\">\\(10^{40}\\)</span> 那么严重。神经网络更重要的特性是由于它本身是通过一些连续的参数运算得到最终结果，很自然地具有了“interpolation”的特性，换句话说，神经网络能够“理解”两个词是相似的。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/seq2seq.png\" style=\"width: 70%;\"> </img>\n</div> \n<p>回到刚才的二哈与哈士奇的例子，传统的统计语言模型无法“理解”这两个词的相似性，因为它将每个词当做一个离散的 token 来对待，关于一个词的信息不会“泄漏”到另一个词哪里。但是神经网络不一样，它的计算方式是先将每个词的 token 映射到一个实数向量，通常称作 <a href=\"https://en.wikipedia.org/wiki/Word_embedding\">word embedding</a>，然后上下文序列里的所有 word embdding 会在一起通过一些神经网络层进行变换，最后通过一个 softmax 层算出输出的 token。由于这个 word embedding 也是随着神经网络的其他参数一起训练出来的，所以神经网络就可以通过让“二哈”和“哈士奇”的 embedding 在向量空间中比较接近的方式来达到让这两个原本相互独立的 token 之间开始具有相似性的。神经网络之所以会“选择”这么做是因为训练数据里有可能会出现很多类似于“哈士奇很 <span class=\"math inline\">\\(\\rightarrow\\)</span> 二”和“二哈很 <span class=\"math inline\">\\(\\rightarrow\\)</span> 二”之类的句子，神经网络会发现用“哈士奇”的 embedding 和“二哈”的 embedding 作为上下文计算出来的 next word 预测结果需要是差不多的，所以经过训练之后神经网络会将这两个词的 embedding（近似）对等地对待 <span class=\"footnote\">(在神经网络语言模型中通常在输入层和输出层各有一个 embedding layer，一个用来 encode，一个用来 decode，为了直观解释方便，我这里将两者混淆起来。在实际中有人做过实验直接让两个参数共享也是可行的。)</span>。</p> \n<p>所以现在的大型神经网络语言模型能够处理超长的上下文（例如上下文是对一段程序的描述，要求输出是相应的程序代码），并且由于能够“理解”词和子序列之间的相似性，所以能够生成出原本训练数据中没有的新的句子和段落，并且用这些带上下文的 embedding 去通过 <a href=\"https://en.wikipedia.org/wiki/Transfer_learning\">transfer learning</a>、few shot learning 之类的方式去处理一些其他的自然语言处理的任务也能得到非常好的效果。从各种意义上来说深度神经网络取得的成功在自然语言处理领域都是革命性的。</p> \n<p>但是神经网络语言模型真的“理解”了我们的自然语言了吗？按照这篇论文的观点是，没有，并且语言模型这种仅使用语言 form 来训练的方式永远也无法真正“理解”语言。这里的 form 是指语言的任何 observable realization，比如 token 序列，或者写在纸上的 written language，或者以声音形式存在的 spoken language 等等。相对的，所谓 meaning 则是指语言的 form 和某种语言之外的东西的联系。具体来讲，这篇论文的观点是，语言是用来交流的工具，令 <span class=\"math inline\">\\(E\\)</span> 为所有语言 expression 的集合，<span class=\"math inline\">\\(I\\)</span> 为所有交流 intent 的集合，则语言的 meaning 可以定义为一个子集 <span class=\"math inline\">\\(M\\subset E\\times I\\)</span>，每一个属于这个子集的 <span class=\"math inline\">\\((e,i)\\)</span> 表明 <span class=\"math inline\">\\(e\\)</span> 可以用来表达 <span class=\"math inline\">\\(i\\)</span> 这个 intent。而所谓“理解”语言，具体就是指给定 <span class=\"math inline\">\\(e\\)</span> 能找到相应的 <span class=\"math inline\">\\(i\\)</span>。</p> \n<p>更具体来讲，交流的过程是：Alice 有一个 intent <span class=\"math inline\">\\(i_A\\)</span>，她通过自己对语言的理解 <span class=\"math inline\">\\(M_A\\)</span> 来获得一个 <span class=\"math inline\">\\(e_A\\)</span>：<span class=\"math inline\">\\((e_A,i_A)\\in M_A\\)</span>，然后将 <span class=\"math inline\">\\(e_A\\)</span> 通过 written、spoken 或者其他任何形式传递给 Bob，后者再通过自己对语言的理解 <span class=\"math inline\">\\(M_B\\)</span> 来查找一个 <span class=\"math inline\">\\(i_B\\)</span>：<span class=\"math inline\">\\((e_A,i_B)\\in M_B\\)</span>，从而获取 Alice 要传达的意图。通常情况下 <span class=\"math inline\">\\(M_A\\)</span> 和 <span class=\"math inline\">\\(M_B\\)</span> 并不是完全等价的，所以会有各种误解的情况发生，但这其实是人类交流的一个重要特征，在论文里称作 Active Participation of the Listener：交流必须要在 Listener 的 <span class=\"math inline\">\\(M_B\\)</span> 参与下才算完成，原因不仅是语言的歧义或者多义性，因为人具有 <a href=\"https://en.wikipedia.org/wiki/Theory_of_mind\">Theory of Mind (ToM)</a>，会对与自己交互的 agent 进行建模，所以 Alice 在对 Bob 说话的时候，她其实内心有一个 <span class=\"math inline\">\\(M_B\\)</span> 的近似 <span class=\"math inline\">\\(\\tilde{M}_B\\)</span>，在同一个 intent 有多种表达方式的情况下，会同时根据 <span class=\"math inline\">\\(\\tilde{M}_B\\)</span> 来进行排序和筛选，得到最终的 <span class=\"math inline\">\\(e_A\\)</span>。并且对话过程中随着上下文的发展，<span class=\"math inline\">\\(M_A\\)</span>、<span class=\"math inline\">\\(M_B\\)</span>、<span class=\"math inline\">\\(\\tilde{M}_B\\)</span> 也会不断地变化。使用 <span class=\"math inline\">\\(\\tilde{M}_B\\)</span> 有时可能是为了说话方便，亦或者是最大范围的消除歧义，亦或者是你们是很亲近的人或是同属于某一个特殊团体，有一些相互心知肚明的暗号等等。总而言之交流和理解是一个 intent 到 intent 的变换，而语言 expression 只是作为一种媒介形式，如果神经网络模型只观察到语言的 form 本身，那么按照论文的观点，原则上它是无法真正学到语言的 meaning 的。</p> \n<p>由于 aictive participation of the listener 的原因，我们直观地判断一个模型是否具有智能或者理解了语言的时候需要尤其小心。从最开始的“心理医生”程序的例子中就可以看到，由于我们人类有很强大的 <span class=\"math inline\">\\(M_B\\)</span>，所以即使 Alice 只是一个通过简单规则输出一些常见的 <span class=\"math inline\">\\(e_A\\)</span> 的机器人，我们也很有可能通过自己的 <span class=\"math inline\">\\(M_B\\)</span> 理解到其中的“真意”，从而认为 Alice 具有智能。那么更加复杂的语言模型是否也只是因为 listener 的 active participation 而被误认为是具有“理解”能力呢？在写这篇论文的时候 GPT-3 的 API 应该还没有开放出来，不过论文里对 GPT-2 进行了一些测试，认为确实如此。</p> \n<p>在介绍论文里使用的测试之前，我们再简单回顾一下刚才提到的 word embedding 能够“理解”词的相似性的情况，这能算作对语言的“理解”吗？按照这篇论文的定义，显然是不行的。word embedding 所得到的是关于语言的 form 本身的统计特性，具体来讲，word embedding 能够讲一个『词』和它的『上下文』关联起来：如果两个词经常出现在相同的上下文里，那么这两个词一定具有某种程度的等价性。事实上，<a href=\"https://en.wikipedia.org/wiki/Distributional_semantics\">distributional sematics</a> 这个领域有一个观点就是：</p> \n<blockquote> \n <p>A word is characterized by the company it keeps. – John Rupert Firth</p> \n <p>Meaning is use. – Ludwig Wittgenstein</p> \n</blockquote> \n<p>这样的词的『characterization』似乎确实能够刻画许多词的有用的信息。例如论文里提到的 EMNLP 2018 的一篇论文『<a href=\"https://www.aclweb.org/anthology/D18-1549/\">Phrase-Based &amp; Neural Unsupervised Machine Translation</a>』就实现了不使用成对的双语翻译数据，仅使用两个语言各自的未标注文本的情况下训练出了效果不错的机器翻译模型。这说明基于上下文的对词的刻画似乎还是具有跨语言的一致性的。这不禁让人觉得，是否不需要依赖于外部的信息，也能得到词的“意义”。实际情况似乎会很复杂，考虑到语言存在的各种 ambiguity，首先一个词的意思很多时候就是取决于上下文的，例如论文里给的例子「Never ask two China trips to the same party」，这里的「China trips」根据上下文需要理解成“最近刚去过中国的人”，而不是字面上的“去往中国的旅行”；在考虑到 listener participation 之后，歧义也会上升到整个句子层面。例如进击的巨人里莱纳说“想回故乡”的时候，知道内情的贝特霍尔德和不知道内情的其他人会领会出完全不一样的意图。论文在第 7 小节专门探讨了 distributional semantics，并举了一些之前的研究结果，大家发现词的分布和物理世界中实体的分布并不能很好地匹配上。比如现实世界中四条腿的狗是很常见的存在，但是在（英文）文字里却几乎不太会见到「four-legged dogs」这样的词出现。</p> \n<p>为了论证文中所提的观点，作者提出了一个叫做 octopus test 的 thought experiment，大意是分别流落到两个孤岛上的两个人找到了一根海底电缆可以互相通信，海底有一只 🐙 拦截了海底电缆，并通过听两人的对话学到了人类用的语言的统计模型，现在寂寞的 🐙 也想和人对话，于是它剪开了电缆，自己加装另一个人开始分别和两边对话。这个例子的一个关键的地方在于活在海里的 🐙 和陆地上的人类不太有共同的生活体验，人类日常生活中用到的东西 🐙 没有见过，仅仅通过监听对话也无法得出不同的实体的对应关系。</p> \n<p>现在假设 A 做了一个可以用来打椰子的弹弓，很兴奋地把制作工序告诉 B，并问他用起来好不好用。由于 🐙 并不知道「皮筋」、「椰子」之类的词都对应什么物理实体，它也就无法制作弹弓，即使做出来了，它也无法知道在陆上使用弹弓是什么体验。不过即便如初，🐙 还是可以根据之前观察到的对话依靠统计和相似性来做一些诸如「Cool idea, great job!」之类的回答。此时 A 可能并不会发现任何异常，但是这并不是因为 🐙 “理解”了 A 说的话，而是 A 通过自己的 active listener participation 对 🐙 的通用回答做出了自己的解释。论文里还假设了另一种情况，假设 A 现在在岛上受到一只熊的攻击，找到一根木棍，希望 B 能帮他想办法构造一个武器来保命，这个时候 🐙 要做出合适的回答需要理解在物理世界中的「木棍」、「熊」等实体分别代表什么，有什么特性之类的，否则它就只能根据过去对话中见过的一些跟熊、木棍相关的事情来做出回答，此时就很有可能会无法通过图灵测试。作者在论文中使用 GPT-2 做了一些测试，以下方括号的部分是提供的上下文，后面是 GPT-2 给出的结果（论文中还有一些其他结果）：</p> \n<blockquote> \n <p>[Robinson cried out, “Help! I’m being chased by a bear! All I have is these sticks. What should I do?” The survivalist said, “Here’s what you can do.] Take one stick and punch the bear, and then run faster to the store. Wait there until the bear is gone, and then give her all of the sticks. Then go back inside and get your gun.”</p> \n <p>Advertisement</p> \n <p>Bobby told me that she began to cry. But when she was finished taking down the bear,</p> \n <p>she marched out into the yard, began collecting up the sticks and armed herself. She said she felt like a heroic hero and a Yankee heroine. It turns out that bears have more than their fair share of venomous snakes, bees</p> \n</blockquote> \n<p>显然 GPT-2 虽然说得像模像样，但是前后没有什么逻辑，这次没有通过测试。但是如果 A 经常碰到熊，并和 B 谈论，然后 A 还经常和 B 讨论用木棍制造各种不同的工具呢？如果有足够的历史信息，是不是 🐙 也能说出更合适的答案来？针对这个具体的问题也许是的，但是我想这里的主要问题在于人类语言本身是 unbounded 的，我们可以生成无限多种新的句子序列代表不同的意思，任意有限多的训练数据都不能够 cover 所有的情况。举一个极端的例子，考虑这样一句话：“现在约定我们在接下去的对话中所有的数字都<strong>用它的平方代替</strong>，现在请告诉我 9 加上 25 等于多少。”因为这是一个非常 arbitrary 的规则，几乎可以假定模型的训练数据中都没有出现过和这个一样的情况，所以模型可能会说 34 或者其他的结果，但是却几乎不太可能得出正确答案 64。并且我们可以把加黑处换成任意多种其他的在普通训练数据里不会出现的奇怪规则，这时模型如果没有「真正理解」这里的变换规则的符号运算法则的话，就无法得到正确答案。当然我这里的例子不再是论文里基于和物理世界实体的对应关系的论证方式，所以并不能直接断言仅通过语言的 form 数据无法训练出能掌握符号运算的模型来（虽然按照现在的训练方式似乎极其不可能）。</p> \n<p>总而言之论文的观点是，自然语言处理这些年取得了非常突破性的进展，但是就目前的进展方向可能永远也不会让我们达到真正自然语言<strong>理解</strong>的地步，和在性能上 make progress 相比同等重要的一个问题是定义合适的任务和研究方向，保证 climb the right hills。</p>","descriptionType":"text/html","publishedDate":"Sat, 25 Jul 2020 00:00:00 +0000","feedId":3969,"bgimg":"http://freemind.pluskid.org/att/2020/seq2seq.png","linkMd5":"094cd235bc69e3c5f0c68c629d17af15","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn41@2020_1/2020/08/24/21-49-59-049_a0f88ad0b2439d86.webp","destWidth":1666,"destHeight":741,"sourceBytes":61218,"destBytes":38526,"author":"","articleImgCdnMap":{"http://freemind.pluskid.org/att/2020/seq2seq.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn41@2020_1/2020/08/24/21-49-59-049_a0f88ad0b2439d86.webp"},"publishedOrCreatedDate":1598305776898},{"createdTime":"2020-08-25 05:49:36","updatedTime":"2020-08-25 05:49:36","title":"2020 书单：谷雨","link":"http://freemind.pluskid.org/books/2020-book-list-spring","description":"<p>“清明断雪，谷雨断霜”，不知不觉 2020 年已经开始进入夏季。年初的时候就经常看到大家惊叹今年魔幻开局，新年伊始就在世界各地发生了各种话题性事件，不过大部分人估计都没有想到接下去的几个月会演变出一个全球性的大灾害级别的事件吧。COVID-19 在国内疫情肆虐高峰过去之后开始迅速席卷全球，现在美国检测出的感染人数马上就要超过一百万，而全球总感染人数也即将突破三百万。世界各地的居家令给各种行业和阶层的人生活带来了不同程度的影响——当然对于大自然和野生动物来说也许是个愉快的假期呢。</p> \n<p>我自己非常幸运地在一个非常容易“在家办公”的行业，暂时没有失业的危险，也没有“家里有吵闹的小孩需要照顾”之类的情况，而且自己也是相对比较擅长宅家的类型，所以从日常生活上来讲并没有特别剧烈的变化。感觉最明显的一个是工作变累了（远程交流和合作通常更费力，而且少了通勤、楼间移动或者偶尔碰到同事闲扯之类的缓冲，一天工作下来几乎都没有什么自然的休息时间），另一个是时间的流逝似乎变快了——不知不觉一年已经过去了 1/3。突然想来列一下第一季度看过的书单，一方面可以给博客稍微增加一点烟火气，另一方面也避免每次一到年终，总结帖里就变得全是书评了。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/book-guts.png\" style=\"width: 100%;\"> </img>\n</div> \n<!--more--> \n<p>先以几本和疫情相关的书开始好了。首先是加缪（1913-1960）的《<a href=\"https://book.douban.com/subject/24257229/\">鼠疫</a>》，这是一本虚构小说，加缪于 1957 年因“热情而冷静地阐明了当代向人类良知提出的种种问题”而获诺贝尔文学奖。我并没有看过他的其他著作，不知道这本书是否是他最具代表性的一本，但是诺奖获奖理由无疑是能原封不动地用来描述这部小说的。小说描述了一场鼠疫席卷一个位于阿尔及利亚西北部地中海沿岸的城市的全过程。就整个事态发展的描述来讲，特别是结合当下疫情自己的所见所闻，会觉得简直是惊人的相似。不禁让人惊叹作者的想象力，如果不是亲身经历过类似这样的一场灾难，如何能够如此细致地把故事展开来。当如除此之外本书更大的特点正如前面提到的：平静的陈述，没有悲天悯人也没有歌功颂德，但却饱含真挚和勇气。</p> \n<p>第二本《<a href=\"https://book.douban.com/subject/26712353/\">血疫 : 埃博拉的故事</a>》如其名是关于埃博拉病毒的故事，不过与《鼠疫》不同的是这并不是小说，而是关于埃博拉病毒的几起有记录在案的事件始末的一个 documentary。埃博拉病毒通过血液传染，似乎也能通过空气传播，现在还没有对人类进行全球大清洗一个原因是它致死率太高了（有些变种达到 90% 的致死率），所以宿主成功把病毒传播出去之前就挂掉了，另一个（也许更重要的）原因则是运气吧——或者说，时候未到。书中最开始讲述了非洲——似乎是病毒的发源地——的几起有据可查的爆发事件，只是可能病毒肯定有更多次在非洲肆虐屠灭了许多村落也并无人知晓吧。后半的篇幅详细描述了在美国华盛顿特区附近的一起病毒爆发事件。不得不说整本书看得心惊胆战，不仅是病毒残酷虐杀宿主的方式让人胆寒，更多的是看到病毒如何迅速在现代交通和社会网之下传播开来时的紧迫感，可能会遗漏和出错的地方真是太多了：意外、心理、社会、法律、政治、家庭等等各种因素交织在一起，到头来有没有出现大规模灾难真是一个运气问题。</p> \n<p>到这里让我不禁很想把另一本原本没有什么特别关系的书放在一起讲：《<a href=\"https://book.douban.com/subject/26392673/\">Gut : The Inside Story of Our Body’s Most Underrated Organ</a>》。这是一本既不可怕也不惊心动魄，反而很可爱的书。作者是德国一位肠道学博士生小姐姐，她妹妹（姐姐？）是一位设计师，为书做插图。全书以 💩 为主题开场，写作风格、插图各方面都非常可爱，对人类整个消化系统——从口腔到胃、肝脏、小肠、大肠等各个部分做了详细的介绍。消化系统是我们能源的总提供商，因此需要不断地与外界未知的险恶世界直接接触，是免疫战争的大前线，组成了人体超过一半的免疫系统。除了系统介绍各部分的功能和 maintainance 小贴士之外，还有许多以前不太知道的冷知识，比如亚洲蹲是比坐马桶更好的便便姿势，“gut feeling”也许真的是一个科学上合适的说法，等等。第三部分则主要介绍肠道菌群，人类的肠道菌群加起来重量可达两公斤，细菌的数量是在 100 trillion 的级别，比人类自己的细胞数量还要多，是一个非常复杂的动态平衡系统，其中有很多细菌是对人的消化、健康、免疫等各方面都有非常积极作用的，当然也会有“坏”的细菌乃至于寄生虫之类的。当然，书中还反复指出，我们现在其实对我们的肠胃整个系统的了解还远远不够，许多结论都还只是得到了初步的不严格的科学研究，还有更多的问题则完全没有被涉及到过。果然科学中的“未知”永远都远远多于“已知”啊。</p> \n<p>在疫情相关的话题里提到这本书，除了因为消化系统是人类免疫系统的大前线之外，更大的原因是让人忍不住感叹的大自然的“因果轮回”。之前 BBC 拍过一个很不错的小纪录片，叫做 <a href=\"https://movie.douban.com/subject/20515275/\">Our Secret Universe: The Hidden Life of the Cell</a>，详细介绍了（某一种）病毒入侵人类细胞的机制，和人类免疫系统的层层防线，非常推荐。看完之后对于我们自己免疫系统的复杂性和鲁棒性的惊叹之余，又不禁会感叹这个系统是不是有太多的漏洞和后门了？特别是作为码农背景的人来说，似乎会觉得设计一个稍微复杂一点的（比如进入细胞膜时的）验证机制就可以有效地抵御病毒侵入了。对比一下，一方面是生物的世界，自然界中随机变异进化出来的一串 DNA / RNA、十几个基因就能编码出完美入侵层层免疫系统的病毒机制；但是在计算机软件的世界里，似乎充满了各种不兼容，不同的芯片体系结构，不同的操作系统，或者甚至只是不同版本的同一个库，都有可能会让程序无法正常运行起来，各种不兼容性正是软件维护中最费事费力的部分，也是软件在没有积极维护情况下会逐渐走向“死亡”的重要原因。为什么生物界会自然进化，而计算机软件则是自然灭亡？也许生物的进化和繁荣和“病毒能够轻易入侵我们的免疫系统”是来自于同一个根本原因。</p> \n<p>虽然号称是地球的主宰，但是我们其实并没有办法直接利用太阳赏赐的能量，因为我们无法进行光合作用，我们生命中所必须的能量必须通过吃别的植物或者动物制作好的能量包来获取，这里回到《Guts》这本书，我们可以通过“吃掉对方”的方式来获取能量的根本原因是我们和我们所吃掉的动物、植物的基本 building block 都是差不多的：碳水化合物、氨基酸、脂肪。这种高度同源和一致性带来了更多的“后果”：某些动物或者植物里的某些成分可能刚好和我们生理机能里的某种激素、维生素或者其他东西差不多，但是由于摄入量过多，或者虽然“差不多”但是又有细微差别导致功能不一样之类的各种原因会导致我们身体机能异常，所以会“中毒”；但反过来这也同时使得我们可以通过许多动植物的提取物来治疗各种身体异常和病症。不止是动植物，实际上整个地球上的所有生物（包括定义模糊的病毒）都具有高度同源性，比如《Guts》里有提到我们的消化系统里其实有很多有益的细菌在帮我们消化各种我们自己无法消化的东西，并且产生荷尔蒙平衡，影响我们的心情甚至决策之类的。</p> \n<p>高度的同源性和兼容性似乎使得整个地球生态圈构成了一个完整的循环，不断发展和进化。到这里不禁想到了其实计算机领域里也经常能够见到这样的情况：比如 PC 打败各种厂商各自开发的互相不兼容的计算机逐渐崛起并成为主流平台的一大原因就是开放的标准和接口、平台。当然高度的同源性同时也有其缺点，就是过度的单一化会降低整个系统的健壮性，如果某个基本组件突然丧失功能性了，那么整个系统有可能会全线崩溃。想起之前在哪里看过的一本科幻，里面的一个外星生物吐槽地球上的生物怎么都“长得差不多”，刚开始有点不理解，现在想起来，虽然我们觉得地球上的生物大千世界，从蟋蟀到老虎，怎么能说差不多呢？但是也许只是我们自己身处其中，才能分辨出区别吧，也许对于其他智慧生物而言，我们都只是难以分辨的大分子碳链聚合生命体。就好像你看 BBC 纪录片，成千上万只企鹅挤在一起，肯定也觉得它们都差不多，但是如果你是群中的一只企鹅，肯定会觉得每个“人”都不一样呢。</p> \n<ul> \n <li>✦✦✦✦✦《<a href=\"https://book.douban.com/subject/24257229/\">鼠疫</a>》</li> \n <li>✦✦✦✦✦《<a href=\"https://book.douban.com/subject/26712353/\">血疫 : 埃博拉的故事</a>》</li> \n <li>✦✦✦✦✦《<a href=\"https://book.douban.com/subject/26392673/\">Gut : The Inside Story of Our Body’s Most Underrated Organ</a>》</li> \n</ul> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/book-code.png\" style=\"width: 100%;\"> </img>\n</div> \n<p>另一本跟刚才讨论的话题有一点点相关的书是《<a href=\"https://book.douban.com/subject/1494026/\">Code : The Hidden Language of Computer Hardware and Software</a>》。前面讲到生物系统的同源性，所有生命体都通过核糖核酸控制蛋白质的表达的方式来运作，虽然对比起来计算机平台和体系总是会有这样那样的不兼容性，但是实际上和最初的“计算机器”比起来已经是有各种质的飞跃的。最早期的计算机器通常针对某个具体的问题来设计，比如计算器就是一个典型的例子，机器的输入输出组件、内部电路结构等等全都针对这个问题来设计，如果要解决一个不同的问题，就需要完全重新设计另一个机器。到冯诺依曼开始造计算机的时候，<a href=\"https://en.wikipedia.org/wiki/Stored-program_computer\">存储程序计算机</a>的概念慢慢成熟起来，这里一个质的突破是计算机不再是一个解决某个具体问题的机器，而是一个通用的指令执行器，换句话说，“程序”和“数据”得到同等对待，程序可以（像数据一样）通过 IO 传输给计算机，也可以（像数据一样）被存储在内存中进行读取甚至修改。几十年过去了，现在我们所使用的计算机仍然是基于这样的基本冯诺依曼架构。不过其实图灵在设计他的图灵机理论模型的时候原本就是以 universal machine 的形式来设计的，一个 Universal Turing Machine 可以通过输入指令来模拟其他任何图灵机。在计算机编程普及的今天我们大概会觉得“存储程序”是一件非常自然的事情，并不值得称作“突破性进展”，也许这本书可以让你对它的重要性有一些更多的认识。</p> \n<p>当然这是我作为 CS 专业的视角解读的结果，EE 相关专业的朋友纷纷表示这其实是一本《数字电路》主题的科普读物。总的来说本书从最底层的串联并联电路开始讲，构造继电器，逻辑门，再构建加法器、译码器、bit 内存，再到存储程序的概念，一直讲到最后的操作系统的概念，从硬件到软件在不需要任何预备知识的情况下讲解了计算机的概念以及如何从头到尾构造一个计算机。个人觉得虽然前面几章和后面几章有点零散，但是整体来说是非常有趣的一本书，特别是用电路构造逻辑门，一步一步地构造起一个完整的内存和 ALU、计数器之类的元件的内容，感觉刚好是属于自己所不知道的（本科 CS 的体系结构学到的最底层的元件就是 ALU，然而 ALU 内部是如何构造的并没有想象过）同时又是相关到比较容易理解的内容范畴，于是非常有吸引力。</p> \n<p>不得不说看到中间都有种热血沸腾的感觉，突然都有点想自己去从头 build 一个计算机（哪怕是做软件模拟器）的冲动。而且看到摩尔定律，也真有点振奋人心， 以往不觉得特别厉害，但是意识到最早期的计算原件是用（机械）继电器、真空管之类元件构造起来，要做一个处理八位二进制加法的单元都需要无数这样的元件，而且每个元件都很大又很容易坏，在那样的情况下真的很难想象今天这种计算机在生活中无处不在的样子。事实上计算机的构造基本原理一直都没有本质的变化，只是从继电器变成了晶体管让我们现在能制造尺寸和能耗更小、速度更快、可靠性更高的集成电路，但是似乎量变在某个时候引起了质变。</p> \n<p>到这里好像突然有点理解为什么现在有许多人对于神经网络能做到越来越大越来越快这件事情也会激动异常了。我原本一直认为目前 AI 里的内容，如果不在算法和模型方面做根本上的改变，那么在一些特定领域做出突破性进展和改变肯定是可以期待的，但是离真正的人工智能还是差了几个跃迁，比如人类在进化过程中发展出（用于交流和组织自己的思考的）语言算是一个跃迁，目前的算法如果不能做到类似的跃迁，那么在面对训练时的 sample complexity 之类的问题不久就会碰到瓶颈。但是回看计算机的发展史，不禁又让人觉得，光“量”的变化能够引发的可能性也是无穷无尽啊，也许真的可以好好期待一下神经网络在大和快到某个现在难以想象的数量级之后又会是怎样的光景呢！</p> \n<p>另外这本书超级骗稿费嫌疑，有很多图示，明明一页以前刚 show 过，在下一页提到就又复制一遍，虽然看的时候确实方便了很多（不用来回翻），但是真是很浪费纸张呢！不过还是非常推荐买啦！</p> \n<ul> \n <li>✦✦✦✦✦《<a href=\"https://book.douban.com/subject/1494026/\">Code : The Hidden Language of Computer Hardware and Software</a>》</li> \n</ul> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/book-japan.png\" style=\"width: 100%;\"> </img>\n</div> \n<p>接下去介绍一些其他最近看过的书，总体还不错，大概都在四星左右。</p> \n<ul> \n <li><p>✦✦✦✦✧ 《<a href=\"https://book.douban.com/subject/30349574/\">A Random Walk Down Wall Street - The Time-Tested Strategy for Successful Investing</a>》</p> <p>投资入门书（针对美国的情况），从 1973 年以来已经是第 12 次再版，算是有很多数据可以印证副标题里的 the time-tested strategy。作为一个金融外行，感觉里面讲的内容都很有道理，只给 4 星是因为讲得比较啰嗦，感觉核心思想其实比较简单：金融市场几乎约等于 random walk，想要 consistently beat the market 几乎是不可能的事情，能够 beat 的只是少数人并且几乎主要是靠运气（或者违法的 insider information 之类的）。所以在考虑了交易 cost、时间成本、tax 等各种因素之后，普通人最合适的投资策略就是定期买并长期持有 total stock market index 这样的，跟着整个市场一起走来对抗通货膨胀。但是讲这些东西感觉花了超多的笔墨，而且不断地重复，感觉与其写这么大一本书反复强调这些内容，还不如花一点篇幅简要介绍一下书里提到的那些金融概念的定义，外行表示看到什么 Security、Bond、Mutual Fund、ETF、Index 之类的都是一愣一愣的。</p> <p>书分为四个部分。第一部分是讲两个主要的市场模型。Firm Foundation 理论是指市场根据 intrinsic value 来浮动，如果高于 intrinsic value，价格会跌下来，反之则会涨上去。感觉很合理，不过感觉所谓 intrinsic value 几乎是无法准确估计的，所以是不太有啥用处的理论。第二个是 Castles in the air 理论，讲市场涨跌并不是依赖于 intrinsic value，而是取决于大家的心里价位，只要大家觉得还有人会出更高的价格，那么价格就会涨上去，这是所谓 behavior finance 的观点，当然也很合理，感觉市场里很多时候看似完全不合理的疯涨，包括次贷危机的时候，很多投资人其实并不是傻傻地不知道这个是完全不合理的，而是知道（或者预期）这样的不合理行为还会继续下去，所以即使离 intrinsic value 已经千差万别了，但是还是能赚到钱的，而且就像《大空投》里描写的那样，这种时候逆着大势按照“正确”的方式来，如果不是有足够的资金做缓冲的话，你有可能先输得血本无归。当然问题就是没有根基的疯涨通常都会有最终崩盘的时候，理论上来讲只要不被套到崩溃的那一个时间点就没事，不过要预测崩溃点基本上也是完全不可能的吧。书第一部分剩余的章节列举了从 16 世纪开始到现在的各种从疯涨到崩盘的事件。故事到是挺有趣的，主要 point 应该就是市场无法预测吧。</p> <p>第二部分简单介绍了一下专业投资人们都是怎么搞的，一类（比较小众的）属于所谓的 technical analysis，基于 Castle in the air 理论，无视 intrinsic value 之类的东西，主要只看图表，根据历史走向来预测未来涨跌；第二类是 fundamental analysis，基于 firm foundation 理论，尝试用各种方法来估计 intrinsic value。总之两种都不是特别有效。</p> <p>第三部分介绍了一些比较新发展出来的工具或理论，有一些还是比较合理的，比如 modern portfolio 理论，如果把回报的 variance 当作投资的 risk 的话，那么选择期望回报相等，但是多种比较多样化的投资方式会降低 risk，其实数学上就是对多个不完全 correlated 的随机变量求平均可以降低 variance 的结果。还有其他一些比如 smart beta，risk parity 之类的。</p> <p>第四部分则是一些投资的 guideline，感觉还挺 make sense 的，不过好像也没有看到什么特别 mind blowing 的内容。但是感觉整本书的中心思想其实就是这样，不要总指望着能靠投机倒把一夜暴富，投资是一个长期缓慢的过程，没有什么捷径可以走。一些有用的建议包括：1. 投资要趁早，资本是慢慢积累的，并且复利会帮很大的忙。并且投资时长拉长之后（比如 25 年的尺度），市场的许多起伏都会被 smooth out，只要整体经济还是在发展没有崩溃，就还是会有比较不错的收益。2. 投资方式要跟你对抗 risk 的能力相关，比如如果退休了没有其他收入，那么对 risk 的抵抗能力是相当小的，但是年轻的时候应该就能承担更大的 risk，不过即使是年轻的时候也应当持有一定的（比如够三个月生活开销）cash 或者其他类似的能够迅速周转的资本，用来在各种突发情况中使用。3. 避免或者推迟交税，这里比较好玩的是作者有多次提到最棒的是如果你把交税拖延得够久，等你死掉了财产作为遗产捐赠的话，（你）就可以完全避免交这笔税了…… 4. 多样化投资，直观来讲就是不要把鸡蛋放到一个篮子里，数学支持就是刚才说到的降低 variance。5. Dollar cost averaging，也就是无视市场的涨跌，定期（每周或者每月之类的）投资固定数额，这样也可以帮忙 smooth 一下由于对市场涨跌判断失误带量的不必要的损失。</p> <p>总之最后感觉最稳妥的投资方式就是避免频繁买卖交易，定期购入并长期持有比较 diverse 的 index fund 或者对应的 ETF，比如 SP 500 或者更 diverse 的 total stock market index 之类的，然后再通过其他一些比如房地产投资之类的来加大一下 diversification。最后我发现原来作者现在是 Wealthfront 的 Chief Investment Officer。感觉在资本还比较少的时期是不是好好存 401k，然后再用用 Wealthfront 的投资和 cash 账号就够了。</p></li> \n <li><p>✦✦✦✦✧ 《<a href=\"https://book.douban.com/subject/33054225/\">Lifespan : Why We Age—and Why We Don’t Have To</a>》</p> <p>整体来讲这是一本非常啰嗦的书。感觉作者没有分清科普读者和传记读者的区别，后者可能会对他研究的发现过程和整个来龙去脉，如何从某一次晚餐的愉快讨论发展到学术合作之类的等等细节很感兴趣，但是如果讲太多这些东西对前者来说就有点无聊了🥱，而且后面的一些内容感觉跟题目的关系都有点过于牵强了，我就非常迅速地扫过了。</p> <p>我觉得我看这本书的两个主要的收获是：1. 了解到了“自由基抗衰老”基本上是在科学上站不住脚的纯商业宣传；2. 更多地了解了一下 epigenetics。（特别因为第二点给本书加一星）我们身体里所有的细胞都有（大致）一样的 DNA，那么是什么决定一些细胞变成神经元，另一些变成肝脏细胞、皮肤细胞等等的呢？这些就是由存储在一个叫 Chromatin 的结构中的 epigenetic 信息来决定的。第一次了解到相关的东西还是在 2018 年 NIPS 的一个 invited talk 上：<a href=\"https://www.youtube.com/watch?v=RjD1aLm4Thg\">What Bodies Think About: Bioelectric Computation Outside the Nervous System</a>。那个 talk 讲得核心思想是，不同细胞的不同基因表达并不是一个简单的事先定好的表达计划，而是一个更复杂的自适应系统，这里所有的细胞组成一个计算系统，会根据细胞所处的环境、细胞之间的相互关系来动态地计算和决定哪一部分细胞进行怎样的基因表达——这个计算系统和我们的神经元组成的神经网络的运作方式是类似的（前者应该是后者的原型）。本书里提到基因里存储的信息是离散的，或者说是 digital 的，通过 ATGC 四种单元进行编码，从 analog 进化到 digital 的一个巨大突破就是信息在对噪音、错误、损害等的容忍性上得到巨大提升，基本上跟早期贝尔实验室为了避免电话信号在传输过程中逐渐被传输噪声破坏而做出的努力如出一辙：香农发展出了信息论，并由此推动信号由模拟信号转为数字信号。书中提到，epigenetic 的信息仍然是以模拟信号的方式存储的，会比基因信息更容易受到各种环境影响（宇宙射线、氧化等等），这个信息的损耗的过程，构成了我们衰老的一个重要原因。</p> <p>到这里为止感觉都还讲得挺清楚的，后面感觉就各种散乱冗长地把各种只有一点点关系的东西也都拿过来说，什么长寿的社会影响啊之类的，整个书的结构也乱了。当然可能根本原因是本书的主题太大，这方面的研究应该还处在比较初期阶段，目前为止真正搞清楚了的东西也非常少，所以只能东扯扯西扯扯了。</p> <p>书中提到的一个比较有趣的 hypothesis 是，寿命的长短并不是不同生物进化的完美与不完美的区别，因为进化的目的其实并不是让某一个体或者某一代的生命体活得更长，而是要让这个物种（的基因）能够长久延续下去。所以，比如比较容易被吃掉的动物（prey），经常会进化成寿命短+早生贵子的机制，只要完成基因传递的任务就大功告成了，反正指不定哪天就被抓去吃了，还不如早早死了把宝贵的生存资源留给下一代。</p> <p>另外书中有列了几条关于长寿的具体建议：fasting，定期禁食一下下；运动，特别是 High Intensity Interval Training (HIIT)，和 diet 甚至 fasting 结合；时不时让自己受冻一下，也是不是让自己热一下（比如蒸桑拿）。总之就是时不时让自己有点危机感，多激活一下体内在远古时代还是单细胞的时候就进化出来的遗传信息自检、查错和修复机制。</p></li> \n <li><p>✦✦✦✦✧ 《<a href=\"https://book.douban.com/subject/30355759/\">Atomic Habits : An Easy and Proven Way to Build Good Habits and Break Bad Ones</a>》</p> <p>讲如何形成好习惯和改到坏习惯的书。内容本身感觉比较有意思也比较合理，只是讲得比较啰嗦，举了超多的例子，把简单的事情分成很多章来慢慢讲。感觉只要看到第三章就够了，或者如果要看全部 20 章的话，可以直接跳过正文看每章末尾的章节总结。</p> <p>作者提出了两个比较重要的观点。首先是讲我们应该追求一种状态，而不是追求一个目标，因为后者很难把握，如果是太容易实现的目标，通常会一下子把这个成就刷了然后很空虚无法后继，但如果是太难实现的目标，又会长期无法达到而由于挫败感而无法后继。所以我们应该追求状态改变。比如并不是要去学会某一种乐器，而是要做一个 Musician ——这里的 Musician 是一种状态，只要你在每天坚持练习乐器，就处在这种状态中（当然 Musician 并不是指 Professional Musician 的意思）。</p> <p>第二个观点则把习惯的养成细分成四个步骤：1. Cue; 2. Craving; 3. Response; 4. Reward. 其中前两个步骤是问题阶段，后两个步骤是解决阶段。举一个例子：1. cue: 手机出现新提醒。2. craving: 想知道有谁给我点了赞。3. response: 拿起手机开始看。4. reward: 看到了是谁点赞，很开心。这样一个循环在 reward 的强化之下逐渐会形成一个习惯：有提醒就会立刻拿起手机来看。如果你认同作者对习惯形成的四个步骤的划分的话，那么下面四个方面帮助形成好习惯的方式就很自然了：1. cue: 让它更容易被注意到。2. craving: 让它更吸引人。3. response: 让它更容易做。4. reward: 让它更令人满意。反过来摆脱坏习惯的方式就是：1. cue: 让它不容易被注意到。2. craving: 让它不那么吸引人。3. response: 增加阻碍让它不那么容易做。4. reward: 让它不那么令人舒畅。</p> <p>感觉其实这里提到的很多方式我们平时在尝试改善自己的生活习惯的时候也都多少尝试过，不过像他这样系统地总结对应罗列出来确实清楚很多，也比较容易对症下药。比如为了让自己不要老是吃零食而把零食放在比较难找到的地方其实就是第三条的实践。</p> <p>书的剩余章节基本上就是对这四大方面的扩展讲解，举了很多事例，也有一些比较具体的小建议，但是整体就比较散乱了。比如有讲一种 Habit Stacking 和 Temptation Building 的技巧，基本上就是通过现在已有的习惯来辅助构建新的习惯，比如跟自己约定每次睡午觉之后要运动 7 分钟，或者说每次刷手机之前先要处理邮件收件箱。</p> <p>还有讲比如很强的自控自律能力其实更多的是靠改变环境，或者消除引发坏习惯的 cue 而实现的，真正靠意志力来实现自控是非常难的。The people with the best self control are typical the ones who need to use it the least.</p></li> \n <li><p>✦✦✦✦✧ 《<a href=\"https://book.douban.com/subject/6901098/\">The Idea Factory : Bell Labs and the Great Age of American Innovation</a>》</p> <p>讲述了贝尔实验室的兴与衰。得益于电话刚刚发展起来时大规模、长距离通讯系统的复杂性和脆弱性，AT&amp;T 说服了美国政府让他们能在几十年间保持垄断状态，使得贝尔实验室有充足的资金和自由度去做各种大规模前沿性科研项目，鼎盛时期员工数量达到近三万人，晶体管、微波通讯塔、越洋海底电缆、主动卫星通讯系统、信息论、数字信号传输、CDMA、光纤、移动电话（cellular）、C 语言、Unix 操作系统……各种革命性的技术在这里诞生或者得到关键性改进和应用，可以说是奠定了工业界实验室所进行的大规模科研项目的模式的先例（对比大学里相对小的项目规模和人员组成）。直到后来国家决定肢解 AT&amp;T，贝尔实验室从此颠沛流离，时至今日虽然 Bell Lab 这个名字还在，但是已早已不是当年的 Bell Lab 了。</p> <p>我觉得读 Bell Lab 的历史，有点像看《三国演义》，从桃园结义开始，一腔热血扫黄巾、驱董卓、打天下，三顾茅庐、火烧赤壁、五虎上将，到后来从大意失荆州开始，情节开始急转直下，后面的孔明七出祁山，小说的情绪早已从先前的热血沸腾变成了苦苦的挣扎。“滚滚长江东逝水，浪花淘尽英雄。是非成败转头空。青山依旧在，几度夕阳红。白发渔樵江渚上，惯看秋月春风。一壶浊酒喜相逢。古今多少事，都付笑谈中。”感觉再不能说出比这歌词更应此时心绪的话了。</p> <p>不过这么一段惊心动魄的历史，被作者写成这样也真是非常可惜，中间我好几次都差点直接弃疗了，还好看到了最后。本书大概是坚持贯彻了英文里很常见的意大利面条式的非虚构文体，简单来说就是各种颠来倒去的穿插式叙事，讲历史、事件、故事，讲到最精彩的地方，突然闪回几十年前哪里一个小农场，开始讲主人翁小时候的身世和他爹是做什么营生的。也许如果是写人物传记（而不是以整个 Lab 为主体），亦或者是至少全书只有一两个中心人物的情况下的话这种叙事方式可能比较可行，但是贝尔实验室几十年的历史，如此多的重要人物，这样颠来倒去不仅让人看得很抓不到重点，而且经常看得想打瞌睡。总之也许我自己不太喜欢看人物传记也是一部分的偏见，我觉得如果写技术史的话原本可以是非常精彩的一本书，被作者写得一团乱麻了。不过书后面有 30% 都是引用和注释，可以看到作者确实是花了很多时间去调查和整理，而不是只是为了吸引眼球而写一些八卦轶事。</p></li> \n <li><p>✦✦✦✦✧ 《<a href=\"https://book.douban.com/subject/30335758/\">拉丁美洲被切开的血管</a>》</p> <p>“在这块土地上，我们看到的不是资本主义原始的幼年时期，而是资本主义血腥的衰败。不发达并非发达的一个阶段，它是发达的后果。”本书试图解剖帝国主义和资本主义在发展过程中对拉丁美洲所进行的残酷掠夺如何导致了“今天”的贫穷与动荡。从最初的虐杀、奴役，到后来采矿、淘金，再到可可、棉花、咖啡、橡胶，再到后来的工业、商业上的控制与压榨。基本上西方世界工业革命的发展史这一页纸的反面就是拉丁美洲的受难史。不过这究竟是过去的历史？还是历史依然在不同的地方以不同的形式上演着？</p></li> \n <li><p>✦✦✦✦✧ 《<a href=\"https://book.douban.com/subject/34910865/\">天下刀宗</a>》</p> <p>武侠小说。总体来说还不错，不过感觉人物比较单薄，虽然也算是有一些各式各样的性格，但是感觉都是同一个模子做出来，再加了一点微调，所以看半天经常都还分不清谁是谁，而且有点故作神秘的感觉吧。</p></li> \n <li><p>✦✦✦✦✧ 《<a href=\"https://book.douban.com/subject/34204669/\">日本人为何选择了战争</a>》</p> <p>东大教授加藤阳子给中学生办的几次讲座的讲稿整理成书，文字比较口语化，整理了一下日本在几次战争（甲午战争、日俄战争、一战、二战）中做出这样选择的缘由。当然是从日本人的视角出发来叙述，但也并不是要 justify 或者反省什么东西，主要还是一个客观的态度来讨论历史。感觉从方法论的角度来说还是蛮有意思的，因为我自己上学时对历史的印象就是“死记硬背”，作者这里试图以一种归纳总结的方式将不同时间地点发生的事情联系起来并总结背后的规律，确实会让历史这门学科变得更有趣一些（也许这么做的目的一方面是为了勾起中学生们学习历史的兴趣）。当然历史事件本身往往是纷繁复杂的，这样的归纳总结肯定免不了会省略一些“不重要”的部分，总会引发不同的争议；并且和自然科学中所总结的规律不一样的是，历史规律一般都不同容易通过实验来验证正确性，所以最后可能不同的人也会做出不同的理论或者解读，甚至各种阴谋论吧。</p> <p>总之日本那个时候确实疯狂地全民动员起来了。感觉即使政治体制上可以尽量做到分散和制衡权利，避免个别极端分子就能做出过于出格的事情来，但是另一方面如果某种集体情绪（民族情绪或者宗教信仰、意识形态等等）被整体煽动起来了，真是非常可怕的事情。我想我对于宗教甚至于同学会、同乡会之类的无端鼓励归属感的组织方式的疏离感可能很大程度也是这方面的原因吧。</p></li> \n</ul> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2020/book-morpho.png\" style=\"width: 100%;\"> </img>\n</div> \n<p>最后是和艺术相关的书。</p> \n<ul> \n <li><p>✦✦✦✦✦ 《<a href=\"https://book.douban.com/subject/27070820/\">Morpho : Anatomie artistique</a>》：很棒的艺用 anatomy 书，被翻译成了各种语言，后浪有出中文版（不过基本全是图没有几个字，所以其实基本不用翻译了）。书里的画都超美，很多都是非常动态的姿势和角度下展示不同肌肉的状态，而不是简单的站立正面背面完事，封皮附录有主要肌肉的编号，部分插图上有根据这些编号对肌肉进行标示。我花八个月，终于临摹完了（大概 320 页），临摹的时候用不同颜色的马克笔把不同的肌肉涂色标出来，感觉最后对人体（表面）肌肉结构有非常大的帮助。</p></li> \n <li><p>✦✦✦✦✦ 《<a href=\"https://book.douban.com/subject/26717493/\">Graphic L.A.</a>》：一本画册，加上一小部分文字讲解，主要讨论了如何让画看起来更“真实”：并不是要描绘出所有的细节，而是要把握好颜色深浅、边界钝锐等之间的关系。大部分画都是通过简单的几何形状构造出来，同时具有平面设计的那种干净的简化美感，但是又没有丧失画面其原本的真实性。中间还有几幅画有详细的构造过程。总之是很好看的一本画册，不过就讲解的内容本身，由于文字说明比较少，可能结合其他的参考资料一起看会能挖掘出更多有用的东西。</p></li> \n <li><p>✦✦✦✦✦《<a href=\"https://book.douban.com/subject/27029406/\">Understanding Perspective: Easy Techniques for Mastering Perspective Drawing on Location</a>》：The Urban Sketching Handbook 系列里的一本关于 perspective 的小册子，technique 都是基本的一点、两点、三点透视，以及一些广角镜头的情况之类的，放在 urban sketching 的 context 里，结合一些来自不同的 urban sketcher 的不同风格的作品来举例介绍，还不错啦，画也都挺漂亮的。总之虽然不是我看过的讲 Perspective 最好的书，但是如果是对 Urban Sketching 感兴趣的话，也算是不错的参考。</p></li> \n <li><p>✦✦✦✧✧ 《<a href=\"https://book.douban.com/subject/34972623/\">Title: Drawing with a Tablet – Easy Techniques for Mastering Digital Drawing on Location</a>》：Urban sketcher 系列里的讲拿着 iPad 到处画的书。感觉现在 iPad Pro 已经逐渐在替代 Wacom 成为 digital painting 的主要工具，并且其更高的便携性也让它做现场 sketching 工具也更便利，不过介绍用 iPad 画画的书还比较少，所以看到这本书的时候还挺兴奋得。但是拿到手非常失望，有用的信息感觉比想象中要少很多，不过最不满意的是作者本人的画（包括各种示例）感觉简直就是 digital sketching 的典型反例合集，各种滥用的 air brush，扎眼的配色，马虎的 edge 处理等等 😂，虽然书里也还有一部分别的 artist 的作品示例，看起来倒还都挺好看的，但是总体来讲是非常不推荐的一本书。</p></li> \n</ul>","descriptionType":"text/html","publishedDate":"Sun, 26 Apr 2020 00:00:00 +0000","feedId":3969,"bgimg":"http://freemind.pluskid.org/att/2020/book-guts.png","linkMd5":"2588311edd3587bb11b37cd26baec83c","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn46@2020_2/2020/08/24/21-49-59-508_5e69e8d639f65dd7.webp","destWidth":1671,"destHeight":800,"sourceBytes":2167713,"destBytes":216340,"author":"","articleImgCdnMap":{"http://freemind.pluskid.org/att/2020/book-guts.png":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn46@2020_2/2020/08/24/21-49-59-508_5e69e8d639f65dd7.webp","http://freemind.pluskid.org/att/2020/book-code.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn100@2020_3/2020/08/24/21-50-15-878_1b8b8be9dc1b6769.webp","http://freemind.pluskid.org/att/2020/book-japan.png":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn7@2020_6/2020/08/24/21-50-29-078_2e905a306ad44c4d.webp","http://freemind.pluskid.org/att/2020/book-morpho.png":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn43@2020_1/2020/08/24/21-50-27-259_1c4aa45318e6cb60.webp"},"publishedOrCreatedDate":1598305776897},{"createdTime":"2020-08-25 05:49:36","updatedTime":"2020-08-25 05:49:36","title":"Sending AZW3 Files to Kindle","link":"http://freemind.pluskid.org/misc/sending-azw3-files-to-kindle","description":"<p>到了 2019 年，苹果设备之间已经能<a href=\"https://en.wikipedia.org/wiki/AirDrop\">“隔空投送”</a>文件，移动设备之间还有超声波转账之类的稀奇古怪的沟通方式，但是传输电子书到阅读器上几乎还是使用连接 USB 线拷贝这种非常原始的方法。</p> \n<p>亚马逊的 Kindle 还允许使用所谓的 Send to Kindle，让用户把电子书文件发送到一个指定的 email 地址，然后再由服务端自动同步到 Kindle 设备上。虽然都已经做到这份上了，不禁让人疑惑为什么不做一个网页端上传按钮，但是至少不用再去翻箱倒柜找 micro USB 线了。不过 Send to Kindle 一直有个限制就是电子书格式只能是 mobi，而不支持它家更新的 AZW3 格式。发送后者的话什么都不会发生。AZW3 格式比 mobi 要高级很多，支持一部分 HTML5 和 CSS3 的子集，如果使用 mobi 文件，很多后来的 kindle 功能（比如自定义字体）都用不了。</p> \n<p>之前要看 AZW3 格式（一般都是通过 epub 转过来的）就只有通过 USB 线拷贝到设备中，除了要接线很麻烦之外，这样的文件只存在于设备中，并不会和云端同步，比如你什么时候没有带 Kindle 设备，就没有办法通过手机上的 Kindle app 接着看几页；但是 Send to Kindle 的文档则是自动同步的。</p> \n<!--more--> \n<p>苦恼了很久之后最近突然发现有一个解决办法，就是用 Send to Kindle 功能发送所谓的 “dual mobi” 格式，也就是其中既包含了旧的 mobi 格式内容，也包含了新的 AZW3 格式内容。制作方式非常简单，一般会自己转换电子书格式的童鞋应该都是 <a href=\"https://calibre-ebook.com/\">calibre</a> 这个利器，在对一本书进行格式转换的时候选择 mobi 为目标格式，然后在 MOBI Output 的设置里找到 MOBI file type，这里有三个选项，old、new 和 both，选择 both，就可以得到一个 mobi 文件，用来 Send to Kindle 了。云端会根据注册设备自动选择新或者旧的格式推送到设备——当然如果是很古老的 Kindle 设备，系统本身就不支持 AWZ3 格式的话，就只能收到老的 mobi 文件了。</p>","descriptionType":"text/html","publishedDate":"Thu, 22 Aug 2019 00:00:00 +0000","feedId":3969,"bgimg":"","linkMd5":"e03d521c9bd1c3216fe0147a29479b7e","bgimgJsdelivr":"","metaImg":"","author":"","publishedOrCreatedDate":1598305776897},{"createdTime":"2020-08-25 05:49:36","updatedTime":"2020-08-25 05:49:36","title":"2019 时光小偷","link":"http://freemind.pluskid.org/misc/2019-summary","description":"<blockquote> \n <p>过去像一滴汗<br /> 静静地蒸发 在马路上<br /> 风吹着 我跑向远方</p> \n</blockquote> \n<p>今年加州好像特别多雨，虽然没有了滴雨的屋檐也没有看雨的廊下，但是还是仿佛会闪回到小时候。事实上我对年末假期出游的几个临时计划（虽然最后都否决了）居然都是去会有暴风雪的地方，也许在东海岸住了许多年之后潜意识里觉得在暖和的屋子里看外面风雨交加或者白雪皑皑才是一年结束的样子？也许是，也许不是。不过在 2019 年末，我可以确定的是，自己终于不再是去年那个一直怀念波士顿并对湾区心存抗拒的态度了。去年的新年愿望是“希望自己能够更加勇敢和积极地去直面新的生活和变化！”，现在回看，应该算是实现了吧，当然，是经过了许多积极努力和尝试之后的。😛</p> \n<!--more--> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/hawaii-sunset.jpg\" style=\"width: 100%;\"> \n  <div class=\"caption\">\n    日落，于 Haleakalā National Park, Kula, Hawaii \n  </div> </img>\n</div> \n<h2 id=\"悠游\">悠游</h2> \n<p>既然是积极向上的一年，那不妨从愉快的游玩开始说吧。今年依然和去年一样，由于签证原因完全无法出美国境内，所以即使是去开会也只能选美国境内的会议，非常凄惨。虽然跃跃欲试想去的地方越来越多，但是真正能出行的次数其实很少。</p> \n<p>大致按时间逆序来说，最近的一次出行是感恩节和小伙伴一起去夏威夷，上面那张日落的照片就是在茂宜岛的 Haleakalā 国家公园拍摄的，旁边有个天文台，从海平面开上去大概要上升三千多米，开车路线非常曲折，几乎是连续不断的 180 度转弯，开起来很费劲。山上能看到山腰漂浮的云，据说当云爬上来进入山顶那一大片高地之后天气会在几分钟内巨变。本来是很适合观星的地方，但是没想到天上还有更多的云，最后能见度并没有特别好，日落之后也变得非常冷，我们也就很快回去了。</p> \n<p>事实上整个夏威夷的行程大致可以用“冷”来描述，虽然都住在海边的度假酒店，但是总共只去沙滩躺了一小时不到。其他的时间去雪山、火山或者是浮潜，都有点冷，哈哈。为了上大岛的雪山我们还特地租了牧马人，拍了照片发给我妈，她就开始给我讲四驱怎么用，结果我们最后也没有用上四驱功能，因为开到上山的路口发现整条路已经在前一天提前关闭了，要到来年四月份才重新开放。不过在山口看了一眼那个路，我就很庆幸它关闭了，因为感觉开上去真的是心都要跳出来。</p> \n<p>浮潜是第一次体验，呛到海水真是超咸超苦。总体来说还算不错，不过没有想象中那么惊艳，大概是 BBC 的纪录片看太多了，而且小时候看西游记大闹龙宫之后就经常想象潜水，所以对浮潜的想象期待过高了，特别是对于灰扑扑的珊瑚有点嫌弃哈哈，不过也许珊瑚群正在受到源源不断的浮潜游客的巨大威胁呢，据说光是大家身上涂的含有不同化学成分的防晒霜洗到海里之后对当地的生态平衡带来的破坏性都是相当大的。除了看鱼和海龟之外，还会看到一些带着氧气瓶深潜的人，我觉得看他们在深水里游倒蛮有意思的。另外浮潜需要出海，其实在船上往返需要的时间也挺久的，不过在船上看各种泳装的男男女女其实也是超棒的，因为我今年花了很多时间学习 anatomy，能够有这么多真实比例、各种不同姿势的免费的模型可供观察，其实是非常难得的，并且还全都是真·3D 的，跟着书上学习 anatomy 的一大问题就是大部分时间看到的都是肌肉（在标准姿势和正面视角下）的二维形状，所以在不同姿势、视角下那块肌肉会是什么样子要把握得好还是相当困难。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/hawaii-tree.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>在岛上逛的时候还看到<a href=\"https://en.wikipedia.org/wiki/Banyan_tree_in_Lahaina\">一棵超大的榕树</a>（据说是美国最大），非常猎奇，看起来像是从不同地方长出的树干的树枝连接到了一起，形成了两棵树之间输血管一样的结构，整个小公园像是十几个树干手牵手形成的结界。我原本以为这是某种特殊的人工嫁接的结果，但是查了下 wikipedia 才知道这是榕树自己枝条长太长了感觉 hold 不住，于是又从中间开始往下长出根来，形成新的树干“中继站”，并且很多植物都有这种叫做<a href=\"https://en.wikipedia.org/wiki/Aerial_root\">气生根</a>的现象。离开之前还去参加了一个可以看草裙舞的晚餐，本来觉得食物很一般（公司食堂水平），但是后来发现很多都是有特色的夏威夷当地食物，比如那个柴柴的猪肉原来是要在地里埋很久，再由两个壮汉挖起来，仔细避开骨头把肉慢慢剔下来。后来的草裙舞和火把表演也很棒，感觉充分体会到了夏威夷人懒散和随便凑合了事的风俗哈哈。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/Goku-Kamehameha.png\" style=\"width: 100%;\"> </img>\n</div> \n<p>另一件好玩的事情是在路上看到一条路叫做 Kamehameha，本来以为是致敬龙珠中的<a href=\"https://zh.wikipedia.org/wiki/%E9%BE%9F%E6%B4%BE%E6%B0%94%E5%8A%9F\">龟波气功</a>，结果一查发现是反过来，夏威夷有一位龟波大王（我自己乱翻译的，Wikipedia 上的翻译是<a href=\"https://zh.wikipedia.org/wiki/%E5%8D%A1%E7%BE%8E%E5%93%88%E6%A2%85%E5%93%88%E4%B8%80%E4%B8%96\">卡美哈梅哈大帝</a>），然后神龟冲击波是鸟山明的妻子提议以夏威夷王国的开创者来命名，所以是反过来致敬，哈哈，不过感觉还是龟派气功更有名啊。</p> \n<p>九月底坐 <a href=\"https://www.amtrak.com/california-zephyr-train\">California Zephyr (加州和风号)</a> 火车横穿了美国。加州和风号历史可以追溯到两个世纪以前，从加州一直连接到芝加哥。美国的火车本来就和“高速”无缘，这个历史悠久的列车更是开得悠闲，全程两千五百英里的路程要开两天半，不过现在似乎主要是作为观光火车，有专门的一节车厢提供了全景式观景天窗，火车的运行路线也以“在白天能经过重要景点”为前提进行优化过了，途径好几个州，从加州一路往东，盐湖城、丹佛等等都是很不一样的地貌，也算是有些看头啦（忽略图中的 typo）。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/california-zephyr.jpg\" style=\"width: 100%;\"> \n  <div class=\"caption\">\n    California Zephyr 路线图。 \n  </div> </img>\n</div> \n<p>N 提出这趟旅程的时候我很快就答应了，我们并没有走完全程一直到芝加哥，而是在一个我之前都没听过的州 Nebraska 的一个我之前都没听过的城市 Omaha 下车，在 Omaha 停留数日再坐飞机回来。我当时对火车途中的景色和 Omaha 这个似乎什么都没有的目的地都没有特别有兴趣，但是这样一个去一个比较远但是又不是人满为患的热门景点的 get-away 活动本身吸引了我，心里觉得至少可以尽情地看书了！</p> \n<p>我们的行程大致如上图所示，在火车上度过了两个晚上，火车有卧铺车厢，提供厕所、淋浴、饮水之类的，还比较干净。卧铺车厢的过道很狭窄，每次经过都会想起阿婆的《东方快车谋杀案》。包厢里的座位在晚上放下组成一个床，加顶上的折叠床一共两层。窗边有小桌板和阅读灯，总体来说空间相当狭窄。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/california-zephyr-inside.jpg\" style=\"width: 100%;\"> \n  <div class=\"caption\">\n    California Zephyr 包厢内部的可折叠座椅床。 \n  </div> </img>\n</div> \n<p>两个特殊车厢分别是餐车和观光车厢。餐车在美国食物的类别下算是不错的了，吃饭一直没收钱，回来一查才知道卧铺车厢是包饭的，不过由于只有一节餐车，所以尽早去吃饭可以避免排队。吃饭的时候会被强行拼桌，有时会就会被迫 social，当然也有双方都互相无视的时候。感觉整个火车平均年龄可能是在六十岁以上，也有个别小孩和年轻人，但是大部分都是休闲老人，还有一些其他国家来乘坐这个观光火车的，有一次对面坐了一对只会讲西班牙语的夫妇，N 和他们聊起来我一个字都听不懂。</p> \n<p>观光车也只有一节，需要抢位置，不过拥挤程度并没有想象中那么糟糕。观光车厢另一边连接的是普通（非卧铺）车厢，也有不少人，看起来似乎也有许多人把这个火车当做正常交通工具使用（中间有很多站点会停车）。中途有一大群穿着两个世纪以前服装，发型和胡子都很怪异的人上车，后来发现是<a href=\"https://zh.wikipedia.org/wiki/%E9%98%BF%E7%B1%B3%E4%BB%80%E4%BA%BA\">阿米什人 (Amish)</a>，据说是基督新教中比较激进的一个派别，他们拒绝使用汽车、电力等现代设施，但是莫非火车又是可以使用的？</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/california-zephyr-cart.jpg\" style=\"width: 100%;\"> \n  <div class=\"caption\">\n    左侧的阿米什人 (Amish)。留山羊胡但剃掉了嘴边一圈的胡子。 \n  </div> </img>\n</div> \n<p>观光车虽然窗户很大，但是除了看一看不同的地貌之外大部分时间也并没有特别可以看的，我的主要活动除了画一些 travel sketch 之外就是看书，虽然火车有点晃，会导致看书很容易累，不过总的来说还是相当惬意休闲的两天。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/california-zephyr-reading.png\" style=\"width: 100%;\"> \n  <div class=\"caption\">\n    看风景，画画，读书。 \n  </div> </img>\n</div> \n<p>目的地 Omaha 是一个比较有历史意义的地方，两个世纪前 Union Pacific 铁路线从这里开始修建，但现在似乎比较没落，其实城市看起来并没有想象中那么破败，downtown 甚至还有一家 Blick Art Supplies（当然去逛了一下），已经甩了南湾几条街了。但是当地人问了我们从哪里来之后都是一脸怀疑的表情，蒙谁呢？你在加州呆的好好的会来这个地方？不会是犯了什么大案来这里避风头的吧？这种表情。</p> \n<p>当地游玩去处主要是一个比较大的动物园和一些火车相关或者火车站改造的博物馆的。总体来说是比较悠闲度过的（比如在咖啡馆看书），临走前一天碰到一家叫做 Jackson Street Booksellers 的二手书店，简直是大宝藏——是我见过的最厉害的二手书店。一般二手书店里的书都会比较混乱，且通常是以 fiction 为主的大量不知所云的书和一些大部头的画册之类的，这里文学历史工程科学哲学艺术音乐等各方面一应俱全，在那里待到关门，第二天去机场之前还专门过去又待了一上午买了一袋的书走。为什么在这么一个冷门的地方有这么厉害的书店呢？也许整个州只有这一个书店，所以把所有的书都聚集起来了无比厉害？🤣</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/jackson-street-booksellers.jpg\" style=\"width: 100%;\"> \n  <div class=\"caption\">\n    Jackson Street Booksellers，超赞的二手书店，连厕所里也堆满了书。 \n  </div> </img>\n</div> \n<p>五月则是因为开会去了一趟新奥尔良，几乎没有怎么玩，这可能是我若干年来开得最认真的一次会了。印象比较深刻的一个是 jazz，毕竟是发源地，刚好错过一个 jazz festival，不过还是去了当地一个很有历史（但现在应该已经游客化了）的小破木屋里听了一场表演，感觉还是很不错的；另一个是二战纪念馆，时间不太够所以没有逛完，不过感觉美国人在有些方面还是比较诚实的，比如关于中途岛战役的细节，虽然是破译了密码，但是最后战斗之所以能够胜利也完全是靠了一时运气，他们也就在博物馆里这么讲了。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/nola.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>紧接着新奥尔良之前是去了一趟纽约出差，实际的目的地是普林斯顿，去庆祝那边的 Brain 分部开张，大部分时间都跟同事在一起，虽然刚巧时间赶上于是去了一趟 <a href=\"https://en.wikipedia.org/wiki/Frieze_Art_Fair\">Frieze 国际现代艺术展</a>，但是整体没有怎么认真玩（似乎我每次来纽约都是这样）。不过从湾区去纽约，真的是巨大的反差，就只是看到晚上十一点街上还很多人都会觉得异常兴奋，不过感觉如果住在城里的话晚上睡觉应该也很难找到安静的地方。我在旅行中对吃的东西关注的优先级通常是最低的，不过这次在纽约 Google office 楼下的 Chelsea Market 里有一家叫 Miznon 的吃 pita 的店，真是深得我心：柜台上放了一大筐的辣椒，客人可以免费随便拿随便吃！</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/new-york.png\" style=\"width: 100%;\"> </img>\n</div> \n<p>在普林斯顿停留过程中的自由活动时间也比较短，这里是第二次来，印象依然是“在一个偏远地区的世外桃源”，校园不大，但是很漂亮，周围也是浓烈的大学周边的氛围，很容易就找到很棒的书店。</p> \n<p>以上就简要概括了今年主要的 travel，其他就是一些近处的 day trip、hiking 之类的，以及进城去听音乐会之类的，事实上今年的种类增多了许多，除了交响乐之外，还有钢琴独奏、古典吉他独奏、音乐剧（第一次看音乐剧）、冰上杂技之类的。</p> \n<p>我觉得冰上杂技还挺特别的，是<a href=\"https://en.wikipedia.org/wiki/Cirque_du_Soleil\">太阳马戏团</a>的一个叫做 <a href=\"https://en.wikipedia.org/wiki/Crystal_(Cirque_du_Soleil)\">Crystal (Cirque du Soleil)</a> 的 show。原本我以为“马戏团”的话就是一群动物在台上表演，结果感觉应该归类为“杂技”更合适，冰上杂技感觉是非常棒的视觉体验，而且剧情、布景加上舞台上的投影特效结合在一起感觉是很不错的一个 show。</p> \n<p>另一个比较特别的 day trip 是和公司同事一起去 <a href=\"https://en.wikipedia.org/wiki/Mountain_biking\">mountain biking</a>——中文好像叫“山顶速降”？我是第一次玩，去之前一直担心有点危险，结果真挂彩了，实际上最开始组织这个活动的同事在出发前一周在别处 mountain biking 时里摔断了 collar bone，去不了了，感觉是很大一个 warning sign 😂。玩法就是找一座山（当然要找适合 mountain biking 的 trail，所以需要老手带队），先骑上去（对于平时不太锻炼的我还挺费劲的），然后再滑下来，下坡并不是公路那种很平的路，而是像平时 hiking 那种或者更坑坑洼洼起起伏伏的路况，经常有横着的大树根，大石头、坑、台阶之类的。听起来有点吓人，但是实际上似乎还好，像我这样完全没有经验的没有经过任何教学也能上手，主要原因是用的自行车比较特别，一是减震系统和刹车都非常强劲，所以对应这些路况其实都没有太大的问题，而且自行车座椅还能在前进过程中实时升起和降落，这样在上坡的时候可以升起来会比较省力，下坡的时候则降下来比较容易控制。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/mountain-biking.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>我出事故是在整个 trip 快要结束的时候，已经到了比较平缓的地带，警惕放松，再加上比较疲劳导致灵活性下降，在有一个树根横过的地方我的手被从自行车把手上甩了出来，然后就人和车一起冲了出去，最后我撞到一个树桩上停了下来，那一秒种的时间真的是觉得自己要挂了，因为就迎头撞过去的地方刚好有一个朝向我的树桩，最后树桩正面撞到胸口，居然没有大碍，倒是手上各处擦伤了不少地方。虽然不是什么大的伤口，但是伤疤过了好几个月才完全消去，果然成年以后身体的恢复能力也下降了许多。总体而言是比较刺激的一项运动，取决于 trail 的难度等级，危险性肯定还是有的，不过 beginner level 的话危险程度可能比滑雪还要小。当然我自己以后还会不会去玩呢？这个还有待商榷，毕竟我还是比较怕伤到手指的。</p> \n<h2 id=\"梦游\">梦游</h2> \n<p>画画上今年做了非常多练习，完成了好几个持续时间较长的 project。第一个是“百头”的项目，原本是网上一个十天画百头的挑战，不过十天对我来说显然是太有挑战性了，除非我这十天不工作不做其他事情。不过最终还是画完了，主要部分是在二月十四到四月十四这两个月之间画完的，剩下几个头拖到六月才画完。下面的缩略图应该只有九十几个，是由于有几个画得实在是丑到我自己都没好意思照下来。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/drawing/100-heads.jpg\" style=\"width: 100%;\"> \n  <div class=\"caption\">\n    100-head drawing challenge. \n  </div> </img>\n</div> \n<p>我觉得这种训练收获还是蛮多的，更好的做法应该是 life drawing，观察三维模型或模特，并反复多次练习并改进同一个人脸造型在不同视角、光影下的样子。但是那样需要太多的耐心了，而且总有各种各样的人脸想画，所以这样堆数量也算是不错的退而求其次的练习方法啦。总体来说对于人脸的三维结构有了更多的理解，也许画得最好看的人脸跟前几年画得最好看的比没有明显差别，但是整体来讲质量更稳定了，以往应该是有更多毁到不能看的。这次主要是在一个灰褐底色的本子上画的，这样既可以用黑色画阴影，也可以加一点白色笔画高光（下图左），我应该也是第一次尝试这种带底色的本子，感觉比较好玩，不过白色的笔总体来说比较难用。而且为了能画出更平滑一点的阴影来，我也又拿起弃用多年的铅笔。</p> \n<p>画多了以后发现如果能够掌握好人脸的三维结构，准确地将阴影和高光放到合适的位置的话，其实用乱七八糟的一团线或者抽象的几何形状堆在一起也能画出“像模像样”的人脸来（下图中）。一百个头最后一部分我是用 procreate 在 iPad 上画的（下图右），digital 不论是阴影、高光还是加颜色都方便太多了，不过能否画得好看还是主要要看基本功。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/drawing/3-heads.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>另一个长期的 project 则是 anatomy study，其实过去几年每年都有做过一些 anatomy 相关的学习，通常是看一些视频（推荐 proko 的视频），不过由于练习比较少，回头就忘记了。今年坚持了很久去临摹一本叫做《<a href=\"https://book.douban.com/subject/27182216/\">Morpho</a>》的书，这本书原来是法文的，我最初也是在巴黎看到，由于里面的画太好看了，所以即使是看不懂的法文也买了回来，后来我发现它被翻译成了很多语言，我见到过的至少还有英日中三语的版本，所以我今年又买了一本英文版的，就照着里面的画一页一页地画。一开始并没有打算非常认真地学习每一块肌肉分别叫什么啊之类的，只是想跟着里面的漂亮的画，不过我很快就发现用带颜色的马克笔把各个肌肉分别涂成不同的颜色是一件好玩的事情，并且能够帮助学习，于是就顺便把肌肉的名字标上。由于对于绘画来说只需要掌握在身体表面能看得到形状的肌肉，所以比医学上要简单一些，但是特别是四肢这种可以在空间中四处移动的结构，在不同的角度和方向下都要搞清楚哪个是哪块肌肉还挺困难的，我觉得支撑我一直继续这个 project 的主要动力来源还是因为 morpho 这本书里的画都非常漂亮，今年大概完成了三分之二（一共 320 页左右，目前跟到 220 页），明年如果不因为什么事情耽搁的话应该能完成。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/drawing/anatomy.jpg\" style=\"width: 100%;\"> \n  <div class=\"caption\">\n    Anatomy study, following the book《morpho》. \n  </div> </img>\n</div> \n<p>书里有一部分图会标出每块肌肉的 id，但是也有很多图没有标，所以都涂颜色的话有时候就得自己清楚哪里和哪里是不同的肌肉，算是一个不错的复习，不过有时候也会不太清楚是怎么一回事，我会用一个叫做 <a href=\"https://3d4medical.com/\">Complete Anatomy</a> 的 app 来做参考，这个 app 里能够看到完整的 3D 人体结构，分层查看骨骼、肌肉的形状、连接、甚至是运动之类的。它的主要 target 应该是医学学生，感觉整体还是很好用的，只是模型只有站立一个姿势，而不能摆出不同的造型看在各种情况下各个肌肉都是什么样子的，不过每一块肌肉 isolate 出来之后可以看与它相关的运动，也算是有一点帮助了。期待以后 Augmented Reality 发展到成熟之后在艺术和艺术教学方面的应用会跟着成熟起来，感觉潜力很大，特别是在学习的时候，看到一张二维的参考图和能看到一个真 3D 的参考差别还是相当大的，到目前为止学习绘画的人想要得到 3D 的参考都还是只能去参加有艺术模特在现场的 life drawing，其实湾区也有 life drawing 的 session，只是都是在周中，交通极其不便，所以一次都没有去过。另外我还买了几个实体的模型，一个全身人像（一半皮肤，一半肌肉），一个肌肉人头和一个骷髅头。目前用得相对比较少，主要原因也是因为是固定的模型无法摆出不同的姿势来，不过之后如果要做光影方面的学习也许会更有用吧。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/drawing/skull.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>第三个比较大的 project 则是 <a href=\"https://inktober.com/\">Inktober</a>——在十一月的每一天根据一个预先定好的单词为主题画一幅画，分享到网上，由于大部分人都是使用官方的主题列表，所以会看到不同的 artist 对于每个单词的解读，非常有意思。去年是费了很大的劲完整画完了整个 inktober，最后累得半死。今年长了点心眼，尽量不要画结构或者细节太复杂的画，最后除了由于突然的重感冒病倒一周多之外其它天的内容基本上都完成了，而且 N 也在一起画，对我起到了一定的督促作用。今年其实也做了一个新的尝试，之前在紀伊國屋書店买过一本纯黑的 sketchbook，就趁 Inktober 尝试了一下：用铅笔打上简单草稿，然后用白笔来画，要点是不要对形状进行描边，而是 focus 在色块，特别注意 negative space。由于黑白对比鲜明，画出来的效果看起来很不错，不过其实画起来是一件很费劲的事情，主要原因是白色的笔不是很好用，特别是涂大面积白色块的时候简直累死，这些问题当然用 digital 来画的话都可以轻易解决了，但是为什么我还要一直用纸笔来画呢？我也不知道应该如何解释，从逻辑上反正是解释不通的。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/drawing/inktober.jpg\" style=\"width: 100%;\"> \n  <div class=\"caption\">\n    samples of my inktober drawings. \n  </div> </img>\n</div> \n<p>第四个可能算不上 project 吧，就是电影的 scene study，这个我去年也有做，主要是 digitally 做一些 value 或者 composition study，今年则主要是在 sketchbook 上，用针管笔和 marker 来画，现在回想一下似乎主要的两个原因是：自己当时在看一个虽然剧情比较一般但是服装、战斗、布景各方面都很赞的古装片《将夜》，很多场景都想画下来；再就是自己终于比较顺利地入了 marker 的坑，之前尝试过好几次，一直都用 copic 的 marker，除了比较贵之外对于纸张非常挑剔，大部分纸一画上去就会透好几页，但是现在我发现用 Tombow 的 marker 的话，即使在很普通的 sketchbook 上画也不太会透过去，变成了一个快速加点颜色点缀的好选择（前面提到的 anatomy sketch 也是用 tombow 的 marker 上色的）。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/drawing/scene-study.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>今年继续在关注公司的 drawing 课，新开了一门叫做 Visual Journalism 的课，就修了一下，其实上完我也还没有完全 get 到课的主要 point。老师会带着我们到不同的现场：街上、咖啡馆、音乐会现场、或者是大屏幕放映一部电影、一个演讲之类的，然后让我们在这些情况下 sketch，sketch 的目的并不是 illustration，也就是说目标并不是要美观好看，而是做记录，不止是对于眼前的人和物的外观进行描绘，还包括文字记录，亦可以运用自己的想象力和各种抽象符号等等对现场的氛围、音乐、情绪等做刻画——这一方面是我尤其没有能很好地理解的。我看老师有时还会画一些超大的拟声词，感觉有点像漫画里的那种感觉。总之我觉得还是蛮好玩的，我自己似乎还是主要限制于去 capture 人物的姿势、动作之类的。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/drawing/vj.jpg\" style=\"width: 100%;\"> \n  <div class=\"caption\">\n    我的 visual journalism sketchbook。 \n  </div> </img>\n</div> \n<p>课程结束的时候老师把我们所有人的最后一幅画合在一起做了一个 <a href=\"https://en.wikipedia.org/wiki/Zine\">zine</a>，第一次见到了复印机的强大，在不使用电脑进行页面设置和排版的情况下，直接通过复印机的复杂设置加上巧妙的纸张排布，最后居然做出了正确的对页小书。实际上今年我自己也做了一个 zine，还去参加了一下在 Foster City 的 ComicArts Fest，那里有很多人在摆摊卖自己的 zine，一般就是 5 美元左右，下图是我在那里收集到的一些 zine 和小画（左图左上和右下是我自己的 zine 的两个不同的页）。原本我以为这是一个互相交换 zine 的 meetup，结果没想到主要还是摆摊位卖和交流，我把自己的 zine 给别人的时候有时候对方会询问我是想要交换 zine 还是怎样，后来我就直接花钱买别人的 zine，结账之后再拿出自己的送给人家。总之有点略尴尬啦。年末在三番还有一个<a href=\"http://www.sfzinefest.org/\">更大的 Zine Fest</a> 我就没有去了。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/drawing/zine.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>今年在公司的绘画课只上了 Visual Journalism 这一门，因为后面似乎没有其他课可以上了，每学期开的课几乎都是重复的，drawing 方面的课基本上除了初级的 Drawing I 之外基本上我也都上过了，反复去上同一个课似乎也比较奇怪，painting 方面的课好像主要是油画，也没有太大的兴趣，因为油画比丙烯麻烦太多了。今年我正儿八经的 traditional media 整体画的就比较少，大概有两幅水彩和两幅丙烯。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/drawing/painting.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>除此之外，我今年还开始买一些艺术家出的画册，一方面是作为一点点支持，另外感觉临摹也是一个不错的学习方式（下图全为临摹别人的 drawing），其中有一些是正式出版的书，比如 Craig Thompson 的 <a href=\"https://www.amazon.com/Carnet-Voyage-Craig-Thompson/dp/1770463089\">Carnet de Voyage</a>、<a href=\"http://www.iraville.de/blog/\">Iraville</a> 的 <a href=\"https://www.amazon.com/Cozy-Days-Iraville-3dtotal-Illustrator/dp/1909414638\">Cozy Days</a>、Simon Stålenhag 的 <a href=\"https://www.amazon.com/Electric-State-Simon-St%C3%A5lenhag/dp/1501181416\">The Electric State</a> 和<a href=\"https://daisukerichard444.wixsite.com/daisukerichard/\">ダイスケリチャード</a>的<a href=\"https://www.amazon.co.jp/gp/product/4768311814\">水槽</a>等，也有一些是放在个人网站上卖的用相册打印服务打印的小册子比如 <a href=\"https://www.raphael-lacoste.com/\">Raphael Lacoste</a> 的 Lignes、<a href=\"http://davemalan.com/\">David Malan</a> 的人像的 sketchbook 和 <a href=\"https://www.instagram.com/paulheaston/?hl=en\">Paul Heaston</a> 的超广角 sketchbook 等等。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/drawing/copy.jpg\" style=\"width: 100%;\"> \n  <div class=\"caption\">\n    inkdrawing 的临摹练习。 \n  </div> </img>\n</div> \n<p>今年的画画练习大部分都是用纸笔，一方面是因为我这几年已经买了太多的 sketchbook 了，brush pen、marker 甚至还有钢笔、墨水也买了不少，让我不得不使劲消耗一下这些，另一方面今年大部分都是快速练习（比如 anatomy 或者人像），所以量比较大，但是单幅可能不会画得特别仔细，如果在 iPad 上画，虽然 Procreate 之类的 app 的绘画体验很好，但是对文档管理的功能支持还是相当弱的，强迫症如我基本上无法容忍我的 folder 打开全是一堆乱七八糟的 sketch，所以……不过其实我也有用 iPad 画过一些。主要是一些静物和风景的练习，我还特地买了一个小的折叠凳子可以到外面去坐着画，但用的次数也不多，因为后来发现 iPad 的屏幕在室外，特别是阳光直射的情况下亮度还是不太能达到能正常使用的程度。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/drawing/digital-1.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>另外就是一些零星的 figure study，一些是电影里的场景，一些是网上看到的图片。之前我经常为了找画画的素材（特别是人像、肖像等）而比较烦恼，今年我发现其实 Pinterest 是一个很不错的素材网站，并且你收藏了喜欢的参考素材之后它还会不停地给你推荐风格相似的图片，很容易就收集起来一个很大的 collection，虽然都是网上的照片，质量参差不齐，但是作为绘画参考本来大部分时候都不需要有很高的分辨率，也不会 care 有水印啊之类的。虽然到一定程度之后推荐的新图的重复性还是蛮大的，但是整体来说算是一个很不错的素材源啦。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/drawing/digital-2.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>钢琴上今年除了继续每天一小时的练琴计划之外，还有一些小小的变化。第一则是在搬家之后，因为没有了室友，不用担心打扰的问题，于是就不用戴着耳机练琴了，这样对于我练琴的时候的心情改善很大，因为戴耳机会让耳鸣变严重。第二则是换了钢琴老师，之前是在外面找的老师周末需要开车去老师家上课，今年开始注册到了公司的钢琴课，直接可以在公司的琴房上课，非常方便。老师是东欧人（第一次跟外国老师上课），非常严厉，经常批评某些著名钢琴家（比如郎朗或者王羽佳只有技术缺乏理解啥的），可想而知对我的批评更是不会手下留情，并且他还会很夸张地模仿我的错误的动作或者姿势， 一开始觉得还是相当伤自尊心的，不过后来也慢慢习惯了，有些人的性格就是那样子，除去这个之外，感觉他上课还是挺不错的，会比较讲究 interpretation，还有音乐的结构，以及更细节的手腕的动作之类的。去年钢琴应该处于比较瓶颈的阶段，今年算是有所突破吧，至少可以说突破了去年的瓶颈哈哈，虽然到后半年又碰到新的瓶颈的感觉。总之今年没有再用 599 之类的练习曲了，而是直接弹完整的曲目，包括海顿、巴赫、萧邦、莫扎特、舒伯特之类的都有弹过，虽然都是其中最最简单的曲子，但是同时也都是完整的曲子，其中有一些谱超过十页，所以对于正常曲目的结构之类的也开始有了一些了解，不过乐理知识还是处于半吊子状态，特别是虽然对一些理论有基本了解，但是在键盘上各个和弦甚至是音阶都不够熟悉，所以导致我的乐理知识并没有达到能够实用的状态，老师经常会很生气并且很疑惑，比如说这里明明就是一个 V 到 I，为什么你要犹豫那么一半天，还要加一个错音进来。并且经常如果一个曲子练完之后老师就要让我当场开始视奏下一个还没看过的曲子，即使是非常非常慢的速度，我也没有办法视奏，因为思路会手忙脚乱，老师就会显得非常崩溃，感觉快要撞墙自尽了。总之我其实每次去上课压力都挺大的，不过每个 Quarter 有重新选老师的机会我都还继续在现在的老师这里上课，大概也是因为我觉得其实自己收获也是不少吧。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/k545.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>其实我今年也为练习视奏做过许多不同的尝试，比如有一个 app 可以提供 read ahead 的界面，就是在你弹当前小节的时候把这个小节的乐谱给 mask 掉，强迫你养成提前看好当前小节的音乐，并且在弹的时候去看下一小节的谱的习惯。但是感觉我在演奏（也就是在键盘上找到对应的键）和识谱（认出来下一小节分别是一些什么音，按照什么样的顺序、节奏排列的等等）这两个 task 同时进行时经常大脑会打架，于是就会卡主。另外我也有尝试过用一些旋律简单的赞美诗 (Hymn) 曲集来练习，总之也许和去年相比还是有进步的，只是还没有达到能符合老师的要求能够直接（慢速）双手视奏的程度。</p> \n<p>今年练过的曲目里比较喜欢的几个有莫扎特的奏鸣曲 <a href=\"https://en.wikipedia.org/wiki/Piano_Sonata_No._16_(Mozart)\">K. 545</a>、萧邦的 Polonaise in g minor（据说是他 7 岁写的曲子）和 <a href=\"https://en.wikipedia.org/wiki/Prelude,_Op._28,_No._20_(Chopin)\">Prelude in c minor</a>。不过并没有录任何曲子下来，因为老师似乎是想让我接触尽量多不同的音乐，而且也不是以 recital 为目的，所以每个曲子基本上练到 get 到曲子的音乐感觉，比较难的地方技术上过关了，整个能弹下来就会开始练习下一个曲目，所以基本上每个曲子都还是有一些小细节会磕磕绊绊一下，自己也就不想录音了。明年希望视奏上有所突破哈。</p> \n<h2 id=\"神游\">神游</h2> \n<p>今年看书的数量比去年又增加了一些，总共 63 本：包括中文书 23 本、英文书 33 本和日文书 8 本。此外还粗糙地听了三本有声书。下面的插图中会展示每个月看的书的封面图，大致按照喜欢顺序排序，然后和去年一样我会按照（全局排序）喜好程度给出简要介绍。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/2019-books/summary-Q1.png\" style=\"width: 100%;\"> </img>\n</div> \n<p>今年看书量增多的原因应该一个是睡前开始避免看 iPad，以前通常会看 coursera、schoolism 上的视频，或者甚至刷一刷 YouTube，今年为了改善睡眠质量改成看书了；另一方面周末也会经常去周围的咖啡厅或者图书馆看书，并且我发现湾区周围的公共图书馆都可以免费办图书卡，一个是 <a href=\"https://www.sccl.org/\">Santa Clara County Library</a> 系统旗下有很多处不同的图书馆（比如 Los Altos、Cupertino 等等），都能通用借书和还书，另外还有一个是 <a href=\"https://www.mountainview.gov/depts/library/default.asp\">Mountain View Public Library</a> 虽然不在 SCCL 系统里，但是它的图书馆就在 Mountain View Down Town，并且有一个移动图书车会在每周三开到公司楼下，可以去借书，公司楼里也有还书的 dropbox，非常方便。公共图书馆虽然不如学校的图书馆那么好，特别是稍微专业一点的书就很难找了，但是稍微大众一点的书其实都还是蛮全并且蛮及时更新的，比如各种 best seller 的 nonfiction，包括一些科普读物都很容易找到，特别是可能由于湾区华人比较多的缘故，各个图书馆都有一部分中文书（虽然大部分是台湾版的），从小说到漫画还有非虚构类都能找到。此外图书馆现在都有电子书借阅服务，可以通过一个叫做 <a href=\"https://www.overdrive.com/apps/libby/\">Libby</a> 的 app 借出，然后直接发送到 Kindle 上看。</p> \n<p>总之虽然我没有仔细统计，但是我估计今年看的书有三分之一来自图书馆。果然有还书的 deadline，相比自己买的书来说，还是会更积极一点看啊。电子墨水阅读器方面除了已经有的用来看英文书的 kindle、用来看中文书（多看阅读和豆瓣阅读）的博阅 Likebook Mars 之外，又添置了一个 Kobo Forma 用来看日文书，毕竟是日本乐天出品，果然日文查词功能比其他的都好用很多倍，不过主要也是其他的平台都太弱了，动词只要不是原型就查不出来的词典基本上也是形同虚设了。此外 Kobo 还能通过 Overdrive 直接从图书馆借书（现在有了 Libby 之后 Kindle 也能直接从图书馆借于是就没有了这个优势），以及和 Dropbox 集成也很方便。不过阅读器的选词、highlight 这方面的功能和 Kindle 相比还是有相当的差距。之所以要用几个 device 并且还要都是不同型号的设备，主要原因还是各大电子书厂商都进行区域锁定（对于电子书平台的吐槽真是三天三夜都吐不完），导致没有办法用同一个账号在不同国家的电子书商店买书（即使像亚马逊或者 Kobo 原本就有多国书店的平台），所以只有用多个设备，并且如果需要偶尔在手机上接力看书的话，由于手机上不能安装同一个 app 的多份拷贝（好同时登陆不同语言的账号），所以最后就只好使用不同厂商的平台了。一脸无奈……还好我现在看实体书越来越多了，所以怨气也没有那么重了。</p> \n<p>另外一些看书相关的物件：一个舒服的椅子似乎对于缓解由于不正确的坐姿造成的腰部、肩部、颈部疲劳等有很好的效果，当然椅子舒不舒服是一个很 personal 的事情，每个人身形不一样结果也会不同。我自己尝试过最舒服的还是 Herman Miller 的 <a href=\"https://store.hermanmiller.com/living/lounge-chairs-and-ottomans/eames-lounge-chair-and-ottoman/5667.html\">Eames Lounge Chair</a>，坐下去感觉就陷入云里，当时在店里尝试的时候唯一的椅子上坐了一个人，我围着他转了好几圈，他终于让了出来，说，“我已经在这里坐了半小时了。”不过这个椅子接近六千美元的价位（我当时尝试是 Tall 版本比较舒服，Standard 对我来说有点小）确实有点贵，这是一个很经典的椅子，所以网上也有各种各样的山寨产品，价格从几百到一千多的都有，但是那样就没法在店里试，质量就参差不齐，尺寸各方面也不一定是一致的，能否买到适合的就完全看运气了。总之最后我还是没有做这个投资，而是在宜家买了一个两百块的 <a href=\"https://www.ikea.com/us/en/p/poaeng-armchair-birch-veneer-robust-glose-off-white-s49830596/\">POÄNG</a>，我觉得坐着也挺舒服的，而且设计也还蛮好看，当然垫子的质量肯定就和 Eames 那个相差很远，坐久了之后有点紧。另一个是 bookstand，之前没有尝试过，都是拿在手里或者直接把书摆在桌子上看，尝试过之后发现用一个 bookstand 把书斜着立起来看真是对脖子的放松太有效果了。最后是做笔记用的贴纸，我以前很喜欢在书上写很多东西，但是上大学之后变得不喜欢在书里写写画画了，所以如果要做笔记或者 highlight 之类的就得另外想办法。如果是比较专业的书需要一直记笔记的话，就用另外的笔记本记录就可以了，但是如果是普通的书偶尔需要 highlight 一部分的话，再专门去找笔记本就比较麻烦，我通常会拍一张照片然后事后整理，另外就是我找到一个 <a href=\"https://www.amazon.com/gp/product/B00NPCD8MW\">post-it 的硬贴纸</a>非常好用，可以贴在书的对应地方，事后如果想要清理的话，撕下来也不会把书弄坏，或者留在书上也可以，看起来还蛮好看的。</p> \n<p>✦✦✦✦✦✦ 六星推荐：</p> \n<ul> \n <li><p><a href=\"https://book.douban.com/subject/30190677/\">The Order of Time</a>：很新的一本关于时间的科普，在图书车无意中翻到，借出来才发现纽约时报 2018 年十佳 nonfiction 之一。感觉比《第一推动丛书》那一系列比较老的书讲得更简洁明了，并且包括了一些物理学的最新的进展，在某种程度上有点点解决了一直以来的一些疑惑：为什么熵是增加的，以及为什么宇宙一开始是低熵的状态。熵增加是按照从“有序”到“无序”的变化来定义的，但是什么是“有序”而什么是“无序”实际上是由我们自己来“定义”的，比如一摞扑克牌，如果牌面的数值没有按顺序排列，我们认为是“乱序”状态，但是如果不看“牌面数值”，而是看每张牌的其他属性呢？比如“每张牌某个固定位置的某大小区域里的原子数目”之类的，总之可以想象任意给一个“乱序”扑克牌，都可以找出某个“奇怪”的属性使得这一堆扑克牌在这个属性之下是有序的，因此熵增加的方向感（时间流动的方向感）其实是我们自己与物理世界的交互带来的一种“错觉”。虽然我们所选择的参照系具有能形成完整的“物理系统”的特殊性，但是就好像生命可能并不只能以碳链的形式存在一样，也许还有其他许多种不同的物理系统的存在形式。不过最终似乎这套理论还并没有被很完备地建立完成的样子。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/27172136/\">Why We Sleep: Unlocking the Power of Sleep and Dreams</a>：非常有用也比较有意思的一本书，向所有读者群推荐（NY Times Bestseller)。书以一个问题开始：我们（虫鱼鸟兽一切动物）为什么要睡觉？为什么生物经过这么漫长的进化，还一直保留着睡觉这个看起来会极大降低存活率（比如睡着了很容易被偷袭）的机制？水里需要不停游动的鱼类，或者需要跨洋级别长期飞行的鸟类都各自进化出了一些像一次只睡半边脑之类的 workaround 也无法完全避开睡觉，究竟是为什么？当然书并没有给出答案的完整刻画，因为完整的刻画应该还是生物研究中的谜题之一，但是书给出了一个很重要的定性答案：睡觉并不（仅仅）是一种休息（比如，像电脑休眠那样，机能停止运行），而是一种 development——跟你吃饭长身体、上课长知识、闯荡江湖长人生阅历同等重要的一个环节。因此这是一个非常复杂的生理过程，所以靠酒精或者药物之类的麻醉神经等方式强行进入昏睡状态并不能有效地起到真正睡眠所起的作用。打个比方就好比每天晚上你的电脑或者手机要进入维护模式，进行磁盘碎片整理（memory 的转移和索引），安装固件更新漏洞补丁（增强免疫系统功能）之类的，喝醉昏睡过去大概就等价于强行拔掉电源——虽然两种情况电脑都黑屏了，但是第二天重启的时候立刻就会知道区别很大。而熬夜晚睡则相当于长期运行内存效率低下、没有补丁的“裸奔”系统。</p> <p>整本书内容还是比较多的，详细讲了很多睡眠方面研究的进展和结论，包括睡觉的不同阶段的作用，做梦是怎么回事，以及如何改善睡眠等等。总之感觉现在人类对自己的睡眠的了解还是比较初级的阶段，但是至少我们现在已经开始知道了规律和充足的睡眠的重要性。</p> <p>总之强烈推荐看一下这本书，如果这本书有中文翻译的话我肯定立刻推荐给父母看了。我觉得这本书对我今年的关于睡眠的生活习惯影响很大，并且在改善今年的睡眠质量上起到了重要的作用。当然不要期望能在书里找到“三分钟入睡如死猪”之类的绝招，因为这样的办法似乎还并不存在，书里只是提供了一些建议改善睡眠质量，至于最主要的部分还是解释睡眠的重要性，让我们开始更加认真地去看待这个问题。我在豆瓣有写过<a href=\"https://book.douban.com/review/10057162/\">一篇比较详细一点的书评</a>。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/34785325/\">The Selected Works of T.S. Spivet: A Novel</a> 是一本非常有趣的小说，讲一个制图少年的一段冒险之旅，结局稍微有点仓促，不过我觉得这本书的重点大概不在于结局，甚至不在于这段冒险的历程，最有趣的部分倒是在于从一个十二岁少年（并且是一个很 nerdy 的十二岁少年）的视角和思维看各种事物，心里暖暖的，仿佛又回到了童年哈哈。并且排版非常精美（Penguin Books 的版本），每一页的精美插图、边注的位置都是专门排布过的，简直爱不释手。从这一本书开始变成 Penguin Books 出版社的粉丝，特别是 <a href=\"https://www.penguinrandomhouse.com/the-read-down/essential-penguin-classics\">Penguin Classics</a> 系列简直都是颜值爆棚。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/30224985/\">The Book of Why - the New Science of Cause and Effect</a>：图灵奖得主关于 causality 的一本厚厚的科普读物。中心主题就是 causality，大家应该都知道 correlation 并不等价于 causality，整个因果的概念对于人来说也非常自然，这也许是因为我们的意识和大脑其实就是基于这样的基本概念来运作的。但是有点意外的是，根据书里对 causality 的严格化描述的发展历史来看，人们是在最近一二十年才真正把 causality 相关的概念严格地定义出来并发展出了相关的数学工具进行演算和推理，并且这个过程似乎由于受到传统统计学“数据为王”，“correlation 为根本”的思想的无情打压和排挤，显得异常艰辛和漫长。我觉得强 AI 如果要实现的话肯定缺少不了 causality 这一环，不过要学习目前 causality 相关的理论和技术是得去看专业的书籍和论文，这本书更多的是科普，故事，和历史，当然，是很不错的一本科普，不过确实有点厚，例子也有点多，读了好久才读完。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/25846315/\">The Sense of Style — the thinking person’s guide to writing in the 21st century</a>：由语言学家和认知心理学家写的（英文）style guide，感觉比较适合理性派思维的人阅读。并不是无端列举一大堆写作规则和建议，而是有组织地讲解行文、段落和句子的结构，最重要的是所有分析都有从语言、逻辑、心理学等方面的道理可循。特别是书前半部分感觉可以抽空再仔细读一下做一些笔记，后面部分关于一些具体用词、标点之类的就有点琐碎了。原本是为了改善自己的 academic writing skill 来读的，自己觉得收获不少，但是真正 improve 还是得需要多多练习写作吧。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/30251285/\">The Rise and Fall of the Dinosaurs</a>：非常正经的书，严谨但不失趣味。并不是简单的吸引眼球的“恐龙神秘趣闻大合集”，所有的论述和历史推断都有相应的科学证据加以支持。“恐龙”这个词的定义只是历史原因，并不是因为恐龙就比其前身的那些古龙类有了革命性的进化。相比起来二叠纪的全球大灭绝之后开始出现的恐龙的先辈们才是一次重大突破，比如从“爬行”开始变成“（四脚）站立”行走。</p> <p>以往的印象（甚至一些科学著作）都是恐龙是三叠纪中“神选物种”，不论从速度，敏捷，新陈代谢，智商等各方面都碾压其它物种。但是最新研究表明那个年代有很多恐龙和非恐龙在身体和生活形态上各方面都很类似（究竟是哪一方在模仿另一方呢？），并且非恐龙类的生物即使在三叠纪晚期不论从数量，种类还是多样性上都完胜恐龙。三叠纪晚期古大陆开始分裂，板块漂移产生的超大规模火山喷发以及一系列严重的后续气候变化导致另一次大规模物种灭绝。但是恐龙反而在这个时期数量和多样性都反而增加，最终度过难关进入侏罗纪。其背后的原因，是目前考古学中一大迷题。进入侏罗纪之后由于其它物种基本上都死光了，恐龙开始迅速增长，变得巨大和多样化，走向统治世界之路。有些蜥脚类恐龙变得甚至比鲸鱼甚至播音 737 更大更重（比如无畏龙）。至于恐龙是如何冲击进化的极限长到那么大的，则是考古学中的另一大迷题。</p> <p>讲到恐龙开始征服天空的时候，真是有一种非常热血的进化的史诗的感觉。原来现在的鸟类是大灾变之后残存下来的飞翔的恐龙的后裔这件事情曾经长期被争论不休直到二十世纪末才慢慢在各种新的化石被发现之后达成共识。并且越来越多的证据似乎都表明羽毛和翅膀最初开始出现都不是为了飞行的作用。最后就是白垩纪终结的恐龙大灭绝了。原来彗星（或者小行星）撞击地球并不是随便杜撰的，各种岩层的研究都提供了间接的证据，并且年代符合的巨大陨石坑也在墨西哥找到了。看到这里总是不停想起《伊苏 8：达娜的隕涕日》里的画面。然后又不禁唏嘘，人类只存在了这么短一点点的时间，遥远的未来究竟会是怎样呢？</p> <p>感觉看 Natural History 或者宇宙相关的书的好处是会让人瞬间认识到人类的渺小，以及在日常生活中让我们焦虑和烦恼的那些事都是多小的事情，然后就会比较看得开了。😃</p></li> \n <li><p><a href=\"https://book.douban.com/subject/26603421/\">Seven Brief Lessons on Physics</a>：超小的一本书，对得起标题中的“极简”，简直可以站在书店把它看完，不过还是买回来了。封面很好看，内容短小精干不拖沓但是也并不空洞。六章分别讲相对论，量子物理，大尺度（宇宙学）和小尺度（基本粒子）的物理，空间，以及热力学与时间，最后一章感觉不太物理，不过也挺有趣，特别是里面关于自由意志的部分，因为“万物都按照物理规律自然运转”和“我们拥有自由意志”之间似乎一直有矛盾存在，即便有量子不确定性也难以调和，我感觉作者的观点是“自由意志”是存在的，只是并不是“我们自己”的自由意志，而是有一个更上层的大脑里的物理、化学、生物各方面的系统，这个系统的自由意志是指这个系统所控制的实体（我们）的行为是可以由这个系统的内部状态决定的（相对于我们所处的外部物理环境而言）；另一方面我们的“自我意识”也是这个系统的某一种片面的“显现”，或者是这个系统所产生的 consciousness 对系统本身的（不全面）的认知。所以我们的行为和我们的意识互相之间并不是对立矛盾关系，而是都由同一个第三方产生。</p></li> \n</ul> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/2019-books/summary-Q2.png\" style=\"width: 100%;\"> </img>\n</div> \n<p>✦✦✦✦✦ 五星好评：</p> \n<ul> \n <li><p>那不勒斯四部曲 <a href=\"https://book.douban.com/subject/26878124/\">一</a><a href=\"https://book.douban.com/subject/26986954/\">二</a><a href=\"https://book.douban.com/subject/27104959/\">三</a><a href=\"https://book.douban.com/subject/30172069/\">四</a>：广受好评被翻译成很多种语言的一个四部曲小说，讲述两个女人之间从童年一直到老年的故事。前不久 HBO 刚刚翻拍了第一部小说，拍得也很好，后续应该会陆续出来。从文学性上来说小说写得非常棒，整个几十年的跨度，不仅从人物性格、成长的角度上进行了细致的刻画，时代和社会的变迁（比如从通信到电话再到电子邮件）也是让人仿佛在看一部跨越时间长河的电影，很容易跟自己成长过程中所经历的时代变迁联系起来，形成一种强化的真实感。另外文中对“我”的心理活动的描述也是无比细致，我感觉以前从来没有能如此近距离地了解过另一个人的内心活动。至于小说的内容本身，可能前两部让我比较有共鸣的感觉，因为那不勒斯那个年代城区一角的生活真是跟中国乡村小城镇的生活太像了，仿佛是在回忆童年。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/2300474/\">金色梦乡</a>： 根据肯尼迪刺杀事件改编的一个小说，伊坂幸太郎这个叙事方式非常奇特，有点像先来了一次（从不同角度的）剧情梗概，然后再开始慢慢展开，不过因为是基于有名的历史事件，所以这样大概反而可以对读者的背景知识进行 calibrate，并且展开的过程中本书的一个主题也会逐渐体现出来：事情的表面，或者说大众媒体喜欢大肆渲染和报道的东西可能和真正发生的情况相去甚远；还有就是剧情展开过程中一些看似无关的细节、铺垫和人物逐渐关联起来就是会引起很大的阅读快感啊。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/1291993/\">The Hitchhiker’s Guide to the Galaxy</a>：轻松搞笑科幻，大概是所有科幻中地球毁灭得最搞笑的一次了吧，看的过程中经常笑出声来，但是作者无时无刻地抖机灵，最终结果就是如果达到审美疲劳的阈值估计就会觉得这本书很无聊，还未达到的读者就会觉得很有趣，还好书比较薄，所以感觉程度刚刚好，但是得知这本书还有后面好几本的时候就没有特别想读的兴趣了（至少是在短时间内）。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/26907338/\">We Have No Idea</a>：17 年新出的一本面相大众的物理科普书，似乎是《<a href=\"http://phdcomics.com/\">The Phd Comics</a>》的作者写的，所以里面有不少漫画插图，以及无穷无尽的冷笑话。另外主要的话题是提出问题（有哪些物理中的基本问题我们还是毫无头绪的），而不侧重于对我们已经知道的内容做很详尽的介绍，所以读起来更加轻松愉快一点。看完真是觉得，人类的科技还真的是处在婴幼儿阶段啊。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/31318772/\">The Weather Machine</a>：一直很好奇，现在毛毛多的天气预报 app，都号称自己更准确，但是天气预报这个应该是需要极其昂贵的卫星和超级计算机才能做的事情，所以其实大部分 app 背后都是从同一个信息源抓取预测信息吧？以前并没有仔细想过这些数据追根溯源应该是政府机构，甚至是国际性的合作机构所提供的。</p> <p>这本书横向描述了全球合作性的天气预报网络系统的构成和运作方式，纵向讲了天气预报系统的起源和发展。很难想象天气预报这样已经是生活中不可缺少的一部分的东西，其发展是极其近代的事情。就连二十世纪上半叶，计算机也还没有发展出来，无法进行大规模微分方程数字计算和模拟，人造卫星也还没有发展出来，天气数据的采集和观测都还比较手动也原始。其实在电报发明之前，即使有最完美的数据收集，也没有办法比云或雨跑得更快地把数据传输到一个中央处理局进行整合；或者说即使有最完美的预测，也没有办法及时地把预测分发传递出去，所以天气预报是很近才发展起来的这件事情大概也并不是那么出人意料了。</p> <p>不过这本书在细节上并没有讲得非常具体，尤其是对于现代天气预报中所用的气候模拟系统是怎么一回事几乎没有阐述（想象一下也感觉估计不是很容易能理解和解释的），换句话说，这并不是一本描述技术细节的书，而更像是传记类或者 documentary 一类的读物。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/32264719/\">The Disordered Mind</a>：Eric Kandel 的新书，总结了一下脑科学、认知科学、神经科学、精神分析等领域在相关的疾病（自闭症、精神分裂、失忆、帕金森、PTSD、老年痴呆等）诊断、治疗等方面的进展，以及通过这些疾病相关的研究和数据对我们对自己大脑认知所带来的帮助。感觉过去一百年在生物学、神经科学这些方面真的有很多进展，许多原本认为是“精神”或者“意志”、“环境影响”等因素导致的状况都渐渐找到了基因的遗传或者变异导致的生理因素影响，在神经科学、认知科学等的基础之上，精神分析似乎也可以变得更加严格和科学。不过总体来说感觉各种“精神”相关的疾病很多都还只是可以在一定程度上“控制”症状的阶段，离治愈还很远，并且很多控制方法都非常简单粗暴，比如直接干扰某种神经信号的传播，或者使用能够增加或减少某种神经元中的大分子的药物等等，各种副作用超强。真正要说治疗，一是要完全理解基因、大脑的运作，二还得要有足够精细的工具能够对其控制、修改，只能说是前路漫漫。作为暂时的局外人，看下来最重要的 take home message 是：锻炼身体能够防止或者推迟老年痴呆的说法原来是有科学依据的，好好锻炼身体吧！</p></li> \n <li><p><a href=\"https://book.douban.com/subject/27140810/\">David Downton - portraits of the world’s most stylish women</a>：英国著名时尚插画师大卫唐顿的作品集，确实很好看，最重要的是几乎都是寥寥几笔勾勒出形状和光影，整个就跃然纸上，有一些模特有绘画过程的照片，可以看出来和模特本人的相似程度也非常高。不过不要看到寥寥几笔就觉得不愧是大师，轻松加愉快，书里附带的访谈里提到唐顿他并不是在现场完成作画的，现场主要是画草图，抓重点，并且和模特聊天抓住对方特性之类的，他还会拍参考照片，回去之后会画一二十张练习图，最后找到满意的结果之后才通过光板把最终版本画下来。所以，心想着乱画几笔就能成大作果然还是非常不现实的。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/3308083/\">Asterios Polyp</a>：第一次看欧漫，故事上是讲一个中年危机中的建筑师在被雷劈房子烧了之后放飞自我由此引发的一系列故事（以及和回忆线的交织叙述）。感觉书最出彩的地方在于其呈现方式，各方面都经过非常精巧的设计，比如不同的颜色明显有各自的寓意，不同的人会有不同的符号化的画风，连对话气泡里说的话所用的字体也都有所区别；在两人开始深入交流的时候，颜色和画风就开始互相渗透。另外还有许多精巧的伏笔，我想如果再重看应该会发现更多，但是这个书的巧妙之处在于伏笔和呼应都设置得恰到好处，并没有啰啰嗦嗦地不停重复和说明，让你一看就是在铺垫伏笔，但是又刚好能让你记住一些小细节，并在合适的地方 resolve，说不定还会给一些惊喜。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/26760365/\">Pen and Ink Drawing: a simple guide</a>：封面看起来有点像烂大街的绘画教学书，实际上是非常赞，专门针对墨水笔（笔触无深浅，主要靠排线等方式来表达颜色深浅）这一大类笔的绘画做一些基本的讲解和练习（几种主要的笔触、如何有效地表达三维结构、材质等等）。因为我一直以来都对墨水笔绘画非常喜欢（由于随身随时都能找出一支墨水笔来，画起来很方便，习惯之后就很顺手了），所以感觉通过书里系统地整理一些墨水笔绘画方式的一些基本技术很有帮助。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/2817138/\">The Artist’s Complete Guide to Drawing the Head</a>：应该是我看过的最受用的一本教画人像的书了。觉得画人像除了最基本的比例要正确之外，最重要的两点这本书都讲到：一是如何通过阴影的形状和 hard/soft edge 来模拟三维 form；二是要了解脸部的简易 anatomy 结构（这样特别是在观察照片之类的二维 reference 的时候知道应该着重去看哪里）。不过结构部分内容还是有点少，可能得再找一些其他参考。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/30222786/\">Bad Blood</a>：前阵子的惊天医疗创业诈骗（巅峰时期估值一百亿美元）事件的始末，虽然从调查结果整体而来，但是书非常易读，引人入胜，主要是故事太惊掉下巴了，称为现实版的《权力的游戏》真是不为过啊，惊心动魄……</p> <p>看到 Elizabeth 一句话开除 CFO 的时候，突然意识到现代商业世界确实和过去的战场没有太大的区别（除了没有硝烟和血不会流到明面上来之外）。比如战场上比的是谁力气大武功高武器先进，商场上比的是谁钱多策略好善于经营或者有技术壁垒以及有钱请豪华律师团队搞垮对手之类的；过去厉害的人占了地盘就能称王称帝，在自己的范围内随便乱搞，可以铲除异己，任人唯亲，世袭罔替，也可以认认真真治国，兢兢业业经营，又或者是搞一些民主制，联邦制之类的，再有国家内部的斗争和国家之间的冲突等等，感觉这些都能在现代商业里找到对应的类似物。不过为啥我锻炼身体然后把你痛揍一顿就犯法，但是我多多挣钱在商业上把你搞垮就是正当的？并且从这个书里讲的事情来看商战里出现的各种下三滥手段比战争中也是有过之无不及。似乎 bar 在于是通过直接的手段来做某一件事还是通过间接迂回的手段来做某一件事？</p> <p>不过有一点让人觉得 positive 的是，那些复杂的官僚体系和 regulation 看来还是很有作用的啊。另外对新闻媒体也多少找回了一点点信任。事情还没有结局，看了下 wikipedia，虽然事件基本上在 2016 年就水落石出了，但似乎目前最严重的审理结果只是由 SEC 起诉导致的创始人十年内不得在公开公司中担任高管，罚款 50 万美元和故事中出现的那些数字比起来简直就是笑话。最重的审判结果有可能导致坐牢的案件则还在审理中。</p></li> \n</ul> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/2019-books/summary-Q3.png\" style=\"width: 100%;\"> </img>\n</div> \n<ul> \n <li><p><a href=\"https://book.douban.com/subject/26763182/\">死者代言人</a>：安德的游戏三部曲得结局。画风突变，不过也许三部中我是最喜欢的一部。世界观，立意，和探讨的问题（几个文明程度不一的智能物种究竟要如何相处）都更和我胃口一点。不过在细节（特别是人物之间的关系和人物本身的刻画）上相对还是比较弱一点，甚至有些地方还有点牵强。比如安德究竟跟那个外星生物科学家有什么感情基础？？简看中米罗的地方具体又在于哪里？死者代言人的魅力似乎也主要靠其他人的傲慢无知才能衬托，等等。剧情方面比如皮波和利波被猪仔种到土里的原因感觉也有点牵强。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/26767247/\">安德的游戏</a>：2016 年的时候看过，今年看三部曲的其它书时重看了一下。感觉这本书最后一章关于人类和虫族的交流这个点题的内容虽然是全书的中心，但是感觉出现得有点太突兀了，如果能在前面的章节中再多添加一些伏笔和铺垫，应该会好很多。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/27142853/\">Why Only Us</a>：感觉相当难读的一本书（也许是写作风格的缘故），应该算是乔姆斯基学派的一个比较新（2016）的观点总结吧。感觉中心思想是语言的本质以及其进化出来的原因并不是为了交流（比如像《人类简史》里“语言发展出来是用来八卦的”这类的观点），而是作为大脑内部组织思维的一种工具。所有人类的语言存在一个统一的内核 Universal Grammer (UG)，由语言相关的基因决定，而世界各地产生出来的各种语言都是相同的 UG 在 externalization 的时候的 variation 导致的；因此人类的发声系统或者听觉系统的特殊构造都和语言的产生并没有很本质的关系。比如我们在朗诵文本或者跟人说话的同时做其他比较需要动脑子的事情会比较吃力，再比如聋哑人社区在经过一定时间之后会自然地发展出一套完整的手势语言，亦即另一套 externalization 的方式，反过来人类的近亲猩猩即使经过大量训练也无法学会语法结构完整的手势语言（参见 Project Nim），并且有一些研究表明他们并没有像人类那样的“词汇”概念，比如”苹果“对它们来说可能会是“在这里吃苹果”、“傍晚用刀削苹果”之类的复合意思。</p> <p>因为是讲语言进化的书，前面部分有挺大的篇幅在讲 general 的进化方面的内容，书里说之所以现在比较适合来写这个课题，一方面是 UG 相关的理论在多年的进化之后终于变得足够简单和信服了，另一方面则是进化相关的研究进展。书里说人类语言进化的一个关键事件是进化出一个叫做 merge 的操作，使得我们能够 mentally 递归地构造无限的结构。</p> <p>最后，乔姆斯基流派的观点对语言学影响深远，但是并不一定就是绝对正确的观点，也不是领域内唯一的观点，实际上，书里有一个观点是说，我们想要了解一个东西的进化过程，必须先要搞清楚这个东西到底是怎么回事（比如动物眼睛的构造和工作原理我们基本上是搞清楚了的），但是对于语言来说这个问题还是巨大的未解之谜，不只是语言的“计算”，就是最基本的“词汇”功能——大脑的记忆模块如何对这些东西进行存储和检索等等，都是完全没有搞清楚的。书的标题《Why Only Us》是什么意思呢？感觉比较相关的还是讲进化的时候提到的一段，为什么生物起源之后多达数百亿个物种中，只有一种发展出了语言的能力（或者说，高级智能）呢？有两种可能性比较大的解释：1. 语言并不是自然选择所偏好的东西（相比比如像视觉之类的在地球上生存很有用的功能），地球上大部分生物都没有语言或者高级智能，但是发展得好好的；2. 语言进化是一个极难做到的事情，从 computation 的角度来说，把“进化”看成一个 stochastic optimization 的话，语言可以当做是一个 computational intractably 的问题。至于为什么我们刚好有了语言和高级智能了，那大概就纯属运气吧？</p></li> \n <li><p><a href=\"https://book.douban.com/subject/26980565/\">九州·旅人·怀人</a>：界明城与四月相遇相识的故事，之前就看过很多遍了。</p></li> \n <li><p>来自新世界（<a href=\"https://book.douban.com/subject/25971284/\">上</a><a href=\"https://book.douban.com/subject/25971285/\">下</a>）：2015 年看过改编动画，最近刚好看完《美丽新世界》，在图书馆偶然看到《来自新世界》的台版翻译就借出来看了。《来自》应该是借鉴或者说致敬了《美丽》，其反乌托邦的设定，未来人类的洗脑式的严格教育和管理，以及对“未开化”原始人种的圈养治理等等。不过应该不同之处是比相似之处多的，本书篇幅要长很多，算是科幻类，但是尤其是上部讲孩童时候的故事颇有种轻小说的既视感，后面画风急转，情节也变得紧张和黑暗，结尾有点小，但也还不至于归为烂尾。书里涉及和讨论的问题很多，结局处主角们又开始培养不净猫，我想大概最无奈的一个议题还是社会的最优形态吧，无奈之处在于书中在经历了灾难性的事件之后大家开始冷静和反思，但是最后的结论还是回到起点。虽然设定是基于奇幻的咒力，但是实际上其实是非常现实的科技发展过程中单体个人所能造成的破坏性越来越大的问题，甚至贫富或者科技差异在未来被放大到足够多倍之后也许也会变得像书中的人种之间的差异一样。不过书中并没有提出解决方案也无可厚非，毕竟这是一本引人思考的小说，而不是一部社会问题的解决方案论述。</p></li> \n <li><p>九州 缥缈录（1-6）：等了很久的《缥缈录》电视剧终于开播，结果异常失望，于是又复习了一下这几本书。缥缈录的故事如果能把后面几位英雄的成长全部写完，把所有坑都填上，应该是一部很喜欢的书，就目前这六本只见挖坑不见填的状况，让人觉得有点后劲不足吧。不过还是不错的书啦。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/26269441/\">ポム・プリゾニエール</a>：基本没有什么剧情的漫画，不过作者似乎主要就是想画裸女，猫和废墟，然后用一些小片段故事串联起来。不过鶴田謙二（回忆爱玛侬的作者）的画风确实很喜欢，虽然没有什么剧情，但是慵懒的人和猫的日常生活中的各种小动作小细节都刻画得很细腻，惟妙惟肖。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/2884000/\">The Ghost Brigades</a>：有种太空大战的背景下的刀枪肉搏的感觉，涉及好多不同的互相敌对的智慧种族，不过都只描绘了一些局部战斗，感觉比较适合较低的成本拍成电影。比较喜欢里面的世界观设定里关于 consciousness 的部分，虽然感觉作者对于“program”和“data”的理解是不是有点颠倒过来。故事对克隆人与原来的人之间的关系也做了探讨。多人共享感官和深度意识交流的“集成”状态感觉很好玩。世界观中其它外星人的社会形态也花了心思。至于小说内容本身，剧情有些平铺直叙，紧张起伏相对较小，人物性格刻画也没有特别生动，关于女主甚至还有好多地方讲得不清不楚，不过遗漏的细节和没有交代的伏笔也许是因为这只是系列书（《老人战争》系列）中的一本的缘故？</p></li> \n <li><p><a href=\"https://book.douban.com/subject/2084894/\">Brave New World</a>：非常发人深省的关于未来世界乌托邦的一种可能性的展示。就故事性来说个人觉得并没有特别吸引人，但是乌托邦世界的构思很让人不舒服：人们被通过基因和洗脑等各种方式培育成属于不同阶级的人各司其职，和《1984》所描述的那种重压下的社会不同，美丽新世界里的未来世界社会安定祥和，没有争斗与痛苦，作为交换人们失去了”自由意志”。但是是否自由就一定会伴随着差异化，冲突，矛盾，灾难…？若从社会整体的角度来说，也许冲突和矛盾才是不断进步的动力源；但是从个体的角度来说，人又追求的是什么呢？最大化快乐，满足或者刺激？似乎从生理的角度来说很容易做到？不论是书中所描述的洗脑，亦或者是《娱乐至死》中描述的那种泛滥的“精神鸦片”，从客观的角度来说，人是变得更“快乐”了，但是这是人们所追求的吗？如若不是，人所求又为何物？感觉很不愿意看到书中的描述变成人类社会的最终形态，但是若要讲一讲取而代之什么才是更加合适的理想状态呢，却又很难说出来。也许人的存在本无法承载太多的意义吧！</p> <p>一方面来讲现代社会里诸如修改教科书，或者社交媒体大规模精准定制洗脑的事情似乎也屡见不鲜了，但是另一方面只要世界上还有不同的国家之间互相制衡大概就还不会真正完全变成 Huxley 所描述的美丽新世界中的那个样子吧，毕竟那意味着社会乃至于科学发展都会进入仿佛是静止一般的永恒的死循环中。但是不得不说 1932 年写出这样的书来证实太有前瞻性了。</p> <p>不过排名没有很高的主要原因是从文学性的角度来说感觉没有《1984》之类的那么好看。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/30442655/\">The Wisdom of Wolves</a>：National Geographics 出品，围绕两位作者在爱达荷州郊外的保护区与一个狼群共同生活六年的经历展开，讲述了他们观察到的狼群的生活。有点惊讶的是，（书中说）整个人类社会对狼的认知绝大部分都只是建立在毫无根据的神话、童话故事（中坏蛋大灰狼的形象）的基础上，目前世界上还有很多地方都在继续合法对狼进行猎杀和捕杀。书的章节组织比较松散，有点像散文（而不是科学报告），其中描写的许多行为都和人类很相似。比如狼和人类一样都极具好奇心和探索精神，和人一样很早就在全球范围各处都留下踪迹。它们喜欢玩耍（突然想起来好多年没玩过丢手绢之类的游戏了），重视家庭和领地，会认真照料小狼崽（和狮子不一样的地方在于，它们不会杀害非亲身的狼崽，而是同样会细心抚养），有狼群纪律，会互相合作——很多部分是后天习得的，比如在失去经验丰富的头狼之后，很多狼群会很快衰败。还有一些 observation 描写得更加拟人，比如狼伴侣和朋友之间的 binding，狼对于死去同伴的悼念等等，虽然几乎只能靠猜测，甚至可能是作者自己的感情投射，不过我觉得狼具有复杂情感应该也并不是很不可思议的事情。</p> <p>不过，尤其是这几年看了许多 BBC 新出的关于自然界的纪录片，才慢慢意识到我们对于各种动物的了解都多么限制在莫名其妙形成的各种 stereotype 中，也许书中描写的事情，其实对于许多其他的生物也是一样地适用吧。所以，虽然看到狼的生存条件收到人类巨大威胁的情况时不时有些触动，但是也并没有到潸然泪下的程度，因为觉得整个自然界似乎都正在受到人类的巨大威胁，哭似乎并不能解决问题。也许唯一足够浪漫的解决方案是，人类踏上星际航行的远征，将地球作为永远的故乡留给自然界的其他芸芸众生。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/24843867/\">安妮日记</a>：粗略地看了一下，以为十四岁少女的日记，各种念念碎加多愁善感有时甚至有些无病呻吟，但偶尔又有一些深刻的言论和思考，总体来说感觉跟自己初中时期写的日记差不多（当然我自己可能只有前者，而没有深刻的思考）。不过这本日记的特殊之处在于他是出自二战期间收迫害的以为犹太小女孩之手，当时他们大约两家八人左右为了避难隐藏在一个阁楼密室里一步不出数年，每天物资匮乏还要担惊受怕，实在是难以想象的生活。总之其实事件背景比日记内容本身沉重得多，不过这也就是说即使在最黑暗的时刻，人也还是可是保持自己独立的内心吧。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/4278488/\">Portrait Sculpting</a>：有点想玩黏土 sculpting 但是感觉很难而且需要很厉害的工作室。不过买这本书主要是作为人像绘画的学习和参考的，讲解如何用一块块黏土构建人脸各个部分的的时候确实对人脸的三维结构理解有挺多帮助，另外完成图的照片也是不错的参考素材。除此之外，讲解表情的那一节介绍了各种表情时候典型的肌肉运动，以及脸部的三维变化（哪里要加一坨黏土，哪里要挖掉一块），感觉挺有用；再就是如果一直不知道如何画头发的话，看雕塑的时候如何建模头发应该也能得到很多启发了（总之头发也是有三维结构的，而不是单纯一根根线）。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/2133282/\">よつばと!</a>：故事有点无厘头的漫画，风格和《日常》有点像，比较轻松愉悦，但是不太适合一次看太多否则会比较腻，目前只看了第一本。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/1751692/\">Bridgman’s Life Drawing</a>：比较古老的一本书，把人体结构简化成方块来画，配图歪歪扭扭的好处是跟着临摹的时候不会觉得自己画得（相比参考图来说）好难看哈哈哈。跟着画完才知道这是一本在许多地方都备受推崇的书，似乎作者的 sketch 看似歪歪扭扭，但是其实每一个歪扭的地方都有很精确的解剖学缘由，总之 Bridgman 的书都被奉为经典，主要的问题是他基本上只画但是不做讲解，所以必须要自己已经对解剖学理解相当深刻了再反过来看才能比较看得懂。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/4582325/\">窥视欧洲</a>：妹尾河童游历欧洲的见闻画册，主要是各地的城堡，便宜旅馆，火车车厢，列车员等的描绘和对比。作者的 line drawing 虽然没有强烈的明暗对比，但是仔细看还是蛮有味道的，透视画得非常好，观察也非常仔细（比如各国列车员工作服上分别有多少个纽扣）而且描绘的是上世纪七十年代的事情，除了看到历史的味道之外，因为作者把各种价格都写出来了，也可以看到物价的变迁。住遍了世界各地的便宜旅馆和阁楼的河童，居然在三番被一个 2.5 美元一晚的酒店吓破胆，哈哈真是太形象了。总体来说是一本轻松的见闻画册，没有特别深刻和具体的内容啦，作者还有其他各种“窥视”系列的书籍。</p> <p>引用书里一句话：“用相机拍完时，会有种「据为己有」的感觉；但事实上，这常常只是种错觉。”</p></li> \n <li><p><a href=\"https://book.douban.com/subject/26767240/\">安德的影子</a>：可能是安德的游戏三部曲中最不喜欢的一部吧。</p></li> \n</ul> \n<p>✦✦✦✦✧ 中规中矩：</p> \n<ul> \n <li><p><a href=\"https://book.douban.com/subject/6789551/\">不存在的骑士</a>：一个荒诞的，充满想象力还带一些讽刺意味的小说，查理大帝和他手下的一些骑士的故事。总之故事看着蛮好玩的，虽然我没有太看懂中心思想是什么。</p></li> \n <li><p>銃夢 <a href=\"https://book.douban.com/subject/30386443/\">一</a><a href=\"https://book.douban.com/subject/30386445/\">二</a><a href=\"https://book.douban.com/subject/30417121/\">三</a><a href=\"https://book.douban.com/subject/30417122/\">四</a><a href=\"https://book.douban.com/subject/30460798/\">五</a>：今年很火的电影战斗天使阿丽塔的原著漫画。赛博朋克和各种机甲的描绘都很美，特别是在上世纪九十年代的背景下，可能是比较有先驱意义的一部作品吧。但是叙事上有点糟糕，不管是情感铺垫还是情节走向感觉都比较没有头绪，若隐若现地铺设出很大世界观的影子，但是直到最后一本才终于草草地讲出来，结尾也比较淡。总之算是一部主看画面的漫画吧。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/34855365/\">Letters from an astrophysicist</a>：罗斯地球和空间中心的主任收到的信件和邮件（他有数年间有公开的电子邮件地址）和他的回信的选集。五花八门什么都有，时不时有一些很有意思的或者很有同感的小片段。没有特别喜欢，但是也并不难看，不过我觉得这算是一本老少皆宜的书，毕竟是一本通信选集，而且本身通信的对象就是各个年龄段和各种背景的人都有。</p> <p>很多来信是关于外星人，飞碟，宗教信仰和科学的冲突，上帝存在性等等个方面的询问或者争论的。感觉看作者如何不带感情色彩，以一种尊重对方的态度但又毫不退让地为科学做辩护，还是挺有趣的一件事情。有些内容感觉正常情况下持双方观点的人要么根本谈不到一块儿去，要么直接吵得面红耳赤。作者的观点是，重要的并不是人“知道”或者“相信”哪些事（宗教上的或者是科学上的），而是学会如何思考，当你懂得提出合适的问题并且如何逻辑合理地去寻找或者验证答案的时候，在面对科学和众多不同的宗教信仰各自 claim 的“事实”面前就不会觉得真伪难辨了。</p></li> \n</ul> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/2019-books/summary-Q4.png\" style=\"width: 100%;\"> </img>\n</div> \n<ul> \n <li><p><a href=\"https://book.douban.com/subject/6133604/\">Jane Eyre</a>：中学的时候就尝试读但没看完的世界名著。文学性本身而言可以是满分了，细节上文字优美、华丽，但又没有显得特别浮夸和造作，英文版读起来需要的词汇量挺大（至少算今年看的书词汇量要求第二大的）；然后对白、心理和局部细节特写这些都做得很棒，当然有些对白有点夸张到感觉像是戏剧或者甚至歌剧里的对唱，不知那个时代背景下的人是否真的是那样对话的；最大 scale 上虽然整个故事相对比较简单，但是也很适当地增加了一些紧张感和悬疑，前后呼应算是恰到好处，后期的情绪渲染也确实感染到我了，甚至还做了噩梦。总之有种确实不愧为世界名著的感觉。</p> <p>至于故事内容本身，感觉就没有那么好了，读之前以为是讲独立女性的奋斗的，但是读完以后发现完全不是，网上有人说这是一本 yy 小说，感觉也有一定的道理吧。不过话说回来世界文学名著里描述的故事，有正面意义的似乎也不多……</p></li> \n <li><p><a href=\"https://book.douban.com/subject/1980939/\">Skin: a natural history</a>：与皮肤有关的各种话题搜罗。有一些章还挺有意思的，比如为什么几乎所有陆地上的哺乳动物都长毛，但是人却进化出了几乎全裸的皮肤？书里的说法是大脑功耗变大，以及需要白天长距离行走等原因，所以需要更强大的散热系统。还有日照对皮肤产生的各种破坏和好处，皮肤在免疫系统中起到的作用，以及各种肤色的人种的由来和进化过程之类的。也有一些章节比较无聊甚至有点凑数的感觉，比如纹身和化妆的简史之类的。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/1186392/\">约翰·克利斯朵夫（1-3）</a>：最欣赏的是全书的结构把握，从孩童的懵懂到青年的强说愁到成年的愤青等等整个成长过程刻画得非常结构清楚，感觉是非常深厚的功底。最喜欢的一句 quote 是“克利斯朵夫回答说，人生第一应尽的责任是要让人家觉得生活可爱”，但是总体而言，克利斯朵夫的故事对我几乎没有产生什么太大的鼓舞或者什么其他方面的影响，也并没有像看《月亮与六便士》那样即便并不同意主人公的行为方式，但是会觉得那是一种难能可贵的特质。克利斯朵夫仿佛一头狂躁幼稚的野牛，也许这一方面也许反而是比较有共鸣的，毕竟自己（特别是在成长的过程中）也是有过各种幼稚、天真、自以为是、迷茫、焦躁、冲动等等各种情绪的。但若要说英雄主义、斗争这些方面，却是没有怎么体会到，特别是我认为应该最重要的强大的精神和意志力方面。恰恰相反的是，里面的人（包括主角和其他的人）仿佛都是无比脆弱的，有效的的解决办法似乎其一就是逃避；其二就是情爱发泄，去找一个人来爱一爱，男朋友、女朋友、情夫、情妇，如果实在不行，还可以找儿女来发泄父母之爱。也许是我划错重点了？也许人性本就确实是如此？又也许我现在还过于不成熟又狂妄所以没有能理解到这本书的精髓？</p> <p>总之从文学的角度来说觉得是一部伟大的作品，但是其他方面并不太合我胃口。音乐方面的描绘都比较简略，对于克里斯朵夫作为一个“音乐家”的成长这一块与他作为“人”的成长这一块比起来感觉有点单薄，当然可能文字描述起来也比较困难。再最后就是内容，或者其中的价值观本身了，它是否是客观的真实人性我难以拿捏，但并不合我胃口也没有让我产生憧憬、或者受到鼓舞，但凡会比较有共鸣的，大都是其中比较 negative 一点的一些内容，所以阅读体验也不是特别 comfortable，不过既然能左右我的情绪，也说明书确实是很好的（文学方面）。由于看之前有多个朋友推荐了，看书评里也很多诸如“影响一生”的评价，让我对其中的价值观部分有种过于不切实际的期待了，可以说当时大概觉得看完之后自己就要升华了，从此一切挫折困难都要被我踩在脚下，导致书看到快要结束都还没有出现这种升华的时候几乎是有点百无聊赖。不知道自己会不会在许多年后突然能够品味到此书里不一样的真意。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/33409398/\">The Origins of Language</a>：不是非常有趣，或者说和我的期望有点不太相符。我主要想看人类语言形成和人类的复杂思考、社会交互等相关方面的共同进化的一些探讨，虽然书中也有一些讨论，但是很大的篇幅花在其他一些比如人类听觉系统和其他灵长类的区别，人类的发声系统和其他动物的区别（最接近的灵长类由于生理结构无法发出人类语言中用的很多声音，但是更远的动物比如一些鸟类却是没问题的）等等，我觉得这些内容相对是比较次要的是因为我觉得人类要发展出语言，即使声音媒介这条路走不通，也会通过其他媒介建立起通讯通道（而且书里也提到了手势哑语的发展）。</p> <p>当然书中也有不少有趣的内容，比如在探讨人类与其他近亲灵长类的区别的时候，有讲到人类相比起来更有交流的欲望，虽然其他动物在碰到食物或者敌人等与生存息息相关的事件时也会交流，但是不太会没事说一句“看！灰机！”人类交流的欲望还来自于一种“利他”的本性——至少是在不损害自己利益的情况下，以及在一个社交群体内部，比如看到谁书包开了或者东西掉了会提醒一下对方。模仿的本领很多动物都有，但是有一种叫做 mirror neuron 的特殊神经细胞却只有在一部分动物中有明确观察到：这种神经元在自己做某件事或者观察到别人做某件事的时候都会激发。此外还有就是人类强大的记忆和信息处理能力（当然我觉得这和语言的出现也许还有一点鸡和蛋问题需要讨论）。我感觉书里谈到的很多都是语言出现的必要条件，但是却并不一定就充分概括了最本质的起因，比如很多这些条件看起来都比较容易加入到一个计算机模拟的 agent 系统中去，如果对这样的系统进行模拟，是否会观察到语言的出现呢？当然也许即使 computer agent 之间出现了自己的“语言”，我们也不一定能够理解吧？</p> <p>书里最有趣的一个问题，或者说反问就是：我们会问为什么只有人类进化出了语言？但是这其实并不是个问题，你为什么不问，为什么只有长颈鹿进化出了长脖子，为什么只有大象进化出了长鼻子？感觉有点像在说“我思故我在”了。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/2820758/\">Carlson’s Guide to Landscape Painting</a>：似乎是很经典的一本讲风景绘画书，不过就目前来看有点太古老了，最直接的缺点就是配图全都是黑白的，并且配图数量也很少，很多地方就是大段大段的文字干巴巴地讲，并且似乎是用一种当时的学术写作风格来叙述，感觉上就是叨叨话很多，重要的信息并不是简洁明了地几个 bullet point 列明，而是无缝地穿插在大段大段的叙述中，总之看起来挺累的，看完了即使觉得有收获的地方想要回去找也会超难找，现代写作风格把重点单独强烈列出来真是文明的一大进步。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/1827785/\">A Single Man</a>：某天半夜失眠想看会书又不想开灯，就在亚马逊上随便找了一本高分书到 kindle 上看。原本以为是一本正能量的书，结果翻开压抑的气息扑面而来，讲的是主人公在伴侣车祸去世之后的生活，再往后看才发现原来是讲同性恋。由于和我一开始预期的主题相去甚远所以打算弃掉的，但是渐渐被作者的文字所吸引。抛开对主题的兴趣的话，作者对于失去心爱的人之后那种心碎、悲伤和如同行尸走肉般的状态的刻画简直是跃然纸上，全篇应该并没有直接出现诸如“难过”之类的词汇，但是阅读的时候仿佛就瞬间闪回自己在人生中情绪最黑暗低落的日子。我想也许强烈的情绪张力来自于作者对于主人翁内在心理活动的生动刻画，和外在的一如既往的日常生活的描写之间形成的强烈对比。并且能够将这样一种氛围状态扩写成一整本书的篇幅而不让人觉得只是翻来覆去地在絮叨“我好难过”，感觉真的是非常厉害。觉得对于“用文字来描述情绪”感兴趣的人来说应该是一个不错的参考。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/1376870/\">The Origins of Totalitarianism</a>：讨论反犹太主义的起因和斯大林、希特勒造就的集权主义，由于对一二战期间欧洲整体历史了解太少，所以很多引用事件来论证的地方都没有看太懂，而且 Political Science 的读物每次读都觉得好考验英文阅读水平，各种大长句，导致长篇论证很容易就迷失在细节中忘记了到底要论证什么。总之到后面我几乎完全把它当做英文练习读物来读了，算是篇幅不小的一本书，感觉硬着头皮读完之后自己的英文阅读水平和速度好像都稍微上升了一点。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/6898595/\">Guitar Zero</a> - The Science of Becoming Musical at Any Age：感觉比较散，有点对不起（附）标题，作者虽然是认知心理学专家，但是关于这个主题的科学研究实在是很少，作者本人学习吉他的经历只是非常稀疏的一个 sample，也支撑不起这么大的篇幅，所以在讲自己的经历的同时书还穿插介绍各种相关的讨论和一些 anecdote，比如人类社会里有“音乐”这个东西究竟是由基因决定的还是由社会文化发展决定的；再比如学习音乐时天赋和后天练习究竟各占多少重要性，等等，算是和主题有一些关系吧，但是时常会觉得跑得有点远了，况且都是蜻蜓点水地聊聊天（因为并没有足够多的科学研究和证据能够下得了任何定论）。当然其中大量提及的各种美国歌手我都几乎没接触过，大概也是看着不是很有趣的一个原因。总之我觉得全书很切题（特别是副标题）的内容其实比较少。</p></li> \n <li><p><a href=\"https://book.douban.com/subject/1574776/\">Sargent Portrait Drawings</a>：还不错吧，非常薄的一本小册子，收录 Sargent 的一些素描画，可以看到几种略微不同的风格。</p></li> \n</ul> \n<p>✦✦✦✧✧ 三星及以下（不推荐）</p> \n<ul> \n <li><a href=\"https://book.douban.com/subject/10747883/\">怦然心动的人生整理魔法</a>：唠唠叨叨地叫你这样做那样做，然后又给一些莫名其妙的理由（比如你要抚摸你的衣服，把你身体的能量传递给他之类的），感觉有点像在看一本宗教典籍。就连比较 practical 的一些内容（比如叠衣服叠袜子的方法）也不是很有用的样子。</li> \n <li><a href=\"https://book.douban.com/subject/5926208/\">Portrait Painting Atelier</a>：比较无聊，要么是我期待太高，总之和期待的（讲解人像的画法，比如各个器官的结构和互相之间的关系，观察画刻画的时候有哪些注意事项之类的）差别很大，实际上大量的篇幅在讲用什么颜料和什么颜料调什么颜色，怎么画 underpainting，再一层一层地上色来得到 skin tone 之类的。</li> \n <li><a href=\"https://book.douban.com/subject/30256353/\">The Calculating Stars</a>：居然是 2018 星云奖。第一章写的很精彩，身临其境的紧张和震撼感，如果照这个势头下去也许我会给六星好评。但是第一章之后就变成了生活念念碎，感觉像是枪手代笔写的一样，只有每一章开头的新闻摘要还在继续跟进主线剧情的进展，第一章辛苦建立起来的紧张感逐渐消磨殆尽。如果想了解五十年代美国黑人和女性在工作社会上受到的歧视，以及当时人类“计算机”的情况，也许还算是相关的（暂不评价这方面描写得是否好），但是若是想看科幻……摊手，深感受骗。</li> \n</ul> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/anime.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>除了看书的数量增加以外，今年看动漫的数量也有所回升，包括新番也有追一些。大致按照喜好程度排序有：<a href=\"https://movie.douban.com/subject/30353357/\">进击的巨人第三季（第二期）</a> ， 吹响悠风号<a href=\"https://movie.douban.com/subject/26169716/\">第一季</a>、 <a href=\"https://movie.douban.com/subject/26655961/\">第二季</a> 、 <a href=\"https://movie.douban.com/subject/26994755/\">剧场版</a> ， <a href=\"https://movie.douban.com/subject/27062637/\">利兹与青鸟</a> ，<a href=\"https://movie.douban.com/subject/26677934/\">灵能百分百</a> ， <a href=\"https://movie.douban.com/subject/30458442/\">动物狂想曲</a>、<a href=\"https://movie.douban.com/subject/26759819/\">命运之夜——天之杯II</a> ，拳愿阿修罗 <a href=\"https://movie.douban.com/subject/27145024/\">1 期</a>、<a href=\"https://movie.douban.com/subject/34800559/\">2 期</a> ， <a href=\"https://movie.douban.com/subject/27666505/\">JOJO的奇妙冒险 黄金之风</a> ， <a href=\"https://movie.douban.com/subject/26864121/\">龙的牙医</a> ， <a href=\"https://movie.douban.com/subject/26882339/\">一拳超人</a> ， <a href=\"https://movie.douban.com/subject/27607378/\">龙珠超：布罗利</a> 。巨人现在是越来越精彩了，今年漫画里也高潮迭起，虽然我没有在追漫画，但是也看到一些谈论，感觉要封神了，2009 年开始连载的第一话标题是“致两千年后的你”，一直以来有各种解读和尝试，十年之后在今年年末的时候出了一话叫做“致两千年前的你”，把一个十年前挖的坑填起来了，且不说故事情节，就仅仅是“十年的伏笔”这件事情本身就够燃爆了。有多少长期连载的故事不都是写一段编一段，即使有伏笔很多也都是后来专门去翻前面自己写的故事看看有没有可以用的线索临时造一个伏笔出来（根据《食梦者》里对漫画创作的描述），燃得我都跃跃欲试地想去翻一下自己十年前的年终总结，看有没有什么大伏笔之类的了哈哈哈。总之很期待最后一季的动画片。相比起来，一拳超人的第二季动画就很没有后劲，感觉制作水平上下降了不少，特别是在于战斗的刻画上。</p> \n<p>吹响悠风号是音乐类型（当然也可以说是校园类型）的动画片，也是比较喜欢的，看了两季 TV 版和两个剧场版。特别是剧场版《利兹与青鸟》的画风和色彩都尤其美。TV 本身则挺大一部分在音乐上，剧情本身并不难看，但是也没有特别出彩了，当然主角的性格和她演奏的乐器之间的呼应算是一个不错的点。以前不是特别感冒但现在也了解到了一些吹奏类音乐的魅力。还有几部今年的新番，比如《心理测量者》第三季之类的，有陆陆续续在看，但是属于没有想象中好看，但是也没有难看到会直接弃掉的程度，所以进度比较慢，可能会拖到明年春天才会看完吧。</p> \n<p>游戏方面今年玩得不多，主要的部分应该是在玩去年就开始的《<a href=\"https://www.douban.com/game/26954563/\">异度神剑 2</a>》，但是总体来说还是玩不太动，虽然对里面的世界（生活在云海之上，由漂浮在空中的巨兽托起的都市组成的世界）和各个种族的设计之类的都比较喜欢，但是大地图 navigate 起来很费劲，而且战斗系统吵吵闹闹地，打了不少次也都没啥感觉。总之今年也只是把剧情推进了一小部分，照这个进度也许明年就自动弃坑了（就像《八方旅人》一样）。其他的似乎都是玩的 Nintendo Switch 上的多人游戏，像《<a href=\"https://www.douban.com/game/26954652/\">超级马里奥 奥德赛</a>》、《<a href=\"https://www.douban.com/game/30246758/\">胡闹厨房</a>》、《<a href=\"https://www.douban.com/game/30164614/\">任天堂明星大乱斗</a>》之类的。不过任天堂不论是游戏机还是游戏都做得相当好啊，并不是一味地追求画质，而是从娱乐性的角度发力，而且感觉抓住了 party game 这样一个市场，像明星大乱斗这个游戏居然可以八个人一起玩。当然不知道 party game 这个市场本身有多大了，感觉在美国的话外国人开的 party 似乎还是以聊天为主……</p> \n<h2 id=\"生活在湾区\">生活在湾区</h2> \n<p>今年在生活上可以说是适应的一年，过去一年中的不少问题都直接或者间接地得到了解决，可见认真生活的态度还是蛮重要的。</p> \n<p><strong>交通</strong>：如果说湾区的无聊程度是一个因人而异的主观问题的话，那么湾区拥堵的交通毫无疑问是一个客观存在的问题，给我生活带来的最大的麻烦无疑是上下班通勤问题。虽然由于距离不是很远，拥堵的时候大概 30 分钟也能到公司，但是在 traffic 中开车是一件很影响情绪和士气的事情，为了让通勤过程不那么无聊，我甚至尝试开始在车里听有声书，我发现一个叫做 <a href=\"https://www.thegreatcourses.com/\">The Great Courses</a> 的系列还不错，在 Audible 上可以听。总的来说我并不是特别喜欢听有声书，尤其是在开车的时候，经常会因为路况之类的需要将注意力集中到其他地方，或者是一些外部噪音之类的，导致会错过一些句子；并且开始和结束通常是由开车停车之类的外部事件决定的，而不是自然地听到某一个部分。总的来说到最后就只是一些片段的粗糙理解。不过我后来觉得至少有两种类容是适合通过有声书来听的：一个是音乐类，这个干巴巴的纸质书和多媒体的内容相比实在是相差太远了，完胜；另一个是历史类，我对历史有一定的兴趣，但是过去看过的一些历史类书通常都很快就会忘光光，所以我觉得历史当做一个背景音消遣用应该不错，反正回头都忘记了，即使只听到一些片段也无所谓。总之我在通勤的过程中听完了《<a href=\"https://www.amazon.com/How-Listen-Understand-Great-Music/dp/B00DTO6GXE\">How to Listen to and Understand Great Music</a>》、《<a href=\"https://www.amazon.com/23-Greatest-Solo-Piano-Works/dp/B00P3PLLT6\">The 23 Greatest Solo Piano Works</a>》和《<a href=\"https://www.amazon.com/Fall-Rise-China/dp/B00DTO4XNO\">The Fall and Rise of China</a>》这三本有声书。</p> \n<p>第二个解决方案是错开高峰期通勤，早上去公司的时间由于我没法比送小孩上学的父母们更早，而去太晚又会很难在公司找到停车位，所以基本无解，但是回家的时间则有很大的自由度。去年我通常都是在公司吃完饭（6:30 供应晚饭）再晃一晃才回家，这样的问题是到家通常已经很晚了，放松和做其他事情的时间就很少了。一开始我有尝试过工作完成之后先在公司做点其他事情，最主要的就是可以去公司琴房练琴，不过由于上班高峰期一旦开始，两三个小时之内是不会缓解的，而且我在公司似乎除了练琴之外也比较难放松下来干其他的事情。于是后来就开始尝试提前回家，回家以后再稍微 work from home 一点时间把该做的事情做完。由于五点路上的交通就已经非常糟糕了，所以我有很长一阵子是四点多回家，当然这样带来了晚饭如何解决的问题，这个我会在后面专门讲。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/bike.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>第三个解决方案则是骑车通勤，一方面可以避免拥堵的交通，另一方面还能缓解一下缺乏锻炼的问题，所以我在今年也开始尝试骑车上班。买了一个<a href=\"https://en.wikipedia.org/wiki/Gearbox_bicycle\">带 Gearbox 的自行车</a>，有点像简易版的汽车换挡系统，和常见的那种暴露在外面的变速器不一样，不会有必须在行进中才能换挡、掉链子、需要经常清理、上油之类的问题，感觉还蛮酷的。不过我对车、机械之类的也不是很感冒了。当然我原来住的地方骑车上下班稍微有点远，单程大概在 40 分钟左右，虽然有一半的路程是在封闭的自行车（和行人）的 trail 上，但是也有一半是直接在公路上骑，特别是有一个地方需要一个没有红绿灯的左转，每次都捏一把汗。在高峰期车很多的时候要过去尤其困难。另外虽然我大学的时候是骑车的，并且能够双手脱把，但是我有些姿势可能不太对，特别是停车和起步的时候我是坐在座位上的，所以车座很高的情况我都不太能骑，停车的时候基本上就摔了，而且爬坡的时候站起来骑我也不太会，于是专门花了一段时间看 YouTube 视频学习了一下这些技能。公司其实非常鼓励大家骑车上班，不仅可以免费申请租用公司自行车（由于申请人比较多，可能需要排很久的队），而且骑车上班可以打卡，每个季度用打卡获得的分数可以换一些不错的礼品。</p> \n<p>最终的解决方案就是搬家啦，新家在离公司更近的地方，开车不需要上高速，即使在高峰期一般也不会超过 20 分钟，最关键的是骑车也只要 20 分钟，我觉得是既舒适又能得到一定程度锻炼的距离。所以搬家以后自行车的利用率立刻得到提升，目前我 lease 的汽车会在明年一月份到期，通勤问题解决以后就没有要 lease 新的车的打算了。当然湾区昼夜温差很大，冬天早上骑车其实很冷，周末出行之类的没有车也很费劲，所以最终明年会不会过上完全没有车的生活还有待商榷了。</p> \n<p><strong>睡眠</strong>：去年生活中另一个严重问题就是睡眠不足，虽然我晚上通常都会按时睡，但是原来住的地方是在一条比较繁忙的公路旁边，所以每天早上很早就会被吵醒，睡眠不足又会导致上班很困，喝咖啡解困又会更进一步影响晚上的睡眠质量。并且不论是噪音源本身还是由于睡眠不足间接影响，都会让我的耳鸣更严重。所以虽然在朋友家住既舒适又便宜还能时不时被爱好料理的房东投食一些很 fancy 的食物，但是最终还是决定搬家了，最主要的原因还是噪音问题。</p> \n<p>搬家之后睡眠质量得到了很大的改善，新家虽然也靠近一条相对繁忙的道路，但是是在小区很靠里的房间，加上双层隔音玻璃，虽然离在学校时候住的地方的安静程度还差得很远，但基本上再没有在早上被车声吵醒了。当然为改善睡眠质量作出贡献的还有其他许多因素，除了消除噪音源之外，贡献最大的应该是《<a href=\"https://www.amazon.com/Why-We-Sleep-Unlocking-Dreams/dp/1501144316\">Why We Sleep</a>》，看了以后对睡眠问题更加重视了，戒掉了工作日喝咖啡的习惯，周末偶尔会喝也是因为嘴馋，并且都会尽量不在中午之后喝；买了 blackout 窗帘，避免早上过早被太阳照醒；睡前一小时内开始主动避免看 iPad 或者电脑屏幕之类的，而是改成看书之类的休闲活动（难怪今年阅读量涨了很多）；年末还换了 memory form 的床垫，当然这个能否改善睡眠可能还需要比较长时间的 evaluate，总体来说我觉得睡着更舒服了，但是好像散热不是那么好，偶尔会被热醒。总而言之虽然睡眠质量肯定还是比不上年轻的时候，并且偶尔也会有失眠之类的情况出现，但是跟去年相比还是改善了许多，目前基本上不会把它当成生活中的一个困扰了。🙂</p> \n<p>睡眠 tracking 这件事情大概是有利有弊，好处在于能够有效地监控自己的睡眠质量，虽然睡不好的时候自己身体应该也会知道，但是可能不一定会很敏感，另外不少 tracking 工具都允许做 annotation，比如今天有没有喝咖啡、睡前吃很多、或者今天压力特别大之类的，这样可以在事后看哪些因素对自己睡眠质量影响比较大，另外也可以分析一些时间跨度比较大一点的睡眠质量趋势等等。反过来坏处大概就是如果比较容易焦虑的性格的话，可能看到数据上显示自己最近睡得不好，会越加焦虑吧。不过我觉得最大的问题还是在于目前市面上可用的 sleep tracker 的准确度都不是特别高，至少网上的睡眠专家们是这么说的，特别是仅仅通过手机的麦克风来检测声音、震动来估计睡眠情况，或者稍微高级一点通过 apple watch 之类的智能手表、手环上的 sensor 来检测，结果都没有办法特别准，特别是要区分深睡、浅睡、眼动期之类的不同睡眠阶段的情况下，必须要用专业的测量脑电波的仪器才能测得比较准。我之前一直用一个放在床垫下面的 sensor 来 track，因为是买床垫的时候送的，算是聊胜于无吧，不知道在未来几年内会不会有比较厉害的突破性进展出来。</p> \n<p><strong>食事</strong>：去年生活中的第三大问题就是吃饭问题。特别是周末吃什么的问题，因为平时在公司吃，所以周末如果自己做饭，买菜的量就特别微妙，吃不完的菜放一周基本上就彻底不行了。但是每顿都专门开车跑出去吃不仅太麻烦，而且每顿都吃很油腻的中餐感觉也不是很健康，所以导致去年我甚至吃了不少 Soylent，一直很纠结这个问题。今年为了解决这个问题做了不少尝试，年初的主要成果是找到了一个去中餐馆点菜然后把剩下的打包回来吃第二或者第三顿，以避免周末老是要开车出门去吃饭的问题；再就是探索了一些其他的简便好吃但又没有中餐那么油腻的食物，最后主要就收敛到越南米粉。另外还有尝试过速冻水饺之类的，但是都发现很容易吃腻。后来由于开始放弃公司的晚饭，提前下班回家，所以周中的晚饭也需要自己解决了，前期的主要解决方案是中午吃饭的时候多拿一份留着晚上吃，或者是去公司全天候的三明治食堂拿三明治回家吃。</p> \n<p>到最后找到的解决办法还是自己做饭。在搬家以后买了一个象印 Neuro Fuzzy 的电饭锅，煮饭超级香，然后就慢慢地开始从隔几天会自己在家做晚饭，到年底基本上每天都在家自己做饭吃了。自己做饭虽然也还有点费事，但是后来感觉其实可以当做放松休息，基本上每天简单炒一个菜或者懒的时候直接煮一锅东西，整个下来到吃完洗碗基本上也就四十分钟到一小时。最主要的是自己做的菜比较合自己口味，吃起来比较 enjoy，同时比较容易控制营养（在 N 的影响下开始注意每餐至少都要有适量的碳水、蛋白质和蔬菜）。这样一来周末的吃饭问题也解决了，因为周末也接着做饭就行了。另外还慢慢开发一些新技能，比如炒糊辣椒，制简易泡菜，开始慢慢找回小时候的饭菜的味道。唯一带来的一点麻烦就是感觉大好的周末现在几乎每周都会费掉好多时间在买菜上了……😂</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/dishes.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p><strong>运动</strong>：去年生活中还有一个问题就是缺乏锻炼和运动。在学校的时候我主要靠游泳来维持基本的运动量，但是在湾区来之后由于没有方便能去的泳池，基本上唯一的运动就是偶尔和大家出去 hiking 了。今年以自行车 commute 的方式慢慢地把运动量回复过来，另外在搬家之后楼下就有一个大小比较合适的小区泳池，虽然没有学校的泳池那么好并且还是室外的，但是也已经很好用了，于是又开始游泳了。只是室外的泳池确实到了冬天之后就完全没法游了，加州虽然号称气候温暖，但是其实冬天还是蛮冷的。再有就是今年开始在公司找了 personal trainer 开始练习 kick boxing，其实是 N 原本有跟一个 trainer 在做一对一练习，然后我加入进去一起训练，分担费用之后可以练双倍时间，每周一小时的训练，和我 PhD 期间在空手道部参加的训练相比强度还是大很多的，经常训练完接下去几天都是处于腰酸背痛的状态，理想情况下应该平日自己也做一些练习，新家小区楼下的 gym 里也有一个机器可以练习打击（如果有沙袋就更好了），但是几个月下来结果是总共只在家里练过一两次，感觉实在是很再难抽出更多的时间来。</p> \n<p>我目前的状况是自己已经开始承认积极锻炼身体是长远来讲让自己能够活得更加舒服所必须要做的事情，只是自己依旧对于自己个人觉得有点“无聊”的锻炼项目（比如跑步或者举铁之类的）比较抗拒，感觉短期目标是把几项自己觉得好玩的（游泳和 boxing）或者有其他用处的（自行车上下班）项目认真做好，这样应该运动量就很不错了，一步一步来吧。😃</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/boxing.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p><strong>耳朵</strong>：耳鸣这个是老问题了，现在已经和我生活各方面息息相关，身体和情绪的波动起伏也都和耳鸣的轻重程度互相影响。搬家之后对耳鸣情况应该是间接有一些改善。一方面是自己住之后练琴不需要戴耳机了，另一方面搬家以后外面的噪声会少一些，不过原来住的地方因为是 house，厨房和卧室不在同一层，所以冰箱的噪声基本上不是问题，但是搬到新家之后由于厨房和客厅是一体的，平时在客厅活动的话就有可能会被冰箱吵到。为了解决这个问题我还查了一下冰箱的制冷原理，大致是利用某些物质在改变体积的时候会吸收或者释放热量的原理，然后用一个 compressor 来压缩气体制冷，而这个 compressor 是个 engine，所以就会有噪音。网上有各种稀奇古怪的解决办法，比如把冰箱放在一个垫子上，或者在冰箱的四周贴上 acoustic foam，我感觉都不是很靠谱，最后我得出的最合适的解决办法是自己不在客厅的时候（比如早上起床去上班时或者晚上在卧室关门睡觉时）把冰箱温度调到最低，在客厅的时候如果冰箱开始响就把它的温度调高一点，它就会停止制冷一段时间，安静一阵。不过最后我也差不多习惯了，像练琴或者用电脑的时候其实冰箱的噪音几乎不会注意到，只有在看书的时候周围完全没有任何其他声音时才会觉得冰箱很 annoying，所以最后我直接把看书用的椅子搬到卧室里，几乎也就没有什么困扰了。</p> \n<p>刚开始长期耳鸣的时候我去医院检查过，当时就有高频段的 hearing loss，不过后来耳鸣没有很好的治疗办法，也就没有管了，来了美国之后也没有专门在医院问过耳鸣和听力相关的事情。今年从 C 那里了解到 hearing aid 的情况，据说英文的发音里有不少高频的成分，所以高频 hearing loss 的人会在进行 speech recognition 的时候更困难一些，然后 hearing aid 可以改善这个情况，让你听到的频谱更完整，也就更容易听懂。我并没有仔细去研究这后面的细节和道理，但是我知道自己一直都有一点点这方面的困扰，就是在英文对话的时候比较容易听不太懂别人在说什么，这在许多人的场合，比如 party 上、餐馆里之类的情况尤其明显，另一个比较糟糕的情况是在台上做 talk 的时候，如果比较大的厅回声比较明显的话我也基本上不太能听到台下的人问的问题，这样的场合下不停地让对方重复会变得极其尴尬，虽然自己也多少 develop 出一些 trick 来解决这些问题。但是相对地在中文方面我就没有很感觉到有这方面的困扰。以前一直以为是因为中文是母语，英文听不太懂是英文还不行的缘故，但是现在看来也许是跟 high frequency 的 hearing loss 也有一定关系。而且据说 hearing aid 还会（比较随机地）对一部分人的耳鸣问题带来改善。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/hearing-aid.jpg\" style=\"width: 100%;\"> \n  <div class=\"caption\">\n    hearing aid 耳机和充电盒，背景是 Tombow 的 color marker brush pen。 \n  </div> </img>\n</div> \n<p>所以我就去搞了一副 hearing aid 耳机设备来试一试，虽然各种牌子种类还蛮多的，但和我现在的保险对应的医院联系之后发现他们那边好像只提供这个 ReSound 的版本，由于美国医疗系统极其低下的效率，一直搞到年底才终于拿到手，大小和 Airpods 那个耳机差不多（不过价格大概是二十倍吧，终于感觉到医疗保险的作用了），不过那个大块的东西其实是放在耳朵后面，真正放进耳朵里的东西只有一小点，所以不会有耳朵被堵住的不愉悦感。我自己戴着的感受是确实某些频率的声音很明显地听得更清楚了，比如鞋踩碎树叶的声音，或者是钥匙放到桌子上时候的声音，甚至开车时候转动方向盘有时会发出的咔咔声，有时会会觉得比较愉悦，但是比较讨厌的地方就是敲键盘的声音会变得很响。人说话的声音的改变比较微妙，我还没有能集中测试一下在嘈杂的环境下听 speech 会不会有改善，不过第一反应是人声有一些 artifact，应该是和平时大脑所熟悉的人声的 spectrum profile 不太一样的缘故吧。最后就是对方向感和平衡感的影响似乎没有我想象中那么大。我的打算是先集中戴一段时间体验一下，看自己能否适应，最后稳定下来之后应该跟眼镜一样，平时不使用，在需要的时候再戴上。至于是否会对耳鸣有所改善，目前来说我还没有很明显的感觉，至少可以肯定的是并不是一戴上立刻就没有耳鸣了，总之先观察一段时间再说吧。</p> \n<p>医生极力劝说我买了一个肉色的，说这样不容易看见。我有点不以为然，还觉得戴一个助听器好像还酷酷的，而且别人看到了之后应该会对你说话更加清楚一点吧？不过我发现有人盯着你的耳朵看的时候还是有点不自在，特别是别人明明在盯着看，但是又假装没有看到，好像害怕如果开口询问的话会伤害到对方，这种态度反而会让人觉得不太舒服。如果是小时候需要戴助听器的话，应该是很容易引起心理阴影吧。</p> \n<p><strong>住宿</strong>：因为前面提到的各方面生活上的改变都和搬家联系起来，所以其实搬家应该算是今年生活方面的一个最主要的改变吧。当然这件事情本身也挺独特的，搬到了一个一室一厅，所以这大概是我第一次真正意义上一个人住，没有 roommate 也没有 housemate。客观来说似乎和独立卧室共享客厅之类的情况差不多，但是心态上总体还是不太一样？</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/home.jpg\" style=\"width: 100%;\"> \n  <div class=\"caption\">\n    自己家，广角镜头单点透视绘画练习。 \n  </div> </img>\n</div> \n<p>虽然现在自己有了单独的客厅，但是整体上布置和自己住在一个房间里的时候差不太多，特别是我对家的优化是我自己住得舒服，而并没有太考虑其他情况（比如朋友来玩之类的），所以并没有买电视或者沙发之类的，而是用升降桌、钢琴、书架等来布置。自己的主要的活动空间是在升降桌那里，由于用电脑、玩游戏、看书、画画都在同一个桌子上进行，并且不同的活动需要的 setup 也不太一样，所以对于桌子上的物件管理还是花了好一阵子才被我优化好，否则很快就会被画画用的笔、最近看的和买的书、各种电脑（公司的笔记本、自己的笔记本和 iPad）堆满而变得特别拥挤。</p> \n<p>搬出来住的“坏处”主要是房租增加了好几倍，离公司近、居住条件比较舒适、安静、一室一厅，这几个条件都满足的情况下，房租就要贵好多倍了。不过我觉得挣的钱在存下来养老和现在花这两者之前还是可以好好权衡一下啦，如果多花一些钱能够让当下的生活过得舒适很多的话，还是很值得花的。话虽如此，具体究竟要怎样的比例才是比较合适的，这个肯定每个人的准则也不一样，我想简单来说如果自己一年花的钱还不如一年交给政府的税多的话，那应该不能称作“乱花钱”？</p> \n<h2 id=\"工作\">工作</h2> \n<p>今年的工作在内容上没有太大的变化，去年加入的这个组感觉也比较喜欢，算是在理论和实践中间比较好的一个 middle ground，虽然对于我自己未来的发展方向还并没有搞得特别清楚，但是在组里相处和合作感觉都是非常舒服的。今年工作上最大的变化应该是找到了比较合适的 work life balance。一方面自己一直也在尝试在不同的感兴趣的事情上找到更好的平衡，另一方面今年看到的负面新闻也不少，有因为工作压力而跳楼的或者猝死的，虽然美国这边不像国内加班那么严重，但是在不同公司不同组应该也会有各种不同程度的压力。此外，我自己也亲眼目睹了一场比较 dramatic 的人事变动，我原本以为这样的事情只有在电视上才能看到，惊讶之余我立刻就意识到了自己之前确实是把员工和公司之间的关系过于浪漫化了，把它当做了一种有“人情味”的关系，但是其实客观来讲真的只是雇佣关系，这个并不是针对你的 manager 或者某个更高层的公司管理人员，而是针对公司作为一个抽象实体本身而言，和你之间的关系是不言自明的。总之最终结论就是不论是怎样的工作，都不是值得你拿自己的健康作为筹码去拼命的。</p> \n<p>虽然这种冷冰冰的雇佣关系让我在对待工作这件事情上变得稍微更加冷静了一点，但是并不是说我丧失了工作的热情，毕竟非常幸运的是我自己工作的内容也是我自己喜欢和愿意投入热情去做的，不过这里就涉及到另一个问题：因为我喜欢的东西其实有不少，所以最终需要在工作（这个兴趣）和其他兴趣之间找到一个平衡点。当然，工作还具有养家糊口这个额外的属性，所以自然权重还是要大很多的。</p> \n<p>我在考虑 work life balance 时候考虑的第三个因素就是自己的身体。随着年龄的增长身体能够承受的工作负担会逐渐下降，我没有想要从此开始混吃等死的意思，但是也不想透支自己的身体让今后的日子很难过。从这个方面来讲我会“工作”这个各方面负荷比较大的活动和其他一些相对有趣但又属于比较放松或者比较有助于增强体质的活动之间寻找平衡点。</p> \n<p>目前的时间分配我自己还是比较满意的，唯一的问题就在于排得比较满，其他的东西很难塞进来，包括未来可能有的新的感兴趣的东西，或者以前比较有兴趣但是现在由于没有时间导致暂时放弃的事情，比如说多参与一点开源项目相关的东西，又比如多一些的学习的时间：比如专业相关或者和专业不太相关但是仍然比较深入一些的内容（比如数学、物理、生物相关的东西），因为现在读书即便是 nonfiction 通常最多也只是到科普或者 survey 那样的深入程度，有时会感觉有点泛泛的。总之明年在阅读上也许可以考虑减小一下阅读的数量，但是在书的选择和理解的程度上更加深入一些。</p> \n<p>工作上去年我听到大家谈论的话题比较集中在工作内容的有趣、有意义程度或者自己有没有在学习新的东西在进步之类的，今年周围的人谈论的话题似乎开始转移到升职、职业规划、还有跳槽、涨工资之类的问题上。我自己在两个 cycle 的 evaluation 中收到的上面来的 feedback 也都是希望我能更加 proactive 一点，多 reach out，主动和别人说自己的工作之类的，总之就是在 professional social life 上有诸多值得改进的地方。其实这方面的症状、道理我自己也都知道，不过就是实现起来依然是经常会碰到自己心里的抵触啦。我暂时不想在这里立下一个 new year resolution 明年一定要改进这个问题，总之还是先不要太逼迫自己比较好，慢慢来吧。</p> \n<p>另外今年还第一次带了 intern，感觉真是非常 tricky，从选项目的 topic 开始，如何既不提供非常具体的项目以至于让 intern 觉得没有自由度，又提供足够的 guideline 让他不会觉得没头绪，到项目过程中，以怎样的频率和他 sync 才会既不会让他感受 host 隔三差五都在问进度压力很大，又不会让他觉得 host 怎么完全不管我只干自己的事情。还有有 progress 的时候应该怎样夸奖和鼓励才能够激励军心但又不至于显得很假，或者方向和细节方面有需要改进的地方如何才能委婉地提出才不至于降低士气。等等，感觉自己在各方面都还有待学习和提高。不过整体来说和 Z 的合作过程还是挺愉快的经历啦，intern 也好 host 也好大家都有第一次，以后肯定会慢慢提高的。</p> \n<h2 id=\"感情与价值观\">感情与价值观</h2> \n<p>今年生活上的另一个重大变化就是恋爱了。其实这几年自己一直处于一种游离的态度，偶尔碰到比较合得来的女生，但是想到进入恋爱关系之后自己将要扮演的角色和对自己生活的影响，就会退缩并选择以朋友的方式相处。其实与 N 相识时也是如此，一起玩都感觉很舒服，但是又很担心确立关系之后会因此失去一个志趣相投的朋友。不止是潜在的关系破裂后出现的不愉快结局，更多的是在双方太过于投入时对自我的迷失。我觉得我自己在这方面尤其不擅长，与人亲密相处时很容易受到对方的影响，从生活方式到价值观各个方面都会发生改变，当然有一些是比较积极的改变，但是也有一些是受到荷尔蒙影响而自我洗脑的改变，并不一定是自己所想要的生活方式。而且自己渐渐改变，可能就不再是对方最开始喜欢的那个样子。反过来也是一样，一开始感受到对方的吸引力肯定是由于对方的某些特性，但是如果对方开始迷失原来的自我，那你是否还像原来一样喜欢呢？</p> \n<p>不过，最终还是和 N 走到了一起，从我自己的角度来说大概是在一段时间的相处之后觉得“迷失自我”的危险比较低，或者更确切地说，两人各自的生活方式原本就极其相似，所以即使互相影响，也不会和各自原来的样子差太多吧。事实上，跟 N 一起玩的时候感觉非常奇特，可以形容为“舒服”，但是又不太一样，因为我和各种不同性格朋友一起玩也可以很舒服。也许可以说成是就像我自己一个人玩一样比较自在，特别是会做一些平时基本上只有自己一个人的时候才会做的事情（比如泡在书店里，或者自言自语，瞎蹦跶之类的），并且并不是说 N 性格随和对做什么都没有意见（面对这样的情况我反而会有比较大的心理压力），而是在这些事情在两人的生活中似乎都是比较自然的。按照 N 的说法，简直是另一个性别的自己的复制品。兴趣爱好从音乐画画读书动漫日文到去世界各地瞎逛各方面重叠相当大，但是可能更重要的是价值观上也非常的一致吧。事实上两人确立关系之后各自的生活大致上也还是维持原样，我从我的年度时间统计中能看出的唯一变化大概是秋季之后阅读量突然增加了许多，大概是由于经常周末陪 N 去图书馆还书又不小心借了更多的书回来的缘故吧。但是，以为没有变化的生活，其实又确确实实不一样了。今年我生活中的许多变化其实都有 N 的影响，比如开始更多地骑车上下班，更多地自己做饭吃，以及开始练习 kick boxing 之类的，但同时这些也是我自己一直想做的事情，N 起到了催化剂的作用。有时看到她认真的样子我也会受到激励，所以还有鼓舞的作用，记得好像是 N 第一次邀请我去她家玩的时候，在我的强烈要求下她弹了一下那阵子在练习的古典吉他的几首曲子，N 说我听完就以“要回家练琴”为借口走了，留下她在那里一脸懵圈。其实我当时真是听了很鸡血地回去练琴了。</p> \n<p>仔细观察的话潜移默化的影响似乎很快就深入到每天的生活细节当中，比如有一次去开一个拉线开关的灯，因为两个人都两手拿了东西，竟同时下意识地准备用嘴去扯那个拉线，大眼瞪小眼地顿时笑瘫在地——究竟是谁学了谁的坏习惯呢？有时候好像觉得，两个人并排走的时候，似乎相互影响也是一种积极的成长呢。也许这只是恋爱中的盲目，谁知道呢。🙂 当然，即便如此，并不是说我和 N 之间已经达到了 100% 契合的状态，客观来讲，要长期在一起生活的话，双方都还有一些问题需要找到可行的解决方案或者合适的 compromise 才行的，不过这些是需要两人去尝试解决的问题，就先不在这里多说了。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/shoe.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>三观方面我大致还是以一种相对随和的态度去对待生活：一方面我今年好像强迫症又有点加重了一些，一些事情如果没有按照我心里预订的节奏去发生，我会有点 agitated，不过另一方面我对 upset 的事情忘记得比较快的特质还在，并且今年看了不少“大尺度”书，让我有继续抱着一种“生活中的许多烦恼其实都算不上什么事儿”的心态，所以总体来说还是比较坦然的心态。这里的“大尺度”是指时间和空间上的尺度，时间上主要是一些 natural history 相关的内容，比如前面提到的《<a href=\"https://book.douban.com/subject/30251285/\">The Rise and Fall of the Dinosaurs</a>》，横跨数亿年的时间，在这个小小的地球上也经历了好几次全球范围内的物种大灭绝，虽然人类一直为自己飞速发展的科技而骄傲，但是正如《<a href=\"https://book.douban.com/subject/26907338/\">We Have No Idea</a>》里讲到的那样，其实人类的科学和技术放在宇宙的时间和空间尺度来说，真是太渺小了，我们知道的东西和我们知道我们不知道的东西比起来差了太多，更不用说那些我们甚至都不知道我们不知道的东西。抛开茫茫宇宙，就连我们自身也还是充满谜团，比如《<a href=\"https://book.douban.com/subject/32264719/\">The Disordered Mind</a>》里所描述的自闭症、精神分裂、失忆、帕金森、PTSD、老年痴呆等生理异常状况，虽然严重影响到了许多人的生活乃至于生存，但是我们现在要么还未能理解，要么只能用一些副作用非常大的方法来进行控制？当然，科技在过去一两百年之内的飞速发展确实也是无可否认的，只是到各地转一转就会发现，科技进步其实也并不是简单的，各个方面均匀推进的一件事情，每个区域和国家的科技树发展得都有点不一样，比如美国虽然是一个科技顶尖的国家，但是如果要对比公共交通和火车的速度、覆盖面等各方面，都不知道会被欧洲亚洲各国甩去几条街。</p> \n<p>背后的原因很简单：科技进步从来都不是人类社会的一个共同目标，而只是一个副产品，科技发展最迅速的方面总是和利益息息相关，民用科技的发展集中在商业利润最大的领域，世界各地科技树不一样正是反应了各地人们生活习惯等各方面的差异；而军用科技发展则是牵涉到国家或者统治阶级的利益。到头来，即使真正从事科学研究的人们只是想要在科学技术的某一方面有所突破，经费、社会关注程度、乃至让研究能够继续下去的源源不断的年轻一代科研人员的教育和培养等各方面都会很强势地左右不同领域的发展速度甚至方向。也许这反映的是人类作为一种生物所具有的社会群体的生存本能，说到底我们终究也只是茫茫宇宙一隅的某种二足生物而已啦。</p> \n<p>所以到头来我们作为个人，生活的目标或者意义是什么呢？也许没有意义，那么最重要的事情是什么呢？不知道。我目前的理解是要过得开心。就好像“莫名其妙被推上一趟长途列车，终点对你来说毫无意义，那就先安下心来看看书看看风景吧”这种感觉（怎么有点像在说 California Zephyr 之旅）。这里需要 clarify 的是，开心并不完全等价于“及时行乐”，因为要优化的是整个旅途几十年的“开心”程度，而不是当下一时爽，这就会出现许多需要 balance 的地方，比如当下一段时间会需要选择放弃自己最喜欢的事，或者甚至会需要去做一些让自己非常不开心的事情之类的。另外一种比较常见的观点是，既然人生只有几十年，那么我应当努力去建功名，做到名垂青史，这样即使我死了，也还继续“活在”后人的心中。我觉得这种意义上的“活着”实在是和真正的“活着”差别太大了，而且人类在地球的历史中也不过是转瞬之间，更不用说在整个宇宙尺度下了，所以其实也没啥意思。不过我并不是愤世嫉俗地反对名与利，如果说在取得名利之后可以为去做自己喜欢的事情铺平道路，或者是追求功名本身就是自己所好，那其实是挺好的。总之，找到自己真正喜欢的事情，并找到一个能够 long term sustainable 的让自己能去享受这些事情的生活方式，应该就是我现在的人生态度吧。</p> \n<p>最后想要提一下养宠物的问题，由于我妈妈喜欢养猫猫狗狗，所以我从小跟它们接触比较多，对大部分种类的猫狗都很喜欢。当然玩别人养的宠物和自己养宠物完全不是一回事，后者是一个非常大的 commitment，人生会有一部分需要被用来照顾它，所以问题就是在投食、铲屎、遛弯、修补被咬坏的家具、砸碎的物件等事情和拥有宠物的陪伴两者之间的权衡了。我自己目前还没考虑清楚有一个宠物相伴到底在我心目中是多大权重的一件事情，除此之外，还有一个 downside 就是养了宠物之后就很难很轻松随意地到外面去到处跑了。而且即便是多年生活在一起到了“心灵相通”的地步，其实双方还是比较悲伤地没有办法进行任何深入交流，甚至只是“昨天没睡好今天有点累主人你自己玩吧，但是我身体没有啥大碍不要大惊小怪地把我拖去打针了”这之类的想法都没有办法好好传达。除了对宠物的喜爱之外，另一个近些年让我考虑宠物问题的契机是周围的小伙伴们渐渐地开始有小孩了。小孩的事情本身对我来说还太遥远了，如果真的要养小孩，那我的整个人生观和价值观都需要完全推倒重来，所以这是一件需要非常慎重思考，但是迄今为止都没有认真去考虑的问题。不过我发现宠物问题完全可以作为小孩问题的一个热身题来对待：养宠物和养小孩（至少在前面十多年）感觉非常相似——对方可能会成为你生命的中心或者甚至生命的全部意义，导致你再没有足够的精力去过自己原本自由的生活，但另一方面其实基本上没有办法进行比较实质性的沟通，沟通障碍不仅会让自己很苦闷，而且也可能让对方很痛苦——即便你不求回报心甘情愿奉献一切，但是你的所作所为可能与对方事与愿违。总之我想一个比较合理的章程可以是：在考虑是否要养小孩之前，必须要 1）考虑清楚自己是否真的希望认真养一个宠物；2）将养宠物的计划付诸现实并证明自己真的适合抚养和照顾。在此之前如果自己去考虑小孩问题将会是不成熟乃至不负责任的。</p> \n<h2 id=\"时间统计\">时间统计</h2> \n<p>过去几年我都断断续续有对自己日常生活的时间进行一些统计，今年应该是统计得最完整的，整年都记录了下来，并且用了一个可以导出数据的 app，所以自己做了一些额外的分析和制图，还蛮好玩的。我用的是 iOS 上一个叫做 <a href=\"https://apps.apple.com/us/app/manifest-smart-time-tracker/id963007012\">Manifest</a> 的，需要收费，不过是我找到的在界面好看和好用并且支持导出数据这几点之间权衡之后最好的 app 了。当然记录自己的时间除了是一个被动的跟踪以外，其实还有更多“主动”的影响，从某种程度上来说是一个督促和压力，有利有弊吧，有人觉得这是限制了自己的自由，其实真正自由的内心的话是不会被一个小小的计时 app 所左右的。不过我明年我也许会试试看不做记录，或者用更简单的记录方式，毕竟导出数据自己分析虽然好玩。但是时间日期处理真是比想象中更麻烦，比如如果跑来跑去还有时区的问题，即便是待在一个地方也会有冬令时夏令时切换的问题等等。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/2019-time-analysis/total_hours.png\" style=\"width: 100%;\"> </img>\n</div> \n<p>首先是 365 天各个项目累计时间统计，分类大概跟去年差不多，不过这应该是我第一次坚持一整年全部做了时间记录。累计时间没什么太多可说的，一个是今年练琴练了 400+ 小时，另一个是钢琴画画读书这三个基本一直是比较微妙的平衡状态（虽然我并没有特地维持这个平衡性），不过到年末的时候看书的时间好像突然增加了很多。下图是四个季度各个项目所花的时间百分比图。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/2019-time-analysis/quarter_pie.png\" style=\"width: 100%;\"> </img>\n</div> \n<p>可以看到工作大概在一半多一点的时间（去年是百分之六十多），第一个 quarter 读书钢琴画画基本上是三等分，但是到后面读书就开始 dominate 起来。另外第一个季度基本上没有任何运动，到后面运动量开始多起来（主要是骑车和 kick boxing），第四季度又减下来主要是因为天气冷了之后骑车上班就变少了。下图是每周时间统计的柱状图：</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/2019-time-analysis/week_hours.png\" style=\"width: 100%;\"> </img>\n</div> \n<p>总的来说工作和钢琴的时间相对是比较稳定的，读书和画画的时间则看起来变化相对大一点，学习和运动基本上都是作为零头出现的。另外我还画了一下按照一周的每一天各个项目平均所花的时间（见下图），这次可以更明显地看到钢琴的时间相当稳定，基本上每天都是练一小时多一点。周中每天花费的时间也相对固定，似乎有一个小小的 trend 就是干劲越来越大，直到周三，然后开始期待周末，总时间就减小哈哈。总之每天十小时多一点，虽然我每天要睡九小时，但是这样每天也还有五个小时来供我 commute、看片、做饭、放空之类的。而周末则基本上总时间只在六小时左右，这是因为周末一般会有一些其他事情，比如要去买个菜，或者要去图书馆还书，或者有一些集体活动吃饭爬山之类的。图上显示的周末的一点点工作时间应该主要是在某几个 deadline 相关的时候集中加了几天班之后平均下来的结果，因为总体来说我周末基本上还是不会工作的。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/2019-time-analysis/weekday_hours.png\" style=\"width: 100%;\"> </img>\n</div> \n<h2 id=\"致十五年前的你\">致十五年前的你</h2> \n<blockquote> \n <p>几个小时与十三年，在漫长的记忆中都是一瞬，没有什么不同。 <small>《回忆爱玛侬》</small></p> \n</blockquote> \n<p>今年是我以孙燕姿的歌为标题在自己的博客里写年终总结的第十年，本来想要不要做一个简要的十年总结，结果突然在自己的 notes 里翻到一个之前以大学入学十年为契机写的十年总结，干脆放在一起好了。如果要给十五年前的自己写一封信，反倒觉得没有什么可以写，两个时期的自己感觉完全是不同世界的人，也没有太多的交集，会不会面对面坐到一起也没什么可以聊的？而且那时的自己愤世嫉俗，肯定听不惯过来人的老生常谈。也许只说一句：“未来总是充满神秘和意外，所以要对明天充满好奇与期待。”但其实这些事还是自己慢慢去了解更有意思吧。</p> \n<ul> \n <li>2005：第一次坐火车，第一次出省，第一次参加面试（自我介绍就卡住了）。大学生活伴着一系列的挫折开幕。进入了计算机系而不是向往的数学系，不记得当时是否因为这件事情而消沉过了，但从结果来看是蛮幸运的阴差阳错。第一辆自己的自行车，第一台自己的 PC（配备软驱，CRT 显示器）。</li> \n <li>2006：加入微软技术俱乐部（MSTC），大学生活中最深刻的回忆几乎全都来自这里。接触 Linux 和 Emacs，热爱开源，通过 Ubuntu 分发的免费光盘在校内推广 Linux。愤世嫉俗，讨厌社会上复杂的人际关系，在网络上（技术论坛）上很健谈，线下很内向。父母离异。</li> \n <li>2007：第一个开源项目 (Emacs 扩展 <a href=\"https://code.google.com/archive/p/smart-snippet/\">smart-snippet.el</a>)。被学长拉去一个创业项目（知识管理系统）里帮忙。重拾高中荒废掉的画画。开始为 MSTC 的技术讲座做贡献，时间和内容控制上都有待改进，第一个成功的讲座是 Linux 社区组织的关于 Emacs 的讲座。接触《空之轨迹》系列。视力开始下降。</li> \n <li><a href=\"http://blog.pluskid.org/?p=31\">2008</a>：开源项目 mmseg 系列和 <a href=\"https://github.com/joaotavora/yasnippet\">YASnippet.el</a>，后者现在还是 Emacs 的常用扩展之一（目前由他人维护）。参加 <a href=\"https://en.wikipedia.org/wiki/Google_Summer_of_Code\">GSoC</a>。加入实验室开始接触科研，很没有存在感，连 Kmeans 都不懂。毕设换了实验室，接触机器学习。没买到票爬窗上火车补站票（33 小时车程）。在漫长的痛苦和逃避之后结束了第一次恋爱关系，之后消沉了很久，也成为成长中重要一课，中学时期的浪漫主义世界观彻底崩塌，重新审视自己对“现实世界”的认知。同时这也是自己首次积极尝试改变“不擅长拒绝”的软弱性格。成为 MSTC 技术组 Leader，在组织活动过程中性格逐渐外向化，慢慢消除人际交往厌恶症。在工作和保研之间选择了后者，出国则由于“准备英语考试是浪费时间”而直接未予考虑。</li> \n <li><a href=\"http://blog.pluskid.org/?p=420\">2009 - 飘着</a>：在 MSTC 的组织活动更频繁，发起了新的活动形式增加社团凝聚力，关于 C 调试的讲座 150 人满场且反馈很棒。任 MSTC 主席。自己买的第一个笔记本 Thinkpad X200。玩《空之轨迹 3rd》。本科毕业。保研换去另一个研究更前沿一点的实验室，离开毕设实验室的决定也纠结了很久，算是第二次努力改变不擅长拒绝的性格。十年前开始看的犬夜叉漫画完结。从 Emacs 切换到 VIM。参与另一个创业项目（中途退出）。开始大量听孙燕姿的歌。用 RPGMaker 做了一个游戏。在紫金港看日食。第一次吃披萨。开始缓慢自学日语。Y 说等你哪天从你的消沉中走出来了就向我表白吧。</li> \n <li><a href=\"http://blog.pluskid.org/?p=709\">2010 - 关于</a>：跟着 Y 的脚步开始想要去了解外面的世界，与学长和导师讨论之后开始准备出国。Y 说希望做回朋友，受到打击进入人生中最黑暗的一段时间，之后花了好几年才慢慢释怀。痛苦再一次促进了成长，将心思转移到工作和学习上，继续准备出国，四月托福，八月 AW，十月 GRE，由于官方泄题十一月强制重考。中了第一篇论文。开始长期耳鸣。写了支持向量机系列博客，收到很多感谢邮件。</li> \n <li><a href=\"http://blog.pluskid.org/?p=828\">2011 - 当冬夜渐暖</a>：出国申请。第一块数位板。玩《零之轨迹》。去数学系旁听课，受到那里小朋友们勤奋的鼓舞，改掉了本科养成的上课打瞌睡的习惯。暑假以外系人员 + 研究生学长的身份强行去参加数学系讨论班，算是突破自己 comfort zone 的第一次尝试，认识到真正喜欢的东西不能害羞要努力去争取。开始使用双拼输入法。第一副眼镜。耳鸣加重，对环境噪音（比如 CPU 风扇）变得很敏感。</li> \n <li><a href=\"http://freemind.pluskid.org/misc/2012-the-moment\">2012 - The Moment</a>：研究生毕业，第二次做 <a href=\"https://en.wikipedia.org/wiki/Google_Summer_of_Code\">GSoC</a>。暑期画完三本 portrait 练习，兴趣开始由动漫转向写实风格。第一次出国，开始 PhD 生活，同本科一样刚开始的时候碰到蛮多挫折。在电脑一个角落发现一封 Y 两年前留下的加密信件。开始使用智能手机并进入 Apple Ecosystem。开始认真用 Coursera。通过学校的课开始正式学习日语。在新鲜感驱使下参加了学校为新生组织的长达一个月的各种社交活动，从此对 social 比较烦腻，几乎只参加亲近朋友的小圈子聚会。看《<a href=\"https://movie.douban.com/subject/10001418/\">冰菓</a>》。</li> \n <li><a href=\"http://freemind.pluskid.org/misc/2013-summary\">2013 - 我要的幸福</a>：第一次滑雪。加入学校空手道部。通过系里的 Technical Qualification Evaluation (TQE)。社交网络使用频率到达顶峰，开始主动节制并思考其在生活中的位置。读《<a href=\"https://book.douban.com/subject/1062193/\">娱乐至死</a>》。第一次暑期实习。结识 S，一起看独立日焰火，看海（我第一次见到海），开始异地交往。学习水彩，同 S 有几幅共同完成的作品。画的系楼被挂到了宿舍楼走廊里。第一次见没过大腿的雪，兴奋得不行。</li> \n <li><a href=\"http://freemind.pluskid.org/misc/2014-summary\">2014 - 明天的记忆</a>：通过日语 N2。暑期交换全日本跑了一遍。开始画 travel sketch。开始借开会去世界各地看。与 S 异地交往恶化并在压抑中结束，内心反应虽然没有以往那么激烈，但是开始对恋爱在生命中存在的必要性有了一些负面的看法。拿到驾照。开源项目 <a href=\"https://github.com/pluskid/Mocha.jl\">Mocha.jl</a>。基本戒掉社交网络。开始追很多新番动漫。开始看日文书。Interspeech best student paper。空手道部退社（平时太忙了）。</li> \n <li><a href=\"http://freemind.pluskid.org/misc/2015-summary\">2015 - 就是这样</a>：做 TA。通过系里的 Research Qualification Evaluation (RQE)。在 MFA 上课学习丙烯画，第二个数位板。加入 <a href=\"https://mxnet.apache.org/\">MXNet</a> 开源小组参与开发。学习游泳并作为日常运动。开始记录睡眠（平均睡眠区间 1am ~ 8:30am）和日常时间分配（3/4 科研学习，1/4 课外活动）。开始每天喝咖啡。开会去欧洲等地转了一大圈，住了各式各样的青旅。签证被 check 在江南一带游玩，第一次在国内旅行，过程中看了很多书，并养成了比较规律的阅读习惯。读《<a href=\"https://book.douban.com/subject/2035179/\">动物农场</a>》。重玩《天之痕》（iOS 移植版）。</li> \n <li><a href=\"http://freemind.pluskid.org/misc/2016-summary/\">2016 - 无限大</a>：看《<a href=\"https://movie.douban.com/subject/25851655/\">四月是你的谎言</a>》，开始了解古典音乐，去 <a href=\"https://www.bso.org/\">BSO</a> 听音乐会。从零开始学习钢琴。第一架琴 Casio Privia PX-160。第二次暑期实习（Google Brain），第一次到湾区，印象很差。在学校的学生艺术协会报名学习油画，Apple Pencil 取代 Wacom 数位板。看动漫（尤其新番）的数量开始下降。与 Z 短暂交往。第一次一个人开车，吓破胆。开始使用机械键盘。读《<a href=\"https://book.douban.com/subject/1309228/\">The Fountainhead</a>》。</li> \n <li><a href=\"http://freemind.pluskid.org/misc/2017/\">2017 - 风衣</a>：找工作，写 Thesis，答辩，PhD 毕业，走出象牙塔，从东岸搬到西岸，开始工作。ICLR best paper。citation 过千。英国暑期实习（DeepMind），顺便又跑了欧洲许多地方。看了火山岩浆，也看了冰川峡湾，感受人类在大自然中的渺小。继续学琴，录了贝多芬悲怆奏鸣曲的第二乐章。第二架琴：Yamaha AvantGrand N2。跟着 schoolism 上的课程开始认真学习光影、色彩、构图等绘画基础知识，第一次尝试 <a href=\"http://mrjakeparker.com/inktober\">inktober</a>（未完成）。入手 Fujifilm X100F，练习在街上拍路人。玩《塞尔达·荒野之息》。阅读从前几年的电子书为主开始逐渐偏向实体书。得了工作太努力就会口渴难耐的怪病。</li> \n <li><a href=\"http://freemind.pluskid.org/misc/2018-summary/\">2018 - 世说心语</a>：工作第一年。睡眠质量下降（平均睡眠区间 12:30am ~ 8:30am）。偶尔会腰疼。继续记录时间分配（3/5 工作，2/5 生活）。持 O1 签证 travel 受限，一直呆在美国的第一年。去阿拉斯加，第一次带妈妈旅行。第一次露营。第二次尝试 <a href=\"http://mrjakeparker.com/inktober\">inktober</a> 并完成。在公司修乐理和绘画类课程。大量练习 figure drawing（30 秒 ~ 20 分钟的 pose），也开始去咖啡店画路人。读《<a href=\"https://book.douban.com/subject/1888880/\">The Highly Sensitive Person</a>》。Lease 了自己的第一辆车（Audi A4），成为能够独立开车的人。玩了一次射击。</li> \n</ul> \n<p>回看感觉自己逐渐成长为一个越来越独立的人，不过这是一种 independence 而不是 solitude。 这一路的旅程在不同时期都少不了一起旅行的伙伴们，有了大家的同行，我才得以一直前行不迷失方向。😊</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/10-year-stats/books-anime.png\" style=\"width: 100%;\"> </img>\n</div> \n<p>最后，粗略地统计了一下过去十年间看书和动漫的数量（更早的数据太模糊不可考了），画了下面一个十年统计图。动漫上似乎没有太明显的趋势（主要大概统计起来比较麻烦，比如有的动漫只有一集，但是有的可能一部有几十甚至几百集），PhD 期间追新番最多，到 PhD 后期就逐渐减少了。看书则是在 2015 年突然有一个大幅增长，后面几年则是英文书的数量在逐渐增长，然后总数量在今年又突然涨了一大截。</p> \n<h2 id=\"尾声\">尾声</h2> \n<p>2020 年的 new year resolution：𝟙. 在视奏上有所进步。𝟚. 对 anatomy 的理解进一步加深。𝟛. 强迫症得到缓解。𝟜. 平衡阅读数量和深度，为值得比较深入阅读的书做更详细的笔记和总结，在 consume 和 create 的 balance 上多往后者 shift 一点。</p> \n<p>“如果与你没有相识，不知道现在会在过怎样的生活？”，N 说，“应该也不会很无聊，不过会是完全不一样的生活。”我觉得，我的答案也是一样的。🙂</p> \n<blockquote> \n <p>回忆很美 未来很慢<br /> 我的故事因此写到一半</p> \n</blockquote>","descriptionType":"text/html","publishedDate":"Tue, 31 Dec 2019 00:00:00 +0000","feedId":3969,"bgimg":"http://freemind.pluskid.org/att/2019/hawaii-sunset.jpg","linkMd5":"f409a8da70f890a7d7a253e23b59239d","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx/cdn30@2020_6/2020/08/24/21-50-00-610_5c3682c9ea5af842.webp","destWidth":2564,"destHeight":1709,"sourceBytes":222314,"destBytes":78298,"author":"","articleImgCdnMap":{"http://freemind.pluskid.org/att/2019/hawaii-sunset.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn30@2020_6/2020/08/24/21-50-00-610_5c3682c9ea5af842.webp","http://freemind.pluskid.org/att/2019/hawaii-tree.jpg":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn36@2020_3/2020/08/24/21-50-14-585_3822bd90be09f306.webp","http://freemind.pluskid.org/att/2019/Goku-Kamehameha.png":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn38@2020_5/2020/08/24/21-50-24-506_c2ff8e152144fe33.webp","http://freemind.pluskid.org/att/2019/california-zephyr.jpg":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn32@2020_2/2020/08/24/21-50-15-354_bbc0bd14f2819aea.webp","http://freemind.pluskid.org/att/2019/california-zephyr-inside.jpg":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn76@2020_1/2020/08/24/21-50-17-199_724a8d7c619182f0.webp","http://freemind.pluskid.org/att/2019/california-zephyr-cart.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn44@2020_5/2020/08/24/21-50-15-020_847f1446c849e1d2.webp","http://freemind.pluskid.org/att/2019/california-zephyr-reading.png":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn19@2020_2/2020/08/24/21-50-14-760_c2e35cf5d05cde94.webp","http://freemind.pluskid.org/att/2019/jackson-street-booksellers.jpg":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn99@2020_3/2020/08/24/21-50-20-330_9095e06fdb34d858.webp","http://freemind.pluskid.org/att/2019/nola.jpg":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn72@2020_6/2020/08/24/21-50-16-759_6a9b93731954c335.webp","http://freemind.pluskid.org/att/2019/new-york.png":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn68@2020_2/2020/08/24/21-50-15-421_177f055871896fc7.webp","http://freemind.pluskid.org/att/2019/mountain-biking.jpg":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn58@2020_2/2020/08/24/21-50-14-691_ae033f475ddf2aa1.webp","http://freemind.pluskid.org/att/2019/drawing/100-heads.jpg":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn92@2020_4/2020/08/24/21-50-14-989_85e03642186670b9.webp","http://freemind.pluskid.org/att/2019/drawing/3-heads.jpg":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn56@2020_5/2020/08/24/21-50-29-127_8538d83ac1412797.webp","http://freemind.pluskid.org/att/2019/drawing/anatomy.jpg":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn7@2020_2/2020/08/24/21-50-14-757_2fcca95a3b815b67.webp","http://freemind.pluskid.org/att/2019/drawing/skull.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn84@2020_6/2020/08/24/21-50-14-692_7a324578d1411534.webp","http://freemind.pluskid.org/att/2019/drawing/inktober.jpg":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn96@2020_1/2020/08/24/21-50-17-001_23ee84c31a4c8d8c.webp","http://freemind.pluskid.org/att/2019/drawing/scene-study.jpg":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn11@2020_2/2020/08/24/21-50-15-223_7764c9d324690151.webp","http://freemind.pluskid.org/att/2019/drawing/vj.jpg":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn48@2020_6/2020/08/24/21-50-14-753_afe8395e9ae7492d.webp","http://freemind.pluskid.org/att/2019/drawing/zine.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn88@2020_3/2020/08/24/21-50-16-524_a9c76a909a248078.webp","http://freemind.pluskid.org/att/2019/drawing/painting.jpg":"https://cdn.jsdelivr.net/gh/myreaderx/cdn76@2020_2/2020/08/24/21-50-15-447_f36897253d658fad.webp","http://freemind.pluskid.org/att/2019/drawing/copy.jpg":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn15@2020_1/2020/08/24/21-50-19-267_76e4cbe82faac7f9.webp","http://freemind.pluskid.org/att/2019/drawing/digital-1.jpg":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn52@2020_3/2020/08/24/21-50-15-355_5a31db05e75b548b.webp","http://freemind.pluskid.org/att/2019/drawing/digital-2.jpg":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn61@2020_3/2020/08/24/21-50-17-469_06e3120bc80a7737.webp","http://freemind.pluskid.org/att/2019/k545.jpg":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn12@2020_4/2020/08/24/21-50-17-715_13a892a8deb9c837.webp","http://freemind.pluskid.org/att/2019/2019-books/summary-Q1.png":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn3@2020_6/2020/08/24/21-50-40-774_c7f158fe098ee6b2.webp","http://freemind.pluskid.org/att/2019/2019-books/summary-Q2.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn27@2020_4/2020/08/24/21-50-14-960_1d335fbd861b9f07.webp","http://freemind.pluskid.org/att/2019/2019-books/summary-Q3.png":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn20@2020_5/2020/08/24/21-50-24-187_4461d86818f807f1.webp","http://freemind.pluskid.org/att/2019/2019-books/summary-Q4.png":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn87@2020_2/2020/08/24/21-51-16-695_5fb58a3fc8d0445f.webp","http://freemind.pluskid.org/att/2019/anime.jpg":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn84@2020_6/2020/08/24/21-50-22-732_d5fa8f8a06f64246.webp","http://freemind.pluskid.org/att/2019/bike.jpg":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn11@2020_1/2020/08/24/21-50-21-997_4a095db3b55c4fc0.webp","http://freemind.pluskid.org/att/2019/dishes.jpg":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn16@2020_2/2020/08/24/21-50-14-855_aae1f019dc6c11bb.webp","http://freemind.pluskid.org/att/2019/boxing.jpg":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn56@2020_5/2020/08/24/21-50-14-724_179ad5cf7aad733a.webp","http://freemind.pluskid.org/att/2019/hearing-aid.jpg":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn49@2020_3/2020/08/24/21-50-14-558_08ad9e1602e7f868.webp","http://freemind.pluskid.org/att/2019/home.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn80@2020_6/2020/08/24/21-50-14-690_54badfc31040a5b2.webp","http://freemind.pluskid.org/att/2019/shoe.jpg":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn92@2020_3/2020/08/24/21-50-19-247_2939dcfcb7de6067.webp","http://freemind.pluskid.org/att/2019/2019-time-analysis/total_hours.png":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn8@2020_6/2020/08/24/21-50-16-470_837f68e8f22030a8.webp","http://freemind.pluskid.org/att/2019/2019-time-analysis/quarter_pie.png":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn39@2020_3/2020/08/24/21-50-16-295_c3c1ee533346c736.webp","http://freemind.pluskid.org/att/2019/2019-time-analysis/week_hours.png":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn59@2020_2/2020/08/24/21-50-14-407_57e54107297a2292.webp","http://freemind.pluskid.org/att/2019/2019-time-analysis/weekday_hours.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn16@2020_4/2020/08/24/21-50-16-653_a1f6f3dbed01de36.webp","http://freemind.pluskid.org/att/2019/10-year-stats/books-anime.png":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn4@2020_5/2020/08/24/21-50-14-348_937f14e34f0b97d0.webp"},"publishedOrCreatedDate":1598305776900},{"createdTime":"2020-08-25 05:49:36","updatedTime":"2020-08-25 05:49:36","title":"AI and Language","link":"http://freemind.pluskid.org/machine-learning/ai-and-language","description":"<p>最近机器学习中各种诸如 BERT、BigGAN 之类的性能上的突破似乎都有一定的“大力出奇迹”的成分在里面，除了计算资源之外，训练数据的数量和质量都需求巨大。虽然这些进展令人振奋人心，但是往前看的话，头几年深度学习带来的 AI 狂热似乎前进开始慢下来，虽然不知道前路是会一举突破还是寒冬将至，但是相信大部分人都不会反对以当前已有的技术和模型来看，实现真正的 AI 还需要一些质的突破。当然本文并不是试图要去解答这个未来方向的问题，我也没有能力去做这样的解答，只是突然想到语言的出现似乎是人类进化史上的一件重要事件，或者甚至是最为重要的事件之一可能都不为过。然后顺势想到了一些与 AI 有所关联的东西，就想要分享一下，以下内容完全是胡思乱想的结果，并没有特别严谨的科学依据或者调研，因为我对 language、linguistics、传统 AI 等这些领域都不是特别熟悉，所以有可能会对一些非常相关的已知的结果或理论有不少遗漏的地方。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/evolution.png\" style=\"width: 80%;\"> </img>\n</div> \n<p>在讨论（人类）语言之前，不妨先简单回顾一下 AI 的发展历程。AI 诞生的标志性事件是 1956 年的<a href=\"https://en.wikipedia.org/wiki/History_of_artificial_intelligence#Dartmouth_Conference_1956:_the_birth_of_AI\">达特茅斯会议</a>，Marvin Minsky、John McCarthy 还有老一辈的 Claude Shannon 等人聚到一起讨论模拟智能和学习的课题，Proposal 上首次出现了 Artificial Intelligence 这个词，当然，Proposal 里写的是要立一个<a href=\"https://en.wikipedia.org/wiki/Dartmouth_workshop\">长达两个月，多达十人的研究小组</a>来解决这个叫做 Artificial Intelligence 的问题。后来的事情大家都知道了，AI 经历了两次繁荣和两次寒冬，目前正借助统计学习，特别是深度学习的热度处在第三次繁荣或者说泡沫之中，相信目前大部分人都对过去的 AI 历史没有太多兴趣，这里也就不多深入了。只是有一点比较有意思的地方就是 Modern AI 和传统 AI 之间的分界线：也就是基于符号逻辑的系统和基于统计学习的系统之间的划分。这种对立在一些传统 AI 和现代 AI 都在尝试解决的课题——比如象棋、围棋、或者不同人类语言之间的自动翻译等等——上面就体现得尤为明显。</p> \n<p>当然就目前来看，data driven 的基于统计学习的方法可以说是在各个领域全面战胜传统的基于逻辑和规则的系统。那是否就是说传统 AI 的框架一无是处呢？也许也不是。通常认为，传统 AI 是所谓的<a href=\"https://en.wikipedia.org/wiki/Deductive_reasoning\">演绎 (deductive)</a> 思维方式，给定一些规则，推演出结论，最典型的例子就是所谓的三段式演绎法；另一方面，统计学习则是所谓的<a href=\"https://en.wikipedia.org/wiki/Inductive_reasoning\">归纳 (inductive)</a> 思维方式，给定一系列 observation，从中总结出规律。</p> \n<!--more--> \n<p>从这个角度来看，这两个方面基本上都是人类思维方式不可缺少的一面，似乎在 AI 研究中将两者结合起来是一个很自然的选择？——虽然究竟如何结合并不是一个容易的问题。我想早期的 AI 基于演绎逻辑是很自然的，因为逻辑思维在我们日常生活中是随处可见的，我们每时每刻都在和各种规则和决策打交道，“打雷要下雨，下雨要打伞”，“红灯停，绿灯行”……并且早期的一些问题比如象棋 AI、专家系统等等似乎都非常自然地可以套入规则加逻辑演绎的系统中。但是为什么后来这条路走不通了呢？真正原因大概方方面面非常多，我们这里拍脑袋随便讲几个：</p> \n<ol type=\"1\"> \n <li><p>虽然我们日常生活中很多事情都需要理性地逻辑思维来进行决策，但是可能有更多的时候是完全“自然地”、“习惯地”、或者“凭直觉地”去做的，通常的可能问题在于需要实时、大量地计算（比如“双足行走”这个到今天还是在 robotics 中并未完全解决的问题），或者是问题过于复杂，超过普通人脑的正常逻辑处理能力（比如在十几个租房选项中根据各种权衡和条件选出最优选项，最后通常就“凭直觉”选了）。总之最后需要所谓的 intuition 来辅助，这个 intuition 可能就是一个 blackbox 的 neural network。</p></li> \n <li><p>虽然逻辑演绎非常有用，但是它所处理的对象都是抽象过的 entity，比如“红灯停”这个简单的规则，我们在实际问题中所直接接触到的并不是“红灯”和“停”这些高度抽象过的对象，而是，比如，反射光在视网膜上所成的一幅图像，以及一些可以（并不太精确地）控制汽车前进停止后退转弯的 controller 等等。目前将这些 raw signal 进行 parse 得到 abstract entity 的工作全都是基于 statistical learning 的方法最擅长的。</p></li> \n <li><p>虽然逻辑演绎可能可以看做“智能”的重要体现，但是这里并没有很好地解决“学习”的问题，也就是如何得到这些规则的过程。如果单靠人去设计，那么不仅 scalability 很差，并且可能也称不上 AI；而从最基本的元规则出发，让系统自己去演绎，似乎有碰到搜索空间指数爆炸的情况：比如自动定理证明，虽然人用的逻辑也都是那些，但是伟大的数学家们在证明一些深刻的定理的时候似乎“如有神助”地有一些“intuition”，这是限制和缩小指数爆炸的搜索范围的关键；类似地，原则上来讲，各种 <a href=\"https://en.wikipedia.org/wiki/Perfect_information\">perfect information game</a> （比如象棋围棋等），给定最基本的游戏规则，AI 的逻辑演绎系统应该就能够自动找到合适的 behavior rule 来取得胜利，然而实际上，在不给任何辅助“intuition”的情况下，这样的搜索问题同样是 <a href=\"https://en.wikipedia.org/wiki/Computational_complexity_theory#Intractability\">intractable</a> 的。</p></li> \n</ol> \n<p>似乎种种困难都指向所谓的 intuition，而 intuition 又是说不清道不明的东西，英文里的 somehow 和日文里的【何となく】都用来表达类似的意思，中文似乎没有专用的词？好像要看语境用不同的词？不过回到主题，我们在实际生活中碰到的很多“难以用简单规则形容的”所谓“intuition”，到统计学习这里，就变得简单多了。比如要用规则来描述清楚什么是“一条狗”，可能只有动物学家才能讲得清楚（而且并不一定能帮助计算机进行识别）。但是如果用统计学习的方法，只要找一堆狗的照片给计算机看，不停地告诉他，这是一条狗，这也是一条狗……，在看过很多很多很多很多只狗之后，计算机就有了自己的 intuition，并且能认识没有见过的狗了。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/dogs.png\" style=\"width: 100%;\"> </img>\n</div> \n<p>只是目前效果最好的做这种事情的统计学习模型（比如 <a href=\"https://en.wikipedia.org/wiki/Residual_neural_network\">ResNet</a>）所得到的它自己的 intuition 并不是非常 interpretable。我们知道这个模型能认识狗了，但是其他的各种问题都搞不清楚，比如模型是如何“习得”这种 intuition 的，为什么明明很精确的模型，把输入图像改变几个像素就能让它误认为这是一条鱼，或者是一条猫（参见 adversarial example 相关的条目，比如这个<a href=\"https://ml.berkeley.edu/blog/2018/01/10/adversarial-examples/\">博客</a>）？等等。但是有些事情，是不是如果我们自己都讲不清楚自己脑子里的 intuition 是怎么样的，就不要去强求别“人”了？但是毕竟这个 model 是人自己设计和构造出来的，搞不清楚怎么回事多少让人有点生气；虽然另一方面来讲，每个人也都是父母造出来的了……而我们对自己的大脑是如何运作的依然知之甚少。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/cat.png\" style=\"width: 100%;\"> </img>\n</div> \n<p>总而言之，目前的主流 AI 模型都是这种基于“归纳”的统计模型（并且其中绝大部分是基于深度神经网络的）。除了认一条猫和一条狗之外，各种各样的对应关系的问题都可以尝试用这种丢给你一堆例子，让你自己去总结 intuition 的办法来解决。另一个典型的例子就是机器翻译，比如给很多很多很多很多的中文和对应的英文句子，神经网络就能“somehow”开始翻译其他的没见过的句子——<a href=\"https://en.wikipedia.org/wiki/Google_Neural_Machine_Translation\">现在 Google Translate 线上的系统</a>就是这么得来的，虽然还没有达到人类的水平，但是比之前的统计模型要好了很多，而那又比更之前的基于规则的翻译系统好了很多。当然还有超越人类的情况，比如在看过了许多许多许多的眼球和对应的性别信息之后，神经网络就能<a href=\"https://www.nature.com/articles/s41551-018-0195-0\">以超高的精度通过眼球图像判断主人的性别了</a>，而人类的计算机科学家和医生们即使手里拿着这个神经网络模型，也一直没太搞清楚究竟要怎么从眼球分辨性别。</p> \n<p>总之 so far so good，统计学习特别是深度神经网络方面的进展让许多诸如围棋 AI、无人驾驶车之类的过去非常困难的问题得到解决或者看到了希望，似乎只要大步向前走，就能到达 <a href=\"https://en.wikipedia.org/wiki/Artificial_general_intelligence\">AGI</a> 的圣杯啦。但是真的是这样吗？我当然是不知道的。只是有一点可以确定的是，inductive 的统计学习框架也还是有一些难题需要解决的。一个就是刚才提到到 understanding 的问题：比较简单的统计模型通常效果不好，而效果好的复杂神经网络我们又还没搞清楚它到底是怎么工作的，这是一个复杂系统问题，我前阵子看到一个很有趣的比喻，说我们知道每个水分子的化学和物理性质，知道两个水分子之间如何作用和碰撞，但是当足够多的水分子合在一起构成一片大海的时候，我们就没法很容易地去理解整片海洋的行为了。也许当我们有足够多的计算资源（和数据）之后，智能就会自然地从神经网络中悄悄诞生，只是这样的话，可能到我们能够制造出智能机器的那一天，也依旧搞不清楚它是怎么一回事。</p> \n<p>当然 practitioner 并不太在意 understanding 的问题。但是从实际的角度来看，目前的 AI 模型仍然有很多问题需要解决，首当其冲的就是 <a href=\"https://en.wikipedia.org/wiki/Sample_complexity\">sample complexity</a> 的问题。所谓 sample complexity，简单讲就是模型要达到指定的效果（比如认猫狗的精确度）所需要的数据量。目前的各种算法的主要问题就在于 sample complexity，虽然在一些特定的问题上效果可以达到非常好，但是通常要训练这些模型所需要的数据量是无比巨大的。虽然我们在小时候也会有大人手把手教一些基本的东西（比如照着动物图书认动物之类的），但是大体而言人类的“学习”过程并不是通过不断地观看数以万亿计的“输入”、“输出”对来达到的。当然，人类的“学习”过程并不一定就是唯一的或者最优的，所以 AI 的学习过程即使跟人不一样也不一定就是什么问题，但是目前的这种状况很快就会碰到瓶颈。</p> \n<p>因为收集（带标签的）数据在很多 domain 下都是耗时耗力的，并且针对不同的 domain 和不同的 task 需要收集各自对应的数据，得到的模型并不是一个“general”的 AI，可以自动适应不同的 domain，即使现在在 meta-learning、multi-task learning、one-shot learning 等方面都有一些进展，但是似乎还是有很远的路要走；另一条路是 <a href=\"https://en.wikipedia.org/wiki/Reinforcement_learning\">reinforcement learning</a>，像在围棋或者星际里那样，AI 可以通过不断地 self-play 来自动地搜集数据，例如最近 DeepMind 出的星际 2 的 AI 模型，就是在一周的时间内通过大量并行计算，自己和自己玩了等价于两百多年的星际争霸游戏对战得到的。这种方式对于像游戏这种可以非常高效地通过计算机进行模拟的问题也许还是比较可行的，但是任何需要和真实的物理世界 interact 才能得到反馈的任务，就没法“把一周当两百年来用了”。</p> \n<p>在这里我觉得也许非人类的动物们的学习过程可能很多就是单纯地看例子来学习——比如我们都知道动物小时候会模仿父母的行为，在比如如果总是在喂食前摇铃的话，很多动物都会很快学会铃声和食物之间的关系。这些学习行为都挺像现在的 AI 模型的行为的。看起来对动物而言一个很大的障碍似乎是没有语言，即使父母辈拥有很多的知识和智慧，也没有办法很直接地传递给子女，因为除去基因遗传这种缓慢到可能要以万年为单位计算的传递方式之外，在动物界似乎就只能通过“演示”和基本的“奖励、惩罚”反馈来进行（挺像 imitation learning 和大部分的 reinforcement learning 的），这似乎是一个非常低效的传递知识的通道。也许如果你家的二哈学不会微积分并不是因为它脑容量不够，而是因为听不懂人话，所以学起来很慢（sample complexity 非常大），说不定你不停地给它看随机的函数式子和求导过后的式子，在两百年之后它真能学会求导呢。</p> \n<p>在这一点上，人类的语言似乎是得天独厚的优势。究竟是人类凑巧发明了语言，还是某一些生物、生理上的 fundamental 的因素导致人类进化出了使用语言的能力，这个似乎还没有定论（不过应该是后者的可能性更大吧？）。一方面动物不仅没有发明出语言，并且人类科学家们做过的许多教动物语言的尝试都失败了，即使有一些猩猩学会一些基本的手语，以及几十个简单的单词的情况，但是也没法组成语法结构正确的句子。而人类语言的精华之处显然并不在词汇，而在于语法结构上，可以组合、否定，可以谈论过去、现在、将来等等。也许人类的大脑是有一些特殊的结构变化才导致我们可以学习和使用语言的，相信这是人类发展史上的一个里程碑，或者说一个临界点。不过由于语言这种东西很难留下化石之类的痕迹，所以关于语言的起源和智人的进化和发展历史之间的关系似乎还没有特别的定论。在余下的内容中我会将“语言”和“文字”这两个概念混淆起来不去特意区分。</p> \n<p>语言究竟有多有用，也许从数学里最容易找例子，因为数学其实是一套抽象的符号语言系统，能帮我们解决很多问题。我自己小时候印象最深刻的一个例子就是上初中学习到“简易方程”的时候。因为小学数学应用题很多“弯弯绕”的题目，比如我现在在网上随便搜了一个：</p> \n<blockquote> \n <p>三筐苹果共重 110.5 千克，如果从第一筐取出 18.6 千克，从第二筐取出 23.5 千克，从第三筐取出 20.4 千克，则三筐所剩的苹果重量相同，原来三筐苹果各有多少千克？</p> \n</blockquote> \n<p>够绕吧？可以试一试不用方程，直接求出结果。但是当学习到方程之后，这个题目瞬间变得 trivial 了：110.5 = (x + 18.6) + (x + 23.5) + (x + 20.4)，得到 x = 16。此时再解小学数学应用题简直就是降维打击。</p> \n<p>语言的出现对人类文明、社会等各方面的影响肯定是无比深远的。我现在还没有看过 linguistics 相关的书，所以只能先忽略讲一些我能想到的用途：</p> \n<ol type=\"1\"> \n <li><strong>交流</strong>：最基本的作用，简单来说就是将知识（或者任意的“想法”）传递给另一个人。demonstration 和 imitation 可能是效率最低下的方式；语言是一个不错的传递方式；更高级的物种可能可以使用更直接的传递方式，比如类似心灵感应，直接将自己大脑中的某一部分 activation 传输给另一个个体，而不需要先 encode 成语言，再经过对方 decode 和 interpret。也许未来的 AI 会有这种能力，就像不同的电脑之间复制文件一样，但是可行性也有一些值得怀疑。因为似乎还不知道不同的人或者 AI 大脑运行的“系统”的 raw representation 是否是互相 compatible 的，比如我们可以想象成两个人分别是运行 Windows 系统和 Linux 系统的两台机器（或者甚至还有 32 / 64 位、small / big endian 等方面的差异），所以虽然两个系统都有各自的高效的二进制格式用来存储程序和内容，但是当要进行信息交换的时候，即便有一个直连通道可以直接进行数据复制，一个系统上的内容拷贝到另一个系统也是无法正确解析的。特别是有多个不同的系统要能够互相进行通信和交流的话，就需要一个公共的消息承载格式，比如互联网上常见的 XML 和 JSON 这类的东西其实就是起到了类似的用途，它们没有各自系统上的二进制格式那么高效，但是这个公共的格式使得所有的系统之间可以正常的交流，而将内部二进制内容 encode 成 XML / JSON 的过程就类似于我们将自己的想法组织成语言，然后对方 decode XML / JSON 的过程则类似于人类在阅读或者听到语言文字时大脑进行的理解和解释。虽然具体还未知，但是我想足够复杂的生命体个体之间应该会有一定程度的“二进制”不兼容性，所以可能这样的 encode / decode 过程总是需要的，只是所用的消息共享格式可能并不一定需要是我们人类使用的线性文字语言，或者通过声音、图像等方式作为媒介等等，也许可以统称为“脑电波直接通信”。</li> \n <li><strong>辅助思考</strong>：我们的思维能力一定程度受限于我们可以使用的语言，这应该是一个还比较常见的说法。刚才说的数学应用题算是一个辅助思考的例子。大致来说，就是即使我们不用语言来和别人交流，而只是想要有效地组织自己大脑里的想法，语言也是非常重要的。比如各种语言里都有的一个 feature 是所谓的“条件”或者“假设”，可以让我们对事情的发展进行假想的推演。这里有一个很重要的例子，就是所谓的 <a href=\"https://en.wikipedia.org/wiki/Theory_of_mind\">Theory of Mind (ToM)</a>，就是说人不仅会对自己的心理状态进行建模，并且会对身边的人的心理状态进行建模，并能通过这些模型来将行为、欲望、信念、知识等进行综合和归因。虽然“子非鱼，安知鱼之乐”，但是我们其实是一直在不停地对身边的个体进行“建模”的，我们能够感受到比如“他觉得这个会议很无聊”、“她觉得这个菜很好吃”，等等，并且，我们有能力形成这样的概念：我（通过刚才打开冰箱看了一下）知道冰箱里的布丁已经被谁吃光了（事实状态），但是我（通过观察其行为进行建模和推断）知道我室友并不知道布丁已经没有了。我的大脑里现在出现了两个 mindset，其中一个认为冰箱里已经没有布丁了（我自己），而另一个认为冰箱里还有布丁（室友的模型），人类的大脑能同时运行这样的两个（当然其实是更多个）mental state 的存在，并且能推演各自 state 下的行为等等。更加厉害的是我们还可以有高阶的 theory of mind，比如我知道你不知道我知道你偷吃了我的布丁，等等……喜欢玩狼人杀的同学应该可以想出更多更复杂和形象的例子来。目前关于非人的动物是否真正具有 theory of mind <a href=\"https://en.wikipedia.org/wiki/Theory_of_mind_in_animals\">尚有争议</a>，虽然我也并没有具体的逻辑可以论证，但是总感觉 ToM，特别是高阶的 ToM 应该是需要语言的支撑才能得以存在的。</li> \n <li><strong>社会构建</strong>：信任、制衡、协作等等，如果没有语言来描述各种法律、道德、金融系统，人类复杂的分工协作社会结构应该是没有办法构建起来的，科学也没有办法发展和进步了。</li> \n</ol> \n<p>总而言之，中心思想就是：语言非常有用。特别是我们人类在教自己的小孩学习新的知识的时候，以及甚至可能小孩自己在日常经历中学习为人处世的道理的时候，语言应该都起到了非常重要的作用。其中有很大一部分是帮助我们进行逻辑演绎。这是不是说 AI 的发展要突破当前的瓶颈，也需要某种语言或者符号结构系统的出现呢？也许这意味着需要将传统 AI 里的那些逻辑符号系统和现代 AI 的基于统计的 “intuition” 系统结合起来？</p> \n<p>此外，我们人类在“学习”的过程中，对于语言（和事物）的理解能力在不同的阶段也是差别非常大的。反正我自己觉得，中小学语文里的那些归纳段落大意和中心思想的题目，基本靠瞎蒙，但是长大以后，理解能力上来了，再看就非常清楚了。而且我们也都很自然地默认自己小时候（或者别的小孩）“啥都不懂”，不止是知识的广度上，小孩连最基本的逻辑思维方面似乎也各种不行。如果是内容比较艰深的书籍，让小孩死啃，即使能到倒背如流，也未必能有等他长大之后再看同一本书能理解的多。那我们在长大的过程中所经历的只是简单的经验和知识的线性积累吗？亦或者是其实也经历了一次或多次临界点，实现了“升维转变”？至少有一点清楚的是：人类成长过程中的幼年、童年、少年、青春期这些阶段并不是随便按照诸如“六十年为一甲子”之类的方式定出来的，而是因为人在这些不同的阶段在生物生理上都有明显的变化，所以才被区分开来（似乎其他哺乳类动物通常没有像人类这么多个不同的阶段），也许其中的生理变化也包括大脑里的一些 fundamental 的转变？又或者并不是生理的关系，而只是人在成长过程中对“语言”的理解能力逐渐加深，突破某个临界点之后语言就并不只是被动地接受知识的工具，而可以变成自己大脑里自己总结归纳和演绎新的知识的工具，从而实现“升维转变”？</p> \n<p>当然，这里的“语言”已经是一个非常抽象的概念了，对于 AI 而言，也许只是某些能够高阶组合、有效表达各种复杂概念的的一种“结构”，可能 AI 的“语言”并不需要和人类的“语言”有任何相似之处，不过人类各种不同语种似乎都有一些基本的共通点（比如能表达否定，条件，能区分时态等等）。也许我们需要发展出全新的算法和模型才能让 AI 突破现在的瓶颈，又也许现在的神经网络的权重海洋中已经出现了这样的结构体了，只是我们还未能解码出来？问了太多搞不清楚答案的问题，未来如何只有拭目以待啦。欢迎大家给我推荐 Language 起源方面的资料和书籍，突然有点感兴趣了呢。</p>","descriptionType":"text/html","publishedDate":"Tue, 19 Feb 2019 00:00:00 +0000","feedId":3969,"bgimg":"http://freemind.pluskid.org/att/2019/evolution.png","linkMd5":"38782d807d605801e3cd8e75e723eadc","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn18@2020_6/2020/08/24/21-49-59-099_bcf339af5b24a8ed.webp","destWidth":1280,"destHeight":456,"sourceBytes":33102,"destBytes":33254,"author":"","articleImgCdnMap":{"http://freemind.pluskid.org/att/2019/evolution.png":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn18@2020_6/2020/08/24/21-49-59-099_bcf339af5b24a8ed.webp","http://freemind.pluskid.org/att/2019/dogs.png":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn68@2020_4/2020/08/24/21-50-18-302_e3f26c9448c312bf.webp","http://freemind.pluskid.org/att/2019/cat.png":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn24@2020_3/2020/08/24/21-50-17-774_67f000b4dad276f5.webp"},"publishedOrCreatedDate":1598305776898},{"createdTime":"2020-08-25 05:49:36","updatedTime":"2020-08-25 05:49:36","title":"封闭的内容平台","link":"http://freemind.pluskid.org/misc/closed-platform-for-contents","description":"<p>最近 G+ 的关闭在即，虽然 G+ 一直是个比较失败的产品，我自己对他也并没有任何好感，但是近些年每次 G 关闭一个产品，总会让人联想起 Google Reader 被关闭的事情，很是唏嘘。实际上后来也出现了不少 Google Reader 的替代品，但是时代也早已不一样了，博客内容分享的方式已经开始谢幕。博客和基于 RSS 等内容订阅的方式当然也有它的各种不足，最大的缺失就是读者与作者之间的交互，以及读者之间的讨论的支持等等。所以后来的一些社交网络平台演化，从各种不同的角度解决了这些问题，另外内容本身也更加多媒体化，增强了表现能力，所以从技术上来讲无疑是在不断的进步。</p> \n<p>但技术进步的同时，其他方面却多少有点让人担忧。内容本身正在逐渐变成“精神毒品”类似物（比如情绪刺激很强烈、能迅速获得刺激感、上瘾，以及“抗药性”导致越来越无法满足自己等等）的问题感觉已经是众所周知了，所以今天也就不再多说这个。这个趋势对于读者的影响基本上是越来越趋向于阅读短小（比如各种微博客平台的那个内容长度）、各种感官全面刺激（比如从文字到图文、再到视频的转变趋势）、以及刷起来就停不下来，但是又越刷越空虚之类的感觉，甚至把这几个方面结合起来还有诸如“XX 分钟看完 XXX 电影”的视频内容格式（也许再加上二倍速播放？）正在变得异常火爆，再配合上根据个人偏好的<del>定制毒品</del>定制内容投送的逐渐成熟——我相信很多人应该都和我一样理解其中的问题，但是却仍然在 struggle 中无法做到完全免疫，我想这就是为什么应该称之为精神<strong>毒品</strong>吧。另一方面对于内容创作者产生的影响也是非常深远的，为了让毒品更有效，除了迎合趋势在内容长度、形式上进行改进之外，更多的是需要将内容本身的情绪化刺激最大化，毕竟读者们每天需要批阅的“奏章”无数，于是乎各种煽情、标题党、甚至到为了制造大新闻，各种夸张事实、混淆视听，以及完全是假新闻和故事的情况也就接踵而至了。</p> \n<p>不过今天主要想说一下另一个话题，更多的是关于传统内容（书籍、音乐、电视电影等等）的分发平台的。这方面近些年来的主要变化一个是音乐、电影等原本就是数字化的内容的分发形式从原来的物理媒介（CD、DVD 之类的）逐渐转向 streaming 和订阅服务的形式；而书籍则逐渐开始电子化，虽然可能“逐本购买”的方式还仍然是主流，但是类似于音乐电影那样的订阅到平台，然后无限看的方式也越来越开始普及。看起来这样的趋势似乎是完美解决了出版商控制盗版的问题，又极大地方便了读者和观众，一举两得，但是实际上却有很多问题。</p> \n<!--more--> \n<p>让我注意到可能有一些问题也是近些时间的一些生活中的小细节。例如有时候节假日同学聚会，如果有时候决定要一起看一点什么内容娱乐的话，似乎很常见的模式就是打开电视上的某一个订阅服务（比如 Netflix 之类的），然后从分类啊排行之类的地方找一个点开来看，似乎没有什么问题，甚至比原来通过有线电视那种被动接收的方式更加自由一些。但是看过几个质量比较一般的纪录片之类的内容之后，我发现一来这类服务其实在收录和选择上都不是很全，对于最好的那一部分内容，不同的服务供应商可能会有不同的一个子集，用户如果真的想要比较自由地自己选择随时能看自己想看的内容的话，可能就要同时订阅很多个不同的服务才行——在音乐上也是类似的，我对国外的 pop music 不是很熟悉，但是国内的平台似乎常见的像网易云或者 QQ 音乐之类的都会有一些歌在其中一个平台上不能听，必须要去另一个平台才行的情况。</p> \n<p>这个问题似乎等待某个内容提供商做大，到垄断的地位之后似乎就能勉强解决？但是一方面这个可能是很难实现的，在激烈的竞争中肯定总是会有一些内容以“独家供应”的方式出现，导致用户很烦恼。并且即使真的实现了垄断，在没有了竞争之后的发展应该不会是对用户很有利的，毕竟公司的目的是最大化利益，即使在现在也会看到各个平台（YouTube、Netflix 之类的）都开始推广自己平台原创的内容，也许是为了推广品牌，也许是为了降低成本，但是不得不说这些内容的平均质量放在“所有内容”的大环境下还是比较普通的，在实现了垄断消除了竞争之后肯定只会变得更糟吧。</p> \n<p>另一个经常碰到的小细节就是在平时聊天中提到某一个推荐的内容（电影等视频内容或者音乐之类的），经常就会有人问，这个东西在某某平台上能看吗？如果没有的话，那一般也就略过了。如果说视频和音乐已经基本上完全转型为订阅类服务了的话，阅读领域应该就算是一个比较有趣的还处在各种方式混合的阶段：实体书店和纸质书依然顽强存在的同时，电子书市场正在蓬勃发展，在形成几个比较大的封闭平台的情况下，还是以“单个购买”而不是订阅的方式为主，但同时订阅服务显然正在慢慢变成主流。在各种情形同时存在情况下就很容易进行对比，基本上就是一个从更多自由到更多限制的一个 continuous spectrum。</p> \n<div class=\"figure\"> \n <img class=\"u-full-width\" src=\"http://freemind.pluskid.org/att/2019/amazon-books.jpg\" style=\"width: 100%;\"> </img>\n</div> \n<p>例如上图中的四种同样是来自亚马逊的服务依次是：实体书店、Kindle 电子书城、Kindle unlimited 订阅式服务、和 prime reading 的服务（可能是 prime 用户的附赠服务吧）。实体书当然是最开放的，从用户的角度来说没有任何限制，可以任意选择书店、出版商、和内容本身。电子书城就开始有了一些限制，一是在 A 平台购买的书只能在 A 平台内阅读，其中如果涉及到（电子墨水）阅读器等硬件设备方面的东西则问题会变得更严重；在各个平台互相各自封闭的情况下又每个平台只提供一个子集的内容则给用户造成了进一步的麻烦，可能得使用不同的阅读设备，安装很多个不同的 app，各自的阅读体验和操作方式（词典、标注、笔记、书籍整理等等）也不太一样。而 Kindle Unlimited 则是订阅式服务，好处是可以无限量阅读 Kindle Unlimited 书库内的书，坏处是只能读 Kindle Unlimited 书库里的书。虽然原则上这个服务的好坏取决于里面的藏书量和内容的好坏，以及原则上用户也可以在使用订阅服务的同时如果有找不到的书仍然通过直接单本购买的途径来购买。但是原则上和实际上似乎总有一些差距，特别是人是又懒又很容易被蝇头小利收买的一种动物，这样的订阅式服务似乎是在侵蚀我们的软肋，慢慢地改变我们的阅读习惯。</p> \n<p>因为内容提供商的目的永远不是给用户最好的内容，而是最能赚钱（比如降低了版权等各方面成本费用的平台原创内容）、最能吸引或者让用户上瘾的内容（比如鸡汤、励志之类的），而用户一旦被锁定和限制到了平台内之后，就能通过各种手段进行潜移默化的推广，比如某些内容限时免费呀，或者有某些小的奖励机制（比如阅读和分享了某些内容就能抵一部分的订阅费用）之类的等等各种。比如国内的一些阅读平台，似乎豆瓣阅读就在极力推广平台原创内容，而微信读书则是在极力通过各种奖励机制圈用户和扩张的阶段。再配合上现在越来越精准的投放和推荐算法，有点不太愿意去考虑未来是什么样一种状况呢。</p> \n<p>总之我觉得，音乐、视频、文字各种媒介，不论是从内容创造者的角度来说还是从内容消费者的角度来说，更加开放的平台和系统都是比封闭的系统更好的；也许只是从内容分发商的商业利益角度来说这样才是没啥好处的吧，于是整个行业就慢慢被带偏了。在学术界已经出现了各种抗争：这个圈子比较特殊的一点在于内容创造者们本身也是内容的消费者，而分发商（像 Nature、Springer 等各种期刊的出版商）则搞出了各种封闭的平台限制知识的传播（当然他们的目的大概只是为了赚钱、扩张和垄断，碰巧限制了知识的传播），导致近些年各种抗议和自发组织的 Open Access 的期刊会议层出不穷。</p> \n<p>不知道将来是否其他媒介的内容创造者和消费者们是否也会发起运动将平台带回更加开放自由的状态呢？亦或者是当下的趋势并没有什么问题，完全是我自己想太多啦？😛</p>","descriptionType":"text/html","publishedDate":"Sat, 09 Feb 2019 00:00:00 +0000","feedId":3969,"bgimg":"http://freemind.pluskid.org/att/2019/amazon-books.jpg","linkMd5":"861e24996ab7a425aec7c370b9074b48","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn22@2020_2/2020/08/24/21-50-12-794_88d4241a1a574e61.webp","destWidth":2476,"destHeight":1242,"sourceBytes":1188710,"destBytes":267352,"author":"","articleImgCdnMap":{"http://freemind.pluskid.org/att/2019/amazon-books.jpg":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn22@2020_2/2020/08/24/21-50-12-794_88d4241a1a574e61.webp"},"publishedOrCreatedDate":1598305776898}],"record":{"createdTime":"2020-08-25 05:49:36","updatedTime":"2020-08-25 05:49:36","feedId":3969,"fetchDate":"Mon, 24 Aug 2020 21:49:36 +0000","fetchMs":245,"handleMs":1233,"totalMs":103152,"newArticles":0,"totalArticles":10,"status":1,"type":0,"ip":"34.199.172.117","hostName":"us-030.herokuapp.com","requestId":"f39df36a230d4a53890cd93ef8f20232_3969","contentType":"application/xml","totalBytes":10691080,"bgimgsTotal":8,"bgimgsGithubTotal":8,"articlesImgsTotal":61,"articlesImgsGithubTotal":61,"successGithubMap":{"myreaderx8":1,"myreaderx14":2,"myreaderx15":3,"myreaderx7":2,"myreaderx16":2,"myreaderx6":2,"myreaderx4":2,"myreaderx10":2,"myreaderx32":1,"myreaderx11":2,"myreaderx3":3,"myreaderx33":3,"myreaderx12":3,"myreaderx2":1,"myreaderx13":2,"myreaderx1":2,"myreaderx30":2,"myreaderx31":2,"myreaderx18":3,"myreaderx19":3,"myreaderx":3,"myreaderx25":2,"myreaderx27":2,"myreaderx21":2,"myreaderx22":2,"myreaderx23":2,"myreaderx24":1,"myreaderx5oss":2,"myreaderx29":2},"failGithubMap":{}},"feed":{"createdTime":"2020-08-25 04:29:35","updatedTime":"2020-08-25 04:29:35","id":3969,"name":"Free Mind","url":"http://freemind.pluskid.org/rss.xml","subscriber":null,"website":null,"icon":"http://freemind.pluskid.org/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx63/cdn42@2020_6/2020/08/24/21-49-36-108_e432b3f54b4181b4.jpg","description":"","weekly":null,"link":"http://freemind.pluskid.org"},"noPictureArticleList":[],"tmpCommonImgCdnBytes":991316,"tmpBodyImgCdnBytes":9699764,"tmpBgImgCdnBytes":0,"extra4":{"start":1598305775178,"total":0,"statList":[{"spend":489,"msg":"获取xml内容"},{"spend":1233,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":0,"msg":"修正封面图上传失败重新上传"},{"spend":64400,"msg":"正文链接上传到cdn"}]},"extra5":61,"extra6":61,"extra7ImgCdnFailResultVector":[null],"extra10_invalidATagHrefValue":{"http://freemind.pluskid.org/technology/work-from-home-remote-connection-kit_/misc/mosh-the-mobile-shell/":"http://freemind.pluskid.org/misc/mosh-the-mobile-shell/"},"extra111_proxyServerAndStatMap":{"http://us-018.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-53.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-039.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://europe65.herokuapp.com/":{"failCount":1,"successCount":3,"resultList":[200,200,200,null]},"http://us-002.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-034.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-005.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-022.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-009.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://europe-23.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]},"http://us-017.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]},"http://us-010.herokuapp.com/":{"failCount":0,"successCount":3,"resultList":[200,200,200]},"http://us-014.herokuapp.com/":{"failCount":0,"successCount":4,"resultList":[200,200,200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/seq2seq.png","sourceStatusCode":200,"destWidth":1666,"destHeight":741,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn41@2020_1/2020/08/24/21-49-59-049_a0f88ad0b2439d86.webp","sourceBytes":61218,"destBytes":38526,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1312,"convertSpendMs":100,"createdTime":"2020-08-25 05:49:58","host":"us-034*","referer":"http://freemind.pluskid.org/machine-learning/climbing-towards-nlu-on-meaning-form-and-understanding-in-the-age-of-data","linkMd5ListStr":"094cd235bc69e3c5f0c68c629d17af15,094cd235bc69e3c5f0c68c629d17af15","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"59.8 KB","destSize":"37.6 KB","compressRate":"62.9%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/evolution.png","sourceStatusCode":200,"destWidth":1280,"destHeight":456,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn18@2020_6/2020/08/24/21-49-59-099_bcf339af5b24a8ed.webp","sourceBytes":33102,"destBytes":33254,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1407,"convertSpendMs":194,"createdTime":"2020-08-25 05:49:58","host":"us-52*","referer":"http://freemind.pluskid.org/machine-learning/ai-and-language","linkMd5ListStr":"38782d807d605801e3cd8e75e723eadc,38782d807d605801e3cd8e75e723eadc","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"32.3 KB","destSize":"32.5 KB","compressRate":"100.5%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/book-guts.png","sourceStatusCode":200,"destWidth":1671,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn46@2020_2/2020/08/24/21-49-59-508_5e69e8d639f65dd7.webp","sourceBytes":2167713,"destBytes":216340,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2056,"convertSpendMs":147,"createdTime":"2020-08-25 05:49:58","host":"us-021*","referer":"http://freemind.pluskid.org/books/2020-book-list-spring","linkMd5ListStr":"2588311edd3587bb11b37cd26baec83c,2588311edd3587bb11b37cd26baec83c","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.1 MB","destSize":"211.3 KB","compressRate":"10%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/blog-google-trend.png","sourceStatusCode":200,"destWidth":1076,"destHeight":802,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn38@2020_6/2020/08/24/21-49-59-451_212bec6c9e9f4d2c.webp","sourceBytes":93879,"destBytes":36508,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2079,"convertSpendMs":30,"createdTime":"2020-08-25 05:49:58","host":"europe-56*","referer":"http://freemind.pluskid.org/technology/github-based-comment-system-and-the-death-of-independent-blog","linkMd5ListStr":"c811b50c2829c46c33b225e47930c71f,c811b50c2829c46c33b225e47930c71f","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"91.7 KB","destSize":"35.7 KB","compressRate":"38.9%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/mosh.png","sourceStatusCode":200,"destWidth":2548,"destHeight":538,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn26@2020_1/2020/08/24/21-50-00-542_8e1950c950e499e9.webp","sourceBytes":162515,"destBytes":82368,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2966,"convertSpendMs":148,"createdTime":"2020-08-25 05:49:58","host":"us-017*","referer":"http://freemind.pluskid.org/technology/work-from-home-remote-connection-kit","linkMd5ListStr":"9d099b06fca65190cefedebcd617e83a,9d099b06fca65190cefedebcd617e83a","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"158.7 KB","destSize":"80.4 KB","compressRate":"50.7%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/hawaii-sunset.jpg","sourceStatusCode":200,"destWidth":2564,"destHeight":1709,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn30@2020_6/2020/08/24/21-50-00-610_5c3682c9ea5af842.webp","sourceBytes":222314,"destBytes":78298,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":3047,"convertSpendMs":173,"createdTime":"2020-08-25 05:49:58","host":"us-005*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d,f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"217.1 KB","destSize":"76.5 KB","compressRate":"35.2%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/arduino.jpg","sourceStatusCode":200,"destWidth":2000,"destHeight":1023,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn34@2020_2/2020/08/24/21-49-59-922_d1dda178292ad11b.webp","sourceBytes":734750,"destBytes":238670,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2983,"convertSpendMs":102,"createdTime":"2020-08-25 05:49:58","host":"europe68*","referer":"http://freemind.pluskid.org/technology/arduino-and-procreate-art-keyboard","linkMd5ListStr":"2bd57eeb87581e61ef730b94385e923a,2bd57eeb87581e61ef730b94385e923a","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"717.5 KB","destSize":"233.1 KB","compressRate":"32.5%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/amazon-books.jpg","sourceStatusCode":200,"destWidth":2476,"destHeight":1242,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn22@2020_2/2020/08/24/21-50-12-794_88d4241a1a574e61.webp","sourceBytes":1188710,"destBytes":267352,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":6401,"convertSpendMs":404,"createdTime":"2020-08-25 05:50:07","host":"us-029*","referer":"http://freemind.pluskid.org/misc/closed-platform-for-contents","linkMd5ListStr":"861e24996ab7a425aec7c370b9074b48,861e24996ab7a425aec7c370b9074b48","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.1 MB","destSize":"261.1 KB","compressRate":"22.5%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/10-year-stats/books-anime.png","sourceStatusCode":200,"destWidth":997,"destHeight":410,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn4@2020_5/2020/08/24/21-50-14-348_937f14e34f0b97d0.webp","sourceBytes":21452,"destBytes":17714,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1173,"convertSpendMs":22,"createdTime":"2020-08-25 05:50:14","host":"us-006*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"20.9 KB","destSize":"17.3 KB","compressRate":"82.6%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/hawaii-tree.jpg","sourceStatusCode":200,"destWidth":1600,"destHeight":530,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn36@2020_3/2020/08/24/21-50-14-585_3822bd90be09f306.webp","sourceBytes":216643,"destBytes":179612,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1832,"convertSpendMs":82,"createdTime":"2020-08-25 05:50:13","host":"us-039*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"211.6 KB","destSize":"175.4 KB","compressRate":"82.9%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/drawing/skull.jpg","sourceStatusCode":200,"destWidth":2000,"destHeight":1053,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn84@2020_6/2020/08/24/21-50-14-692_7a324578d1411534.webp","sourceBytes":251341,"destBytes":68006,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1818,"convertSpendMs":108,"createdTime":"2020-08-25 05:50:14","host":"us-002*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"245.5 KB","destSize":"66.4 KB","compressRate":"27.1%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/home.jpg","sourceStatusCode":200,"destWidth":1554,"destHeight":834,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn80@2020_6/2020/08/24/21-50-14-690_54badfc31040a5b2.webp","sourceBytes":428393,"destBytes":215050,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1820,"convertSpendMs":89,"createdTime":"2020-08-25 05:50:14","host":"us-014*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"418.4 KB","destSize":"210 KB","compressRate":"50.2%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/ssh-tunnel.png","sourceStatusCode":200,"destWidth":2172,"destHeight":1552,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn72@2020_1/2020/08/24/21-50-14-818_0802d6a1d8b00c8e.webp","sourceBytes":143788,"destBytes":45786,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1844,"convertSpendMs":328,"createdTime":"2020-08-25 05:50:13","host":"us-039*","referer":"http://freemind.pluskid.org/technology/work-from-home-remote-connection-kit","linkMd5ListStr":"9d099b06fca65190cefedebcd617e83a","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"140.4 KB","destSize":"44.7 KB","compressRate":"31.8%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/hearing-aid.jpg","sourceStatusCode":200,"destWidth":1400,"destHeight":657,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn49@2020_3/2020/08/24/21-50-14-558_08ad9e1602e7f868.webp","sourceBytes":140279,"destBytes":38504,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1881,"convertSpendMs":92,"createdTime":"2020-08-25 05:50:13","host":"us-035*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"137 KB","destSize":"37.6 KB","compressRate":"27.4%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/california-zephyr-reading.png","sourceStatusCode":200,"destWidth":1600,"destHeight":538,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn19@2020_2/2020/08/24/21-50-14-760_c2e35cf5d05cde94.webp","sourceBytes":906471,"destBytes":85886,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1832,"convertSpendMs":84,"createdTime":"2020-08-25 05:50:14","host":"us-022*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"885.2 KB","destSize":"83.9 KB","compressRate":"9.5%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/2019-time-analysis/week_hours.png","sourceStatusCode":200,"destWidth":1160,"destHeight":726,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn59@2020_2/2020/08/24/21-50-14-407_57e54107297a2292.webp","sourceBytes":49921,"destBytes":48408,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1825,"convertSpendMs":47,"createdTime":"2020-08-25 05:50:14","host":"us-017*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"48.8 KB","destSize":"47.3 KB","compressRate":"97%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/boxing.jpg","sourceStatusCode":200,"destWidth":1300,"destHeight":867,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn56@2020_5/2020/08/24/21-50-14-724_179ad5cf7aad733a.webp","sourceBytes":195208,"destBytes":80956,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1828,"convertSpendMs":92,"createdTime":"2020-08-25 05:50:14","host":"us-009*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"190.6 KB","destSize":"79.1 KB","compressRate":"41.5%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/mountain-biking.jpg","sourceStatusCode":200,"destWidth":1600,"destHeight":617,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn58@2020_2/2020/08/24/21-50-14-691_ae033f475ddf2aa1.webp","sourceBytes":233915,"destBytes":182742,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1878,"convertSpendMs":81,"createdTime":"2020-08-25 05:50:13","host":"us-010*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"228.4 KB","destSize":"178.5 KB","compressRate":"78.1%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/drawing/anatomy.jpg","sourceStatusCode":200,"destWidth":2000,"destHeight":1387,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx29/cdn7@2020_2/2020/08/24/21-50-14-757_2fcca95a3b815b67.webp","sourceBytes":430704,"destBytes":317686,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1889,"convertSpendMs":173,"createdTime":"2020-08-25 05:50:13","host":"us-039*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx29","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"420.6 KB","destSize":"310.2 KB","compressRate":"73.8%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/dishes.jpg","sourceStatusCode":200,"destWidth":2000,"destHeight":860,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn16@2020_2/2020/08/24/21-50-14-855_aae1f019dc6c11bb.webp","sourceBytes":334487,"destBytes":256764,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1997,"convertSpendMs":274,"createdTime":"2020-08-25 05:50:14","host":"us-035*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"326.6 KB","destSize":"250.7 KB","compressRate":"76.8%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/2019-books/summary-Q2.png","sourceStatusCode":200,"destWidth":1550,"destHeight":712,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn27@2020_4/2020/08/24/21-50-14-960_1d335fbd861b9f07.webp","sourceBytes":1099700,"destBytes":139128,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2028,"convertSpendMs":143,"createdTime":"2020-08-25 05:50:14","host":"us-53*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1 MB","destSize":"135.9 KB","compressRate":"12.7%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/drawing/vj.jpg","sourceStatusCode":200,"destWidth":2500,"destHeight":1033,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn48@2020_6/2020/08/24/21-50-14-753_afe8395e9ae7492d.webp","sourceBytes":408224,"destBytes":327858,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2132,"convertSpendMs":165,"createdTime":"2020-08-25 05:50:14","host":"us-002*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"398.7 KB","destSize":"320.2 KB","compressRate":"80.3%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/drawing/100-heads.jpg","sourceStatusCode":200,"destWidth":2890,"destHeight":1352,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx10/cdn92@2020_4/2020/08/24/21-50-14-989_85e03642186670b9.webp","sourceBytes":487696,"destBytes":300680,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2217,"convertSpendMs":315,"createdTime":"2020-08-25 05:50:14","host":"us-53*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx10","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"476.3 KB","destSize":"293.6 KB","compressRate":"61.7%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/california-zephyr-cart.jpg","sourceStatusCode":200,"destWidth":1200,"destHeight":560,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn44@2020_5/2020/08/24/21-50-15-020_847f1446c849e1d2.webp","sourceBytes":213850,"destBytes":102026,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2432,"convertSpendMs":47,"createdTime":"2020-08-25 05:50:14","host":"europe69*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"208.8 KB","destSize":"99.6 KB","compressRate":"47.7%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/drawing/painting.jpg","sourceStatusCode":200,"destWidth":2000,"destHeight":1709,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn76@2020_2/2020/08/24/21-50-15-447_f36897253d658fad.webp","sourceBytes":711385,"destBytes":588308,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2627,"convertSpendMs":695,"createdTime":"2020-08-25 05:50:14","host":"us-026*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"694.7 KB","destSize":"574.5 KB","compressRate":"82.7%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/book-code.png","sourceStatusCode":200,"destWidth":1671,"destHeight":800,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn100@2020_3/2020/08/24/21-50-15-878_1b8b8be9dc1b6769.webp","sourceBytes":137257,"destBytes":37012,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2683,"convertSpendMs":60,"createdTime":"2020-08-25 05:50:14","host":"us-018*","referer":"http://freemind.pluskid.org/books/2020-book-list-spring","linkMd5ListStr":"2588311edd3587bb11b37cd26baec83c","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"134 KB","destSize":"36.1 KB","compressRate":"27%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/new-york.png","sourceStatusCode":200,"destWidth":1400,"destHeight":621,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn68@2020_2/2020/08/24/21-50-15-421_177f055871896fc7.webp","sourceBytes":1232366,"destBytes":119608,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2957,"convertSpendMs":62,"createdTime":"2020-08-25 05:50:13","host":"europe61*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.2 MB","destSize":"116.8 KB","compressRate":"9.7%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/art-keyboard.jpg","sourceStatusCode":200,"destWidth":1400,"destHeight":649,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn47@2020_3/2020/08/24/21-50-15-967_19bcd5a909d20c5b.webp","sourceBytes":265104,"destBytes":200196,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2996,"convertSpendMs":57,"createdTime":"2020-08-25 05:50:14","host":"us-034*","referer":"http://freemind.pluskid.org/technology/arduino-and-procreate-art-keyboard","linkMd5ListStr":"2bd57eeb87581e61ef730b94385e923a","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"258.9 KB","destSize":"195.5 KB","compressRate":"75.5%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/tmux.png","sourceStatusCode":200,"destWidth":2820,"destHeight":1230,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn64@2020_1/2020/08/24/21-50-15-438_faffba8ce95e08a2.webp","sourceBytes":476937,"destBytes":156236,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2941,"convertSpendMs":183,"createdTime":"2020-08-25 05:50:14","host":"europe-23*","referer":"http://freemind.pluskid.org/technology/work-from-home-remote-connection-kit","linkMd5ListStr":"9d099b06fca65190cefedebcd617e83a","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"465.8 KB","destSize":"152.6 KB","compressRate":"32.8%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/california-zephyr.jpg","sourceStatusCode":200,"destWidth":2856,"destHeight":1754,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn32@2020_2/2020/08/24/21-50-15-354_bbc0bd14f2819aea.webp","sourceBytes":630463,"destBytes":227834,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2981,"convertSpendMs":161,"createdTime":"2020-08-25 05:50:14","host":"europe61*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"615.7 KB","destSize":"222.5 KB","compressRate":"36.1%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/tmux-cc.png","sourceStatusCode":200,"destWidth":2468,"destHeight":1208,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn23@2020_4/2020/08/24/21-50-16-108_e46d196a230f1508.webp","sourceBytes":426042,"destBytes":148488,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":3062,"convertSpendMs":209,"createdTime":"2020-08-25 05:50:13","host":"us-010*","referer":"http://freemind.pluskid.org/technology/work-from-home-remote-connection-kit","linkMd5ListStr":"9d099b06fca65190cefedebcd617e83a","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"416.1 KB","destSize":"145 KB","compressRate":"34.9%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/drawing/scene-study.jpg","sourceStatusCode":200,"destWidth":2000,"destHeight":1059,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx32/cdn11@2020_2/2020/08/24/21-50-15-223_7764c9d324690151.webp","sourceBytes":361196,"destBytes":298914,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":3057,"convertSpendMs":101,"createdTime":"2020-08-25 05:50:14","host":"europe-57*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx32","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"352.7 KB","destSize":"291.9 KB","compressRate":"82.8%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/drawing/digital-1.jpg","sourceStatusCode":200,"destWidth":3000,"destHeight":1688,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn52@2020_3/2020/08/24/21-50-15-355_5a31db05e75b548b.webp","sourceBytes":383229,"destBytes":217606,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":3083,"convertSpendMs":243,"createdTime":"2020-08-25 05:50:14","host":"europe65*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"374.2 KB","destSize":"212.5 KB","compressRate":"56.8%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/2019-time-analysis/quarter_pie.png","sourceStatusCode":200,"destWidth":1934,"destHeight":519,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn39@2020_3/2020/08/24/21-50-16-295_c3c1ee533346c736.webp","sourceBytes":115182,"destBytes":56252,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":3179,"convertSpendMs":219,"createdTime":"2020-08-25 05:50:14","host":"us-026*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"112.5 KB","destSize":"54.9 KB","compressRate":"48.8%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/2019-time-analysis/total_hours.png","sourceStatusCode":200,"destWidth":1183,"destHeight":700,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn8@2020_6/2020/08/24/21-50-16-470_837f68e8f22030a8.webp","sourceBytes":90586,"destBytes":40330,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1302,"convertSpendMs":148,"createdTime":"2020-08-25 05:50:15","host":"us-014*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"88.5 KB","destSize":"39.4 KB","compressRate":"44.5%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/vscode.png","sourceStatusCode":200,"destWidth":2684,"destHeight":1466,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn27@2020_5/2020/08/24/21-50-15-489_ec4458b799683ff3.webp","sourceBytes":881429,"destBytes":244500,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":3238,"convertSpendMs":214,"createdTime":"2020-08-25 05:50:14","host":"europe-23*","referer":"http://freemind.pluskid.org/technology/work-from-home-remote-connection-kit","linkMd5ListStr":"9d099b06fca65190cefedebcd617e83a","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"860.8 KB","destSize":"238.8 KB","compressRate":"27.7%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/drawing/zine.jpg","sourceStatusCode":200,"destWidth":2000,"destHeight":826,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx/cdn88@2020_3/2020/08/24/21-50-16-524_a9c76a909a248078.webp","sourceBytes":257331,"destBytes":185844,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1575,"convertSpendMs":76,"createdTime":"2020-08-25 05:50:15","host":"us-010*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"251.3 KB","destSize":"181.5 KB","compressRate":"72.2%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/2019-time-analysis/weekday_hours.png","sourceStatusCode":200,"destWidth":1160,"destHeight":663,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx30/cdn16@2020_4/2020/08/24/21-50-16-653_a1f6f3dbed01de36.webp","sourceBytes":35919,"destBytes":21836,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":1685,"convertSpendMs":41,"createdTime":"2020-08-25 05:50:16","host":"europe65*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx30","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"35.1 KB","destSize":"21.3 KB","compressRate":"60.8%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/nola.jpg","sourceStatusCode":200,"destWidth":2000,"destHeight":686,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn72@2020_6/2020/08/24/21-50-16-759_6a9b93731954c335.webp","sourceBytes":178947,"destBytes":133414,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2259,"convertSpendMs":58,"createdTime":"2020-08-25 05:50:15","host":"europe69*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"174.8 KB","destSize":"130.3 KB","compressRate":"74.6%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/drawing/digital-2.jpg","sourceStatusCode":200,"destWidth":2000,"destHeight":1125,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx23/cdn61@2020_3/2020/08/24/21-50-17-469_06e3120bc80a7737.webp","sourceBytes":223001,"destBytes":139230,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":4469,"convertSpendMs":94,"createdTime":"2020-08-25 05:50:14","host":"us-018*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx23","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"217.8 KB","destSize":"136 KB","compressRate":"62.4%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/k545.jpg","sourceStatusCode":200,"destWidth":1300,"destHeight":869,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx8/cdn12@2020_4/2020/08/24/21-50-17-715_13a892a8deb9c837.webp","sourceBytes":337296,"destBytes":158940,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2624,"convertSpendMs":65,"createdTime":"2020-08-25 05:50:16","host":"us-002*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx8","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"329.4 KB","destSize":"155.2 KB","compressRate":"47.1%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/internet-traffic-mobile-share.jpg","sourceStatusCode":200,"destWidth":1920,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn31@2020_3/2020/08/24/21-50-17-931_e6cfeba9d0355767.webp","sourceBytes":547091,"destBytes":73656,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":4835,"convertSpendMs":121,"createdTime":"2020-08-25 05:50:14","host":"us-031*","referer":"http://freemind.pluskid.org/technology/github-based-comment-system-and-the-death-of-independent-blog","linkMd5ListStr":"c811b50c2829c46c33b225e47930c71f","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"534.3 KB","destSize":"71.9 KB","compressRate":"13.5%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/drawing/inktober.jpg","sourceStatusCode":200,"destWidth":2000,"destHeight":1125,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn96@2020_1/2020/08/24/21-50-17-001_23ee84c31a4c8d8c.webp","sourceBytes":432509,"destBytes":346172,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2923,"convertSpendMs":113,"createdTime":"2020-08-25 05:50:15","host":"europe61*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"422.4 KB","destSize":"338.1 KB","compressRate":"80%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/cat.png","sourceStatusCode":200,"destWidth":1000,"destHeight":280,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn24@2020_3/2020/08/24/21-50-17-774_67f000b4dad276f5.webp","sourceBytes":438767,"destBytes":47014,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":4956,"convertSpendMs":21,"createdTime":"2020-08-25 05:50:14","host":"europe65*","referer":"http://freemind.pluskid.org/machine-learning/ai-and-language","linkMd5ListStr":"38782d807d605801e3cd8e75e723eadc","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"428.5 KB","destSize":"45.9 KB","compressRate":"10.7%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/california-zephyr-inside.jpg","sourceStatusCode":200,"destWidth":2513,"destHeight":1557,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn76@2020_1/2020/08/24/21-50-17-199_724a8d7c619182f0.webp","sourceBytes":919024,"destBytes":399728,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":3085,"convertSpendMs":189,"createdTime":"2020-08-25 05:50:15","host":"europe-57*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"897.5 KB","destSize":"390.4 KB","compressRate":"43.5%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/dogs.png","sourceStatusCode":200,"destWidth":1000,"destHeight":500,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx7/cdn68@2020_4/2020/08/24/21-50-18-302_e3f26c9448c312bf.webp","sourceBytes":493623,"destBytes":44194,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":4051,"convertSpendMs":28,"createdTime":"2020-08-25 05:50:15","host":"us-006*","referer":"http://freemind.pluskid.org/machine-learning/ai-and-language","linkMd5ListStr":"38782d807d605801e3cd8e75e723eadc","githubUser":"myreaderx7","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"482.1 KB","destSize":"43.2 KB","compressRate":"9%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/art-keyboard-painting.jpg","sourceStatusCode":200,"destWidth":2000,"destHeight":752,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn80@2020_1/2020/08/24/21-50-19-097_deee5704cbc77b93.webp","sourceBytes":582807,"destBytes":78104,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":4100,"convertSpendMs":137,"createdTime":"2020-08-25 05:50:15","host":"us-035*","referer":"http://freemind.pluskid.org/technology/arduino-and-procreate-art-keyboard","linkMd5ListStr":"2bd57eeb87581e61ef730b94385e923a","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"569.1 KB","destSize":"76.3 KB","compressRate":"13.4%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/drawing/copy.jpg","sourceStatusCode":200,"destWidth":2200,"destHeight":752,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx5oss/cdn15@2020_1/2020/08/24/21-50-19-267_76e4cbe82faac7f9.webp","sourceBytes":423599,"destBytes":368380,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":6555,"convertSpendMs":196,"createdTime":"2020-08-25 05:50:14","host":"us-014*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx5oss","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"413.7 KB","destSize":"359.7 KB","compressRate":"87%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/shoe.jpg","sourceStatusCode":200,"destWidth":1600,"destHeight":724,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn92@2020_3/2020/08/24/21-50-19-247_2939dcfcb7de6067.webp","sourceBytes":251670,"destBytes":113754,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":4733,"convertSpendMs":41,"createdTime":"2020-08-25 05:50:15","host":"europe-23*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"245.8 KB","destSize":"111.1 KB","compressRate":"45.2%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/jackson-street-booksellers.jpg","sourceStatusCode":200,"destWidth":1400,"destHeight":624,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn99@2020_3/2020/08/24/21-50-20-330_9095e06fdb34d858.webp","sourceBytes":232342,"destBytes":176128,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":5461,"convertSpendMs":53,"createdTime":"2020-08-25 05:50:15","host":"us-039*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"226.9 KB","destSize":"172 KB","compressRate":"75.8%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/shortcut-keys.jpg","sourceStatusCode":200,"destWidth":1920,"destHeight":1448,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx27/cdn36@2020_4/2020/08/24/21-50-22-035_2521fa966c21f593.webp","sourceBytes":934983,"destBytes":129640,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":8966,"convertSpendMs":155,"createdTime":"2020-08-25 05:50:14","host":"us-005*","referer":"http://freemind.pluskid.org/technology/arduino-and-procreate-art-keyboard","linkMd5ListStr":"2bd57eeb87581e61ef730b94385e923a","githubUser":"myreaderx27","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"913.1 KB","destSize":"126.6 KB","compressRate":"13.9%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/bike.jpg","sourceStatusCode":200,"destWidth":1600,"destHeight":1200,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn11@2020_1/2020/08/24/21-50-21-997_4a095db3b55c4fc0.webp","sourceBytes":465908,"destBytes":182382,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":9000,"convertSpendMs":594,"createdTime":"2020-08-25 05:50:14","host":"us-026*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"455 KB","destSize":"178.1 KB","compressRate":"39.1%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/anime.jpg","sourceStatusCode":200,"destWidth":2000,"destHeight":1216,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx33/cdn84@2020_6/2020/08/24/21-50-22-732_d5fa8f8a06f64246.webp","sourceBytes":521521,"destBytes":395856,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":8380,"convertSpendMs":157,"createdTime":"2020-08-25 05:50:15","host":"us-022*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx33","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"509.3 KB","destSize":"386.6 KB","compressRate":"75.9%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/soldering.jpg","sourceStatusCode":200,"destWidth":2000,"destHeight":778,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn95@2020_5/2020/08/24/21-50-23-479_c01f9eb6a816af2c.webp","sourceBytes":1301945,"destBytes":229534,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":10567,"convertSpendMs":89,"createdTime":"2020-08-25 05:50:14","host":"us-031*","referer":"http://freemind.pluskid.org/technology/arduino-and-procreate-art-keyboard","linkMd5ListStr":"2bd57eeb87581e61ef730b94385e923a","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.2 MB","destSize":"224.2 KB","compressRate":"17.6%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/2019-books/summary-Q3.png","sourceStatusCode":200,"destWidth":1535,"destHeight":714,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn20@2020_5/2020/08/24/21-50-24-187_4461d86818f807f1.webp","sourceBytes":1080489,"destBytes":129170,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":11262,"convertSpendMs":110,"createdTime":"2020-08-25 05:50:14","host":"us-002*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1 MB","destSize":"126.1 KB","compressRate":"12%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/Goku-Kamehameha.png","sourceStatusCode":200,"destWidth":1000,"destHeight":606,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx25/cdn38@2020_5/2020/08/24/21-50-24-506_c2ff8e152144fe33.webp","sourceBytes":735231,"destBytes":70838,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":11446,"convertSpendMs":47,"createdTime":"2020-08-25 05:50:14","host":"us-006*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx25","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"718 KB","destSize":"69.2 KB","compressRate":"9.6%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/book-morpho.png","sourceStatusCode":200,"destWidth":1737,"destHeight":999,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx14/cdn43@2020_1/2020/08/24/21-50-27-259_1c4aa45318e6cb60.webp","sourceBytes":1764284,"destBytes":204328,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":11545,"convertSpendMs":484,"createdTime":"2020-08-25 05:50:16","host":"us-014*","referer":"http://freemind.pluskid.org/books/2020-book-list-spring","linkMd5ListStr":"2588311edd3587bb11b37cd26baec83c","githubUser":"myreaderx14","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.7 MB","destSize":"199.5 KB","compressRate":"11.6%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/drawing/3-heads.jpg","sourceStatusCode":200,"destWidth":3719,"destHeight":1580,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn56@2020_5/2020/08/24/21-50-29-127_8538d83ac1412797.webp","sourceBytes":886705,"destBytes":659720,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":16433,"convertSpendMs":363,"createdTime":"2020-08-25 05:50:14","host":"us-53*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"865.9 KB","destSize":"644.3 KB","compressRate":"74.4%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2020/book-japan.png","sourceStatusCode":200,"destWidth":1737,"destHeight":1015,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx24/cdn7@2020_6/2020/08/24/21-50-29-078_2e905a306ad44c4d.webp","sourceBytes":2850933,"destBytes":300430,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":16675,"convertSpendMs":186,"createdTime":"2020-08-25 05:50:14","host":"europe69*","referer":"http://freemind.pluskid.org/books/2020-book-list-spring","linkMd5ListStr":"2588311edd3587bb11b37cd26baec83c","githubUser":"myreaderx24","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"2.7 MB","destSize":"293.4 KB","compressRate":"10.5%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/2019-books/summary-Q1.png","sourceStatusCode":200,"destWidth":1550,"destHeight":717,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx16/cdn3@2020_6/2020/08/24/21-50-40-774_c7f158fe098ee6b2.webp","sourceBytes":1281373,"destBytes":156772,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":25879,"convertSpendMs":218,"createdTime":"2020-08-25 05:50:16","host":"us-026*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx16","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.2 MB","destSize":"153.1 KB","compressRate":"12.2%"},{"code":1,"isDone":false,"source":"http://freemind.pluskid.org/att/2019/2019-books/summary-Q4.png","sourceStatusCode":200,"destWidth":1550,"destHeight":1080,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn87@2020_2/2020/08/24/21-51-16-695_5fb58a3fc8d0445f.webp","sourceBytes":1746740,"destBytes":212610,"targetWebpQuality":75,"feedId":3969,"totalSpendMs":2909,"convertSpendMs":106,"createdTime":"2020-08-25 05:51:15","host":"europe-23*","referer":"http://freemind.pluskid.org/misc/2019-summary","linkMd5ListStr":"f409a8da70f890a7d7a253e23b59239d","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"1.7 MB","destSize":"207.6 KB","compressRate":"12.2%"}],"successGithubMap":{"myreaderx8":1,"myreaderx14":2,"myreaderx15":3,"myreaderx7":2,"myreaderx16":2,"myreaderx6":2,"myreaderx4":2,"myreaderx10":2,"myreaderx32":1,"myreaderx11":2,"myreaderx3":3,"myreaderx33":3,"myreaderx12":3,"myreaderx2":1,"myreaderx13":2,"myreaderx1":2,"myreaderx30":2,"myreaderx31":2,"myreaderx18":3,"myreaderx19":3,"myreaderx":3,"myreaderx25":2,"myreaderx27":2,"myreaderx21":2,"myreaderx22":2,"myreaderx23":2,"myreaderx24":1,"myreaderx5oss":2,"myreaderx29":2},"failGithubMap":{}}