{"code":1,"isDone":false,"toInsertArticleList":[{"createdTime":"2020-09-07 01:51:28","updatedTime":"2020-09-07 01:51:28","title":"Dooring可视化之从零实现动态表单设计器","link":"https://juejin.im/post/6869397549342523405","description":"<div class=\"markdown-body\"><h2 data-id=\"heading-0\">前言</h2>\n<p>之前笔者有写过一篇如何设计<strong>动态表单配置平台</strong>的文章，但是由于笔者电脑问题代码丢失，所以后期重新实现了一套<strong>表单设计器</strong>，并优化了之前的设计方式，特地做一下总结和复盘。</p>\n<h2 data-id=\"heading-1\">你将收获</h2>\n<ul>\n<li>动态表单开发的一般思路</li>\n<li>可视化领域中的表单引擎</li>\n<li>从零实现一款动态表单设计器</li>\n<li>利用H5-Dooring开发一款表单设计平台</li>\n</ul>\n<h2 data-id=\"heading-2\">正文</h2>\n<p>按照习惯，我们先看看<strong>表单设计器</strong>实现的效果展示：\n</p><figure><img class=\"lazyload\" src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/84ea2ffd564641b88f7191cf61d5e8d3~tplv-k3u1fbpfcp-zoom-1.image\" data-width=\"800\" data-height=\"600\" referrerpolicy=\"no-referrer\"><figcaption></figcaption></figure>\n<figure><img class=\"lazyload\" src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9705ffaa01cc44719fd7f30fbe145e72~tplv-k3u1fbpfcp-zoom-1.image\" data-width=\"800\" data-height=\"600\" referrerpolicy=\"no-referrer\"><figcaption></figcaption></figure>\n上图中我们将表单设计器集成到了<strong>H5-Dooring</strong>中，使其可以实现拖拽生成表单。<p></p>\n<p>其次我们可以根据右边的配置项，动态的添加某个表单组件或或者修改组件字段和数据源。在配置好表单之后我们还可以定制表单提交的<strong>api</strong>接口地址，以便实现用户数据的可溯源性。</p>\n<p>在开发之前，我们先分析一下动态表单设计的一般实现思路。</p>\n<h3 data-id=\"heading-3\">动态表单开发的一般思路</h3>\n<p><strong>1. 静态化配置列表</strong>\n静态化配置列表是最传统的表单配置方式之一，基本思路就是利用母表来生成配置项，进而实现表单配置。类似于以下方式：\n</p><figure><img class=\"lazyload\" src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c871e2ce7b3e4f47951d51738c6ccdad~tplv-k3u1fbpfcp-zoom-1.image\" data-width=\"800\" data-height=\"600\" referrerpolicy=\"no-referrer\"><figcaption></figcaption></figure>\n早期的网站配置就是类似于这种呢方案实现的，比如说我们要定制网站的主色，网站某些组件是否可见，是一种比较简单的方式。但是缺点是每增加一个配置属性，都要开发人员重新编写一个字段配置代码，这种方式在表单开发中非常不灵活，而且对代码层有强依赖性，所以只适合做小型配置系统。比如个人网站，简单的自定义表单。<p></p>\n<p><strong>2. 基于json schema的动态表单配置</strong></p>\n<p>基于<strong>json schema</strong>的动态表单配置有两种实现方案， 一种就是支持在线修改json文件从而实现定制化，另一种就是完全无代码操作，但是前提都需要提供一套通用的表单模版。类似于如下案例：\n</p><figure><img class=\"lazyload\" src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e88fdfc57dc24bdc9fd7c4302b135fab~tplv-k3u1fbpfcp-zoom-1.image\" data-width=\"800\" data-height=\"600\" referrerpolicy=\"no-referrer\"><figcaption></figcaption></figure>\n此种方案可以实现基本的表单自治。也是本文主要实现的方案。至于在线编写json文件的方案。笔者之前也也过成熟的方案，具体可以参考：<a href=\"https://juejin.im/post/6844904053781037064\" target=\"_blank\">基于jsoneditor二次封装一个可实时预览的json编辑器组件(react版)</a><p></p>\n<p><strong>3. 支持在线coding的混合式表单设计</strong>\n支持<strong>在线编程</strong>的混合式表单设计方案是终极方案，也是目前流行的无代码化平台的思想之一。一方面它提供了基于<strong>json schema</strong>的动态表单配置， 对于一些强定制的，需要在线设计组件方案的模式，采用在线编程，实时打包成动态组件的方式，最后根据平台的组件约定来实现组件库的方式。如下图所示：\n</p><figure><img class=\"lazyload\" src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4367324c929948bd9fc38cae56886d3c~tplv-k3u1fbpfcp-zoom-1.image\" data-width=\"800\" data-height=\"600\" referrerpolicy=\"no-referrer\"><figcaption></figcaption></figure>\n在线代码编辑可以使用<strong>react-codemirror2</strong>或者 <strong>react-monaco-editor</strong>插件来实现。至于在线打包，我们用<strong>nodejs</strong>完全可以实现，笔者在做<strong>Dooring</strong>项目的在线下载代码时就用到了该方案，感兴趣的可以了解一下。<p></p>\n<h3 data-id=\"heading-4\">可视化领域中的表单引擎</h3>\n<p>可视化领域一方面强调的是图形(可视化)的设计，一方面是动态表单。比如说我们想傻瓜式的改变一张图的数据，属性，交互等，我们需要通过表单这一桥梁来实现：\n</p><figure><img class=\"lazyload\" src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/51eea09f8b694a6fb57f95cbe5cdd51e~tplv-k3u1fbpfcp-zoom-1.image\" data-width=\"800\" data-height=\"600\" referrerpolicy=\"no-referrer\"><figcaption></figcaption></figure>\n所以我们需要设计一款适合公司产品的“表单引擎”，来动态根据图形组件的类型渲染不同表单配置。这块思想也是表单设计器要解决的问题之一。在下面的文章中我们会详细介绍实现过程。<p></p>\n<h3 data-id=\"heading-5\">从零实现一款动态表单设计器</h3>\n<p>在实现表单设计器之前，我们先来整理一下思路和需求。在笔者的最初草图中，它长这样：\n</p><figure><img class=\"lazyload\" src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3ac70c197d4541b99f68e843ca273fa1~tplv-k3u1fbpfcp-zoom-1.image\" data-width=\"800\" data-height=\"600\" referrerpolicy=\"no-referrer\"><figcaption></figcaption></figure>\n从草图中我们可以提取到如下任务信息：<p></p>\n<ul>\n<li>定义一套表单组件库</li>\n<li>确定表单全局属性配置</li>\n<li>实现表单操作curd(增删查改)</li>\n</ul>\n<p>我们这里总结了几个常用的表单组件如下：</p>\n<ul>\n<li>单选框</li>\n<li>复选框</li>\n<li>单行文本</li>\n<li>多行文本</li>\n<li>下拉框</li>\n<li>文件上传</li>\n<li>日期框</li>\n<li>数值输入框</li>\n</ul>\n<p>以上这些基本满足我们的日常开发需求，其次我们还可以开发数据源表单组件，列表组件，比如dooring实现的那样：\n</p><figure><img class=\"lazyload\" src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9e0ae9888df549d8a1146e10162ccc7d~tplv-k3u1fbpfcp-zoom-1.image\" data-width=\"800\" data-height=\"600\" referrerpolicy=\"no-referrer\"><figcaption></figcaption></figure>\n类似的还有颜色面板这些，我们可以更具业务需求自行定制。<p></p>\n<p>在完成表单组件库之后，我们就需要根据配置项动态渲染了。也有两种实现思路，一种就是类似于多条件判断，如下：</p>\n<pre><code class=\"hljs language-html copyable\" lang=\"html\">{\n  item.type === 'Number' &&\n  <span class=\"hljs-tag\"><<span class=\"hljs-name\">Form.Item</span> <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">{item.name}</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">{item.key}</span>></span>\n    <span class=\"hljs-tag\"><<span class=\"hljs-name\">InputNumber</span> <span class=\"hljs-attr\">min</span>=<span class=\"hljs-string\">{1}</span> <span class=\"hljs-attr\">max</span>=<span class=\"hljs-string\">{item.range</span> && <span class=\"hljs-attr\">item.range</span>[<span class=\"hljs-attr\">1</span>]} <span class=\"hljs-attr\">step</span>=<span class=\"hljs-string\">{item.step}</span> /></span>\n  <span class=\"hljs-tag\"></<span class=\"hljs-name\">Form.Item</span>></span>\n}\n{\n  item.type === 'Text' &&\n  <span class=\"hljs-tag\"><<span class=\"hljs-name\">Form.Item</span> <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">{item.name}</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">{item.key}</span>></span>\n    <span class=\"hljs-tag\"><<span class=\"hljs-name\">Input</span> /></span>\n  <span class=\"hljs-tag\"></<span class=\"hljs-name\">Form.Item</span>></span>\n}\n{\n  item.type === 'TextArea' &&\n  <span class=\"hljs-tag\"><<span class=\"hljs-name\">Form.Item</span> <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">{item.name}</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">{item.key}</span>></span>\n    <span class=\"hljs-tag\"><<span class=\"hljs-name\">TextArea</span> <span class=\"hljs-attr\">rows</span>=<span class=\"hljs-string\">{4}</span> /></span>\n  <span class=\"hljs-tag\"></<span class=\"hljs-name\">Form.Item</span>></span>\n}\n<span class=\"copy-code-btn\">复制代码</span></code></pre>\n<p>这样做虽然可行，也有很多成熟系统采用该方案，但是一旦表单变多，比如一个页面有几十个甚至上百个表单项，那么我们将渲染<strong>m</strong> <strong>* n</strong>次(m为表单组件类型数，n为配置项个数)。另一种方式笔者看来是比较优雅的，可以将复杂度降低到O(n),也就是笔者常用的对象法。思路大至如下：<strong>将表单组件的类型作为对象的属性，属性值为对应的表单组件，这样遍历的时候只需要对应上对象的具体类型即可。</strong>\n代码如下：</p>\n<pre><code class=\"hljs language-html copyable\" lang=\"html\">// 维护表单控件， 提高form渲染性能\nconst BaseForm = {\n    \"Text\": (props) => {\n        const { label, placeholder, onChange } = props\n        return <span class=\"hljs-tag\"><<span class=\"hljs-name\">Cell</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">{label}</span>></span>\n                    <span class=\"hljs-tag\"><<span class=\"hljs-name\">Input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">{placeholder}</span> <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{onChange}</span> /></span> \n               <span class=\"hljs-tag\"></<span class=\"hljs-name\">Cell</span>></span>\n    },\n    \"Number\": (props) => {\n        const { label, placeholder, onChange } = props\n        return <span class=\"hljs-tag\"><<span class=\"hljs-name\">Cell</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">{label}</span>></span>\n                    <span class=\"hljs-tag\"><<span class=\"hljs-name\">Input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">{placeholder}</span> <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{onChange}</span> /></span> \n               <span class=\"hljs-tag\"></<span class=\"hljs-name\">Cell</span>></span>\n    }\n}\n\n//  动态渲染表单\n{\n    formData.map((item, i) => {\n        let FormItem = BaseForm[item.type]\n        return <span class=\"hljs-tag\"><<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{styles.formItem}</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{i}</span>></span>\n                  <span class=\"hljs-tag\"><<span class=\"hljs-name\">FormItem</span> {<span class=\"hljs-attr\">...item</span>} /></span>\n              <span class=\"hljs-tag\"></<span class=\"hljs-name\">div</span>></span>\n    })\n}\n<span class=\"copy-code-btn\">复制代码</span></code></pre>\n<p>是不是很优雅呢？后期我们只需要在<strong>BaseForm</strong>里维护表单组件即可，而且还可以基于<strong>BaseForm</strong>对表单进行包装，实现动态删除，编辑等功能。如下：\n</p><figure><img class=\"lazyload\" src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c6fdadbf2dea466fab60d5fb16dcd1d2~tplv-k3u1fbpfcp-zoom-1.image\" data-width=\"800\" data-height=\"600\" referrerpolicy=\"no-referrer\"><figcaption></figcaption></figure>\n包装后的代码如下：<p></p>\n<pre><code class=\"hljs language-html copyable\" lang=\"html\"><span class=\"hljs-tag\"><<span class=\"hljs-name\">div</span>></span>\n  <span class=\"hljs-tag\"><<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{styles.disClick}</span>></span><span class=\"hljs-tag\"><<span class=\"hljs-name\">FormItem</span> {<span class=\"hljs-attr\">...item</span>} /></span><span class=\"hljs-tag\"></<span class=\"hljs-name\">div</span>></span>\n  <span class=\"hljs-tag\"><<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">{styles.operationWrap}</span>></span>\n      <span class=\"hljs-tag\"><<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{handleEditItem}</span>></span><span class=\"hljs-tag\"><<span class=\"hljs-name\">EditOutlined</span> /></span><span class=\"hljs-tag\"></<span class=\"hljs-name\">span</span>></span>\n      <span class=\"hljs-tag\"><<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{handleDelItem}</span>></span><span class=\"hljs-tag\"><<span class=\"hljs-name\">MinusCircleOutlined</span> /></span><span class=\"hljs-tag\"></<span class=\"hljs-name\">span</span>></span>\n  <span class=\"hljs-tag\"></<span class=\"hljs-name\">div</span>></span>\n<span class=\"hljs-tag\"></<span class=\"hljs-name\">div</span>></span>\n<span class=\"copy-code-btn\">复制代码</span></code></pre>\n<p>接下来我们看看表单的全局属性，通过实际分析我们可以知道表单有如下外观：</p>\n<ul>\n<li>表单标题</li>\n<li>表单背景图片</li>\n<li>表单背景颜色</li>\n<li>提交按钮样式</li>\n</ul>\n<p>所以他们因该成为表单设计的通用属性，如下图所示：\n</p><figure><img class=\"lazyload\" src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/22898c0ad595498594d7a95405a43a3e~tplv-k3u1fbpfcp-zoom-1.image\" data-width=\"800\" data-height=\"600\" referrerpolicy=\"no-referrer\"><figcaption></figcaption></figure>\n配置出来之后的表单可能长这样：\n<figure><img class=\"lazyload\" src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/087841fd2e8c4868bb284957c52de6e4~tplv-k3u1fbpfcp-zoom-1.image\" data-width=\"800\" data-height=\"600\" referrerpolicy=\"no-referrer\"><figcaption></figcaption></figure>\n以上的表单通过<strong>H5-Dooring</strong>设计而来。当然我们可以利用它设计更加自定的表单页面。<p></p>\n<p>最后一个比较使用的需求就是api定制，一般公司可能需要将用户的录入数据收集到自己的平台，那么这个时候我们提供一个api表单提交接口积极很有必要了，上面笔者也展示过，实现很简单，就是配置里多一个api的文本框即可。</p>\n<p>最后一步就是实现表单的curd操作，展示如下：</p>\n<p>编辑表单项：\n</p><figure><img class=\"lazyload\" src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/219de195838a4685919400b8670a1d08~tplv-k3u1fbpfcp-zoom-1.image\" data-width=\"800\" data-height=\"600\" referrerpolicy=\"no-referrer\"><figcaption></figcaption></figure>\n删除表单项：\n<figure><img class=\"lazyload\" src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5c7eed2773264c5bab7641fabb85c24e~tplv-k3u1fbpfcp-zoom-1.image\" data-width=\"800\" data-height=\"600\" referrerpolicy=\"no-referrer\"><figcaption></figcaption></figure>\n添加表单项：\n<figure><img class=\"lazyload\" src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/07e270e5227340c9ab4860f27fd1f4cf~tplv-k3u1fbpfcp-zoom-1.image\" data-width=\"800\" data-height=\"600\" referrerpolicy=\"no-referrer\"><figcaption></figcaption></figure>\n具体实现也比较简单，只需要基于BaseForm进行包装，添加删除/编辑/添加按钮即可。具体可以参考我的开源项目H5-Dooring，地址：<a href=\"http://io.nainor.com/h5_visible\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">H5-Dooring传送门</a><p></p>\n<h3 data-id=\"heading-6\">利用H5-Dooring开发一款表单设计平台</h3>\n<p>在H5编辑器<strong>Dooring</strong>的实现中，我们可以做抽象，每一个页面组件可以看成特定的表单组件，如下图：\n</p><figure><img class=\"lazyload\" src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c2033caea91b4b448ead68a89f296920~tplv-k3u1fbpfcp-zoom-1.image\" data-width=\"800\" data-height=\"600\" referrerpolicy=\"no-referrer\"><figcaption></figcaption></figure>\n我们可以利用<strong>dooring</strong>的能力对表单平台进行拖拽，样式设计，数据录入等等操作，感兴趣的朋友可以基于<strong>Dooring</strong>设计思路改造成自己的表单设计平台。在文末笔者会附上dooring的<strong>github</strong>地址供大家研究参考。<p></p>\n<h4 data-id=\"heading-7\">H5可视化编辑器Dooring功能迭代说明</h4>\n<p>目前笔者实现的H5可视化编辑器<strong>H5-Dooring</strong>功能新增如下：</p>\n<ul>\n<li>实时保存功能</li>\n<li>添加进度条组件</li>\n<li>添加websocket通信</li>\n<li>实现在线下载代码功能</li>\n<li>添加Button组件</li>\n<li>添加动态表单设计器</li>\n</ul>\n<p>预览地址：<a href=\"http://io.nainor.com/h5_visible\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">基于React+Koa实现一个h5页面可视化编辑器－Dooring</a></p>\n<p>github地址：<a href=\"https://github.com/MrXujiang/h5-Dooring\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">基于React+Koa实现一个h5页面可视化编辑器－Dooring</a></p>\n<h2 data-id=\"heading-8\">最后</h2>\n<p>如果想学习更多H5游戏, webpack，node，gulp，css3，javascript，nodeJS，canvas数据可视化等前端知识和实战，欢迎在《趣谈前端》一起学习讨论，共同探索前端的边界。</p>\n<h2 data-id=\"heading-9\">更多推荐</h2>\n<ul>\n<li><a href=\"https://juejin.im/post/6864410873709592584\" target=\"_blank\">基于React+Koa实现一个h5页面可视化编辑器－Dooring</a></li>\n<li><a href=\"https://juejin.im/post/6861538848963461133\" target=\"_blank\">深度剖析github star数15.1k的开源项目redux-thunk</a></li>\n<li><a href=\"https://juejin.im/post/6857123751205535751\" target=\"_blank\">TS核心知识点总结及项目实战案例分析</a></li>\n</ul></div> <div class=\"image-viewer-box\" data-v-78c9b824><!----></div>","descriptionType":"text/html","publishedDate":"Sun, 06 Sep 2020 07:42:43 +0000","feedId":12740,"bgimg":"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/84ea2ffd564641b88f7191cf61d5e8d3~tplv-k3u1fbpfcp-zoom-1.image","linkMd5":"c6d5d784bbde61a7e3d8f6fdd13495d4","bgimgJsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn31@2020_2/2020/09/06/17-51-33-491_fddab5d5c0961be8.webp","destWidth":2870,"destHeight":1538,"sourceBytes":410887,"destBytes":115162,"author":"徐小夕","articleImgCdnMap":{"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/84ea2ffd564641b88f7191cf61d5e8d3~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn31@2020_2/2020/09/06/17-51-33-491_fddab5d5c0961be8.webp","https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9705ffaa01cc44719fd7f30fbe145e72~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn68@2020_6/2020/09/06/17-51-53-218_792fe83c4bdce106.webp","https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c871e2ce7b3e4f47951d51738c6ccdad~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn64@2020_2/2020/09/06/17-51-35-120_03911f1b74e07fc4.webp","https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e88fdfc57dc24bdc9fd7c4302b135fab~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn57@2020_6/2020/09/06/17-51-35-913_c4ab4aac46e04209.webp","https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4367324c929948bd9fc38cae56886d3c~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn76@2020_6/2020/09/06/17-51-35-478_acf3e202aa7df48b.webp","https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/51eea09f8b694a6fb57f95cbe5cdd51e~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn45@2020_4/2020/09/06/17-51-35-883_7ecfedeea955a06f.webp","https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3ac70c197d4541b99f68e843ca273fa1~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn71@2020_2/2020/09/06/17-51-35-118_cc6a21ad788c0a6d.webp","https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9e0ae9888df549d8a1146e10162ccc7d~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn44@2020_2/2020/09/06/17-51-40-946_a844f65ec7445526.webp","https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c6fdadbf2dea466fab60d5fb16dcd1d2~tplv-k3u1fbpfcp-zoom-1.image":null,"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/22898c0ad595498594d7a95405a43a3e~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn38@2020_1/2020/09/06/17-51-35-840_8c90f2e918c1a1a9.webp","https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/087841fd2e8c4868bb284957c52de6e4~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn83@2020_6/2020/09/06/17-51-35-897_ad8e8b320cfecddf.webp","https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/219de195838a4685919400b8670a1d08~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn36@2020_4/2020/09/06/17-51-35-533_d70203b2d0f5136e.webp","https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5c7eed2773264c5bab7641fabb85c24e~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn56@2020_6/2020/09/06/17-51-37-263_35ab3a3c8fa90618.webp","https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/07e270e5227340c9ab4860f27fd1f4cf~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn88@2020_6/2020/09/06/17-51-37-107_497abde151fab1e2.webp","https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c2033caea91b4b448ead68a89f296920~tplv-k3u1fbpfcp-zoom-1.image":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn51@2020_1/2020/09/06/17-51-35-513_a18629c642085521.webp"},"publishedOrCreatedDate":1599414688453}],"record":{"createdTime":"2020-09-07 01:51:28","updatedTime":"2020-09-07 01:51:28","feedId":12740,"fetchDate":"Sun, 06 Sep 2020 17:51:28 +0000","fetchMs":40,"handleMs":40,"totalMs":25738,"newArticles":0,"totalArticles":5,"status":1,"type":0,"ip":"b7527567a3f1dbda02b464d907e55b0a","hostName":"us-011*","requestId":"bb7ead7e469d4bb89f6e0590dcda8afd_12740","contentType":"application/xml; charset=utf-8","totalBytes":683458,"bgimgsTotal":1,"bgimgsGithubTotal":1,"articlesImgsTotal":15,"articlesImgsGithubTotal":14,"successGithubMap":{"myreaderx15":1,"myreaderx6":1,"myreaderx4":1,"myreaderx21":1,"myreaderx3":1,"myreaderx22":1,"myreaderx11":1,"myreaderx2":1,"myreaderx12":1,"myreaderx13":1,"myreaderx1":1,"myreaderx31":1,"myreaderx18":1,"myreaderx19":1},"failGithubMap":{"myreaderx14":1}},"feed":{"createdTime":"2020-08-25 04:37:55","updatedTime":"2020-09-05 16:40:22","id":12740,"name":"掘金前端","url":"https://rsshub.app/juejin/category/frontend","subscriber":null,"website":null,"icon":"https://juejin.im/favicon.ico","icon_jsdelivr":"https://cdn.jsdelivr.net/gh/myreaderx65/cdn53@2020_2/2020/09/05/08-40-02-078_24cb365749d306f2.ico","description":"掘金前端 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)","weekly":null,"link":null},"noPictureArticleList":[{"createdTime":"2020-09-07 01:51:54","updatedTime":"2020-09-07 01:51:54","id":null,"feedId":12740,"linkMd5":"c6d5d784bbde61a7e3d8f6fdd13495d4"}],"tmpCommonImgCdnBytes":115162,"tmpBodyImgCdnBytes":568296,"tmpBgImgCdnBytes":0,"extra4":{"start":1599414688385,"total":0,"statList":[{"spend":43,"msg":"获取xml内容"},{"spend":40,"msg":"解释文章"},{"spend":0,"msg":"上传封面图到cdn"},{"spend":1,"msg":"修正封面图上传失败重新上传"},{"spend":19572,"msg":"正文链接上传到cdn"}]},"extra5":15,"extra6":15,"extra7ImgCdnFailResultVector":[{"code":1,"isDone":false,"source":"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c6fdadbf2dea466fab60d5fb16dcd1d2~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":1796,"destHeight":636,"sourceBytes":69628,"destBytes":29394,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":2242,"convertSpendMs":41,"createdTime":"2020-09-07 01:51:34","host":"europe69*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn80/contents/2020/09/06/17-51-36-668_5f3206cdf7f5a4be.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 17:51:36 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CE82:2C9D:DAB4604:1092E599:5F5521A8"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599415556"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn80/contents/2020/09/06/17-51-36-668_5f3206cdf7f5a4be.webp","historyStatusCode":[],"spendMs":256},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"68 KB","destSize":"28.7 KB","compressRate":"42.2%"},{"code":1,"isDone":false,"source":"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c6fdadbf2dea466fab60d5fb16dcd1d2~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":1796,"destHeight":636,"sourceBytes":69628,"destBytes":29394,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":890,"convertSpendMs":44,"createdTime":"2020-09-07 01:51:36","host":"us-027*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4","rawMap":{"githubUrl":"https://api.github.com/repos/myreaderx14/cdn80/contents/2020/09/06/17-51-37-806_5f3206cdf7f5a4be.webp","resp":{"code":403,"msg":"Forbidden","body":"{\n  \"message\": \"API rate limit exceeded for user ID 68584859.\",\n  \"documentation_url\": \"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting\"\n}\n","headerMap":{"access-control-allow-origin":["*"],"access-control-expose-headers":["ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"],"content-security-policy":["default-src 'none'"],"content-type":["application/json; charset=utf-8"],"date":["Sun, 06 Sep 2020 17:51:37 GMT"],"referrer-policy":["origin-when-cross-origin, strict-origin-when-cross-origin"],"server":["GitHub.com"],"status":["403 Forbidden"],"strict-transport-security":["max-age=31536000; includeSubdomains; preload"],"transfer-encoding":["chunked"],"vary":["Accept-Encoding, Accept, X-Requested-With"],"x-accepted-oauth-scopes":["repo"],"x-content-type-options":["nosniff"],"x-frame-options":["deny"],"x-github-media-type":["github.v3; format=json"],"x-github-request-id":["CF64:4222:13971E5:21AE604:5F5521A8"],"x-oauth-scopes":["admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, read:packages, repo, user, workflow, write:discussion, write:packages"],"x-ratelimit-limit":["60"],"x-ratelimit-remaining":["0"],"x-ratelimit-reset":["1599415556"],"x-ratelimit-used":["60"],"x-xss-protection":["1; mode=block"]},"exceptionMsg":"Unexpected code 403,url is : https://api.github.com/repos/myreaderx14/cdn80/contents/2020/09/06/17-51-37-806_5f3206cdf7f5a4be.webp","historyStatusCode":[],"spendMs":60},"base64UserPassword":null,"token":"6b67d******************************91b08"},"githubUser":"myreaderx14","githubHttpCode":403,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"68 KB","destSize":"28.7 KB","compressRate":"42.2%"}],"extra10_invalidATagHrefValue":{},"extra111_proxyServerAndStatMap":{"http://us-53.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe65.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe61.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-035.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-015.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-60.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-026.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-006.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe69.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-031.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-019.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe-57.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://europe64.herokuapp.com/":{"failCount":0,"successCount":1,"resultList":[200]},"http://us-027.herokuapp.com/":{"failCount":0,"successCount":2,"resultList":[200,200]}},"extra12ImgCdnSuccessResultVector":[{"code":1,"isDone":false,"source":"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/84ea2ffd564641b88f7191cf61d5e8d3~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":2870,"destHeight":1538,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx15/cdn31@2020_2/2020/09/06/17-51-33-491_fddab5d5c0961be8.webp","sourceBytes":410887,"destBytes":115162,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":6037,"convertSpendMs":375,"createdTime":"2020-09-07 01:51:28","host":"us-010*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4,c6d5d784bbde61a7e3d8f6fdd13495d4","githubUser":"myreaderx15","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"401.3 KB","destSize":"112.5 KB","compressRate":"28%"},{"code":1,"isDone":false,"source":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3ac70c197d4541b99f68e843ca273fa1~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":1614,"destHeight":1414,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx2/cdn71@2020_2/2020/09/06/17-51-35-118_cc6a21ad788c0a6d.webp","sourceBytes":54492,"destBytes":27180,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":1406,"convertSpendMs":98,"createdTime":"2020-09-07 01:51:34","host":"us-019*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4","githubUser":"myreaderx2","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"53.2 KB","destSize":"26.5 KB","compressRate":"49.9%"},{"code":1,"isDone":false,"source":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c871e2ce7b3e4f47951d51738c6ccdad~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":1430,"destHeight":1126,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx22/cdn64@2020_2/2020/09/06/17-51-35-120_03911f1b74e07fc4.webp","sourceBytes":45497,"destBytes":48126,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":1465,"convertSpendMs":52,"createdTime":"2020-09-07 01:51:34","host":"us-53*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4","githubUser":"myreaderx22","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"44.4 KB","destSize":"47 KB","compressRate":"105.8%"},{"code":1,"isDone":false,"source":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c2033caea91b4b448ead68a89f296920~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":1566,"destHeight":938,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx12/cdn51@2020_1/2020/09/06/17-51-35-513_a18629c642085521.webp","sourceBytes":32427,"destBytes":34002,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":1799,"convertSpendMs":111,"createdTime":"2020-09-07 01:51:34","host":"us-015*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4","githubUser":"myreaderx12","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"31.7 KB","destSize":"33.2 KB","compressRate":"104.9%"},{"code":1,"isDone":false,"source":"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4367324c929948bd9fc38cae56886d3c~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":2738,"destHeight":718,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx11/cdn76@2020_6/2020/09/06/17-51-35-478_acf3e202aa7df48b.webp","sourceBytes":98949,"destBytes":41686,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":1868,"convertSpendMs":106,"createdTime":"2020-09-07 01:51:34","host":"us-006*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4","githubUser":"myreaderx11","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"96.6 KB","destSize":"40.7 KB","compressRate":"42.1%"},{"code":1,"isDone":false,"source":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/51eea09f8b694a6fb57f95cbe5cdd51e~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":2504,"destHeight":1250,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx3/cdn45@2020_4/2020/09/06/17-51-35-883_7ecfedeea955a06f.webp","sourceBytes":180385,"destBytes":69658,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":2211,"convertSpendMs":101,"createdTime":"2020-09-07 01:51:34","host":"us-027*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4","githubUser":"myreaderx3","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"176.2 KB","destSize":"68 KB","compressRate":"38.6%"},{"code":1,"isDone":false,"source":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/219de195838a4685919400b8670a1d08~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":2848,"destHeight":1294,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx1/cdn36@2020_4/2020/09/06/17-51-35-533_d70203b2d0f5136e.webp","sourceBytes":382470,"destBytes":101308,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":2172,"convertSpendMs":164,"createdTime":"2020-09-07 01:51:34","host":"europe-60*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4","githubUser":"myreaderx1","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"373.5 KB","destSize":"98.9 KB","compressRate":"26.5%"},{"code":1,"isDone":false,"source":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/22898c0ad595498594d7a95405a43a3e~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":2068,"destHeight":1004,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx6/cdn38@2020_1/2020/09/06/17-51-35-840_8c90f2e918c1a1a9.webp","sourceBytes":99452,"destBytes":38554,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":2203,"convertSpendMs":63,"createdTime":"2020-09-07 01:51:34","host":"europe61*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4","githubUser":"myreaderx6","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"97.1 KB","destSize":"37.7 KB","compressRate":"38.8%"},{"code":1,"isDone":false,"source":"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e88fdfc57dc24bdc9fd7c4302b135fab~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":1280,"destHeight":620,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx19/cdn57@2020_6/2020/09/06/17-51-35-913_c4ab4aac46e04209.webp","sourceBytes":107730,"destBytes":19340,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":2275,"convertSpendMs":32,"createdTime":"2020-09-07 01:51:34","host":"europe65*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4","githubUser":"myreaderx19","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"105.2 KB","destSize":"18.9 KB","compressRate":"18%"},{"code":1,"isDone":false,"source":"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/087841fd2e8c4868bb284957c52de6e4~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":1934,"destHeight":1008,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx18/cdn83@2020_6/2020/09/06/17-51-35-897_ad8e8b320cfecddf.webp","sourceBytes":54996,"destBytes":25896,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":2334,"convertSpendMs":81,"createdTime":"2020-09-07 01:51:34","host":"europe-57*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4","githubUser":"myreaderx18","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"53.7 KB","destSize":"25.3 KB","compressRate":"47.1%"},{"code":1,"isDone":false,"source":"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/07e270e5227340c9ab4860f27fd1f4cf~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":2066,"destHeight":1042,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx4/cdn88@2020_6/2020/09/06/17-51-37-107_497abde151fab1e2.webp","sourceBytes":112448,"destBytes":48846,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":3460,"convertSpendMs":88,"createdTime":"2020-09-07 01:51:34","host":"us-035*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4","githubUser":"myreaderx4","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"109.8 KB","destSize":"47.7 KB","compressRate":"43.4%"},{"code":1,"isDone":false,"source":"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5c7eed2773264c5bab7641fabb85c24e~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":1926,"destHeight":446,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx13/cdn56@2020_6/2020/09/06/17-51-37-263_35ab3a3c8fa90618.webp","sourceBytes":53947,"destBytes":25164,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":3711,"convertSpendMs":34,"createdTime":"2020-09-07 01:51:34","host":"europe64*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4","githubUser":"myreaderx13","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"52.7 KB","destSize":"24.6 KB","compressRate":"46.6%"},{"code":1,"isDone":false,"source":"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9e0ae9888df549d8a1146e10162ccc7d~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":1498,"destHeight":1136,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx21/cdn44@2020_2/2020/09/06/17-51-40-946_a844f65ec7445526.webp","sourceBytes":100240,"destBytes":39466,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":7275,"convertSpendMs":116,"createdTime":"2020-09-07 01:51:34","host":"us-026*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4","githubUser":"myreaderx21","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"97.9 KB","destSize":"38.5 KB","compressRate":"39.4%"},{"code":1,"isDone":false,"source":"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9705ffaa01cc44719fd7f30fbe145e72~tplv-k3u1fbpfcp-zoom-1.image","sourceStatusCode":200,"destWidth":2824,"destHeight":860,"fixedGithubDest":"https://cdn.jsdelivr.net/gh/myreaderx31/cdn68@2020_6/2020/09/06/17-51-53-218_792fe83c4bdce106.webp","sourceBytes":140098,"destBytes":49070,"targetWebpQuality":75,"feedId":12740,"totalSpendMs":19531,"convertSpendMs":109,"createdTime":"2020-09-07 01:51:34","host":"us-031*","referer":"https://juejin.im/post/6869397549342523405","linkMd5ListStr":"c6d5d784bbde61a7e3d8f6fdd13495d4","githubUser":"myreaderx31","githubHttpCode":201,"extra22GetBytesInfo":"1、没有Referer字段","extra23historyStatusCode":[200],"sourceSize":"136.8 KB","destSize":"47.9 KB","compressRate":"35%"}],"successGithubMap":{"myreaderx15":1,"myreaderx6":1,"myreaderx4":1,"myreaderx21":1,"myreaderx3":1,"myreaderx22":1,"myreaderx11":1,"myreaderx2":1,"myreaderx12":1,"myreaderx13":1,"myreaderx1":1,"myreaderx31":1,"myreaderx18":1,"myreaderx19":1},"failGithubMap":{"myreaderx14":1}}